/* Generated by Frama-C */
#line 106  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/compiler_types.h"
typedef signed char __s8;
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/int-ll64.h"
typedef unsigned char __u8;
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/int-ll64.h"
typedef short __s16;
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/int-ll64.h"
typedef unsigned short __u16;
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/int-ll64.h"
typedef int __s32;
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/int-ll64.h"
typedef unsigned int __u32;
#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/int-ll64.h"
typedef long long __s64;
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/int-ll64.h"
typedef unsigned long long __u64;
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/int-ll64.h"
typedef __s8 s8;
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/int-ll64.h"
typedef __u8 u8;
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/int-ll64.h"
typedef __s16 s16;
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/int-ll64.h"
typedef __u16 u16;
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/int-ll64.h"
typedef __s32 s32;
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/int-ll64.h"
typedef __u32 u32;
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/int-ll64.h"
typedef __s64 s64;
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/int-ll64.h"
typedef __u64 u64;
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/uapi/asm/posix_types_64.h"
typedef long __kernel_long_t;
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef unsigned long __kernel_ulong_t;
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_pid_t;
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_uid32_t;
#line 50  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_gid32_t;
#line 51  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef __kernel_ulong_t __kernel_size_t;
#line 73  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_ssize_t;
#line 88  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef long long __kernel_loff_t;
#line 91  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef long long __kernel_time64_t;
#line 92  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_clock_t;
#line 93  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_timer_t;
#line 94  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_clockid_t;
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef __u16 __le16;
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/types.h"
typedef __u16 __be16;
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/types.h"
typedef __u32 __le32;
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/types.h"
typedef __u32 __be32;
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/types.h"
typedef __u64 __be64;
#line 37  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/types.h"
typedef __u32 __wsum;
#line 38  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/types.h"
typedef unsigned int __poll_t;
#line 53  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/types.h"
typedef u32 __kernel_dev_t;
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef __kernel_dev_t dev_t;
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef unsigned short umode_t;
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef __kernel_pid_t pid_t;
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef __kernel_clockid_t clockid_t;
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef _Bool bool;
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef __kernel_uid32_t uid_t;
#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef __kernel_gid32_t gid_t;
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef __kernel_loff_t loff_t;
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef __kernel_size_t size_t;
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef __kernel_ssize_t ssize_t;
#line 103  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef s32 int32_t;
#line 109  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef u32 uint32_t;
#line 115  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef u64 sector_t;
#line 131  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef u64 blkcnt_t;
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef u64 dma_addr_t;
#line 149  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef unsigned int gfp_t;
#line 154  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef unsigned int slab_flags_t;
#line 155  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef unsigned int fmode_t;
#line 156  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef u64 phys_addr_t;
#line 159  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef phys_addr_t resource_size_t;
#line 170  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
struct __anonstruct_atomic_t_6 {
   int counter ;
};
#line 170  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef struct __anonstruct_atomic_t_6 atomic_t;
#line 174  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
struct __anonstruct_atomic64_t_7 {
   s64 counter ;
};
#line 174  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef struct __anonstruct_atomic64_t_7 atomic64_t;
#line 181  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
struct list_head {
   struct list_head *next ;
   struct list_head *prev ;
};
#line 185 
struct hlist_node;
#line 185  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
struct hlist_head {
   struct hlist_node *first ;
};
#line 189  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
struct hlist_node {
   struct hlist_node *next ;
   struct hlist_node **pprev ;
};
#line 219  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
struct callback_head {
   struct callback_head *next ;
   void (*func)(struct callback_head *) ;
} __attribute__((__aligned__(8)));
#line 14  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_usb.i.aux"
struct task_struct;
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/export.h"
struct module;
#line 60  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/export.h"
struct kernel_symbol {
   int value_offset ;
   int name_offset ;
   int namespace_offset ;
};
#line 136  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/init.h"
typedef void (*ctor_fn_t)(void);
#line 139 
struct file_system_type;
#line 83  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/printk.h"
struct ctl_table;
#line 87  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jump_label.h"
struct jump_entry;
#line 87 
struct static_key_mod;
#line 87  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jump_label.h"
union __anonunion_8 {
   unsigned long type ;
   struct jump_entry *entries ;
   struct static_key_mod *next ;
};
#line 87  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jump_label.h"
struct static_key {
   atomic_t enabled ;
   union __anonunion_8 __anonCompField_static_key_4 ;
};
#line 122  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jump_label.h"
struct jump_entry {
   s32 code ;
   s32 target ;
   long key ;
};
#line 346  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jump_label.h"
struct static_key_true {
   struct static_key key ;
};
#line 350  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jump_label.h"
struct static_key_false {
   struct static_key key ;
};
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dynamic_debug.h"
union __anonunion_key_9 {
   struct static_key_true dd_key_true ;
   struct static_key_false dd_key_false ;
};
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dynamic_debug.h"
struct _ddebug {
   char *modname ;
   char *function ;
   char *filename ;
   char *format ;
   unsigned int lineno : 18 ;
   unsigned int flags : 8 ;
   union __anonunion_key_9 key ;
} __attribute__((__aligned__(8)));
#line 59 
struct device;
#line 65 
struct net_device;
#line 476  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/printk.h"
struct file_operations;
#line 87  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/div64.h"
struct completion;
#line 88 
struct pt_regs;
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/bug.h"
struct bug_entry {
   int bug_addr_disp ;
   int file_disp ;
   unsigned short line ;
   unsigned short flags ;
};
#line 188  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/math64.h"
typedef __s64 time64_t;
#line 7  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/time_types.h"
struct __kernel_timespec {
   __kernel_time64_t tv_sec ;
   long long tv_nsec ;
};
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/time64.h"
struct timespec64 {
   time64_t tv_sec ;
   long tv_nsec ;
};
#line 165 
struct old_timespec32;
#line 166 
struct pollfd;
#line 167 
enum timespec_type {
    TT_NONE = 0,
    TT_NATIVE = 1,
    TT_COMPAT = 2
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/restart_block.h"
struct __anonstruct_futex_27 {
   u32 *uaddr ;
   u32 val ;
   u32 flags ;
   u32 bitset ;
   u64 time ;
   u32 *uaddr2 ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/restart_block.h"
union __anonunion_29 {
   struct __kernel_timespec *rmtp ;
   struct old_timespec32 *compat_rmtp ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/restart_block.h"
struct __anonstruct_nanosleep_28 {
   clockid_t clockid ;
   enum timespec_type type ;
   union __anonunion_29 __anonCompField___anonstruct_nanosleep_28_5 ;
   u64 expires ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/restart_block.h"
struct __anonstruct_poll_30 {
   struct pollfd *ufds ;
   int nfds ;
   int has_timeout ;
   unsigned long tv_sec ;
   unsigned long tv_nsec ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/restart_block.h"
union __anonunion_26 {
   struct __anonstruct_futex_27 futex ;
   struct __anonstruct_nanosleep_28 nanosleep ;
   struct __anonstruct_poll_30 poll ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/restart_block.h"
struct restart_block {
   long (*fn)(struct restart_block *) ;
   union __anonunion_26 __anonCompField_restart_block_6 ;
};
#line 58  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/page_64.h"
struct page;
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/getorder.h"
struct mm_struct;
#line 49 
struct io_bitmap;
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/ptrace.h"
struct pt_regs {
   unsigned long r15 ;
   unsigned long r14 ;
   unsigned long r13 ;
   unsigned long r12 ;
   unsigned long bp ;
   unsigned long bx ;
   unsigned long r11 ;
   unsigned long r10 ;
   unsigned long r9 ;
   unsigned long r8 ;
   unsigned long ax ;
   unsigned long cx ;
   unsigned long dx ;
   unsigned long si ;
   unsigned long di ;
   unsigned long orig_ax ;
   unsigned long ip ;
   unsigned long cs ;
   unsigned long flags ;
   unsigned long sp ;
   unsigned long ss ;
};
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/desc_defs.h"
struct desc_struct {
   u16 limit0 ;
   u16 base0 ;
   u16 base1 : 8 ;
   u16 type : 4 ;
   u16 s : 1 ;
   u16 dpl : 2 ;
   u16 p : 1 ;
   u16 limit1 : 4 ;
   u16 avl : 1 ;
   u16 l : 1 ;
   u16 d : 1 ;
   u16 g : 1 ;
   u16 base2 : 8 ;
} __attribute__((__packed__));
#line 69  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/desc_defs.h"
struct idt_bits {
   u16 ist : 3 ;
   u16 zero : 5 ;
   u16 type : 5 ;
   u16 dpl : 2 ;
   u16 p : 1 ;
} __attribute__((__packed__));
#line 77  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/desc_defs.h"
struct gate_struct {
   u16 offset_low ;
   u16 segment ;
   struct idt_bits bits ;
   u16 offset_middle ;
   u32 offset_high ;
   u32 reserved ;
} __attribute__((__packed__));
#line 86  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/desc_defs.h"
typedef struct gate_struct gate_desc;
#line 105  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/desc_defs.h"
struct desc_ptr {
   unsigned short size ;
   unsigned long address ;
} __attribute__((__packed__));
#line 119  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/desc_defs.h"
typedef unsigned long pteval_t;
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pmdval_t;
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pudval_t;
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long p4dval_t;
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgdval_t;
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgprotval_t;
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_64_types.h"
struct __anonstruct_pte_t_53 {
   pteval_t pte ;
};
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_64_types.h"
typedef struct __anonstruct_pte_t_53 pte_t;
#line 265  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
struct pgprot {
   pgprotval_t pgprot ;
};
#line 267  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
typedef struct pgprot pgprot_t;
#line 266  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
struct __anonstruct_pgd_t_54 {
   pgdval_t pgd ;
};
#line 266  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
typedef struct __anonstruct_pgd_t_54 pgd_t;
#line 306  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
struct __anonstruct_p4d_t_55 {
   p4dval_t p4d ;
};
#line 306  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
typedef struct __anonstruct_p4d_t_55 p4d_t;
#line 319  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
struct __anonstruct_pud_t_56 {
   pudval_t pud ;
};
#line 319  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
typedef struct __anonstruct_pud_t_56 pud_t;
#line 345  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
struct __anonstruct_pmd_t_57 {
   pmdval_t pmd ;
};
#line 345  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
typedef struct __anonstruct_pmd_t_57 pmd_t;
#line 505  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
typedef struct page *pgtable_t;
#line 519 
struct file;
#line 530 
struct seq_file;
#line 360  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/nospec-branch.h"
struct thread_struct;
#line 362 
struct cpumask;
#line 363 
struct flush_tlb_info;
#line 364 
struct mmu_gather;
#line 365 
struct vm_area_struct;
#line 64  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/paravirt_types.h"
struct paravirt_callee_save {
   void *func ;
};
#line 82  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/paravirt_types.h"
struct pv_init_ops {
   unsigned int (*patch)(u8 , void *, unsigned long , unsigned int ) ;
};
#line 96  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/paravirt_types.h"
struct pv_lazy_ops {
   void (*enter)(void) ;
   void (*leave)(void) ;
   void (*flush)(void) ;
};
#line 104  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/paravirt_types.h"
struct pv_time_ops {
   unsigned long long (*sched_clock)(void) ;
   unsigned long long (*steal_clock)(int ) ;
};
#line 109  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/paravirt_types.h"
struct pv_cpu_ops {
   void (*io_delay)(void) ;
   unsigned long (*get_debugreg)(int ) ;
   void (*set_debugreg)(int , unsigned long ) ;
   unsigned long (*read_cr0)(void) ;
   void (*write_cr0)(unsigned long ) ;
   void (*write_cr4)(unsigned long ) ;
   void (*load_tr_desc)(void) ;
   void (*load_gdt)(struct desc_ptr *) ;
   void (*load_idt)(struct desc_ptr *) ;
   void (*set_ldt)(void *, unsigned int ) ;
   unsigned long (*store_tr)(void) ;
   void (*load_tls)(struct thread_struct *, unsigned int ) ;
   void (*load_gs_index)(unsigned int ) ;
   void (*write_ldt_entry)(struct desc_struct *, int , void *) ;
   void (*write_gdt_entry)(struct desc_struct *, int , void *, int ) ;
   void (*write_idt_entry)(gate_desc *, int , gate_desc *) ;
   void (*alloc_ldt)(struct desc_struct *, unsigned int ) ;
   void (*free_ldt)(struct desc_struct *, unsigned int ) ;
   void (*load_sp0)(unsigned long ) ;
   void (*wbinvd)(void) ;
   void (*cpuid)(unsigned int *, unsigned int *, unsigned int *, unsigned int *) ;
   u64 (*read_msr)(unsigned int ) ;
   void (*write_msr)(unsigned int , unsigned int , unsigned int ) ;
   u64 (*read_msr_safe)(unsigned int , int *) ;
   int (*write_msr_safe)(unsigned int , unsigned int , unsigned int ) ;
   u64 (*read_pmc)(int ) ;
   void (*usergs_sysret64)(void) ;
   void (*iret)(void) ;
   void (*swapgs)(void) ;
   void (*start_context_switch)(struct task_struct *) ;
   void (*end_context_switch)(struct task_struct *) ;
};
#line 181  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/paravirt_types.h"
struct pv_irq_ops {
   struct paravirt_callee_save save_fl ;
   struct paravirt_callee_save restore_fl ;
   struct paravirt_callee_save irq_disable ;
   struct paravirt_callee_save irq_enable ;
   void (*safe_halt)(void) ;
   void (*halt)(void) ;
};
#line 202  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/paravirt_types.h"
struct pv_mmu_ops {
   void (*flush_tlb_user)(void) ;
   void (*flush_tlb_kernel)(void) ;
   void (*flush_tlb_one_user)(unsigned long ) ;
   void (*flush_tlb_others)(struct cpumask *, struct flush_tlb_info *) ;
   void (*tlb_remove_table)(struct mmu_gather *, void *) ;
   void (*exit_mmap)(struct mm_struct *) ;
   struct paravirt_callee_save read_cr2 ;
   void (*write_cr2)(unsigned long ) ;
   unsigned long (*read_cr3)(void) ;
   void (*write_cr3)(unsigned long ) ;
   void (*activate_mm)(struct mm_struct *, struct mm_struct *) ;
   void (*dup_mmap)(struct mm_struct *, struct mm_struct *) ;
   int (*pgd_alloc)(struct mm_struct *) ;
   void (*pgd_free)(struct mm_struct *, pgd_t *) ;
   void (*alloc_pte)(struct mm_struct *, unsigned long ) ;
   void (*alloc_pmd)(struct mm_struct *, unsigned long ) ;
   void (*alloc_pud)(struct mm_struct *, unsigned long ) ;
   void (*alloc_p4d)(struct mm_struct *, unsigned long ) ;
   void (*release_pte)(unsigned long ) ;
   void (*release_pmd)(unsigned long ) ;
   void (*release_pud)(unsigned long ) ;
   void (*release_p4d)(unsigned long ) ;
   void (*set_pte)(pte_t *, pte_t ) ;
   void (*set_pte_at)(struct mm_struct *, unsigned long , pte_t *, pte_t ) ;
   void (*set_pmd)(pmd_t *, pmd_t ) ;
   pte_t (*ptep_modify_prot_start)(struct vm_area_struct *, unsigned long , pte_t *) ;
   void (*ptep_modify_prot_commit)(struct vm_area_struct *, unsigned long , pte_t *, pte_t ) ;
   struct paravirt_callee_save pte_val ;
   struct paravirt_callee_save make_pte ;
   struct paravirt_callee_save pgd_val ;
   struct paravirt_callee_save make_pgd ;
   void (*set_pud)(pud_t *, pud_t ) ;
   struct paravirt_callee_save pmd_val ;
   struct paravirt_callee_save make_pmd ;
   struct paravirt_callee_save pud_val ;
   struct paravirt_callee_save make_pud ;
   void (*set_p4d)(p4d_t *, p4d_t ) ;
   struct paravirt_callee_save p4d_val ;
   struct paravirt_callee_save make_p4d ;
   void (*set_pgd)(pgd_t *, pgd_t ) ;
   struct pv_lazy_ops lazy_mode ;
   void (*set_fixmap)(unsigned int , phys_addr_t , pgprot_t ) ;
};
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qspinlock_types.h"
struct __anonstruct_59 {
   u8 locked ;
   u8 pending ;
};
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qspinlock_types.h"
struct __anonstruct_60 {
   u16 locked_pending ;
   u16 tail ;
};
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qspinlock_types.h"
union __anonunion_58 {
   atomic_t val ;
   struct __anonstruct_59 __anonCompField___anonunion_58_7 ;
   struct __anonstruct_60 __anonCompField___anonunion_58_8 ;
};
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qspinlock_types.h"
struct qspinlock {
   union __anonunion_58 __anonCompField_qspinlock_9 ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qspinlock_types.h"
typedef struct qspinlock arch_spinlock_t;
#line 13  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qrwlock_types.h"
struct __anonstruct_62 {
   u8 wlocked ;
   u8 __lstate[3U] ;
};
#line 13  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qrwlock_types.h"
union __anonunion_61 {
   atomic_t cnts ;
   struct __anonstruct_62 __anonCompField___anonunion_61_10 ;
};
#line 13  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qrwlock_types.h"
struct qrwlock {
   union __anonunion_61 __anonCompField_qrwlock_11 ;
   arch_spinlock_t wait_lock ;
};
#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qrwlock_types.h"
typedef struct qrwlock arch_rwlock_t;
#line 311  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/paravirt_types.h"
struct pv_lock_ops {
   void (*queued_spin_lock_slowpath)(struct qspinlock *, u32 ) ;
   struct paravirt_callee_save queued_spin_unlock ;
   void (*wait)(u8 *, u8 ) ;
   void (*kick)(int ) ;
   struct paravirt_callee_save vcpu_is_preempted ;
};
#line 324  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/paravirt_types.h"
struct paravirt_patch_template {
   struct pv_init_ops init ;
   struct pv_time_ops time ;
   struct pv_cpu_ops cpu ;
   struct pv_irq_ops irq ;
   struct pv_mmu_ops mmu ;
   struct pv_lock_ops lock ;
};
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/math_emu.h"
struct math_emu_info {
   long ___orig_eip ;
   struct pt_regs *regs ;
};
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/atomic.h"
union __anonunion___u_67 {
   int __val ;
   char __c[1U] ;
};
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/atomic.h"
union __anonunion___u_69 {
   int __val ;
   char __c[1U] ;
};
#line 2288  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/atomic-fallback.h"
typedef atomic64_t atomic_long_t;
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cpumask.h"
struct cpumask {
   unsigned long bits[128U] ;
};
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cpumask.h"
typedef struct cpumask cpumask_t;
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/tracepoint-defs.h"
struct tracepoint_func {
   void *func ;
   void *data ;
   int prio ;
};
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/tracepoint-defs.h"
struct tracepoint {
   char *name ;
   struct static_key key ;
   int (*regfunc)(void) ;
   void (*unregfunc)(void) ;
   struct tracepoint_func *funcs ;
};
#line 37  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/tracepoint-defs.h"
typedef int tracepoint_ptr_t;
#line 44  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/tracepoint-defs.h"
struct bpf_raw_event_map {
   struct tracepoint *tp ;
   void *bpf_func ;
   u32 num_args ;
   u32 writable_size ;
} __attribute__((__aligned__(32)));
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
struct fregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u32 status ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_90 {
   u64 rip ;
   u64 rdp ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_91 {
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
union __anonunion_89 {
   struct __anonstruct_90 __anonCompField___anonunion_89_17 ;
   struct __anonstruct_91 __anonCompField___anonunion_89_18 ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
union __anonunion_92 {
   u32 padding1[12U] ;
   u32 sw_reserved[12U] ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
struct fxregs_state {
   u16 cwd ;
   u16 swd ;
   u16 twd ;
   u16 fop ;
   union __anonunion_89 __anonCompField_fxregs_state_19 ;
   u32 mxcsr ;
   u32 mxcsr_mask ;
   u32 st_space[32U] ;
   u32 xmm_space[64U] ;
   u32 padding[12U] ;
   union __anonunion_92 __anonCompField_fxregs_state_20 ;
} __attribute__((__aligned__(16)));
#line 79  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
struct swregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u8 ftop ;
   u8 changed ;
   u8 lookahead ;
   u8 no_update ;
   u8 rm ;
   u8 alimit ;
   struct math_emu_info *info ;
   u32 entry_eip ;
};
#line 232  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
struct xstate_header {
   u64 xfeatures ;
   u64 xcomp_bv ;
   u64 reserved[6U] ;
} __attribute__((__packed__));
#line 253  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
struct xregs_state {
   struct fxregs_state i387 ;
   struct xstate_header header ;
   u8 extended_state_area[0U] ;
} __attribute__((__packed__, __aligned__(64)));
#line 268  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
union fpregs_state {
   struct fregs_state fsave ;
   struct fxregs_state fxsave ;
   struct swregs_state soft ;
   struct xregs_state xsave ;
   u8 __padding[4096U] ;
};
#line 281  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
struct fpu {
   unsigned int last_cpu ;
   unsigned long avx512_timestamp ;
   union fpregs_state state ;
};
#line 73  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/orc_types.h"
struct orc_entry {
   s16 sp_offset ;
   s16 bp_offset ;
   unsigned int sp_reg : 4 ;
   unsigned int bp_reg : 4 ;
   unsigned int type : 2 ;
   unsigned int end : 1 ;
} __attribute__((__packed__));
#line 180  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/processor.h"
struct seq_operations;
#line 478 
struct perf_event;
#line 479  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/processor.h"
struct __anonstruct_mm_segment_t_95 {
   unsigned long seg ;
};
#line 479  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/processor.h"
typedef struct __anonstruct_mm_segment_t_95 mm_segment_t;
#line 485  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/processor.h"
struct thread_struct {
   struct desc_struct tls_array[3U] ;
   unsigned long sp ;
   unsigned short es ;
   unsigned short ds ;
   unsigned short fsindex ;
   unsigned short gsindex ;
   unsigned long fsbase ;
   unsigned long gsbase ;
   struct perf_event *ptrace_bps[4U] ;
   unsigned long debugreg6 ;
   unsigned long ptrace_dr7 ;
   unsigned long cr2 ;
   unsigned long trap_nr ;
   unsigned long error_code ;
   struct io_bitmap *io_bitmap ;
   unsigned long iopl_emul ;
   mm_segment_t addr_limit ;
   unsigned int sig_on_uaccess_err : 1 ;
   unsigned int uaccess_err : 1 ;
   struct fpu fpu ;
};
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/thread_info.h"
struct thread_info {
   unsigned long flags ;
   u32 status ;
};
#line 35  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bottom_half.h"
struct lockdep_map;
#line 55  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockdep.h"
struct lockdep_subclass_key {
   char __one_byte ;
} __attribute__((__packed__));
#line 60  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockdep.h"
union __anonunion_96 {
   struct hlist_node hash_entry ;
   struct lockdep_subclass_key subkeys[8U] ;
};
#line 60  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockdep.h"
struct lock_class_key {
   union __anonunion_96 __anonCompField_lock_class_key_23 ;
};
#line 68 
struct lock_trace;
#line 77  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockdep.h"
struct lock_class {
   struct hlist_node hash_entry ;
   struct list_head lock_entry ;
   struct list_head locks_after ;
   struct list_head locks_before ;
   struct lockdep_subclass_key *key ;
   unsigned int subclass ;
   unsigned int dep_gen_id ;
   unsigned long usage_mask ;
   struct lock_trace *usage_traces[9U] ;
   int name_version ;
   char *name ;
   unsigned long contention_point[4U] ;
   unsigned long contending_point[4U] ;
};
#line 157  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockdep.h"
struct lockdep_map {
   struct lock_class_key *key ;
   struct lock_class *class_cache[2U] ;
   char *name ;
   int cpu ;
   unsigned long ip ;
};
#line 226  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockdep.h"
struct held_lock {
   u64 prev_chain_key ;
   unsigned long acquire_ip ;
   struct lockdep_map *instance ;
   struct lockdep_map *nest_lock ;
   u64 waittime_stamp ;
   u64 holdtime_stamp ;
   unsigned int class_idx : 13 ;
   unsigned int irq_context : 2 ;
   unsigned int trylock : 1 ;
   unsigned int read : 2 ;
   unsigned int check : 1 ;
   unsigned int hardirqs_off : 1 ;
   unsigned int references : 12 ;
   unsigned int pin_count ;
};
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_types.h"
struct raw_spinlock {
   arch_spinlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_types.h"
typedef struct raw_spinlock raw_spinlock_t;
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_types.h"
struct __anonstruct_98 {
   u8 __padding[24U] ;
   struct lockdep_map dep_map ;
};
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_types.h"
union __anonunion_97 {
   struct raw_spinlock rlock ;
   struct __anonstruct_98 __anonCompField___anonunion_97_24 ;
};
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_types.h"
struct spinlock {
   union __anonunion_97 __anonCompField_spinlock_25 ;
};
#line 73  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_types.h"
typedef struct spinlock spinlock_t;
#line 74  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_types.h"
struct __anonstruct_rwlock_t_99 {
   arch_rwlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};
#line 74  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_types.h"
typedef struct __anonstruct_rwlock_t_99 rwlock_t;
#line 57  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
struct mutex;
#line 31  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/device.h"
struct firmware;
#line 27  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
struct kmem_cache;
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/wait.h"
struct wait_queue_head {
   spinlock_t lock ;
   struct list_head head ;
};
#line 38  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/wait.h"
typedef struct wait_queue_head wait_queue_head_t;
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/seqlock.h"
struct seqcount {
   unsigned int sequence ;
   struct lockdep_map dep_map ;
};
#line 53  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/seqlock.h"
typedef struct seqcount seqcount_t;
#line 403  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/seqlock.h"
struct __anonstruct_seqlock_t_112 {
   struct seqcount seqcount ;
   spinlock_t lock ;
};
#line 403  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/seqlock.h"
typedef struct __anonstruct_seqlock_t_112 seqlock_t;
#line 601  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/seqlock.h"
struct __anonstruct_nodemask_t_113 {
   unsigned long bits[16U] ;
};
#line 601  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/seqlock.h"
typedef struct __anonstruct_nodemask_t_113 nodemask_t;
#line 7  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/tlbbatch.h"
struct arch_tlbflush_unmap_batch {
   struct cpumask cpumask ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types_task.h"
struct vmacache {
   u64 seqnum ;
   struct vm_area_struct *vmas[4U] ;
};
#line 54  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types_task.h"
struct task_rss_stat {
   int events ;
   int count[4U] ;
};
#line 60  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types_task.h"
struct mm_rss_stat {
   atomic_long_t count[4U] ;
};
#line 64  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types_task.h"
struct page_frag {
   struct page *page ;
   __u32 offset ;
   __u32 size ;
};
#line 76  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types_task.h"
struct tlbflush_unmap_batch {
   struct arch_tlbflush_unmap_batch arch ;
   bool flush_required ;
   bool writable ;
};
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rbtree.h"
struct rb_node {
   unsigned long __rb_parent_color ;
   struct rb_node *rb_right ;
   struct rb_node *rb_left ;
} __attribute__((__aligned__(8)));
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rbtree.h"
struct rb_root {
   struct rb_node *rb_node ;
};
#line 125  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rbtree.h"
struct rb_root_cached {
   struct rb_root rb_root ;
   struct rb_node *rb_leftmost ;
};
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/osq_lock.h"
struct optimistic_spin_queue {
   atomic_t tail ;
};
#line 35  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rwsem.h"
struct rw_semaphore {
   atomic_long_t count ;
   atomic_long_t owner ;
   struct optimistic_spin_queue osq ;
   raw_spinlock_t wait_lock ;
   struct list_head wait_list ;
   void *magic ;
   struct lockdep_map dep_map ;
};
#line 26  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/completion.h"
struct completion {
   unsigned int done ;
   wait_queue_head_t wait ;
};
#line 120 
struct inode;
#line 121 
struct notifier_block;
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uprobes.h"
struct ww_acquire_ctx;
#line 53  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mutex.h"
struct mutex {
   atomic_long_t owner ;
   spinlock_t wait_lock ;
   struct optimistic_spin_queue osq ;
   struct list_head wait_list ;
   void *magic ;
   struct lockdep_map dep_map ;
};
#line 72  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mutex.h"
struct mutex_waiter {
   struct list_head list ;
   struct task_struct *task ;
   struct ww_acquire_ctx *ww_ctx ;
   void *magic ;
};
#line 161  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timex.h"
typedef s32 old_time32_t;
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/time32.h"
struct old_timespec32 {
   old_time32_t tv_sec ;
   s32 tv_nsec ;
};
#line 461  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jiffies.h"
typedef s64 ktime_t;
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
struct timer_list {
   struct hlist_node entry ;
   unsigned long expires ;
   void (*function)(struct timer_list *) ;
   u32 flags ;
   struct lockdep_map lockdep_map ;
};
#line 196 
struct hrtimer;
#line 197 
enum hrtimer_restart;
#line 221 
struct workqueue_struct;
#line 222 
struct work_struct;
#line 102  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/workqueue.h"
struct work_struct {
   atomic_long_t data ;
   struct list_head entry ;
   void (*func)(struct work_struct *) ;
   struct lockdep_map lockdep_map ;
};
#line 115  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/workqueue.h"
struct delayed_work {
   struct work_struct work ;
   struct timer_list timer ;
   struct workqueue_struct *wq ;
   int cpu ;
};
#line 124  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/workqueue.h"
struct rcu_work {
   struct work_struct work ;
   struct callback_head rcu ;
   struct workqueue_struct *wq ;
};
#line 67  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rcu_segcblist.h"
struct rcu_segcblist {
   struct callback_head *head ;
   struct callback_head **tails[4U] ;
   unsigned long gp_seq[4U] ;
   atomic_long_t len ;
   long len_lazy ;
   u8 enabled ;
   u8 offloaded ;
};
#line 80 
struct srcu_struct;
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/srcu.h"
struct srcu_node;
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/srcutree.h"
struct srcu_data {
   unsigned long srcu_lock_count[2U] ;
   unsigned long srcu_unlock_count[2U] ;
   spinlock_t lock ;
   struct rcu_segcblist srcu_cblist ;
   unsigned long srcu_gp_seq_needed ;
   unsigned long srcu_gp_seq_needed_exp ;
   bool srcu_cblist_invoking ;
   struct timer_list delay_work ;
   struct work_struct work ;
   struct callback_head srcu_barrier_head ;
   struct srcu_node *mynode ;
   unsigned long grpmask ;
   int cpu ;
   struct srcu_struct *ssp ;
};
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/srcutree.h"
struct srcu_node {
   spinlock_t lock ;
   unsigned long srcu_have_cbs[4U] ;
   unsigned long srcu_data_have_cbs[4U] ;
   unsigned long srcu_gp_seq_needed_exp ;
   struct srcu_node *srcu_parent ;
   int grplo ;
   int grphi ;
};
#line 64  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/srcutree.h"
struct srcu_struct {
   struct srcu_node node[521U] ;
   struct srcu_node *level[4U] ;
   struct mutex srcu_cb_mutex ;
   spinlock_t lock ;
   struct mutex srcu_gp_mutex ;
   unsigned int srcu_idx ;
   unsigned long srcu_gp_seq ;
   unsigned long srcu_gp_seq_needed ;
   unsigned long srcu_gp_seq_needed_exp ;
   unsigned long srcu_last_gp_end ;
   struct srcu_data *sda ;
   unsigned long srcu_barrier_seq ;
   struct mutex srcu_barrier_mutex ;
   struct completion srcu_barrier_completion ;
   atomic_t srcu_barrier_cpu_cnt ;
   struct delayed_work work ;
   struct lockdep_map dep_map ;
};
#line 54  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/notifier.h"
struct notifier_block {
   int (*notifier_call)(struct notifier_block *, unsigned long , void *) ;
   struct notifier_block *next ;
   int priority ;
};
#line 70  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/notifier.h"
struct raw_notifier_head {
   struct notifier_block *head ;
};
#line 50  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/uprobes.h"
struct arch_uprobe_task {
   unsigned long saved_scratch_register ;
   unsigned int saved_trap_nr ;
   unsigned int saved_tf ;
};
#line 57 
enum uprobe_task_state {
    UTASK_RUNNING = 0,
    UTASK_SSTEP = 1,
    UTASK_SSTEP_ACK = 2,
    UTASK_SSTEP_TRAPPED = 3
};
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uprobes.h"
struct __anonstruct_126 {
   struct arch_uprobe_task autask ;
   unsigned long vaddr ;
};
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uprobes.h"
struct __anonstruct_127 {
   struct callback_head dup_xol_work ;
   unsigned long dup_xol_addr ;
};
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uprobes.h"
union __anonunion_125 {
   struct __anonstruct_126 __anonCompField___anonunion_125_28 ;
   struct __anonstruct_127 __anonCompField___anonunion_125_29 ;
};
#line 61 
struct uprobe;
#line 61 
struct return_instance;
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uprobes.h"
struct uprobe_task {
   enum uprobe_task_state state ;
   union __anonunion_125 __anonCompField_uprobe_task_30 ;
   struct uprobe *active_uprobe ;
   unsigned long xol_vaddr ;
   struct return_instance *return_instances ;
   unsigned int depth ;
};
#line 83  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uprobes.h"
struct return_instance {
   struct uprobe *uprobe ;
   unsigned long func ;
   unsigned long stack ;
   unsigned long orig_ret_vaddr ;
   bool chained ;
   struct return_instance *next ;
};
#line 98 
struct xol_area;
#line 101  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uprobes.h"
struct uprobes_state {
   struct xol_area *xol_area ;
};
#line 140 
struct ldt_struct;
#line 140 
struct vdso_image;
#line 140  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uprobes.h"
struct __anonstruct_mm_context_t_128 {
   u64 ctx_id ;
   atomic64_t tlb_gen ;
   struct rw_semaphore ldt_usr_sem ;
   struct ldt_struct *ldt ;
   unsigned short ia32_compat ;
   struct mutex lock ;
   void *vdso ;
   struct vdso_image *vdso_image ;
   atomic_t perf_rdpmc_allowed ;
   u16 pkey_allocation_map ;
   s16 execute_only_pkey ;
   void *bd_addr ;
};
#line 140  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uprobes.h"
typedef struct __anonstruct_mm_context_t_128 mm_context_t;
#line 66  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
struct address_space;
#line 67 
struct mem_cgroup;
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
struct __anonstruct_130 {
   struct list_head lru ;
   struct address_space *mapping ;
   unsigned long index ;
   unsigned long private ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
struct __anonstruct_131 {
   dma_addr_t dma_addr ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
struct __anonstruct_134 {
   struct page *next ;
   int pages ;
   int pobjects ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
union __anonunion_133 {
   struct list_head slab_list ;
   struct __anonstruct_134 __anonCompField___anonunion_133_33 ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
struct __anonstruct_136 {
   unsigned int inuse : 16 ;
   unsigned int objects : 15 ;
   unsigned int frozen : 1 ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
union __anonunion_135 {
   void *s_mem ;
   unsigned long counters ;
   struct __anonstruct_136 __anonCompField___anonunion_135_35 ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
struct __anonstruct_132 {
   union __anonunion_133 __anonCompField___anonstruct_132_34 ;
   struct kmem_cache *slab_cache ;
   void *freelist ;
   union __anonunion_135 __anonCompField___anonstruct_132_36 ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
struct __anonstruct_137 {
   unsigned long compound_head ;
   unsigned char compound_dtor ;
   unsigned char compound_order ;
   atomic_t compound_mapcount ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
struct __anonstruct_138 {
   unsigned long _compound_pad_1 ;
   unsigned long _compound_pad_2 ;
   struct list_head deferred_list ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
union __anonunion_140 {
   struct mm_struct *pt_mm ;
   atomic_t pt_frag_refcount ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
struct __anonstruct_139 {
   unsigned long _pt_pad_1 ;
   pgtable_t pmd_huge_pte ;
   unsigned long _pt_pad_2 ;
   union __anonunion_140 __anonCompField___anonstruct_139_40 ;
   spinlock_t *ptl ;
};
#line 68 
struct dev_pagemap;
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
struct __anonstruct_141 {
   struct dev_pagemap *pgmap ;
   void *zone_device_data ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
union __anonunion_129 {
   struct __anonstruct_130 __anonCompField___anonunion_129_31 ;
   struct __anonstruct_131 __anonCompField___anonunion_129_32 ;
   struct __anonstruct_132 __anonCompField___anonunion_129_37 ;
   struct __anonstruct_137 __anonCompField___anonunion_129_38 ;
   struct __anonstruct_138 __anonCompField___anonunion_129_39 ;
   struct __anonstruct_139 __anonCompField___anonunion_129_41 ;
   struct __anonstruct_141 __anonCompField___anonunion_129_42 ;
   struct callback_head callback_head ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
union __anonunion_142 {
   atomic_t _mapcount ;
   unsigned int page_type ;
   unsigned int active ;
   int units ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
struct page {
   unsigned long flags ;
   union __anonunion_129 __anonCompField_page_43 ;
   union __anonunion_142 __anonCompField_page_44 ;
   atomic_t _refcount ;
   struct mem_cgroup *mem_cgroup ;
} __attribute__((__aligned__(16)));
#line 278  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct userfaultfd_ctx;
#line 278  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct vm_userfaultfd_ctx {
   struct userfaultfd_ctx *ctx ;
};
#line 292  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct __anonstruct_shared_143 {
   struct rb_node rb ;
   unsigned long rb_subtree_last ;
};
#line 292 
struct anon_vma;
#line 292 
struct vm_operations_struct;
#line 292 
struct mempolicy;
#line 292  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct vm_area_struct {
   unsigned long vm_start ;
   unsigned long vm_end ;
   struct vm_area_struct *vm_next ;
   struct vm_area_struct *vm_prev ;
   struct rb_node vm_rb ;
   unsigned long rb_subtree_gap ;
   struct mm_struct *vm_mm ;
   pgprot_t vm_page_prot ;
   unsigned long vm_flags ;
   struct __anonstruct_shared_143 shared ;
   struct list_head anon_vma_chain ;
   struct anon_vma *anon_vma ;
   struct vm_operations_struct *vm_ops ;
   unsigned long vm_pgoff ;
   struct file *vm_file ;
   void *vm_private_data ;
   atomic_long_t swap_readahead_info ;
   struct mempolicy *vm_policy ;
   struct vm_userfaultfd_ctx vm_userfaultfd_ctx ;
} __attribute__((__designated_init__));
#line 358  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct core_thread {
   struct task_struct *task ;
   struct core_thread *next ;
};
#line 363  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct core_state {
   atomic_t nr_threads ;
   struct core_thread dumper ;
   struct completion startup ;
};
#line 368 
struct kioctx_table;
#line 370 
struct linux_binfmt;
#line 370 
struct user_namespace;
#line 370 
struct mmu_notifier_mm;
#line 370  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct __anonstruct_144 {
   struct vm_area_struct *mmap ;
   struct rb_root mm_rb ;
   u64 vmacache_seqnum ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   unsigned long mmap_base ;
   unsigned long mmap_legacy_base ;
   unsigned long mmap_compat_base ;
   unsigned long mmap_compat_legacy_base ;
   unsigned long task_size ;
   unsigned long highest_vm_end ;
   pgd_t *pgd ;
   atomic_t membarrier_state ;
   atomic_t mm_users ;
   atomic_t mm_count ;
   atomic_long_t pgtables_bytes ;
   int map_count ;
   spinlock_t page_table_lock ;
   struct rw_semaphore mmap_sem ;
   struct list_head mmlist ;
   unsigned long hiwater_rss ;
   unsigned long hiwater_vm ;
   unsigned long total_vm ;
   unsigned long locked_vm ;
   atomic64_t pinned_vm ;
   unsigned long data_vm ;
   unsigned long exec_vm ;
   unsigned long stack_vm ;
   unsigned long def_flags ;
   spinlock_t arg_lock ;
   unsigned long start_code ;
   unsigned long end_code ;
   unsigned long start_data ;
   unsigned long end_data ;
   unsigned long start_brk ;
   unsigned long brk ;
   unsigned long start_stack ;
   unsigned long arg_start ;
   unsigned long arg_end ;
   unsigned long env_start ;
   unsigned long env_end ;
   unsigned long saved_auxv[46U] ;
   struct mm_rss_stat rss_stat ;
   struct linux_binfmt *binfmt ;
   mm_context_t context ;
   unsigned long flags ;
   struct core_state *core_state ;
   spinlock_t ioctx_lock ;
   struct kioctx_table *ioctx_table ;
   struct task_struct *owner ;
   struct user_namespace *user_ns ;
   struct file *exe_file ;
   struct mmu_notifier_mm *mmu_notifier_mm ;
   unsigned long numa_next_scan ;
   unsigned long numa_scan_offset ;
   int numa_scan_seq ;
   atomic_t tlb_flush_pending ;
   bool tlb_flush_batched ;
   struct uprobes_state uprobes_state ;
   atomic_long_t hugetlb_usage ;
   struct work_struct async_put_work ;
} __attribute__((__designated_init__));
#line 370  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct mm_struct {
   struct __anonstruct_144 __anonCompField_mm_struct_45 ;
   unsigned long cpu_bitmap[] ;
};
#line 642 
struct vm_fault;
#line 643  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
typedef unsigned int vm_fault_t;
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct free_area {
   struct list_head free_list[6U] ;
   unsigned long nr_free ;
};
#line 158 
struct pglist_data;
#line 168  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct zone_padding {
   char x[0U] ;
} __attribute__((__aligned__(4096)));
#line 285  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct zone_reclaim_stat {
   unsigned long recent_rotated[2U] ;
   unsigned long recent_scanned[2U] ;
};
#line 304  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct lruvec {
   struct list_head lists[5U] ;
   struct zone_reclaim_stat reclaim_stat ;
   atomic_long_t inactive_age ;
   unsigned long refaults ;
   unsigned long flags ;
   struct pglist_data *pgdat ;
};
#line 316  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
typedef unsigned int isolate_mode_t;
#line 340  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct per_cpu_pages {
   int count ;
   int high ;
   int batch ;
   struct list_head lists[3U] ;
};
#line 349  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct per_cpu_pageset {
   struct per_cpu_pages pcp ;
   s8 expire ;
   u16 vm_numa_stat_diff[6U] ;
   s8 stat_threshold ;
   s8 vm_stat_diff[13U] ;
};
#line 361  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct per_cpu_nodestat {
   s8 stat_threshold ;
   s8 vm_node_stat_diff[32U] ;
};
#line 365 
enum zone_type {
    ZONE_DMA = 0,
    ZONE_DMA32 = 1,
    ZONE_NORMAL = 2,
    ZONE_MOVABLE = 3,
    ZONE_DEVICE = 4,
    __MAX_NR_ZONES = 5
};
#line 432  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct zone {
   unsigned long _watermark[3U] ;
   unsigned long watermark_boost ;
   unsigned long nr_reserved_highatomic ;
   long lowmem_reserve[5U] ;
   int node ;
   struct pglist_data *zone_pgdat ;
   struct per_cpu_pageset *pageset ;
   unsigned long zone_start_pfn ;
   atomic_long_t managed_pages ;
   unsigned long spanned_pages ;
   unsigned long present_pages ;
   char *name ;
   unsigned long nr_isolate_pageblock ;
   seqlock_t span_seqlock ;
   int initialized ;
   struct zone_padding _pad1_ ;
   struct free_area free_area[11U] ;
   unsigned long flags ;
   spinlock_t lock ;
   struct zone_padding _pad2_ ;
   unsigned long percpu_drift_mark ;
   unsigned long compact_cached_free_pfn ;
   unsigned long compact_cached_migrate_pfn[2U] ;
   unsigned long compact_init_migrate_pfn ;
   unsigned long compact_init_free_pfn ;
   unsigned int compact_considered ;
   unsigned int compact_defer_shift ;
   int compact_order_failed ;
   bool compact_blockskip_flush ;
   bool contiguous ;
   struct zone_padding _pad3_ ;
   atomic_long_t vm_stat[13U] ;
   atomic_long_t vm_numa_stat[6U] ;
} __attribute__((__aligned__(4096)));
#line 665  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct zoneref {
   struct zone *zone ;
   int zone_idx ;
};
#line 684  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct zonelist {
   struct zoneref _zonerefs[5121U] ;
};
#line 694  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct deferred_split {
   spinlock_t split_queue_lock ;
   struct list_head split_queue ;
   unsigned long split_queue_len ;
};
#line 710  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct pglist_data {
   struct zone node_zones[5U] ;
   struct zonelist node_zonelists[2U] ;
   int nr_zones ;
   spinlock_t node_size_lock ;
   unsigned long node_start_pfn ;
   unsigned long node_present_pages ;
   unsigned long node_spanned_pages ;
   int node_id ;
   wait_queue_head_t kswapd_wait ;
   wait_queue_head_t pfmemalloc_wait ;
   struct task_struct *kswapd ;
   int kswapd_order ;
   enum zone_type kswapd_classzone_idx ;
   int kswapd_failures ;
   int kcompactd_max_order ;
   enum zone_type kcompactd_classzone_idx ;
   wait_queue_head_t kcompactd_wait ;
   struct task_struct *kcompactd ;
   unsigned long totalreserve_pages ;
   unsigned long min_unmapped_pages ;
   unsigned long min_slab_pages ;
   struct zone_padding _pad1_ ;
   spinlock_t lru_lock ;
   unsigned long first_deferred_pfn ;
   struct deferred_split deferred_split_queue ;
   struct lruvec __lruvec ;
   unsigned long flags ;
   struct zone_padding _pad2_ ;
   struct per_cpu_nodestat *per_cpu_nodestats ;
   atomic_long_t vm_stat[32U] ;
};
#line 824 
struct resource;
#line 825 
struct vmem_altmap;
#line 440  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/io.h"
struct fwnode_operations;
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fwnode.h"
struct fwnode_handle {
   struct fwnode_handle *secondary ;
   struct fwnode_operations *ops ;
   struct device *dev ;
};
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fwnode.h"
struct fwnode_endpoint {
   unsigned int port ;
   unsigned int id ;
   struct fwnode_handle *local_fwnode ;
};
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fwnode.h"
struct fwnode_reference_args {
   struct fwnode_handle *fwnode ;
   unsigned int nargs ;
   u64 args[8U] ;
};
#line 110  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fwnode.h"
struct fwnode_operations {
   struct fwnode_handle *(*get)(struct fwnode_handle *) ;
   void (*put)(struct fwnode_handle *) ;
   bool (*device_is_available)(struct fwnode_handle *) ;
   void *(*device_get_match_data)(struct fwnode_handle *, struct device *) ;
   bool (*property_present)(struct fwnode_handle *, char *) ;
   int (*property_read_int_array)(struct fwnode_handle *, char *, unsigned int , void *, size_t ) ;
   int (*property_read_string_array)(struct fwnode_handle *, char *, char **, size_t ) ;
   char *(*get_name)(struct fwnode_handle *) ;
   char *(*get_name_prefix)(struct fwnode_handle *) ;
   struct fwnode_handle *(*get_parent)(struct fwnode_handle *) ;
   struct fwnode_handle *(*get_next_child_node)(struct fwnode_handle *, struct fwnode_handle *) ;
   struct fwnode_handle *(*get_named_child_node)(struct fwnode_handle *, char *) ;
   int (*get_reference_args)(struct fwnode_handle *, char *, char *, unsigned int , unsigned int , struct fwnode_reference_args *) ;
   struct fwnode_handle *(*graph_get_next_endpoint)(struct fwnode_handle *, struct fwnode_handle *) ;
   struct fwnode_handle *(*graph_get_remote_endpoint)(struct fwnode_handle *) ;
   struct fwnode_handle *(*graph_get_port_parent)(struct fwnode_handle *) ;
   int (*graph_parse_endpoint)(struct fwnode_handle *, struct fwnode_endpoint *) ;
   int (*add_links)(struct fwnode_handle *, struct device *) ;
};
#line 54  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/llist.h"
struct llist_node;
#line 58  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/llist.h"
struct llist_node {
   struct llist_node *next ;
};
#line 53  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/vmalloc.h"
struct vm_struct {
   struct vm_struct *next ;
   void *addr ;
   unsigned long size ;
   unsigned long flags ;
   struct page **pages ;
   unsigned int nr_pages ;
   phys_addr_t phys_addr ;
   void *caller ;
};
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/smp.h"
struct __call_single_data {
   struct llist_node llist ;
   void (*func)(void *) ;
   void *info ;
   unsigned int flags ;
};
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/firmware.h"
struct firmware {
   size_t size ;
   u8 *data ;
   struct page **pages ;
   void *priv ;
};
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ioport.h"
struct resource {
   resource_size_t start ;
   resource_size_t end ;
   char *name ;
   unsigned long flags ;
   unsigned long desc ;
   struct resource *parent ;
   struct resource *sibling ;
   struct resource *child ;
};
#line 292  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/xarray.h"
struct xarray {
   spinlock_t xa_lock ;
   gfp_t xa_flags ;
   void *xa_head ;
};
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/idr.h"
struct idr {
   struct xarray idr_rt ;
   unsigned int idr_base ;
   unsigned int idr_next ;
};
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uidgid.h"
struct __anonstruct_kuid_t_248 {
   uid_t val ;
};
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uidgid.h"
typedef struct __anonstruct_kuid_t_248 kuid_t;
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uidgid.h"
struct __anonstruct_kgid_t_249 {
   gid_t val ;
};
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uidgid.h"
typedef struct __anonstruct_kgid_t_249 kgid_t;
#line 140 
struct dentry;
#line 141 
struct iattr;
#line 142 
struct super_block;
#line 143 
struct poll_table_struct;
#line 144 
struct fs_context;
#line 146 
struct kernfs_open_node;
#line 147 
struct kernfs_iattrs;
#line 84  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_root;
#line 84  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_elem_dir {
   unsigned long subdirs ;
   struct rb_root children ;
   struct kernfs_root *root ;
};
#line 96 
struct kernfs_node;
#line 96  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_elem_symlink {
   struct kernfs_node *target_kn ;
};
#line 100 
struct kernfs_ops;
#line 100  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_elem_attr {
   struct kernfs_ops *ops ;
   struct kernfs_open_node *open ;
   loff_t size ;
   struct kernfs_node *notify_next ;
};
#line 116  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
union __anonunion_250 {
   struct kernfs_elem_dir dir ;
   struct kernfs_elem_symlink symlink ;
   struct kernfs_elem_attr attr ;
};
#line 116  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_node {
   atomic_t count ;
   atomic_t active ;
   struct lockdep_map dep_map ;
   struct kernfs_node *parent ;
   char *name ;
   struct rb_node rb ;
   void *ns ;
   unsigned int hash ;
   union __anonunion_250 __anonCompField_kernfs_node_49 ;
   void *priv ;
   u64 id ;
   unsigned short flags ;
   umode_t mode ;
   struct kernfs_iattrs *iattr ;
};
#line 161  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_syscall_ops {
   int (*show_options)(struct seq_file *, struct kernfs_root *) ;
   int (*mkdir)(struct kernfs_node *, char *, umode_t ) ;
   int (*rmdir)(struct kernfs_node *) ;
   int (*rename)(struct kernfs_node *, struct kernfs_node *, char *) ;
   int (*show_path)(struct seq_file *, struct kernfs_node *, struct kernfs_root *) ;
};
#line 173  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_root {
   struct kernfs_node *kn ;
   unsigned int flags ;
   struct idr ino_idr ;
   u32 last_id_lowbits ;
   u32 id_highbits ;
   struct kernfs_syscall_ops *syscall_ops ;
   struct list_head supers ;
   wait_queue_head_t deactivate_waitq ;
};
#line 190  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_open_file {
   struct kernfs_node *kn ;
   struct file *file ;
   struct seq_file *seq_file ;
   void *priv ;
   struct mutex mutex ;
   struct mutex prealloc_mutex ;
   int event ;
   struct list_head list ;
   char *prealloc_buf ;
   size_t atomic_write_len ;
   bool mmapped : 1 ;
   bool released : 1 ;
   struct vm_operations_struct *vm_ops ;
};
#line 210  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_ops {
   int (*open)(struct kernfs_open_file *) ;
   void (*release)(struct kernfs_open_file *) ;
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   ssize_t (*read)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   size_t atomic_write_len ;
   bool prealloc ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   __poll_t (*poll)(struct kernfs_open_file *, struct poll_table_struct *) ;
   int (*mmap)(struct kernfs_open_file *, struct vm_area_struct *) ;
   struct lock_class_key lockdep_key ;
};
#line 595 
struct sock;
#line 596 
struct kobject;
#line 597 
enum kobj_ns_type {
    KOBJ_NS_TYPE_NONE = 0,
    KOBJ_NS_TYPE_NET = 1,
    KOBJ_NS_TYPES = 2
};
#line 39  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kobject_ns.h"
struct kobj_ns_type_operations {
   enum kobj_ns_type type ;
   bool (*current_may_mount)(void) ;
   void *(*grab_current_ns)(void) ;
   void *(*netlink_ns)(struct sock *) ;
   void *(*initial_ns)(void) ;
   void (*drop_ns)(void *) ;
};
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/stat.h"
struct kstat {
   u32 result_mask ;
   umode_t mode ;
   unsigned int nlink ;
   uint32_t blksize ;
   u64 attributes ;
   u64 attributes_mask ;
   u64 ino ;
   dev_t dev ;
   dev_t rdev ;
   kuid_t uid ;
   kgid_t gid ;
   loff_t size ;
   struct timespec64 atime ;
   struct timespec64 mtime ;
   struct timespec64 ctime ;
   struct timespec64 btime ;
   u64 blocks ;
};
#line 51 
struct bin_attribute;
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysfs.h"
struct attribute {
   char *name ;
   umode_t mode ;
   bool ignore_lockdep : 1 ;
   struct lock_class_key *key ;
   struct lock_class_key skey ;
};
#line 84  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysfs.h"
struct attribute_group {
   char *name ;
   umode_t (*is_visible)(struct kobject *, struct attribute *, int ) ;
   umode_t (*is_bin_visible)(struct kobject *, struct bin_attribute *, int ) ;
   struct attribute **attrs ;
   struct bin_attribute **bin_attrs ;
};
#line 161  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysfs.h"
struct bin_attribute {
   struct attribute attr ;
   size_t size ;
   void *private ;
   ssize_t (*read)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   ssize_t (*write)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   int (*mmap)(struct file *, struct kobject *, struct bin_attribute *, struct vm_area_struct *) ;
};
#line 223  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysfs.h"
struct sysfs_ops {
   ssize_t (*show)(struct kobject *, struct attribute *, char *) ;
   ssize_t (*store)(struct kobject *, struct attribute *, char *, size_t ) ;
};
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/refcount.h"
struct refcount_struct {
   atomic_t refs ;
};
#line 101  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/refcount.h"
typedef struct refcount_struct refcount_t;
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kref.h"
struct kref {
   refcount_t refcount ;
};
#line 65  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kobject.h"
struct kset;
#line 65 
struct kobj_type;
#line 65  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kobject.h"
struct kobject {
   char *name ;
   struct list_head entry ;
   struct kobject *parent ;
   struct kset *kset ;
   struct kobj_type *ktype ;
   struct kernfs_node *sd ;
   struct kref kref ;
   struct delayed_work release ;
   unsigned int state_initialized : 1 ;
   unsigned int state_in_sysfs : 1 ;
   unsigned int state_add_uevent_sent : 1 ;
   unsigned int state_remove_uevent_sent : 1 ;
   unsigned int uevent_suppress : 1 ;
};
#line 139  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kobject.h"
struct kobj_type {
   void (*release)(struct kobject *) ;
   struct sysfs_ops *sysfs_ops ;
   struct attribute **default_attrs ;
   struct attribute_group **default_groups ;
   struct kobj_ns_type_operations *(*child_ns_type)(struct kobject *) ;
   void *(*namespace)(struct kobject *) ;
   void (*get_ownership)(struct kobject *, kuid_t *, kgid_t *) ;
};
#line 149  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kobject.h"
struct kobj_uevent_env {
   char *argv[3U] ;
   char *envp[32U] ;
   int envp_idx ;
   char buf[2048U] ;
   int buflen ;
};
#line 157  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kobject.h"
struct kset_uevent_ops {
   int (*filter)(struct kset *, struct kobject *) ;
   char *(*name)(struct kset *, struct kobject *) ;
   int (*uevent)(struct kset *, struct kobject *, struct kobj_uevent_env *) ;
};
#line 193  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kobject.h"
struct kset {
   struct list_head list ;
   spinlock_t list_lock ;
   struct kobject kobj ;
   struct kset_uevent_ops *uevent_ops ;
} __attribute__((__designated_init__));
#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timerqueue.h"
struct timerqueue_node {
   struct rb_node node ;
   ktime_t expires ;
};
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timerqueue.h"
struct timerqueue_head {
   struct rb_root_cached rb_root ;
};
#line 60 
struct hrtimer_clock_base;
#line 61 
struct hrtimer_cpu_base;
#line 80 
enum hrtimer_restart {
    HRTIMER_NORESTART = 0,
    HRTIMER_RESTART = 1
};
#line 117  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/hrtimer.h"
struct hrtimer {
   struct timerqueue_node node ;
   ktime_t _softexpires ;
   enum hrtimer_restart (*function)(struct hrtimer *) ;
   struct hrtimer_clock_base *base ;
   u8 state ;
   u8 is_rel ;
   u8 is_soft ;
   u8 is_hard ;
};
#line 158  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/hrtimer.h"
struct hrtimer_clock_base {
   struct hrtimer_cpu_base *cpu_base ;
   unsigned int index ;
   clockid_t clockid ;
   seqcount_t seq ;
   struct hrtimer *running ;
   struct timerqueue_head active ;
   ktime_t (*get_time)(void) ;
   ktime_t offset ;
} __attribute__((__aligned__(64)));
#line 213  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/hrtimer.h"
struct hrtimer_cpu_base {
   raw_spinlock_t lock ;
   unsigned int cpu ;
   unsigned int active_bases ;
   unsigned int clock_was_set_seq ;
   unsigned int hres_active : 1 ;
   unsigned int in_hrtirq : 1 ;
   unsigned int hang_detected : 1 ;
   unsigned int softirq_activated : 1 ;
   unsigned int nr_events ;
   unsigned short nr_retries ;
   unsigned short nr_hangs ;
   unsigned int max_hang_time ;
   ktime_t expires_next ;
   struct hrtimer *next_timer ;
   ktime_t softirq_expires_next ;
   struct hrtimer *softirq_next_timer ;
   struct hrtimer_clock_base clock_base[8U] ;
} __attribute__((__aligned__(64)));
#line 50  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pm.h"
struct pm_message {
   int event ;
};
#line 53  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pm.h"
typedef struct pm_message pm_message_t;
#line 278  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pm.h"
struct dev_pm_ops {
   int (*prepare)(struct device *) ;
   void (*complete)(struct device *) ;
   int (*suspend)(struct device *) ;
   int (*resume)(struct device *) ;
   int (*freeze)(struct device *) ;
   int (*thaw)(struct device *) ;
   int (*poweroff)(struct device *) ;
   int (*restore)(struct device *) ;
   int (*suspend_late)(struct device *) ;
   int (*resume_early)(struct device *) ;
   int (*freeze_late)(struct device *) ;
   int (*thaw_early)(struct device *) ;
   int (*poweroff_late)(struct device *) ;
   int (*restore_early)(struct device *) ;
   int (*suspend_noirq)(struct device *) ;
   int (*resume_noirq)(struct device *) ;
   int (*freeze_noirq)(struct device *) ;
   int (*thaw_noirq)(struct device *) ;
   int (*poweroff_noirq)(struct device *) ;
   int (*restore_noirq)(struct device *) ;
   int (*runtime_suspend)(struct device *) ;
   int (*runtime_resume)(struct device *) ;
   int (*runtime_idle)(struct device *) ;
};
#line 303 
enum rpm_status {
    RPM_ACTIVE = 0,
    RPM_RESUMING = 1,
    RPM_SUSPENDED = 2,
    RPM_SUSPENDING = 3
};
#line 310 
enum rpm_request {
    RPM_REQ_NONE = 0,
    RPM_REQ_IDLE = 1,
    RPM_REQ_SUSPEND = 2,
    RPM_REQ_AUTOSUSPEND = 3,
    RPM_REQ_RESUME = 4
};
#line 318 
struct wakeup_source;
#line 319 
struct wake_irq;
#line 320 
struct pm_domain_data;
#line 530  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pm.h"
struct pm_subsys_data {
   spinlock_t lock ;
   unsigned int refcount ;
   struct list_head clock_list ;
   struct pm_domain_data *domain_data ;
};
#line 573 
struct dev_pm_qos;
#line 573  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pm.h"
struct dev_pm_info {
   pm_message_t power_state ;
   unsigned int can_wakeup : 1 ;
   unsigned int async_suspend : 1 ;
   bool in_dpm_list : 1 ;
   bool is_prepared : 1 ;
   bool is_suspended : 1 ;
   bool is_noirq_suspended : 1 ;
   bool is_late_suspended : 1 ;
   bool no_pm : 1 ;
   bool early_init : 1 ;
   bool direct_complete : 1 ;
   u32 driver_flags ;
   spinlock_t lock ;
   struct list_head entry ;
   struct completion completion ;
   struct wakeup_source *wakeup ;
   bool wakeup_path : 1 ;
   bool syscore : 1 ;
   bool no_pm_callbacks : 1 ;
   unsigned int must_resume : 1 ;
   unsigned int may_skip_resume : 1 ;
   struct hrtimer suspend_timer ;
   unsigned long timer_expires ;
   struct work_struct work ;
   wait_queue_head_t wait_queue ;
   struct wake_irq *wakeirq ;
   atomic_t usage_count ;
   atomic_t child_count ;
   unsigned int disable_depth : 3 ;
   unsigned int idle_notification : 1 ;
   unsigned int request_pending : 1 ;
   unsigned int deferred_resume : 1 ;
   unsigned int runtime_auto : 1 ;
   bool ignore_children : 1 ;
   unsigned int no_callbacks : 1 ;
   unsigned int irq_safe : 1 ;
   unsigned int use_autosuspend : 1 ;
   unsigned int timer_autosuspends : 1 ;
   unsigned int memalloc_noio : 1 ;
   unsigned int links_count ;
   enum rpm_request request ;
   enum rpm_status runtime_status ;
   int runtime_error ;
   int autosuspend_delay ;
   u64 last_busy ;
   u64 active_time ;
   u64 suspended_time ;
   u64 accounting_timestamp ;
   struct pm_subsys_data *subsys_data ;
   void (*set_latency_tolerance)(struct device *, s32 ) ;
   struct dev_pm_qos *qos ;
};
#line 650  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pm.h"
struct dev_pm_domain {
   struct dev_pm_ops ops ;
   int (*start)(struct device *) ;
   void (*detach)(struct device *, bool ) ;
   int (*activate)(struct device *) ;
   void (*sync)(struct device *) ;
   void (*dismiss)(struct device *) ;
};
#line 628  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rculist.h"
enum pid_type {
    PIDTYPE_PID = 0,
    PIDTYPE_TGID = 1,
    PIDTYPE_PGID = 2,
    PIDTYPE_SID = 3,
    PIDTYPE_MAX = 4
};
#line 54  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pid.h"
struct pid_namespace;
#line 54  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pid.h"
struct upid {
   int nr ;
   struct pid_namespace *ns ;
};
#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pid.h"
struct pid {
   refcount_t count ;
   unsigned int level ;
   struct hlist_head tasks[4U] ;
   wait_queue_head_t wait_pidfd ;
   struct callback_head rcu ;
   struct upid numbers[1U] ;
};
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable-types.h"
struct rhash_head {
   struct rhash_head *next ;
};
#line 25 
struct bucket_table;
#line 33 
struct rhashtable;
#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable-types.h"
struct rhashtable_compare_arg {
   struct rhashtable *ht ;
   void *key ;
};
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable-types.h"
struct rhashtable_params {
   u16 nelem_hint ;
   u16 key_len ;
   u16 key_offset ;
   u16 head_offset ;
   unsigned int max_size ;
   u16 min_size ;
   bool automatic_shrinking ;
   u32 (*hashfn)(void *, u32 , u32 ) ;
   u32 (*obj_hashfn)(void *, u32 , u32 ) ;
   int (*obj_cmpfn)(struct rhashtable_compare_arg *, void *) ;
};
#line 81  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable-types.h"
struct rhashtable {
   struct bucket_table *tbl ;
   unsigned int key_len ;
   unsigned int max_elems ;
   struct rhashtable_params p ;
   bool rhlist ;
   struct work_struct run_work ;
   struct mutex mutex ;
   spinlock_t lock ;
   atomic_t nelems ;
};
#line 67  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/sem.h"
struct sem_undo_list;
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sem.h"
struct sysv_sem {
   struct sem_undo_list *undo_list ;
};
#line 13  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/shm.h"
struct sysv_shm {
   struct list_head shm_clist ;
};
#line 83  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/plist.h"
struct plist_node {
   int prio ;
   struct list_head prio_list ;
   struct list_head node_list ;
};
#line 40  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/seccomp.h"
struct seccomp_filter;
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/seccomp.h"
struct seccomp {
   int mode ;
   struct seccomp_filter *filter ;
};
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/resource.h"
struct rlimit {
   __kernel_ulong_t rlim_cur ;
   __kernel_ulong_t rlim_max ;
};
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/latencytop.h"
struct latency_record {
   unsigned long backtrace[12U] ;
   unsigned int count ;
   unsigned long time ;
   unsigned long max ;
};
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched/types.h"
struct task_cputime {
   u64 stime ;
   u64 utime ;
   unsigned long long sum_exec_runtime ;
};
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/signal.h"
struct __anonstruct_sigset_t_291 {
   unsigned long sig[1U] ;
};
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/signal.h"
typedef struct __anonstruct_sigset_t_291 sigset_t;
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/signal.h"
typedef void __signalfn_t(int );
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/signal-defs.h"
typedef __signalfn_t *__sighandler_t;
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/signal-defs.h"
typedef void __restorefn_t(void);
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/signal-defs.h"
typedef __restorefn_t *__sigrestore_t;
#line 8  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
union sigval {
   int sival_int ;
   void *sival_ptr ;
};
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
typedef union sigval sigval_t;
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__kill_292 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__timer_293 {
   __kernel_timer_t _tid ;
   int _overrun ;
   sigval_t _sigval ;
   int _sys_private ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__rt_294 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   sigval_t _sigval ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigchld_295 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   int _status ;
   __kernel_clock_t _utime ;
   __kernel_clock_t _stime ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__addr_bnd_298 {
   char _dummy_bnd[8U] ;
   void *_lower ;
   void *_upper ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__addr_pkey_299 {
   char _dummy_pkey[8U] ;
   __u32 _pkey ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
union __anonunion_297 {
   short _addr_lsb ;
   struct __anonstruct__addr_bnd_298 _addr_bnd ;
   struct __anonstruct__addr_pkey_299 _addr_pkey ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigfault_296 {
   void *_addr ;
   union __anonunion_297 __anonCompField___anonstruct__sigfault_296_50 ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigpoll_300 {
   long _band ;
   int _fd ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigsys_301 {
   void *_call_addr ;
   int _syscall ;
   unsigned int _arch ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
union __sifields {
   struct __anonstruct__kill_292 _kill ;
   struct __anonstruct__timer_293 _timer ;
   struct __anonstruct__rt_294 _rt ;
   struct __anonstruct__sigchld_295 _sigchld ;
   struct __anonstruct__sigfault_296 _sigfault ;
   struct __anonstruct__sigpoll_300 _sigpoll ;
   struct __anonstruct__sigsys_301 _sigsys ;
};
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/signal_types.h"
struct __anonstruct_306 {
   int si_signo ;
   int si_errno ;
   int si_code ;
   union __sifields _sifields ;
};
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/signal_types.h"
struct kernel_siginfo {
   struct __anonstruct_306 __anonCompField_kernel_siginfo_53 ;
};
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/signal_types.h"
typedef struct kernel_siginfo kernel_siginfo_t;
#line 20 
struct user_struct;
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/signal_types.h"
struct sigpending {
   struct list_head list ;
   sigset_t signal ;
};
#line 35  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/signal_types.h"
struct sigaction {
   __sighandler_t sa_handler ;
   unsigned long sa_flags ;
   __sigrestore_t sa_restorer ;
   sigset_t sa_mask ;
};
#line 49  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/signal_types.h"
struct k_sigaction {
   struct sigaction sa ;
};
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/task_io_accounting.h"
struct task_io_accounting {
   u64 rchar ;
   u64 wchar ;
   u64 syscr ;
   u64 syscw ;
   u64 read_bytes ;
   u64 write_bytes ;
   u64 cancelled_write_bytes ;
};
#line 107  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/posix-timers.h"
struct posix_cputimer_base {
   u64 nextevt ;
   struct timerqueue_head tqhead ;
};
#line 122  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/posix-timers.h"
struct posix_cputimers {
   struct posix_cputimer_base bases[3U] ;
   unsigned int timers_active ;
   unsigned int expiry_active ;
};
#line 193 
struct signal_struct;
#line 62  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/rseq.h"
union __anonunion_rseq_cs_311 {
   __u64 ptr64 ;
   __u64 ptr ;
};
#line 62  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/rseq.h"
struct rseq {
   __u32 cpu_id_start ;
   __u32 cpu_id ;
   union __anonunion_rseq_cs_311 rseq_cs ;
   __u32 flags ;
} __attribute__((__aligned__(32)));
#line 146 
struct audit_context;
#line 147 
struct backing_dev_info;
#line 148 
struct bio_list;
#line 149 
struct blk_plug;
#line 150 
struct capture_control;
#line 151 
struct cfs_rq;
#line 152 
struct fs_struct;
#line 153 
struct futex_pi_state;
#line 154 
struct io_context;
#line 155 
struct nameidata;
#line 156 
struct nsproxy;
#line 157 
struct perf_event_context;
#line 158 
struct pipe_inode_info;
#line 160 
struct reclaim_state;
#line 161 
struct robust_list_head;
#line 166 
struct sighand_struct;
#line 167 
struct task_delay_info;
#line 168 
struct task_group;
#line 242  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct prev_cputime {
   u64 utime ;
   u64 stime ;
   raw_spinlock_t lock ;
};
#line 290  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct sched_info {
   unsigned long pcount ;
   unsigned long long run_delay ;
   unsigned long long last_arrival ;
   unsigned long long last_queued ;
};
#line 325  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct load_weight {
   unsigned long weight ;
   u32 inv_weight ;
};
#line 352  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct util_est {
   unsigned int enqueued ;
   unsigned int ewma ;
} __attribute__((__aligned__(8)));
#line 401  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct sched_avg {
   u64 last_update_time ;
   u64 load_sum ;
   u64 runnable_load_sum ;
   u32 util_sum ;
   u32 period_contrib ;
   unsigned long load_avg ;
   unsigned long runnable_load_avg ;
   unsigned long util_avg ;
   struct util_est util_est ;
} __attribute__((__aligned__(64)));
#line 413  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct sched_statistics {
   u64 wait_start ;
   u64 wait_max ;
   u64 wait_count ;
   u64 wait_sum ;
   u64 iowait_count ;
   u64 iowait_sum ;
   u64 sleep_start ;
   u64 sleep_max ;
   s64 sum_sleep_runtime ;
   u64 block_start ;
   u64 block_max ;
   u64 exec_max ;
   u64 slice_max ;
   u64 nr_migrations_cold ;
   u64 nr_failed_migrations_affine ;
   u64 nr_failed_migrations_running ;
   u64 nr_failed_migrations_hot ;
   u64 nr_forced_migrations ;
   u64 nr_wakeups ;
   u64 nr_wakeups_sync ;
   u64 nr_wakeups_migrate ;
   u64 nr_wakeups_local ;
   u64 nr_wakeups_remote ;
   u64 nr_wakeups_affine ;
   u64 nr_wakeups_affine_attempts ;
   u64 nr_wakeups_passive ;
   u64 nr_wakeups_idle ;
};
#line 449  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct sched_entity {
   struct load_weight load ;
   unsigned long runnable_weight ;
   struct rb_node run_node ;
   struct list_head group_node ;
   unsigned int on_rq ;
   u64 exec_start ;
   u64 sum_exec_runtime ;
   u64 vruntime ;
   u64 prev_sum_exec_runtime ;
   u64 nr_migrations ;
   struct sched_statistics statistics ;
   int depth ;
   struct sched_entity *parent ;
   struct cfs_rq *cfs_rq ;
   struct cfs_rq *my_q ;
   struct sched_avg avg ;
};
#line 486 
struct rt_rq;
#line 486  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct sched_rt_entity {
   struct list_head run_list ;
   unsigned long timeout ;
   unsigned long watchdog_stamp ;
   unsigned int time_slice ;
   unsigned short on_rq ;
   unsigned short on_list ;
   struct sched_rt_entity *back ;
   struct sched_rt_entity *parent ;
   struct rt_rq *rt_rq ;
   struct rt_rq *my_q ;
} __attribute__((__designated_init__));
#line 504  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct sched_dl_entity {
   struct rb_node rb_node ;
   u64 dl_runtime ;
   u64 dl_deadline ;
   u64 dl_period ;
   u64 dl_bw ;
   u64 dl_density ;
   s64 runtime ;
   u64 deadline ;
   unsigned int flags ;
   unsigned int dl_throttled : 1 ;
   unsigned int dl_boosted : 1 ;
   unsigned int dl_yielded : 1 ;
   unsigned int dl_non_contending : 1 ;
   unsigned int dl_overrun : 1 ;
   struct hrtimer dl_timer ;
   struct hrtimer inactive_timer ;
};
#line 600  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct uclamp_se {
   unsigned int value : 11 ;
   unsigned int bucket_id : 3 ;
   unsigned int active : 1 ;
   unsigned int user_defined : 1 ;
};
#line 625  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct wake_q_node {
   struct wake_q_node *next ;
};
#line 629 
struct sched_class;
#line 629 
struct cred;
#line 629 
struct key;
#line 629 
struct files_struct;
#line 629 
struct rt_mutex_waiter;
#line 629 
struct css_set;
#line 629 
struct compat_robust_list_head;
#line 629 
struct numa_group;
#line 629  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
union __anonunion_313 {
   refcount_t rcu_users ;
   struct callback_head rcu ;
};
#line 629 
struct ftrace_ret_stack;
#line 629 
struct kcov;
#line 629 
struct request_queue;
#line 629  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct task_struct {
   struct thread_info thread_info ;
   long state ;
   void *stack ;
   refcount_t usage ;
   unsigned int flags ;
   unsigned int ptrace ;
   struct llist_node wake_entry ;
   int on_cpu ;
   unsigned int cpu ;
   unsigned int wakee_flips ;
   unsigned long wakee_flip_decay_ts ;
   struct task_struct *last_wakee ;
   int recent_used_cpu ;
   int wake_cpu ;
   int on_rq ;
   int prio ;
   int static_prio ;
   int normal_prio ;
   unsigned int rt_priority ;
   struct sched_class *sched_class ;
   struct sched_entity se ;
   struct sched_rt_entity rt ;
   struct task_group *sched_task_group ;
   struct sched_dl_entity dl ;
   struct uclamp_se uclamp_req[2U] ;
   struct uclamp_se uclamp[2U] ;
   struct hlist_head preempt_notifiers ;
   unsigned int btrace_seq ;
   unsigned int policy ;
   int nr_cpus_allowed ;
   cpumask_t *cpus_ptr ;
   cpumask_t cpus_mask ;
   unsigned long rcu_tasks_nvcsw ;
   u8 rcu_tasks_holdout ;
   u8 rcu_tasks_idx ;
   int rcu_tasks_idle_cpu ;
   struct list_head rcu_tasks_holdout_list ;
   struct sched_info sched_info ;
   struct list_head tasks ;
   struct plist_node pushable_tasks ;
   struct rb_node pushable_dl_tasks ;
   struct mm_struct *mm ;
   struct mm_struct *active_mm ;
   struct vmacache vmacache ;
   struct task_rss_stat rss_stat ;
   int exit_state ;
   int exit_code ;
   int exit_signal ;
   int pdeath_signal ;
   unsigned long jobctl ;
   unsigned int personality ;
   unsigned int sched_reset_on_fork : 1 ;
   unsigned int sched_contributes_to_load : 1 ;
   unsigned int sched_migrated : 1 ;
   unsigned int sched_remote_wakeup : 1 ;
   unsigned int sched_psi_wake_requeue : 1 ;
   unsigned int  ;
   unsigned int in_execve : 1 ;
   unsigned int in_iowait : 1 ;
   unsigned int restore_sigmask : 1 ;
   unsigned int in_user_fault : 1 ;
   unsigned int brk_randomized : 1 ;
   unsigned int no_cgroup_migration : 1 ;
   unsigned int frozen : 1 ;
   unsigned int use_memdelay : 1 ;
   unsigned long atomic_flags ;
   struct restart_block restart_block ;
   pid_t pid ;
   pid_t tgid ;
   unsigned long stack_canary ;
   struct task_struct *real_parent ;
   struct task_struct *parent ;
   struct list_head children ;
   struct list_head sibling ;
   struct task_struct *group_leader ;
   struct list_head ptraced ;
   struct list_head ptrace_entry ;
   struct pid *thread_pid ;
   struct hlist_node pid_links[4U] ;
   struct list_head thread_group ;
   struct list_head thread_node ;
   struct completion *vfork_done ;
   int *set_child_tid ;
   int *clear_child_tid ;
   u64 utime ;
   u64 stime ;
   u64 gtime ;
   struct prev_cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   u64 start_time ;
   u64 start_boottime ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   struct posix_cputimers posix_cputimers ;
   struct cred *ptracer_cred ;
   struct cred *real_cred ;
   struct cred *cred ;
   struct key *cached_requested_key ;
   char comm[16U] ;
   struct nameidata *nameidata ;
   struct sysv_sem sysvsem ;
   struct sysv_shm sysvshm ;
   unsigned long last_switch_count ;
   unsigned long last_switch_time ;
   struct fs_struct *fs ;
   struct files_struct *files ;
   struct nsproxy *nsproxy ;
   struct signal_struct *signal ;
   struct sighand_struct *sighand ;
   sigset_t blocked ;
   sigset_t real_blocked ;
   sigset_t saved_sigmask ;
   struct sigpending pending ;
   unsigned long sas_ss_sp ;
   size_t sas_ss_size ;
   unsigned int sas_ss_flags ;
   struct callback_head *task_works ;
   struct audit_context *audit_context ;
   kuid_t loginuid ;
   unsigned int sessionid ;
   struct seccomp seccomp ;
   u32 parent_exec_id ;
   u32 self_exec_id ;
   spinlock_t alloc_lock ;
   raw_spinlock_t pi_lock ;
   struct wake_q_node wake_q ;
   struct rb_root_cached pi_waiters ;
   struct task_struct *pi_top_task ;
   struct rt_mutex_waiter *pi_blocked_on ;
   struct mutex_waiter *blocked_on ;
   int non_block_count ;
   unsigned int irq_events ;
   unsigned long hardirq_enable_ip ;
   unsigned long hardirq_disable_ip ;
   unsigned int hardirq_enable_event ;
   unsigned int hardirq_disable_event ;
   int hardirqs_enabled ;
   int hardirq_context ;
   unsigned long softirq_disable_ip ;
   unsigned long softirq_enable_ip ;
   unsigned int softirq_disable_event ;
   unsigned int softirq_enable_event ;
   int softirqs_enabled ;
   int softirq_context ;
   u64 curr_chain_key ;
   int lockdep_depth ;
   unsigned int lockdep_recursion ;
   struct held_lock held_locks[48U] ;
   unsigned int in_ubsan ;
   void *journal_info ;
   struct bio_list *bio_list ;
   struct blk_plug *plug ;
   struct reclaim_state *reclaim_state ;
   struct backing_dev_info *backing_dev_info ;
   struct io_context *io_context ;
   struct capture_control *capture_control ;
   unsigned long ptrace_message ;
   kernel_siginfo_t *last_siginfo ;
   struct task_io_accounting ioac ;
   unsigned int psi_flags ;
   u64 acct_rss_mem1 ;
   u64 acct_vm_mem1 ;
   u64 acct_timexpd ;
   nodemask_t mems_allowed ;
   seqcount_t mems_allowed_seq ;
   int cpuset_mem_spread_rotor ;
   int cpuset_slab_spread_rotor ;
   struct css_set *cgroups ;
   struct list_head cg_list ;
   u32 closid ;
   u32 rmid ;
   struct robust_list_head *robust_list ;
   struct compat_robust_list_head *compat_robust_list ;
   struct list_head pi_state_list ;
   struct futex_pi_state *pi_state_cache ;
   struct mutex futex_exit_mutex ;
   unsigned int futex_state ;
   struct perf_event_context *perf_event_ctxp[2U] ;
   struct mutex perf_event_mutex ;
   struct list_head perf_event_list ;
   struct mempolicy *mempolicy ;
   short il_prev ;
   short pref_node_fork ;
   int numa_scan_seq ;
   unsigned int numa_scan_period ;
   unsigned int numa_scan_period_max ;
   int numa_preferred_nid ;
   unsigned long numa_migrate_retry ;
   u64 node_stamp ;
   u64 last_task_numa_placement ;
   u64 last_sum_exec_runtime ;
   struct callback_head numa_work ;
   struct numa_group *numa_group ;
   unsigned long *numa_faults ;
   unsigned long total_numa_faults ;
   unsigned long numa_faults_locality[3U] ;
   unsigned long numa_pages_migrated ;
   struct rseq *rseq ;
   u32 rseq_sig ;
   unsigned long rseq_event_mask ;
   struct tlbflush_unmap_batch tlb_ubc ;
   union __anonunion_313 __anonCompField_task_struct_55 ;
   struct pipe_inode_info *splice_pipe ;
   struct page_frag task_frag ;
   struct task_delay_info *delays ;
   int make_it_fail ;
   unsigned int fail_nth ;
   int nr_dirtied ;
   int nr_dirtied_pause ;
   unsigned long dirty_paused_when ;
   int latency_record_count ;
   struct latency_record latency_record[32U] ;
   u64 timer_slack_ns ;
   u64 default_timer_slack_ns ;
   unsigned int kasan_depth ;
   int curr_ret_stack ;
   int curr_ret_depth ;
   struct ftrace_ret_stack *ret_stack ;
   unsigned long long ftrace_timestamp ;
   atomic_t trace_overrun ;
   atomic_t tracing_graph_pause ;
   unsigned long trace ;
   unsigned long trace_recursion ;
   unsigned int kcov_mode ;
   unsigned int kcov_size ;
   void *kcov_area ;
   struct kcov *kcov ;
   u64 kcov_handle ;
   int kcov_sequence ;
   struct mem_cgroup *memcg_in_oom ;
   gfp_t memcg_oom_gfp_mask ;
   int memcg_oom_order ;
   unsigned int memcg_nr_pages_over_high ;
   struct mem_cgroup *active_memcg ;
   struct request_queue *throttle_queue ;
   struct uprobe_task *utask ;
   unsigned int sequential_io ;
   unsigned int sequential_io_avg ;
   unsigned long task_state_change ;
   int pagefault_disabled ;
   struct task_struct *oom_reaper_list ;
   struct vm_struct *stack_vm_area ;
   refcount_t stack_refcount ;
   int patch_state ;
   void *security ;
   struct thread_struct thread ;
};
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ratelimit.h"
struct ratelimit_state {
   raw_spinlock_t lock ;
   int interval ;
   int burst ;
   int printed ;
   int missed ;
   unsigned long begin ;
   unsigned long flags ;
};
#line 5  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/device.h"
struct dev_archdata {
   void *iommu ;
};
#line 12 
struct dma_map_ops;
#line 23 
struct device_driver;
#line 24 
struct driver_private;
#line 25 
struct class;
#line 26 
struct subsys_private;
#line 27 
struct bus_type;
#line 28 
struct iommu_ops;
#line 29 
struct iommu_group;
#line 30 
struct iommu_fwspec;
#line 31 
struct dev_pin_info;
#line 32 
struct iommu_param;
#line 122  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
struct bus_type {
   char *name ;
   char *dev_name ;
   struct device *dev_root ;
   struct attribute_group **bus_groups ;
   struct attribute_group **dev_groups ;
   struct attribute_group **drv_groups ;
   int (*match)(struct device *, struct device_driver *) ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   int (*probe)(struct device *) ;
   void (*sync_state)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*online)(struct device *) ;
   int (*offline)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   int (*num_vf)(struct device *) ;
   int (*dma_configure)(struct device *) ;
   struct dev_pm_ops *pm ;
   struct iommu_ops *iommu_ops ;
   struct subsys_private *p ;
   struct lock_class_key lock_key ;
   bool need_parent_lock ;
};
#line 164 
struct device_type;
#line 309 
enum probe_type {
    PROBE_DEFAULT_STRATEGY = 0,
    PROBE_PREFER_ASYNCHRONOUS = 1,
    PROBE_FORCE_SYNCHRONOUS = 2
};
#line 383 
struct of_device_id;
#line 383 
struct acpi_device_id;
#line 383  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
struct device_driver {
   char *name ;
   struct bus_type *bus ;
   struct module *owner ;
   char *mod_name ;
   bool suppress_bind_attrs ;
   enum probe_type probe_type ;
   struct of_device_id *of_match_table ;
   struct acpi_device_id *acpi_match_table ;
   int (*probe)(struct device *) ;
   void (*sync_state)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct attribute_group **groups ;
   struct attribute_group **dev_groups ;
   struct dev_pm_ops *pm ;
   void (*coredump)(struct device *) ;
   struct driver_private *p ;
};
#line 589  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
struct class {
   char *name ;
   struct module *owner ;
   struct attribute_group **class_groups ;
   struct attribute_group **dev_groups ;
   struct kobject *dev_kobj ;
   int (*dev_uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *) ;
   void (*class_release)(struct class *) ;
   void (*dev_release)(struct device *) ;
   int (*shutdown_pre)(struct device *) ;
   struct kobj_ns_type_operations *ns_type ;
   void *(*namespace)(struct device *) ;
   void (*get_ownership)(struct device *, kuid_t *, kgid_t *) ;
   struct dev_pm_ops *pm ;
   struct subsys_private *p ;
};
#line 809  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
struct device_type {
   char *name ;
   struct attribute_group **groups ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *, kuid_t *, kgid_t *) ;
   void (*release)(struct device *) ;
   struct dev_pm_ops *pm ;
};
#line 1008  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
struct device_dma_parameters {
   unsigned int max_segment_size ;
   unsigned long segment_boundary_mask ;
};
#line 1139 
enum dl_dev_state {
    DL_DEV_NO_DRIVER = 0,
    DL_DEV_PROBING = 1,
    DL_DEV_DRIVER_BOUND = 2,
    DL_DEV_UNBINDING = 3
};
#line 1164  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
struct dev_links_info {
   struct list_head suppliers ;
   struct list_head consumers ;
   struct list_head needs_suppliers ;
   struct list_head defer_sync ;
   bool need_for_probe ;
   enum dl_dev_state status ;
};
#line 1259 
struct dma_coherent_mem;
#line 1259 
struct cma;
#line 1259  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
struct device {
   struct kobject kobj ;
   struct device *parent ;
   struct device_private *p ;
   char *init_name ;
   struct device_type *type ;
   struct bus_type *bus ;
   struct device_driver *driver ;
   void *platform_data ;
   void *driver_data ;
   struct mutex lockdep_mutex ;
   struct mutex mutex ;
   struct dev_links_info links ;
   struct dev_pm_info power ;
   struct dev_pm_domain *pm_domain ;
   struct irq_domain *msi_domain ;
   struct dev_pin_info *pins ;
   struct list_head msi_list ;
   struct dma_map_ops *dma_ops ;
   u64 *dma_mask ;
   u64 coherent_dma_mask ;
   u64 bus_dma_limit ;
   unsigned long dma_pfn_offset ;
   struct device_dma_parameters *dma_parms ;
   struct list_head dma_pools ;
   struct dma_coherent_mem *dma_mem ;
   struct cma *cma_area ;
   struct dev_archdata archdata ;
   struct device_node *of_node ;
   struct fwnode_handle *fwnode ;
   int numa_node ;
   dev_t devt ;
   u32 id ;
   spinlock_t devres_lock ;
   struct list_head devres_head ;
   struct class *class ;
   struct attribute_group **groups ;
   void (*release)(struct device *) ;
   struct iommu_group *iommu_group ;
   struct iommu_fwspec *iommu_fwspec ;
   struct iommu_param *iommu_param ;
   bool offline_disabled : 1 ;
   bool offline : 1 ;
   bool of_node_reused : 1 ;
   bool state_synced : 1 ;
};
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pm_wakeup.h"
struct wakeup_source {
   char *name ;
   int id ;
   struct list_head entry ;
   spinlock_t lock ;
   struct wake_irq *wakeirq ;
   struct timer_list timer ;
   unsigned long timer_expires ;
   ktime_t total_time ;
   ktime_t max_time ;
   ktime_t last_time ;
   ktime_t start_prevent_time ;
   ktime_t prevent_sleep_time ;
   unsigned long event_count ;
   unsigned long active_count ;
   unsigned long relax_count ;
   unsigned long expire_count ;
   unsigned long wakeup_count ;
   struct device *dev ;
   bool active : 1 ;
   bool autosleep_enabled : 1 ;
};
#line 1913  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
struct percpu_ref;
#line 1914  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
typedef void percpu_ref_func_t(struct percpu_ref *);
#line 95  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/percpu-refcount.h"
struct percpu_ref {
   atomic_long_t count ;
   unsigned long percpu_count_ptr ;
   percpu_ref_func_t *release ;
   percpu_ref_func_t *confirm_switch ;
   bool force_atomic : 1 ;
   bool allow_reinit : 1 ;
   struct callback_head rcu ;
};
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/extable.h"
struct exception_table_entry {
   int insn ;
   int fixup ;
   int handler ;
};
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/shrinker.h"
struct shrink_control {
   gfp_t gfp_mask ;
   int nid ;
   unsigned long nr_to_scan ;
   unsigned long nr_scanned ;
   struct mem_cgroup *memcg ;
};
#line 60  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/shrinker.h"
struct shrinker {
   unsigned long (*count_objects)(struct shrinker *, struct shrink_control *) ;
   unsigned long (*scan_objects)(struct shrinker *, struct shrink_control *) ;
   long batch ;
   int seeks ;
   unsigned int flags ;
   struct list_head list ;
   int id ;
   atomic_long_t *nr_deferred ;
};
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memremap.h"
struct vmem_altmap {
   unsigned long base_pfn ;
   unsigned long end_pfn ;
   unsigned long reserve ;
   unsigned long free ;
   unsigned long align ;
   unsigned long alloc ;
};
#line 26 
enum memory_type {
    MEMORY_DEVICE_PRIVATE = 1,
    MEMORY_DEVICE_FS_DAX = 2,
    MEMORY_DEVICE_DEVDAX = 3,
    MEMORY_DEVICE_PCI_P2PDMA = 4
};
#line 67  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memremap.h"
struct dev_pagemap_ops {
   void (*page_free)(struct page *) ;
   void (*kill)(struct dev_pagemap *) ;
   void (*cleanup)(struct dev_pagemap *) ;
   vm_fault_t (*migrate_to_ram)(struct vm_fault *) ;
};
#line 107  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memremap.h"
struct dev_pagemap {
   struct vmem_altmap altmap ;
   struct resource res ;
   struct percpu_ref *ref ;
   struct percpu_ref internal_ref ;
   struct completion done ;
   enum memory_type type ;
   unsigned int flags ;
   struct dev_pagemap_ops *ops ;
};
#line 176 
struct file_ra_state;
#line 177 
struct writeback_control;
#line 178 
struct bdi_writeback;
#line 417  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm.h"
struct vm_fault {
   struct vm_area_struct *vma ;
   unsigned int flags ;
   gfp_t gfp_mask ;
   unsigned long pgoff ;
   unsigned long address ;
   pmd_t *pmd ;
   pud_t *pud ;
   pte_t orig_pte ;
   struct page *cow_page ;
   struct mem_cgroup *memcg ;
   struct page *page ;
   pte_t *pte ;
   spinlock_t *ptl ;
   pgtable_t prealloc_pte ;
};
#line 448 
enum page_entry_size {
    PE_SIZE_PTE = 0,
    PE_SIZE_PMD = 1,
    PE_SIZE_PUD = 2
};
#line 467  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm.h"
struct vm_operations_struct {
   void (*open)(struct vm_area_struct *) ;
   void (*close)(struct vm_area_struct *) ;
   int (*split)(struct vm_area_struct *, unsigned long ) ;
   int (*mremap)(struct vm_area_struct *) ;
   vm_fault_t (*fault)(struct vm_fault *) ;
   vm_fault_t (*huge_fault)(struct vm_fault *, enum page_entry_size ) ;
   void (*map_pages)(struct vm_fault *, unsigned long , unsigned long ) ;
   unsigned long (*pagesize)(struct vm_area_struct *) ;
   vm_fault_t (*page_mkwrite)(struct vm_fault *) ;
   vm_fault_t (*pfn_mkwrite)(struct vm_fault *) ;
   int (*access)(struct vm_area_struct *, unsigned long , void *, int , int ) ;
   char *(*name)(struct vm_area_struct *) ;
   int (*set_policy)(struct vm_area_struct *, struct mempolicy *) ;
   struct mempolicy *(*get_policy)(struct vm_area_struct *, unsigned long ) ;
   struct page *(*find_special_page)(struct vm_area_struct *, unsigned long ) ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_bl.h"
struct hlist_bl_node;
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_bl.h"
struct hlist_bl_head {
   struct hlist_bl_node *first ;
};
#line 38  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_bl.h"
struct hlist_bl_node {
   struct hlist_bl_node *next ;
   struct hlist_bl_node **pprev ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockref.h"
struct __anonstruct_404 {
   spinlock_t lock ;
   int count ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockref.h"
union __anonunion_403 {
   struct __anonstruct_404 __anonCompField___anonunion_403_56 ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockref.h"
struct lockref {
   union __anonunion_403 __anonCompField_lockref_57 ;
};
#line 78  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/stringhash.h"
struct path;
#line 79 
struct vfsmount;
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dcache.h"
struct __anonstruct_406 {
   u32 hash ;
   u32 len ;
};
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dcache.h"
union __anonunion_405 {
   struct __anonstruct_406 __anonCompField___anonunion_405_58 ;
   u64 hash_len ;
};
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dcache.h"
struct qstr {
   union __anonunion_405 __anonCompField_qstr_59 ;
   unsigned char *name ;
};
#line 89 
struct dentry_operations;
#line 89  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dcache.h"
union __anonunion_407 {
   struct list_head d_lru ;
   wait_queue_head_t *d_wait ;
};
#line 89  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dcache.h"
union __anonunion_d_u_408 {
   struct hlist_node d_alias ;
   struct hlist_bl_node d_in_lookup_hash ;
   struct callback_head d_rcu ;
};
#line 89  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dcache.h"
struct dentry {
   unsigned int d_flags ;
   seqcount_t d_seq ;
   struct hlist_bl_node d_hash ;
   struct dentry *d_parent ;
   struct qstr d_name ;
   struct inode *d_inode ;
   unsigned char d_iname[32U] ;
   struct lockref d_lockref ;
   struct dentry_operations *d_op ;
   struct super_block *d_sb ;
   unsigned long d_time ;
   void *d_fsdata ;
   union __anonunion_407 __anonCompField_dentry_60 ;
   struct list_head d_child ;
   struct list_head d_subdirs ;
   union __anonunion_d_u_408 d_u ;
} __attribute__((__designated_init__));
#line 135  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dcache.h"
struct dentry_operations {
   int (*d_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_weak_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_hash)(struct dentry *, struct qstr *) ;
   int (*d_compare)(struct dentry *, unsigned int , char *, struct qstr *) ;
   int (*d_delete)(struct dentry *) ;
   int (*d_init)(struct dentry *) ;
   void (*d_release)(struct dentry *) ;
   void (*d_prune)(struct dentry *) ;
   void (*d_iput)(struct dentry *, struct inode *) ;
   char *(*d_dname)(struct dentry *, char *, int ) ;
   struct vfsmount *(*d_automount)(struct path *) ;
   int (*d_manage)(struct path *, bool ) ;
   struct dentry *(*d_real)(struct dentry *, struct inode *) ;
} __attribute__((__aligned__(64)));
#line 8  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/path.h"
struct path {
   struct vfsmount *mnt ;
   struct dentry *dentry ;
} __attribute__((__designated_init__));
#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_lru.h"
struct list_lru_one {
   struct list_head list ;
   long nr_items ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_lru.h"
struct list_lru_memcg {
   struct callback_head rcu ;
   struct list_lru_one *lru[0U] ;
};
#line 40  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_lru.h"
struct list_lru_node {
   spinlock_t lock ;
   struct list_lru_one lru ;
   struct list_lru_memcg *memcg_lrus ;
   long nr_items ;
} __attribute__((__aligned__(64)));
#line 52  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_lru.h"
struct list_lru {
   struct list_lru_node *node ;
   struct list_head list ;
   int shrinker_id ;
   bool memcg_aware ;
};
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/capability.h"
struct kernel_cap_struct {
   __u32 cap[2U] ;
};
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/capability.h"
typedef struct kernel_cap_struct kernel_cap_t;
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fiemap.h"
struct fiemap_extent {
   __u64 fe_logical ;
   __u64 fe_physical ;
   __u64 fe_length ;
   __u64 fe_reserved64[2U] ;
   __u32 fe_flags ;
   __u32 fe_reserved[3U] ;
};
#line 39 
enum migrate_mode {
    MIGRATE_ASYNC = 0,
    MIGRATE_SYNC_LIGHT = 1,
    MIGRATE_SYNC = 2,
    MIGRATE_SYNC_NO_COPY = 3
};
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rcuwait.h"
struct rcuwait {
   struct task_struct *task ;
};
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rcu_sync.h"
struct rcu_sync {
   int gp_state ;
   int gp_count ;
   wait_queue_head_t gp_wait ;
   struct callback_head cb_head ;
};
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/percpu-rwsem.h"
struct percpu_rw_semaphore {
   struct rcu_sync rss ;
   unsigned int *read_count ;
   struct rw_semaphore rw_sem ;
   struct rcuwait writer ;
   int readers_block ;
};
#line 10  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/delayed_call.h"
struct delayed_call {
   void (*fn)(void *) ;
   void *arg ;
};
#line 36  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/uuid.h"
struct __anonstruct_uuid_t_416 {
   __u8 b[16U] ;
};
#line 36  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/uuid.h"
typedef struct __anonstruct_uuid_t_416 uuid_t;
#line 87  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uuid.h"
typedef u32 errseq_t;
#line 72  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/iocontext.h"
union __anonunion_417 {
   struct list_head q_node ;
   struct kmem_cache *__rcu_icq_cache ;
};
#line 72  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/iocontext.h"
union __anonunion_418 {
   struct hlist_node ioc_node ;
   struct callback_head __rcu_head ;
};
#line 72  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/iocontext.h"
struct io_cq {
   struct request_queue *q ;
   struct io_context *ioc ;
   union __anonunion_417 __anonCompField_io_cq_61 ;
   union __anonunion_418 __anonCompField_io_cq_62 ;
   unsigned int flags ;
};
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/iocontext.h"
struct io_context {
   atomic_long_t refcount ;
   atomic_t active_ref ;
   atomic_t nr_tasks ;
   spinlock_t lock ;
   unsigned short ioprio ;
   int nr_batch_requests ;
   unsigned long last_waited ;
   struct xarray icq_tree ;
   struct io_cq *icq_hint ;
   struct hlist_head icq_list ;
   struct work_struct release_work ;
};
#line 286  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fs.h"
struct bio;
#line 287 
struct export_operations;
#line 288 
struct hd_geometry;
#line 289 
struct iovec;
#line 290 
struct kiocb;
#line 291 
struct kstatfs;
#line 292 
struct swap_info_struct;
#line 293 
struct iov_iter;
#line 294 
struct fscrypt_info;
#line 295 
struct fscrypt_operations;
#line 296 
struct fsverity_info;
#line 297 
struct fsverity_operations;
#line 298 
struct fs_parameter_description;
#line 224  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct iattr {
   unsigned int ia_valid ;
   umode_t ia_mode ;
   kuid_t ia_uid ;
   kgid_t ia_gid ;
   loff_t ia_size ;
   struct timespec64 ia_atime ;
   struct timespec64 ia_mtime ;
   struct timespec64 ia_ctime ;
   struct file *ia_file ;
};
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/percpu_counter.h"
struct percpu_counter {
   raw_spinlock_t lock ;
   s64 count ;
   struct list_head list ;
   s32 *counters ;
};
#line 214  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dqblk_xfs.h"
struct dquot;
#line 215 
struct kqid;
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/projid.h"
typedef __kernel_uid32_t projid_t;
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/projid.h"
struct __anonstruct_kprojid_t_419 {
   projid_t val ;
};
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/projid.h"
typedef struct __anonstruct_kprojid_t_419 kprojid_t;
#line 180  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/quota.h"
enum quota_type {
    USRQUOTA = 0,
    GRPQUOTA = 1,
    PRJQUOTA = 2
};
#line 66  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
typedef long long qsize_t;
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
union __anonunion_420 {
   kuid_t uid ;
   kgid_t gid ;
   kprojid_t projid ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct kqid {
   union __anonunion_420 __anonCompField_kqid_63 ;
   enum quota_type type ;
};
#line 205  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct mem_dqblk {
   qsize_t dqb_bhardlimit ;
   qsize_t dqb_bsoftlimit ;
   qsize_t dqb_curspace ;
   qsize_t dqb_rsvspace ;
   qsize_t dqb_ihardlimit ;
   qsize_t dqb_isoftlimit ;
   qsize_t dqb_curinodes ;
   time64_t dqb_btime ;
   time64_t dqb_itime ;
};
#line 216 
struct quota_format_type;
#line 222  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct mem_dqinfo {
   struct quota_format_type *dqi_format ;
   int dqi_fmt_id ;
   struct list_head dqi_dirty_list ;
   unsigned long dqi_flags ;
   unsigned int dqi_bgrace ;
   unsigned int dqi_igrace ;
   qsize_t dqi_max_spc_limit ;
   qsize_t dqi_max_ino_limit ;
   void *dqi_priv ;
};
#line 294  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct dquot {
   struct hlist_node dq_hash ;
   struct list_head dq_inuse ;
   struct list_head dq_free ;
   struct list_head dq_dirty ;
   struct mutex dq_lock ;
   spinlock_t dq_dqb_lock ;
   atomic_t dq_count ;
   struct super_block *dq_sb ;
   struct kqid dq_id ;
   loff_t dq_off ;
   unsigned long dq_flags ;
   struct mem_dqblk dq_dqb ;
};
#line 310  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct quota_format_ops {
   int (*check_quota_file)(struct super_block *, int ) ;
   int (*read_file_info)(struct super_block *, int ) ;
   int (*write_file_info)(struct super_block *, int ) ;
   int (*free_file_info)(struct super_block *, int ) ;
   int (*read_dqblk)(struct dquot *) ;
   int (*commit_dqblk)(struct dquot *) ;
   int (*release_dqblk)(struct dquot *) ;
   int (*get_next_id)(struct super_block *, struct kqid *) ;
};
#line 322  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct dquot_operations {
   int (*write_dquot)(struct dquot *) ;
   struct dquot *(*alloc_dquot)(struct super_block *, int ) ;
   void (*destroy_dquot)(struct dquot *) ;
   int (*acquire_dquot)(struct dquot *) ;
   int (*release_dquot)(struct dquot *) ;
   int (*mark_dirty)(struct dquot *) ;
   int (*write_info)(struct super_block *, int ) ;
   qsize_t *(*get_reserved_space)(struct inode *) ;
   int (*get_projid)(struct inode *, kprojid_t *) ;
   int (*get_inode_usage)(struct inode *, qsize_t *) ;
   int (*get_next_id)(struct super_block *, struct kqid *) ;
};
#line 343  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct qc_dqblk {
   int d_fieldmask ;
   u64 d_spc_hardlimit ;
   u64 d_spc_softlimit ;
   u64 d_ino_hardlimit ;
   u64 d_ino_softlimit ;
   u64 d_space ;
   u64 d_ino_count ;
   s64 d_ino_timer ;
   s64 d_spc_timer ;
   int d_ino_warns ;
   int d_spc_warns ;
   u64 d_rt_spc_hardlimit ;
   u64 d_rt_spc_softlimit ;
   u64 d_rt_space ;
   s64 d_rt_spc_timer ;
   int d_rt_spc_warns ;
};
#line 395  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct qc_type_state {
   unsigned int flags ;
   unsigned int spc_timelimit ;
   unsigned int ino_timelimit ;
   unsigned int rt_spc_timelimit ;
   unsigned int spc_warnlimit ;
   unsigned int ino_warnlimit ;
   unsigned int rt_spc_warnlimit ;
   unsigned long long ino ;
   blkcnt_t blocks ;
   blkcnt_t nextents ;
};
#line 409  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct qc_state {
   unsigned int s_incoredqs ;
   struct qc_type_state s_state[3U] ;
};
#line 415  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct qc_info {
   int i_fieldmask ;
   unsigned int i_flags ;
   unsigned int i_spc_timelimit ;
   unsigned int i_ino_timelimit ;
   unsigned int i_rt_spc_timelimit ;
   unsigned int i_spc_warnlimit ;
   unsigned int i_ino_warnlimit ;
   unsigned int i_rt_spc_warnlimit ;
};
#line 428  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct quotactl_ops {
   int (*quota_on)(struct super_block *, int , int , struct path *) ;
   int (*quota_off)(struct super_block *, int ) ;
   int (*quota_enable)(struct super_block *, unsigned int ) ;
   int (*quota_disable)(struct super_block *, unsigned int ) ;
   int (*quota_sync)(struct super_block *, int ) ;
   int (*set_info)(struct super_block *, int , struct qc_info *) ;
   int (*get_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*get_nextdqblk)(struct super_block *, struct kqid *, struct qc_dqblk *) ;
   int (*set_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*get_state)(struct super_block *, struct qc_state *) ;
   int (*rm_xquota)(struct super_block *, unsigned int ) ;
};
#line 443  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct quota_format_type {
   int qf_fmt_id ;
   struct quota_format_ops *qf_ops ;
   struct module *qf_owner ;
   struct quota_format_type *qf_next ;
};
#line 518  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct quota_info {
   unsigned int flags ;
   struct rw_semaphore dqio_sem ;
   struct inode *files[3U] ;
   struct mem_dqinfo info[3U] ;
   struct quota_format_ops *ops[3U] ;
};
#line 538 
enum rw_hint {
    WRITE_LIFE_NOT_SET = 0,
    WRITE_LIFE_NONE = 1,
    WRITE_LIFE_SHORT = 2,
    WRITE_LIFE_MEDIUM = 3,
    WRITE_LIFE_LONG = 4,
    WRITE_LIFE_EXTREME = 5
};
#line 318  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct kiocb {
   struct file *ki_filp ;
   loff_t ki_pos ;
   void (*ki_complete)(struct kiocb *, long , long ) ;
   void *private ;
   int ki_flags ;
   u16 ki_hint ;
   u16 ki_ioprio ;
   unsigned int ki_cookie ;
};
#line 339  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
union __anonunion_arg_422 {
   char *buf ;
   void *data ;
};
#line 339  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct __anonstruct_read_descriptor_t_421 {
   size_t written ;
   size_t count ;
   union __anonunion_arg_422 arg ;
   int error ;
};
#line 339  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
typedef struct __anonstruct_read_descriptor_t_421 read_descriptor_t;
#line 362  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct address_space_operations {
   int (*writepage)(struct page *, struct writeback_control *) ;
   int (*readpage)(struct file *, struct page *) ;
   int (*writepages)(struct address_space *, struct writeback_control *) ;
   int (*set_page_dirty)(struct page *) ;
   int (*readpages)(struct file *, struct address_space *, struct list_head *, unsigned int ) ;
   int (*write_begin)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page **, void **) ;
   int (*write_end)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page *, void *) ;
   sector_t (*bmap)(struct address_space *, sector_t ) ;
   void (*invalidatepage)(struct page *, unsigned int , unsigned int ) ;
   int (*releasepage)(struct page *, gfp_t ) ;
   void (*freepage)(struct page *) ;
   ssize_t (*direct_IO)(struct kiocb *, struct iov_iter *) ;
   int (*migratepage)(struct address_space *, struct page *, struct page *, enum migrate_mode ) ;
   bool (*isolate_page)(struct page *, isolate_mode_t ) ;
   void (*putback_page)(struct page *) ;
   int (*launder_page)(struct page *) ;
   int (*is_partially_uptodate)(struct page *, unsigned long , unsigned long ) ;
   void (*is_dirty_writeback)(struct page *, bool *, bool *) ;
   int (*error_remove_page)(struct address_space *, struct page *) ;
   int (*swap_activate)(struct swap_info_struct *, struct file *, sector_t *) ;
   void (*swap_deactivate)(struct file *) ;
};
#line 445  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct address_space {
   struct inode *host ;
   struct xarray i_pages ;
   gfp_t gfp_mask ;
   atomic_t i_mmap_writable ;
   atomic_t nr_thps ;
   struct rb_root_cached i_mmap ;
   struct rw_semaphore i_mmap_rwsem ;
   unsigned long nrpages ;
   unsigned long nrexceptional ;
   unsigned long writeback_index ;
   struct address_space_operations *a_ops ;
   unsigned long flags ;
   errseq_t wb_err ;
   spinlock_t private_lock ;
   struct list_head private_list ;
   void *private_data ;
} __attribute__((__designated_init__, __aligned__(8)));
#line 473 
struct hd_struct;
#line 473 
struct gendisk;
#line 473  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct block_device {
   dev_t bd_dev ;
   int bd_openers ;
   struct inode *bd_inode ;
   struct super_block *bd_super ;
   struct mutex bd_mutex ;
   void *bd_claiming ;
   void *bd_holder ;
   int bd_holders ;
   bool bd_write_holder ;
   struct list_head bd_holder_disks ;
   struct block_device *bd_contains ;
   unsigned int bd_block_size ;
   u8 bd_partno ;
   struct hd_struct *bd_part ;
   unsigned int bd_part_count ;
   int bd_invalidated ;
   struct gendisk *bd_disk ;
   struct request_queue *bd_queue ;
   struct backing_dev_info *bd_bdi ;
   struct list_head bd_list ;
   unsigned long bd_private ;
   int bd_fsfreeze_count ;
   struct mutex bd_fsfreeze_mutex ;
} __attribute__((__designated_init__));
#line 587 
struct posix_acl;
#line 614 
struct fsnotify_mark_connector;
#line 628 
struct inode_operations;
#line 628  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
union __anonunion_425 {
   unsigned int i_nlink ;
   unsigned int __i_nlink ;
};
#line 628  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
union __anonunion_426 {
   struct hlist_head i_dentry ;
   struct callback_head i_rcu ;
};
#line 628  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
union __anonunion_427 {
   struct file_operations *i_fop ;
   void (*free_inode)(struct inode *) ;
};
#line 628 
struct file_lock_context;
#line 628  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
union __anonunion_428 {
   struct pipe_inode_info *i_pipe ;
   struct block_device *i_bdev ;
   struct cdev *i_cdev ;
   char *i_link ;
   unsigned int i_dir_seq ;
};
#line 628  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct inode {
   umode_t i_mode ;
   unsigned short i_opflags ;
   kuid_t i_uid ;
   kgid_t i_gid ;
   unsigned int i_flags ;
   struct posix_acl *i_acl ;
   struct posix_acl *i_default_acl ;
   struct inode_operations *i_op ;
   struct super_block *i_sb ;
   struct address_space *i_mapping ;
   void *i_security ;
   unsigned long i_ino ;
   union __anonunion_425 __anonCompField_inode_64 ;
   dev_t i_rdev ;
   loff_t i_size ;
   struct timespec64 i_atime ;
   struct timespec64 i_mtime ;
   struct timespec64 i_ctime ;
   spinlock_t i_lock ;
   unsigned short i_bytes ;
   u8 i_blkbits ;
   u8 i_write_hint ;
   blkcnt_t i_blocks ;
   unsigned long i_state ;
   struct rw_semaphore i_rwsem ;
   unsigned long dirtied_when ;
   unsigned long dirtied_time_when ;
   struct hlist_node i_hash ;
   struct list_head i_io_list ;
   struct bdi_writeback *i_wb ;
   int i_wb_frn_winner ;
   u16 i_wb_frn_avg_time ;
   u16 i_wb_frn_history ;
   struct list_head i_lru ;
   struct list_head i_sb_list ;
   struct list_head i_wb_list ;
   union __anonunion_426 __anonCompField_inode_65 ;
   atomic64_t i_version ;
   atomic_t i_count ;
   atomic_t i_dio_count ;
   atomic_t i_writecount ;
   atomic_t i_readcount ;
   union __anonunion_427 __anonCompField_inode_66 ;
   struct file_lock_context *i_flctx ;
   struct address_space i_data ;
   struct list_head i_devices ;
   union __anonunion_428 __anonCompField_inode_67 ;
   __u32 i_generation ;
   __u32 i_fsnotify_mask ;
   struct fsnotify_mark_connector *i_fsnotify_marks ;
   struct fscrypt_info *i_crypt_info ;
   struct fsverity_info *i_verity_info ;
   void *i_private ;
} __attribute__((__designated_init__));
#line 904  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct fown_struct {
   rwlock_t lock ;
   struct pid *pid ;
   enum pid_type pid_type ;
   kuid_t uid ;
   kuid_t euid ;
   int signum ;
};
#line 915  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct file_ra_state {
   unsigned long start ;
   unsigned int size ;
   unsigned int async_size ;
   unsigned int ra_pages ;
   unsigned int mmap_miss ;
   loff_t prev_pos ;
};
#line 935  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
union __anonunion_f_u_429 {
   struct llist_node fu_llist ;
   struct callback_head fu_rcuhead ;
};
#line 935  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct file {
   union __anonunion_f_u_429 f_u ;
   struct path f_path ;
   struct inode *f_inode ;
   struct file_operations *f_op ;
   spinlock_t f_lock ;
   enum rw_hint f_write_hint ;
   atomic_long_t f_count ;
   unsigned int f_flags ;
   fmode_t f_mode ;
   struct mutex f_pos_lock ;
   loff_t f_pos ;
   struct fown_struct f_owner ;
   struct cred *f_cred ;
   struct file_ra_state f_ra ;
   u64 f_version ;
   void *f_security ;
   void *private_data ;
   struct list_head f_ep_links ;
   struct list_head f_tfile_llink ;
   struct address_space *f_mapping ;
   errseq_t f_wb_err ;
} __attribute__((__designated_init__, __aligned__(4)));
#line 988  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
typedef void *fl_owner_t;
#line 1026 
struct file_lock;
#line 1029  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct file_lock_operations {
   void (*fl_copy_lock)(struct file_lock *, struct file_lock *) ;
   void (*fl_release_private)(struct file_lock *) ;
};
#line 1034  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct lock_manager_operations {
   fl_owner_t (*lm_get_owner)(fl_owner_t ) ;
   void (*lm_put_owner)(fl_owner_t ) ;
   void (*lm_notify)(struct file_lock *) ;
   int (*lm_grant)(struct file_lock *, int ) ;
   bool (*lm_break)(struct file_lock *) ;
   int (*lm_change)(struct file_lock *, int , struct list_head *) ;
   void (*lm_setup)(struct file_lock *, void **) ;
};
#line 1052 
struct net;
#line 1058 
struct nlm_lockowner;
#line 10  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/nfs_fs_i.h"
struct nfs_lock_info {
   u32 state ;
   struct nlm_lockowner *owner ;
   struct list_head list ;
};
#line 15 
struct nfs4_lock_state;
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/nfs_fs_i.h"
struct nfs4_lock_info {
   struct nfs4_lock_state *owner ;
};
#line 1079  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct fasync_struct;
#line 1079  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct __anonstruct_afs_431 {
   struct list_head link ;
   int state ;
   unsigned int debug_id ;
};
#line 1079  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
union __anonunion_fl_u_430 {
   struct nfs_lock_info nfs_fl ;
   struct nfs4_lock_info nfs4_fl ;
   struct __anonstruct_afs_431 afs ;
};
#line 1079  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct file_lock {
   struct file_lock *fl_blocker ;
   struct list_head fl_list ;
   struct hlist_node fl_link ;
   struct list_head fl_blocked_requests ;
   struct list_head fl_blocked_member ;
   fl_owner_t fl_owner ;
   unsigned int fl_flags ;
   unsigned char fl_type ;
   unsigned int fl_pid ;
   int fl_link_cpu ;
   wait_queue_head_t fl_wait ;
   struct file *fl_file ;
   loff_t fl_start ;
   loff_t fl_end ;
   struct fasync_struct *fl_fasync ;
   unsigned long fl_break_time ;
   unsigned long fl_downgrade_time ;
   struct file_lock_operations *fl_ops ;
   struct lock_manager_operations *fl_lmops ;
   union __anonunion_fl_u_430 fl_u ;
} __attribute__((__designated_init__));
#line 1117  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct file_lock_context {
   spinlock_t flc_lock ;
   struct list_head flc_flock ;
   struct list_head flc_posix ;
   struct list_head flc_lease ;
};
#line 1331  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct fasync_struct {
   rwlock_t fa_lock ;
   int magic ;
   int fa_fd ;
   struct fasync_struct *fa_next ;
   struct file *fa_file ;
   struct callback_head fa_rcu ;
};
#line 1418  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct sb_writers {
   int frozen ;
   wait_queue_head_t wait_unfrozen ;
   struct percpu_rw_semaphore rw_sem[3U] ;
};
#line 1424 
struct super_operations;
#line 1424 
struct xattr_handler;
#line 1424 
struct mtd_info;
#line 1424  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct super_block {
   struct list_head s_list ;
   dev_t s_dev ;
   unsigned char s_blocksize_bits ;
   unsigned long s_blocksize ;
   loff_t s_maxbytes ;
   struct file_system_type *s_type ;
   struct super_operations *s_op ;
   struct dquot_operations *dq_op ;
   struct quotactl_ops *s_qcop ;
   struct export_operations *s_export_op ;
   unsigned long s_flags ;
   unsigned long s_iflags ;
   unsigned long s_magic ;
   struct dentry *s_root ;
   struct rw_semaphore s_umount ;
   int s_count ;
   atomic_t s_active ;
   void *s_security ;
   struct xattr_handler **s_xattr ;
   struct fscrypt_operations *s_cop ;
   struct key *s_master_keys ;
   struct fsverity_operations *s_vop ;
   struct hlist_bl_head s_roots ;
   struct list_head s_mounts ;
   struct block_device *s_bdev ;
   struct backing_dev_info *s_bdi ;
   struct mtd_info *s_mtd ;
   struct hlist_node s_instances ;
   unsigned int s_quota_types ;
   struct quota_info s_dquot ;
   struct sb_writers s_writers ;
   void *s_fs_info ;
   u32 s_time_gran ;
   time64_t s_time_min ;
   time64_t s_time_max ;
   __u32 s_fsnotify_mask ;
   struct fsnotify_mark_connector *s_fsnotify_marks ;
   char s_id[32U] ;
   uuid_t s_uuid ;
   unsigned int s_max_links ;
   fmode_t s_mode ;
   struct mutex s_vfs_rename_mutex ;
   char *s_subtype ;
   struct dentry_operations *s_d_op ;
   int cleancache_poolid ;
   struct shrinker s_shrink ;
   atomic_long_t s_remove_count ;
   atomic_long_t s_fsnotify_inode_refs ;
   int s_readonly_remount ;
   struct workqueue_struct *s_dio_done_wq ;
   struct hlist_head s_pins ;
   struct user_namespace *s_user_ns ;
   struct list_lru s_dentry_lru ;
   struct list_lru s_inode_lru ;
   struct callback_head rcu ;
   struct work_struct destroy_work ;
   struct mutex s_sync_lock ;
   int s_stack_depth ;
   spinlock_t s_inode_list_lock ;
   struct list_head s_inodes ;
   spinlock_t s_inode_wblist_lock ;
   struct list_head s_inodes_wb ;
} __attribute__((__designated_init__));
#line 1746  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct fiemap_extent_info {
   unsigned int fi_flags ;
   unsigned int fi_extents_mapped ;
   unsigned int fi_extents_max ;
   struct fiemap_extent *fi_extents_start ;
};
#line 1756 
struct dir_context;
#line 1767  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct dir_context {
   int (*actor)(struct dir_context *, char *, int , loff_t , u64 , unsigned int ) ;
   loff_t pos ;
};
#line 1771 
struct block_device_operations;
#line 1821  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct file_operations {
   struct module *owner ;
   loff_t (*llseek)(struct file *, loff_t , int ) ;
   ssize_t (*read)(struct file *, char *, size_t , loff_t *) ;
   ssize_t (*write)(struct file *, char *, size_t , loff_t *) ;
   ssize_t (*read_iter)(struct kiocb *, struct iov_iter *) ;
   ssize_t (*write_iter)(struct kiocb *, struct iov_iter *) ;
   int (*iopoll)(struct kiocb *, bool ) ;
   int (*iterate)(struct file *, struct dir_context *) ;
   int (*iterate_shared)(struct file *, struct dir_context *) ;
   __poll_t (*poll)(struct file *, struct poll_table_struct *) ;
   long (*unlocked_ioctl)(struct file *, unsigned int , unsigned long ) ;
   long (*compat_ioctl)(struct file *, unsigned int , unsigned long ) ;
   int (*mmap)(struct file *, struct vm_area_struct *) ;
   unsigned long mmap_supported_flags ;
   int (*open)(struct inode *, struct file *) ;
   int (*flush)(struct file *, fl_owner_t ) ;
   int (*release)(struct inode *, struct file *) ;
   int (*fsync)(struct file *, loff_t , loff_t , int ) ;
   int (*fasync)(int , struct file *, int ) ;
   int (*lock)(struct file *, int , struct file_lock *) ;
   ssize_t (*sendpage)(struct file *, struct page *, int , size_t , loff_t *, int ) ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   int (*check_flags)(int ) ;
   int (*flock)(struct file *, int , struct file_lock *) ;
   ssize_t (*splice_write)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ) ;
   ssize_t (*splice_read)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ) ;
   int (*setlease)(struct file *, long , struct file_lock **, void **) ;
   long (*fallocate)(struct file *, int , loff_t , loff_t ) ;
   void (*show_fdinfo)(struct seq_file *, struct file *) ;
   ssize_t (*copy_file_range)(struct file *, loff_t , struct file *, loff_t , size_t , unsigned int ) ;
   loff_t (*remap_file_range)(struct file *, loff_t , struct file *, loff_t , loff_t , unsigned int ) ;
   int (*fadvise)(struct file *, loff_t , loff_t , int ) ;
} __attribute__((__designated_init__));
#line 1863  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct inode_operations {
   struct dentry *(*lookup)(struct inode *, struct dentry *, unsigned int ) ;
   char *(*get_link)(struct dentry *, struct inode *, struct delayed_call *) ;
   int (*permission)(struct inode *, int ) ;
   struct posix_acl *(*get_acl)(struct inode *, int ) ;
   int (*readlink)(struct dentry *, char *, int ) ;
   int (*create)(struct inode *, struct dentry *, umode_t , bool ) ;
   int (*link)(struct dentry *, struct inode *, struct dentry *) ;
   int (*unlink)(struct inode *, struct dentry *) ;
   int (*symlink)(struct inode *, struct dentry *, char *) ;
   int (*mkdir)(struct inode *, struct dentry *, umode_t ) ;
   int (*rmdir)(struct inode *, struct dentry *) ;
   int (*mknod)(struct inode *, struct dentry *, umode_t , dev_t ) ;
   int (*rename)(struct inode *, struct dentry *, struct inode *, struct dentry *, unsigned int ) ;
   int (*setattr)(struct dentry *, struct iattr *) ;
   int (*getattr)(struct path *, struct kstat *, u32 , unsigned int ) ;
   ssize_t (*listxattr)(struct dentry *, char *, size_t ) ;
   int (*fiemap)(struct inode *, struct fiemap_extent_info *, u64 , u64 ) ;
   int (*update_time)(struct inode *, struct timespec64 *, int ) ;
   int (*atomic_open)(struct inode *, struct dentry *, struct file *, unsigned int , umode_t ) ;
   int (*tmpfile)(struct inode *, struct dentry *, umode_t ) ;
   int (*set_acl)(struct inode *, struct posix_acl *, int ) ;
} __attribute__((__aligned__(64)));
#line 1942  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct super_operations {
   struct inode *(*alloc_inode)(struct super_block *) ;
   void (*destroy_inode)(struct inode *) ;
   void (*free_inode)(struct inode *) ;
   void (*dirty_inode)(struct inode *, int ) ;
   int (*write_inode)(struct inode *, struct writeback_control *) ;
   int (*drop_inode)(struct inode *) ;
   void (*evict_inode)(struct inode *) ;
   void (*put_super)(struct super_block *) ;
   int (*sync_fs)(struct super_block *, int ) ;
   int (*freeze_super)(struct super_block *) ;
   int (*freeze_fs)(struct super_block *) ;
   int (*thaw_super)(struct super_block *) ;
   int (*unfreeze_fs)(struct super_block *) ;
   int (*statfs)(struct dentry *, struct kstatfs *) ;
   int (*remount_fs)(struct super_block *, int *, char *) ;
   void (*umount_begin)(struct super_block *) ;
   int (*show_options)(struct seq_file *, struct dentry *) ;
   int (*show_devname)(struct seq_file *, struct dentry *) ;
   int (*show_path)(struct seq_file *, struct dentry *) ;
   int (*show_stats)(struct seq_file *, struct dentry *) ;
   ssize_t (*quota_read)(struct super_block *, int , char *, size_t , loff_t ) ;
   ssize_t (*quota_write)(struct super_block *, int , char *, size_t , loff_t ) ;
   struct dquot **(*get_dquots)(struct inode *) ;
   int (*bdev_try_to_free_page)(struct super_block *, struct page *, gfp_t ) ;
   long (*nr_cached_objects)(struct super_block *, struct shrink_control *) ;
   long (*free_cached_objects)(struct super_block *, struct shrink_control *) ;
};
#line 2217  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct file_system_type {
   char *name ;
   int fs_flags ;
   int (*init_fs_context)(struct fs_context *) ;
   struct fs_parameter_description *parameters ;
   struct dentry *(*mount)(struct file_system_type *, int , char *, void *) ;
   void (*kill_sb)(struct super_block *) ;
   struct module *owner ;
   struct file_system_type *next ;
   struct hlist_head fs_supers ;
   struct lock_class_key s_lock_key ;
   struct lock_class_key s_umount_key ;
   struct lock_class_key s_vfs_rename_key ;
   struct lock_class_key s_writers_key[3U] ;
   struct lock_class_key i_lock_key ;
   struct lock_class_key i_mutex_key ;
   struct lock_class_key i_mutex_dir_key ;
};
#line 1565  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm.h"
struct kvec;
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bvec.h"
struct bio_vec {
   struct page *bv_page ;
   unsigned int bv_len ;
   unsigned int bv_offset ;
};
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bvec.h"
struct bvec_iter {
   sector_t bi_sector ;
   unsigned int bi_size ;
   unsigned int bi_idx ;
   unsigned int bi_bvec_done ;
};
#line 155 
struct scatterlist;
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/uio.h"
struct iovec {
   void *iov_base ;
   __kernel_size_t iov_len ;
};
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uio.h"
struct kvec {
   void *iov_base ;
   size_t iov_len ;
};
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uio.h"
union __anonunion_445 {
   struct iovec *iov ;
   struct kvec *kvec ;
   struct bio_vec *bvec ;
   struct pipe_inode_info *pipe ;
};
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uio.h"
struct __anonstruct_447 {
   unsigned int head ;
   unsigned int start_head ;
};
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uio.h"
union __anonunion_446 {
   unsigned long nr_segs ;
   struct __anonstruct_447 __anonCompField___anonunion_446_69 ;
};
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uio.h"
struct iov_iter {
   unsigned int type ;
   size_t iov_offset ;
   size_t count ;
   union __anonunion_445 __anonCompField_iov_iter_68 ;
   union __anonunion_446 __anonCompField_iov_iter_70 ;
};
#line 285  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uio.h"
typedef unsigned short __kernel_sa_family_t;
#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/socket.h"
struct socket;
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/socket.h"
typedef __kernel_sa_family_t sa_family_t;
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/socket.h"
struct sockaddr {
   sa_family_t sa_family ;
   char sa_data[14U] ;
};
#line 49  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/socket.h"
struct msghdr {
   void *msg_name ;
   int msg_namelen ;
   struct iov_iter msg_iter ;
   void *msg_control ;
   __kernel_size_t msg_controllen ;
   unsigned int msg_flags ;
   struct kiocb *msg_iocb ;
};
#line 422 
struct ns_common;
#line 201  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/random.h"
enum ldv_9727 {
    SS_FREE = 0,
    SS_UNCONNECTED = 1,
    SS_CONNECTING = 2,
    SS_CONNECTED = 3,
    SS_DISCONNECTING = 4
};
#line 209  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/random.h"
typedef enum ldv_9727 socket_state;
#line 94  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/net.h"
struct socket_wq {
   wait_queue_head_t wait ;
   struct fasync_struct *fasync_list ;
   unsigned long flags ;
   struct callback_head rcu ;
} __attribute__((__aligned__(64)));
#line 112 
struct proto_ops;
#line 112  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/net.h"
struct socket {
   socket_state state ;
   short type ;
   unsigned long flags ;
   struct file *file ;
   struct sock *sk ;
   struct proto_ops *ops ;
   struct socket_wq wq ;
};
#line 125 
struct sk_buff;
#line 135  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/net.h"
struct proto_ops {
   int family ;
   struct module *owner ;
   int (*release)(struct socket *) ;
   int (*bind)(struct socket *, struct sockaddr *, int ) ;
   int (*connect)(struct socket *, struct sockaddr *, int , int ) ;
   int (*socketpair)(struct socket *, struct socket *) ;
   int (*accept)(struct socket *, struct socket *, int , bool ) ;
   int (*getname)(struct socket *, struct sockaddr *, int ) ;
   __poll_t (*poll)(struct file *, struct socket *, struct poll_table_struct *) ;
   int (*ioctl)(struct socket *, unsigned int , unsigned long ) ;
   int (*compat_ioctl)(struct socket *, unsigned int , unsigned long ) ;
   int (*gettstamp)(struct socket *, void *, bool , bool ) ;
   int (*listen)(struct socket *, int ) ;
   int (*shutdown)(struct socket *, int ) ;
   int (*setsockopt)(struct socket *, int , int , char *, unsigned int ) ;
   int (*getsockopt)(struct socket *, int , int , char *, int *) ;
   int (*compat_setsockopt)(struct socket *, int , int , char *, unsigned int ) ;
   int (*compat_getsockopt)(struct socket *, int , int , char *, int *) ;
   int (*sendmsg)(struct socket *, struct msghdr *, size_t ) ;
   int (*recvmsg)(struct socket *, struct msghdr *, size_t , int ) ;
   int (*mmap)(struct file *, struct socket *, struct vm_area_struct *) ;
   ssize_t (*sendpage)(struct socket *, struct page *, int , size_t , int ) ;
   ssize_t (*splice_read)(struct socket *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ) ;
   int (*set_peek_off)(struct sock *, int ) ;
   int (*peek_len)(struct socket *) ;
   int (*read_sock)(struct sock *, read_descriptor_t *, int (*)(read_descriptor_t *, struct sk_buff *, unsigned int , size_t )) ;
   int (*sendpage_locked)(struct sock *, struct page *, int , size_t , int ) ;
   int (*sendmsg_locked)(struct sock *, struct msghdr *, size_t ) ;
   int (*set_rcvlowat)(struct sock *, int ) ;
};
#line 162  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/checksum_64.h"
struct in6_addr;
#line 71  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dma-debug.h"
enum dma_data_direction {
    DMA_BIDIRECTIONAL = 0,
    DMA_TO_DEVICE = 1,
    DMA_FROM_DEVICE = 2,
    DMA_NONE = 3
};
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/scatterlist.h"
struct scatterlist {
   unsigned long page_link ;
   unsigned int offset ;
   unsigned int length ;
   dma_addr_t dma_address ;
   unsigned int dma_length ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/scatterlist.h"
struct sg_table {
   struct scatterlist *sgl ;
   unsigned int nents ;
   unsigned int orig_nents ;
};
#line 76  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dma-mapping.h"
struct dma_map_ops {
   void *(*alloc)(struct device *, size_t , dma_addr_t *, gfp_t , unsigned long ) ;
   void (*free)(struct device *, size_t , void *, dma_addr_t , unsigned long ) ;
   int (*mmap)(struct device *, struct vm_area_struct *, void *, dma_addr_t , size_t , unsigned long ) ;
   int (*get_sgtable)(struct device *, struct sg_table *, void *, dma_addr_t , size_t , unsigned long ) ;
   dma_addr_t (*map_page)(struct device *, struct page *, unsigned long , size_t , enum dma_data_direction , unsigned long ) ;
   void (*unmap_page)(struct device *, dma_addr_t , size_t , enum dma_data_direction , unsigned long ) ;
   int (*map_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , unsigned long ) ;
   void (*unmap_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , unsigned long ) ;
   dma_addr_t (*map_resource)(struct device *, phys_addr_t , size_t , enum dma_data_direction , unsigned long ) ;
   void (*unmap_resource)(struct device *, dma_addr_t , size_t , enum dma_data_direction , unsigned long ) ;
   void (*sync_single_for_cpu)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_single_for_device)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_sg_for_cpu)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   void (*sync_sg_for_device)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   void (*cache_sync)(struct device *, void *, size_t , enum dma_data_direction ) ;
   int (*dma_supported)(struct device *, u64 ) ;
   u64 (*get_required_mask)(struct device *) ;
   size_t (*max_mapping_size)(struct device *) ;
   unsigned long (*get_merge_boundary)(struct device *) ;
};
#line 803  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dma-mapping.h"
typedef u64 netdev_features_t;
#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/in6.h"
union __anonunion_in6_u_466 {
   __u8 u6_addr8[16U] ;
   __be16 u6_addr16[8U] ;
   __be32 u6_addr32[4U] ;
};
#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/in6.h"
struct in6_addr {
   union __anonunion_in6_u_466 in6_u ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/in6.h"
struct __anonstruct_siphash_key_t_467 {
   u64 key[2U] ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/in6.h"
typedef struct __anonstruct_siphash_key_t_467 siphash_key_t;
#line 163  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if_ether.h"
struct ethhdr {
   unsigned char h_dest[6U] ;
   unsigned char h_source[6U] ;
   __be16 h_proto ;
} __attribute__((__packed__));
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pipe_fs_i.h"
struct pipe_buf_operations;
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pipe_fs_i.h"
struct pipe_buffer {
   struct page *page ;
   unsigned int offset ;
   unsigned int len ;
   struct pipe_buf_operations *ops ;
   unsigned int flags ;
   unsigned long private ;
};
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pipe_fs_i.h"
struct pipe_inode_info {
   struct mutex mutex ;
   wait_queue_head_t wait ;
   unsigned int head ;
   unsigned int tail ;
   unsigned int max_usage ;
   unsigned int ring_size ;
   unsigned int readers ;
   unsigned int writers ;
   unsigned int files ;
   unsigned int r_counter ;
   unsigned int w_counter ;
   struct page *tmp_page ;
   struct fasync_struct *fasync_readers ;
   struct fasync_struct *fasync_writers ;
   struct pipe_buffer *bufs ;
   struct user_struct *user ;
};
#line 77  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pipe_fs_i.h"
struct pipe_buf_operations {
   int (*confirm)(struct pipe_inode_info *, struct pipe_buffer *) ;
   void (*release)(struct pipe_inode_info *, struct pipe_buffer *) ;
   int (*steal)(struct pipe_inode_info *, struct pipe_buffer *) ;
   bool (*get)(struct pipe_inode_info *, struct pipe_buffer *) ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct flowi_tunnel {
   __be64 tun_id ;
};
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct flowi_common {
   int flowic_oif ;
   int flowic_iif ;
   __u32 flowic_mark ;
   __u8 flowic_tos ;
   __u8 flowic_scope ;
   __u8 flowic_proto ;
   __u8 flowic_flags ;
   __u32 flowic_secid ;
   kuid_t flowic_uid ;
   struct flowi_tunnel flowic_tun_key ;
   __u32 flowic_multipath_hash ;
};
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct __anonstruct_ports_478 {
   __be16 dport ;
   __be16 sport ;
};
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct __anonstruct_icmpt_479 {
   __u8 type ;
   __u8 code ;
};
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct __anonstruct_dnports_480 {
   __le16 dport ;
   __le16 sport ;
};
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct __anonstruct_mht_481 {
   __u8 type ;
};
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
union flowi_uli {
   struct __anonstruct_ports_478 ports ;
   struct __anonstruct_icmpt_479 icmpt ;
   struct __anonstruct_dnports_480 dnports ;
   __be32 spi ;
   __be32 gre_key ;
   struct __anonstruct_mht_481 mht ;
};
#line 70  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct flowi4 {
   struct flowi_common __fl_common ;
   __be32 saddr ;
   __be32 daddr ;
   union flowi_uli uli ;
} __attribute__((__aligned__(8)));
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct flowi6 {
   struct flowi_common __fl_common ;
   struct in6_addr daddr ;
   struct in6_addr saddr ;
   __be32 flowlabel ;
   union flowi_uli uli ;
   __u32 mp_hash ;
} __attribute__((__aligned__(8)));
#line 158  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct flowidn {
   struct flowi_common __fl_common ;
   __le16 daddr ;
   __le16 saddr ;
   union flowi_uli uli ;
} __attribute__((__aligned__(8)));
#line 173  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
union __anonunion_u_482 {
   struct flowi_common __fl_common ;
   struct flowi4 ip4 ;
   struct flowi6 ip6 ;
   struct flowidn dn ;
};
#line 173  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct flowi {
   union __anonunion_u_482 u ;
} __attribute__((__aligned__(8)));
#line 8  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netfilter/nf_conntrack_common.h"
struct ip_conntrack_stat {
   unsigned int found ;
   unsigned int invalid ;
   unsigned int ignore ;
   unsigned int insert ;
   unsigned int insert_failed ;
   unsigned int drop ;
   unsigned int early_drop ;
   unsigned int error ;
   unsigned int expect_new ;
   unsigned int expect_create ;
   unsigned int expect_delete ;
   unsigned int search_restart ;
};
#line 42 
struct bpf_prog;
#line 43 
union bpf_attr;
#line 44 
struct skb_ext;
#line 289  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
struct sk_buff_head {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   __u32 qlen ;
   spinlock_t lock ;
};
#line 562  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
typedef unsigned int sk_buff_data_t;
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_489 {
   struct net_device *dev ;
   unsigned long dev_scratch ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
struct __anonstruct_488 {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   union __anonunion_489 __anonCompField___anonstruct_488_85 ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_487 {
   struct __anonstruct_488 __anonCompField___anonunion_487_86 ;
   struct rb_node rbnode ;
   struct list_head list ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_490 {
   struct sock *sk ;
   int ip_defrag_offset ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_491 {
   ktime_t tstamp ;
   u64 skb_mstamp_ns ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
struct __anonstruct_493 {
   unsigned long _skb_refdst ;
   void (*destructor)(struct sk_buff *) ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_492 {
   struct __anonstruct_493 __anonCompField___anonunion_492_90 ;
   struct list_head tcp_tsorted_anchor ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
struct __anonstruct_495 {
   __u16 csum_start ;
   __u16 csum_offset ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_494 {
   __wsum csum ;
   struct __anonstruct_495 __anonCompField___anonunion_494_92 ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_496 {
   unsigned int napi_id ;
   unsigned int sender_cpu ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_497 {
   __u32 mark ;
   __u32 reserved_tailroom ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_498 {
   __be16 inner_protocol ;
   __u8 inner_ipproto ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
struct sk_buff {
   union __anonunion_487 __anonCompField_sk_buff_87 ;
   union __anonunion_490 __anonCompField_sk_buff_88 ;
   union __anonunion_491 __anonCompField_sk_buff_89 ;
   char cb[48U] ;
   union __anonunion_492 __anonCompField_sk_buff_91 ;
   unsigned long _nfct ;
   unsigned int len ;
   unsigned int data_len ;
   __u16 mac_len ;
   __u16 hdr_len ;
   __u16 queue_mapping ;
   __u8 __cloned_offset[0U] ;
   __u8 cloned : 1 ;
   __u8 nohdr : 1 ;
   __u8 fclone : 2 ;
   __u8 peeked : 1 ;
   __u8 head_frag : 1 ;
   __u8 pfmemalloc : 1 ;
   __u8 active_extensions ;
   __u32 headers_start[0U] ;
   __u8 __pkt_type_offset[0U] ;
   __u8 pkt_type : 3 ;
   __u8 ignore_df : 1 ;
   __u8 nf_trace : 1 ;
   __u8 ip_summed : 2 ;
   __u8 ooo_okay : 1 ;
   __u8 l4_hash : 1 ;
   __u8 sw_hash : 1 ;
   __u8 wifi_acked_valid : 1 ;
   __u8 wifi_acked : 1 ;
   __u8 no_fcs : 1 ;
   __u8 encapsulation : 1 ;
   __u8 encap_hdr_csum : 1 ;
   __u8 csum_valid : 1 ;
   __u8 __pkt_vlan_present_offset[0U] ;
   __u8 vlan_present : 1 ;
   __u8 csum_complete_sw : 1 ;
   __u8 csum_level : 2 ;
   __u8 csum_not_inet : 1 ;
   __u8 dst_pending_confirm : 1 ;
   __u8 ndisc_nodetype : 2 ;
   __u8 ipvs_property : 1 ;
   __u8 inner_protocol_type : 1 ;
   __u8 remcsum_offload : 1 ;
   __u8 offload_fwd_mark : 1 ;
   __u8 offload_l3_fwd_mark : 1 ;
   __u8 tc_skip_classify : 1 ;
   __u8 tc_at_ingress : 1 ;
   __u8 tc_redirected : 1 ;
   __u8 tc_from_ingress : 1 ;
   __u8 decrypted : 1 ;
   __u16 tc_index ;
   union __anonunion_494 __anonCompField_sk_buff_93 ;
   __u32 priority ;
   int skb_iif ;
   __u32 hash ;
   __be16 vlan_proto ;
   __u16 vlan_tci ;
   union __anonunion_496 __anonCompField_sk_buff_94 ;
   __u32 secmark ;
   union __anonunion_497 __anonCompField_sk_buff_95 ;
   union __anonunion_498 __anonCompField_sk_buff_96 ;
   __u16 inner_transport_header ;
   __u16 inner_network_header ;
   __u16 inner_mac_header ;
   __be16 protocol ;
   __u16 transport_header ;
   __u16 network_header ;
   __u16 mac_header ;
   __u32 headers_end[0U] ;
   sk_buff_data_t tail ;
   sk_buff_data_t end ;
   unsigned char *head ;
   unsigned char *data ;
   unsigned int truesize ;
   refcount_t users ;
   struct skb_ext *extensions ;
};
#line 920 
struct dst_entry;
#line 4108  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
struct skb_ext {
   refcount_t refcnt ;
   u8 offset[3U] ;
   u8 chunks ;
   char data[0U] ;
};
#line 4519  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
typedef unsigned long kernel_ulong_t;
#line 121  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mod_devicetable.h"
struct usb_device_id {
   __u16 match_flags ;
   __u16 idVendor ;
   __u16 idProduct ;
   __u16 bcdDevice_lo ;
   __u16 bcdDevice_hi ;
   __u8 bDeviceClass ;
   __u8 bDeviceSubClass ;
   __u8 bDeviceProtocol ;
   __u8 bInterfaceClass ;
   __u8 bInterfaceSubClass ;
   __u8 bInterfaceProtocol ;
   __u8 bInterfaceNumber ;
   kernel_ulong_t driver_info ;
};
#line 210  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mod_devicetable.h"
struct acpi_device_id {
   __u8 id[9U] ;
   kernel_ulong_t driver_data ;
   __u32 cls ;
   __u32 cls_msk ;
};
#line 260  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mod_devicetable.h"
struct of_device_id {
   char name[32U] ;
   char type[32U] ;
   char compatible[128U] ;
   void *data ;
};
#line 289  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
struct usb_device_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __le16 bcdUSB ;
   __u8 bDeviceClass ;
   __u8 bDeviceSubClass ;
   __u8 bDeviceProtocol ;
   __u8 bMaxPacketSize0 ;
   __le16 idVendor ;
   __le16 idProduct ;
   __le16 bcdDevice ;
   __u8 iManufacturer ;
   __u8 iProduct ;
   __u8 iSerialNumber ;
   __u8 bNumConfigurations ;
} __attribute__((__packed__));
#line 345  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
struct usb_config_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __le16 wTotalLength ;
   __u8 bNumInterfaces ;
   __u8 bConfigurationValue ;
   __u8 iConfiguration ;
   __u8 bmAttributes ;
   __u8 bMaxPower ;
} __attribute__((__packed__));
#line 382  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
struct usb_interface_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __u8 bInterfaceNumber ;
   __u8 bAlternateSetting ;
   __u8 bNumEndpoints ;
   __u8 bInterfaceClass ;
   __u8 bInterfaceSubClass ;
   __u8 bInterfaceProtocol ;
   __u8 iInterface ;
} __attribute__((__packed__));
#line 400  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
struct usb_endpoint_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __u8 bEndpointAddress ;
   __u8 bmAttributes ;
   __le16 wMaxPacketSize ;
   __u8 bInterval ;
   __u8 bRefresh ;
   __u8 bSynchAddress ;
} __attribute__((__packed__));
#line 670  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
struct usb_ssp_isoc_ep_comp_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __le16 wReseved ;
   __le32 dwBytesPerInterval ;
} __attribute__((__packed__));
#line 682  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
struct usb_ss_ep_comp_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __u8 bMaxBurst ;
   __u8 bmAttributes ;
   __le16 wBytesPerInterval ;
} __attribute__((__packed__));
#line 776  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
struct usb_interface_assoc_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __u8 bFirstInterface ;
   __u8 bInterfaceCount ;
   __u8 bFunctionClass ;
   __u8 bFunctionSubClass ;
   __u8 bFunctionProtocol ;
   __u8 iFunction ;
} __attribute__((__packed__));
#line 837  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
struct usb_bos_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __le16 wTotalLength ;
   __u8 bNumDeviceCaps ;
} __attribute__((__packed__));
#line 888  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
struct usb_ext_cap_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __u8 bDevCapabilityType ;
   __le32 bmAttributes ;
} __attribute__((__packed__));
#line 910  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
struct usb_ss_cap_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __u8 bDevCapabilityType ;
   __u8 bmAttributes ;
   __le16 wSpeedSupported ;
   __u8 bFunctionalitySupport ;
   __u8 bU1devExitLat ;
   __le16 bU2DevExitLat ;
} __attribute__((__packed__));
#line 933  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
struct usb_ss_container_id_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __u8 bDevCapabilityType ;
   __u8 bReserved ;
   __u8 ContainerID[16U] ;
} __attribute__((__packed__));
#line 948  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
struct usb_ssp_cap_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __u8 bDevCapabilityType ;
   __u8 bReserved ;
   __le32 bmAttributes ;
   __le16 wFunctionalitySupport ;
   __le16 wReserved ;
   __le32 bmSublinkSpeedAttr[1U] ;
} __attribute__((__packed__));
#line 1073  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
struct usb_ptm_cap_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __u8 bDevCapabilityType ;
} __attribute__((__packed__));
#line 1134 
enum usb_device_speed {
    USB_SPEED_UNKNOWN = 0,
    USB_SPEED_LOW = 1,
    USB_SPEED_FULL = 2,
    USB_SPEED_HIGH = 3,
    USB_SPEED_WIRELESS = 4,
    USB_SPEED_SUPER = 5,
    USB_SPEED_SUPER_PLUS = 6
};
#line 1144 
enum usb_device_state {
    USB_STATE_NOTATTACHED = 0,
    USB_STATE_ATTACHED = 1,
    USB_STATE_POWERED = 2,
    USB_STATE_RECONNECTING = 3,
    USB_STATE_UNAUTHENTICATED = 4,
    USB_STATE_DEFAULT = 5,
    USB_STATE_ADDRESS = 6,
    USB_STATE_CONFIGURED = 7,
    USB_STATE_SUSPENDED = 8
};
#line 110  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/interrupt.h"
struct proc_dir_entry;
#line 604  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/interrupt.h"
struct tasklet_struct {
   struct tasklet_struct *next ;
   unsigned long state ;
   atomic_t count ;
   void (*func)(unsigned long ) ;
   unsigned long data ;
};
#line 279  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pm_runtime.h"
struct usb_device;
#line 280 
struct usb_driver;
#line 281 
struct wusb_dev;
#line 282 
struct ep_device;
#line 67  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb_host_endpoint {
   struct usb_endpoint_descriptor desc ;
   struct usb_ss_ep_comp_descriptor ss_ep_comp ;
   struct usb_ssp_isoc_ep_comp_descriptor ssp_isoc_ep_comp ;
   struct list_head urb_list ;
   void *hcpriv ;
   struct ep_device *ep_dev ;
   unsigned char *extra ;
   int extralen ;
   int enabled ;
   int streams ;
};
#line 82  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb_host_interface {
   struct usb_interface_descriptor desc ;
   int extralen ;
   unsigned char *extra ;
   struct usb_host_endpoint *endpoint ;
   char *string ;
};
#line 95 
enum usb_interface_condition {
    USB_INTERFACE_UNBOUND = 0,
    USB_INTERFACE_BINDING = 1,
    USB_INTERFACE_BOUND = 2,
    USB_INTERFACE_UNBINDING = 3
};
#line 232  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb_interface {
   struct usb_host_interface *altsetting ;
   struct usb_host_interface *cur_altsetting ;
   unsigned int num_altsetting ;
   struct usb_interface_assoc_descriptor *intf_assoc ;
   int minor ;
   enum usb_interface_condition condition ;
   unsigned int sysfs_files_created : 1 ;
   unsigned int ep_devs_created : 1 ;
   unsigned int unregistering : 1 ;
   unsigned int needs_remote_wakeup : 1 ;
   unsigned int needs_altsetting0 : 1 ;
   unsigned int needs_binding : 1 ;
   unsigned int resetting_device : 1 ;
   unsigned int authorized : 1 ;
   struct device dev ;
   struct device *usb_dev ;
   struct work_struct reset_ws ;
};
#line 322  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb_interface_cache {
   unsigned int num_altsetting ;
   struct kref ref ;
   struct usb_host_interface altsetting[0U] ;
};
#line 374  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb_host_config {
   struct usb_config_descriptor desc ;
   char *string ;
   struct usb_interface_assoc_descriptor *intf_assoc[16U] ;
   struct usb_interface *interface[32U] ;
   struct usb_interface_cache *intf_cache[32U] ;
   unsigned char *extra ;
   int extralen ;
};
#line 396  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb_host_bos {
   struct usb_bos_descriptor *desc ;
   struct usb_ext_cap_descriptor *ext_cap ;
   struct usb_ss_cap_descriptor *ss_cap ;
   struct usb_ssp_cap_descriptor *ssp_cap ;
   struct usb_ss_container_id_descriptor *ss_id ;
   struct usb_ptm_cap_descriptor *ptm_cap ;
};
#line 417  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb_devmap {
   unsigned long devicemap[2U] ;
};
#line 424 
struct mon_bus;
#line 424  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb_bus {
   struct device *controller ;
   struct device *sysdev ;
   int busnum ;
   char *bus_name ;
   u8 uses_pio_for_control ;
   u8 otg_port ;
   unsigned int is_b_host : 1 ;
   unsigned int b_hnp_enable : 1 ;
   unsigned int no_stop_on_short : 1 ;
   unsigned int no_sg_constraint : 1 ;
   unsigned int sg_tablesize ;
   int devnum_next ;
   struct mutex devnum_next_mutex ;
   struct usb_devmap devmap ;
   struct usb_device *root_hub ;
   struct usb_bus *hs_companion ;
   int bandwidth_allocated ;
   int bandwidth_int_reqs ;
   int bandwidth_isoc_reqs ;
   unsigned int resuming_ports ;
   struct mon_bus *mon_bus ;
   int monitored ;
};
#line 469 
struct usb_tt;
#line 470 
enum usb_device_removable {
    USB_DEVICE_REMOVABLE_UNKNOWN = 0,
    USB_DEVICE_REMOVABLE = 1,
    USB_DEVICE_FIXED = 2
};
#line 502  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb2_lpm_parameters {
   unsigned int besl ;
   int timeout ;
};
#line 522  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb3_lpm_parameters {
   unsigned int mel ;
   unsigned int pel ;
   unsigned int sel ;
   int timeout ;
};
#line 631  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb_device {
   int devnum ;
   char devpath[16U] ;
   u32 route ;
   enum usb_device_state state ;
   enum usb_device_speed speed ;
   unsigned int rx_lanes ;
   unsigned int tx_lanes ;
   struct usb_tt *tt ;
   int ttport ;
   unsigned int toggle[2U] ;
   struct usb_device *parent ;
   struct usb_bus *bus ;
   struct usb_host_endpoint ep0 ;
   struct device dev ;
   struct usb_device_descriptor descriptor ;
   struct usb_host_bos *bos ;
   struct usb_host_config *config ;
   struct usb_host_config *actconfig ;
   struct usb_host_endpoint *ep_in[16U] ;
   struct usb_host_endpoint *ep_out[16U] ;
   char **rawdescriptors ;
   unsigned short bus_mA ;
   u8 portnum ;
   u8 level ;
   u8 devaddr ;
   unsigned int can_submit : 1 ;
   unsigned int persist_enabled : 1 ;
   unsigned int have_langid : 1 ;
   unsigned int authorized : 1 ;
   unsigned int authenticated : 1 ;
   unsigned int wusb : 1 ;
   unsigned int lpm_capable : 1 ;
   unsigned int usb2_hw_lpm_capable : 1 ;
   unsigned int usb2_hw_lpm_besl_capable : 1 ;
   unsigned int usb2_hw_lpm_enabled : 1 ;
   unsigned int usb2_hw_lpm_allowed : 1 ;
   unsigned int usb3_lpm_u1_enabled : 1 ;
   unsigned int usb3_lpm_u2_enabled : 1 ;
   int string_langid ;
   char *product ;
   char *manufacturer ;
   char *serial ;
   struct list_head filelist ;
   int maxchild ;
   u32 quirks ;
   atomic_t urbnum ;
   unsigned long active_duration ;
   unsigned long connect_time ;
   unsigned int do_remote_wakeup : 1 ;
   unsigned int reset_resume : 1 ;
   unsigned int port_is_suspended : 1 ;
   struct wusb_dev *wusb_dev ;
   int slot_id ;
   enum usb_device_removable removable ;
   struct usb2_lpm_parameters l1_params ;
   struct usb3_lpm_parameters u1_params ;
   struct usb3_lpm_parameters u2_params ;
   unsigned int lpm_disable_count ;
   u16 hub_delay ;
};
#line 1090  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb_dynids {
   spinlock_t lock ;
   struct list_head list ;
};
#line 1112  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usbdrv_wrap {
   struct device_driver driver ;
   int for_devices ;
};
#line 1183  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb_driver {
   char *name ;
   int (*probe)(struct usb_interface *, struct usb_device_id *) ;
   void (*disconnect)(struct usb_interface *) ;
   int (*unlocked_ioctl)(struct usb_interface *, unsigned int , void *) ;
   int (*suspend)(struct usb_interface *, pm_message_t ) ;
   int (*resume)(struct usb_interface *) ;
   int (*reset_resume)(struct usb_interface *) ;
   int (*pre_reset)(struct usb_interface *) ;
   int (*post_reset)(struct usb_interface *) ;
   struct usb_device_id *id_table ;
   struct attribute_group **dev_groups ;
   struct usb_dynids dynids ;
   struct usbdrv_wrap drvwrap ;
   unsigned int no_dynamic_id : 1 ;
   unsigned int supports_autosuspend : 1 ;
   unsigned int disable_hub_initiated_lpm : 1 ;
   unsigned int soft_unbind : 1 ;
};
#line 1340  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb_iso_packet_descriptor {
   unsigned int offset ;
   unsigned int length ;
   unsigned int actual_length ;
   int status ;
};
#line 1346 
struct urb;
#line 1349  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb_anchor {
   struct list_head urb_list ;
   wait_queue_head_t wait ;
   spinlock_t lock ;
   atomic_t suspend_wakeups ;
   unsigned int poisoned : 1 ;
};
#line 1550  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct urb {
   struct kref kref ;
   int unlinked ;
   void *hcpriv ;
   atomic_t use_count ;
   atomic_t reject ;
   struct list_head urb_list ;
   struct list_head anchor_list ;
   struct usb_anchor *anchor ;
   struct usb_device *dev ;
   struct usb_host_endpoint *ep ;
   unsigned int pipe ;
   unsigned int stream_id ;
   int status ;
   unsigned int transfer_flags ;
   void *transfer_buffer ;
   dma_addr_t transfer_dma ;
   struct scatterlist *sg ;
   int num_mapped_sgs ;
   int num_sgs ;
   u32 transfer_buffer_length ;
   u32 actual_length ;
   unsigned char *setup_packet ;
   dma_addr_t setup_dma ;
   int start_frame ;
   int number_of_packets ;
   int interval ;
   int error_count ;
   void *context ;
   void (*complete)(struct urb *) ;
   struct usb_iso_packet_descriptor iso_frame_desc[0U] ;
};
#line 822  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/sysctl.h"
struct ctl_table_root;
#line 823 
struct ctl_table_header;
#line 824 
struct ctl_dir;
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
typedef int proc_handler(struct ctl_table *, int , void *, size_t *, loff_t *);
#line 105  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
struct ctl_table_poll {
   atomic_t event ;
   wait_queue_head_t wait ;
};
#line 123  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
struct ctl_table {
   char *procname ;
   void *data ;
   int maxlen ;
   umode_t mode ;
   struct ctl_table *child ;
   proc_handler *proc_handler ;
   struct ctl_table_poll *poll ;
   void *extra1 ;
   void *extra2 ;
} __attribute__((__designated_init__));
#line 135  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
struct ctl_node {
   struct rb_node node ;
   struct ctl_table_header *header ;
};
#line 142  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
struct __anonstruct_528 {
   struct ctl_table *ctl_table ;
   int used ;
   int count ;
   int nreg ;
};
#line 142  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
union __anonunion_527 {
   struct __anonstruct_528 __anonCompField___anonunion_527_98 ;
   struct callback_head rcu ;
};
#line 142 
struct ctl_table_set;
#line 142  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
struct ctl_table_header {
   union __anonunion_527 __anonCompField_ctl_table_header_99 ;
   struct completion *unregistering ;
   struct ctl_table *ctl_table_arg ;
   struct ctl_table_root *root ;
   struct ctl_table_set *set ;
   struct ctl_dir *parent ;
   struct ctl_node *node ;
   struct hlist_head inodes ;
};
#line 161  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
struct ctl_dir {
   struct ctl_table_header header ;
   struct rb_root root ;
};
#line 167  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
struct ctl_table_set {
   int (*is_seen)(struct ctl_table_set *) ;
   struct ctl_dir dir ;
};
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
struct ctl_table_root {
   struct ctl_table_set default_set ;
   struct ctl_table_set *(*lookup)(struct ctl_table_root *) ;
   void (*set_ownership)(struct ctl_table_header *, struct ctl_table *, kuid_t *, kgid_t *) ;
   int (*permissions)(struct ctl_table_header *, struct ctl_table *) ;
};
#line 13  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/vdso.h"
struct vdso_image {
   void *data ;
   unsigned long size ;
   unsigned long alt ;
   unsigned long alt_len ;
   long sym_vvar_start ;
   long sym_vvar_page ;
   long sym_pvclock_page ;
   long sym_hvclock_page ;
   long sym_VDSO32_NOTE_MASK ;
   long sym___kernel_sigreturn ;
   long sym___kernel_rt_sigreturn ;
   long sym___kernel_vsyscall ;
   long sym_int80_landing_pad ;
};
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
typedef __u64 Elf64_Addr;
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
typedef __u16 Elf64_Half;
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
typedef __u64 Elf64_Off;
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
typedef __u32 Elf64_Word;
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
typedef __u64 Elf64_Xword;
#line 192  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
struct elf64_sym {
   Elf64_Word st_name ;
   unsigned char st_info ;
   unsigned char st_other ;
   Elf64_Half st_shndx ;
   Elf64_Addr st_value ;
   Elf64_Xword st_size ;
};
#line 200  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
typedef struct elf64_sym Elf64_Sym;
#line 221  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
struct elf64_hdr {
   unsigned char e_ident[16U] ;
   Elf64_Half e_type ;
   Elf64_Half e_machine ;
   Elf64_Word e_version ;
   Elf64_Addr e_entry ;
   Elf64_Off e_phoff ;
   Elf64_Off e_shoff ;
   Elf64_Word e_flags ;
   Elf64_Half e_ehsize ;
   Elf64_Half e_phentsize ;
   Elf64_Half e_phnum ;
   Elf64_Half e_shentsize ;
   Elf64_Half e_shnum ;
   Elf64_Half e_shstrndx ;
};
#line 237  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
typedef struct elf64_hdr Elf64_Ehdr;
#line 316  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
struct elf64_shdr {
   Elf64_Word sh_name ;
   Elf64_Word sh_type ;
   Elf64_Xword sh_flags ;
   Elf64_Addr sh_addr ;
   Elf64_Off sh_offset ;
   Elf64_Xword sh_size ;
   Elf64_Word sh_link ;
   Elf64_Word sh_info ;
   Elf64_Xword sh_addralign ;
   Elf64_Xword sh_entsize ;
};
#line 328  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
typedef struct elf64_shdr Elf64_Shdr;
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/elf.h"
struct kernel_param;
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/moduleparam.h"
struct kernel_param_ops {
   unsigned int flags ;
   int (*set)(char *, struct kernel_param *) ;
   int (*get)(char *, struct kernel_param *) ;
   void (*free)(void *) ;
};
#line 69 
struct kparam_string;
#line 69 
struct kparam_array;
#line 69  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/moduleparam.h"
union __anonunion_532 {
   void *arg ;
   struct kparam_string *str ;
   struct kparam_array *arr ;
};
#line 69  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/moduleparam.h"
struct kernel_param {
   char *name ;
   struct module *mod ;
   struct kernel_param_ops *ops ;
   u16 perm ;
   s8 level ;
   u8 flags ;
   union __anonunion_532 __anonCompField_kernel_param_100 ;
};
#line 86  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/moduleparam.h"
struct kparam_string {
   unsigned int maxlen ;
   char *string ;
};
#line 92  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/moduleparam.h"
struct kparam_array {
   unsigned int max ;
   unsigned int elemsize ;
   unsigned int *num ;
   struct kernel_param_ops *ops ;
   void *elem ;
};
#line 40  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rbtree_latch.h"
struct latch_tree_node {
   struct rb_node node[2U] ;
};
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/error-injection.h"
struct error_injection_entry {
   unsigned long addr ;
   int etype ;
};
#line 8  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/module.h"
struct mod_arch_specific {
   unsigned int num_orcs ;
   int *orc_unwind_ip ;
   struct orc_entry *orc_unwind ;
};
#line 45  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
struct module_param_attrs;
#line 45  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
struct module_kobject {
   struct kobject kobj ;
   struct module *mod ;
   struct kobject *drivers_dir ;
   struct module_param_attrs *mp ;
   struct completion *kobj_completion ;
} __attribute__((__designated_init__));
#line 53  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
struct module_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct module_attribute *, struct module_kobject *, char *) ;
   ssize_t (*store)(struct module_attribute *, struct module_kobject *, char *, size_t ) ;
   void (*setup)(struct module *, char *) ;
   int (*test)(struct module *) ;
   void (*free)(struct module *) ;
};
#line 297 
enum module_state {
    MODULE_STATE_LIVE = 0,
    MODULE_STATE_COMING = 1,
    MODULE_STATE_GOING = 2,
    MODULE_STATE_UNFORMED = 3
};
#line 305  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
struct mod_tree_node {
   struct module *mod ;
   struct latch_tree_node node ;
};
#line 310  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
struct module_layout {
   void *base ;
   unsigned int size ;
   unsigned int text_size ;
   unsigned int ro_size ;
   unsigned int ro_after_init_size ;
   struct mod_tree_node mtn ;
};
#line 334  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
struct mod_kallsyms {
   Elf64_Sym *symtab ;
   unsigned int num_symtab ;
   char *strtab ;
   char *typetab ;
};
#line 342  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
struct klp_modinfo {
   Elf64_Ehdr hdr ;
   Elf64_Shdr *sechdrs ;
   char *secstrings ;
   unsigned int symndx ;
};
#line 350 
struct module_sect_attrs;
#line 350 
struct module_notes_attrs;
#line 350 
struct trace_event_call;
#line 350 
struct trace_eval_map;
#line 350  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
struct module {
   enum module_state state ;
   struct list_head list ;
   char name[56U] ;
   struct module_kobject mkobj ;
   struct module_attribute *modinfo_attrs ;
   char *version ;
   char *srcversion ;
   struct kobject *holders_dir ;
   struct kernel_symbol *syms ;
   s32 *crcs ;
   unsigned int num_syms ;
   struct mutex param_lock ;
   struct kernel_param *kp ;
   unsigned int num_kp ;
   unsigned int num_gpl_syms ;
   struct kernel_symbol *gpl_syms ;
   s32 *gpl_crcs ;
   struct kernel_symbol *unused_syms ;
   s32 *unused_crcs ;
   unsigned int num_unused_syms ;
   unsigned int num_unused_gpl_syms ;
   struct kernel_symbol *unused_gpl_syms ;
   s32 *unused_gpl_crcs ;
   bool sig_ok ;
   bool async_probe_requested ;
   struct kernel_symbol *gpl_future_syms ;
   s32 *gpl_future_crcs ;
   unsigned int num_gpl_future_syms ;
   unsigned int num_exentries ;
   struct exception_table_entry *extable ;
   int (*init)(void) ;
   struct module_layout core_layout ;
   struct module_layout init_layout ;
   struct mod_arch_specific arch ;
   unsigned long taints ;
   unsigned int num_bugs ;
   struct list_head bug_list ;
   struct bug_entry *bug_table ;
   struct mod_kallsyms *kallsyms ;
   struct mod_kallsyms core_kallsyms ;
   struct module_sect_attrs *sect_attrs ;
   struct module_notes_attrs *notes_attrs ;
   char *args ;
   void *percpu ;
   unsigned int percpu_size ;
   unsigned int num_tracepoints ;
   tracepoint_ptr_t *tracepoints_ptrs ;
   unsigned int num_srcu_structs ;
   struct srcu_struct **srcu_struct_ptrs ;
   unsigned int num_bpf_raw_events ;
   struct bpf_raw_event_map *bpf_raw_events ;
   struct jump_entry *jump_entries ;
   unsigned int num_jump_entries ;
   unsigned int num_trace_bprintk_fmt ;
   char **trace_bprintk_fmt_start ;
   struct trace_event_call **trace_events ;
   unsigned int num_trace_events ;
   struct trace_eval_map **trace_evals ;
   unsigned int num_trace_evals ;
   unsigned int num_ftrace_callsites ;
   unsigned long *ftrace_callsites ;
   bool klp ;
   bool klp_alive ;
   struct klp_modinfo *klp_info ;
   struct list_head source_list ;
   struct list_head target_list ;
   void (*exit)(void) ;
   atomic_t refcnt ;
   ctor_fn_t *ctors ;
   unsigned int num_ctors ;
   struct error_injection_entry *ei_funcs ;
   unsigned int num_ei_funcs ;
} __attribute__((__designated_init__, __aligned__(64)));
#line 41  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dynamic_queue_limits.h"
struct dql {
   unsigned int num_queued ;
   unsigned int adj_limit ;
   unsigned int last_obj_cnt ;
   unsigned int limit ;
   unsigned int num_completed ;
   unsigned int prev_ovlimit ;
   unsigned int prev_num_queued ;
   unsigned int prev_last_obj_cnt ;
   unsigned int lowest_slack ;
   unsigned long slack_start_time ;
   unsigned int max_limit ;
   unsigned int min_limit ;
   unsigned int slack_hold_time ;
};
#line 103  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dynamic_queue_limits.h"
struct __anonstruct_sync_serial_settings_543 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
};
#line 103  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dynamic_queue_limits.h"
typedef struct __anonstruct_sync_serial_settings_543 sync_serial_settings;
#line 45  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_te1_settings_544 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
   unsigned int slot_map ;
};
#line 45  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_te1_settings_544 te1_settings;
#line 52  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_raw_hdlc_proto_545 {
   unsigned short encoding ;
   unsigned short parity ;
};
#line 52  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_raw_hdlc_proto_545 raw_hdlc_proto;
#line 57  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_546 {
   unsigned int t391 ;
   unsigned int t392 ;
   unsigned int n391 ;
   unsigned int n392 ;
   unsigned int n393 ;
   unsigned short lmi ;
   unsigned short dce ;
};
#line 57  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_546 fr_proto;
#line 67  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_547 {
   unsigned int dlci ;
};
#line 67  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_547 fr_proto_pvc;
#line 71  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_info_548 {
   unsigned int dlci ;
   char master[16U] ;
};
#line 71  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_info_548 fr_proto_pvc_info;
#line 76  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_cisco_proto_549 {
   unsigned int interval ;
   unsigned int timeout ;
};
#line 76  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_cisco_proto_549 cisco_proto;
#line 195  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if.h"
struct ifmap {
   unsigned long mem_start ;
   unsigned long mem_end ;
   unsigned short base_addr ;
   unsigned char irq ;
   unsigned char dma ;
   unsigned char port ;
};
#line 206  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if.h"
union __anonunion_ifs_ifsu_550 {
   raw_hdlc_proto *raw_hdlc ;
   cisco_proto *cisco ;
   fr_proto *fr ;
   fr_proto_pvc *fr_pvc ;
   fr_proto_pvc_info *fr_pvc_info ;
   sync_serial_settings *sync ;
   te1_settings *te1 ;
};
#line 206  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if.h"
struct if_settings {
   unsigned int type ;
   unsigned int size ;
   union __anonunion_ifs_ifsu_550 ifs_ifsu ;
};
#line 232  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if.h"
union __anonunion_ifr_ifrn_551 {
   char ifrn_name[16U] ;
};
#line 232  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if.h"
union __anonunion_ifr_ifru_552 {
   struct sockaddr ifru_addr ;
   struct sockaddr ifru_dstaddr ;
   struct sockaddr ifru_broadaddr ;
   struct sockaddr ifru_netmask ;
   struct sockaddr ifru_hwaddr ;
   short ifru_flags ;
   int ifru_ivalue ;
   int ifru_mtu ;
   struct ifmap ifru_map ;
   char ifru_slave[16U] ;
   char ifru_newname[16U] ;
   void *ifru_data ;
   struct if_settings ifru_settings ;
};
#line 232  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if.h"
struct ifreq {
   union __anonunion_ifr_ifrn_551 ifr_ifrn ;
   union __anonunion_ifr_ifru_552 ifr_ifru ;
};
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/compat.h"
typedef s32 compat_long_t;
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/compat.h"
typedef u32 compat_uptr_t;
#line 367  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/compat.h"
struct compat_robust_list {
   compat_uptr_t next ;
};
#line 371  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/compat.h"
struct compat_robust_list_head {
   struct compat_robust_list list ;
   compat_long_t futex_offset ;
   compat_uptr_t list_op_pending ;
};
#line 177  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_drvinfo {
   __u32 cmd ;
   char driver[32U] ;
   char version[32U] ;
   char fw_version[32U] ;
   char bus_info[32U] ;
   char erom_version[32U] ;
   char reserved2[12U] ;
   __u32 n_priv_flags ;
   __u32 n_stats ;
   __u32 testinfo_len ;
   __u32 eedump_len ;
   __u32 regdump_len ;
};
#line 203  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_wolinfo {
   __u32 cmd ;
   __u32 supported ;
   __u32 wolopts ;
   __u8 sopass[6U] ;
};
#line 244  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_tunable {
   __u32 cmd ;
   __u32 id ;
   __u32 type_id ;
   __u32 len ;
   void *data[0U] ;
};
#line 310  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_regs {
   __u32 cmd ;
   __u32 version ;
   __u32 len ;
   __u8 data[0U] ;
};
#line 335  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_eeprom {
   __u32 cmd ;
   __u32 magic ;
   __u32 offset ;
   __u32 len ;
   __u8 data[0U] ;
};
#line 360  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_eee {
   __u32 cmd ;
   __u32 supported ;
   __u32 advertised ;
   __u32 lp_advertised ;
   __u32 eee_active ;
   __u32 eee_enabled ;
   __u32 tx_lpi_enabled ;
   __u32 tx_lpi_timer ;
   __u32 reserved[2U] ;
};
#line 382  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_modinfo {
   __u32 cmd ;
   __u32 type ;
   __u32 eeprom_len ;
   __u32 reserved[8U] ;
};
#line 462  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_coalesce {
   __u32 cmd ;
   __u32 rx_coalesce_usecs ;
   __u32 rx_max_coalesced_frames ;
   __u32 rx_coalesce_usecs_irq ;
   __u32 rx_max_coalesced_frames_irq ;
   __u32 tx_coalesce_usecs ;
   __u32 tx_max_coalesced_frames ;
   __u32 tx_coalesce_usecs_irq ;
   __u32 tx_max_coalesced_frames_irq ;
   __u32 stats_block_coalesce_usecs ;
   __u32 use_adaptive_rx_coalesce ;
   __u32 use_adaptive_tx_coalesce ;
   __u32 pkt_rate_low ;
   __u32 rx_coalesce_usecs_low ;
   __u32 rx_max_coalesced_frames_low ;
   __u32 tx_coalesce_usecs_low ;
   __u32 tx_max_coalesced_frames_low ;
   __u32 pkt_rate_high ;
   __u32 rx_coalesce_usecs_high ;
   __u32 rx_max_coalesced_frames_high ;
   __u32 tx_coalesce_usecs_high ;
   __u32 tx_max_coalesced_frames_high ;
   __u32 rate_sample_interval ;
};
#line 513  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_ringparam {
   __u32 cmd ;
   __u32 rx_max_pending ;
   __u32 rx_mini_max_pending ;
   __u32 rx_jumbo_max_pending ;
   __u32 tx_max_pending ;
   __u32 rx_pending ;
   __u32 rx_mini_pending ;
   __u32 rx_jumbo_pending ;
   __u32 tx_pending ;
};
#line 541  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_channels {
   __u32 cmd ;
   __u32 max_rx ;
   __u32 max_tx ;
   __u32 max_other ;
   __u32 max_combined ;
   __u32 rx_count ;
   __u32 tx_count ;
   __u32 other_count ;
   __u32 combined_count ;
};
#line 575  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_pauseparam {
   __u32 cmd ;
   __u32 autoneg ;
   __u32 rx_pause ;
   __u32 tx_pause ;
};
#line 683  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_test {
   __u32 cmd ;
   __u32 flags ;
   __u32 reserved ;
   __u32 len ;
   __u64 data[0U] ;
};
#line 702  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_stats {
   __u32 cmd ;
   __u32 n_stats ;
   __u64 data[0U] ;
};
#line 758  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_tcpip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be16 psrc ;
   __be16 pdst ;
   __u8 tos ;
};
#line 775  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_ah_espip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 spi ;
   __u8 tos ;
};
#line 793  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_usrip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 l4_4_bytes ;
   __u8 tos ;
   __u8 ip_ver ;
   __u8 proto ;
};
#line 812  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_tcpip6_spec {
   __be32 ip6src[4U] ;
   __be32 ip6dst[4U] ;
   __be16 psrc ;
   __be16 pdst ;
   __u8 tclass ;
};
#line 829  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_ah_espip6_spec {
   __be32 ip6src[4U] ;
   __be32 ip6dst[4U] ;
   __be32 spi ;
   __u8 tclass ;
};
#line 844  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_usrip6_spec {
   __be32 ip6src[4U] ;
   __be32 ip6dst[4U] ;
   __be32 l4_4_bytes ;
   __u8 tclass ;
   __u8 l4_proto ;
};
#line 852  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
union ethtool_flow_union {
   struct ethtool_tcpip4_spec tcp_ip4_spec ;
   struct ethtool_tcpip4_spec udp_ip4_spec ;
   struct ethtool_tcpip4_spec sctp_ip4_spec ;
   struct ethtool_ah_espip4_spec ah_ip4_spec ;
   struct ethtool_ah_espip4_spec esp_ip4_spec ;
   struct ethtool_usrip4_spec usr_ip4_spec ;
   struct ethtool_tcpip6_spec tcp_ip6_spec ;
   struct ethtool_tcpip6_spec udp_ip6_spec ;
   struct ethtool_tcpip6_spec sctp_ip6_spec ;
   struct ethtool_ah_espip6_spec ah_ip6_spec ;
   struct ethtool_ah_espip6_spec esp_ip6_spec ;
   struct ethtool_usrip6_spec usr_ip6_spec ;
   struct ethhdr ether_spec ;
   __u8 hdata[52U] ;
};
#line 880  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_flow_ext {
   __u8 padding[2U] ;
   unsigned char h_dest[6U] ;
   __be16 vlan_etype ;
   __be16 vlan_tci ;
   __be32 data[2U] ;
};
#line 905  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_rx_flow_spec {
   __u32 flow_type ;
   union ethtool_flow_union h_u ;
   struct ethtool_flow_ext h_ext ;
   union ethtool_flow_union m_u ;
   struct ethtool_flow_ext m_ext ;
   __u64 ring_cookie ;
   __u32 location ;
};
#line 1001  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
union __anonunion_571 {
   __u32 rule_cnt ;
   __u32 rss_context ;
};
#line 1001  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_rxnfc {
   __u32 cmd ;
   __u32 flow_type ;
   __u64 data ;
   struct ethtool_rx_flow_spec fs ;
   union __anonunion_571 __anonCompField_ethtool_rxnfc_102 ;
   __u32 rule_locs[0U] ;
};
#line 1130  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_flash {
   __u32 cmd ;
   __u32 region ;
   char data[128U] ;
};
#line 1150  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_dump {
   __u32 cmd ;
   __u32 version ;
   __u32 flag ;
   __u32 len ;
   __u8 data[0U] ;
};
#line 1230  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_ts_info {
   __u32 cmd ;
   __u32 so_timestamping ;
   __s32 phc_index ;
   __u32 tx_types ;
   __u32 tx_reserved[3U] ;
   __u32 rx_filters ;
   __u32 rx_reserved[3U] ;
};
#line 1302  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_fecparam {
   __u32 cmd ;
   __u32 active_fec ;
   __u32 fec ;
   __u32 reserved ;
};
#line 1876  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_link_settings {
   __u32 cmd ;
   __u32 speed ;
   __u8 duplex ;
   __u8 port ;
   __u8 phy_address ;
   __u8 autoneg ;
   __u8 mdio_support ;
   __u8 eth_tp_mdix ;
   __u8 eth_tp_mdix_ctrl ;
   __s8 link_mode_masks_nwords ;
   __u8 transceiver ;
   __u8 reserved1[3U] ;
   __u32 reserved[7U] ;
   __u32 link_mode_masks[0U] ;
};
#line 40  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ethtool.h"
enum ethtool_phys_id_state {
    ETHTOOL_ID_INACTIVE = 0,
    ETHTOOL_ID_ACTIVE = 1,
    ETHTOOL_ID_ON = 2,
    ETHTOOL_ID_OFF = 3
};
#line 108  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ethtool.h"
struct __anonstruct_link_modes_574 {
   unsigned long supported[2U] ;
   unsigned long advertising[2U] ;
   unsigned long lp_advertising[2U] ;
};
#line 108  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ethtool.h"
struct ethtool_link_ksettings {
   struct ethtool_link_settings base ;
   struct __anonstruct_link_modes_574 link_modes ;
};
#line 325  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ethtool.h"
struct ethtool_ops {
   void (*get_drvinfo)(struct net_device *, struct ethtool_drvinfo *) ;
   int (*get_regs_len)(struct net_device *) ;
   void (*get_regs)(struct net_device *, struct ethtool_regs *, void *) ;
   void (*get_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   int (*set_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   u32 (*get_msglevel)(struct net_device *) ;
   void (*set_msglevel)(struct net_device *, u32 ) ;
   int (*nway_reset)(struct net_device *) ;
   u32 (*get_link)(struct net_device *) ;
   int (*get_eeprom_len)(struct net_device *) ;
   int (*get_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*set_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   int (*set_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   void (*get_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   int (*set_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   void (*get_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   int (*set_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   void (*self_test)(struct net_device *, struct ethtool_test *, u64 *) ;
   void (*get_strings)(struct net_device *, u32 , u8 *) ;
   int (*set_phys_id)(struct net_device *, enum ethtool_phys_id_state ) ;
   void (*get_ethtool_stats)(struct net_device *, struct ethtool_stats *, u64 *) ;
   int (*begin)(struct net_device *) ;
   void (*complete)(struct net_device *) ;
   u32 (*get_priv_flags)(struct net_device *) ;
   int (*set_priv_flags)(struct net_device *, u32 ) ;
   int (*get_sset_count)(struct net_device *, int ) ;
   int (*get_rxnfc)(struct net_device *, struct ethtool_rxnfc *, u32 *) ;
   int (*set_rxnfc)(struct net_device *, struct ethtool_rxnfc *) ;
   int (*flash_device)(struct net_device *, struct ethtool_flash *) ;
   int (*reset)(struct net_device *, u32 *) ;
   u32 (*get_rxfh_key_size)(struct net_device *) ;
   u32 (*get_rxfh_indir_size)(struct net_device *) ;
   int (*get_rxfh)(struct net_device *, u32 *, u8 *, u8 *) ;
   int (*set_rxfh)(struct net_device *, u32 *, u8 *, u8 ) ;
   int (*get_rxfh_context)(struct net_device *, u32 *, u8 *, u8 *, u32 ) ;
   int (*set_rxfh_context)(struct net_device *, u32 *, u8 *, u8 , u32 *, bool ) ;
   void (*get_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*set_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*get_dump_flag)(struct net_device *, struct ethtool_dump *) ;
   int (*get_dump_data)(struct net_device *, struct ethtool_dump *, void *) ;
   int (*set_dump)(struct net_device *, struct ethtool_dump *) ;
   int (*get_ts_info)(struct net_device *, struct ethtool_ts_info *) ;
   int (*get_module_info)(struct net_device *, struct ethtool_modinfo *) ;
   int (*get_module_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*set_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*get_tunable)(struct net_device *, struct ethtool_tunable *, void *) ;
   int (*set_tunable)(struct net_device *, struct ethtool_tunable *, void *) ;
   int (*get_per_queue_coalesce)(struct net_device *, u32 , struct ethtool_coalesce *) ;
   int (*set_per_queue_coalesce)(struct net_device *, u32 , struct ethtool_coalesce *) ;
   int (*get_link_ksettings)(struct net_device *, struct ethtool_link_ksettings *) ;
   int (*set_link_ksettings)(struct net_device *, struct ethtool_link_ksettings *) ;
   int (*get_fecparam)(struct net_device *, struct ethtool_fecparam *) ;
   int (*set_fecparam)(struct net_device *, struct ethtool_fecparam *) ;
   void (*get_ethtool_phy_stats)(struct net_device *, struct ethtool_stats *, u64 *) ;
};
#line 422 
struct prot_inuse;
#line 8  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/core.h"
struct netns_core {
   struct ctl_table_header *sysctl_hdr ;
   int sysctl_somaxconn ;
   int *sock_inuse ;
   struct prot_inuse *prot_inuse ;
};
#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct u64_stats_sync {
   };
#line 36  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct __anonstruct_local_t_575 {
   atomic_long_t a ;
};
#line 36  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
typedef struct __anonstruct_local_t_575 local_t;
#line 119  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/local.h"
struct __anonstruct_local64_t_576 {
   local_t a ;
};
#line 119  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/local.h"
typedef struct __anonstruct_local64_t_576 local64_t;
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/local64.h"
struct __anonstruct_u64_stats_t_577 {
   local64_t v ;
};
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/local64.h"
typedef struct __anonstruct_u64_stats_t_577 u64_stats_t;
#line 51  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct ipstats_mib {
   u64 mibs[37U] ;
   struct u64_stats_sync syncp ;
};
#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct icmp_mib {
   unsigned long mibs[28U] ;
};
#line 64  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct icmpmsg_mib {
   atomic_long_t mibs[512U] ;
};
#line 71  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct icmpv6_mib {
   unsigned long mibs[6U] ;
};
#line 81  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct icmpv6msg_mib {
   atomic_long_t mibs[512U] ;
};
#line 92  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct tcp_mib {
   unsigned long mibs[16U] ;
};
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct udp_mib {
   unsigned long mibs[9U] ;
};
#line 104  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct linux_mib {
   unsigned long mibs[120U] ;
};
#line 110  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct linux_xfrm_mib {
   unsigned long mibs[29U] ;
};
#line 116  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct linux_tls_mib {
   unsigned long mibs[11U] ;
};
#line 7  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/mib.h"
struct netns_mib {
   struct tcp_mib *tcp_statistics ;
   struct ipstats_mib *ip_statistics ;
   struct linux_mib *net_statistics ;
   struct udp_mib *udp_statistics ;
   struct udp_mib *udplite_statistics ;
   struct icmp_mib *icmp_statistics ;
   struct icmpmsg_mib *icmpmsg_statistics ;
   struct proc_dir_entry *proc_net_devsnmp6 ;
   struct udp_mib *udp_stats_in6 ;
   struct udp_mib *udplite_stats_in6 ;
   struct ipstats_mib *ipv6_statistics ;
   struct icmpv6_mib *icmpv6_statistics ;
   struct icmpv6msg_mib *icmpv6msg_statistics ;
   struct linux_xfrm_mib *xfrm_statistics ;
   struct linux_tls_mib *tls_statistics ;
};
#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/unix.h"
struct netns_unix {
   int sysctl_max_dgram_qlen ;
   struct ctl_table_header *ctl ;
};
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/packet.h"
struct netns_packet {
   struct mutex sklist_lock ;
   struct hlist_head sklist ;
};
#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/inet_frag.h"
struct inet_frags;
#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/inet_frag.h"
struct fqdir {
   long high_thresh ;
   long low_thresh ;
   int timeout ;
   int max_dist ;
   struct inet_frags *f ;
   struct net *net ;
   bool dead ;
   struct rhashtable rhashtable ;
   atomic_long_t mem ;
   struct work_struct destroy_work ;
};
#line 41  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/inet_frag.h"
struct frag_v4_compare_key {
   __be32 saddr ;
   __be32 daddr ;
   u32 user ;
   u32 vif ;
   __be16 id ;
   u16 protocol ;
};
#line 50  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/inet_frag.h"
struct frag_v6_compare_key {
   struct in6_addr saddr ;
   struct in6_addr daddr ;
   u32 user ;
   __be32 id ;
   u32 iif ;
};
#line 77  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/inet_frag.h"
union __anonunion_key_578 {
   struct frag_v4_compare_key v4 ;
   struct frag_v6_compare_key v6 ;
};
#line 77  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/inet_frag.h"
struct inet_frag_queue {
   struct rhash_head node ;
   union __anonunion_key_578 key ;
   struct timer_list timer ;
   spinlock_t lock ;
   refcount_t refcnt ;
   struct rb_root rb_fragments ;
   struct sk_buff *fragments_tail ;
   struct sk_buff *last_run_head ;
   ktime_t stamp ;
   int len ;
   int meat ;
   __u8 flags ;
   u16 max_size ;
   struct fqdir *fqdir ;
   struct callback_head rcu ;
};
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/inet_frag.h"
struct inet_frags {
   unsigned int qsize ;
   void (*constructor)(struct inet_frag_queue *, void *) ;
   void (*destructor)(struct inet_frag_queue *) ;
   void (*frag_expire)(struct timer_list *) ;
   struct kmem_cache *frags_cachep ;
   char *frags_cache_name ;
   struct rhashtable_params rhash_params ;
   refcount_t refcnt ;
   struct completion completion ;
};
#line 177 
struct ipv4_devconf;
#line 178 
struct fib_rules_ops;
#line 179 
struct fib_table;
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ipv4.h"
struct local_ports {
   seqlock_t lock ;
   int range[2U] ;
   bool warned ;
};
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ipv4.h"
struct ping_group_range {
   seqlock_t lock ;
   kgid_t range[2U] ;
};
#line 31 
struct inet_hashinfo;
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ipv4.h"
struct inet_timewait_death_row {
   atomic_t tw_count ;
   struct inet_hashinfo *hashinfo ;
   int sysctl_max_tw_buckets ;
};
#line 40 
struct tcp_fastopen_context;
#line 43 
struct ip_ra_chain;
#line 43 
struct inet_peer_base;
#line 43 
struct xt_table;
#line 43 
struct tcp_congestion_ops;
#line 43 
struct fib_notifier_ops;
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ipv4.h"
struct netns_ipv4 {
   struct ctl_table_header *forw_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *ipv4_hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *xfrm4_hdr ;
   struct ipv4_devconf *devconf_all ;
   struct ipv4_devconf *devconf_dflt ;
   struct ip_ra_chain *ra_chain ;
   struct mutex ra_mutex ;
   struct fib_rules_ops *rules_ops ;
   bool fib_has_custom_rules ;
   unsigned int fib_rules_require_fldissect ;
   struct fib_table *fib_main ;
   struct fib_table *fib_default ;
   bool fib_has_custom_local_routes ;
   int fib_num_tclassid_users ;
   struct hlist_head *fib_table_hash ;
   bool fib_offload_disabled ;
   struct sock *fibnl ;
   struct sock **icmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct inet_peer_base *peers ;
   struct sock **tcp_sk ;
   struct fqdir *fqdir ;
   struct xt_table *iptable_filter ;
   struct xt_table *iptable_mangle ;
   struct xt_table *iptable_raw ;
   struct xt_table *arptable_filter ;
   struct xt_table *iptable_security ;
   struct xt_table *nat_table ;
   int sysctl_icmp_echo_ignore_all ;
   int sysctl_icmp_echo_ignore_broadcasts ;
   int sysctl_icmp_ignore_bogus_error_responses ;
   int sysctl_icmp_ratelimit ;
   int sysctl_icmp_ratemask ;
   int sysctl_icmp_errors_use_inbound_ifaddr ;
   struct local_ports ip_local_ports ;
   int sysctl_tcp_ecn ;
   int sysctl_tcp_ecn_fallback ;
   int sysctl_ip_default_ttl ;
   int sysctl_ip_no_pmtu_disc ;
   int sysctl_ip_fwd_use_pmtu ;
   int sysctl_ip_fwd_update_priority ;
   int sysctl_ip_nonlocal_bind ;
   int sysctl_ip_dynaddr ;
   int sysctl_ip_early_demux ;
   int sysctl_raw_l3mdev_accept ;
   int sysctl_tcp_early_demux ;
   int sysctl_udp_early_demux ;
   int sysctl_fwmark_reflect ;
   int sysctl_tcp_fwmark_accept ;
   int sysctl_tcp_l3mdev_accept ;
   int sysctl_tcp_mtu_probing ;
   int sysctl_tcp_mtu_probe_floor ;
   int sysctl_tcp_base_mss ;
   int sysctl_tcp_min_snd_mss ;
   int sysctl_tcp_probe_threshold ;
   u32 sysctl_tcp_probe_interval ;
   int sysctl_tcp_keepalive_time ;
   int sysctl_tcp_keepalive_probes ;
   int sysctl_tcp_keepalive_intvl ;
   int sysctl_tcp_syn_retries ;
   int sysctl_tcp_synack_retries ;
   int sysctl_tcp_syncookies ;
   int sysctl_tcp_reordering ;
   int sysctl_tcp_retries1 ;
   int sysctl_tcp_retries2 ;
   int sysctl_tcp_orphan_retries ;
   int sysctl_tcp_fin_timeout ;
   unsigned int sysctl_tcp_notsent_lowat ;
   int sysctl_tcp_tw_reuse ;
   int sysctl_tcp_sack ;
   int sysctl_tcp_window_scaling ;
   int sysctl_tcp_timestamps ;
   int sysctl_tcp_early_retrans ;
   int sysctl_tcp_recovery ;
   int sysctl_tcp_thin_linear_timeouts ;
   int sysctl_tcp_slow_start_after_idle ;
   int sysctl_tcp_retrans_collapse ;
   int sysctl_tcp_stdurg ;
   int sysctl_tcp_rfc1337 ;
   int sysctl_tcp_abort_on_overflow ;
   int sysctl_tcp_fack ;
   int sysctl_tcp_max_reordering ;
   int sysctl_tcp_dsack ;
   int sysctl_tcp_app_win ;
   int sysctl_tcp_adv_win_scale ;
   int sysctl_tcp_frto ;
   int sysctl_tcp_nometrics_save ;
   int sysctl_tcp_moderate_rcvbuf ;
   int sysctl_tcp_tso_win_divisor ;
   int sysctl_tcp_workaround_signed_windows ;
   int sysctl_tcp_limit_output_bytes ;
   int sysctl_tcp_challenge_ack_limit ;
   int sysctl_tcp_min_tso_segs ;
   int sysctl_tcp_min_rtt_wlen ;
   int sysctl_tcp_autocorking ;
   int sysctl_tcp_invalid_ratelimit ;
   int sysctl_tcp_pacing_ss_ratio ;
   int sysctl_tcp_pacing_ca_ratio ;
   int sysctl_tcp_wmem[3U] ;
   int sysctl_tcp_rmem[3U] ;
   int sysctl_tcp_comp_sack_nr ;
   unsigned long sysctl_tcp_comp_sack_delay_ns ;
   struct inet_timewait_death_row tcp_death_row ;
   int sysctl_max_syn_backlog ;
   int sysctl_tcp_fastopen ;
   struct tcp_congestion_ops *tcp_congestion_control ;
   struct tcp_fastopen_context *tcp_fastopen_ctx ;
   spinlock_t tcp_fastopen_ctx_lock ;
   unsigned int sysctl_tcp_fastopen_blackhole_timeout ;
   atomic_t tfo_active_disable_times ;
   unsigned long tfo_active_disable_stamp ;
   int sysctl_udp_wmem_min ;
   int sysctl_udp_rmem_min ;
   int sysctl_udp_l3mdev_accept ;
   int sysctl_igmp_max_memberships ;
   int sysctl_igmp_max_msf ;
   int sysctl_igmp_llm_reports ;
   int sysctl_igmp_qrv ;
   struct ping_group_range ping_group_range ;
   atomic_t dev_addr_genid ;
   unsigned long *sysctl_local_reserved_ports ;
   int sysctl_ip_prot_sock ;
   struct list_head mr_tables ;
   struct fib_rules_ops *mr_rules_ops ;
   int sysctl_fib_multipath_use_neigh ;
   int sysctl_fib_multipath_hash_policy ;
   struct fib_notifier_ops *notifier_ops ;
   unsigned int fib_seq ;
   struct fib_notifier_ops *ipmr_notifier_ops ;
   unsigned int ipmr_seq ;
   atomic_t rt_genid ;
   siphash_key_t ip_id_key ;
};
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/dst_ops.h"
struct neighbour;
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/dst_ops.h"
struct dst_ops {
   unsigned short family ;
   unsigned int gc_thresh ;
   int (*gc)(struct dst_ops *) ;
   struct dst_entry *(*check)(struct dst_entry *, __u32 ) ;
   unsigned int (*default_advmss)(struct dst_entry *) ;
   unsigned int (*mtu)(struct dst_entry *) ;
   u32 *(*cow_metrics)(struct dst_entry *, unsigned long ) ;
   void (*destroy)(struct dst_entry *) ;
   void (*ifdown)(struct dst_entry *, struct net_device *, int ) ;
   struct dst_entry *(*negative_advice)(struct dst_entry *) ;
   void (*link_failure)(struct sk_buff *) ;
   void (*update_pmtu)(struct dst_entry *, struct sock *, struct sk_buff *, u32 , bool ) ;
   void (*redirect)(struct dst_entry *, struct sock *, struct sk_buff *) ;
   int (*local_out)(struct net *, struct sock *, struct sk_buff *) ;
   struct neighbour *(*neigh_lookup)(struct dst_entry *, struct sk_buff *, void *) ;
   void (*confirm_neigh)(struct dst_entry *, void *) ;
   struct kmem_cache *kmem_cachep ;
   struct percpu_counter pcpuc_entries ;
};
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ipv6.h"
struct netns_sysctl_ipv6 {
   struct ctl_table_header *hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *icmp_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *xfrm6_hdr ;
   int bindv6only ;
   int flush_delay ;
   int ip6_rt_max_size ;
   int ip6_rt_gc_min_interval ;
   int ip6_rt_gc_timeout ;
   int ip6_rt_gc_interval ;
   int ip6_rt_gc_elasticity ;
   int ip6_rt_mtu_expires ;
   int ip6_rt_min_advmss ;
   int multipath_hash_policy ;
   int flowlabel_consistency ;
   int auto_flowlabels ;
   int icmpv6_time ;
   int icmpv6_echo_ignore_all ;
   int icmpv6_echo_ignore_multicast ;
   int icmpv6_echo_ignore_anycast ;
   unsigned long icmpv6_ratemask[4U] ;
   unsigned long *icmpv6_ratemask_ptr ;
   int anycast_src_echo_reply ;
   int ip_nonlocal_bind ;
   int fwmark_reflect ;
   int idgen_retries ;
   int idgen_delay ;
   int flowlabel_state_ranges ;
   int flowlabel_reflect ;
   int max_dst_opts_cnt ;
   int max_hbh_opts_cnt ;
   int max_dst_opts_len ;
   int max_hbh_opts_len ;
   int seg6_flowlabel ;
   bool skip_notify_on_dev_down ;
};
#line 56 
struct ipv6_devconf;
#line 56 
struct fib6_info;
#line 56 
struct rt6_info;
#line 56 
struct rt6_statistics;
#line 56 
struct fib6_table;
#line 56 
struct seg6_pernet_data;
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ipv6.h"
struct __anonstruct_ip6addrlbl_table_580 {
   struct hlist_head head ;
   spinlock_t lock ;
   u32 seq ;
};
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ipv6.h"
struct netns_ipv6 {
   struct netns_sysctl_ipv6 sysctl ;
   struct ipv6_devconf *devconf_all ;
   struct ipv6_devconf *devconf_dflt ;
   struct inet_peer_base *peers ;
   struct fqdir *fqdir ;
   struct xt_table *ip6table_filter ;
   struct xt_table *ip6table_mangle ;
   struct xt_table *ip6table_raw ;
   struct xt_table *ip6table_security ;
   struct xt_table *ip6table_nat ;
   struct fib6_info *fib6_null_entry ;
   struct rt6_info *ip6_null_entry ;
   struct rt6_statistics *rt6_stats ;
   struct timer_list ip6_fib_timer ;
   struct hlist_head *fib_table_hash ;
   struct fib6_table *fib6_main_tbl ;
   struct list_head fib6_walkers ;
   struct dst_ops ip6_dst_ops ;
   rwlock_t fib6_walker_lock ;
   spinlock_t fib6_gc_lock ;
   unsigned int ip6_rt_gc_expire ;
   unsigned long ip6_rt_last_gc ;
   unsigned int fib6_rules_require_fldissect ;
   bool fib6_has_custom_rules ;
   unsigned int fib6_routes_require_src ;
   struct rt6_info *ip6_prohibit_entry ;
   struct rt6_info *ip6_blk_hole_entry ;
   struct fib6_table *fib6_local_tbl ;
   struct fib_rules_ops *fib6_rules_ops ;
   struct sock **icmp_sk ;
   struct sock *ndisc_sk ;
   struct sock *tcp_sk ;
   struct sock *igmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct list_head mr6_tables ;
   struct fib_rules_ops *mr6_rules_ops ;
   atomic_t dev_addr_genid ;
   atomic_t fib6_sernum ;
   struct seg6_pernet_data *seg6_data ;
   struct fib_notifier_ops *notifier_ops ;
   struct fib_notifier_ops *ip6mr_notifier_ops ;
   unsigned int ipmr_seq ;
   struct __anonstruct_ip6addrlbl_table_580 ip6addrlbl_table ;
};
#line 121  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ipv6.h"
struct netns_nf_frag {
   struct fqdir *fqdir ;
};
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/nexthop.h"
struct netns_nexthop {
   struct rb_root rb_root ;
   struct hlist_head *devhash ;
   unsigned int seq ;
   u32 last_id_allocated ;
};
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ieee802154_6lowpan.h"
struct netns_sysctl_lowpan {
   struct ctl_table_header *frags_hdr ;
};
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ieee802154_6lowpan.h"
struct netns_ieee802154_lowpan {
   struct netns_sysctl_lowpan sysctl ;
   struct fqdir *fqdir ;
};
#line 21 
struct sctp_mib;
#line 10  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/sctp.h"
struct netns_sctp {
   struct sctp_mib *sctp_statistics ;
   struct proc_dir_entry *proc_net_sctp ;
   struct ctl_table_header *sysctl_header ;
   struct sock *ctl_sock ;
   struct list_head local_addr_list ;
   struct list_head addr_waitq ;
   struct timer_list addr_wq_timer ;
   struct list_head auto_asconf_splist ;
   spinlock_t addr_wq_lock ;
   spinlock_t local_addr_lock ;
   unsigned int rto_initial ;
   unsigned int rto_min ;
   unsigned int rto_max ;
   int rto_alpha ;
   int rto_beta ;
   int max_burst ;
   int cookie_preserve_enable ;
   char *sctp_hmac_alg ;
   unsigned int valid_cookie_life ;
   unsigned int sack_timeout ;
   unsigned int hb_interval ;
   int max_retrans_association ;
   int max_retrans_path ;
   int max_retrans_init ;
   int pf_retrans ;
   int ps_retrans ;
   int pf_enable ;
   int pf_expose ;
   int sndbuf_policy ;
   int rcvbuf_policy ;
   int default_auto_asconf ;
   int addip_enable ;
   int addip_noauth ;
   int prsctp_enable ;
   int reconf_enable ;
   int auth_enable ;
   int intl_enable ;
   int ecn_enable ;
   int scope_policy ;
   int rwnd_upd_shift ;
   unsigned long max_autoclose ;
};
#line 7  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/dccp.h"
struct netns_dccp {
   struct sock *v4_ctl_sk ;
   struct sock *v6_ctl_sk ;
};
#line 75  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/netfilter.h"
struct nf_logger;
#line 76 
struct nf_queue_handler;
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/netfilter.h"
struct nf_hook_entries;
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/netfilter.h"
struct netns_nf {
   struct proc_dir_entry *proc_netfilter ;
   struct nf_queue_handler *queue_handler ;
   struct nf_logger *nf_loggers[13U] ;
   struct ctl_table_header *nf_log_dir_header ;
   struct nf_hook_entries *hooks_ipv4[5U] ;
   struct nf_hook_entries *hooks_ipv6[5U] ;
   struct nf_hook_entries *hooks_arp[3U] ;
   struct nf_hook_entries *hooks_bridge[5U] ;
   struct nf_hook_entries *hooks_decnet[7U] ;
   bool defrag_ipv4 ;
   bool defrag_ipv6 ;
};
#line 37 
struct ebt_table;
#line 10  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/x_tables.h"
struct netns_xt {
   struct list_head tables[13U] ;
   bool notrack_deprecated_warning ;
   bool clusterip_deprecated_warning ;
   struct ebt_table *broute_table ;
   struct ebt_table *frame_filter ;
   struct ebt_table *frame_nat ;
};
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_nulls.h"
struct hlist_nulls_node;
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_nulls.h"
struct hlist_nulls_head {
   struct hlist_nulls_node *first ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_nulls.h"
struct hlist_nulls_node {
   struct hlist_nulls_node *next ;
   struct hlist_nulls_node **pprev ;
};
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct nf_generic_net {
   unsigned int timeout ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct nf_tcp_net {
   unsigned int timeouts[14U] ;
   int tcp_loose ;
   int tcp_be_liberal ;
   int tcp_max_retrans ;
};
#line 38  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct nf_udp_net {
   unsigned int timeouts[2U] ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct nf_icmp_net {
   unsigned int timeout ;
};
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct nf_dccp_net {
   int dccp_loose ;
   unsigned int dccp_timeout[10U] ;
};
#line 54  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct nf_sctp_net {
   unsigned int timeouts[10U] ;
};
#line 66  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct nf_gre_net {
   struct list_head keymap_list ;
   unsigned int timeouts[2U] ;
};
#line 72  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct nf_ip_net {
   struct nf_generic_net generic ;
   struct nf_tcp_net tcp ;
   struct nf_udp_net udp ;
   struct nf_icmp_net icmp ;
   struct nf_icmp_net icmpv6 ;
   struct nf_dccp_net dccp ;
   struct nf_sctp_net sctp ;
   struct nf_gre_net gre ;
};
#line 89  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct ct_pcpu {
   spinlock_t lock ;
   struct hlist_nulls_head unconfirmed ;
   struct hlist_nulls_head dying ;
};
#line 95 
struct nf_ct_event_notifier;
#line 95 
struct nf_exp_event_notifier;
#line 95  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct netns_ct {
   atomic_t count ;
   unsigned int expect_count ;
   struct delayed_work ecache_dwork ;
   bool ecache_dwork_pending ;
   bool auto_assign_helper_warned ;
   struct ctl_table_header *sysctl_header ;
   unsigned int sysctl_log_invalid ;
   int sysctl_events ;
   int sysctl_acct ;
   int sysctl_auto_assign_helper ;
   int sysctl_tstamp ;
   int sysctl_checksum ;
   struct ct_pcpu *pcpu_lists ;
   struct ip_conntrack_stat *stat ;
   struct nf_ct_event_notifier *nf_conntrack_event_cb ;
   struct nf_exp_event_notifier *nf_expect_event_cb ;
   struct nf_ip_net nf_ct_proto ;
   unsigned int labels_used ;
};
#line 7  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/nftables.h"
struct netns_nftables {
   struct list_head tables ;
   struct list_head commit_list ;
   struct list_head module_list ;
   struct mutex commit_mutex ;
   unsigned int base_seq ;
   u8 gencursor ;
   u8 validate_state ;
};
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/xfrm.h"
struct xfrm_policy_hash {
   struct hlist_head *table ;
   unsigned int hmask ;
   u8 dbits4 ;
   u8 sbits4 ;
   u8 dbits6 ;
   u8 sbits6 ;
};
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/xfrm.h"
struct xfrm_policy_hthresh {
   struct work_struct work ;
   seqlock_t lock ;
   u8 lbits4 ;
   u8 rbits4 ;
   u8 lbits6 ;
   u8 rbits6 ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/xfrm.h"
struct netns_xfrm {
   struct list_head state_all ;
   struct hlist_head *state_bydst ;
   struct hlist_head *state_bysrc ;
   struct hlist_head *state_byspi ;
   unsigned int state_hmask ;
   unsigned int state_num ;
   struct work_struct state_hash_work ;
   struct list_head policy_all ;
   struct hlist_head *policy_byidx ;
   unsigned int policy_idx_hmask ;
   struct hlist_head policy_inexact[3U] ;
   struct xfrm_policy_hash policy_bydst[3U] ;
   unsigned int policy_count[6U] ;
   struct work_struct policy_hash_work ;
   struct xfrm_policy_hthresh policy_hthresh ;
   struct list_head inexact_bins ;
   struct sock *nlsk ;
   struct sock *nlsk_stash ;
   u32 sysctl_aevent_etime ;
   u32 sysctl_aevent_rseqth ;
   int sysctl_larval_drop ;
   u32 sysctl_acq_expires ;
   struct ctl_table_header *sysctl_hdr ;
   struct dst_ops xfrm4_dst_ops ;
   struct dst_ops xfrm6_dst_ops ;
   spinlock_t xfrm_state_lock ;
   spinlock_t xfrm_policy_lock ;
   struct mutex xfrm_cfg_mutex ;
};
#line 79 
struct mpls_route;
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/mpls.h"
struct netns_mpls {
   int ip_ttl_propagate ;
   int default_ttl ;
   size_t platform_labels ;
   struct mpls_route **platform_label ;
   struct ctl_table_header *ctl ;
};
#line 20 
struct can_dev_rcv_lists;
#line 21 
struct can_pkg_stats;
#line 22 
struct can_rcv_lists_stats;
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/can.h"
struct netns_can {
   struct proc_dir_entry *proc_dir ;
   struct proc_dir_entry *pde_version ;
   struct proc_dir_entry *pde_stats ;
   struct proc_dir_entry *pde_reset_stats ;
   struct proc_dir_entry *pde_rcvlist_all ;
   struct proc_dir_entry *pde_rcvlist_fil ;
   struct proc_dir_entry *pde_rcvlist_inv ;
   struct proc_dir_entry *pde_rcvlist_sff ;
   struct proc_dir_entry *pde_rcvlist_eff ;
   struct proc_dir_entry *pde_rcvlist_err ;
   struct proc_dir_entry *bcmproc_dir ;
   struct can_dev_rcv_lists *rx_alldev_list ;
   spinlock_t rcvlists_lock ;
   struct timer_list stattimer ;
   struct can_pkg_stats *pkg_stats ;
   struct can_rcv_lists_stats *rcv_lists_stats ;
   struct hlist_head cgw_list ;
};
#line 8  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/xdp.h"
struct netns_xdp {
   struct mutex lock ;
   struct hlist_head list ;
};
#line 12 
struct proc_ns_operations;
#line 7  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ns_common.h"
struct ns_common {
   atomic_long_t stashed ;
   struct proc_ns_operations *ops ;
   unsigned int inum ;
};
#line 12 
struct net_generic;
#line 13 
struct uevent_sock;
#line 14 
struct netns_ipvs;
#line 55  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/net_namespace.h"
struct key_tag;
#line 55 
struct ucounts;
#line 55  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/net_namespace.h"
struct net {
   refcount_t passive ;
   refcount_t count ;
   spinlock_t rules_mod_lock ;
   unsigned int dev_unreg_count ;
   unsigned int dev_base_seq ;
   int ifindex ;
   spinlock_t nsid_lock ;
   atomic_t fnhe_genid ;
   struct list_head list ;
   struct list_head exit_list ;
   struct llist_node cleanup_list ;
   struct key_tag *key_domain ;
   struct user_namespace *user_ns ;
   struct ucounts *ucounts ;
   struct idr netns_ids ;
   struct ns_common ns ;
   struct list_head dev_base_head ;
   struct proc_dir_entry *proc_net ;
   struct proc_dir_entry *proc_net_stat ;
   struct ctl_table_set sysctls ;
   struct sock *rtnl ;
   struct sock *genl_sock ;
   struct uevent_sock *uevent_sock ;
   struct hlist_head *dev_name_head ;
   struct hlist_head *dev_index_head ;
   struct raw_notifier_head netdev_chain ;
   u32 hash_mix ;
   struct net_device *loopback_dev ;
   struct list_head rules_ops ;
   struct netns_core core ;
   struct netns_mib mib ;
   struct netns_packet packet ;
   struct netns_unix unx ;
   struct netns_nexthop nexthop ;
   struct netns_ipv4 ipv4 ;
   struct netns_ipv6 ipv6 ;
   struct netns_ieee802154_lowpan ieee802154_lowpan ;
   struct netns_sctp sctp ;
   struct netns_dccp dccp ;
   struct netns_nf nf ;
   struct netns_xt xt ;
   struct netns_ct ct ;
   struct netns_nftables nft ;
   struct netns_nf_frag nf_frag ;
   struct ctl_table_header *nf_frag_frags_hdr ;
   struct sock *nfnl ;
   struct sock *nfnl_stash ;
   struct list_head nfnl_acct_list ;
   struct list_head nfct_timeout_list ;
   struct sk_buff_head wext_nlevents ;
   struct net_generic *gen ;
   struct bpf_prog *flow_dissector_prog ;
   struct netns_xfrm xfrm ;
   struct netns_ipvs *ipvs ;
   struct netns_mpls mpls ;
   struct netns_can can ;
   struct netns_xdp xdp ;
   struct sock *crypto_nlsk ;
   struct sock *diag_nlsk ;
} __attribute__((__designated_init__));
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/assoc_array.h"
struct assoc_array_ptr;
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/assoc_array.h"
struct assoc_array {
   struct assoc_array_ptr *root ;
   unsigned long nr_leaves_on_tree ;
};
#line 83  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/assoc_array.h"
typedef int32_t key_serial_t;
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
typedef uint32_t key_perm_t;
#line 32 
struct key_type;
#line 85  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
struct key_tag {
   struct callback_head rcu ;
   refcount_t usage ;
   bool removed ;
};
#line 91  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
struct __anonstruct_593 {
   u16 desc_len ;
   char desc[6U] ;
};
#line 91  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
union __anonunion_592 {
   struct __anonstruct_593 __anonCompField___anonunion_592_103 ;
   unsigned long x ;
};
#line 91  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
struct keyring_index_key {
   unsigned long hash ;
   union __anonunion_592 __anonCompField_keyring_index_key_104 ;
   struct key_type *type ;
   struct key_tag *domain_tag ;
   char *description ;
};
#line 111  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
union key_payload {
   void *rcu_data0 ;
   void *data[4U] ;
};
#line 153  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
struct key_restriction {
   int (*check)(struct key *, struct key_type *, union key_payload *, struct key *) ;
   struct key *key ;
   struct key_type *keytype ;
};
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
union __anonunion_594 {
   struct list_head graveyard_link ;
   struct rb_node serial_node ;
};
#line 172 
struct key_user;
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
union __anonunion_595 {
   time64_t expiry ;
   time64_t revoked_at ;
};
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
struct __anonstruct_597 {
   unsigned long hash ;
   unsigned long len_desc ;
   struct key_type *type ;
   struct key_tag *domain_tag ;
   char *description ;
};
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
union __anonunion_596 {
   struct keyring_index_key index_key ;
   struct __anonstruct_597 __anonCompField___anonunion_596_107 ;
};
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
struct __anonstruct_599 {
   struct list_head name_link ;
   struct assoc_array keys ;
};
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
union __anonunion_598 {
   union key_payload payload ;
   struct __anonstruct_599 __anonCompField___anonunion_598_109 ;
};
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
struct key {
   refcount_t usage ;
   key_serial_t serial ;
   union __anonunion_594 __anonCompField_key_105 ;
   struct rw_semaphore sem ;
   struct key_user *user ;
   void *security ;
   union __anonunion_595 __anonCompField_key_106 ;
   time64_t last_used_at ;
   kuid_t uid ;
   kgid_t gid ;
   key_perm_t perm ;
   unsigned short quotalen ;
   unsigned short datalen ;
   short state ;
   unsigned long flags ;
   union __anonunion_596 __anonCompField_key_108 ;
   union __anonunion_598 __anonCompField_key_110 ;
   struct key_restriction *restrict_link ;
};
#line 13  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched/user.h"
struct user_struct {
   refcount_t __count ;
   atomic_t processes ;
   atomic_t sigpending ;
   atomic_t fanotify_listeners ;
   atomic_long_t epoll_watches ;
   unsigned long mq_bytes ;
   unsigned long locked_shm ;
   unsigned long unix_inflight ;
   atomic_long_t pipe_bufs ;
   struct hlist_node uidhash_node ;
   kuid_t uid ;
   atomic_long_t locked_vm ;
   struct ratelimit_state ratelimit ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cred.h"
struct group_info {
   atomic_t usage ;
   int ngroups ;
   kgid_t gid[0U] ;
} __attribute__((__designated_init__));
#line 111  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cred.h"
union __anonunion_602 {
   int non_rcu ;
   struct callback_head rcu ;
};
#line 111  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cred.h"
struct cred {
   atomic_t usage ;
   atomic_t subscribers ;
   void *put_addr ;
   unsigned int magic ;
   kuid_t uid ;
   kgid_t gid ;
   kuid_t suid ;
   kgid_t sgid ;
   kuid_t euid ;
   kgid_t egid ;
   kuid_t fsuid ;
   kgid_t fsgid ;
   unsigned int securebits ;
   kernel_cap_t cap_inheritable ;
   kernel_cap_t cap_permitted ;
   kernel_cap_t cap_effective ;
   kernel_cap_t cap_bset ;
   kernel_cap_t cap_ambient ;
   unsigned char jit_keyring ;
   struct key *session_keyring ;
   struct key *process_keyring ;
   struct key *thread_keyring ;
   struct key *request_key_auth ;
   void *security ;
   struct user_struct *user ;
   struct user_namespace *user_ns ;
   struct group_info *group_info ;
   union __anonunion_602 __anonCompField_cred_111 ;
} __attribute__((__designated_init__));
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/seq_file.h"
struct seq_file {
   char *buf ;
   size_t size ;
   size_t from ;
   size_t count ;
   size_t pad_until ;
   loff_t index ;
   loff_t read_pos ;
   u64 version ;
   struct mutex lock ;
   struct seq_operations *op ;
   int poll_event ;
   struct file *file ;
   void *private ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/seq_file.h"
struct seq_operations {
   void *(*start)(struct seq_file *, loff_t *) ;
   void (*stop)(struct seq_file *, void *) ;
   void *(*next)(struct seq_file *, void *, loff_t *) ;
   int (*show)(struct seq_file *, void *) ;
};
#line 275  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/net_namespace.h"
struct __anonstruct_possible_net_t_603 {
   struct net *net ;
};
#line 275  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/net_namespace.h"
typedef struct __anonstruct_possible_net_t_603 possible_net_t;
#line 58  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct ieee_ets {
   __u8 willing ;
   __u8 ets_cap ;
   __u8 cbs ;
   __u8 tc_tx_bw[8U] ;
   __u8 tc_rx_bw[8U] ;
   __u8 tc_tsa[8U] ;
   __u8 prio_tc[8U] ;
   __u8 tc_reco_bw[8U] ;
   __u8 tc_reco_tsa[8U] ;
   __u8 reco_prio_tc[8U] ;
};
#line 78  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct ieee_maxrate {
   __u64 tc_maxrate[8U] ;
};
#line 119  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct ieee_qcn {
   __u8 rpg_enable[8U] ;
   __u32 rppp_max_rps[8U] ;
   __u32 rpg_time_reset[8U] ;
   __u32 rpg_byte_reset[8U] ;
   __u32 rpg_threshold[8U] ;
   __u32 rpg_max_rate[8U] ;
   __u32 rpg_ai_rate[8U] ;
   __u32 rpg_hai_rate[8U] ;
   __u32 rpg_gd[8U] ;
   __u32 rpg_min_dec_fac[8U] ;
   __u32 rpg_min_rate[8U] ;
   __u32 cndd_state_machine[8U] ;
};
#line 141  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct ieee_qcn_stats {
   __u64 rppp_rp_centiseconds[8U] ;
   __u32 rppp_created_rps[8U] ;
};
#line 157  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct ieee_pfc {
   __u8 pfc_cap ;
   __u8 pfc_en ;
   __u8 mbc ;
   __u16 delay ;
   __u64 requests[8U] ;
   __u64 indications[8U] ;
};
#line 168  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct dcbnl_buffer {
   __u8 prio2buffer[8U] ;
   __u32 buffer_size[8U] ;
   __u32 total_size ;
};
#line 190  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct cee_pg {
   __u8 willing ;
   __u8 error ;
   __u8 pg_en ;
   __u8 tcs_supported ;
   __u8 pg_bw[8U] ;
   __u8 prio_pg[8U] ;
};
#line 207  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct cee_pfc {
   __u8 willing ;
   __u8 error ;
   __u8 pfc_en ;
   __u8 tcs_supported ;
};
#line 244  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct dcb_app {
   __u8 selector ;
   __u8 priority ;
   __u16 protocol ;
};
#line 259  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct dcb_peer_app_info {
   __u8 willing ;
   __u8 error ;
};
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/dcbnl.h"
struct dcbnl_rtnl_ops {
   int (*ieee_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_setets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_getmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_setmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_getqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_setqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_getqcnstats)(struct net_device *, struct ieee_qcn_stats *) ;
   int (*ieee_getpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_setpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_getapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_setapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_delapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_peer_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_peer_getpfc)(struct net_device *, struct ieee_pfc *) ;
   u8 (*getstate)(struct net_device *) ;
   u8 (*setstate)(struct net_device *, u8 ) ;
   void (*getpermhwaddr)(struct net_device *, u8 *) ;
   void (*setpgtccfgtx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgtx)(struct net_device *, int , u8 ) ;
   void (*setpgtccfgrx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgrx)(struct net_device *, int , u8 ) ;
   void (*getpgtccfgtx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgtx)(struct net_device *, int , u8 *) ;
   void (*getpgtccfgrx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgrx)(struct net_device *, int , u8 *) ;
   void (*setpfccfg)(struct net_device *, int , u8 ) ;
   void (*getpfccfg)(struct net_device *, int , u8 *) ;
   u8 (*setall)(struct net_device *) ;
   u8 (*getcap)(struct net_device *, int , u8 *) ;
   int (*getnumtcs)(struct net_device *, int , u8 *) ;
   int (*setnumtcs)(struct net_device *, int , u8 ) ;
   u8 (*getpfcstate)(struct net_device *) ;
   void (*setpfcstate)(struct net_device *, u8 ) ;
   void (*getbcncfg)(struct net_device *, int , u32 *) ;
   void (*setbcncfg)(struct net_device *, int , u32 ) ;
   void (*getbcnrp)(struct net_device *, int , u8 *) ;
   void (*setbcnrp)(struct net_device *, int , u8 ) ;
   int (*setapp)(struct net_device *, u8 , u16 , u8 ) ;
   int (*getapp)(struct net_device *, u8 , u16 ) ;
   u8 (*getfeatcfg)(struct net_device *, int , u8 *) ;
   u8 (*setfeatcfg)(struct net_device *, int , u8 ) ;
   u8 (*getdcbx)(struct net_device *) ;
   u8 (*setdcbx)(struct net_device *, u8 ) ;
   int (*peer_getappinfo)(struct net_device *, struct dcb_peer_app_info *, u16 *) ;
   int (*peer_getapptable)(struct net_device *, struct dcb_app *) ;
   int (*cee_peer_getpg)(struct net_device *, struct cee_pg *) ;
   int (*cee_peer_getpfc)(struct net_device *, struct cee_pfc *) ;
   int (*dcbnl_getbuffer)(struct net_device *, struct dcbnl_buffer *) ;
   int (*dcbnl_setbuffer)(struct net_device *, struct dcbnl_buffer *) ;
};
#line 41  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/taskstats.h"
struct taskstats {
   __u16 version ;
   __u32 ac_exitcode ;
   __u8 ac_flag ;
   __u8 ac_nice ;
   __u64 cpu_count ;
   __u64 cpu_delay_total ;
   __u64 blkio_count ;
   __u64 blkio_delay_total ;
   __u64 swapin_count ;
   __u64 swapin_delay_total ;
   __u64 cpu_run_real_total ;
   __u64 cpu_run_virtual_total ;
   char ac_comm[32U] ;
   __u8 ac_sched ;
   __u8 ac_pad[3U] ;
   __u32 ac_uid ;
   __u32 ac_gid ;
   __u32 ac_pid ;
   __u32 ac_ppid ;
   __u32 ac_btime ;
   __u64 ac_etime ;
   __u64 ac_utime ;
   __u64 ac_stime ;
   __u64 ac_minflt ;
   __u64 ac_majflt ;
   __u64 coremem ;
   __u64 virtmem ;
   __u64 hiwater_rss ;
   __u64 hiwater_vm ;
   __u64 read_char ;
   __u64 write_char ;
   __u64 read_syscalls ;
   __u64 write_syscalls ;
   __u64 read_bytes ;
   __u64 write_bytes ;
   __u64 cancelled_write_bytes ;
   __u64 nvcsw ;
   __u64 nivcsw ;
   __u64 ac_utimescaled ;
   __u64 ac_stimescaled ;
   __u64 cpu_scaled_run_real_total ;
   __u64 freepages_count ;
   __u64 freepages_delay_total ;
   __u64 thrashing_count ;
   __u64 thrashing_delay_total ;
};
#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/cgroupstats.h"
struct mnt_namespace;
#line 60 
struct uts_namespace;
#line 61 
struct ipc_namespace;
#line 62 
struct cgroup_namespace;
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/nsproxy.h"
struct nsproxy {
   atomic_t count ;
   struct uts_namespace *uts_ns ;
   struct ipc_namespace *ipc_ns ;
   struct mnt_namespace *mnt_ns ;
   struct pid_namespace *pid_ns_for_children ;
   struct net *net_ns ;
   struct cgroup_namespace *cgroup_ns ;
};
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/user_namespace.h"
struct uid_gid_extent {
   u32 first ;
   u32 lower_first ;
   u32 count ;
};
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/user_namespace.h"
struct __anonstruct_605 {
   struct uid_gid_extent *forward ;
   struct uid_gid_extent *reverse ;
};
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/user_namespace.h"
union __anonunion_604 {
   struct uid_gid_extent extent[5U] ;
   struct __anonstruct_605 __anonCompField___anonunion_604_112 ;
};
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/user_namespace.h"
struct uid_gid_map {
   u32 nr_extents ;
   union __anonunion_604 __anonCompField_uid_gid_map_113 ;
};
#line 55  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/user_namespace.h"
struct user_namespace {
   struct uid_gid_map uid_map ;
   struct uid_gid_map gid_map ;
   struct uid_gid_map projid_map ;
   atomic_t count ;
   struct user_namespace *parent ;
   int level ;
   kuid_t owner ;
   kgid_t group ;
   struct ns_common ns ;
   unsigned long flags ;
   struct list_head keyring_name_list ;
   struct key *user_keyring_register ;
   struct rw_semaphore keyring_sem ;
   struct key *persistent_keyring_register ;
   struct work_struct work ;
   struct ctl_table_set set ;
   struct ctl_table_header *sysctls ;
   struct ucounts *ucounts ;
   int ucount_max[9U] ;
} __attribute__((__designated_init__));
#line 91  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/user_namespace.h"
struct ucounts {
   struct hlist_node node ;
   struct user_namespace *ns ;
   kuid_t uid ;
   int count ;
   atomic_t ucount[9U] ;
};
#line 65  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct bpf_insn {
   __u8 code ;
   __u8 dst_reg : 4 ;
   __u8 src_reg : 4 ;
   __s16 off ;
   __s32 imm ;
};
#line 79  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct bpf_cgroup_storage_key {
   __u64 cgroup_inode_id ;
   __u32 attach_type ;
};
#line 110 
enum bpf_map_type {
    BPF_MAP_TYPE_UNSPEC = 0,
    BPF_MAP_TYPE_HASH = 1,
    BPF_MAP_TYPE_ARRAY = 2,
    BPF_MAP_TYPE_PROG_ARRAY = 3,
    BPF_MAP_TYPE_PERF_EVENT_ARRAY = 4,
    BPF_MAP_TYPE_PERCPU_HASH = 5,
    BPF_MAP_TYPE_PERCPU_ARRAY = 6,
    BPF_MAP_TYPE_STACK_TRACE = 7,
    BPF_MAP_TYPE_CGROUP_ARRAY = 8,
    BPF_MAP_TYPE_LRU_HASH = 9,
    BPF_MAP_TYPE_LRU_PERCPU_HASH = 10,
    BPF_MAP_TYPE_LPM_TRIE = 11,
    BPF_MAP_TYPE_ARRAY_OF_MAPS = 12,
    BPF_MAP_TYPE_HASH_OF_MAPS = 13,
    BPF_MAP_TYPE_DEVMAP = 14,
    BPF_MAP_TYPE_SOCKMAP = 15,
    BPF_MAP_TYPE_CPUMAP = 16,
    BPF_MAP_TYPE_XSKMAP = 17,
    BPF_MAP_TYPE_SOCKHASH = 18,
    BPF_MAP_TYPE_CGROUP_STORAGE = 19,
    BPF_MAP_TYPE_REUSEPORT_SOCKARRAY = 20,
    BPF_MAP_TYPE_PERCPU_CGROUP_STORAGE = 21,
    BPF_MAP_TYPE_QUEUE = 22,
    BPF_MAP_TYPE_STACK = 23,
    BPF_MAP_TYPE_SK_STORAGE = 24,
    BPF_MAP_TYPE_DEVMAP_HASH = 25
};
#line 139 
enum bpf_prog_type {
    BPF_PROG_TYPE_UNSPEC = 0,
    BPF_PROG_TYPE_SOCKET_FILTER = 1,
    BPF_PROG_TYPE_KPROBE = 2,
    BPF_PROG_TYPE_SCHED_CLS = 3,
    BPF_PROG_TYPE_SCHED_ACT = 4,
    BPF_PROG_TYPE_TRACEPOINT = 5,
    BPF_PROG_TYPE_XDP = 6,
    BPF_PROG_TYPE_PERF_EVENT = 7,
    BPF_PROG_TYPE_CGROUP_SKB = 8,
    BPF_PROG_TYPE_CGROUP_SOCK = 9,
    BPF_PROG_TYPE_LWT_IN = 10,
    BPF_PROG_TYPE_LWT_OUT = 11,
    BPF_PROG_TYPE_LWT_XMIT = 12,
    BPF_PROG_TYPE_SOCK_OPS = 13,
    BPF_PROG_TYPE_SK_SKB = 14,
    BPF_PROG_TYPE_CGROUP_DEVICE = 15,
    BPF_PROG_TYPE_SK_MSG = 16,
    BPF_PROG_TYPE_RAW_TRACEPOINT = 17,
    BPF_PROG_TYPE_CGROUP_SOCK_ADDR = 18,
    BPF_PROG_TYPE_LWT_SEG6LOCAL = 19,
    BPF_PROG_TYPE_LIRC_MODE2 = 20,
    BPF_PROG_TYPE_SK_REUSEPORT = 21,
    BPF_PROG_TYPE_FLOW_DISSECTOR = 22,
    BPF_PROG_TYPE_CGROUP_SYSCTL = 23,
    BPF_PROG_TYPE_RAW_TRACEPOINT_WRITABLE = 24,
    BPF_PROG_TYPE_CGROUP_SOCKOPT = 25,
    BPF_PROG_TYPE_TRACING = 26
};
#line 169 
enum bpf_attach_type {
    BPF_CGROUP_INET_INGRESS = 0,
    BPF_CGROUP_INET_EGRESS = 1,
    BPF_CGROUP_INET_SOCK_CREATE = 2,
    BPF_CGROUP_SOCK_OPS = 3,
    BPF_SK_SKB_STREAM_PARSER = 4,
    BPF_SK_SKB_STREAM_VERDICT = 5,
    BPF_CGROUP_DEVICE = 6,
    BPF_SK_MSG_VERDICT = 7,
    BPF_CGROUP_INET4_BIND = 8,
    BPF_CGROUP_INET6_BIND = 9,
    BPF_CGROUP_INET4_CONNECT = 10,
    BPF_CGROUP_INET6_CONNECT = 11,
    BPF_CGROUP_INET4_POST_BIND = 12,
    BPF_CGROUP_INET6_POST_BIND = 13,
    BPF_CGROUP_UDP4_SENDMSG = 14,
    BPF_CGROUP_UDP6_SENDMSG = 15,
    BPF_LIRC_MODE2 = 16,
    BPF_FLOW_DISSECTOR = 17,
    BPF_CGROUP_SYSCTL = 18,
    BPF_CGROUP_UDP4_RECVMSG = 19,
    BPF_CGROUP_UDP6_RECVMSG = 20,
    BPF_CGROUP_GETSOCKOPT = 21,
    BPF_CGROUP_SETSOCKOPT = 22,
    BPF_TRACE_RAW_TP = 23,
    BPF_TRACE_FENTRY = 24,
    BPF_TRACE_FEXIT = 25,
    __MAX_BPF_ATTACH_TYPE = 26
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_607 {
   __u32 map_type ;
   __u32 key_size ;
   __u32 value_size ;
   __u32 max_entries ;
   __u32 map_flags ;
   __u32 inner_map_fd ;
   __u32 numa_node ;
   char map_name[16U] ;
   __u32 map_ifindex ;
   __u32 btf_fd ;
   __u32 btf_key_type_id ;
   __u32 btf_value_type_id ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
union __anonunion_609 {
   __u64 value ;
   __u64 next_key ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_608 {
   __u32 map_fd ;
   __u64 key ;
   union __anonunion_609 __anonCompField___anonstruct_608_116 ;
   __u64 flags ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_610 {
   __u32 prog_type ;
   __u32 insn_cnt ;
   __u64 insns ;
   __u64 license ;
   __u32 log_level ;
   __u32 log_size ;
   __u64 log_buf ;
   __u32 kern_version ;
   __u32 prog_flags ;
   char prog_name[16U] ;
   __u32 prog_ifindex ;
   __u32 expected_attach_type ;
   __u32 prog_btf_fd ;
   __u32 func_info_rec_size ;
   __u64 func_info ;
   __u32 func_info_cnt ;
   __u32 line_info_rec_size ;
   __u64 line_info ;
   __u32 line_info_cnt ;
   __u32 attach_btf_id ;
   __u32 attach_prog_fd ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_611 {
   __u64 pathname ;
   __u32 bpf_fd ;
   __u32 file_flags ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_612 {
   __u32 target_fd ;
   __u32 attach_bpf_fd ;
   __u32 attach_type ;
   __u32 attach_flags ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_test_613 {
   __u32 prog_fd ;
   __u32 retval ;
   __u32 data_size_in ;
   __u32 data_size_out ;
   __u64 data_in ;
   __u64 data_out ;
   __u32 repeat ;
   __u32 duration ;
   __u32 ctx_size_in ;
   __u32 ctx_size_out ;
   __u64 ctx_in ;
   __u64 ctx_out ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
union __anonunion_615 {
   __u32 start_id ;
   __u32 prog_id ;
   __u32 map_id ;
   __u32 btf_id ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_614 {
   union __anonunion_615 __anonCompField___anonstruct_614_121 ;
   __u32 next_id ;
   __u32 open_flags ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_info_616 {
   __u32 bpf_fd ;
   __u32 info_len ;
   __u64 info ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_query_617 {
   __u32 target_fd ;
   __u32 attach_type ;
   __u32 query_flags ;
   __u32 attach_flags ;
   __u64 prog_ids ;
   __u32 prog_cnt ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_raw_tracepoint_618 {
   __u64 name ;
   __u32 prog_fd ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_619 {
   __u64 btf ;
   __u64 btf_log_buf ;
   __u32 btf_size ;
   __u32 btf_log_size ;
   __u32 btf_log_level ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_task_fd_query_620 {
   __u32 pid ;
   __u32 fd ;
   __u32 flags ;
   __u32 buf_len ;
   __u64 buf ;
   __u32 prog_id ;
   __u32 fd_type ;
   __u64 probe_offset ;
   __u64 probe_addr ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
union bpf_attr {
   struct __anonstruct_607 __anonCompField_bpf_attr_115 ;
   struct __anonstruct_608 __anonCompField_bpf_attr_117 ;
   struct __anonstruct_610 __anonCompField_bpf_attr_118 ;
   struct __anonstruct_611 __anonCompField_bpf_attr_119 ;
   struct __anonstruct_612 __anonCompField_bpf_attr_120 ;
   struct __anonstruct_test_613 test ;
   struct __anonstruct_614 __anonCompField_bpf_attr_122 ;
   struct __anonstruct_info_616 info ;
   struct __anonstruct_query_617 query ;
   struct __anonstruct_raw_tracepoint_618 raw_tracepoint ;
   struct __anonstruct_619 __anonCompField_bpf_attr_123 ;
   struct __anonstruct_task_fd_query_620 task_fd_query ;
} __attribute__((__aligned__(8)));
#line 3653  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct bpf_func_info {
   __u32 insn_off ;
   __u32 type_id ;
};
#line 3661  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct bpf_line_info {
   __u32 insn_off ;
   __u32 file_name_off ;
   __u32 line_off ;
   __u32 line_col ;
};
#line 95  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/file.h"
struct bpf_prog_aux;
#line 96 
struct bpf_map;
#line 97 
struct btf;
#line 98 
struct btf_type;
#line 37  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_map_ops {
   int (*map_alloc_check)(union bpf_attr *) ;
   struct bpf_map *(*map_alloc)(union bpf_attr *) ;
   void (*map_release)(struct bpf_map *, struct file *) ;
   void (*map_free)(struct bpf_map *) ;
   int (*map_get_next_key)(struct bpf_map *, void *, void *) ;
   void (*map_release_uref)(struct bpf_map *) ;
   void *(*map_lookup_elem_sys_only)(struct bpf_map *, void *) ;
   void *(*map_lookup_elem)(struct bpf_map *, void *) ;
   int (*map_update_elem)(struct bpf_map *, void *, void *, u64 ) ;
   int (*map_delete_elem)(struct bpf_map *, void *) ;
   int (*map_push_elem)(struct bpf_map *, void *, u64 ) ;
   int (*map_pop_elem)(struct bpf_map *, void *) ;
   int (*map_peek_elem)(struct bpf_map *, void *) ;
   void *(*map_fd_get_ptr)(struct bpf_map *, struct file *, int ) ;
   void (*map_fd_put_ptr)(void *) ;
   u32 (*map_gen_lookup)(struct bpf_map *, struct bpf_insn *) ;
   u32 (*map_fd_sys_lookup_elem)(void *) ;
   void (*map_seq_show_elem)(struct bpf_map *, void *, struct seq_file *) ;
   int (*map_check_btf)(struct bpf_map *, struct btf *, struct btf_type *, struct btf_type *) ;
   int (*map_poke_track)(struct bpf_map *, struct bpf_prog_aux *) ;
   void (*map_poke_untrack)(struct bpf_map *, struct bpf_prog_aux *) ;
   void (*map_poke_run)(struct bpf_map *, u32 , struct bpf_prog *, struct bpf_prog *) ;
   int (*map_direct_value_addr)(struct bpf_map *, u64 *, u32 ) ;
   int (*map_direct_value_meta)(struct bpf_map *, u64 , u32 *) ;
   int (*map_mmap)(struct bpf_map *, struct vm_area_struct *) ;
};
#line 82  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_map_memory {
   u32 pages ;
   struct user_struct *user ;
};
#line 87  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_map {
   struct bpf_map_ops *ops ;
   struct bpf_map *inner_map_meta ;
   void *security ;
   enum bpf_map_type map_type ;
   u32 key_size ;
   u32 value_size ;
   u32 max_entries ;
   u32 map_flags ;
   int spin_lock_off ;
   u32 id ;
   int numa_node ;
   u32 btf_key_type_id ;
   u32 btf_value_type_id ;
   struct btf *btf ;
   struct bpf_map_memory memory ;
   char name[16U] ;
   bool unpriv_array ;
   bool frozen ;
   atomic64_t refcnt ;
   atomic64_t usercnt ;
   struct work_struct work ;
   struct mutex freeze_mutex ;
   u64 writecnt ;
};
#line 151 
struct bpf_offload_dev;
#line 152 
struct bpf_offloaded_map;
#line 156  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_map_dev_ops {
   int (*map_get_next_key)(struct bpf_offloaded_map *, void *, void *) ;
   int (*map_lookup_elem)(struct bpf_offloaded_map *, void *, void *) ;
   int (*map_update_elem)(struct bpf_offloaded_map *, void *, void *, u64 ) ;
   int (*map_delete_elem)(struct bpf_offloaded_map *, void *) ;
};
#line 166  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_offloaded_map {
   struct bpf_map map ;
   struct net_device *netdev ;
   struct bpf_map_dev_ops *dev_ops ;
   void *dev_priv ;
   struct list_head offloads ;
};
#line 327  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_prog_ops {
   int (*test_run)(struct bpf_prog *, union bpf_attr *, union bpf_attr *) ;
};
#line 369  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_prog_offload {
   struct bpf_prog *prog ;
   struct net_device *netdev ;
   struct bpf_offload_dev *offdev ;
   void *dev_priv ;
   struct list_head offloads ;
   bool dev_state ;
   bool opt_failed ;
   void *jited_image ;
   u32 jited_len ;
};
#line 394  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_prog_stats {
   u64 cnt ;
   u64 nsecs ;
   struct u64_stats_sync syncp ;
} __attribute__((__aligned__(16)));
#line 400  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct btf_func_model {
   u8 ret_size ;
   u8 nr_args ;
   u8 arg_size[12U] ;
};
#line 447 
enum bpf_tramp_prog_type {
    BPF_TRAMP_FENTRY = 0,
    BPF_TRAMP_FEXIT = 1,
    BPF_TRAMP_MAX = 2
};
#line 454  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct __anonstruct_func_647 {
   struct btf_func_model model ;
   void *addr ;
   bool ftrace_managed ;
};
#line 454  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_trampoline {
   struct hlist_node hlist ;
   struct mutex mutex ;
   refcount_t refcnt ;
   u64 key ;
   struct __anonstruct_func_647 func ;
   struct hlist_head progs_hlist[2U] ;
   int progs_cnt[2U] ;
   void *image ;
   u64 selector ;
};
#line 495  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_func_info_aux {
   bool unreliable ;
};
#line 504  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct __anonstruct_tail_call_649 {
   struct bpf_map *map ;
   u32 key ;
};
#line 504  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
union __anonunion_648 {
   struct __anonstruct_tail_call_649 tail_call ;
};
#line 504  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_jit_poke_descriptor {
   void *ip ;
   union __anonunion_648 __anonCompField_bpf_jit_poke_descriptor_148 ;
   bool ip_stable ;
   u8 adj_off ;
   u16 reason ;
};
#line 517  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
union __anonunion_650 {
   struct work_struct work ;
   struct callback_head rcu ;
};
#line 517  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_prog_aux {
   atomic64_t refcnt ;
   u32 used_map_cnt ;
   u32 max_ctx_offset ;
   u32 max_pkt_offset ;
   u32 max_tp_access ;
   u32 stack_depth ;
   u32 id ;
   u32 func_cnt ;
   u32 func_idx ;
   u32 attach_btf_id ;
   struct bpf_prog *linked_prog ;
   bool verifier_zext ;
   bool offload_requested ;
   bool attach_btf_trace ;
   bool func_proto_unreliable ;
   enum bpf_tramp_prog_type trampoline_prog_type ;
   struct bpf_trampoline *trampoline ;
   struct hlist_node tramp_hlist ;
   struct btf_type *attach_func_proto ;
   char *attach_func_name ;
   struct bpf_prog **func ;
   void *jit_data ;
   struct bpf_jit_poke_descriptor *poke_tab ;
   u32 size_poke_tab ;
   struct latch_tree_node ksym_tnode ;
   struct list_head ksym_lnode ;
   struct bpf_prog_ops *ops ;
   struct bpf_map **used_maps ;
   struct bpf_prog *prog ;
   struct user_struct *user ;
   u64 load_time ;
   struct bpf_map *cgroup_storage[2U] ;
   char name[16U] ;
   void *security ;
   struct bpf_prog_offload *offload ;
   struct btf *btf ;
   struct bpf_func_info *func_info ;
   struct bpf_func_info_aux *func_info_aux ;
   struct bpf_line_info *linfo ;
   void **jited_linfo ;
   u32 func_info_cnt ;
   u32 nr_linfo ;
   u32 linfo_idx ;
   u32 num_exentries ;
   struct exception_table_entry *extable ;
   struct bpf_prog_stats *stats ;
   union __anonunion_650 __anonCompField_bpf_prog_aux_149 ;
};
#line 686 
struct bpf_cgroup_storage;
#line 686  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_prog_array_item {
   struct bpf_prog *prog ;
   struct bpf_cgroup_storage *cgroup_storage[2U] ;
};
#line 691  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_prog_array {
   struct callback_head rcu ;
   struct bpf_prog_array_item items[0U] ;
};
#line 1335 
struct cgroup;
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf-cgroup.h"
struct bpf_cgroup_storage_map;
#line 37  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf-cgroup.h"
struct bpf_storage_buffer {
   struct callback_head rcu ;
   char data[0U] ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf-cgroup.h"
union __anonunion_652 {
   struct bpf_storage_buffer *buf ;
   void *percpu_buf ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf-cgroup.h"
struct bpf_cgroup_storage {
   union __anonunion_652 __anonCompField_bpf_cgroup_storage_151 ;
   struct bpf_cgroup_storage_map *map ;
   struct bpf_cgroup_storage_key key ;
   struct list_head list ;
   struct rb_node node ;
   struct callback_head rcu ;
};
#line 62  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf-cgroup.h"
struct cgroup_bpf {
   struct bpf_prog_array *effective[26U] ;
   struct list_head progs[26U] ;
   u32 flags[26U] ;
   struct bpf_prog_array *inactive ;
   struct percpu_ref refcnt ;
   struct work_struct release_work ;
};
#line 69  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kthread.h"
struct kthread_work;
#line 86  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kthread.h"
struct kthread_worker {
   unsigned int flags ;
   raw_spinlock_t lock ;
   struct list_head work_list ;
   struct list_head delayed_work_list ;
   struct task_struct *task ;
   struct kthread_work *current_work ;
};
#line 95  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kthread.h"
struct kthread_work {
   struct list_head node ;
   void (*func)(struct kthread_work *) ;
   struct kthread_worker *worker ;
   int canceling ;
};
#line 103  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kthread.h"
struct kthread_delayed_work {
   struct kthread_work work ;
   struct timer_list timer ;
};
#line 199 
struct cgroup_subsys_state;
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/psi_types.h"
struct psi_group_cpu {
   seqcount_t seq ;
   unsigned int tasks[3U] ;
   u32 state_mask ;
   u32 times[6U] ;
   u64 state_start ;
   u32 times_prev[2U][6U] ;
};
#line 96 
struct psi_group;
#line 128  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/psi_types.h"
struct psi_group {
   struct mutex avgs_lock ;
   struct psi_group_cpu *pcpu ;
   u64 avg_total[5U] ;
   u64 avg_last_update ;
   u64 avg_next_update ;
   struct delayed_work avgs_work ;
   u64 total[2U][5U] ;
   unsigned long avg[5U][3U] ;
   atomic_t poll_scheduled ;
   struct kthread_worker *poll_kworker ;
   struct kthread_delayed_work poll_work ;
   struct mutex trigger_lock ;
   struct list_head triggers ;
   u32 nr_triggers[5U] ;
   u32 poll_states ;
   u64 poll_min_period ;
   u64 polling_total[5U] ;
   u64 polling_next_update ;
   u64 polling_until ;
};
#line 166 
struct cgroup_root;
#line 167 
struct cgroup_subsys;
#line 168 
struct cgroup_taskset;
#line 119  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cgroup_file {
   struct kernfs_node *kn ;
   unsigned long notified_at ;
   struct timer_list notify_timer ;
};
#line 133  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cgroup_subsys_state {
   struct cgroup *cgroup ;
   struct cgroup_subsys *ss ;
   struct percpu_ref refcnt ;
   struct list_head sibling ;
   struct list_head children ;
   struct list_head rstat_css_node ;
   int id ;
   unsigned int flags ;
   u64 serial_nr ;
   atomic_t online_cnt ;
   struct work_struct destroy_work ;
   struct rcu_work destroy_rwork ;
   struct cgroup_subsys_state *parent ;
};
#line 190  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct css_set {
   struct cgroup_subsys_state *subsys[14U] ;
   refcount_t refcount ;
   struct css_set *dom_cset ;
   struct cgroup *dfl_cgrp ;
   int nr_tasks ;
   struct list_head tasks ;
   struct list_head mg_tasks ;
   struct list_head dying_tasks ;
   struct list_head task_iters ;
   struct list_head e_cset_node[14U] ;
   struct list_head threaded_csets ;
   struct list_head threaded_csets_node ;
   struct hlist_node hlist ;
   struct list_head cgrp_links ;
   struct list_head mg_preload_node ;
   struct list_head mg_node ;
   struct cgroup *mg_src_cgrp ;
   struct cgroup *mg_dst_cgrp ;
   struct css_set *mg_dst_cset ;
   bool dead ;
   struct callback_head callback_head ;
};
#line 279  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cgroup_base_stat {
   struct task_cputime cputime ;
};
#line 303  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cgroup_rstat_cpu {
   struct u64_stats_sync bsync ;
   struct cgroup_base_stat bstat ;
   struct cgroup_base_stat last_bstat ;
   struct cgroup *updated_children ;
   struct cgroup *updated_next ;
};
#line 332  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cgroup_freezer_state {
   bool freeze ;
   int e_freeze ;
   int nr_frozen_descendants ;
   int nr_frozen_tasks ;
};
#line 351  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cgroup {
   struct cgroup_subsys_state self ;
   unsigned long flags ;
   int level ;
   int max_depth ;
   int nr_descendants ;
   int nr_dying_descendants ;
   int max_descendants ;
   int nr_populated_csets ;
   int nr_populated_domain_children ;
   int nr_populated_threaded_children ;
   int nr_threaded_children ;
   struct kernfs_node *kn ;
   struct cgroup_file procs_file ;
   struct cgroup_file events_file ;
   u16 subtree_control ;
   u16 subtree_ss_mask ;
   u16 old_subtree_control ;
   u16 old_subtree_ss_mask ;
   struct cgroup_subsys_state *subsys[14U] ;
   struct cgroup_root *root ;
   struct list_head cset_links ;
   struct list_head e_csets[14U] ;
   struct cgroup *dom_cgrp ;
   struct cgroup *old_dom_cgrp ;
   struct cgroup_rstat_cpu *rstat_cpu ;
   struct list_head rstat_css_list ;
   struct cgroup_base_stat last_bstat ;
   struct cgroup_base_stat bstat ;
   struct prev_cputime prev_cputime ;
   struct list_head pidlists ;
   struct mutex pidlist_mutex ;
   wait_queue_head_t offline_waitq ;
   struct work_struct release_agent_work ;
   struct psi_group psi ;
   struct cgroup_bpf bpf ;
   atomic_t congestion_count ;
   struct cgroup_freezer_state freezer ;
   u64 ancestor_ids[] ;
};
#line 489  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cgroup_root {
   struct kernfs_root *kf_root ;
   unsigned int subsys_mask ;
   int hierarchy_id ;
   struct cgroup cgrp ;
   u64 cgrp_ancestor_id_storage ;
   atomic_t nr_cgrps ;
   struct list_head root_list ;
   unsigned int flags ;
   char release_agent_path[4096U] ;
   char name[64U] ;
};
#line 527  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cftype {
   char name[64U] ;
   unsigned long private ;
   size_t max_write_len ;
   unsigned int flags ;
   unsigned int file_offset ;
   struct cgroup_subsys *ss ;
   struct list_head node ;
   struct kernfs_ops *kf_ops ;
   int (*open)(struct kernfs_open_file *) ;
   void (*release)(struct kernfs_open_file *) ;
   u64 (*read_u64)(struct cgroup_subsys_state *, struct cftype *) ;
   s64 (*read_s64)(struct cgroup_subsys_state *, struct cftype *) ;
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   int (*write_u64)(struct cgroup_subsys_state *, struct cftype *, u64 ) ;
   int (*write_s64)(struct cgroup_subsys_state *, struct cftype *, s64 ) ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   __poll_t (*poll)(struct kernfs_open_file *, struct poll_table_struct *) ;
   struct lock_class_key lockdep_key ;
};
#line 616  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cgroup_subsys {
   struct cgroup_subsys_state *(*css_alloc)(struct cgroup_subsys_state *) ;
   int (*css_online)(struct cgroup_subsys_state *) ;
   void (*css_offline)(struct cgroup_subsys_state *) ;
   void (*css_released)(struct cgroup_subsys_state *) ;
   void (*css_free)(struct cgroup_subsys_state *) ;
   void (*css_reset)(struct cgroup_subsys_state *) ;
   void (*css_rstat_flush)(struct cgroup_subsys_state *, int ) ;
   int (*css_extra_stat_show)(struct seq_file *, struct cgroup_subsys_state *) ;
   int (*can_attach)(struct cgroup_taskset *) ;
   void (*cancel_attach)(struct cgroup_taskset *) ;
   void (*attach)(struct cgroup_taskset *) ;
   void (*post_attach)(void) ;
   int (*can_fork)(struct task_struct *) ;
   void (*cancel_fork)(struct task_struct *) ;
   void (*fork)(struct task_struct *) ;
   void (*exit)(struct task_struct *) ;
   void (*release)(struct task_struct *) ;
   void (*bind)(struct cgroup_subsys_state *) ;
   bool early_init : 1 ;
   bool implicit_on_dfl : 1 ;
   bool threaded : 1 ;
   bool broken_hierarchy : 1 ;
   bool warned_broken_hierarchy : 1 ;
   int id ;
   char *name ;
   char *legacy_name ;
   struct cgroup_root *root ;
   struct idr css_idr ;
   struct list_head cfts ;
   struct cftype *dfl_cftypes ;
   struct cftype *legacy_cftypes ;
   unsigned int depends_on ;
};
#line 783  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct __anonstruct_654 {
   u8 is_data ;
   u8 padding ;
   u16 prioidx ;
   u32 classid ;
} __attribute__((__packed__));
#line 783  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
union __anonunion_653 {
   struct __anonstruct_654 __anonCompField___anonunion_653_152 ;
   u64 val ;
};
#line 783  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct sock_cgroup_data {
   union __anonunion_653 __anonCompField_sock_cgroup_data_153 ;
};
#line 848  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup.h"
struct cgroup_namespace {
   refcount_t count ;
   struct ns_common ns ;
   struct user_namespace *user_ns ;
   struct ucounts *ucounts ;
   struct css_set *root_cset ;
};
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netprio_cgroup.h"
struct netprio_map {
   struct callback_head rcu ;
   u32 priomap_len ;
   u32 priomap[] ;
};
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/xdp.h"
struct xdp_mem_info {
   u32 type ;
   u32 id ;
};
#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/xdp.h"
struct xdp_rxq_info {
   struct net_device *dev ;
   u32 queue_index ;
   u32 reg_state ;
   struct xdp_mem_info mem ;
} __attribute__((__aligned__(64)));
#line 75  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/xdp.h"
struct xdp_frame {
   void *data ;
   u16 len ;
   u16 headroom ;
   u16 metasize ;
   struct xdp_mem_info mem ;
   struct net_device *dev_rx ;
};
#line 175 
struct netdev_bpf;
#line 160  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/security.h"
struct xfrm_policy;
#line 161 
struct xfrm_state;
#line 178 
struct request_sock;
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched/signal.h"
struct sighand_struct {
   spinlock_t siglock ;
   refcount_t count ;
   wait_queue_head_t signalfd_wqh ;
   struct k_sigaction action[64U] ;
};
#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched/signal.h"
struct pacct_struct {
   int ac_flag ;
   long ac_exitcode ;
   unsigned long ac_mem ;
   u64 ac_utime ;
   u64 ac_stime ;
   unsigned long ac_minflt ;
   unsigned long ac_majflt ;
};
#line 36  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched/signal.h"
struct cpu_itimer {
   u64 expires ;
   u64 incr ;
};
#line 45  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched/signal.h"
struct task_cputime_atomic {
   atomic64_t utime ;
   atomic64_t stime ;
   atomic64_t sum_exec_runtime ;
};
#line 64  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched/signal.h"
struct thread_group_cputimer {
   struct task_cputime_atomic cputime_atomic ;
};
#line 80 
struct tty_struct;
#line 80 
struct autogroup;
#line 80 
struct tty_audit_buf;
#line 80  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched/signal.h"
struct signal_struct {
   refcount_t sigcnt ;
   atomic_t live ;
   int nr_threads ;
   struct list_head thread_head ;
   wait_queue_head_t wait_chldexit ;
   struct task_struct *curr_target ;
   struct sigpending shared_pending ;
   struct hlist_head multiprocess ;
   int group_exit_code ;
   int notify_count ;
   struct task_struct *group_exit_task ;
   int group_stop_count ;
   unsigned int flags ;
   unsigned int is_child_subreaper : 1 ;
   unsigned int has_child_subreaper : 1 ;
   int posix_timer_id ;
   struct list_head posix_timers ;
   struct hrtimer real_timer ;
   ktime_t it_real_incr ;
   struct cpu_itimer it[2U] ;
   struct thread_group_cputimer cputimer ;
   struct posix_cputimers posix_cputimers ;
   struct pid *pids[4U] ;
   struct pid *tty_old_pgrp ;
   int leader ;
   struct tty_struct *tty ;
   struct autogroup *autogroup ;
   seqlock_t stats_lock ;
   u64 utime ;
   u64 stime ;
   u64 cutime ;
   u64 cstime ;
   u64 gtime ;
   u64 cgtime ;
   struct prev_cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   unsigned long cnvcsw ;
   unsigned long cnivcsw ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   unsigned long cmin_flt ;
   unsigned long cmaj_flt ;
   unsigned long inblock ;
   unsigned long oublock ;
   unsigned long cinblock ;
   unsigned long coublock ;
   unsigned long maxrss ;
   unsigned long cmaxrss ;
   struct task_io_accounting ioac ;
   unsigned long long sum_sched_runtime ;
   struct rlimit rlim[16U] ;
   struct pacct_struct pacct ;
   struct taskstats *stats ;
   unsigned int audit_tty ;
   struct tty_audit_buf *tty_audit_buf ;
   bool oom_flag_origin ;
   short oom_score_adj ;
   short oom_score_adj_min ;
   struct mm_struct *oom_mm ;
   struct mutex cred_guard_mutex ;
} __attribute__((__designated_init__));
#line 44  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/netlink.h"
struct nlmsghdr {
   __u32 nlmsg_len ;
   __u16 nlmsg_type ;
   __u16 nlmsg_flags ;
   __u32 nlmsg_seq ;
   __u32 nlmsg_pid ;
};
#line 211  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/netlink.h"
struct nlattr {
   __u16 nla_len ;
   __u16 nla_type ;
};
#line 74  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netlink.h"
struct netlink_ext_ack {
   char *_msg ;
   struct nlattr *bad_attr ;
   u8 cookie[20U] ;
   u8 cookie_len ;
};
#line 180  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netlink.h"
union __anonunion_677 {
   u8 ctx[48U] ;
   long args[6U] ;
};
#line 180  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netlink.h"
struct netlink_callback {
   struct sk_buff *skb ;
   struct nlmsghdr *nlh ;
   int (*dump)(struct sk_buff *, struct netlink_callback *) ;
   int (*done)(struct netlink_callback *) ;
   void *data ;
   struct module *module ;
   struct netlink_ext_ack *extack ;
   u16 family ;
   u16 min_dump_alloc ;
   bool strict_check ;
   u16 answer_flags ;
   unsigned int prev_seq ;
   unsigned int seq ;
   union __anonunion_677 __anonCompField_netlink_callback_154 ;
};
#line 8  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/neighbour.h"
struct ndmsg {
   __u8 ndm_family ;
   __u8 ndm_pad1 ;
   __u16 ndm_pad2 ;
   __s32 ndm_ifindex ;
   __u16 ndm_state ;
   __u8 ndm_flags ;
   __u8 ndm_type ;
};
#line 44  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if_link.h"
struct rtnl_link_stats64 {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 rx_errors ;
   __u64 tx_errors ;
   __u64 rx_dropped ;
   __u64 tx_dropped ;
   __u64 multicast ;
   __u64 collisions ;
   __u64 rx_length_errors ;
   __u64 rx_over_errors ;
   __u64 rx_crc_errors ;
   __u64 rx_frame_errors ;
   __u64 rx_fifo_errors ;
   __u64 rx_missed_errors ;
   __u64 tx_aborted_errors ;
   __u64 tx_carrier_errors ;
   __u64 tx_fifo_errors ;
   __u64 tx_heartbeat_errors ;
   __u64 tx_window_errors ;
   __u64 rx_compressed ;
   __u64 tx_compressed ;
   __u64 rx_nohandler ;
};
#line 753  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if_link.h"
struct ifla_vf_guid {
   __u32 vf ;
   __u64 guid ;
};
#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/if_link.h"
struct ifla_vf_stats {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 broadcast ;
   __u64 multicast ;
   __u64 rx_dropped ;
   __u64 tx_dropped ;
};
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/if_link.h"
struct ifla_vf_info {
   __u32 vf ;
   __u8 mac[32U] ;
   __u32 vlan ;
   __u32 qos ;
   __u32 spoofchk ;
   __u32 linkstate ;
   __u32 min_tx_rate ;
   __u32 max_tx_rate ;
   __u32 rss_query_en ;
   __u32 trusted ;
   __be16 vlan_proto ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/pkt_sched.h"
struct tc_stats {
   __u64 bytes ;
   __u32 packets ;
   __u32 drops ;
   __u32 overlimits ;
   __u32 bps ;
   __u32 pps ;
   __u32 qlen ;
   __u32 backlog ;
};
#line 102  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/pkt_sched.h"
struct tc_sizespec {
   unsigned char cell_log ;
   unsigned char size_log ;
   short cell_align ;
   int overhead ;
   unsigned int linklayer ;
   unsigned int mpu ;
   unsigned int mtu ;
   unsigned int tsize ;
};
#line 118  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/hashtable.h"
struct netpoll_info;
#line 119 
struct phy_device;
#line 120 
struct dsa_port;
#line 121 
struct sfp_bus;
#line 122 
struct wireless_dev;
#line 123 
struct wpan_dev;
#line 124 
struct mpls_dev;
#line 125 
struct udp_tunnel_info;
#line 69  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
enum netdev_tx {
    __NETDEV_TX_MIN = -2147483648,
    NETDEV_TX_OK = 0,
    NETDEV_TX_BUSY = 16
};
#line 75  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
typedef enum netdev_tx netdev_tx_t;
#line 161  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct net_device_stats {
   unsigned long rx_packets ;
   unsigned long tx_packets ;
   unsigned long rx_bytes ;
   unsigned long tx_bytes ;
   unsigned long rx_errors ;
   unsigned long tx_errors ;
   unsigned long rx_dropped ;
   unsigned long tx_dropped ;
   unsigned long multicast ;
   unsigned long collisions ;
   unsigned long rx_length_errors ;
   unsigned long rx_over_errors ;
   unsigned long rx_crc_errors ;
   unsigned long rx_frame_errors ;
   unsigned long rx_fifo_errors ;
   unsigned long rx_missed_errors ;
   unsigned long tx_aborted_errors ;
   unsigned long tx_carrier_errors ;
   unsigned long tx_fifo_errors ;
   unsigned long tx_heartbeat_errors ;
   unsigned long tx_window_errors ;
   unsigned long rx_compressed ;
   unsigned long tx_compressed ;
};
#line 195 
struct neigh_parms;
#line 217  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_hw_addr_list {
   struct list_head list ;
   int count ;
};
#line 237  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct hh_cache {
   unsigned int hh_len ;
   seqlock_t hh_lock ;
   unsigned long hh_data[16U] ;
};
#line 263  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct header_ops {
   int (*create)(struct sk_buff *, struct net_device *, unsigned short , void *, void *, unsigned int ) ;
   int (*parse)(struct sk_buff *, unsigned char *) ;
   int (*cache)(struct neighbour *, struct hh_cache *, __be16 ) ;
   void (*cache_update)(struct hh_cache *, struct net_device *, unsigned char *) ;
   bool (*validate)(char *, unsigned int ) ;
   __be16 (*parse_protocol)(struct sk_buff *) ;
};
#line 372 
enum rx_handler_result {
    RX_HANDLER_CONSUMED = 0,
    RX_HANDLER_ANOTHER = 1,
    RX_HANDLER_EXACT = 2,
    RX_HANDLER_PASS = 3
};
#line 379  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
typedef enum rx_handler_result rx_handler_result_t;
#line 421  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
typedef rx_handler_result_t rx_handler_func_t(struct sk_buff **);
#line 589 
struct Qdisc;
#line 589 
struct xdp_umem;
#line 589  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_queue {
   struct net_device *dev ;
   struct Qdisc *qdisc ;
   struct Qdisc *qdisc_sleeping ;
   struct kobject kobj ;
   int numa_node ;
   unsigned long tx_maxrate ;
   unsigned long trans_timeout ;
   struct net_device *sb_dev ;
   struct xdp_umem *umem ;
   spinlock_t _xmit_lock ;
   int xmit_lock_owner ;
   unsigned long trans_start ;
   unsigned long state ;
   struct dql dql ;
} __attribute__((__aligned__(64)));
#line 662  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct rps_map {
   unsigned int len ;
   struct callback_head rcu ;
   u16 cpus[0U] ;
};
#line 674  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct rps_dev_flow {
   u16 cpu ;
   u16 filter ;
   unsigned int last_qtail ;
};
#line 684  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct rps_dev_flow_table {
   unsigned int mask ;
   struct callback_head rcu ;
   struct rps_dev_flow flows[0U] ;
};
#line 736  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_rx_queue {
   struct rps_map *rps_map ;
   struct rps_dev_flow_table *rps_flow_table ;
   struct kobject kobj ;
   struct net_device *dev ;
   struct xdp_rxq_info xdp_rxq ;
   struct xdp_umem *umem ;
} __attribute__((__aligned__(64)));
#line 764  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct xps_map {
   unsigned int len ;
   unsigned int alloc_len ;
   struct callback_head rcu ;
   u16 queues[0U] ;
};
#line 777  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct xps_dev_maps {
   struct callback_head rcu ;
   struct xps_map *attr_map[0U] ;
};
#line 793  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_tc_txq {
   u16 count ;
   u16 offset ;
};
#line 803  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_fcoe_hbainfo {
   char manufacturer[64U] ;
   char serial_number[64U] ;
   char hardware_version[64U] ;
   char driver_version[64U] ;
   char optionrom_version[64U] ;
   char firmware_version[64U] ;
   char model[256U] ;
   char model_description[256U] ;
};
#line 820  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_phys_item_id {
   unsigned char id[32U] ;
   unsigned char id_len ;
};
#line 833 
enum tc_setup_type {
    TC_SETUP_QDISC_MQPRIO = 0,
    TC_SETUP_CLSU32 = 1,
    TC_SETUP_CLSFLOWER = 2,
    TC_SETUP_CLSMATCHALL = 3,
    TC_SETUP_CLSBPF = 4,
    TC_SETUP_BLOCK = 5,
    TC_SETUP_QDISC_CBS = 6,
    TC_SETUP_QDISC_RED = 7,
    TC_SETUP_QDISC_PRIO = 8,
    TC_SETUP_QDISC_MQ = 9,
    TC_SETUP_QDISC_ETF = 10,
    TC_SETUP_ROOT_QDISC = 11,
    TC_SETUP_QDISC_GRED = 12,
    TC_SETUP_QDISC_TAPRIO = 13,
    TC_SETUP_FT = 14
};
#line 851 
enum bpf_netdev_command {
    XDP_SETUP_PROG = 0,
    XDP_SETUP_PROG_HW = 1,
    XDP_QUERY_PROG = 2,
    XDP_QUERY_PROG_HW = 3,
    BPF_OFFLOAD_MAP_ALLOC = 4,
    BPF_OFFLOAD_MAP_FREE = 5,
    XDP_SETUP_XSK_UMEM = 6
};
#line 879  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct __anonstruct_682 {
   u32 flags ;
   struct bpf_prog *prog ;
   struct netlink_ext_ack *extack ;
};
#line 879  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct __anonstruct_683 {
   u32 prog_id ;
   u32 prog_flags ;
};
#line 879  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct __anonstruct_684 {
   struct bpf_offloaded_map *offmap ;
};
#line 879  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct __anonstruct_xsk_685 {
   struct xdp_umem *umem ;
   u16 queue_id ;
};
#line 879  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
union __anonunion_681 {
   struct __anonstruct_682 __anonCompField___anonunion_681_156 ;
   struct __anonstruct_683 __anonCompField___anonunion_681_157 ;
   struct __anonstruct_684 __anonCompField___anonunion_681_158 ;
   struct __anonstruct_xsk_685 xsk ;
};
#line 879  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_bpf {
   enum bpf_netdev_command command ;
   union __anonunion_681 __anonCompField_netdev_bpf_159 ;
};
#line 911  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct xfrmdev_ops {
   int (*xdo_dev_state_add)(struct xfrm_state *) ;
   void (*xdo_dev_state_delete)(struct xfrm_state *) ;
   void (*xdo_dev_state_free)(struct xfrm_state *) ;
   bool (*xdo_dev_offload_ok)(struct sk_buff *, struct xfrm_state *) ;
   void (*xdo_dev_state_advance_esn)(struct xfrm_state *) ;
};
#line 921  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct dev_ifalias {
   struct callback_head rcuhead ;
   char ifalias[] ;
};
#line 926 
struct tlsdev_ops;
#line 929  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_name_node {
   struct hlist_node hlist ;
   struct list_head list ;
   struct net_device *dev ;
   char *name ;
};
#line 1257 
struct devlink_port;
#line 1257  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct net_device_ops {
   int (*ndo_init)(struct net_device *) ;
   void (*ndo_uninit)(struct net_device *) ;
   int (*ndo_open)(struct net_device *) ;
   int (*ndo_stop)(struct net_device *) ;
   netdev_tx_t (*ndo_start_xmit)(struct sk_buff *, struct net_device *) ;
   netdev_features_t (*ndo_features_check)(struct sk_buff *, struct net_device *, netdev_features_t ) ;
   u16 (*ndo_select_queue)(struct net_device *, struct sk_buff *, struct net_device *) ;
   void (*ndo_change_rx_flags)(struct net_device *, int ) ;
   void (*ndo_set_rx_mode)(struct net_device *) ;
   int (*ndo_set_mac_address)(struct net_device *, void *) ;
   int (*ndo_validate_addr)(struct net_device *) ;
   int (*ndo_do_ioctl)(struct net_device *, struct ifreq *, int ) ;
   int (*ndo_set_config)(struct net_device *, struct ifmap *) ;
   int (*ndo_change_mtu)(struct net_device *, int ) ;
   int (*ndo_neigh_setup)(struct net_device *, struct neigh_parms *) ;
   void (*ndo_tx_timeout)(struct net_device *) ;
   void (*ndo_get_stats64)(struct net_device *, struct rtnl_link_stats64 *) ;
   bool (*ndo_has_offload_stats)(struct net_device *, int ) ;
   int (*ndo_get_offload_stats)(int , struct net_device *, void *) ;
   struct net_device_stats *(*ndo_get_stats)(struct net_device *) ;
   int (*ndo_vlan_rx_add_vid)(struct net_device *, __be16 , u16 ) ;
   int (*ndo_vlan_rx_kill_vid)(struct net_device *, __be16 , u16 ) ;
   void (*ndo_poll_controller)(struct net_device *) ;
   int (*ndo_netpoll_setup)(struct net_device *, struct netpoll_info *) ;
   void (*ndo_netpoll_cleanup)(struct net_device *) ;
   int (*ndo_set_vf_mac)(struct net_device *, int , u8 *) ;
   int (*ndo_set_vf_vlan)(struct net_device *, int , u16 , u8 , __be16 ) ;
   int (*ndo_set_vf_rate)(struct net_device *, int , int , int ) ;
   int (*ndo_set_vf_spoofchk)(struct net_device *, int , bool ) ;
   int (*ndo_set_vf_trust)(struct net_device *, int , bool ) ;
   int (*ndo_get_vf_config)(struct net_device *, int , struct ifla_vf_info *) ;
   int (*ndo_set_vf_link_state)(struct net_device *, int , int ) ;
   int (*ndo_get_vf_stats)(struct net_device *, int , struct ifla_vf_stats *) ;
   int (*ndo_set_vf_port)(struct net_device *, int , struct nlattr **) ;
   int (*ndo_get_vf_port)(struct net_device *, int , struct sk_buff *) ;
   int (*ndo_get_vf_guid)(struct net_device *, int , struct ifla_vf_guid *, struct ifla_vf_guid *) ;
   int (*ndo_set_vf_guid)(struct net_device *, int , u64 , int ) ;
   int (*ndo_set_vf_rss_query_en)(struct net_device *, int , bool ) ;
   int (*ndo_setup_tc)(struct net_device *, enum tc_setup_type , void *) ;
   int (*ndo_fcoe_enable)(struct net_device *) ;
   int (*ndo_fcoe_disable)(struct net_device *) ;
   int (*ndo_fcoe_ddp_setup)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_ddp_done)(struct net_device *, u16 ) ;
   int (*ndo_fcoe_ddp_target)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_get_hbainfo)(struct net_device *, struct netdev_fcoe_hbainfo *) ;
   int (*ndo_fcoe_get_wwn)(struct net_device *, u64 *, int ) ;
   int (*ndo_rx_flow_steer)(struct net_device *, struct sk_buff *, u16 , u32 ) ;
   int (*ndo_add_slave)(struct net_device *, struct net_device *, struct netlink_ext_ack *) ;
   int (*ndo_del_slave)(struct net_device *, struct net_device *) ;
   netdev_features_t (*ndo_fix_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_set_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_neigh_construct)(struct net_device *, struct neighbour *) ;
   void (*ndo_neigh_destroy)(struct net_device *, struct neighbour *) ;
   int (*ndo_fdb_add)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char *, u16 , u16 , struct netlink_ext_ack *) ;
   int (*ndo_fdb_del)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char *, u16 ) ;
   int (*ndo_fdb_dump)(struct sk_buff *, struct netlink_callback *, struct net_device *, struct net_device *, int *) ;
   int (*ndo_fdb_get)(struct sk_buff *, struct nlattr **, struct net_device *, unsigned char *, u16 , u32 , u32 , struct netlink_ext_ack *) ;
   int (*ndo_bridge_setlink)(struct net_device *, struct nlmsghdr *, u16 , struct netlink_ext_ack *) ;
   int (*ndo_bridge_getlink)(struct sk_buff *, u32 , u32 , struct net_device *, u32 , int ) ;
   int (*ndo_bridge_dellink)(struct net_device *, struct nlmsghdr *, u16 ) ;
   int (*ndo_change_carrier)(struct net_device *, bool ) ;
   int (*ndo_get_phys_port_id)(struct net_device *, struct netdev_phys_item_id *) ;
   int (*ndo_get_port_parent_id)(struct net_device *, struct netdev_phys_item_id *) ;
   int (*ndo_get_phys_port_name)(struct net_device *, char *, size_t ) ;
   void (*ndo_udp_tunnel_add)(struct net_device *, struct udp_tunnel_info *) ;
   void (*ndo_udp_tunnel_del)(struct net_device *, struct udp_tunnel_info *) ;
   void *(*ndo_dfwd_add_station)(struct net_device *, struct net_device *) ;
   void (*ndo_dfwd_del_station)(struct net_device *, void *) ;
   int (*ndo_set_tx_maxrate)(struct net_device *, int , u32 ) ;
   int (*ndo_get_iflink)(struct net_device *) ;
   int (*ndo_change_proto_down)(struct net_device *, bool ) ;
   int (*ndo_fill_metadata_dst)(struct net_device *, struct sk_buff *) ;
   void (*ndo_set_rx_headroom)(struct net_device *, int ) ;
   int (*ndo_bpf)(struct net_device *, struct netdev_bpf *) ;
   int (*ndo_xdp_xmit)(struct net_device *, int , struct xdp_frame **, u32 ) ;
   int (*ndo_xsk_wakeup)(struct net_device *, u32 , u32 ) ;
   struct devlink_port *(*ndo_get_devlink_port)(struct net_device *) ;
};
#line 1795  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct __anonstruct_adj_list_686 {
   struct list_head upper ;
   struct list_head lower ;
};
#line 1795 
struct iw_handler_def;
#line 1795 
struct iw_public_data;
#line 1795 
struct l3mdev_ops;
#line 1795 
struct ndisc_ops;
#line 1795 
struct vlan_info;
#line 1795 
struct tipc_bearer;
#line 1795 
struct in_device;
#line 1795 
struct dn_dev;
#line 1795 
struct inet6_dev;
#line 1795 
struct mini_Qdisc;
#line 1795 
struct cpu_rmap;
#line 1795 
struct pcpu_lstats;
#line 1795 
struct pcpu_sw_netstats;
#line 1795 
struct pcpu_dstats;
#line 1795  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
union __anonunion_687 {
   void *ml_priv ;
   struct pcpu_lstats *lstats ;
   struct pcpu_sw_netstats *tstats ;
   struct pcpu_dstats *dstats ;
};
#line 1795 
struct garp_port;
#line 1795 
struct mrp_port;
#line 1795 
struct rtnl_link_ops;
#line 1795  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct net_device {
   char name[16U] ;
   struct netdev_name_node *name_node ;
   struct dev_ifalias *ifalias ;
   unsigned long mem_end ;
   unsigned long mem_start ;
   unsigned long base_addr ;
   int irq ;
   unsigned long state ;
   struct list_head dev_list ;
   struct list_head napi_list ;
   struct list_head unreg_list ;
   struct list_head close_list ;
   struct list_head ptype_all ;
   struct list_head ptype_specific ;
   struct __anonstruct_adj_list_686 adj_list ;
   netdev_features_t features ;
   netdev_features_t hw_features ;
   netdev_features_t wanted_features ;
   netdev_features_t vlan_features ;
   netdev_features_t hw_enc_features ;
   netdev_features_t mpls_features ;
   netdev_features_t gso_partial_features ;
   int ifindex ;
   int group ;
   struct net_device_stats stats ;
   atomic_long_t rx_dropped ;
   atomic_long_t tx_dropped ;
   atomic_long_t rx_nohandler ;
   atomic_t carrier_up_count ;
   atomic_t carrier_down_count ;
   struct iw_handler_def *wireless_handlers ;
   struct iw_public_data *wireless_data ;
   struct net_device_ops *netdev_ops ;
   struct ethtool_ops *ethtool_ops ;
   struct l3mdev_ops *l3mdev_ops ;
   struct ndisc_ops *ndisc_ops ;
   struct xfrmdev_ops *xfrmdev_ops ;
   struct tlsdev_ops *tlsdev_ops ;
   struct header_ops *header_ops ;
   unsigned int flags ;
   unsigned int priv_flags ;
   unsigned short gflags ;
   unsigned short padded ;
   unsigned char operstate ;
   unsigned char link_mode ;
   unsigned char if_port ;
   unsigned char dma ;
   unsigned int mtu ;
   unsigned int min_mtu ;
   unsigned int max_mtu ;
   unsigned short type ;
   unsigned short hard_header_len ;
   unsigned char min_header_len ;
   unsigned short needed_headroom ;
   unsigned short needed_tailroom ;
   unsigned char perm_addr[32U] ;
   unsigned char addr_assign_type ;
   unsigned char addr_len ;
   unsigned char upper_level ;
   unsigned char lower_level ;
   unsigned short neigh_priv_len ;
   unsigned short dev_id ;
   unsigned short dev_port ;
   spinlock_t addr_list_lock ;
   unsigned char name_assign_type ;
   bool uc_promisc ;
   struct netdev_hw_addr_list uc ;
   struct netdev_hw_addr_list mc ;
   struct netdev_hw_addr_list dev_addrs ;
   struct kset *queues_kset ;
   unsigned int promiscuity ;
   unsigned int allmulti ;
   struct vlan_info *vlan_info ;
   struct dsa_port *dsa_ptr ;
   struct tipc_bearer *tipc_ptr ;
   void *atalk_ptr ;
   struct in_device *ip_ptr ;
   struct dn_dev *dn_ptr ;
   struct inet6_dev *ip6_ptr ;
   void *ax25_ptr ;
   struct wireless_dev *ieee80211_ptr ;
   struct wpan_dev *ieee802154_ptr ;
   struct mpls_dev *mpls_ptr ;
   unsigned char *dev_addr ;
   struct netdev_rx_queue *_rx ;
   unsigned int num_rx_queues ;
   unsigned int real_num_rx_queues ;
   struct bpf_prog *xdp_prog ;
   unsigned long gro_flush_timeout ;
   rx_handler_func_t *rx_handler ;
   void *rx_handler_data ;
   struct mini_Qdisc *miniq_ingress ;
   struct netdev_queue *ingress_queue ;
   struct nf_hook_entries *nf_hooks_ingress ;
   unsigned char broadcast[32U] ;
   struct cpu_rmap *rx_cpu_rmap ;
   struct hlist_node index_hlist ;
   struct netdev_queue *_tx ;
   unsigned int num_tx_queues ;
   unsigned int real_num_tx_queues ;
   struct Qdisc *qdisc ;
   struct hlist_head qdisc_hash[16U] ;
   unsigned int tx_queue_len ;
   spinlock_t tx_global_lock ;
   int watchdog_timeo ;
   struct xps_dev_maps *xps_cpus_map ;
   struct xps_dev_maps *xps_rxqs_map ;
   struct mini_Qdisc *miniq_egress ;
   struct timer_list watchdog_timer ;
   int *pcpu_refcnt ;
   struct list_head todo_list ;
   struct list_head link_watch_list ;
   int reg_state : 8 ;
   bool dismantle ;
   int rtnl_link_state : 16 ;
   bool needs_free_netdev ;
   void (*priv_destructor)(struct net_device *) ;
   struct netpoll_info *npinfo ;
   possible_net_t nd_net ;
   union __anonunion_687 __anonCompField_net_device_160 ;
   struct garp_port *garp_port ;
   struct mrp_port *mrp_port ;
   struct device dev ;
   struct attribute_group *sysfs_groups[4U] ;
   struct attribute_group *sysfs_rx_queue_group ;
   struct rtnl_link_ops *rtnl_link_ops ;
   unsigned int gso_max_size ;
   u16 gso_max_segs ;
   struct dcbnl_rtnl_ops *dcbnl_ops ;
   s16 num_tc ;
   struct netdev_tc_txq tc_to_txq[16U] ;
   u8 prio_tc_map[16U] ;
   unsigned int fcoe_ddp_xid ;
   struct netprio_map *priomap ;
   struct phy_device *phydev ;
   struct sfp_bus *sfp_bus ;
   struct lock_class_key qdisc_tx_busylock_key ;
   struct lock_class_key qdisc_running_key ;
   struct lock_class_key qdisc_xmit_lock_key ;
   struct lock_class_key addr_list_lock_key ;
   bool proto_down ;
   unsigned int wol_enabled : 1 ;
};
#line 2400  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct pcpu_sw_netstats {
   u64 rx_packets ;
   u64 rx_bytes ;
   u64 tx_packets ;
   u64 tx_bytes ;
   struct u64_stats_sync syncp ;
} __attribute__((__aligned__(32)));
#line 2408  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct pcpu_lstats {
   u64_stats_t packets ;
   u64_stats_t bytes ;
   struct u64_stats_sync syncp ;
} __attribute__((__aligned__(16)));
#line 1227  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct ieee80211_p2p_noa_desc {
   u8 count ;
   __le32 duration ;
   __le32 interval ;
   __le32 start_time ;
} __attribute__((__packed__));
#line 1234  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct ieee80211_p2p_noa_attr {
   u8 index ;
   u8 oppps_ctwindow ;
   struct ieee80211_p2p_noa_desc desc[4U] ;
} __attribute__((__packed__));
#line 1276  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct ieee80211_mcs_info {
   u8 rx_mask[10U] ;
   __le16 rx_highest ;
   u8 tx_params ;
   u8 reserved[3U] ;
} __attribute__((__packed__));
#line 1310  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct ieee80211_ht_cap {
   __le16 cap_info ;
   u8 ampdu_params_info ;
   struct ieee80211_mcs_info mcs ;
   __le16 extended_ht_cap_info ;
   __le32 tx_BF_cap_info ;
   u8 antenna_selection_info ;
} __attribute__((__packed__));
#line 1483  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct ieee80211_vht_mcs_info {
   __le16 rx_mcs_map ;
   __le16 rx_highest ;
   __le16 tx_mcs_map ;
   __le16 tx_highest ;
} __attribute__((__packed__));
#line 1526  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct ieee80211_vht_cap {
   __le32 vht_cap_info ;
   struct ieee80211_vht_mcs_info supp_mcs ;
} __attribute__((__packed__));
#line 1569  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct ieee80211_he_cap_elem {
   u8 mac_cap_info[6U] ;
   u8 phy_cap_info[11U] ;
} __attribute__((__packed__));
#line 1616  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct ieee80211_he_mcs_nss_supp {
   __le16 rx_mcs_80 ;
   __le16 tx_mcs_80 ;
   __le16 rx_mcs_160 ;
   __le16 tx_mcs_160 ;
   __le16 rx_mcs_80p80 ;
   __le16 tx_mcs_80p80 ;
} __attribute__((__packed__));
#line 1631  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct ieee80211_he_operation {
   __le32 he_oper_params ;
   __le16 he_mcs_nss_set ;
   u8 optional[0U] ;
} __attribute__((__packed__));
#line 811  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/debugfs.h"
enum nl80211_iftype {
    NL80211_IFTYPE_UNSPECIFIED = 0,
    NL80211_IFTYPE_ADHOC = 1,
    NL80211_IFTYPE_STATION = 2,
    NL80211_IFTYPE_AP = 3,
    NL80211_IFTYPE_AP_VLAN = 4,
    NL80211_IFTYPE_WDS = 5,
    NL80211_IFTYPE_MONITOR = 6,
    NL80211_IFTYPE_MESH_POINT = 7,
    NL80211_IFTYPE_P2P_CLIENT = 8,
    NL80211_IFTYPE_P2P_GO = 9,
    NL80211_IFTYPE_P2P_DEVICE = 10,
    NL80211_IFTYPE_OCB = 11,
    NL80211_IFTYPE_NAN = 12,
    NUM_NL80211_IFTYPES = 13,
    NL80211_IFTYPE_MAX = 12
};
#line 3263  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/nl80211.h"
enum nl80211_reg_initiator {
    NL80211_REGDOM_SET_BY_CORE = 0,
    NL80211_REGDOM_SET_BY_USER = 1,
    NL80211_REGDOM_SET_BY_DRIVER = 2,
    NL80211_REGDOM_SET_BY_COUNTRY_IE = 3
};
#line 3320 
enum nl80211_dfs_regions {
    NL80211_DFS_UNSET = 0,
    NL80211_DFS_FCC = 1,
    NL80211_DFS_ETSI = 2,
    NL80211_DFS_JP = 3
};
#line 3327 
enum nl80211_user_reg_hint_type {
    NL80211_USER_REG_HINT_USER = 0,
    NL80211_USER_REG_HINT_CELL_BASE = 1,
    NL80211_USER_REG_HINT_INDOOR = 2
};
#line 3446 
enum nl80211_key_mode {
    NL80211_KEY_RX_TX = 0,
    NL80211_KEY_NO_TX = 1,
    NL80211_KEY_SET_TX = 2
};
#line 3452 
enum nl80211_chan_width {
    NL80211_CHAN_WIDTH_20_NOHT = 0,
    NL80211_CHAN_WIDTH_20 = 1,
    NL80211_CHAN_WIDTH_40 = 2,
    NL80211_CHAN_WIDTH_80 = 3,
    NL80211_CHAN_WIDTH_80P80 = 4,
    NL80211_CHAN_WIDTH_160 = 5,
    NL80211_CHAN_WIDTH_5 = 6,
    NL80211_CHAN_WIDTH_10 = 7
};
#line 3463 
enum nl80211_bss_scan_width {
    NL80211_BSS_CHAN_WIDTH_20 = 0,
    NL80211_BSS_CHAN_WIDTH_10 = 1,
    NL80211_BSS_CHAN_WIDTH_5 = 2
};
#line 3500 
enum nl80211_auth_type {
    NL80211_AUTHTYPE_OPEN_SYSTEM = 0,
    NL80211_AUTHTYPE_SHARED_KEY = 1,
    NL80211_AUTHTYPE_FT = 2,
    NL80211_AUTHTYPE_NETWORK_EAP = 3,
    NL80211_AUTHTYPE_SAE = 4,
    NL80211_AUTHTYPE_FILS_SK = 5,
    NL80211_AUTHTYPE_FILS_SK_PFS = 6,
    NL80211_AUTHTYPE_FILS_PK = 7,
    __NL80211_AUTHTYPE_NUM = 8,
    NL80211_AUTHTYPE_MAX = 7,
    NL80211_AUTHTYPE_AUTOMATIC = 8
};
#line 3521 
enum nl80211_mfp {
    NL80211_MFP_NO = 0,
    NL80211_MFP_REQUIRED = 1,
    NL80211_MFP_OPTIONAL = 2
};
#line 4599 
enum nl80211_band {
    NL80211_BAND_2GHZ = 0,
    NL80211_BAND_5GHZ = 1,
    NL80211_BAND_60GHZ = 2,
    NL80211_BAND_6GHZ = 3,
    NUM_NL80211_BANDS = 4
};
#line 4633 
enum nl80211_tx_power_setting {
    NL80211_TX_POWER_AUTOMATIC = 0,
    NL80211_TX_POWER_LIMITED = 1,
    NL80211_TX_POWER_FIXED = 2
};
#line 4914  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/nl80211.h"
struct nl80211_wowlan_tcp_data_seq {
   __u32 start ;
   __u32 offset ;
   __u32 len ;
};
#line 4925  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/nl80211.h"
struct nl80211_wowlan_tcp_data_token {
   __u32 offset ;
   __u32 len ;
   __u8 token_stream[] ;
};
#line 4936  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/nl80211.h"
struct nl80211_wowlan_tcp_data_token_feature {
   __u32 min_len ;
   __u32 max_len ;
   __u32 bufsize ;
};
#line 5237 
enum nl80211_dfs_state {
    NL80211_DFS_USABLE = 0,
    NL80211_DFS_UNAVAILABLE = 1,
    NL80211_DFS_AVAILABLE = 2
};
#line 5847  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/nl80211.h"
struct nl80211_vendor_cmd_info {
   __u32 vendor_id ;
   __u32 subcmd ;
};
#line 5903 
enum nl80211_bss_select_attr {
    __NL80211_BSS_SELECT_ATTR_INVALID = 0,
    NL80211_BSS_SELECT_ATTR_RSSI = 1,
    NL80211_BSS_SELECT_ATTR_BAND_PREF = 2,
    NL80211_BSS_SELECT_ATTR_RSSI_ADJUST = 3,
    __NL80211_BSS_SELECT_ATTR_AFTER_LAST = 4,
    NL80211_BSS_SELECT_ATTR_MAX = 3
};
#line 6138 
enum environment_cap {
    ENVIRON_ANY = 0,
    ENVIRON_INDOOR = 1,
    ENVIRON_OUTDOOR = 2
};
#line 77  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/regulatory.h"
struct regulatory_request {
   struct callback_head callback_head ;
   int wiphy_idx ;
   enum nl80211_reg_initiator initiator ;
   enum nl80211_user_reg_hint_type user_reg_hint_type ;
   char alpha2[3U] ;
   enum nl80211_dfs_regions dfs_region ;
   bool intersect ;
   bool processed ;
   enum environment_cap country_ie_env ;
   struct list_head list ;
};
#line 181  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/regulatory.h"
struct ieee80211_freq_range {
   u32 start_freq_khz ;
   u32 end_freq_khz ;
   u32 max_bandwidth_khz ;
};
#line 187  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/regulatory.h"
struct ieee80211_power_rule {
   u32 max_antenna_gain ;
   u32 max_eirp ;
};
#line 205  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/regulatory.h"
struct ieee80211_wmm_ac {
   u16 cw_min ;
   u16 cw_max ;
   u16 cot ;
   u8 aifsn ;
};
#line 212  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/regulatory.h"
struct ieee80211_wmm_rule {
   struct ieee80211_wmm_ac client[4U] ;
   struct ieee80211_wmm_ac ap[4U] ;
};
#line 217  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/regulatory.h"
struct ieee80211_reg_rule {
   struct ieee80211_freq_range freq_range ;
   struct ieee80211_power_rule power_rule ;
   struct ieee80211_wmm_rule wmm_rule ;
   u32 flags ;
   u32 dfs_cac_ms ;
   bool has_wmm ;
};
#line 226  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/regulatory.h"
struct ieee80211_regdomain {
   struct callback_head callback_head ;
   u32 n_reg_rules ;
   char alpha2[3U] ;
   enum nl80211_dfs_regions dfs_region ;
   struct ieee80211_reg_rule reg_rules[] ;
};
#line 233 
struct wiphy;
#line 147  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct ieee80211_channel {
   enum nl80211_band band ;
   u32 center_freq ;
   u16 hw_value ;
   u32 flags ;
   int max_antenna_gain ;
   int max_power ;
   int max_reg_power ;
   bool beacon_found ;
   u32 orig_flags ;
   int orig_mag ;
   int orig_mpwr ;
   enum nl80211_dfs_state dfs_state ;
   unsigned long dfs_state_entered ;
   unsigned int dfs_cac_ms ;
};
#line 172 
enum ieee80211_bss_type {
    IEEE80211_BSS_TYPE_ESS = 0,
    IEEE80211_BSS_TYPE_PBSS = 1,
    IEEE80211_BSS_TYPE_IBSS = 2,
    IEEE80211_BSS_TYPE_MBSS = 3,
    IEEE80211_BSS_TYPE_ANY = 4
};
#line 243  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct ieee80211_rate {
   u32 flags ;
   u16 bitrate ;
   u16 hw_value ;
   u16 hw_value_short ;
};
#line 256  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct ieee80211_he_obss_pd {
   bool enable ;
   u8 min_offset ;
   u8 max_offset ;
};
#line 274  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct ieee80211_sta_ht_cap {
   u16 cap ;
   bool ht_supported ;
   u8 ampdu_factor ;
   u8 ampdu_density ;
   struct ieee80211_mcs_info mcs ;
};
#line 292  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct ieee80211_sta_vht_cap {
   bool vht_supported ;
   u32 cap ;
   struct ieee80211_vht_mcs_info vht_mcs ;
};
#line 311  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct ieee80211_sta_he_cap {
   bool has_he ;
   struct ieee80211_he_cap_elem he_cap_elem ;
   struct ieee80211_he_mcs_nss_supp he_mcs_nss_supp ;
   u8 ppe_thres[25U] ;
};
#line 328  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct ieee80211_sband_iftype_data {
   u16 types_mask ;
   struct ieee80211_sta_he_cap he_cap ;
};
#line 332 
enum ieee80211_edmg_bw_config {
    IEEE80211_EDMG_BW_CONFIG_4 = 4,
    IEEE80211_EDMG_BW_CONFIG_5 = 5,
    IEEE80211_EDMG_BW_CONFIG_6 = 6,
    IEEE80211_EDMG_BW_CONFIG_7 = 7,
    IEEE80211_EDMG_BW_CONFIG_8 = 8,
    IEEE80211_EDMG_BW_CONFIG_9 = 9,
    IEEE80211_EDMG_BW_CONFIG_10 = 10,
    IEEE80211_EDMG_BW_CONFIG_11 = 11,
    IEEE80211_EDMG_BW_CONFIG_12 = 12,
    IEEE80211_EDMG_BW_CONFIG_13 = 13,
    IEEE80211_EDMG_BW_CONFIG_14 = 14,
    IEEE80211_EDMG_BW_CONFIG_15 = 15
};
#line 382  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct ieee80211_edmg {
   u8 channels ;
   enum ieee80211_edmg_bw_config bw_config ;
};
#line 410  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct ieee80211_supported_band {
   struct ieee80211_channel *channels ;
   struct ieee80211_rate *bitrates ;
   enum nl80211_band band ;
   int n_channels ;
   int n_bitrates ;
   struct ieee80211_sta_ht_cap ht_cap ;
   struct ieee80211_sta_vht_cap vht_cap ;
   struct ieee80211_edmg edmg_cap ;
   u16 n_iftype_data ;
   struct ieee80211_sband_iftype_data *iftype_data ;
};
#line 571  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct key_params {
   u8 *key ;
   u8 *seq ;
   int key_len ;
   int seq_len ;
   u16 vlan_id ;
   u32 cipher ;
   enum nl80211_key_mode mode ;
};
#line 593  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_chan_def {
   struct ieee80211_channel *chan ;
   enum nl80211_chan_width width ;
   u32 center_freq1 ;
   u32 center_freq2 ;
   struct ieee80211_edmg edmg ;
};
#line 853  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_crypto_settings {
   u32 wpa_versions ;
   u32 cipher_group ;
   int n_ciphers_pairwise ;
   u32 ciphers_pairwise[5U] ;
   int n_akm_suites ;
   u32 akm_suites[2U] ;
   bool control_port ;
   __be16 control_port_ethertype ;
   bool control_port_no_encrypt ;
   bool control_port_over_nl80211 ;
   struct key_params *wep_keys ;
   int wep_tx_key ;
   u8 *psk ;
   u8 *sae_pwd ;
   u8 sae_pwd_len ;
};
#line 917  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct mac_address {
   u8 addr[6U] ;
};
#line 1885  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_ssid {
   u8 ssid[32U] ;
   u8 ssid_len ;
};
#line 1991  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_match_set {
   struct cfg80211_ssid ssid ;
   u8 bssid[6U] ;
   s32 rssi_thold ;
   s32 per_band_rssi_thold[4U] ;
};
#line 2007  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_sched_scan_plan {
   u32 interval ;
   u32 iterations ;
};
#line 2018  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_bss_select_adjust {
   enum nl80211_band band ;
   s8 delta ;
};
#line 2073  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_sched_scan_request {
   u64 reqid ;
   struct cfg80211_ssid *ssids ;
   int n_ssids ;
   u32 n_channels ;
   enum nl80211_bss_scan_width scan_width ;
   u8 *ie ;
   size_t ie_len ;
   u32 flags ;
   struct cfg80211_match_set *match_sets ;
   int n_match_sets ;
   s32 min_rssi_thold ;
   u32 delay ;
   struct cfg80211_sched_scan_plan *scan_plans ;
   int n_scan_plans ;
   u8 mac_addr[6U] ;
   u8 mac_addr_mask[6U] ;
   bool relative_rssi_set ;
   s8 relative_rssi ;
   struct cfg80211_bss_select_adjust rssi_adjust ;
   struct wiphy *wiphy ;
   struct net_device *dev ;
   unsigned long scan_start ;
   bool report_results ;
   struct callback_head callback_head ;
   u32 owner_nlportid ;
   bool nl_owner_dead ;
   struct list_head list ;
   struct ieee80211_channel *channels[0U] ;
};
#line 2109 
enum cfg80211_signal_type {
    CFG80211_SIGNAL_TYPE_NONE = 0,
    CFG80211_SIGNAL_TYPE_MBM = 1,
    CFG80211_SIGNAL_TYPE_UNSPEC = 2
};
#line 2432  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_ibss_params {
   u8 *ssid ;
   u8 *bssid ;
   struct cfg80211_chan_def chandef ;
   u8 *ie ;
   u8 ssid_len ;
   u8 ie_len ;
   u16 beacon_interval ;
   u32 basic_rates ;
   bool channel_fixed ;
   bool privacy ;
   bool control_port ;
   bool control_port_over_nl80211 ;
   bool userspace_handles_dfs ;
   int mcast_rate[4U] ;
   struct ieee80211_ht_cap ht_capa ;
   struct ieee80211_ht_cap ht_capa_mask ;
   struct key_params *wep_keys ;
   int wep_tx_key ;
};
#line 2460  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
union __anonunion_param_740 {
   enum nl80211_band band_pref ;
   struct cfg80211_bss_select_adjust adjust ;
};
#line 2460  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_bss_selection {
   enum nl80211_bss_select_attr behaviour ;
   union __anonunion_param_740 param ;
};
#line 2531  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_connect_params {
   struct ieee80211_channel *channel ;
   struct ieee80211_channel *channel_hint ;
   u8 *bssid ;
   u8 *bssid_hint ;
   u8 *ssid ;
   size_t ssid_len ;
   enum nl80211_auth_type auth_type ;
   u8 *ie ;
   size_t ie_len ;
   bool privacy ;
   enum nl80211_mfp mfp ;
   struct cfg80211_crypto_settings crypto ;
   u8 *key ;
   u8 key_len ;
   u8 key_idx ;
   u32 flags ;
   int bg_scan_period ;
   struct ieee80211_ht_cap ht_capa ;
   struct ieee80211_ht_cap ht_capa_mask ;
   struct ieee80211_vht_cap vht_capa ;
   struct ieee80211_vht_cap vht_capa_mask ;
   bool pbss ;
   struct cfg80211_bss_selection bss_select ;
   u8 *prev_bssid ;
   u8 *fils_erp_username ;
   size_t fils_erp_username_len ;
   u8 *fils_erp_realm ;
   size_t fils_erp_realm_len ;
   u16 fils_erp_next_seq_num ;
   u8 *fils_erp_rrk ;
   size_t fils_erp_rrk_len ;
   bool want_1x ;
   struct ieee80211_edmg edmg ;
};
#line 2656  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_pkt_pattern {
   u8 *mask ;
   u8 *pattern ;
   int pattern_len ;
   int pkt_offset ;
};
#line 2681  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_wowlan_tcp {
   struct socket *sock ;
   __be32 src ;
   __be32 dst ;
   u16 src_port ;
   u16 dst_port ;
   u8 dst_mac[6U] ;
   int payload_len ;
   u8 *payload ;
   struct nl80211_wowlan_tcp_data_seq payload_seq ;
   u32 data_interval ;
   u32 wake_len ;
   u8 *wake_data ;
   u8 *wake_mask ;
   u32 tokens_size ;
   struct nl80211_wowlan_tcp_data_token payload_tok ;
};
#line 2715  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_wowlan {
   bool any ;
   bool disconnect ;
   bool magic_pkt ;
   bool gtk_rekey_failure ;
   bool eap_identity_req ;
   bool four_way_handshake ;
   bool rfkill_release ;
   struct cfg80211_pkt_pattern *patterns ;
   struct cfg80211_wowlan_tcp *tcp ;
   int n_patterns ;
   struct cfg80211_sched_scan_request *nd_config ;
};
#line 4043  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct ieee80211_iface_limit {
   u16 max ;
   u16 types ;
};
#line 4107  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct ieee80211_iface_combination {
   struct ieee80211_iface_limit *limits ;
   u32 num_different_channels ;
   u16 max_interfaces ;
   u8 n_limits ;
   bool beacon_int_infra_match ;
   u8 radar_detect_widths ;
   u8 radar_detect_regions ;
   u32 beacon_int_min_gcd ;
};
#line 4165  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct ieee80211_txrx_stypes {
   u16 tx ;
   u16 rx ;
};
#line 4198  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct wiphy_wowlan_tcp_support {
   struct nl80211_wowlan_tcp_data_token_feature *tok ;
   u32 data_payload_max ;
   u32 data_interval_max ;
   u32 wake_payload_max ;
   bool seq ;
};
#line 4221  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct wiphy_wowlan_support {
   u32 flags ;
   int n_patterns ;
   int pattern_max_len ;
   int pattern_min_len ;
   int max_pkt_offset ;
   int max_nd_match_sets ;
   struct wiphy_wowlan_tcp_support *tcp ;
};
#line 4241  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct wiphy_coalesce_support {
   int n_rules ;
   int max_delay ;
   int n_patterns ;
   int pattern_max_len ;
   int pattern_min_len ;
   int max_pkt_offset ;
};
#line 4312 
struct nla_policy;
#line 4312  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct wiphy_vendor_command {
   struct nl80211_vendor_cmd_info info ;
   u32 flags ;
   int (*doit)(struct wiphy *, struct wireless_dev *, void *, int ) ;
   int (*dumpit)(struct wiphy *, struct wireless_dev *, struct sk_buff *, void *, int , unsigned long *) ;
   struct nla_policy *policy ;
   unsigned int maxattr ;
};
#line 4335  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct wiphy_iftype_ext_capab {
   enum nl80211_iftype iftype ;
   u8 *extended_capabilities ;
   u8 *extended_capabilities_mask ;
   u8 extended_capabilities_len ;
};
#line 4360  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct __anonstruct_ftm_742 {
   u32 preambles ;
   u32 bandwidths ;
   s8 max_bursts_exponent ;
   u8 max_ftms_per_burst ;
   u8 supported : 1 ;
   u8 asap : 1 ;
   u8 non_asap : 1 ;
   u8 request_lci : 1 ;
   u8 request_civicloc : 1 ;
};
#line 4360  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_pmsr_capabilities {
   unsigned int max_peers ;
   u8 report_ap_tsf : 1 ;
   u8 randomize_mac_addr : 1 ;
   struct __anonstruct_ftm_742 ftm ;
};
#line 4552  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct wiphy {
   u8 perm_addr[6U] ;
   u8 addr_mask[6U] ;
   struct mac_address *addresses ;
   struct ieee80211_txrx_stypes *mgmt_stypes ;
   struct ieee80211_iface_combination *iface_combinations ;
   int n_iface_combinations ;
   u16 software_iftypes ;
   u16 n_addresses ;
   u16 interface_modes ;
   u16 max_acl_mac_addrs ;
   u32 flags ;
   u32 regulatory_flags ;
   u32 features ;
   u8 ext_features[6U] ;
   u32 ap_sme_capa ;
   enum cfg80211_signal_type signal_type ;
   int bss_priv_size ;
   u8 max_scan_ssids ;
   u8 max_sched_scan_reqs ;
   u8 max_sched_scan_ssids ;
   u8 max_match_sets ;
   u16 max_scan_ie_len ;
   u16 max_sched_scan_ie_len ;
   u32 max_sched_scan_plans ;
   u32 max_sched_scan_plan_interval ;
   u32 max_sched_scan_plan_iterations ;
   int n_cipher_suites ;
   u32 *cipher_suites ;
   int n_akm_suites ;
   u32 *akm_suites ;
   u8 retry_short ;
   u8 retry_long ;
   u32 frag_threshold ;
   u32 rts_threshold ;
   u8 coverage_class ;
   char fw_version[32U] ;
   u32 hw_version ;
   struct wiphy_wowlan_support *wowlan ;
   struct cfg80211_wowlan *wowlan_config ;
   u16 max_remain_on_channel_duration ;
   u8 max_num_pmkids ;
   u32 available_antennas_tx ;
   u32 available_antennas_rx ;
   u32 probe_resp_offload ;
   u8 *extended_capabilities ;
   u8 *extended_capabilities_mask ;
   u8 extended_capabilities_len ;
   struct wiphy_iftype_ext_capab *iftype_ext_capab ;
   unsigned int num_iftype_ext_capab ;
   void *privid ;
   struct ieee80211_supported_band *bands[4U] ;
   void (*reg_notifier)(struct wiphy *, struct regulatory_request *) ;
   struct ieee80211_regdomain *regd ;
   struct device dev ;
   bool registered ;
   struct dentry *debugfsdir ;
   struct ieee80211_ht_cap *ht_capa_mod_mask ;
   struct ieee80211_vht_cap *vht_capa_mod_mask ;
   struct list_head wdev_list ;
   possible_net_t _net ;
   struct iw_handler_def *wext ;
   struct wiphy_coalesce_support *coalesce ;
   struct wiphy_vendor_command *vendor_commands ;
   struct nl80211_vendor_cmd_info *vendor_events ;
   int n_vendor_commands ;
   int n_vendor_events ;
   u16 max_ap_assoc_sta ;
   u8 max_num_csa_counters ;
   u8 max_adj_channel_rssi_comp ;
   u32 bss_select_support ;
   u8 nan_supported_bands ;
   u32 txq_limit ;
   u32 txq_memory_limit ;
   u32 txq_quantum ;
   u8 support_mbssid : 1 ;
   u8 support_only_he_mbssid : 1 ;
   struct cfg80211_pmsr_capabilities *pmsr_capa ;
   char priv[0U] ;
};
#line 4826 
struct cfg80211_conn;
#line 4827 
struct cfg80211_internal_bss;
#line 4828 
struct cfg80211_cached_keys;
#line 4829 
struct cfg80211_cqm_config;
#line 4912  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct __anonstruct_wext_743 {
   struct cfg80211_ibss_params ibss ;
   struct cfg80211_connect_params connect ;
   struct cfg80211_cached_keys *keys ;
   u8 *ie ;
   size_t ie_len ;
   u8 bssid[6U] ;
   u8 prev_bssid[6U] ;
   u8 ssid[32U] ;
   s8 default_key ;
   s8 default_mgmt_key ;
   bool prev_bssid_valid ;
};
#line 4912  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct wireless_dev {
   struct wiphy *wiphy ;
   enum nl80211_iftype iftype ;
   struct list_head list ;
   struct net_device *netdev ;
   u32 identifier ;
   struct list_head mgmt_registrations ;
   spinlock_t mgmt_registrations_lock ;
   struct mutex mtx ;
   bool use_4addr ;
   bool is_running ;
   u8 address[6U] ;
   u8 ssid[32U] ;
   u8 ssid_len ;
   u8 mesh_id_len ;
   u8 mesh_id_up_len ;
   struct cfg80211_conn *conn ;
   struct cfg80211_cached_keys *connect_keys ;
   enum ieee80211_bss_type conn_bss_type ;
   u32 conn_owner_nlportid ;
   struct work_struct disconnect_wk ;
   u8 disconnect_bssid[6U] ;
   struct list_head event_list ;
   spinlock_t event_lock ;
   struct cfg80211_internal_bss *current_bss ;
   struct cfg80211_chan_def preset_chandef ;
   struct cfg80211_chan_def chandef ;
   bool ibss_fixed ;
   bool ibss_dfs_possible ;
   bool ps ;
   int ps_timeout ;
   int beacon_interval ;
   u32 ap_unexpected_nlportid ;
   u32 owner_nlportid ;
   bool nl_owner_dead ;
   bool cac_started ;
   unsigned long cac_start_time ;
   unsigned int cac_time_ms ;
   struct __anonstruct_wext_743 wext ;
   struct cfg80211_cqm_config *cqm_config ;
   struct list_head pmsr_list ;
   spinlock_t pmsr_lock ;
   struct work_struct pmsr_free_wk ;
};
#line 567  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/rtnetlink.h"
struct tcmsg {
   unsigned char tcm_family ;
   unsigned char tcm__pad1 ;
   unsigned short tcm__pad2 ;
   int tcm_ifindex ;
   __u32 tcm_handle ;
   __u32 tcm_parent ;
   __u32 tcm_info ;
};
#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/gen_stats.h"
struct gnet_stats_queue {
   __u32 qlen ;
   __u32 backlog ;
   __u32 drops ;
   __u32 requeues ;
   __u32 overlimits ;
};
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/gen_stats.h"
struct gnet_stats_basic_packed {
   __u64 bytes ;
   __u64 packets ;
};
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/gen_stats.h"
struct gnet_stats_basic_cpu {
   struct gnet_stats_basic_packed bstats ;
   struct u64_stats_sync syncp ;
} __attribute__((__aligned__(16)));
#line 20 
struct net_rate_estimator;
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/gen_stats.h"
struct gnet_dump {
   spinlock_t *lock ;
   struct sk_buff *skb ;
   struct nlattr *tail ;
   int compat_tc_stats ;
   int compat_xstats ;
   int padattr ;
   void *xstats ;
   int xstats_len ;
   struct tc_stats tc_stats ;
};
#line 291  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netlink.h"
struct __anonstruct_751 {
   s16 min ;
   s16 max ;
};
#line 291  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netlink.h"
union __anonunion_750 {
   void *validation_data ;
   struct __anonstruct_751 __anonCompField___anonunion_750_163 ;
   int (*validate)(struct nlattr *, struct netlink_ext_ack *) ;
   u16 strict_start_type ;
};
#line 291  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netlink.h"
struct nla_policy {
   u8 type ;
   u8 validation_type ;
   u16 len ;
   union __anonunion_750 __anonCompField_nla_policy_164 ;
};
#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/rtnetlink.h"
struct rtnl_link_ops {
   struct list_head list ;
   char *kind ;
   size_t priv_size ;
   void (*setup)(struct net_device *) ;
   unsigned int maxtype ;
   struct nla_policy *policy ;
   int (*validate)(struct nlattr **, struct nlattr **, struct netlink_ext_ack *) ;
   int (*newlink)(struct net *, struct net_device *, struct nlattr **, struct nlattr **, struct netlink_ext_ack *) ;
   int (*changelink)(struct net_device *, struct nlattr **, struct nlattr **, struct netlink_ext_ack *) ;
   void (*dellink)(struct net_device *, struct list_head *) ;
   size_t (*get_size)(struct net_device *) ;
   int (*fill_info)(struct sk_buff *, struct net_device *) ;
   size_t (*get_xstats_size)(struct net_device *) ;
   int (*fill_xstats)(struct sk_buff *, struct net_device *) ;
   unsigned int (*get_num_tx_queues)(void) ;
   unsigned int (*get_num_rx_queues)(void) ;
   unsigned int slave_maxtype ;
   struct nla_policy *slave_policy ;
   int (*slave_changelink)(struct net_device *, struct net_device *, struct nlattr **, struct nlattr **, struct netlink_ext_ack *) ;
   size_t (*get_slave_size)(struct net_device *, struct net_device *) ;
   int (*fill_slave_info)(struct sk_buff *, struct net_device *, struct net_device *) ;
   struct net *(*get_link_net)(struct net_device *) ;
   size_t (*get_linkxstats_size)(struct net_device *, int ) ;
   int (*fill_linkxstats)(struct sk_buff *, struct net_device *, int *, int ) ;
};
#line 173  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jhash.h"
struct rhash_lock_head {
   };
#line 76  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable.h"
struct bucket_table {
   unsigned int size ;
   unsigned int nest ;
   u32 hash_rnd ;
   struct list_head walkers ;
   struct callback_head rcu ;
   struct bucket_table *future_tbl ;
   struct lockdep_map dep_map ;
   struct rhash_lock_head *buckets[] ;
};
#line 281  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow_offload.h"
struct flow_block {
   struct list_head cb_list ;
};
#line 298  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow_offload.h"
typedef int flow_setup_cb_t(enum tc_setup_type , void *, void *);
#line 412 
struct Qdisc_ops;
#line 413 
struct qdisc_walker;
#line 414 
struct tcf_walker;
#line 41  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct qdisc_size_table {
   struct callback_head rcu ;
   struct list_head list ;
   struct tc_sizespec szopts ;
   int refcnt ;
   u16 data[] ;
};
#line 50  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct qdisc_skb_head {
   struct sk_buff *head ;
   struct sk_buff *tail ;
   __u32 qlen ;
   spinlock_t lock ;
};
#line 57  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct Qdisc {
   int (*enqueue)(struct sk_buff *, struct Qdisc *, struct sk_buff **) ;
   struct sk_buff *(*dequeue)(struct Qdisc *) ;
   unsigned int flags ;
   u32 limit ;
   struct Qdisc_ops *ops ;
   struct qdisc_size_table *stab ;
   struct hlist_node hash ;
   u32 handle ;
   u32 parent ;
   struct netdev_queue *dev_queue ;
   struct net_rate_estimator *rate_est ;
   struct gnet_stats_basic_cpu *cpu_bstats ;
   struct gnet_stats_queue *cpu_qstats ;
   int padded ;
   refcount_t refcnt ;
   struct sk_buff_head gso_skb ;
   struct qdisc_skb_head q ;
   struct gnet_stats_basic_packed bstats ;
   seqcount_t running ;
   struct gnet_stats_queue qstats ;
   unsigned long state ;
   struct Qdisc *next_sched ;
   struct sk_buff_head skb_bad_txq ;
   spinlock_t busylock ;
   spinlock_t seqlock ;
   bool empty ;
   struct callback_head rcu ;
};
#line 195 
struct tcf_block;
#line 195  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct Qdisc_class_ops {
   unsigned int flags ;
   struct netdev_queue *(*select_queue)(struct Qdisc *, struct tcmsg *) ;
   int (*graft)(struct Qdisc *, unsigned long , struct Qdisc *, struct Qdisc **, struct netlink_ext_ack *) ;
   struct Qdisc *(*leaf)(struct Qdisc *, unsigned long ) ;
   void (*qlen_notify)(struct Qdisc *, unsigned long ) ;
   unsigned long (*find)(struct Qdisc *, u32 ) ;
   int (*change)(struct Qdisc *, u32 , u32 , struct nlattr **, unsigned long *, struct netlink_ext_ack *) ;
   int (*delete)(struct Qdisc *, unsigned long ) ;
   void (*walk)(struct Qdisc *, struct qdisc_walker *) ;
   struct tcf_block *(*tcf_block)(struct Qdisc *, unsigned long , struct netlink_ext_ack *) ;
   unsigned long (*bind_tcf)(struct Qdisc *, unsigned long , u32 ) ;
   void (*unbind_tcf)(struct Qdisc *, unsigned long ) ;
   int (*dump)(struct Qdisc *, unsigned long , struct sk_buff *, struct tcmsg *) ;
   int (*dump_stats)(struct Qdisc *, unsigned long , struct gnet_dump *) ;
};
#line 235  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct Qdisc_ops {
   struct Qdisc_ops *next ;
   struct Qdisc_class_ops *cl_ops ;
   char id[16U] ;
   int priv_size ;
   unsigned int static_flags ;
   int (*enqueue)(struct sk_buff *, struct Qdisc *, struct sk_buff **) ;
   struct sk_buff *(*dequeue)(struct Qdisc *) ;
   struct sk_buff *(*peek)(struct Qdisc *) ;
   int (*init)(struct Qdisc *, struct nlattr *, struct netlink_ext_ack *) ;
   void (*reset)(struct Qdisc *) ;
   void (*destroy)(struct Qdisc *) ;
   int (*change)(struct Qdisc *, struct nlattr *, struct netlink_ext_ack *) ;
   void (*attach)(struct Qdisc *) ;
   int (*change_tx_queue_len)(struct Qdisc *, unsigned int ) ;
   int (*dump)(struct Qdisc *, struct sk_buff *) ;
   int (*dump_stats)(struct Qdisc *, struct gnet_dump *) ;
   void (*ingress_block_set)(struct Qdisc *, u32 ) ;
   void (*egress_block_set)(struct Qdisc *, u32 ) ;
   u32 (*ingress_block_get)(struct Qdisc *) ;
   u32 (*egress_block_get)(struct Qdisc *) ;
   struct module *owner ;
};
#line 272  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct __anonstruct_825 {
   unsigned long class ;
   u32 classid ;
};
#line 272 
struct tcf_proto;
#line 272  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct __anonstruct_826 {
   bool ingress ;
   struct gnet_stats_queue *qstats ;
};
#line 272  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
union __anonunion_824 {
   struct __anonstruct_825 __anonCompField___anonunion_824_166 ;
   struct tcf_proto *goto_tp ;
   struct __anonstruct_826 __anonCompField___anonunion_824_167 ;
};
#line 272  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct tcf_result {
   union __anonunion_824 __anonCompField_tcf_result_168 ;
};
#line 287 
struct tcf_chain;
#line 290  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct tcf_proto_ops {
   struct list_head head ;
   char kind[16U] ;
   int (*classify)(struct sk_buff *, struct tcf_proto *, struct tcf_result *) ;
   int (*init)(struct tcf_proto *) ;
   void (*destroy)(struct tcf_proto *, bool , struct netlink_ext_ack *) ;
   void *(*get)(struct tcf_proto *, u32 ) ;
   void (*put)(struct tcf_proto *, void *) ;
   int (*change)(struct net *, struct sk_buff *, struct tcf_proto *, unsigned long , u32 , struct nlattr **, void **, bool , bool , struct netlink_ext_ack *) ;
   int (*delete)(struct tcf_proto *, void *, bool *, bool , struct netlink_ext_ack *) ;
   bool (*delete_empty)(struct tcf_proto *) ;
   void (*walk)(struct tcf_proto *, struct tcf_walker *, bool ) ;
   int (*reoffload)(struct tcf_proto *, bool , flow_setup_cb_t *, void *, struct netlink_ext_ack *) ;
   void (*hw_add)(struct tcf_proto *, void *) ;
   void (*hw_del)(struct tcf_proto *, void *) ;
   void (*bind_class)(void *, u32 , unsigned long ) ;
   void *(*tmplt_create)(struct net *, struct tcf_chain *, struct nlattr **, struct netlink_ext_ack *) ;
   void (*tmplt_destroy)(void *) ;
   int (*dump)(struct net *, struct tcf_proto *, void *, struct sk_buff *, struct tcmsg *, bool ) ;
   int (*tmplt_dump)(struct sk_buff *, struct net *, void *) ;
   struct module *owner ;
   int flags ;
};
#line 348  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct tcf_proto {
   struct tcf_proto *next ;
   void *root ;
   int (*classify)(struct sk_buff *, struct tcf_proto *, struct tcf_result *) ;
   __be16 protocol ;
   u32 prio ;
   void *data ;
   struct tcf_proto_ops *ops ;
   struct tcf_chain *chain ;
   spinlock_t lock ;
   bool deleting ;
   refcount_t refcnt ;
   struct callback_head rcu ;
   struct hlist_node destroy_ht_node ;
};
#line 386  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct tcf_chain {
   struct mutex filter_chain_lock ;
   struct tcf_proto *filter_chain ;
   struct list_head list ;
   struct tcf_block *block ;
   u32 index ;
   unsigned int refcnt ;
   unsigned int action_refcnt ;
   bool explicitly_created ;
   bool flushing ;
   struct tcf_proto_ops *tmplt_ops ;
   void *tmplt_priv ;
   struct callback_head rcu ;
};
#line 402  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct __anonstruct_chain0_828 {
   struct tcf_chain *chain ;
   struct list_head filter_chain_list ;
};
#line 402  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct tcf_block {
   struct mutex lock ;
   struct list_head chain_list ;
   u32 index ;
   refcount_t refcnt ;
   struct net *net ;
   struct Qdisc *q ;
   struct rw_semaphore cb_lock ;
   struct flow_block flow_block ;
   struct list_head owner_list ;
   bool keep_dst ;
   atomic_t offloadcnt ;
   unsigned int nooffloaddevcnt ;
   unsigned int lockeddevcnt ;
   struct __anonstruct_chain0_828 chain0 ;
   struct callback_head rcu ;
   struct hlist_head proto_destroy_ht[128U] ;
   struct mutex proto_destroy_lock ;
};
#line 1269  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct mini_Qdisc {
   struct tcf_proto *filter_list ;
   struct gnet_stats_basic_cpu *cpu_bstats ;
   struct gnet_stats_queue *cpu_qstats ;
   struct callback_head rcu ;
};
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/pkt_sched.h"
struct qdisc_walker {
   int stop ;
   int skip ;
   int count ;
   int (*fn)(struct Qdisc *, unsigned long , struct qdisc_walker *) ;
};
#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/page_counter.h"
struct page_counter {
   atomic_long_t usage ;
   unsigned long min ;
   unsigned long low ;
   unsigned long max ;
   struct page_counter *parent ;
   unsigned long emin ;
   atomic_long_t min_usage ;
   atomic_long_t children_min_usage ;
   unsigned long elow ;
   atomic_long_t low_usage ;
   atomic_long_t children_low_usage ;
   unsigned long watermark ;
   unsigned long failcnt ;
};
#line 66 
struct eventfd_ctx;
#line 13  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/vmpressure.h"
struct vmpressure {
   unsigned long scanned ;
   unsigned long reclaimed ;
   unsigned long tree_scanned ;
   unsigned long tree_reclaimed ;
   spinlock_t sr_lock ;
   struct list_head events ;
   struct mutex events_lock ;
   struct work_struct work ;
};
#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/flex_proportions.h"
struct fprop_global {
   struct percpu_counter events ;
   unsigned int period ;
   seqcount_t sequence ;
};
#line 76  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/flex_proportions.h"
struct fprop_local_percpu {
   struct percpu_counter events ;
   unsigned int period ;
   raw_spinlock_t lock ;
};
#line 116  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/flex_proportions.h"
typedef int congested_fn(void *, int );
#line 45  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backing-dev-defs.h"
enum wb_reason {
    WB_REASON_BACKGROUND = 0,
    WB_REASON_VMSCAN = 1,
    WB_REASON_SYNC = 2,
    WB_REASON_PERIODIC = 3,
    WB_REASON_LAPTOP_TIMER = 4,
    WB_REASON_FREE_MORE_MEM = 5,
    WB_REASON_FS_FREE_SPACE = 6,
    WB_REASON_FORKER_THREAD = 7,
    WB_REASON_FOREIGN_FLUSH = 8,
    WB_REASON_MAX = 9
};
#line 71  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backing-dev-defs.h"
struct wb_completion {
   atomic_t cnt ;
   wait_queue_head_t *waitq ;
};
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backing-dev-defs.h"
struct bdi_writeback_congested {
   unsigned long state ;
   refcount_t refcnt ;
   struct backing_dev_info *__bdi ;
   int blkcg_id ;
   struct rb_node rb_node ;
};
#line 130  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backing-dev-defs.h"
union __anonunion_841 {
   struct work_struct release_work ;
   struct callback_head rcu ;
};
#line 130  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backing-dev-defs.h"
struct bdi_writeback {
   struct backing_dev_info *bdi ;
   unsigned long state ;
   unsigned long last_old_flush ;
   struct list_head b_dirty ;
   struct list_head b_io ;
   struct list_head b_more_io ;
   struct list_head b_dirty_time ;
   spinlock_t list_lock ;
   struct percpu_counter stat[4U] ;
   struct bdi_writeback_congested *congested ;
   unsigned long bw_time_stamp ;
   unsigned long dirtied_stamp ;
   unsigned long written_stamp ;
   unsigned long write_bandwidth ;
   unsigned long avg_write_bandwidth ;
   unsigned long dirty_ratelimit ;
   unsigned long balanced_dirty_ratelimit ;
   struct fprop_local_percpu completions ;
   int dirty_exceeded ;
   enum wb_reason start_all_reason ;
   spinlock_t work_lock ;
   struct list_head work_list ;
   struct delayed_work dwork ;
   unsigned long dirty_sleep ;
   struct list_head bdi_node ;
   struct percpu_ref refcnt ;
   struct fprop_local_percpu memcg_completions ;
   struct cgroup_subsys_state *memcg_css ;
   struct cgroup_subsys_state *blkcg_css ;
   struct list_head memcg_node ;
   struct list_head blkcg_node ;
   union __anonunion_841 __anonCompField_bdi_writeback_170 ;
};
#line 188  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backing-dev-defs.h"
struct backing_dev_info {
   u64 id ;
   struct rb_node rb_node ;
   struct list_head bdi_list ;
   unsigned long ra_pages ;
   unsigned long io_pages ;
   congested_fn *congested_fn ;
   void *congested_data ;
   char *name ;
   struct kref refcnt ;
   unsigned int capabilities ;
   unsigned int min_ratio ;
   unsigned int max_ratio ;
   unsigned int max_prop_frac ;
   atomic_long_t tot_write_bandwidth ;
   struct bdi_writeback wb ;
   struct list_head wb_list ;
   struct xarray cgwb_tree ;
   struct rb_root cgwb_congested_tree ;
   struct mutex cgwb_release_mutex ;
   struct rw_semaphore wb_switch_rwsem ;
   wait_queue_head_t wb_waitq ;
   struct device *dev ;
   struct device *owner ;
   struct timer_list laptop_mode_wb_timer ;
   struct dentry *debug_dir ;
};
#line 306 
struct bio_set;
#line 307 
struct bio_integrity_payload;
#line 308  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backing-dev-defs.h"
typedef void bio_end_io_t(struct bio *);
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk_types.h"
typedef u8 blk_status_t;
#line 112  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk_types.h"
struct bio_issue {
   u64 value ;
};
#line 144 
struct blkcg_gq;
#line 144  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk_types.h"
union __anonunion_842 {
   struct bio_integrity_payload *bi_integrity ;
};
#line 144  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk_types.h"
struct bio {
   struct bio *bi_next ;
   struct gendisk *bi_disk ;
   unsigned int bi_opf ;
   unsigned short bi_flags ;
   unsigned short bi_ioprio ;
   unsigned short bi_write_hint ;
   blk_status_t bi_status ;
   u8 bi_partno ;
   atomic_t __bi_remaining ;
   struct bvec_iter bi_iter ;
   bio_end_io_t *bi_end_io ;
   void *bi_private ;
   struct blkcg_gq *bi_blkg ;
   struct bio_issue bi_issue ;
   u64 bi_iocost_cost ;
   union __anonunion_842 __anonCompField_bio_171 ;
   unsigned short bi_vcnt ;
   unsigned short bi_max_vecs ;
   atomic_t __bi_cnt ;
   struct bio_vec *bi_io_vec ;
   struct bio_set *bi_pool ;
   struct bio_vec bi_inline_vecs[0U] ;
};
#line 452  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk_types.h"
typedef unsigned int blk_qc_t;
#line 479  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk_types.h"
struct blk_rq_stat {
   u64 mean ;
   u64 min ;
   u64 max ;
   u32 nr_samples ;
   u64 batch ;
};
#line 86  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/genhd.h"
struct disk_stats {
   u64 nsecs[4U] ;
   unsigned long sectors[4U] ;
   unsigned long ios[4U] ;
   unsigned long merges[4U] ;
   unsigned long io_ticks ;
   unsigned long time_in_queue ;
   local_t in_flight[2U] ;
};
#line 103  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/genhd.h"
struct partition_meta_info {
   char uuid[37U] ;
   u8 volname[64U] ;
};
#line 108  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/genhd.h"
struct hd_struct {
   sector_t start_sect ;
   sector_t nr_sects ;
   seqcount_t nr_sects_seq ;
   sector_t alignment_offset ;
   unsigned int discard_alignment ;
   struct device __dev ;
   struct kobject *holder_dir ;
   int policy ;
   int partno ;
   struct partition_meta_info *info ;
   int make_it_fail ;
   unsigned long stamp ;
   struct disk_stats *dkstats ;
   struct percpu_ref ref ;
   struct rcu_work rcu_work ;
};
#line 160  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/genhd.h"
struct disk_part_tbl {
   struct callback_head callback_head ;
   int len ;
   struct hd_struct *last_lookup ;
   struct hd_struct *part[] ;
};
#line 166 
struct disk_events;
#line 167 
struct badblocks;
#line 172 
struct blk_integrity_profile;
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/genhd.h"
struct blk_integrity {
   struct blk_integrity_profile *profile ;
   unsigned char flags ;
   unsigned char tuple_size ;
   unsigned char interval_exp ;
   unsigned char tag_size ;
};
#line 182 
struct timer_rand_state;
#line 182  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/genhd.h"
struct gendisk {
   int major ;
   int first_minor ;
   int minors ;
   char disk_name[32U] ;
   char *(*devnode)(struct gendisk *, umode_t *) ;
   unsigned short events ;
   unsigned short event_flags ;
   struct disk_part_tbl *part_tbl ;
   struct hd_struct part0 ;
   struct block_device_operations *fops ;
   struct request_queue *queue ;
   void *private_data ;
   int flags ;
   struct rw_semaphore lookup_sem ;
   struct kobject *slave_dir ;
   struct timer_rand_state *random ;
   atomic_t sync_io ;
   struct disk_events *ev ;
   struct kobject integrity_kobj ;
   int node_id ;
   struct badblocks *bb ;
   struct lockdep_map lockdep_map ;
};
#line 637  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pagemap.h"
typedef void *mempool_alloc_t(gfp_t , void *);
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mempool.h"
typedef void mempool_free_t(void *, void *);
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mempool.h"
struct mempool_s {
   spinlock_t lock ;
   int min_nr ;
   int curr_nr ;
   void **elements ;
   void *pool_data ;
   mempool_alloc_t *alloc ;
   mempool_free_t *free ;
   wait_queue_head_t wait ;
};
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mempool.h"
typedef struct mempool_s mempool_t;
#line 307  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bio.h"
struct bio_integrity_payload {
   struct bio *bip_bio ;
   struct bvec_iter bip_iter ;
   unsigned short bip_slab ;
   unsigned short bip_vcnt ;
   unsigned short bip_max_vcnt ;
   unsigned short bip_flags ;
   struct bvec_iter bio_iter ;
   struct work_struct bip_work ;
   struct bio_vec *bip_vec ;
   struct bio_vec bip_inline_vecs[0U] ;
};
#line 575  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bio.h"
struct bio_list {
   struct bio *head ;
   struct bio *tail ;
};
#line 703  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bio.h"
struct bio_set {
   struct kmem_cache *bio_slab ;
   unsigned int front_pad ;
   mempool_t bio_pool ;
   mempool_t bvec_pool ;
   mempool_t bio_integrity_pool ;
   mempool_t bvec_integrity_pool ;
   spinlock_t rescue_lock ;
   struct bio_list rescue_list ;
   struct work_struct rescue_work ;
   struct workqueue_struct *rescue_workqueue ;
};
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bsg.h"
struct sg_io_v4 {
   __s32 guard ;
   __u32 protocol ;
   __u32 subprotocol ;
   __u32 request_len ;
   __u64 request ;
   __u64 request_tag ;
   __u32 request_attr ;
   __u32 request_priority ;
   __u32 request_extra ;
   __u32 max_response_len ;
   __u64 response ;
   __u32 dout_iovec_count ;
   __u32 dout_xfer_len ;
   __u32 din_iovec_count ;
   __u32 din_xfer_len ;
   __u64 dout_xferp ;
   __u64 din_xferp ;
   __u32 timeout ;
   __u32 flags ;
   __u64 usr_ptr ;
   __u32 spare_in ;
   __u32 driver_status ;
   __u32 transport_status ;
   __u32 device_status ;
   __u32 retry_delay ;
   __u32 info ;
   __u32 duration ;
   __u32 response_len ;
   __s32 din_resid ;
   __s32 dout_resid ;
   __u64 generated_tag ;
   __u32 spare_out ;
   __u32 padding ;
};
#line 65 
struct request;
#line 10  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bsg.h"
struct bsg_ops {
   int (*check_proto)(struct sg_io_v4 *) ;
   int (*fill_hdr)(struct request *, struct sg_io_v4 *, fmode_t ) ;
   int (*complete_rq)(struct request *, struct sg_io_v4 *) ;
   void (*free_rq)(struct request *) ;
};
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bsg.h"
struct bsg_class_device {
   struct device *class_dev ;
   int minor ;
   struct request_queue *queue ;
   struct bsg_ops *ops ;
};
#line 94  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/blkzoned.h"
struct blk_zone {
   __u64 start ;
   __u64 len ;
   __u64 wp ;
   __u8 type ;
   __u8 cond ;
   __u8 non_seq ;
   __u8 reset ;
   __u8 reserved[36U] ;
};
#line 134 
struct elevator_queue;
#line 135 
struct blk_trace;
#line 138 
struct blk_flush_queue;
#line 139 
struct pr_ops;
#line 140 
struct rq_qos;
#line 141 
struct blk_queue_stats;
#line 142 
struct blk_stat_callback;
#line 143  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/blkzoned.h"
typedef void rq_end_io_fn(struct request *, blk_status_t );
#line 63  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
typedef __u32 req_flags_t;
#line 67 
enum mq_rq_state {
    MQ_RQ_IDLE = 0,
    MQ_RQ_IN_FLIGHT = 1,
    MQ_RQ_COMPLETE = 2
};
#line 132 
struct blk_mq_ctx;
#line 132 
struct blk_mq_hw_ctx;
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
union __anonunion_845 {
   struct hlist_node hash ;
   struct list_head ipi_list ;
};
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
union __anonunion_846 {
   struct rb_node rb_node ;
   struct bio_vec special_vec ;
   void *completion_data ;
   int error_count ;
};
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
struct __anonstruct_elv_848 {
   struct io_cq *icq ;
   void *priv[2U] ;
};
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
struct __anonstruct_flush_849 {
   unsigned int seq ;
   struct list_head list ;
   rq_end_io_fn *saved_end_io ;
};
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
union __anonunion_847 {
   struct __anonstruct_elv_848 elv ;
   struct __anonstruct_flush_849 flush ;
};
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
union __anonunion_850 {
   struct __call_single_data csd ;
   u64 fifo_time ;
};
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
struct request {
   struct request_queue *q ;
   struct blk_mq_ctx *mq_ctx ;
   struct blk_mq_hw_ctx *mq_hctx ;
   unsigned int cmd_flags ;
   req_flags_t rq_flags ;
   int tag ;
   int internal_tag ;
   unsigned int __data_len ;
   sector_t __sector ;
   struct bio *bio ;
   struct bio *biotail ;
   struct list_head queuelist ;
   union __anonunion_845 __anonCompField_request_172 ;
   union __anonunion_846 __anonCompField_request_173 ;
   union __anonunion_847 __anonCompField_request_174 ;
   struct gendisk *rq_disk ;
   struct hd_struct *part ;
   u64 alloc_time_ns ;
   u64 start_time_ns ;
   u64 io_start_time_ns ;
   unsigned short wbt_flags ;
   unsigned short stats_sectors ;
   unsigned short nr_phys_segments ;
   unsigned short nr_integrity_segments ;
   unsigned short write_hint ;
   unsigned short ioprio ;
   unsigned int extra_len ;
   enum mq_rq_state state ;
   refcount_t ref ;
   unsigned int timeout ;
   unsigned long deadline ;
   union __anonunion_850 __anonCompField_request_175 ;
   rq_end_io_fn *end_io ;
   void *end_io_data ;
};
#line 285 
struct elevator_type;
#line 286 
struct blk_mq_debugfs_attr;
#line 287 
enum elv_merge {
    ELEVATOR_NO_MERGE = 0,
    ELEVATOR_FRONT_MERGE = 1,
    ELEVATOR_BACK_MERGE = 2,
    ELEVATOR_DISCARD_MERGE = 3
};
#line 294 
struct blk_mq_alloc_data;
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/elevator.h"
struct elevator_mq_ops {
   int (*init_sched)(struct request_queue *, struct elevator_type *) ;
   void (*exit_sched)(struct elevator_queue *) ;
   int (*init_hctx)(struct blk_mq_hw_ctx *, unsigned int ) ;
   void (*exit_hctx)(struct blk_mq_hw_ctx *, unsigned int ) ;
   void (*depth_updated)(struct blk_mq_hw_ctx *) ;
   bool (*allow_merge)(struct request_queue *, struct request *, struct bio *) ;
   bool (*bio_merge)(struct blk_mq_hw_ctx *, struct bio *, unsigned int ) ;
   int (*request_merge)(struct request_queue *, struct request **, struct bio *) ;
   void (*request_merged)(struct request_queue *, struct request *, enum elv_merge ) ;
   void (*requests_merged)(struct request_queue *, struct request *, struct request *) ;
   void (*limit_depth)(unsigned int , struct blk_mq_alloc_data *) ;
   void (*prepare_request)(struct request *, struct bio *) ;
   void (*finish_request)(struct request *) ;
   void (*insert_requests)(struct blk_mq_hw_ctx *, struct list_head *, bool ) ;
   struct request *(*dispatch_request)(struct blk_mq_hw_ctx *) ;
   bool (*has_work)(struct blk_mq_hw_ctx *) ;
   void (*completed_request)(struct request *, u64 ) ;
   void (*requeue_request)(struct request *) ;
   struct request *(*former_request)(struct request_queue *, struct request *) ;
   struct request *(*next_request)(struct request_queue *, struct request *) ;
   void (*init_icq)(struct io_cq *) ;
   void (*exit_icq)(struct io_cq *) ;
};
#line 57  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/elevator.h"
struct elv_fs_entry {
   struct attribute attr ;
   ssize_t (*show)(struct elevator_queue *, char *) ;
   ssize_t (*store)(struct elevator_queue *, char *, size_t ) ;
};
#line 66  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/elevator.h"
struct elevator_type {
   struct kmem_cache *icq_cache ;
   struct elevator_mq_ops ops ;
   size_t icq_size ;
   size_t icq_align ;
   struct elv_fs_entry *elevator_attrs ;
   char *elevator_name ;
   char *elevator_alias ;
   unsigned int elevator_features ;
   struct module *elevator_owner ;
   struct blk_mq_debugfs_attr *queue_debugfs_attrs ;
   struct blk_mq_debugfs_attr *hctx_debugfs_attrs ;
   char icq_cache_name[22U] ;
   struct list_head list ;
};
#line 101  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/elevator.h"
struct elevator_queue {
   struct elevator_type *type ;
   void *elevator_data ;
   struct kobject kobj ;
   struct mutex sysfs_lock ;
   unsigned int registered : 1 ;
   struct hlist_head hash[64U] ;
};
#line 153  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/elevator.h"
typedef blk_qc_t make_request_fn(struct request_queue *, struct bio *);
#line 291  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
typedef int dma_drain_needed_fn(struct request *);
#line 304 
enum blk_zoned_model {
    BLK_ZONED_NONE = 0,
    BLK_ZONED_HA = 1,
    BLK_ZONED_HM = 2
};
#line 320  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
struct queue_limits {
   unsigned long bounce_pfn ;
   unsigned long seg_boundary_mask ;
   unsigned long virt_boundary_mask ;
   unsigned int max_hw_sectors ;
   unsigned int max_dev_sectors ;
   unsigned int chunk_sectors ;
   unsigned int max_sectors ;
   unsigned int max_segment_size ;
   unsigned int physical_block_size ;
   unsigned int logical_block_size ;
   unsigned int alignment_offset ;
   unsigned int io_min ;
   unsigned int io_opt ;
   unsigned int max_discard_sectors ;
   unsigned int max_hw_discard_sectors ;
   unsigned int max_write_same_sectors ;
   unsigned int max_write_zeroes_sectors ;
   unsigned int discard_granularity ;
   unsigned int discard_alignment ;
   unsigned short max_segments ;
   unsigned short max_integrity_segments ;
   unsigned short max_discard_segments ;
   unsigned char misaligned ;
   unsigned char discard_misaligned ;
   unsigned char raid_partial_stripes_expensive ;
   enum blk_zoned_model zoned ;
};
#line 394 
struct blk_mq_ops;
#line 394 
struct throtl_data;
#line 394 
struct blk_mq_tag_set;
#line 394  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
struct request_queue {
   struct request *last_merge ;
   struct elevator_queue *elevator ;
   struct blk_queue_stats *stats ;
   struct rq_qos *rq_qos ;
   make_request_fn *make_request_fn ;
   dma_drain_needed_fn *dma_drain_needed ;
   struct blk_mq_ops *mq_ops ;
   struct blk_mq_ctx *queue_ctx ;
   unsigned int queue_depth ;
   struct blk_mq_hw_ctx **queue_hw_ctx ;
   unsigned int nr_hw_queues ;
   struct backing_dev_info *backing_dev_info ;
   void *queuedata ;
   unsigned long queue_flags ;
   atomic_t pm_only ;
   int id ;
   gfp_t bounce_gfp ;
   spinlock_t queue_lock ;
   struct kobject kobj ;
   struct kobject *mq_kobj ;
   struct blk_integrity integrity ;
   struct device *dev ;
   int rpm_status ;
   unsigned int nr_pending ;
   unsigned long nr_requests ;
   unsigned int dma_drain_size ;
   void *dma_drain_buffer ;
   unsigned int dma_pad_mask ;
   unsigned int dma_alignment ;
   unsigned int rq_timeout ;
   int poll_nsec ;
   struct blk_stat_callback *poll_cb ;
   struct blk_rq_stat poll_stat[16U] ;
   struct timer_list timeout ;
   struct work_struct timeout_work ;
   struct list_head icq_list ;
   unsigned long blkcg_pols[1U] ;
   struct blkcg_gq *root_blkg ;
   struct list_head blkg_list ;
   struct queue_limits limits ;
   unsigned int required_elevator_features ;
   unsigned int nr_zones ;
   unsigned long *conv_zones_bitmap ;
   unsigned long *seq_zones_wlock ;
   unsigned int sg_timeout ;
   unsigned int sg_reserved_size ;
   int node ;
   struct blk_trace *blk_trace ;
   struct mutex blk_trace_mutex ;
   struct blk_flush_queue *fq ;
   struct list_head requeue_list ;
   spinlock_t requeue_lock ;
   struct delayed_work requeue_work ;
   struct mutex sysfs_lock ;
   struct mutex sysfs_dir_lock ;
   struct list_head unused_hctx_list ;
   spinlock_t unused_hctx_lock ;
   int mq_freeze_depth ;
   struct bsg_class_device bsg_dev ;
   struct throtl_data *td ;
   struct callback_head callback_head ;
   wait_queue_head_t mq_freeze_wq ;
   struct mutex mq_freeze_lock ;
   struct percpu_ref q_usage_counter ;
   struct blk_mq_tag_set *tag_set ;
   struct list_head tag_set_list ;
   struct bio_set bio_split ;
   struct dentry *debugfs_dir ;
   struct dentry *sched_debugfs_dir ;
   struct dentry *rqos_debugfs_dir ;
   bool mq_sysfs_init_done ;
   size_t cmd_size ;
   struct work_struct release_work ;
   u64 write_hints[5U] ;
};
#line 1160  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
struct blk_plug {
   struct list_head mq_list ;
   struct list_head cb_list ;
   unsigned short rq_count ;
   bool multiple_queues ;
};
#line 1514  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
struct blk_integrity_iter {
   void *prot_buf ;
   void *data_buf ;
   sector_t seed ;
   unsigned int data_size ;
   unsigned short interval ;
   char *disk_name ;
};
#line 1522  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
typedef blk_status_t integrity_processing_fn(struct blk_integrity_iter *);
#line 1524  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
typedef void integrity_prepare_fn(struct request *);
#line 1525  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
typedef void integrity_complete_fn(struct request *, unsigned int );
#line 1527  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
struct blk_integrity_profile {
   integrity_processing_fn *generate_fn ;
   integrity_processing_fn *verify_fn ;
   integrity_prepare_fn *prepare_fn ;
   integrity_complete_fn *complete_fn ;
   char *name ;
};
#line 1693  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
struct block_device_operations {
   int (*open)(struct block_device *, fmode_t ) ;
   void (*release)(struct gendisk *, fmode_t ) ;
   int (*rw_page)(struct block_device *, sector_t , struct page *, unsigned int ) ;
   int (*ioctl)(struct block_device *, fmode_t , unsigned int , unsigned long ) ;
   int (*compat_ioctl)(struct block_device *, fmode_t , unsigned int , unsigned long ) ;
   unsigned int (*check_events)(struct gendisk *, unsigned int ) ;
   int (*media_changed)(struct gendisk *) ;
   void (*unlock_native_capacity)(struct gendisk *) ;
   int (*revalidate_disk)(struct gendisk *) ;
   int (*getgeo)(struct block_device *, struct hd_geometry *) ;
   void (*swap_slot_free_notify)(struct block_device *, unsigned long ) ;
   int (*report_zones)(struct gendisk *, sector_t , unsigned int , int (*)(struct blk_zone *, unsigned int , void *), void *) ;
   struct module *owner ;
   struct pr_ops *pr_ops ;
};
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk-cgroup.h"
struct blkcg_policy_data;
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk-cgroup.h"
struct blkcg {
   struct cgroup_subsys_state css ;
   spinlock_t lock ;
   struct xarray blkg_tree ;
   struct blkcg_gq *blkg_hint ;
   struct hlist_head blkg_list ;
   struct blkcg_policy_data *cpd[5U] ;
   struct list_head all_blkcgs_node ;
   struct list_head cgwb_list ;
   refcount_t cgwb_refcnt ;
};
#line 63  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk-cgroup.h"
struct blkg_iostat {
   u64 bytes[3U] ;
   u64 ios[3U] ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk-cgroup.h"
struct blkg_iostat_set {
   struct u64_stats_sync sync ;
   struct blkg_iostat cur ;
   struct blkg_iostat last ;
};
#line 85  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk-cgroup.h"
struct blkg_policy_data {
   struct blkcg_gq *blkg ;
   int plid ;
};
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk-cgroup.h"
struct blkcg_policy_data {
   struct blkcg *blkcg ;
   int plid ;
};
#line 105  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk-cgroup.h"
struct blkcg_gq {
   struct request_queue *q ;
   struct list_head q_node ;
   struct hlist_node blkcg_node ;
   struct blkcg *blkcg ;
   struct bdi_writeback_congested *wb_congested ;
   struct blkcg_gq *parent ;
   struct percpu_ref refcnt ;
   bool online ;
   struct blkg_iostat_set *iostat_cpu ;
   struct blkg_iostat_set iostat ;
   struct blkg_policy_data *pd[5U] ;
   spinlock_t async_bio_lock ;
   struct bio_list async_bios ;
   struct work_struct async_bio_work ;
   atomic_t use_delay ;
   atomic64_t delay_nsec ;
   atomic64_t delay_start ;
   u64 last_delay ;
   int last_use ;
   struct callback_head callback_head ;
};
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/writeback.h"
enum writeback_sync_modes {
    WB_SYNC_NONE = 0,
    WB_SYNC_ALL = 1
};
#line 51  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/writeback.h"
struct writeback_control {
   long nr_to_write ;
   long pages_skipped ;
   loff_t range_start ;
   loff_t range_end ;
   enum writeback_sync_modes sync_mode ;
   unsigned int for_kupdate : 1 ;
   unsigned int for_background : 1 ;
   unsigned int tagged_writepages : 1 ;
   unsigned int for_reclaim : 1 ;
   unsigned int range_cyclic : 1 ;
   unsigned int for_sync : 1 ;
   unsigned int no_cgroup_owner : 1 ;
   unsigned int punt_to_cgroup : 1 ;
   struct bdi_writeback *wb ;
   struct inode *inode ;
   int wb_id ;
   int wb_lcand_id ;
   int wb_tcand_id ;
   size_t wb_bytes ;
   size_t wb_lcand_bytes ;
   size_t wb_tcand_bytes ;
};
#line 129  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/writeback.h"
struct wb_domain {
   spinlock_t lock ;
   struct fprop_global completions ;
   struct timer_list period_timer ;
   unsigned long period_time ;
   unsigned long dirty_limit_tstamp ;
   unsigned long dirty_limit ;
};
#line 69  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct mem_cgroup_id {
   int id ;
   refcount_t ref ;
};
#line 86  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct memcg_vmstats_percpu {
   long stat[38U] ;
   unsigned long events[91U] ;
   unsigned long nr_page_events ;
   unsigned long targets[2U] ;
};
#line 93  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct mem_cgroup_reclaim_iter {
   struct mem_cgroup *position ;
   unsigned int generation ;
};
#line 99  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct lruvec_stat {
   long count[32U] ;
};
#line 107  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct memcg_shrinker_map {
   struct callback_head rcu ;
   unsigned long map[0U] ;
};
#line 115  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct mem_cgroup_per_node {
   struct lruvec lruvec ;
   struct lruvec_stat *lruvec_stat_local ;
   struct lruvec_stat *lruvec_stat_cpu ;
   atomic_long_t lruvec_stat[32U] ;
   unsigned long lru_zone_size[5U][5U] ;
   struct mem_cgroup_reclaim_iter iter ;
   struct memcg_shrinker_map *shrinker_map ;
   struct rb_node tree_node ;
   unsigned long usage_in_excess ;
   bool on_tree ;
   struct mem_cgroup *memcg ;
};
#line 139  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct mem_cgroup_threshold {
   struct eventfd_ctx *eventfd ;
   unsigned long threshold ;
};
#line 145  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct mem_cgroup_threshold_ary {
   int current_threshold ;
   unsigned int size ;
   struct mem_cgroup_threshold entries[0U] ;
};
#line 154  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct mem_cgroup_thresholds {
   struct mem_cgroup_threshold_ary *primary ;
   struct mem_cgroup_threshold_ary *spare ;
};
#line 164 
enum memcg_kmem_state {
    KMEM_NONE = 0,
    KMEM_ALLOCATED = 1,
    KMEM_ONLINE = 2
};
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct memcg_padding {
   char x[0U] ;
} __attribute__((__aligned__(4096)));
#line 190  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct memcg_cgwb_frn {
   u64 bdi_id ;
   int memcg_id ;
   u64 at ;
   struct wb_completion done ;
};
#line 203  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct mem_cgroup {
   struct cgroup_subsys_state css ;
   struct mem_cgroup_id id ;
   struct page_counter memory ;
   struct page_counter swap ;
   struct page_counter memsw ;
   struct page_counter kmem ;
   struct page_counter tcpmem ;
   unsigned long high ;
   struct work_struct high_work ;
   unsigned long soft_limit ;
   struct vmpressure vmpressure ;
   bool use_hierarchy ;
   bool oom_group ;
   bool oom_lock ;
   int under_oom ;
   int swappiness ;
   int oom_kill_disable ;
   struct cgroup_file events_file ;
   struct cgroup_file events_local_file ;
   struct cgroup_file swap_events_file ;
   struct mutex thresholds_lock ;
   struct mem_cgroup_thresholds thresholds ;
   struct mem_cgroup_thresholds memsw_thresholds ;
   struct list_head oom_notify ;
   unsigned long move_charge_at_immigrate ;
   spinlock_t move_lock ;
   unsigned long move_lock_flags ;
   struct memcg_padding _pad1_ ;
   atomic_t moving_account ;
   struct task_struct *move_lock_task ;
   struct memcg_vmstats_percpu *vmstats_local ;
   struct memcg_vmstats_percpu *vmstats_percpu ;
   struct memcg_padding _pad2_ ;
   atomic_long_t vmstats[38U] ;
   atomic_long_t vmevents[91U] ;
   atomic_long_t memory_events[7U] ;
   atomic_long_t memory_events_local[7U] ;
   unsigned long socket_pressure ;
   bool tcpmem_active ;
   int tcpmem_pressure ;
   int kmemcg_id ;
   enum memcg_kmem_state kmem_state ;
   struct list_head kmem_caches ;
   struct list_head cgwb_list ;
   struct wb_domain cgwb_domain ;
   struct memcg_cgwb_frn cgwb_frn[4U] ;
   struct list_head event_list ;
   spinlock_t event_list_lock ;
   struct deferred_split deferred_split_queue ;
   struct mem_cgroup_per_node *nodeinfo[0U] ;
};
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/filter.h"
struct sock_filter {
   __u16 code ;
   __u8 jt ;
   __u8 jf ;
   __u32 k ;
};
#line 35 
struct sock_reuseport;
#line 513  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/filter.h"
struct sock_fprog_kern {
   u16 len ;
   struct sock_filter *filter ;
};
#line 526  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/filter.h"
union __anonunion_866 {
   struct sock_filter insns[0U] ;
   struct bpf_insn insnsi[0U] ;
};
#line 526  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/filter.h"
struct bpf_prog {
   u16 pages ;
   u16 jited : 1 ;
   u16 jit_requested : 1 ;
   u16 gpl_compatible : 1 ;
   u16 cb_access : 1 ;
   u16 dst_needed : 1 ;
   u16 blinded : 1 ;
   u16 is_func : 1 ;
   u16 kprobe_override : 1 ;
   u16 has_callchain_buf : 1 ;
   u16 enforce_expected_attach_type : 1 ;
   enum bpf_prog_type type ;
   enum bpf_attach_type expected_attach_type ;
   u32 len ;
   u32 jited_len ;
   u8 tag[8U] ;
   struct bpf_prog_aux *aux ;
   struct sock_fprog_kern *orig_prog ;
   unsigned int (*bpf_func)(void *, struct bpf_insn *) ;
   union __anonunion_866 __anonCompField_bpf_prog_176 ;
};
#line 554  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/filter.h"
struct sk_filter {
   refcount_t refcnt ;
   struct callback_head rcu ;
   struct bpf_prog *prog ;
};
#line 36  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/poll.h"
struct pollfd {
   int fd ;
   short events ;
   short revents ;
};
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/poll.h"
struct poll_table_struct {
   void (*_qproc)(struct file *, wait_queue_head_t *, struct poll_table_struct *) ;
   __poll_t _key ;
};
#line 70  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/neighbour.h"
struct neigh_table;
#line 70  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/neighbour.h"
struct neigh_parms {
   possible_net_t net ;
   struct net_device *dev ;
   struct list_head list ;
   int (*neigh_setup)(struct neighbour *) ;
   struct neigh_table *tbl ;
   void *sysctl_table ;
   int dead ;
   refcount_t refcnt ;
   struct callback_head callback_head ;
   int reachable_time ;
   int data[13U] ;
   unsigned long data_state[1U] ;
};
#line 112  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/neighbour.h"
struct neigh_statistics {
   unsigned long allocs ;
   unsigned long destroys ;
   unsigned long hash_grows ;
   unsigned long res_failed ;
   unsigned long lookups ;
   unsigned long hits ;
   unsigned long rcv_probes_mcast ;
   unsigned long rcv_probes_ucast ;
   unsigned long periodic_gc_runs ;
   unsigned long forced_gc_runs ;
   unsigned long unres_discards ;
   unsigned long table_fulls ;
};
#line 134 
struct neigh_ops;
#line 134  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/neighbour.h"
struct neighbour {
   struct neighbour *next ;
   struct neigh_table *tbl ;
   struct neigh_parms *parms ;
   unsigned long confirmed ;
   unsigned long updated ;
   rwlock_t lock ;
   refcount_t refcnt ;
   unsigned int arp_queue_len_bytes ;
   struct sk_buff_head arp_queue ;
   struct timer_list timer ;
   unsigned long used ;
   atomic_t probes ;
   __u8 flags ;
   __u8 nud_state ;
   __u8 type ;
   __u8 dead ;
   u8 protocol ;
   seqlock_t ha_lock ;
   unsigned char ha[32U] ;
   struct hh_cache hh ;
   int (*output)(struct neighbour *, struct sk_buff *) ;
   struct neigh_ops *ops ;
   struct list_head gc_list ;
   struct callback_head rcu ;
   struct net_device *dev ;
   u8 primary_key[0U] ;
} __attribute__((__designated_init__));
#line 163  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/neighbour.h"
struct neigh_ops {
   int family ;
   void (*solicit)(struct neighbour *, struct sk_buff *) ;
   void (*error_report)(struct neighbour *, struct sk_buff *) ;
   int (*output)(struct neighbour *, struct sk_buff *) ;
   int (*connected_output)(struct neighbour *, struct sk_buff *) ;
};
#line 171  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/neighbour.h"
struct pneigh_entry {
   struct pneigh_entry *next ;
   possible_net_t net ;
   struct net_device *dev ;
   u8 flags ;
   u8 protocol ;
   u8 key[0U] ;
};
#line 186  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/neighbour.h"
struct neigh_hash_table {
   struct neighbour **hash_buckets ;
   unsigned int hash_shift ;
   __u32 hash_rnd[4U] ;
   struct callback_head rcu ;
};
#line 194  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/neighbour.h"
struct neigh_table {
   int family ;
   unsigned int entry_size ;
   unsigned int key_len ;
   __be16 protocol ;
   __u32 (*hash)(void *, struct net_device *, __u32 *) ;
   bool (*key_eq)(struct neighbour *, void *) ;
   int (*constructor)(struct neighbour *) ;
   int (*pconstructor)(struct pneigh_entry *) ;
   void (*pdestructor)(struct pneigh_entry *) ;
   void (*proxy_redo)(struct sk_buff *) ;
   bool (*allow_add)(struct net_device *, struct netlink_ext_ack *) ;
   char *id ;
   struct neigh_parms parms ;
   struct list_head parms_list ;
   int gc_interval ;
   int gc_thresh1 ;
   int gc_thresh2 ;
   int gc_thresh3 ;
   unsigned long last_flush ;
   struct delayed_work gc_work ;
   struct timer_list proxy_timer ;
   struct sk_buff_head proxy_queue ;
   atomic_t entries ;
   atomic_t gc_entries ;
   struct list_head gc_list ;
   rwlock_t lock ;
   unsigned long last_rand ;
   struct neigh_statistics *stats ;
   struct neigh_hash_table *nht ;
   struct pneigh_entry **phash_buckets ;
};
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/dst.h"
struct lwtunnel_state;
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/dst.h"
struct dst_entry {
   struct net_device *dev ;
   struct dst_ops *ops ;
   unsigned long _metrics ;
   unsigned long expires ;
   struct xfrm_state *xfrm ;
   int (*input)(struct sk_buff *) ;
   int (*output)(struct net *, struct sock *, struct sk_buff *) ;
   unsigned short flags ;
   short obsolete ;
   unsigned short header_len ;
   unsigned short trailer_len ;
   atomic_t __refcnt ;
   int __use ;
   unsigned long lastuse ;
   struct lwtunnel_state *lwtstate ;
   struct callback_head callback_head ;
   short error ;
   short __pad ;
   __u32 tclassid ;
};
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fib_rules.h"
struct fib_rule_hdr {
   __u8 family ;
   __u8 dst_len ;
   __u8 src_len ;
   __u8 tos ;
   __u8 table ;
   __u8 res1 ;
   __u8 res2 ;
   __u8 action ;
   __u32 flags ;
};
#line 38  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fib_rules.h"
struct fib_rule_port_range {
   __u16 start ;
   __u16 end ;
};
#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/fib_notifier.h"
struct fib_notifier_ops {
   int family ;
   struct list_head list ;
   unsigned int (*fib_seq_read)(struct net *) ;
   int (*fib_dump)(struct net *, struct notifier_block *, struct netlink_ext_ack *) ;
   struct module *owner ;
   struct callback_head rcu ;
};
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/fib_rules.h"
struct fib_kuid_range {
   kuid_t start ;
   kuid_t end ;
};
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/fib_rules.h"
struct fib_rule {
   struct list_head list ;
   int iifindex ;
   int oifindex ;
   u32 mark ;
   u32 mark_mask ;
   u32 flags ;
   u32 table ;
   u8 action ;
   u8 l3mdev ;
   u8 proto ;
   u8 ip_proto ;
   u32 target ;
   __be64 tun_id ;
   struct fib_rule *ctarget ;
   struct net *fr_net ;
   refcount_t refcnt ;
   u32 pref ;
   int suppress_ifgroup ;
   int suppress_prefixlen ;
   char iifname[16U] ;
   char oifname[16U] ;
   struct fib_kuid_range uid_range ;
   struct fib_rule_port_range sport_range ;
   struct fib_rule_port_range dport_range ;
   struct callback_head rcu ;
};
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/fib_rules.h"
struct fib_lookup_arg {
   void *lookup_ptr ;
   void *lookup_data ;
   void *result ;
   struct fib_rule *rule ;
   u32 table ;
   int flags ;
};
#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/fib_rules.h"
struct fib_rules_ops {
   int family ;
   struct list_head list ;
   int rule_size ;
   int addr_size ;
   int unresolved_rules ;
   int nr_goto_rules ;
   unsigned int fib_rules_seq ;
   int (*action)(struct fib_rule *, struct flowi *, int , struct fib_lookup_arg *) ;
   bool (*suppress)(struct fib_rule *, struct fib_lookup_arg *) ;
   int (*match)(struct fib_rule *, struct flowi *, int ) ;
   int (*configure)(struct fib_rule *, struct sk_buff *, struct fib_rule_hdr *, struct nlattr **, struct netlink_ext_ack *) ;
   int (*delete)(struct fib_rule *) ;
   int (*compare)(struct fib_rule *, struct fib_rule_hdr *, struct nlattr **) ;
   int (*fill)(struct fib_rule *, struct sk_buff *, struct fib_rule_hdr *) ;
   size_t (*nlmsg_payload)(struct fib_rule *) ;
   void (*flush_cache)(struct fib_rules_ops *) ;
   int nlgroup ;
   struct nla_policy *policy ;
   struct list_head rules_list ;
   struct module *owner ;
   struct net *fro_net ;
   struct callback_head rcu ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/l3mdev.h"
struct l3mdev_ops {
   u32 (*l3mdev_fib_table)(struct net_device *) ;
   struct sk_buff *(*l3mdev_l3_rcv)(struct net_device *, struct sk_buff *, u16 ) ;
   struct sk_buff *(*l3mdev_l3_out)(struct net_device *, struct sock *, struct sk_buff *, u16 ) ;
   struct dst_entry *(*l3mdev_link_scope_lookup)(struct net_device *, struct flowi6 *) ;
};
#line 202  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/l3mdev.h"
struct __anonstruct_socket_lock_t_888 {
   spinlock_t slock ;
   int owned ;
   wait_queue_head_t wq ;
   struct lockdep_map dep_map ;
};
#line 202  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/l3mdev.h"
typedef struct __anonstruct_socket_lock_t_888 socket_lock_t;
#line 108  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
struct proto;
#line 109  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
typedef __u32 __portpair;
#line 114  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
typedef __u64 __addrpair;
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
struct __anonstruct_890 {
   __be32 skc_daddr ;
   __be32 skc_rcv_saddr ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_889 {
   __addrpair skc_addrpair ;
   struct __anonstruct_890 __anonCompField___anonunion_889_178 ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_891 {
   unsigned int skc_hash ;
   __u16 skc_u16hashes[2U] ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
struct __anonstruct_893 {
   __be16 skc_dport ;
   __u16 skc_num ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_892 {
   __portpair skc_portpair ;
   struct __anonstruct_893 __anonCompField___anonunion_892_181 ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_894 {
   struct hlist_node skc_bind_node ;
   struct hlist_node skc_portaddr_node ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_895 {
   unsigned long skc_flags ;
   struct sock *skc_listener ;
   struct inet_timewait_death_row *skc_tw_dr ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_896 {
   struct hlist_node skc_node ;
   struct hlist_nulls_node skc_nulls_node ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_897 {
   int skc_incoming_cpu ;
   u32 skc_rcv_wnd ;
   u32 skc_tw_rcv_nxt ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_898 {
   u32 skc_rxhash ;
   u32 skc_window_clamp ;
   u32 skc_tw_snd_nxt ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
struct sock_common {
   union __anonunion_889 __anonCompField_sock_common_179 ;
   union __anonunion_891 __anonCompField_sock_common_180 ;
   union __anonunion_892 __anonCompField_sock_common_182 ;
   unsigned short skc_family ;
   unsigned char skc_state ;
   unsigned char skc_reuse : 4 ;
   unsigned char skc_reuseport : 1 ;
   unsigned char skc_ipv6only : 1 ;
   unsigned char skc_net_refcnt : 1 ;
   int skc_bound_dev_if ;
   union __anonunion_894 __anonCompField_sock_common_183 ;
   struct proto *skc_prot ;
   possible_net_t skc_net ;
   struct in6_addr skc_v6_daddr ;
   struct in6_addr skc_v6_rcv_saddr ;
   atomic64_t skc_cookie ;
   union __anonunion_895 __anonCompField_sock_common_184 ;
   int skc_dontcopy_begin[0U] ;
   union __anonunion_896 __anonCompField_sock_common_185 ;
   unsigned short skc_tx_queue_mapping ;
   unsigned short skc_rx_queue_mapping ;
   union __anonunion_897 __anonCompField_sock_common_186 ;
   refcount_t skc_refcnt ;
   int skc_dontcopy_end[0U] ;
   union __anonunion_898 __anonCompField_sock_common_187 ;
};
#line 231 
struct bpf_sk_storage;
#line 323  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
struct __anonstruct_sk_backlog_899 {
   atomic_t rmem_alloc ;
   int len ;
   struct sk_buff *head ;
   struct sk_buff *tail ;
};
#line 323  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_900 {
   struct socket_wq *sk_wq ;
   struct socket_wq *sk_wq_raw ;
};
#line 323  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_901 {
   struct sk_buff *sk_send_head ;
   struct rb_root tcp_rtx_queue ;
};
#line 323  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
struct sock {
   struct sock_common __sk_common ;
   socket_lock_t sk_lock ;
   atomic_t sk_drops ;
   int sk_rcvlowat ;
   struct sk_buff_head sk_error_queue ;
   struct sk_buff *sk_rx_skb_cache ;
   struct sk_buff_head sk_receive_queue ;
   struct __anonstruct_sk_backlog_899 sk_backlog ;
   int sk_forward_alloc ;
   unsigned int sk_ll_usec ;
   unsigned int sk_napi_id ;
   int sk_rcvbuf ;
   struct sk_filter *sk_filter ;
   union __anonunion_900 __anonCompField_sock_188 ;
   struct xfrm_policy *sk_policy[2U] ;
   struct dst_entry *sk_rx_dst ;
   struct dst_entry *sk_dst_cache ;
   atomic_t sk_omem_alloc ;
   int sk_sndbuf ;
   int sk_wmem_queued ;
   refcount_t sk_wmem_alloc ;
   unsigned long sk_tsq_flags ;
   union __anonunion_901 __anonCompField_sock_189 ;
   struct sk_buff *sk_tx_skb_cache ;
   struct sk_buff_head sk_write_queue ;
   __s32 sk_peek_off ;
   int sk_write_pending ;
   __u32 sk_dst_pending_confirm ;
   u32 sk_pacing_status ;
   long sk_sndtimeo ;
   struct timer_list sk_timer ;
   __u32 sk_priority ;
   __u32 sk_mark ;
   unsigned long sk_pacing_rate ;
   unsigned long sk_max_pacing_rate ;
   struct page_frag sk_frag ;
   netdev_features_t sk_route_caps ;
   netdev_features_t sk_route_nocaps ;
   netdev_features_t sk_route_forced_caps ;
   int sk_gso_type ;
   unsigned int sk_gso_max_size ;
   gfp_t sk_allocation ;
   __u32 sk_txhash ;
   unsigned int __sk_flags_offset[0U] ;
   unsigned int sk_padding : 1 ;
   unsigned int sk_kern_sock : 1 ;
   unsigned int sk_no_check_tx : 1 ;
   unsigned int sk_no_check_rx : 1 ;
   unsigned int sk_userlocks : 4 ;
   unsigned int sk_protocol : 8 ;
   unsigned int sk_type : 16 ;
   u16 sk_gso_max_segs ;
   u8 sk_pacing_shift ;
   unsigned long sk_lingertime ;
   struct proto *sk_prot_creator ;
   rwlock_t sk_callback_lock ;
   int sk_err ;
   int sk_err_soft ;
   u32 sk_ack_backlog ;
   u32 sk_max_ack_backlog ;
   kuid_t sk_uid ;
   struct pid *sk_peer_pid ;
   struct cred *sk_peer_cred ;
   long sk_rcvtimeo ;
   ktime_t sk_stamp ;
   u16 sk_tsflags ;
   u8 sk_shutdown ;
   u32 sk_tskey ;
   atomic_t sk_zckey ;
   u8 sk_clockid ;
   u8 sk_txtime_deadline_mode : 1 ;
   u8 sk_txtime_report_errors : 1 ;
   u8 sk_txtime_unused : 6 ;
   struct socket *sk_socket ;
   void *sk_user_data ;
   void *sk_security ;
   struct sock_cgroup_data sk_cgrp_data ;
   struct mem_cgroup *sk_memcg ;
   void (*sk_state_change)(struct sock *) ;
   void (*sk_data_ready)(struct sock *) ;
   void (*sk_write_space)(struct sock *) ;
   void (*sk_error_report)(struct sock *) ;
   int (*sk_backlog_rcv)(struct sock *, struct sk_buff *) ;
   struct sk_buff *(*sk_validate_xmit_skb)(struct sock *, struct net_device *, struct sk_buff *) ;
   void (*sk_destruct)(struct sock *) ;
   struct sock_reuseport *sk_reuseport_cb ;
   struct bpf_sk_storage *sk_bpf_storage ;
   struct callback_head sk_rcu ;
};
#line 1048 
struct request_sock_ops;
#line 1049 
struct timewait_sock_ops;
#line 1050 
struct raw_hashinfo;
#line 1051 
struct smc_hashinfo;
#line 1071 
struct udp_table;
#line 1071  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_h_936 {
   struct inet_hashinfo *hashinfo ;
   struct udp_table *udp_table ;
   struct raw_hashinfo *raw_hash ;
   struct smc_hashinfo *smc_hash ;
};
#line 1071  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
struct proto {
   void (*close)(struct sock *, long ) ;
   int (*pre_connect)(struct sock *, struct sockaddr *, int ) ;
   int (*connect)(struct sock *, struct sockaddr *, int ) ;
   int (*disconnect)(struct sock *, int ) ;
   struct sock *(*accept)(struct sock *, int , int *, bool ) ;
   int (*ioctl)(struct sock *, int , unsigned long ) ;
   int (*init)(struct sock *) ;
   void (*destroy)(struct sock *) ;
   void (*shutdown)(struct sock *, int ) ;
   int (*setsockopt)(struct sock *, int , int , char *, unsigned int ) ;
   int (*getsockopt)(struct sock *, int , int , char *, int *) ;
   void (*keepalive)(struct sock *, int ) ;
   int (*compat_setsockopt)(struct sock *, int , int , char *, unsigned int ) ;
   int (*compat_getsockopt)(struct sock *, int , int , char *, int *) ;
   int (*compat_ioctl)(struct sock *, unsigned int , unsigned long ) ;
   int (*sendmsg)(struct sock *, struct msghdr *, size_t ) ;
   int (*recvmsg)(struct sock *, struct msghdr *, size_t , int , int , int *) ;
   int (*sendpage)(struct sock *, struct page *, int , size_t , int ) ;
   int (*bind)(struct sock *, struct sockaddr *, int ) ;
   int (*backlog_rcv)(struct sock *, struct sk_buff *) ;
   void (*release_cb)(struct sock *) ;
   int (*hash)(struct sock *) ;
   void (*unhash)(struct sock *) ;
   void (*rehash)(struct sock *) ;
   int (*get_port)(struct sock *, unsigned short ) ;
   unsigned int inuse_idx ;
   bool (*stream_memory_free)(struct sock *, int ) ;
   bool (*stream_memory_read)(struct sock *) ;
   void (*enter_memory_pressure)(struct sock *) ;
   void (*leave_memory_pressure)(struct sock *) ;
   atomic_long_t *memory_allocated ;
   struct percpu_counter *sockets_allocated ;
   unsigned long *memory_pressure ;
   long *sysctl_mem ;
   int *sysctl_wmem ;
   int *sysctl_rmem ;
   u32 sysctl_wmem_offset ;
   u32 sysctl_rmem_offset ;
   int max_header ;
   bool no_autobind ;
   struct kmem_cache *slab ;
   unsigned int obj_size ;
   slab_flags_t slab_flags ;
   unsigned int useroffset ;
   unsigned int usersize ;
   struct percpu_counter *orphan_count ;
   struct request_sock_ops *rsk_prot ;
   struct timewait_sock_ops *twsk_prot ;
   union __anonunion_h_936 h ;
   struct module *owner ;
   char name[32U] ;
   struct list_head node ;
   int (*diag_destroy)(struct sock *, int ) ;
} __attribute__((__designated_init__));
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/request_sock.h"
struct request_sock_ops {
   int family ;
   unsigned int obj_size ;
   struct kmem_cache *slab ;
   char *slab_name ;
   int (*rtx_syn_ack)(struct sock *, struct request_sock *) ;
   void (*send_ack)(struct sock *, struct sk_buff *, struct request_sock *) ;
   void (*send_reset)(struct sock *, struct sk_buff *) ;
   void (*destructor)(struct request_sock *) ;
   void (*syn_ack_timeout)(struct request_sock *) ;
};
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/request_sock.h"
struct request_sock {
   struct sock_common __req_common ;
   struct request_sock *dl_next ;
   u16 mss ;
   u8 num_retrans ;
   u8 cookie_ts : 1 ;
   u8 num_timeout : 7 ;
   u32 ts_recent ;
   struct timer_list rsk_timer ;
   struct request_sock_ops *rsk_ops ;
   struct sock *sk ;
   u32 *saved_syn ;
   u32 secid ;
   u32 peer_secid ;
};
#line 63  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ipv6.h"
struct ipv6_stable_secret {
   bool initialized ;
   struct in6_addr secret ;
};
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ipv6.h"
struct ipv6_devconf {
   __s32 forwarding ;
   __s32 hop_limit ;
   __s32 mtu6 ;
   __s32 accept_ra ;
   __s32 accept_redirects ;
   __s32 autoconf ;
   __s32 dad_transmits ;
   __s32 rtr_solicits ;
   __s32 rtr_solicit_interval ;
   __s32 rtr_solicit_max_interval ;
   __s32 rtr_solicit_delay ;
   __s32 force_mld_version ;
   __s32 mldv1_unsolicited_report_interval ;
   __s32 mldv2_unsolicited_report_interval ;
   __s32 use_tempaddr ;
   __s32 temp_valid_lft ;
   __s32 temp_prefered_lft ;
   __s32 regen_max_retry ;
   __s32 max_desync_factor ;
   __s32 max_addresses ;
   __s32 accept_ra_defrtr ;
   __s32 accept_ra_min_hop_limit ;
   __s32 accept_ra_pinfo ;
   __s32 ignore_routes_with_linkdown ;
   __s32 accept_ra_rtr_pref ;
   __s32 rtr_probe_interval ;
   __s32 accept_ra_rt_info_min_plen ;
   __s32 accept_ra_rt_info_max_plen ;
   __s32 proxy_ndp ;
   __s32 accept_source_route ;
   __s32 accept_ra_from_local ;
   __s32 optimistic_dad ;
   __s32 use_optimistic ;
   __s32 mc_forwarding ;
   __s32 disable_ipv6 ;
   __s32 drop_unicast_in_l2_multicast ;
   __s32 accept_dad ;
   __s32 force_tllao ;
   __s32 ndisc_notify ;
   __s32 suppress_frag_ndisc ;
   __s32 accept_ra_mtu ;
   __s32 drop_unsolicited_na ;
   struct ipv6_stable_secret stable_secret ;
   __s32 use_oif_addrs_only ;
   __s32 keep_addr_on_down ;
   __s32 seg6_enabled ;
   __s32 seg6_require_hmac ;
   __u32 enhanced_dad ;
   __u32 addr_gen_mode ;
   __s32 disable_policy ;
   __s32 ndisc_tclass ;
   struct ctl_table_header *sysctl_header ;
};
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/timewait_sock.h"
struct timewait_sock_ops {
   struct kmem_cache *twsk_slab ;
   char *twsk_slab_name ;
   unsigned int twsk_obj_size ;
   int (*twsk_unique)(struct sock *, struct sock *, void *) ;
   void (*twsk_destructor)(struct sock *) ;
};
#line 246  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/inet_ecn.h"
typedef u32 codel_time_t;
#line 225  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_chanctx_conf {
   struct cfg80211_chan_def def ;
   struct cfg80211_chan_def min_def ;
   u8 rx_chains_static ;
   u8 rx_chains_dynamic ;
   bool radar_enabled ;
   u8 drv_priv[0U] ;
};
#line 267 
struct ieee80211_vif;
#line 440 
struct ieee80211_sta;
#line 471  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_mu_group_data {
   u8 membership[8U] ;
   u8 position[16U] ;
};
#line 484  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_ftm_responder_params {
   u8 *lci ;
   u8 *civicloc ;
   size_t lci_len ;
   size_t civicloc_len ;
};
#line 608  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_bss_conf {
   u8 *bssid ;
   u8 bss_color ;
   u8 htc_trig_based_pkt_ext ;
   bool multi_sta_back_32bit ;
   bool uora_exists ;
   bool ack_enabled ;
   u8 uora_ocw_range ;
   u16 frame_time_rts_th ;
   bool he_support ;
   bool twt_requester ;
   bool twt_responder ;
   bool assoc ;
   bool ibss_joined ;
   bool ibss_creator ;
   u16 aid ;
   bool use_cts_prot ;
   bool use_short_preamble ;
   bool use_short_slot ;
   bool enable_beacon ;
   u8 dtim_period ;
   u16 beacon_int ;
   u16 assoc_capability ;
   u64 sync_tsf ;
   u32 sync_device_ts ;
   u8 sync_dtim_count ;
   u32 basic_rates ;
   struct ieee80211_rate *beacon_rate ;
   int mcast_rate[4U] ;
   u16 ht_operation_mode ;
   s32 cqm_rssi_thold ;
   u32 cqm_rssi_hyst ;
   s32 cqm_rssi_low ;
   s32 cqm_rssi_high ;
   struct cfg80211_chan_def chandef ;
   struct ieee80211_mu_group_data mu_group ;
   __be32 arp_addr_list[4U] ;
   int arp_addr_cnt ;
   bool qos ;
   bool idle ;
   bool ps ;
   u8 ssid[32U] ;
   size_t ssid_len ;
   bool hidden_ssid ;
   int txpower ;
   enum nl80211_tx_power_setting txpower_type ;
   struct ieee80211_p2p_noa_attr p2p_noa_attr ;
   bool allow_p2p_go_ps ;
   u16 max_idle_period ;
   bool protected_keep_alive ;
   bool ftm_responder ;
   struct ieee80211_ftm_responder_params *ftmr_params ;
   bool nontransmitted ;
   u8 transmitter_bssid[6U] ;
   u8 bssid_index ;
   u8 bssid_indicator ;
   bool ema_ap ;
   u8 profile_periodicity ;
   struct ieee80211_he_operation he_operation ;
   struct ieee80211_he_obss_pd he_obss_pd ;
};
#line 930  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_tx_rate {
   s8 idx ;
   u16 count : 5 ;
   u16 flags : 11 ;
} __attribute__((__packed__));
#line 1004  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct __anonstruct_1012 {
   struct ieee80211_tx_rate rates[4U] ;
   s8 rts_cts_rate_idx ;
   u8 use_rts : 1 ;
   u8 use_cts_prot : 1 ;
   u8 short_preamble : 1 ;
   u8 skip_table : 1 ;
};
#line 1004  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
union __anonunion_1011 {
   struct __anonstruct_1012 __anonCompField___anonunion_1011_192 ;
   unsigned long jiffies ;
};
#line 1004 
struct ieee80211_key_conf;
#line 1004  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct __anonstruct_control_1010 {
   union __anonunion_1011 __anonCompField___anonstruct_control_1010_193 ;
   struct ieee80211_vif *vif ;
   struct ieee80211_key_conf *hw_key ;
   u32 flags ;
   codel_time_t enqueue_time ;
};
#line 1004  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct __anonstruct_ack_1013 {
   u64 cookie ;
};
#line 1004  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct __anonstruct_status_1014 {
   struct ieee80211_tx_rate rates[4U] ;
   s32 ack_signal ;
   u8 ampdu_ack_len ;
   u8 ampdu_len ;
   u8 antenna ;
   u16 tx_time ;
   bool is_valid_ack_signal ;
   void *status_driver_data[2U] ;
};
#line 1004  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct __anonstruct_1015 {
   struct ieee80211_tx_rate driver_rates[4U] ;
   u8 pad[4U] ;
   void *rate_driver_data[3U] ;
};
#line 1004  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
union __anonunion_1009 {
   struct __anonstruct_control_1010 control ;
   struct __anonstruct_ack_1013 ack ;
   struct __anonstruct_status_1014 status ;
   struct __anonstruct_1015 __anonCompField___anonunion_1009_194 ;
   void *driver_data[5U] ;
};
#line 1004  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_tx_info {
   u32 flags ;
   u8 band ;
   u8 hw_queue ;
   u16 ack_frame_id : 6 ;
   u16 tx_time_est : 10 ;
   union __anonunion_1009 __anonCompField_ieee80211_tx_info_195 ;
};
#line 1430 
enum ieee80211_smps_mode {
    IEEE80211_SMPS_AUTOMATIC = 0,
    IEEE80211_SMPS_OFF = 1,
    IEEE80211_SMPS_STATIC = 2,
    IEEE80211_SMPS_DYNAMIC = 3,
    IEEE80211_SMPS_NUM_MODES = 4
};
#line 1522  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_conf {
   u32 flags ;
   int power_level ;
   int dynamic_ps_timeout ;
   u16 listen_interval ;
   u8 ps_dtim_period ;
   u8 long_frame_max_tx_count ;
   u8 short_frame_max_tx_count ;
   struct cfg80211_chan_def chandef ;
   bool radar_enabled ;
   enum ieee80211_smps_mode smps_mode ;
};
#line 1627 
struct ieee80211_txq;
#line 1627  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_vif {
   enum nl80211_iftype type ;
   struct ieee80211_bss_conf bss_conf ;
   u8 addr[6U] ;
   bool p2p ;
   bool csa_active ;
   bool mu_mimo_owner ;
   u8 cab_queue ;
   u8 hw_queue[4U] ;
   struct ieee80211_txq *txq ;
   struct ieee80211_chanctx_conf *chanctx_conf ;
   u32 driver_flags ;
   struct dentry *debugfs_dir ;
   unsigned int probe_req_reg ;
   bool txqs_stopped[4U] ;
   u8 drv_priv[0U] ;
};
#line 1772  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_key_conf {
   atomic64_t tx_pn ;
   u32 cipher ;
   u8 icv_len ;
   u8 iv_len ;
   u8 hw_key_idx ;
   s8 keyidx ;
   u16 flags ;
   u8 keylen ;
   u8 key[0U] ;
};
#line 1846  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_cipher_scheme {
   u32 cipher ;
   u16 iftype ;
   u8 hdr_len ;
   u8 pn_len ;
   u8 pn_off ;
   u8 key_idx_off ;
   u8 key_idx_mask ;
   u8 key_idx_shift ;
   u8 mic_len ;
};
#line 1870 
enum ieee80211_sta_rx_bandwidth {
    IEEE80211_STA_RX_BW_20 = 0,
    IEEE80211_STA_RX_BW_40 = 1,
    IEEE80211_STA_RX_BW_80 = 2,
    IEEE80211_STA_RX_BW_160 = 3
};
#line 1915  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct __anonstruct_rate_1023 {
   s8 idx ;
   u8 count ;
   u8 count_cts ;
   u8 count_rts ;
   u16 flags ;
};
#line 1915  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_sta_rates {
   struct callback_head callback_head ;
   struct __anonstruct_rate_1023 rate[4U] ;
};
#line 1939  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_sta_txpwr {
   s16 power ;
   enum nl80211_tx_power_setting type ;
};
#line 1991  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_sta {
   u32 supp_rates[4U] ;
   u8 addr[6U] ;
   u16 aid ;
   struct ieee80211_sta_ht_cap ht_cap ;
   struct ieee80211_sta_vht_cap vht_cap ;
   struct ieee80211_sta_he_cap he_cap ;
   u16 max_rx_aggregation_subframes ;
   bool wme ;
   u8 uapsd_queues ;
   u8 max_sp ;
   u8 rx_nss ;
   enum ieee80211_sta_rx_bandwidth bandwidth ;
   enum ieee80211_smps_mode smps_mode ;
   struct ieee80211_sta_rates *rates ;
   bool tdls ;
   bool tdls_initiator ;
   bool mfp ;
   u8 max_amsdu_subframes ;
   u16 max_amsdu_len ;
   bool support_p2p_ps ;
   u16 max_rc_amsdu_len ;
   u16 max_tid_amsdu_len[16U] ;
   struct ieee80211_sta_txpwr txpwr ;
   struct ieee80211_txq *txq[17U] ;
   u8 drv_priv[0U] ;
};
#line 2074  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_txq {
   struct ieee80211_vif *vif ;
   struct ieee80211_sta *sta ;
   u8 tid ;
   u8 ac ;
   u8 drv_priv[0U] ;
};
#line 2487  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct __anonstruct_radiotap_timestamp_1024 {
   int units_pos ;
   s16 accuracy ;
};
#line 2487  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_hw {
   struct ieee80211_conf conf ;
   struct wiphy *wiphy ;
   char *rate_control_algorithm ;
   void *priv ;
   unsigned long flags[1U] ;
   unsigned int extra_tx_headroom ;
   unsigned int extra_beacon_tailroom ;
   int vif_data_size ;
   int sta_data_size ;
   int chanctx_data_size ;
   int txq_data_size ;
   u16 queues ;
   u16 max_listen_interval ;
   s8 max_signal ;
   u8 max_rates ;
   u8 max_report_rates ;
   u8 max_rate_tries ;
   u16 max_rx_aggregation_subframes ;
   u16 max_tx_aggregation_subframes ;
   u8 max_tx_fragments ;
   u8 offchannel_tx_hw_queue ;
   u8 radiotap_mcs_details ;
   u16 radiotap_vht_details ;
   struct __anonstruct_radiotap_timestamp_1024 radiotap_timestamp ;
   netdev_features_t netdev_features ;
   u8 uapsd_queues ;
   u8 uapsd_max_sp_len ;
   u8 n_cipher_schemes ;
   struct ieee80211_cipher_scheme *cipher_schemes ;
   u8 max_nan_de_entries ;
   u8 tx_sk_pacing_shift ;
   u8 weight_multiplier ;
   u32 max_mtu ;
};
#line 6481  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
typedef u16 zd_addr_t;
#line 36  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_rf.h"
struct zd_rf {
   u8 type ;
   u8 channel ;
   u8 update_channel_int : 1 ;
   u8 patch_cck_gain : 1 ;
   void *priv ;
   int (*init_hw)(struct zd_rf *) ;
   int (*set_channel)(struct zd_rf *, u8 ) ;
   int (*switch_radio_on)(struct zd_rf *) ;
   int (*switch_radio_off)(struct zd_rf *) ;
   int (*patch_6m_band_edge)(struct zd_rf *, u8 ) ;
   void (*clear)(struct zd_rf *) ;
};
#line 70  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.h"
struct usb_req_read_regs {
   __le16 id ;
   __le16 addr[0U] ;
} __attribute__((__packed__));
#line 75  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.h"
struct reg_data {
   __le16 addr ;
   __le16 value ;
} __attribute__((__packed__));
#line 80  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.h"
struct usb_req_write_regs {
   __le16 id ;
   struct reg_data reg_writes[0U] ;
} __attribute__((__packed__));
#line 91  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.h"
struct usb_req_rfwrite {
   __le16 id ;
   __le16 value ;
   __le16 bits ;
   __le16 bit_values[0U] ;
} __attribute__((__packed__));
#line 114  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.h"
struct usb_int_header {
   u8 type ;
   u8 id ;
} __attribute__((__packed__));
#line 119  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.h"
struct usb_int_regs {
   struct usb_int_header hdr ;
   struct reg_data regs[0U] ;
} __attribute__((__packed__));
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.h"
struct read_regs_int {
   struct completion completion ;
   struct usb_req_read_regs *req ;
   unsigned int req_count ;
   u8 buffer[64U] ;
   int length ;
   __le16 cr_int_addr ;
};
#line 144  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.h"
struct zd_ioreq16 {
   zd_addr_t addr ;
   u16 value ;
};
#line 154  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.h"
struct zd_usb_interrupt {
   struct read_regs_int read_regs ;
   spinlock_t lock ;
   struct urb *urb ;
   void *buffer ;
   dma_addr_t buffer_dma ;
   int interval ;
   atomic_t read_regs_enabled ;
   u8 read_regs_int_overridden : 1 ;
};
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.h"
struct zd_usb_rx {
   spinlock_t lock ;
   struct mutex setup_mutex ;
   struct delayed_work idle_work ;
   struct tasklet_struct reset_timer_tasklet ;
   u8 fragment[9600U] ;
   unsigned int fragment_length ;
   unsigned int usb_packet_size ;
   struct urb **urbs ;
   int urbs_count ;
};
#line 193  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.h"
struct zd_usb_tx {
   atomic_t enabled ;
   spinlock_t lock ;
   struct delayed_work watchdog_work ;
   struct sk_buff_head submitted_skbs ;
   struct usb_anchor submitted ;
   int submitted_urbs ;
   u8 stopped : 1 ;
   u8 watchdog_enabled : 1 ;
};
#line 206  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.h"
struct zd_usb {
   struct zd_usb_interrupt intr ;
   struct zd_usb_rx rx ;
   struct zd_usb_tx tx ;
   struct usb_interface *intf ;
   struct usb_anchor submitted_cmds ;
   struct urb *urb_async_waiting ;
   int cmd_error ;
   u8 req_buf[64U] ;
   u8 is_zd1211b : 1 ;
   u8 initialized : 1 ;
   u8 was_running : 1 ;
   u8 in_async : 1 ;
};
#line 752  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.h"
struct zd_chip {
   struct zd_usb usb ;
   struct zd_rf rf ;
   struct mutex mutex ;
   zd_addr_t fw_regs_base ;
   u8 pwr_cal_values[14U] ;
   u8 pwr_int_values[14U] ;
   u8 ofdm_cal_values[3U][14U] ;
   u16 link_led ;
   unsigned int pa_type : 4 ;
   unsigned int patch_cck_gain : 1 ;
   unsigned int patch_cr157 : 1 ;
   unsigned int patch_6m_band_edge : 1 ;
   unsigned int new_phy_layout : 1 ;
   unsigned int al2230s_bit : 1 ;
   unsigned int supports_tx_led : 1 ;
};
#line 937  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.h"
struct zd_mc_hash {
   u32 low ;
   u32 high ;
};
#line 93  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_mac.h"
struct rx_length_info {
   __le16 length[3U] ;
   __le16 tag ;
} __attribute__((__packed__));
#line 149  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_mac.h"
struct housekeeping {
   struct delayed_work link_led_work ;
};
#line 153  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_mac.h"
struct beacon {
   struct delayed_work watchdog_work ;
   struct sk_buff *cur_beacon ;
   unsigned long last_update ;
   u16 interval ;
   u8 period ;
};
#line 169  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_mac.h"
struct zd_mac {
   struct zd_chip chip ;
   spinlock_t lock ;
   spinlock_t intr_lock ;
   struct ieee80211_hw *hw ;
   struct ieee80211_vif *vif ;
   struct housekeeping housekeeping ;
   struct beacon beacon ;
   struct work_struct set_rts_cts_work ;
   struct work_struct process_intr ;
   struct zd_mc_hash multicast_hash ;
   u8 intr_buffer[64U] ;
   u8 regdomain ;
   u8 default_regdomain ;
   u8 channel ;
   int type ;
   int associated ;
   unsigned long flags ;
   struct sk_buff_head ack_wait_queue ;
   struct ieee80211_channel channels[14U] ;
   struct ieee80211_rate rates[12U] ;
   struct ieee80211_supported_band band ;
   unsigned int short_preamble : 1 ;
   unsigned int pass_failed_fcs : 1 ;
   unsigned int pass_ctrl : 1 ;
   unsigned int ack_pending : 1 ;
   int ack_signal ;
};
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 197 
enum hrtimer_restart;
#line 234  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_rf_uw2453.c"
struct uw2453_priv {
   int config ;
};
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 197 
enum hrtimer_restart;
#line 2026  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion___u_4710 {
   struct sk_buff *__val ;
   char __c[1U] ;
};
#line 2027  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion___u_4712 {
   struct sk_buff *__val ;
   char __c[1U] ;
};
#line 201  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_hw_addr {
   struct list_head list ;
   unsigned char addr[32U] ;
   unsigned char type ;
   bool global_use ;
   int sync_cnt ;
   int refcount ;
   int synced ;
   struct callback_head callback_head ;
};
#line 3610 
enum skb_free_reason {
    SKB_REASON_CONSUMED = 0,
    SKB_REASON_DROPPED = 1
};
#line 233  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct ieee80211_hdr {
   __le16 frame_control ;
   __le16 duration_id ;
   u8 addr1[6U] ;
   u8 addr2[6U] ;
   u8 addr3[6U] ;
   __le16 seq_ctrl ;
   u8 addr4[6U] ;
} __attribute__((__packed__, __aligned__(2)));
#line 1656  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct ieee80211_he_mu_edca_param_ac_rec {
   u8 aifsn ;
   u8 ecw_min_max ;
   u8 mu_edca_timer ;
} __attribute__((__packed__));
#line 3039  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/nl80211.h"
struct nl80211_sta_flag_update {
   __u32 mask ;
   __u32 set ;
} __attribute__((__packed__));
#line 3362 
enum nl80211_mesh_power_mode {
    NL80211_MESH_POWER_UNKNOWN = 0,
    NL80211_MESH_POWER_ACTIVE = 1,
    NL80211_MESH_POWER_LIGHT_SLEEP = 2,
    NL80211_MESH_POWER_DEEP_SLEEP = 3,
    __NL80211_MESH_POWER_AFTER_LAST = 4,
    NL80211_MESH_POWER_MAX = 3
};
#line 4593 
enum nl80211_txrate_gi {
    NL80211_TXRATE_DEFAULT_GI = 0,
    NL80211_TXRATE_FORCE_SGI = 1,
    NL80211_TXRATE_FORCE_LGI = 2
};
#line 5133 
enum nl80211_ext_feature_index {
    NL80211_EXT_FEATURE_VHT_IBSS = 0,
    NL80211_EXT_FEATURE_RRM = 1,
    NL80211_EXT_FEATURE_MU_MIMO_AIR_SNIFFER = 2,
    NL80211_EXT_FEATURE_SCAN_START_TIME = 3,
    NL80211_EXT_FEATURE_BSS_PARENT_TSF = 4,
    NL80211_EXT_FEATURE_SET_SCAN_DWELL = 5,
    NL80211_EXT_FEATURE_BEACON_RATE_LEGACY = 6,
    NL80211_EXT_FEATURE_BEACON_RATE_HT = 7,
    NL80211_EXT_FEATURE_BEACON_RATE_VHT = 8,
    NL80211_EXT_FEATURE_FILS_STA = 9,
    NL80211_EXT_FEATURE_MGMT_TX_RANDOM_TA = 10,
    NL80211_EXT_FEATURE_MGMT_TX_RANDOM_TA_CONNECTED = 11,
    NL80211_EXT_FEATURE_SCHED_SCAN_RELATIVE_RSSI = 12,
    NL80211_EXT_FEATURE_CQM_RSSI_LIST = 13,
    NL80211_EXT_FEATURE_FILS_SK_OFFLOAD = 14,
    NL80211_EXT_FEATURE_4WAY_HANDSHAKE_STA_PSK = 15,
    NL80211_EXT_FEATURE_4WAY_HANDSHAKE_STA_1X = 16,
    NL80211_EXT_FEATURE_FILS_MAX_CHANNEL_TIME = 17,
    NL80211_EXT_FEATURE_ACCEPT_BCAST_PROBE_RESP = 18,
    NL80211_EXT_FEATURE_OCE_PROBE_REQ_HIGH_TX_RATE = 19,
    NL80211_EXT_FEATURE_OCE_PROBE_REQ_DEFERRAL_SUPPRESSION = 20,
    NL80211_EXT_FEATURE_MFP_OPTIONAL = 21,
    NL80211_EXT_FEATURE_LOW_SPAN_SCAN = 22,
    NL80211_EXT_FEATURE_LOW_POWER_SCAN = 23,
    NL80211_EXT_FEATURE_HIGH_ACCURACY_SCAN = 24,
    NL80211_EXT_FEATURE_DFS_OFFLOAD = 25,
    NL80211_EXT_FEATURE_CONTROL_PORT_OVER_NL80211 = 26,
    NL80211_EXT_FEATURE_ACK_SIGNAL_SUPPORT = 27,
    NL80211_EXT_FEATURE_DATA_ACK_SIGNAL_SUPPORT = 27,
    NL80211_EXT_FEATURE_TXQS = 28,
    NL80211_EXT_FEATURE_SCAN_RANDOM_SN = 29,
    NL80211_EXT_FEATURE_SCAN_MIN_PREQ_CONTENT = 30,
    NL80211_EXT_FEATURE_CAN_REPLACE_PTK0 = 31,
    NL80211_EXT_FEATURE_ENABLE_FTM_RESPONDER = 32,
    NL80211_EXT_FEATURE_AIRTIME_FAIRNESS = 33,
    NL80211_EXT_FEATURE_AP_PMKSA_CACHING = 34,
    NL80211_EXT_FEATURE_SCHED_SCAN_BAND_SPECIFIC_RSSI_THOLD = 35,
    NL80211_EXT_FEATURE_EXT_KEY_ID = 36,
    NL80211_EXT_FEATURE_STA_TX_PWR = 37,
    NL80211_EXT_FEATURE_SAE_OFFLOAD = 38,
    NL80211_EXT_FEATURE_VLAN_OFFLOAD = 39,
    NL80211_EXT_FEATURE_AQL = 40,
    NUM_NL80211_EXT_FEATURES = 41,
    MAX_NL80211_EXT_FEATURES = 40
};
#line 5912 
enum nl80211_nan_function_type {
    NL80211_NAN_FUNC_PUBLISH = 0,
    NL80211_NAN_FUNC_SUBSCRIBE = 1,
    NL80211_NAN_FUNC_FOLLOW_UP = 2,
    __NL80211_NAN_FUNC_TYPE_AFTER_LAST = 3,
    NL80211_NAN_FUNC_MAX_TYPE = 2
};
#line 6001 
enum nl80211_preamble {
    NL80211_PREAMBLE_LEGACY = 0,
    NL80211_PREAMBLE_HT = 1,
    NL80211_PREAMBLE_VHT = 2,
    NL80211_PREAMBLE_DMG = 3
};
#line 811  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct survey_info {
   struct ieee80211_channel *channel ;
   u64 time ;
   u64 time_busy ;
   u64 time_ext_busy ;
   u64 time_rx ;
   u64 time_tx ;
   u64 time_scan ;
   u64 time_bss_rx ;
   u32 filled ;
   s8 noise ;
};
#line 940  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct __anonstruct_control_4893 {
   u32 legacy ;
   u8 ht_mcs[10U] ;
   u16 vht_mcs[8U] ;
   enum nl80211_txrate_gi gi ;
};
#line 940  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_bitrate_mask {
   struct __anonstruct_control_4893 control[4U] ;
};
#line 1314  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct rate_info {
   u8 flags ;
   u8 mcs ;
   u16 legacy ;
   u8 nss ;
   u8 bw ;
   u8 he_gi ;
   u8 he_dcm ;
   u8 he_ru_alloc ;
   u8 n_bonded_ch ;
};
#line 1351  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct sta_bss_parameters {
   u8 flags ;
   u8 dtim_period ;
   u16 beacon_interval ;
};
#line 1373  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_txq_stats {
   u32 filled ;
   u32 backlog_bytes ;
   u32 backlog_packets ;
   u32 flows ;
   u32 drops ;
   u32 ecn_marks ;
   u32 overlimit ;
   u32 overmemory ;
   u32 collisions ;
   u32 tx_bytes ;
   u32 tx_packets ;
   u32 max_flows ;
};
#line 1399  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_tid_stats {
   u32 filled ;
   u64 rx_msdu ;
   u64 tx_msdu ;
   u64 tx_msdu_retries ;
   u64 tx_msdu_failed ;
   struct cfg80211_txq_stats txq_stats ;
};
#line 1476  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct station_info {
   u64 filled ;
   u32 connected_time ;
   u32 inactive_time ;
   u64 assoc_at ;
   u64 rx_bytes ;
   u64 tx_bytes ;
   u16 llid ;
   u16 plid ;
   u8 plink_state ;
   s8 signal ;
   s8 signal_avg ;
   u8 chains ;
   s8 chain_signal[4U] ;
   s8 chain_signal_avg[4U] ;
   struct rate_info txrate ;
   struct rate_info rxrate ;
   u32 rx_packets ;
   u32 tx_packets ;
   u32 tx_retries ;
   u32 tx_failed ;
   u32 rx_dropped_misc ;
   struct sta_bss_parameters bss_param ;
   struct nl80211_sta_flag_update sta_flags ;
   int generation ;
   u8 *assoc_req_ies ;
   size_t assoc_req_ies_len ;
   u32 beacon_loss_count ;
   s64 t_offset ;
   enum nl80211_mesh_power_mode local_pm ;
   enum nl80211_mesh_power_mode peer_pm ;
   enum nl80211_mesh_power_mode nonpeer_pm ;
   u32 expected_throughput ;
   u64 tx_duration ;
   u64 rx_duration ;
   u64 rx_beacon ;
   u8 rx_beacon_signal_avg ;
   u8 connected_to_gate ;
   struct cfg80211_tid_stats *pertid ;
   s8 ack_signal ;
   s8 avg_ack_signal ;
   u16 airtime_weight ;
   u32 rx_mpdu_count ;
   u32 fcs_err_count ;
   u32 airtime_link_metric ;
};
#line 1899  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_scan_info {
   u64 scan_start_tsf ;
   u8 tsf_bssid[6U] ;
   bool aborted ;
};
#line 1934  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_scan_request {
   struct cfg80211_ssid *ssids ;
   int n_ssids ;
   u32 n_channels ;
   enum nl80211_bss_scan_width scan_width ;
   u8 *ie ;
   size_t ie_len ;
   u16 duration ;
   bool duration_mandatory ;
   u32 flags ;
   u32 rates[4U] ;
   struct wireless_dev *wdev ;
   u8 mac_addr[6U] ;
   u8 mac_addr_mask[6U] ;
   u8 bssid[6U] ;
   struct wiphy *wiphy ;
   unsigned long scan_start ;
   struct cfg80211_scan_info info ;
   bool notified ;
   bool no_cck ;
   struct ieee80211_channel *channels[0U] ;
};
#line 2821  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_gtk_rekey_data {
   u8 *kek ;
   u8 *kck ;
   u8 *replay_ctr ;
};
#line 2921  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_nan_conf {
   u8 master_pref ;
   u8 bands ;
};
#line 2944  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_nan_func_filter {
   u8 *filter ;
   u8 len ;
};
#line 2978  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_nan_func {
   enum nl80211_nan_function_type type ;
   u8 service_id[6U] ;
   u8 publish_type ;
   bool close_range ;
   bool publish_bcast ;
   bool subscribe_active ;
   u8 followup_id ;
   u8 followup_reqid ;
   struct mac_address followup_dest ;
   u32 ttl ;
   u8 *serv_spec_info ;
   u8 serv_spec_info_len ;
   bool srf_include ;
   u8 *srf_bf ;
   u8 srf_bf_len ;
   u8 srf_bf_idx ;
   struct mac_address *srf_macs ;
   int srf_num_macs ;
   struct cfg80211_nan_func_filter *rx_filters ;
   struct cfg80211_nan_func_filter *tx_filters ;
   u8 num_tx_filters ;
   u8 num_rx_filters ;
   u8 instance_id ;
   u64 cookie ;
};
#line 3072  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_ftm_responder_stats {
   u32 filled ;
   u32 success_num ;
   u32 partial_num ;
   u32 failed_num ;
   u32 asap_num ;
   u32 non_asap_num ;
   u64 total_duration_ms ;
   u32 unknown_triggers_num ;
   u32 reschedule_requests_num ;
   u32 out_of_window_triggers_num ;
};
#line 3210  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_pmsr_ftm_request_peer {
   enum nl80211_preamble preamble ;
   u16 burst_period ;
   u8 requested : 1 ;
   u8 asap : 1 ;
   u8 request_lci : 1 ;
   u8 request_civicloc : 1 ;
   u8 num_bursts_exp ;
   u8 burst_duration ;
   u8 ftms_per_burst ;
   u8 ftmr_retries ;
};
#line 3230  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_pmsr_request_peer {
   u8 addr[6U] ;
   struct cfg80211_chan_def chandef ;
   u8 report_ap_tsf : 1 ;
   struct cfg80211_pmsr_ftm_request_peer ftm ;
};
#line 3253  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_pmsr_request {
   u64 cookie ;
   void *drv_data ;
   u32 n_peers ;
   u32 nl_portid ;
   u32 timeout ;
   u8 mac_addr[6U] ;
   u8 mac_addr_mask[6U] ;
   struct list_head list ;
   struct cfg80211_pmsr_request_peer peers[] ;
};
#line 173  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_tx_queue_params {
   u16 txop ;
   u16 cw_min ;
   u16 cw_max ;
   u8 aifs ;
   bool acm ;
   bool uapsd ;
   bool mu_edca ;
   struct ieee80211_he_mu_edca_param_ac_rec mu_edca_param_rec ;
};
#line 184  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_low_level_stats {
   unsigned int dot11ACKFailureCount ;
   unsigned int dot11RTSFailureCount ;
   unsigned int dot11FCSErrorCount ;
   unsigned int dot11RTSSuccessCount ;
};
#line 235 
enum ieee80211_chanctx_switch_mode {
    CHANCTX_SWMODE_REASSIGN_VIF = 0,
    CHANCTX_SWMODE_SWAP_CONTEXTS = 1
};
#line 267  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_vif_chanctx_switch {
   struct ieee80211_vif *vif ;
   struct ieee80211_chanctx_conf *old_ctx ;
   struct ieee80211_chanctx_conf *new_ctx ;
};
#line 304 
enum ieee80211_event_type {
    RSSI_EVENT = 0,
    MLME_EVENT = 1,
    BAR_RX_EVENT = 2,
    BA_FRAME_TIMEOUT = 3
};
#line 311 
enum ieee80211_rssi_event_data {
    RSSI_EVENT_HIGH = 0,
    RSSI_EVENT_LOW = 1
};
#line 392  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_rssi_event {
   enum ieee80211_rssi_event_data data ;
};
#line 395 
enum ieee80211_mlme_event_data {
    AUTH_EVENT = 0,
    ASSOC_EVENT = 1,
    DEAUTH_RX_EVENT = 2,
    DEAUTH_TX_EVENT = 3
};
#line 402 
enum ieee80211_mlme_event_status {
    MLME_SUCCESS = 0,
    MLME_DENIED = 1,
    MLME_TIMEOUT = 2
};
#line 428  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_mlme_event {
   enum ieee80211_mlme_event_data data ;
   enum ieee80211_mlme_event_status status ;
   u16 reason ;
};
#line 440  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_ba_event {
   struct ieee80211_sta *sta ;
   u16 tid ;
   u16 ssn ;
};
#line 454  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
union __anonunion_u_5166 {
   struct ieee80211_rssi_event rssi ;
   struct ieee80211_mlme_event mlme ;
   struct ieee80211_ba_event ba ;
};
#line 454  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_event {
   enum ieee80211_event_type type ;
   union __anonunion_u_5166 u ;
};
#line 1106  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_scan_ies {
   u8 *ies[4U] ;
   size_t len[4U] ;
   u8 *common_ies ;
   size_t common_ie_len ;
};
#line 1119 
struct ieee80211_rx_status;
#line 1358  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_rx_status {
   u64 mactime ;
   u64 boottime_ns ;
   u32 device_timestamp ;
   u32 ampdu_reference ;
   u32 flag ;
   u16 freq ;
   u8 enc_flags ;
   u8 encoding : 2 ;
   u8 bw : 3 ;
   u8 he_ru : 3 ;
   u8 he_gi : 2 ;
   u8 he_dcm : 1 ;
   u8 rate_idx ;
   u8 nss ;
   u8 rx_flags ;
   u8 band ;
   u8 antenna ;
   s8 signal ;
   u8 chains ;
   s8 chain_signal[4U] ;
   u8 ampdu_delimiter_crc ;
   u8 zero_length_psdu_type ;
};
#line 1556  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_channel_switch {
   u64 timestamp ;
   u32 device_timestamp ;
   bool block_tx ;
   struct cfg80211_chan_def chandef ;
   u8 count ;
   u32 delay ;
};
#line 1803  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct __anonstruct_tkip_5175 {
   u32 iv32 ;
   u16 iv16 ;
};
#line 1803  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct __anonstruct_ccmp_5176 {
   u8 pn[6U] ;
};
#line 1803  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct __anonstruct_aes_cmac_5177 {
   u8 pn[6U] ;
};
#line 1803  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct __anonstruct_aes_gmac_5178 {
   u8 pn[6U] ;
};
#line 1803  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct __anonstruct_gcmp_5179 {
   u8 pn[6U] ;
};
#line 1803  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct __anonstruct_hw_5180 {
   u8 seq[16U] ;
   u8 seq_len ;
};
#line 1803  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
union __anonunion_5174 {
   struct __anonstruct_tkip_5175 tkip ;
   struct __anonstruct_ccmp_5176 ccmp ;
   struct __anonstruct_aes_cmac_5177 aes_cmac ;
   struct __anonstruct_aes_gmac_5178 aes_gmac ;
   struct __anonstruct_gcmp_5179 gcmp ;
   struct __anonstruct_hw_5180 hw ;
};
#line 1803  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_key_seq {
   union __anonunion_5174 __anonCompField_ieee80211_key_seq_196 ;
};
#line 1857 
enum set_key_cmd {
    SET_KEY = 0,
    DISABLE_KEY = 1
};
#line 1862 
enum ieee80211_sta_state {
    IEEE80211_STA_NOTEXIST = 0,
    IEEE80211_STA_NONE = 1,
    IEEE80211_STA_AUTH = 2,
    IEEE80211_STA_ASSOC = 3,
    IEEE80211_STA_AUTHORIZED = 4
};
#line 2037 
enum sta_notify_cmd {
    STA_NOTIFY_SLEEP = 0,
    STA_NOTIFY_AWAKE = 1
};
#line 2057  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_tx_control {
   struct ieee80211_sta *sta ;
};
#line 2083 
enum ieee80211_hw_flags {
    IEEE80211_HW_HAS_RATE_CONTROL = 0,
    IEEE80211_HW_RX_INCLUDES_FCS = 1,
    IEEE80211_HW_HOST_BROADCAST_PS_BUFFERING = 2,
    IEEE80211_HW_SIGNAL_UNSPEC = 3,
    IEEE80211_HW_SIGNAL_DBM = 4,
    IEEE80211_HW_NEED_DTIM_BEFORE_ASSOC = 5,
    IEEE80211_HW_SPECTRUM_MGMT = 6,
    IEEE80211_HW_AMPDU_AGGREGATION = 7,
    IEEE80211_HW_SUPPORTS_PS = 8,
    IEEE80211_HW_PS_NULLFUNC_STACK = 9,
    IEEE80211_HW_SUPPORTS_DYNAMIC_PS = 10,
    IEEE80211_HW_MFP_CAPABLE = 11,
    IEEE80211_HW_WANT_MONITOR_VIF = 12,
    IEEE80211_HW_NO_AUTO_VIF = 13,
    IEEE80211_HW_SW_CRYPTO_CONTROL = 14,
    IEEE80211_HW_SUPPORT_FAST_XMIT = 15,
    IEEE80211_HW_REPORTS_TX_ACK_STATUS = 16,
    IEEE80211_HW_CONNECTION_MONITOR = 17,
    IEEE80211_HW_QUEUE_CONTROL = 18,
    IEEE80211_HW_SUPPORTS_PER_STA_GTK = 19,
    IEEE80211_HW_AP_LINK_PS = 20,
    IEEE80211_HW_TX_AMPDU_SETUP_IN_HW = 21,
    IEEE80211_HW_SUPPORTS_RC_TABLE = 22,
    IEEE80211_HW_P2P_DEV_ADDR_FOR_INTF = 23,
    IEEE80211_HW_TIMING_BEACON_ONLY = 24,
    IEEE80211_HW_SUPPORTS_HT_CCK_RATES = 25,
    IEEE80211_HW_CHANCTX_STA_CSA = 26,
    IEEE80211_HW_SUPPORTS_CLONED_SKBS = 27,
    IEEE80211_HW_SINGLE_SCAN_ON_ALL_BANDS = 28,
    IEEE80211_HW_TDLS_WIDER_BW = 29,
    IEEE80211_HW_SUPPORTS_AMSDU_IN_AMPDU = 30,
    IEEE80211_HW_BEACON_TX_STATUS = 31,
    IEEE80211_HW_NEEDS_UNIQUE_STA_ADDR = 32,
    IEEE80211_HW_SUPPORTS_REORDERING_BUFFER = 33,
    IEEE80211_HW_USES_RSS = 34,
    IEEE80211_HW_TX_AMSDU = 35,
    IEEE80211_HW_TX_FRAG_LIST = 36,
    IEEE80211_HW_REPORTS_LOW_ACK = 37,
    IEEE80211_HW_SUPPORTS_TX_FRAG = 38,
    IEEE80211_HW_SUPPORTS_TDLS_BUFFER_STA = 39,
    IEEE80211_HW_DEAUTH_NEED_MGD_TX_PREP = 40,
    IEEE80211_HW_DOESNT_SUPPORT_QOS_NDP = 41,
    IEEE80211_HW_BUFF_MMPDU_TXQ = 42,
    IEEE80211_HW_SUPPORTS_VHT_EXT_NSS_BW = 43,
    IEEE80211_HW_STA_MMPDU_TXQ = 44,
    IEEE80211_HW_TX_STATUS_NO_AMPDU_LEN = 45,
    IEEE80211_HW_SUPPORTS_MULTI_BSSID = 46,
    IEEE80211_HW_SUPPORTS_ONLY_HE_MULTI_BSSID = 47,
    IEEE80211_HW_AMPDU_KEYBORDER_SUPPORT = 48,
    NUM_IEEE80211_HW_FLAGS = 49
};
#line 2546  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_scan_request {
   struct ieee80211_scan_ies ies ;
   struct cfg80211_scan_request req ;
};
#line 2566  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_tdls_ch_sw_params {
   struct ieee80211_sta *sta ;
   struct cfg80211_chan_def *chandef ;
   u8 action_code ;
   u32 status ;
   u32 timestamp ;
   u16 switch_time ;
   u16 switch_timeout ;
   struct sk_buff *tmpl_skb ;
   u32 ch_sw_tm_ie ;
};
#line 2662 
enum ieee80211_ampdu_mlme_action {
    IEEE80211_AMPDU_RX_START = 0,
    IEEE80211_AMPDU_RX_STOP = 1,
    IEEE80211_AMPDU_TX_START = 2,
    IEEE80211_AMPDU_TX_STOP_CONT = 3,
    IEEE80211_AMPDU_TX_STOP_FLUSH = 4,
    IEEE80211_AMPDU_TX_STOP_FLUSH_CONT = 5,
    IEEE80211_AMPDU_TX_OPERATIONAL = 6
};
#line 3161  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_ampdu_params {
   enum ieee80211_ampdu_mlme_action action ;
   struct ieee80211_sta *sta ;
   u16 tid ;
   u16 ssn ;
   u16 buf_size ;
   bool amsdu ;
   u16 timeout ;
};
#line 3170 
enum ieee80211_frame_release_type {
    IEEE80211_FRAME_RELEASE_PSPOLL = 0,
    IEEE80211_FRAME_RELEASE_UAPSD = 1
};
#line 3182 
enum ieee80211_roc_type {
    IEEE80211_ROC_TYPE_NORMAL = 0,
    IEEE80211_ROC_TYPE_MGMT_TX = 1
};
#line 3187 
enum ieee80211_reconfig_type {
    IEEE80211_RECONFIG_TYPE_RESTART = 0,
    IEEE80211_RECONFIG_TYPE_SUSPEND = 1
};
#line 3778  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_ops {
   void (*tx)(struct ieee80211_hw *, struct ieee80211_tx_control *, struct sk_buff *) ;
   int (*start)(struct ieee80211_hw *) ;
   void (*stop)(struct ieee80211_hw *) ;
   int (*suspend)(struct ieee80211_hw *, struct cfg80211_wowlan *) ;
   int (*resume)(struct ieee80211_hw *) ;
   void (*set_wakeup)(struct ieee80211_hw *, bool ) ;
   int (*add_interface)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   int (*change_interface)(struct ieee80211_hw *, struct ieee80211_vif *, enum nl80211_iftype , bool ) ;
   void (*remove_interface)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   int (*config)(struct ieee80211_hw *, u32 ) ;
   void (*bss_info_changed)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_bss_conf *, u32 ) ;
   int (*start_ap)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   void (*stop_ap)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   u64 (*prepare_multicast)(struct ieee80211_hw *, struct netdev_hw_addr_list *) ;
   void (*configure_filter)(struct ieee80211_hw *, unsigned int , unsigned int *, u64 ) ;
   void (*config_iface_filter)(struct ieee80211_hw *, struct ieee80211_vif *, unsigned int , unsigned int ) ;
   int (*set_tim)(struct ieee80211_hw *, struct ieee80211_sta *, bool ) ;
   int (*set_key)(struct ieee80211_hw *, enum set_key_cmd , struct ieee80211_vif *, struct ieee80211_sta *, struct ieee80211_key_conf *) ;
   void (*update_tkip_key)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_key_conf *, struct ieee80211_sta *, u32 , u16 *) ;
   void (*set_rekey_data)(struct ieee80211_hw *, struct ieee80211_vif *, struct cfg80211_gtk_rekey_data *) ;
   void (*set_default_unicast_key)(struct ieee80211_hw *, struct ieee80211_vif *, int ) ;
   int (*hw_scan)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_scan_request *) ;
   void (*cancel_hw_scan)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   int (*sched_scan_start)(struct ieee80211_hw *, struct ieee80211_vif *, struct cfg80211_sched_scan_request *, struct ieee80211_scan_ies *) ;
   int (*sched_scan_stop)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   void (*sw_scan_start)(struct ieee80211_hw *, struct ieee80211_vif *, u8 *) ;
   void (*sw_scan_complete)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   int (*get_stats)(struct ieee80211_hw *, struct ieee80211_low_level_stats *) ;
   void (*get_key_seq)(struct ieee80211_hw *, struct ieee80211_key_conf *, struct ieee80211_key_seq *) ;
   int (*set_frag_threshold)(struct ieee80211_hw *, u32 ) ;
   int (*set_rts_threshold)(struct ieee80211_hw *, u32 ) ;
   int (*sta_add)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *) ;
   int (*sta_remove)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *) ;
   void (*sta_add_debugfs)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *, struct dentry *) ;
   void (*sta_notify)(struct ieee80211_hw *, struct ieee80211_vif *, enum sta_notify_cmd , struct ieee80211_sta *) ;
   int (*sta_set_txpwr)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *) ;
   int (*sta_state)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *, enum ieee80211_sta_state , enum ieee80211_sta_state ) ;
   void (*sta_pre_rcu_remove)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *) ;
   void (*sta_rc_update)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *, u32 ) ;
   void (*sta_rate_tbl_update)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *) ;
   void (*sta_statistics)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *, struct station_info *) ;
   int (*conf_tx)(struct ieee80211_hw *, struct ieee80211_vif *, u16 , struct ieee80211_tx_queue_params *) ;
   u64 (*get_tsf)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   void (*set_tsf)(struct ieee80211_hw *, struct ieee80211_vif *, u64 ) ;
   void (*offset_tsf)(struct ieee80211_hw *, struct ieee80211_vif *, s64 ) ;
   void (*reset_tsf)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   int (*tx_last_beacon)(struct ieee80211_hw *) ;
   int (*ampdu_action)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_ampdu_params *) ;
   int (*get_survey)(struct ieee80211_hw *, int , struct survey_info *) ;
   void (*rfkill_poll)(struct ieee80211_hw *) ;
   void (*set_coverage_class)(struct ieee80211_hw *, s16 ) ;
   int (*testmode_cmd)(struct ieee80211_hw *, struct ieee80211_vif *, void *, int ) ;
   int (*testmode_dump)(struct ieee80211_hw *, struct sk_buff *, struct netlink_callback *, void *, int ) ;
   void (*flush)(struct ieee80211_hw *, struct ieee80211_vif *, u32 , bool ) ;
   void (*channel_switch)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_channel_switch *) ;
   int (*set_antenna)(struct ieee80211_hw *, u32 , u32 ) ;
   int (*get_antenna)(struct ieee80211_hw *, u32 *, u32 *) ;
   int (*remain_on_channel)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_channel *, int , enum ieee80211_roc_type ) ;
   int (*cancel_remain_on_channel)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   int (*set_ringparam)(struct ieee80211_hw *, u32 , u32 ) ;
   void (*get_ringparam)(struct ieee80211_hw *, u32 *, u32 *, u32 *, u32 *) ;
   bool (*tx_frames_pending)(struct ieee80211_hw *) ;
   int (*set_bitrate_mask)(struct ieee80211_hw *, struct ieee80211_vif *, struct cfg80211_bitrate_mask *) ;
   void (*event_callback)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_event *) ;
   void (*allow_buffered_frames)(struct ieee80211_hw *, struct ieee80211_sta *, u16 , int , enum ieee80211_frame_release_type , bool ) ;
   void (*release_buffered_frames)(struct ieee80211_hw *, struct ieee80211_sta *, u16 , int , enum ieee80211_frame_release_type , bool ) ;
   int (*get_et_sset_count)(struct ieee80211_hw *, struct ieee80211_vif *, int ) ;
   void (*get_et_stats)(struct ieee80211_hw *, struct ieee80211_vif *, struct ethtool_stats *, u64 *) ;
   void (*get_et_strings)(struct ieee80211_hw *, struct ieee80211_vif *, u32 , u8 *) ;
   void (*mgd_prepare_tx)(struct ieee80211_hw *, struct ieee80211_vif *, u16 ) ;
   void (*mgd_protect_tdls_discover)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   int (*add_chanctx)(struct ieee80211_hw *, struct ieee80211_chanctx_conf *) ;
   void (*remove_chanctx)(struct ieee80211_hw *, struct ieee80211_chanctx_conf *) ;
   void (*change_chanctx)(struct ieee80211_hw *, struct ieee80211_chanctx_conf *, u32 ) ;
   int (*assign_vif_chanctx)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_chanctx_conf *) ;
   void (*unassign_vif_chanctx)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_chanctx_conf *) ;
   int (*switch_vif_chanctx)(struct ieee80211_hw *, struct ieee80211_vif_chanctx_switch *, int , enum ieee80211_chanctx_switch_mode ) ;
   void (*reconfig_complete)(struct ieee80211_hw *, enum ieee80211_reconfig_type ) ;
   void (*ipv6_addr_change)(struct ieee80211_hw *, struct ieee80211_vif *, struct inet6_dev *) ;
   void (*channel_switch_beacon)(struct ieee80211_hw *, struct ieee80211_vif *, struct cfg80211_chan_def *) ;
   int (*pre_channel_switch)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_channel_switch *) ;
   int (*post_channel_switch)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   void (*abort_channel_switch)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   void (*channel_switch_rx_beacon)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_channel_switch *) ;
   int (*join_ibss)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   void (*leave_ibss)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   u32 (*get_expected_throughput)(struct ieee80211_hw *, struct ieee80211_sta *) ;
   int (*get_txpower)(struct ieee80211_hw *, struct ieee80211_vif *, int *) ;
   int (*tdls_channel_switch)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *, u8 , struct cfg80211_chan_def *, struct sk_buff *, u32 ) ;
   void (*tdls_cancel_channel_switch)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *) ;
   void (*tdls_recv_channel_switch)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_tdls_ch_sw_params *) ;
   void (*wake_tx_queue)(struct ieee80211_hw *, struct ieee80211_txq *) ;
   void (*sync_rx_queues)(struct ieee80211_hw *) ;
   int (*start_nan)(struct ieee80211_hw *, struct ieee80211_vif *, struct cfg80211_nan_conf *) ;
   int (*stop_nan)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   int (*nan_change_conf)(struct ieee80211_hw *, struct ieee80211_vif *, struct cfg80211_nan_conf *, u32 ) ;
   int (*add_nan_func)(struct ieee80211_hw *, struct ieee80211_vif *, struct cfg80211_nan_func *) ;
   void (*del_nan_func)(struct ieee80211_hw *, struct ieee80211_vif *, u8 ) ;
   bool (*can_aggregate_in_amsdu)(struct ieee80211_hw *, struct sk_buff *, struct sk_buff *) ;
   int (*get_ftm_responder_stats)(struct ieee80211_hw *, struct ieee80211_vif *, struct cfg80211_ftm_responder_stats *) ;
   int (*start_pmsr)(struct ieee80211_hw *, struct ieee80211_vif *, struct cfg80211_pmsr_request *) ;
   void (*abort_pmsr)(struct ieee80211_hw *, struct ieee80211_vif *, struct cfg80211_pmsr_request *) ;
};
#line 149  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.h"
struct zd_ioreq32 {
   zd_addr_t addr ;
   u32 value ;
};
#line 916  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.h"
enum led_status {
    ZD_LED_OFF = 0,
    ZD_LED_SCANNING = 1,
    ZD_LED_ASSOCIATED = 2
};
#line 932 
struct rx_status;
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_mac.h"
struct zd_ctrlset {
   u8 modulation ;
   __le16 tx_length ;
   u8 control ;
   __le16 packet_length ;
   __le16 current_length ;
   u8 service ;
   __le16 next_frame_length ;
} __attribute__((__packed__));
#line 100  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_mac.h"
struct rx_status {
   u8 signal_quality_cck ;
   u8 signal_strength ;
   u8 signal_quality_ofdm ;
   u8 decryption_type ;
   u8 frame_status ;
} __attribute__((__packed__));
#line 130  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_mac.h"
struct tx_retry_rate {
   int count ;
   int rate[10U] ;
};
#line 135  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_mac.h"
struct tx_status {
   u8 type ;
   u8 id ;
   u8 rate ;
   u8 pad ;
   u8 mac[6U] ;
   u8 retry ;
   u8 failure ;
} __attribute__((__packed__));
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_mac.c"
struct zd_reg_alpha2_map {
   u32 reg ;
   char alpha2[2U] ;
};
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 224  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_mac.h"
struct ofdm_plcp_header {
   u8 prefix[3U] ;
   __le16 service ;
} __attribute__((__packed__));
#line 249  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_mac.h"
struct cck_plcp_header {
   u8 signal ;
   u8 service ;
   __le16 length ;
   __le16 crc16 ;
} __attribute__((__packed__));
#line 832  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c"
struct aw_pt_bi {
   u32 atim_wnd_period ;
   u32 pre_tbtt ;
   u32 beacon_interval ;
};
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 197 
enum hrtimer_restart;
#line 197 
enum hrtimer_restart;
#line 197 
enum hrtimer_restart;
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
struct device_private {
   void *driver_data ;
};
#line 164  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef unsigned long irq_hw_number_t;
#line 303  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ioport.h"
struct irq_data;
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 244  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/idr.h"
struct ida {
   struct xarray xa ;
};
#line 439  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/property.h"
typedef u32 phandle;
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/of.h"
struct property {
   char *name ;
   int length ;
   void *value ;
   struct property *next ;
   unsigned long _flags ;
   struct bin_attribute attr ;
};
#line 51  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/of.h"
struct device_node {
   char *name ;
   phandle phandle ;
   char *full_name ;
   struct fwnode_handle fwnode ;
   struct property *properties ;
   struct property *deadprops ;
   struct device_node *parent ;
   struct device_node *child ;
   struct device_node *sibling ;
   struct kobject kobj ;
   unsigned long _flags ;
   void *data ;
};
#line 63  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/irqdomain.h"
struct irq_fwspec {
   struct fwnode_handle *fwnode ;
   int param_count ;
   u32 param[16U] ;
};
#line 68 
enum irq_domain_bus_token {
    DOMAIN_BUS_ANY = 0,
    DOMAIN_BUS_WIRED = 1,
    DOMAIN_BUS_GENERIC_MSI = 2,
    DOMAIN_BUS_PCI_MSI = 3,
    DOMAIN_BUS_PLATFORM_MSI = 4,
    DOMAIN_BUS_NEXUS = 5,
    DOMAIN_BUS_IPI = 6,
    DOMAIN_BUS_FSL_MC_MSI = 7,
    DOMAIN_BUS_TI_SCI_INTA_MSI = 8,
    DOMAIN_BUS_WAKEUP = 9
};
#line 104  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/irqdomain.h"
struct irq_domain_ops {
   int (*match)(struct irq_domain *, struct device_node *, enum irq_domain_bus_token ) ;
   int (*select)(struct irq_domain *, struct irq_fwspec *, enum irq_domain_bus_token ) ;
   int (*map)(struct irq_domain *, unsigned int , irq_hw_number_t ) ;
   void (*unmap)(struct irq_domain *, unsigned int ) ;
   int (*xlate)(struct irq_domain *, struct device_node *, u32 *, unsigned int , unsigned long *, unsigned int *) ;
   int (*alloc)(struct irq_domain *, unsigned int , unsigned int , void *) ;
   void (*free)(struct irq_domain *, unsigned int , unsigned int ) ;
   int (*activate)(struct irq_domain *, struct irq_data *, bool ) ;
   void (*deactivate)(struct irq_domain *, struct irq_data *) ;
   int (*translate)(struct irq_domain *, struct irq_fwspec *, unsigned long *, unsigned int *) ;
   void (*debug_show)(struct seq_file *, struct irq_domain *, struct irq_data *, int ) ;
};
#line 132 
struct irq_domain_chip_generic;
#line 161  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/irqdomain.h"
struct irq_domain {
   struct list_head link ;
   char *name ;
   struct irq_domain_ops *ops ;
   void *host_data ;
   unsigned int flags ;
   unsigned int mapcount ;
   struct fwnode_handle *fwnode ;
   enum irq_domain_bus_token bus_token ;
   struct irq_domain_chip_generic *gc ;
   struct irq_domain *parent ;
   struct dentry *debugfs_file ;
   irq_hw_number_t hwirq_max ;
   unsigned int revmap_direct_max_irq ;
   unsigned int revmap_size ;
   struct xarray revmap_tree ;
   struct mutex revmap_tree_mutex ;
   unsigned int linear_revmap[] ;
};
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rtmutex.h"
struct rt_mutex {
   raw_spinlock_t wait_lock ;
   struct rb_root_cached waiters ;
   struct task_struct *owner ;
   int save_state ;
   char *name ;
   char *file ;
   int line ;
   void *magic ;
   struct lockdep_map dep_map ;
};
#line 69  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/i2c.h"
struct i2c_msg {
   __u16 addr ;
   __u16 flags ;
   __u16 len ;
   __u8 *buf ;
};
#line 135  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/i2c.h"
union i2c_smbus_data {
   __u8 byte ;
   __u16 word ;
   __u8 block[34U] ;
};
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/i2c.h"
struct i2c_algorithm;
#line 28 
struct i2c_adapter;
#line 29 
struct i2c_client;
#line 33 
enum i2c_slave_event;
#line 33 
enum i2c_slave_event;
#line 314  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/i2c.h"
struct i2c_client {
   unsigned short flags ;
   unsigned short addr ;
   char name[20U] ;
   struct i2c_adapter *adapter ;
   struct device dev ;
   int init_irq ;
   int irq ;
   struct list_head detected ;
   int (*slave_cb)(struct i2c_client *, enum i2c_slave_event , u8 *) ;
};
#line 360 
enum i2c_slave_event {
    I2C_SLAVE_READ_REQUESTED = 0,
    I2C_SLAVE_WRITE_REQUESTED = 1,
    I2C_SLAVE_READ_PROCESSED = 2,
    I2C_SLAVE_WRITE_RECEIVED = 3,
    I2C_SLAVE_STOP = 4
};
#line 527  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/i2c.h"
struct i2c_algorithm {
   int (*master_xfer)(struct i2c_adapter *, struct i2c_msg *, int ) ;
   int (*master_xfer_atomic)(struct i2c_adapter *, struct i2c_msg *, int ) ;
   int (*smbus_xfer)(struct i2c_adapter *, u16 , unsigned short , char , u8 , int , union i2c_smbus_data *) ;
   int (*smbus_xfer_atomic)(struct i2c_adapter *, u16 , unsigned short , char , u8 , int , union i2c_smbus_data *) ;
   u32 (*functionality)(struct i2c_adapter *) ;
   int (*reg_slave)(struct i2c_client *) ;
   int (*unreg_slave)(struct i2c_client *) ;
};
#line 565  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/i2c.h"
struct i2c_lock_operations {
   void (*lock_bus)(struct i2c_adapter *, unsigned int ) ;
   int (*trylock_bus)(struct i2c_adapter *, unsigned int ) ;
   void (*unlock_bus)(struct i2c_adapter *, unsigned int ) ;
};
#line 618 
struct gpio_desc;
#line 618  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/i2c.h"
struct i2c_bus_recovery_info {
   int (*recover_bus)(struct i2c_adapter *) ;
   int (*get_scl)(struct i2c_adapter *) ;
   void (*set_scl)(struct i2c_adapter *, int ) ;
   int (*get_sda)(struct i2c_adapter *) ;
   void (*set_sda)(struct i2c_adapter *, int ) ;
   int (*get_bus_free)(struct i2c_adapter *) ;
   void (*prepare_recovery)(struct i2c_adapter *) ;
   void (*unprepare_recovery)(struct i2c_adapter *) ;
   struct gpio_desc *scl_gpiod ;
   struct gpio_desc *sda_gpiod ;
};
#line 661  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/i2c.h"
struct i2c_adapter_quirks {
   u64 flags ;
   int max_num_msgs ;
   u16 max_write_len ;
   u16 max_read_len ;
   u16 max_comb_1st_msg_len ;
   u16 max_comb_2nd_msg_len ;
};
#line 692  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/i2c.h"
struct i2c_adapter {
   struct module *owner ;
   unsigned int class ;
   struct i2c_algorithm *algo ;
   void *algo_data ;
   struct i2c_lock_operations *lock_ops ;
   struct rt_mutex bus_lock ;
   struct rt_mutex mux_lock ;
   int timeout ;
   int retries ;
   struct device dev ;
   unsigned long locked_flags ;
   int nr ;
   char name[48U] ;
   struct completion dev_released ;
   struct mutex userspace_clients_lock ;
   struct list_head userspace_clients ;
   struct i2c_bus_recovery_info *bus_recovery_info ;
   struct i2c_adapter_quirks *quirks ;
   struct irq_domain *host_notify_domain ;
};
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cdev.h"
struct cdev {
   struct kobject kobj ;
   struct module *owner ;
   struct file_operations *ops ;
   struct list_head list ;
   dev_t dev ;
   unsigned int count ;
} __attribute__((__designated_init__));
#line 87  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/v4l2-common.h"
struct v4l2_edid {
   __u32 pad ;
   __u32 start_block ;
   __u32 blocks ;
   __u32 reserved[5U] ;
   __u8 *edid ;
};
#line 754 
enum v4l2_priority {
    V4L2_PRIORITY_UNSET = 0,
    V4L2_PRIORITY_BACKGROUND = 1,
    V4L2_PRIORITY_INTERACTIVE = 2,
    V4L2_PRIORITY_RECORD = 3,
    V4L2_PRIORITY_DEFAULT = 2
};
#line 413  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_rect {
   __s32 left ;
   __s32 top ;
   __u32 width ;
   __u32 height ;
};
#line 420  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_fract {
   __u32 numerator ;
   __u32 denominator ;
};
#line 1212  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
typedef __u64 v4l2_std_id;
#line 1394  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_bt_timings {
   __u32 width ;
   __u32 height ;
   __u32 interlaced ;
   __u32 polarities ;
   __u64 pixelclock ;
   __u32 hfrontporch ;
   __u32 hsync ;
   __u32 hbackporch ;
   __u32 vfrontporch ;
   __u32 vsync ;
   __u32 vbackporch ;
   __u32 il_vfrontporch ;
   __u32 il_vsync ;
   __u32 il_vbackporch ;
   __u32 standards ;
   __u32 flags ;
   struct v4l2_fract picture_aspect ;
   __u8 cea861_vic ;
   __u8 hdmi_vic ;
   __u8 reserved[46U] ;
} __attribute__((__packed__));
#line 1517  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
union __anonunion_10065 {
   struct v4l2_bt_timings bt ;
   __u32 reserved[32U] ;
};
#line 1517  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_dv_timings {
   __u32 type ;
   union __anonunion_10065 __anonCompField_v4l2_dv_timings_77 ;
} __attribute__((__packed__));
#line 1536  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_enum_dv_timings {
   __u32 index ;
   __u32 pad ;
   __u32 reserved[2U] ;
   struct v4l2_dv_timings timings ;
};
#line 1554  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_bt_timings_cap {
   __u32 min_width ;
   __u32 max_width ;
   __u32 min_height ;
   __u32 max_height ;
   __u64 min_pixelclock ;
   __u64 max_pixelclock ;
   __u32 standards ;
   __u32 capabilities ;
   __u32 reserved[16U] ;
} __attribute__((__packed__));
#line 1581  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
union __anonunion_10066 {
   struct v4l2_bt_timings_cap bt ;
   __u32 raw_data[32U] ;
};
#line 1581  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_dv_timings_cap {
   __u32 type ;
   __u32 pad ;
   __u32 reserved[2U] ;
   union __anonunion_10066 __anonCompField_v4l2_dv_timings_cap_78 ;
};
#line 1803  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_tuner {
   __u32 index ;
   __u8 name[32U] ;
   __u32 type ;
   __u32 capability ;
   __u32 rangelow ;
   __u32 rangehigh ;
   __u32 rxsubchans ;
   __u32 audmode ;
   __s32 signal ;
   __s32 afc ;
   __u32 reserved[4U] ;
};
#line 1817  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_modulator {
   __u32 index ;
   __u8 name[32U] ;
   __u32 capability ;
   __u32 rangelow ;
   __u32 rangehigh ;
   __u32 txsubchans ;
   __u32 type ;
   __u32 reserved[3U] ;
};
#line 1860  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_frequency {
   __u32 tuner ;
   __u32 type ;
   __u32 frequency ;
   __u32 reserved[8U] ;
};
#line 1871  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_frequency_band {
   __u32 tuner ;
   __u32 type ;
   __u32 index ;
   __u32 capability ;
   __u32 rangelow ;
   __u32 rangehigh ;
   __u32 modulation ;
   __u32 reserved[9U] ;
};
#line 2043  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_vbi_format {
   __u32 sampling_rate ;
   __u32 offset ;
   __u32 samples_per_line ;
   __u32 sample_format ;
   __s32 start[2U] ;
   __u32 count[2U] ;
   __u32 flags ;
   __u32 reserved[2U] ;
};
#line 2071  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_sliced_vbi_format {
   __u16 service_set ;
   __u16 service_lines[2U][24U] ;
   __u32 io_size ;
   __u32 reserved[2U] ;
};
#line 2095  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_sliced_vbi_cap {
   __u16 service_set ;
   __u16 service_lines[2U][24U] ;
   __u32 type ;
   __u32 reserved[3U] ;
};
#line 2106  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_sliced_vbi_data {
   __u32 id ;
   __u32 field ;
   __u32 line ;
   __u32 reserved ;
   __u8 data[48U] ;
};
#line 2350  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_event_subscription {
   __u32 type ;
   __u32 id ;
   __u32 flags ;
   __u32 reserved[5U] ;
};
#line 2375  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
union __anonunion_10082 {
   __u32 addr ;
   char name[32U] ;
};
#line 2375  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_dbg_match {
   __u32 type ;
   union __anonunion_10082 __anonCompField_v4l2_dbg_match_87 ;
} __attribute__((__packed__));
#line 2383  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_dbg_register {
   struct v4l2_dbg_match match ;
   __u32 size ;
   __u64 reg ;
   __u64 val ;
} __attribute__((__packed__));
#line 57  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_device;
#line 57  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_gobj {
   struct media_device *mdev ;
   u32 id ;
   struct list_head list ;
};
#line 72  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_entity_enum {
   unsigned long *bmap ;
   int idx_max ;
};
#line 88 
struct media_entity;
#line 88  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct __anonstruct_stack_10086 {
   struct media_entity *entity ;
   struct list_head *link ;
};
#line 88  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_graph {
   struct __anonstruct_stack_10086 stack[16U] ;
   struct media_entity_enum ent_enum ;
   int top ;
};
#line 104  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_pipeline {
   int streaming_count ;
   struct media_graph graph ;
};
#line 132 
struct media_pad;
#line 132 
struct media_interface;
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
union __anonunion_10087 {
   struct media_gobj *gobj0 ;
   struct media_pad *source ;
   struct media_interface *intf ;
};
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
union __anonunion_10088 {
   struct media_gobj *gobj1 ;
   struct media_pad *sink ;
   struct media_entity *entity ;
};
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_link {
   struct media_gobj graph_obj ;
   struct list_head list ;
   union __anonunion_10087 __anonCompField_media_link_90 ;
   union __anonunion_10088 __anonCompField_media_link_91 ;
   struct media_link *reverse ;
   unsigned long flags ;
   bool is_backlink ;
};
#line 149 
enum media_pad_signal_type {
    PAD_SIGNAL_DEFAULT = 0,
    PAD_SIGNAL_ANALOG = 1,
    PAD_SIGNAL_DV = 2,
    PAD_SIGNAL_AUDIO = 3
};
#line 189  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_pad {
   struct media_gobj graph_obj ;
   struct media_entity *entity ;
   u16 index ;
   enum media_pad_signal_type sig_type ;
   unsigned long flags ;
};
#line 214  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_entity_operations {
   int (*get_fwnode_pad)(struct fwnode_endpoint *) ;
   int (*link_setup)(struct media_entity *, struct media_pad *, struct media_pad *, u32 ) ;
   int (*link_validate)(struct media_link *) ;
};
#line 221 
enum media_entity_type {
    MEDIA_ENTITY_TYPE_BASE = 0,
    MEDIA_ENTITY_TYPE_VIDEO_DEVICE = 1,
    MEDIA_ENTITY_TYPE_V4L2_SUBDEV = 2
};
#line 289  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct __anonstruct_dev_10090 {
   u32 major ;
   u32 minor ;
};
#line 289  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
union __anonunion_info_10089 {
   struct __anonstruct_dev_10090 dev ;
};
#line 289  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_entity {
   struct media_gobj graph_obj ;
   char *name ;
   enum media_entity_type obj_type ;
   u32 function ;
   unsigned long flags ;
   u16 num_pads ;
   u16 num_links ;
   u16 num_backlinks ;
   int internal_idx ;
   struct media_pad *pads ;
   struct list_head links ;
   struct media_entity_operations *ops ;
   int stream_count ;
   int use_count ;
   struct media_pipeline *pipe ;
   union __anonunion_info_10089 info ;
};
#line 335  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_interface {
   struct media_gobj graph_obj ;
   struct list_head links ;
   u32 type ;
   u32 flags ;
};
#line 349  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_intf_devnode {
   struct media_interface intf ;
   u32 major ;
   u32 minor ;
};
#line 1087 
enum vfl_devnode_type {
    VFL_TYPE_GRABBER = 0,
    VFL_TYPE_VBI = 1,
    VFL_TYPE_RADIO = 2,
    VFL_TYPE_SUBDEV = 3,
    VFL_TYPE_SDR = 4,
    VFL_TYPE_TOUCH = 5,
    VFL_TYPE_MAX = 6
};
#line 1097 
enum vfl_devnode_direction {
    VFL_DIR_RX = 0,
    VFL_DIR_TX = 1,
    VFL_DIR_M2M = 2
};
#line 1104 
struct video_device;
#line 1105 
struct v4l2_device;
#line 1106 
struct v4l2_ctrl_handler;
#line 104  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-dev.h"
struct v4l2_prio_state {
   atomic_t prios[4U] ;
};
#line 193  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-dev.h"
struct v4l2_file_operations {
   struct module *owner ;
   ssize_t (*read)(struct file *, char *, size_t , loff_t *) ;
   ssize_t (*write)(struct file *, char *, size_t , loff_t *) ;
   __poll_t (*poll)(struct file *, struct poll_table_struct *) ;
   long (*unlocked_ioctl)(struct file *, unsigned int , unsigned long ) ;
   long (*compat_ioctl32)(struct file *, unsigned int , unsigned long ) ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   int (*mmap)(struct file *, struct vm_area_struct *) ;
   int (*open)(struct file *) ;
   int (*release)(struct file *) ;
};
#line 256 
struct vb2_queue;
#line 256 
struct v4l2_ioctl_ops;
#line 256  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-dev.h"
struct video_device {
   struct media_entity entity ;
   struct media_intf_devnode *intf_devnode ;
   struct media_pipeline pipe ;
   struct v4l2_file_operations *fops ;
   u32 device_caps ;
   struct device dev ;
   struct cdev *cdev ;
   struct v4l2_device *v4l2_dev ;
   struct device *dev_parent ;
   struct v4l2_ctrl_handler *ctrl_handler ;
   struct vb2_queue *queue ;
   struct v4l2_prio_state *prio ;
   char name[32U] ;
   enum vfl_devnode_type vfl_type ;
   enum vfl_devnode_direction vfl_dir ;
   int minor ;
   u16 num ;
   unsigned long flags ;
   int index ;
   spinlock_t fh_lock ;
   struct list_head fh_list ;
   int dev_debug ;
   v4l2_std_id tvnorms ;
   void (*release)(struct video_device *) ;
   struct v4l2_ioctl_ops *ioctl_ops ;
   unsigned long valid_ioctls[3U] ;
   struct mutex *lock ;
};
#line 95  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-common.h"
struct v4l2_subdev;
#line 96 
struct v4l2_subdev_ops;
#line 335  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-common.h"
struct v4l2_priv_tun_config {
   int tuner ;
   void *priv ;
};
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-devnode.h"
struct media_file_operations {
   struct module *owner ;
   ssize_t (*read)(struct file *, char *, size_t , loff_t *) ;
   ssize_t (*write)(struct file *, char *, size_t , loff_t *) ;
   __poll_t (*poll)(struct file *, struct poll_table_struct *) ;
   long (*ioctl)(struct file *, unsigned int , unsigned long ) ;
   long (*compat_ioctl)(struct file *, unsigned int , unsigned long ) ;
   int (*open)(struct file *) ;
   int (*release)(struct file *) ;
};
#line 75  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-devnode.h"
struct media_devnode {
   struct media_device *media_dev ;
   struct media_file_operations *fops ;
   struct device dev ;
   struct cdev cdev ;
   struct device *parent ;
   int minor ;
   unsigned long flags ;
   void (*release)(struct media_devnode *) ;
};
#line 65  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-device.h"
struct media_request;
#line 65  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-device.h"
struct media_device_ops {
   int (*link_notify)(struct media_link *, u32 , unsigned int ) ;
   struct media_request *(*req_alloc)(struct media_device *) ;
   void (*req_free)(struct media_request *) ;
   int (*req_validate)(struct media_request *) ;
   void (*req_queue)(struct media_request *) ;
};
#line 144  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-device.h"
struct media_device {
   struct device *dev ;
   struct media_devnode *devnode ;
   char model[32U] ;
   char driver_name[32U] ;
   char serial[40U] ;
   char bus_info[32U] ;
   u32 hw_revision ;
   u64 topology_version ;
   u32 id ;
   struct ida entity_internal_idx ;
   int entity_internal_idx_max ;
   struct list_head entities ;
   struct list_head interfaces ;
   struct list_head pads ;
   struct list_head links ;
   struct list_head entity_notify ;
   struct mutex graph_mutex ;
   struct media_graph pm_count_walk ;
   void *source_priv ;
   int (*enable_source)(struct media_entity *, struct media_pipeline *) ;
   void (*disable_source)(struct media_entity *) ;
   struct media_device_ops *ops ;
   struct mutex req_queue_mutex ;
   atomic_t request_id ;
};
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/v4l2-mediabus.h"
struct v4l2_mbus_framefmt {
   __u32 width ;
   __u32 height ;
   __u32 code ;
   __u32 field ;
   __u32 colorspace ;
   __u16 ycbcr_enc ;
   __u16 quantization ;
   __u16 xfer_func ;
   __u16 reserved[11U] ;
};
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/v4l2-subdev.h"
struct v4l2_subdev_format {
   __u32 which ;
   __u32 pad ;
   struct v4l2_mbus_framefmt format ;
   __u32 reserved[8U] ;
};
#line 75  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/v4l2-subdev.h"
struct v4l2_subdev_mbus_code_enum {
   __u32 pad ;
   __u32 index ;
   __u32 code ;
   __u32 which ;
   __u32 reserved[8U] ;
};
#line 90  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/v4l2-subdev.h"
struct v4l2_subdev_frame_size_enum {
   __u32 index ;
   __u32 pad ;
   __u32 code ;
   __u32 min_width ;
   __u32 max_width ;
   __u32 min_height ;
   __u32 max_height ;
   __u32 which ;
   __u32 reserved[8U] ;
};
#line 107  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/v4l2-subdev.h"
struct v4l2_subdev_frame_interval {
   __u32 pad ;
   struct v4l2_fract interval ;
   __u32 reserved[9U] ;
};
#line 123  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/v4l2-subdev.h"
struct v4l2_subdev_frame_interval_enum {
   __u32 index ;
   __u32 pad ;
   __u32 code ;
   __u32 width ;
   __u32 height ;
   struct v4l2_fract interval ;
   __u32 which ;
   __u32 reserved[8U] ;
};
#line 149  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/v4l2-subdev.h"
struct v4l2_subdev_selection {
   __u32 which ;
   __u32 pad ;
   __u32 target ;
   __u32 flags ;
   struct v4l2_rect r ;
   __u32 reserved[8U] ;
};
#line 157 
struct v4l2_async_notifier;
#line 158 
enum v4l2_async_match_type {
    V4L2_ASYNC_MATCH_CUSTOM = 0,
    V4L2_ASYNC_MATCH_DEVNAME = 1,
    V4L2_ASYNC_MATCH_I2C = 2,
    V4L2_ASYNC_MATCH_FWNODE = 3
};
#line 79  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-async.h"
struct __anonstruct_i2c_10104 {
   int adapter_id ;
   unsigned short address ;
};
#line 79  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-async.h"
struct __anonstruct_custom_10105 {
   bool (*match)(struct device *, struct v4l2_async_subdev *) ;
   void *priv ;
};
#line 79  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-async.h"
union __anonunion_match_10103 {
   struct fwnode_handle *fwnode ;
   char *device_name ;
   struct __anonstruct_i2c_10104 i2c ;
   struct __anonstruct_custom_10105 custom ;
};
#line 79  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-async.h"
struct v4l2_async_subdev {
   enum v4l2_async_match_type match_type ;
   union __anonunion_match_10103 match ;
   struct list_head list ;
   struct list_head asd_list ;
};
#line 107  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-async.h"
struct v4l2_async_notifier_operations {
   int (*bound)(struct v4l2_async_notifier *, struct v4l2_subdev *, struct v4l2_async_subdev *) ;
   int (*complete)(struct v4l2_async_notifier *) ;
   void (*unbind)(struct v4l2_async_notifier *, struct v4l2_subdev *, struct v4l2_async_subdev *) ;
};
#line 129  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-async.h"
struct v4l2_async_notifier {
   struct v4l2_async_notifier_operations *ops ;
   struct v4l2_device *v4l2_dev ;
   struct v4l2_subdev *sd ;
   struct v4l2_async_notifier *parent ;
   struct list_head asd_list ;
   struct list_head waiting ;
   struct list_head done ;
   struct list_head list ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-fh.h"
struct v4l2_m2m_ctx;
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-fh.h"
struct v4l2_fh {
   struct list_head list ;
   struct video_device *vdev ;
   struct v4l2_ctrl_handler *ctrl_handler ;
   enum v4l2_priority prio ;
   wait_queue_head_t wait ;
   struct mutex subscribe_lock ;
   struct list_head subscribed ;
   struct list_head available ;
   unsigned int navailable ;
   u32 sequence ;
   struct v4l2_m2m_ctx *m2m_ctx ;
};
#line 162 
enum v4l2_mbus_type {
    V4L2_MBUS_UNKNOWN = 0,
    V4L2_MBUS_PARALLEL = 1,
    V4L2_MBUS_BT656 = 2,
    V4L2_MBUS_CSI1 = 3,
    V4L2_MBUS_CCP2 = 4,
    V4L2_MBUS_CSI2_DPHY = 5,
    V4L2_MBUS_CSI2_CPHY = 6
};
#line 97  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-mediabus.h"
struct v4l2_mbus_config {
   enum v4l2_mbus_type type ;
   unsigned int flags ;
};
#line 184 
struct v4l2_subdev_fh;
#line 185 
struct tuner_setup;
#line 186 
struct v4l2_mbus_frame_desc;
#line 52  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_decode_vbi_line {
   u32 is_second_field ;
   u8 *p ;
   u32 line ;
   u32 type ;
};
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_io_pin_config {
   u32 flags ;
   u8 pin ;
   u8 function ;
   u8 value ;
   u8 strength ;
};
#line 188  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_core_ops {
   int (*log_status)(struct v4l2_subdev *) ;
   int (*s_io_pin_config)(struct v4l2_subdev *, size_t , struct v4l2_subdev_io_pin_config *) ;
   int (*init)(struct v4l2_subdev *, u32 ) ;
   int (*load_fw)(struct v4l2_subdev *) ;
   int (*reset)(struct v4l2_subdev *, u32 ) ;
   int (*s_gpio)(struct v4l2_subdev *, u32 ) ;
   long (*ioctl)(struct v4l2_subdev *, unsigned int , void *) ;
   long (*compat_ioctl32)(struct v4l2_subdev *, unsigned int , unsigned long ) ;
   int (*g_register)(struct v4l2_subdev *, struct v4l2_dbg_register *) ;
   int (*s_register)(struct v4l2_subdev *, struct v4l2_dbg_register *) ;
   int (*s_power)(struct v4l2_subdev *, int ) ;
   int (*interrupt_service_routine)(struct v4l2_subdev *, u32 , bool *) ;
   int (*subscribe_event)(struct v4l2_subdev *, struct v4l2_fh *, struct v4l2_event_subscription *) ;
   int (*unsubscribe_event)(struct v4l2_subdev *, struct v4l2_fh *, struct v4l2_event_subscription *) ;
};
#line 264  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_tuner_ops {
   int (*standby)(struct v4l2_subdev *) ;
   int (*s_radio)(struct v4l2_subdev *) ;
   int (*s_frequency)(struct v4l2_subdev *, struct v4l2_frequency *) ;
   int (*g_frequency)(struct v4l2_subdev *, struct v4l2_frequency *) ;
   int (*enum_freq_bands)(struct v4l2_subdev *, struct v4l2_frequency_band *) ;
   int (*g_tuner)(struct v4l2_subdev *, struct v4l2_tuner *) ;
   int (*s_tuner)(struct v4l2_subdev *, struct v4l2_tuner *) ;
   int (*g_modulator)(struct v4l2_subdev *, struct v4l2_modulator *) ;
   int (*s_modulator)(struct v4l2_subdev *, struct v4l2_modulator *) ;
   int (*s_type_addr)(struct v4l2_subdev *, struct tuner_setup *) ;
   int (*s_config)(struct v4l2_subdev *, struct v4l2_priv_tun_config *) ;
};
#line 304  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_audio_ops {
   int (*s_clock_freq)(struct v4l2_subdev *, u32 ) ;
   int (*s_i2s_clock_freq)(struct v4l2_subdev *, u32 ) ;
   int (*s_routing)(struct v4l2_subdev *, u32 , u32 , u32 ) ;
   int (*s_stream)(struct v4l2_subdev *, int ) ;
};
#line 310 
enum v4l2_mbus_frame_desc_flags {
    V4L2_MBUS_FRAME_DESC_FL_LEN_MAX = 1,
    V4L2_MBUS_FRAME_DESC_FL_BLOB = 2
};
#line 335  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_mbus_frame_desc_entry {
   enum v4l2_mbus_frame_desc_flags flags ;
   u32 pixelcode ;
   u32 length ;
};
#line 348  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_mbus_frame_desc {
   struct v4l2_mbus_frame_desc_entry entry[4U] ;
   unsigned short num_entries ;
};
#line 415  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_video_ops {
   int (*s_routing)(struct v4l2_subdev *, u32 , u32 , u32 ) ;
   int (*s_crystal_freq)(struct v4l2_subdev *, u32 , u32 ) ;
   int (*g_std)(struct v4l2_subdev *, v4l2_std_id *) ;
   int (*s_std)(struct v4l2_subdev *, v4l2_std_id ) ;
   int (*s_std_output)(struct v4l2_subdev *, v4l2_std_id ) ;
   int (*g_std_output)(struct v4l2_subdev *, v4l2_std_id *) ;
   int (*querystd)(struct v4l2_subdev *, v4l2_std_id *) ;
   int (*g_tvnorms)(struct v4l2_subdev *, v4l2_std_id *) ;
   int (*g_tvnorms_output)(struct v4l2_subdev *, v4l2_std_id *) ;
   int (*g_input_status)(struct v4l2_subdev *, u32 *) ;
   int (*s_stream)(struct v4l2_subdev *, int ) ;
   int (*g_pixelaspect)(struct v4l2_subdev *, struct v4l2_fract *) ;
   int (*g_frame_interval)(struct v4l2_subdev *, struct v4l2_subdev_frame_interval *) ;
   int (*s_frame_interval)(struct v4l2_subdev *, struct v4l2_subdev_frame_interval *) ;
   int (*s_dv_timings)(struct v4l2_subdev *, struct v4l2_dv_timings *) ;
   int (*g_dv_timings)(struct v4l2_subdev *, struct v4l2_dv_timings *) ;
   int (*query_dv_timings)(struct v4l2_subdev *, struct v4l2_dv_timings *) ;
   int (*g_mbus_config)(struct v4l2_subdev *, struct v4l2_mbus_config *) ;
   int (*s_mbus_config)(struct v4l2_subdev *, struct v4l2_mbus_config *) ;
   int (*s_rx_buffer)(struct v4l2_subdev *, void *, unsigned int *) ;
};
#line 481  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_vbi_ops {
   int (*decode_vbi_line)(struct v4l2_subdev *, struct v4l2_decode_vbi_line *) ;
   int (*s_vbi_data)(struct v4l2_subdev *, struct v4l2_sliced_vbi_data *) ;
   int (*g_vbi_data)(struct v4l2_subdev *, struct v4l2_sliced_vbi_data *) ;
   int (*g_sliced_vbi_cap)(struct v4l2_subdev *, struct v4l2_sliced_vbi_cap *) ;
   int (*s_raw_fmt)(struct v4l2_subdev *, struct v4l2_vbi_format *) ;
   int (*g_sliced_fmt)(struct v4l2_subdev *, struct v4l2_sliced_vbi_format *) ;
   int (*s_sliced_fmt)(struct v4l2_subdev *, struct v4l2_sliced_vbi_format *) ;
};
#line 501  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_sensor_ops {
   int (*g_skip_top_lines)(struct v4l2_subdev *, u32 *) ;
   int (*g_skip_frames)(struct v4l2_subdev *, u32 *) ;
};
#line 505 
enum v4l2_subdev_ir_mode {
    V4L2_SUBDEV_IR_MODE_PULSE_WIDTH = 0
};
#line 540  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_ir_parameters {
   unsigned int bytes_per_data_element ;
   enum v4l2_subdev_ir_mode mode ;
   bool enable ;
   bool interrupt_enable ;
   bool shutdown ;
   bool modulation ;
   u32 max_pulse_width ;
   unsigned int carrier_freq ;
   unsigned int duty_cycle ;
   bool invert_level ;
   bool invert_carrier_sense ;
   u32 noise_filter_min_width ;
   unsigned int carrier_range_lower ;
   unsigned int carrier_range_upper ;
   u32 resolution ;
};
#line 599  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_ir_ops {
   int (*rx_read)(struct v4l2_subdev *, u8 *, size_t , ssize_t *) ;
   int (*rx_g_parameters)(struct v4l2_subdev *, struct v4l2_subdev_ir_parameters *) ;
   int (*rx_s_parameters)(struct v4l2_subdev *, struct v4l2_subdev_ir_parameters *) ;
   int (*tx_write)(struct v4l2_subdev *, u8 *, size_t , ssize_t *) ;
   int (*tx_g_parameters)(struct v4l2_subdev *, struct v4l2_subdev_ir_parameters *) ;
   int (*tx_s_parameters)(struct v4l2_subdev *, struct v4l2_subdev_ir_parameters *) ;
};
#line 630  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_pad_config {
   struct v4l2_mbus_framefmt try_fmt ;
   struct v4l2_rect try_crop ;
   struct v4l2_rect try_compose ;
};
#line 674  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_pad_ops {
   int (*init_cfg)(struct v4l2_subdev *, struct v4l2_subdev_pad_config *) ;
   int (*enum_mbus_code)(struct v4l2_subdev *, struct v4l2_subdev_pad_config *, struct v4l2_subdev_mbus_code_enum *) ;
   int (*enum_frame_size)(struct v4l2_subdev *, struct v4l2_subdev_pad_config *, struct v4l2_subdev_frame_size_enum *) ;
   int (*enum_frame_interval)(struct v4l2_subdev *, struct v4l2_subdev_pad_config *, struct v4l2_subdev_frame_interval_enum *) ;
   int (*get_fmt)(struct v4l2_subdev *, struct v4l2_subdev_pad_config *, struct v4l2_subdev_format *) ;
   int (*set_fmt)(struct v4l2_subdev *, struct v4l2_subdev_pad_config *, struct v4l2_subdev_format *) ;
   int (*get_selection)(struct v4l2_subdev *, struct v4l2_subdev_pad_config *, struct v4l2_subdev_selection *) ;
   int (*set_selection)(struct v4l2_subdev *, struct v4l2_subdev_pad_config *, struct v4l2_subdev_selection *) ;
   int (*get_edid)(struct v4l2_subdev *, struct v4l2_edid *) ;
   int (*set_edid)(struct v4l2_subdev *, struct v4l2_edid *) ;
   int (*dv_timings_cap)(struct v4l2_subdev *, struct v4l2_dv_timings_cap *) ;
   int (*enum_dv_timings)(struct v4l2_subdev *, struct v4l2_enum_dv_timings *) ;
   int (*link_validate)(struct v4l2_subdev *, struct media_link *, struct v4l2_subdev_format *, struct v4l2_subdev_format *) ;
   int (*get_frame_desc)(struct v4l2_subdev *, unsigned int , struct v4l2_mbus_frame_desc *) ;
   int (*set_frame_desc)(struct v4l2_subdev *, unsigned int , struct v4l2_mbus_frame_desc *) ;
};
#line 727  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_ops {
   struct v4l2_subdev_core_ops *core ;
   struct v4l2_subdev_tuner_ops *tuner ;
   struct v4l2_subdev_audio_ops *audio ;
   struct v4l2_subdev_video_ops *video ;
   struct v4l2_subdev_vbi_ops *vbi ;
   struct v4l2_subdev_ir_ops *ir ;
   struct v4l2_subdev_sensor_ops *sensor ;
   struct v4l2_subdev_pad_ops *pad ;
};
#line 765  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_internal_ops {
   int (*registered)(struct v4l2_subdev *) ;
   void (*unregistered)(struct v4l2_subdev *) ;
   int (*open)(struct v4l2_subdev *, struct v4l2_subdev_fh *) ;
   int (*close)(struct v4l2_subdev *, struct v4l2_subdev_fh *) ;
   void (*release)(struct v4l2_subdev *) ;
};
#line 772 
struct regulator_bulk_data;
#line 797  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_platform_data {
   struct regulator_bulk_data *regulators ;
   int num_regulators ;
   void *host_priv ;
};
#line 848  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev {
   struct media_entity entity ;
   struct list_head list ;
   struct module *owner ;
   bool owner_v4l2_dev ;
   u32 flags ;
   struct v4l2_device *v4l2_dev ;
   struct v4l2_subdev_ops *ops ;
   struct v4l2_subdev_internal_ops *internal_ops ;
   struct v4l2_ctrl_handler *ctrl_handler ;
   char name[32U] ;
   u32 grp_id ;
   void *dev_priv ;
   void *host_priv ;
   struct video_device *devnode ;
   struct device *dev ;
   struct fwnode_handle *fwnode ;
   struct list_head async_list ;
   struct v4l2_async_subdev *asd ;
   struct v4l2_async_notifier *notifier ;
   struct v4l2_async_notifier *subdev_notifier ;
   struct v4l2_subdev_platform_data *pdata ;
};
#line 906  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_fh {
   struct v4l2_fh vfh ;
   struct module *owner ;
   struct v4l2_subdev_pad_config *pad ;
};
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-device.h"
struct v4l2_device {
   struct device *dev ;
   struct media_device *mdev ;
   struct list_head subdevs ;
   spinlock_t lock ;
   char name[36U] ;
   void (*notify)(struct v4l2_subdev *, unsigned int , void *) ;
   struct v4l2_ctrl_handler *ctrl_handler ;
   struct v4l2_prio_state prio ;
   struct kref ref ;
   void (*release)(struct v4l2_device *) ;
};
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ptp_clock_kernel.h"
struct ptp_system_timestamp {
   struct timespec64 pre_ts ;
   struct timespec64 post_ts ;
};
#line 277 
struct dma_chan;
#line 279 
struct spi_controller;
#line 280 
struct spi_transfer;
#line 281 
struct spi_controller_mem_ops;
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spi/spi.h"
struct spi_statistics {
   spinlock_t lock ;
   unsigned long messages ;
   unsigned long transfers ;
   unsigned long errors ;
   unsigned long timedout ;
   unsigned long spi_sync ;
   unsigned long spi_sync_immediate ;
   unsigned long spi_async ;
   unsigned long long bytes ;
   unsigned long long bytes_rx ;
   unsigned long long bytes_tx ;
   unsigned long transfer_bytes_histo[17U] ;
   unsigned long transfers_split_maxsize ;
};
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spi/spi.h"
struct spi_delay {
   u16 value ;
   u8 unit ;
};
#line 157  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spi/spi.h"
struct spi_device {
   struct device dev ;
   struct spi_controller *controller ;
   struct spi_controller *master ;
   u32 max_speed_hz ;
   u8 chip_select ;
   u8 bits_per_word ;
   bool rt ;
   u32 mode ;
   int irq ;
   void *controller_state ;
   void *controller_data ;
   char modalias[32U] ;
   char *driver_override ;
   int cs_gpio ;
   struct gpio_desc *cs_gpiod ;
   struct spi_delay word_delay ;
   struct spi_statistics statistics ;
};
#line 247 
struct spi_message;
#line 452  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spi/spi.h"
struct spi_controller {
   struct device dev ;
   struct list_head list ;
   s16 bus_num ;
   u16 num_chipselect ;
   u16 dma_alignment ;
   u32 mode_bits ;
   u32 bits_per_word_mask ;
   u32 min_speed_hz ;
   u32 max_speed_hz ;
   u16 flags ;
   bool slave ;
   size_t (*max_transfer_size)(struct spi_device *) ;
   size_t (*max_message_size)(struct spi_device *) ;
   struct mutex io_mutex ;
   spinlock_t bus_lock_spinlock ;
   struct mutex bus_lock_mutex ;
   bool bus_lock_flag ;
   int (*setup)(struct spi_device *) ;
   int (*set_cs_timing)(struct spi_device *, struct spi_delay *, struct spi_delay *, struct spi_delay *) ;
   int (*transfer)(struct spi_device *, struct spi_message *) ;
   void (*cleanup)(struct spi_device *) ;
   bool (*can_dma)(struct spi_controller *, struct spi_device *, struct spi_transfer *) ;
   bool queued ;
   struct kthread_worker kworker ;
   struct task_struct *kworker_task ;
   struct kthread_work pump_messages ;
   spinlock_t queue_lock ;
   struct list_head queue ;
   struct spi_message *cur_msg ;
   bool idling ;
   bool busy ;
   bool running ;
   bool rt ;
   bool auto_runtime_pm ;
   bool cur_msg_prepared ;
   bool cur_msg_mapped ;
   struct completion xfer_completion ;
   size_t max_dma_len ;
   int (*prepare_transfer_hardware)(struct spi_controller *) ;
   int (*transfer_one_message)(struct spi_controller *, struct spi_message *) ;
   int (*unprepare_transfer_hardware)(struct spi_controller *) ;
   int (*prepare_message)(struct spi_controller *, struct spi_message *) ;
   int (*unprepare_message)(struct spi_controller *, struct spi_message *) ;
   int (*slave_abort)(struct spi_controller *) ;
   void (*set_cs)(struct spi_device *, bool ) ;
   int (*transfer_one)(struct spi_controller *, struct spi_device *, struct spi_transfer *) ;
   void (*handle_err)(struct spi_controller *, struct spi_message *) ;
   struct spi_controller_mem_ops *mem_ops ;
   struct spi_delay cs_setup ;
   struct spi_delay cs_hold ;
   struct spi_delay cs_inactive ;
   int *cs_gpios ;
   struct gpio_desc **cs_gpiods ;
   bool use_gpio_descriptors ;
   struct spi_statistics statistics ;
   struct dma_chan *dma_tx ;
   struct dma_chan *dma_rx ;
   void *dummy_rx ;
   void *dummy_tx ;
   int (*fw_translate_cs)(struct spi_controller *, unsigned int ) ;
   bool ptp_sts_supported ;
   unsigned long irq_flags ;
};
#line 890  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spi/spi.h"
struct spi_transfer {
   void *tx_buf ;
   void *rx_buf ;
   unsigned int len ;
   dma_addr_t tx_dma ;
   dma_addr_t rx_dma ;
   struct sg_table tx_sg ;
   struct sg_table rx_sg ;
   unsigned int cs_change : 1 ;
   unsigned int tx_nbits : 3 ;
   unsigned int rx_nbits : 3 ;
   u8 bits_per_word ;
   u16 delay_usecs ;
   struct spi_delay delay ;
   struct spi_delay cs_change_delay ;
   struct spi_delay word_delay ;
   u32 speed_hz ;
   u32 effective_speed_hz ;
   unsigned int ptp_sts_word_pre ;
   unsigned int ptp_sts_word_post ;
   struct ptp_system_timestamp *ptp_sts ;
   bool timestamped_pre ;
   bool timestamped_post ;
   struct list_head transfer_list ;
};
#line 961  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spi/spi.h"
struct spi_message {
   struct list_head transfers ;
   struct spi_device *spi ;
   unsigned int is_dma_mapped : 1 ;
   void (*complete)(void *) ;
   void *context ;
   unsigned int frame_length ;
   unsigned int actual_length ;
   int status ;
   struct list_head queue ;
   void *state ;
   struct list_head resources ;
};
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 157  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fb_fix_screeninfo {
   char id[16U] ;
   unsigned long smem_start ;
   __u32 smem_len ;
   __u32 type ;
   __u32 type_aux ;
   __u32 visual ;
   __u16 xpanstep ;
   __u16 ypanstep ;
   __u16 ywrapstep ;
   __u32 line_length ;
   unsigned long mmio_start ;
   __u32 mmio_len ;
   __u32 accel ;
   __u16 capabilities ;
   __u16 reserved[2U] ;
};
#line 188  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fb_bitfield {
   __u32 offset ;
   __u32 length ;
   __u32 msb_right ;
};
#line 241  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fb_var_screeninfo {
   __u32 xres ;
   __u32 yres ;
   __u32 xres_virtual ;
   __u32 yres_virtual ;
   __u32 xoffset ;
   __u32 yoffset ;
   __u32 bits_per_pixel ;
   __u32 grayscale ;
   struct fb_bitfield red ;
   struct fb_bitfield green ;
   struct fb_bitfield blue ;
   struct fb_bitfield transp ;
   __u32 nonstd ;
   __u32 activate ;
   __u32 height ;
   __u32 width ;
   __u32 accel_flags ;
   __u32 pixclock ;
   __u32 left_margin ;
   __u32 right_margin ;
   __u32 upper_margin ;
   __u32 lower_margin ;
   __u32 hsync_len ;
   __u32 vsync_len ;
   __u32 sync ;
   __u32 vmode ;
   __u32 rotate ;
   __u32 colorspace ;
   __u32 reserved[4U] ;
};
#line 281  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fb_cmap {
   __u32 start ;
   __u32 len ;
   __u16 *red ;
   __u16 *green ;
   __u16 *blue ;
   __u16 *transp ;
};
#line 341  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fb_copyarea {
   __u32 dx ;
   __u32 dy ;
   __u32 width ;
   __u32 height ;
   __u32 sx ;
   __u32 sy ;
};
#line 350  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fb_fillrect {
   __u32 dx ;
   __u32 dy ;
   __u32 width ;
   __u32 height ;
   __u32 color ;
   __u32 rop ;
};
#line 359  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fb_image {
   __u32 dx ;
   __u32 dy ;
   __u32 width ;
   __u32 height ;
   __u32 fg_color ;
   __u32 bg_color ;
   __u8 depth ;
   char *data ;
   struct fb_cmap cmap ;
};
#line 383  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fbcurpos {
   __u16 x ;
   __u16 y ;
};
#line 387  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fb_cursor {
   __u16 set ;
   __u16 enable ;
   __u16 rop ;
   char *mask ;
   struct fbcurpos hot ;
   struct fb_image image ;
};
#line 400 
enum backlight_type {
    BACKLIGHT_RAW = 1,
    BACKLIGHT_PLATFORM = 2,
    BACKLIGHT_FIRMWARE = 3,
    BACKLIGHT_TYPE_MAX = 4
};
#line 412 
enum backlight_scale {
    BACKLIGHT_SCALE_UNKNOWN = 0,
    BACKLIGHT_SCALE_LINEAR = 1,
    BACKLIGHT_SCALE_NON_LINEAR = 2
};
#line 418 
struct backlight_device;
#line 419 
struct fb_info;
#line 58  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backlight.h"
struct backlight_ops {
   unsigned int options ;
   int (*update_status)(struct backlight_device *) ;
   int (*get_brightness)(struct backlight_device *) ;
   int (*check_fb)(struct backlight_device *, struct fb_info *) ;
};
#line 74  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backlight.h"
struct backlight_properties {
   int brightness ;
   int max_brightness ;
   int power ;
   int fb_blank ;
   enum backlight_type type ;
   unsigned int state ;
   enum backlight_scale scale ;
};
#line 97  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backlight.h"
struct backlight_device {
   struct backlight_properties props ;
   struct mutex update_lock ;
   struct mutex ops_lock ;
   struct backlight_ops *ops ;
   struct notifier_block fb_notif ;
   struct list_head entry ;
   struct device dev ;
   bool fb_bl_on[32U] ;
   int use_count ;
};
#line 52  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_chroma {
   __u32 redx ;
   __u32 greenx ;
   __u32 bluex ;
   __u32 whitex ;
   __u32 redy ;
   __u32 greeny ;
   __u32 bluey ;
   __u32 whitey ;
};
#line 63 
struct fb_videomode;
#line 63  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_monspecs {
   struct fb_chroma chroma ;
   struct fb_videomode *modedb ;
   __u8 manufacturer[4U] ;
   __u8 monitor[14U] ;
   __u8 serial_no[14U] ;
   __u8 ascii[14U] ;
   __u32 modedb_len ;
   __u32 model ;
   __u32 serial ;
   __u32 year ;
   __u32 week ;
   __u32 hfmin ;
   __u32 hfmax ;
   __u32 dclkmin ;
   __u32 dclkmax ;
   __u16 input ;
   __u16 dpms ;
   __u16 signal ;
   __u16 vfmin ;
   __u16 vfmax ;
   __u16 gamma ;
   __u16 gtf : 1 ;
   __u16 misc ;
   __u8 version ;
   __u8 revision ;
   __u8 max_x ;
   __u8 max_y ;
};
#line 144  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_blit_caps {
   u32 x ;
   u32 y ;
   u32 len ;
   u32 flags ;
};
#line 185  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_pixmap {
   u8 *addr ;
   u32 size ;
   u32 offset ;
   u32 buf_align ;
   u32 scan_align ;
   u32 access_align ;
   u32 flags ;
   u32 blit_x ;
   u32 blit_y ;
   void (*writeio)(struct fb_info *, void *, void *, unsigned int ) ;
   void (*readio)(struct fb_info *, void *, void *, unsigned int ) ;
};
#line 203  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_deferred_io {
   unsigned long delay ;
   struct mutex lock ;
   struct list_head pagelist ;
   void (*first_io)(struct fb_info *) ;
   void (*deferred_io)(struct fb_info *, struct list_head *) ;
};
#line 228  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_ops {
   struct module *owner ;
   int (*fb_open)(struct fb_info *, int ) ;
   int (*fb_release)(struct fb_info *, int ) ;
   ssize_t (*fb_read)(struct fb_info *, char *, size_t , loff_t *) ;
   ssize_t (*fb_write)(struct fb_info *, char *, size_t , loff_t *) ;
   int (*fb_check_var)(struct fb_var_screeninfo *, struct fb_info *) ;
   int (*fb_set_par)(struct fb_info *) ;
   int (*fb_setcolreg)(unsigned int , unsigned int , unsigned int , unsigned int , unsigned int , struct fb_info *) ;
   int (*fb_setcmap)(struct fb_cmap *, struct fb_info *) ;
   int (*fb_blank)(int , struct fb_info *) ;
   int (*fb_pan_display)(struct fb_var_screeninfo *, struct fb_info *) ;
   void (*fb_fillrect)(struct fb_info *, struct fb_fillrect *) ;
   void (*fb_copyarea)(struct fb_info *, struct fb_copyarea *) ;
   void (*fb_imageblit)(struct fb_info *, struct fb_image *) ;
   int (*fb_cursor)(struct fb_info *, struct fb_cursor *) ;
   int (*fb_sync)(struct fb_info *) ;
   int (*fb_ioctl)(struct fb_info *, unsigned int , unsigned long ) ;
   int (*fb_compat_ioctl)(struct fb_info *, unsigned int , unsigned long ) ;
   int (*fb_mmap)(struct fb_info *, struct vm_area_struct *) ;
   void (*fb_get_caps)(struct fb_info *, struct fb_blit_caps *, struct fb_var_screeninfo *) ;
   void (*fb_destroy)(struct fb_info *) ;
   int (*fb_debug_enter)(struct fb_info *) ;
   int (*fb_debug_leave)(struct fb_info *) ;
};
#line 306  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_tilemap {
   __u32 width ;
   __u32 height ;
   __u32 depth ;
   __u32 length ;
   __u8 *data ;
};
#line 315  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_tilerect {
   __u32 sx ;
   __u32 sy ;
   __u32 width ;
   __u32 height ;
   __u32 index ;
   __u32 fg ;
   __u32 bg ;
   __u32 rop ;
};
#line 326  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_tilearea {
   __u32 sx ;
   __u32 sy ;
   __u32 dx ;
   __u32 dy ;
   __u32 width ;
   __u32 height ;
};
#line 335  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_tileblit {
   __u32 sx ;
   __u32 sy ;
   __u32 width ;
   __u32 height ;
   __u32 fg ;
   __u32 bg ;
   __u32 length ;
   __u32 *indices ;
};
#line 346  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_tilecursor {
   __u32 sx ;
   __u32 sy ;
   __u32 mode ;
   __u32 shape ;
   __u32 fg ;
   __u32 bg ;
};
#line 355  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_tile_ops {
   void (*fb_settile)(struct fb_info *, struct fb_tilemap *) ;
   void (*fb_tilecopy)(struct fb_info *, struct fb_tilearea *) ;
   void (*fb_tilefill)(struct fb_info *, struct fb_tilerect *) ;
   void (*fb_tileblit)(struct fb_info *, struct fb_tileblit *) ;
   void (*fb_tilecursor)(struct fb_info *, struct fb_tilecursor *) ;
   int (*fb_get_tilemax)(struct fb_info *) ;
};
#line 499  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct aperture {
   resource_size_t base ;
   resource_size_t size ;
};
#line 497  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct apertures_struct {
   unsigned int count ;
   struct aperture ranges[0U] ;
};
#line 439  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
union __anonunion_11006 {
   char *screen_base ;
   char *screen_buffer ;
};
#line 439  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_info {
   atomic_t count ;
   int node ;
   int flags ;
   int fbcon_rotate_hint ;
   struct mutex lock ;
   struct mutex mm_lock ;
   struct fb_var_screeninfo var ;
   struct fb_fix_screeninfo fix ;
   struct fb_monspecs monspecs ;
   struct work_struct queue ;
   struct fb_pixmap pixmap ;
   struct fb_pixmap sprite ;
   struct fb_cmap cmap ;
   struct list_head modelist ;
   struct fb_videomode *mode ;
   struct backlight_device *bl_dev ;
   struct mutex bl_curve_mutex ;
   u8 bl_curve[128U] ;
   struct delayed_work deferred_work ;
   struct fb_deferred_io *fbdefio ;
   struct fb_ops *fbops ;
   struct device *device ;
   struct device *dev ;
   int class_flag ;
   struct fb_tile_ops *tileops ;
   union __anonunion_11006 __anonCompField_fb_info_73 ;
   unsigned long screen_size ;
   void *pseudo_palette ;
   u32 state ;
   void *fbcon_par ;
   void *par ;
   struct apertures_struct *apertures ;
   bool skip_vt_switch ;
};
#line 767  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_videomode {
   char *name ;
   u32 refresh ;
   u32 xres ;
   u32 yres ;
   u32 pixclock ;
   u32 left_margin ;
   u32 right_margin ;
   u32 upper_margin ;
   u32 lower_margin ;
   u32 hsync_len ;
   u32 vsync_len ;
   u32 sync ;
   u32 vmode ;
   u32 flag ;
};
#line 63  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
struct ldv_kmem_cache {
   char *name ;
   unsigned int size ;
};
#line 88  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
typedef unsigned long pthread_t;
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/thread.h"
union pthread_attr_t {
   char __size[56U] ;
   long __align ;
};
#line 30  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/thread.h"
typedef union pthread_attr_t pthread_attr_t;
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 18  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/emg/0/environment_model.c"
struct emg_struct_ieee80211_scenario_zd_ops_12 {
   struct ieee80211_hw *arg0 ;
   int signal_pending ;
};
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/emg/0/environment_model.c"
struct emg_struct_usb_scenario_driver_13 {
   struct usb_driver *arg0 ;
   int signal_pending ;
};
/* compiler builtin: 
   void *__builtin_memcpy(void *, void const *, unsigned long);   */
/* compiler builtin: 
   void __builtin_unreachable(void);   */
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/common/inline_asm.h"
#line 22 
void ldv_inline_asm(void);
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/export.h"
#line 16 
extern struct module __this_module;
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/compiler.h"
__inline static void __read_once_size(void *p, void *res, int size)
{
  #line 199 
  switch (size) {
    #line 199 
    case 1: 
            #line 199 
    ;
    #line 199 
    *((__u8 *)res) = *((__u8 *)p);
    #line 199 
    break;
    #line 199 
    case 2: 
            #line 199 
    ;
    #line 199 
    *((__u16 *)res) = *((__u16 *)p);
    #line 199 
    break;
    #line 199 
    case 4: 
            #line 199 
    ;
    #line 199 
    *((__u32 *)res) = *((__u32 *)p);
    #line 199 
    break;
    #line 199 
    case 8: 
            #line 199 
    ;
    #line 199 
    *((__u64 *)res) = *((__u64 *)p);
    #line 199 
    break;
    #line 199 
    default: 
             #line 199 
    ;
    #line 200 
    ldv_inline_asm();
    #line 199 
    __builtin_memcpy(res,(void const *)p,(unsigned long)size);
    #line 200 
    ldv_inline_asm();
  }
  #line 203 
  return;
}

#line 220  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/compiler.h"
__inline static void __write_once_size(void *p, void *res, int size)
{
  #line 222 
  switch (size) {
    #line 223 
    case 1: 
            #line 223 
    ;
    #line 223 
    *((__u8 *)p) = *((__u8 *)res);
    #line 223 
    break;
    #line 224 
    case 2: 
            #line 224 
    ;
    #line 224 
    *((__u16 *)p) = *((__u16 *)res);
    #line 224 
    break;
    #line 225 
    case 4: 
            #line 225 
    ;
    #line 225 
    *((__u32 *)p) = *((__u32 *)res);
    #line 225 
    break;
    #line 226 
    case 8: 
            #line 226 
    ;
    #line 226 
    *((__u64 *)p) = *((__u64 *)res);
    #line 226 
    break;
    #line 227 
    default: 
             #line 227 
    ;
    #line 228 
    ldv_inline_asm();
    #line 229 
    __builtin_memcpy(p,(void const *)res,(unsigned long)size);
    #line 230 
    ldv_inline_asm();
  }
  #line 232 
  return;
}

#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kasan-checks.h"
__inline static bool kasan_check_read(void *p, unsigned int size)
{
  #line 36 
  return (_Bool)1;
}

#line 204  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/bitops.h"
__inline static bool constant_test_bit(long nr, unsigned long *addr)
{
  #line 207 
  return (_Bool)(((*(addr + (unsigned long)(nr >> 6)) >> (nr & 63L)) & 1UL) != 0UL);
}

#line 210  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/bitops.h"
__inline static bool variable_test_bit(long nr, unsigned long *addr)
{
  #line 212 
  bool oldbit;
  #line 213 
  ldv_inline_asm();
  #line 219 
  return oldbit;
}

#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/bitops/instrumented-atomic.h"
#line 153  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_usb.i.aux"
static void cif_set_bit(long nr, unsigned long *addr);
#line 108  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/bitops/instrumented-non-atomic.h"
__inline static bool test_bit(long nr, unsigned long *addr)
{
  #line 111 
  int tmp_1;
  #line 110 
  kasan_check_read((void *)(addr + (unsigned long)(nr / 64L)),8U);
  #line 111 
  if (0 != 0) {
    #line 111 
    tmp_1 = (int)constant_test_bit(nr,addr) != 0;
  }
  else {
    #line 111 
    tmp_1 = (int)variable_test_bit(nr,addr) != 0;
  }
  #line 111 
  return (_Bool)(tmp_1 != 0);
}

#line 64  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/byteorder/little_endian.h"
__inline static __u16 __le16_to_cpup(__le16 *p)
{
  #line 66 
  return *p;
}

#line 171  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/printk.h"
#line 171 
int printk(char * , ...);
#line 204 
#line 204 
void dump_stack(void);
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/jump_label.h"
__inline static bool arch_static_branch(struct static_key *key, bool branch)
{
  #line 27 
  ldv_inline_asm();
  #line 28 
  ldv_inline_asm();
  #line 34 
  return (_Bool)0;
  #line 35 
  l_yes: 
         #line 35 
  ;
  #line 36 
  return (_Bool)1;
}

#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dynamic_debug.h"
#line 56 
void __dynamic_pr_debug(struct _ddebug *, char * , ...);
#line 64 
#line 64 
void __dynamic_dev_dbg(struct _ddebug *, struct device *, char * , ...);
#line 476  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernel.h"
#line 476 
int scnprintf(char *, size_t, char * , ...);
#line 26  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
#line 167  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_usb.i.aux"
static void INIT_LIST_HEAD(struct list_head *list);
#line 88  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/percpu.h"
#line 88 
void __bad_percpu_size(void);
#line 334  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/paravirt_types.h"
#line 334 
extern struct paravirt_patch_template pv_ops;
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/string_64.h"
#line 14 
void *memcpy(void *, void *, size_t);
#line 18 
#line 18 
void *memset(void *, int, size_t);
#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/cmpxchg_64.h"
__inline static int arch_atomic_read(atomic_t *v)
{
  #line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/atomic.h"
  union __anonunion___u_67 __u;
  #line 31 
  __read_once_size((void *)(& v->counter),(void *)(& __u.__c),4);
  #line 31 
  return (__u.__val);
}

#line 41  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/atomic.h"
__inline static void arch_atomic_set(atomic_t *v, int i)
{
  #line 44 
  union __anonunion___u_69 __u = {.__val = i};
  #line 43 
  __write_once_size((void *)(& v->counter),(void *)(& __u.__c),4);
  #line 43 
  int tmp = __u.__val;
  #line 45 
  return;
}

#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/atomic-instrumented.h"
__inline static int atomic_read(atomic_t *v)
{
  #line 26 
  kasan_check_read((void *)v,4U);
  #line 27 
  return arch_atomic_read(v);
}

#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/atomic-instrumented.h"
__inline static void atomic_set(atomic_t *v, int i)
{
  #line 44 
  kasan_check_read((void *)v,4U);
  #line 45 
  arch_atomic_set(v,i);
  #line 46 
  return;
}

#line 745  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/paravirt.h"
__inline static unsigned long arch_local_save_flags(void)
{
  #line 747 
  unsigned long __ret;
  {
    #line 747 
    unsigned long __edi = __edi;
    #line 747 
    unsigned long __esi = __esi;
    #line 747 
    unsigned long __edx = __edx;
    #line 747 
    unsigned long __ecx = __ecx;
    #line 747 
    unsigned long __eax = __eax;
    #line 747 
    if ((long)(pv_ops.irq.save_fl.func == (void *)0) != 0L) {
      #line 748 
      ldv_inline_asm();
      #line 749 
      ldv_inline_asm();
      #line 750 
      ldv_inline_asm();
      #line 747 
      ;
    }
    {
      #line 747 
      unsigned long __mask;
      #line 751 
      ldv_inline_asm();
      #line 747 
      __mask = 18446744073709551615UL;
      #line 747 
      switch (8UL) {
        #line 747 
        case (unsigned long)1: 
                               #line 747 
        ;
        #line 747 
        __mask = 255UL;
        #line 747 
        break;
        #line 747 
        case (unsigned long)2: 
                               #line 747 
        ;
        #line 747 
        __mask = 65535UL;
        #line 747 
        break;
        #line 747 
        case (unsigned long)4: 
                               #line 747 
        ;
        #line 747 
        __mask = 4294967295UL;
        #line 747 
        break;
        #line 747 
        default: 
                 #line 747 
        ;
        #line 747 
        break;
      }
      #line 747 
      __ret = __mask & __eax;
    }
    }
  #line 747 
  return __ret;
}

#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/irqflags.h"
#line 20 
unsigned long native_save_fl(void);
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/irqflags.h"
unsigned long native_save_fl(void)
{
  #line 22 
  unsigned long flags;
  #line 23 
  ldv_inline_asm();
  #line 35 
  return flags;
}

#line 38 
#line 39 
void native_restore_fl(unsigned long flags);
#line 39  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/irqflags.h"
void native_restore_fl(unsigned long flags)
{
  #line 41 
  ldv_inline_asm();
  #line 42 
  return;
}

#line 162  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/irqflags.h"
__inline static int arch_irqs_disabled_flags(unsigned long flags)
{
  #line 164 
  return (flags & 512UL) == 0UL;
}

#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/preempt.h"
__inline static int preempt_count(void)
{
  #line 26 
  int pfo_ret__;
  #line 26 
  switch (4UL) {
    #line 26 
    case (unsigned long)1: 
                           #line 26 
    ;
    #line 27 
    ldv_inline_asm();
    #line 26 
    break;
    #line 26 
    case (unsigned long)2: 
                           #line 26 
    ;
    #line 27 
    ldv_inline_asm();
    #line 26 
    break;
    #line 26 
    case (unsigned long)4: 
                           #line 26 
    ;
    #line 27 
    ldv_inline_asm();
    #line 26 
    break;
    #line 26 
    case (unsigned long)8: 
                           #line 26 
    ;
    #line 27 
    ldv_inline_asm();
    #line 26 
    break;
    #line 26 
    default: 
             #line 26 
    ;
    #line 26 
    __bad_percpu_size();
  }
  #line 26 
  return pfo_ret__ & 2147483647;
}

#line 302  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockdep.h"
#line 302 
void lockdep_init_map(struct lockdep_map *, char *, struct lock_class_key *, int);
#line 95  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
#line 95 
void __raw_spin_lock_init(raw_spinlock_t *, char *, struct lock_class_key *);
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_api_smp.h"
#line 22 
void _raw_spin_lock(raw_spinlock_t *);
#line 29 
#line 29 
void _raw_spin_lock_irq(raw_spinlock_t *);
#line 39 
#line 39 
void _raw_spin_unlock(raw_spinlock_t *);
#line 41 
#line 41 
void _raw_spin_unlock_irq(raw_spinlock_t *);
#line 43 
#line 43 
void _raw_spin_unlock_irqrestore(raw_spinlock_t *, unsigned long);
#line 325  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
__inline static raw_spinlock_t *spinlock_check(spinlock_t *lock)
{
  #line 327 
  return & lock->__anonCompField_spinlock_25.rlock;
}

#line 336  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
static void spin_lock(spinlock_t *lock)
{
  #line 338 
  _raw_spin_lock(& lock->__anonCompField_spinlock_25.rlock);
  #line 339 
  return;
}

#line 340 
#line 872  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_usb.i.aux"
static void cif_spin_lock_lock_of_zd_mac(spinlock_t *lock);
#line 361  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
static void spin_lock_irq(spinlock_t *lock)
{
  #line 363 
  _raw_spin_lock_irq(& lock->__anonCompField_spinlock_25.rlock);
  #line 364 
  return;
}

#line 365 
#line 898  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_usb.i.aux"
static void cif_spin_lock_irq_lock_of_zd_usb_interrupt(spinlock_t *lock);
#line 365  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
#line 950  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_usb.i.aux"
static void cif_spin_lock_irq_lock_of_zd_usb_rx(spinlock_t *lock);
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
static void spin_unlock(spinlock_t *lock)
{
  #line 378 
  _raw_spin_unlock(& lock->__anonCompField_spinlock_25.rlock);
  #line 379 
  return;
}

#line 380 
#line 881  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_usb.i.aux"
static void cif_spin_unlock_lock_of_zd_mac(spinlock_t *lock);
#line 386  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
static void spin_unlock_irq(spinlock_t *lock)
{
  #line 388 
  _raw_spin_unlock_irq(& lock->__anonCompField_spinlock_25.rlock);
  #line 389 
  return;
}

#line 390 
#line 907  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_usb.i.aux"
static void cif_spin_unlock_irq_lock_of_zd_usb_interrupt(spinlock_t *lock);
#line 390  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
#line 959  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_usb.i.aux"
static void cif_spin_unlock_irq_lock_of_zd_usb_rx(spinlock_t *lock);
#line 391  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
static void spin_unlock_irqrestore(spinlock_t *lock, unsigned long flags)
{
  {
    #line 393 
    unsigned long __dummy;
    #line 393 
    unsigned long __dummy2;
    }
  #line 393 
  _raw_spin_unlock_irqrestore(& lock->__anonCompField_spinlock_25.rlock,flags);
  #line 395 
  return;
}

#line 395 
#line 863  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_usb.i.aux"
static void cif_spin_unlock_irqrestore_lock_of_zd_usb_interrupt(spinlock_t *lock, unsigned long flags);
#line 395  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
#line 941  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_usb.i.aux"
static void cif_spin_unlock_irqrestore_lock_of_zd_usb_rx(spinlock_t *lock, unsigned long flags);
#line 395  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
#line 991  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_usb.i.aux"
static void cif_spin_unlock_irqrestore_lock_of_zd_usb_tx(spinlock_t *lock, unsigned long flags);
#line 395  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
#line 1009  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_usb.i.aux"
static void cif_spin_unlock_irqrestore_lock_of_sk_buff_head(spinlock_t *lock, unsigned long flags);
#line 26 
#line 968 
static void cif_mutex_lock_setup_mutex_of_zd_usb_rx(struct mutex *lock);
#line 26 
#line 1034 
static void cif_mutex_lock_mutex_of_zd_chip(struct mutex *lock);
#line 29 
#line 29 
void ldv_mutex_model_lock(struct mutex *, char *);
#line 31 
#line 31 
void ldv_mutex_model_unlock(struct mutex *, char *);
#line 33 
#line 33 
void __ldv_spin_lock(spinlock_t *);
#line 35 
#line 854 
static void cif___ldv_spin_lock_lock_of_zd_usb_interrupt(spinlock_t *lock);
#line 35 
#line 932 
static void cif___ldv_spin_lock_lock_of_zd_usb_rx(spinlock_t *lock);
#line 35 
#line 982 
static void cif___ldv_spin_lock_lock_of_zd_usb_tx(spinlock_t *lock);
#line 35 
#line 1000 
static void cif___ldv_spin_lock_lock_of_sk_buff_head(spinlock_t *lock);
#line 40 
#line 40 
void ldv_spin_model_lock(char *);
#line 41 
#line 41 
void ldv_spin_model_unlock(char *);
#line 51 
#line 51 
int ldv_request_firmware(struct firmware **fw);
#line 52 
#line 52 
void ldv_release_firmware(struct firmware *fw);
#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/bitmap.h"
#line 21 
void ldv_set_bit(long nr, unsigned long *addr);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/list.h"
#line 23 
void ldv_init_list_head(struct list_head *list);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 23 
void *ldv_kzalloc(size_t size, gfp_t flags);
#line 24 
#line 24 
void *ldv_kmalloc(size_t size, gfp_t flags);
#line 25 
#line 25 
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags);
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/wait.h"
#line 61 
void __init_waitqueue_head(struct wait_queue_head *, char *, struct lock_class_key *);
#line 85  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/completion.h"
__inline static void __init_completion(struct completion *x)
{
  #line 87 
  x->done = 0U;
  {
    #line 88 
    struct lock_class_key __key;
    #line 88 
    __init_waitqueue_head(& x->wait,(char *)"&x->wait",& __key);
  }
  #line 90 
  return;
}

#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/completion.h"
__inline static void reinit_completion(struct completion *x)
{
  #line 100 
  x->done = 0U;
  #line 101 
  return;
}

#line 107 
#line 107 
unsigned long wait_for_completion_timeout(struct completion *, unsigned long);
#line 118 
#line 118 
void complete(struct completion *);
#line 128  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mutex.h"
#line 128 
void __mutex_init(struct mutex *, char *, struct lock_class_key *);
#line 137 
#line 137 
bool mutex_is_locked(struct mutex *);
#line 185 
#line 975  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_usb.i.aux"
static void cif_mutex_unlock_setup_mutex_of_zd_usb_rx(struct mutex *lock);
#line 185  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mutex.h"
#line 1041  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_usb.i.aux"
static void cif_mutex_unlock_mutex_of_zd_chip(struct mutex *lock);
#line 81  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jiffies.h"
#line 81 
extern unsigned long jiffies;
#line 302 
#line 302 
unsigned long __msecs_to_jiffies(unsigned int);
#line 309  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jiffies.h"
__inline static unsigned long _msecs_to_jiffies(unsigned int m)
{
  #line 311 
  return (unsigned long)(((long)m + 3L) / 4L);
}

#line 364  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jiffies.h"
__inline static unsigned long msecs_to_jiffies(unsigned int m)
{
  #line 366 
  if (0 != 0) {
    #line 367 
    if ((int)m < 0) 
                    #line 368 
                    return 4611686018427387902UL;
    #line 369 
    return _msecs_to_jiffies(m);
  }
  else {
    #line 371 
    return __msecs_to_jiffies(m);
  }
}

#line 90  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
#line 90 
void init_timer_key(struct timer_list *, void (*)(struct timer_list *), unsigned int, char *, struct lock_class_key *);
#line 211 
#line 211 
unsigned long round_jiffies_relative(unsigned long);
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/workqueue.h"
#line 22 
void delayed_work_timer_fn(struct timer_list *);
#line 207 
#line 207 
void __init_work(struct work_struct *, int);
#line 407 
#line 407 
struct workqueue_struct *alloc_workqueue(char *, unsigned int, int , ...);
#line 436 
#line 436 
void destroy_workqueue(struct workqueue_struct *);
#line 450 
#line 450 
bool mod_delayed_work_on(int, struct workqueue_struct *, struct delayed_work *, unsigned long);
#line 466 
#line 466 
bool cancel_delayed_work_sync(struct delayed_work *);
#line 511 
#line 337  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_usb.i.aux"
static bool cif_queue_delayed_work(struct workqueue_struct *wq, struct delayed_work *dwork, unsigned long delay);
#line 520  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/workqueue.h"
__inline static bool mod_delayed_work(struct workqueue_struct *wq, struct delayed_work *dwork, unsigned long delay)
{
  #line 524 
  return mod_delayed_work_on(8192,wq,dwork,delay);
}

#line 554 
#line 698  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_usb.i.aux"
static bool cif_schedule_work(struct work_struct *work);
#line 257  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/overflow.h"
#line 257 
extern int ( /* missing proto */ __builtin_mul_overflow)(unsigned long x_0, unsigned long x_1, size_t *x_2);
#line 297 
#line 297 
extern int ( /* missing proto */ __builtin_add_overflow)(unsigned long x_0, unsigned long x_1, size_t *x_2);
#line 291  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/overflow.h"
__inline static size_t __ab_c_size(size_t a, size_t b, size_t c)
{
  #line 297 
  size_t __b_0;
  #line 297 
  size_t *__d_0;
  #line 295 
  size_t __a;
  #line 295 
  size_t __b;
  #line 295 
  size_t *__d;
  #line 297 
  size_t __a_0;
  #line 293 
  size_t bytes;
  {
    #line 295 
    __a = a;
    #line 295 
    __b = b;
    #line 295 
    __d = & bytes;
    #line 295 
    int tmp = & __a == __d;
    }
  #line 295 
  if (__builtin_mul_overflow(__a,__b,__d) != 0) 
                                                #line 296 
                                                return 18446744073709551615UL;
  {
    #line 297 
    __a_0 = bytes;
    #line 297 
    __b_0 = c;
    #line 297 
    __d_0 = & bytes;
    #line 297 
    int tmp_3 = & __a_0 == __d_0;
    }
  #line 297 
  if (__builtin_add_overflow(__a_0,__b_0,__d_0) != 0) 
                                                      #line 298 
                                                      return 18446744073709551615UL;
  #line 300 
  return bytes;
}

#line 45  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/firmware.h"
#line 840  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_usb.i.aux"
static int cif_request_firmware(struct firmware **fw, char *name, struct device *device);
#line 57  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/firmware.h"
#line 847  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_usb.i.aux"
static void cif_release_firmware(struct firmware *fw);
#line 89  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kobject.h"
__inline static char *kobject_name(struct kobject *kobj)
{
  #line 91 
  return kobj->name;
}

#line 1370  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
__inline static char *dev_name(struct device *dev)
{
  #line 1373 
  if (dev->init_name != (char *)0) 
                                   #line 1374 
                                   return dev->init_name;
  #line 1376 
  return kobject_name(& dev->kobj);
}

#line 1417  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
__inline static void *dev_get_drvdata(struct device *dev)
{
  #line 1419 
  return dev->driver_data;
}

#line 1422  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
__inline static void dev_set_drvdata(struct device *dev, void *data)
{
  #line 1424 
  dev->driver_data = data;
  #line 1425 
  return;
}

#line 1703 
#line 1703 
void dev_printk(char *, struct device *, char * , ...);
#line 1712 
#line 1712 
void _dev_err(struct device *, char * , ...);
#line 1714 
#line 1714 
void _dev_warn(struct device *, char * , ...);
#line 1718 
#line 1718 
void _dev_info(struct device *, char * , ...);
#line 189  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/slab.h"
#line 189 
void kfree(void *);
#line 542 
#line 483  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_usb.i.aux"
static void *kmalloc(size_t size, gfp_t flags);
#line 607  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/slab.h"
#line 497  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_usb.i.aux"
static void *kcalloc(size_t n, size_t size, gfp_t flags);
#line 668  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/slab.h"
#line 518  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_usb.i.aux"
static void *kzalloc(size_t size, gfp_t flags);
#line 1493  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static int skb_queue_empty(struct sk_buff_head *list)
{
  #line 1495 
  return list->next == (struct sk_buff *)list;
}

#line 1827  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static void __skb_queue_head_init(struct sk_buff_head *list)
{
  #line 1829 
  list->next = ((struct sk_buff *)list);
  #line 1829 
  list->prev = ((struct sk_buff *)list);
  #line 1830 
  list->qlen = 0U;
  #line 1831 
  return;
}

#line 1841  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static void skb_queue_head_init(struct sk_buff_head *list)
{
  #line 1843 
  spinlock_check(& list->lock);
  {
    #line 1843 
    struct lock_class_key __key;
    #line 1843 
    __raw_spin_lock_init(& list->lock.__anonCompField_spinlock_25.rlock,(char *)"&(&list->lock)->rlock",& __key);
  }
  #line 1844 
  __skb_queue_head_init(list);
  #line 1845 
  return;
}

#line 2011 
#line 2011 
void skb_queue_tail(struct sk_buff_head *, struct sk_buff *);
#line 2017 
#line 2017 
void skb_unlink(struct sk_buff *, struct sk_buff_head *);
#line 496  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
__inline static int usb_endpoint_dir_out(struct usb_endpoint_descriptor *epd)
{
  #line 499 
  return ((int)epd->bEndpointAddress & 128) == 0;
}

#line 508  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
__inline static int usb_endpoint_xfer_bulk(struct usb_endpoint_descriptor *epd)
{
  #line 511 
  return ((int)epd->bmAttributes & 3) == 2;
}

#line 535  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
__inline static int usb_endpoint_xfer_int(struct usb_endpoint_descriptor *epd)
{
  #line 538 
  return ((int)epd->bmAttributes & 3) == 3;
}

#line 655  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/interrupt.h"
#line 924  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_usb.i.aux"
static void cif_tasklet_schedule(struct tasklet_struct *t);
#line 683  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/interrupt.h"
#line 683 
void tasklet_kill(struct tasklet_struct *);
#line 263  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
__inline static void *usb_get_intfdata(struct usb_interface *intf)
{
  #line 265 
  return dev_get_drvdata(& intf->dev);
}

#line 268  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
__inline static void usb_set_intfdata(struct usb_interface *intf, void *data)
{
  #line 270 
  dev_set_drvdata(& intf->dev,data);
  #line 271 
  return;
}

#line 273 
#line 273 
struct usb_interface *usb_get_intf(struct usb_interface *);
#line 274 
#line 274 
void usb_put_intf(struct usb_interface *);
#line 714  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
__inline static struct usb_device *interface_to_usbdev(struct usb_interface *intf)
{
  #line 716 
  void *__mptr;
  #line 716 
  __mptr = (void *)intf->dev.parent;
  #line 716 
  return ((struct usb_device *)(__mptr + 18446744073709551456U));
}

#line 746 
#line 1018  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_usb.i.aux"
static int cif_usb_reset_device(struct usb_device *dev);
#line 745  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
#line 745 
void usb_queue_reset_device(struct usb_interface *);
#line 1276 
#line 1048  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_usb.i.aux"
static int cif_usb_register_driver(struct usb_driver *ldv_func_arg1, struct module *ldv_func_arg2, char *ldv_func_arg3);
#line 1282  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
#line 1056  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_usb.i.aux"
static void cif_usb_deregister(struct usb_driver *ldv_func_arg1);
#line 1357  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
__inline static void init_usb_anchor(struct usb_anchor *anchor)
{
  #line 1359 
  memset((void *)anchor,0,184UL);
  #line 1360 
  INIT_LIST_HEAD(& anchor->urb_list);
  {
    #line 1361 
    struct lock_class_key __key;
    #line 1361 
    __init_waitqueue_head(& anchor->wait,(char *)"&anchor->wait",& __key);
  }
  #line 1362 
  spinlock_check(& anchor->lock);
  {
    #line 1362 
    struct lock_class_key __key_0;
    #line 1362 
    __raw_spin_lock_init(& anchor->lock.__anonCompField_spinlock_25.rlock,(char *)"&(&anchor->lock)->rlock",& __key_0);
  }
  #line 1365 
  return;
}

#line 1636  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
__inline static void usb_fill_bulk_urb(struct urb *urb, struct usb_device *dev, unsigned int pipe, void *transfer_buffer, int buffer_length, void (*complete_fn)(struct urb *), void *context)
{
  #line 1644 
  urb->dev = dev;
  #line 1645 
  urb->pipe = pipe;
  #line 1646 
  urb->transfer_buffer = transfer_buffer;
  #line 1647 
  urb->transfer_buffer_length = (unsigned int)buffer_length;
  #line 1648 
  urb->complete = complete_fn;
  #line 1649 
  urb->context = context;
  #line 1650 
  return;
}

#line 1677  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
__inline static void usb_fill_int_urb(struct urb *urb, struct usb_device *dev, unsigned int pipe, void *transfer_buffer, int buffer_length, void (*complete_fn)(struct urb *), void *context, int interval)
{
  #line 1686 
  urb->dev = dev;
  #line 1687 
  urb->pipe = pipe;
  #line 1688 
  urb->transfer_buffer = transfer_buffer;
  #line 1689 
  urb->transfer_buffer_length = (unsigned int)buffer_length;
  #line 1690 
  urb->complete = complete_fn;
  #line 1691 
  urb->context = context;
  #line 1693 
  if (dev->speed == (unsigned int)USB_SPEED_HIGH || dev->speed > (unsigned int)USB_SPEED_WIRELESS) {
    #line 1695 
    int tmp_1;
    #line 1695 
    int __UNIQUE_ID___x425;
    {
      #line 1695 
      int tmp;
      #line 1695 
      int __UNIQUE_ID___x423;
      {
        #line 1695 
        __UNIQUE_ID___x423 = interval;
        #line 1695 
        int __UNIQUE_ID___y424 = 1;
        #line 1695 
        if (__UNIQUE_ID___x423 > __UNIQUE_ID___y424) 
                                                     #line 1695 
                                                     tmp = __UNIQUE_ID___x423; else 
                                                                    #line 1695 
                                                                    tmp = __UNIQUE_ID___y424;
        }
      #line 1695 
      __UNIQUE_ID___x425 = tmp;
      #line 1695 
      int __UNIQUE_ID___y426 = 16;
      #line 1695 
      if (__UNIQUE_ID___x425 < __UNIQUE_ID___y426) 
                                                   #line 1695 
                                                   tmp_1 = __UNIQUE_ID___x425; else 
                                                                    #line 1695 
                                                                    tmp_1 = __UNIQUE_ID___y426;
      }
    #line 1695 
    interval = tmp_1;
    #line 1697 
    urb->interval = 1 << (interval + -1);
  }
  else 
       #line 1699 
       urb->interval = interval;
  #line 1702 
  urb->start_frame = -1;
  #line 1703 
  return;
}

#line 1706 
#line 1706 
struct urb *usb_alloc_urb(int, gfp_t);
#line 1707 
#line 1707 
void usb_free_urb(struct urb *);
#line 1711 
#line 890  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_usb.i.aux"
static int cif_usb_submit_urb(struct urb *urb, gfp_t mem_flags);
#line 1713  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
#line 916  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_usb.i.aux"
static void cif_usb_kill_urb(struct urb *urb);
#line 1715  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
#line 1715 
void usb_kill_anchored_urbs(struct usb_anchor *);
#line 1721 
#line 1721 
void usb_anchor_urb(struct urb *, struct usb_anchor *);
#line 1722 
#line 1722 
void usb_unanchor_urb(struct urb *);
#line 1723 
#line 1723 
int usb_wait_anchor_empty_timeout(struct usb_anchor *, unsigned int);
#line 1727 
#line 1727 
int usb_anchor_empty(struct usb_anchor *);
#line 1758 
#line 1758 
void *usb_alloc_coherent(struct usb_device *, size_t, gfp_t, dma_addr_t *);
#line 1760 
#line 1760 
void usb_free_coherent(struct usb_device *, size_t, void *, dma_addr_t);
#line 1783 
#line 1783 
int usb_control_msg(struct usb_device *, unsigned int, __u8, __u8, __u16, __u16, void *, __u16, int);
#line 1786 
#line 1786 
int usb_interrupt_msg(struct usb_device *, unsigned int, void *, int, int *, int);
#line 1788 
#line 1788 
int usb_bulk_msg(struct usb_device *, unsigned int, void *, int, int *, int);
#line 1816 
#line 1816 
int usb_reset_configuration(struct usb_device *);
#line 1925  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
__inline static unsigned int __create_pipe(struct usb_device *dev, unsigned int endpoint)
{
  #line 1928 
  return (unsigned int)(dev->devnum << 8) | (endpoint << 15);
}

#line 1950  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
__inline static struct usb_host_endpoint *usb_pipe_endpoint(struct usb_device *dev, unsigned int pipe)
{
  #line 1952 
  struct usb_host_endpoint **eps;
  #line 1953 
  if ((pipe & 128U) != 0U) 
                           #line 1953 
                           eps = (struct usb_host_endpoint **)(& dev->ep_in); else 
                                                                    #line 1953 
                                                                    eps = (struct usb_host_endpoint **)(& dev->ep_out);
  #line 1954 
  return *(eps + ((unsigned long)(pipe >> 15) & (unsigned long)15U));
}

#line 8  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/unaligned/access_ok.h"
__inline static u16 get_unaligned_le16(void *p)
{
  #line 10 
  return __le16_to_cpup((__le16 *)p);
}

#line 4760  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
__inline static char *wiphy_name(struct wiphy *wiphy)
{
  #line 4762 
  return dev_name(& wiphy->dev);
}

#line 1114  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
__inline static struct ieee80211_tx_info *IEEE80211_SKB_CB(struct sk_buff *skb)
{
  #line 1116 
  return (struct ieee80211_tx_info *)(& skb->cb);
}

#line 4135 
#line 4135 
int ieee80211_register_hw(struct ieee80211_hw *);
#line 4289 
#line 4289 
void ieee80211_unregister_hw(struct ieee80211_hw *);
#line 4301 
#line 1026  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_usb.i.aux"
static void cif_ieee80211_free_hw(struct ieee80211_hw *hw);
#line 5199  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
#line 5199 
void ieee80211_stop_queues(struct ieee80211_hw *);
#line 5207 
#line 5207 
void ieee80211_wake_queues(struct ieee80211_hw *);
#line 220  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.h"
__inline static struct usb_device *zd_usb_to_usbdev(struct zd_usb *usb)
{
  #line 222 
  return interface_to_usbdev(usb->intf);
}

#line 225  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.h"
__inline static struct ieee80211_hw *zd_intf_to_hw(struct usb_interface *intf)
{
  #line 227 
  return (struct ieee80211_hw *)usb_get_intfdata(intf);
}

#line 230  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.h"
__inline static struct ieee80211_hw *zd_usb_to_hw(struct zd_usb *usb)
{
  #line 232 
  return zd_intf_to_hw(usb->intf);
}

#line 235 
#line 1201  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c"
void zd_usb_init(struct zd_usb *usb, struct ieee80211_hw *hw, struct usb_interface *intf);
#line 237  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.h"
#line 1318  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c"
int zd_usb_init_hw(struct zd_usb *usb);
#line 238  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.h"
#line 1213  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c"
void zd_usb_clear(struct zd_usb *usb);
#line 240  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.h"
#line 1244  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c"
int zd_usb_scnprint_id(struct zd_usb *usb, char *buffer, size_t size);
#line 242  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.h"
#line 1107  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c"
void zd_tx_watchdog_enable(struct zd_usb *usb);
#line 243  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.h"
#line 1119  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c"
void zd_tx_watchdog_disable(struct zd_usb *usb);
#line 245  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.h"
#line 515  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c"
int zd_usb_enable_int(struct zd_usb *usb);
#line 246  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.h"
#line 578  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c"
void zd_usb_disable_int(struct zd_usb *usb);
#line 248  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.h"
#line 801  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c"
int zd_usb_enable_rx(struct zd_usb *usb);
#line 249  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.h"
#line 842  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c"
void zd_usb_disable_rx(struct zd_usb *usb);
#line 251  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.h"
#line 1152  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c"
void zd_usb_reset_rx_idle_timer(struct zd_usb *usb);
#line 253  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.h"
#line 911  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c"
void zd_usb_enable_tx(struct zd_usb *usb);
#line 254  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.h"
#line 883  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c"
void zd_usb_disable_tx(struct zd_usb *usb);
#line 256  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.h"
#line 1019  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c"
int zd_usb_tx(struct zd_usb *usb, struct sk_buff *skb);
#line 258  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.h"
#line 1697  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c"
int zd_usb_ioread16v(struct zd_usb *usb, u16 *values, zd_addr_t *addresses, unsigned int count);
#line 261  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.h"
__inline static int zd_usb_ioread16(struct zd_usb *usb, u16 *value, zd_addr_t addr)
{
  #line 264 
  return zd_usb_ioread16v(usb,value,& addr,1U);
}

#line 267 
#line 1817  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c"
void zd_usb_iowrite16v_async_start(struct zd_usb *usb);
#line 268  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.h"
#line 1830  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c"
int zd_usb_iowrite16v_async_end(struct zd_usb *usb, unsigned int timeout);
#line 269  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.h"
#line 1866  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c"
int zd_usb_iowrite16v_async(struct zd_usb *usb, struct zd_ioreq16 *ioreqs, unsigned int count);
#line 271  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.h"
#line 1949  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c"
int zd_usb_iowrite16v(struct zd_usb *usb, struct zd_ioreq16 *ioreqs, unsigned int count);
#line 274  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.h"
#line 1963  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c"
int zd_usb_rfwrite(struct zd_usb *usb, u32 value, u8 bits);
#line 276  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.h"
#line 325  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c"
int zd_usb_read_fw(struct zd_usb *usb, zd_addr_t addr, u8 *data, u16 len);
#line 1539  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c"
struct workqueue_struct *zd_workqueue;
#line 771  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.h"
__inline static struct zd_chip *zd_usb_to_chip(struct zd_usb *usb)
{
  #line 773 
  void *__mptr;
  #line 773 
  __mptr = (void *)usb;
  #line 773 
  return ((struct zd_chip *)__mptr);
}

#line 273  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_mac.h"
__inline static struct zd_mac *zd_hw_mac(struct ieee80211_hw *hw)
{
  #line 275 
  return (struct zd_mac *)hw->priv;
}

#line 278  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_mac.h"
__inline static struct zd_mac *zd_chip_to_mac(struct zd_chip *chip)
{
  #line 280 
  void *__mptr;
  #line 280 
  __mptr = (void *)chip;
  #line 280 
  return ((struct zd_mac *)__mptr);
}

#line 283  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_mac.h"
__inline static struct zd_mac *zd_usb_to_mac(struct zd_usb *usb)
{
  #line 285 
  return zd_chip_to_mac(zd_usb_to_chip(usb));
}

#line 295 
#line 295 
struct ieee80211_hw *zd_mac_alloc_hw(struct usb_interface *intf);
#line 296 
#line 296 
void zd_mac_clear(struct zd_mac *mac);
#line 298 
#line 298 
int zd_mac_preinit_hw(struct ieee80211_hw *hw);
#line 299 
#line 299 
int zd_mac_init_hw(struct ieee80211_hw *hw);
#line 301 
#line 301 
int zd_mac_rx(struct ieee80211_hw *hw, u8 *buffer, unsigned int length);
#line 302 
#line 302 
void zd_mac_tx_failed(struct urb *urb);
#line 303 
#line 303 
void zd_mac_tx_to_dev(struct sk_buff *skb, int error);
#line 305 
#line 305 
int zd_op_start(struct ieee80211_hw *hw);
#line 306 
#line 306 
void zd_op_stop(struct ieee80211_hw *hw);
#line 307 
#line 307 
int zd_restore_settings(struct zd_mac *mac);
#line 26  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c"
static struct usb_device_id usb_ids[60U] = {{.match_flags = (unsigned short)3U, .idVendor = (unsigned short)261U, .idProduct = (unsigned short)5215U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)1414U, .idProduct = (unsigned short)13313U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)1414U, .idProduct = (unsigned short)13314U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)1414U, .idProduct = (unsigned short)13319U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)1414U, .idProduct = (unsigned short)13321U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)1947U, .idProduct = (unsigned short)74U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)1976U, .idProduct = (unsigned short)24577U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)2766U, .idProduct = (unsigned short)4625U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)2766U, .idProduct = (unsigned short)41489U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)2821U, .idProduct = (unsigned short)5900U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)2875U, .idProduct = (unsigned short)5680U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)2875U, .idProduct = (unsigned short)22064U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)3574U, .idProduct = (unsigned short)36977U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)3574U, .idProduct = (unsigned short)36981U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)4719U, .idProduct = (unsigned short)40966U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)4763U, .idProduct = (unsigned short)5734U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)5041U, .idProduct = (unsigned short)30U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)5173U, .idProduct = (unsigned short)1809U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)5354U, .idProduct = (unsigned short)43792U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)5354U, .idProduct = (unsigned short)43795U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)5502U, .idProduct = (unsigned short)12298U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)5502U, .idProduct = (unsigned short)12299U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)5502U, .idProduct = (unsigned short)12804U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)5502U, .idProduct = (unsigned short)12807U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)5952U, .idProduct = (unsigned short)8192U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)26769U, .idProduct = (unsigned short)42791U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)83U, .idProduct = (unsigned short)21249U, .driver_info = 1UL}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)1033U, .idProduct = (unsigned short)584U, .driver_info = 1UL}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)1041U, .idProduct = (unsigned short)218U, .driver_info = 1UL}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)1137U, .idProduct = (unsigned short)4662U, .driver_info = 1UL}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)1137U, .idProduct = (unsigned short)4663U, .driver_info = 1UL}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)1293U, .idProduct = (unsigned short)28764U, .driver_info = 1UL}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)1356U, .idProduct = (unsigned short)599U, .driver_info = 1UL}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)1414U, .idProduct = (unsigned short)13322U, .driver_info = 1UL}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)1414U, .idProduct = (unsigned short)13327U, .driver_info = 1UL}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)1414U, .idProduct = (unsigned short)13328U, .driver_info = 1UL}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)1414U, .idProduct = (unsigned short)13330U, .driver_info = 1UL}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)1414U, .idProduct = (unsigned short)13331U, .driver_info = 1UL}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)1947U, .idProduct = (unsigned short)98U, .driver_info = 1UL}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)1976U, .idProduct = (unsigned short)24577U, .driver_info = 1UL}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)2042U, .idProduct = (unsigned short)4502U, .driver_info = 1UL}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)2106U, .idProduct = (unsigned short)17669U, .driver_info = 1UL}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)2106U, .idProduct = (unsigned short)58625U, .driver_info = 1UL}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)2106U, .idProduct = (unsigned short)58627U, .driver_info = 1UL}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)2106U, .idProduct = (unsigned short)58630U, .driver_info = 1UL}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)2766U, .idProduct = (unsigned short)4629U, .driver_info = 1UL}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)2766U, .idProduct = (unsigned short)45589U, .driver_info = 1UL}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)2821U, .idProduct = (unsigned short)5915U, .driver_info = 1UL}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)2991U, .idProduct = (unsigned short)289U, .driver_info = 1UL}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)3294U, .idProduct = (unsigned short)26U, .driver_info = 1UL}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)3574U, .idProduct = (unsigned short)54U, .driver_info = 1UL}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)4763U, .idProduct = (unsigned short)5735U, .driver_info = 1UL}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)5041U, .idProduct = (unsigned short)36U, .driver_info = 1UL}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)5502U, .idProduct = (unsigned short)12301U, .driver_info = 1UL}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)5506U, .idProduct = (unsigned short)24579U, .driver_info = 1UL}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)8217U, .idProduct = (unsigned short)21251U, .driver_info = 1UL}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)8217U, .idProduct = (unsigned short)60673U, .driver_info = 1UL}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)2766U, .idProduct = (unsigned short)8209U, .driver_info = 2UL}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)2766U, .idProduct = (unsigned short)8447U, .driver_info = 2UL}};
#line 97  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c"
struct usb_device_id __mod_usb__usb_ids_device_table[60U];
#line 102 
#line 1623 
static bool check_read_regs(struct zd_usb *usb, struct usb_req_read_regs *req, unsigned int count);
#line 106 
#line 425 
static void int_urb_complete(struct urb *urb);
#line 108  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c"
static int request_fw_file(struct firmware **fw, char *name, struct device *device)
{
  #line 111 
  int r;
  #line 113 
  dev_printk((char *)"\001",device,(char *)"%s() ",(char *)"request_fw_file",name);
  #line 115 
  r = cif_request_firmware(fw,name,device);
  #line 116 
  if (r != 0) 
              #line 117 
              _dev_err(device,(char *)"Could not load firmware file %s. Error number %d\n",name,r);
  #line 120 
  return r;
}

#line 123  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c"
__inline static u16 get_bcdDevice(struct usb_device *udev)
{
  #line 125 
  return udev->descriptor.bcdDevice;
}

#line 135  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c"
static int upload_code(struct usb_device *udev, u8 *data, size_t size, u16 code_offset, int flags)
{
  #line 138 
  u8 *p;
  #line 139 
  int r;
  #line 143 
  p = (u8 *)kmalloc(4096UL,3264U);
  #line 144 
  if (p == (u8 *)0U) {
    #line 145 
    r = -12;
    #line 146 
    goto error;
  }
  #line 149 
  size &= 18446744073709551614UL;
  #line 150 
  while (size != 0UL) {
    #line 151 
    unsigned long tmp_0;
    #line 151 
    if (4096UL < size) 
                       #line 151 
                       tmp_0 = 4096UL; else 
                                            #line 151 
                                            tmp_0 = size;
    #line 151 
    size_t transfer_size = tmp_0;
    #line 154 
    dev_printk((char *)"\001",& udev->dev,(char *)"%s() ",(char *)"upload_code",transfer_size);
    #line 156 
    memcpy((void *)p,(void *)data,transfer_size);
    #line 157 
    ;
    #line 157 
    ;
    #line 157 
    ;
    #line 157 
    ;
    #line 157 
    r = usb_control_msg(udev,__create_pipe(udev,0U) | 2147483648U,(unsigned char)48,(unsigned char)64,(unsigned short)((int)code_offset),(unsigned short)0,(void *)p,(unsigned short)((int)((unsigned short)transfer_size)),1000);
    #line 161 
    if (r < 0) {
      #line 162 
      _dev_err(& udev->dev,(char *)"USB control request for firmware upload",r);
      #line 165 
      goto error;
    }
    #line 167 
    transfer_size = (unsigned long)(r & -2);
    #line 169 
    size -= transfer_size;
    #line 170 
    data += transfer_size;
    #line 171 
    code_offset = (unsigned short)((int)((unsigned short)(transfer_size / 2UL)) + (int)code_offset);
  }
  #line 174 
  if ((flags & 1) != 0) {
    #line 175 
    u8 ret;
    #line 178 
    ;
    #line 178 
    ;
    #line 178 
    r = usb_control_msg(udev,__create_pipe(udev,0U) | 2147483776U,(unsigned char)49,(unsigned char)192,(unsigned short)0,(unsigned short)0,(void *)p,(unsigned short)1,5000);
    #line 182 
    if (r != 1) {
      #line 183 
      _dev_err(& udev->dev,(char *)"control request firmware confirmation failed.",r);
      #line 186 
      if (r >= 0) 
                  #line 187 
                  r = -19;
      #line 188 
      goto error;
    }
    #line 190 
    ret = *p;
    #line 191 
    if (((int)ret & 128) != 0) {
      #line 192 
      _dev_err(& udev->dev,(char *)"Internal error while downloading.",(unsigned int)ret);
      #line 196 
      r = -19;
      #line 197 
      goto error;
    }
    #line 199 
    dev_printk((char *)"\001",& udev->dev,(char *)"%s() ",(char *)"upload_code",(unsigned int)ret);
  }
  #line 203 
  r = 0;
  #line 204 
  error: 
         #line 204 
  ;
  #line 205 
  kfree((void *)p);
  #line 206 
  return r;
}

#line 209  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c"
static u16 get_word(void *data, u16 offset)
{
  #line 211 
  __le16 *p = (__le16 *)data;
  #line 212 
  return *(p + (unsigned long)offset);
}

#line 215  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c"
static char *get_fw_name(struct zd_usb *usb, char *buffer, size_t size, char *postfix)
{
  #line 218 
  char *tmp;
  #line 218 
  ;
  #line 218 
  if ((unsigned int)usb->is_zd1211b != 0U) 
                                           #line 218 
                                           tmp = (char *)"zd1211/zd1211b_"; else 
                                                                    #line 218 
                                                                    tmp = (char *)"zd1211/zd1211_";
  #line 218 
  ;
  #line 218 
  ;
  #line 218 
  scnprintf(buffer,size,(char *)"%s%s",tmp,postfix);
  #line 222 
  return buffer;
}

#line 225  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c"
static int handle_version_mismatch(struct zd_usb *usb, struct firmware *ub_fw)
{
  #line 230 
  int offset;
  #line 232 
  char fw_name[128U];
  #line 228 
  struct usb_device *udev = zd_usb_to_usbdev(usb);
  #line 229 
  struct firmware *ur_fw = (struct firmware *)0;
  #line 231 
  int r = 0;
  #line 234 
  ;
  #line 234 
  r = request_fw_file(& ur_fw,get_fw_name(usb,(char *)(& fw_name),128UL,(char *)"ur"),& udev->dev);
  #line 237 
  if (r != 0) 
              #line 238 
              goto error;
  #line 240 
  r = upload_code(udev,ur_fw->data,ur_fw->size,(unsigned short)60928,1);
  #line 241 
  if (r != 0) 
              #line 242 
              goto error;
  #line 244 
  offset = 298;
  #line 245 
  r = upload_code(udev,ub_fw->data + (unsigned long)offset,ub_fw->size - (unsigned long)offset,(unsigned short)63637,1);
  #line 253 
  error: 
         #line 253 
  ;
  #line 254 
  cif_release_firmware(ur_fw);
  #line 255 
  return r;
}

#line 258  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c"
static int upload_firmware(struct zd_usb *usb)
{
  #line 260 
  int r;
  #line 261 
  u16 fw_bcdDevice;
  #line 262 
  u16 bcdDevice;
  #line 266 
  char fw_name[128U];
  #line 263 
  struct usb_device *udev = zd_usb_to_usbdev(usb);
  #line 264 
  struct firmware *ub_fw = (struct firmware *)0;
  #line 265 
  struct firmware *uph_fw = (struct firmware *)0;
  #line 268 
  bcdDevice = get_bcdDevice(udev);
  #line 270 
  ;
  #line 270 
  r = request_fw_file(& ub_fw,get_fw_name(usb,(char *)(& fw_name),128UL,(char *)"ub"),& udev->dev);
  #line 273 
  if (r != 0) 
              #line 274 
              goto error;
  #line 276 
  fw_bcdDevice = get_word((void *)ub_fw->data,(unsigned short)23);
  #line 278 
  if ((int)fw_bcdDevice != (int)bcdDevice) {
    #line 279 
    _dev_info(& udev->dev,(char *)"firmware version %#06x and device bootcode version ",(int)fw_bcdDevice,(int)bcdDevice);
    #line 282 
    if ((unsigned int)bcdDevice <= 17171U) 
                                           #line 283 
                                           _dev_warn(& udev->dev,(char *)"device has old bootcode, please ");
    #line 286 
    r = handle_version_mismatch(usb,ub_fw);
    #line 287 
    if (r != 0) 
                #line 288 
                goto error;
  }
  else 
       #line 290 
       dev_printk((char *)"\001",& udev->dev,(char *)"%s() ",(char *)"upload_firmware",(int)fw_bcdDevice);
  #line 296 
  ;
  #line 296 
  r = request_fw_file(& uph_fw,get_fw_name(usb,(char *)(& fw_name),128UL,(char *)"uphr"),& udev->dev);
  #line 299 
  if (r != 0) 
              #line 300 
              goto error;
  #line 302 
  r = upload_code(udev,uph_fw->data,uph_fw->size,(unsigned short)60928,1);
  #line 303 
  if (r != 0) 
              #line 304 
              _dev_err(& udev->dev,(char *)"Could not upload firmware code uph. Error number %d\n",r);
  #line 310 
  error: 
         #line 310 
  ;
  #line 311 
  cif_release_firmware(ub_fw);
  #line 312 
  cif_release_firmware(uph_fw);
  #line 313 
  return r;
}

#line 325  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c"
int zd_usb_read_fw(struct zd_usb *usb, zd_addr_t addr, u8 *data, u16 len)
{
  #line 327 
  int r;
  #line 329 
  u8 *buf;
  #line 328 
  struct usb_device *udev = zd_usb_to_usbdev(usb);
  #line 332 
  buf = (u8 *)kmalloc((unsigned long)len,3264U);
  #line 333 
  if (buf == (u8 *)0U) 
                       #line 334 
                       return -12;
  #line 335 
  ;
  #line 335 
  ;
  #line 335 
  ;
  #line 335 
  ;
  #line 335 
  r = usb_control_msg(udev,__create_pipe(udev,0U) | 2147483776U,(unsigned char)50,(unsigned char)192,(unsigned short)((int)addr),(unsigned short)0,(void *)buf,(unsigned short)((int)len),5000);
  #line 338 
  if (r < 0) {
    #line 339 
    _dev_err(& udev->dev,(char *)"read over firmware interface failed: %d\n",r);
    #line 341 
    goto exit;
  }
  else 
    #line 342 
    if ((int)len != r) {
      #line 343 
      _dev_err(& udev->dev,(char *)"incomplete read over firmware interface: %d/%d\n",r,(int)len);
      #line 346 
      r = -5;
      #line 347 
      goto exit;
    }
  #line 349 
  r = 0;
  #line 350 
  memcpy((void *)data,(void *)buf,(unsigned long)len);
  #line 351 
  exit: 
        #line 351 
  ;
  #line 352 
  kfree((void *)buf);
  #line 353 
  return r;
}

#line 358  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c"
__inline static void handle_regs_int_override(struct urb *urb)
{
  #line 362 
  unsigned long flags;
  #line 360 
  struct zd_usb *usb = (struct zd_usb *)urb->context;
  #line 361 
  struct zd_usb_interrupt *intr = & usb->intr;
  #line 364 
  cif___ldv_spin_lock_lock_of_zd_usb_interrupt(& intr->lock);
  #line 365 
  if (atomic_read(& intr->read_regs_enabled) != 0) {
    #line 366 
    atomic_set(& intr->read_regs_enabled,0);
    #line 367 
    intr->read_regs_int_overridden = (unsigned char)1U;
    #line 368 
    complete(& intr->read_regs.completion);
  }
  #line 370 
  cif_spin_unlock_irqrestore_lock_of_zd_usb_interrupt(& intr->lock,flags);
  #line 371 
  return;
}

#line 373  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c"
__inline static void handle_regs_int(struct urb *urb)
{
  #line 377 
  unsigned long flags;
  #line 378 
  int len;
  #line 379 
  u16 int_num;
  #line 375 
  struct zd_usb *usb = (struct zd_usb *)urb->context;
  #line 376 
  struct zd_usb_interrupt *intr = & usb->intr;
  #line 381 
  if ((long)(((unsigned long)preempt_count() & 2096896UL) == 0UL) != 0L) {
    {
      #line 381 
      bool branch;
      #line 381 
      struct _ddebug __UNIQUE_ID_ddebug576 = {.modname = (char *)"zd1211rw", .function = (char *)"handle_regs_int", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c", .format = (char *)"%s:%d ASSERT %s VIOLATED!\n", .lineno = (unsigned int)381U, .flags = (unsigned int)1U, .key = {.dd_key_true = {.key = {.enabled = {.counter = 1}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)1}}}}};
      {
        #line 381 
        int tmp_0;
        #line 381 
        if ((int)arch_static_branch(& __UNIQUE_ID_ddebug576.key.dd_key_true.key,
                         (_Bool)1) != 0) 
          #line 381 
          tmp_0 = 0; else 
                          #line 381 
                          tmp_0 = 1;
        #line 381 
        branch = (_Bool)(tmp_0 != 0);
        }
      #line 381 
      if ((long)((long)((int)branch != 0)) != 0L) 
                                                  #line 381 
                                                  __dynamic_pr_debug(& __UNIQUE_ID_ddebug576,(char *)"%s:%d ASSERT %s VIOLATED!\n",(char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c",381,(char *)"((preempt_count() & ((((1UL << (4))-1) << ((0 + 8) + 8)) | (((1UL << (8))-1) << (0 + 8)) | (((1UL << (1))-1) << (((0 + 8) + 8) + 4)))))");
    }
    #line 381 
    dump_stack();
  }
  #line 382 
  cif___ldv_spin_lock_lock_of_zd_usb_interrupt(& intr->lock);
  #line 384 
  int_num = *((__le16 *)(urb->transfer_buffer + 2U));
  #line 385 
  if ((unsigned int)int_num == 38160U) {
    #line 386 
    struct zd_mac *mac = zd_hw_mac(zd_usb_to_hw((struct zd_usb *)urb->context));
    #line 387 
    cif_spin_lock_lock_of_zd_mac(& mac->lock);
    #line 388 
    memcpy((void *)(& mac->intr_buffer),urb->transfer_buffer,64UL);
    #line 390 
    cif_spin_unlock_lock_of_zd_mac(& mac->lock);
    #line 391 
    cif_schedule_work(& mac->process_intr);
  }
  else {
    #line 392 
    if (atomic_read(& intr->read_regs_enabled) != 0) {
      #line 393 
      len = (int)urb->actual_length;
      #line 394 
      intr->read_regs.length = (int)urb->actual_length;
      #line 395 
      if ((unsigned int)len > 64U) 
                                   #line 396 
                                   len = 64;
      #line 398 
      memcpy((void *)(& intr->read_regs.buffer),urb->transfer_buffer,(unsigned long)len);
      #line 406 
      if (! check_read_regs(usb,intr->read_regs.req,intr->read_regs.req_count)) 
        #line 408 
        goto out;
      #line 410 
      atomic_set(& intr->read_regs_enabled,0);
      #line 411 
      intr->read_regs_int_overridden = (unsigned char)0U;
      #line 412 
      complete(& intr->read_regs.completion);
      #line 414 
      goto out;
    }
  }
  #line 417 
  out: 
       #line 417 
  ;
  #line 418 
  cif_spin_unlock_irqrestore_lock_of_zd_usb_interrupt(& intr->lock,flags);
  #line 421 
  if ((unsigned int)int_num == 38160U) {
    #line 421 
    if (atomic_read(& intr->read_regs_enabled) != 0) 
                                                     #line 422 
                                                     handle_regs_int_override(urb);
  }
  #line 423 
  return;
}

#line 425  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c"
static void int_urb_complete(struct urb *urb)
{
  #line 427 
  int r;
  #line 428 
  struct usb_int_header *hdr;
  #line 429 
  struct zd_usb *usb;
  #line 430 
  struct zd_usb_interrupt *intr;
  #line 432 
  switch (urb->status) {
    #line 433 
    case 0: 
            #line 433 
    ;
    #line 434 
    break;
    #line 435 
    case -108: 
               #line 435 
    ;
    #line 436 
    case -22: 
              #line 436 
    ;
    #line 437 
    case -19: 
              #line 437 
    ;
    #line 438 
    case -2: 
             #line 438 
    ;
    #line 439 
    case -104: 
               #line 439 
    ;
    #line 440 
    case -32: 
              #line 440 
    ;
    #line 441 
    dev_printk((char *)"\001",& (urb->dev)->dev,(char *)"%s() ",(char *)"int_urb_complete",urb,urb->status);
    #line 442 
    return;
    #line 443 
    default: 
             #line 443 
    ;
    #line 444 
    dev_printk((char *)"\001",& (urb->dev)->dev,(char *)"%s() ",(char *)"int_urb_complete",urb,urb->status);
    #line 445 
    goto resubmit;
  }
  #line 448 
  if (urb->actual_length <= 7U) {
    #line 449 
    dev_printk((char *)"\001",& (urb->dev)->dev,(char *)"%s() ",(char *)"int_urb_complete",urb);
    #line 450 
    goto resubmit;
  }
  #line 453 
  hdr = (struct usb_int_header *)urb->transfer_buffer;
  #line 454 
  if ((unsigned int)hdr->type != 1U) {
    #line 455 
    dev_printk((char *)"\001",& (urb->dev)->dev,(char *)"%s() ",(char *)"int_urb_complete",urb);
    #line 456 
    goto resubmit;
  }
  #line 462 
  usb = (struct zd_usb *)urb->context;
  #line 463 
  intr = & usb->intr;
  #line 464 
  if ((unsigned int)hdr->id != 144U) {
    #line 464 
    if (atomic_read(& intr->read_regs_enabled) != 0) 
                                                     #line 465 
                                                     handle_regs_int_override(urb);
  }
  #line 467 
  switch ((int)hdr->id) {
    #line 468 
    case 144: 
              #line 468 
    ;
    #line 469 
    handle_regs_int(urb);
    #line 470 
    break;
    #line 471 
    case 160: 
              #line 471 
    ;
    #line 472 
    zd_mac_tx_failed(urb);
    #line 473 
    break;
    #line 474 
    default: 
             #line 474 
    ;
    #line 475 
    dev_printk((char *)"\001",& (urb->dev)->dev,(char *)"%s() ",(char *)"int_urb_complete",urb,(unsigned int)hdr->id);
    #line 477 
    goto resubmit;
  }
  #line 480 
  resubmit: 
            #line 480 
  ;
  #line 481 
  r = cif_usb_submit_urb(urb,2592U);
  #line 482 
  if (r != 0) 
              #line 483 
              dev_printk((char *)"\001",& (urb->dev)->dev,(char *)"%s() ",(char *)"int_urb_complete",urb,r);
  #line 487 
  return;
}

#line 490  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c"
__inline static int int_urb_interval(struct usb_device *udev)
{
  #line 492 
  switch ((unsigned int)udev->speed) {
    #line 493 
    case (unsigned int)3: 
                          #line 493 
    ;
    #line 494 
    return 4;
    #line 495 
    case (unsigned int)1: 
                          #line 495 
    ;
    #line 496 
    return 10;
    #line 497 
    case (unsigned int)2: 
                          #line 497 
    ;
    #line 498 
    default: 
             #line 498 
    ;
    #line 499 
    return 1;
  }
}

#line 503  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c"
__inline static int usb_int_enabled(struct zd_usb *usb)
{
  #line 505 
  unsigned long flags;
  #line 507 
  struct urb *urb;
  #line 506 
  struct zd_usb_interrupt *intr = & usb->intr;
  #line 509 
  cif___ldv_spin_lock_lock_of_zd_usb_interrupt(& intr->lock);
  #line 510 
  urb = intr->urb;
  #line 511 
  cif_spin_unlock_irqrestore_lock_of_zd_usb_interrupt(& intr->lock,flags);
  #line 512 
  return urb != (struct urb *)0;
}

#line 515  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c"
int zd_usb_enable_int(struct zd_usb *usb)
{
  #line 530 
  unsigned long _flags;
  #line 517 
  int r;
  #line 520 
  struct urb *urb;
  #line 518 
  struct usb_device *udev = zd_usb_to_usbdev(usb);
  #line 519 
  struct zd_usb_interrupt *intr = & usb->intr;
  #line 522 
  dev_printk((char *)"\001",& (usb->intf)->dev,(char *)"%s() ",(char *)"zd_usb_enable_int");
  #line 524 
  urb = usb_alloc_urb(0,3264U);
  #line 525 
  if (urb == (struct urb *)0) {
    #line 526 
    r = -12;
    #line 527 
    goto out;
  }
  {
    #line 530 
    unsigned long __dummy;
    #line 530 
    unsigned long __dummy2;
    }
  #line 530 
  _flags = arch_local_save_flags();
  {
    #line 530 
    unsigned long __dummy_0;
    #line 530 
    unsigned long __dummy2_0;
    }
  #line 530 
  if ((long)(arch_irqs_disabled_flags(_flags) != 0) != 0L) {
    {
      #line 530 
      bool branch;
      #line 530 
      struct _ddebug __UNIQUE_ID_ddebug577 = {.modname = (char *)"zd1211rw", .function = (char *)"zd_usb_enable_int", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c", .format = (char *)"%s:%d ASSERT %s VIOLATED!\n", .lineno = (unsigned int)530U, .flags = (unsigned int)1U, .key = {.dd_key_true = {.key = {.enabled = {.counter = 1}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)1}}}}};
      {
        #line 530 
        int tmp_1;
        #line 530 
        if ((int)arch_static_branch(& __UNIQUE_ID_ddebug577.key.dd_key_true.key,
                           (_Bool)1) != 0) 
          #line 530 
          tmp_1 = 0; else 
                          #line 530 
                          tmp_1 = 1;
        #line 530 
        branch = (_Bool)(tmp_1 != 0);
        }
      #line 530 
      if ((long)((long)((int)branch != 0)) != 0L) 
                                                  #line 530 
                                                  __dynamic_pr_debug(& __UNIQUE_ID_ddebug577,(char *)"%s:%d ASSERT %s VIOLATED!\n",(char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c",530,(char *)"!({ unsigned long _flags; do { ({ unsigned long __dummy; typeof(_flags) __dummy2; (void)(&__dummy == &__dummy2); 1; }); _flags = arch_local_save_flags(); } while (0); ({ ({ unsigned long __dummy; typeof(_flags) __dummy2; (void)(&__dummy == &__dummy2); 1; }); arch_irqs_disabled_flags(_flags); }); })");
    }
    #line 530 
    dump_stack();
  }
  #line 531 
  cif_spin_lock_irq_lock_of_zd_usb_interrupt(& intr->lock);
  #line 532 
  if (intr->urb != (struct urb *)0) {
    #line 533 
    cif_spin_unlock_irq_lock_of_zd_usb_interrupt(& intr->lock);
    #line 534 
    r = 0;
    #line 535 
    goto error_free_urb;
  }
  #line 537 
  intr->urb = urb;
  #line 538 
  cif_spin_unlock_irq_lock_of_zd_usb_interrupt(& intr->lock);
  #line 540 
  r = -12;
  #line 541 
  intr->buffer = usb_alloc_coherent(udev,64UL,3264U,& intr->buffer_dma);
  #line 543 
  if (intr->buffer == (void *)0) {
    #line 544 
    dev_printk((char *)"\001",& (usb->intf)->dev,(char *)"%s() ",(char *)"zd_usb_enable_int");
    #line 546 
    goto error_set_urb_null;
  }
  #line 549 
  ;
  #line 549 
  ;
  #line 549 
  ;
  #line 549 
  ;
  #line 549 
  ;
  #line 549 
  usb_fill_int_urb(urb,udev,__create_pipe(udev,3U) | 1073741952U,intr->buffer,64,& int_urb_complete,(void *)usb,intr->interval);
  #line 553 
  urb->transfer_dma = intr->buffer_dma;
  #line 554 
  urb->transfer_flags |= 4U;
  #line 556 
  dev_printk((char *)"\001",& (usb->intf)->dev,(char *)"%s() ",(char *)"zd_usb_enable_int",intr->urb);
  #line 557 
  r = cif_usb_submit_urb(urb,3264U);
  #line 558 
  if (r != 0) {
    #line 559 
    dev_printk((char *)"\001",& (usb->intf)->dev,(char *)"%s() ",(char *)"zd_usb_enable_int",r);
    #line 561 
    goto error;
  }
  #line 564 
  return 0;
  #line 565 
  error: 
         #line 565 
  ;
  #line 566 
  usb_free_coherent(udev,64UL,intr->buffer,intr->buffer_dma);
  #line 568 
  error_set_urb_null: 
                      #line 568 
  ;
  #line 569 
  cif_spin_lock_irq_lock_of_zd_usb_interrupt(& intr->lock);
  #line 570 
  intr->urb = (struct urb *)0;
  #line 571 
  cif_spin_unlock_irq_lock_of_zd_usb_interrupt(& intr->lock);
  #line 572 
  error_free_urb: 
                  #line 572 
  ;
  #line 573 
  usb_free_urb(urb);
  #line 574 
  out: 
       #line 574 
  ;
  #line 575 
  return r;
}

#line 578  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c"
void zd_usb_disable_int(struct zd_usb *usb)
{
  #line 580 
  unsigned long flags;
  #line 583 
  struct urb *urb;
  #line 584 
  void *buffer;
  #line 585 
  dma_addr_t buffer_dma;
  #line 581 
  struct usb_device *udev = zd_usb_to_usbdev(usb);
  #line 582 
  struct zd_usb_interrupt *intr = & usb->intr;
  #line 587 
  cif___ldv_spin_lock_lock_of_zd_usb_interrupt(& intr->lock);
  #line 588 
  urb = intr->urb;
  #line 589 
  if (urb == (struct urb *)0) {
    #line 590 
    cif_spin_unlock_irqrestore_lock_of_zd_usb_interrupt(& intr->lock,flags);
    #line 591 
    return;
  }
  #line 593 
  intr->urb = (struct urb *)0;
  #line 594 
  buffer = intr->buffer;
  #line 595 
  buffer_dma = intr->buffer_dma;
  #line 596 
  intr->buffer = (void *)0;
  #line 597 
  cif_spin_unlock_irqrestore_lock_of_zd_usb_interrupt(& intr->lock,flags);
  #line 599 
  cif_usb_kill_urb(urb);
  #line 600 
  dev_printk((char *)"\001",& (usb->intf)->dev,(char *)"%s() ",(char *)"zd_usb_disable_int",urb);
  #line 601 
  usb_free_urb(urb);
  #line 603 
  if (buffer != (void *)0) 
                           #line 604 
                           usb_free_coherent(udev,64UL,buffer,buffer_dma);
  #line 605 
  return;
}

#line 608  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c"
static void handle_rx_packet(struct zd_usb *usb, u8 *buffer, unsigned int length)
{
  #line 611 
  int i;
  #line 612 
  struct rx_length_info *length_info;
  #line 614 
  if (length <= 7U) {
    #line 616 
    dev_printk((char *)"\001",& (usb->intf)->dev,(char *)"%s() ",(char *)"handle_rx_packet",length);
    #line 618 
    return;
  }
  #line 620 
  length_info = (struct rx_length_info *)(buffer + ((unsigned long)length + 18446744073709551608U));
  #line 631 
  if ((unsigned int)get_unaligned_le16((void *)(& length_info->tag)) == 27006U) {
    #line 633 
    unsigned int l;
    #line 633 
    unsigned int k;
    #line 633 
    unsigned int n;
    #line 634 
    i = 0;
    #line 634 
    l = 0U;
    #line 634 
    while (1) {
      {
        #line 635 
        k = (unsigned int)get_unaligned_le16((void *)(& length_info->length[i]));
        #line 636 
        if (k == 0U) 
                     #line 637 
                     return;
        #line 638 
        n = l + k;
        #line 639 
        if (n > length) 
                        #line 640 
                        return;
        #line 641 
        ;
        #line 641 
        ;
        #line 641 
        zd_mac_rx(zd_usb_to_hw(usb),buffer + (unsigned long)l,k);
        #line 642 
        if (i > 1) 
                   #line 643 
                   return;
        #line 644 
        l = (n + 3U) & 4294967292U;
      }
      #line 634 
      i ++;
    }
  }
  else {
    #line 647 
    ;
    #line 647 
    ;
    #line 647 
    zd_mac_rx(zd_usb_to_hw(usb),buffer,length);
  }
  #line 648 
  return;
}

#line 651  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c"
static void rx_urb_complete(struct urb *urb)
{
  #line 653 
  int r;
  #line 654 
  struct zd_usb *usb;
  #line 655 
  struct zd_usb_rx *rx;
  #line 656 
  u8 *buffer;
  #line 657 
  unsigned int length;
  #line 658 
  unsigned long flags;
  #line 660 
  switch (urb->status) {
    #line 661 
    case 0: 
            #line 661 
    ;
    #line 662 
    break;
    #line 663 
    case -108: 
               #line 663 
    ;
    #line 664 
    case -22: 
              #line 664 
    ;
    #line 665 
    case -19: 
              #line 665 
    ;
    #line 666 
    case -2: 
             #line 666 
    ;
    #line 667 
    case -104: 
               #line 667 
    ;
    #line 668 
    case -32: 
              #line 668 
    ;
    #line 669 
    dev_printk((char *)"\001",& (urb->dev)->dev,(char *)"%s() ",(char *)"rx_urb_complete",urb,urb->status);
    #line 670 
    return;
    #line 671 
    default: 
             #line 671 
    ;
    #line 672 
    dev_printk((char *)"\001",& (urb->dev)->dev,(char *)"%s() ",(char *)"rx_urb_complete",urb,urb->status);
    #line 673 
    goto resubmit;
  }
  #line 676 
  buffer = (u8 *)urb->transfer_buffer;
  #line 677 
  length = urb->actual_length;
  #line 678 
  usb = (struct zd_usb *)urb->context;
  #line 679 
  rx = & usb->rx;
  #line 681 
  cif_tasklet_schedule(& rx->reset_timer_tasklet);
  #line 683 
  if (length % rx->usb_packet_size > rx->usb_packet_size + 4294967292U) {
    #line 685 
    dev_printk((char *)"\001",& (urb->dev)->dev,(char *)"%s() ",(char *)"rx_urb_complete");
    #line 686 
    if ((long)(length > 9600U) != 0L) {
      {
        #line 686 
        bool branch;
        #line 686 
        struct _ddebug __UNIQUE_ID_ddebug578 = {.modname = (char *)"zd1211rw", .function = (char *)"rx_urb_complete", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c", .format = (char *)"%s:%d ASSERT %s VIOLATED!\n", .lineno = (unsigned int)686U, .flags = (unsigned int)1U, .key = {.dd_key_true = {.key = {.enabled = {.counter = 1}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)1}}}}};
        {
          #line 686 
          int tmp_0;
          #line 686 
          if ((int)arch_static_branch(& __UNIQUE_ID_ddebug578.key.dd_key_true.key,
                         (_Bool)1) != 0) 
            #line 686 
            tmp_0 = 0; else 
                            #line 686 
                            tmp_0 = 1;
          #line 686 
          branch = (_Bool)(tmp_0 != 0);
          }
        #line 686 
        if ((long)((long)((int)branch != 0)) != 0L) 
                                                    #line 686 
                                                    __dynamic_pr_debug(& __UNIQUE_ID_ddebug578,(char *)"%s:%d ASSERT %s VIOLATED!\n",(char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c",686,(char *)"length <= (sizeof(rx->fragment) / sizeof((rx->fragment)[0]) + ((int)(sizeof(struct { int:(-!!(__builtin_types_compatible_p(typeof((rx->fragment)), typeof(&(rx->fragment)[0])))); }))))");
      }
      #line 686 
      dump_stack();
    }
    #line 687 
    cif___ldv_spin_lock_lock_of_zd_usb_rx(& rx->lock);
    #line 688 
    memcpy((void *)(& rx->fragment),(void *)buffer,(unsigned long)length);
    #line 689 
    rx->fragment_length = length;
    #line 690 
    cif_spin_unlock_irqrestore_lock_of_zd_usb_rx(& rx->lock,flags);
    #line 691 
    goto resubmit;
  }
  #line 694 
  cif___ldv_spin_lock_lock_of_zd_usb_rx(& rx->lock);
  #line 695 
  if (rx->fragment_length != 0U) {
    #line 697 
    if ((long)(rx->fragment_length + length > 9600U) != 0L) {
      {
        #line 697 
        bool branch_0;
        #line 697 
        struct _ddebug __UNIQUE_ID_ddebug579 = {.modname = (char *)"zd1211rw", .function = (char *)"rx_urb_complete", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c", .format = (char *)"%s:%d ASSERT %s VIOLATED!\n", .lineno = (unsigned int)697U, .flags = (unsigned int)1U, .key = {.dd_key_true = {.key = {.enabled = {.counter = 1}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)1}}}}};
        {
          #line 697 
          int tmp_5;
          #line 697 
          if ((int)arch_static_branch(& __UNIQUE_ID_ddebug579.key.dd_key_true.key,
                           (_Bool)1) != 0) 
            #line 697 
            tmp_5 = 0; else 
                            #line 697 
                            tmp_5 = 1;
          #line 697 
          branch_0 = (_Bool)(tmp_5 != 0);
          }
        #line 697 
        if ((long)((long)((int)branch_0 != 0)) != 0L) 
                                                      #line 697 
                                                      __dynamic_pr_debug(& __UNIQUE_ID_ddebug579,(char *)"%s:%d ASSERT %s VIOLATED!\n",(char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c",697,(char *)"length + rx->fragment_length <= (sizeof(rx->fragment) / sizeof((rx->fragment)[0]) + ((int)(sizeof(struct { int:(-!!(__builtin_types_compatible_p(typeof((rx->fragment)), typeof(&(rx->fragment)[0])))); }))))");
      }
      #line 697 
      dump_stack();
    }
    #line 699 
    dev_printk((char *)"\001",& (urb->dev)->dev,(char *)"%s() ",(char *)"rx_urb_complete");
    #line 700 
    memcpy((void *)((u8 *)(& rx->fragment) + (unsigned long)rx->fragment_length),(void *)buffer,(unsigned long)length);
    #line 701 
    handle_rx_packet(usb,(u8 *)(& rx->fragment),rx->fragment_length + length);
    #line 703 
    rx->fragment_length = 0U;
    #line 704 
    cif_spin_unlock_irqrestore_lock_of_zd_usb_rx(& rx->lock,flags);
  }
  else {
    #line 706 
    cif_spin_unlock_irqrestore_lock_of_zd_usb_rx(& rx->lock,flags);
    #line 707 
    handle_rx_packet(usb,buffer,length);
  }
  #line 710 
  resubmit: 
            #line 710 
  ;
  #line 711 
  r = cif_usb_submit_urb(urb,2592U);
  #line 712 
  if (r != 0) 
              #line 713 
              dev_printk((char *)"\001",& (urb->dev)->dev,(char *)"%s() ",(char *)"rx_urb_complete",urb,r);
  #line 714 
  return;
}

#line 716  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c"
static struct urb *alloc_rx_urb(struct zd_usb *usb)
{
  #line 719 
  struct urb *urb;
  #line 720 
  void *buffer;
  #line 718 
  struct usb_device *udev = zd_usb_to_usbdev(usb);
  #line 722 
  urb = usb_alloc_urb(0,3264U);
  #line 723 
  if (urb == (struct urb *)0) 
                              #line 724 
                              return (struct urb *)0;
  #line 725 
  buffer = usb_alloc_coherent(udev,4800UL,3264U,& urb->transfer_dma);
  #line 727 
  if (buffer == (void *)0) {
    #line 728 
    usb_free_urb(urb);
    #line 729 
    return (struct urb *)0;
  }
  #line 732 
  ;
  #line 732 
  ;
  #line 732 
  ;
  #line 732 
  ;
  #line 732 
  usb_fill_bulk_urb(urb,udev,__create_pipe(udev,2U) | 3221225600U,buffer,4800,& rx_urb_complete,(void *)usb);
  #line 735 
  urb->transfer_flags |= 4U;
  #line 737 
  return urb;
}

#line 740  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c"
static void free_rx_urb(struct urb *urb)
{
  #line 742 
  if (urb == (struct urb *)0) 
                              #line 743 
                              return;
  #line 744 
  usb_free_coherent(urb->dev,(unsigned long)urb->transfer_buffer_length,urb->transfer_buffer,urb->transfer_dma);
  #line 746 
  usb_free_urb(urb);
  #line 747 
  return;
}

#line 749  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c"
static int __zd_usb_enable_rx(struct zd_usb *usb)
{
  #line 767 
  unsigned long _flags;
  #line 751 
  int i;
  #line 751 
  int r;
  #line 753 
  struct urb **urbs;
  #line 752 
  struct zd_usb_rx *rx = & usb->rx;
  #line 755 
  dev_printk((char *)"\001",& (usb->intf)->dev,(char *)"%s() ",(char *)"__zd_usb_enable_rx");
  #line 757 
  r = -12;
  #line 758 
  urbs = (struct urb **)kcalloc(5UL,8UL,3264U);
  #line 759 
  if (urbs == (struct urb **)0) 
                                #line 760 
                                goto error;
  #line 761 
  i = 0;
  #line 761 
  while (i <= 4) {
    #line 762 
    *(urbs + (unsigned long)i) = alloc_rx_urb(usb);
    #line 763 
    if (*(urbs + (unsigned long)i) == (struct urb *)0) 
                                                       #line 764 
                                                       goto error;
    #line 761 
    i ++;
  }
  {
    #line 767 
    unsigned long __dummy;
    #line 767 
    unsigned long __dummy2;
    }
  #line 767 
  _flags = arch_local_save_flags();
  {
    #line 767 
    unsigned long __dummy_0;
    #line 767 
    unsigned long __dummy2_0;
    }
  #line 767 
  if ((long)(arch_irqs_disabled_flags(_flags) != 0) != 0L) {
    {
      #line 767 
      bool branch;
      #line 767 
      struct _ddebug __UNIQUE_ID_ddebug580 = {.modname = (char *)"zd1211rw", .function = (char *)"__zd_usb_enable_rx", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c", .format = (char *)"%s:%d ASSERT %s VIOLATED!\n", .lineno = (unsigned int)767U, .flags = (unsigned int)1U, .key = {.dd_key_true = {.key = {.enabled = {.counter = 1}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)1}}}}};
      {
        #line 767 
        int tmp_1;
        #line 767 
        if ((int)arch_static_branch(& __UNIQUE_ID_ddebug580.key.dd_key_true.key,
                           (_Bool)1) != 0) 
          #line 767 
          tmp_1 = 0; else 
                          #line 767 
                          tmp_1 = 1;
        #line 767 
        branch = (_Bool)(tmp_1 != 0);
        }
      #line 767 
      if ((long)((long)((int)branch != 0)) != 0L) 
                                                  #line 767 
                                                  __dynamic_pr_debug(& __UNIQUE_ID_ddebug580,(char *)"%s:%d ASSERT %s VIOLATED!\n",(char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c",767,(char *)"!({ unsigned long _flags; do { ({ unsigned long __dummy; typeof(_flags) __dummy2; (void)(&__dummy == &__dummy2); 1; }); _flags = arch_local_save_flags(); } while (0); ({ ({ unsigned long __dummy; typeof(_flags) __dummy2; (void)(&__dummy == &__dummy2); 1; }); arch_irqs_disabled_flags(_flags); }); })");
    }
    #line 767 
    dump_stack();
  }
  #line 768 
  cif_spin_lock_irq_lock_of_zd_usb_rx(& rx->lock);
  #line 769 
  if (rx->urbs != (struct urb **)0) {
    #line 770 
    cif_spin_unlock_irq_lock_of_zd_usb_rx(& rx->lock);
    #line 771 
    r = 0;
    #line 772 
    goto error;
  }
  #line 774 
  rx->urbs = urbs;
  #line 775 
  rx->urbs_count = 5;
  #line 776 
  cif_spin_unlock_irq_lock_of_zd_usb_rx(& rx->lock);
  #line 778 
  i = 0;
  #line 778 
  while (i <= 4) {
    #line 779 
    r = cif_usb_submit_urb(*(urbs + (unsigned long)i),3264U);
    #line 780 
    if (r != 0) 
                #line 781 
                goto error_submit;
    #line 778 
    i ++;
  }
  #line 784 
  return 0;
  #line 785 
  error_submit: 
                #line 785 
  ;
  #line 786 
  i = 0;
  #line 786 
  while (i <= 4) {
    #line 787 
    cif_usb_kill_urb(*(urbs + (unsigned long)i));
    #line 786 
    i ++;
  }
  #line 789 
  cif_spin_lock_irq_lock_of_zd_usb_rx(& rx->lock);
  #line 790 
  rx->urbs = (struct urb **)0;
  #line 791 
  rx->urbs_count = 0;
  #line 792 
  cif_spin_unlock_irq_lock_of_zd_usb_rx(& rx->lock);
  #line 793 
  error: 
         #line 793 
  ;
  #line 794 
  if (urbs != (struct urb **)0) {
    #line 795 
    i = 0;
    #line 795 
    while (i <= 4) {
      #line 796 
      free_rx_urb(*(urbs + (unsigned long)i));
      #line 795 
      i ++;
    }
  }
  #line 798 
  return r;
}

#line 801  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c"
int zd_usb_enable_rx(struct zd_usb *usb)
{
  #line 803 
  int r;
  #line 804 
  struct zd_usb_rx *rx = & usb->rx;
  #line 806 
  cif_mutex_lock_setup_mutex_of_zd_usb_rx(& rx->setup_mutex);
  #line 807 
  r = __zd_usb_enable_rx(usb);
  #line 808 
  cif_mutex_unlock_setup_mutex_of_zd_usb_rx(& rx->setup_mutex);
  #line 810 
  zd_usb_reset_rx_idle_timer(usb);
  #line 812 
  return r;
}

#line 815  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c"
static void __zd_usb_disable_rx(struct zd_usb *usb)
{
  #line 817 
  int i;
  #line 818 
  unsigned long flags;
  #line 819 
  struct urb **urbs;
  #line 820 
  unsigned int count;
  #line 821 
  struct zd_usb_rx *rx = & usb->rx;
  #line 823 
  cif___ldv_spin_lock_lock_of_zd_usb_rx(& rx->lock);
  #line 824 
  urbs = rx->urbs;
  #line 825 
  count = (unsigned int)rx->urbs_count;
  #line 826 
  cif_spin_unlock_irqrestore_lock_of_zd_usb_rx(& rx->lock,flags);
  #line 827 
  if (urbs == (struct urb **)0) 
                                #line 828 
                                return;
  #line 830 
  i = 0;
  #line 830 
  while ((unsigned int)i < count) {
    #line 831 
    cif_usb_kill_urb(*(urbs + (unsigned long)i));
    #line 832 
    free_rx_urb(*(urbs + (unsigned long)i));
    #line 830 
    i ++;
  }
  #line 834 
  kfree((void *)urbs);
  #line 836 
  cif___ldv_spin_lock_lock_of_zd_usb_rx(& rx->lock);
  #line 837 
  rx->urbs = (struct urb **)0;
  #line 838 
  rx->urbs_count = 0;
  #line 839 
  cif_spin_unlock_irqrestore_lock_of_zd_usb_rx(& rx->lock,flags);
  #line 840 
  return;
}

#line 842  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c"
void zd_usb_disable_rx(struct zd_usb *usb)
{
  #line 844 
  struct zd_usb_rx *rx = & usb->rx;
  #line 846 
  cif_mutex_lock_setup_mutex_of_zd_usb_rx(& rx->setup_mutex);
  #line 847 
  __zd_usb_disable_rx(usb);
  #line 848 
  cif_mutex_unlock_setup_mutex_of_zd_usb_rx(& rx->setup_mutex);
  #line 850 
  tasklet_kill(& rx->reset_timer_tasklet);
  #line 851 
  cancel_delayed_work_sync(& rx->idle_work);
  #line 852 
  return;
}

#line 854  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c"
static void zd_usb_reset_rx(struct zd_usb *usb)
{
  #line 856 
  bool do_reset;
  #line 858 
  unsigned long flags;
  #line 857 
  struct zd_usb_rx *rx = & usb->rx;
  #line 860 
  cif_mutex_lock_setup_mutex_of_zd_usb_rx(& rx->setup_mutex);
  #line 862 
  cif___ldv_spin_lock_lock_of_zd_usb_rx(& rx->lock);
  #line 863 
  do_reset = (_Bool)(rx->urbs != (struct urb **)0);
  #line 864 
  cif_spin_unlock_irqrestore_lock_of_zd_usb_rx(& rx->lock,flags);
  #line 866 
  if ((int)do_reset != 0) {
    #line 867 
    __zd_usb_disable_rx(usb);
    #line 868 
    __zd_usb_enable_rx(usb);
  }
  #line 871 
  cif_mutex_unlock_setup_mutex_of_zd_usb_rx(& rx->setup_mutex);
  #line 873 
  if ((int)do_reset != 0) 
                          #line 874 
                          zd_usb_reset_rx_idle_timer(usb);
  #line 875 
  return;
}

#line 883  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c"
void zd_usb_disable_tx(struct zd_usb *usb)
{
  #line 886 
  unsigned long flags;
  #line 885 
  struct zd_usb_tx *tx = & usb->tx;
  #line 888 
  atomic_set(& tx->enabled,0);
  #line 891 
  usb_kill_anchored_urbs(& tx->submitted);
  #line 893 
  cif___ldv_spin_lock_lock_of_zd_usb_tx(& tx->lock);
  {
    #line 894 
    int __ret_warn_on = skb_queue_empty(& tx->submitted_skbs) == 0;
    #line 894 
    if ((long)(__ret_warn_on != 0) != 0L) {
      #line 895 
      ldv_inline_asm();
      #line 896 
      ldv_inline_asm();
    }
    #line 894 
    long tmp_2 = (long)(__ret_warn_on != 0);
  }
  {
    #line 895 
    int __ret_warn_on_0 = tx->submitted_urbs != 0;
    #line 895 
    if ((long)(__ret_warn_on_0 != 0) != 0L) {
      #line 896 
      ldv_inline_asm();
      #line 897 
      ldv_inline_asm();
    }
    #line 895 
    long tmp_4 = (long)(__ret_warn_on_0 != 0);
  }
  #line 896 
  tx->submitted_urbs = 0;
  #line 897 
  cif_spin_unlock_irqrestore_lock_of_zd_usb_tx(& tx->lock,flags);
  #line 898 
  return;
}

#line 911  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c"
void zd_usb_enable_tx(struct zd_usb *usb)
{
  #line 913 
  unsigned long flags;
  #line 914 
  struct zd_usb_tx *tx = & usb->tx;
  #line 916 
  cif___ldv_spin_lock_lock_of_zd_usb_tx(& tx->lock);
  #line 917 
  atomic_set(& tx->enabled,1);
  #line 918 
  tx->submitted_urbs = 0;
  #line 919 
  ieee80211_wake_queues(zd_usb_to_hw(usb));
  #line 920 
  tx->stopped = (unsigned char)0U;
  #line 921 
  cif_spin_unlock_irqrestore_lock_of_zd_usb_tx(& tx->lock,flags);
  #line 922 
  return;
}

#line 924  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c"
static void tx_dec_submitted_urbs(struct zd_usb *usb)
{
  #line 927 
  unsigned long flags;
  #line 926 
  struct zd_usb_tx *tx = & usb->tx;
  #line 929 
  cif___ldv_spin_lock_lock_of_zd_usb_tx(& tx->lock);
  #line 930 
  (tx->submitted_urbs) --;
  #line 931 
  if ((unsigned int)tx->stopped != 0U && tx->submitted_urbs <= 2) {
    #line 932 
    ieee80211_wake_queues(zd_usb_to_hw(usb));
    #line 933 
    tx->stopped = (unsigned char)0U;
  }
  #line 935 
  cif_spin_unlock_irqrestore_lock_of_zd_usb_tx(& tx->lock,flags);
  #line 936 
  return;
}

#line 938  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c"
static void tx_inc_submitted_urbs(struct zd_usb *usb)
{
  #line 941 
  unsigned long flags;
  #line 940 
  struct zd_usb_tx *tx = & usb->tx;
  #line 943 
  cif___ldv_spin_lock_lock_of_zd_usb_tx(& tx->lock);
  #line 944 
  (tx->submitted_urbs) ++;
  #line 945 
  if ((unsigned int)tx->stopped == 0U && tx->submitted_urbs > 5) {
    #line 946 
    ieee80211_stop_queues(zd_usb_to_hw(usb));
    #line 947 
    tx->stopped = (unsigned char)1U;
  }
  #line 949 
  cif_spin_unlock_irqrestore_lock_of_zd_usb_tx(& tx->lock,flags);
  #line 950 
  return;
}

#line 959  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c"
static void tx_urb_complete(struct urb *urb)
{
  #line 961 
  int r;
  #line 962 
  struct sk_buff *skb;
  #line 963 
  struct ieee80211_tx_info *info;
  #line 964 
  struct zd_usb *usb;
  #line 965 
  struct zd_usb_tx *tx;
  #line 967 
  skb = (struct sk_buff *)urb->context;
  #line 968 
  info = IEEE80211_SKB_CB(skb);
  #line 973 
  usb = & zd_hw_mac((struct ieee80211_hw *)info->__anonCompField_ieee80211_tx_info_195.__anonCompField___anonunion_1009_194.rate_driver_data[0])->chip.usb;
  #line 974 
  tx = & usb->tx;
  #line 976 
  switch (urb->status) {
    #line 977 
    case 0: 
            #line 977 
    ;
    #line 978 
    break;
    #line 979 
    case -108: 
               #line 979 
    ;
    #line 980 
    case -22: 
              #line 980 
    ;
    #line 981 
    case -19: 
              #line 981 
    ;
    #line 982 
    case -2: 
             #line 982 
    ;
    #line 983 
    case -104: 
               #line 983 
    ;
    #line 984 
    case -32: 
              #line 984 
    ;
    #line 985 
    dev_printk((char *)"\001",& (urb->dev)->dev,(char *)"%s() ",(char *)"tx_urb_complete",urb,urb->status);
    #line 986 
    break;
    #line 987 
    default: 
             #line 987 
    ;
    #line 988 
    dev_printk((char *)"\001",& (urb->dev)->dev,(char *)"%s() ",(char *)"tx_urb_complete",urb,urb->status);
    #line 989 
    goto resubmit;
  }
  #line 991 
  free_urb: 
            #line 991 
  ;
  #line 992 
  skb_unlink(skb,& usb->tx.submitted_skbs);
  #line 993 
  zd_mac_tx_to_dev(skb,urb->status);
  #line 994 
  usb_free_urb(urb);
  #line 995 
  tx_dec_submitted_urbs(usb);
  #line 996 
  return;
  #line 997 
  resubmit: 
            #line 997 
  ;
  #line 998 
  usb_anchor_urb(urb,& tx->submitted);
  #line 999 
  r = cif_usb_submit_urb(urb,2592U);
  #line 1000 
  if (r != 0) {
    #line 1001 
    usb_unanchor_urb(urb);
    #line 1002 
    dev_printk((char *)"\001",& (urb->dev)->dev,(char *)"%s() ",(char *)"tx_urb_complete",urb,r);
    #line 1003 
    goto free_urb;
  }
  #line 1005 
  return;
}

#line 1019  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c"
int zd_usb_tx(struct zd_usb *usb, struct sk_buff *skb)
{
  #line 1021 
  int r;
  #line 1024 
  struct urb *urb;
  #line 1022 
  struct ieee80211_tx_info *info = IEEE80211_SKB_CB(skb);
  #line 1023 
  struct usb_device *udev = zd_usb_to_usbdev(usb);
  #line 1025 
  struct zd_usb_tx *tx = & usb->tx;
  #line 1027 
  if (atomic_read(& tx->enabled) == 0) {
    #line 1028 
    r = -2;
    #line 1029 
    goto out;
  }
  #line 1032 
  urb = usb_alloc_urb(0,2592U);
  #line 1033 
  if (urb == (struct urb *)0) {
    #line 1034 
    r = -12;
    #line 1035 
    goto out;
  }
  #line 1038 
  ;
  #line 1038 
  ;
  #line 1038 
  ;
  #line 1038 
  ;
  #line 1038 
  ;
  #line 1038 
  usb_fill_bulk_urb(urb,udev,__create_pipe(udev,1U) | 3221225472U,(void *)skb->data,(int)skb->len,& tx_urb_complete,(void *)skb);
  #line 1041 
  info->__anonCompField_ieee80211_tx_info_195.__anonCompField___anonunion_1009_194.rate_driver_data[1] = (void *)jiffies;
  #line 1042 
  skb_queue_tail(& tx->submitted_skbs,skb);
  #line 1043 
  usb_anchor_urb(urb,& tx->submitted);
  #line 1045 
  r = cif_usb_submit_urb(urb,2592U);
  #line 1046 
  if (r != 0) {
    #line 1047 
    dev_printk((char *)"\001",& (usb->intf)->dev,(char *)"%s() ",(char *)"zd_usb_tx",urb,r);
    #line 1048 
    usb_unanchor_urb(urb);
    #line 1049 
    skb_unlink(skb,& tx->submitted_skbs);
    #line 1050 
    goto error;
  }
  #line 1052 
  tx_inc_submitted_urbs(usb);
  #line 1053 
  return 0;
  #line 1054 
  error: 
         #line 1054 
  ;
  #line 1055 
  usb_free_urb(urb);
  #line 1056 
  out: 
       #line 1056 
  ;
  #line 1057 
  return r;
}

#line 1060  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c"
static bool zd_tx_timeout(struct zd_usb *usb)
{
  #line 1064 
  struct sk_buff *skb;
  #line 1064 
  struct sk_buff *skbnext;
  #line 1065 
  struct ieee80211_tx_info *info;
  #line 1066 
  unsigned long flags;
  #line 1066 
  unsigned long trans_start;
  #line 1062 
  struct zd_usb_tx *tx = & usb->tx;
  #line 1063 
  struct sk_buff_head *q = & tx->submitted_skbs;
  #line 1067 
  bool have_timedout = (_Bool)0;
  #line 1069 
  cif___ldv_spin_lock_lock_of_sk_buff_head(& q->lock);
  #line 1070 
  skb = q->next;
  #line 1070 
  skbnext = skb->__anonCompField_sk_buff_87.__anonCompField___anonunion_487_86.next;
  #line 1070 
  while (skb != (struct sk_buff *)q) {
    {
      #line 1071 
      info = IEEE80211_SKB_CB(skb);
      #line 1072 
      trans_start = (unsigned long)info->__anonCompField_ieee80211_tx_info_195.__anonCompField___anonunion_1009_194.rate_driver_data[1];
      {
        #line 1074 
        unsigned long __dummy;
        #line 1074 
        unsigned long __dummy2;
        }
      #line 1074 
      if (1 != 0) {
        {
          #line 1074 
          unsigned long __dummy_0;
          #line 1074 
          unsigned long __dummy2_0;
          }
        #line 1074 
        if (1 != 0) 
          #line 1074 
          if ((long)((trans_start - jiffies) + 1250UL) < 0L) {
            #line 1075 
            have_timedout = (_Bool)1;
            #line 1076 
            break;
          }
      }
    }
    #line 1070 
    skb = skbnext;
    #line 1070 
    skbnext = skb->__anonCompField_sk_buff_87.__anonCompField___anonunion_487_86.next;
  }
  #line 1079 
  cif_spin_unlock_irqrestore_lock_of_sk_buff_head(& q->lock,flags);
  #line 1081 
  return have_timedout;
}

#line 1084  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c"
static void zd_tx_watchdog_handler(struct work_struct *work)
{
  #line 1087 
  void *__mptr;
  #line 1087 
  __mptr = (void *)work;
  #line 1086 
  struct zd_usb *usb = ((struct zd_usb *)(__mptr + 18446744073709541160U));
  #line 1088 
  struct zd_usb_tx *tx = & usb->tx;
  #line 1090 
  if (atomic_read(& tx->enabled) == 0) 
                                       #line 1090 
                                       goto _LOR;
  else 
    #line 1090 
    if ((unsigned int)tx->watchdog_enabled == 0U) 
                                                  #line 1090 
                                                  _LOR: 
                                                        #line 1091 
                                                        goto out;
  #line 1092 
  if (! zd_tx_timeout(usb)) 
                            #line 1093 
                            goto out;
  #line 1096 
  _dev_warn(& (usb->intf)->dev,(char *)"TX-stall detected, resetting device...");
  #line 1098 
  usb_queue_reset_device(usb->intf);
  #line 1101 
  return;
  #line 1102 
  out: 
       #line 1102 
  ;
  #line 1103 
  ;
  #line 1103 
  ;
  #line 1103 
  cif_queue_delayed_work(zd_workqueue,& tx->watchdog_work,round_jiffies_relative(250UL));
  #line 1105 
  return;
}

#line 1107  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c"
void zd_tx_watchdog_enable(struct zd_usb *usb)
{
  #line 1109 
  struct zd_usb_tx *tx = & usb->tx;
  #line 1111 
  if ((unsigned int)tx->watchdog_enabled == 0U) {
    #line 1112 
    dev_printk((char *)"\001",& (usb->intf)->dev,(char *)"%s() ",(char *)"zd_tx_watchdog_enable");
    #line 1113 
    ;
    #line 1113 
    ;
    #line 1113 
    cif_queue_delayed_work(zd_workqueue,& tx->watchdog_work,round_jiffies_relative(250UL));
    #line 1115 
    tx->watchdog_enabled = (unsigned char)1U;
  }
  #line 1117 
  return;
}

#line 1119  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c"
void zd_tx_watchdog_disable(struct zd_usb *usb)
{
  #line 1121 
  struct zd_usb_tx *tx = & usb->tx;
  #line 1123 
  if ((unsigned int)tx->watchdog_enabled != 0U) {
    #line 1124 
    dev_printk((char *)"\001",& (usb->intf)->dev,(char *)"%s() ",(char *)"zd_tx_watchdog_disable");
    #line 1125 
    tx->watchdog_enabled = (unsigned char)0U;
    #line 1126 
    cancel_delayed_work_sync(& tx->watchdog_work);
  }
  #line 1128 
  return;
}

#line 1130  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c"
static void zd_rx_idle_timer_handler(struct work_struct *work)
{
  #line 1133 
  void *__mptr;
  #line 1133 
  __mptr = (void *)work;
  #line 1132 
  struct zd_usb *usb = ((struct zd_usb *)(__mptr + 18446744073709551088U));
  #line 1134 
  struct zd_mac *mac = zd_usb_to_mac(usb);
  #line 1136 
  if (! test_bit(0L,& mac->flags)) 
                                   #line 1137 
                                   return;
  #line 1139 
  dev_printk((char *)"\001",& (usb->intf)->dev,(char *)"%s() ",(char *)"zd_rx_idle_timer_handler");
  #line 1142 
  zd_usb_reset_rx(usb);
  #line 1143 
  return;
}

#line 1145  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c"
static void zd_usb_reset_rx_idle_timer_tasklet(unsigned long param)
{
  #line 1147 
  struct zd_usb *usb = (struct zd_usb *)param;
  #line 1149 
  zd_usb_reset_rx_idle_timer(usb);
  #line 1150 
  return;
}

#line 1152  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c"
void zd_usb_reset_rx_idle_timer(struct zd_usb *usb)
{
  #line 1154 
  struct zd_usb_rx *rx = & usb->rx;
  #line 1156 
  ;
  #line 1156 
  ;
  #line 1156 
  mod_delayed_work(zd_workqueue,& rx->idle_work,round_jiffies_relative(7500UL));
  #line 1157 
  return;
}

#line 1159  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c"
__inline static void init_usb_interrupt(struct zd_usb *usb)
{
  #line 1161 
  struct zd_usb_interrupt *intr = & usb->intr;
  #line 1163 
  spinlock_check(& intr->lock);
  {
    #line 1163 
    struct lock_class_key __key;
    #line 1163 
    __raw_spin_lock_init(& intr->lock.__anonCompField_spinlock_25.rlock,(char *)"&(&intr->lock)->rlock",& __key);
  }
  #line 1164 
  intr->interval = int_urb_interval(zd_usb_to_usbdev(usb));
  #line 1165 
  __init_completion(& intr->read_regs.completion);
  #line 1166 
  atomic_set(& intr->read_regs_enabled,0);
  #line 1167 
  intr->read_regs.cr_int_addr = (unsigned short)38160U;
  #line 1168 
  return;
}

#line 1170  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c"
__inline static void init_usb_rx(struct zd_usb *usb)
{
  #line 1172 
  struct zd_usb_rx *rx = & usb->rx;
  #line 1174 
  spinlock_check(& rx->lock);
  {
    #line 1174 
    struct lock_class_key __key;
    #line 1174 
    __raw_spin_lock_init(& rx->lock.__anonCompField_spinlock_25.rlock,(char *)"&(&rx->lock)->rlock",& __key);
  }
  {
    #line 1175 
    struct lock_class_key __key_0;
    #line 1175 
    __mutex_init(& rx->setup_mutex,(char *)"&rx->setup_mutex",& __key_0);
  }
  #line 1176 
  ;
  #line 1176 
  if (interface_to_usbdev(usb->intf)->speed == (unsigned int)USB_SPEED_HIGH) 
    #line 1177 
    rx->usb_packet_size = 512U; else 
                                     #line 1179 
                                     rx->usb_packet_size = 64U;
  #line 1181 
  if ((long)(rx->fragment_length != 0U) != 0L) {
    {
      #line 1181 
      bool branch;
      #line 1181 
      struct _ddebug __UNIQUE_ID_ddebug583 = {.modname = (char *)"zd1211rw", .function = (char *)"init_usb_rx", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c", .format = (char *)"%s:%d ASSERT %s VIOLATED!\n", .lineno = (unsigned int)1181U, .flags = (unsigned int)1U, .key = {.dd_key_true = {.key = {.enabled = {.counter = 1}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)1}}}}};
      {
        #line 1181 
        int tmp_1;
        #line 1181 
        if ((int)arch_static_branch(& __UNIQUE_ID_ddebug583.key.dd_key_true.key,
                           (_Bool)1) != 0) 
          #line 1181 
          tmp_1 = 0; else 
                          #line 1181 
                          tmp_1 = 1;
        #line 1181 
        branch = (_Bool)(tmp_1 != 0);
        }
      #line 1181 
      if ((long)((long)((int)branch != 0)) != 0L) 
                                                  #line 1181 
                                                  __dynamic_pr_debug(& __UNIQUE_ID_ddebug583,(char *)"%s:%d ASSERT %s VIOLATED!\n",(char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c",1181,(char *)"rx->fragment_length == 0");
    }
    #line 1181 
    dump_stack();
  }
  {
    #line 1182 
    struct lock_class_key __key_1;
    #line 1182 
    __init_work(& rx->idle_work.work,0);
    #line 1182 
    atomic_long_t __constr_expr_41 = {.counter = 137438953408LL};
    #line 1182 
    rx->idle_work.work.data = __constr_expr_41;
    #line 1182 
    lockdep_init_map(& rx->idle_work.work.lockdep_map,(char *)"(work_completion)",& __key_1,0);
    #line 1182 
    INIT_LIST_HEAD(& rx->idle_work.work.entry);
    #line 1182 
    rx->idle_work.work.func = & zd_rx_idle_timer_handler;
  }
  {
    #line 1182 
    struct lock_class_key __key_2;
    #line 1182 
    init_timer_key(& rx->idle_work.timer,& delayed_work_timer_fn,2097152U,(char *)"&(&rx->idle_work)->timer",& __key_2);
  }
  #line 1183 
  rx->reset_timer_tasklet.func = & zd_usb_reset_rx_idle_timer_tasklet;
  #line 1184 
  rx->reset_timer_tasklet.data = (unsigned long)usb;
  #line 1185 
  return;
}

#line 1187  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c"
__inline static void init_usb_tx(struct zd_usb *usb)
{
  #line 1189 
  struct zd_usb_tx *tx = & usb->tx;
  #line 1191 
  spinlock_check(& tx->lock);
  {
    #line 1191 
    struct lock_class_key __key;
    #line 1191 
    __raw_spin_lock_init(& tx->lock.__anonCompField_spinlock_25.rlock,(char *)"&(&tx->lock)->rlock",& __key);
  }
  #line 1192 
  atomic_set(& tx->enabled,0);
  #line 1193 
  tx->stopped = (unsigned char)0U;
  #line 1194 
  skb_queue_head_init(& tx->submitted_skbs);
  #line 1195 
  init_usb_anchor(& tx->submitted);
  #line 1196 
  tx->submitted_urbs = 0;
  #line 1197 
  tx->watchdog_enabled = (unsigned char)0U;
  {
    #line 1198 
    struct lock_class_key __key_0;
    #line 1198 
    __init_work(& tx->watchdog_work.work,0);
    #line 1198 
    atomic_long_t __constr_expr_42 = {.counter = 137438953408LL};
    #line 1198 
    tx->watchdog_work.work.data = __constr_expr_42;
    #line 1198 
    lockdep_init_map(& tx->watchdog_work.work.lockdep_map,(char *)"(work_completion)",& __key_0,0);
    #line 1198 
    INIT_LIST_HEAD(& tx->watchdog_work.work.entry);
    #line 1198 
    tx->watchdog_work.work.func = & zd_tx_watchdog_handler;
  }
  {
    #line 1198 
    struct lock_class_key __key_1;
    #line 1198 
    init_timer_key(& tx->watchdog_work.timer,& delayed_work_timer_fn,2097152U,(char *)"&(&tx->watchdog_work)->timer",& __key_1);
  }
  #line 1201 
  return;
}

#line 1201  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c"
void zd_usb_init(struct zd_usb *usb, struct ieee80211_hw *hw, struct usb_interface *intf)
{
  #line 1204 
  memset((void *)usb,0,11200UL);
  #line 1205 
  usb->intf = usb_get_intf(intf);
  #line 1206 
  usb_set_intfdata(usb->intf,(void *)hw);
  #line 1207 
  init_usb_anchor(& usb->submitted_cmds);
  #line 1208 
  init_usb_interrupt(usb);
  #line 1209 
  init_usb_tx(usb);
  #line 1210 
  init_usb_rx(usb);
  #line 1211 
  return;
}

#line 1213  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c"
void zd_usb_clear(struct zd_usb *usb)
{
  #line 1215 
  usb_set_intfdata(usb->intf,(void *)0);
  #line 1216 
  usb_put_intf(usb->intf);
  #line 1217 
  memset((void *)usb,255,11200UL);
  #line 1218 
  return;
}

#line 1221  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c"
static char *speed(enum usb_device_speed speed_0)
{
  #line 1223 
  switch ((unsigned int)speed_0) {
    #line 1224 
    case (unsigned int)1: 
                          #line 1224 
    ;
    #line 1225 
    return (char *)"low";
    #line 1226 
    case (unsigned int)2: 
                          #line 1226 
    ;
    #line 1227 
    return (char *)"full";
    #line 1228 
    case (unsigned int)3: 
                          #line 1228 
    ;
    #line 1229 
    return (char *)"high";
    #line 1230 
    default: 
             #line 1230 
    ;
    #line 1231 
    return (char *)"unknown speed";
  }
}

#line 1235  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c"
static int scnprint_id(struct usb_device *udev, char *buffer, size_t size)
{
  #line 1237 
  ;
  #line 1237 
  ;
  #line 1237 
  ;
  #line 1237 
  ;
  #line 1237 
  return scnprintf(buffer,size,(char *)"%04hx:%04hx v%04hx %s",
                  (int)udev->descriptor.idVendor,
                  (int)udev->descriptor.idProduct,(int)get_bcdDevice(udev),
                  speed(udev->speed));
}

#line 1244  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c"
int zd_usb_scnprint_id(struct zd_usb *usb, char *buffer, size_t size)
{
  #line 1246 
  struct usb_device *udev = interface_to_usbdev(usb->intf);
  #line 1247 
  return scnprint_id(udev,buffer,size);
}

#line 1251  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c"
static void print_id(struct usb_device *udev)
{
  #line 1253 
  char buffer[40U];
  #line 1255 
  scnprint_id(udev,(char *)(& buffer),40UL);
  #line 1256 
  buffer[39UL] = (char)0;
  #line 1257 
  dev_printk((char *)"\001",& udev->dev,(char *)"%s() ",(char *)"print_id",(char *)(& buffer));
  #line 1258 
  return;
}

#line 1263  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c"
static int eject_installer(struct usb_interface *intf)
{
  #line 1267 
  struct usb_endpoint_descriptor *endpoint;
  #line 1268 
  unsigned char *cmd;
  #line 1269 
  u8 bulk_out_ep;
  #line 1270 
  int r;
  #line 1265 
  struct usb_device *udev = interface_to_usbdev(intf);
  #line 1266 
  struct usb_host_interface *iface_desc = intf->altsetting;
  #line 1272 
  if ((unsigned int)iface_desc->desc.bNumEndpoints <= 1U) 
                                                          #line 1273 
                                                          return -19;
  #line 1276 
  r = 1;
  #line 1276 
  while (r >= 0) {
    {
      #line 1277 
      endpoint = & (iface_desc->endpoint + (unsigned long)r)->desc;
      #line 1278 
      if (usb_endpoint_dir_out(endpoint) != 0) {
        #line 1278 
        if (usb_endpoint_xfer_bulk(endpoint) != 0) {
          #line 1280 
          bulk_out_ep = endpoint->bEndpointAddress;
          #line 1281 
          break;
        }
      }
    }
    #line 1276 
    r --;
  }
  #line 1284 
  if (r == -1) {
    #line 1285 
    _dev_err(& udev->dev,(char *)"zd1211rw: Could not find bulk out endpoint\n");
    #line 1287 
    return -19;
  }
  #line 1290 
  cmd = (unsigned char *)kzalloc(31UL,3264U);
  #line 1291 
  if (cmd == (unsigned char *)0U) 
                                  #line 1292 
                                  return -19;
  #line 1295 
  *cmd = (unsigned char)85U;
  #line 1296 
  *(cmd + 1U) = (unsigned char)83U;
  #line 1297 
  *(cmd + 2U) = (unsigned char)66U;
  #line 1298 
  *(cmd + 3U) = (unsigned char)67U;
  #line 1299 
  *(cmd + 14U) = (unsigned char)6U;
  #line 1301 
  *(cmd + 15U) = (unsigned char)27U;
  #line 1302 
  *(cmd + 19U) = (unsigned char)2U;
  #line 1304 
  _dev_info(& udev->dev,(char *)"Ejecting virtual installer media...\n");
  #line 1305 
  ;
  #line 1305 
  ;
  #line 1305 
  r = usb_bulk_msg(udev,__create_pipe(udev,(unsigned int)bulk_out_ep) | 3221225472U,(void *)cmd,31,(int *)0,2000);
  #line 1307 
  kfree((void *)cmd);
  #line 1308 
  if (r != 0) 
              #line 1309 
              return r;
  #line 1314 
  usb_set_intfdata(intf,(void *)0);
  #line 1315 
  return 0;
}

#line 1318  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c"
int zd_usb_init_hw(struct zd_usb *usb)
{
  #line 1320 
  int r;
  #line 1321 
  struct zd_mac *mac = zd_usb_to_mac(usb);
  #line 1323 
  dev_printk((char *)"\001",& (usb->intf)->dev,(char *)"%s() ",(char *)"zd_usb_init_hw");
  #line 1325 
  r = upload_firmware(usb);
  #line 1326 
  if (r != 0) {
    #line 1327 
    _dev_err(& (usb->intf)->dev,(char *)"couldn\'t load firmware. Error number %d\n",r);
    #line 1329 
    return r;
  }
  #line 1332 
  r = usb_reset_configuration(zd_usb_to_usbdev(usb));
  #line 1333 
  if (r != 0) {
    #line 1334 
    dev_printk((char *)"\001",& (usb->intf)->dev,(char *)"%s() ",(char *)"zd_usb_init_hw",r);
    #line 1336 
    return r;
  }
  #line 1339 
  r = zd_mac_init_hw(mac->hw);
  #line 1340 
  if (r != 0) {
    #line 1341 
    dev_printk((char *)"\001",& (usb->intf)->dev,(char *)"%s() ",(char *)"zd_usb_init_hw",r);
    #line 1343 
    return r;
  }
  #line 1346 
  usb->initialized = (unsigned char)1U;
  #line 1347 
  return 0;
}

#line 1350  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c"
static int probe(struct usb_interface *intf, struct usb_device_id *id)
{
  #line 1352 
  int r;
  #line 1354 
  struct zd_usb *usb;
  #line 1353 
  struct usb_device *udev = interface_to_usbdev(intf);
  #line 1355 
  struct ieee80211_hw *hw = (struct ieee80211_hw *)0;
  #line 1357 
  print_id(udev);
  #line 1359 
  if ((id->driver_info & 2UL) != 0UL) {
    #line 1360 
    return eject_installer(intf);
  }
  #line 1362 
  switch ((unsigned int)udev->speed) {
    #line 1363 
    case (unsigned int)1: 
                          #line 1363 
    ;
    #line 1364 
    case (unsigned int)2: 
                          #line 1364 
    ;
    #line 1365 
    case (unsigned int)3: 
                          #line 1365 
    ;
    #line 1366 
    break;
    #line 1367 
    default: 
             #line 1367 
    ;
    #line 1368 
    dev_printk((char *)"\001",& intf->dev,(char *)"%s() ",(char *)"probe");
    #line 1369 
    r = -19;
    #line 1370 
    goto error;
  }
  #line 1373 
  r = cif_usb_reset_device(udev);
  #line 1374 
  if (r != 0) {
    #line 1375 
    _dev_err(& intf->dev,(char *)"couldn\'t reset usb device. Error number %d\n",r);
    #line 1377 
    goto error;
  }
  #line 1380 
  hw = zd_mac_alloc_hw(intf);
  #line 1381 
  if (hw == (struct ieee80211_hw *)0) {
    #line 1382 
    r = -12;
    #line 1383 
    goto error;
  }
  #line 1386 
  usb = & zd_hw_mac(hw)->chip.usb;
  #line 1387 
  usb->is_zd1211b = (unsigned char)(id->driver_info == 1UL);
  #line 1389 
  r = zd_mac_preinit_hw(hw);
  #line 1390 
  if (r != 0) {
    #line 1391 
    dev_printk((char *)"\001",& intf->dev,(char *)"%s() ",(char *)"probe",r);
    #line 1393 
    goto error;
  }
  #line 1396 
  r = ieee80211_register_hw(hw);
  #line 1397 
  if (r != 0) {
    #line 1398 
    dev_printk((char *)"\001",& intf->dev,(char *)"%s() ",(char *)"probe",r);
    #line 1400 
    goto error;
  }
  #line 1403 
  dev_printk((char *)"\001",& intf->dev,(char *)"%s() ",(char *)"probe");
  #line 1404 
  ;
  #line 1404 
  _dev_info(& intf->dev,(char *)"%s\n",wiphy_name(hw->wiphy));
  #line 1405 
  return 0;
  #line 1406 
  error: 
         #line 1406 
  ;
  #line 1407 
  cif_usb_reset_device(interface_to_usbdev(intf));
  #line 1408 
  if (hw != (struct ieee80211_hw *)0) {
    #line 1409 
    zd_mac_clear(zd_hw_mac(hw));
    #line 1410 
    cif_ieee80211_free_hw(hw);
  }
  #line 1412 
  return r;
}

#line 1415  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c"
static void disconnect(struct usb_interface *intf)
{
  #line 1418 
  struct zd_mac *mac;
  #line 1419 
  struct zd_usb *usb;
  #line 1417 
  struct ieee80211_hw *hw = zd_intf_to_hw(intf);
  #line 1423 
  if (hw == (struct ieee80211_hw *)0) 
                                      #line 1424 
                                      return;
  #line 1426 
  mac = zd_hw_mac(hw);
  #line 1427 
  usb = & mac->chip.usb;
  #line 1429 
  dev_printk((char *)"\001",& (usb->intf)->dev,(char *)"%s() ",(char *)"disconnect");
  #line 1431 
  ieee80211_unregister_hw(hw);
  #line 1434 
  zd_usb_disable_tx(usb);
  #line 1435 
  zd_usb_disable_rx(usb);
  #line 1436 
  zd_usb_disable_int(usb);
  #line 1443 
  cif_usb_reset_device(interface_to_usbdev(intf));
  #line 1445 
  zd_mac_clear(mac);
  #line 1446 
  cif_ieee80211_free_hw(hw);
  {
    #line 1447 
    bool branch;
    #line 1447 
    struct _ddebug __UNIQUE_ID_ddebug584 = {.modname = (char *)"zd1211rw", .function = (char *)"disconnect", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c", .format = (char *)"disconnected\n", .lineno = (unsigned int)1447U, .flags = (unsigned int)1U, .key = {.dd_key_true = {.key = {.enabled = {.counter = 1}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)1}}}}};
    {
      #line 1447 
      int tmp_2;
      #line 1447 
      if ((int)arch_static_branch(& __UNIQUE_ID_ddebug584.key.dd_key_true.key,
                           (_Bool)1) != 0) 
        #line 1447 
        tmp_2 = 0; else 
                        #line 1447 
                        tmp_2 = 1;
      #line 1447 
      branch = (_Bool)(tmp_2 != 0);
      }
    #line 1447 
    if ((long)((long)((int)branch != 0)) != 0L) 
                                                #line 1447 
                                                __dynamic_dev_dbg(& __UNIQUE_ID_ddebug584,& intf->dev,(char *)"disconnected\n");
  }
  #line 1449 
  return;
}

#line 1450  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c"
static void zd_usb_resume(struct zd_usb *usb)
{
  #line 1453 
  int r;
  #line 1452 
  struct zd_mac *mac = zd_usb_to_mac(usb);
  #line 1455 
  dev_printk((char *)"\001",& (usb->intf)->dev,(char *)"%s() ",(char *)"zd_usb_resume");
  #line 1457 
  r = zd_op_start(zd_usb_to_hw(usb));
  #line 1458 
  if (r < 0) {
    #line 1459 
    _dev_warn(& (usb->intf)->dev,(char *)"Device resume failed ",r);
    #line 1461 
    if ((unsigned int)usb->was_running != 0U) 
                                              #line 1462 
                                              cif_set_bit(0L,& mac->flags);
    #line 1463 
    usb_queue_reset_device(usb->intf);
    #line 1464 
    return;
  }
  #line 1467 
  if (mac->type != 0) {
    #line 1468 
    r = zd_restore_settings(mac);
    #line 1469 
    if (r < 0) {
      {
        #line 1470 
        bool branch;
        #line 1470 
        struct _ddebug __UNIQUE_ID_ddebug585 = {.modname = (char *)"zd1211rw", .function = (char *)"zd_usb_resume", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c", .format = (char *)"failed to restore settings, %d\n", .lineno = (unsigned int)1470U, .flags = (unsigned int)1U, .key = {.dd_key_true = {.key = {.enabled = {.counter = 1}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)1}}}}};
        {
          #line 1470 
          int tmp_2;
          #line 1470 
          if ((int)arch_static_branch(& __UNIQUE_ID_ddebug585.key.dd_key_true.key,
                           (_Bool)1) != 0) 
            #line 1470 
            tmp_2 = 0; else 
                            #line 1470 
                            tmp_2 = 1;
          #line 1470 
          branch = (_Bool)(tmp_2 != 0);
          }
        #line 1470 
        if ((long)((long)((int)branch != 0)) != 0L) 
                                                    #line 1470 
                                                    __dynamic_dev_dbg(& __UNIQUE_ID_ddebug585,& (usb->intf)->dev,(char *)"failed to restore settings, %d\n",r);
      }
      #line 1472 
      return;
    }
  }
  #line 1475 
  return;
}

#line 1477  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c"
static void zd_usb_stop(struct zd_usb *usb)
{
  #line 1479 
  dev_printk((char *)"\001",& (usb->intf)->dev,(char *)"%s() ",(char *)"zd_usb_stop");
  #line 1481 
  zd_op_stop(zd_usb_to_hw(usb));
  #line 1483 
  zd_usb_disable_tx(usb);
  #line 1484 
  zd_usb_disable_rx(usb);
  #line 1485 
  zd_usb_disable_int(usb);
  #line 1487 
  usb->initialized = (unsigned char)0U;
  #line 1488 
  return;
}

#line 1490  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c"
static int pre_reset(struct usb_interface *intf)
{
  #line 1493 
  struct zd_mac *mac;
  #line 1494 
  struct zd_usb *usb;
  #line 1492 
  struct ieee80211_hw *hw = usb_get_intfdata(intf);
  #line 1496 
  if (hw == (struct ieee80211_hw *)0 || intf->condition != (unsigned int)USB_INTERFACE_BOUND) 
    #line 1497 
    return 0;
  #line 1499 
  mac = zd_hw_mac(hw);
  #line 1500 
  usb = & mac->chip.usb;
  #line 1502 
  usb->was_running = (unsigned char)test_bit(0L,& mac->flags);
  #line 1504 
  zd_usb_stop(usb);
  #line 1506 
  cif_mutex_lock_mutex_of_zd_chip(& mac->chip.mutex);
  #line 1507 
  return 0;
}

#line 1510  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c"
static int post_reset(struct usb_interface *intf)
{
  #line 1513 
  struct zd_mac *mac;
  #line 1514 
  struct zd_usb *usb;
  #line 1512 
  struct ieee80211_hw *hw = usb_get_intfdata(intf);
  #line 1516 
  if (hw == (struct ieee80211_hw *)0 || intf->condition != (unsigned int)USB_INTERFACE_BOUND) 
    #line 1517 
    return 0;
  #line 1519 
  mac = zd_hw_mac(hw);
  #line 1520 
  usb = & mac->chip.usb;
  #line 1522 
  cif_mutex_unlock_mutex_of_zd_chip(& mac->chip.mutex);
  #line 1524 
  if ((unsigned int)usb->was_running != 0U) 
                                            #line 1525 
                                            zd_usb_resume(usb);
  #line 1526 
  return 0;
}

#line 1529  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c"
static struct usb_driver driver = {.name = (char *)"zd1211rw", .probe = & probe, .disconnect = & disconnect, .pre_reset = & pre_reset, .post_reset = & post_reset, .id_table = (struct usb_device_id *)(& usb_ids), .disable_hub_initiated_lpm = (unsigned int)1U};
#line 1541  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c"
static int usb_init(void)
{
  #line 1543 
  int r;
  {
    #line 1545 
    bool branch;
    #line 1545 
    struct _ddebug __UNIQUE_ID_ddebug586 = {.modname = (char *)"zd1211rw", .function = (char *)"usb_init", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c", .format = (char *)"%s usb_init()\n", .lineno = (unsigned int)1545U, .flags = (unsigned int)1U, .key = {.dd_key_true = {.key = {.enabled = {.counter = 1}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)1}}}}};
    {
      #line 1545 
      int tmp_0;
      #line 1545 
      if ((int)arch_static_branch(& __UNIQUE_ID_ddebug586.key.dd_key_true.key,
                         (_Bool)1) != 0) 
        #line 1545 
        tmp_0 = 0; else 
                        #line 1545 
                        tmp_0 = 1;
      #line 1545 
      branch = (_Bool)(tmp_0 != 0);
      }
    #line 1545 
    if ((long)((long)((int)branch != 0)) != 0L) 
                                                #line 1545 
                                                __dynamic_pr_debug(& __UNIQUE_ID_ddebug586,(char *)"%s usb_init()\n",driver.name);
  }
  #line 1547 
  zd_workqueue = alloc_workqueue((char *)"%s",917514U,1,driver.name);
  #line 1548 
  if (zd_workqueue == (struct workqueue_struct *)0) {
    #line 1549 
    printk((char *)"\001",driver.name);
    #line 1550 
    return -12;
  }
  #line 1553 
  r = cif_usb_register_driver(& driver,& __this_module,(char *)"zd1211rw");
  #line 1554 
  if (r != 0) {
    #line 1555 
    destroy_workqueue(zd_workqueue);
    #line 1556 
    printk((char *)"\001",driver.name,r);
    #line 1558 
    return r;
  }
  {
    #line 1561 
    bool branch_0;
    #line 1561 
    struct _ddebug __UNIQUE_ID_ddebug587 = {.modname = (char *)"zd1211rw", .function = (char *)"usb_init", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c", .format = (char *)"%s initialized\n", .lineno = (unsigned int)1561U, .flags = (unsigned int)1U, .key = {.dd_key_true = {.key = {.enabled = {.counter = 1}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)1}}}}};
    {
      #line 1561 
      int tmp_5;
      #line 1561 
      if ((int)arch_static_branch(& __UNIQUE_ID_ddebug587.key.dd_key_true.key,
                           (_Bool)1) != 0) 
        #line 1561 
        tmp_5 = 0; else 
                        #line 1561 
                        tmp_5 = 1;
      #line 1561 
      branch_0 = (_Bool)(tmp_5 != 0);
      }
    #line 1561 
    if ((long)((long)((int)branch_0 != 0)) != 0L) 
                                                  #line 1561 
                                                  __dynamic_pr_debug(& __UNIQUE_ID_ddebug587,(char *)"%s initialized\n",driver.name);
  }
  #line 1562 
  return 0;
}

#line 1565  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c"
static void usb_exit(void)
{
  {
    #line 1567 
    bool branch;
    #line 1567 
    struct _ddebug __UNIQUE_ID_ddebug588 = {.modname = (char *)"zd1211rw", .function = (char *)"usb_exit", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c", .format = (char *)"%s usb_exit()\n", .lineno = (unsigned int)1567U, .flags = (unsigned int)1U, .key = {.dd_key_true = {.key = {.enabled = {.counter = 1}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)1}}}}};
    {
      #line 1567 
      int tmp_0;
      #line 1567 
      if ((int)arch_static_branch(& __UNIQUE_ID_ddebug588.key.dd_key_true.key,
                         (_Bool)1) != 0) 
        #line 1567 
        tmp_0 = 0; else 
                        #line 1567 
                        tmp_0 = 1;
      #line 1567 
      branch = (_Bool)(tmp_0 != 0);
      }
    #line 1567 
    if ((long)((long)((int)branch != 0)) != 0L) 
                                                #line 1567 
                                                __dynamic_pr_debug(& __UNIQUE_ID_ddebug588,(char *)"%s usb_exit()\n",driver.name);
  }
  #line 1568 
  cif_usb_deregister(& driver);
  #line 1569 
  destroy_workqueue(zd_workqueue);
  #line 1570 
  return;
}

#line 1575  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c"
static int zd_ep_regs_out_msg(struct usb_device *udev, void *data, int len, int *actual_length, int timeout)
{
  #line 1582 
  struct usb_host_endpoint *ep;
  #line 1583 
  unsigned int pipe;
  #line 1585 
  pipe = __create_pipe(udev,4U) | 1073741824U;
  #line 1586 
  ep = usb_pipe_endpoint(udev,pipe);
  #line 1587 
  if (ep == (struct usb_host_endpoint *)0) 
                                           #line 1588 
                                           return -22;
  #line 1590 
  if (usb_endpoint_xfer_int(& ep->desc) != 0) {
    #line 1591 
    return usb_interrupt_msg(udev,pipe,data,len,actual_length,timeout);
  }
  else {
    #line 1594 
    pipe = __create_pipe(udev,4U) | 3221225472U;
    #line 1595 
    return usb_bulk_msg(udev,pipe,data,len,actual_length,timeout);
  }
}

#line 1600  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c"
static void prepare_read_regs_int(struct zd_usb *usb, struct usb_req_read_regs *req, unsigned int count)
{
  #line 1604 
  struct zd_usb_interrupt *intr = & usb->intr;
  #line 1606 
  cif_spin_lock_irq_lock_of_zd_usb_interrupt(& intr->lock);
  #line 1607 
  atomic_set(& intr->read_regs_enabled,1);
  #line 1608 
  intr->read_regs.req = req;
  #line 1609 
  intr->read_regs.req_count = count;
  #line 1610 
  reinit_completion(& intr->read_regs.completion);
  #line 1611 
  cif_spin_unlock_irq_lock_of_zd_usb_interrupt(& intr->lock);
  #line 1612 
  return;
}

#line 1614  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c"
static void disable_read_regs_int(struct zd_usb *usb)
{
  #line 1616 
  struct zd_usb_interrupt *intr = & usb->intr;
  #line 1618 
  cif_spin_lock_irq_lock_of_zd_usb_interrupt(& intr->lock);
  #line 1619 
  atomic_set(& intr->read_regs_enabled,0);
  #line 1620 
  cif_spin_unlock_irq_lock_of_zd_usb_interrupt(& intr->lock);
  #line 1621 
  return;
}

#line 1623  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c"
static bool check_read_regs(struct zd_usb *usb, struct usb_req_read_regs *req, unsigned int count)
{
  #line 1626 
  int i;
  #line 1627 
  struct zd_usb_interrupt *intr = & usb->intr;
  #line 1628 
  struct read_regs_int *rr = & intr->read_regs;
  #line 1629 
  struct usb_int_regs *regs = (struct usb_int_regs *)(& rr->buffer);
  #line 1634 
  ;
  #line 1634 
  if ((unsigned long)rr->length < __ab_c_size((unsigned long)count,4UL,2UL)) {
    #line 1635 
    ;
    #line 1635 
    ;
    #line 1635 
    dev_printk((char *)"\001",& (usb->intf)->dev,(char *)"%s() ",(char *)"check_read_regs",rr->length,__ab_c_size((unsigned long)count,4UL,2UL));
    #line 1638 
    return (_Bool)0;
  }
  #line 1641 
  if ((unsigned int)rr->length > 64U) {
    #line 1642 
    dev_printk((char *)"\001",& (usb->intf)->dev,(char *)"%s() ",(char *)"check_read_regs",rr->length,64UL);
    #line 1645 
    return (_Bool)0;
  }
  #line 1648 
  i = 0;
  #line 1648 
  while ((unsigned int)i < count) {
    {
      #line 1649 
      struct reg_data *rd = & regs->regs[i];
      #line 1650 
      if ((int)rd->addr != (int)req->addr[i]) {
        #line 1651 
        dev_printk((char *)"\001",& (usb->intf)->dev,(char *)"%s() ",(char *)"check_read_regs",i,(int)rd->addr,(int)req->addr[i]);
        #line 1655 
        return (_Bool)0;
      }
    }
    #line 1648 
    i ++;
  }
  #line 1659 
  return (_Bool)1;
}

#line 1662  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c"
static int get_results(struct zd_usb *usb, u16 *values, struct usb_req_read_regs *req, unsigned int count, bool *retry)
{
  #line 1666 
  int r;
  #line 1667 
  int i;
  #line 1668 
  struct zd_usb_interrupt *intr = & usb->intr;
  #line 1669 
  struct read_regs_int *rr = & intr->read_regs;
  #line 1670 
  struct usb_int_regs *regs = (struct usb_int_regs *)(& rr->buffer);
  #line 1672 
  cif_spin_lock_irq_lock_of_zd_usb_interrupt(& intr->lock);
  #line 1674 
  r = -5;
  #line 1677 
  *retry = (_Bool)((unsigned int)intr->read_regs_int_overridden != 0U);
  #line 1678 
  if ((int)*retry != 0) 
                        #line 1679 
                        goto error_unlock;
  #line 1681 
  if (! check_read_regs(usb,req,count)) {
    #line 1682 
    dev_printk((char *)"\001",& (usb->intf)->dev,(char *)"%s() ",(char *)"get_results");
    #line 1683 
    goto error_unlock;
  }
  #line 1686 
  i = 0;
  #line 1686 
  while ((unsigned int)i < count) {
    {
      #line 1687 
      struct reg_data *rd = & regs->regs[i];
      #line 1688 
      *(values + (unsigned long)i) = rd->value;
    }
    #line 1686 
    i ++;
  }
  #line 1691 
  r = 0;
  #line 1692 
  error_unlock: 
                #line 1692 
  ;
  #line 1693 
  cif_spin_unlock_irq_lock_of_zd_usb_interrupt(& intr->lock);
  #line 1694 
  return r;
}

#line 1697  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c"
int zd_usb_ioread16v(struct zd_usb *usb, u16 *values, zd_addr_t *addresses, unsigned int count)
{
  #line 1700 
  int r;
  #line 1700 
  int i;
  #line 1700 
  int req_len;
  #line 1700 
  int actual_req_len;
  #line 1701 
  struct usb_device *udev;
  #line 1703 
  unsigned long timeout;
  #line 1727 
  int tmp_8;
  #line 1700 
  int try_count = 0;
  #line 1702 
  struct usb_req_read_regs *req = (struct usb_req_read_regs *)0;
  #line 1704 
  bool retry = (_Bool)0;
  #line 1706 
  if (count == 0U) {
    #line 1707 
    dev_printk((char *)"\001",& (usb->intf)->dev,(char *)"%s() ",(char *)"zd_usb_ioread16v");
    #line 1708 
    return -22;
  }
  #line 1710 
  if (count > 15U) {
    #line 1711 
    dev_printk((char *)"\001",& (usb->intf)->dev,(char *)"%s() ",(char *)"zd_usb_ioread16v",count,15);
    #line 1714 
    return -22;
  }
  #line 1716 
  if (preempt_count() != 0) {
    #line 1717 
    dev_printk((char *)"\001",& (usb->intf)->dev,(char *)"%s() ",(char *)"zd_usb_ioread16v");
    #line 1719 
    return -11;
  }
  #line 1721 
  if (usb_int_enabled(usb) == 0) {
    #line 1722 
    dev_printk((char *)"\001",& (usb->intf)->dev,(char *)"%s() ",(char *)"zd_usb_ioread16v");
    #line 1724 
    return -11;
  }
  #line 1727 
  if (mutex_is_locked(& zd_usb_to_chip(usb)->mutex)) 
                                                     #line 1727 
                                                     tmp_8 = 0; else 
                                                                  #line 1727 
                                                                  tmp_8 = 1;
  #line 1727 
  if ((long)tmp_8 != 0L) {
    {
      #line 1727 
      bool branch;
      #line 1727 
      struct _ddebug __UNIQUE_ID_ddebug589 = {.modname = (char *)"zd1211rw", .function = (char *)"zd_usb_ioread16v", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c", .format = (char *)"%s:%d ASSERT %s VIOLATED!\n", .lineno = (unsigned int)1727U, .flags = (unsigned int)1U, .key = {.dd_key_true = {.key = {.enabled = {.counter = 1}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)1}}}}};
      {
        #line 1727 
        int tmp_2;
        #line 1727 
        if ((int)arch_static_branch(& __UNIQUE_ID_ddebug589.key.dd_key_true.key,
                           (_Bool)1) != 0) 
          #line 1727 
          tmp_2 = 0; else 
                          #line 1727 
                          tmp_2 = 1;
        #line 1727 
        branch = (_Bool)(tmp_2 != 0);
        }
      #line 1727 
      if ((long)((long)((int)branch != 0)) != 0L) 
                                                  #line 1727 
                                                  __dynamic_pr_debug(& __UNIQUE_ID_ddebug589,(char *)"%s:%d ASSERT %s VIOLATED!\n",(char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c",1727,(char *)"mutex_is_locked(&zd_usb_to_chip(usb)->mutex)");
    }
    #line 1727 
    dump_stack();
  }
  #line 1730 
  if ((long)(((unsigned long)count + 1UL) * 2UL > 64UL) != 0L) {
    #line 1731 
    ldv_inline_asm();
    #line 1732 
    ldv_inline_asm();
    #line 1733 
    ldv_inline_asm();
    #line 1730 
    ;
  }
  #line 1733 
  req_len = (int)(((unsigned long)count + 1UL) * (unsigned long)2U);
  #line 1734 
  req = (struct usb_req_read_regs *)(& usb->req_buf);
  #line 1736 
  req->id = (unsigned short)34U;
  #line 1737 
  i = 0;
  #line 1737 
  while ((unsigned int)i < count) {
    #line 1738 
    req->addr[i] = *(addresses + (unsigned long)i);
    #line 1737 
    i ++;
  }
  #line 1740 
  retry_read: 
              #line 1740 
  ;
  #line 1741 
  try_count ++;
  #line 1742 
  udev = zd_usb_to_usbdev(usb);
  #line 1743 
  prepare_read_regs_int(usb,req,count);
  #line 1744 
  r = zd_ep_regs_out_msg(udev,(void *)req,req_len,& actual_req_len,50);
  #line 1745 
  if (r != 0) {
    #line 1746 
    dev_printk((char *)"\001",& (usb->intf)->dev,(char *)"%s() ",(char *)"zd_usb_ioread16v",r);
    #line 1748 
    goto error;
  }
  #line 1750 
  if (req_len != actual_req_len) {
    #line 1751 
    dev_printk((char *)"\001",& (usb->intf)->dev,(char *)"%s() ",(char *)"zd_usb_ioread16v",req_len,actual_req_len);
    #line 1754 
    r = -5;
    #line 1755 
    goto error;
  }
  #line 1758 
  ;
  #line 1758 
  timeout = wait_for_completion_timeout(& usb->intr.read_regs.completion,msecs_to_jiffies(50U));
  #line 1760 
  if (timeout == 0UL) {
    #line 1761 
    disable_read_regs_int(usb);
    #line 1762 
    dev_printk((char *)"\001",& (usb->intf)->dev,(char *)"%s() ",(char *)"zd_usb_ioread16v");
    #line 1763 
    r = -110;
    #line 1764 
    goto error;
  }
  #line 1767 
  r = get_results(usb,values,req,count,& retry);
  #line 1768 
  if ((int)retry != 0 && try_count <= 19) {
    #line 1769 
    dev_printk((char *)"\001",& (usb->intf)->dev,(char *)"%s() ",(char *)"zd_usb_ioread16v",try_count);
    #line 1771 
    goto retry_read;
  }
  #line 1773 
  error: 
         #line 1773 
  ;
  #line 1774 
  return r;
}

#line 1777  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c"
static void iowrite16v_urb_complete(struct urb *urb)
{
  #line 1779 
  struct zd_usb *usb = (struct zd_usb *)urb->context;
  #line 1781 
  if (urb->status != 0 && usb->cmd_error == 0) 
                                               #line 1782 
                                               usb->cmd_error = urb->status;
  #line 1784 
  if (usb->cmd_error == 0 && urb->actual_length != urb->transfer_buffer_length) 
    #line 1786 
    usb->cmd_error = -5;
  #line 1787 
  return;
}

#line 1789  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c"
static int zd_submit_waiting_urb(struct zd_usb *usb, bool last)
{
  #line 1791 
  int r = 0;
  #line 1792 
  struct urb *urb = usb->urb_async_waiting;
  #line 1794 
  if (urb == (struct urb *)0) 
                              #line 1795 
                              return 0;
  #line 1797 
  usb->urb_async_waiting = (struct urb *)0;
  #line 1799 
  if (! last) 
              #line 1800 
              urb->transfer_flags |= 128U;
  #line 1802 
  usb_anchor_urb(urb,& usb->submitted_cmds);
  #line 1803 
  r = cif_usb_submit_urb(urb,3264U);
  #line 1804 
  if (r != 0) {
    #line 1805 
    usb_unanchor_urb(urb);
    #line 1806 
    dev_printk((char *)"\001",& (usb->intf)->dev,(char *)"%s() ",(char *)"zd_submit_waiting_urb",r);
    #line 1808 
    goto error;
  }
  #line 1812 
  error: 
         #line 1812 
  ;
  #line 1813 
  usb_free_urb(urb);
  #line 1814 
  return r;
}

#line 1817  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c"
void zd_usb_iowrite16v_async_start(struct zd_usb *usb)
{
  #line 1823 
  int tmp_22;
  #line 1819 
  if ((long)(usb_anchor_empty(& usb->submitted_cmds) == 0) != 0L) {
    {
      #line 1819 
      bool branch;
      #line 1819 
      struct _ddebug __UNIQUE_ID_ddebug591 = {.modname = (char *)"zd1211rw", .function = (char *)"zd_usb_iowrite16v_async_start", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c", .format = (char *)"%s:%d ASSERT %s VIOLATED!\n", .lineno = (unsigned int)1819U, .flags = (unsigned int)1U, .key = {.dd_key_true = {.key = {.enabled = {.counter = 1}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)1}}}}};
      {
        #line 1819 
        int tmp_0;
        #line 1819 
        if ((int)arch_static_branch(& __UNIQUE_ID_ddebug591.key.dd_key_true.key,
                         (_Bool)1) != 0) 
          #line 1819 
          tmp_0 = 0; else 
                          #line 1819 
                          tmp_0 = 1;
        #line 1819 
        branch = (_Bool)(tmp_0 != 0);
        }
      #line 1819 
      if ((long)((long)((int)branch != 0)) != 0L) 
                                                  #line 1819 
                                                  __dynamic_pr_debug(& __UNIQUE_ID_ddebug591,(char *)"%s:%d ASSERT %s VIOLATED!\n",(char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c",1819,(char *)"usb_anchor_empty(&usb->submitted_cmds)");
    }
    #line 1819 
    dump_stack();
  }
  #line 1820 
  if ((long)(usb->urb_async_waiting != (struct urb *)0) != 0L) {
    {
      #line 1820 
      bool branch_0;
      #line 1820 
      struct _ddebug __UNIQUE_ID_ddebug592 = {.modname = (char *)"zd1211rw", .function = (char *)"zd_usb_iowrite16v_async_start", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c", .format = (char *)"%s:%d ASSERT %s VIOLATED!\n", .lineno = (unsigned int)1820U, .flags = (unsigned int)1U, .key = {.dd_key_true = {.key = {.enabled = {.counter = 1}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)1}}}}};
      {
        #line 1820 
        int tmp_6;
        #line 1820 
        if ((int)arch_static_branch(& __UNIQUE_ID_ddebug592.key.dd_key_true.key,
                           (_Bool)1) != 0) 
          #line 1820 
          tmp_6 = 0; else 
                          #line 1820 
                          tmp_6 = 1;
        #line 1820 
        branch_0 = (_Bool)(tmp_6 != 0);
        }
      #line 1820 
      if ((long)((long)((int)branch_0 != 0)) != 0L) 
                                                    #line 1820 
                                                    __dynamic_pr_debug(& __UNIQUE_ID_ddebug592,(char *)"%s:%d ASSERT %s VIOLATED!\n",(char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c",1820,(char *)"usb->urb_async_waiting == ((void *)0)");
    }
    #line 1820 
    dump_stack();
  }
  #line 1821 
  if ((long)((unsigned int)usb->in_async != 0U) != 0L) {
    {
      #line 1821 
      bool branch_1;
      #line 1821 
      struct _ddebug __UNIQUE_ID_ddebug593 = {.modname = (char *)"zd1211rw", .function = (char *)"zd_usb_iowrite16v_async_start", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c", .format = (char *)"%s:%d ASSERT %s VIOLATED!\n", .lineno = (unsigned int)1821U, .flags = (unsigned int)1U, .key = {.dd_key_true = {.key = {.enabled = {.counter = 1}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)1}}}}};
      {
        #line 1821 
        int tmp_11;
        #line 1821 
        if ((int)arch_static_branch(& __UNIQUE_ID_ddebug593.key.dd_key_true.key,
                            (_Bool)1) != 0) 
          #line 1821 
          tmp_11 = 0; else 
                           #line 1821 
                           tmp_11 = 1;
        #line 1821 
        branch_1 = (_Bool)(tmp_11 != 0);
        }
      #line 1821 
      if ((long)((long)((int)branch_1 != 0)) != 0L) 
                                                    #line 1821 
                                                    __dynamic_pr_debug(& __UNIQUE_ID_ddebug593,(char *)"%s:%d ASSERT %s VIOLATED!\n",(char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c",1821,(char *)"!usb->in_async");
    }
    #line 1821 
    dump_stack();
  }
  #line 1823 
  if (mutex_is_locked(& zd_usb_to_chip(usb)->mutex)) 
                                                     #line 1823 
                                                     tmp_22 = 0; else 
                                                                   #line 1823 
                                                                   tmp_22 = 1;
  #line 1823 
  if ((long)tmp_22 != 0L) {
    {
      #line 1823 
      bool branch_2;
      #line 1823 
      struct _ddebug __UNIQUE_ID_ddebug594 = {.modname = (char *)"zd1211rw", .function = (char *)"zd_usb_iowrite16v_async_start", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c", .format = (char *)"%s:%d ASSERT %s VIOLATED!\n", .lineno = (unsigned int)1823U, .flags = (unsigned int)1U, .key = {.dd_key_true = {.key = {.enabled = {.counter = 1}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)1}}}}};
      {
        #line 1823 
        int tmp_16;
        #line 1823 
        if ((int)arch_static_branch(& __UNIQUE_ID_ddebug594.key.dd_key_true.key,
                            (_Bool)1) != 0) 
          #line 1823 
          tmp_16 = 0; else 
                           #line 1823 
                           tmp_16 = 1;
        #line 1823 
        branch_2 = (_Bool)(tmp_16 != 0);
        }
      #line 1823 
      if ((long)((long)((int)branch_2 != 0)) != 0L) 
                                                    #line 1823 
                                                    __dynamic_pr_debug(& __UNIQUE_ID_ddebug594,(char *)"%s:%d ASSERT %s VIOLATED!\n",(char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c",1823,(char *)"mutex_is_locked(&zd_usb_to_chip(usb)->mutex)");
    }
    #line 1823 
    dump_stack();
  }
  #line 1825 
  usb->in_async = (unsigned char)1U;
  #line 1826 
  usb->cmd_error = 0;
  #line 1827 
  usb->urb_async_waiting = (struct urb *)0;
  #line 1828 
  return;
}

#line 1830  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c"
int zd_usb_iowrite16v_async_end(struct zd_usb *usb, unsigned int timeout)
{
  #line 1832 
  int r;
  #line 1834 
  int tmp_6;
  #line 1834 
  if (mutex_is_locked(& zd_usb_to_chip(usb)->mutex)) 
                                                     #line 1834 
                                                     tmp_6 = 0; else 
                                                                  #line 1834 
                                                                  tmp_6 = 1;
  #line 1834 
  if ((long)tmp_6 != 0L) {
    {
      #line 1834 
      bool branch;
      #line 1834 
      struct _ddebug __UNIQUE_ID_ddebug595 = {.modname = (char *)"zd1211rw", .function = (char *)"zd_usb_iowrite16v_async_end", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c", .format = (char *)"%s:%d ASSERT %s VIOLATED!\n", .lineno = (unsigned int)1834U, .flags = (unsigned int)1U, .key = {.dd_key_true = {.key = {.enabled = {.counter = 1}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)1}}}}};
      {
        #line 1834 
        int tmp_0;
        #line 1834 
        if ((int)arch_static_branch(& __UNIQUE_ID_ddebug595.key.dd_key_true.key,
                         (_Bool)1) != 0) 
          #line 1834 
          tmp_0 = 0; else 
                          #line 1834 
                          tmp_0 = 1;
        #line 1834 
        branch = (_Bool)(tmp_0 != 0);
        }
      #line 1834 
      if ((long)((long)((int)branch != 0)) != 0L) 
                                                  #line 1834 
                                                  __dynamic_pr_debug(& __UNIQUE_ID_ddebug595,(char *)"%s:%d ASSERT %s VIOLATED!\n",(char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c",1834,(char *)"mutex_is_locked(&zd_usb_to_chip(usb)->mutex)");
    }
    #line 1834 
    dump_stack();
  }
  #line 1835 
  if ((long)((unsigned int)usb->in_async == 0U) != 0L) {
    {
      #line 1835 
      bool branch_0;
      #line 1835 
      struct _ddebug __UNIQUE_ID_ddebug596 = {.modname = (char *)"zd1211rw", .function = (char *)"zd_usb_iowrite16v_async_end", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c", .format = (char *)"%s:%d ASSERT %s VIOLATED!\n", .lineno = (unsigned int)1835U, .flags = (unsigned int)1U, .key = {.dd_key_true = {.key = {.enabled = {.counter = 1}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)1}}}}};
      {
        #line 1835 
        int tmp_8;
        #line 1835 
        if ((int)arch_static_branch(& __UNIQUE_ID_ddebug596.key.dd_key_true.key,
                           (_Bool)1) != 0) 
          #line 1835 
          tmp_8 = 0; else 
                          #line 1835 
                          tmp_8 = 1;
        #line 1835 
        branch_0 = (_Bool)(tmp_8 != 0);
        }
      #line 1835 
      if ((long)((long)((int)branch_0 != 0)) != 0L) 
                                                    #line 1835 
                                                    __dynamic_pr_debug(& __UNIQUE_ID_ddebug596,(char *)"%s:%d ASSERT %s VIOLATED!\n",(char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c",1835,(char *)"usb->in_async");
    }
    #line 1835 
    dump_stack();
  }
  #line 1838 
  r = zd_submit_waiting_urb(usb,(_Bool)1);
  #line 1839 
  if (r != 0) {
    #line 1840 
    dev_printk((char *)"\001",& (usb->intf)->dev,(char *)"%s() ",(char *)"zd_usb_iowrite16v_async_end",r);
    #line 1844 
    usb_kill_anchored_urbs(& usb->submitted_cmds);
    #line 1845 
    goto error;
  }
  #line 1848 
  if (timeout != 0U) {
    #line 1849 
    timeout = (unsigned int)usb_wait_anchor_empty_timeout(& usb->submitted_cmds,timeout);
  }
  #line 1851 
  if (timeout == 0U) {
    #line 1852 
    usb_kill_anchored_urbs(& usb->submitted_cmds);
    #line 1853 
    if (usb->cmd_error == -2) {
      #line 1854 
      dev_printk((char *)"\001",& (usb->intf)->dev,(char *)"%s() ",(char *)"zd_usb_iowrite16v_async_end");
      #line 1855 
      r = -110;
      #line 1856 
      goto error;
    }
  }
  #line 1860 
  r = usb->cmd_error;
  #line 1861 
  error: 
         #line 1861 
  ;
  #line 1862 
  usb->in_async = (unsigned char)0U;
  #line 1863 
  return r;
}

#line 1866  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c"
int zd_usb_iowrite16v_async(struct zd_usb *usb, struct zd_ioreq16 *ioreqs, unsigned int count)
{
  #line 1869 
  int r;
  #line 1870 
  struct usb_device *udev;
  #line 1872 
  int i;
  #line 1872 
  int req_len;
  #line 1873 
  struct urb *urb;
  #line 1874 
  struct usb_host_endpoint *ep;
  #line 1876 
  int tmp_6;
  #line 1871 
  struct usb_req_write_regs *req = (struct usb_req_write_regs *)0;
  #line 1876 
  if (mutex_is_locked(& zd_usb_to_chip(usb)->mutex)) 
                                                     #line 1876 
                                                     tmp_6 = 0; else 
                                                                  #line 1876 
                                                                  tmp_6 = 1;
  #line 1876 
  if ((long)tmp_6 != 0L) {
    {
      #line 1876 
      bool branch;
      #line 1876 
      struct _ddebug __UNIQUE_ID_ddebug597 = {.modname = (char *)"zd1211rw", .function = (char *)"zd_usb_iowrite16v_async", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c", .format = (char *)"%s:%d ASSERT %s VIOLATED!\n", .lineno = (unsigned int)1876U, .flags = (unsigned int)1U, .key = {.dd_key_true = {.key = {.enabled = {.counter = 1}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)1}}}}};
      {
        #line 1876 
        int tmp_0;
        #line 1876 
        if ((int)arch_static_branch(& __UNIQUE_ID_ddebug597.key.dd_key_true.key,
                         (_Bool)1) != 0) 
          #line 1876 
          tmp_0 = 0; else 
                          #line 1876 
                          tmp_0 = 1;
        #line 1876 
        branch = (_Bool)(tmp_0 != 0);
        }
      #line 1876 
      if ((long)((long)((int)branch != 0)) != 0L) 
                                                  #line 1876 
                                                  __dynamic_pr_debug(& __UNIQUE_ID_ddebug597,(char *)"%s:%d ASSERT %s VIOLATED!\n",(char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c",1876,(char *)"mutex_is_locked(&zd_usb_to_chip(usb)->mutex)");
    }
    #line 1876 
    dump_stack();
  }
  #line 1877 
  if ((long)((unsigned int)usb->in_async == 0U) != 0L) {
    {
      #line 1877 
      bool branch_0;
      #line 1877 
      struct _ddebug __UNIQUE_ID_ddebug598 = {.modname = (char *)"zd1211rw", .function = (char *)"zd_usb_iowrite16v_async", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c", .format = (char *)"%s:%d ASSERT %s VIOLATED!\n", .lineno = (unsigned int)1877U, .flags = (unsigned int)1U, .key = {.dd_key_true = {.key = {.enabled = {.counter = 1}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)1}}}}};
      {
        #line 1877 
        int tmp_8;
        #line 1877 
        if ((int)arch_static_branch(& __UNIQUE_ID_ddebug598.key.dd_key_true.key,
                           (_Bool)1) != 0) 
          #line 1877 
          tmp_8 = 0; else 
                          #line 1877 
                          tmp_8 = 1;
        #line 1877 
        branch_0 = (_Bool)(tmp_8 != 0);
        }
      #line 1877 
      if ((long)((long)((int)branch_0 != 0)) != 0L) 
                                                    #line 1877 
                                                    __dynamic_pr_debug(& __UNIQUE_ID_ddebug598,(char *)"%s:%d ASSERT %s VIOLATED!\n",(char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c",1877,(char *)"usb->in_async");
    }
    #line 1877 
    dump_stack();
  }
  #line 1879 
  if (count == 0U) 
                   #line 1880 
                   return 0;
  #line 1881 
  if (count > 15U) {
    #line 1882 
    dev_printk((char *)"\001",& (usb->intf)->dev,(char *)"%s() ",(char *)"zd_usb_iowrite16v_async",count,15);
    #line 1885 
    return -22;
  }
  #line 1887 
  if (preempt_count() != 0) {
    #line 1888 
    dev_printk((char *)"\001",& (usb->intf)->dev,(char *)"%s() ",(char *)"zd_usb_iowrite16v_async");
    #line 1890 
    return -11;
  }
  #line 1893 
  udev = zd_usb_to_usbdev(usb);
  #line 1895 
  ;
  #line 1895 
  ep = usb_pipe_endpoint(udev,__create_pipe(udev,4U) | 1073741824U);
  #line 1896 
  if (ep == (struct usb_host_endpoint *)0) 
                                           #line 1897 
                                           return -2;
  #line 1899 
  urb = usb_alloc_urb(0,3264U);
  #line 1900 
  if (urb == (struct urb *)0) 
                              #line 1901 
                              return -12;
  #line 1903 
  req_len = (int)__ab_c_size((unsigned long)count,4UL,2UL);
  #line 1904 
  req = (struct usb_req_write_regs *)kmalloc((unsigned long)req_len,3264U);
  #line 1905 
  if (req == (struct usb_req_write_regs *)0) {
    #line 1906 
    r = -12;
    #line 1907 
    goto error;
  }
  #line 1910 
  req->id = (unsigned short)33U;
  #line 1911 
  i = 0;
  #line 1911 
  while ((unsigned int)i < count) {
    {
      #line 1912 
      struct reg_data *rw = & req->reg_writes[i];
      #line 1913 
      rw->addr = (ioreqs + (unsigned long)i)->addr;
      #line 1914 
      rw->value = (ioreqs + (unsigned long)i)->value;
    }
    #line 1911 
    i ++;
  }
  #line 1920 
  if (usb_endpoint_xfer_int(& ep->desc) != 0) {
    #line 1921 
    ;
    #line 1921 
    ;
    #line 1921 
    ;
    #line 1921 
    ;
    #line 1921 
    ;
    #line 1921 
    ;
    #line 1921 
    usb_fill_int_urb(urb,udev,__create_pipe(udev,4U) | 1073741824U,(void *)req,req_len,& iowrite16v_urb_complete,(void *)usb,(int)ep->desc.bInterval);
  }
  else {
    #line 1925 
    ;
    #line 1925 
    ;
    #line 1925 
    ;
    #line 1925 
    ;
    #line 1925 
    ;
    #line 1925 
    usb_fill_bulk_urb(urb,udev,__create_pipe(udev,4U) | 3221225472U,(void *)req,req_len,& iowrite16v_urb_complete,(void *)usb);
  }
  #line 1928 
  urb->transfer_flags |= 256U;
  #line 1931 
  r = zd_submit_waiting_urb(usb,(_Bool)0);
  #line 1932 
  if (r != 0) {
    #line 1933 
    dev_printk((char *)"\001",& (usb->intf)->dev,(char *)"%s() ",(char *)"zd_usb_iowrite16v_async",r);
    #line 1936 
    goto error;
  }
  #line 1942 
  usb->urb_async_waiting = urb;
  #line 1943 
  return 0;
  #line 1944 
  error: 
         #line 1944 
  ;
  #line 1945 
  usb_free_urb(urb);
  #line 1946 
  return r;
}

#line 1949  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c"
int zd_usb_iowrite16v(struct zd_usb *usb, struct zd_ioreq16 *ioreqs, unsigned int count)
{
  #line 1952 
  int r;
  #line 1954 
  zd_usb_iowrite16v_async_start(usb);
  #line 1955 
  r = zd_usb_iowrite16v_async(usb,ioreqs,count);
  #line 1956 
  if (r != 0) {
    #line 1957 
    zd_usb_iowrite16v_async_end(usb,0U);
    #line 1958 
    return r;
  }
  #line 1960 
  return zd_usb_iowrite16v_async_end(usb,50U);
}

#line 1963  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c"
int zd_usb_rfwrite(struct zd_usb *usb, u32 value, u8 bits)
{
  #line 1965 
  int r;
  #line 1966 
  struct usb_device *udev;
  #line 1968 
  int i;
  #line 1968 
  int req_len;
  #line 1968 
  int actual_req_len;
  #line 1969 
  u16 bit_value_template;
  #line 2008 
  int tmp_7;
  #line 1967 
  struct usb_req_rfwrite *req = (struct usb_req_rfwrite *)0;
  #line 1971 
  if (preempt_count() != 0) {
    #line 1972 
    dev_printk((char *)"\001",& (usb->intf)->dev,(char *)"%s() ",(char *)"zd_usb_rfwrite");
    #line 1974 
    return -11;
  }
  #line 1976 
  if ((unsigned int)bits <= 15U) {
    #line 1977 
    dev_printk((char *)"\001",& (usb->intf)->dev,(char *)"%s() ",(char *)"zd_usb_rfwrite",(int)bits,16);
    #line 1981 
    return -22;
  }
  #line 1983 
  if ((unsigned int)bits > 28U) {
    #line 1984 
    dev_printk((char *)"\001",& (usb->intf)->dev,(char *)"%s() ",(char *)"zd_usb_rfwrite",(int)bits,28);
    #line 1987 
    return -22;
  }
  #line 1990 
  if (((unsigned long)value & (18446744073709551615UL << (int)bits)) != 0UL) {
    #line 1991 
    dev_printk((char *)"\001",& (usb->intf)->dev,(char *)"%s() ",(char *)"zd_usb_rfwrite",value,(int)bits);
    #line 1994 
    return -22;
  }
  #line 1998 
  dev_printk((char *)"\001",& (usb->intf)->dev,(char *)"%s() ",(char *)"zd_usb_rfwrite",value,(int)bits);
  #line 2000 
  r = zd_usb_ioread16(usb,& bit_value_template,(unsigned short)37676);
  #line 2001 
  if (r != 0) {
    #line 2002 
    dev_printk((char *)"\001",& (usb->intf)->dev,(char *)"%s() ",(char *)"zd_usb_rfwrite",r);
    #line 2004 
    return r;
  }
  #line 2006 
  bit_value_template = (unsigned short)((unsigned int)bit_value_template & 65521U);
  #line 2008 
  if (mutex_is_locked(& zd_usb_to_chip(usb)->mutex)) 
                                                     #line 2008 
                                                     tmp_7 = 0; else 
                                                                  #line 2008 
                                                                  tmp_7 = 1;
  #line 2008 
  if ((long)tmp_7 != 0L) {
    {
      #line 2008 
      bool branch;
      #line 2008 
      struct _ddebug __UNIQUE_ID_ddebug599 = {.modname = (char *)"zd1211rw", .function = (char *)"zd_usb_rfwrite", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c", .format = (char *)"%s:%d ASSERT %s VIOLATED!\n", .lineno = (unsigned int)2008U, .flags = (unsigned int)1U, .key = {.dd_key_true = {.key = {.enabled = {.counter = 1}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)1}}}}};
      {
        #line 2008 
        int tmp_1;
        #line 2008 
        if ((int)arch_static_branch(& __UNIQUE_ID_ddebug599.key.dd_key_true.key,
                           (_Bool)1) != 0) 
          #line 2008 
          tmp_1 = 0; else 
                          #line 2008 
                          tmp_1 = 1;
        #line 2008 
        branch = (_Bool)(tmp_1 != 0);
        }
      #line 2008 
      if ((long)((long)((int)branch != 0)) != 0L) 
                                                  #line 2008 
                                                  __dynamic_pr_debug(& __UNIQUE_ID_ddebug599,(char *)"%s:%d ASSERT %s VIOLATED!\n",(char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_usb.c",2008,(char *)"mutex_is_locked(&zd_usb_to_chip(usb)->mutex)");
    }
    #line 2008 
    dump_stack();
  }
  #line 2012 
  if ((long)(((unsigned long)bits + 3UL) * 2UL > 64UL) != 0L) {
    #line 2013 
    ldv_inline_asm();
    #line 2014 
    ldv_inline_asm();
    #line 2015 
    ldv_inline_asm();
    #line 2012 
    ;
  }
  #line 2015 
  req_len = (int)(((unsigned long)bits + 3UL) * (unsigned long)2U);
  #line 2016 
  req = (struct usb_req_rfwrite *)(& usb->req_buf);
  #line 2018 
  req->id = (unsigned short)35U;
  #line 2020 
  req->value = (unsigned short)2U;
  #line 2021 
  req->bits = (unsigned short)bits;
  #line 2023 
  i = 0;
  #line 2023 
  while ((int)bits > i) {
    {
      #line 2024 
      u16 bv = bit_value_template;
      #line 2025 
      if (((unsigned int)(1 << (((int)bits + -1) - i)) & value) != 0U) 
        #line 2026 
        bv = (unsigned short)((unsigned int)bv | 8U);
      #line 2027 
      req->bit_values[i] = bv;
    }
    #line 2023 
    i ++;
  }
  #line 2030 
  udev = zd_usb_to_usbdev(usb);
  #line 2031 
  r = zd_ep_regs_out_msg(udev,(void *)req,req_len,& actual_req_len,50);
  #line 2032 
  if (r != 0) {
    #line 2033 
    dev_printk((char *)"\001",& (usb->intf)->dev,(char *)"%s() ",(char *)"zd_usb_rfwrite",r);
    #line 2035 
    goto out;
  }
  #line 2037 
  if (req_len != actual_req_len) {
    #line 2038 
    dev_printk((char *)"\001",& (usb->intf)->dev,(char *)"%s() ",(char *)"zd_usb_rfwrite",req_len,actual_req_len);
    #line 2041 
    r = -5;
    #line 2042 
    goto out;
  }
  #line 2046 
  out: 
       #line 2046 
  ;
  #line 2047 
  return r;
}

#line 93  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_usb.i.aux"
struct usb_driver *emg_alias_driver = & driver;
#line 94  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_usb.i.aux"
struct usb_device_id (*emg_alias_usb_ids)[60U] = & usb_ids;
#line 98 
#line 98 
void emg_ieee80211_free_hw(struct ieee80211_hw *arg0);
#line 99 
#line 99 
_Bool emg_queue_delayed_work(struct workqueue_struct *arg0, struct delayed_work *arg1, unsigned long arg2);
#line 100 
#line 100 
_Bool emg_schedule_work(struct work_struct *arg0);
#line 101 
#line 101 
void emg_tasklet_schedule(struct tasklet_struct *arg0);
#line 102 
#line 102 
void emg_usb_deregister(struct usb_driver *arg0);
#line 103 
#line 103 
void emg_usb_kill_urb(struct urb *arg0);
#line 104 
#line 104 
int emg_usb_register_driver(struct usb_driver *arg0, struct module *arg1, char *arg2);
#line 105 
#line 105 
int emg_usb_reset_device(struct usb_device *arg0);
#line 106 
#line 106 
int emg_usb_submit_urb(struct urb *arg0, unsigned int arg1);
#line 110  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_usb.i.aux"
void emg_wrapper_disconnect(struct usb_interface *arg0)
{
  #line 111 
  disconnect(arg0);
  #line 112 
  return;
}

#line 115  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_usb.i.aux"
int emg_wrapper_post_reset(struct usb_interface *arg0)
{
  #line 116 
  return post_reset(arg0);
}

#line 120  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_usb.i.aux"
int emg_wrapper_pre_reset(struct usb_interface *arg0)
{
  #line 121 
  return pre_reset(arg0);
}

#line 125  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_usb.i.aux"
int emg_wrapper_probe(struct usb_interface *arg0, struct usb_device_id *arg1)
{
  #line 126 
  return probe(arg0,arg1);
}

#line 130  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_usb.i.aux"
void emg_usb_exit(void)
{
  #line 131 
  usb_exit();
  #line 132 
  return;
}

#line 134  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_usb.i.aux"
int emg_usb_init(void)
{
  #line 135 
  return usb_init();
}

#line 153  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_usb.i.aux"
static void cif_set_bit(long nr, unsigned long *addr)
{
  #line 156 
  ldv_set_bit(nr,addr);
  #line 157 
  return;
}

#line 167  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_usb.i.aux"
static void INIT_LIST_HEAD(struct list_head *list)
{
  #line 170 
  ldv_init_list_head(list);
  #line 171 
  return;
}

#line 337  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_usb.i.aux"
static bool cif_queue_delayed_work(struct workqueue_struct *wq, struct delayed_work *dwork, unsigned long delay)
{
  #line 341 
  return emg_queue_delayed_work(wq,dwork,delay);
}

#line 483  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_usb.i.aux"
static void *kmalloc(size_t size, gfp_t flags)
{
  #line 486 
  return ldv_kmalloc(size,flags);
}

#line 497  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_usb.i.aux"
static void *kcalloc(size_t n, size_t size, gfp_t flags)
{
  #line 500 
  return ldv_kcalloc(n,size,flags);
}

#line 518  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_usb.i.aux"
static void *kzalloc(size_t size, gfp_t flags)
{
  #line 521 
  return ldv_kzalloc(size,flags);
}

#line 698  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_usb.i.aux"
static bool cif_schedule_work(struct work_struct *work)
{
  #line 702 
  return emg_schedule_work(work);
}

#line 840  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_usb.i.aux"
static int cif_request_firmware(struct firmware **fw, char *name, struct device *device)
{
  #line 843 
  return ldv_request_firmware(fw);
}

#line 847  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_usb.i.aux"
static void cif_release_firmware(struct firmware *fw)
{
  #line 850 
  ldv_release_firmware(fw);
  #line 851 
  return;
}

#line 854  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_usb.i.aux"
static void cif___ldv_spin_lock_lock_of_zd_usb_interrupt(spinlock_t *lock)
{
  #line 857 
  ldv_spin_model_lock((char *)"lock_of_zd_usb_interrupt");
  #line 859 
  __ldv_spin_lock(lock);
  #line 860 
  return;
}

#line 863  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_usb.i.aux"
static void cif_spin_unlock_irqrestore_lock_of_zd_usb_interrupt(spinlock_t *lock, unsigned long flags)
{
  #line 866 
  ldv_spin_model_unlock((char *)"lock_of_zd_usb_interrupt");
  #line 868 
  spin_unlock_irqrestore(lock,flags);
  #line 869 
  return;
}

#line 872  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_usb.i.aux"
static void cif_spin_lock_lock_of_zd_mac(spinlock_t *lock)
{
  #line 875 
  ldv_spin_model_lock((char *)"lock_of_zd_mac");
  #line 877 
  spin_lock(lock);
  #line 878 
  return;
}

#line 881  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_usb.i.aux"
static void cif_spin_unlock_lock_of_zd_mac(spinlock_t *lock)
{
  #line 884 
  ldv_spin_model_unlock((char *)"lock_of_zd_mac");
  #line 886 
  spin_unlock(lock);
  #line 887 
  return;
}

#line 890  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_usb.i.aux"
static int cif_usb_submit_urb(struct urb *urb, gfp_t mem_flags)
{
  #line 894 
  return emg_usb_submit_urb(urb,mem_flags);
}

#line 898  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_usb.i.aux"
static void cif_spin_lock_irq_lock_of_zd_usb_interrupt(spinlock_t *lock)
{
  #line 901 
  ldv_spin_model_lock((char *)"lock_of_zd_usb_interrupt");
  #line 903 
  spin_lock_irq(lock);
  #line 904 
  return;
}

#line 907  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_usb.i.aux"
static void cif_spin_unlock_irq_lock_of_zd_usb_interrupt(spinlock_t *lock)
{
  #line 910 
  ldv_spin_model_unlock((char *)"lock_of_zd_usb_interrupt");
  #line 912 
  spin_unlock_irq(lock);
  #line 913 
  return;
}

#line 916  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_usb.i.aux"
static void cif_usb_kill_urb(struct urb *urb)
{
  #line 920 
  emg_usb_kill_urb(urb);
  #line 921 
  return;
}

#line 924  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_usb.i.aux"
static void cif_tasklet_schedule(struct tasklet_struct *t)
{
  #line 928 
  emg_tasklet_schedule(t);
  #line 929 
  return;
}

#line 932  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_usb.i.aux"
static void cif___ldv_spin_lock_lock_of_zd_usb_rx(spinlock_t *lock)
{
  #line 935 
  ldv_spin_model_lock((char *)"lock_of_zd_usb_rx");
  #line 937 
  __ldv_spin_lock(lock);
  #line 938 
  return;
}

#line 941  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_usb.i.aux"
static void cif_spin_unlock_irqrestore_lock_of_zd_usb_rx(spinlock_t *lock, unsigned long flags)
{
  #line 944 
  ldv_spin_model_unlock((char *)"lock_of_zd_usb_rx");
  #line 946 
  spin_unlock_irqrestore(lock,flags);
  #line 947 
  return;
}

#line 950  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_usb.i.aux"
static void cif_spin_lock_irq_lock_of_zd_usb_rx(spinlock_t *lock)
{
  #line 953 
  ldv_spin_model_lock((char *)"lock_of_zd_usb_rx");
  #line 955 
  spin_lock_irq(lock);
  #line 956 
  return;
}

#line 959  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_usb.i.aux"
static void cif_spin_unlock_irq_lock_of_zd_usb_rx(spinlock_t *lock)
{
  #line 962 
  ldv_spin_model_unlock((char *)"lock_of_zd_usb_rx");
  #line 964 
  spin_unlock_irq(lock);
  #line 965 
  return;
}

#line 968  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_usb.i.aux"
static void cif_mutex_lock_setup_mutex_of_zd_usb_rx(struct mutex *lock)
{
  #line 971 
  ldv_mutex_model_lock(lock,(char *)"setup_mutex_of_zd_usb_rx");
  #line 972 
  return;
}

#line 975  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_usb.i.aux"
static void cif_mutex_unlock_setup_mutex_of_zd_usb_rx(struct mutex *lock)
{
  #line 978 
  ldv_mutex_model_unlock(lock,(char *)"setup_mutex_of_zd_usb_rx");
  #line 979 
  return;
}

#line 982  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_usb.i.aux"
static void cif___ldv_spin_lock_lock_of_zd_usb_tx(spinlock_t *lock)
{
  #line 985 
  ldv_spin_model_lock((char *)"lock_of_zd_usb_tx");
  #line 987 
  __ldv_spin_lock(lock);
  #line 988 
  return;
}

#line 991  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_usb.i.aux"
static void cif_spin_unlock_irqrestore_lock_of_zd_usb_tx(spinlock_t *lock, unsigned long flags)
{
  #line 994 
  ldv_spin_model_unlock((char *)"lock_of_zd_usb_tx");
  #line 996 
  spin_unlock_irqrestore(lock,flags);
  #line 997 
  return;
}

#line 1000  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_usb.i.aux"
static void cif___ldv_spin_lock_lock_of_sk_buff_head(spinlock_t *lock)
{
  #line 1003 
  ldv_spin_model_lock((char *)"lock_of_sk_buff_head");
  #line 1005 
  __ldv_spin_lock(lock);
  #line 1006 
  return;
}

#line 1009  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_usb.i.aux"
static void cif_spin_unlock_irqrestore_lock_of_sk_buff_head(spinlock_t *lock, unsigned long flags)
{
  #line 1012 
  ldv_spin_model_unlock((char *)"lock_of_sk_buff_head");
  #line 1014 
  spin_unlock_irqrestore(lock,flags);
  #line 1015 
  return;
}

#line 1018  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_usb.i.aux"
static int cif_usb_reset_device(struct usb_device *dev)
{
  #line 1022 
  return emg_usb_reset_device(dev);
}

#line 1026  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_usb.i.aux"
static void cif_ieee80211_free_hw(struct ieee80211_hw *hw)
{
  #line 1030 
  emg_ieee80211_free_hw(hw);
  #line 1031 
  return;
}

#line 1034  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_usb.i.aux"
static void cif_mutex_lock_mutex_of_zd_chip(struct mutex *lock)
{
  #line 1037 
  ldv_mutex_model_lock(lock,(char *)"mutex_of_zd_chip");
  #line 1038 
  return;
}

#line 1041  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_usb.i.aux"
static void cif_mutex_unlock_mutex_of_zd_chip(struct mutex *lock)
{
  #line 1044 
  ldv_mutex_model_unlock(lock,(char *)"mutex_of_zd_chip");
  #line 1045 
  return;
}

#line 1048  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_usb.i.aux"
static int cif_usb_register_driver(struct usb_driver *ldv_func_arg1, struct module *ldv_func_arg2, char *ldv_func_arg3)
{
  #line 1052 
  return emg_usb_register_driver(ldv_func_arg1,ldv_func_arg2,ldv_func_arg3);
}

#line 1056  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_usb.i.aux"
static void cif_usb_deregister(struct usb_driver *ldv_func_arg1)
{
  #line 1060 
  emg_usb_deregister(ldv_func_arg1);
  #line 1061 
  return;
}

#line 76  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_rf.h"
#line 76 
int zd_rf_generic_patch_6m(struct zd_rf *rf, u8 channel);
#line 94 
#line 414  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_rf_al2230.c"
int zd_rf_init_al2230(struct zd_rf *rf);
#line 776  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.h"
__inline static struct zd_chip *zd_rf_to_chip(struct zd_rf *rf)
{
  #line 778 
  void *__mptr;
  #line 778 
  __mptr = (void *)rf;
  #line 778 
  return ((struct zd_chip *)(__mptr + 18446744073709540416U));
}

#line 791  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.h"
__inline static int zd_chip_is_zd1211b(struct zd_chip *chip)
{
  #line 793 
  return (int)chip->usb.is_zd1211b;
}

#line 820  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.h"
__inline static int zd_iowrite16_locked(struct zd_chip *chip, u16 value, zd_addr_t addr)
{
  #line 823 
  struct zd_ioreq16 ioreq;
  #line 825 
  int tmp_5;
  #line 825 
  if (mutex_is_locked(& chip->mutex)) 
                                      #line 825 
                                      tmp_5 = 0; else 
                                                      #line 825 
                                                      tmp_5 = 1;
  #line 825 
  if ((long)tmp_5 != 0L) {
    {
      #line 825 
      bool branch;
      #line 825 
      struct _ddebug __UNIQUE_ID_ddebug563 = {.modname = (char *)"zd1211rw", .function = (char *)"zd_iowrite16_locked", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.h", .format = (char *)"%s:%d ASSERT %s VIOLATED!\n", .lineno = (unsigned int)825U, .flags = (unsigned int)1U, .key = {.dd_key_true = {.key = {.enabled = {.counter = 1}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)1}}}}};
      {
        #line 825 
        int tmp_0;
        #line 825 
        if ((int)arch_static_branch(& __UNIQUE_ID_ddebug563.key.dd_key_true.key,
                         (_Bool)1) != 0) 
          #line 825 
          tmp_0 = 0; else 
                          #line 825 
                          tmp_0 = 1;
        #line 825 
        branch = (_Bool)(tmp_0 != 0);
        }
      #line 825 
      if ((long)((long)((int)branch != 0)) != 0L) 
                                                  #line 825 
                                                  __dynamic_pr_debug(& __UNIQUE_ID_ddebug563,(char *)"%s:%d ASSERT %s VIOLATED!\n",(char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.h",825,(char *)"mutex_is_locked(&chip->mutex)");
    }
    #line 825 
    dump_stack();
  }
  #line 826 
  ioreq.addr = addr;
  #line 827 
  ioreq.value = value;
  #line 829 
  return zd_usb_iowrite16v(& chip->usb,& ioreq,1U);
}

#line 832 
#line 832 
int zd_iowrite16a_locked(struct zd_chip *chip, struct zd_ioreq16 *ioreqs, unsigned int count);
#line 852  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.h"
__inline static int zd_rfwrite_locked(struct zd_chip *chip, u32 value, u8 bits)
{
  #line 854 
  int tmp_5;
  #line 854 
  if (mutex_is_locked(& chip->mutex)) 
                                      #line 854 
                                      tmp_5 = 0; else 
                                                      #line 854 
                                                      tmp_5 = 1;
  #line 854 
  if ((long)tmp_5 != 0L) {
    {
      #line 854 
      bool branch;
      #line 854 
      struct _ddebug __UNIQUE_ID_ddebug564 = {.modname = (char *)"zd1211rw", .function = (char *)"zd_rfwrite_locked", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.h", .format = (char *)"%s:%d ASSERT %s VIOLATED!\n", .lineno = (unsigned int)854U, .flags = (unsigned int)1U, .key = {.dd_key_true = {.key = {.enabled = {.counter = 1}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)1}}}}};
      {
        #line 854 
        int tmp_0;
        #line 854 
        if ((int)arch_static_branch(& __UNIQUE_ID_ddebug564.key.dd_key_true.key,
                         (_Bool)1) != 0) 
          #line 854 
          tmp_0 = 0; else 
                          #line 854 
                          tmp_0 = 1;
        #line 854 
        branch = (_Bool)(tmp_0 != 0);
        }
      #line 854 
      if ((long)((long)((int)branch != 0)) != 0L) 
                                                  #line 854 
                                                  __dynamic_pr_debug(& __UNIQUE_ID_ddebug564,(char *)"%s:%d ASSERT %s VIOLATED!\n",(char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.h",854,(char *)"mutex_is_locked(&chip->mutex)");
    }
    #line 854 
    dump_stack();
  }
  #line 855 
  return zd_usb_rfwrite(& chip->usb,value,(unsigned char)((int)bits));
}

#line 860 
#line 860 
int zd_rfwritev_locked(struct zd_chip *chip, u32 *values, unsigned int count, u8 bits);
#line 862 
#line 862 
int zd_rfwritev_cr_locked(struct zd_chip *chip, u32 *values, unsigned int count);
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_rf_al2230.c"
static u32 zd1211_al2230_table[14U][3U] = {{259984U, 209713U, 13U}, {259984U, 734001U, 13U}, {255888U, 209713U, 13U}, {255888U, 734001U, 13U}, {260000U, 209713U, 13U}, {260000U, 734001U, 13U}, {255904U, 209713U, 13U}, {255904U, 734001U, 13U}, {260016U, 209713U, 13U}, {260016U, 734001U, 13U}, {255920U, 209713U, 13U}, {255920U, 734001U, 13U}, {260032U, 209713U, 13U}, {255936U, 419425U, 13U}};
#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_rf_al2230.c"
static u32 zd1211b_al2230_table[14U][3U] = {{651200U, 9227456U, 11534336U}, {651200U, 9227472U, 11534336U}, {649152U, 9227456U, 11534336U}, {649152U, 9227472U, 11534336U}, {389056U, 9227456U, 11534336U}, {389056U, 9227472U, 11534336U}, {387008U, 9227456U, 11534336U}, {387008U, 9227472U, 11534336U}, {913344U, 9227456U, 11534336U}, {913344U, 9227472U, 11534336U}, {911296U, 9227456U, 11534336U}, {911296U, 9227472U, 11534336U}, {257984U, 9227456U, 11534336U}, {255936U, 8808032U, 11534336U}};
#line 50  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_rf_al2230.c"
static struct zd_ioreq16 zd1211b_ioreqs_shared_1[2U] = {{.addr = (unsigned short)37824U, .value = (unsigned short)87U}, {.addr = (unsigned short)36900U, .value = (unsigned short)224U}};
#line 54  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_rf_al2230.c"
static struct zd_ioreq16 ioreqs_init_al2230s[10U] = {{.addr = (unsigned short)37052U, .value = (unsigned short)30U}, {.addr = (unsigned short)37288U, .value = (unsigned short)34U}, {.addr = (unsigned short)37292U, .value = (unsigned short)42U}, {.addr = (unsigned short)37300U, .value = (unsigned short)19U}, {.addr = (unsigned short)37336U, .value = (unsigned short)248U}, {.addr = (unsigned short)37340U, .value = (unsigned short)18U}, {.addr = (unsigned short)37352U, .value = (unsigned short)224U}, {.addr = (unsigned short)37376U, .value = (unsigned short)16U}, {.addr = (unsigned short)37380U, .value = (unsigned short)14U}, {.addr = (unsigned short)37384U, .value = (unsigned short)16U}};
#line 66  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_rf_al2230.c"
static int zd1211b_al2230_finalize_rf(struct zd_chip *chip)
{
  #line 68 
  int r;
  #line 69 
  struct zd_ioreq16 ioreqs[9U] = {{.addr = (unsigned short)37184U, .value = (unsigned short)48U}, {.addr = (unsigned short)37188U, .value = (unsigned short)48U}, {.addr = (unsigned short)37180U, .value = (unsigned short)88U}, {.addr = (unsigned short)36912U, .value = (unsigned short)240U}, {.addr = (unsigned short)37172U, .value = (unsigned short)27U}, {.addr = (unsigned short)37176U, .value = (unsigned short)88U}, {.addr = (unsigned short)37676U, .value = (unsigned short)6U}, {.addr = (unsigned short)0, .value = (unsigned short)0}, {.addr = (unsigned short)37824U, .value = (unsigned short)128U}};
  #line 78 
  r = zd_iowrite16a_locked(chip,(struct zd_ioreq16 *)(& ioreqs),9U);
  #line 79 
  if (r != 0) 
              #line 80 
              return r;
  #line 83 
  if ((unsigned int)chip->new_phy_layout != 0U) {
    #line 84 
    r = zd_iowrite16_locked(chip,(unsigned short)225,(unsigned short)36900);
    #line 85 
    if (r != 0) 
                #line 86 
                return r;
  }
  #line 89 
  return zd_iowrite16_locked(chip,(unsigned short)6,(unsigned short)37676);
}

#line 92  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_rf_al2230.c"
static int zd1211_al2230_init_hw(struct zd_rf *rf)
{
  #line 94 
  int r;
  #line 95 
  struct zd_chip *chip = zd_rf_to_chip(rf);
  #line 97 
  struct zd_ioreq16 ioreqs_init[52U] = {{.addr = (unsigned short)36924U, .value = (unsigned short)32U}, {.addr = (unsigned short)36956U, .value = (unsigned short)64U}, {.addr = (unsigned short)36960U, .value = (unsigned short)32U}, {.addr = (unsigned short)36968U, .value = (unsigned short)17U}, {.addr = (unsigned short)36976U, .value = (unsigned short)62U}, {.addr = (unsigned short)36980U, .value = (unsigned short)0U}, {.addr = (unsigned short)37040U, .value = (unsigned short)51U}, {.addr = (unsigned short)37288U, .value = (unsigned short)42U}, {.addr = (unsigned short)37292U, .value = (unsigned short)26U}, {.addr = (unsigned short)37300U, .value = (unsigned short)9U}, {.addr = (unsigned short)37304U, .value = (unsigned short)39U}, {.addr = (unsigned short)37308U, .value = (unsigned short)43U}, {.addr = (unsigned short)37312U, .value = (unsigned short)43U}, {.addr = (unsigned short)37340U, .value = (unsigned short)10U}, {.addr = (unsigned short)36904U, .value = (unsigned short)137U}, {.addr = (unsigned short)36932U, .value = (unsigned short)40U}, {.addr = (unsigned short)36968U, .value = (unsigned short)147U}, {.addr = (unsigned short)37000U, .value = (unsigned short)48U}, {.addr = (unsigned short)37004U, .value = (unsigned short)62U}, {.addr = (unsigned short)37028U, .value = (unsigned short)36U}, {.addr = (unsigned short)37040U, .value = (unsigned short)50U}, {.addr = (unsigned short)37048U, .value = (unsigned short)150U}, {.addr = (unsigned short)37052U, .value = (unsigned short)30U}, {.addr = (unsigned short)37180U, .value = (unsigned short)88U}, {.addr = (unsigned short)37184U, .value = (unsigned short)48U}, {.addr = (unsigned short)37188U, .value = (unsigned short)48U}, {.addr = (unsigned short)37212U, .value = (unsigned short)10U}, {.addr = (unsigned short)37220U, .value = (unsigned short)4U}, {.addr = (unsigned short)37232U, .value = (unsigned short)10U}, {.addr = (unsigned short)37260U, .value = (unsigned short)40U}, {.addr = (unsigned short)37264U, .value = (unsigned short)0U}, {.addr = (unsigned short)37268U, .value = (unsigned short)19U}, {.addr = (unsigned short)37272U, .value = (unsigned short)39U}, {.addr = (unsigned short)37288U, .value = (unsigned short)36U}, {.addr = (unsigned short)37292U, .value = (unsigned short)42U}, {.addr = (unsigned short)37300U, .value = (unsigned short)9U}, {.addr = (unsigned short)37304U, .value = (unsigned short)19U}, {.addr = (unsigned short)37308U, .value = (unsigned short)31U}, {.addr = (unsigned short)37312U, .value = (unsigned short)31U}, {.addr = (unsigned short)37316U, .value = (unsigned short)39U}, {.addr = (unsigned short)37320U, .value = (unsigned short)39U}, {.addr = (unsigned short)37324U, .value = (unsigned short)36U}, {.addr = (unsigned short)37328U, .value = (unsigned short)36U}, {.addr = (unsigned short)37332U, .value = (unsigned short)244U}, {.addr = (unsigned short)37336U, .value = (unsigned short)252U}, {.addr = (unsigned short)37340U, .value = (unsigned short)16U}, {.addr = (unsigned short)37344U, .value = (unsigned short)79U}, {.addr = (unsigned short)37348U, .value = (unsigned short)119U}, {.addr = (unsigned short)37352U, .value = (unsigned short)224U}, {.addr = (unsigned short)37412U, .value = (unsigned short)136U}, {.addr = (unsigned short)37872U, .value = (unsigned short)255U}, {.addr = (unsigned short)37876U, .value = (unsigned short)255U}};
  #line 126 
  struct zd_ioreq16 ioreqs_pll[4U] = {{.addr = (unsigned short)37868U, .value = (unsigned short)47U}, {.addr = (unsigned short)37868U, .value = (unsigned short)63U}, {.addr = (unsigned short)37416U, .value = (unsigned short)40U}, {.addr = (unsigned short)37676U, .value = (unsigned short)6U}};
  #line 134 
  u32 rv1[6U] = {259984U, 209713U, 13U, 734001U, 243730U, 65523U};
  #line 145 
  u32 rv2[11U] = {3492U, 1002949U, 525750U, 71303U, 1672U, 263097U, 56250U, 2459U, 778236U, 13U, 20495U};
  #line 159 
  u32 rv3[5U] = {53263U, 19471U, 21519U, 28687U, 20495U};
  #line 167 
  r = zd_iowrite16a_locked(chip,(struct zd_ioreq16 *)(& ioreqs_init),52U);
  #line 168 
  if (r != 0) 
              #line 169 
              return r;
  #line 171 
  if ((unsigned int)chip->al2230s_bit != 0U || (unsigned int)chip->rf.type == 10U) {
    #line 172 
    r = zd_iowrite16a_locked(chip,(struct zd_ioreq16 *)(& ioreqs_init_al2230s),10U);
    #line 174 
    if (r != 0) 
                #line 175 
                return r;
  }
  #line 178 
  r = zd_rfwritev_locked(chip,(u32 *)(& rv1),6U,(unsigned char)24);
  #line 179 
  if (r != 0) 
              #line 180 
              return r;
  #line 183 
  if ((unsigned int)chip->al2230s_bit != 0U || (unsigned int)chip->rf.type == 10U) 
    #line 184 
    r = zd_rfwrite_locked(chip,2084U,(unsigned char)24); else 
                                                              #line 186 
                                                              r = zd_rfwrite_locked(chip,1444U,(unsigned char)24);
  #line 187 
  if (r != 0) 
              #line 188 
              return r;
  #line 190 
  r = zd_rfwritev_locked(chip,(u32 *)(& rv2),11U,(unsigned char)24);
  #line 191 
  if (r != 0) 
              #line 192 
              return r;
  #line 194 
  r = zd_iowrite16a_locked(chip,(struct zd_ioreq16 *)(& ioreqs_pll),4U);
  #line 195 
  if (r != 0) 
              #line 196 
              return r;
  #line 198 
  r = zd_rfwritev_locked(chip,(u32 *)(& rv3),5U,(unsigned char)24);
  #line 199 
  if (r != 0) 
              #line 200 
              return r;
  #line 202 
  return 0;
}

#line 205  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_rf_al2230.c"
static int zd1211b_al2230_init_hw(struct zd_rf *rf)
{
  #line 207 
  int r;
  #line 208 
  struct zd_chip *chip = zd_rf_to_chip(rf);
  #line 210 
  struct zd_ioreq16 ioreqs1[62U] = {{.addr = (unsigned short)36904U, .value = (unsigned short)137U}, {.addr = (unsigned short)36924U, .value = (unsigned short)32U}, {.addr = (unsigned short)36932U, .value = (unsigned short)43U}, {.addr = (unsigned short)36956U, .value = (unsigned short)64U}, {.addr = (unsigned short)36960U, .value = (unsigned short)32U}, {.addr = (unsigned short)36968U, .value = (unsigned short)147U}, {.addr = (unsigned short)36976U, .value = (unsigned short)62U}, {.addr = (unsigned short)36980U, .value = (unsigned short)0U}, {.addr = (unsigned short)36996U, .value = (unsigned short)40U}, {.addr = (unsigned short)37000U, .value = (unsigned short)48U}, {.addr = (unsigned short)37004U, .value = (unsigned short)62U}, {.addr = (unsigned short)37028U, .value = (unsigned short)36U}, {.addr = (unsigned short)37040U, .value = (unsigned short)50U}, {.addr = (unsigned short)37048U, .value = (unsigned short)153U}, {.addr = (unsigned short)37052U, .value = (unsigned short)30U}, {.addr = (unsigned short)37056U, .value = (unsigned short)6U}, {.addr = (unsigned short)37060U, .value = (unsigned short)249U}, {.addr = (unsigned short)37068U, .value = (unsigned short)1U}, {.addr = (unsigned short)37072U, .value = (unsigned short)128U}, {.addr = (unsigned short)37076U, .value = (unsigned short)126U}, {.addr = (unsigned short)37124U, .value = (unsigned short)0U}, {.addr = (unsigned short)37128U, .value = (unsigned short)0U}, {.addr = (unsigned short)37132U, .value = (unsigned short)0U}, {.addr = (unsigned short)37136U, .value = (unsigned short)0U}, {.addr = (unsigned short)37140U, .value = (unsigned short)40U}, {.addr = (unsigned short)37180U, .value = (unsigned short)88U}, {.addr = (unsigned short)37184U, .value = (unsigned short)48U}, {.addr = (unsigned short)37188U, .value = (unsigned short)48U}, {.addr = (unsigned short)37212U, .value = (unsigned short)10U}, {.addr = (unsigned short)37220U, .value = (unsigned short)4U}, {.addr = (unsigned short)37228U, .value = (unsigned short)0U}, {.addr = (unsigned short)37232U, .value = (unsigned short)10U}, {.addr = (unsigned short)37256U, .value = (unsigned short)141U}, {.addr = (unsigned short)37260U, .value = (unsigned short)0U}, {.addr = (unsigned short)37268U, .value = (unsigned short)19U}, {.addr = (unsigned short)37272U, .value = (unsigned short)39U}, {.addr = (unsigned short)37288U, .value = (unsigned short)36U}, {.addr = (unsigned short)37292U, .value = (unsigned short)42U}, {.addr = (unsigned short)37300U, .value = (unsigned short)19U}, {.addr = (unsigned short)37304U, .value = (unsigned short)31U}, {.addr = (unsigned short)37308U, .value = (unsigned short)31U}, {.addr = (unsigned short)37312U, .value = (unsigned short)31U}, {.addr = (unsigned short)37316U, .value = (unsigned short)39U}, {.addr = (unsigned short)37320U, .value = (unsigned short)39U}, {.addr = (unsigned short)37324U, .value = (unsigned short)38U}, {.addr = (unsigned short)37328U, .value = (unsigned short)36U}, {.addr = (unsigned short)37332U, .value = (unsigned short)250U}, {.addr = (unsigned short)37336U, .value = (unsigned short)250U}, {.addr = (unsigned short)37340U, .value = (unsigned short)16U}, {.addr = (unsigned short)37344U, .value = (unsigned short)79U}, {.addr = (unsigned short)37348U, .value = (unsigned short)108U}, {.addr = (unsigned short)37352U, .value = (unsigned short)252U}, {.addr = (unsigned short)37356U, .value = (unsigned short)87U}, {.addr = (unsigned short)37364U, .value = (unsigned short)173U}, {.addr = (unsigned short)37368U, .value = (unsigned short)108U}, {.addr = (unsigned short)37372U, .value = (unsigned short)3U}, {.addr = (unsigned short)37412U, .value = (unsigned short)80U}, {.addr = (unsigned short)37416U, .value = (unsigned short)168U}, {.addr = (unsigned short)37440U, .value = (unsigned short)172U}, {.addr = (unsigned short)37464U, .value = (unsigned short)13U}, {.addr = (unsigned short)37872U, .value = (unsigned short)52U}, {.addr = (unsigned short)37876U, .value = (unsigned short)52U}};
  #line 261 
  u32 rv1[4U] = {9227472U, 4726208U, 13631232U, 2465792U};
  #line 268 
  u32 rv2[11U] = {2465792U, 10728176U, 7184400U, 14901888U, 1138688U, 10338336U, 6150912U, 14258176U, 4193232U, 11534336U, 15735296U};
  #line 286 
  struct zd_ioreq16 ioreqs2[2U] = {{.addr = (unsigned short)37868U, .value = (unsigned short)47U}, {.addr = (unsigned short)37868U, .value = (unsigned short)127U}};
  #line 291 
  u32 rv3[3U] = {15735552U, 15736320U, 15735296U};
  #line 298 
  struct zd_ioreq16 ioreqs3[3U] = {{.addr = (unsigned short)37376U, .value = (unsigned short)20U}, {.addr = (unsigned short)37380U, .value = (unsigned short)18U}, {.addr = (unsigned short)37384U, .value = (unsigned short)16U}};
  #line 303 
  r = zd_iowrite16a_locked(chip,(struct zd_ioreq16 *)(& zd1211b_ioreqs_shared_1),2U);
  #line 305 
  if (r != 0) 
              #line 306 
              return r;
  #line 307 
  r = zd_iowrite16a_locked(chip,(struct zd_ioreq16 *)(& ioreqs1),62U);
  #line 308 
  if (r != 0) 
              #line 309 
              return r;
  #line 311 
  if ((unsigned int)chip->al2230s_bit != 0U || (unsigned int)chip->rf.type == 10U) {
    #line 312 
    r = zd_iowrite16a_locked(chip,(struct zd_ioreq16 *)(& ioreqs_init_al2230s),10U);
    #line 314 
    if (r != 0) 
                #line 315 
                return r;
  }
  #line 318 
  r = zd_rfwritev_cr_locked(chip,(u32 *)(zd1211b_al2230_table),3U);
  #line 319 
  if (r != 0) 
              #line 320 
              return r;
  #line 321 
  r = zd_rfwritev_cr_locked(chip,(u32 *)(& rv1),4U);
  #line 322 
  if (r != 0) 
              #line 323 
              return r;
  #line 325 
  if ((unsigned int)chip->al2230s_bit != 0U || (unsigned int)chip->rf.type == 10U) 
    #line 326 
    r = zd_rfwrite_locked(chip,2363392U,(unsigned char)24); else 
                                                                 #line 328 
                                                                 r = zd_rfwrite_locked(chip,2465792U,(unsigned char)24);
  #line 329 
  if (r != 0) 
              #line 330 
              return r;
  #line 332 
  r = zd_rfwritev_cr_locked(chip,(u32 *)(& rv2),11U);
  #line 333 
  if (r != 0) 
              #line 334 
              return r;
  #line 335 
  r = zd_iowrite16a_locked(chip,(struct zd_ioreq16 *)(& ioreqs2),2U);
  #line 336 
  if (r != 0) 
              #line 337 
              return r;
  #line 338 
  r = zd_rfwritev_cr_locked(chip,(u32 *)(& rv3),3U);
  #line 339 
  if (r != 0) 
              #line 340 
              return r;
  #line 341 
  r = zd_iowrite16a_locked(chip,(struct zd_ioreq16 *)(& ioreqs3),3U);
  #line 342 
  if (r != 0) 
              #line 343 
              return r;
  #line 344 
  return zd1211b_al2230_finalize_rf(chip);
}

#line 347  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_rf_al2230.c"
static int zd1211_al2230_set_channel(struct zd_rf *rf, u8 channel)
{
  #line 349 
  int r;
  #line 350 
  u32 *rv = (u32 *)(& zd1211_al2230_table[(int)channel + -1]);
  #line 351 
  struct zd_chip *chip = zd_rf_to_chip(rf);
  #line 352 
  struct zd_ioreq16 ioreqs[2U] = {{.addr = (unsigned short)37416U, .value = (unsigned short)40U}, {.addr = (unsigned short)37676U, .value = (unsigned short)6U}};
  #line 357 
  r = zd_rfwritev_locked(chip,rv,3U,(unsigned char)24);
  #line 358 
  if (r != 0) 
              #line 359 
              return r;
  #line 360 
  return zd_iowrite16a_locked(chip,(struct zd_ioreq16 *)(& ioreqs),2U);
}

#line 363  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_rf_al2230.c"
static int zd1211b_al2230_set_channel(struct zd_rf *rf, u8 channel)
{
  #line 365 
  int r;
  #line 366 
  u32 *rv = (u32 *)(& zd1211b_al2230_table[(int)channel + -1]);
  #line 367 
  struct zd_chip *chip = zd_rf_to_chip(rf);
  #line 369 
  r = zd_iowrite16a_locked(chip,(struct zd_ioreq16 *)(& zd1211b_ioreqs_shared_1),2U);
  #line 371 
  if (r != 0) 
              #line 372 
              return r;
  #line 374 
  r = zd_rfwritev_cr_locked(chip,rv,3U);
  #line 375 
  if (r != 0) 
              #line 376 
              return r;
  #line 378 
  return zd1211b_al2230_finalize_rf(chip);
}

#line 381  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_rf_al2230.c"
static int zd1211_al2230_switch_radio_on(struct zd_rf *rf)
{
  #line 383 
  struct zd_chip *chip = zd_rf_to_chip(rf);
  #line 384 
  struct zd_ioreq16 ioreqs[2U] = {{.addr = (unsigned short)36908U, .value = (unsigned short)0U}, {.addr = (unsigned short)37868U, .value = (unsigned short)63U}};
  #line 389 
  return zd_iowrite16a_locked(chip,(struct zd_ioreq16 *)(& ioreqs),2U);
}

#line 392  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_rf_al2230.c"
static int zd1211b_al2230_switch_radio_on(struct zd_rf *rf)
{
  #line 394 
  struct zd_chip *chip = zd_rf_to_chip(rf);
  #line 395 
  struct zd_ioreq16 ioreqs[2U] = {{.addr = (unsigned short)36908U, .value = (unsigned short)0U}, {.addr = (unsigned short)37868U, .value = (unsigned short)127U}};
  #line 400 
  return zd_iowrite16a_locked(chip,(struct zd_ioreq16 *)(& ioreqs),2U);
}

#line 403  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_rf_al2230.c"
static int al2230_switch_radio_off(struct zd_rf *rf)
{
  #line 405 
  struct zd_chip *chip = zd_rf_to_chip(rf);
  #line 406 
  struct zd_ioreq16 ioreqs[2U] = {{.addr = (unsigned short)36908U, .value = (unsigned short)4U}, {.addr = (unsigned short)37868U, .value = (unsigned short)47U}};
  #line 411 
  return zd_iowrite16a_locked(chip,(struct zd_ioreq16 *)(& ioreqs),2U);
}

#line 414  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_rf_al2230.c"
int zd_rf_init_al2230(struct zd_rf *rf)
{
  #line 416 
  struct zd_chip *chip = zd_rf_to_chip(rf);
  #line 418 
  rf->switch_radio_off = & al2230_switch_radio_off;
  #line 419 
  if (zd_chip_is_zd1211b(chip) != 0) {
    #line 420 
    rf->init_hw = & zd1211b_al2230_init_hw;
    #line 421 
    rf->set_channel = & zd1211b_al2230_set_channel;
    #line 422 
    rf->switch_radio_on = & zd1211b_al2230_switch_radio_on;
  }
  else {
    #line 424 
    rf->init_hw = & zd1211_al2230_init_hw;
    #line 425 
    rf->set_channel = & zd1211_al2230_set_channel;
    #line 426 
    rf->switch_radio_on = & zd1211_al2230_switch_radio_on;
  }
  #line 428 
  rf->patch_6m_band_edge = & zd_rf_generic_patch_6m;
  #line 429 
  rf->patch_cck_gain = (unsigned char)1U;
  #line 430 
  return 0;
}

#line 542  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/slab.h"
#line 329  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_rf_uw2453.i.aux"
static void *kmalloc_0(size_t size, gfp_t flags);
#line 96  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_rf.h"
#line 510  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_rf_uw2453.c"
int zd_rf_init_uw2453(struct zd_rf *rf);
#line 804  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.h"
__inline static int zd_ioread16_locked(struct zd_chip *chip, u16 *value, zd_addr_t addr)
{
  #line 807 
  int tmp_5;
  #line 807 
  if (mutex_is_locked(& chip->mutex)) 
                                      #line 807 
                                      tmp_5 = 0; else 
                                                      #line 807 
                                                      tmp_5 = 1;
  #line 807 
  if ((long)tmp_5 != 0L) {
    {
      #line 807 
      bool branch;
      #line 807 
      struct _ddebug __UNIQUE_ID_ddebug562 = {.modname = (char *)"zd1211rw", .function = (char *)"zd_ioread16_locked", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.h", .format = (char *)"%s:%d ASSERT %s VIOLATED!\n", .lineno = (unsigned int)807U, .flags = (unsigned int)1U, .key = {.dd_key_true = {.key = {.enabled = {.counter = 1}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)1}}}}};
      {
        #line 807 
        int tmp_0;
        #line 807 
        if ((int)arch_static_branch(& __UNIQUE_ID_ddebug562.key.dd_key_true.key,
                         (_Bool)1) != 0) 
          #line 807 
          tmp_0 = 0; else 
                          #line 807 
                          tmp_0 = 1;
        #line 807 
        branch = (_Bool)(tmp_0 != 0);
        }
      #line 807 
      if ((long)((long)((int)branch != 0)) != 0L) 
                                                  #line 807 
                                                  __dynamic_pr_debug(& __UNIQUE_ID_ddebug562,(char *)"%s:%d ASSERT %s VIOLATED!\n",(char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.h",807,(char *)"mutex_is_locked(&chip->mutex)");
    }
    #line 807 
    dump_stack();
  }
  #line 808 
  return zd_usb_ioread16(& chip->usb,value,(unsigned short)((int)addr));
}

#line 41  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_rf_uw2453.c"
static u8 uw2453_std_synth[14U] = {(unsigned char)71U, (unsigned char)71U, (unsigned char)103U, (unsigned char)103U, (unsigned char)103U, (unsigned char)103U, (unsigned char)87U, (unsigned char)87U, (unsigned char)87U, (unsigned char)87U, (unsigned char)119U, (unsigned char)119U, (unsigned char)119U, (unsigned char)79U};
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_rf_uw2453.c"
static u16 uw2453_synth_divide[14U] = {(unsigned short)2457U, (unsigned short)2459U, (unsigned short)2456U, (unsigned short)2458U, (unsigned short)2457U, (unsigned short)2459U, (unsigned short)2456U, (unsigned short)2458U, (unsigned short)2457U, (unsigned short)2459U, (unsigned short)2456U, (unsigned short)2458U, (unsigned short)2457U, (unsigned short)3276U};
#line 85  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_rf_uw2453.c"
static u16 uw2453_std_vco_cfg[11U][7U] = {{(unsigned short)26189U, (unsigned short)24653U, (unsigned short)26229U, (unsigned short)25717U, (unsigned short)26197U, (unsigned short)25685U, (unsigned short)26213U}, {(unsigned short)26221U, (unsigned short)24685U, (unsigned short)26189U, (unsigned short)25677U, (unsigned short)26229U, (unsigned short)25717U, (unsigned short)26197U}, {(unsigned short)26205U, (unsigned short)24669U, (unsigned short)26221U, (unsigned short)25709U, (unsigned short)26189U, (unsigned short)25677U, (unsigned short)26229U}, {(unsigned short)26237U, (unsigned short)24701U, (unsigned short)26205U, (unsigned short)25693U, (unsigned short)26221U, (unsigned short)25709U, (unsigned short)26189U}, {(unsigned short)26179U, (unsigned short)24643U, (unsigned short)26237U, (unsigned short)25725U, (unsigned short)26205U, (unsigned short)25693U, (unsigned short)26221U}, {(unsigned short)26211U, (unsigned short)24675U, (unsigned short)26179U, (unsigned short)25667U, (unsigned short)26237U, (unsigned short)25725U, (unsigned short)26205U}, {(unsigned short)26195U, (unsigned short)24659U, (unsigned short)26211U, (unsigned short)25699U, (unsigned short)26179U, (unsigned short)25667U, (unsigned short)26237U}, {(unsigned short)26227U, (unsigned short)24691U, (unsigned short)26195U, (unsigned short)25683U, (unsigned short)26211U, (unsigned short)25699U, (unsigned short)26179U}, {(unsigned short)26187U, (unsigned short)24651U, (unsigned short)26227U, (unsigned short)25715U, (unsigned short)26195U, (unsigned short)25683U, (unsigned short)26211U}, {(unsigned short)26219U, (unsigned short)24683U, (unsigned short)26187U, (unsigned short)25675U, (unsigned short)26227U, (unsigned short)25715U, (unsigned short)26195U}, {(unsigned short)26203U, (unsigned short)24667U, (unsigned short)26219U, (unsigned short)25707U, (unsigned short)26187U, (unsigned short)25675U, (unsigned short)26227U}};
#line 189  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_rf_uw2453.c"
static u16 uw2453_autocal_synth[14U] = {(unsigned short)26695U, (unsigned short)26695U, (unsigned short)26727U, (unsigned short)26727U, (unsigned short)26727U, (unsigned short)26727U, (unsigned short)26711U, (unsigned short)26711U, (unsigned short)26711U, (unsigned short)26711U, (unsigned short)26743U, (unsigned short)26743U, (unsigned short)26743U, (unsigned short)26703U};
#line 211  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_rf_uw2453.c"
static u32 uw2453_txgain[19U] = {58131U, 64275U, 57491U, 63635U, 60051U, 127123U, 128147U, 128659U, 127891U, 127835U, 124635U, 130879U, 131071U, 221655U, 229311U, 262027U, 261939U, 260927U, 262143U};
#line 242  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_rf_uw2453.c"
static int uw2453_synth_set_channel(struct zd_chip *chip, int channel, bool autocal)
{
  #line 245 
  int r;
  #line 247 
  u32 val;
  #line 246 
  int idx = channel + -1;
  #line 249 
  if ((int)autocal != 0) 
                         #line 250 
                         val = (unsigned int)((int)uw2453_autocal_synth[idx] | 1048576); else 
                                                                    #line 252 
                                                                    val = (unsigned int)((int)uw2453_std_synth[idx] | 1048576);
  #line 254 
  r = zd_rfwrite_locked(chip,val,(unsigned char)24);
  #line 255 
  if (r != 0) 
              #line 256 
              return r;
  #line 258 
  return zd_rfwrite_locked(chip,
                        (unsigned int)((int)uw2453_synth_divide[idx] | 2097152),
                        (unsigned char)24);
}

#line 262  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_rf_uw2453.c"
static int uw2453_write_vco_cfg(struct zd_chip *chip, u16 value)
{
  #line 266 
  u32 val = (unsigned int)((int)value | 262144);
  #line 267 
  return zd_rfwrite_locked(chip,(val & 1048575U) | 3145728U,(unsigned char)24);
}

#line 270  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_rf_uw2453.c"
static int uw2453_init_mode(struct zd_chip *chip)
{
  #line 272 
  u32 rv[4U] = {155544U, 155546U, 155540U, 163796U};
  #line 279 
  return zd_rfwritev_locked(chip,(u32 *)(& rv),4U,(unsigned char)24);
}

#line 282  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_rf_uw2453.c"
static int uw2453_set_tx_gain_level(struct zd_chip *chip, int channel)
{
  #line 284 
  u8 int_value = chip->pwr_int_values[channel + -1];
  #line 286 
  if ((unsigned int)int_value > 18U) {
    #line 287 
    dev_printk((char *)"\001",& (chip->usb.intf)->dev,(char *)"%s() ",(char *)"uw2453_set_tx_gain_level",(int)int_value,channel);
    #line 289 
    return 0;
  }
  #line 292 
  return zd_rfwrite_locked(chip,
                        (uw2453_txgain[(int)int_value] & 1048575U) | 7340032U,
                        (unsigned char)24);
}

#line 296  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_rf_uw2453.c"
static int uw2453_init_hw(struct zd_rf *rf)
{
  #line 298 
  int i;
  #line 298 
  int r;
  #line 300 
  u16 intr_status;
  #line 299 
  int found_config = -1;
  #line 301 
  struct zd_chip *chip = zd_rf_to_chip(rf);
  #line 303 
  struct zd_ioreq16 ioreqs[59U] = {{.addr = (unsigned short)36904U, .value = (unsigned short)137U}, {.addr = (unsigned short)36924U, .value = (unsigned short)32U}, {.addr = (unsigned short)36932U, .value = (unsigned short)40U}, {.addr = (unsigned short)36956U, .value = (unsigned short)56U}, {.addr = (unsigned short)36960U, .value = (unsigned short)32U}, {.addr = (unsigned short)36968U, .value = (unsigned short)147U}, {.addr = (unsigned short)36972U, .value = (unsigned short)21U}, {.addr = (unsigned short)36976U, .value = (unsigned short)62U}, {.addr = (unsigned short)36980U, .value = (unsigned short)0U}, {.addr = (unsigned short)36996U, .value = (unsigned short)40U}, {.addr = (unsigned short)37000U, .value = (unsigned short)48U}, {.addr = (unsigned short)37004U, .value = (unsigned short)67U}, {.addr = (unsigned short)37028U, .value = (unsigned short)36U}, {.addr = (unsigned short)37040U, .value = (unsigned short)50U}, {.addr = (unsigned short)37048U, .value = (unsigned short)146U}, {.addr = (unsigned short)37052U, .value = (unsigned short)30U}, {.addr = (unsigned short)37056U, .value = (unsigned short)4U}, {.addr = (unsigned short)37060U, .value = (unsigned short)250U}, {.addr = (unsigned short)37180U, .value = (unsigned short)88U}, {.addr = (unsigned short)37184U, .value = (unsigned short)48U}, {.addr = (unsigned short)37188U, .value = (unsigned short)48U}, {.addr = (unsigned short)37212U, .value = (unsigned short)10U}, {.addr = (unsigned short)37220U, .value = (unsigned short)4U}, {.addr = (unsigned short)37228U, .value = (unsigned short)0U}, {.addr = (unsigned short)37232U, .value = (unsigned short)10U}, {.addr = (unsigned short)37256U, .value = (unsigned short)141U}, {.addr = (unsigned short)37260U, .value = (unsigned short)40U}, {.addr = (unsigned short)37264U, .value = (unsigned short)2U}, {.addr = (unsigned short)37268U, .value = (unsigned short)9U}, {.addr = (unsigned short)37272U, .value = (unsigned short)39U}, {.addr = (unsigned short)37288U, .value = (unsigned short)28U}, {.addr = (unsigned short)37292U, .value = (unsigned short)28U}, {.addr = (unsigned short)37300U, .value = (unsigned short)19U}, {.addr = (unsigned short)37304U, .value = (unsigned short)31U}, {.addr = (unsigned short)37308U, .value = (unsigned short)19U}, {.addr = (unsigned short)37312U, .value = (unsigned short)31U}, {.addr = (unsigned short)37316U, .value = (unsigned short)39U}, {.addr = (unsigned short)37320U, .value = (unsigned short)35U}, {.addr = (unsigned short)37324U, .value = (unsigned short)36U}, {.addr = (unsigned short)37328U, .value = (unsigned short)36U}, {.addr = (unsigned short)37332U, .value = (unsigned short)250U}, {.addr = (unsigned short)37336U, .value = (unsigned short)240U}, {.addr = (unsigned short)37340U, .value = (unsigned short)26U}, {.addr = (unsigned short)37344U, .value = (unsigned short)79U}, {.addr = (unsigned short)37348U, .value = (unsigned short)31U}, {.addr = (unsigned short)37352U, .value = (unsigned short)240U}, {.addr = (unsigned short)37356U, .value = (unsigned short)87U}, {.addr = (unsigned short)37364U, .value = (unsigned short)173U}, {.addr = (unsigned short)37368U, .value = (unsigned short)108U}, {.addr = (unsigned short)37372U, .value = (unsigned short)3U}, {.addr = (unsigned short)37376U, .value = (unsigned short)20U}, {.addr = (unsigned short)37380U, .value = (unsigned short)18U}, {.addr = (unsigned short)37384U, .value = (unsigned short)16U}, {.addr = (unsigned short)37412U, .value = (unsigned short)80U}, {.addr = (unsigned short)37416U, .value = (unsigned short)168U}, {.addr = (unsigned short)37440U, .value = (unsigned short)172U}, {.addr = (unsigned short)37448U, .value = (unsigned short)32U}, {.addr = (unsigned short)37872U, .value = (unsigned short)255U}, {.addr = (unsigned short)37876U, .value = (unsigned short)255U}};
  #line 344 
  u32 rv[9U] = {4194347U, 5348943U, 7307693U, 7602174U, 155548U, 1048647U, 2099609U, 3175938U, 3432547U};
  #line 365 
  r = zd_iowrite16a_locked(chip,(struct zd_ioreq16 *)(& ioreqs),59U);
  #line 366 
  if (r != 0) 
              #line 367 
              return r;
  #line 369 
  r = zd_rfwritev_locked(chip,(u32 *)(& rv),9U,(unsigned char)24);
  #line 370 
  if (r != 0) 
              #line 371 
              return r;
  #line 373 
  r = uw2453_init_mode(chip);
  #line 374 
  if (r != 0) 
              #line 375 
              return r;
  #line 378 
  i = 0;
  #line 378 
  while ((unsigned int)i <= 9U) {
    #line 380 
    r = uw2453_synth_set_channel(chip,1,(_Bool)0);
    #line 381 
    if (r != 0) 
                #line 382 
                return r;
    #line 385 
    r = uw2453_write_vco_cfg(chip,(unsigned short)((int)uw2453_std_vco_cfg[i][0]));
    #line 386 
    if (r != 0) 
                #line 387 
                return r;
    #line 390 
    r = zd_iowrite16_locked(chip,(unsigned short)15,(unsigned short)34241);
    #line 391 
    if (r != 0) 
                #line 392 
                return r;
    #line 395 
    r = zd_ioread16_locked(chip,& intr_status,(unsigned short)34241);
    #line 396 
    if (r != 0) 
                #line 397 
                return r;
    #line 399 
    if (((int)intr_status & 15) == 0) {
      #line 400 
      dev_printk((char *)"\001",& (chip->usb.intf)->dev,(char *)"%s() ",(char *)"uw2453_init_hw",i);
      #line 402 
      found_config = i;
      #line 403 
      break;
    }
    #line 378 
    i ++;
  }
  #line 407 
  if (found_config == -1) {
    #line 409 
    dev_printk((char *)"\001",& (chip->usb.intf)->dev,(char *)"%s() ",(char *)"uw2453_init_hw");
    #line 412 
    r = uw2453_synth_set_channel(chip,1,(_Bool)1);
    #line 413 
    if (r != 0) 
                #line 414 
                return r;
    #line 416 
    r = uw2453_write_vco_cfg(chip,(unsigned short)26210);
    #line 417 
    if (r != 0) 
                #line 418 
                return r;
  }
  #line 423 
  ((struct uw2453_priv *)rf->priv)->config = found_config + 1;
  #line 425 
  return zd_iowrite16_locked(chip,(unsigned short)6,(unsigned short)37676);
}

#line 428  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_rf_uw2453.c"
static int uw2453_set_channel(struct zd_rf *rf, u8 channel)
{
  #line 430 
  int r;
  #line 431 
  u16 vco_cfg;
  #line 432 
  int config = ((struct uw2453_priv *)rf->priv)->config;
  #line 433 
  bool autocal = (_Bool)(config == -1);
  #line 434 
  struct zd_chip *chip = zd_rf_to_chip(rf);
  #line 436 
  struct zd_ioreq16 ioreqs[6U] = {{.addr = (unsigned short)37184U, .value = (unsigned short)48U}, {.addr = (unsigned short)37188U, .value = (unsigned short)48U}, {.addr = (unsigned short)37180U, .value = (unsigned short)88U}, {.addr = (unsigned short)36912U, .value = (unsigned short)240U}, {.addr = (unsigned short)37172U, .value = (unsigned short)27U}, {.addr = (unsigned short)37176U, .value = (unsigned short)88U}};
  #line 441 
  r = uw2453_synth_set_channel(chip,(int)channel,(_Bool)((bool)((int)autocal) != 0));
  #line 442 
  if (r != 0) 
              #line 443 
              return r;
  #line 445 
  if ((int)autocal != 0) 
                         #line 446 
                         vco_cfg = (unsigned short)26210U; else 
                                                                #line 448 
                                                                vco_cfg = uw2453_std_vco_cfg[config][((int)channel + -1) / 2];
  #line 450 
  r = uw2453_write_vco_cfg(chip,(unsigned short)((int)vco_cfg));
  #line 451 
  if (r != 0) 
              #line 452 
              return r;
  #line 454 
  r = uw2453_init_mode(chip);
  #line 455 
  if (r != 0) 
              #line 456 
              return r;
  #line 458 
  r = zd_iowrite16a_locked(chip,(struct zd_ioreq16 *)(& ioreqs),6U);
  #line 459 
  if (r != 0) 
              #line 460 
              return r;
  #line 462 
  r = uw2453_set_tx_gain_level(chip,(int)channel);
  #line 463 
  if (r != 0) 
              #line 464 
              return r;
  #line 466 
  return zd_iowrite16_locked(chip,(unsigned short)6,(unsigned short)37676);
}

#line 469  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_rf_uw2453.c"
static int uw2453_switch_radio_on(struct zd_rf *rf)
{
  #line 471 
  int r;
  #line 472 
  struct zd_chip *chip = zd_rf_to_chip(rf);
  #line 473 
  struct zd_ioreq16 ioreqs[2U] = {{.addr = (unsigned short)36908U, .value = (unsigned short)0U}, {.addr = (unsigned short)37868U, .value = (unsigned short)63U}};
  #line 478 
  r = zd_rfwrite_locked(chip,155540U,(unsigned char)24);
  #line 479 
  if (r != 0) 
              #line 480 
              return r;
  #line 482 
  if (zd_chip_is_zd1211b(chip) != 0) 
                                     #line 483 
                                     ioreqs[1].value = (unsigned short)127U;
  #line 485 
  return zd_iowrite16a_locked(chip,(struct zd_ioreq16 *)(& ioreqs),2U);
}

#line 488  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_rf_uw2453.c"
static int uw2453_switch_radio_off(struct zd_rf *rf)
{
  #line 490 
  int r;
  #line 491 
  struct zd_chip *chip = zd_rf_to_chip(rf);
  #line 492 
  struct zd_ioreq16 ioreqs[2U] = {{.addr = (unsigned short)36908U, .value = (unsigned short)4U}, {.addr = (unsigned short)37868U, .value = (unsigned short)47U}};
  #line 498 
  r = zd_rfwrite_locked(chip,155536U,(unsigned char)24);
  #line 499 
  if (r != 0) 
              #line 500 
              return r;
  #line 502 
  return zd_iowrite16a_locked(chip,(struct zd_ioreq16 *)(& ioreqs),2U);
}

#line 505  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_rf_uw2453.c"
static void uw2453_clear(struct zd_rf *rf)
{
  #line 507 
  kfree(rf->priv);
  #line 508 
  return;
}

#line 510  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_rf_uw2453.c"
int zd_rf_init_uw2453(struct zd_rf *rf)
{
  #line 512 
  rf->init_hw = & uw2453_init_hw;
  #line 513 
  rf->set_channel = & uw2453_set_channel;
  #line 514 
  rf->switch_radio_on = & uw2453_switch_radio_on;
  #line 515 
  rf->switch_radio_off = & uw2453_switch_radio_off;
  #line 516 
  rf->patch_6m_band_edge = & zd_rf_generic_patch_6m;
  #line 517 
  rf->clear = & uw2453_clear;
  #line 519 
  rf->update_channel_int = (unsigned char)0U;
  #line 521 
  rf->priv = kmalloc_0(4UL,3264U);
  #line 522 
  if (rf->priv == (void *)0) 
                             #line 523 
                             return -12;
  #line 525 
  return 0;
}

#line 329  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_rf_uw2453.i.aux"
static void *kmalloc_0(size_t size, gfp_t flags)
{
  #line 332 
  return ldv_kmalloc(size,flags);
}

#line 95  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_rf.h"
#line 462  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_rf_al7230b.c"
int zd_rf_init_al7230b(struct zd_rf *rf);
#line 858  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.h"
#line 858 
int zd_rfwrite_cr_locked(struct zd_chip *chip, u32 value);
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_rf_al7230b.c"
static u32 chan_rv[14U][2U] = {{650240U, 9227464U}, {650240U, 9227480U}, {650240U, 9227456U}, {650240U, 9227472U}, {388096U, 9227464U}, {388096U, 9227480U}, {388096U, 9227456U}, {388096U, 9227472U}, {912384U, 9227464U}, {912384U, 9227480U}, {912384U, 9227456U}, {912384U, 9227472U}, {257024U, 9227464U}, {257024U, 8808032U}};
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_rf_al7230b.c"
static u32 std_rv[10U] = {5240865U, 12975100U, 2223102U, 11523073U, 7140714U, 14696563U, 1654134U, 10344516U, 5242887U, 14204944U};
#line 44  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_rf_al7230b.c"
static u32 rv_init1[4U] = {3969024U, 12582911U, 7340032U, 15818072U};
#line 51  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_rf_al7230b.c"
static u32 rv_init2[3U] = {15818073U, 15818076U, 15818072U};
#line 57  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_rf_al7230b.c"
static struct zd_ioreq16 ioreqs_sw[5U] = {{.addr = (unsigned short)37376U, .value = (unsigned short)20U}, {.addr = (unsigned short)37380U, .value = (unsigned short)18U}, {.addr = (unsigned short)37384U, .value = (unsigned short)16U}, {.addr = (unsigned short)37016U, .value = (unsigned short)56U}, {.addr = (unsigned short)37408U, .value = (unsigned short)223U}};
#line 62  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_rf_al7230b.c"
static int zd1211b_al7230b_finalize(struct zd_chip *chip)
{
  #line 64 
  int r;
  #line 65 
  struct zd_ioreq16 ioreqs[9U] = {{.addr = (unsigned short)37184U, .value = (unsigned short)48U}, {.addr = (unsigned short)37188U, .value = (unsigned short)48U}, {.addr = (unsigned short)37180U, .value = (unsigned short)88U}, {.addr = (unsigned short)36912U, .value = (unsigned short)240U}, {.addr = (unsigned short)37172U, .value = (unsigned short)27U}, {.addr = (unsigned short)37176U, .value = (unsigned short)88U}, {.addr = (unsigned short)37676U, .value = (unsigned short)4U}, {.addr = (unsigned short)0, .value = (unsigned short)0}, {.addr = (unsigned short)37824U, .value = (unsigned short)128U}};
  #line 73 
  r = zd_iowrite16a_locked(chip,(struct zd_ioreq16 *)(& ioreqs),9U);
  #line 74 
  if (r != 0) 
              #line 75 
              return r;
  #line 77 
  if ((unsigned int)chip->new_phy_layout != 0U) {
    #line 79 
    r = zd_iowrite16_locked(chip,(unsigned short)229,(unsigned short)36900);
    #line 80 
    if (r != 0) 
                #line 81 
                return r;
  }
  #line 84 
  return zd_iowrite16_locked(chip,(unsigned short)4,(unsigned short)37676);
}

#line 87  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_rf_al7230b.c"
static int zd1211_al7230b_init_hw(struct zd_rf *rf)
{
  #line 89 
  int r;
  #line 90 
  struct zd_chip *chip = zd_rf_to_chip(rf);
  #line 94 
  struct zd_ioreq16 ioreqs_1[56U] = {{.addr = (unsigned short)37824U, .value = (unsigned short)87U}, {.addr = (unsigned short)0, .value = (unsigned short)0}, {.addr = (unsigned short)36924U, .value = (unsigned short)32U}, {.addr = (unsigned short)36956U, .value = (unsigned short)64U}, {.addr = (unsigned short)36960U, .value = (unsigned short)32U}, {.addr = (unsigned short)36968U, .value = (unsigned short)17U}, {.addr = (unsigned short)36976U, .value = (unsigned short)62U}, {.addr = (unsigned short)36980U, .value = (unsigned short)0U}, {.addr = (unsigned short)37040U, .value = (unsigned short)51U}, {.addr = (unsigned short)37288U, .value = (unsigned short)34U}, {.addr = (unsigned short)37292U, .value = (unsigned short)26U}, {.addr = (unsigned short)37300U, .value = (unsigned short)9U}, {.addr = (unsigned short)37304U, .value = (unsigned short)39U}, {.addr = (unsigned short)37308U, .value = (unsigned short)43U}, {.addr = (unsigned short)37312U, .value = (unsigned short)43U}, {.addr = (unsigned short)37340U, .value = (unsigned short)10U}, {.addr = (unsigned short)37352U, .value = (unsigned short)252U}, {.addr = (unsigned short)36904U, .value = (unsigned short)137U}, {.addr = (unsigned short)36932U, .value = (unsigned short)40U}, {.addr = (unsigned short)36968U, .value = (unsigned short)147U}, {.addr = (unsigned short)37000U, .value = (unsigned short)48U}, {.addr = (unsigned short)37004U, .value = (unsigned short)62U}, {.addr = (unsigned short)37028U, .value = (unsigned short)36U}, {.addr = (unsigned short)37040U, .value = (unsigned short)50U}, {.addr = (unsigned short)37048U, .value = (unsigned short)150U}, {.addr = (unsigned short)37052U, .value = (unsigned short)30U}, {.addr = (unsigned short)37180U, .value = (unsigned short)88U}, {.addr = (unsigned short)37184U, .value = (unsigned short)48U}, {.addr = (unsigned short)37188U, .value = (unsigned short)48U}, {.addr = (unsigned short)37212U, .value = (unsigned short)10U}, {.addr = (unsigned short)37220U, .value = (unsigned short)4U}, {.addr = (unsigned short)37232U, .value = (unsigned short)10U}, {.addr = (unsigned short)37260U, .value = (unsigned short)40U}, {.addr = (unsigned short)37264U, .value = (unsigned short)2U}, {.addr = (unsigned short)37268U, .value = (unsigned short)19U}, {.addr = (unsigned short)37272U, .value = (unsigned short)39U}, {.addr = (unsigned short)37288U, .value = (unsigned short)34U}, {.addr = (unsigned short)37292U, .value = (unsigned short)63U}, {.addr = (unsigned short)37300U, .value = (unsigned short)9U}, {.addr = (unsigned short)37304U, .value = (unsigned short)31U}, {.addr = (unsigned short)37308U, .value = (unsigned short)31U}, {.addr = (unsigned short)37312U, .value = (unsigned short)31U}, {.addr = (unsigned short)37316U, .value = (unsigned short)39U}, {.addr = (unsigned short)37320U, .value = (unsigned short)39U}, {.addr = (unsigned short)37324U, .value = (unsigned short)36U}, {.addr = (unsigned short)37328U, .value = (unsigned short)63U}, {.addr = (unsigned short)37332U, .value = (unsigned short)250U}, {.addr = (unsigned short)37336U, .value = (unsigned short)252U}, {.addr = (unsigned short)37340U, .value = (unsigned short)16U}, {.addr = (unsigned short)37344U, .value = (unsigned short)79U}, {.addr = (unsigned short)37348U, .value = (unsigned short)119U}, {.addr = (unsigned short)37412U, .value = (unsigned short)136U}, {.addr = (unsigned short)37416U, .value = (unsigned short)168U}, {.addr = (unsigned short)37872U, .value = (unsigned short)52U}, {.addr = (unsigned short)37876U, .value = (unsigned short)52U}, {.addr = (unsigned short)37868U, .value = (unsigned short)47U}};
  #line 152 
  struct zd_ioreq16 ioreqs_2[6U] = {{.addr = (unsigned short)37868U, .value = (unsigned short)63U}, {.addr = (unsigned short)37376U, .value = (unsigned short)20U}, {.addr = (unsigned short)37380U, .value = (unsigned short)18U}, {.addr = (unsigned short)37384U, .value = (unsigned short)16U}, {.addr = (unsigned short)37016U, .value = (unsigned short)56U}, {.addr = (unsigned short)37408U, .value = (unsigned short)223U}};
  #line 158 
  r = zd_iowrite16a_locked(chip,(struct zd_ioreq16 *)(& ioreqs_1),56U);
  #line 159 
  if (r != 0) 
              #line 160 
              return r;
  #line 162 
  r = zd_rfwritev_cr_locked(chip,(u32 *)(chan_rv),2U);
  #line 163 
  if (r != 0) 
              #line 164 
              return r;
  #line 166 
  r = zd_rfwritev_cr_locked(chip,(u32 *)(& std_rv),10U);
  #line 167 
  if (r != 0) 
              #line 168 
              return r;
  #line 170 
  r = zd_rfwritev_cr_locked(chip,(u32 *)(& rv_init1),4U);
  #line 171 
  if (r != 0) 
              #line 172 
              return r;
  #line 174 
  r = zd_iowrite16a_locked(chip,(struct zd_ioreq16 *)(& ioreqs_2),6U);
  #line 175 
  if (r != 0) 
              #line 176 
              return r;
  #line 178 
  r = zd_rfwritev_cr_locked(chip,(u32 *)(& rv_init2),3U);
  #line 179 
  if (r != 0) 
              #line 180 
              return r;
  #line 182 
  r = zd_iowrite16_locked(chip,(unsigned short)6,(unsigned short)37676);
  #line 183 
  if (r != 0) 
              #line 184 
              return r;
  #line 185 
  r = zd_iowrite16_locked(chip,(unsigned short)128,(unsigned short)37824);
  #line 186 
  if (r != 0) 
              #line 187 
              return r;
  #line 189 
  return 0;
}

#line 192  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_rf_al7230b.c"
static int zd1211b_al7230b_init_hw(struct zd_rf *rf)
{
  #line 194 
  int r;
  #line 195 
  struct zd_chip *chip = zd_rf_to_chip(rf);
  #line 197 
  struct zd_ioreq16 ioreqs_1[45U] = {{.addr = (unsigned short)37824U, .value = (unsigned short)87U}, {.addr = (unsigned short)36900U, .value = (unsigned short)9U}, {.addr = (unsigned short)0, .value = (unsigned short)0}, {.addr = (unsigned short)36904U, .value = (unsigned short)139U}, {.addr = (unsigned short)36924U, .value = (unsigned short)32U}, {.addr = (unsigned short)36932U, .value = (unsigned short)43U}, {.addr = (unsigned short)36944U, .value = (unsigned short)16U}, {.addr = (unsigned short)36956U, .value = (unsigned short)64U}, {.addr = (unsigned short)36960U, .value = (unsigned short)32U}, {.addr = (unsigned short)36968U, .value = (unsigned short)147U}, {.addr = (unsigned short)36976U, .value = (unsigned short)62U}, {.addr = (unsigned short)36980U, .value = (unsigned short)0U}, {.addr = (unsigned short)36996U, .value = (unsigned short)40U}, {.addr = (unsigned short)37000U, .value = (unsigned short)48U}, {.addr = (unsigned short)37004U, .value = (unsigned short)62U}, {.addr = (unsigned short)37028U, .value = (unsigned short)36U}, {.addr = (unsigned short)37040U, .value = (unsigned short)50U}, {.addr = (unsigned short)37048U, .value = (unsigned short)153U}, {.addr = (unsigned short)37052U, .value = (unsigned short)30U}, {.addr = (unsigned short)37056U, .value = (unsigned short)0U}, {.addr = (unsigned short)37060U, .value = (unsigned short)0U}, {.addr = (unsigned short)37068U, .value = (unsigned short)1U}, {.addr = (unsigned short)37072U, .value = (unsigned short)128U}, {.addr = (unsigned short)37076U, .value = (unsigned short)126U}, {.addr = (unsigned short)37124U, .value = (unsigned short)0U}, {.addr = (unsigned short)37128U, .value = (unsigned short)0U}, {.addr = (unsigned short)37132U, .value = (unsigned short)0U}, {.addr = (unsigned short)37136U, .value = (unsigned short)0U}, {.addr = (unsigned short)37140U, .value = (unsigned short)40U}, {.addr = (unsigned short)37180U, .value = (unsigned short)88U}, {.addr = (unsigned short)37184U, .value = (unsigned short)48U}, {.addr = (unsigned short)37188U, .value = (unsigned short)48U}, {.addr = (unsigned short)37212U, .value = (unsigned short)10U}, {.addr = (unsigned short)37220U, .value = (unsigned short)4U}, {.addr = (unsigned short)37224U, .value = (unsigned short)88U}, {.addr = (unsigned short)37228U, .value = (unsigned short)0U}, {.addr = (unsigned short)37232U, .value = (unsigned short)10U}, {.addr = (unsigned short)37256U, .value = (unsigned short)141U}, {.addr = (unsigned short)37260U, .value = (unsigned short)0U}, {.addr = (unsigned short)37264U, .value = (unsigned short)2U}, {.addr = (unsigned short)37268U, .value = (unsigned short)19U}, {.addr = (unsigned short)37272U, .value = (unsigned short)39U}, {.addr = (unsigned short)37288U, .value = (unsigned short)32U}, {.addr = (unsigned short)37300U, .value = (unsigned short)19U}, {.addr = (unsigned short)37312U, .value = (unsigned short)31U}};
  #line 231 
  struct zd_ioreq16 ioreqs_new_phy[7U] = {{.addr = (unsigned short)37292U, .value = (unsigned short)40U}, {.addr = (unsigned short)37304U, .value = (unsigned short)31U}, {.addr = (unsigned short)37308U, .value = (unsigned short)31U}, {.addr = (unsigned short)37328U, .value = (unsigned short)42U}, {.addr = (unsigned short)37336U, .value = (unsigned short)250U}, {.addr = (unsigned short)37340U, .value = (unsigned short)18U}, {.addr = (unsigned short)37348U, .value = (unsigned short)108U}};
  #line 239 
  struct zd_ioreq16 ioreqs_old_phy[7U] = {{.addr = (unsigned short)37292U, .value = (unsigned short)36U}, {.addr = (unsigned short)37304U, .value = (unsigned short)19U}, {.addr = (unsigned short)37308U, .value = (unsigned short)19U}, {.addr = (unsigned short)37328U, .value = (unsigned short)36U}, {.addr = (unsigned short)37336U, .value = (unsigned short)252U}, {.addr = (unsigned short)37340U, .value = (unsigned short)17U}, {.addr = (unsigned short)37348U, .value = (unsigned short)106U}};
  #line 247 
  struct zd_ioreq16 ioreqs_2[21U] = {{.addr = (unsigned short)37316U, .value = (unsigned short)39U}, {.addr = (unsigned short)37320U, .value = (unsigned short)39U}, {.addr = (unsigned short)37324U, .value = (unsigned short)36U}, {.addr = (unsigned short)37332U, .value = (unsigned short)250U}, {.addr = (unsigned short)37344U, .value = (unsigned short)79U}, {.addr = (unsigned short)37352U, .value = (unsigned short)252U}, {.addr = (unsigned short)37356U, .value = (unsigned short)87U}, {.addr = (unsigned short)37364U, .value = (unsigned short)173U}, {.addr = (unsigned short)37368U, .value = (unsigned short)108U}, {.addr = (unsigned short)37372U, .value = (unsigned short)3U}, {.addr = (unsigned short)37384U, .value = (unsigned short)16U}, {.addr = (unsigned short)37388U, .value = (unsigned short)0U}, {.addr = (unsigned short)37412U, .value = (unsigned short)80U}, {.addr = (unsigned short)37416U, .value = (unsigned short)168U}, {.addr = (unsigned short)37440U, .value = (unsigned short)172U}, {.addr = (unsigned short)37456U, .value = (unsigned short)64U}, {.addr = (unsigned short)37460U, .value = (unsigned short)64U}, {.addr = (unsigned short)37464U, .value = (unsigned short)26U}, {.addr = (unsigned short)37872U, .value = (unsigned short)52U}, {.addr = (unsigned short)37876U, .value = (unsigned short)52U}, {.addr = (unsigned short)37868U, .value = (unsigned short)47U}};
  #line 267 
  struct zd_ioreq16 ioreqs_3[6U] = {{.addr = (unsigned short)37868U, .value = (unsigned short)127U}, {.addr = (unsigned short)37376U, .value = (unsigned short)20U}, {.addr = (unsigned short)37380U, .value = (unsigned short)18U}, {.addr = (unsigned short)37384U, .value = (unsigned short)16U}, {.addr = (unsigned short)37016U, .value = (unsigned short)56U}, {.addr = (unsigned short)37408U, .value = (unsigned short)223U}};
  #line 273 
  r = zd_iowrite16a_locked(chip,(struct zd_ioreq16 *)(& ioreqs_1),45U);
  #line 274 
  if (r != 0) 
              #line 275 
              return r;
  #line 277 
  if ((unsigned int)chip->new_phy_layout != 0U) 
                                                #line 278 
                                                r = zd_iowrite16a_locked(chip,(struct zd_ioreq16 *)(& ioreqs_new_phy),7U); else 
                                                                    #line 281 
                                                                    r = zd_iowrite16a_locked(chip,(struct zd_ioreq16 *)(& ioreqs_old_phy),7U);
  #line 283 
  if (r != 0) 
              #line 284 
              return r;
  #line 286 
  r = zd_iowrite16a_locked(chip,(struct zd_ioreq16 *)(& ioreqs_2),21U);
  #line 287 
  if (r != 0) 
              #line 288 
              return r;
  #line 290 
  r = zd_rfwritev_cr_locked(chip,(u32 *)(chan_rv),2U);
  #line 291 
  if (r != 0) 
              #line 292 
              return r;
  #line 294 
  r = zd_rfwritev_cr_locked(chip,(u32 *)(& std_rv),10U);
  #line 295 
  if (r != 0) 
              #line 296 
              return r;
  #line 298 
  r = zd_rfwritev_cr_locked(chip,(u32 *)(& rv_init1),4U);
  #line 299 
  if (r != 0) 
              #line 300 
              return r;
  #line 302 
  r = zd_iowrite16a_locked(chip,(struct zd_ioreq16 *)(& ioreqs_3),6U);
  #line 303 
  if (r != 0) 
              #line 304 
              return r;
  #line 306 
  r = zd_rfwritev_cr_locked(chip,(u32 *)(& rv_init2),3U);
  #line 307 
  if (r != 0) 
              #line 308 
              return r;
  #line 310 
  return zd1211b_al7230b_finalize(chip);
}

#line 313  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_rf_al7230b.c"
static int zd1211_al7230b_set_channel(struct zd_rf *rf, u8 channel)
{
  #line 315 
  int r;
  #line 316 
  u32 *rv = (u32 *)(& chan_rv[(int)channel + -1]);
  #line 317 
  struct zd_chip *chip = zd_rf_to_chip(rf);
  #line 319 
  struct zd_ioreq16 ioreqs[3U] = {{.addr = (unsigned short)37868U, .value = (unsigned short)63U}, {.addr = (unsigned short)37676U, .value = (unsigned short)6U}, {.addr = (unsigned short)37824U, .value = (unsigned short)8U}};
  #line 325 
  r = zd_iowrite16_locked(chip,(unsigned short)87,(unsigned short)37824);
  #line 326 
  if (r != 0) 
              #line 327 
              return r;
  #line 330 
  r = zd_iowrite16_locked(chip,(unsigned short)47,(unsigned short)37868);
  #line 331 
  if (r != 0) 
              #line 332 
              return r;
  #line 334 
  r = zd_rfwritev_cr_locked(chip,(u32 *)(& std_rv),10U);
  #line 335 
  if (r != 0) 
              #line 336 
              return r;
  #line 338 
  r = zd_rfwrite_cr_locked(chip,3969024U);
  #line 339 
  if (r != 0) 
              #line 340 
              return r;
  #line 341 
  r = zd_rfwrite_cr_locked(chip,15818072U);
  #line 342 
  if (r != 0) 
              #line 343 
              return r;
  #line 345 
  r = zd_iowrite16a_locked(chip,(struct zd_ioreq16 *)(& ioreqs_sw),5U);
  #line 346 
  if (r != 0) 
              #line 347 
              return r;
  #line 349 
  r = zd_rfwritev_cr_locked(chip,rv,2U);
  #line 350 
  if (r != 0) 
              #line 351 
              return r;
  #line 353 
  r = zd_rfwrite_cr_locked(chip,3969024U);
  #line 354 
  if (r != 0) 
              #line 355 
              return r;
  #line 357 
  return zd_iowrite16a_locked(chip,(struct zd_ioreq16 *)(& ioreqs),3U);
}

#line 360  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_rf_al7230b.c"
static int zd1211b_al7230b_set_channel(struct zd_rf *rf, u8 channel)
{
  #line 362 
  int r;
  #line 363 
  u32 *rv = (u32 *)(& chan_rv[(int)channel + -1]);
  #line 364 
  struct zd_chip *chip = zd_rf_to_chip(rf);
  #line 366 
  r = zd_iowrite16_locked(chip,(unsigned short)87,(unsigned short)37824);
  #line 367 
  if (r != 0) 
              #line 368 
              return r;
  #line 369 
  r = zd_iowrite16_locked(chip,(unsigned short)228,(unsigned short)36900);
  #line 370 
  if (r != 0) 
              #line 371 
              return r;
  #line 374 
  r = zd_iowrite16_locked(chip,(unsigned short)47,(unsigned short)37868);
  #line 375 
  if (r != 0) 
              #line 376 
              return r;
  #line 377 
  r = zd_rfwritev_cr_locked(chip,(u32 *)(& std_rv),10U);
  #line 378 
  if (r != 0) 
              #line 379 
              return r;
  #line 381 
  r = zd_rfwrite_cr_locked(chip,3969024U);
  #line 382 
  if (r != 0) 
              #line 383 
              return r;
  #line 384 
  r = zd_rfwrite_cr_locked(chip,15818072U);
  #line 385 
  if (r != 0) 
              #line 386 
              return r;
  #line 388 
  r = zd_iowrite16a_locked(chip,(struct zd_ioreq16 *)(& ioreqs_sw),5U);
  #line 389 
  if (r != 0) 
              #line 390 
              return r;
  #line 392 
  r = zd_rfwritev_cr_locked(chip,rv,2U);
  #line 393 
  if (r != 0) 
              #line 394 
              return r;
  #line 396 
  r = zd_rfwrite_cr_locked(chip,3969024U);
  #line 397 
  if (r != 0) 
              #line 398 
              return r;
  #line 400 
  r = zd_iowrite16_locked(chip,(unsigned short)127,(unsigned short)37868);
  #line 401 
  if (r != 0) 
              #line 402 
              return r;
  #line 404 
  return zd1211b_al7230b_finalize(chip);
}

#line 407  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_rf_al7230b.c"
static int zd1211_al7230b_switch_radio_on(struct zd_rf *rf)
{
  #line 409 
  struct zd_chip *chip = zd_rf_to_chip(rf);
  #line 410 
  struct zd_ioreq16 ioreqs[2U] = {{.addr = (unsigned short)36908U, .value = (unsigned short)0U}, {.addr = (unsigned short)37868U, .value = (unsigned short)63U}};
  #line 415 
  return zd_iowrite16a_locked(chip,(struct zd_ioreq16 *)(& ioreqs),2U);
}

#line 418  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_rf_al7230b.c"
static int zd1211b_al7230b_switch_radio_on(struct zd_rf *rf)
{
  #line 420 
  struct zd_chip *chip = zd_rf_to_chip(rf);
  #line 421 
  struct zd_ioreq16 ioreqs[2U] = {{.addr = (unsigned short)36908U, .value = (unsigned short)0U}, {.addr = (unsigned short)37868U, .value = (unsigned short)127U}};
  #line 426 
  return zd_iowrite16a_locked(chip,(struct zd_ioreq16 *)(& ioreqs),2U);
}

#line 429  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_rf_al7230b.c"
static int al7230b_switch_radio_off(struct zd_rf *rf)
{
  #line 431 
  struct zd_chip *chip = zd_rf_to_chip(rf);
  #line 432 
  struct zd_ioreq16 ioreqs[2U] = {{.addr = (unsigned short)36908U, .value = (unsigned short)4U}, {.addr = (unsigned short)37868U, .value = (unsigned short)47U}};
  #line 437 
  return zd_iowrite16a_locked(chip,(struct zd_ioreq16 *)(& ioreqs),2U);
}

#line 442  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_rf_al7230b.c"
static int zd1211b_al7230b_patch_6m(struct zd_rf *rf, u8 channel)
{
  #line 444 
  struct zd_chip *chip = zd_rf_to_chip(rf);
  #line 445 
  struct zd_ioreq16 ioreqs[2U] = {{.addr = (unsigned short)37376U, .value = (unsigned short)20U}, {.addr = (unsigned short)37380U, .value = (unsigned short)18U}};
  #line 450 
  if ((unsigned int)channel == 1U) {
    #line 451 
    ioreqs[0].value = (unsigned short)14U;
    #line 452 
    ioreqs[1].value = (unsigned short)16U;
  }
  else 
    #line 453 
    if ((unsigned int)channel == 11U) {
      #line 454 
      ioreqs[0].value = (unsigned short)16U;
      #line 455 
      ioreqs[1].value = (unsigned short)16U;
    }
  #line 458 
  dev_printk((char *)"\001",& (chip->usb.intf)->dev,(char *)"%s() ",(char *)"zd1211b_al7230b_patch_6m",(int)channel);
  #line 459 
  return zd_iowrite16a_locked(chip,(struct zd_ioreq16 *)(& ioreqs),2U);
}

#line 462  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_rf_al7230b.c"
int zd_rf_init_al7230b(struct zd_rf *rf)
{
  #line 464 
  struct zd_chip *chip = zd_rf_to_chip(rf);
  #line 466 
  if (zd_chip_is_zd1211b(chip) != 0) {
    #line 467 
    rf->init_hw = & zd1211b_al7230b_init_hw;
    #line 468 
    rf->switch_radio_on = & zd1211b_al7230b_switch_radio_on;
    #line 469 
    rf->set_channel = & zd1211b_al7230b_set_channel;
    #line 470 
    rf->patch_6m_band_edge = & zd1211b_al7230b_patch_6m;
  }
  else {
    #line 472 
    rf->init_hw = & zd1211_al7230b_init_hw;
    #line 473 
    rf->switch_radio_on = & zd1211_al7230b_switch_radio_on;
    #line 474 
    rf->set_channel = & zd1211_al7230b_set_channel;
    #line 475 
    rf->patch_6m_band_edge = & zd_rf_generic_patch_6m;
    #line 476 
    rf->patch_cck_gain = (unsigned char)1U;
  }
  #line 479 
  rf->switch_radio_off = & al7230b_switch_radio_off;
  #line 481 
  return 0;
}

#line 66  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/bitops.h"
__inline static void arch___set_bit(long nr, unsigned long *addr)
{
  #line 68 
  ldv_inline_asm();
  #line 69 
  return;
}

#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/bitops/instrumented-atomic.h"
#line 164  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_mac.i.aux"
static void cif_set_bit_0(long nr, unsigned long *addr);
#line 44  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/bitops/instrumented-atomic.h"
#line 171  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_mac.i.aux"
static void cif_clear_bit(long nr, unsigned long *addr);
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/bitops/instrumented-non-atomic.h"
__inline static void __set_bit(long nr, unsigned long *addr)
{
  #line 27 
  kasan_check_read((void *)(addr + (unsigned long)(nr / 64L)),8U);
  #line 28 
  arch___set_bit(nr,addr);
  #line 29 
  return;
}

#line 26  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
#line 178  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_mac.i.aux"
static void INIT_LIST_HEAD_0(struct list_head *list);
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/string_64.h"
#line 61 
int memcmp(void *, void *, size_t);
#line 361  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
static void spin_lock_irq_0(spinlock_t *lock)
{
  #line 363 
  _raw_spin_lock_irq(& lock->__anonCompField_spinlock_25.rlock);
  #line 364 
  return;
}

#line 365 
#line 851  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_mac.i.aux"
static void cif_spin_lock_irq_lock_of_zd_mac(spinlock_t *lock);
#line 386  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
static void spin_unlock_irq_0(spinlock_t *lock)
{
  #line 388 
  _raw_spin_unlock_irq(& lock->__anonCompField_spinlock_25.rlock);
  #line 389 
  return;
}

#line 390 
#line 860  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_mac.i.aux"
static void cif_spin_unlock_irq_lock_of_zd_mac(spinlock_t *lock);
#line 391  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
static void spin_unlock_irqrestore_0(spinlock_t *lock, unsigned long flags)
{
  {
    #line 393 
    unsigned long __dummy;
    #line 393 
    unsigned long __dummy2;
    }
  #line 393 
  _raw_spin_unlock_irqrestore(& lock->__anonCompField_spinlock_25.rlock,flags);
  #line 395 
  return;
}

#line 395 
#line 878  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_mac.i.aux"
static void cif_spin_unlock_irqrestore_lock_of_zd_mac(spinlock_t *lock, unsigned long flags);
#line 395  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
#line 896  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_mac.i.aux"
static void cif_spin_unlock_irqrestore_lock_of_sk_buff_head_0(spinlock_t *lock, unsigned long flags);
#line 26 
#line 905 
static void cif_mutex_lock_mutex_of_zd_chip_0(struct mutex *lock);
#line 35 
#line 869 
static void cif___ldv_spin_lock_lock_of_zd_mac(spinlock_t *lock);
#line 35 
#line 887 
static void cif___ldv_spin_lock_lock_of_sk_buff_head_0(spinlock_t *lock);
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/bitmap.h"
#line 22 
void ldv_clear_bit(long nr, unsigned long *addr);
#line 26  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 26 
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags);
#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/delay.h"
#line 59 
void msleep(unsigned int);
#line 185  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mutex.h"
#line 912  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_mac.i.aux"
static void cif_mutex_unlock_mutex_of_zd_chip_0(struct mutex *lock);
#line 454  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/workqueue.h"
#line 454 
void flush_workqueue(struct workqueue_struct *);
#line 511 
#line 348  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_mac.i.aux"
static bool cif_queue_delayed_work_0(struct workqueue_struct *wq, struct delayed_work *dwork, unsigned long delay);
#line 590  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/slab.h"
#line 381  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_mac.i.aux"
static void *kmalloc_array(size_t n, size_t size, gfp_t flags);
#line 1019  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
#line 1019 
void kfree_skb(struct sk_buff *);
#line 1023 
#line 1023 
void consume_skb(struct sk_buff *);
#line 1531  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static bool skb_queue_is_first(struct sk_buff_head *list, struct sk_buff *skb)
{
  #line 1534 
  return (_Bool)(skb->__anonCompField_sk_buff_87.__anonCompField___anonunion_487_86.prev == (struct sk_buff *)list);
}

#line 1744  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static struct sk_buff *skb_peek(struct sk_buff_head *list_)
{
  #line 1746 
  struct sk_buff *skb = list_->next;
  #line 1748 
  if (skb == (struct sk_buff *)list_) 
                                      #line 1749 
                                      skb = (struct sk_buff *)0;
  #line 1750 
  return skb;
}

#line 1812  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static __u32 skb_queue_len(struct sk_buff_head *list_)
{
  #line 1814 
  return list_->qlen;
}

#line 2018  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static void __skb_unlink(struct sk_buff *skb, struct sk_buff_head *list)
{
  #line 2020 
  struct sk_buff *next;
  #line 2020 
  struct sk_buff *prev;
  #line 2022 
  (list->qlen) --;
  #line 2023 
  next = skb->__anonCompField_sk_buff_87.__anonCompField___anonunion_487_86.next;
  #line 2024 
  prev = skb->__anonCompField_sk_buff_87.__anonCompField___anonunion_487_86.prev;
  #line 2025 
  skb->__anonCompField_sk_buff_87.__anonCompField___anonunion_487_86.prev = ((struct sk_buff *)0);
  #line 2025 
  skb->__anonCompField_sk_buff_87.__anonCompField___anonunion_487_86.next = ((struct sk_buff *)0);
  {
    #line 2027 
    union __anonunion___u_4710 __u = {.__val = prev};
    #line 2026 
    __write_once_size((void *)(& next->__anonCompField_sk_buff_87.__anonCompField___anonunion_487_86.prev),(void *)(& __u.__c),8);
    #line 2026 
    struct sk_buff *tmp_2 = __u.__val;
  }
  {
    #line 2028 
    union __anonunion___u_4712 __u_0 = {.__val = next};
    #line 2027 
    __write_once_size((void *)(& prev->__anonCompField_sk_buff_87.__anonCompField___anonunion_487_86.next),(void *)(& __u_0.__c),8);
    #line 2027 
    struct sk_buff *tmp_4 = __u_0.__val;
  }
  #line 2029 
  return;
}

#line 2038  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static struct sk_buff *__skb_dequeue(struct sk_buff_head *list)
{
  #line 2040 
  struct sk_buff *skb = skb_peek(list);
  #line 2041 
  if (skb != (struct sk_buff *)0) 
                                  #line 2042 
                                  __skb_unlink(skb,list);
  #line 2043 
  return skb;
}

#line 2045 
#line 2045 
struct sk_buff *skb_dequeue(struct sk_buff_head *);
#line 2189 
#line 2189 
void *skb_put(struct sk_buff *, unsigned int);
#line 2230  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static void *skb_put_data(struct sk_buff *skb, void *data, unsigned int len)
{
  #line 2233 
  void *tmp = skb_put(skb,len);
  #line 2235 
  memcpy(tmp,data,(unsigned long)len);
  #line 2237 
  return tmp;
}

#line 2245 
#line 2245 
void *skb_push(struct sk_buff *, unsigned int);
#line 2253 
#line 2253 
void *skb_pull(struct sk_buff *, unsigned int);
#line 2338  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static void skb_reserve(struct sk_buff *skb, int len)
{
  #line 2340 
  skb->data += (unsigned long)len;
  #line 2341 
  skb->tail += (unsigned int)len;
  #line 2342 
  return;
}

#line 2762 
#line 2762 
struct sk_buff *__netdev_alloc_skb(struct net_device *, unsigned int, gfp_t);
#line 2778  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static struct sk_buff *netdev_alloc_skb(struct net_device *dev, unsigned int length)
{
  #line 2781 
  return __netdev_alloc_skb(dev,length,2592U);
}

#line 2792  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static struct sk_buff *dev_alloc_skb(unsigned int length)
{
  #line 2794 
  return netdev_alloc_skb((struct net_device *)0,length);
}

#line 3617  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
#line 3617 
void __dev_kfree_skb_any(struct sk_buff *, enum skb_free_reason);
#line 3648  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
__inline static void dev_kfree_skb_any(struct sk_buff *skb)
{
  #line 3650 
  __dev_kfree_skb_any(skb,(enum skb_free_reason)SKB_REASON_DROPPED);
  #line 3651 
  return;
}

#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/etherdevice.h"
__inline static bool is_zero_ether_addr(u8 *addr)
{
  #line 101 
  return (_Bool)((*((u32 *)addr) | (unsigned int)*((u16 *)(addr + 4U))) == 0U);
}

#line 116  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/etherdevice.h"
__inline static bool is_multicast_ether_addr(u8 *addr)
{
  #line 119 
  u32 a = *((u32 *)addr);
  #line 126 
  return (_Bool)((a & 1U) != 0U);
}

#line 191  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/etherdevice.h"
__inline static bool is_valid_ether_addr(u8 *addr)
{
  #line 195 
  int tmp_1;
  #line 195 
  if (is_multicast_ether_addr(addr)) 
                                     #line 195 
                                     tmp_1 = 0;
  else {
    #line 195 
    if (is_zero_ether_addr(addr)) 
                                  #line 195 
                                  tmp_1 = 0; else 
                                                  #line 195 
                                                  tmp_1 = 1;
  }
  #line 195 
  return (_Bool)(tmp_1 != 0);
}

#line 315  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/etherdevice.h"
__inline static bool ether_addr_equal(u8 *addr1, u8 *addr2)
{
  #line 318 
  u32 fold = (*((u32 *)addr1) ^ *((u32 *)addr2)) | (unsigned int)((int)*((u16 *)(addr1 + 4U)) ^ (int)*((u16 *)(addr2 + 4U)));
  #line 321 
  return (_Bool)(fold == 0U);
}

#line 284  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
__inline static bool ieee80211_has_a4(__le16 fc)
{
  #line 286 
  __le16 tmp = (unsigned short)768U;
  #line 287 
  return (_Bool)(((int)fc & (int)tmp) == (int)tmp);
}

#line 378  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
__inline static bool ieee80211_is_data_qos(__le16 fc)
{
  #line 384 
  return (_Bool)(((int)fc & 140) == 136);
}

#line 546  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
__inline static bool ieee80211_is_pspoll(__le16 fc)
{
  #line 548 
  return (_Bool)(((int)fc & 252) == 164);
}

#line 576  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
__inline static bool ieee80211_is_ack(__le16 fc)
{
  #line 578 
  return (_Bool)(((int)fc & 252) == 212);
}

#line 4738  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
__inline static void set_wiphy_dev(struct wiphy *wiphy, struct device *dev)
{
  #line 4740 
  wiphy->dev.parent = dev;
  #line 4741 
  return;
}

#line 5490 
#line 5490 
int regulatory_hint(struct wiphy *, char *);
#line 7322  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
__inline static void wiphy_ext_feature_set(struct wiphy *wiphy, enum nl80211_ext_feature_index ftidx)
{
  #line 7325 
  u8 *ft_byte;
  #line 7327 
  ft_byte = & wiphy->ext_features[(unsigned int)ftidx / 8U];
  #line 7328 
  *ft_byte = (unsigned char)((int)*ft_byte | (int)((unsigned char)(1UL << ((unsigned int)ftidx & 7U))));
  #line 7329 
  return;
}

#line 1119  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
__inline static struct ieee80211_rx_status *IEEE80211_SKB_RXCB(struct sk_buff *skb)
{
  #line 1121 
  return (struct ieee80211_rx_status *)(& skb->cb);
}

#line 1139  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
__inline static void ieee80211_tx_info_clear_status(struct ieee80211_tx_info *info)
{
  #line 1141 
  int i;
  #line 1149 
  i = 0;
  #line 1149 
  while (i <= 3) {
    #line 1150 
    info->__anonCompField_ieee80211_tx_info_195.status.rates[i].count = (unsigned short)0U;
    #line 1149 
    i ++;
  }
  #line 1154 
  memset((void *)(& info->__anonCompField_ieee80211_tx_info_195.status.ampdu_ack_len),0,24UL);
  #line 1155 
  return;
}

#line 2533  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
__inline static void _ieee80211_hw_set(struct ieee80211_hw *hw, enum ieee80211_hw_flags flg)
{
  #line 2536 
  __set_bit((long)flg,(unsigned long *)(& hw->flags));
  #line 2537 
  return;
}

#line 2599  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
__inline static void SET_IEEE80211_DEV(struct ieee80211_hw *hw, struct device *dev)
{
  #line 2601 
  set_wiphy_dev(hw->wiphy,dev);
  #line 2602 
  return;
}

#line 2610  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
__inline static void SET_IEEE80211_PERM_ADDR(struct ieee80211_hw *hw, u8 *addr)
{
  #line 2612 
  memcpy((void *)(& (hw->wiphy)->perm_addr),(void *)addr,6UL);
  #line 2613 
  return;
}

#line 2616  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
__inline static struct ieee80211_rate *ieee80211_get_tx_rate(struct ieee80211_hw *hw, struct ieee80211_tx_info *c)
{
  #line 2619 
  int __ret_warn_on;
  #line 2619 
  __ret_warn_on = (int)c->__anonCompField_ieee80211_tx_info_195.control.__anonCompField___anonstruct_control_1010_193.__anonCompField___anonunion_1011_192.rates[0].idx < 0;
  #line 2619 
  if ((long)(__ret_warn_on != 0) != 0L) {
    #line 2620 
    ldv_inline_asm();
    #line 2621 
    ldv_inline_asm();
  }
  #line 2619 
  if ((long)((long)(__ret_warn_on != 0)) != 0L) 
                                                #line 2620 
                                                return (struct ieee80211_rate *)0;
  #line 2621 
  return ((hw->wiphy)->bands[(int)c->band])->bitrates + (unsigned long)c->__anonCompField_ieee80211_tx_info_195.control.__anonCompField___anonstruct_control_1010_193.__anonCompField___anonunion_1011_192.rates[0].idx;
}

#line 4123 
#line 919  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_mac.i.aux"
static struct ieee80211_hw *cif_ieee80211_alloc_hw(size_t priv_data_len, struct ieee80211_ops *ops);
#line 4379  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
#line 4379 
void ieee80211_rx_irqsafe(struct ieee80211_hw *, struct sk_buff *);
#line 4660 
#line 4660 
void ieee80211_tx_status_irqsafe(struct ieee80211_hw *, struct sk_buff *);
#line 4737 
#line 4737 
struct sk_buff *ieee80211_beacon_get_tim(struct ieee80211_hw *, struct ieee80211_vif *, u16 *, u16 *);
#line 4750  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
__inline static struct sk_buff *ieee80211_beacon_get(struct ieee80211_hw *hw, struct ieee80211_vif *vif)
{
  #line 4753 
  return ieee80211_beacon_get_tim(hw,vif,(u16 *)0U,(u16 *)0U);
}

#line 4990 
#line 4990 
struct sk_buff *ieee80211_get_buffered_bc(struct ieee80211_hw *, struct ieee80211_vif *);
#line 5191 
#line 5191 
int ieee80211_queue_stopped(struct ieee80211_hw *, int);
#line 783  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.h"
#line 783 
void zd_chip_init(struct zd_chip *chip, struct ieee80211_hw *hw, struct usb_interface *intf);
#line 786 
#line 786 
void zd_chip_clear(struct zd_chip *chip);
#line 787 
#line 787 
int zd_chip_read_mac_addr_fw(struct zd_chip *chip, u8 *addr);
#line 788 
#line 788 
int zd_chip_init_hw(struct zd_chip *chip);
#line 811 
#line 811 
int zd_ioread32v_locked(struct zd_chip *chip, u32 *values, zd_addr_t *addr, unsigned int count);
#line 814  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.h"
__inline static int zd_ioread32_locked(struct zd_chip *chip, u32 *value, zd_addr_t addr)
{
  #line 817 
  return zd_ioread32v_locked(chip,value,& addr,1U);
}

#line 835 
#line 835 
int _zd_iowrite32v_locked(struct zd_chip *chip, struct zd_ioreq32 *ioreqs, unsigned int count);
#line 838  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.h"
__inline static int zd_iowrite32_locked(struct zd_chip *chip, u32 value, zd_addr_t addr)
{
  #line 841 
  struct zd_ioreq32 ioreq;
  #line 843 
  ioreq.addr = addr;
  #line 844 
  ioreq.value = value;
  #line 846 
  return _zd_iowrite32v_locked(chip,& ioreq,1U);
}

#line 849 
#line 849 
int zd_iowrite32a_locked(struct zd_chip *chip, struct zd_ioreq32 *ioreqs, unsigned int count);
#line 871 
#line 871 
int zd_iowrite32(struct zd_chip *chip, zd_addr_t addr, u32 value);
#line 877 
#line 877 
int zd_chip_set_channel(struct zd_chip *chip, u8 channel);
#line 878  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.h"
__inline static u8 _zd_chip_get_channel(struct zd_chip *chip)
{
  #line 880 
  return chip->rf.channel;
}

#line 883 
#line 883 
int zd_read_regdomain(struct zd_chip *chip, u8 *regdomain);
#line 884 
#line 884 
int zd_write_mac_addr(struct zd_chip *chip, u8 *mac_addr);
#line 885 
#line 885 
int zd_write_bssid(struct zd_chip *chip, u8 *bssid);
#line 886 
#line 886 
int zd_chip_switch_radio_on(struct zd_chip *chip);
#line 887 
#line 887 
int zd_chip_switch_radio_off(struct zd_chip *chip);
#line 888 
#line 888 
int zd_chip_enable_int(struct zd_chip *chip);
#line 889 
#line 889 
void zd_chip_disable_int(struct zd_chip *chip);
#line 890 
#line 890 
int zd_chip_enable_rxtx(struct zd_chip *chip);
#line 891 
#line 891 
void zd_chip_disable_rxtx(struct zd_chip *chip);
#line 892 
#line 892 
int zd_chip_enable_hwint(struct zd_chip *chip);
#line 893 
#line 893 
int zd_chip_disable_hwint(struct zd_chip *chip);
#line 895 
#line 895 
int zd_chip_set_rts_cts_rate_locked(struct zd_chip *chip, int preamble);
#line 902  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.h"
__inline static int zd_set_encryption_type(struct zd_chip *chip, u32 type)
{
  #line 904 
  return zd_iowrite32(chip,(unsigned short)38520,type);
}

#line 912 
#line 912 
int zd_chip_set_basic_rates(struct zd_chip *chip, u16 cr_rates);
#line 923 
#line 923 
int zd_chip_control_leds(struct zd_chip *chip, enum led_status status);
#line 925 
#line 925 
int zd_set_beacon_interval(struct zd_chip *chip, u16 interval, u8 dtim_period, int type);
#line 935 
#line 935 
u8 zd_rx_rate(void *rx_frame, struct rx_status *status);
#line 942  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.h"
__inline static void zd_mc_clear(struct zd_mc_hash *hash)
{
  #line 944 
  hash->low = 0U;
  #line 948 
  hash->high = 2147483648U;
  #line 949 
  return;
}

#line 951  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.h"
__inline static void zd_mc_add_all(struct zd_mc_hash *hash)
{
  #line 953 
  hash->high = 4294967295U;
  #line 953 
  hash->low = 4294967295U;
  #line 954 
  return;
}

#line 956  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.h"
__inline static void zd_mc_add_addr(struct zd_mc_hash *hash, u8 *addr)
{
  #line 958 
  unsigned int i = (unsigned int)((int)*(addr + 5U) >> 2);
  #line 959 
  if (i <= 31U) 
                #line 960 
                hash->low |= (unsigned int)(1 << i); else 
                                                          #line 962 
                                                          hash->high |= (unsigned int)(1 << (i + 4294967264U));
  #line 963 
  return;
}

#line 966 
#line 966 
int zd_chip_set_multicast_hash(struct zd_chip *chip, struct zd_mc_hash *hash);
#line 969 
#line 969 
u64 zd_chip_get_tsf(struct zd_chip *chip);
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_mac.c"
static struct zd_reg_alpha2_map reg_alpha2_map[8U] = {{.reg = 16U, .alpha2 = {(char)'U', (char)'S'}}, {.reg = 32U, .alpha2 = {(char)'C', (char)'A'}}, {.reg = 48U, .alpha2 = {(char)'D', (char)'E'}}, {.reg = 65U, .alpha2 = {(char)'J', (char)'P'}}, {.reg = 64U, .alpha2 = {(char)'J', (char)'P'}}, {.reg = 73U, .alpha2 = {(char)'J', (char)'P'}}, {.reg = 49U, .alpha2 = {(char)'E', (char)'S'}}, {.reg = 50U, .alpha2 = {(char)'F', (char)'R'}}};
#line 39  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_mac.c"
static struct ieee80211_rate zd_rates[12U] = {{.bitrate = (unsigned short)10U}, {.flags = 1U, .bitrate = (unsigned short)20U, .hw_value = (unsigned short)1U, .hw_value_short = (unsigned short)33U}, {.flags = 1U, .bitrate = (unsigned short)55U, .hw_value = (unsigned short)2U, .hw_value_short = (unsigned short)34U}, {.flags = 1U, .bitrate = (unsigned short)110U, .hw_value = (unsigned short)3U, .hw_value_short = (unsigned short)35U}, {.bitrate = (unsigned short)60U, .hw_value = (unsigned short)27U}, {.bitrate = (unsigned short)90U, .hw_value = (unsigned short)31U}, {.bitrate = (unsigned short)120U, .hw_value = (unsigned short)26U}, {.bitrate = (unsigned short)180U, .hw_value = (unsigned short)30U}, {.bitrate = (unsigned short)240U, .hw_value = (unsigned short)25U}, {.bitrate = (unsigned short)360U, .hw_value = (unsigned short)29U}, {.bitrate = (unsigned short)480U, .hw_value = (unsigned short)24U}, {.bitrate = (unsigned short)540U, .hw_value = (unsigned short)28U}};
#line 93  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_mac.c"
static struct tx_retry_rate zd_retry_rates[12U] = {{.count = 1}, {.count = 2, .rate = {1}}, {.count = 3, .rate = {2, 1}}, {.count = 4, .rate = {3, 2, 1}}, {.count = 5, .rate = {4, 3, 2, 1}}, {.count = 6, .rate = {5, 4, 3, 2, 1}}, {.count = 5, .rate = {6, 3, 2, 1}}, {.count = 6, .rate = {7, 6, 3, 2, 1}}, {.count = 6, .rate = {8, 6, 3, 2, 1}}, {.count = 7, .rate = {9, 8, 6, 3, 2, 1}}, {.count = 8, .rate = {10, 9, 8, 6, 3, 2, 1}}, {.count = 9, .rate = {11, 10, 9, 8, 6, 3, 2, 1}}};
#line 108  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_mac.c"
static struct ieee80211_channel zd_channels[14U] = {{.center_freq = 2412U, .hw_value = (unsigned short)1U}, {.center_freq = 2417U, .hw_value = (unsigned short)2U}, {.center_freq = 2422U, .hw_value = (unsigned short)3U}, {.center_freq = 2427U, .hw_value = (unsigned short)4U}, {.center_freq = 2432U, .hw_value = (unsigned short)5U}, {.center_freq = 2437U, .hw_value = (unsigned short)6U}, {.center_freq = 2442U, .hw_value = (unsigned short)7U}, {.center_freq = 2447U, .hw_value = (unsigned short)8U}, {.center_freq = 2452U, .hw_value = (unsigned short)9U}, {.center_freq = 2457U, .hw_value = (unsigned short)10U}, {.center_freq = 2462U, .hw_value = (unsigned short)11U}, {.center_freq = 2467U, .hw_value = (unsigned short)12U}, {.center_freq = 2472U, .hw_value = (unsigned short)13U}, {.center_freq = 2484U, .hw_value = (unsigned short)14U}};
#line 125 
#line 1521 
static void housekeeping_init(struct zd_mac *mac);
#line 126 
#line 1526 
static void housekeeping_enable(struct zd_mac *mac);
#line 127 
#line 1533 
static void housekeeping_disable(struct zd_mac *mac);
#line 128 
#line 1472 
static void beacon_init(struct zd_mac *mac);
#line 129 
#line 1477 
static void beacon_enable(struct zd_mac *mac);
#line 130 
#line 1486 
static void beacon_disable(struct zd_mac *mac);
#line 131 
#line 1272 
static void set_rts_cts(struct zd_mac *mac, unsigned int short_preamble);
#line 132 
#line 701 
static int zd_mac_config_beacon(struct ieee80211_hw *hw, struct sk_buff *beacon, bool in_intr);
#line 135  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_mac.c"
static int zd_reg2alpha2(u8 regdomain, char *alpha2)
{
  #line 137 
  unsigned int i;
  #line 138 
  struct zd_reg_alpha2_map *reg_map;
  #line 139 
  i = 0U;
  #line 139 
  while (i <= 7U) {
    #line 140 
    reg_map = & reg_alpha2_map[i];
    #line 141 
    if ((unsigned int)regdomain == reg_map->reg) {
      #line 142 
      *alpha2 = reg_map->alpha2[0];
      #line 143 
      *(alpha2 + 1U) = reg_map->alpha2[1];
      #line 144 
      return 0;
    }
    #line 139 
    i ++;
  }
  #line 147 
  return 1;
}

#line 150  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_mac.c"
static int zd_check_signal(struct ieee80211_hw *hw, int signal)
{
  #line 152 
  struct zd_mac *mac = zd_hw_mac(hw);
  {
    #line 154 
    bool __cond = (_Bool)((unsigned int)signal > 100U);
    #line 154 
    if ((long)((int)__cond != 0) != 0L) 
                                        #line 154 
                                        dev_printk((char *)"\001",& (mac->chip.usb.intf)->dev,(char *)"%s() ",(char *)"zd_check_signal",(char *)"zd_check_signal",signal);
  }
  #line 158 
  if (signal < 0) 
                  #line 159 
                  signal = 0;
  else 
    #line 160 
    if (signal > 100) 
                      #line 161 
                      signal = 100;
  #line 163 
  return signal;
}

#line 166  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_mac.c"
int zd_mac_preinit_hw(struct ieee80211_hw *hw)
{
  #line 168 
  int r;
  #line 169 
  u8 addr[6U];
  #line 170 
  struct zd_mac *mac = zd_hw_mac(hw);
  #line 172 
  r = zd_chip_read_mac_addr_fw(& mac->chip,(u8 *)(& addr));
  #line 173 
  if (r != 0) 
              #line 174 
              return r;
  #line 176 
  SET_IEEE80211_PERM_ADDR(hw,(u8 *)(& addr));
  #line 178 
  return 0;
}

#line 181  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_mac.c"
int zd_mac_init_hw(struct ieee80211_hw *hw)
{
  #line 196 
  unsigned long _flags;
  #line 183 
  int r;
  #line 186 
  char alpha2[2U];
  #line 187 
  u8 default_regdomain;
  #line 184 
  struct zd_mac *mac = zd_hw_mac(hw);
  #line 185 
  struct zd_chip *chip = & mac->chip;
  #line 189 
  r = zd_chip_enable_int(chip);
  #line 190 
  if (r != 0) 
              #line 191 
              goto out;
  #line 192 
  r = zd_chip_init_hw(chip);
  #line 193 
  if (r != 0) 
              #line 194 
              goto disable_int;
  {
    #line 196 
    unsigned long __dummy;
    #line 196 
    unsigned long __dummy2;
    }
  #line 196 
  _flags = arch_local_save_flags();
  {
    #line 196 
    unsigned long __dummy_0;
    #line 196 
    unsigned long __dummy2_0;
    }
  #line 196 
  if ((long)(arch_irqs_disabled_flags(_flags) != 0) != 0L) {
    {
      #line 196 
      bool branch;
      #line 196 
      struct _ddebug __UNIQUE_ID_ddebug565 = {.modname = (char *)"zd1211rw", .function = (char *)"zd_mac_init_hw", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_mac.c", .format = (char *)"%s:%d ASSERT %s VIOLATED!\n", .lineno = (unsigned int)196U, .flags = (unsigned int)1U, .key = {.dd_key_true = {.key = {.enabled = {.counter = 1}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)1}}}}};
      {
        #line 196 
        int tmp_1;
        #line 196 
        if ((int)arch_static_branch(& __UNIQUE_ID_ddebug565.key.dd_key_true.key,
                           (_Bool)1) != 0) 
          #line 196 
          tmp_1 = 0; else 
                          #line 196 
                          tmp_1 = 1;
        #line 196 
        branch = (_Bool)(tmp_1 != 0);
        }
      #line 196 
      if ((long)((long)((int)branch != 0)) != 0L) 
                                                  #line 196 
                                                  __dynamic_pr_debug(& __UNIQUE_ID_ddebug565,(char *)"%s:%d ASSERT %s VIOLATED!\n",(char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_mac.c",196,(char *)"!({ unsigned long _flags; do { ({ unsigned long __dummy; typeof(_flags) __dummy2; (void)(&__dummy == &__dummy2); 1; }); _flags = arch_local_save_flags(); } while (0); ({ ({ unsigned long __dummy; typeof(_flags) __dummy2; (void)(&__dummy == &__dummy2); 1; }); arch_irqs_disabled_flags(_flags); }); })");
    }
    #line 196 
    dump_stack();
  }
  #line 198 
  r = zd_read_regdomain(chip,& default_regdomain);
  #line 199 
  if (r != 0) 
              #line 200 
              goto disable_int;
  #line 201 
  cif_spin_lock_irq_lock_of_zd_mac(& mac->lock);
  #line 202 
  mac->default_regdomain = default_regdomain;
  #line 202 
  mac->regdomain = default_regdomain;
  #line 203 
  cif_spin_unlock_irq_lock_of_zd_mac(& mac->lock);
  #line 207 
  r = zd_set_encryption_type(chip,8U);
  #line 208 
  if (r != 0) 
              #line 209 
              goto disable_int;
  #line 211 
  r = zd_reg2alpha2((unsigned char)((int)mac->regdomain),(char *)(& alpha2));
  #line 212 
  if (r != 0) 
              #line 213 
              goto disable_int;
  #line 215 
  r = regulatory_hint(hw->wiphy,(char *)(& alpha2));
  #line 216 
  disable_int: 
               #line 216 
  ;
  #line 217 
  zd_chip_disable_int(chip);
  #line 218 
  out: 
       #line 218 
  ;
  #line 219 
  return r;
}

#line 222  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_mac.c"
void zd_mac_clear(struct zd_mac *mac)
{
  #line 224 
  flush_workqueue(zd_workqueue);
  #line 225 
  zd_chip_clear(& mac->chip);
  #line 226 
  memset((void *)mac,255,13544UL);
  #line 227 
  return;
}

#line 229  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_mac.c"
static int set_rx_filter(struct zd_mac *mac)
{
  #line 231 
  unsigned long flags;
  #line 232 
  u32 filter = 604045311U;
  #line 234 
  cif___ldv_spin_lock_lock_of_zd_mac(& mac->lock);
  #line 235 
  if ((unsigned int)mac->pass_ctrl != 0U) 
                                          #line 236 
                                          filter |= 3623878656U;
  #line 237 
  cif_spin_unlock_irqrestore_lock_of_zd_mac(& mac->lock,flags);
  #line 239 
  return zd_iowrite32(& mac->chip,(unsigned short)38540,filter);
}

#line 242  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_mac.c"
static int set_mac_and_bssid(struct zd_mac *mac)
{
  #line 244 
  int r;
  #line 246 
  if (mac->vif == (struct ieee80211_vif *)0) 
                                             #line 247 
                                             return -1;
  #line 249 
  r = zd_write_mac_addr(& mac->chip,(u8 *)(& (mac->vif)->addr));
  #line 250 
  if (r != 0) 
              #line 251 
              return r;
  #line 256 
  if (mac->type != 3) {
    #line 257 
    return set_rx_filter(mac);
  }
  else {
    #line 259 
    return zd_write_bssid(& mac->chip,(u8 *)(& (mac->vif)->addr));
  }
}

#line 262  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_mac.c"
static int set_mc_hash(struct zd_mac *mac)
{
  #line 264 
  struct zd_mc_hash hash;
  #line 265 
  zd_mc_clear(& hash);
  #line 266 
  return zd_chip_set_multicast_hash(& mac->chip,& hash);
}

#line 269  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_mac.c"
int zd_op_start(struct ieee80211_hw *hw)
{
  #line 274 
  int r;
  #line 271 
  struct zd_mac *mac = zd_hw_mac(hw);
  #line 272 
  struct zd_chip *chip = & mac->chip;
  #line 273 
  struct zd_usb *usb = & chip->usb;
  #line 276 
  if ((unsigned int)usb->initialized == 0U) {
    #line 277 
    r = zd_usb_init_hw(usb);
    #line 278 
    if (r != 0) 
                #line 279 
                goto out;
  }
  #line 282 
  r = zd_chip_enable_int(chip);
  #line 283 
  if (r < 0) 
             #line 284 
             goto out;
  #line 286 
  r = zd_chip_set_basic_rates(chip,(unsigned short)65295);
  #line 287 
  if (r < 0) 
             #line 288 
             goto disable_int;
  #line 289 
  r = set_rx_filter(mac);
  #line 290 
  if (r != 0) 
              #line 291 
              goto disable_int;
  #line 292 
  r = set_mc_hash(mac);
  #line 293 
  if (r != 0) 
              #line 294 
              goto disable_int;
  #line 300 
  msleep(10U);
  #line 302 
  r = zd_chip_switch_radio_on(chip);
  #line 303 
  if (r < 0) {
    #line 304 
    _dev_err(& (chip->usb.intf)->dev,(char *)"%s: failed to set radio on\n",(char *)"zd_op_start");
    #line 306 
    goto disable_int;
  }
  #line 308 
  r = zd_chip_enable_rxtx(chip);
  #line 309 
  if (r < 0) 
             #line 310 
             goto disable_radio;
  #line 311 
  r = zd_chip_enable_hwint(chip);
  #line 312 
  if (r < 0) 
             #line 313 
             goto disable_rxtx;
  #line 315 
  housekeeping_enable(mac);
  #line 316 
  beacon_enable(mac);
  #line 317 
  cif_set_bit_0(0L,& mac->flags);
  #line 318 
  return 0;
  #line 319 
  disable_rxtx: 
                #line 319 
  ;
  #line 320 
  zd_chip_disable_rxtx(chip);
  #line 321 
  disable_radio: 
                 #line 321 
  ;
  #line 322 
  zd_chip_switch_radio_off(chip);
  #line 323 
  disable_int: 
               #line 323 
  ;
  #line 324 
  zd_chip_disable_int(chip);
  #line 325 
  out: 
       #line 325 
  ;
  #line 326 
  return r;
}

#line 329  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_mac.c"
void zd_op_stop(struct ieee80211_hw *hw)
{
  #line 333 
  struct sk_buff *skb;
  #line 331 
  struct zd_mac *mac = zd_hw_mac(hw);
  #line 332 
  struct zd_chip *chip = & mac->chip;
  #line 334 
  struct sk_buff_head *ack_wait_queue = & mac->ack_wait_queue;
  #line 336 
  cif_clear_bit(0L,& mac->flags);
  #line 343 
  zd_chip_disable_rxtx(chip);
  #line 344 
  beacon_disable(mac);
  #line 345 
  housekeeping_disable(mac);
  #line 346 
  flush_workqueue(zd_workqueue);
  #line 348 
  zd_chip_disable_hwint(chip);
  #line 349 
  zd_chip_switch_radio_off(chip);
  #line 350 
  zd_chip_disable_int(chip);
  #line 353 
  while (1) {
    #line 353 
    skb = skb_dequeue(ack_wait_queue);
    #line 353 
    if (! (skb != (struct sk_buff *)0)) 
                                        #line 353 
                                        break;
    #line 354 
    dev_kfree_skb_any(skb);
  }
  #line 355 
  return;
}

#line 357  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_mac.c"
int zd_restore_settings(struct zd_mac *mac)
{
  #line 359 
  struct sk_buff *beacon;
  #line 360 
  struct zd_mc_hash multicast_hash;
  #line 361 
  unsigned int short_preamble;
  #line 362 
  int r;
  #line 362 
  int beacon_interval;
  #line 362 
  int beacon_period;
  #line 363 
  u8 channel;
  #line 365 
  dev_printk((char *)"\001",& (mac->chip.usb.intf)->dev,(char *)"%s() ",(char *)"zd_restore_settings");
  #line 367 
  cif_spin_lock_irq_lock_of_zd_mac(& mac->lock);
  #line 368 
  multicast_hash = mac->multicast_hash;
  #line 369 
  short_preamble = (unsigned int)mac->short_preamble;
  #line 370 
  beacon_interval = (int)mac->beacon.interval;
  #line 371 
  beacon_period = (int)mac->beacon.period;
  #line 372 
  channel = mac->channel;
  #line 373 
  cif_spin_unlock_irq_lock_of_zd_mac(& mac->lock);
  #line 375 
  r = set_mac_and_bssid(mac);
  #line 376 
  if (r < 0) {
    #line 377 
    dev_printk((char *)"\001",& (mac->chip.usb.intf)->dev,(char *)"%s() ",(char *)"zd_restore_settings",r);
    #line 378 
    return r;
  }
  #line 381 
  r = zd_chip_set_channel(& mac->chip,(unsigned char)((int)channel));
  #line 382 
  if (r < 0) {
    #line 383 
    dev_printk((char *)"\001",& (mac->chip.usb.intf)->dev,(char *)"%s() ",(char *)"zd_restore_settings",r);
    #line 385 
    return r;
  }
  #line 388 
  set_rts_cts(mac,short_preamble);
  #line 390 
  r = zd_chip_set_multicast_hash(& mac->chip,& multicast_hash);
  #line 391 
  if (r < 0) {
    #line 392 
    dev_printk((char *)"\001",& (mac->chip.usb.intf)->dev,(char *)"%s() ",(char *)"zd_restore_settings",r);
    #line 394 
    return r;
  }
  #line 397 
  if ((mac->type == 7 || mac->type == 1) || mac->type == 3) {
    #line 400 
    if (mac->vif != (struct ieee80211_vif *)0) {
      #line 401 
      beacon = ieee80211_beacon_get(mac->hw,mac->vif);
      #line 402 
      if (beacon != (struct sk_buff *)0) 
                                         #line 403 
                                         zd_mac_config_beacon(mac->hw,beacon,(_Bool)0);
    }
    #line 406 
    zd_set_beacon_interval(& mac->chip,(unsigned short)((int)((unsigned short)beacon_interval)),(unsigned char)((int)((unsigned char)beacon_period)),mac->type);
    #line 409 
    cif_spin_lock_irq_lock_of_zd_mac(& mac->lock);
    #line 410 
    mac->beacon.last_update = jiffies;
    #line 411 
    cif_spin_unlock_irq_lock_of_zd_mac(& mac->lock);
  }
  #line 414 
  return 0;
}

#line 431  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_mac.c"
static void zd_mac_tx_status(struct ieee80211_hw *hw, struct sk_buff *skb, int ackssi, struct tx_status *tx_status)
{
  #line 435 
  int i;
  #line 437 
  int first_idx;
  #line 438 
  struct tx_retry_rate *retries;
  #line 434 
  struct ieee80211_tx_info *info = IEEE80211_SKB_CB(skb);
  #line 436 
  int success = 1;
  #line 436 
  int retry = 1;
  #line 440 
  ieee80211_tx_info_clear_status(info);
  #line 442 
  if (tx_status != (struct tx_status *)0) {
    #line 443 
    success = (unsigned int)tx_status->failure == 0U;
    #line 444 
    retry = (int)tx_status->retry + success;
  }
  #line 447 
  if (success != 0) 
                    #line 449 
                    info->flags |= 512U; else 
                                              #line 452 
                                              info->flags &= 4294966783U;
  #line 455 
  first_idx = (int)info->__anonCompField_ieee80211_tx_info_195.status.rates[0].idx;
  #line 456 
  if ((long)((unsigned int)first_idx > 11U) != 0L) {
    {
      #line 456 
      bool branch;
      #line 456 
      struct _ddebug __UNIQUE_ID_ddebug566 = {.modname = (char *)"zd1211rw", .function = (char *)"zd_mac_tx_status", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_mac.c", .format = (char *)"%s:%d ASSERT %s VIOLATED!\n", .lineno = (unsigned int)456U, .flags = (unsigned int)1U, .key = {.dd_key_true = {.key = {.enabled = {.counter = 1}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)1}}}}};
      {
        #line 456 
        int tmp_1;
        #line 456 
        if ((int)arch_static_branch(& __UNIQUE_ID_ddebug566.key.dd_key_true.key,
                           (_Bool)1) != 0) 
          #line 456 
          tmp_1 = 0; else 
                          #line 456 
                          tmp_1 = 1;
        #line 456 
        branch = (_Bool)(tmp_1 != 0);
        }
      #line 456 
      if ((long)((long)((int)branch != 0)) != 0L) 
                                                  #line 456 
                                                  __dynamic_pr_debug(& __UNIQUE_ID_ddebug566,(char *)"%s:%d ASSERT %s VIOLATED!\n",(char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_mac.c",456,(char *)"0<=first_idx && first_idx<(sizeof(zd_retry_rates) / sizeof((zd_retry_rates)[0]) + ((int)(sizeof(struct { int:(-!!(__builtin_types_compatible_p(typeof((zd_retry_rates)), typeof(&(zd_retry_rates)[0])))); }))))");
    }
    #line 456 
    dump_stack();
  }
  #line 457 
  retries = & zd_retry_rates[first_idx];
  #line 458 
  if ((long)(retry <= 0) != 0L || (long)(retries->count < retry) != 0L) {
    {
      #line 458 
      bool branch_0;
      #line 458 
      struct _ddebug __UNIQUE_ID_ddebug567 = {.modname = (char *)"zd1211rw", .function = (char *)"zd_mac_tx_status", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_mac.c", .format = (char *)"%s:%d ASSERT %s VIOLATED!\n", .lineno = (unsigned int)458U, .flags = (unsigned int)1U, .key = {.dd_key_true = {.key = {.enabled = {.counter = 1}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)1}}}}};
      {
        #line 458 
        int tmp_6;
        #line 458 
        if ((int)arch_static_branch(& __UNIQUE_ID_ddebug567.key.dd_key_true.key,
                           (_Bool)1) != 0) 
          #line 458 
          tmp_6 = 0; else 
                          #line 458 
                          tmp_6 = 1;
        #line 458 
        branch_0 = (_Bool)(tmp_6 != 0);
        }
      #line 458 
      if ((long)((long)((int)branch_0 != 0)) != 0L) 
                                                    #line 458 
                                                    __dynamic_pr_debug(& __UNIQUE_ID_ddebug567,(char *)"%s:%d ASSERT %s VIOLATED!\n",(char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_mac.c",458,(char *)"1 <= retry && retry <= retries->count");
    }
    #line 458 
    dump_stack();
  }
  #line 460 
  info->__anonCompField_ieee80211_tx_info_195.status.rates[0].idx = (signed char)retries->rate[0];
  #line 461 
  info->__anonCompField_ieee80211_tx_info_195.status.rates[0].count = (unsigned short)1U;
  #line 463 
  i = 1;
  #line 463 
  while (i <= 2 && i < retry) {
    #line 464 
    info->__anonCompField_ieee80211_tx_info_195.status.rates[i].idx = (signed char)retries->rate[i];
    #line 465 
    info->__anonCompField_ieee80211_tx_info_195.status.rates[i].count = (unsigned short)1U;
    #line 463 
    i ++;
  }
  #line 467 
  while (i <= 3 && i < retry) {
    #line 468 
    info->__anonCompField_ieee80211_tx_info_195.status.rates[i].idx = (signed char)retries->rate[retry + -1];
    #line 469 
    info->__anonCompField_ieee80211_tx_info_195.status.rates[i].count = (unsigned short)1U;
    #line 467 
    i ++;
  }
  #line 471 
  if (i <= 3) 
              #line 472 
              info->__anonCompField_ieee80211_tx_info_195.status.rates[i].idx = (signed char)(-1);
  #line 474 
  info->__anonCompField_ieee80211_tx_info_195.status.ack_signal = zd_check_signal(hw,ackssi);
  #line 475 
  ieee80211_tx_status_irqsafe(hw,skb);
  #line 476 
  return;
}

#line 486  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_mac.c"
void zd_mac_tx_failed(struct urb *urb)
{
  #line 491 
  struct sk_buff *skb;
  #line 493 
  unsigned long flags;
  #line 497 
  int i;
  #line 488 
  struct ieee80211_hw *hw = zd_usb_to_hw((struct zd_usb *)urb->context);
  #line 489 
  struct zd_mac *mac = zd_hw_mac(hw);
  #line 490 
  struct sk_buff_head *q = & mac->ack_wait_queue;
  #line 492 
  struct tx_status *tx_status = (struct tx_status *)urb->transfer_buffer;
  #line 494 
  int success = (unsigned int)tx_status->failure == 0U;
  #line 495 
  int retry = (int)tx_status->retry + success;
  #line 496 
  int found = 0;
  #line 497 
  int position = 0;
  #line 499 
  cif___ldv_spin_lock_lock_of_sk_buff_head_0(& q->lock);
  #line 501 
  skb = q->next;
  #line 501 
  while (skb != (struct sk_buff *)q) {
    {
      #line 502 
      struct ieee80211_hdr *tx_hdr;
      #line 503 
      struct ieee80211_tx_info *info;
      #line 504 
      int first_idx;
      #line 504 
      int final_idx;
      #line 505 
      struct tx_retry_rate *retries;
      #line 506 
      u8 final_rate;
      #line 521 
      int tmp_3;
      #line 508 
      position ++;
      #line 513 
      if ((unsigned int)tx_status->failure != 0U && (unsigned int)mac->ack_pending != 0U) {
        #line 513 
        if ((int)skb_queue_is_first(q,skb) != 0) 
                                                 #line 515 
                                                 goto __Cont;
      }
      #line 518 
      tx_hdr = (struct ieee80211_hdr *)skb->data;
      #line 521 
      if (ether_addr_equal((u8 *)(& tx_hdr->addr1),(u8 *)(& tx_status->mac))) 
        #line 521 
        tmp_3 = 0; else 
                        #line 521 
                        tmp_3 = 1;
      #line 521 
      if ((long)tmp_3 != 0L) 
                             #line 522 
                             goto __Cont;
      #line 526 
      info = IEEE80211_SKB_CB(skb);
      #line 527 
      first_idx = (int)info->__anonCompField_ieee80211_tx_info_195.status.rates[0].idx;
      #line 528 
      if ((long)((unsigned int)first_idx > 11U) != 0L) {
        {
          #line 528 
          bool branch;
          #line 528 
          struct _ddebug __UNIQUE_ID_ddebug568 = {.modname = (char *)"zd1211rw", .function = (char *)"zd_mac_tx_failed", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_mac.c", .format = (char *)"%s:%d ASSERT %s VIOLATED!\n", .lineno = (unsigned int)528U, .flags = (unsigned int)1U, .key = {.dd_key_true = {.key = {.enabled = {.counter = 1}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)1}}}}};
          {
            #line 528 
            int tmp_5;
            #line 528 
            if ((int)arch_static_branch(& __UNIQUE_ID_ddebug568.key.dd_key_true.key,
                           (_Bool)1) != 0) 
              #line 528 
              tmp_5 = 0; else 
                              #line 528 
                              tmp_5 = 1;
            #line 528 
            branch = (_Bool)(tmp_5 != 0);
            }
          #line 528 
          if ((long)((long)((int)branch != 0)) != 0L) 
                                                      #line 528 
                                                      __dynamic_pr_debug(& __UNIQUE_ID_ddebug568,(char *)"%s:%d ASSERT %s VIOLATED!\n",(char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_mac.c",528,(char *)"0<=first_idx && first_idx<(sizeof(zd_retry_rates) / sizeof((zd_retry_rates)[0]) + ((int)(sizeof(struct { int:(-!!(__builtin_types_compatible_p(typeof((zd_retry_rates)), typeof(&(zd_retry_rates)[0])))); }))))");
        }
        #line 528 
        dump_stack();
      }
      #line 529 
      retries = & zd_retry_rates[first_idx];
      #line 530 
      if (retry <= 0 || retries->count < retry) 
                                                #line 531 
                                                goto __Cont;
      #line 533 
      final_idx = retries->rate[retry + -1];
      #line 534 
      final_rate = (unsigned char)zd_rates[final_idx].hw_value;
      #line 536 
      if ((int)tx_status->rate != (int)final_rate) 
                                                   #line 537 
                                                   goto __Cont;
      #line 540 
      found = 1;
      #line 541 
      break;
    }
    #line 501 
    __Cont: 
            #line 501 
    skb = skb->__anonCompField_sk_buff_87.__anonCompField___anonunion_487_86.next;
  }
  #line 544 
  if (found != 0) {
    #line 545 
    i = 1;
    #line 545 
    while (i <= position) {
      {
        #line 548 
        struct tx_status *tmp_9;
        #line 547 
        int tmp_10;
        #line 546 
        skb = __skb_dequeue(q);
        #line 548 
        if (i == position) 
                           #line 548 
                           tmp_9 = tx_status; else 
                                                   #line 548 
                                                   tmp_9 = (struct tx_status *)0;
        #line 547 
        if ((unsigned int)mac->ack_pending != 0U) 
                                                  #line 547 
                                                  tmp_10 = mac->ack_signal; else 
                                                                    #line 547 
                                                                    tmp_10 = 0;
        #line 547 
        ;
        #line 547 
        ;
        #line 547 
        zd_mac_tx_status(hw,skb,tmp_10,tmp_9);
        #line 550 
        mac->ack_pending = (unsigned int)0U;
      }
      #line 545 
      i ++;
    }
  }
  #line 554 
  cif_spin_unlock_irqrestore_lock_of_sk_buff_head_0(& q->lock,flags);
  #line 555 
  return;
}

#line 567  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_mac.c"
void zd_mac_tx_to_dev(struct sk_buff *skb, int error)
{
  #line 569 
  struct ieee80211_tx_info *info = IEEE80211_SKB_CB(skb);
  #line 570 
  struct ieee80211_hw *hw = (struct ieee80211_hw *)info->__anonCompField_ieee80211_tx_info_195.__anonCompField___anonunion_1009_194.rate_driver_data[0];
  #line 571 
  struct zd_mac *mac = zd_hw_mac(hw);
  #line 573 
  ieee80211_tx_info_clear_status(info);
  #line 575 
  skb_pull(skb,11U);
  #line 576 
  if ((long)(error != 0) != 0L || (long)((info->flags & 4U) != 0U) != 0L) 
    #line 581 
    ieee80211_tx_status_irqsafe(hw,skb);
  else {
    #line 583 
    struct sk_buff_head *q = & mac->ack_wait_queue;
    #line 585 
    skb_queue_tail(q,skb);
    #line 586 
    while (1) {
      #line 586 
      if (! (skb_queue_len(q) > 50U)) 
                                      #line 586 
                                      break;
      {
        #line 587 
        int tmp_1;
        #line 587 
        if ((unsigned int)mac->ack_pending != 0U) 
                                                  #line 587 
                                                  tmp_1 = mac->ack_signal; else 
                                                                    #line 587 
                                                                    tmp_1 = 0;
        #line 587 
        ;
        #line 587 
        zd_mac_tx_status(hw,skb_dequeue(q),tmp_1,(struct tx_status *)0);
        #line 590 
        mac->ack_pending = (unsigned int)0U;
      }
    }
  }
  #line 593 
  return;
}

#line 595  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_mac.c"
static int zd_calc_tx_length_us(u8 *service, u8 zd_rate, u16 tx_length)
{
  #line 617 
  u32 divisor;
  #line 600 
  u8 rate_divisor[16U] = {(unsigned char)1U, (unsigned char)2U, (unsigned char)11U, (unsigned char)11U, [8] = (unsigned char)48U, (unsigned char)24U, (unsigned char)12U, (unsigned char)6U, (unsigned char)54U, (unsigned char)36U, (unsigned char)18U, (unsigned char)9U};
  #line 616 
  u32 bits = (unsigned int)tx_length * 8U;
  #line 619 
  divisor = (unsigned int)rate_divisor[(int)zd_rate & 15];
  #line 620 
  if (divisor == 0U) 
                     #line 621 
                     return -22;
  #line 623 
  switch ((int)zd_rate) {
    #line 624 
    case 2: 
            #line 624 
    ;
    #line 625 
    bits = (bits + 5U) * 2U;
    #line 626 
    break;
    #line 627 
    case 3: 
            #line 627 
    ;
    #line 628 
    if (service != (u8 *)0U) {
      #line 629 
      u32 t = bits % 11U;
      #line 630 
      *service = (unsigned char)((unsigned int)*service & 127U);
      #line 631 
      if (t + 4294967295U <= 2U) 
                                 #line 632 
                                 *service = (unsigned char)((unsigned int)*service | 128U);
    }
    #line 635 
    bits += 10U;
    #line 636 
    break;
  }
  #line 639 
  return (int)(bits / divisor);
}

#line 642  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_mac.c"
static void cs_set_control(struct zd_mac *mac, struct zd_ctrlset *cs, struct ieee80211_hdr *header, struct ieee80211_tx_info *info)
{
  #line 652 
  cs->control = (unsigned char)0U;
  #line 655 
  if ((info->flags & 16U) != 0U) 
                                 #line 656 
                                 cs->control = (unsigned char)((unsigned int)cs->control | 1U);
  #line 659 
  if ((info->flags & 4U) != 0U) 
                                #line 660 
                                cs->control = (unsigned char)((unsigned int)cs->control | 2U);
  #line 663 
  if ((int)ieee80211_is_pspoll((unsigned short)((int)header->frame_control)) != 0) 
    #line 664 
    cs->control = (unsigned char)((unsigned int)cs->control | 4U);
  #line 666 
  if (((int)info->__anonCompField_ieee80211_tx_info_195.control.__anonCompField___anonstruct_control_1010_193.__anonCompField___anonunion_1011_192.rates[0].flags & 1) != 0) 
    #line 667 
    cs->control = (unsigned char)((unsigned int)cs->control | 32U);
  #line 669 
  if (((int)info->__anonCompField_ieee80211_tx_info_195.control.__anonCompField___anonstruct_control_1010_193.__anonCompField___anonunion_1011_192.rates[0].flags & 2) != 0) 
    #line 670 
    cs->control = (unsigned char)((unsigned int)cs->control | 128U);
  #line 671 
  return;
}

#line 675  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_mac.c"
static bool zd_mac_match_cur_beacon(struct zd_mac *mac, struct sk_buff *beacon)
{
  #line 677 
  if (mac->beacon.cur_beacon == (struct sk_buff *)0) 
                                                     #line 678 
                                                     return (_Bool)0;
  #line 680 
  if ((mac->beacon.cur_beacon)->len != beacon->len) 
                                                    #line 681 
                                                    return (_Bool)0;
  #line 683 
  return (_Bool)(memcmp((void *)beacon->data,(void *)(mac->beacon.cur_beacon)->data,
             (unsigned long)beacon->len) == 0);
}

#line 686  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_mac.c"
static void zd_mac_free_cur_beacon_locked(struct zd_mac *mac)
{
  #line 688 
  int tmp_5;
  #line 688 
  if (mutex_is_locked(& mac->chip.mutex)) 
                                          #line 688 
                                          tmp_5 = 0; else 
                                                          #line 688 
                                                          tmp_5 = 1;
  #line 688 
  if ((long)tmp_5 != 0L) {
    {
      #line 688 
      bool branch;
      #line 688 
      struct _ddebug __UNIQUE_ID_ddebug569 = {.modname = (char *)"zd1211rw", .function = (char *)"zd_mac_free_cur_beacon_locked", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_mac.c", .format = (char *)"%s:%d ASSERT %s VIOLATED!\n", .lineno = (unsigned int)688U, .flags = (unsigned int)1U, .key = {.dd_key_true = {.key = {.enabled = {.counter = 1}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)1}}}}};
      {
        #line 688 
        int tmp_0;
        #line 688 
        if ((int)arch_static_branch(& __UNIQUE_ID_ddebug569.key.dd_key_true.key,
                         (_Bool)1) != 0) 
          #line 688 
          tmp_0 = 0; else 
                          #line 688 
                          tmp_0 = 1;
        #line 688 
        branch = (_Bool)(tmp_0 != 0);
        }
      #line 688 
      if ((long)((long)((int)branch != 0)) != 0L) 
                                                  #line 688 
                                                  __dynamic_pr_debug(& __UNIQUE_ID_ddebug569,(char *)"%s:%d ASSERT %s VIOLATED!\n",(char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_mac.c",688,(char *)"mutex_is_locked(&mac->chip.mutex)");
    }
    #line 688 
    dump_stack();
  }
  #line 690 
  kfree_skb(mac->beacon.cur_beacon);
  #line 691 
  mac->beacon.cur_beacon = (struct sk_buff *)0;
  #line 692 
  return;
}

#line 694  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_mac.c"
static void zd_mac_free_cur_beacon(struct zd_mac *mac)
{
  #line 696 
  cif_mutex_lock_mutex_of_zd_chip_0(& mac->chip.mutex);
  #line 697 
  zd_mac_free_cur_beacon_locked(mac);
  #line 698 
  cif_mutex_unlock_mutex_of_zd_chip_0(& mac->chip.mutex);
  #line 699 
  return;
}

#line 701  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_mac.c"
static int zd_mac_config_beacon(struct ieee80211_hw *hw, struct sk_buff *beacon, bool in_intr)
{
  #line 705 
  int r;
  #line 705 
  int ret;
  #line 705 
  int num_cmds;
  #line 706 
  u32 tmp;
  #line 709 
  unsigned long end_jiffies;
  #line 709 
  unsigned long message_jiffies;
  #line 710 
  struct zd_ioreq32 *ioreqs;
  #line 704 
  struct zd_mac *mac = zd_hw_mac(hw);
  #line 705 
  int req_pos = 0;
  #line 706 
  u32 j = 0U;
  #line 708 
  u32 full_len = beacon->len + 4U;
  #line 712 
  cif_mutex_lock_mutex_of_zd_chip_0(& mac->chip.mutex);
  #line 715 
  if ((int)zd_mac_match_cur_beacon(mac,beacon) != 0) {
    #line 716 
    r = 0;
    #line 717 
    goto out_nofree;
  }
  #line 721 
  num_cmds = (int)(((unsigned int)zd_chip_is_zd1211b(& mac->chip) + full_len) + 1U);
  #line 722 
  ioreqs = (struct zd_ioreq32 *)kmalloc_array((unsigned long)num_cmds,8UL,3264U);
  #line 724 
  if (ioreqs == (struct zd_ioreq32 *)0) {
    #line 725 
    r = -12;
    #line 726 
    goto out_nofree;
  }
  #line 729 
  r = zd_iowrite32_locked(& mac->chip,0U,(unsigned short)38548);
  #line 730 
  if (r < 0) 
             #line 731 
             goto out;
  #line 732 
  r = zd_ioread32_locked(& mac->chip,& tmp,(unsigned short)38548);
  #line 733 
  if (r < 0) 
             #line 734 
             goto release_sema;
  #line 735 
  if ((int)in_intr != 0 && (tmp & 2U) != 0U) {
    #line 736 
    r = -16;
    #line 737 
    goto release_sema;
  }
  #line 740 
  end_jiffies = jiffies + 125UL;
  #line 741 
  message_jiffies = jiffies + 25UL;
  #line 742 
  while ((tmp & 2U) != 0U) {
    #line 743 
    r = zd_ioread32_locked(& mac->chip,& tmp,(unsigned short)38548);
    #line 744 
    if (r < 0) 
               #line 745 
               goto release_sema;
    {
      #line 746 
      unsigned long __dummy_1;
      #line 746 
      unsigned long __dummy2_1;
      }
    #line 746 
    if (1 != 0) {
      {
        #line 746 
        unsigned long __dummy_2;
        #line 746 
        unsigned long __dummy2_2;
        }
      #line 746 
      if (1 != 0) 
        #line 746 
        if ((long)(jiffies - message_jiffies) >= 0L) {
          #line 747 
          message_jiffies = jiffies + 25UL;
          #line 748 
          _dev_err(& (mac->chip.usb.intf)->dev,(char *)"CR_BCN_FIFO_SEMAPHORE not ready\n");
          {
            #line 750 
            unsigned long __dummy;
            #line 750 
            unsigned long __dummy2;
            }
          #line 750 
          if (1 != 0) {
            {
              #line 750 
              unsigned long __dummy_0;
              #line 750 
              unsigned long __dummy2_0;
              }
            #line 750 
            if (1 != 0) 
              #line 750 
              if ((long)(jiffies - end_jiffies) >= 0L) {
                #line 751 
                _dev_err(& (mac->chip.usb.intf)->dev,(char *)"Giving up beacon config.\n");
                #line 753 
                r = -110;
                #line 754 
                goto reset_device;
              }
          }
        }
    }
    #line 757 
    msleep(20U);
  }
  #line 760 
  (ioreqs + (unsigned long)req_pos)->addr = (unsigned short)38512U;
  #line 761 
  (ioreqs + (unsigned long)req_pos)->value = full_len + 4294967295U;
  #line 762 
  req_pos ++;
  #line 763 
  if (zd_chip_is_zd1211b(& mac->chip) != 0) {
    #line 764 
    (ioreqs + (unsigned long)req_pos)->addr = (unsigned short)38500U;
    #line 765 
    (ioreqs + (unsigned long)req_pos)->value = full_len + 4294967295U;
    #line 766 
    req_pos ++;
  }
  #line 769 
  j = 0U;
  #line 769 
  while (beacon->len > j) {
    #line 770 
    (ioreqs + (unsigned long)req_pos)->addr = (unsigned short)38512U;
    #line 771 
    (ioreqs + (unsigned long)req_pos)->value = (unsigned int)*(beacon->data + (unsigned long)j);
    #line 772 
    req_pos ++;
    #line 769 
    j ++;
  }
  #line 775 
  j = 0U;
  #line 775 
  while (j <= 3U) {
    #line 776 
    (ioreqs + (unsigned long)req_pos)->addr = (unsigned short)38512U;
    #line 777 
    (ioreqs + (unsigned long)req_pos)->value = 0U;
    #line 778 
    req_pos ++;
    #line 775 
    j ++;
  }
  #line 781 
  if ((long)(req_pos != num_cmds) != 0L) {
    #line 782 
    ldv_inline_asm();
    #line 783 
    ldv_inline_asm();
    #line 784 
    ldv_inline_asm();
    #line 781 
    ;
  }
  #line 783 
  r = zd_iowrite32a_locked(& mac->chip,ioreqs,(unsigned int)num_cmds);
  #line 785 
  release_sema: 
                #line 785 
  ;
  #line 790 
  end_jiffies = jiffies + 125UL;
  #line 791 
  ret = zd_iowrite32_locked(& mac->chip,1U,(unsigned short)38548);
  #line 792 
  while (ret < 0) {
    #line 793 
    if ((int)in_intr != 0) 
                           #line 793 
                           goto _LOR;
    else {
      {
        #line 793 
        unsigned long __dummy_3;
        #line 793 
        unsigned long __dummy2_3;
        }
      #line 793 
      if (1 != 0) {
        {
          #line 793 
          unsigned long __dummy_4;
          #line 793 
          unsigned long __dummy2_4;
          }
        #line 793 
        if (1 != 0) 
          #line 793 
          if ((long)(jiffies - end_jiffies) >= 0L) {
            #line 793 
            _LOR: {
                    #line 794 
                    ret = -110;
                    #line 795 
                    break;
                  }
          }
      }
    }
    #line 798 
    msleep(20U);
    #line 799 
    ret = zd_iowrite32_locked(& mac->chip,1U,(unsigned short)38548);
  }
  #line 802 
  if (ret < 0) 
               #line 803 
               _dev_err(& (mac->chip.usb.intf)->dev,(char *)"Could not release ");
  #line 805 
  if (r < 0 || ret < 0) {
    #line 806 
    if (r >= 0) 
                #line 807 
                r = ret;
    #line 811 
    zd_mac_free_cur_beacon_locked(mac);
    #line 813 
    goto out;
  }
  #line 817 
  zd_mac_free_cur_beacon_locked(mac);
  #line 818 
  mac->beacon.cur_beacon = beacon;
  #line 819 
  beacon = (struct sk_buff *)0;
  #line 825 
  r = zd_iowrite32_locked(& mac->chip,(full_len << 19) | 1024U,(unsigned short)38432);
  #line 827 
  out: 
       #line 827 
  ;
  #line 828 
  kfree((void *)ioreqs);
  #line 829 
  out_nofree: 
              #line 829 
  ;
  #line 830 
  kfree_skb(beacon);
  #line 831 
  cif_mutex_unlock_mutex_of_zd_chip_0(& mac->chip.mutex);
  #line 833 
  return r;
  #line 835 
  reset_device: 
                #line 835 
  ;
  #line 836 
  zd_mac_free_cur_beacon_locked(mac);
  #line 837 
  kfree_skb(beacon);
  #line 839 
  cif_mutex_unlock_mutex_of_zd_chip_0(& mac->chip.mutex);
  #line 840 
  kfree((void *)ioreqs);
  #line 843 
  _dev_warn(& (mac->chip.usb.intf)->dev,(char *)"CR_BCN_FIFO_SEMAPHORE stuck, ");
  #line 845 
  usb_queue_reset_device(mac->chip.usb.intf);
  #line 847 
  return r;
}

#line 850  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_mac.c"
static int fill_ctrlset(struct zd_mac *mac, struct sk_buff *skb)
{
  #line 853 
  int r;
  #line 856 
  unsigned int packet_length;
  #line 857 
  struct ieee80211_rate *txrate;
  #line 854 
  struct ieee80211_hdr *hdr = (struct ieee80211_hdr *)skb->data;
  #line 855 
  unsigned int frag_len = skb->len + 4U;
  #line 858 
  struct zd_ctrlset *cs = skb_push(skb,11U);
  #line 859 
  struct ieee80211_tx_info *info = IEEE80211_SKB_CB(skb);
  #line 861 
  if ((long)(frag_len > 65535U) != 0L) {
    {
      #line 861 
      bool branch;
      #line 861 
      struct _ddebug __UNIQUE_ID_ddebug571 = {.modname = (char *)"zd1211rw", .function = (char *)"fill_ctrlset", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_mac.c", .format = (char *)"%s:%d ASSERT %s VIOLATED!\n", .lineno = (unsigned int)861U, .flags = (unsigned int)1U, .key = {.dd_key_true = {.key = {.enabled = {.counter = 1}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)1}}}}};
      {
        #line 861 
        int tmp_2;
        #line 861 
        if ((int)arch_static_branch(& __UNIQUE_ID_ddebug571.key.dd_key_true.key,
                           (_Bool)1) != 0) 
          #line 861 
          tmp_2 = 0; else 
                          #line 861 
                          tmp_2 = 1;
        #line 861 
        branch = (_Bool)(tmp_2 != 0);
        }
      #line 861 
      if ((long)((long)((int)branch != 0)) != 0L) 
                                                  #line 861 
                                                  __dynamic_pr_debug(& __UNIQUE_ID_ddebug571,(char *)"%s:%d ASSERT %s VIOLATED!\n",(char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_mac.c",861,(char *)"frag_len <= 0xffff");
    }
    #line 861 
    dump_stack();
  }
  #line 868 
  if (! ieee80211_is_pspoll((unsigned short)((int)hdr->frame_control))) 
    #line 869 
    hdr->duration_id = (unsigned short)0U;
  #line 871 
  txrate = ieee80211_get_tx_rate(mac->hw,info);
  #line 873 
  cs->modulation = (unsigned char)txrate->hw_value;
  #line 874 
  if (((int)info->__anonCompField_ieee80211_tx_info_195.control.__anonCompField___anonstruct_control_1010_193.__anonCompField___anonunion_1011_192.rates[0].flags & 4) != 0) 
    #line 875 
    cs->modulation = (unsigned char)txrate->hw_value_short;
  #line 877 
  cs->tx_length = (unsigned short)frag_len;
  #line 879 
  cs_set_control(mac,cs,hdr,info);
  #line 881 
  packet_length = frag_len + 21U;
  #line 882 
  if ((long)(packet_length > 65535U) != 0L) {
    {
      #line 882 
      bool branch_0;
      #line 882 
      struct _ddebug __UNIQUE_ID_ddebug572 = {.modname = (char *)"zd1211rw", .function = (char *)"fill_ctrlset", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_mac.c", .format = (char *)"%s:%d ASSERT %s VIOLATED!\n", .lineno = (unsigned int)882U, .flags = (unsigned int)1U, .key = {.dd_key_true = {.key = {.enabled = {.counter = 1}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)1}}}}};
      {
        #line 882 
        int tmp_8;
        #line 882 
        if ((int)arch_static_branch(& __UNIQUE_ID_ddebug572.key.dd_key_true.key,
                           (_Bool)1) != 0) 
          #line 882 
          tmp_8 = 0; else 
                          #line 882 
                          tmp_8 = 1;
        #line 882 
        branch_0 = (_Bool)(tmp_8 != 0);
        }
      #line 882 
      if ((long)((long)((int)branch_0 != 0)) != 0L) 
                                                    #line 882 
                                                    __dynamic_pr_debug(& __UNIQUE_ID_ddebug572,(char *)"%s:%d ASSERT %s VIOLATED!\n",(char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_mac.c",882,(char *)"packet_length <= 0xffff");
    }
    #line 882 
    dump_stack();
  }
  #line 886 
  if (zd_chip_is_zd1211b(& mac->chip) != 0) 
                                            #line 886 
                                            cs->packet_length = (unsigned short)((int)((unsigned short)packet_length) - (int)((unsigned short)frag_len)); else 
                                                                    #line 886 
                                                                    cs->packet_length = (unsigned short)packet_length;
  #line 902 
  cs->service = (unsigned char)0U;
  #line 903 
  r = zd_calc_tx_length_us(& cs->service,(unsigned char)((int)cs->modulation & 31),(unsigned short)((int)cs->tx_length));
  #line 905 
  if (r < 0) 
             #line 906 
             return r;
  #line 907 
  cs->current_length = (unsigned short)r;
  #line 908 
  cs->next_frame_length = (unsigned short)0U;
  #line 910 
  return 0;
}

#line 924  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_mac.c"
static void zd_op_tx(struct ieee80211_hw *hw, struct ieee80211_tx_control *control, struct sk_buff *skb)
{
  #line 930 
  int r;
  #line 928 
  struct zd_mac *mac = zd_hw_mac(hw);
  #line 929 
  struct ieee80211_tx_info *info = IEEE80211_SKB_CB(skb);
  #line 932 
  r = fill_ctrlset(mac,skb);
  #line 933 
  if (r != 0) 
              #line 934 
              goto fail;
  #line 936 
  info->__anonCompField_ieee80211_tx_info_195.__anonCompField___anonunion_1009_194.rate_driver_data[0] = (void *)hw;
  #line 938 
  r = zd_usb_tx(& mac->chip.usb,skb);
  #line 939 
  if (r != 0) 
              #line 940 
              goto fail;
  #line 941 
  return;
  #line 943 
  fail: 
        #line 943 
  ;
  #line 944 
  consume_skb(skb);
  #line 945 
  return;
}

#line 961  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_mac.c"
static int filter_ack(struct ieee80211_hw *hw, struct ieee80211_hdr *rx_hdr, struct ieee80211_rx_status *stats)
{
  #line 965 
  struct sk_buff *skb;
  #line 966 
  struct sk_buff_head *q;
  #line 967 
  unsigned long flags;
  #line 969 
  int i;
  #line 964 
  struct zd_mac *mac = zd_hw_mac(hw);
  #line 968 
  int found = 0;
  #line 969 
  int position = 0;
  #line 971 
  if (! ieee80211_is_ack((unsigned short)((int)rx_hdr->frame_control))) 
    #line 972 
    return 0;
  #line 974 
  q = & mac->ack_wait_queue;
  #line 975 
  cif___ldv_spin_lock_lock_of_sk_buff_head_0(& q->lock);
  #line 976 
  skb = q->next;
  #line 976 
  while (skb != (struct sk_buff *)q) {
    {
      #line 977 
      struct ieee80211_hdr *tx_hdr;
      #line 979 
      position ++;
      #line 981 
      if ((unsigned int)mac->ack_pending != 0U) {
        #line 981 
        if ((int)skb_queue_is_first(q,skb) != 0) 
                                                 #line 982 
                                                 goto __Cont;
      }
      #line 984 
      tx_hdr = (struct ieee80211_hdr *)skb->data;
      #line 985 
      if ((long)((int)ether_addr_equal((u8 *)(& tx_hdr->addr2),(u8 *)(& rx_hdr->addr1)) != 0) != 0L) {
        #line 987 
        found = 1;
        #line 988 
        break;
      }
    }
    #line 976 
    __Cont: 
            #line 976 
    skb = skb->__anonCompField_sk_buff_87.__anonCompField___anonunion_487_86.next;
  }
  #line 992 
  if (found != 0) {
    #line 993 
    i = 1;
    #line 993 
    while (i < position) {
      {
        #line 995 
        int tmp_3;
        #line 994 
        skb = __skb_dequeue(q);
        #line 995 
        if ((unsigned int)mac->ack_pending != 0U) 
                                                  #line 995 
                                                  tmp_3 = mac->ack_signal; else 
                                                                    #line 995 
                                                                    tmp_3 = 0;
        #line 995 
        ;
        #line 995 
        ;
        #line 995 
        zd_mac_tx_status(hw,skb,tmp_3,(struct tx_status *)0);
        #line 998 
        mac->ack_pending = (unsigned int)0U;
      }
      #line 993 
      i ++;
    }
    #line 1001 
    mac->ack_pending = (unsigned int)1U;
    #line 1002 
    mac->ack_signal = (int)stats->signal;
    #line 1005 
    if (mac->type == 3) {
      #line 1006 
      skb = __skb_dequeue(q);
      #line 1007 
      zd_mac_tx_status(hw,skb,mac->ack_signal,(struct tx_status *)0);
      #line 1008 
      mac->ack_pending = (unsigned int)0U;
    }
  }
  #line 1012 
  cif_spin_unlock_irqrestore_lock_of_sk_buff_head_0(& q->lock,flags);
  #line 1013 
  return 1;
}

#line 1016  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_mac.c"
int zd_mac_rx(struct ieee80211_hw *hw, u8 *buffer, unsigned int length)
{
  #line 1019 
  struct ieee80211_rx_status stats;
  #line 1020 
  struct rx_status *status;
  #line 1021 
  struct sk_buff *skb;
  #line 1023 
  __le16 fc;
  #line 1024 
  int need_padding;
  #line 1025 
  int i;
  #line 1026 
  u8 rate;
  #line 1083 
  unsigned int tmp_6;
  #line 1018 
  struct zd_mac *mac = zd_hw_mac(hw);
  #line 1022 
  int bad_frame = 0;
  #line 1028 
  if (length <= 23U) 
                     #line 1030 
                     return -22;
  #line 1032 
  memset((void *)(& stats),0,48UL);
  #line 1044 
  status = (struct rx_status *)(buffer + ((unsigned long)length + 18446744073709551611U));
  #line 1046 
  if (((int)status->frame_status & 128) != 0) 
    #line 1047 
    if ((unsigned int)mac->pass_failed_fcs != 0U && ((int)status->frame_status & 16) != 0) {
      #line 1049 
      stats.flag |= 32U;
      #line 1050 
      bad_frame = 1;
    }
    else 
         #line 1052 
         return -22;
  #line 1056 
  stats.freq = (unsigned short)zd_channels[(int)_zd_chip_get_channel(& mac->chip) + -1].center_freq;
  #line 1057 
  stats.band = (unsigned char)0U;
  #line 1058 
  stats.signal = (signed char)zd_check_signal(hw,(int)status->signal_strength);
  #line 1060 
  rate = zd_rx_rate((void *)buffer,status);
  #line 1063 
  i = 0;
  #line 1063 
  while (mac->band.n_bitrates > i) {
    #line 1064 
    if ((int)((unsigned short)rate) == (int)(mac->band.bitrates + (unsigned long)i)->hw_value) 
      #line 1065 
      stats.rate_idx = (unsigned char)i;
    #line 1063 
    i ++;
  }
  #line 1067 
  length += 4294967286U;
  #line 1068 
  buffer += 5U;
  #line 1075 
  if (bad_frame == 0) {
    #line 1075 
    if (filter_ack(hw,(struct ieee80211_hdr *)buffer,& stats) != 0) 
      #line 1077 
      if ((unsigned int)mac->pass_ctrl == 0U) 
                                              #line 1078 
                                              return 0;
  }
  #line 1080 
  fc = get_unaligned_le16((void *)buffer);
  #line 1081 
  need_padding = (int)ieee80211_is_data_qos((unsigned short)((int)fc)) ^ (int)ieee80211_has_a4((unsigned short)((int)fc));
  #line 1083 
  if (need_padding != 0) 
                         #line 1083 
                         tmp_6 = 2U; else 
                                          #line 1083 
                                          tmp_6 = 0U;
  #line 1083 
  ;
  #line 1083 
  skb = dev_alloc_skb(tmp_6 + length);
  #line 1084 
  if (skb == (struct sk_buff *)0) 
                                  #line 1085 
                                  return -12;
  #line 1086 
  if (need_padding != 0) 
                         #line 1088 
                         skb_reserve(skb,2);
  #line 1092 
  skb_put_data(skb,(void *)buffer,length);
  #line 1094 
  memcpy((void *)IEEE80211_SKB_RXCB(skb),(void *)(& stats),48UL);
  #line 1095 
  ieee80211_rx_irqsafe(hw,skb);
  #line 1096 
  return 0;
}

#line 1099  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_mac.c"
static int zd_op_add_interface(struct ieee80211_hw *hw, struct ieee80211_vif *vif)
{
  #line 1102 
  struct zd_mac *mac = zd_hw_mac(hw);
  #line 1105 
  if (mac->type != 0) 
                      #line 1106 
                      return -95;
  #line 1108 
  switch ((unsigned int)vif->type) {
    #line 1109 
    case (unsigned int)6: 
                          #line 1109 
    ;
    #line 1110 
    case (unsigned int)7: 
                          #line 1110 
    ;
    #line 1111 
    case (unsigned int)2: 
                          #line 1111 
    ;
    #line 1112 
    case (unsigned int)1: 
                          #line 1112 
    ;
    #line 1113 
    case (unsigned int)3: 
                          #line 1113 
    ;
    #line 1114 
    mac->type = (int)vif->type;
    #line 1115 
    break;
    #line 1116 
    default: 
             #line 1116 
    ;
    #line 1117 
    return -95;
  }
  #line 1120 
  mac->vif = vif;
  #line 1122 
  return set_mac_and_bssid(mac);
}

#line 1125  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_mac.c"
static void zd_op_remove_interface(struct ieee80211_hw *hw, struct ieee80211_vif *vif)
{
  #line 1128 
  struct zd_mac *mac = zd_hw_mac(hw);
  #line 1129 
  mac->type = 0;
  #line 1130 
  mac->vif = (struct ieee80211_vif *)0;
  #line 1131 
  zd_set_beacon_interval(& mac->chip,(unsigned short)0,(unsigned char)0,0);
  #line 1132 
  zd_write_mac_addr(& mac->chip,(u8 *)0U);
  #line 1134 
  zd_mac_free_cur_beacon(mac);
  #line 1135 
  return;
}

#line 1137  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_mac.c"
static int zd_op_config(struct ieee80211_hw *hw, u32 changed)
{
  #line 1139 
  struct zd_mac *mac = zd_hw_mac(hw);
  #line 1140 
  struct ieee80211_conf *conf = & hw->conf;
  #line 1142 
  cif_spin_lock_irq_lock_of_zd_mac(& mac->lock);
  #line 1143 
  mac->channel = (unsigned char)(conf->chandef.chan)->hw_value;
  #line 1144 
  cif_spin_unlock_irq_lock_of_zd_mac(& mac->lock);
  #line 1146 
  return zd_chip_set_channel(& mac->chip,
                            (unsigned char)((int)((unsigned char)(conf->chandef.chan)->hw_value)));
}

#line 1149  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_mac.c"
static void zd_beacon_done(struct zd_mac *mac)
{
  #line 1151 
  struct sk_buff *skb;
  #line 1151 
  struct sk_buff *beacon;
  #line 1153 
  if (! test_bit(0L,& mac->flags)) 
                                   #line 1154 
                                   return;
  #line 1155 
  if (mac->vif == (struct ieee80211_vif *)0 || (mac->vif)->type != (unsigned int)NL80211_IFTYPE_AP) 
    #line 1156 
    return;
  #line 1161 
  while (1) {
    #line 1161 
    if (! (ieee80211_queue_stopped(mac->hw,0) == 0)) 
                                                     #line 1161 
                                                     break;
    #line 1162 
    skb = ieee80211_get_buffered_bc(mac->hw,mac->vif);
    #line 1163 
    if (skb == (struct sk_buff *)0) 
                                    #line 1164 
                                    break;
    #line 1165 
    zd_op_tx(mac->hw,(struct ieee80211_tx_control *)0,skb);
  }
  #line 1171 
  beacon = ieee80211_beacon_get(mac->hw,mac->vif);
  #line 1172 
  if (beacon != (struct sk_buff *)0) 
                                     #line 1173 
                                     zd_mac_config_beacon(mac->hw,beacon,(_Bool)1);
  #line 1175 
  cif_spin_lock_irq_lock_of_zd_mac(& mac->lock);
  #line 1176 
  mac->beacon.last_update = jiffies;
  #line 1177 
  cif_spin_unlock_irq_lock_of_zd_mac(& mac->lock);
  #line 1178 
  return;
}

#line 1180  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_mac.c"
static void zd_process_intr(struct work_struct *work)
{
  #line 1184 
  void *__mptr;
  #line 1182 
  u16 int_status;
  #line 1183 
  unsigned long flags;
  #line 1184 
  __mptr = (void *)work;
  #line 1184 
  struct zd_mac *mac = ((struct zd_mac *)(__mptr + 18446744073709539480U));
  #line 1186 
  cif___ldv_spin_lock_lock_of_zd_mac(& mac->lock);
  #line 1187 
  int_status = *((__le16 *)((u8 *)(& mac->intr_buffer) + 4U));
  #line 1188 
  cif_spin_unlock_irqrestore_lock_of_zd_mac(& mac->lock,flags);
  #line 1190 
  if (((int)int_status & 64) != 0) 
                                   #line 1192 
                                   zd_beacon_done(mac); else 
                                                             #line 1194 
                                                             dev_printk((char *)"\001",& (mac->chip.usb.intf)->dev,(char *)"%s() ",(char *)"zd_process_intr");
  #line 1197 
  zd_chip_enable_hwint(& mac->chip);
  #line 1198 
  return;
}

#line 1201  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_mac.c"
static u64 zd_op_prepare_multicast(struct ieee80211_hw *hw, struct netdev_hw_addr_list *mc_list)
{
  #line 1210 
  void *__mptr;
  #line 1205 
  struct zd_mc_hash hash;
  #line 1206 
  struct netdev_hw_addr *ha;
  #line 1204 
  struct zd_mac *mac = zd_hw_mac(hw);
  #line 1208 
  zd_mc_clear(& hash);
  #line 1210 
  __mptr = (void *)mc_list->list.next;
  #line 1210 
  ha = ((struct netdev_hw_addr *)__mptr);
  #line 1210 
  while ((void *)ha != (void *)mc_list) {
    #line 1210 
    void *__mptr_0;
    #line 1211 
    dev_printk((char *)"\001",& (mac->chip.usb.intf)->dev,(char *)"%s() ",(char *)"zd_op_prepare_multicast",(unsigned char *)(& ha->addr));
    #line 1212 
    zd_mc_add_addr(& hash,(u8 *)(& ha->addr));
    #line 1210 
    __mptr_0 = (void *)ha->list.next;
    #line 1210 
    ha = ((struct netdev_hw_addr *)__mptr_0);
  }
  #line 1215 
  return (unsigned long long)hash.low | ((unsigned long long)hash.high << 32);
}

#line 1221  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_mac.c"
static void zd_op_configure_filter(struct ieee80211_hw *hw, unsigned int changed_flags, unsigned int *new_flags, u64 multicast)
{
  #line 1231 
  unsigned long flags;
  #line 1232 
  int r;
  #line 1226 
  struct zd_mc_hash hash = {.low = (unsigned int)multicast, .high = (unsigned int)(multicast >> 32)};
  #line 1230 
  struct zd_mac *mac = zd_hw_mac(hw);
  #line 1235 
  changed_flags &= 118U;
  #line 1236 
  *new_flags &= 118U;
  #line 1245 
  if ((*new_flags & 2U) != 0U) 
                               #line 1246 
                               zd_mc_add_all(& hash);
  #line 1248 
  cif___ldv_spin_lock_lock_of_zd_mac(& mac->lock);
  #line 1249 
  mac->pass_failed_fcs = (unsigned int)((*new_flags & 4U) != 0U);
  #line 1250 
  mac->pass_ctrl = (unsigned int)((*new_flags & 32U) != 0U);
  #line 1251 
  mac->multicast_hash = hash;
  #line 1252 
  cif_spin_unlock_irqrestore_lock_of_zd_mac(& mac->lock,flags);
  #line 1254 
  zd_chip_set_multicast_hash(& mac->chip,& hash);
  #line 1256 
  if ((changed_flags & 32U) != 0U) {
    #line 1257 
    r = set_rx_filter(mac);
    #line 1258 
    if (r != 0) 
                #line 1259 
                _dev_err(& (mac->chip.usb.intf)->dev,(char *)"set_rx_filter error %d\n",r);
  }
  #line 1261 
  return;
}

#line 1272  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_mac.c"
static void set_rts_cts(struct zd_mac *mac, unsigned int short_preamble)
{
  #line 1274 
  cif_mutex_lock_mutex_of_zd_chip_0(& mac->chip.mutex);
  #line 1275 
  zd_chip_set_rts_cts_rate_locked(& mac->chip,(int)short_preamble);
  #line 1276 
  cif_mutex_unlock_mutex_of_zd_chip_0(& mac->chip.mutex);
  #line 1277 
  return;
}

#line 1279  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_mac.c"
static void zd_op_bss_info_changed(struct ieee80211_hw *hw, struct ieee80211_vif *vif, struct ieee80211_bss_conf *bss_conf, u32 changes)
{
  #line 1285 
  int associated;
  #line 1284 
  struct zd_mac *mac = zd_hw_mac(hw);
  #line 1287 
  dev_printk((char *)"\001",& (mac->chip.usb.intf)->dev,(char *)"%s() ",(char *)"zd_op_bss_info_changed",changes);
  #line 1289 
  if ((mac->type == 7 || mac->type == 1) || mac->type == 3) {
    #line 1292 
    associated = 1;
    #line 1293 
    if ((changes & 256U) != 0U) {
      #line 1294 
      struct sk_buff *beacon = ieee80211_beacon_get(hw,vif);
      #line 1296 
      if (beacon != (struct sk_buff *)0) {
        #line 1297 
        zd_chip_disable_hwint(& mac->chip);
        #line 1298 
        zd_mac_config_beacon(hw,beacon,(_Bool)0);
        #line 1299 
        zd_chip_enable_hwint(& mac->chip);
      }
    }
    #line 1303 
    if ((changes & 512U) != 0U) {
      #line 1304 
      u16 interval = (unsigned short)0U;
      #line 1305 
      u8 period = (unsigned char)0U;
      #line 1307 
      if ((int)bss_conf->enable_beacon != 0) {
        #line 1308 
        period = bss_conf->dtim_period;
        #line 1309 
        interval = bss_conf->beacon_int;
      }
      #line 1312 
      cif_spin_lock_irq_lock_of_zd_mac(& mac->lock);
      #line 1313 
      mac->beacon.period = period;
      #line 1314 
      mac->beacon.interval = interval;
      #line 1315 
      mac->beacon.last_update = jiffies;
      #line 1316 
      cif_spin_unlock_irq_lock_of_zd_mac(& mac->lock);
      #line 1318 
      zd_set_beacon_interval(& mac->chip,(unsigned short)((int)interval),(unsigned char)((int)period),mac->type);
    }
  }
  else {
    #line 1322 
    associated = (int)is_valid_ether_addr(bss_conf->bssid);
  }
  #line 1324 
  cif_spin_lock_irq_lock_of_zd_mac(& mac->lock);
  #line 1325 
  mac->associated = associated;
  #line 1326 
  cif_spin_unlock_irq_lock_of_zd_mac(& mac->lock);
  #line 1330 
  if ((changes & 4U) != 0U) {
    #line 1331 
    cif_spin_lock_irq_lock_of_zd_mac(& mac->lock);
    #line 1332 
    mac->short_preamble = (unsigned int)bss_conf->use_short_preamble;
    #line 1333 
    cif_spin_unlock_irq_lock_of_zd_mac(& mac->lock);
    #line 1335 
    set_rts_cts(mac,(unsigned int)bss_conf->use_short_preamble);
  }
  #line 1337 
  return;
}

#line 1339  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_mac.c"
static u64 zd_op_get_tsf(struct ieee80211_hw *hw, struct ieee80211_vif *vif)
{
  #line 1341 
  struct zd_mac *mac = zd_hw_mac(hw);
  #line 1342 
  return zd_chip_get_tsf(& mac->chip);
}

#line 1345  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_mac.c"
static struct ieee80211_ops zd_ops = {.tx = & zd_op_tx, .start = & zd_op_start, .stop = & zd_op_stop, .add_interface = & zd_op_add_interface, .remove_interface = & zd_op_remove_interface, .config = & zd_op_config, .bss_info_changed = & zd_op_bss_info_changed, .prepare_multicast = & zd_op_prepare_multicast, .configure_filter = & zd_op_configure_filter, .get_tsf = & zd_op_get_tsf};
#line 1358  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_mac.c"
struct ieee80211_hw *zd_mac_alloc_hw(struct usb_interface *intf)
{
  #line 1360 
  struct zd_mac *mac;
  #line 1361 
  struct ieee80211_hw *hw;
  #line 1363 
  hw = cif_ieee80211_alloc_hw(13544UL,& zd_ops);
  #line 1364 
  if (hw == (struct ieee80211_hw *)0) {
    #line 1365 
    dev_printk((char *)"\001",& intf->dev,(char *)"%s() ",(char *)"zd_mac_alloc_hw");
    #line 1366 
    return (struct ieee80211_hw *)0;
  }
  #line 1369 
  mac = zd_hw_mac(hw);
  #line 1371 
  memset((void *)mac,0,13544UL);
  #line 1372 
  spinlock_check(& mac->lock);
  {
    #line 1372 
    struct lock_class_key __key;
    #line 1372 
    __raw_spin_lock_init(& mac->lock.__anonCompField_spinlock_25.rlock,(char *)"&(&mac->lock)->rlock",& __key);
  }
  #line 1373 
  mac->hw = hw;
  #line 1375 
  mac->type = 0;
  #line 1377 
  memcpy((void *)(& mac->channels),(void *)(& zd_channels),896UL);
  #line 1378 
  memcpy((void *)(& mac->rates),(void *)(& zd_rates),144UL);
  #line 1379 
  mac->band.n_bitrates = 12;
  #line 1380 
  mac->band.bitrates = (struct ieee80211_rate *)(& mac->rates);
  #line 1381 
  mac->band.n_channels = 14;
  #line 1382 
  mac->band.channels = (struct ieee80211_channel *)(& mac->channels);
  #line 1384 
  (hw->wiphy)->bands[0] = & mac->band;
  #line 1386 
  _ieee80211_hw_set(hw,(enum ieee80211_hw_flags)IEEE80211_HW_MFP_CAPABLE);
  #line 1387 
  _ieee80211_hw_set(hw,(enum ieee80211_hw_flags)IEEE80211_HW_HOST_BROADCAST_PS_BUFFERING);
  #line 1388 
  _ieee80211_hw_set(hw,(enum ieee80211_hw_flags)IEEE80211_HW_RX_INCLUDES_FCS);
  #line 1389 
  _ieee80211_hw_set(hw,(enum ieee80211_hw_flags)IEEE80211_HW_SIGNAL_UNSPEC);
  #line 1391 
  (hw->wiphy)->interface_modes = (unsigned short)142U;
  #line 1397 
  wiphy_ext_feature_set(hw->wiphy,(enum nl80211_ext_feature_index)NL80211_EXT_FEATURE_CQM_RSSI_LIST);
  #line 1399 
  hw->max_signal = (signed char)100;
  #line 1400 
  hw->queues = (unsigned short)1U;
  #line 1401 
  hw->extra_tx_headroom = 11U;
  #line 1406 
  hw->max_rates = (unsigned char)4U;
  #line 1407 
  hw->max_rate_tries = (unsigned char)18U;
  #line 1409 
  skb_queue_head_init(& mac->ack_wait_queue);
  #line 1410 
  mac->ack_pending = (unsigned int)0U;
  #line 1412 
  zd_chip_init(& mac->chip,hw,intf);
  #line 1413 
  housekeeping_init(mac);
  #line 1414 
  beacon_init(mac);
  {
    #line 1415 
    struct lock_class_key __key_0;
    #line 1415 
    __init_work(& mac->process_intr,0);
    #line 1415 
    atomic_long_t __constr_expr_41 = {.counter = 137438953408LL};
    #line 1415 
    mac->process_intr.data = __constr_expr_41;
    #line 1415 
    lockdep_init_map(& mac->process_intr.lockdep_map,(char *)"(work_completion)",& __key_0,0);
    #line 1415 
    INIT_LIST_HEAD_0(& mac->process_intr.entry);
    #line 1415 
    mac->process_intr.func = & zd_process_intr;
  }
  #line 1417 
  SET_IEEE80211_DEV(hw,& intf->dev);
  #line 1418 
  return hw;
}

#line 1423  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_mac.c"
static void beacon_watchdog_handler(struct work_struct *work)
{
  #line 1426 
  void *__mptr;
  #line 1427 
  struct sk_buff *beacon;
  #line 1428 
  unsigned long timeout;
  #line 1429 
  int interval;
  #line 1429 
  int period;
  #line 1426 
  __mptr = (void *)work;
  #line 1425 
  struct zd_mac *mac = ((struct zd_mac *)(__mptr + 18446744073709539768U));
  #line 1431 
  if (! test_bit(0L,& mac->flags)) 
                                   #line 1432 
                                   goto rearm;
  #line 1433 
  if (mac->type != 3 || mac->vif == (struct ieee80211_vif *)0) 
                                                               #line 1434 
                                                               goto rearm;
  #line 1436 
  cif_spin_lock_irq_lock_of_zd_mac(& mac->lock);
  #line 1437 
  interval = (int)mac->beacon.interval;
  #line 1438 
  period = (int)mac->beacon.period;
  #line 1439 
  timeout = mac->beacon.last_update + msecs_to_jiffies((unsigned int)((interval * 1024) / 1000)) * 3UL;
  #line 1441 
  cif_spin_unlock_irq_lock_of_zd_mac(& mac->lock);
  {
    #line 1443 
    unsigned long __dummy;
    #line 1443 
    unsigned long __dummy2;
    }
  #line 1443 
  if (1 != 0) {
    {
      #line 1443 
      unsigned long __dummy_0;
      #line 1443 
      unsigned long __dummy2_0;
      }
    #line 1443 
    if (1 != 0) 
      #line 1443 
      if ((long)(timeout - jiffies) < 0L) 
        #line 1443 
        if (interval > 0) {
          #line 1444 
          dev_printk((char *)"\001",& (mac->chip.usb.intf)->dev,(char *)"%s() ",(char *)"beacon_watchdog_handler",interval,period);
          #line 1449 
          zd_chip_disable_hwint(& mac->chip);
          #line 1451 
          beacon = ieee80211_beacon_get(mac->hw,mac->vif);
          #line 1452 
          if (beacon != (struct sk_buff *)0) {
            #line 1453 
            zd_mac_free_cur_beacon(mac);
            #line 1455 
            zd_mac_config_beacon(mac->hw,beacon,(_Bool)0);
          }
          #line 1458 
          zd_set_beacon_interval(& mac->chip,(unsigned short)((int)((unsigned short)interval)),(unsigned char)((int)((unsigned char)period)),mac->type);
          #line 1460 
          zd_chip_enable_hwint(& mac->chip);
          #line 1462 
          cif_spin_lock_irq_lock_of_zd_mac(& mac->lock);
          #line 1463 
          mac->beacon.last_update = jiffies;
          #line 1464 
          cif_spin_unlock_irq_lock_of_zd_mac(& mac->lock);
        }
  }
  #line 1467 
  rearm: 
         #line 1467 
  ;
  #line 1468 
  ;
  #line 1468 
  ;
  #line 1468 
  cif_queue_delayed_work_0(zd_workqueue,& mac->beacon.watchdog_work,round_jiffies_relative(250UL));
  #line 1470 
  return;
}

#line 1472  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_mac.c"
static void beacon_init(struct zd_mac *mac)
{
  {
    #line 1474 
    struct lock_class_key __key;
    #line 1474 
    __init_work(& mac->beacon.watchdog_work.work,0);
    #line 1474 
    atomic_long_t __constr_expr_42 = {.counter = 137438953408LL};
    #line 1474 
    mac->beacon.watchdog_work.work.data = __constr_expr_42;
    #line 1474 
    lockdep_init_map(& mac->beacon.watchdog_work.work.lockdep_map,(char *)"(work_completion)",& __key,0);
    #line 1474 
    INIT_LIST_HEAD_0(& mac->beacon.watchdog_work.work.entry);
    #line 1474 
    mac->beacon.watchdog_work.work.func = & beacon_watchdog_handler;
  }
  {
    #line 1474 
    struct lock_class_key __key_0;
    #line 1474 
    init_timer_key(& mac->beacon.watchdog_work.timer,& delayed_work_timer_fn,2097152U,(char *)"&(&mac->beacon.watchdog_work)->timer",& __key_0);
  }
  #line 1477 
  return;
}

#line 1477  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_mac.c"
static void beacon_enable(struct zd_mac *mac)
{
  #line 1479 
  dev_printk((char *)"\001",& (mac->chip.usb.intf)->dev,(char *)"%s() ",(char *)"beacon_enable");
  #line 1481 
  mac->beacon.last_update = jiffies;
  #line 1482 
  ;
  #line 1482 
  ;
  #line 1482 
  cif_queue_delayed_work_0(zd_workqueue,& mac->beacon.watchdog_work,round_jiffies_relative(250UL));
  #line 1484 
  return;
}

#line 1486  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_mac.c"
static void beacon_disable(struct zd_mac *mac)
{
  #line 1488 
  dev_printk((char *)"\001",& (mac->chip.usb.intf)->dev,(char *)"%s() ",(char *)"beacon_disable");
  #line 1489 
  cancel_delayed_work_sync(& mac->beacon.watchdog_work);
  #line 1491 
  zd_mac_free_cur_beacon(mac);
  #line 1492 
  return;
}

#line 1496  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_mac.c"
static void link_led_handler(struct work_struct *work)
{
  #line 1499 
  void *__mptr;
  #line 1501 
  int is_associated;
  #line 1502 
  int r;
  #line 1511 
  int tmp_1;
  #line 1499 
  __mptr = (void *)work;
  #line 1498 
  struct zd_mac *mac = ((struct zd_mac *)(__mptr + 18446744073709539952U));
  #line 1500 
  struct zd_chip *chip = & mac->chip;
  #line 1504 
  if (! test_bit(0L,& mac->flags)) 
                                   #line 1505 
                                   goto requeue;
  #line 1507 
  cif_spin_lock_irq_lock_of_zd_mac(& mac->lock);
  #line 1508 
  is_associated = mac->associated;
  #line 1509 
  cif_spin_unlock_irq_lock_of_zd_mac(& mac->lock);
  #line 1511 
  if (is_associated != 0) 
                          #line 1511 
                          tmp_1 = ZD_LED_ASSOCIATED; else 
                                                          #line 1511 
                                                          tmp_1 = ZD_LED_SCANNING;
  #line 1511 
  ;
  #line 1511 
  r = zd_chip_control_leds(chip,(enum led_status)tmp_1);
  #line 1513 
  if (r != 0) 
              #line 1514 
              dev_printk((char *)"\001",& (mac->chip.usb.intf)->dev,(char *)"%s() ",(char *)"link_led_handler",r);
  #line 1516 
  requeue: 
           #line 1516 
  ;
  #line 1517 
  cif_queue_delayed_work_0(zd_workqueue,& mac->housekeeping.link_led_work,250UL);
  #line 1518 
  return;
}

#line 1521  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_mac.c"
static void housekeeping_init(struct zd_mac *mac)
{
  {
    #line 1523 
    struct lock_class_key __key;
    #line 1523 
    __init_work(& mac->housekeeping.link_led_work.work,0);
    #line 1523 
    atomic_long_t __constr_expr_43 = {.counter = 137438953408LL};
    #line 1523 
    mac->housekeeping.link_led_work.work.data = __constr_expr_43;
    #line 1523 
    lockdep_init_map(& mac->housekeeping.link_led_work.work.lockdep_map,(char *)"(work_completion)",& __key,0);
    #line 1523 
    INIT_LIST_HEAD_0(& mac->housekeeping.link_led_work.work.entry);
    #line 1523 
    mac->housekeeping.link_led_work.work.func = & link_led_handler;
  }
  {
    #line 1523 
    struct lock_class_key __key_0;
    #line 1523 
    init_timer_key(& mac->housekeeping.link_led_work.timer,& delayed_work_timer_fn,2097152U,(char *)"&(&mac->housekeeping.link_led_work)->timer",& __key_0);
  }
  #line 1526 
  return;
}

#line 1526  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_mac.c"
static void housekeeping_enable(struct zd_mac *mac)
{
  #line 1528 
  dev_printk((char *)"\001",& (mac->chip.usb.intf)->dev,(char *)"%s() ",(char *)"housekeeping_enable");
  #line 1529 
  cif_queue_delayed_work_0(zd_workqueue,& mac->housekeeping.link_led_work,0UL);
  #line 1530 
  return;
}

#line 1533  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_mac.c"
static void housekeeping_disable(struct zd_mac *mac)
{
  #line 1535 
  dev_printk((char *)"\001",& (mac->chip.usb.intf)->dev,(char *)"%s() ",(char *)"housekeeping_disable");
  #line 1536 
  cancel_delayed_work_sync(& mac->housekeeping.link_led_work);
  #line 1537 
  zd_chip_control_leds(& mac->chip,(enum led_status)ZD_LED_OFF);
  #line 1538 
  return;
}

#line 93  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_mac.i.aux"
struct ieee80211_ops *emg_alias_zd_ops = & zd_ops;
#line 96 
#line 96 
struct ieee80211_hw *emg_ieee80211_alloc_hw(unsigned long arg0, struct ieee80211_ops *arg1);
#line 109  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_mac.i.aux"
int emg_wrapper_zd_op_add_interface(struct ieee80211_hw *arg0, struct ieee80211_vif *arg1)
{
  #line 110 
  return zd_op_add_interface(arg0,arg1);
}

#line 114  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_mac.i.aux"
void emg_wrapper_zd_op_bss_info_changed(struct ieee80211_hw *arg0, struct ieee80211_vif *arg1, struct ieee80211_bss_conf *arg2, unsigned int arg3)
{
  #line 115 
  zd_op_bss_info_changed(arg0,arg1,arg2,arg3);
  #line 116 
  return;
}

#line 119  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_mac.i.aux"
int emg_wrapper_zd_op_config(struct ieee80211_hw *arg0, unsigned int arg1)
{
  #line 120 
  return zd_op_config(arg0,arg1);
}

#line 124  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_mac.i.aux"
void emg_wrapper_zd_op_configure_filter(struct ieee80211_hw *arg0, unsigned int arg1, unsigned int *arg2, unsigned long long arg3)
{
  #line 125 
  zd_op_configure_filter(arg0,arg1,arg2,arg3);
  #line 126 
  return;
}

#line 129  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_mac.i.aux"
unsigned long long emg_wrapper_zd_op_get_tsf(struct ieee80211_hw *arg0, struct ieee80211_vif *arg1)
{
  #line 130 
  return zd_op_get_tsf(arg0,arg1);
}

#line 134  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_mac.i.aux"
unsigned long long emg_wrapper_zd_op_prepare_multicast(struct ieee80211_hw *arg0, struct netdev_hw_addr_list *arg1)
{
  #line 135 
  return zd_op_prepare_multicast(arg0,arg1);
}

#line 139  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_mac.i.aux"
void emg_wrapper_zd_op_remove_interface(struct ieee80211_hw *arg0, struct ieee80211_vif *arg1)
{
  #line 140 
  zd_op_remove_interface(arg0,arg1);
  #line 141 
  return;
}

#line 144  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_mac.i.aux"
void emg_wrapper_zd_op_tx(struct ieee80211_hw *arg0, struct ieee80211_tx_control *arg1, struct sk_buff *arg2)
{
  #line 145 
  zd_op_tx(arg0,arg1,arg2);
  #line 146 
  return;
}

#line 164  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_mac.i.aux"
static void cif_set_bit_0(long nr, unsigned long *addr)
{
  #line 167 
  ldv_set_bit(nr,addr);
  #line 168 
  return;
}

#line 171  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_mac.i.aux"
static void cif_clear_bit(long nr, unsigned long *addr)
{
  #line 174 
  ldv_clear_bit(nr,addr);
  #line 175 
  return;
}

#line 178  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_mac.i.aux"
static void INIT_LIST_HEAD_0(struct list_head *list)
{
  #line 181 
  ldv_init_list_head(list);
  #line 182 
  return;
}

#line 348  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_mac.i.aux"
static bool cif_queue_delayed_work_0(struct workqueue_struct *wq, struct delayed_work *dwork, unsigned long delay)
{
  #line 352 
  return emg_queue_delayed_work(wq,dwork,delay);
}

#line 381  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_mac.i.aux"
static void *kmalloc_array(size_t n, size_t size, gfp_t flags)
{
  #line 384 
  return ldv_kmalloc_array(n,size,flags);
}

#line 851  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_mac.i.aux"
static void cif_spin_lock_irq_lock_of_zd_mac(spinlock_t *lock)
{
  #line 854 
  ldv_spin_model_lock((char *)"lock_of_zd_mac");
  #line 856 
  spin_lock_irq_0(lock);
  #line 857 
  return;
}

#line 860  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_mac.i.aux"
static void cif_spin_unlock_irq_lock_of_zd_mac(spinlock_t *lock)
{
  #line 863 
  ldv_spin_model_unlock((char *)"lock_of_zd_mac");
  #line 865 
  spin_unlock_irq_0(lock);
  #line 866 
  return;
}

#line 869  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_mac.i.aux"
static void cif___ldv_spin_lock_lock_of_zd_mac(spinlock_t *lock)
{
  #line 872 
  ldv_spin_model_lock((char *)"lock_of_zd_mac");
  #line 874 
  __ldv_spin_lock(lock);
  #line 875 
  return;
}

#line 878  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_mac.i.aux"
static void cif_spin_unlock_irqrestore_lock_of_zd_mac(spinlock_t *lock, unsigned long flags)
{
  #line 881 
  ldv_spin_model_unlock((char *)"lock_of_zd_mac");
  #line 883 
  spin_unlock_irqrestore_0(lock,flags);
  #line 884 
  return;
}

#line 887  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_mac.i.aux"
static void cif___ldv_spin_lock_lock_of_sk_buff_head_0(spinlock_t *lock)
{
  #line 890 
  ldv_spin_model_lock((char *)"lock_of_sk_buff_head");
  #line 892 
  __ldv_spin_lock(lock);
  #line 893 
  return;
}

#line 896  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_mac.i.aux"
static void cif_spin_unlock_irqrestore_lock_of_sk_buff_head_0(spinlock_t *lock, unsigned long flags)
{
  #line 899 
  ldv_spin_model_unlock((char *)"lock_of_sk_buff_head");
  #line 901 
  spin_unlock_irqrestore_0(lock,flags);
  #line 902 
  return;
}

#line 905  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_mac.i.aux"
static void cif_mutex_lock_mutex_of_zd_chip_0(struct mutex *lock)
{
  #line 908 
  ldv_mutex_model_lock(lock,(char *)"mutex_of_zd_chip");
  #line 909 
  return;
}

#line 912  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_mac.i.aux"
static void cif_mutex_unlock_mutex_of_zd_chip_0(struct mutex *lock)
{
  #line 915 
  ldv_mutex_model_unlock(lock,(char *)"mutex_of_zd_chip");
  #line 916 
  return;
}

#line 919  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_mac.i.aux"
static struct ieee80211_hw *cif_ieee80211_alloc_hw(size_t priv_data_len, struct ieee80211_ops *ops)
{
  #line 923 
  return emg_ieee80211_alloc_hw(priv_data_len,ops);
}

#line 472  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernel.h"
#line 472 
int snprintf(char *, size_t, char * , ...);
#line 26  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_chip.i.aux"
#line 806 
static void cif_mutex_lock_mutex_of_zd_chip_1(struct mutex *lock);
#line 86  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mutex.h"
#line 86 
void mutex_destroy(struct mutex *);
#line 185 
#line 813  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_chip.i.aux"
static void cif_mutex_unlock_mutex_of_zd_chip_1(struct mutex *lock);
#line 52  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timekeeping.h"
#line 52 
time64_t ktime_get_seconds(void);
#line 462  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/workqueue.h"
#line 462 
bool cancel_work_sync(struct work_struct *);
#line 63  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_rf.h"
#line 63 
char *zd_rf_name(u8 type);
#line 64 
#line 64 
void zd_rf_init(struct zd_rf *rf);
#line 65 
#line 65 
void zd_rf_clear(struct zd_rf *rf);
#line 66 
#line 66 
int zd_rf_init_hw(struct zd_rf *rf, u8 type);
#line 68 
#line 68 
int zd_rf_scnprint_id(struct zd_rf *rf, char *buffer, size_t size);
#line 70 
#line 70 
int zd_rf_set_channel(struct zd_rf *rf, u8 channel);
#line 72 
#line 72 
int zd_switch_radio_on(struct zd_rf *rf);
#line 73 
#line 73 
int zd_switch_radio_off(struct zd_rf *rf);
#line 75 
#line 75 
int zd_rf_patch_6m_band_edge(struct zd_rf *rf, u8 channel);
#line 78  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_rf.h"
__inline static int zd_rf_should_update_pwr_int(struct zd_rf *rf)
{
  #line 80 
  return (int)rf->update_channel_int;
}

#line 83  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_rf.h"
__inline static int zd_rf_should_patch_cck_gain(struct zd_rf *rf)
{
  #line 85 
  return (int)rf->patch_cck_gain;
}

#line 796  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.h"
__inline static int zd_ioread16v_locked(struct zd_chip *chip, u16 *values, zd_addr_t *addresses, unsigned int count)
{
  #line 800 
  int tmp_5;
  #line 800 
  if (mutex_is_locked(& chip->mutex)) 
                                      #line 800 
                                      tmp_5 = 0; else 
                                                      #line 800 
                                                      tmp_5 = 1;
  #line 800 
  if ((long)tmp_5 != 0L) {
    {
      #line 800 
      bool branch;
      #line 800 
      struct _ddebug __UNIQUE_ID_ddebug561 = {.modname = (char *)"zd1211rw", .function = (char *)"zd_ioread16v_locked", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.h", .format = (char *)"%s:%d ASSERT %s VIOLATED!\n", .lineno = (unsigned int)800U, .flags = (unsigned int)1U, .key = {.dd_key_true = {.key = {.enabled = {.counter = 1}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)1}}}}};
      {
        #line 800 
        int tmp_0;
        #line 800 
        if ((int)arch_static_branch(& __UNIQUE_ID_ddebug561.key.dd_key_true.key,
                         (_Bool)1) != 0) 
          #line 800 
          tmp_0 = 0; else 
                          #line 800 
                          tmp_0 = 1;
        #line 800 
        branch = (_Bool)(tmp_0 != 0);
        }
      #line 800 
      if ((long)((long)((int)branch != 0)) != 0L) 
                                                  #line 800 
                                                  __dynamic_pr_debug(& __UNIQUE_ID_ddebug561,(char *)"%s:%d ASSERT %s VIOLATED!\n",(char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.h",800,(char *)"mutex_is_locked(&chip->mutex)");
    }
    #line 800 
    dump_stack();
  }
  #line 801 
  return zd_usb_ioread16v(& chip->usb,values,addresses,count);
}

#line 868 
#line 255  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c"
int zd_ioread16(struct zd_chip *chip, zd_addr_t addr, u16 *value);
#line 869  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.h"
#line 275  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c"
int zd_iowrite16(struct zd_chip *chip, zd_addr_t addr, u16 value);
#line 870  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.h"
#line 265  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c"
int zd_ioread32(struct zd_chip *chip, zd_addr_t addr, u32 *value);
#line 872  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.h"
#line 295  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c"
int zd_ioread32v(struct zd_chip *chip, zd_addr_t *addresses, u32 *values, unsigned int count);
#line 874  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.h"
#line 306  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c"
int zd_iowrite32a(struct zd_chip *chip, struct zd_ioreq32 *ioreqs, unsigned int count);
#line 882  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.h"
#line 1291  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c"
u8 zd_chip_get_channel(struct zd_chip *chip);
#line 894  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.h"
#line 579  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c"
int zd_chip_generic_patch_6m_band(struct zd_chip *chip, int channel);
#line 914  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.h"
#line 505  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c"
int zd_chip_lock_phy_regs(struct zd_chip *chip);
#line 915  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.h"
#line 525  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c"
int zd_chip_unlock_phy_regs(struct zd_chip *chip);
#line 229  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_mac.h"
__inline static u8 zd_ofdm_plcp_header_rate(struct ofdm_plcp_header *header)
{
  #line 231 
  return (unsigned char)((unsigned int)header->prefix[0] & 15U);
}

#line 256  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_mac.h"
__inline static u8 zd_cck_plcp_header_signal(struct cck_plcp_header *header)
{
  #line 258 
  return header->signal;
}

#line 288  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_mac.h"
__inline static u8 *zd_mac_get_perm_addr(struct zd_mac *mac)
{
  #line 290 
  return (u8 *)(& ((mac->hw)->wiphy)->perm_addr);
}

#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c"
void zd_chip_init(struct zd_chip *chip, struct ieee80211_hw *hw, struct usb_interface *intf)
{
  #line 26 
  memset((void *)chip,0,11504UL);
  {
    #line 27 
    struct lock_class_key __key;
    #line 27 
    __mutex_init(& chip->mutex,(char *)"&chip->mutex",& __key);
  }
  #line 28 
  zd_usb_init(& chip->usb,hw,intf);
  #line 29 
  zd_rf_init(& chip->rf);
  #line 30 
  return;
}

#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c"
void zd_chip_clear(struct zd_chip *chip)
{
  #line 34 
  if ((long)((int)mutex_is_locked(& chip->mutex) != 0) != 0L) {
    {
      #line 34 
      bool branch;
      #line 34 
      struct _ddebug __UNIQUE_ID_ddebug565 = {.modname = (char *)"zd1211rw", .function = (char *)"zd_chip_clear", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c", .format = (char *)"%s:%d ASSERT %s VIOLATED!\n", .lineno = (unsigned int)34U, .flags = (unsigned int)1U, .key = {.dd_key_true = {.key = {.enabled = {.counter = 1}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)1}}}}};
      {
        #line 34 
        int tmp_0;
        #line 34 
        if ((int)arch_static_branch(& __UNIQUE_ID_ddebug565.key.dd_key_true.key,
                         (_Bool)1) != 0) 
          #line 34 
          tmp_0 = 0; else 
                          #line 34 
                          tmp_0 = 1;
        #line 34 
        branch = (_Bool)(tmp_0 != 0);
        }
      #line 34 
      if ((long)((long)((int)branch != 0)) != 0L) 
                                                  #line 34 
                                                  __dynamic_pr_debug(& __UNIQUE_ID_ddebug565,(char *)"%s:%d ASSERT %s VIOLATED!\n",(char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c",34,(char *)"!mutex_is_locked(&chip->mutex)");
    }
    #line 34 
    dump_stack();
  }
  #line 35 
  zd_usb_clear(& chip->usb);
  #line 36 
  zd_rf_clear(& chip->rf);
  #line 37 
  mutex_destroy(& chip->mutex);
  #line 38 
  memset((void *)chip,255,11504UL);
  #line 39 
  return;
}

#line 41  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c"
static int scnprint_mac_oui(struct zd_chip *chip, char *buffer, size_t size)
{
  #line 43 
  u8 *addr = zd_mac_get_perm_addr(zd_chip_to_mac(chip));
  #line 44 
  return scnprintf(buffer,size,(char *)"%3phD",addr);
}

#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c"
static int scnprint_id_0(struct zd_chip *chip, char *buffer, size_t size)
{
  #line 52 
  char *tmp_0;
  #line 63 
  int tmp_6;
  #line 62 
  int tmp_7;
  #line 61 
  int tmp_8;
  #line 60 
  int tmp_9;
  #line 59 
  int tmp_10;
  #line 50 
  int i = 0;
  #line 52 
  if (zd_chip_is_zd1211b(chip) != 0) 
                                     #line 52 
                                     tmp_0 = (char *)"b"; else 
                                                               #line 52 
                                                               tmp_0 = (char *)"";
  #line 52 
  ;
  #line 52 
  ;
  #line 52 
  i = scnprintf(buffer,size,(char *)"zd1211%s chip ",tmp_0);
  #line 54 
  i = zd_usb_scnprint_id(& chip->usb,buffer + (unsigned long)i,
                           size - (unsigned long)i) + i;
  #line 55 
  i = scnprintf(buffer + (unsigned long)i,size - (unsigned long)i,
                  (char *)" ") + i;
  #line 56 
  i = scnprint_mac_oui(chip,buffer + (unsigned long)i,
                         size - (unsigned long)i) + i;
  #line 57 
  i = scnprintf(buffer + (unsigned long)i,size - (unsigned long)i,
                  (char *)" ") + i;
  #line 58 
  i = zd_rf_scnprint_id(& chip->rf,buffer + (unsigned long)i,
                          size - (unsigned long)i) + i;
  #line 63 
  if ((unsigned int)chip->al2230s_bit != 0U) 
                                             #line 63 
                                             tmp_6 = 83; else 
                                                              #line 63 
                                                              tmp_6 = 45;
  #line 62 
  if ((unsigned int)chip->new_phy_layout != 0U) 
                                                #line 62 
                                                tmp_7 = 78; else 
                                                                 #line 62 
                                                                 tmp_7 = 45;
  #line 61 
  if ((unsigned int)chip->patch_6m_band_edge != 0U) 
                                                    #line 61 
                                                    tmp_8 = 54; else 
                                                                  #line 61 
                                                                  tmp_8 = 45;
  #line 60 
  if ((unsigned int)chip->patch_cr157 != 0U) 
                                             #line 60 
                                             tmp_9 = 55; else 
                                                              #line 60 
                                                              tmp_9 = 45;
  #line 59 
  if ((unsigned int)chip->patch_cck_gain != 0U) 
                                                #line 59 
                                                tmp_10 = 103; else 
                                                                   #line 59 
                                                                   tmp_10 = 45;
  #line 59 
  ;
  #line 59 
  ;
  #line 59 
  ;
  #line 64 
  i = scnprintf(buffer + (unsigned long)i,size - (unsigned long)i,
                   (char *)" pa%1x %c%c%c%c%c",(int)chip->pa_type,tmp_10,
                   tmp_9,tmp_8,tmp_7,tmp_6) + i;
  #line 65 
  return i;
}

#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c"
static void print_id_0(struct zd_chip *chip)
{
  #line 70 
  char buffer[80U];
  #line 72 
  scnprint_id_0(chip,(char *)(& buffer),80UL);
  #line 73 
  buffer[79UL] = (char)0;
  #line 74 
  _dev_info(& (chip->usb.intf)->dev,(char *)"%s\n",(char *)(& buffer));
  #line 75 
  return;
}

#line 77  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c"
static zd_addr_t inc_addr(zd_addr_t addr)
{
  #line 79 
  u16 a = addr;
  #line 82 
  if (((int)a & 61440) == 36864) 
                                 #line 83 
                                 a = (unsigned short)((unsigned int)a + 2U); else 
                                                                    #line 85 
                                                                    a = (unsigned short)((unsigned int)a + 1U);
  #line 86 
  return a;
}

#line 92  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c"
int zd_ioread32v_locked(struct zd_chip *chip, u32 *values, zd_addr_t *addr, unsigned int count)
{
  #line 95 
  int r;
  #line 96 
  int i;
  #line 97 
  zd_addr_t a16[14U];
  #line 98 
  u16 v16[14U];
  #line 99 
  unsigned int count16;
  #line 101 
  if (count > 7U) 
                  #line 102 
                  return -22;
  #line 105 
  count16 = count * 2U;
  #line 106 
  if ((long)((unsigned long)count16 * 2UL > 28UL) != 0L) {
    #line 107 
    ldv_inline_asm();
    #line 108 
    ldv_inline_asm();
    #line 109 
    ldv_inline_asm();
    #line 106 
    ;
  }
  #line 107 
  if ((long)((unsigned long)count16 * 2UL > 28UL) != 0L) {
    #line 108 
    ldv_inline_asm();
    #line 109 
    ldv_inline_asm();
    #line 110 
    ldv_inline_asm();
    #line 107 
    ;
  }
  #line 109 
  i = 0;
  #line 109 
  while ((unsigned int)i < count) {
    {
      #line 110 
      int j = i * 2;
      #line 112 
      a16[j] = inc_addr((unsigned short)((int)*(addr + (unsigned long)i)));
      #line 113 
      a16[j + 1] = *(addr + (unsigned long)i);
    }
    #line 109 
    i ++;
  }
  #line 116 
  r = zd_ioread16v_locked(chip,(u16 *)(& v16),(zd_addr_t *)(& a16),count16);
  #line 117 
  if (r != 0) {
    #line 118 
    dev_printk((char *)"\001",& (chip->usb.intf)->dev,(char *)"%s() ",(char *)"zd_ioread32v_locked",(char *)"zd_ioread32v_locked",r);
    #line 120 
    return r;
  }
  #line 123 
  i = 0;
  #line 123 
  while ((unsigned int)i < count) {
    {
      #line 124 
      int j_0 = i * 2;
      #line 125 
      *(values + (unsigned long)i) = (unsigned int)(((int)v16[j_0] << 16) | (int)v16[j_0 + 1]);
    }
    #line 123 
    i ++;
  }
  #line 128 
  return 0;
}

#line 131  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c"
static int _zd_iowrite32v_async_locked(struct zd_chip *chip, struct zd_ioreq32 *ioreqs, unsigned int count)
{
  #line 135 
  int i;
  #line 135 
  int j;
  #line 135 
  int r;
  #line 136 
  struct zd_ioreq16 ioreqs16[14U];
  #line 137 
  unsigned int count16;
  #line 141 
  int tmp_5;
  #line 141 
  if (mutex_is_locked(& chip->mutex)) 
                                      #line 141 
                                      tmp_5 = 0; else 
                                                      #line 141 
                                                      tmp_5 = 1;
  #line 141 
  if ((long)tmp_5 != 0L) {
    {
      #line 141 
      bool branch;
      #line 141 
      struct _ddebug __UNIQUE_ID_ddebug568 = {.modname = (char *)"zd1211rw", .function = (char *)"_zd_iowrite32v_async_locked", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c", .format = (char *)"%s:%d ASSERT %s VIOLATED!\n", .lineno = (unsigned int)141U, .flags = (unsigned int)1U, .key = {.dd_key_true = {.key = {.enabled = {.counter = 1}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)1}}}}};
      {
        #line 141 
        int tmp_0;
        #line 141 
        if ((int)arch_static_branch(& __UNIQUE_ID_ddebug568.key.dd_key_true.key,
                         (_Bool)1) != 0) 
          #line 141 
          tmp_0 = 0; else 
                          #line 141 
                          tmp_0 = 1;
        #line 141 
        branch = (_Bool)(tmp_0 != 0);
        }
      #line 141 
      if ((long)((long)((int)branch != 0)) != 0L) 
                                                  #line 141 
                                                  __dynamic_pr_debug(& __UNIQUE_ID_ddebug568,(char *)"%s:%d ASSERT %s VIOLATED!\n",(char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c",141,(char *)"mutex_is_locked(&chip->mutex)");
    }
    #line 141 
    dump_stack();
  }
  #line 143 
  if (count == 0U) 
                   #line 144 
                   return 0;
  #line 145 
  if (count > 7U) 
                  #line 146 
                  return -22;
  #line 148 
  count16 = count * 2U;
  #line 149 
  if ((long)((unsigned long)count16 * 4UL > 56UL) != 0L) {
    #line 150 
    ldv_inline_asm();
    #line 151 
    ldv_inline_asm();
    #line 152 
    ldv_inline_asm();
    #line 149 
    ;
  }
  #line 151 
  i = 0;
  #line 151 
  while ((unsigned int)i < count) {
    #line 152 
    j = i * 2;
    #line 154 
    ioreqs16[j].value = (unsigned short)((ioreqs + (unsigned long)i)->value >> 16);
    #line 155 
    ioreqs16[j].addr = inc_addr((unsigned short)((int)(ioreqs + (unsigned long)i)->addr));
    #line 156 
    ioreqs16[j + 1].value = (unsigned short)(ioreqs + (unsigned long)i)->value;
    #line 157 
    ioreqs16[j + 1].addr = (ioreqs + (unsigned long)i)->addr;
    #line 151 
    i ++;
  }
  #line 160 
  r = zd_usb_iowrite16v_async(& chip->usb,(struct zd_ioreq16 *)(& ioreqs16),count16);
  #line 162 
  if (r != 0) 
              #line 163 
              dev_printk((char *)"\001",& (chip->usb.intf)->dev,(char *)"%s() ",(char *)"_zd_iowrite32v_async_locked",r);
  #line 167 
  return r;
}

#line 170  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c"
int _zd_iowrite32v_locked(struct zd_chip *chip, struct zd_ioreq32 *ioreqs, unsigned int count)
{
  #line 173 
  int r;
  #line 175 
  zd_usb_iowrite16v_async_start(& chip->usb);
  #line 176 
  r = _zd_iowrite32v_async_locked(chip,ioreqs,count);
  #line 177 
  if (r != 0) {
    #line 178 
    zd_usb_iowrite16v_async_end(& chip->usb,0U);
    #line 179 
    return r;
  }
  #line 181 
  return zd_usb_iowrite16v_async_end(& chip->usb,50U);
}

#line 184  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c"
int zd_iowrite16a_locked(struct zd_chip *chip, struct zd_ioreq16 *ioreqs, unsigned int count)
{
  #line 187 
  int r;
  #line 188 
  unsigned int i;
  #line 188 
  unsigned int j;
  #line 188 
  unsigned int t;
  #line 188 
  unsigned int max;
  #line 190 
  int tmp_5;
  #line 190 
  if (mutex_is_locked(& chip->mutex)) 
                                      #line 190 
                                      tmp_5 = 0; else 
                                                      #line 190 
                                                      tmp_5 = 1;
  #line 190 
  if ((long)tmp_5 != 0L) {
    {
      #line 190 
      bool branch;
      #line 190 
      struct _ddebug __UNIQUE_ID_ddebug570 = {.modname = (char *)"zd1211rw", .function = (char *)"zd_iowrite16a_locked", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c", .format = (char *)"%s:%d ASSERT %s VIOLATED!\n", .lineno = (unsigned int)190U, .flags = (unsigned int)1U, .key = {.dd_key_true = {.key = {.enabled = {.counter = 1}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)1}}}}};
      {
        #line 190 
        int tmp_0;
        #line 190 
        if ((int)arch_static_branch(& __UNIQUE_ID_ddebug570.key.dd_key_true.key,
                         (_Bool)1) != 0) 
          #line 190 
          tmp_0 = 0; else 
                          #line 190 
                          tmp_0 = 1;
        #line 190 
        branch = (_Bool)(tmp_0 != 0);
        }
      #line 190 
      if ((long)((long)((int)branch != 0)) != 0L) 
                                                  #line 190 
                                                  __dynamic_pr_debug(& __UNIQUE_ID_ddebug570,(char *)"%s:%d ASSERT %s VIOLATED!\n",(char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c",190,(char *)"mutex_is_locked(&chip->mutex)");
    }
    #line 190 
    dump_stack();
  }
  #line 191 
  zd_usb_iowrite16v_async_start(& chip->usb);
  #line 193 
  i = 0U;
  #line 193 
  while (i < count) {
    #line 194 
    t = 0U;
    #line 195 
    max = count - i;
    #line 196 
    if (max > 15U) 
                   #line 197 
                   max = 15U;
    #line 198 
    j = 0U;
    #line 198 
    while (j < max) {
      #line 199 
      if ((unsigned int)(ioreqs + (unsigned long)(i + j))->addr == 0U) {
        #line 200 
        t = 1U;
        #line 201 
        break;
      }
      #line 198 
      j ++;
    }
    #line 205 
    r = zd_usb_iowrite16v_async(& chip->usb,ioreqs + (unsigned long)i,j);
    #line 206 
    if (r != 0) {
      #line 207 
      zd_usb_iowrite16v_async_end(& chip->usb,0U);
      #line 208 
      dev_printk((char *)"\001",& (chip->usb.intf)->dev,(char *)"%s() ",(char *)"zd_iowrite16a_locked",r);
      #line 211 
      return r;
    }
    #line 193 
    i = (j + t) + i;
  }
  #line 215 
  return zd_usb_iowrite16v_async_end(& chip->usb,50U);
}

#line 222  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c"
int zd_iowrite32a_locked(struct zd_chip *chip, struct zd_ioreq32 *ioreqs, unsigned int count)
{
  #line 225 
  int r;
  #line 226 
  unsigned int i;
  #line 226 
  unsigned int j;
  #line 226 
  unsigned int t;
  #line 226 
  unsigned int max;
  #line 228 
  zd_usb_iowrite16v_async_start(& chip->usb);
  #line 230 
  i = 0U;
  #line 230 
  while (i < count) {
    #line 231 
    t = 0U;
    #line 232 
    max = count - i;
    #line 233 
    if (max > 7U) 
                  #line 234 
                  max = 7U;
    #line 235 
    j = 0U;
    #line 235 
    while (j < max) {
      #line 236 
      if ((unsigned int)(ioreqs + (unsigned long)(i + j))->addr == 0U) {
        #line 237 
        t = 1U;
        #line 238 
        break;
      }
      #line 235 
      j ++;
    }
    #line 242 
    r = _zd_iowrite32v_async_locked(chip,ioreqs + (unsigned long)i,j);
    #line 243 
    if (r != 0) {
      #line 244 
      zd_usb_iowrite16v_async_end(& chip->usb,0U);
      #line 245 
      dev_printk((char *)"\001",& (chip->usb.intf)->dev,(char *)"%s() ",(char *)"zd_iowrite32a_locked",(char *)"zd_iowrite32a_locked",r);
      #line 248 
      return r;
    }
    #line 230 
    i = (j + t) + i;
  }
  #line 252 
  return zd_usb_iowrite16v_async_end(& chip->usb,50U);
}

#line 255  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c"
int zd_ioread16(struct zd_chip *chip, zd_addr_t addr, u16 *value)
{
  #line 257 
  int r;
  #line 259 
  cif_mutex_lock_mutex_of_zd_chip_1(& chip->mutex);
  #line 260 
  r = zd_ioread16_locked(chip,value,(unsigned short)((int)addr));
  #line 261 
  cif_mutex_unlock_mutex_of_zd_chip_1(& chip->mutex);
  #line 262 
  return r;
}

#line 265  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c"
int zd_ioread32(struct zd_chip *chip, zd_addr_t addr, u32 *value)
{
  #line 267 
  int r;
  #line 269 
  cif_mutex_lock_mutex_of_zd_chip_1(& chip->mutex);
  #line 270 
  r = zd_ioread32_locked(chip,value,(unsigned short)((int)addr));
  #line 271 
  cif_mutex_unlock_mutex_of_zd_chip_1(& chip->mutex);
  #line 272 
  return r;
}

#line 275  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c"
int zd_iowrite16(struct zd_chip *chip, zd_addr_t addr, u16 value)
{
  #line 277 
  int r;
  #line 279 
  cif_mutex_lock_mutex_of_zd_chip_1(& chip->mutex);
  #line 280 
  r = zd_iowrite16_locked(chip,(unsigned short)((int)value),(unsigned short)((int)addr));
  #line 281 
  cif_mutex_unlock_mutex_of_zd_chip_1(& chip->mutex);
  #line 282 
  return r;
}

#line 285  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c"
int zd_iowrite32(struct zd_chip *chip, zd_addr_t addr, u32 value)
{
  #line 287 
  int r;
  #line 289 
  cif_mutex_lock_mutex_of_zd_chip_1(& chip->mutex);
  #line 290 
  r = zd_iowrite32_locked(chip,value,(unsigned short)((int)addr));
  #line 291 
  cif_mutex_unlock_mutex_of_zd_chip_1(& chip->mutex);
  #line 292 
  return r;
}

#line 295  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c"
int zd_ioread32v(struct zd_chip *chip, zd_addr_t *addresses, u32 *values, unsigned int count)
{
  #line 298 
  int r;
  #line 300 
  cif_mutex_lock_mutex_of_zd_chip_1(& chip->mutex);
  #line 301 
  r = zd_ioread32v_locked(chip,values,addresses,count);
  #line 302 
  cif_mutex_unlock_mutex_of_zd_chip_1(& chip->mutex);
  #line 303 
  return r;
}

#line 306  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c"
int zd_iowrite32a(struct zd_chip *chip, struct zd_ioreq32 *ioreqs, unsigned int count)
{
  #line 309 
  int r;
  #line 311 
  cif_mutex_lock_mutex_of_zd_chip_1(& chip->mutex);
  #line 312 
  r = zd_iowrite32a_locked(chip,ioreqs,count);
  #line 313 
  cif_mutex_unlock_mutex_of_zd_chip_1(& chip->mutex);
  #line 314 
  return r;
}

#line 317  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c"
static int read_pod(struct zd_chip *chip, u8 *rf_type)
{
  #line 319 
  int r;
  #line 320 
  u32 value;
  #line 322 
  int tmp_5;
  #line 343 
  int tmp_6;
  #line 322 
  if (mutex_is_locked(& chip->mutex)) 
                                      #line 322 
                                      tmp_5 = 0; else 
                                                      #line 322 
                                                      tmp_5 = 1;
  #line 322 
  if ((long)tmp_5 != 0L) {
    {
      #line 322 
      bool branch;
      #line 322 
      struct _ddebug __UNIQUE_ID_ddebug571 = {.modname = (char *)"zd1211rw", .function = (char *)"read_pod", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c", .format = (char *)"%s:%d ASSERT %s VIOLATED!\n", .lineno = (unsigned int)322U, .flags = (unsigned int)1U, .key = {.dd_key_true = {.key = {.enabled = {.counter = 1}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)1}}}}};
      {
        #line 322 
        int tmp_0;
        #line 322 
        if ((int)arch_static_branch(& __UNIQUE_ID_ddebug571.key.dd_key_true.key,
                         (_Bool)1) != 0) 
          #line 322 
          tmp_0 = 0; else 
                          #line 322 
                          tmp_0 = 1;
        #line 322 
        branch = (_Bool)(tmp_0 != 0);
        }
      #line 322 
      if ((long)((long)((int)branch != 0)) != 0L) 
                                                  #line 322 
                                                  __dynamic_pr_debug(& __UNIQUE_ID_ddebug571,(char *)"%s:%d ASSERT %s VIOLATED!\n",(char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c",322,(char *)"mutex_is_locked(&chip->mutex)");
    }
    #line 322 
    dump_stack();
  }
  #line 323 
  r = zd_ioread32_locked(chip,& value,(unsigned short)63513);
  #line 324 
  if (r != 0) 
              #line 325 
              goto error;
  #line 326 
  dev_printk((char *)"\001",& (chip->usb.intf)->dev,(char *)"%s() ",(char *)"read_pod",value);
  #line 329 
  *rf_type = (unsigned char)((unsigned int)((unsigned char)value) & 15U);
  #line 330 
  chip->pa_type = (unsigned int)(value >> 16);
  #line 331 
  chip->patch_cck_gain = (unsigned int)(value >> 8);
  #line 332 
  chip->patch_cr157 = (unsigned int)(value >> 13);
  #line 333 
  chip->patch_6m_band_edge = (unsigned int)(value >> 21);
  #line 334 
  chip->new_phy_layout = (unsigned int)(value >> 31);
  #line 335 
  chip->al2230s_bit = (unsigned int)(value >> 7);
  #line 336 
  if ((value & 16U) != 0U) 
                           #line 336 
                           chip->link_led = (unsigned short)256U; else 
                                                                    #line 336 
                                                                    chip->link_led = (unsigned short)512U;
  #line 337 
  chip->supports_tx_led = (unsigned int)1U;
  #line 338 
  if ((value & 16777216U) != 0U) 
    #line 339 
    if ((value & 536870912U) != 0U) 
                                    #line 340 
                                    chip->supports_tx_led = (unsigned int)0U;
  #line 343 
  ;
  #line 343 
  if ((unsigned int)chip->link_led == 256U) 
                                            #line 343 
                                            tmp_6 = 1; else 
                                                            #line 343 
                                                            tmp_6 = 2;
  #line 343 
  ;
  #line 343 
  ;
  #line 343 
  ;
  #line 343 
  ;
  #line 343 
  ;
  #line 343 
  ;
  #line 343 
  ;
  #line 343 
  dev_printk((char *)"\001",& (chip->usb.intf)->dev,(char *)"%s() ",(char *)"read_pod",zd_rf_name((unsigned char)((int)*rf_type)),(int)*rf_type,(int)chip->pa_type,(int)chip->patch_cck_gain,(int)chip->patch_cr157,(int)chip->patch_6m_band_edge,(int)chip->new_phy_layout,tmp_6,(int)chip->supports_tx_led);
  #line 352 
  return 0;
  #line 353 
  error: 
         #line 353 
  ;
  #line 354 
  *rf_type = (unsigned char)0U;
  #line 355 
  chip->pa_type = (unsigned int)0U;
  #line 356 
  chip->patch_cck_gain = (unsigned int)0U;
  #line 357 
  chip->patch_cr157 = (unsigned int)0U;
  #line 358 
  chip->patch_6m_band_edge = (unsigned int)0U;
  #line 359 
  chip->new_phy_layout = (unsigned int)0U;
  #line 360 
  return r;
}

#line 363  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c"
static int zd_write_mac_addr_common(struct zd_chip *chip, u8 *mac_addr, struct zd_ioreq32 *in_reqs, char *type)
{
  #line 367 
  int r;
  #line 368 
  struct zd_ioreq32 reqs[2U] = {*in_reqs, *(in_reqs + 1U)};
  #line 370 
  if (mac_addr != (u8 *)0U) {
    #line 371 
    reqs[0].value = (unsigned int)(((((int)*(mac_addr + 3U) << 24) | ((int)*(mac_addr + 2U) << 16)) | ((int)*(mac_addr + 1U) << 8)) | (int)*mac_addr);
    #line 375 
    reqs[1].value = (unsigned int)(((int)*(mac_addr + 5U) << 8) | (int)*(mac_addr + 4U));
    #line 377 
    dev_printk((char *)"\001",& (chip->usb.intf)->dev,(char *)"%s() ",(char *)"zd_write_mac_addr_common",type,mac_addr);
  }
  else 
       #line 379 
       dev_printk((char *)"\001",& (chip->usb.intf)->dev,(char *)"%s() ",(char *)"zd_write_mac_addr_common",type);
  #line 382 
  cif_mutex_lock_mutex_of_zd_chip_1(& chip->mutex);
  #line 383 
  r = zd_iowrite32a_locked(chip,(struct zd_ioreq32 *)(& reqs),2U);
  #line 384 
  cif_mutex_unlock_mutex_of_zd_chip_1(& chip->mutex);
  #line 385 
  return r;
}

#line 391  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c"
int zd_write_mac_addr(struct zd_chip *chip, u8 *mac_addr)
{
  #line 393 
  struct zd_ioreq32 reqs[2U] = {{.addr = (unsigned short)38416U, .value = 0U}, {.addr = (unsigned short)38420U, .value = 0U}};
  #line 398 
  return zd_write_mac_addr_common(chip,mac_addr,(struct zd_ioreq32 *)(& reqs),
                               (char *)"mac");
}

#line 401  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c"
int zd_write_bssid(struct zd_chip *chip, u8 *bssid)
{
  #line 403 
  struct zd_ioreq32 reqs[2U] = {{.addr = (unsigned short)38424U, .value = 0U}, {.addr = (unsigned short)38428U, .value = 0U}};
  #line 408 
  return zd_write_mac_addr_common(chip,bssid,(struct zd_ioreq32 *)(& reqs),
                               (char *)"bssid");
}

#line 411  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c"
int zd_read_regdomain(struct zd_chip *chip, u8 *regdomain)
{
  #line 413 
  int r;
  #line 414 
  u32 value;
  #line 416 
  cif_mutex_lock_mutex_of_zd_chip_1(& chip->mutex);
  #line 417 
  r = zd_ioread32_locked(chip,& value,(unsigned short)63511);
  #line 418 
  cif_mutex_unlock_mutex_of_zd_chip_1(& chip->mutex);
  #line 419 
  if (r != 0) 
              #line 420 
              return r;
  #line 422 
  *regdomain = (unsigned char)(value >> 16);
  #line 423 
  dev_printk((char *)"\001",& (chip->usb.intf)->dev,(char *)"%s() ",(char *)"zd_read_regdomain",(int)*regdomain);
  #line 425 
  return 0;
}

#line 428  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c"
static int read_values(struct zd_chip *chip, u8 *values, size_t count, zd_addr_t e2p_addr, u32 guard)
{
  #line 431 
  int r;
  #line 432 
  int i;
  #line 433 
  u32 v;
  #line 435 
  int tmp_5;
  #line 435 
  if (mutex_is_locked(& chip->mutex)) 
                                      #line 435 
                                      tmp_5 = 0; else 
                                                      #line 435 
                                                      tmp_5 = 1;
  #line 435 
  if ((long)tmp_5 != 0L) {
    {
      #line 435 
      bool branch;
      #line 435 
      struct _ddebug __UNIQUE_ID_ddebug572 = {.modname = (char *)"zd1211rw", .function = (char *)"read_values", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c", .format = (char *)"%s:%d ASSERT %s VIOLATED!\n", .lineno = (unsigned int)435U, .flags = (unsigned int)1U, .key = {.dd_key_true = {.key = {.enabled = {.counter = 1}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)1}}}}};
      {
        #line 435 
        int tmp_0;
        #line 435 
        if ((int)arch_static_branch(& __UNIQUE_ID_ddebug572.key.dd_key_true.key,
                         (_Bool)1) != 0) 
          #line 435 
          tmp_0 = 0; else 
                          #line 435 
                          tmp_0 = 1;
        #line 435 
        branch = (_Bool)(tmp_0 != 0);
        }
      #line 435 
      if ((long)((long)((int)branch != 0)) != 0L) 
                                                  #line 435 
                                                  __dynamic_pr_debug(& __UNIQUE_ID_ddebug572,(char *)"%s:%d ASSERT %s VIOLATED!\n",(char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c",435,(char *)"mutex_is_locked(&chip->mutex)");
    }
    #line 435 
    dump_stack();
  }
  #line 436 
  i = 0;
  #line 436 
  while (1) {
    #line 437 
    r = zd_ioread32_locked(chip,& v,(unsigned short)((int)((unsigned short)(i / 2)) + (int)e2p_addr));
    #line 439 
    if (r != 0) 
                #line 440 
                return r;
    #line 441 
    v -= guard;
    #line 442 
    if ((unsigned long)(i + 4) < count) {
      #line 443 
      int tmp_6;
      #line 444 
      int tmp_7;
      #line 445 
      int tmp_8;
      #line 446 
      int tmp_9;
      #line 443 
      tmp_6 = i;
      #line 443 
      i ++;
      #line 443 
      *(values + (unsigned long)tmp_6) = (unsigned char)v;
      #line 444 
      tmp_7 = i;
      #line 444 
      i ++;
      #line 444 
      *(values + (unsigned long)tmp_7) = (unsigned char)(v >> 8);
      #line 445 
      tmp_8 = i;
      #line 445 
      i ++;
      #line 445 
      *(values + (unsigned long)tmp_8) = (unsigned char)(v >> 16);
      #line 446 
      tmp_9 = i;
      #line 446 
      i ++;
      #line 446 
      *(values + (unsigned long)tmp_9) = (unsigned char)(v >> 24);
      #line 447 
      goto __Cont;
    }
    #line 449 
    while ((unsigned long)i < count) {
      #line 450 
      *(values + (unsigned long)i) = (unsigned char)(v >> (i % 3) * 8);
      #line 449 
      i ++;
    }
    #line 451 
    return 0;
    #line 436 
    __Cont: 
            #line 436 
    ;
  }
}

#line 455  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c"
static int read_pwr_cal_values(struct zd_chip *chip)
{
  #line 457 
  return read_values(chip,(u8 *)(& chip->pwr_cal_values),14UL,
                  (unsigned short)63519,0U);
}

#line 462  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c"
static int read_pwr_int_values(struct zd_chip *chip)
{
  #line 464 
  return read_values(chip,(u8 *)(& chip->pwr_int_values),14UL,
                  (unsigned short)63527,8U);
}

#line 469  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c"
static int read_ofdm_cal_values(struct zd_chip *chip)
{
  #line 471 
  int r;
  #line 472 
  int i;
  #line 473 
  zd_addr_t addresses[3U] = {(unsigned short)63551U, (unsigned short)63567U, (unsigned short)63583U};
  #line 479 
  i = 0;
  #line 479 
  while (i <= 2) {
    #line 480 
    r = read_values(chip,(u8 *)(& chip->ofdm_cal_values[i]),14UL,(unsigned short)((int)addresses[i]),0U);
    #line 482 
    if (r != 0) 
                #line 483 
                return r;
    #line 479 
    i ++;
  }
  #line 485 
  return 0;
}

#line 488  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c"
static int read_cal_int_tables(struct zd_chip *chip)
{
  #line 490 
  int r;
  #line 492 
  r = read_pwr_cal_values(chip);
  #line 493 
  if (r != 0) 
              #line 494 
              return r;
  #line 495 
  r = read_pwr_int_values(chip);
  #line 496 
  if (r != 0) 
              #line 497 
              return r;
  #line 498 
  r = read_ofdm_cal_values(chip);
  #line 499 
  if (r != 0) 
              #line 500 
              return r;
  #line 501 
  return 0;
}

#line 505  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c"
int zd_chip_lock_phy_regs(struct zd_chip *chip)
{
  #line 507 
  int r;
  #line 508 
  u32 tmp;
  #line 510 
  int tmp_6;
  #line 510 
  if (mutex_is_locked(& chip->mutex)) 
                                      #line 510 
                                      tmp_6 = 0; else 
                                                      #line 510 
                                                      tmp_6 = 1;
  #line 510 
  if ((long)tmp_6 != 0L) {
    {
      #line 510 
      bool branch;
      #line 510 
      struct _ddebug __UNIQUE_ID_ddebug573 = {.modname = (char *)"zd1211rw", .function = (char *)"zd_chip_lock_phy_regs", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c", .format = (char *)"%s:%d ASSERT %s VIOLATED!\n", .lineno = (unsigned int)510U, .flags = (unsigned int)1U, .key = {.dd_key_true = {.key = {.enabled = {.counter = 1}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)1}}}}};
      {
        #line 510 
        int tmp_1;
        #line 510 
        if ((int)arch_static_branch(& __UNIQUE_ID_ddebug573.key.dd_key_true.key,
                           (_Bool)1) != 0) 
          #line 510 
          tmp_1 = 0; else 
                          #line 510 
                          tmp_1 = 1;
        #line 510 
        branch = (_Bool)(tmp_1 != 0);
        }
      #line 510 
      if ((long)((long)((int)branch != 0)) != 0L) 
                                                  #line 510 
                                                  __dynamic_pr_debug(& __UNIQUE_ID_ddebug573,(char *)"%s:%d ASSERT %s VIOLATED!\n",(char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c",510,(char *)"mutex_is_locked(&chip->mutex)");
    }
    #line 510 
    dump_stack();
  }
  #line 511 
  r = zd_ioread32_locked(chip,& tmp,(unsigned short)38528);
  #line 512 
  if (r != 0) {
    #line 513 
    _dev_err(& (chip->usb.intf)->dev,(char *)"error ioread32(CR_REG1): %d\n",r);
    #line 514 
    return r;
  }
  #line 517 
  tmp &= 4294967167U;
  #line 519 
  r = zd_iowrite32_locked(chip,tmp,(unsigned short)38528);
  #line 520 
  if (r != 0) 
              #line 521 
              _dev_err(& (chip->usb.intf)->dev,(char *)"error iowrite32(CR_REG1): %d\n",r);
  #line 522 
  return r;
}

#line 525  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c"
int zd_chip_unlock_phy_regs(struct zd_chip *chip)
{
  #line 527 
  int r;
  #line 528 
  u32 tmp;
  #line 530 
  int tmp_6;
  #line 530 
  if (mutex_is_locked(& chip->mutex)) 
                                      #line 530 
                                      tmp_6 = 0; else 
                                                      #line 530 
                                                      tmp_6 = 1;
  #line 530 
  if ((long)tmp_6 != 0L) {
    {
      #line 530 
      bool branch;
      #line 530 
      struct _ddebug __UNIQUE_ID_ddebug574 = {.modname = (char *)"zd1211rw", .function = (char *)"zd_chip_unlock_phy_regs", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c", .format = (char *)"%s:%d ASSERT %s VIOLATED!\n", .lineno = (unsigned int)530U, .flags = (unsigned int)1U, .key = {.dd_key_true = {.key = {.enabled = {.counter = 1}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)1}}}}};
      {
        #line 530 
        int tmp_1;
        #line 530 
        if ((int)arch_static_branch(& __UNIQUE_ID_ddebug574.key.dd_key_true.key,
                           (_Bool)1) != 0) 
          #line 530 
          tmp_1 = 0; else 
                          #line 530 
                          tmp_1 = 1;
        #line 530 
        branch = (_Bool)(tmp_1 != 0);
        }
      #line 530 
      if ((long)((long)((int)branch != 0)) != 0L) 
                                                  #line 530 
                                                  __dynamic_pr_debug(& __UNIQUE_ID_ddebug574,(char *)"%s:%d ASSERT %s VIOLATED!\n",(char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c",530,(char *)"mutex_is_locked(&chip->mutex)");
    }
    #line 530 
    dump_stack();
  }
  #line 531 
  r = zd_ioread32_locked(chip,& tmp,(unsigned short)38528);
  #line 532 
  if (r != 0) {
    #line 533 
    _dev_err(& (chip->usb.intf)->dev,(char *)"error ioread32(CR_REG1): %d\n",r);
    #line 535 
    return r;
  }
  #line 538 
  tmp |= 128U;
  #line 540 
  r = zd_iowrite32_locked(chip,tmp,(unsigned short)38528);
  #line 541 
  if (r != 0) 
              #line 542 
              _dev_err(& (chip->usb.intf)->dev,(char *)"error iowrite32(CR_REG1): %d\n",r);
  #line 543 
  return r;
}

#line 547  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c"
static int patch_cr157(struct zd_chip *chip)
{
  #line 549 
  int r;
  #line 550 
  u16 value;
  #line 552 
  if ((unsigned int)chip->patch_cr157 == 0U) 
                                             #line 553 
                                             return 0;
  #line 555 
  r = zd_ioread16_locked(chip,& value,(unsigned short)63548);
  #line 556 
  if (r != 0) 
              #line 557 
              return r;
  #line 559 
  dev_printk((char *)"\001",& (chip->usb.intf)->dev,(char *)"%s() ",(char *)"patch_cr157",(int)value >> 8);
  #line 560 
  return zd_iowrite32_locked(chip,(unsigned int)((int)value >> 8),
                          (unsigned short)37492);
}

#line 568  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c"
static int patch_6m_band_edge(struct zd_chip *chip, u8 channel)
{
  #line 570 
  int tmp_5;
  #line 570 
  if (mutex_is_locked(& chip->mutex)) 
                                      #line 570 
                                      tmp_5 = 0; else 
                                                      #line 570 
                                                      tmp_5 = 1;
  #line 570 
  if ((long)tmp_5 != 0L) {
    {
      #line 570 
      bool branch;
      #line 570 
      struct _ddebug __UNIQUE_ID_ddebug575 = {.modname = (char *)"zd1211rw", .function = (char *)"patch_6m_band_edge", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c", .format = (char *)"%s:%d ASSERT %s VIOLATED!\n", .lineno = (unsigned int)570U, .flags = (unsigned int)1U, .key = {.dd_key_true = {.key = {.enabled = {.counter = 1}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)1}}}}};
      {
        #line 570 
        int tmp_0;
        #line 570 
        if ((int)arch_static_branch(& __UNIQUE_ID_ddebug575.key.dd_key_true.key,
                         (_Bool)1) != 0) 
          #line 570 
          tmp_0 = 0; else 
                          #line 570 
                          tmp_0 = 1;
        #line 570 
        branch = (_Bool)(tmp_0 != 0);
        }
      #line 570 
      if ((long)((long)((int)branch != 0)) != 0L) 
                                                  #line 570 
                                                  __dynamic_pr_debug(& __UNIQUE_ID_ddebug575,(char *)"%s:%d ASSERT %s VIOLATED!\n",(char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c",570,(char *)"mutex_is_locked(&chip->mutex)");
    }
    #line 570 
    dump_stack();
  }
  #line 571 
  if ((unsigned int)chip->patch_6m_band_edge == 0U) 
                                                    #line 572 
                                                    return 0;
  #line 574 
  return zd_rf_patch_6m_band_edge(& chip->rf,(unsigned char)((int)channel));
}

#line 579  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c"
int zd_chip_generic_patch_6m_band(struct zd_chip *chip, int channel)
{
  #line 581 
  struct zd_ioreq16 ioreqs[4U] = {{.addr = (unsigned short)37376U, .value = (unsigned short)20U}, {.addr = (unsigned short)37380U, .value = (unsigned short)18U}, {.addr = (unsigned short)37384U, .value = (unsigned short)16U}, {.addr = (unsigned short)37052U, .value = (unsigned short)30U}};
  #line 587 
  if (channel == 1 || channel == 11) 
                                     #line 588 
                                     ioreqs[0].value = (unsigned short)18U;
  #line 590 
  dev_printk((char *)"\001",& (chip->usb.intf)->dev,(char *)"%s() ",(char *)"zd_chip_generic_patch_6m_band",channel);
  #line 591 
  return zd_iowrite16a_locked(chip,(struct zd_ioreq16 *)(& ioreqs),4U);
}

#line 594  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c"
static int zd1211_hw_reset_phy(struct zd_chip *chip)
{
  #line 662 
  int r;
  #line 662 
  int t;
  #line 596 
  struct zd_ioreq16 ioreqs[177U] = {{.addr = (unsigned short)36864U, .value = (unsigned short)10U}, {.addr = (unsigned short)36868U, .value = (unsigned short)6U}, {.addr = (unsigned short)36872U, .value = (unsigned short)38U}, {.addr = (unsigned short)36876U, .value = (unsigned short)56U}, {.addr = (unsigned short)36896U, .value = (unsigned short)128U}, {.addr = (unsigned short)36900U, .value = (unsigned short)160U}, {.addr = (unsigned short)36904U, .value = (unsigned short)129U}, {.addr = (unsigned short)36908U, .value = (unsigned short)0U}, {.addr = (unsigned short)36912U, .value = (unsigned short)127U}, {.addr = (unsigned short)36916U, .value = (unsigned short)140U}, {.addr = (unsigned short)36920U, .value = (unsigned short)128U}, {.addr = (unsigned short)36924U, .value = (unsigned short)61U}, {.addr = (unsigned short)36928U, .value = (unsigned short)32U}, {.addr = (unsigned short)36932U, .value = (unsigned short)30U}, {.addr = (unsigned short)36936U, .value = (unsigned short)10U}, {.addr = (unsigned short)36940U, .value = (unsigned short)72U}, {.addr = (unsigned short)36944U, .value = (unsigned short)12U}, {.addr = (unsigned short)36948U, .value = (unsigned short)12U}, {.addr = (unsigned short)36952U, .value = (unsigned short)35U}, {.addr = (unsigned short)36956U, .value = (unsigned short)144U}, {.addr = (unsigned short)36960U, .value = (unsigned short)20U}, {.addr = (unsigned short)36964U, .value = (unsigned short)64U}, {.addr = (unsigned short)36968U, .value = (unsigned short)16U}, {.addr = (unsigned short)36972U, .value = (unsigned short)25U}, {.addr = (unsigned short)36976U, .value = (unsigned short)127U}, {.addr = (unsigned short)36980U, .value = (unsigned short)128U}, {.addr = (unsigned short)36984U, .value = (unsigned short)75U}, {.addr = (unsigned short)36988U, .value = (unsigned short)96U}, {.addr = (unsigned short)36992U, .value = (unsigned short)67U}, {.addr = (unsigned short)36996U, .value = (unsigned short)8U}, {.addr = (unsigned short)37000U, .value = (unsigned short)6U}, {.addr = (unsigned short)37004U, .value = (unsigned short)10U}, {.addr = (unsigned short)37008U, .value = (unsigned short)0U}, {.addr = (unsigned short)37012U, .value = (unsigned short)0U}, {.addr = (unsigned short)37016U, .value = (unsigned short)56U}, {.addr = (unsigned short)37020U, .value = (unsigned short)12U}, {.addr = (unsigned short)37024U, .value = (unsigned short)132U}, {.addr = (unsigned short)37028U, .value = (unsigned short)42U}, {.addr = (unsigned short)37032U, .value = (unsigned short)128U}, {.addr = (unsigned short)37036U, .value = (unsigned short)16U}, {.addr = (unsigned short)37040U, .value = (unsigned short)18U}, {.addr = (unsigned short)37048U, .value = (unsigned short)255U}, {.addr = (unsigned short)37052U, .value = (unsigned short)30U}, {.addr = (unsigned short)37056U, .value = (unsigned short)38U}, {.addr = (unsigned short)37060U, .value = (unsigned short)91U}, {.addr = (unsigned short)37120U, .value = (unsigned short)208U}, {.addr = (unsigned short)37124U, .value = (unsigned short)4U}, {.addr = (unsigned short)37128U, .value = (unsigned short)88U}, {.addr = (unsigned short)37132U, .value = (unsigned short)201U}, {.addr = (unsigned short)37136U, .value = (unsigned short)136U}, {.addr = (unsigned short)37140U, .value = (unsigned short)65U}, {.addr = (unsigned short)37144U, .value = (unsigned short)35U}, {.addr = (unsigned short)37148U, .value = (unsigned short)16U}, {.addr = (unsigned short)37152U, .value = (unsigned short)255U}, {.addr = (unsigned short)37156U, .value = (unsigned short)50U}, {.addr = (unsigned short)37160U, .value = (unsigned short)48U}, {.addr = (unsigned short)37164U, .value = (unsigned short)101U}, {.addr = (unsigned short)37168U, .value = (unsigned short)65U}, {.addr = (unsigned short)37172U, .value = (unsigned short)27U}, {.addr = (unsigned short)37176U, .value = (unsigned short)48U}, {.addr = (unsigned short)37180U, .value = (unsigned short)104U}, {.addr = (unsigned short)37184U, .value = (unsigned short)100U}, {.addr = (unsigned short)37188U, .value = (unsigned short)100U}, {.addr = (unsigned short)37192U, .value = (unsigned short)0U}, {.addr = (unsigned short)37196U, .value = (unsigned short)0U}, {.addr = (unsigned short)37200U, .value = (unsigned short)0U}, {.addr = (unsigned short)37204U, .value = (unsigned short)2U}, {.addr = (unsigned short)37208U, .value = (unsigned short)0U}, {.addr = (unsigned short)37212U, .value = (unsigned short)0U}, {.addr = (unsigned short)37216U, .value = (unsigned short)255U}, {.addr = (unsigned short)37220U, .value = (unsigned short)252U}, {.addr = (unsigned short)37224U, .value = (unsigned short)0U}, {.addr = (unsigned short)37228U, .value = (unsigned short)0U}, {.addr = (unsigned short)37232U, .value = (unsigned short)0U}, {.addr = (unsigned short)37236U, .value = (unsigned short)8U}, {.addr = (unsigned short)37240U, .value = (unsigned short)0U}, {.addr = (unsigned short)37244U, .value = (unsigned short)0U}, {.addr = (unsigned short)37248U, .value = (unsigned short)255U}, {.addr = (unsigned short)37252U, .value = (unsigned short)231U}, {.addr = (unsigned short)37256U, .value = (unsigned short)0U}, {.addr = (unsigned short)37260U, .value = (unsigned short)0U}, {.addr = (unsigned short)37264U, .value = (unsigned short)0U}, {.addr = (unsigned short)37268U, .value = (unsigned short)174U}, {.addr = (unsigned short)37272U, .value = (unsigned short)2U}, {.addr = (unsigned short)37276U, .value = (unsigned short)0U}, {.addr = (unsigned short)37280U, .value = (unsigned short)3U}, {.addr = (unsigned short)37284U, .value = (unsigned short)101U}, {.addr = (unsigned short)37288U, .value = (unsigned short)4U}, {.addr = (unsigned short)37292U, .value = (unsigned short)0U}, {.addr = (unsigned short)37296U, .value = (unsigned short)10U}, {.addr = (unsigned short)37300U, .value = (unsigned short)170U}, {.addr = (unsigned short)37304U, .value = (unsigned short)170U}, {.addr = (unsigned short)37308U, .value = (unsigned short)37U}, {.addr = (unsigned short)37312U, .value = (unsigned short)37U}, {.addr = (unsigned short)37316U, .value = (unsigned short)0U}, {.addr = (unsigned short)37340U, .value = (unsigned short)30U}, {.addr = (unsigned short)37364U, .value = (unsigned short)144U}, {.addr = (unsigned short)37368U, .value = (unsigned short)0U}, {.addr = (unsigned short)37372U, .value = (unsigned short)0U}, {.addr = (unsigned short)0, .value = (unsigned short)0}, {.addr = (unsigned short)36880U, .value = (unsigned short)0U}, {.addr = (unsigned short)36884U, .value = (unsigned short)0U}, {.addr = (unsigned short)36888U, .value = (unsigned short)0U}, {.addr = (unsigned short)36892U, .value = (unsigned short)0U}, {.addr = (unsigned short)36900U, .value = (unsigned short)32U}, {.addr = (unsigned short)36912U, .value = (unsigned short)240U}, {.addr = (unsigned short)36944U, .value = (unsigned short)14U}, {.addr = (unsigned short)36948U, .value = (unsigned short)14U}, {.addr = (unsigned short)36972U, .value = (unsigned short)16U}, {.addr = (unsigned short)37040U, .value = (unsigned short)51U}, {.addr = (unsigned short)37052U, .value = (unsigned short)30U}, {.addr = (unsigned short)37196U, .value = (unsigned short)36U}, {.addr = (unsigned short)37200U, .value = (unsigned short)4U}, {.addr = (unsigned short)37204U, .value = (unsigned short)0U}, {.addr = (unsigned short)37208U, .value = (unsigned short)12U}, {.addr = (unsigned short)37212U, .value = (unsigned short)18U}, {.addr = (unsigned short)37216U, .value = (unsigned short)12U}, {.addr = (unsigned short)37220U, .value = (unsigned short)0U}, {.addr = (unsigned short)37224U, .value = (unsigned short)16U}, {.addr = (unsigned short)37228U, .value = (unsigned short)8U}, {.addr = (unsigned short)37236U, .value = (unsigned short)0U}, {.addr = (unsigned short)37240U, .value = (unsigned short)1U}, {.addr = (unsigned short)37244U, .value = (unsigned short)0U}, {.addr = (unsigned short)37248U, .value = (unsigned short)80U}, {.addr = (unsigned short)37252U, .value = (unsigned short)55U}, {.addr = (unsigned short)37256U, .value = (unsigned short)53U}, {.addr = (unsigned short)37268U, .value = (unsigned short)19U}, {.addr = (unsigned short)37272U, .value = (unsigned short)39U}, {.addr = (unsigned short)37276U, .value = (unsigned short)39U}, {.addr = (unsigned short)37280U, .value = (unsigned short)24U}, {.addr = (unsigned short)37284U, .value = (unsigned short)18U}, {.addr = (unsigned short)37300U, .value = (unsigned short)39U}, {.addr = (unsigned short)37304U, .value = (unsigned short)39U}, {.addr = (unsigned short)37308U, .value = (unsigned short)39U}, {.addr = (unsigned short)37312U, .value = (unsigned short)39U}, {.addr = (unsigned short)37316U, .value = (unsigned short)39U}, {.addr = (unsigned short)37320U, .value = (unsigned short)39U}, {.addr = (unsigned short)37324U, .value = (unsigned short)38U}, {.addr = (unsigned short)37328U, .value = (unsigned short)36U}, {.addr = (unsigned short)37332U, .value = (unsigned short)252U}, {.addr = (unsigned short)37336U, .value = (unsigned short)250U}, {.addr = (unsigned short)37344U, .value = (unsigned short)79U}, {.addr = (unsigned short)37364U, .value = (unsigned short)170U}, {.addr = (unsigned short)37372U, .value = (unsigned short)3U}, {.addr = (unsigned short)37376U, .value = (unsigned short)20U}, {.addr = (unsigned short)37380U, .value = (unsigned short)18U}, {.addr = (unsigned short)37384U, .value = (unsigned short)16U}, {.addr = (unsigned short)37388U, .value = (unsigned short)12U}, {.addr = (unsigned short)37408U, .value = (unsigned short)223U}, {.addr = (unsigned short)37412U, .value = (unsigned short)64U}, {.addr = (unsigned short)37416U, .value = (unsigned short)160U}, {.addr = (unsigned short)37420U, .value = (unsigned short)176U}, {.addr = (unsigned short)37424U, .value = (unsigned short)153U}, {.addr = (unsigned short)37428U, .value = (unsigned short)130U}, {.addr = (unsigned short)37432U, .value = (unsigned short)84U}, {.addr = (unsigned short)37436U, .value = (unsigned short)28U}, {.addr = (unsigned short)37440U, .value = (unsigned short)108U}, {.addr = (unsigned short)37452U, .value = (unsigned short)7U}, {.addr = (unsigned short)37456U, .value = (unsigned short)76U}, {.addr = (unsigned short)37460U, .value = (unsigned short)80U}, {.addr = (unsigned short)37464U, .value = (unsigned short)14U}, {.addr = (unsigned short)37468U, .value = (unsigned short)24U}, {.addr = (unsigned short)37504U, .value = (unsigned short)254U}, {.addr = (unsigned short)37508U, .value = (unsigned short)238U}, {.addr = (unsigned short)37512U, .value = (unsigned short)170U}, {.addr = (unsigned short)37516U, .value = (unsigned short)250U}, {.addr = (unsigned short)37520U, .value = (unsigned short)250U}, {.addr = (unsigned short)37524U, .value = (unsigned short)234U}, {.addr = (unsigned short)37528U, .value = (unsigned short)190U}, {.addr = (unsigned short)37532U, .value = (unsigned short)190U}, {.addr = (unsigned short)37536U, .value = (unsigned short)106U}, {.addr = (unsigned short)37540U, .value = (unsigned short)186U}, {.addr = (unsigned short)37544U, .value = (unsigned short)186U}, {.addr = (unsigned short)37548U, .value = (unsigned short)186U}, {.addr = (unsigned short)37680U, .value = (unsigned short)125U}, {.addr = (unsigned short)0, .value = (unsigned short)0}, {.addr = (unsigned short)37676U, .value = (unsigned short)48U}};
  #line 664 
  dev_printk((char *)"\001",& (chip->usb.intf)->dev,(char *)"%s() ",(char *)"zd1211_hw_reset_phy");
  #line 666 
  r = zd_chip_lock_phy_regs(chip);
  #line 667 
  if (r != 0) 
              #line 668 
              goto out;
  #line 670 
  r = zd_iowrite16a_locked(chip,(struct zd_ioreq16 *)(& ioreqs),177U);
  #line 671 
  if (r != 0) 
              #line 672 
              goto unlock;
  #line 674 
  r = patch_cr157(chip);
  #line 675 
  unlock: 
          #line 675 
  ;
  #line 676 
  t = zd_chip_unlock_phy_regs(chip);
  #line 677 
  if (t != 0 && r == 0) 
                        #line 678 
                        r = t;
  #line 679 
  out: 
       #line 679 
  ;
  #line 680 
  return r;
}

#line 683  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c"
static int zd1211b_hw_reset_phy(struct zd_chip *chip)
{
  #line 744 
  int r;
  #line 744 
  int t;
  #line 685 
  struct zd_ioreq16 ioreqs[138U] = {{.addr = (unsigned short)36864U, .value = (unsigned short)20U}, {.addr = (unsigned short)36868U, .value = (unsigned short)6U}, {.addr = (unsigned short)36872U, .value = (unsigned short)38U}, {.addr = (unsigned short)36876U, .value = (unsigned short)56U}, {.addr = (unsigned short)36896U, .value = (unsigned short)128U}, {.addr = (unsigned short)36900U, .value = (unsigned short)224U}, {.addr = (unsigned short)36904U, .value = (unsigned short)129U}, {.addr = (unsigned short)36908U, .value = (unsigned short)0U}, {.addr = (unsigned short)36912U, .value = (unsigned short)240U}, {.addr = (unsigned short)36916U, .value = (unsigned short)140U}, {.addr = (unsigned short)36920U, .value = (unsigned short)128U}, {.addr = (unsigned short)36924U, .value = (unsigned short)61U}, {.addr = (unsigned short)36928U, .value = (unsigned short)32U}, {.addr = (unsigned short)36932U, .value = (unsigned short)30U}, {.addr = (unsigned short)36936U, .value = (unsigned short)10U}, {.addr = (unsigned short)36940U, .value = (unsigned short)72U}, {.addr = (unsigned short)36944U, .value = (unsigned short)16U}, {.addr = (unsigned short)36948U, .value = (unsigned short)14U}, {.addr = (unsigned short)36952U, .value = (unsigned short)35U}, {.addr = (unsigned short)36956U, .value = (unsigned short)144U}, {.addr = (unsigned short)36960U, .value = (unsigned short)20U}, {.addr = (unsigned short)36964U, .value = (unsigned short)64U}, {.addr = (unsigned short)36968U, .value = (unsigned short)16U}, {.addr = (unsigned short)36972U, .value = (unsigned short)16U}, {.addr = (unsigned short)36976U, .value = (unsigned short)127U}, {.addr = (unsigned short)36980U, .value = (unsigned short)128U}, {.addr = (unsigned short)36984U, .value = (unsigned short)75U}, {.addr = (unsigned short)36988U, .value = (unsigned short)96U}, {.addr = (unsigned short)36992U, .value = (unsigned short)67U}, {.addr = (unsigned short)36996U, .value = (unsigned short)8U}, {.addr = (unsigned short)37000U, .value = (unsigned short)6U}, {.addr = (unsigned short)37004U, .value = (unsigned short)10U}, {.addr = (unsigned short)37008U, .value = (unsigned short)0U}, {.addr = (unsigned short)37012U, .value = (unsigned short)0U}, {.addr = (unsigned short)37016U, .value = (unsigned short)56U}, {.addr = (unsigned short)37020U, .value = (unsigned short)12U}, {.addr = (unsigned short)37024U, .value = (unsigned short)132U}, {.addr = (unsigned short)37028U, .value = (unsigned short)42U}, {.addr = (unsigned short)37032U, .value = (unsigned short)128U}, {.addr = (unsigned short)37036U, .value = (unsigned short)16U}, {.addr = (unsigned short)37040U, .value = (unsigned short)51U}, {.addr = (unsigned short)37048U, .value = (unsigned short)255U}, {.addr = (unsigned short)37052U, .value = (unsigned short)30U}, {.addr = (unsigned short)37056U, .value = (unsigned short)38U}, {.addr = (unsigned short)37060U, .value = (unsigned short)91U}, {.addr = (unsigned short)37120U, .value = (unsigned short)208U}, {.addr = (unsigned short)37124U, .value = (unsigned short)4U}, {.addr = (unsigned short)37128U, .value = (unsigned short)88U}, {.addr = (unsigned short)37132U, .value = (unsigned short)201U}, {.addr = (unsigned short)37136U, .value = (unsigned short)136U}, {.addr = (unsigned short)37140U, .value = (unsigned short)65U}, {.addr = (unsigned short)37144U, .value = (unsigned short)35U}, {.addr = (unsigned short)37148U, .value = (unsigned short)16U}, {.addr = (unsigned short)37152U, .value = (unsigned short)255U}, {.addr = (unsigned short)37156U, .value = (unsigned short)50U}, {.addr = (unsigned short)37160U, .value = (unsigned short)48U}, {.addr = (unsigned short)37164U, .value = (unsigned short)101U}, {.addr = (unsigned short)37168U, .value = (unsigned short)65U}, {.addr = (unsigned short)37172U, .value = (unsigned short)27U}, {.addr = (unsigned short)37176U, .value = (unsigned short)48U}, {.addr = (unsigned short)37180U, .value = (unsigned short)240U}, {.addr = (unsigned short)37184U, .value = (unsigned short)100U}, {.addr = (unsigned short)37188U, .value = (unsigned short)100U}, {.addr = (unsigned short)37192U, .value = (unsigned short)0U}, {.addr = (unsigned short)37196U, .value = (unsigned short)36U}, {.addr = (unsigned short)37200U, .value = (unsigned short)4U}, {.addr = (unsigned short)37204U, .value = (unsigned short)0U}, {.addr = (unsigned short)37208U, .value = (unsigned short)12U}, {.addr = (unsigned short)37212U, .value = (unsigned short)18U}, {.addr = (unsigned short)37216U, .value = (unsigned short)12U}, {.addr = (unsigned short)37220U, .value = (unsigned short)0U}, {.addr = (unsigned short)37224U, .value = (unsigned short)88U}, {.addr = (unsigned short)37228U, .value = (unsigned short)4U}, {.addr = (unsigned short)37232U, .value = (unsigned short)0U}, {.addr = (unsigned short)37236U, .value = (unsigned short)0U}, {.addr = (unsigned short)37240U, .value = (unsigned short)1U}, {.addr = (unsigned short)37244U, .value = (unsigned short)32U}, {.addr = (unsigned short)37248U, .value = (unsigned short)80U}, {.addr = (unsigned short)37252U, .value = (unsigned short)55U}, {.addr = (unsigned short)37256U, .value = (unsigned short)53U}, {.addr = (unsigned short)37260U, .value = (unsigned short)0U}, {.addr = (unsigned short)37264U, .value = (unsigned short)1U}, {.addr = (unsigned short)37268U, .value = (unsigned short)19U}, {.addr = (unsigned short)37272U, .value = (unsigned short)39U}, {.addr = (unsigned short)37276U, .value = (unsigned short)39U}, {.addr = (unsigned short)37280U, .value = (unsigned short)24U}, {.addr = (unsigned short)37284U, .value = (unsigned short)18U}, {.addr = (unsigned short)37288U, .value = (unsigned short)4U}, {.addr = (unsigned short)37292U, .value = (unsigned short)0U}, {.addr = (unsigned short)37296U, .value = (unsigned short)10U}, {.addr = (unsigned short)37300U, .value = (unsigned short)39U}, {.addr = (unsigned short)37304U, .value = (unsigned short)39U}, {.addr = (unsigned short)37308U, .value = (unsigned short)39U}, {.addr = (unsigned short)37312U, .value = (unsigned short)39U}, {.addr = (unsigned short)37316U, .value = (unsigned short)39U}, {.addr = (unsigned short)37320U, .value = (unsigned short)39U}, {.addr = (unsigned short)37324U, .value = (unsigned short)38U}, {.addr = (unsigned short)37328U, .value = (unsigned short)36U}, {.addr = (unsigned short)37332U, .value = (unsigned short)252U}, {.addr = (unsigned short)37336U, .value = (unsigned short)250U}, {.addr = (unsigned short)37340U, .value = (unsigned short)30U}, {.addr = (unsigned short)37364U, .value = (unsigned short)144U}, {.addr = (unsigned short)37368U, .value = (unsigned short)0U}, {.addr = (unsigned short)37372U, .value = (unsigned short)0U}, {.addr = (unsigned short)37376U, .value = (unsigned short)20U}, {.addr = (unsigned short)37380U, .value = (unsigned short)18U}, {.addr = (unsigned short)37384U, .value = (unsigned short)16U}, {.addr = (unsigned short)37388U, .value = (unsigned short)12U}, {.addr = (unsigned short)37408U, .value = (unsigned short)223U}, {.addr = (unsigned short)37412U, .value = (unsigned short)160U}, {.addr = (unsigned short)37416U, .value = (unsigned short)168U}, {.addr = (unsigned short)37420U, .value = (unsigned short)180U}, {.addr = (unsigned short)37424U, .value = (unsigned short)152U}, {.addr = (unsigned short)37428U, .value = (unsigned short)130U}, {.addr = (unsigned short)37432U, .value = (unsigned short)83U}, {.addr = (unsigned short)37436U, .value = (unsigned short)28U}, {.addr = (unsigned short)37440U, .value = (unsigned short)108U}, {.addr = (unsigned short)37452U, .value = (unsigned short)7U}, {.addr = (unsigned short)37456U, .value = (unsigned short)64U}, {.addr = (unsigned short)37460U, .value = (unsigned short)64U}, {.addr = (unsigned short)37464U, .value = (unsigned short)20U}, {.addr = (unsigned short)37468U, .value = (unsigned short)24U}, {.addr = (unsigned short)37500U, .value = (unsigned short)112U}, {.addr = (unsigned short)37504U, .value = (unsigned short)254U}, {.addr = (unsigned short)37508U, .value = (unsigned short)238U}, {.addr = (unsigned short)37512U, .value = (unsigned short)170U}, {.addr = (unsigned short)37516U, .value = (unsigned short)250U}, {.addr = (unsigned short)37520U, .value = (unsigned short)250U}, {.addr = (unsigned short)37524U, .value = (unsigned short)234U}, {.addr = (unsigned short)37528U, .value = (unsigned short)190U}, {.addr = (unsigned short)37532U, .value = (unsigned short)190U}, {.addr = (unsigned short)37536U, .value = (unsigned short)106U}, {.addr = (unsigned short)37540U, .value = (unsigned short)186U}, {.addr = (unsigned short)37544U, .value = (unsigned short)186U}, {.addr = (unsigned short)37548U, .value = (unsigned short)186U}, {.addr = (unsigned short)37680U, .value = (unsigned short)125U}, {.addr = (unsigned short)0, .value = (unsigned short)0}, {.addr = (unsigned short)37676U, .value = (unsigned short)48U}};
  #line 746 
  dev_printk((char *)"\001",& (chip->usb.intf)->dev,(char *)"%s() ",(char *)"zd1211b_hw_reset_phy");
  #line 748 
  r = zd_chip_lock_phy_regs(chip);
  #line 749 
  if (r != 0) 
              #line 750 
              goto out;
  #line 752 
  r = zd_iowrite16a_locked(chip,(struct zd_ioreq16 *)(& ioreqs),138U);
  #line 753 
  t = zd_chip_unlock_phy_regs(chip);
  #line 754 
  if (t != 0 && r == 0) 
                        #line 755 
                        r = t;
  #line 756 
  out: 
       #line 756 
  ;
  #line 757 
  return r;
}

#line 760  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c"
static int hw_reset_phy(struct zd_chip *chip)
{
  #line 762 
  int tmp_2;
  #line 762 
  if (zd_chip_is_zd1211b(chip) != 0) 
                                     #line 762 
                                     tmp_2 = zd1211b_hw_reset_phy(chip); else 
                                                                    #line 762 
                                                                    tmp_2 = zd1211_hw_reset_phy(chip);
  #line 762 
  return tmp_2;
}

#line 766  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c"
static int zd1211_hw_init_hmac(struct zd_chip *chip)
{
  #line 774 
  int tmp_5;
  #line 768 
  struct zd_ioreq32 ioreqs[2U] = {{.addr = (unsigned short)38524U, .value = 0U}, {.addr = (unsigned short)38464U, .value = 788032U}};
  #line 773 
  dev_printk((char *)"\001",& (chip->usb.intf)->dev,(char *)"%s() ",(char *)"zd1211_hw_init_hmac");
  #line 774 
  if (mutex_is_locked(& chip->mutex)) 
                                      #line 774 
                                      tmp_5 = 0; else 
                                                      #line 774 
                                                      tmp_5 = 1;
  #line 774 
  if ((long)tmp_5 != 0L) {
    {
      #line 774 
      bool branch;
      #line 774 
      struct _ddebug __UNIQUE_ID_ddebug576 = {.modname = (char *)"zd1211rw", .function = (char *)"zd1211_hw_init_hmac", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c", .format = (char *)"%s:%d ASSERT %s VIOLATED!\n", .lineno = (unsigned int)774U, .flags = (unsigned int)1U, .key = {.dd_key_true = {.key = {.enabled = {.counter = 1}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)1}}}}};
      {
        #line 774 
        int tmp_0;
        #line 774 
        if ((int)arch_static_branch(& __UNIQUE_ID_ddebug576.key.dd_key_true.key,
                         (_Bool)1) != 0) 
          #line 774 
          tmp_0 = 0; else 
                          #line 774 
                          tmp_0 = 1;
        #line 774 
        branch = (_Bool)(tmp_0 != 0);
        }
      #line 774 
      if ((long)((long)((int)branch != 0)) != 0L) 
                                                  #line 774 
                                                  __dynamic_pr_debug(& __UNIQUE_ID_ddebug576,(char *)"%s:%d ASSERT %s VIOLATED!\n",(char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c",774,(char *)"mutex_is_locked(&chip->mutex)");
    }
    #line 774 
    dump_stack();
  }
  #line 775 
  return zd_iowrite32a_locked(chip,(struct zd_ioreq32 *)(& ioreqs),2U);
}

#line 778  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c"
static int zd1211b_hw_init_hmac(struct zd_chip *chip)
{
  #line 793 
  int tmp_5;
  #line 780 
  struct zd_ioreq32 ioreqs[9U] = {{.addr = (unsigned short)39720U, .value = 0U}, {.addr = (unsigned short)39680U, .value = 8323135U}, {.addr = (unsigned short)39684U, .value = 8323135U}, {.addr = (unsigned short)39688U, .value = 4128799U}, {.addr = (unsigned short)39692U, .value = 2031631U}, {.addr = (unsigned short)39696U, .value = 2621480U}, {.addr = (unsigned short)39700U, .value = 9175100U}, {.addr = (unsigned short)39712U, .value = 25167908U}, {.addr = (unsigned short)38464U, .value = 790271U}};
  #line 792 
  dev_printk((char *)"\001",& (chip->usb.intf)->dev,(char *)"%s() ",(char *)"zd1211b_hw_init_hmac");
  #line 793 
  if (mutex_is_locked(& chip->mutex)) 
                                      #line 793 
                                      tmp_5 = 0; else 
                                                      #line 793 
                                                      tmp_5 = 1;
  #line 793 
  if ((long)tmp_5 != 0L) {
    {
      #line 793 
      bool branch;
      #line 793 
      struct _ddebug __UNIQUE_ID_ddebug577 = {.modname = (char *)"zd1211rw", .function = (char *)"zd1211b_hw_init_hmac", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c", .format = (char *)"%s:%d ASSERT %s VIOLATED!\n", .lineno = (unsigned int)793U, .flags = (unsigned int)1U, .key = {.dd_key_true = {.key = {.enabled = {.counter = 1}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)1}}}}};
      {
        #line 793 
        int tmp_0;
        #line 793 
        if ((int)arch_static_branch(& __UNIQUE_ID_ddebug577.key.dd_key_true.key,
                         (_Bool)1) != 0) 
          #line 793 
          tmp_0 = 0; else 
                          #line 793 
                          tmp_0 = 1;
        #line 793 
        branch = (_Bool)(tmp_0 != 0);
        }
      #line 793 
      if ((long)((long)((int)branch != 0)) != 0L) 
                                                  #line 793 
                                                  __dynamic_pr_debug(& __UNIQUE_ID_ddebug577,(char *)"%s:%d ASSERT %s VIOLATED!\n",(char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c",793,(char *)"mutex_is_locked(&chip->mutex)");
    }
    #line 793 
    dump_stack();
  }
  #line 794 
  return zd_iowrite32a_locked(chip,(struct zd_ioreq32 *)(& ioreqs),9U);
}

#line 797  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c"
static int hw_init_hmac(struct zd_chip *chip)
{
  #line 799 
  int r;
  #line 823 
  int tmp_5;
  #line 829 
  int tmp_9;
  #line 800 
  struct zd_ioreq32 ioreqs[20U] = {{.addr = (unsigned short)38544U, .value = 32U}, {.addr = (unsigned short)38152U, .value = 805308424U}, {.addr = (unsigned short)38516U, .value = 0U}, {.addr = (unsigned short)38540U, .value = 604045311U}, {.addr = (unsigned short)38436U, .value = 0U}, {.addr = (unsigned short)38440U, .value = 2147483648U}, {.addr = (unsigned short)38528U, .value = 164U}, {.addr = (unsigned short)38148U, .value = 127U}, {.addr = (unsigned short)38432U, .value = 15729665U}, {.addr = (unsigned short)38508U, .value = 0U}, {.addr = (unsigned short)38544U, .value = 128U}, {.addr = (unsigned short)38148U, .value = 0U}, {.addr = (unsigned short)38488U, .value = 256U}, {.addr = (unsigned short)38012U, .value = 112U}, {.addr = (unsigned short)38144U, .value = 268435456U}, {.addr = (unsigned short)38456U, .value = 33751555U}, {.addr = (unsigned short)38472U, .value = 1U}, {.addr = (unsigned short)38460U, .value = 276U}, {.addr = (unsigned short)38552U, .value = 172474418U}, {.addr = (unsigned short)38656U, .value = 3U}};
  #line 823 
  if (mutex_is_locked(& chip->mutex)) 
                                      #line 823 
                                      tmp_5 = 0; else 
                                                      #line 823 
                                                      tmp_5 = 1;
  #line 823 
  if ((long)tmp_5 != 0L) {
    {
      #line 823 
      bool branch;
      #line 823 
      struct _ddebug __UNIQUE_ID_ddebug578 = {.modname = (char *)"zd1211rw", .function = (char *)"hw_init_hmac", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c", .format = (char *)"%s:%d ASSERT %s VIOLATED!\n", .lineno = (unsigned int)823U, .flags = (unsigned int)1U, .key = {.dd_key_true = {.key = {.enabled = {.counter = 1}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)1}}}}};
      {
        #line 823 
        int tmp_0;
        #line 823 
        if ((int)arch_static_branch(& __UNIQUE_ID_ddebug578.key.dd_key_true.key,
                         (_Bool)1) != 0) 
          #line 823 
          tmp_0 = 0; else 
                          #line 823 
                          tmp_0 = 1;
        #line 823 
        branch = (_Bool)(tmp_0 != 0);
        }
      #line 823 
      if ((long)((long)((int)branch != 0)) != 0L) 
                                                  #line 823 
                                                  __dynamic_pr_debug(& __UNIQUE_ID_ddebug578,(char *)"%s:%d ASSERT %s VIOLATED!\n",(char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c",823,(char *)"mutex_is_locked(&chip->mutex)");
    }
    #line 823 
    dump_stack();
  }
  #line 824 
  r = zd_iowrite32a_locked(chip,(struct zd_ioreq32 *)(& ioreqs),20U);
  #line 825 
  if (r != 0) 
              #line 826 
              return r;
  #line 829 
  if (zd_chip_is_zd1211b(chip) != 0) 
                                     #line 828 
                                     tmp_9 = zd1211b_hw_init_hmac(chip); else 
                                                                    #line 829 
                                                                    tmp_9 = zd1211_hw_init_hmac(chip);
  #line 829 
  return tmp_9;
}

#line 838  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c"
static int get_aw_pt_bi(struct zd_chip *chip, struct aw_pt_bi *s)
{
  #line 840 
  int r;
  #line 843 
  u32 values[3U];
  #line 841 
  zd_addr_t aw_pt_bi_addr[3U] = {(unsigned short)38172U, (unsigned short)38180U, (unsigned short)38176U};
  #line 845 
  r = zd_ioread32v_locked(chip,(u32 *)(& values),(zd_addr_t *)(& aw_pt_bi_addr),3U);
  #line 847 
  if (r != 0) {
    #line 848 
    memset((void *)s,0,12UL);
    #line 849 
    return r;
  }
  #line 852 
  s->atim_wnd_period = values[0];
  #line 853 
  s->pre_tbtt = values[1];
  #line 854 
  s->beacon_interval = values[2];
  #line 855 
  return 0;
}

#line 858  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c"
static int set_aw_pt_bi(struct zd_chip *chip, struct aw_pt_bi *s)
{
  #line 860 
  struct zd_ioreq32 reqs[3U];
  #line 861 
  u16 b_interval = (unsigned short)s->beacon_interval;
  #line 863 
  if ((unsigned int)b_interval <= 5U) 
                                      #line 864 
                                      b_interval = (unsigned short)5U;
  #line 865 
  if (s->pre_tbtt <= 3U || s->pre_tbtt >= (unsigned int)b_interval) 
                                                                    #line 866 
                                                                    s->pre_tbtt = (unsigned int)((int)b_interval + -1);
  #line 867 
  if (s->atim_wnd_period >= s->pre_tbtt) 
                                         #line 868 
                                         s->atim_wnd_period = s->pre_tbtt + 4294967295U;
  #line 870 
  reqs[0].addr = (unsigned short)38172U;
  #line 871 
  reqs[0].value = s->atim_wnd_period;
  #line 872 
  reqs[1].addr = (unsigned short)38180U;
  #line 873 
  reqs[1].value = s->pre_tbtt;
  #line 874 
  reqs[2].addr = (unsigned short)38176U;
  #line 875 
  reqs[2].value = (s->beacon_interval & 4294901760U) | (unsigned int)b_interval;
  #line 877 
  return zd_iowrite32a_locked(chip,(struct zd_ioreq32 *)(& reqs),3U);
}

#line 881  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c"
static int set_beacon_interval(struct zd_chip *chip, u16 interval, u8 dtim_period, int type)
{
  #line 884 
  int r;
  #line 885 
  struct aw_pt_bi s;
  #line 886 
  u32 b_interval;
  #line 886 
  u32 mode_flag;
  #line 888 
  int tmp_5;
  #line 888 
  if (mutex_is_locked(& chip->mutex)) 
                                      #line 888 
                                      tmp_5 = 0; else 
                                                      #line 888 
                                                      tmp_5 = 1;
  #line 888 
  if ((long)tmp_5 != 0L) {
    {
      #line 888 
      bool branch;
      #line 888 
      struct _ddebug __UNIQUE_ID_ddebug579 = {.modname = (char *)"zd1211rw", .function = (char *)"set_beacon_interval", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c", .format = (char *)"%s:%d ASSERT %s VIOLATED!\n", .lineno = (unsigned int)888U, .flags = (unsigned int)1U, .key = {.dd_key_true = {.key = {.enabled = {.counter = 1}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)1}}}}};
      {
        #line 888 
        int tmp_0;
        #line 888 
        if ((int)arch_static_branch(& __UNIQUE_ID_ddebug579.key.dd_key_true.key,
                         (_Bool)1) != 0) 
          #line 888 
          tmp_0 = 0; else 
                          #line 888 
                          tmp_0 = 1;
        #line 888 
        branch = (_Bool)(tmp_0 != 0);
        }
      #line 888 
      if ((long)((long)((int)branch != 0)) != 0L) 
                                                  #line 888 
                                                  __dynamic_pr_debug(& __UNIQUE_ID_ddebug579,(char *)"%s:%d ASSERT %s VIOLATED!\n",(char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c",888,(char *)"mutex_is_locked(&chip->mutex)");
    }
    #line 888 
    dump_stack();
  }
  #line 890 
  if ((unsigned int)interval != 0U) 
    #line 891 
    switch (type) {
      #line 892 
      case 1: 
              #line 892 
      ;
      #line 893 
      case 7: 
              #line 893 
      ;
      #line 894 
      mode_flag = 33554432U;
      #line 895 
      break;
      #line 896 
      case 3: 
              #line 896 
      ;
      #line 897 
      mode_flag = 16777216U;
      #line 898 
      break;
      #line 899 
      default: 
               #line 899 
      ;
      #line 900 
      mode_flag = 0U;
      #line 901 
      break;
    }
  else {
    #line 904 
    dtim_period = (unsigned char)0U;
    #line 905 
    mode_flag = 0U;
  }
  #line 908 
  b_interval = ((unsigned int)((int)dtim_period << 16) | mode_flag) | (unsigned int)interval;
  #line 910 
  r = zd_iowrite32_locked(chip,b_interval,(unsigned short)38176);
  #line 911 
  if (r != 0) 
              #line 912 
              return r;
  #line 913 
  r = get_aw_pt_bi(chip,& s);
  #line 914 
  if (r != 0) 
              #line 915 
              return r;
  #line 916 
  return set_aw_pt_bi(chip,& s);
}

#line 919  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c"
int zd_set_beacon_interval(struct zd_chip *chip, u16 interval, u8 dtim_period, int type)
{
  #line 922 
  int r;
  #line 924 
  cif_mutex_lock_mutex_of_zd_chip_1(& chip->mutex);
  #line 925 
  r = set_beacon_interval(chip,(unsigned short)((int)interval),(unsigned char)((int)dtim_period),type);
  #line 926 
  cif_mutex_unlock_mutex_of_zd_chip_1(& chip->mutex);
  #line 927 
  return r;
}

#line 930  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c"
static int hw_init(struct zd_chip *chip)
{
  #line 932 
  int r;
  #line 935 
  int tmp_5;
  #line 934 
  dev_printk((char *)"\001",& (chip->usb.intf)->dev,(char *)"%s() ",(char *)"hw_init");
  #line 935 
  if (mutex_is_locked(& chip->mutex)) 
                                      #line 935 
                                      tmp_5 = 0; else 
                                                      #line 935 
                                                      tmp_5 = 1;
  #line 935 
  if ((long)tmp_5 != 0L) {
    {
      #line 935 
      bool branch;
      #line 935 
      struct _ddebug __UNIQUE_ID_ddebug580 = {.modname = (char *)"zd1211rw", .function = (char *)"hw_init", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c", .format = (char *)"%s:%d ASSERT %s VIOLATED!\n", .lineno = (unsigned int)935U, .flags = (unsigned int)1U, .key = {.dd_key_true = {.key = {.enabled = {.counter = 1}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)1}}}}};
      {
        #line 935 
        int tmp_0;
        #line 935 
        if ((int)arch_static_branch(& __UNIQUE_ID_ddebug580.key.dd_key_true.key,
                         (_Bool)1) != 0) 
          #line 935 
          tmp_0 = 0; else 
                          #line 935 
                          tmp_0 = 1;
        #line 935 
        branch = (_Bool)(tmp_0 != 0);
        }
      #line 935 
      if ((long)((long)((int)branch != 0)) != 0L) 
                                                  #line 935 
                                                  __dynamic_pr_debug(& __UNIQUE_ID_ddebug580,(char *)"%s:%d ASSERT %s VIOLATED!\n",(char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c",935,(char *)"mutex_is_locked(&chip->mutex)");
    }
    #line 935 
    dump_stack();
  }
  #line 936 
  r = hw_reset_phy(chip);
  #line 937 
  if (r != 0) 
              #line 938 
              return r;
  #line 940 
  r = hw_init_hmac(chip);
  #line 941 
  if (r != 0) 
              #line 942 
              return r;
  #line 944 
  return set_beacon_interval(chip,(unsigned short)100,(unsigned char)0,0);
}

#line 947  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c"
static zd_addr_t fw_reg_addr(struct zd_chip *chip, u16 offset)
{
  #line 949 
  return (unsigned short)((int)chip->fw_regs_base + (int)offset);
}

#line 953  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c"
static int dump_cr(struct zd_chip *chip, zd_addr_t addr, char *addr_string)
{
  #line 956 
  int r;
  #line 957 
  u32 value;
  #line 959 
  r = zd_ioread32_locked(chip,& value,(unsigned short)((int)addr));
  #line 960 
  if (r != 0) {
    #line 961 
    dev_printk((char *)"\001",& (chip->usb.intf)->dev,(char *)"%s() ",(char *)"dump_cr",addr_string,r);
    #line 963 
    return r;
  }
  #line 966 
  dev_printk((char *)"\001",& (chip->usb.intf)->dev,(char *)"%s() ",(char *)"dump_cr",addr_string,value);
  #line 968 
  return 0;
}

#line 971  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c"
static int test_init(struct zd_chip *chip)
{
  #line 973 
  int r;
  #line 975 
  r = dump_cr(chip,(unsigned short)38472,(char *)"CR_AFTER_PNP");
  #line 976 
  if (r != 0) 
              #line 977 
              return r;
  #line 978 
  r = dump_cr(chip,(unsigned short)37912,(char *)"CR_GPI_EN");
  #line 979 
  if (r != 0) 
              #line 980 
              return r;
  #line 981 
  return dump_cr(chip,(unsigned short)38160,(char *)"CR_INTERRUPT");
}

#line 984  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c"
static void dump_fw_registers(struct zd_chip *chip)
{
  #line 993 
  int r;
  #line 994 
  u16 values[4U];
  #line 986 
  zd_addr_t addr[4U] = {fw_reg_addr(chip,(unsigned short)0), fw_reg_addr(chip,(unsigned short)1), fw_reg_addr(chip,(unsigned short)2), fw_reg_addr(chip,(unsigned short)3)};
  #line 996 
  r = zd_ioread16v_locked(chip,(u16 *)(& values),(zd_addr_t *)(& addr),4U);
  #line 998 
  if (r != 0) {
    #line 999 
    dev_printk((char *)"\001",& (chip->usb.intf)->dev,(char *)"%s() ",(char *)"dump_fw_registers",r);
    #line 1001 
    return;
  }
  #line 1004 
  dev_printk((char *)"\001",& (chip->usb.intf)->dev,(char *)"%s() ",(char *)"dump_fw_registers",(int)values[0]);
  #line 1005 
  dev_printk((char *)"\001",& (chip->usb.intf)->dev,(char *)"%s() ",(char *)"dump_fw_registers",(int)values[1]);
  #line 1006 
  dev_printk((char *)"\001",& (chip->usb.intf)->dev,(char *)"%s() ",(char *)"dump_fw_registers",(int)values[2]);
  #line 1007 
  dev_printk((char *)"\001",& (chip->usb.intf)->dev,(char *)"%s() ",(char *)"dump_fw_registers",(int)values[3]);
  #line 1008 
  return;
}

#line 1011  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c"
static int print_fw_version(struct zd_chip *chip)
{
  #line 1014 
  int r;
  #line 1015 
  u16 version;
  #line 1013 
  struct wiphy *wiphy = (zd_chip_to_mac(chip)->hw)->wiphy;
  #line 1017 
  ;
  #line 1017 
  r = zd_ioread16_locked(chip,& version,(unsigned short)((int)fw_reg_addr(chip,(unsigned short)0)));
  #line 1019 
  if (r != 0) 
              #line 1020 
              return r;
  #line 1022 
  _dev_info(& (chip->usb.intf)->dev,(char *)"firmware version %04hx\n",(int)version);
  #line 1024 
  snprintf((char *)(& wiphy->fw_version),32UL,(char *)"%04hx",(int)version);
  #line 1027 
  return 0;
}

#line 1030  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c"
static int set_mandatory_rates(struct zd_chip *chip, int gmode)
{
  #line 1032 
  u32 rates;
  #line 1033 
  int tmp_5;
  #line 1033 
  if (mutex_is_locked(& chip->mutex)) 
                                      #line 1033 
                                      tmp_5 = 0; else 
                                                      #line 1033 
                                                      tmp_5 = 1;
  #line 1033 
  if ((long)tmp_5 != 0L) {
    {
      #line 1033 
      bool branch;
      #line 1033 
      struct _ddebug __UNIQUE_ID_ddebug581 = {.modname = (char *)"zd1211rw", .function = (char *)"set_mandatory_rates", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c", .format = (char *)"%s:%d ASSERT %s VIOLATED!\n", .lineno = (unsigned int)1033U, .flags = (unsigned int)1U, .key = {.dd_key_true = {.key = {.enabled = {.counter = 1}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)1}}}}};
      {
        #line 1033 
        int tmp_0;
        #line 1033 
        if ((int)arch_static_branch(& __UNIQUE_ID_ddebug581.key.dd_key_true.key,
                         (_Bool)1) != 0) 
          #line 1033 
          tmp_0 = 0; else 
                          #line 1033 
                          tmp_0 = 1;
        #line 1033 
        branch = (_Bool)(tmp_0 != 0);
        }
      #line 1033 
      if ((long)((long)((int)branch != 0)) != 0L) 
                                                  #line 1033 
                                                  __dynamic_pr_debug(& __UNIQUE_ID_ddebug581,(char *)"%s:%d ASSERT %s VIOLATED!\n",(char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c",1033,(char *)"mutex_is_locked(&chip->mutex)");
    }
    #line 1033 
    dump_stack();
  }
  #line 1038 
  if (gmode == 0) 
                  #line 1039 
                  rates = 15U; else 
                                    #line 1041 
                                    rates = 5391U;
  #line 1044 
  return zd_iowrite32_locked(chip,rates,(unsigned short)38452);
}

#line 1047  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c"
int zd_chip_set_rts_cts_rate_locked(struct zd_chip *chip, int preamble)
{
  #line 1050 
  u32 value = 0U;
  #line 1052 
  dev_printk((char *)"\001",& (chip->usb.intf)->dev,(char *)"%s() ",(char *)"zd_chip_set_rts_cts_rate_locked",preamble);
  #line 1053 
  value = (unsigned int)(preamble << 9) | value;
  #line 1054 
  value = (unsigned int)(preamble << 25) | value;
  #line 1057 
  value |= 3U;
  #line 1058 
  value = value;
  #line 1059 
  value |= 196608U;
  #line 1060 
  value = value;
  #line 1062 
  return zd_iowrite32_locked(chip,value,(unsigned short)38456);
}

#line 1065  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c"
int zd_chip_enable_hwint(struct zd_chip *chip)
{
  #line 1067 
  int r;
  #line 1069 
  cif_mutex_lock_mutex_of_zd_chip_1(& chip->mutex);
  #line 1070 
  r = zd_iowrite32_locked(chip,5177344U,(unsigned short)38160);
  #line 1071 
  cif_mutex_unlock_mutex_of_zd_chip_1(& chip->mutex);
  #line 1072 
  return r;
}

#line 1075  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c"
static int disable_hwint(struct zd_chip *chip)
{
  #line 1077 
  return zd_iowrite32_locked(chip,0U,(unsigned short)38160);
}

#line 1080  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c"
int zd_chip_disable_hwint(struct zd_chip *chip)
{
  #line 1082 
  int r;
  #line 1084 
  cif_mutex_lock_mutex_of_zd_chip_1(& chip->mutex);
  #line 1085 
  r = disable_hwint(chip);
  #line 1086 
  cif_mutex_unlock_mutex_of_zd_chip_1(& chip->mutex);
  #line 1087 
  return r;
}

#line 1090  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c"
static int read_fw_regs_offset(struct zd_chip *chip)
{
  #line 1092 
  int r;
  #line 1094 
  int tmp_5;
  #line 1094 
  if (mutex_is_locked(& chip->mutex)) 
                                      #line 1094 
                                      tmp_5 = 0; else 
                                                      #line 1094 
                                                      tmp_5 = 1;
  #line 1094 
  if ((long)tmp_5 != 0L) {
    {
      #line 1094 
      bool branch;
      #line 1094 
      struct _ddebug __UNIQUE_ID_ddebug582 = {.modname = (char *)"zd1211rw", .function = (char *)"read_fw_regs_offset", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c", .format = (char *)"%s:%d ASSERT %s VIOLATED!\n", .lineno = (unsigned int)1094U, .flags = (unsigned int)1U, .key = {.dd_key_true = {.key = {.enabled = {.counter = 1}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)1}}}}};
      {
        #line 1094 
        int tmp_0;
        #line 1094 
        if ((int)arch_static_branch(& __UNIQUE_ID_ddebug582.key.dd_key_true.key,
                         (_Bool)1) != 0) 
          #line 1094 
          tmp_0 = 0; else 
                          #line 1094 
                          tmp_0 = 1;
        #line 1094 
        branch = (_Bool)(tmp_0 != 0);
        }
      #line 1094 
      if ((long)((long)((int)branch != 0)) != 0L) 
                                                  #line 1094 
                                                  __dynamic_pr_debug(& __UNIQUE_ID_ddebug582,(char *)"%s:%d ASSERT %s VIOLATED!\n",(char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c",1094,(char *)"mutex_is_locked(&chip->mutex)");
    }
    #line 1094 
    dump_stack();
  }
  #line 1095 
  r = zd_ioread16_locked(chip,& chip->fw_regs_base,(unsigned short)60957);
  #line 1097 
  if (r != 0) 
              #line 1098 
              return r;
  #line 1099 
  dev_printk((char *)"\001",& (chip->usb.intf)->dev,(char *)"%s() ",(char *)"read_fw_regs_offset",(int)chip->fw_regs_base);
  #line 1102 
  return 0;
}

#line 1106  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c"
int zd_chip_read_mac_addr_fw(struct zd_chip *chip, u8 *addr)
{
  #line 1108 
  dev_printk((char *)"\001",& (chip->usb.intf)->dev,(char *)"%s() ",(char *)"zd_chip_read_mac_addr_fw");
  #line 1109 
  return zd_usb_read_fw(& chip->usb,(unsigned short)63515,addr,
                     (unsigned short)6);
}

#line 1113  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c"
int zd_chip_init_hw(struct zd_chip *chip)
{
  #line 1115 
  int r;
  #line 1116 
  u8 rf_type;
  #line 1118 
  dev_printk((char *)"\001",& (chip->usb.intf)->dev,(char *)"%s() ",(char *)"zd_chip_init_hw");
  #line 1120 
  cif_mutex_lock_mutex_of_zd_chip_1(& chip->mutex);
  #line 1123 
  r = test_init(chip);
  #line 1124 
  if (r != 0) 
              #line 1125 
              goto out;
  #line 1127 
  r = zd_iowrite32_locked(chip,1U,(unsigned short)38472);
  #line 1128 
  if (r != 0) 
              #line 1129 
              goto out;
  #line 1131 
  r = read_fw_regs_offset(chip);
  #line 1132 
  if (r != 0) 
              #line 1133 
              goto out;
  #line 1137 
  r = zd_iowrite32_locked(chip,0U,(unsigned short)37912);
  #line 1138 
  if (r != 0) 
              #line 1139 
              goto out;
  #line 1140 
  r = zd_iowrite32_locked(chip,8324159U,(unsigned short)38640);
  #line 1141 
  if (r != 0) 
              #line 1142 
              goto out;
  #line 1147 
  r = set_mandatory_rates(chip,1);
  #line 1148 
  if (r != 0) 
              #line 1149 
              goto out;
  #line 1152 
  r = disable_hwint(chip);
  #line 1153 
  if (r != 0) 
              #line 1154 
              goto out;
  #line 1155 
  r = read_pod(chip,& rf_type);
  #line 1156 
  if (r != 0) 
              #line 1157 
              goto out;
  #line 1158 
  r = hw_init(chip);
  #line 1159 
  if (r != 0) 
              #line 1160 
              goto out;
  #line 1161 
  r = zd_rf_init_hw(& chip->rf,(unsigned char)((int)rf_type));
  #line 1162 
  if (r != 0) 
              #line 1163 
              goto out;
  #line 1165 
  r = print_fw_version(chip);
  #line 1166 
  if (r != 0) 
              #line 1167 
              goto out;
  #line 1170 
  dump_fw_registers(chip);
  #line 1171 
  r = test_init(chip);
  #line 1172 
  if (r != 0) 
              #line 1173 
              goto out;
  #line 1176 
  r = read_cal_int_tables(chip);
  #line 1177 
  if (r != 0) 
              #line 1178 
              goto out;
  #line 1180 
  print_id_0(chip);
  #line 1181 
  out: 
       #line 1181 
  ;
  #line 1182 
  cif_mutex_unlock_mutex_of_zd_chip_1(& chip->mutex);
  #line 1183 
  return r;
}

#line 1186  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c"
static int update_pwr_int(struct zd_chip *chip, u8 channel)
{
  #line 1188 
  u8 value = chip->pwr_int_values[(int)channel + -1];
  #line 1189 
  return zd_iowrite16_locked(chip,(unsigned short)((int)value),
                          (unsigned short)36988);
}

#line 1192  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c"
static int update_pwr_cal(struct zd_chip *chip, u8 channel)
{
  #line 1194 
  u8 value = chip->pwr_cal_values[(int)channel + -1];
  #line 1195 
  return zd_iowrite16_locked(chip,(unsigned short)((int)value),
                          (unsigned short)37136);
}

#line 1198  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c"
static int update_ofdm_cal(struct zd_chip *chip, u8 channel)
{
  #line 1200 
  struct zd_ioreq16 ioreqs[3U];
  #line 1202 
  ioreqs[0].addr = (unsigned short)37132U;
  #line 1203 
  ioreqs[0].value = (unsigned short)chip->ofdm_cal_values[0][(int)channel + -1];
  #line 1204 
  ioreqs[1].addr = (unsigned short)37128U;
  #line 1205 
  ioreqs[1].value = (unsigned short)chip->ofdm_cal_values[1][(int)channel + -1];
  #line 1206 
  ioreqs[2].addr = (unsigned short)37124U;
  #line 1207 
  ioreqs[2].value = (unsigned short)chip->ofdm_cal_values[2][(int)channel + -1];
  #line 1209 
  return zd_iowrite16a_locked(chip,(struct zd_ioreq16 *)(& ioreqs),3U);
}

#line 1212  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c"
static int update_channel_integration_and_calibration(struct zd_chip *chip, u8 channel)
{
  #line 1215 
  int r;
  #line 1217 
  if (zd_rf_should_update_pwr_int(& chip->rf) == 0) 
                                                    #line 1218 
                                                    return 0;
  #line 1220 
  r = update_pwr_int(chip,(unsigned char)((int)channel));
  #line 1221 
  if (r != 0) 
              #line 1222 
              return r;
  #line 1223 
  if (zd_chip_is_zd1211b(chip) != 0) {
    #line 1224 
    struct zd_ioreq16 ioreqs[3U] = {{.addr = (unsigned short)37140U, .value = (unsigned short)40U}, {.addr = (unsigned short)0, .value = (unsigned short)0}, {.addr = (unsigned short)37140U, .value = (unsigned short)42U}};
    #line 1230 
    r = update_ofdm_cal(chip,(unsigned char)((int)channel));
    #line 1231 
    if (r != 0) 
                #line 1232 
                return r;
    #line 1233 
    r = update_pwr_cal(chip,(unsigned char)((int)channel));
    #line 1234 
    if (r != 0) 
                #line 1235 
                return r;
    #line 1236 
    r = zd_iowrite16a_locked(chip,(struct zd_ioreq16 *)(& ioreqs),3U);
    #line 1237 
    if (r != 0) 
                #line 1238 
                return r;
  }
  #line 1241 
  return 0;
}

#line 1245  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c"
static int patch_cck_gain(struct zd_chip *chip)
{
  #line 1247 
  int r;
  #line 1248 
  u32 value;
  #line 1253 
  int tmp_6;
  #line 1250 
  if ((unsigned int)chip->patch_cck_gain == 0U) 
                                                #line 1251 
                                                return 0;
  else {
    #line 1250 
    if (zd_rf_should_patch_cck_gain(& chip->rf) == 0) 
                                                      #line 1251 
                                                      return 0;
  }
  #line 1253 
  if (mutex_is_locked(& chip->mutex)) 
                                      #line 1253 
                                      tmp_6 = 0; else 
                                                      #line 1253 
                                                      tmp_6 = 1;
  #line 1253 
  if ((long)tmp_6 != 0L) {
    {
      #line 1253 
      bool branch;
      #line 1253 
      struct _ddebug __UNIQUE_ID_ddebug583 = {.modname = (char *)"zd1211rw", .function = (char *)"patch_cck_gain", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c", .format = (char *)"%s:%d ASSERT %s VIOLATED!\n", .lineno = (unsigned int)1253U, .flags = (unsigned int)1U, .key = {.dd_key_true = {.key = {.enabled = {.counter = 1}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)1}}}}};
      {
        #line 1253 
        int tmp_1;
        #line 1253 
        if ((int)arch_static_branch(& __UNIQUE_ID_ddebug583.key.dd_key_true.key,
                           (_Bool)1) != 0) 
          #line 1253 
          tmp_1 = 0; else 
                          #line 1253 
                          tmp_1 = 1;
        #line 1253 
        branch = (_Bool)(tmp_1 != 0);
        }
      #line 1253 
      if ((long)((long)((int)branch != 0)) != 0L) 
                                                  #line 1253 
                                                  __dynamic_pr_debug(& __UNIQUE_ID_ddebug583,(char *)"%s:%d ASSERT %s VIOLATED!\n",(char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c",1253,(char *)"mutex_is_locked(&chip->mutex)");
    }
    #line 1253 
    dump_stack();
  }
  #line 1254 
  r = zd_ioread32_locked(chip,& value,(unsigned short)63548);
  #line 1255 
  if (r != 0) 
              #line 1256 
              return r;
  #line 1257 
  dev_printk((char *)"\001",& (chip->usb.intf)->dev,(char *)"%s() ",(char *)"patch_cck_gain",value & 255U);
  #line 1258 
  return zd_iowrite16_locked(chip,
                            (unsigned short)((int)((unsigned short)value) & 255),
                            (unsigned short)37052);
}

#line 1261  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c"
int zd_chip_set_channel(struct zd_chip *chip, u8 channel)
{
  #line 1263 
  int r;
  #line 1263 
  int t;
  #line 1265 
  cif_mutex_lock_mutex_of_zd_chip_1(& chip->mutex);
  #line 1266 
  r = zd_chip_lock_phy_regs(chip);
  #line 1267 
  if (r != 0) 
              #line 1268 
              goto out;
  #line 1269 
  r = zd_rf_set_channel(& chip->rf,(unsigned char)((int)channel));
  #line 1270 
  if (r != 0) 
              #line 1271 
              goto unlock;
  #line 1272 
  r = update_channel_integration_and_calibration(chip,(unsigned char)((int)channel));
  #line 1273 
  if (r != 0) 
              #line 1274 
              goto unlock;
  #line 1275 
  r = patch_cck_gain(chip);
  #line 1276 
  if (r != 0) 
              #line 1277 
              goto unlock;
  #line 1278 
  r = patch_6m_band_edge(chip,(unsigned char)((int)channel));
  #line 1279 
  if (r != 0) 
              #line 1280 
              goto unlock;
  #line 1281 
  r = zd_iowrite32_locked(chip,0U,(unsigned short)37952);
  #line 1282 
  unlock: 
          #line 1282 
  ;
  #line 1283 
  t = zd_chip_unlock_phy_regs(chip);
  #line 1284 
  if (t != 0 && r == 0) 
                        #line 1285 
                        r = t;
  #line 1286 
  out: 
       #line 1286 
  ;
  #line 1287 
  cif_mutex_unlock_mutex_of_zd_chip_1(& chip->mutex);
  #line 1288 
  return r;
}

#line 1291  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c"
u8 zd_chip_get_channel(struct zd_chip *chip)
{
  #line 1293 
  u8 channel;
  #line 1295 
  cif_mutex_lock_mutex_of_zd_chip_1(& chip->mutex);
  #line 1296 
  channel = chip->rf.channel;
  #line 1297 
  cif_mutex_unlock_mutex_of_zd_chip_1(& chip->mutex);
  #line 1298 
  return channel;
}

#line 1301  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c"
int zd_chip_control_leds(struct zd_chip *chip, enum led_status status)
{
  #line 1308 
  int r;
  #line 1309 
  u16 v[2U];
  #line 1314 
  u16 other_led;
  #line 1303 
  zd_addr_t a[2U] = {fw_reg_addr(chip,(unsigned short)3), (unsigned short)38468U};
  #line 1310 
  struct zd_ioreq16 ioreqs[2U] = {{.addr = fw_reg_addr(chip,(unsigned short)3), .value = (unsigned short)0}, {.addr = (unsigned short)38468U, .value = (unsigned short)0}};
  #line 1316 
  cif_mutex_lock_mutex_of_zd_chip_1(& chip->mutex);
  #line 1317 
  r = zd_ioread16v_locked(chip,(u16 *)(& v),(zd_addr_t *)(& a),2U);
  #line 1318 
  if (r != 0) 
              #line 1319 
              goto out;
  #line 1321 
  if ((unsigned int)chip->link_led == 256U) 
                                            #line 1321 
                                            other_led = (unsigned short)512U; else 
                                                                    #line 1321 
                                                                    other_led = (unsigned short)256U;
  #line 1323 
  switch ((unsigned int)status) {
    #line 1324 
    case (unsigned int)0: 
                          #line 1324 
    ;
    #line 1325 
    ioreqs[0].value = (unsigned short)0U;
    #line 1326 
    ioreqs[1].value = (unsigned short)((unsigned int)v[1] & 64767U);
    #line 1327 
    break;
    #line 1328 
    case (unsigned int)1: 
                          #line 1328 
    ;
    #line 1329 
    ioreqs[0].value = (unsigned short)0U;
    #line 1330 
    ioreqs[1].value = (unsigned short)((int)v[1] & ~ ((int)other_led));
    #line 1331 
    if ((unsigned int)ktime_get_seconds() % 3U == 0U) 
                                                      #line 1332 
                                                      ioreqs[1].value = (unsigned short)((int)ioreqs[1].value & ~ ((int)chip->link_led)); else 
                                                                    #line 1334 
                                                                    ioreqs[1].value = (unsigned short)((int)ioreqs[1].value | (int)chip->link_led);
    #line 1336 
    break;
    #line 1337 
    case (unsigned int)2: 
                          #line 1337 
    ;
    #line 1338 
    ioreqs[0].value = (unsigned short)1U;
    #line 1339 
    ioreqs[1].value = (unsigned short)((int)v[1] & ~ ((int)other_led));
    #line 1340 
    ioreqs[1].value = (unsigned short)((int)ioreqs[1].value | (int)chip->link_led);
    #line 1341 
    break;
    #line 1342 
    default: 
             #line 1342 
    ;
    #line 1343 
    r = -22;
    #line 1344 
    goto out;
  }
  #line 1347 
  if ((int)v[0] != (int)ioreqs[0].value || (int)v[1] != (int)ioreqs[1].value) {
    #line 1348 
    r = zd_iowrite16a_locked(chip,(struct zd_ioreq16 *)(& ioreqs),2U);
    #line 1349 
    if (r != 0) 
                #line 1350 
                goto out;
  }
  #line 1352 
  r = 0;
  #line 1353 
  out: 
       #line 1353 
  ;
  #line 1354 
  cif_mutex_unlock_mutex_of_zd_chip_1(& chip->mutex);
  #line 1355 
  return r;
}

#line 1358  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c"
int zd_chip_set_basic_rates(struct zd_chip *chip, u16 cr_rates)
{
  #line 1360 
  int r;
  #line 1362 
  if (((int)cr_rates & -65296) != 0) 
                                     #line 1363 
                                     return -22;
  #line 1365 
  cif_mutex_lock_mutex_of_zd_chip_1(& chip->mutex);
  #line 1366 
  r = zd_iowrite32_locked(chip,(unsigned int)cr_rates,(unsigned short)38448);
  #line 1367 
  cif_mutex_unlock_mutex_of_zd_chip_1(& chip->mutex);
  #line 1368 
  return r;
}

#line 1371  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c"
__inline static u8 zd_rate_from_ofdm_plcp_header(void *rx_frame)
{
  #line 1373 
  return (unsigned char)((unsigned int)zd_ofdm_plcp_header_rate((struct ofdm_plcp_header *)rx_frame) | 16U);
}

#line 1384  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c"
u8 zd_rx_rate(void *rx_frame, struct rx_status *status)
{
  #line 1386 
  u8 zd_rate;
  #line 1387 
  if (((int)status->frame_status & 1) != 0) 
                                            #line 1388 
                                            zd_rate = zd_rate_from_ofdm_plcp_header(rx_frame);
  else {
    #line 1390 
    switch ((int)zd_cck_plcp_header_signal((struct cck_plcp_header *)rx_frame)) {
      #line 1391 
      case 10: 
               #line 1391 
      ;
      #line 1392 
      zd_rate = (unsigned char)0U;
      #line 1393 
      break;
      #line 1394 
      case 20: 
               #line 1394 
      ;
      #line 1395 
      zd_rate = (unsigned char)1U;
      #line 1396 
      break;
      #line 1397 
      case 55: 
               #line 1397 
      ;
      #line 1398 
      zd_rate = (unsigned char)2U;
      #line 1399 
      break;
      #line 1400 
      case 110: 
                #line 1400 
      ;
      #line 1401 
      zd_rate = (unsigned char)3U;
      #line 1402 
      break;
      #line 1403 
      default: 
               #line 1403 
      ;
      #line 1404 
      zd_rate = (unsigned char)0U;
    }
  }
  #line 1408 
  return zd_rate;
}

#line 1411  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c"
int zd_chip_switch_radio_on(struct zd_chip *chip)
{
  #line 1413 
  int r;
  #line 1415 
  cif_mutex_lock_mutex_of_zd_chip_1(& chip->mutex);
  #line 1416 
  r = zd_switch_radio_on(& chip->rf);
  #line 1417 
  cif_mutex_unlock_mutex_of_zd_chip_1(& chip->mutex);
  #line 1418 
  return r;
}

#line 1421  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c"
int zd_chip_switch_radio_off(struct zd_chip *chip)
{
  #line 1423 
  int r;
  #line 1425 
  cif_mutex_lock_mutex_of_zd_chip_1(& chip->mutex);
  #line 1426 
  r = zd_switch_radio_off(& chip->rf);
  #line 1427 
  cif_mutex_unlock_mutex_of_zd_chip_1(& chip->mutex);
  #line 1428 
  return r;
}

#line 1431  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c"
int zd_chip_enable_int(struct zd_chip *chip)
{
  #line 1433 
  int r;
  #line 1435 
  cif_mutex_lock_mutex_of_zd_chip_1(& chip->mutex);
  #line 1436 
  r = zd_usb_enable_int(& chip->usb);
  #line 1437 
  cif_mutex_unlock_mutex_of_zd_chip_1(& chip->mutex);
  #line 1438 
  return r;
}

#line 1441  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c"
void zd_chip_disable_int(struct zd_chip *chip)
{
  #line 1443 
  cif_mutex_lock_mutex_of_zd_chip_1(& chip->mutex);
  #line 1444 
  zd_usb_disable_int(& chip->usb);
  #line 1445 
  cif_mutex_unlock_mutex_of_zd_chip_1(& chip->mutex);
  #line 1448 
  cancel_work_sync(& zd_chip_to_mac(chip)->process_intr);
  #line 1449 
  return;
}

#line 1451  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c"
int zd_chip_enable_rxtx(struct zd_chip *chip)
{
  #line 1453 
  int r;
  #line 1455 
  cif_mutex_lock_mutex_of_zd_chip_1(& chip->mutex);
  #line 1456 
  zd_usb_enable_tx(& chip->usb);
  #line 1457 
  r = zd_usb_enable_rx(& chip->usb);
  #line 1458 
  zd_tx_watchdog_enable(& chip->usb);
  #line 1459 
  cif_mutex_unlock_mutex_of_zd_chip_1(& chip->mutex);
  #line 1460 
  return r;
}

#line 1463  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c"
void zd_chip_disable_rxtx(struct zd_chip *chip)
{
  #line 1465 
  cif_mutex_lock_mutex_of_zd_chip_1(& chip->mutex);
  #line 1466 
  zd_tx_watchdog_disable(& chip->usb);
  #line 1467 
  zd_usb_disable_rx(& chip->usb);
  #line 1468 
  zd_usb_disable_tx(& chip->usb);
  #line 1469 
  cif_mutex_unlock_mutex_of_zd_chip_1(& chip->mutex);
  #line 1470 
  return;
}

#line 1472  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c"
int zd_rfwritev_locked(struct zd_chip *chip, u32 *values, unsigned int count, u8 bits)
{
  #line 1475 
  int r;
  #line 1476 
  unsigned int i;
  #line 1478 
  i = 0U;
  #line 1478 
  while (i < count) {
    #line 1479 
    r = zd_rfwrite_locked(chip,*(values + (unsigned long)i),(unsigned char)((int)bits));
    #line 1480 
    if (r != 0) 
                #line 1481 
                return r;
    #line 1478 
    i ++;
  }
  #line 1484 
  return 0;
}

#line 1491  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c"
int zd_rfwrite_cr_locked(struct zd_chip *chip, u32 value)
{
  #line 1498 
  int tmp_5;
  #line 1493 
  struct zd_ioreq16 ioreqs[3U] = {{.addr = (unsigned short)37840U, .value = (unsigned short)((unsigned int)((unsigned short)(value >> 16)) & 255U)}, {.addr = (unsigned short)37836U, .value = (unsigned short)((unsigned int)((unsigned short)(value >> 8)) & 255U)}, {.addr = (unsigned short)37832U, .value = (unsigned short)((unsigned int)((unsigned short)value) & 255U)}};
  #line 1498 
  if (mutex_is_locked(& chip->mutex)) 
                                      #line 1498 
                                      tmp_5 = 0; else 
                                                      #line 1498 
                                                      tmp_5 = 1;
  #line 1498 
  if ((long)tmp_5 != 0L) {
    {
      #line 1498 
      bool branch;
      #line 1498 
      struct _ddebug __UNIQUE_ID_ddebug584 = {.modname = (char *)"zd1211rw", .function = (char *)"zd_rfwrite_cr_locked", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c", .format = (char *)"%s:%d ASSERT %s VIOLATED!\n", .lineno = (unsigned int)1498U, .flags = (unsigned int)1U, .key = {.dd_key_true = {.key = {.enabled = {.counter = 1}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)1}}}}};
      {
        #line 1498 
        int tmp_0;
        #line 1498 
        if ((int)arch_static_branch(& __UNIQUE_ID_ddebug584.key.dd_key_true.key,
                         (_Bool)1) != 0) 
          #line 1498 
          tmp_0 = 0; else 
                          #line 1498 
                          tmp_0 = 1;
        #line 1498 
        branch = (_Bool)(tmp_0 != 0);
        }
      #line 1498 
      if ((long)((long)((int)branch != 0)) != 0L) 
                                                  #line 1498 
                                                  __dynamic_pr_debug(& __UNIQUE_ID_ddebug584,(char *)"%s:%d ASSERT %s VIOLATED!\n",(char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c",1498,(char *)"mutex_is_locked(&chip->mutex)");
    }
    #line 1498 
    dump_stack();
  }
  #line 1499 
  return zd_iowrite16a_locked(chip,(struct zd_ioreq16 *)(& ioreqs),3U);
}

#line 1502  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c"
int zd_rfwritev_cr_locked(struct zd_chip *chip, u32 *values, unsigned int count)
{
  #line 1505 
  int r;
  #line 1506 
  unsigned int i;
  #line 1508 
  i = 0U;
  #line 1508 
  while (i < count) {
    #line 1509 
    r = zd_rfwrite_cr_locked(chip,*(values + (unsigned long)i));
    #line 1510 
    if (r != 0) 
                #line 1511 
                return r;
    #line 1508 
    i ++;
  }
  #line 1514 
  return 0;
}

#line 1517  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c"
int zd_chip_set_multicast_hash(struct zd_chip *chip, struct zd_mc_hash *hash)
{
  #line 1520 
  struct zd_ioreq32 ioreqs[2U] = {{.addr = (unsigned short)38436U, .value = hash->low}, {.addr = (unsigned short)38440U, .value = hash->high}};
  #line 1525 
  return zd_iowrite32a(chip,(struct zd_ioreq32 *)(& ioreqs),2U);
}

#line 1528  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_chip.c"
u64 zd_chip_get_tsf(struct zd_chip *chip)
{
  #line 1530 
  int r;
  #line 1533 
  u32 values[2U];
  #line 1534 
  u64 tsf;
  #line 1531 
  zd_addr_t aw_pt_bi_addr[2U] = {(unsigned short)38164U, (unsigned short)38168U};
  #line 1536 
  cif_mutex_lock_mutex_of_zd_chip_1(& chip->mutex);
  #line 1537 
  r = zd_ioread32v_locked(chip,(u32 *)(& values),(zd_addr_t *)(& aw_pt_bi_addr),2U);
  #line 1539 
  cif_mutex_unlock_mutex_of_zd_chip_1(& chip->mutex);
  #line 1540 
  if (r != 0) 
              #line 1541 
              return 0ULL;
  #line 1543 
  tsf = (unsigned long long)values[1];
  #line 1544 
  tsf = (tsf << 32) | (unsigned long long)values[0];
  #line 1546 
  return tsf;
}

#line 806  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_chip.i.aux"
static void cif_mutex_lock_mutex_of_zd_chip_1(struct mutex *lock)
{
  #line 809 
  ldv_mutex_model_lock(lock,(char *)"mutex_of_zd_chip");
  #line 810 
  return;
}

#line 813  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/0/concurrency safety/weaver/zd_chip.i.aux"
static void cif_mutex_unlock_mutex_of_zd_chip_1(struct mutex *lock)
{
  #line 816 
  ldv_mutex_model_unlock(lock,(char *)"mutex_of_zd_chip");
  #line 817 
  return;
}

#line 93  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_rf.h"
#line 93 
int zd_rf_init_rf2959(struct zd_rf *rf);
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_rf.c"
static char *rfs[16U] = {(char *)"unknown RF0", (char *)"unknown RF1", (char *)"UW2451_RF", (char *)"UCHIP_RF", (char *)"AL2230_RF", (char *)"AL7230B_RF", (char *)"THETA_RF", (char *)"AL2210_RF", (char *)"MAXIM_NEW_RF", (char *)"UW2453_RF", (char *)"AL2230S_RF", (char *)"RALINK_RF", (char *)"INTERSIL_RF", (char *)"RF2959_RF", (char *)"MAXIM_NEW2_RF", (char *)"PHILIPS_RF"};
#line 35  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_rf.c"
char *zd_rf_name(u8 type)
{
  #line 37 
  if (((int)type & 240) != 0) 
                              #line 38 
                              type = (unsigned char)0U;
  #line 39 
  return rfs[(int)type];
}

#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_rf.c"
void zd_rf_init(struct zd_rf *rf)
{
  #line 44 
  memset((void *)rf,0,64UL);
  #line 48 
  rf->update_channel_int = (unsigned char)1U;
  #line 49 
  return;
}

#line 51  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_rf.c"
void zd_rf_clear(struct zd_rf *rf)
{
  #line 53 
  if (rf->clear != (void (*)(struct zd_rf *))0) 
                                                #line 54 
                                                (*(rf->clear))(rf);
  #line 55 
  memset((void *)rf,255,64UL);
  #line 56 
  return;
}

#line 58  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_rf.c"
int zd_rf_init_hw(struct zd_rf *rf, u8 type)
{
  #line 61 
  int t;
  #line 64 
  int tmp_6;
  #line 60 
  int r = 0;
  #line 62 
  struct zd_chip *chip = zd_rf_to_chip(rf);
  #line 64 
  if (mutex_is_locked(& chip->mutex)) 
                                      #line 64 
                                      tmp_6 = 0; else 
                                                      #line 64 
                                                      tmp_6 = 1;
  #line 64 
  if ((long)tmp_6 != 0L) {
    {
      #line 64 
      bool branch;
      #line 64 
      struct _ddebug __UNIQUE_ID_ddebug565 = {.modname = (char *)"zd1211rw", .function = (char *)"zd_rf_init_hw", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_rf.c", .format = (char *)"%s:%d ASSERT %s VIOLATED!\n", .lineno = (unsigned int)64U, .flags = (unsigned int)1U, .key = {.dd_key_true = {.key = {.enabled = {.counter = 1}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)1}}}}};
      {
        #line 64 
        int tmp_1;
        #line 64 
        if ((int)arch_static_branch(& __UNIQUE_ID_ddebug565.key.dd_key_true.key,
                           (_Bool)1) != 0) 
          #line 64 
          tmp_1 = 0; else 
                          #line 64 
                          tmp_1 = 1;
        #line 64 
        branch = (_Bool)(tmp_1 != 0);
        }
      #line 64 
      if ((long)((long)((int)branch != 0)) != 0L) 
                                                  #line 64 
                                                  __dynamic_pr_debug(& __UNIQUE_ID_ddebug565,(char *)"%s:%d ASSERT %s VIOLATED!\n",(char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_rf.c",64,(char *)"mutex_is_locked(&chip->mutex)");
    }
    #line 64 
    dump_stack();
  }
  #line 65 
  switch ((int)type) {
    #line 66 
    case 13: 
             #line 66 
    ;
    #line 67 
    r = zd_rf_init_rf2959(rf);
    #line 68 
    break;
    #line 69 
    case 4: 
            #line 69 
    ;
    #line 70 
    case 10: 
             #line 70 
    ;
    #line 71 
    r = zd_rf_init_al2230(rf);
    #line 72 
    break;
    #line 73 
    case 5: 
            #line 73 
    ;
    #line 74 
    r = zd_rf_init_al7230b(rf);
    #line 75 
    break;
    #line 76 
    case 8: 
            #line 76 
    ;
    #line 77 
    case 9: 
            #line 77 
    ;
    #line 78 
    r = zd_rf_init_uw2453(rf);
    #line 79 
    break;
    #line 80 
    default: 
             #line 80 
    ;
    #line 81 
    ;
    #line 81 
    ;
    #line 81 
    _dev_err(& (chip->usb.intf)->dev,(char *)"RF %s %#x is not supported\n",zd_rf_name((unsigned char)((int)type)),(int)type);
    #line 83 
    rf->type = (unsigned char)0U;
    #line 84 
    return -19;
  }
  #line 87 
  if (r != 0) 
              #line 88 
              return r;
  #line 90 
  rf->type = type;
  #line 92 
  r = zd_chip_lock_phy_regs(chip);
  #line 93 
  if (r != 0) 
              #line 94 
              return r;
  #line 95 
  t = (*(rf->init_hw))(rf);
  #line 96 
  r = zd_chip_unlock_phy_regs(chip);
  #line 97 
  if (t != 0) 
              #line 98 
              r = t;
  #line 99 
  return r;
}

#line 102  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_rf.c"
int zd_rf_scnprint_id(struct zd_rf *rf, char *buffer, size_t size)
{
  #line 104 
  ;
  #line 104 
  ;
  #line 104 
  return scnprintf(buffer,size,(char *)"%s",
                  zd_rf_name((unsigned char)((int)rf->type)));
}

#line 107  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_rf.c"
int zd_rf_set_channel(struct zd_rf *rf, u8 channel)
{
  #line 109 
  int r;
  #line 111 
  int tmp_6;
  #line 111 
  if (mutex_is_locked(& zd_rf_to_chip(rf)->mutex)) 
                                                   #line 111 
                                                   tmp_6 = 0; else 
                                                                   #line 111 
                                                                   tmp_6 = 1;
  #line 111 
  if ((long)tmp_6 != 0L) {
    {
      #line 111 
      bool branch;
      #line 111 
      struct _ddebug __UNIQUE_ID_ddebug566 = {.modname = (char *)"zd1211rw", .function = (char *)"zd_rf_set_channel", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_rf.c", .format = (char *)"%s:%d ASSERT %s VIOLATED!\n", .lineno = (unsigned int)111U, .flags = (unsigned int)1U, .key = {.dd_key_true = {.key = {.enabled = {.counter = 1}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)1}}}}};
      {
        #line 111 
        int tmp_0;
        #line 111 
        if ((int)arch_static_branch(& __UNIQUE_ID_ddebug566.key.dd_key_true.key,
                         (_Bool)1) != 0) 
          #line 111 
          tmp_0 = 0; else 
                          #line 111 
                          tmp_0 = 1;
        #line 111 
        branch = (_Bool)(tmp_0 != 0);
        }
      #line 111 
      if ((long)((long)((int)branch != 0)) != 0L) 
                                                  #line 111 
                                                  __dynamic_pr_debug(& __UNIQUE_ID_ddebug566,(char *)"%s:%d ASSERT %s VIOLATED!\n",(char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_rf.c",111,(char *)"mutex_is_locked(&zd_rf_to_chip(rf)->mutex)");
    }
    #line 111 
    dump_stack();
  }
  #line 112 
  if ((unsigned int)channel == 0U) 
                                   #line 113 
                                   return -22;
  #line 114 
  if ((unsigned int)channel > 14U) 
                                   #line 115 
                                   return -22;
  #line 116 
  ;
  #line 116 
  dev_printk((char *)"\001",& (zd_rf_to_chip(rf)->usb.intf)->dev,(char *)"%s() ",(char *)"zd_rf_set_channel",(int)channel);
  #line 118 
  r = (*(rf->set_channel))(rf,(unsigned char)((int)channel));
  #line 119 
  if (r >= 0) 
              #line 120 
              rf->channel = channel;
  #line 121 
  return r;
}

#line 124  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_rf.c"
int zd_switch_radio_on(struct zd_rf *rf)
{
  #line 126 
  int r;
  #line 126 
  int t;
  #line 129 
  int tmp_6;
  #line 127 
  struct zd_chip *chip = zd_rf_to_chip(rf);
  #line 129 
  if (mutex_is_locked(& chip->mutex)) 
                                      #line 129 
                                      tmp_6 = 0; else 
                                                      #line 129 
                                                      tmp_6 = 1;
  #line 129 
  if ((long)tmp_6 != 0L) {
    {
      #line 129 
      bool branch;
      #line 129 
      struct _ddebug __UNIQUE_ID_ddebug567 = {.modname = (char *)"zd1211rw", .function = (char *)"zd_switch_radio_on", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_rf.c", .format = (char *)"%s:%d ASSERT %s VIOLATED!\n", .lineno = (unsigned int)129U, .flags = (unsigned int)1U, .key = {.dd_key_true = {.key = {.enabled = {.counter = 1}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)1}}}}};
      {
        #line 129 
        int tmp_1;
        #line 129 
        if ((int)arch_static_branch(& __UNIQUE_ID_ddebug567.key.dd_key_true.key,
                           (_Bool)1) != 0) 
          #line 129 
          tmp_1 = 0; else 
                          #line 129 
                          tmp_1 = 1;
        #line 129 
        branch = (_Bool)(tmp_1 != 0);
        }
      #line 129 
      if ((long)((long)((int)branch != 0)) != 0L) 
                                                  #line 129 
                                                  __dynamic_pr_debug(& __UNIQUE_ID_ddebug567,(char *)"%s:%d ASSERT %s VIOLATED!\n",(char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_rf.c",129,(char *)"mutex_is_locked(&chip->mutex)");
    }
    #line 129 
    dump_stack();
  }
  #line 130 
  r = zd_chip_lock_phy_regs(chip);
  #line 131 
  if (r != 0) 
              #line 132 
              return r;
  #line 133 
  t = (*(rf->switch_radio_on))(rf);
  #line 134 
  r = zd_chip_unlock_phy_regs(chip);
  #line 135 
  if (t != 0) 
              #line 136 
              r = t;
  #line 137 
  return r;
}

#line 140  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_rf.c"
int zd_switch_radio_off(struct zd_rf *rf)
{
  #line 142 
  int r;
  #line 142 
  int t;
  #line 146 
  int tmp_6;
  #line 143 
  struct zd_chip *chip = zd_rf_to_chip(rf);
  #line 146 
  if (mutex_is_locked(& chip->mutex)) 
                                      #line 146 
                                      tmp_6 = 0; else 
                                                      #line 146 
                                                      tmp_6 = 1;
  #line 146 
  if ((long)tmp_6 != 0L) {
    {
      #line 146 
      bool branch;
      #line 146 
      struct _ddebug __UNIQUE_ID_ddebug568 = {.modname = (char *)"zd1211rw", .function = (char *)"zd_switch_radio_off", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_rf.c", .format = (char *)"%s:%d ASSERT %s VIOLATED!\n", .lineno = (unsigned int)146U, .flags = (unsigned int)1U, .key = {.dd_key_true = {.key = {.enabled = {.counter = 1}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)1}}}}};
      {
        #line 146 
        int tmp_1;
        #line 146 
        if ((int)arch_static_branch(& __UNIQUE_ID_ddebug568.key.dd_key_true.key,
                           (_Bool)1) != 0) 
          #line 146 
          tmp_1 = 0; else 
                          #line 146 
                          tmp_1 = 1;
        #line 146 
        branch = (_Bool)(tmp_1 != 0);
        }
      #line 146 
      if ((long)((long)((int)branch != 0)) != 0L) 
                                                  #line 146 
                                                  __dynamic_pr_debug(& __UNIQUE_ID_ddebug568,(char *)"%s:%d ASSERT %s VIOLATED!\n",(char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_rf.c",146,(char *)"mutex_is_locked(&chip->mutex)");
    }
    #line 146 
    dump_stack();
  }
  #line 147 
  r = zd_chip_lock_phy_regs(chip);
  #line 148 
  if (r != 0) 
              #line 149 
              return r;
  #line 150 
  t = (*(rf->switch_radio_off))(rf);
  #line 151 
  r = zd_chip_unlock_phy_regs(chip);
  #line 152 
  if (t != 0) 
              #line 153 
              r = t;
  #line 154 
  return r;
}

#line 157  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_rf.c"
int zd_rf_patch_6m_band_edge(struct zd_rf *rf, u8 channel)
{
  #line 159 
  if (rf->patch_6m_band_edge == (int (*)(struct zd_rf *, u8 ))0) 
                                                                 #line 160 
                                                                 return 0;
  #line 162 
  return (*(rf->patch_6m_band_edge))(rf,(unsigned char)((int)channel));
}

#line 165  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_rf.c"
int zd_rf_generic_patch_6m(struct zd_rf *rf, u8 channel)
{
  #line 167 
  ;
  #line 167 
  return zd_chip_generic_patch_6m_band(zd_rf_to_chip(rf),(int)channel);
}

#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_rf_rf2959.c"
static u32 rf2959_table[14U][2U] = {{1579385U, 1992294U}, {1579401U, 1992294U}, {1579417U, 1992294U}, {1579433U, 1992294U}, {1579449U, 1992294U}, {1579465U, 1992294U}, {1579481U, 1992294U}, {1579497U, 1992294U}, {1579513U, 1992294U}, {1579529U, 1992294U}, {1579545U, 1992294U}, {1579561U, 1992294U}, {1579577U, 1992294U}, {1579616U, 1835008U}};
#line 136  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_rf_rf2959.c"
static int rf2959_init_hw(struct zd_rf *rf)
{
  #line 138 
  int r;
  #line 139 
  struct zd_chip *chip = zd_rf_to_chip(rf);
  #line 141 
  struct zd_ioreq16 ioreqs[75U] = {{.addr = (unsigned short)36872U, .value = (unsigned short)30U}, {.addr = (unsigned short)36900U, .value = (unsigned short)32U}, {.addr = (unsigned short)36904U, .value = (unsigned short)137U}, {.addr = (unsigned short)36908U, .value = (unsigned short)0U}, {.addr = (unsigned short)36924U, .value = (unsigned short)208U}, {.addr = (unsigned short)36932U, .value = (unsigned short)104U}, {.addr = (unsigned short)36940U, .value = (unsigned short)74U}, {.addr = (unsigned short)36944U, .value = (unsigned short)12U}, {.addr = (unsigned short)36948U, .value = (unsigned short)14U}, {.addr = (unsigned short)36956U, .value = (unsigned short)72U}, {.addr = (unsigned short)36960U, .value = (unsigned short)20U}, {.addr = (unsigned short)36968U, .value = (unsigned short)144U}, {.addr = (unsigned short)36972U, .value = (unsigned short)48U}, {.addr = (unsigned short)36980U, .value = (unsigned short)32U}, {.addr = (unsigned short)36988U, .value = (unsigned short)178U}, {.addr = (unsigned short)36992U, .value = (unsigned short)67U}, {.addr = (unsigned short)36996U, .value = (unsigned short)40U}, {.addr = (unsigned short)37016U, .value = (unsigned short)48U}, {.addr = (unsigned short)37000U, .value = (unsigned short)15U}, {.addr = (unsigned short)37004U, .value = (unsigned short)240U}, {.addr = (unsigned short)37028U, .value = (unsigned short)42U}, {.addr = (unsigned short)37048U, .value = (unsigned short)127U}, {.addr = (unsigned short)37052U, .value = (unsigned short)30U}, {.addr = (unsigned short)37068U, .value = (unsigned short)197U}, {.addr = (unsigned short)37072U, .value = (unsigned short)197U}, {.addr = (unsigned short)37076U, .value = (unsigned short)197U}, {.addr = (unsigned short)37180U, .value = (unsigned short)88U}, {.addr = (unsigned short)37184U, .value = (unsigned short)48U}, {.addr = (unsigned short)37188U, .value = (unsigned short)48U}, {.addr = (unsigned short)37192U, .value = (unsigned short)0U}, {.addr = (unsigned short)37196U, .value = (unsigned short)36U}, {.addr = (unsigned short)37200U, .value = (unsigned short)4U}, {.addr = (unsigned short)37204U, .value = (unsigned short)0U}, {.addr = (unsigned short)37208U, .value = (unsigned short)16U}, {.addr = (unsigned short)37212U, .value = (unsigned short)42U}, {.addr = (unsigned short)37216U, .value = (unsigned short)16U}, {.addr = (unsigned short)37220U, .value = (unsigned short)36U}, {.addr = (unsigned short)37224U, .value = (unsigned short)24U}, {.addr = (unsigned short)37228U, .value = (unsigned short)0U}, {.addr = (unsigned short)37232U, .value = (unsigned short)10U}, {.addr = (unsigned short)37236U, .value = (unsigned short)0U}, {.addr = (unsigned short)37240U, .value = (unsigned short)1U}, {.addr = (unsigned short)37244U, .value = (unsigned short)0U}, {.addr = (unsigned short)37248U, .value = (unsigned short)64U}, {.addr = (unsigned short)37252U, .value = (unsigned short)55U}, {.addr = (unsigned short)37256U, .value = (unsigned short)5U}, {.addr = (unsigned short)37260U, .value = (unsigned short)40U}, {.addr = (unsigned short)37264U, .value = (unsigned short)0U}, {.addr = (unsigned short)37268U, .value = (unsigned short)19U}, {.addr = (unsigned short)37272U, .value = (unsigned short)39U}, {.addr = (unsigned short)37276U, .value = (unsigned short)39U}, {.addr = (unsigned short)37280U, .value = (unsigned short)24U}, {.addr = (unsigned short)37284U, .value = (unsigned short)18U}, {.addr = (unsigned short)37288U, .value = (unsigned short)26U}, {.addr = (unsigned short)37292U, .value = (unsigned short)36U}, {.addr = (unsigned short)37296U, .value = (unsigned short)10U}, {.addr = (unsigned short)37300U, .value = (unsigned short)19U}, {.addr = (unsigned short)37304U, .value = (unsigned short)47U}, {.addr = (unsigned short)37308U, .value = (unsigned short)39U}, {.addr = (unsigned short)37312U, .value = (unsigned short)39U}, {.addr = (unsigned short)37316U, .value = (unsigned short)39U}, {.addr = (unsigned short)37320U, .value = (unsigned short)39U}, {.addr = (unsigned short)37324U, .value = (unsigned short)64U}, {.addr = (unsigned short)37328U, .value = (unsigned short)64U}, {.addr = (unsigned short)37332U, .value = (unsigned short)240U}, {.addr = (unsigned short)37336U, .value = (unsigned short)240U}, {.addr = (unsigned short)37340U, .value = (unsigned short)22U}, {.addr = (unsigned short)37352U, .value = (unsigned short)0U}, {.addr = (unsigned short)37372U, .value = (unsigned short)3U}, {.addr = (unsigned short)37388U, .value = (unsigned short)8U}, {.addr = (unsigned short)37416U, .value = (unsigned short)40U}, {.addr = (unsigned short)37456U, .value = (unsigned short)68U}, {.addr = (unsigned short)37464U, .value = (unsigned short)16U}, {.addr = (unsigned short)37540U, .value = (unsigned short)187U}, {.addr = (unsigned short)37544U, .value = (unsigned short)187U}};
  #line 182 
  u32 rv[17U] = {7U, 515395U, 526681U, 943718U, 1141335U, 1563971U, 1579513U, 1992294U, 2180436U, 2484218U, 2621434U, 2703656U, 2883584U, 3145728U, 3407872U, 3677711U, 7084047U};
  #line 211 
  r = zd_iowrite16a_locked(chip,(struct zd_ioreq16 *)(& ioreqs),75U);
  #line 212 
  if (r != 0) 
              #line 213 
              return r;
  #line 215 
  return zd_rfwritev_locked(chip,(u32 *)(& rv),17U,(unsigned char)24);
}

#line 218  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_rf_rf2959.c"
static int rf2959_set_channel(struct zd_rf *rf, u8 channel)
{
  #line 220 
  int i;
  #line 220 
  int r;
  #line 221 
  u32 *rv = (u32 *)(& rf2959_table[(int)channel + -1]);
  #line 222 
  struct zd_chip *chip = zd_rf_to_chip(rf);
  #line 224 
  i = 0;
  #line 224 
  while (i <= 1) {
    #line 225 
    r = zd_rfwrite_locked(chip,*(rv + (unsigned long)i),(unsigned char)24);
    #line 226 
    if (r != 0) 
                #line 227 
                return r;
    #line 224 
    i ++;
  }
  #line 229 
  return 0;
}

#line 232  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_rf_rf2959.c"
static int rf2959_switch_radio_on(struct zd_rf *rf)
{
  #line 234 
  struct zd_ioreq16 ioreqs[2U] = {{.addr = (unsigned short)36904U, .value = (unsigned short)137U}, {.addr = (unsigned short)36908U, .value = (unsigned short)0U}};
  #line 238 
  struct zd_chip *chip = zd_rf_to_chip(rf);
  #line 240 
  return zd_iowrite16a_locked(chip,(struct zd_ioreq16 *)(& ioreqs),2U);
}

#line 243  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_rf_rf2959.c"
static int rf2959_switch_radio_off(struct zd_rf *rf)
{
  #line 245 
  struct zd_ioreq16 ioreqs[2U] = {{.addr = (unsigned short)36904U, .value = (unsigned short)21U}, {.addr = (unsigned short)36908U, .value = (unsigned short)129U}};
  #line 249 
  struct zd_chip *chip = zd_rf_to_chip(rf);
  #line 251 
  return zd_iowrite16a_locked(chip,(struct zd_ioreq16 *)(& ioreqs),2U);
}

#line 254  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/zydas/zd1211rw/zd_rf_rf2959.c"
int zd_rf_init_rf2959(struct zd_rf *rf)
{
  #line 256 
  struct zd_chip *chip = zd_rf_to_chip(rf);
  #line 258 
  if (zd_chip_is_zd1211b(chip) != 0) {
    #line 259 
    _dev_err(& (chip->usb.intf)->dev,(char *)"RF2959 is currently not supported for ZD1211B");
    #line 262 
    return -19;
  }
  #line 264 
  rf->init_hw = & rf2959_init_hw;
  #line 265 
  rf->set_channel = & rf2959_set_channel;
  #line 266 
  rf->switch_radio_on = & rf2959_switch_radio_on;
  #line 267 
  rf->switch_radio_off = & rf2959_switch_radio_off;
  #line 268 
  return 0;
}

#line 20  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/common/inline_asm.c"
void ldv_inline_asm(void)
{
  #line 24 
  return;
}

#line 20  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
void ldv_atomic_add(int i, atomic_t *v)
{
  #line 22 
  v->counter += i;
  #line 23 
  return;
}

#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
void ldv_atomic_sub(int i, atomic_t *v)
{
  #line 27 
  v->counter -= i;
  #line 28 
  return;
}

#line 30  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
int ldv_atomic_sub_and_test(int i, atomic_t *v)
{
  #line 32 
  v->counter -= i;
  #line 33 
  if (v->counter != 0) 
                       #line 34 
                       return 0;
  #line 36 
  return 1;
}

#line 39  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
void ldv_atomic_inc(atomic_t *v)
{
  #line 41 
  (v->counter) ++;
  #line 42 
  return;
}

#line 44  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
void ldv_atomic_dec(atomic_t *v)
{
  #line 46 
  (v->counter) --;
  #line 47 
  return;
}

#line 49  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
int ldv_atomic_dec_and_test(atomic_t *v)
{
  #line 51 
  (v->counter) --;
  #line 52 
  if (v->counter != 0) 
                       #line 53 
                       return 0;
  #line 55 
  return 1;
}

#line 58  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
int ldv_atomic_inc_and_test(atomic_t *v)
{
  #line 60 
  (v->counter) ++;
  #line 61 
  if (v->counter != 0) 
                       #line 62 
                       return 0;
  #line 64 
  return 1;
}

#line 67  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
int ldv_atomic_add_return(int i, atomic_t *v)
{
  #line 69 
  v->counter += i;
  #line 70 
  return v->counter;
}

#line 73  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
int ldv_atomic_add_negative(int i, atomic_t *v)
{
  #line 75 
  v->counter += i;
  #line 76 
  return v->counter < 0;
}

#line 79  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
int ldv_atomic_inc_short(short *v)
{
  #line 81 
  *v = (short)((unsigned int)*v + 1U);
  #line 82 
  return (int)*v;
}

#line 20  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/current.c"
static struct task_struct ldv_current;
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/current.c"
struct task_struct *ldv_get_current(void)
{
  #line 28 
  ldv_current.pid = 1;
  #line 29 
  return & ldv_current;
}

#line 32  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 28  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
void ldv_switch_to_interrupt_context(void);
#line 42  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 34  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
void ldv_switch_to_process_context(void);
#line 50  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 40  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
bool ldv_in_interrupt_context(void);
#line 112  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 55  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
int ldv_post_init(int init_ret_val);
#line 132  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 61  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
int ldv_post_probe(int probe_ret_val);
#line 133  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 133 
void ldv_check_return_value_probe(int);
#line 141 
#line 68  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
int ldv_filter_err_code(int ret_val);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/common.h"
#line 23 
void __VERIFIER_assume(int);
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
static bool __ldv_in_interrupt_context = (_Bool)0;
#line 28  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
void ldv_switch_to_interrupt_context(void)
{
  #line 31 
  __ldv_in_interrupt_context = (_Bool)1;
  #line 32 
  return;
}

#line 34  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
void ldv_switch_to_process_context(void)
{
  #line 37 
  __ldv_in_interrupt_context = (_Bool)0;
  #line 38 
  return;
}

#line 40  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
bool ldv_in_interrupt_context(void)
{
  #line 42 
  return __ldv_in_interrupt_context;
}

#line 45  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
static int ldv_filter_positive_int(int val)
{
  #line 47 
  __VERIFIER_assume(val <= 0);
  #line 48 
  return val;
}

#line 55  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
int ldv_post_init(int init_ret_val)
{
  #line 57 
  return ldv_filter_positive_int(init_ret_val);
}

#line 61  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
int ldv_post_probe(int probe_ret_val)
{
  #line 63 
  ldv_check_return_value_probe(probe_ret_val);
  #line 64 
  return ldv_filter_positive_int(probe_ret_val);
}

#line 68  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
int ldv_filter_err_code(int ret_val)
{
  #line 70 
  return ldv_filter_positive_int(ret_val);
}

#line 28  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/common/list.h"
#line 28 
void ldv_save_allocated_memory_to_list(void *);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/device.h"
#line 29  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
void *ldv_dev_get_drvdata(struct device *dev);
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/device.h"
#line 43  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
int ldv_dev_set_drvdata(struct device *dev, void *data);
#line 57  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 57 
void *ldv_xzalloc(size_t size);
#line 29  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
void *ldv_dev_get_drvdata(struct device *dev)
{
  #line 31 
  if (dev != (struct device *)0 && dev->p != (struct device_private *)0) 
    #line 32 
    return (dev->p)->driver_data;
  #line 34 
  return (void *)0;
}

#line 43  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
int ldv_dev_set_drvdata(struct device *dev, void *data)
{
  #line 45 
  dev->p = (struct device_private *)ldv_xzalloc(8UL);
  #line 46 
  ldv_save_allocated_memory_to_list((void *)dev->p);
  #line 47 
  (dev->p)->driver_data = data;
  #line 49 
  return 0;
}

#line 156  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 156 
void ldv_check_alloc_flags(gfp_t);
#line 48  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 48 
void *ldv_malloc(size_t size);
#line 49 
#line 49 
void *ldv_calloc(size_t nmemb, size_t size);
#line 50 
#line 50 
void *ldv_zalloc(size_t size);
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/devres.c"
void *ldv_devm_kmalloc(size_t size, gfp_t flags)
{
  #line 26 
  void *res;
  #line 28 
  ldv_check_alloc_flags(flags);
  #line 29 
  res = ldv_malloc(size);
  #line 30 
  ldv_save_allocated_memory_to_list(res);
  #line 32 
  return res;
}

#line 35  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/devres.c"
void *ldv_devm_kzalloc(size_t size, gfp_t flags)
{
  #line 37 
  void *res;
  #line 39 
  ldv_check_alloc_flags(flags);
  #line 40 
  res = ldv_zalloc(size);
  #line 41 
  ldv_save_allocated_memory_to_list(res);
  #line 43 
  return res;
}

#line 46  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/devres.c"
void *ldv_devm_kmalloc_array(size_t n, size_t size, gfp_t flags)
{
  #line 48 
  void *res;
  #line 50 
  ldv_check_alloc_flags(flags);
  #line 51 
  res = ldv_malloc(n * size);
  #line 52 
  ldv_save_allocated_memory_to_list(res);
  #line 54 
  return res;
}

#line 57  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/devres.c"
void *ldv_devm_kcalloc(size_t n, size_t size, gfp_t flags)
{
  #line 59 
  void *res;
  #line 61 
  ldv_check_alloc_flags(flags);
  #line 62 
  res = ldv_calloc(n,size);
  #line 63 
  ldv_save_allocated_memory_to_list(res);
  #line 65 
  return res;
}

#line 51  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 51 
void ldv_free(void *s);
#line 59 
#line 59 
void *ldv_malloc_unknown_size(void);
#line 31  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 31 
int ldv_undef_int_positive(void);
#line 40 
#line 40 
int ldv_undef_int_nonpositive(void);
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/firmware_loader.c"
int ldv_request_firmware(struct firmware **fw)
{
  #line 27 
  int retval;
  #line 26 
  struct firmware *_fw = (struct firmware *)0;
  #line 29 
  retval = ldv_undef_int_nonpositive();
  #line 31 
  if (retval == 0) {
    #line 33 
    _fw = (struct firmware *)ldv_xzalloc(32UL);
    #line 34 
    _fw->data = (u8 *)ldv_malloc_unknown_size();
    #line 35 
    __VERIFIER_assume(_fw->data != (u8 *)0U);
    #line 36 
    _fw->size = (unsigned long)ldv_undef_int_positive();
  }
  #line 39 
  *fw = _fw;
  #line 41 
  return retval;
}

#line 44  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/firmware_loader.c"
void ldv_release_firmware(struct firmware *fw)
{
  #line 46 
  if (fw != (struct firmware *)0) {
    #line 48 
    ldv_free((void *)fw->data);
    #line 49 
    ldv_free((void *)fw);
  }
  #line 51 
  return;
}

#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/i2c.h"
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/i2c/i2c-core-smbus.c"
s32 ldv_i2c_smbus_read_block_data(u8 *values);
#line 55  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 55 
void *ldv_xmalloc(size_t size);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 23 
int ldv_undef_int(void);
#line 34 
#line 34 
int ldv_undef_int_negative(void);
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/i2c/i2c-core-smbus.c"
s32 ldv_i2c_smbus_read_block_data(u8 *values)
{
  #line 27 
  __u8 size;
  #line 28 
  char *bytes;
  #line 30 
  if (ldv_undef_int() != 0) {
    #line 33 
    size = (unsigned char)ldv_undef_int_positive();
    #line 35 
    __VERIFIER_assume((unsigned int)size <= 32U);
    #line 37 
    bytes = (char *)ldv_xmalloc((unsigned long)size);
    #line 39 
    memcpy((void *)values,(void *)bytes,(unsigned long)size);
    #line 40 
    ldv_free((void *)bytes);
    #line 42 
    return (int)size;
  }
  else {
    #line 46 
    return ldv_undef_int_negative();
  }
}

#line 988  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
__inline static void v4l2_set_subdevdata(struct v4l2_subdev *sd, void *p)
{
  #line 990 
  sd->dev_priv = p;
  #line 991 
  return;
}

#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/media/v4l2-common.h"
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/media/v4l2-core/v4l2-i2c.c"
void ldv_v4l2_i2c_subdev_init(struct v4l2_subdev *sd, struct i2c_client *client, struct v4l2_subdev_ops *ops);
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/media/v4l2-core/v4l2-i2c.c"
void ldv_v4l2_i2c_subdev_init(struct v4l2_subdev *sd, struct i2c_client *client, struct v4l2_subdev_ops *ops)
{
  #line 26 
  sd->ops = ops;
  #line 27 
  v4l2_set_subdevdata(sd,(void *)client);
  #line 28 
  ldv_dev_set_drvdata(& client->dev,(void *)sd);
  #line 29 
  return;
}

#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/spi.c"
struct spi_controller *ldv_spi_alloc_master(struct device *host, unsigned int size)
{
  #line 25 
  struct spi_controller *master;
  #line 27 
  master = (struct spi_controller *)ldv_zalloc((unsigned long)size + 2936UL);
  #line 29 
  if (master == (struct spi_controller *)0) 
                                            #line 30 
                                            return (struct spi_controller *)0;
  #line 32 
  ldv_dev_set_drvdata(& master->dev,(void *)(master + 1U));
  #line 34 
  return master;
}

#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/fb.h"
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/video/fbdev/core/fbsysfs.c"
struct fb_info *ldv_framebuffer_alloc(size_t size);
#line 26  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/fb.h"
#line 38  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/video/fbdev/core/fbsysfs.c"
void ldv_framebuffer_release(struct fb_info *info);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/video/fbdev/core/fbsysfs.c"
struct fb_info *ldv_framebuffer_alloc(size_t size)
{
  #line 25 
  struct fb_info *info;
  #line 27 
  info = (struct fb_info *)ldv_zalloc(size + 1568UL);
  #line 29 
  if (info == (struct fb_info *)0) 
                                   #line 30 
                                   return (struct fb_info *)0;
  #line 32 
  if (size != 0UL) 
                   #line 33 
                   info->par = (void *)((char *)info + 1568UL);
  #line 35 
  return info;
}

#line 38  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/video/fbdev/core/fbsysfs.c"
void ldv_framebuffer_release(struct fb_info *info)
{
  #line 40 
  if (info == (struct fb_info *)0) 
                                   #line 41 
                                   return;
  #line 44 
  ldv_free((void *)info->apertures);
  #line 46 
  ldv_free((void *)info);
  #line 47 
  return;
}

#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/err.h"
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/err.c"
bool ldv_is_err(void *ptr);
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/err.h"
#line 59  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/err.c"
bool ldv_is_err_or_null(void *ptr);
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/err.h"
#line 35  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/err.c"
void *ldv_err_ptr(long error);
#line 26  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/err.h"
#line 47  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_ptr_err(void *ptr);
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/err.c"
bool ldv_is_err(void *ptr)
{
  #line 29 
  if ((unsigned long)ptr > 18446744073709547520UL) 
                                                   #line 30 
                                                   return (_Bool)1; else 
                                                                    #line 32 
                                                                    return (_Bool)0;
}

#line 35  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/err.c"
void *ldv_err_ptr(long error)
{
  #line 37 
  unsigned long result;
  #line 39 
  __VERIFIER_assume(error < 0L);
  #line 40 
  __VERIFIER_assume(error >= -4095L);
  #line 41 
  result = 18446744073709547520UL - (unsigned long)error;
  #line 42 
  __VERIFIER_assume(result > 18446744073709547520UL);
  #line 44 
  return (void *)result;
}

#line 47  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_ptr_err(void *ptr)
{
  #line 49 
  long result;
  #line 51 
  __VERIFIER_assume((unsigned long)ptr > 18446744073709547520UL);
  #line 52 
  result = (long)(18446744073709547520UL - (unsigned long)ptr);
  #line 53 
  __VERIFIER_assume(result < 0L);
  #line 54 
  __VERIFIER_assume(result >= -4095L);
  #line 56 
  return result;
}

#line 59  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/err.c"
bool ldv_is_err_or_null(void *ptr)
{
  #line 61 
  int tmp_0;
  #line 61 
  if (ptr == (void *)0) 
                        #line 61 
                        tmp_0 = 1;
  else {
    #line 61 
    if ((int)ldv_is_err(ptr) != 0) 
                                   #line 61 
                                   tmp_0 = 1; else 
                                                   #line 61 
                                                   tmp_0 = 0;
  }
  #line 61 
  return (_Bool)(tmp_0 != 0);
}

#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/panic.h"
#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/kernel/panic.c"
void ldv_panic(void);
#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/kernel/panic.c"
void ldv_panic(void)
{
  #line 23 
  __VERIFIER_assume(0);
  #line 24 
  return;
}

#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/bitmap.h"
#line 32  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_bitmap_set(unsigned long *map, unsigned int start, int nbits);
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/bitmap.h"
#line 52  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_bitmap_clear(unsigned long *map, unsigned int start, int nbits);
#line 27  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/bitmap.h"
#line 72  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_bitmap_zero(unsigned long *dst, unsigned int nbits);
#line 29  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/bitmap.h"
#line 78  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
unsigned long ldv_bitmap_find_next_zero_area(unsigned long *map, unsigned long size, unsigned long start, unsigned int nr, unsigned long align_mask);
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/find_bit.h"
#line 22 
unsigned long ldv_find_next_bit(unsigned long *addr, unsigned long size, unsigned long offset);
#line 23 
#line 23 
unsigned long ldv_find_next_zero_bit(unsigned long *addr, unsigned long size, unsigned long offset);
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_set_bit(long nr, unsigned long *addr)
{
  #line 24 
  *(addr + (unsigned long)nr / 64UL) |= 1UL << ((unsigned long)nr & 63UL);
  #line 25 
  return;
}

#line 27  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_clear_bit(long nr, unsigned long *addr)
{
  #line 29 
  *(addr + (unsigned long)nr / 64UL) &= ~ (1UL << ((unsigned long)nr & 63UL));
  #line 30 
  return;
}

#line 32  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_bitmap_set(unsigned long *map, unsigned int start, int nbits)
{
  #line 34 
  unsigned long *p = map + (unsigned long)(start / 64U);
  #line 35 
  unsigned int size = start + (unsigned int)nbits;
  #line 36 
  int bits_to_set = (int)(64U - (start & 63U));
  #line 37 
  unsigned long mask_to_set = 18446744073709551615UL << ((unsigned long)start & 63UL);
  #line 39 
  while (nbits - bits_to_set >= 0) {
    #line 40 
    *p |= mask_to_set;
    #line 41 
    nbits -= bits_to_set;
    #line 42 
    bits_to_set = 64;
    #line 43 
    mask_to_set = 18446744073709551615UL;
    #line 44 
    p ++;
  }
  #line 46 
  if (nbits != 0) {
    #line 47 
    mask_to_set = (18446744073709551615UL >> ((unsigned long)(- size) & 63UL)) & mask_to_set;
    #line 48 
    *p |= mask_to_set;
  }
  #line 50 
  return;
}

#line 52  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_bitmap_clear(unsigned long *map, unsigned int start, int nbits)
{
  #line 54 
  unsigned long *p = map + (unsigned long)(start / 64U);
  #line 55 
  unsigned int size = start + (unsigned int)nbits;
  #line 56 
  int bits_to_clear = (int)(64U - (start & 63U));
  #line 57 
  unsigned long mask_to_clear = 18446744073709551615UL << ((unsigned long)start & 63UL);
  #line 59 
  while (nbits - bits_to_clear >= 0) {
    #line 60 
    *p &= ~ mask_to_clear;
    #line 61 
    nbits -= bits_to_clear;
    #line 62 
    bits_to_clear = 64;
    #line 63 
    mask_to_clear = 18446744073709551615UL;
    #line 64 
    p ++;
  }
  #line 66 
  if (nbits != 0) {
    #line 67 
    mask_to_clear = (18446744073709551615UL >> ((unsigned long)(- size) & 63UL)) & mask_to_clear;
    #line 68 
    *p &= ~ mask_to_clear;
  }
  #line 70 
  return;
}

#line 72  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_bitmap_zero(unsigned long *dst, unsigned int nbits)
{
  #line 74 
  unsigned int len = (unsigned int)(((unsigned long)nbits + 63UL) / 64UL) * 8U;
  #line 75 
  memset((void *)dst,0,(unsigned long)len);
  #line 76 
  return;
}

#line 78  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
unsigned long ldv_bitmap_find_next_zero_area(unsigned long *map, unsigned long size, unsigned long start, unsigned int nr, unsigned long align_mask)
{
  #line 80 
  unsigned long index;
  #line 80 
  unsigned long end;
  #line 80 
  unsigned long i;
  #line 82 
  again: 
         #line 82 
  ;
  #line 83 
  index = ldv_find_next_zero_bit(map,size,start);
  #line 84 
  index = (index + align_mask) & ~ align_mask;
  #line 85 
  end = (unsigned long)nr + index;
  #line 87 
  if (end > size) 
                  #line 88 
                  return end;
  #line 90 
  i = ldv_find_next_bit(map,end,index);
  #line 92 
  if (i < end) {
    #line 93 
    start = i + 1UL;
    #line 94 
    goto again;
  }
  #line 97 
  return index;
}

#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/find_bit.h"
#line 68  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/find_bit.common.c"
unsigned long ldv_find_first_bit(unsigned long *addr, unsigned long size);
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/find_bit.h"
#line 25 
void ldv_check_find_bit_offset(unsigned long, unsigned long);
#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/find_bit.common.c"
static unsigned long ldv_ffs(unsigned long word)
{
  #line 23 
  int num = 0;
  #line 25 
  if ((word & 4294967295UL) == 0UL) {
    #line 26 
    num += 32;
    #line 27 
    word >>= 32;
  }
  #line 29 
  if ((word & 65535UL) == 0UL) {
    #line 30 
    num += 16;
    #line 31 
    word >>= 16;
  }
  #line 33 
  if ((word & 255UL) == 0UL) {
    #line 34 
    num += 8;
    #line 35 
    word >>= 8;
  }
  #line 37 
  if ((word & 15UL) == 0UL) {
    #line 38 
    num += 4;
    #line 39 
    word >>= 4;
  }
  #line 41 
  if ((word & 3UL) == 0UL) {
    #line 42 
    num += 2;
    #line 43 
    word >>= 2;
  }
  #line 45 
  if ((word & 1UL) == 0UL) 
                           #line 46 
                           num ++;
  #line 48 
  return (unsigned long)num;
}

#line 51  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/find_bit.common.c"
static unsigned long ldv_min(unsigned long a, unsigned long b)
{
  #line 53 
  if (a < b) 
             #line 54 
             return a;
  #line 56 
  return b;
}

#line 59  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/find_bit.common.c"
static unsigned long ldv_restrict_find_bit_res(unsigned long res, unsigned long size)
{
  #line 62 
  __VERIFIER_assume(1);
  #line 63 
  __VERIFIER_assume(res <= size);
  #line 65 
  return res;
}

#line 68  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/find_bit.common.c"
unsigned long ldv_find_first_bit(unsigned long *addr, unsigned long size)
{
  #line 70 
  unsigned long i;
  #line 72 
  i = 0UL;
  #line 72 
  while (i * 64UL < size) {
    #line 73 
    if (*(addr + i) != 0UL) {
      #line 74 
      ;
      #line 74 
      ;
      #line 74 
      ;
      #line 74 
      return ldv_restrict_find_bit_res(ldv_min(i * 64UL + ldv_ffs(*(addr + i)),size),
                                  size);
    }
    #line 72 
    i ++;
  }
  #line 76 
  return size;
}

#line 79  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/find_bit.common.c"
unsigned long ldv_find_next_bit(unsigned long *addr, unsigned long size, unsigned long offset)
{
  #line 81 
  unsigned long tmp;
  #line 83 
  ldv_check_find_bit_offset(size,offset);
  #line 85 
  tmp = *(addr + offset / 64UL);
  #line 86 
  tmp = (unsigned long)((18446744073709551615ULL << (offset & 63UL)) & (unsigned long long)tmp);
  #line 87 
  offset &= 18446744073709551552UL;
  #line 89 
  while (tmp == 0UL) {
    #line 90 
    offset += 64UL;
    #line 91 
    if (offset >= size) 
                        #line 92 
                        return size;
    #line 94 
    tmp = *(addr + offset / 64UL);
  }
  #line 97 
  ;
  #line 97 
  ;
  #line 97 
  ;
  #line 97 
  return ldv_restrict_find_bit_res(ldv_min(ldv_ffs(tmp) + offset,size),size);
}

#line 100  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/find_bit.common.c"
unsigned long ldv_find_next_zero_bit(unsigned long *addr, unsigned long size, unsigned long offset)
{
  #line 102 
  unsigned long tmp;
  #line 104 
  ldv_check_find_bit_offset(size,offset);
  #line 106 
  tmp = *(addr + offset / 64UL);
  #line 107 
  tmp = ~ tmp;
  #line 108 
  tmp = (unsigned long)((18446744073709551615ULL << (offset & 63UL)) & (unsigned long long)tmp);
  #line 109 
  offset &= 18446744073709551552UL;
  #line 111 
  while (tmp == 0UL) {
    #line 112 
    offset += 64UL;
    #line 113 
    if (offset >= size) 
                        #line 114 
                        return size;
    #line 116 
    tmp = *(addr + offset / 64UL);
    #line 117 
    tmp = ~ tmp;
  }
  #line 120 
  ;
  #line 120 
  ;
  #line 120 
  ;
  #line 120 
  return ldv_restrict_find_bit_res(ldv_min(ldv_ffs(tmp) + offset,size),size);
}

#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/string.h"
#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
size_t ldv_strlen(char *s);
#line 26  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/string.h"
#line 31  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
int ldv_strcmp(char *cs, char *ct);
#line 27  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/string.h"
#line 40  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
int ldv_strncmp(char *cs, char *ct, __kernel_size_t count);
#line 28  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/string.h"
#line 70  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
char *ldv_strstr(char *cs, char *ct);
#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
size_t ldv_strlen(char *s)
{
  #line 23 
  unsigned int len = 0U;
  #line 25 
  while ((int)*s != 0) {
    #line 26 
    len ++;
    #line 25 
    s ++;
  }
  #line 28 
  return (unsigned long)len;
}

#line 31  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
int ldv_strcmp(char *cs, char *ct)
{
  #line 33 
  while ((int)*cs != 0 && (int)*ct != 0) {
    #line 34 
    if ((int)*cs != (int)*ct) 
                              #line 35 
                              break;
    #line 33 
    cs ++;
    #line 33 
    ct ++;
  }
  #line 37 
  return (int)*cs - (int)*ct;
}

#line 40  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
int ldv_strncmp(char *cs, char *ct, __kernel_size_t count)
{
  #line 42 
  if (count == 0UL) 
                    #line 43 
                    return 0;
  #line 45 
  while ((int)*cs != 0 && (int)*ct != 0) {
    #line 46 
    if ((int)*cs != (int)*ct) 
                              #line 47 
                              break;
    #line 49 
    count --;
    #line 51 
    if (count == 0UL) 
                      #line 52 
                      break;
    #line 45 
    cs ++;
    #line 45 
    ct ++;
  }
  #line 55 
  return (int)*cs - (int)*ct;
}

#line 58  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
int ldv_memcmp(void *cs, void *ct, size_t count)
{
  #line 60 
  unsigned char *su1;
  #line 60 
  unsigned char *su2;
  #line 61 
  int res = 0;
  #line 63 
  su1 = (unsigned char *)cs;
  #line 63 
  su2 = (unsigned char *)ct;
  #line 63 
  while (count != 0UL) {
    #line 64 
    res = (int)*su1 - (int)*su2;
    #line 64 
    if (res != 0) 
                  #line 65 
                  break;
    #line 63 
    su1 ++;
    #line 63 
    su2 ++;
    #line 63 
    count --;
  }
  #line 67 
  return res;
}

#line 70  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
char *ldv_strstr(char *cs, char *ct)
{
  #line 72 
  size_t cs_len;
  #line 72 
  size_t ct_len;
  #line 74 
  cs_len = ldv_strlen(cs);
  #line 75 
  ct_len = ldv_strlen(ct);
  #line 77 
  while (cs_len >= ct_len) {
    #line 78 
    if (ldv_memcmp((void *)cs,(void *)ct,ct_len) == 0) 
                                                       #line 79 
                                                       return cs;
    #line 81 
    cs_len --;
    #line 82 
    cs ++;
  }
  #line 85 
  return (char *)0;
}

#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/list.c"
void ldv_init_list_head(struct list_head *list)
{
  #line 23 
  list->next = list;
  #line 24 
  list->prev = list;
  #line 25 
  return;
}

#line 30  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 69  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
struct kmem_cache *ldv_kmem_cache_create(char *name, unsigned int size);
#line 31  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 85  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmem_cache_alloc(struct kmem_cache *cachep, gfp_t flags);
#line 32  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 90  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmem_cache_zalloc(struct kmem_cache *cachep, gfp_t flags);
#line 33  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 95  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void ldv_kmem_cache_free(struct kmem_cache *cachep, void *objp);
#line 34  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 100  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void ldv_kmem_cache_destroy(struct kmem_cache *cachep);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc(size_t size, gfp_t flags)
{
  #line 25 
  void *res;
  #line 27 
  ldv_check_alloc_flags(flags);
  #line 28 
  res = ldv_malloc(size);
  #line 30 
  return res;
}

#line 33  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kzalloc(size_t size, gfp_t flags)
{
  #line 35 
  void *res;
  #line 37 
  ldv_check_alloc_flags(flags);
  #line 38 
  res = ldv_zalloc(size);
  #line 40 
  return res;
}

#line 43  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags)
{
  #line 45 
  void *res;
  #line 47 
  ldv_check_alloc_flags(flags);
  #line 48 
  res = ldv_malloc(n * size);
  #line 50 
  return res;
}

#line 53  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags)
{
  #line 55 
  void *res;
  #line 57 
  ldv_check_alloc_flags(flags);
  #line 58 
  res = ldv_calloc(n,size);
  #line 60 
  return res;
}

#line 69  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
struct kmem_cache *ldv_kmem_cache_create(char *name, unsigned int size)
{
  #line 71 
  struct kmem_cache *res;
  #line 72 
  struct ldv_kmem_cache *ldv_res;
  #line 74 
  res = (struct kmem_cache *)ldv_zalloc(16UL);
  #line 76 
  if (res != (struct kmem_cache *)0) {
    #line 77 
    ldv_res = (struct ldv_kmem_cache *)res;
    #line 78 
    ldv_res->name = name;
    #line 79 
    ldv_res->size = size;
  }
  #line 82 
  return res;
}

#line 85  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmem_cache_alloc(struct kmem_cache *cachep, gfp_t flags)
{
  #line 87 
  return ldv_kmalloc((unsigned long)((struct ldv_kmem_cache *)cachep)->size,
                  flags);
}

#line 90  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmem_cache_zalloc(struct kmem_cache *cachep, gfp_t flags)
{
  #line 92 
  return ldv_kzalloc((unsigned long)((struct ldv_kmem_cache *)cachep)->size,
                  flags);
}

#line 95  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void ldv_kmem_cache_free(struct kmem_cache *cachep, void *objp)
{
  #line 97 
  ldv_free(objp);
  #line 98 
  return;
}

#line 100  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void ldv_kmem_cache_destroy(struct kmem_cache *cachep)
{
  #line 102 
  ldv_free((void *)cachep);
  #line 103 
  return;
}

#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/string.h"
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/util.c"
void *ldv_kmemdup(void *src, size_t len, gfp_t gfp);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/util.c"
void *ldv_kmemdup(void *src, size_t len, gfp_t gfp)
{
  #line 25 
  void *res;
  #line 27 
  ldv_check_alloc_flags(gfp);
  #line 28 
  res = ldv_malloc(len);
  #line 30 
  if (res != (void *)0) 
                        #line 31 
                        memcpy(res,src,len);
  #line 33 
  return res;
}

#line 162  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 162 
void ldv_check_alloc_nonatomic(void);
#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/vmalloc.h"
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/vmalloc.c"
void *ldv_vmalloc(unsigned long size);
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/vmalloc.h"
#line 33  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/vmalloc.c"
void *ldv_vzalloc(unsigned long size);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/vmalloc.h"
#line 43  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/vmalloc.c"
void ldv_vfree(void *addr);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/vmalloc.c"
void *ldv_vmalloc(unsigned long size)
{
  #line 25 
  void *res;
  #line 27 
  ldv_check_alloc_nonatomic();
  #line 28 
  res = ldv_malloc(size);
  #line 30 
  return res;
}

#line 33  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/vmalloc.c"
void *ldv_vzalloc(unsigned long size)
{
  #line 35 
  void *res;
  #line 37 
  ldv_check_alloc_nonatomic();
  #line 38 
  res = ldv_zalloc(size);
  #line 40 
  return res;
}

#line 43  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/vmalloc.c"
void ldv_vfree(void *addr)
{
  #line 45 
  ldv_free(addr);
  #line 46 
  return;
}

#line 28  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 28 
void *malloc(size_t);
#line 29 
#line 29 
void *calloc(size_t, size_t);
#line 30 
#line 30 
void free(void *);
#line 45 
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
unsigned int ldv_is_memory_alloc_failures;
#line 56  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 63  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xcalloc(size_t nmemb, size_t size);
#line 60  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 88  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc_unknown_size(void);
#line 61  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 97  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc_unknown_size(void);
#line 64  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc(size_t size);
#line 65  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 37  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc(size_t nmemb, size_t size);
#line 66  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 42  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc(size_t size);
#line 67  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 47  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void ldv_reference_free(void *s);
#line 69  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 52  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_realloc(void *ptr, size_t size);
#line 71  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 80  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc(size_t size);
#line 72  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 90  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xcalloc(size_t nmemb, size_t size);
#line 73  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 100  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xzalloc(size_t size);
#line 75  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 110  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc_unknown_size(void);
#line 76  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 124  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc_unknown_size(void);
#line 77  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 139  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc_unknown_size(void);
#line 83  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 106  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc_unknown_size(size_t size);
#line 85  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 144  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size);
#line 87  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 87 
void *external_allocated_data(void);
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
unsigned int ldv_is_memory_alloc_failures = 1U;
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc(size_t size)
{
  #line 26 
  void *res;
  #line 28 
  if (ldv_is_memory_alloc_failures != 0U) {
    #line 28 
    if (ldv_undef_int() != 0) 
                              #line 29 
                              return (void *)0;
  }
  #line 32 
  res = malloc(size);
  #line 33 
  __VERIFIER_assume(res != (void *)0);
  #line 34 
  return res;
}

#line 37  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc(size_t nmemb, size_t size)
{
  #line 39 
  return calloc(nmemb,size);
}

#line 42  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc(size_t size)
{
  #line 44 
  return calloc(1UL,size);
}

#line 47  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void ldv_reference_free(void *s)
{
  #line 49 
  free(s);
  #line 50 
  return;
}

#line 52  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_realloc(void *ptr, size_t size)
{
  #line 54 
  void *res;
  #line 56 
  if (ptr != (void *)0 && size == 0UL) {
    #line 57 
    free(ptr);
    #line 58 
    return (void *)0;
  }
  #line 61 
  if (ptr == (void *)0) {
    #line 62 
    res = malloc(size);
    #line 63 
    return res;
  }
  #line 66 
  if (ldv_undef_int() != 0) {
    #line 68 
    res = malloc(size);
    #line 69 
    __VERIFIER_assume(res != (void *)0);
    #line 71 
    memcpy(res,ptr,size);
    #line 72 
    free(ptr);
    #line 74 
    return res;
  }
  else 
       #line 77 
       return (void *)0;
}

#line 80  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc(size_t size)
{
  #line 82 
  void *res;
  #line 84 
  res = malloc(size);
  #line 85 
  __VERIFIER_assume(res != (void *)0);
  #line 87 
  return res;
}

#line 90  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xcalloc(size_t nmemb, size_t size)
{
  #line 92 
  void *res;
  #line 94 
  res = calloc(nmemb,size);
  #line 95 
  __VERIFIER_assume(res != (void *)0);
  #line 97 
  return res;
}

#line 100  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xzalloc(size_t size)
{
  #line 102 
  void *res;
  #line 104 
  res = calloc(1UL,size);
  #line 105 
  __VERIFIER_assume(res != (void *)0);
  #line 107 
  return res;
}

#line 110  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc_unknown_size(void)
{
  #line 112 
  void *res;
  #line 114 
  if (ldv_undef_int() != 0) {
    #line 116 
    res = external_allocated_data();
    #line 117 
    __VERIFIER_assume(res != (void *)0);
    #line 118 
    return res;
  }
  else 
       #line 121 
       return (void *)0;
}

#line 124  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc_unknown_size(void)
{
  #line 126 
  void *res;
  #line 128 
  if (ldv_undef_int() != 0) {
    #line 130 
    res = external_allocated_data();
    #line 131 
    memset(res,0,8UL);
    #line 132 
    __VERIFIER_assume(res != (void *)0);
    #line 133 
    return res;
  }
  else 
       #line 136 
       return (void *)0;
}

#line 139  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc_unknown_size(void)
{
  #line 141 
  return ldv_reference_calloc_unknown_size();
}

#line 144  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size)
{
  #line 146 
  void *res;
  #line 149 
  res = external_allocated_data();
  #line 150 
  __VERIFIER_assume(res != (void *)0);
  #line 152 
  return res;
}

#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc(size_t size)
{
  #line 25 
  void *res;
  #line 26 
  res = ldv_reference_malloc(size);
  #line 27 
  if (res != (void *)0) {
    #line 28 
    int tmp_0;
    #line 28 
    if (ldv_is_err(res)) 
                         #line 28 
                         tmp_0 = 0; else 
                                         #line 28 
                                         tmp_0 = 1;
    #line 28 
    __VERIFIER_assume(tmp_0);
  }
  #line 29 
  return res;
}

#line 32  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc(size_t nmemb, size_t size)
{
  #line 34 
  void *res;
  #line 35 
  res = ldv_reference_calloc(nmemb,size);
  #line 36 
  if (res != (void *)0) {
    #line 37 
    int tmp_0;
    #line 37 
    if (ldv_is_err(res)) 
                         #line 37 
                         tmp_0 = 0; else 
                                         #line 37 
                                         tmp_0 = 1;
    #line 37 
    __VERIFIER_assume(tmp_0);
  }
  #line 38 
  return res;
}

#line 41  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc(size_t size)
{
  #line 43 
  void *res;
  #line 44 
  res = ldv_reference_zalloc(size);
  #line 45 
  if (res != (void *)0) {
    #line 46 
    int tmp_0;
    #line 46 
    if (ldv_is_err(res)) 
                         #line 46 
                         tmp_0 = 0; else 
                                         #line 46 
                                         tmp_0 = 1;
    #line 46 
    __VERIFIER_assume(tmp_0);
  }
  #line 47 
  return res;
}

#line 50  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void ldv_free(void *s)
{
  #line 52 
  ldv_reference_free(s);
  #line 53 
  return;
}

#line 55  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc(size_t size)
{
  #line 57 
  void *res;
  #line 59 
  int tmp_0;
  #line 58 
  res = ldv_reference_xmalloc(size);
  #line 59 
  if (ldv_is_err(res)) 
                       #line 59 
                       tmp_0 = 0; else 
                                       #line 59 
                                       tmp_0 = 1;
  #line 59 
  __VERIFIER_assume(tmp_0);
  #line 60 
  return res;
}

#line 63  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xcalloc(size_t nmemb, size_t size)
{
  #line 65 
  void *res;
  #line 67 
  int tmp_0;
  #line 66 
  res = ldv_reference_xcalloc(nmemb,size);
  #line 67 
  if (ldv_is_err(res)) 
                       #line 67 
                       tmp_0 = 0; else 
                                       #line 67 
                                       tmp_0 = 1;
  #line 67 
  __VERIFIER_assume(tmp_0);
  #line 68 
  return res;
}

#line 71  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xzalloc(size_t size)
{
  #line 73 
  void *res;
  #line 75 
  int tmp_0;
  #line 74 
  res = ldv_reference_xzalloc(size);
  #line 75 
  if (ldv_is_err(res)) 
                       #line 75 
                       tmp_0 = 0; else 
                                       #line 75 
                                       tmp_0 = 1;
  #line 75 
  __VERIFIER_assume(tmp_0);
  #line 76 
  return res;
}

#line 79  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc_unknown_size(void)
{
  #line 81 
  void *res;
  #line 82 
  res = ldv_reference_malloc_unknown_size();
  #line 83 
  if (res != (void *)0) {
    #line 84 
    int tmp_0;
    #line 84 
    if (ldv_is_err(res)) 
                         #line 84 
                         tmp_0 = 0; else 
                                         #line 84 
                                         tmp_0 = 1;
    #line 84 
    __VERIFIER_assume(tmp_0);
  }
  #line 85 
  return res;
}

#line 88  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc_unknown_size(void)
{
  #line 90 
  void *res;
  #line 91 
  res = ldv_reference_calloc_unknown_size();
  #line 92 
  if (res != (void *)0) {
    #line 93 
    int tmp_0;
    #line 93 
    if (ldv_is_err(res)) 
                         #line 93 
                         tmp_0 = 0; else 
                                         #line 93 
                                         tmp_0 = 1;
    #line 93 
    __VERIFIER_assume(tmp_0);
  }
  #line 94 
  return res;
}

#line 97  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc_unknown_size(void)
{
  #line 99 
  void *res;
  #line 100 
  res = ldv_reference_zalloc_unknown_size();
  #line 101 
  if (res != (void *)0) {
    #line 102 
    int tmp_0;
    #line 102 
    if (ldv_is_err(res)) 
                         #line 102 
                         tmp_0 = 0; else 
                                         #line 102 
                                         tmp_0 = 1;
    #line 102 
    __VERIFIER_assume(tmp_0);
  }
  #line 103 
  return res;
}

#line 106  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc_unknown_size(size_t size)
{
  #line 108 
  void *res;
  #line 110 
  int tmp_0;
  #line 109 
  res = ldv_reference_xmalloc_unknown_size(size);
  #line 110 
  if (ldv_is_err(res)) 
                       #line 110 
                       tmp_0 = 0; else 
                                       #line 110 
                                       tmp_0 = 1;
  #line 110 
  __VERIFIER_assume(tmp_0);
  #line 111 
  return res;
}

/* compiler builtin: 
   long __builtin_expect(long exp, long c);   */
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/common.h"
#line 22 
void __VERIFIER_error(void);
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/common.h"
long __builtin_expect(long exp, long c)
{
  #line 26 
  return exp;
}

#line 35  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/gcc.c"
void __builtin_trap(void)
{
  #line 37 
  __VERIFIER_error();
  #line 38 
  return;
}

#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 53  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
long ldv_undef_long(void);
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 61  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned int ldv_undef_uint(void);
#line 26  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 77  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long ldv_undef_ulong(void);
#line 27  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 85  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long long ldv_undef_ulonglong(void);
#line 28  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 69  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr(void);
#line 37  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 111  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_nonnegative(void);
#line 43  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 129  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr_non_null(void);
#line 54  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 139  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int __ldv_undef_int_range(int begin, int end);
#line 56  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 151  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int __ldv_undef_int_range2(int begin, int end);
#line 29 
#line 29 
int __VERIFIER_nondet_int(void);
#line 31 
#line 31 
long __VERIFIER_nondet_long(void);
#line 38 
#line 38 
unsigned int __VERIFIER_nondet_uint(void);
#line 41 
#line 41 
unsigned long __VERIFIER_nondet_ulong(void);
#line 42 
#line 42 
unsigned long long __VERIFIER_nondet_ulonglong(void);
#line 43 
#line 43 
void *__VERIFIER_nondet_pointer(void);
#line 45  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int(void)
{
  #line 48 
  int undef_int = __VERIFIER_nondet_int();
  #line 50 
  return undef_int;
}

#line 53  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
long ldv_undef_long(void)
{
  #line 56 
  long undef_long = __VERIFIER_nondet_long();
  #line 58 
  return undef_long;
}

#line 61  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned int ldv_undef_uint(void)
{
  #line 64 
  unsigned int undef_uint = __VERIFIER_nondet_uint();
  #line 66 
  return undef_uint;
}

#line 69  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr(void)
{
  #line 72 
  void *undef_ptr = __VERIFIER_nondet_pointer();
  #line 74 
  return undef_ptr;
}

#line 77  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long ldv_undef_ulong(void)
{
  #line 80 
  unsigned long undef_ulong = __VERIFIER_nondet_ulong();
  #line 82 
  return undef_ulong;
}

#line 85  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long long ldv_undef_ulonglong(void)
{
  #line 88 
  unsigned long long undef_ulonglong = __VERIFIER_nondet_ulonglong();
  #line 90 
  return undef_ulonglong;
}

#line 93  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_positive(void)
{
  #line 95 
  int ret = ldv_undef_int();
  #line 97 
  __VERIFIER_assume(ret > 0);
  #line 99 
  return ret;
}

#line 102  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_negative(void)
{
  #line 104 
  int ret = ldv_undef_int();
  #line 106 
  __VERIFIER_assume(ret < 0);
  #line 108 
  return ret;
}

#line 111  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_nonnegative(void)
{
  #line 113 
  int ret = ldv_undef_int();
  #line 115 
  __VERIFIER_assume(ret >= 0);
  #line 117 
  return ret;
}

#line 120  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_nonpositive(void)
{
  #line 122 
  int ret = ldv_undef_int();
  #line 124 
  __VERIFIER_assume(ret <= 0);
  #line 126 
  return ret;
}

#line 129  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr_non_null(void)
{
  #line 131 
  void *ret = ldv_undef_ptr();
  #line 133 
  __VERIFIER_assume(ret != (void *)0);
  #line 135 
  return ret;
}

#line 139  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int __ldv_undef_int_range(int begin, int end)
{
  #line 141 
  int ret;
  #line 143 
  ret = ldv_undef_int();
  #line 144 
  __VERIFIER_assume(ret >= begin);
  #line 145 
  __VERIFIER_assume(ret <= end);
  #line 147 
  return ret;
}

#line 151  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int __ldv_undef_int_range2(int begin, int end)
{
  #line 153 
  int ret;
  #line 155 
  ret = begin;
  #line 155 
  while (ret < end) {
    #line 156 
    if (ldv_undef_int() != 0) 
                              #line 157 
                              break;
    #line 155 
    ret ++;
  }
  #line 159 
  return ret;
}

#line 62  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 62 
void ldv_initialize(void);
#line 87 
#line 87 
void ldv_failed_usb_register_driver(void);
#line 123 
#line 123 
void ldv_pre_probe(void);
#line 35  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/thread.h"
#line 35 
int pthread_create(pthread_t *, pthread_attr_t *, void *(*)(void *), void *);
#line 39 
#line 39 
int pthread_join(pthread_t, void **);
#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rtnetlink.h"
#line 33 
void rtnl_lock(void);
#line 34 
#line 34 
void rtnl_unlock(void);
#line 51  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/emg/0/environment_model.c"
#line 87 
void emg_dispatch_deregister_3(struct ieee80211_hw *arg0);
#line 52 
#line 96 
void emg_dispatch_deregister_7(struct usb_driver *arg0);
#line 53 
#line 76 
void emg_dispatch_register_2(struct ieee80211_hw *arg0);
#line 54 
#line 105 
void emg_dispatch_register_9(struct usb_driver *arg0);
#line 55 
#line 822 
void *emg_entry_point_insmod(void *arg0);
#line 58 
#line 116 
void *emg_ieee80211_ieee80211_scenario_zd_ops(void *arg0);
#line 67 
#line 400 
void *emg_usb_usb_scenario_driver(void *arg0);
#line 68 
#line 851 
int main(void);
#line 71  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/emg/0/environment_model.c"
pthread_t emg_thread_12;
#line 72  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/emg/0/environment_model.c"
pthread_t emg_thread_13;
#line 76  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/emg/0/environment_model.c"
void emg_dispatch_register_2(struct ieee80211_hw *arg0)
{
  #line 77 
  int ret;
  #line 78 
  struct emg_struct_ieee80211_scenario_zd_ops_12 *cf_arg_12;
  #line 79 
  cf_arg_12 = (struct emg_struct_ieee80211_scenario_zd_ops_12 *)ldv_xmalloc(16UL);
  #line 80 
  cf_arg_12->arg0 = arg0;
  #line 81 
  ret = pthread_create(& emg_thread_12,(pthread_attr_t *)0,& emg_ieee80211_ieee80211_scenario_zd_ops,(void *)cf_arg_12);
  #line 82 
  __VERIFIER_assume(ret == 0);
  #line 83 
  return;
}

#line 87  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/emg/0/environment_model.c"
void emg_dispatch_deregister_3(struct ieee80211_hw *arg0)
{
  #line 88 
  int ret;
  #line 89 
  struct emg_struct_ieee80211_scenario_zd_ops_12 *cf_arg_12;
  #line 90 
  ret = pthread_join(emg_thread_12,(void **)0);
  #line 91 
  __VERIFIER_assume(ret == 0);
  #line 92 
  return;
}

#line 96  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/emg/0/environment_model.c"
void emg_dispatch_deregister_7(struct usb_driver *arg0)
{
  #line 97 
  int ret;
  #line 98 
  struct emg_struct_usb_scenario_driver_13 *cf_arg_13;
  #line 99 
  ret = pthread_join(emg_thread_13,(void **)0);
  #line 100 
  __VERIFIER_assume(ret == 0);
  #line 101 
  return;
}

#line 105  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/emg/0/environment_model.c"
void emg_dispatch_register_9(struct usb_driver *arg0)
{
  #line 106 
  int ret;
  #line 107 
  struct emg_struct_usb_scenario_driver_13 *cf_arg_13;
  #line 108 
  cf_arg_13 = (struct emg_struct_usb_scenario_driver_13 *)ldv_xmalloc(16UL);
  #line 109 
  cf_arg_13->arg0 = arg0;
  #line 110 
  ret = pthread_create(& emg_thread_13,(pthread_attr_t *)0,& emg_usb_usb_scenario_driver,(void *)cf_arg_13);
  #line 111 
  __VERIFIER_assume(ret == 0);
  #line 112 
  return;
}

#line 116  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/emg/0/environment_model.c"
void *emg_ieee80211_ieee80211_scenario_zd_ops(void *arg0)
{
  #line 119 
  struct ieee80211_ops *emg_12_container;
  #line 120 
  struct ieee80211_vif *emg_12_emg_param_1_0;
  #line 121 
  struct ieee80211_vif *emg_12_emg_param_1_1;
  #line 122 
  struct ieee80211_vif *emg_12_emg_param_1_10;
  #line 123 
  struct ieee80211_tx_control *emg_12_emg_param_1_11;
  #line 124 
  struct cfg80211_wowlan *emg_12_emg_param_1_13;
  #line 125 
  unsigned int emg_12_emg_param_1_4;
  #line 126 
  unsigned int emg_12_emg_param_1_5;
  #line 127 
  struct ieee80211_vif *emg_12_emg_param_1_8;
  #line 128 
  struct netdev_hw_addr_list *emg_12_emg_param_1_9;
  #line 129 
  struct sk_buff *emg_12_emg_param_2_12;
  #line 130 
  struct ieee80211_bss_conf *emg_12_emg_param_2_2;
  #line 131 
  unsigned int *emg_12_emg_param_2_6;
  #line 132 
  unsigned int emg_12_emg_param_3_3;
  #line 133 
  unsigned long long emg_12_emg_param_3_7;
  #line 134 
  struct ieee80211_hw *emg_12_resource;
  #line 135 
  int emg_12_ret;
  #line 136 
  int emg_repeat_cnt_started_12_0 = 1;
  #line 137 
  int emg_repeat_cnt_started_12_1 = 1;
  #line 138 
  int emg_repeat_cnt_main_12_0 = 1;
  #line 139 
  int emg_repeat_cnt_main_12_1 = 1;
  #line 141 
  struct emg_struct_ieee80211_scenario_zd_ops_12 *data = (struct emg_struct_ieee80211_scenario_zd_ops_12 *)arg0;
  #line 145 
  emg_12_ret = ldv_undef_int();
  #line 146 
  emg_12_container = emg_alias_zd_ops;
  #line 147 
  emg_12_ret = ldv_undef_int();
  #line 150 
  if (data != (struct emg_struct_ieee80211_scenario_zd_ops_12 *)0) {
    #line 151 
    emg_12_resource = data->arg0;
    #line 152 
    ldv_free((void *)data);
  }
  #line 157 
  goto emg_main_12;
  #line 161 
  return (void *)0;
  #line 164 
  emg_main_12: 
               #line 164 
  ;
  #line 165 
  if (ldv_undef_int() != 0) {
    #line 168 
    rtnl_lock();
    #line 172 
    emg_12_ret = zd_op_start(emg_12_resource);
    #line 177 
    emg_12_ret = ldv_filter_err_code(emg_12_ret);
    #line 178 
    rtnl_unlock();
    #line 181 
    if (ldv_undef_int() != 0) {
      #line 183 
      __VERIFIER_assume(emg_12_ret == 0);
      #line 187 
      goto emg_started_12;
    }
    else 
         #line 192 
         __VERIFIER_assume(emg_12_ret != 0);
    #line 196 
    if (emg_repeat_cnt_main_12_1 > 0) {
      #line 197 
      emg_repeat_cnt_main_12_1 --;
      #line 199 
      goto emg_main_12;
    }
    else 
         #line 201 
         __VERIFIER_assume(0);
  }
  #line 211 
  return (void *)0;
  #line 214 
  emg_started_12: 
                  #line 214 
  ;
  #line 215 
  switch (ldv_undef_int()) {
    #line 216 
    case 0: 
            #line 216 
    ;
    #line 218 
    emg_12_emg_param_1_11 = (struct ieee80211_tx_control *)ldv_xmalloc_unknown_size(0UL);
    #line 218 
    emg_12_emg_param_1_11 = emg_12_emg_param_1_11;
    #line 219 
    emg_12_emg_param_2_12 = (struct sk_buff *)ldv_xmalloc_unknown_size(0UL);
    #line 219 
    emg_12_emg_param_2_12 = emg_12_emg_param_2_12;
    #line 223 
    emg_wrapper_zd_op_tx(emg_12_resource,emg_12_emg_param_1_11,emg_12_emg_param_2_12);
    #line 227 
    ldv_free((void *)emg_12_emg_param_1_11);
    #line 228 
    ldv_free((void *)emg_12_emg_param_2_12);
    #line 230 
    break;
    #line 232 
    case 1: 
            #line 232 
    ;
    #line 234 
    emg_12_emg_param_1_10 = (struct ieee80211_vif *)ldv_xmalloc_unknown_size(0UL);
    #line 234 
    emg_12_emg_param_1_10 = emg_12_emg_param_1_10;
    #line 238 
    emg_wrapper_zd_op_remove_interface(emg_12_resource,emg_12_emg_param_1_10);
    #line 242 
    ldv_free((void *)emg_12_emg_param_1_10);
    #line 244 
    break;
    #line 246 
    case 2: 
            #line 246 
    ;
    #line 248 
    emg_12_emg_param_1_9 = (struct netdev_hw_addr_list *)ldv_xmalloc_unknown_size(0UL);
    #line 248 
    emg_12_emg_param_1_9 = emg_12_emg_param_1_9;
    #line 252 
    emg_wrapper_zd_op_prepare_multicast(emg_12_resource,emg_12_emg_param_1_9);
    #line 256 
    ldv_free((void *)emg_12_emg_param_1_9);
    #line 258 
    break;
    #line 260 
    case 3: 
            #line 260 
    ;
    #line 262 
    emg_12_emg_param_1_8 = (struct ieee80211_vif *)ldv_xmalloc_unknown_size(0UL);
    #line 262 
    emg_12_emg_param_1_8 = emg_12_emg_param_1_8;
    #line 266 
    emg_wrapper_zd_op_get_tsf(emg_12_resource,emg_12_emg_param_1_8);
    #line 270 
    ldv_free((void *)emg_12_emg_param_1_8);
    #line 272 
    break;
    #line 274 
    case 4: 
            #line 274 
    ;
    #line 276 
    emg_12_emg_param_2_6 = (unsigned int *)ldv_xmalloc_unknown_size(0UL);
    #line 276 
    emg_12_emg_param_2_6 = emg_12_emg_param_2_6;
    #line 280 
    emg_wrapper_zd_op_configure_filter(emg_12_resource,emg_12_emg_param_1_5,emg_12_emg_param_2_6,emg_12_emg_param_3_7);
    #line 284 
    ldv_free((void *)emg_12_emg_param_2_6);
    #line 286 
    break;
    #line 288 
    case 5: 
            #line 288 
    ;
    #line 290 
    emg_wrapper_zd_op_config(emg_12_resource,emg_12_emg_param_1_4);
    #line 292 
    break;
    #line 294 
    case 6: 
            #line 294 
    ;
    #line 296 
    emg_12_emg_param_1_1 = (struct ieee80211_vif *)ldv_xmalloc_unknown_size(0UL);
    #line 296 
    emg_12_emg_param_1_1 = emg_12_emg_param_1_1;
    #line 297 
    emg_12_emg_param_2_2 = (struct ieee80211_bss_conf *)ldv_xmalloc_unknown_size(0UL);
    #line 297 
    emg_12_emg_param_2_2 = emg_12_emg_param_2_2;
    #line 301 
    emg_wrapper_zd_op_bss_info_changed(emg_12_resource,emg_12_emg_param_1_1,emg_12_emg_param_2_2,emg_12_emg_param_3_3);
    #line 305 
    ldv_free((void *)emg_12_emg_param_1_1);
    #line 306 
    ldv_free((void *)emg_12_emg_param_2_2);
    #line 308 
    break;
    #line 310 
    case 7: 
            #line 310 
    ;
    #line 312 
    emg_12_emg_param_1_13 = (struct cfg80211_wowlan *)ldv_xmalloc_unknown_size(0UL);
    #line 312 
    emg_12_emg_param_1_13 = emg_12_emg_param_1_13;
    #line 316 
    if (emg_12_container->suspend != (int (*)(struct ieee80211_hw *, struct cfg80211_wowlan *))0) 
      #line 317 
      (*(emg_12_container->suspend))(emg_12_resource,emg_12_emg_param_1_13);
    #line 322 
    ldv_free((void *)emg_12_emg_param_1_13);
    #line 326 
    if (emg_12_container->resume != (int (*)(struct ieee80211_hw *))0) 
      #line 327 
      (*(emg_12_container->resume))(emg_12_resource);
    #line 331 
    if (emg_repeat_cnt_started_12_1 > 0) {
      #line 332 
      emg_repeat_cnt_started_12_1 --;
      #line 334 
      goto emg_started_12;
    }
    else 
         #line 336 
         __VERIFIER_assume(0);
    #line 340 
    break;
    #line 342 
    case 8: 
            #line 342 
    ;
    #line 344 
    emg_12_emg_param_1_0 = (struct ieee80211_vif *)ldv_xmalloc_unknown_size(0UL);
    #line 344 
    emg_12_emg_param_1_0 = emg_12_emg_param_1_0;
    #line 348 
    emg_wrapper_zd_op_add_interface(emg_12_resource,emg_12_emg_param_1_0);
    #line 352 
    ldv_free((void *)emg_12_emg_param_1_0);
    #line 355 
    if (emg_repeat_cnt_started_12_0 > 0) {
      #line 356 
      emg_repeat_cnt_started_12_0 --;
      #line 358 
      goto emg_started_12;
    }
    else 
         #line 360 
         __VERIFIER_assume(0);
    #line 364 
    break;
    #line 366 
    case 9: 
            #line 366 
    ;
    #line 369 
    rtnl_lock();
    #line 373 
    zd_op_stop(emg_12_resource);
    #line 378 
    rtnl_unlock();
    #line 381 
    if (emg_repeat_cnt_main_12_0 > 0) {
      #line 382 
      emg_repeat_cnt_main_12_0 --;
      #line 384 
      goto emg_main_12;
    }
    else 
         #line 386 
         __VERIFIER_assume(0);
    #line 390 
    break;
    #line 392 
    default: 
             #line 392 
    ;
    #line 392 
    __VERIFIER_assume(0);
  }
  #line 395 
  return (void *)0;
}

#line 400  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/emg/0/environment_model.c"
void *emg_usb_usb_scenario_driver(void *arg0)
{
  #line 403 
  int emg_13_choice;
  #line 404 
  struct usb_driver *emg_13_container;
  #line 405 
  struct usb_device_id *emg_13_device_id;
  #line 406 
  struct pm_message *emg_13_emg_param_1_0;
  #line 407 
  int emg_13_probe_retval;
  #line 408 
  struct usb_interface *emg_13_resource;
  #line 409 
  struct usb_device *emg_13_usb_device;
  #line 410 
  int emg_repeat_cnt_manage_interface_13 = 1;
  #line 412 
  struct emg_struct_usb_scenario_driver_13 *data = (struct emg_struct_usb_scenario_driver_13 *)arg0;
  #line 416 
  emg_13_choice = 0;
  #line 417 
  emg_13_probe_retval = ldv_undef_int();
  #line 418 
  emg_13_choice = 0;
  #line 419 
  emg_13_container = emg_alias_driver;
  #line 420 
  emg_13_probe_retval = ldv_undef_int();
  #line 422 
  __VERIFIER_assume(data->arg0 == emg_alias_driver);
  #line 424 
  if (data != (struct emg_struct_usb_scenario_driver_13 *)0) {
    #line 425 
    emg_13_container = data->arg0;
    #line 426 
    ldv_free((void *)data);
  }
  #line 431 
  emg_13_resource = (struct usb_interface *)ldv_xmalloc(1704UL);
  #line 432 
  emg_13_usb_device = (struct usb_device *)ldv_xmalloc(2200UL);
  #line 433 
  emg_13_resource->dev.parent = & emg_13_usb_device->dev;
  #line 434 
  emg_13_choice = __ldv_undef_int_range(0,59);
  #line 435 
  emg_13_device_id = emg_13_container->id_table + (unsigned long)emg_13_choice;
  #line 439 
  goto emg_manage_interface_13;
  #line 443 
  return (void *)0;
  #line 446 
  emg_manage_interface_13: 
                           #line 446 
  ;
  #line 447 
  if (ldv_undef_int() != 0) {
    #line 450 
    ldv_pre_probe();
    #line 454 
    emg_13_probe_retval = emg_wrapper_probe(emg_13_resource,emg_13_device_id);
    #line 459 
    emg_13_probe_retval = ldv_post_probe(emg_13_probe_retval);
    #line 462 
    if (ldv_undef_int() != 0) {
      #line 464 
      __VERIFIER_assume(emg_13_probe_retval == 0);
      #line 467 
      switch (ldv_undef_int()) {
        #line 468 
        case 0: 
                #line 468 
        ;
        #line 474 
        emg_wrapper_pre_reset(emg_13_resource);
        #line 478 
        emg_wrapper_post_reset(emg_13_resource);
        #line 480 
        break;
        #line 482 
        case 1: 
                #line 482 
        ;
        #line 484 
        emg_13_emg_param_1_0 = (struct pm_message *)ldv_xmalloc_unknown_size(0UL);
        #line 484 
        emg_13_emg_param_1_0 = emg_13_emg_param_1_0;
        #line 488 
        if (emg_13_container->suspend != (int (*)(struct usb_interface *, pm_message_t ))0) 
          #line 489 
          (*(emg_13_container->suspend))(emg_13_resource,*emg_13_emg_param_1_0);
        #line 494 
        ldv_free((void *)emg_13_emg_param_1_0);
        #line 497 
        if (ldv_undef_int() != 0) {
          #line 499 
          if (emg_13_container->resume != (int (*)(struct usb_interface *))0) 
            #line 500 
            (*(emg_13_container->resume))(emg_13_resource);
        }
        else 
          #line 505 
          if (emg_13_container->reset_resume != (int (*)(struct usb_interface *))0) 
            #line 506 
            (*(emg_13_container->reset_resume))(emg_13_resource);
        #line 510 
        break;
        #line 512 
        case 2: 
                #line 512 
        ;
        #line 516 
        break;
        #line 518 
        case 3: 
                #line 518 
        ;
        #line 521 
        break;
        #line 523 
        default: 
                 #line 523 
        ;
        #line 523 
        __VERIFIER_assume(0);
      }
      #line 527 
      emg_wrapper_disconnect(emg_13_resource);
    }
    else 
         #line 531 
         __VERIFIER_assume(emg_13_probe_retval != 0);
    #line 535 
    if (emg_repeat_cnt_manage_interface_13 > 0) {
      #line 536 
      emg_repeat_cnt_manage_interface_13 --;
      #line 538 
      goto emg_manage_interface_13;
    }
    else 
         #line 540 
         __VERIFIER_assume(0);
  }
  else {
    #line 546 
    ldv_free((void *)emg_13_resource);
    #line 547 
    ldv_free((void *)emg_13_usb_device);
  }
  #line 555 
  return (void *)0;
}

#line 560  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/emg/0/environment_model.c"
struct ieee80211_hw *emg_ieee80211_alloc_hw(unsigned long arg0, struct ieee80211_ops *arg1)
{
  #line 563 
  struct ieee80211_hw *emg_2_ieee80211_hw;
  #line 564 
  struct ieee80211_ops *emg_2_ieee80211_ops;
  #line 566 
  emg_2_ieee80211_ops = emg_alias_zd_ops;
  #line 567 
  if (ldv_undef_int() != 0) {
    #line 569 
    emg_2_ieee80211_ops = arg1;
    #line 570 
    emg_2_ieee80211_hw = (struct ieee80211_hw *)ldv_xmalloc(184UL);
    #line 574 
    emg_dispatch_register_2(emg_2_ieee80211_hw);
    #line 578 
    return emg_2_ieee80211_hw;
  }
  else 
       #line 582 
       return (struct ieee80211_hw *)0;
}

#line 590  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/emg/0/environment_model.c"
void emg_ieee80211_free_hw(struct ieee80211_hw *arg0)
{
  #line 593 
  struct ieee80211_hw *emg_3_ieee80211_hw;
  #line 596 
  emg_dispatch_deregister_3(emg_3_ieee80211_hw);
  #line 600 
  ldv_free((void *)emg_3_ieee80211_hw);
  #line 603 
  return;
}

#line 608  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/emg/0/environment_model.c"
_Bool emg_queue_delayed_work(struct workqueue_struct *arg0, struct delayed_work *arg1, unsigned long arg2)
{
  #line 611 
  struct delayed_work *emg_4_delayed_work;
  #line 612 
  struct work_struct *emg_4_emg_param_0_0;
  #line 614 
  if (ldv_undef_int() != 0) {
    #line 616 
    emg_4_delayed_work = arg1;
    #line 620 
    emg_4_emg_param_0_0 = (struct work_struct *)ldv_xmalloc_unknown_size(0UL);
    #line 620 
    emg_4_emg_param_0_0 = emg_4_emg_param_0_0;
    #line 624 
    if (emg_4_delayed_work->work.func != (void (*)(struct work_struct *))0) 
      #line 625 
      (*(emg_4_delayed_work->work.func))(emg_4_emg_param_0_0);
    #line 630 
    ldv_free((void *)emg_4_emg_param_0_0);
    #line 634 
    return (_Bool)1;
  }
  else 
       #line 638 
       return (_Bool)0;
}

#line 646  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/emg/0/environment_model.c"
_Bool emg_schedule_work(struct work_struct *arg0)
{
  #line 649 
  struct work_struct *emg_5_work_struct;
  #line 651 
  if (ldv_undef_int() != 0) {
    #line 653 
    emg_5_work_struct = arg0;
    #line 657 
    if (emg_5_work_struct->func != (void (*)(struct work_struct *))0) 
      #line 658 
      (*(emg_5_work_struct->func))(emg_5_work_struct);
    #line 663 
    return (_Bool)1;
  }
  else 
       #line 667 
       return (_Bool)0;
}

#line 675  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/emg/0/environment_model.c"
void emg_tasklet_schedule(struct tasklet_struct *arg0)
{
  #line 678 
  unsigned long emg_6_emg_param_0_0;
  #line 679 
  struct tasklet_struct *emg_6_tasklet_struct;
  #line 682 
  emg_6_tasklet_struct = arg0;
  #line 686 
  if (emg_6_tasklet_struct->count.counter == 0) 
    #line 687 
    if (emg_6_tasklet_struct->func != (void (*)(unsigned long ))0) 
                                                                   #line 688 
                                                                   (*(emg_6_tasklet_struct->func))(emg_6_emg_param_0_0);
  #line 693 
  return;
}

#line 698  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/emg/0/environment_model.c"
void emg_usb_deregister(struct usb_driver *arg0)
{
  #line 701 
  struct usb_driver *emg_7_usb_driver;
  #line 703 
  emg_7_usb_driver = emg_alias_driver;
  #line 705 
  emg_7_usb_driver = arg0;
  #line 709 
  emg_dispatch_deregister_7(emg_7_usb_driver);
  #line 712 
  return;
}

#line 717  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/emg/0/environment_model.c"
void emg_usb_kill_urb(struct urb *arg0)
{
  #line 720 
  struct urb *emg_8_urb;
  #line 723 
  emg_8_urb = arg0;
  #line 726 
  if (ldv_undef_int() != 0) {
    #line 728 
    __VERIFIER_assume(emg_8_urb != (struct urb *)0);
    #line 732 
    if (emg_8_urb->complete != (void (*)(struct urb *))0) 
                                                          #line 733 
                                                          (*(emg_8_urb->complete))(emg_8_urb);
  }
  else 
       #line 738 
       __VERIFIER_assume(emg_8_urb == (struct urb *)0);
  #line 742 
  return;
}

#line 747  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/emg/0/environment_model.c"
int emg_usb_register_driver(struct usb_driver *arg0, struct module *arg1, char *arg2)
{
  #line 750 
  struct usb_driver *emg_9_usb_driver;
  #line 752 
  emg_9_usb_driver = emg_alias_driver;
  #line 753 
  if (ldv_undef_int() != 0) {
    #line 755 
    emg_9_usb_driver = arg0;
    #line 759 
    emg_dispatch_register_9(emg_9_usb_driver);
    #line 763 
    return 0;
  }
  else {
    #line 767 
    ldv_failed_usb_register_driver();
    #line 768 
    return ldv_undef_int_negative();
  }
}

#line 776  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/emg/0/environment_model.c"
int emg_usb_reset_device(struct usb_device *arg0)
{
  #line 785 
  return 0;
}

#line 792  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/emg/0/environment_model.c"
int emg_usb_submit_urb(struct urb *arg0, unsigned int arg1)
{
  #line 795 
  struct urb *emg_11_urb;
  #line 797 
  if (ldv_undef_int() != 0) {
    #line 799 
    emg_11_urb = arg0;
    #line 800 
    ldv_check_alloc_flags(arg1);
    #line 804 
    if (emg_11_urb->complete != (void (*)(struct urb *))0) 
                                                           #line 805 
                                                           (*(emg_11_urb->complete))(emg_11_urb);
    #line 810 
    return (int)((long)ldv_malloc_unknown_size());
  }
  else 
       #line 814 
       return 0;
}

#line 822  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/emg/0/environment_model.c"
void *emg_entry_point_insmod(void *arg0)
{
  #line 825 
  int emg_1_ret;
  #line 828 
  emg_1_ret = emg_usb_init();
  #line 829 
  emg_1_ret = ldv_post_init(emg_1_ret);
  #line 832 
  if (ldv_undef_int() != 0) {
    #line 834 
    __VERIFIER_assume(emg_1_ret == 0);
    #line 838 
    emg_usb_exit();
  }
  else 
       #line 842 
       __VERIFIER_assume(emg_1_ret != 0);
  #line 846 
  return (void *)0;
}

#line 851  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/zydas/zd1211rw/zd1211rw.ko/concurrency safety/emg/0/environment_model.c"
int main(void)
{
  #line 853 
  ldv_initialize();
  #line 855 
  emg_entry_point_insmod((void *)0);
  #line 857 
  return 0;
}

