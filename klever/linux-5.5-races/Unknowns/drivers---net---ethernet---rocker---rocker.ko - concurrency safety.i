/* Generated by Frama-C */
#line 106  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/compiler_types.h"
typedef signed char __s8;
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/int-ll64.h"
typedef unsigned char __u8;
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/int-ll64.h"
typedef short __s16;
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/int-ll64.h"
typedef unsigned short __u16;
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/int-ll64.h"
typedef int __s32;
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/int-ll64.h"
typedef unsigned int __u32;
#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/int-ll64.h"
typedef long long __s64;
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/int-ll64.h"
typedef unsigned long long __u64;
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/int-ll64.h"
typedef __s8 s8;
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/int-ll64.h"
typedef __u8 u8;
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/int-ll64.h"
typedef __s16 s16;
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/int-ll64.h"
typedef __u16 u16;
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/int-ll64.h"
typedef __s32 s32;
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/int-ll64.h"
typedef __u32 u32;
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/int-ll64.h"
typedef __s64 s64;
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/int-ll64.h"
typedef __u64 u64;
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/uapi/asm/posix_types_64.h"
typedef long __kernel_long_t;
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef unsigned long __kernel_ulong_t;
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_pid_t;
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_uid32_t;
#line 50  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_gid32_t;
#line 51  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef __kernel_ulong_t __kernel_size_t;
#line 73  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_ssize_t;
#line 88  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef long long __kernel_loff_t;
#line 91  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef long long __kernel_time64_t;
#line 92  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_clock_t;
#line 93  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_timer_t;
#line 94  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_clockid_t;
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef __u16 __le16;
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/types.h"
typedef __u16 __be16;
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/types.h"
typedef __u32 __be32;
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/types.h"
typedef __u64 __be64;
#line 37  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/types.h"
typedef __u32 __wsum;
#line 38  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/types.h"
typedef unsigned int __poll_t;
#line 53  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/types.h"
typedef u32 __kernel_dev_t;
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef __kernel_dev_t dev_t;
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef unsigned short umode_t;
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef __kernel_pid_t pid_t;
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef __kernel_clockid_t clockid_t;
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef _Bool bool;
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef __kernel_uid32_t uid_t;
#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef __kernel_gid32_t gid_t;
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef __kernel_loff_t loff_t;
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef __kernel_size_t size_t;
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef __kernel_ssize_t ssize_t;
#line 103  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef s32 int32_t;
#line 109  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef u32 uint32_t;
#line 115  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef u64 sector_t;
#line 131  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef u64 blkcnt_t;
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef u64 dma_addr_t;
#line 149  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef unsigned int gfp_t;
#line 154  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef unsigned int slab_flags_t;
#line 155  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef unsigned int fmode_t;
#line 156  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef u64 phys_addr_t;
#line 159  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef phys_addr_t resource_size_t;
#line 170  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
struct __anonstruct_atomic_t_6 {
   int counter ;
};
#line 170  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef struct __anonstruct_atomic_t_6 atomic_t;
#line 174  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
struct __anonstruct_atomic64_t_7 {
   s64 counter ;
};
#line 174  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef struct __anonstruct_atomic64_t_7 atomic64_t;
#line 181  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
struct list_head {
   struct list_head *next ;
   struct list_head *prev ;
};
#line 185 
struct hlist_node;
#line 185  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
struct hlist_head {
   struct hlist_node *first ;
};
#line 189  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
struct hlist_node {
   struct hlist_node *next ;
   struct hlist_node **pprev ;
};
#line 219  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
struct callback_head {
   struct callback_head *next ;
   void (*func)(struct callback_head *) ;
} __attribute__((__aligned__(8)));
#line 14  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_ofdpa.i.aux"
struct task_struct;
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/export.h"
struct module;
#line 60  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/export.h"
struct kernel_symbol {
   int value_offset ;
   int name_offset ;
   int namespace_offset ;
};
#line 136  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/init.h"
typedef void (*ctor_fn_t)(void);
#line 139 
struct file_system_type;
#line 83  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/printk.h"
struct ctl_table;
#line 87  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jump_label.h"
struct jump_entry;
#line 87 
struct static_key_mod;
#line 87  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jump_label.h"
union __anonunion_8 {
   unsigned long type ;
   struct jump_entry *entries ;
   struct static_key_mod *next ;
};
#line 87  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jump_label.h"
struct static_key {
   atomic_t enabled ;
   union __anonunion_8 __anonCompField_static_key_4 ;
};
#line 122  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jump_label.h"
struct jump_entry {
   s32 code ;
   s32 target ;
   long key ;
};
#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dynamic_debug.h"
struct device;
#line 65 
struct net_device;
#line 476  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/printk.h"
struct file_operations;
#line 87  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/div64.h"
struct completion;
#line 88 
struct pt_regs;
#line 762  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
union __anonunion___u_21 {
   struct hlist_node *__val ;
   char __c[1U] ;
};
#line 788  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
union __anonunion___u_23 {
   struct hlist_node *__val ;
   char __c[1U] ;
};
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/bug.h"
struct bug_entry {
   int bug_addr_disp ;
   int file_disp ;
   unsigned short line ;
   unsigned short flags ;
};
#line 188  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/math64.h"
typedef __s64 time64_t;
#line 7  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/time_types.h"
struct __kernel_timespec {
   __kernel_time64_t tv_sec ;
   long long tv_nsec ;
};
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/time64.h"
struct timespec64 {
   time64_t tv_sec ;
   long tv_nsec ;
};
#line 165 
struct old_timespec32;
#line 166 
struct pollfd;
#line 167 
enum timespec_type {
    TT_NONE = 0,
    TT_NATIVE = 1,
    TT_COMPAT = 2
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/restart_block.h"
struct __anonstruct_futex_27 {
   u32 *uaddr ;
   u32 val ;
   u32 flags ;
   u32 bitset ;
   u64 time ;
   u32 *uaddr2 ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/restart_block.h"
union __anonunion_29 {
   struct __kernel_timespec *rmtp ;
   struct old_timespec32 *compat_rmtp ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/restart_block.h"
struct __anonstruct_nanosleep_28 {
   clockid_t clockid ;
   enum timespec_type type ;
   union __anonunion_29 __anonCompField___anonstruct_nanosleep_28_5 ;
   u64 expires ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/restart_block.h"
struct __anonstruct_poll_30 {
   struct pollfd *ufds ;
   int nfds ;
   int has_timeout ;
   unsigned long tv_sec ;
   unsigned long tv_nsec ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/restart_block.h"
union __anonunion_26 {
   struct __anonstruct_futex_27 futex ;
   struct __anonstruct_nanosleep_28 nanosleep ;
   struct __anonstruct_poll_30 poll ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/restart_block.h"
struct restart_block {
   long (*fn)(struct restart_block *) ;
   union __anonunion_26 __anonCompField_restart_block_6 ;
};
#line 58  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/page_64.h"
struct page;
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/getorder.h"
struct mm_struct;
#line 49 
struct io_bitmap;
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/ptrace.h"
struct pt_regs {
   unsigned long r15 ;
   unsigned long r14 ;
   unsigned long r13 ;
   unsigned long r12 ;
   unsigned long bp ;
   unsigned long bx ;
   unsigned long r11 ;
   unsigned long r10 ;
   unsigned long r9 ;
   unsigned long r8 ;
   unsigned long ax ;
   unsigned long cx ;
   unsigned long dx ;
   unsigned long si ;
   unsigned long di ;
   unsigned long orig_ax ;
   unsigned long ip ;
   unsigned long cs ;
   unsigned long flags ;
   unsigned long sp ;
   unsigned long ss ;
};
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/desc_defs.h"
struct desc_struct {
   u16 limit0 ;
   u16 base0 ;
   u16 base1 : 8 ;
   u16 type : 4 ;
   u16 s : 1 ;
   u16 dpl : 2 ;
   u16 p : 1 ;
   u16 limit1 : 4 ;
   u16 avl : 1 ;
   u16 l : 1 ;
   u16 d : 1 ;
   u16 g : 1 ;
   u16 base2 : 8 ;
} __attribute__((__packed__));
#line 119  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/desc_defs.h"
typedef unsigned long pteval_t;
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pmdval_t;
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pudval_t;
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgdval_t;
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgprotval_t;
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_64_types.h"
struct __anonstruct_pte_t_53 {
   pteval_t pte ;
};
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_64_types.h"
typedef struct __anonstruct_pte_t_53 pte_t;
#line 265  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
struct pgprot {
   pgprotval_t pgprot ;
};
#line 267  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
typedef struct pgprot pgprot_t;
#line 266  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
struct __anonstruct_pgd_t_54 {
   pgdval_t pgd ;
};
#line 266  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
typedef struct __anonstruct_pgd_t_54 pgd_t;
#line 319  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
struct __anonstruct_pud_t_56 {
   pudval_t pud ;
};
#line 319  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
typedef struct __anonstruct_pud_t_56 pud_t;
#line 345  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
struct __anonstruct_pmd_t_57 {
   pmdval_t pmd ;
};
#line 345  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
typedef struct __anonstruct_pmd_t_57 pmd_t;
#line 505  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
typedef struct page *pgtable_t;
#line 519 
struct file;
#line 530 
struct seq_file;
#line 360  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/nospec-branch.h"
struct thread_struct;
#line 362 
struct cpumask;
#line 365 
struct vm_area_struct;
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qspinlock_types.h"
struct __anonstruct_59 {
   u8 locked ;
   u8 pending ;
};
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qspinlock_types.h"
struct __anonstruct_60 {
   u16 locked_pending ;
   u16 tail ;
};
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qspinlock_types.h"
union __anonunion_58 {
   atomic_t val ;
   struct __anonstruct_59 __anonCompField___anonunion_58_7 ;
   struct __anonstruct_60 __anonCompField___anonunion_58_8 ;
};
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qspinlock_types.h"
struct qspinlock {
   union __anonunion_58 __anonCompField_qspinlock_9 ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qspinlock_types.h"
typedef struct qspinlock arch_spinlock_t;
#line 13  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qrwlock_types.h"
struct __anonstruct_62 {
   u8 wlocked ;
   u8 __lstate[3U] ;
};
#line 13  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qrwlock_types.h"
union __anonunion_61 {
   atomic_t cnts ;
   struct __anonstruct_62 __anonCompField___anonunion_61_10 ;
};
#line 13  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qrwlock_types.h"
struct qrwlock {
   union __anonunion_61 __anonCompField_qrwlock_11 ;
   arch_spinlock_t wait_lock ;
};
#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qrwlock_types.h"
typedef struct qrwlock arch_rwlock_t;
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/math_emu.h"
struct math_emu_info {
   long ___orig_eip ;
   struct pt_regs *regs ;
};
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/atomic.h"
union __anonunion___u_67 {
   int __val ;
   char __c[1U] ;
};
#line 2288  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/atomic-fallback.h"
typedef atomic64_t atomic_long_t;
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cpumask.h"
struct cpumask {
   unsigned long bits[128U] ;
};
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cpumask.h"
typedef struct cpumask cpumask_t;
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/tracepoint-defs.h"
struct tracepoint_func {
   void *func ;
   void *data ;
   int prio ;
};
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/tracepoint-defs.h"
struct tracepoint {
   char *name ;
   struct static_key key ;
   int (*regfunc)(void) ;
   void (*unregfunc)(void) ;
   struct tracepoint_func *funcs ;
};
#line 37  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/tracepoint-defs.h"
typedef int tracepoint_ptr_t;
#line 44  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/tracepoint-defs.h"
struct bpf_raw_event_map {
   struct tracepoint *tp ;
   void *bpf_func ;
   u32 num_args ;
   u32 writable_size ;
} __attribute__((__aligned__(32)));
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
struct fregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u32 status ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_90 {
   u64 rip ;
   u64 rdp ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_91 {
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
union __anonunion_89 {
   struct __anonstruct_90 __anonCompField___anonunion_89_17 ;
   struct __anonstruct_91 __anonCompField___anonunion_89_18 ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
union __anonunion_92 {
   u32 padding1[12U] ;
   u32 sw_reserved[12U] ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
struct fxregs_state {
   u16 cwd ;
   u16 swd ;
   u16 twd ;
   u16 fop ;
   union __anonunion_89 __anonCompField_fxregs_state_19 ;
   u32 mxcsr ;
   u32 mxcsr_mask ;
   u32 st_space[32U] ;
   u32 xmm_space[64U] ;
   u32 padding[12U] ;
   union __anonunion_92 __anonCompField_fxregs_state_20 ;
} __attribute__((__aligned__(16)));
#line 79  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
struct swregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u8 ftop ;
   u8 changed ;
   u8 lookahead ;
   u8 no_update ;
   u8 rm ;
   u8 alimit ;
   struct math_emu_info *info ;
   u32 entry_eip ;
};
#line 232  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
struct xstate_header {
   u64 xfeatures ;
   u64 xcomp_bv ;
   u64 reserved[6U] ;
} __attribute__((__packed__));
#line 253  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
struct xregs_state {
   struct fxregs_state i387 ;
   struct xstate_header header ;
   u8 extended_state_area[0U] ;
} __attribute__((__packed__, __aligned__(64)));
#line 268  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
union fpregs_state {
   struct fregs_state fsave ;
   struct fxregs_state fxsave ;
   struct swregs_state soft ;
   struct xregs_state xsave ;
   u8 __padding[4096U] ;
};
#line 281  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
struct fpu {
   unsigned int last_cpu ;
   unsigned long avx512_timestamp ;
   union fpregs_state state ;
};
#line 73  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/orc_types.h"
struct orc_entry {
   s16 sp_offset ;
   s16 bp_offset ;
   unsigned int sp_reg : 4 ;
   unsigned int bp_reg : 4 ;
   unsigned int type : 2 ;
   unsigned int end : 1 ;
} __attribute__((__packed__));
#line 180  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/processor.h"
struct seq_operations;
#line 478 
struct perf_event;
#line 479  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/processor.h"
struct __anonstruct_mm_segment_t_95 {
   unsigned long seg ;
};
#line 479  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/processor.h"
typedef struct __anonstruct_mm_segment_t_95 mm_segment_t;
#line 485  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/processor.h"
struct thread_struct {
   struct desc_struct tls_array[3U] ;
   unsigned long sp ;
   unsigned short es ;
   unsigned short ds ;
   unsigned short fsindex ;
   unsigned short gsindex ;
   unsigned long fsbase ;
   unsigned long gsbase ;
   struct perf_event *ptrace_bps[4U] ;
   unsigned long debugreg6 ;
   unsigned long ptrace_dr7 ;
   unsigned long cr2 ;
   unsigned long trap_nr ;
   unsigned long error_code ;
   struct io_bitmap *io_bitmap ;
   unsigned long iopl_emul ;
   mm_segment_t addr_limit ;
   unsigned int sig_on_uaccess_err : 1 ;
   unsigned int uaccess_err : 1 ;
   struct fpu fpu ;
};
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/thread_info.h"
struct thread_info {
   unsigned long flags ;
   u32 status ;
};
#line 35  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bottom_half.h"
struct lockdep_map;
#line 55  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockdep.h"
struct lockdep_subclass_key {
   char __one_byte ;
} __attribute__((__packed__));
#line 60  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockdep.h"
union __anonunion_96 {
   struct hlist_node hash_entry ;
   struct lockdep_subclass_key subkeys[8U] ;
};
#line 60  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockdep.h"
struct lock_class_key {
   union __anonunion_96 __anonCompField_lock_class_key_23 ;
};
#line 68 
struct lock_trace;
#line 77  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockdep.h"
struct lock_class {
   struct hlist_node hash_entry ;
   struct list_head lock_entry ;
   struct list_head locks_after ;
   struct list_head locks_before ;
   struct lockdep_subclass_key *key ;
   unsigned int subclass ;
   unsigned int dep_gen_id ;
   unsigned long usage_mask ;
   struct lock_trace *usage_traces[9U] ;
   int name_version ;
   char *name ;
   unsigned long contention_point[4U] ;
   unsigned long contending_point[4U] ;
};
#line 157  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockdep.h"
struct lockdep_map {
   struct lock_class_key *key ;
   struct lock_class *class_cache[2U] ;
   char *name ;
   int cpu ;
   unsigned long ip ;
};
#line 226  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockdep.h"
struct held_lock {
   u64 prev_chain_key ;
   unsigned long acquire_ip ;
   struct lockdep_map *instance ;
   struct lockdep_map *nest_lock ;
   u64 waittime_stamp ;
   u64 holdtime_stamp ;
   unsigned int class_idx : 13 ;
   unsigned int irq_context : 2 ;
   unsigned int trylock : 1 ;
   unsigned int read : 2 ;
   unsigned int check : 1 ;
   unsigned int hardirqs_off : 1 ;
   unsigned int references : 12 ;
   unsigned int pin_count ;
};
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_types.h"
struct raw_spinlock {
   arch_spinlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_types.h"
typedef struct raw_spinlock raw_spinlock_t;
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_types.h"
struct __anonstruct_98 {
   u8 __padding[24U] ;
   struct lockdep_map dep_map ;
};
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_types.h"
union __anonunion_97 {
   struct raw_spinlock rlock ;
   struct __anonstruct_98 __anonCompField___anonunion_97_24 ;
};
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_types.h"
struct spinlock {
   union __anonunion_97 __anonCompField_spinlock_25 ;
};
#line 73  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_types.h"
typedef struct spinlock spinlock_t;
#line 74  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_types.h"
struct __anonstruct_rwlock_t_99 {
   arch_rwlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};
#line 74  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_types.h"
typedef struct __anonstruct_rwlock_t_99 rwlock_t;
#line 57  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
struct mutex;
#line 27  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
struct kmem_cache;
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/seqlock.h"
struct seqcount {
   unsigned int sequence ;
   struct lockdep_map dep_map ;
};
#line 53  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/seqlock.h"
typedef struct seqcount seqcount_t;
#line 403  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/seqlock.h"
struct __anonstruct_seqlock_t_150 {
   struct seqcount seqcount ;
   spinlock_t lock ;
};
#line 403  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/seqlock.h"
typedef struct __anonstruct_seqlock_t_150 seqlock_t;
#line 161  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timex.h"
typedef s32 old_time32_t;
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/time32.h"
struct old_timespec32 {
   old_time32_t tv_sec ;
   s32 tv_nsec ;
};
#line 461  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jiffies.h"
typedef s64 ktime_t;
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
struct timer_list {
   struct hlist_node entry ;
   unsigned long expires ;
   void (*function)(struct timer_list *) ;
   u32 flags ;
   struct lockdep_map lockdep_map ;
};
#line 195 
struct hrtimer;
#line 196 
enum hrtimer_restart;
#line 54  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/llist.h"
struct llist_node;
#line 58  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/llist.h"
struct llist_node {
   struct llist_node *next ;
};
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/smp.h"
struct __call_single_data {
   struct llist_node llist ;
   void (*func)(void *) ;
   void *info ;
   unsigned int flags ;
};
#line 153  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mpspec.h"
struct __anonstruct_nodemask_t_199 {
   unsigned long bits[16U] ;
};
#line 153  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mpspec.h"
typedef struct __anonstruct_nodemask_t_199 nodemask_t;
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/osq_lock.h"
struct optimistic_spin_queue {
   atomic_t tail ;
};
#line 35  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rwsem.h"
struct rw_semaphore {
   atomic_long_t count ;
   atomic_long_t owner ;
   struct optimistic_spin_queue osq ;
   raw_spinlock_t wait_lock ;
   struct list_head wait_list ;
   void *magic ;
   struct lockdep_map dep_map ;
};
#line 194 
struct ww_acquire_ctx;
#line 53  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mutex.h"
struct mutex {
   atomic_long_t owner ;
   spinlock_t wait_lock ;
   struct optimistic_spin_queue osq ;
   struct list_head wait_list ;
   void *magic ;
   struct lockdep_map dep_map ;
};
#line 72  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mutex.h"
struct mutex_waiter {
   struct list_head list ;
   struct task_struct *task ;
   struct ww_acquire_ctx *ww_ctx ;
   void *magic ;
};
#line 212 
struct ldt_struct;
#line 212 
struct vdso_image;
#line 212  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mutex.h"
struct __anonstruct_mm_context_t_200 {
   u64 ctx_id ;
   atomic64_t tlb_gen ;
   struct rw_semaphore ldt_usr_sem ;
   struct ldt_struct *ldt ;
   unsigned short ia32_compat ;
   struct mutex lock ;
   void *vdso ;
   struct vdso_image *vdso_image ;
   atomic_t perf_rdpmc_allowed ;
   u16 pkey_allocation_map ;
   s16 execute_only_pkey ;
   void *bd_addr ;
};
#line 212  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mutex.h"
typedef struct __anonstruct_mm_context_t_200 mm_context_t;
#line 440  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/io.h"
struct fwnode_operations;
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fwnode.h"
struct fwnode_handle {
   struct fwnode_handle *secondary ;
   struct fwnode_operations *ops ;
   struct device *dev ;
};
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fwnode.h"
struct fwnode_endpoint {
   unsigned int port ;
   unsigned int id ;
   struct fwnode_handle *local_fwnode ;
};
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fwnode.h"
struct fwnode_reference_args {
   struct fwnode_handle *fwnode ;
   unsigned int nargs ;
   u64 args[8U] ;
};
#line 110  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fwnode.h"
struct fwnode_operations {
   struct fwnode_handle *(*get)(struct fwnode_handle *) ;
   void (*put)(struct fwnode_handle *) ;
   bool (*device_is_available)(struct fwnode_handle *) ;
   void *(*device_get_match_data)(struct fwnode_handle *, struct device *) ;
   bool (*property_present)(struct fwnode_handle *, char *) ;
   int (*property_read_int_array)(struct fwnode_handle *, char *, unsigned int , void *, size_t ) ;
   int (*property_read_string_array)(struct fwnode_handle *, char *, char **, size_t ) ;
   char *(*get_name)(struct fwnode_handle *) ;
   char *(*get_name_prefix)(struct fwnode_handle *) ;
   struct fwnode_handle *(*get_parent)(struct fwnode_handle *) ;
   struct fwnode_handle *(*get_next_child_node)(struct fwnode_handle *, struct fwnode_handle *) ;
   struct fwnode_handle *(*get_named_child_node)(struct fwnode_handle *, char *) ;
   int (*get_reference_args)(struct fwnode_handle *, char *, char *, unsigned int , unsigned int , struct fwnode_reference_args *) ;
   struct fwnode_handle *(*graph_get_next_endpoint)(struct fwnode_handle *, struct fwnode_handle *) ;
   struct fwnode_handle *(*graph_get_remote_endpoint)(struct fwnode_handle *) ;
   struct fwnode_handle *(*graph_get_port_parent)(struct fwnode_handle *) ;
   int (*graph_parse_endpoint)(struct fwnode_handle *, struct fwnode_endpoint *) ;
   int (*add_links)(struct fwnode_handle *, struct device *) ;
};
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rbtree.h"
struct rb_node {
   unsigned long __rb_parent_color ;
   struct rb_node *rb_right ;
   struct rb_node *rb_left ;
} __attribute__((__aligned__(8)));
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rbtree.h"
struct rb_root {
   struct rb_node *rb_node ;
};
#line 125  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rbtree.h"
struct rb_root_cached {
   struct rb_root rb_root ;
   struct rb_node *rb_leftmost ;
};
#line 302  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/overflow.h"
struct notifier_block;
#line 53  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/vmalloc.h"
struct vm_struct {
   struct vm_struct *next ;
   void *addr ;
   unsigned long size ;
   unsigned long flags ;
   struct page **pages ;
   unsigned int nr_pages ;
   phys_addr_t phys_addr ;
   void *caller ;
};
#line 7  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/tlbbatch.h"
struct arch_tlbflush_unmap_batch {
   struct cpumask cpumask ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types_task.h"
struct vmacache {
   u64 seqnum ;
   struct vm_area_struct *vmas[4U] ;
};
#line 54  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types_task.h"
struct task_rss_stat {
   int events ;
   int count[4U] ;
};
#line 60  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types_task.h"
struct mm_rss_stat {
   atomic_long_t count[4U] ;
};
#line 64  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types_task.h"
struct page_frag {
   struct page *page ;
   __u32 offset ;
   __u32 size ;
};
#line 76  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types_task.h"
struct tlbflush_unmap_batch {
   struct arch_tlbflush_unmap_batch arch ;
   bool flush_required ;
   bool writable ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/wait.h"
struct wait_queue_head {
   spinlock_t lock ;
   struct list_head head ;
};
#line 38  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/wait.h"
typedef struct wait_queue_head wait_queue_head_t;
#line 26  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/completion.h"
struct completion {
   unsigned int done ;
   wait_queue_head_t wait ;
};
#line 120 
struct inode;
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uprobes.h"
struct workqueue_struct;
#line 48 
struct work_struct;
#line 102  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/workqueue.h"
struct work_struct {
   atomic_long_t data ;
   struct list_head entry ;
   void (*func)(struct work_struct *) ;
   struct lockdep_map lockdep_map ;
};
#line 115  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/workqueue.h"
struct delayed_work {
   struct work_struct work ;
   struct timer_list timer ;
   struct workqueue_struct *wq ;
   int cpu ;
};
#line 124  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/workqueue.h"
struct rcu_work {
   struct work_struct work ;
   struct callback_head rcu ;
   struct workqueue_struct *wq ;
};
#line 67  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rcu_segcblist.h"
struct rcu_segcblist {
   struct callback_head *head ;
   struct callback_head **tails[4U] ;
   unsigned long gp_seq[4U] ;
   atomic_long_t len ;
   long len_lazy ;
   u8 enabled ;
   u8 offloaded ;
};
#line 80 
struct srcu_struct;
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/srcu.h"
struct srcu_node;
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/srcutree.h"
struct srcu_data {
   unsigned long srcu_lock_count[2U] ;
   unsigned long srcu_unlock_count[2U] ;
   spinlock_t lock ;
   struct rcu_segcblist srcu_cblist ;
   unsigned long srcu_gp_seq_needed ;
   unsigned long srcu_gp_seq_needed_exp ;
   bool srcu_cblist_invoking ;
   struct timer_list delay_work ;
   struct work_struct work ;
   struct callback_head srcu_barrier_head ;
   struct srcu_node *mynode ;
   unsigned long grpmask ;
   int cpu ;
   struct srcu_struct *ssp ;
};
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/srcutree.h"
struct srcu_node {
   spinlock_t lock ;
   unsigned long srcu_have_cbs[4U] ;
   unsigned long srcu_data_have_cbs[4U] ;
   unsigned long srcu_gp_seq_needed_exp ;
   struct srcu_node *srcu_parent ;
   int grplo ;
   int grphi ;
};
#line 64  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/srcutree.h"
struct srcu_struct {
   struct srcu_node node[521U] ;
   struct srcu_node *level[4U] ;
   struct mutex srcu_cb_mutex ;
   spinlock_t lock ;
   struct mutex srcu_gp_mutex ;
   unsigned int srcu_idx ;
   unsigned long srcu_gp_seq ;
   unsigned long srcu_gp_seq_needed ;
   unsigned long srcu_gp_seq_needed_exp ;
   unsigned long srcu_last_gp_end ;
   struct srcu_data *sda ;
   unsigned long srcu_barrier_seq ;
   struct mutex srcu_barrier_mutex ;
   struct completion srcu_barrier_completion ;
   atomic_t srcu_barrier_cpu_cnt ;
   struct delayed_work work ;
   struct lockdep_map dep_map ;
};
#line 54  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/notifier.h"
struct notifier_block {
   int (*notifier_call)(struct notifier_block *, unsigned long , void *) ;
   struct notifier_block *next ;
   int priority ;
};
#line 70  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/notifier.h"
struct raw_notifier_head {
   struct notifier_block *head ;
};
#line 50  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/uprobes.h"
struct arch_uprobe_task {
   unsigned long saved_scratch_register ;
   unsigned int saved_trap_nr ;
   unsigned int saved_tf ;
};
#line 57 
enum uprobe_task_state {
    UTASK_RUNNING = 0,
    UTASK_SSTEP = 1,
    UTASK_SSTEP_ACK = 2,
    UTASK_SSTEP_TRAPPED = 3
};
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uprobes.h"
struct __anonstruct_220 {
   struct arch_uprobe_task autask ;
   unsigned long vaddr ;
};
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uprobes.h"
struct __anonstruct_221 {
   struct callback_head dup_xol_work ;
   unsigned long dup_xol_addr ;
};
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uprobes.h"
union __anonunion_219 {
   struct __anonstruct_220 __anonCompField___anonunion_219_29 ;
   struct __anonstruct_221 __anonCompField___anonunion_219_30 ;
};
#line 61 
struct uprobe;
#line 61 
struct return_instance;
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uprobes.h"
struct uprobe_task {
   enum uprobe_task_state state ;
   union __anonunion_219 __anonCompField_uprobe_task_31 ;
   struct uprobe *active_uprobe ;
   unsigned long xol_vaddr ;
   struct return_instance *return_instances ;
   unsigned int depth ;
};
#line 83  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uprobes.h"
struct return_instance {
   struct uprobe *uprobe ;
   unsigned long func ;
   unsigned long stack ;
   unsigned long orig_ret_vaddr ;
   bool chained ;
   struct return_instance *next ;
};
#line 98 
struct xol_area;
#line 101  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uprobes.h"
struct uprobes_state {
   struct xol_area *xol_area ;
};
#line 140 
struct address_space;
#line 141 
struct mem_cgroup;
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct __anonstruct_223 {
   struct list_head lru ;
   struct address_space *mapping ;
   unsigned long index ;
   unsigned long private ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct __anonstruct_224 {
   dma_addr_t dma_addr ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct __anonstruct_227 {
   struct page *next ;
   int pages ;
   int pobjects ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
union __anonunion_226 {
   struct list_head slab_list ;
   struct __anonstruct_227 __anonCompField___anonunion_226_34 ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct __anonstruct_229 {
   unsigned int inuse : 16 ;
   unsigned int objects : 15 ;
   unsigned int frozen : 1 ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
union __anonunion_228 {
   void *s_mem ;
   unsigned long counters ;
   struct __anonstruct_229 __anonCompField___anonunion_228_36 ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct __anonstruct_225 {
   union __anonunion_226 __anonCompField___anonstruct_225_35 ;
   struct kmem_cache *slab_cache ;
   void *freelist ;
   union __anonunion_228 __anonCompField___anonstruct_225_37 ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct __anonstruct_230 {
   unsigned long compound_head ;
   unsigned char compound_dtor ;
   unsigned char compound_order ;
   atomic_t compound_mapcount ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct __anonstruct_231 {
   unsigned long _compound_pad_1 ;
   unsigned long _compound_pad_2 ;
   struct list_head deferred_list ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
union __anonunion_233 {
   struct mm_struct *pt_mm ;
   atomic_t pt_frag_refcount ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct __anonstruct_232 {
   unsigned long _pt_pad_1 ;
   pgtable_t pmd_huge_pte ;
   unsigned long _pt_pad_2 ;
   union __anonunion_233 __anonCompField___anonstruct_232_41 ;
   spinlock_t *ptl ;
};
#line 68 
struct dev_pagemap;
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct __anonstruct_234 {
   struct dev_pagemap *pgmap ;
   void *zone_device_data ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
union __anonunion_222 {
   struct __anonstruct_223 __anonCompField___anonunion_222_32 ;
   struct __anonstruct_224 __anonCompField___anonunion_222_33 ;
   struct __anonstruct_225 __anonCompField___anonunion_222_38 ;
   struct __anonstruct_230 __anonCompField___anonunion_222_39 ;
   struct __anonstruct_231 __anonCompField___anonunion_222_40 ;
   struct __anonstruct_232 __anonCompField___anonunion_222_42 ;
   struct __anonstruct_234 __anonCompField___anonunion_222_43 ;
   struct callback_head callback_head ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
union __anonunion_235 {
   atomic_t _mapcount ;
   unsigned int page_type ;
   unsigned int active ;
   int units ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct page {
   unsigned long flags ;
   union __anonunion_222 __anonCompField_page_44 ;
   union __anonunion_235 __anonCompField_page_45 ;
   atomic_t _refcount ;
   struct mem_cgroup *mem_cgroup ;
} __attribute__((__aligned__(16)));
#line 278 
struct userfaultfd_ctx;
#line 278  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct vm_userfaultfd_ctx {
   struct userfaultfd_ctx *ctx ;
};
#line 292  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct __anonstruct_shared_236 {
   struct rb_node rb ;
   unsigned long rb_subtree_last ;
};
#line 292 
struct anon_vma;
#line 292 
struct vm_operations_struct;
#line 292 
struct mempolicy;
#line 292  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct vm_area_struct {
   unsigned long vm_start ;
   unsigned long vm_end ;
   struct vm_area_struct *vm_next ;
   struct vm_area_struct *vm_prev ;
   struct rb_node vm_rb ;
   unsigned long rb_subtree_gap ;
   struct mm_struct *vm_mm ;
   pgprot_t vm_page_prot ;
   unsigned long vm_flags ;
   struct __anonstruct_shared_236 shared ;
   struct list_head anon_vma_chain ;
   struct anon_vma *anon_vma ;
   struct vm_operations_struct *vm_ops ;
   unsigned long vm_pgoff ;
   struct file *vm_file ;
   void *vm_private_data ;
   atomic_long_t swap_readahead_info ;
   struct mempolicy *vm_policy ;
   struct vm_userfaultfd_ctx vm_userfaultfd_ctx ;
} __attribute__((__designated_init__));
#line 358  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct core_thread {
   struct task_struct *task ;
   struct core_thread *next ;
};
#line 363  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct core_state {
   atomic_t nr_threads ;
   struct core_thread dumper ;
   struct completion startup ;
};
#line 368 
struct kioctx_table;
#line 370 
struct linux_binfmt;
#line 370 
struct user_namespace;
#line 370 
struct mmu_notifier_mm;
#line 370  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct __anonstruct_237 {
   struct vm_area_struct *mmap ;
   struct rb_root mm_rb ;
   u64 vmacache_seqnum ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   unsigned long mmap_base ;
   unsigned long mmap_legacy_base ;
   unsigned long mmap_compat_base ;
   unsigned long mmap_compat_legacy_base ;
   unsigned long task_size ;
   unsigned long highest_vm_end ;
   pgd_t *pgd ;
   atomic_t membarrier_state ;
   atomic_t mm_users ;
   atomic_t mm_count ;
   atomic_long_t pgtables_bytes ;
   int map_count ;
   spinlock_t page_table_lock ;
   struct rw_semaphore mmap_sem ;
   struct list_head mmlist ;
   unsigned long hiwater_rss ;
   unsigned long hiwater_vm ;
   unsigned long total_vm ;
   unsigned long locked_vm ;
   atomic64_t pinned_vm ;
   unsigned long data_vm ;
   unsigned long exec_vm ;
   unsigned long stack_vm ;
   unsigned long def_flags ;
   spinlock_t arg_lock ;
   unsigned long start_code ;
   unsigned long end_code ;
   unsigned long start_data ;
   unsigned long end_data ;
   unsigned long start_brk ;
   unsigned long brk ;
   unsigned long start_stack ;
   unsigned long arg_start ;
   unsigned long arg_end ;
   unsigned long env_start ;
   unsigned long env_end ;
   unsigned long saved_auxv[46U] ;
   struct mm_rss_stat rss_stat ;
   struct linux_binfmt *binfmt ;
   mm_context_t context ;
   unsigned long flags ;
   struct core_state *core_state ;
   spinlock_t ioctx_lock ;
   struct kioctx_table *ioctx_table ;
   struct task_struct *owner ;
   struct user_namespace *user_ns ;
   struct file *exe_file ;
   struct mmu_notifier_mm *mmu_notifier_mm ;
   unsigned long numa_next_scan ;
   unsigned long numa_scan_offset ;
   int numa_scan_seq ;
   atomic_t tlb_flush_pending ;
   bool tlb_flush_batched ;
   struct uprobes_state uprobes_state ;
   atomic_long_t hugetlb_usage ;
   struct work_struct async_put_work ;
} __attribute__((__designated_init__));
#line 370  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct mm_struct {
   struct __anonstruct_237 __anonCompField_mm_struct_46 ;
   unsigned long cpu_bitmap[] ;
};
#line 642 
struct vm_fault;
#line 643  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
typedef unsigned int vm_fault_t;
#line 41  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dynamic_queue_limits.h"
struct dql {
   unsigned int num_queued ;
   unsigned int adj_limit ;
   unsigned int last_obj_cnt ;
   unsigned int limit ;
   unsigned int num_completed ;
   unsigned int prev_ovlimit ;
   unsigned int prev_num_queued ;
   unsigned int prev_last_obj_cnt ;
   unsigned int lowest_slack ;
   unsigned long slack_start_time ;
   unsigned int max_limit ;
   unsigned int min_limit ;
   unsigned int slack_hold_time ;
};
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uidgid.h"
struct __anonstruct_kuid_t_252 {
   uid_t val ;
};
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uidgid.h"
typedef struct __anonstruct_kuid_t_252 kuid_t;
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uidgid.h"
struct __anonstruct_kgid_t_253 {
   gid_t val ;
};
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uidgid.h"
typedef struct __anonstruct_kgid_t_253 kgid_t;
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/stat.h"
struct kstat {
   u32 result_mask ;
   umode_t mode ;
   unsigned int nlink ;
   uint32_t blksize ;
   u64 attributes ;
   u64 attributes_mask ;
   u64 ino ;
   dev_t dev ;
   dev_t rdev ;
   kuid_t uid ;
   kgid_t gid ;
   loff_t size ;
   struct timespec64 atime ;
   struct timespec64 mtime ;
   struct timespec64 ctime ;
   struct timespec64 btime ;
   u64 blocks ;
};
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable-types.h"
struct rhash_head {
   struct rhash_head *next ;
};
#line 25 
struct bucket_table;
#line 33 
struct rhashtable;
#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable-types.h"
struct rhashtable_compare_arg {
   struct rhashtable *ht ;
   void *key ;
};
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable-types.h"
struct rhashtable_params {
   u16 nelem_hint ;
   u16 key_len ;
   u16 key_offset ;
   u16 head_offset ;
   unsigned int max_size ;
   u16 min_size ;
   bool automatic_shrinking ;
   u32 (*hashfn)(void *, u32 , u32 ) ;
   u32 (*obj_hashfn)(void *, u32 , u32 ) ;
   int (*obj_cmpfn)(struct rhashtable_compare_arg *, void *) ;
};
#line 81  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable-types.h"
struct rhashtable {
   struct bucket_table *tbl ;
   unsigned int key_len ;
   unsigned int max_elems ;
   struct rhashtable_params p ;
   bool rhlist ;
   struct work_struct run_work ;
   struct mutex mutex ;
   spinlock_t lock ;
   atomic_t nelems ;
};
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/refcount.h"
struct refcount_struct {
   atomic_t refs ;
};
#line 101  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/refcount.h"
typedef struct refcount_struct refcount_t;
#line 101 
enum refcount_saturation_type {
    REFCOUNT_ADD_NOT_ZERO_OVF = 0,
    REFCOUNT_ADD_OVF = 1,
    REFCOUNT_ADD_UAF = 2,
    REFCOUNT_SUB_UAF = 3,
    REFCOUNT_DEC_LEAK = 4
};
#line 67  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/sem.h"
struct sem_undo_list;
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sem.h"
struct sysv_sem {
   struct sem_undo_list *undo_list ;
};
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct free_area {
   struct list_head free_list[6U] ;
   unsigned long nr_free ;
};
#line 158 
struct pglist_data;
#line 168  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct zone_padding {
   char x[0U] ;
} __attribute__((__aligned__(4096)));
#line 285  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct zone_reclaim_stat {
   unsigned long recent_rotated[2U] ;
   unsigned long recent_scanned[2U] ;
};
#line 304  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct lruvec {
   struct list_head lists[5U] ;
   struct zone_reclaim_stat reclaim_stat ;
   atomic_long_t inactive_age ;
   unsigned long refaults ;
   unsigned long flags ;
   struct pglist_data *pgdat ;
};
#line 316  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
typedef unsigned int isolate_mode_t;
#line 340  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct per_cpu_pages {
   int count ;
   int high ;
   int batch ;
   struct list_head lists[3U] ;
};
#line 349  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct per_cpu_pageset {
   struct per_cpu_pages pcp ;
   s8 expire ;
   u16 vm_numa_stat_diff[6U] ;
   s8 stat_threshold ;
   s8 vm_stat_diff[13U] ;
};
#line 361  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct per_cpu_nodestat {
   s8 stat_threshold ;
   s8 vm_node_stat_diff[32U] ;
};
#line 365 
enum zone_type {
    ZONE_DMA = 0,
    ZONE_DMA32 = 1,
    ZONE_NORMAL = 2,
    ZONE_MOVABLE = 3,
    ZONE_DEVICE = 4,
    __MAX_NR_ZONES = 5
};
#line 432  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct zone {
   unsigned long _watermark[3U] ;
   unsigned long watermark_boost ;
   unsigned long nr_reserved_highatomic ;
   long lowmem_reserve[5U] ;
   int node ;
   struct pglist_data *zone_pgdat ;
   struct per_cpu_pageset *pageset ;
   unsigned long zone_start_pfn ;
   atomic_long_t managed_pages ;
   unsigned long spanned_pages ;
   unsigned long present_pages ;
   char *name ;
   unsigned long nr_isolate_pageblock ;
   seqlock_t span_seqlock ;
   int initialized ;
   struct zone_padding _pad1_ ;
   struct free_area free_area[11U] ;
   unsigned long flags ;
   spinlock_t lock ;
   struct zone_padding _pad2_ ;
   unsigned long percpu_drift_mark ;
   unsigned long compact_cached_free_pfn ;
   unsigned long compact_cached_migrate_pfn[2U] ;
   unsigned long compact_init_migrate_pfn ;
   unsigned long compact_init_free_pfn ;
   unsigned int compact_considered ;
   unsigned int compact_defer_shift ;
   int compact_order_failed ;
   bool compact_blockskip_flush ;
   bool contiguous ;
   struct zone_padding _pad3_ ;
   atomic_long_t vm_stat[13U] ;
   atomic_long_t vm_numa_stat[6U] ;
} __attribute__((__aligned__(4096)));
#line 665  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct zoneref {
   struct zone *zone ;
   int zone_idx ;
};
#line 684  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct zonelist {
   struct zoneref _zonerefs[5121U] ;
};
#line 694  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct deferred_split {
   spinlock_t split_queue_lock ;
   struct list_head split_queue ;
   unsigned long split_queue_len ;
};
#line 710  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct pglist_data {
   struct zone node_zones[5U] ;
   struct zonelist node_zonelists[2U] ;
   int nr_zones ;
   spinlock_t node_size_lock ;
   unsigned long node_start_pfn ;
   unsigned long node_present_pages ;
   unsigned long node_spanned_pages ;
   int node_id ;
   wait_queue_head_t kswapd_wait ;
   wait_queue_head_t pfmemalloc_wait ;
   struct task_struct *kswapd ;
   int kswapd_order ;
   enum zone_type kswapd_classzone_idx ;
   int kswapd_failures ;
   int kcompactd_max_order ;
   enum zone_type kcompactd_classzone_idx ;
   wait_queue_head_t kcompactd_wait ;
   struct task_struct *kcompactd ;
   unsigned long totalreserve_pages ;
   unsigned long min_unmapped_pages ;
   unsigned long min_slab_pages ;
   struct zone_padding _pad1_ ;
   spinlock_t lru_lock ;
   unsigned long first_deferred_pfn ;
   struct deferred_split deferred_split_queue ;
   struct lruvec __lruvec ;
   unsigned long flags ;
   struct zone_padding _pad2_ ;
   struct per_cpu_nodestat *per_cpu_nodestats ;
   atomic_long_t vm_stat[32U] ;
};
#line 824 
struct resource;
#line 825 
struct vmem_altmap;
#line 623  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/gfp.h"
struct percpu_ref;
#line 624  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/gfp.h"
typedef void percpu_ref_func_t(struct percpu_ref *);
#line 95  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/percpu-refcount.h"
struct percpu_ref {
   atomic_long_t count ;
   unsigned long percpu_count_ptr ;
   percpu_ref_func_t *release ;
   percpu_ref_func_t *confirm_switch ;
   bool force_atomic : 1 ;
   bool allow_reinit : 1 ;
   struct callback_head rcu ;
};
#line 95  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/sched.h"
enum pid_type {
    PIDTYPE_PID = 0,
    PIDTYPE_TGID = 1,
    PIDTYPE_PGID = 2,
    PIDTYPE_SID = 3,
    PIDTYPE_MAX = 4
};
#line 54  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pid.h"
struct pid_namespace;
#line 54  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pid.h"
struct upid {
   int nr ;
   struct pid_namespace *ns ;
};
#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pid.h"
struct pid {
   refcount_t count ;
   unsigned int level ;
   struct hlist_head tasks[4U] ;
   wait_queue_head_t wait_pidfd ;
   struct callback_head rcu ;
   struct upid numbers[1U] ;
};
#line 13  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/shm.h"
struct sysv_shm {
   struct list_head shm_clist ;
};
#line 83  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/plist.h"
struct plist_node {
   int prio ;
   struct list_head prio_list ;
   struct list_head node_list ;
};
#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timerqueue.h"
struct timerqueue_node {
   struct rb_node node ;
   ktime_t expires ;
};
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timerqueue.h"
struct timerqueue_head {
   struct rb_root_cached rb_root ;
};
#line 60 
struct hrtimer_clock_base;
#line 61 
struct hrtimer_cpu_base;
#line 80 
enum hrtimer_restart {
    HRTIMER_NORESTART = 0,
    HRTIMER_RESTART = 1
};
#line 117  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/hrtimer.h"
struct hrtimer {
   struct timerqueue_node node ;
   ktime_t _softexpires ;
   enum hrtimer_restart (*function)(struct hrtimer *) ;
   struct hrtimer_clock_base *base ;
   u8 state ;
   u8 is_rel ;
   u8 is_soft ;
   u8 is_hard ;
};
#line 158  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/hrtimer.h"
struct hrtimer_clock_base {
   struct hrtimer_cpu_base *cpu_base ;
   unsigned int index ;
   clockid_t clockid ;
   seqcount_t seq ;
   struct hrtimer *running ;
   struct timerqueue_head active ;
   ktime_t (*get_time)(void) ;
   ktime_t offset ;
} __attribute__((__aligned__(64)));
#line 213  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/hrtimer.h"
struct hrtimer_cpu_base {
   raw_spinlock_t lock ;
   unsigned int cpu ;
   unsigned int active_bases ;
   unsigned int clock_was_set_seq ;
   unsigned int hres_active : 1 ;
   unsigned int in_hrtirq : 1 ;
   unsigned int hang_detected : 1 ;
   unsigned int softirq_activated : 1 ;
   unsigned int nr_events ;
   unsigned short nr_retries ;
   unsigned short nr_hangs ;
   unsigned int max_hang_time ;
   ktime_t expires_next ;
   struct hrtimer *next_timer ;
   ktime_t softirq_expires_next ;
   struct hrtimer *softirq_next_timer ;
   struct hrtimer_clock_base clock_base[8U] ;
} __attribute__((__aligned__(64)));
#line 40  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/seccomp.h"
struct seccomp_filter;
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/seccomp.h"
struct seccomp {
   int mode ;
   struct seccomp_filter *filter ;
};
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/resource.h"
struct rlimit {
   __kernel_ulong_t rlim_cur ;
   __kernel_ulong_t rlim_max ;
};
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/latencytop.h"
struct latency_record {
   unsigned long backtrace[12U] ;
   unsigned int count ;
   unsigned long time ;
   unsigned long max ;
};
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched/types.h"
struct task_cputime {
   u64 stime ;
   u64 utime ;
   unsigned long long sum_exec_runtime ;
};
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/signal.h"
struct __anonstruct_sigset_t_280 {
   unsigned long sig[1U] ;
};
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/signal.h"
typedef struct __anonstruct_sigset_t_280 sigset_t;
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/signal.h"
typedef void __signalfn_t(int );
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/signal-defs.h"
typedef __signalfn_t *__sighandler_t;
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/signal-defs.h"
typedef void __restorefn_t(void);
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/signal-defs.h"
typedef __restorefn_t *__sigrestore_t;
#line 8  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
union sigval {
   int sival_int ;
   void *sival_ptr ;
};
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
typedef union sigval sigval_t;
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__kill_281 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__timer_282 {
   __kernel_timer_t _tid ;
   int _overrun ;
   sigval_t _sigval ;
   int _sys_private ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__rt_283 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   sigval_t _sigval ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigchld_284 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   int _status ;
   __kernel_clock_t _utime ;
   __kernel_clock_t _stime ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__addr_bnd_287 {
   char _dummy_bnd[8U] ;
   void *_lower ;
   void *_upper ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__addr_pkey_288 {
   char _dummy_pkey[8U] ;
   __u32 _pkey ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
union __anonunion_286 {
   short _addr_lsb ;
   struct __anonstruct__addr_bnd_287 _addr_bnd ;
   struct __anonstruct__addr_pkey_288 _addr_pkey ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigfault_285 {
   void *_addr ;
   union __anonunion_286 __anonCompField___anonstruct__sigfault_285_47 ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigpoll_289 {
   long _band ;
   int _fd ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigsys_290 {
   void *_call_addr ;
   int _syscall ;
   unsigned int _arch ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
union __sifields {
   struct __anonstruct__kill_281 _kill ;
   struct __anonstruct__timer_282 _timer ;
   struct __anonstruct__rt_283 _rt ;
   struct __anonstruct__sigchld_284 _sigchld ;
   struct __anonstruct__sigfault_285 _sigfault ;
   struct __anonstruct__sigpoll_289 _sigpoll ;
   struct __anonstruct__sigsys_290 _sigsys ;
};
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/signal_types.h"
struct __anonstruct_295 {
   int si_signo ;
   int si_errno ;
   int si_code ;
   union __sifields _sifields ;
};
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/signal_types.h"
struct kernel_siginfo {
   struct __anonstruct_295 __anonCompField_kernel_siginfo_50 ;
};
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/signal_types.h"
typedef struct kernel_siginfo kernel_siginfo_t;
#line 20 
struct user_struct;
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/signal_types.h"
struct sigpending {
   struct list_head list ;
   sigset_t signal ;
};
#line 35  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/signal_types.h"
struct sigaction {
   __sighandler_t sa_handler ;
   unsigned long sa_flags ;
   __sigrestore_t sa_restorer ;
   sigset_t sa_mask ;
};
#line 49  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/signal_types.h"
struct k_sigaction {
   struct sigaction sa ;
};
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/task_io_accounting.h"
struct task_io_accounting {
   u64 rchar ;
   u64 wchar ;
   u64 syscr ;
   u64 syscw ;
   u64 read_bytes ;
   u64 write_bytes ;
   u64 cancelled_write_bytes ;
};
#line 107  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/posix-timers.h"
struct posix_cputimer_base {
   u64 nextevt ;
   struct timerqueue_head tqhead ;
};
#line 122  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/posix-timers.h"
struct posix_cputimers {
   struct posix_cputimer_base bases[3U] ;
   unsigned int timers_active ;
   unsigned int expiry_active ;
};
#line 193 
struct signal_struct;
#line 62  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/rseq.h"
union __anonunion_rseq_cs_300 {
   __u64 ptr64 ;
   __u64 ptr ;
};
#line 62  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/rseq.h"
struct rseq {
   __u32 cpu_id_start ;
   __u32 cpu_id ;
   union __anonunion_rseq_cs_300 rseq_cs ;
   __u32 flags ;
} __attribute__((__aligned__(32)));
#line 146 
struct audit_context;
#line 147 
struct backing_dev_info;
#line 148 
struct bio_list;
#line 149 
struct blk_plug;
#line 150 
struct capture_control;
#line 151 
struct cfs_rq;
#line 152 
struct fs_struct;
#line 153 
struct futex_pi_state;
#line 154 
struct io_context;
#line 155 
struct nameidata;
#line 156 
struct nsproxy;
#line 157 
struct perf_event_context;
#line 158 
struct pipe_inode_info;
#line 160 
struct reclaim_state;
#line 161 
struct robust_list_head;
#line 166 
struct sighand_struct;
#line 167 
struct task_delay_info;
#line 168 
struct task_group;
#line 242  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct prev_cputime {
   u64 utime ;
   u64 stime ;
   raw_spinlock_t lock ;
};
#line 290  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct sched_info {
   unsigned long pcount ;
   unsigned long long run_delay ;
   unsigned long long last_arrival ;
   unsigned long long last_queued ;
};
#line 325  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct load_weight {
   unsigned long weight ;
   u32 inv_weight ;
};
#line 352  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct util_est {
   unsigned int enqueued ;
   unsigned int ewma ;
} __attribute__((__aligned__(8)));
#line 401  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct sched_avg {
   u64 last_update_time ;
   u64 load_sum ;
   u64 runnable_load_sum ;
   u32 util_sum ;
   u32 period_contrib ;
   unsigned long load_avg ;
   unsigned long runnable_load_avg ;
   unsigned long util_avg ;
   struct util_est util_est ;
} __attribute__((__aligned__(64)));
#line 413  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct sched_statistics {
   u64 wait_start ;
   u64 wait_max ;
   u64 wait_count ;
   u64 wait_sum ;
   u64 iowait_count ;
   u64 iowait_sum ;
   u64 sleep_start ;
   u64 sleep_max ;
   s64 sum_sleep_runtime ;
   u64 block_start ;
   u64 block_max ;
   u64 exec_max ;
   u64 slice_max ;
   u64 nr_migrations_cold ;
   u64 nr_failed_migrations_affine ;
   u64 nr_failed_migrations_running ;
   u64 nr_failed_migrations_hot ;
   u64 nr_forced_migrations ;
   u64 nr_wakeups ;
   u64 nr_wakeups_sync ;
   u64 nr_wakeups_migrate ;
   u64 nr_wakeups_local ;
   u64 nr_wakeups_remote ;
   u64 nr_wakeups_affine ;
   u64 nr_wakeups_affine_attempts ;
   u64 nr_wakeups_passive ;
   u64 nr_wakeups_idle ;
};
#line 449  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct sched_entity {
   struct load_weight load ;
   unsigned long runnable_weight ;
   struct rb_node run_node ;
   struct list_head group_node ;
   unsigned int on_rq ;
   u64 exec_start ;
   u64 sum_exec_runtime ;
   u64 vruntime ;
   u64 prev_sum_exec_runtime ;
   u64 nr_migrations ;
   struct sched_statistics statistics ;
   int depth ;
   struct sched_entity *parent ;
   struct cfs_rq *cfs_rq ;
   struct cfs_rq *my_q ;
   struct sched_avg avg ;
};
#line 486 
struct rt_rq;
#line 486  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct sched_rt_entity {
   struct list_head run_list ;
   unsigned long timeout ;
   unsigned long watchdog_stamp ;
   unsigned int time_slice ;
   unsigned short on_rq ;
   unsigned short on_list ;
   struct sched_rt_entity *back ;
   struct sched_rt_entity *parent ;
   struct rt_rq *rt_rq ;
   struct rt_rq *my_q ;
} __attribute__((__designated_init__));
#line 504  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct sched_dl_entity {
   struct rb_node rb_node ;
   u64 dl_runtime ;
   u64 dl_deadline ;
   u64 dl_period ;
   u64 dl_bw ;
   u64 dl_density ;
   s64 runtime ;
   u64 deadline ;
   unsigned int flags ;
   unsigned int dl_throttled : 1 ;
   unsigned int dl_boosted : 1 ;
   unsigned int dl_yielded : 1 ;
   unsigned int dl_non_contending : 1 ;
   unsigned int dl_overrun : 1 ;
   struct hrtimer dl_timer ;
   struct hrtimer inactive_timer ;
};
#line 600  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct uclamp_se {
   unsigned int value : 11 ;
   unsigned int bucket_id : 3 ;
   unsigned int active : 1 ;
   unsigned int user_defined : 1 ;
};
#line 625  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct wake_q_node {
   struct wake_q_node *next ;
};
#line 629 
struct sched_class;
#line 629 
struct cred;
#line 629 
struct key;
#line 629 
struct files_struct;
#line 629 
struct rt_mutex_waiter;
#line 629 
struct css_set;
#line 629 
struct compat_robust_list_head;
#line 629 
struct numa_group;
#line 629  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
union __anonunion_302 {
   refcount_t rcu_users ;
   struct callback_head rcu ;
};
#line 629 
struct ftrace_ret_stack;
#line 629 
struct kcov;
#line 629 
struct request_queue;
#line 629  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct task_struct {
   struct thread_info thread_info ;
   long state ;
   void *stack ;
   refcount_t usage ;
   unsigned int flags ;
   unsigned int ptrace ;
   struct llist_node wake_entry ;
   int on_cpu ;
   unsigned int cpu ;
   unsigned int wakee_flips ;
   unsigned long wakee_flip_decay_ts ;
   struct task_struct *last_wakee ;
   int recent_used_cpu ;
   int wake_cpu ;
   int on_rq ;
   int prio ;
   int static_prio ;
   int normal_prio ;
   unsigned int rt_priority ;
   struct sched_class *sched_class ;
   struct sched_entity se ;
   struct sched_rt_entity rt ;
   struct task_group *sched_task_group ;
   struct sched_dl_entity dl ;
   struct uclamp_se uclamp_req[2U] ;
   struct uclamp_se uclamp[2U] ;
   struct hlist_head preempt_notifiers ;
   unsigned int btrace_seq ;
   unsigned int policy ;
   int nr_cpus_allowed ;
   cpumask_t *cpus_ptr ;
   cpumask_t cpus_mask ;
   unsigned long rcu_tasks_nvcsw ;
   u8 rcu_tasks_holdout ;
   u8 rcu_tasks_idx ;
   int rcu_tasks_idle_cpu ;
   struct list_head rcu_tasks_holdout_list ;
   struct sched_info sched_info ;
   struct list_head tasks ;
   struct plist_node pushable_tasks ;
   struct rb_node pushable_dl_tasks ;
   struct mm_struct *mm ;
   struct mm_struct *active_mm ;
   struct vmacache vmacache ;
   struct task_rss_stat rss_stat ;
   int exit_state ;
   int exit_code ;
   int exit_signal ;
   int pdeath_signal ;
   unsigned long jobctl ;
   unsigned int personality ;
   unsigned int sched_reset_on_fork : 1 ;
   unsigned int sched_contributes_to_load : 1 ;
   unsigned int sched_migrated : 1 ;
   unsigned int sched_remote_wakeup : 1 ;
   unsigned int sched_psi_wake_requeue : 1 ;
   unsigned int  ;
   unsigned int in_execve : 1 ;
   unsigned int in_iowait : 1 ;
   unsigned int restore_sigmask : 1 ;
   unsigned int in_user_fault : 1 ;
   unsigned int brk_randomized : 1 ;
   unsigned int no_cgroup_migration : 1 ;
   unsigned int frozen : 1 ;
   unsigned int use_memdelay : 1 ;
   unsigned long atomic_flags ;
   struct restart_block restart_block ;
   pid_t pid ;
   pid_t tgid ;
   unsigned long stack_canary ;
   struct task_struct *real_parent ;
   struct task_struct *parent ;
   struct list_head children ;
   struct list_head sibling ;
   struct task_struct *group_leader ;
   struct list_head ptraced ;
   struct list_head ptrace_entry ;
   struct pid *thread_pid ;
   struct hlist_node pid_links[4U] ;
   struct list_head thread_group ;
   struct list_head thread_node ;
   struct completion *vfork_done ;
   int *set_child_tid ;
   int *clear_child_tid ;
   u64 utime ;
   u64 stime ;
   u64 gtime ;
   struct prev_cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   u64 start_time ;
   u64 start_boottime ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   struct posix_cputimers posix_cputimers ;
   struct cred *ptracer_cred ;
   struct cred *real_cred ;
   struct cred *cred ;
   struct key *cached_requested_key ;
   char comm[16U] ;
   struct nameidata *nameidata ;
   struct sysv_sem sysvsem ;
   struct sysv_shm sysvshm ;
   unsigned long last_switch_count ;
   unsigned long last_switch_time ;
   struct fs_struct *fs ;
   struct files_struct *files ;
   struct nsproxy *nsproxy ;
   struct signal_struct *signal ;
   struct sighand_struct *sighand ;
   sigset_t blocked ;
   sigset_t real_blocked ;
   sigset_t saved_sigmask ;
   struct sigpending pending ;
   unsigned long sas_ss_sp ;
   size_t sas_ss_size ;
   unsigned int sas_ss_flags ;
   struct callback_head *task_works ;
   struct audit_context *audit_context ;
   kuid_t loginuid ;
   unsigned int sessionid ;
   struct seccomp seccomp ;
   u32 parent_exec_id ;
   u32 self_exec_id ;
   spinlock_t alloc_lock ;
   raw_spinlock_t pi_lock ;
   struct wake_q_node wake_q ;
   struct rb_root_cached pi_waiters ;
   struct task_struct *pi_top_task ;
   struct rt_mutex_waiter *pi_blocked_on ;
   struct mutex_waiter *blocked_on ;
   int non_block_count ;
   unsigned int irq_events ;
   unsigned long hardirq_enable_ip ;
   unsigned long hardirq_disable_ip ;
   unsigned int hardirq_enable_event ;
   unsigned int hardirq_disable_event ;
   int hardirqs_enabled ;
   int hardirq_context ;
   unsigned long softirq_disable_ip ;
   unsigned long softirq_enable_ip ;
   unsigned int softirq_disable_event ;
   unsigned int softirq_enable_event ;
   int softirqs_enabled ;
   int softirq_context ;
   u64 curr_chain_key ;
   int lockdep_depth ;
   unsigned int lockdep_recursion ;
   struct held_lock held_locks[48U] ;
   unsigned int in_ubsan ;
   void *journal_info ;
   struct bio_list *bio_list ;
   struct blk_plug *plug ;
   struct reclaim_state *reclaim_state ;
   struct backing_dev_info *backing_dev_info ;
   struct io_context *io_context ;
   struct capture_control *capture_control ;
   unsigned long ptrace_message ;
   kernel_siginfo_t *last_siginfo ;
   struct task_io_accounting ioac ;
   unsigned int psi_flags ;
   u64 acct_rss_mem1 ;
   u64 acct_vm_mem1 ;
   u64 acct_timexpd ;
   nodemask_t mems_allowed ;
   seqcount_t mems_allowed_seq ;
   int cpuset_mem_spread_rotor ;
   int cpuset_slab_spread_rotor ;
   struct css_set *cgroups ;
   struct list_head cg_list ;
   u32 closid ;
   u32 rmid ;
   struct robust_list_head *robust_list ;
   struct compat_robust_list_head *compat_robust_list ;
   struct list_head pi_state_list ;
   struct futex_pi_state *pi_state_cache ;
   struct mutex futex_exit_mutex ;
   unsigned int futex_state ;
   struct perf_event_context *perf_event_ctxp[2U] ;
   struct mutex perf_event_mutex ;
   struct list_head perf_event_list ;
   struct mempolicy *mempolicy ;
   short il_prev ;
   short pref_node_fork ;
   int numa_scan_seq ;
   unsigned int numa_scan_period ;
   unsigned int numa_scan_period_max ;
   int numa_preferred_nid ;
   unsigned long numa_migrate_retry ;
   u64 node_stamp ;
   u64 last_task_numa_placement ;
   u64 last_sum_exec_runtime ;
   struct callback_head numa_work ;
   struct numa_group *numa_group ;
   unsigned long *numa_faults ;
   unsigned long total_numa_faults ;
   unsigned long numa_faults_locality[3U] ;
   unsigned long numa_pages_migrated ;
   struct rseq *rseq ;
   u32 rseq_sig ;
   unsigned long rseq_event_mask ;
   struct tlbflush_unmap_batch tlb_ubc ;
   union __anonunion_302 __anonCompField_task_struct_52 ;
   struct pipe_inode_info *splice_pipe ;
   struct page_frag task_frag ;
   struct task_delay_info *delays ;
   int make_it_fail ;
   unsigned int fail_nth ;
   int nr_dirtied ;
   int nr_dirtied_pause ;
   unsigned long dirty_paused_when ;
   int latency_record_count ;
   struct latency_record latency_record[32U] ;
   u64 timer_slack_ns ;
   u64 default_timer_slack_ns ;
   unsigned int kasan_depth ;
   int curr_ret_stack ;
   int curr_ret_depth ;
   struct ftrace_ret_stack *ret_stack ;
   unsigned long long ftrace_timestamp ;
   atomic_t trace_overrun ;
   atomic_t tracing_graph_pause ;
   unsigned long trace ;
   unsigned long trace_recursion ;
   unsigned int kcov_mode ;
   unsigned int kcov_size ;
   void *kcov_area ;
   struct kcov *kcov ;
   u64 kcov_handle ;
   int kcov_sequence ;
   struct mem_cgroup *memcg_in_oom ;
   gfp_t memcg_oom_gfp_mask ;
   int memcg_oom_order ;
   unsigned int memcg_nr_pages_over_high ;
   struct mem_cgroup *active_memcg ;
   struct request_queue *throttle_queue ;
   struct uprobe_task *utask ;
   unsigned int sequential_io ;
   unsigned int sequential_io_avg ;
   unsigned long task_state_change ;
   int pagefault_disabled ;
   struct task_struct *oom_reaper_list ;
   struct vm_struct *stack_vm_area ;
   refcount_t stack_refcount ;
   int patch_state ;
   void *security ;
   struct thread_struct thread ;
};
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/extable.h"
struct exception_table_entry {
   int insn ;
   int fixup ;
   int handler ;
};
#line 686  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/slab.h"
struct scatterlist;
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/uio.h"
struct iovec {
   void *iov_base ;
   __kernel_size_t iov_len ;
};
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uio.h"
struct kvec {
   void *iov_base ;
   size_t iov_len ;
};
#line 30 
struct bio_vec;
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uio.h"
union __anonunion_381 {
   struct iovec *iov ;
   struct kvec *kvec ;
   struct bio_vec *bvec ;
   struct pipe_inode_info *pipe ;
};
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uio.h"
struct __anonstruct_383 {
   unsigned int head ;
   unsigned int start_head ;
};
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uio.h"
union __anonunion_382 {
   unsigned long nr_segs ;
   struct __anonstruct_383 __anonCompField___anonunion_382_54 ;
};
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uio.h"
struct iov_iter {
   unsigned int type ;
   size_t iov_offset ;
   size_t count ;
   union __anonunion_381 __anonCompField_iov_iter_53 ;
   union __anonunion_382 __anonCompField_iov_iter_55 ;
};
#line 285  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uio.h"
typedef unsigned short __kernel_sa_family_t;
#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/socket.h"
struct socket;
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/socket.h"
typedef __kernel_sa_family_t sa_family_t;
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/socket.h"
struct sockaddr {
   sa_family_t sa_family ;
   char sa_data[14U] ;
};
#line 49 
struct kiocb;
#line 49  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/socket.h"
struct msghdr {
   void *msg_name ;
   int msg_namelen ;
   struct iov_iter msg_iter ;
   void *msg_control ;
   __kernel_size_t msg_controllen ;
   unsigned int msg_flags ;
   struct kiocb *msg_iocb ;
};
#line 422 
struct ns_common;
#line 423  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/socket.h"
struct __anonstruct_sync_serial_settings_386 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
};
#line 423  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/socket.h"
typedef struct __anonstruct_sync_serial_settings_386 sync_serial_settings;
#line 45  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_te1_settings_387 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
   unsigned int slot_map ;
};
#line 45  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_te1_settings_387 te1_settings;
#line 52  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_raw_hdlc_proto_388 {
   unsigned short encoding ;
   unsigned short parity ;
};
#line 52  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_raw_hdlc_proto_388 raw_hdlc_proto;
#line 57  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_389 {
   unsigned int t391 ;
   unsigned int t392 ;
   unsigned int n391 ;
   unsigned int n392 ;
   unsigned int n393 ;
   unsigned short lmi ;
   unsigned short dce ;
};
#line 57  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_389 fr_proto;
#line 67  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_390 {
   unsigned int dlci ;
};
#line 67  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_390 fr_proto_pvc;
#line 71  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_info_391 {
   unsigned int dlci ;
   char master[16U] ;
};
#line 71  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_info_391 fr_proto_pvc_info;
#line 76  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_cisco_proto_392 {
   unsigned int interval ;
   unsigned int timeout ;
};
#line 76  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_cisco_proto_392 cisco_proto;
#line 195  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if.h"
struct ifmap {
   unsigned long mem_start ;
   unsigned long mem_end ;
   unsigned short base_addr ;
   unsigned char irq ;
   unsigned char dma ;
   unsigned char port ;
};
#line 206  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if.h"
union __anonunion_ifs_ifsu_393 {
   raw_hdlc_proto *raw_hdlc ;
   cisco_proto *cisco ;
   fr_proto *fr ;
   fr_proto_pvc *fr_pvc ;
   fr_proto_pvc_info *fr_pvc_info ;
   sync_serial_settings *sync ;
   te1_settings *te1 ;
};
#line 206  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if.h"
struct if_settings {
   unsigned int type ;
   unsigned int size ;
   union __anonunion_ifs_ifsu_393 ifs_ifsu ;
};
#line 232  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if.h"
union __anonunion_ifr_ifrn_394 {
   char ifrn_name[16U] ;
};
#line 232  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if.h"
union __anonunion_ifr_ifru_395 {
   struct sockaddr ifru_addr ;
   struct sockaddr ifru_dstaddr ;
   struct sockaddr ifru_broadaddr ;
   struct sockaddr ifru_netmask ;
   struct sockaddr ifru_hwaddr ;
   short ifru_flags ;
   int ifru_ivalue ;
   int ifru_mtu ;
   struct ifmap ifru_map ;
   char ifru_slave[16U] ;
   char ifru_newname[16U] ;
   void *ifru_data ;
   struct if_settings ifru_settings ;
};
#line 232  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if.h"
struct ifreq {
   union __anonunion_ifr_ifrn_394 ifr_ifrn ;
   union __anonunion_ifr_ifru_395 ifr_ifru ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_bl.h"
struct hlist_bl_node;
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_bl.h"
struct hlist_bl_head {
   struct hlist_bl_node *first ;
};
#line 38  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_bl.h"
struct hlist_bl_node {
   struct hlist_bl_node *next ;
   struct hlist_bl_node **pprev ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockref.h"
struct __anonstruct_410 {
   spinlock_t lock ;
   int count ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockref.h"
union __anonunion_409 {
   struct __anonstruct_410 __anonCompField___anonunion_409_58 ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockref.h"
struct lockref {
   union __anonunion_409 __anonCompField_lockref_59 ;
};
#line 78  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/stringhash.h"
struct path;
#line 79 
struct vfsmount;
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dcache.h"
struct __anonstruct_412 {
   u32 hash ;
   u32 len ;
};
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dcache.h"
union __anonunion_411 {
   struct __anonstruct_412 __anonCompField___anonunion_411_60 ;
   u64 hash_len ;
};
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dcache.h"
struct qstr {
   union __anonunion_411 __anonCompField_qstr_61 ;
   unsigned char *name ;
};
#line 89 
struct dentry_operations;
#line 89 
struct super_block;
#line 89  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dcache.h"
union __anonunion_413 {
   struct list_head d_lru ;
   wait_queue_head_t *d_wait ;
};
#line 89  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dcache.h"
union __anonunion_d_u_414 {
   struct hlist_node d_alias ;
   struct hlist_bl_node d_in_lookup_hash ;
   struct callback_head d_rcu ;
};
#line 89  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dcache.h"
struct dentry {
   unsigned int d_flags ;
   seqcount_t d_seq ;
   struct hlist_bl_node d_hash ;
   struct dentry *d_parent ;
   struct qstr d_name ;
   struct inode *d_inode ;
   unsigned char d_iname[32U] ;
   struct lockref d_lockref ;
   struct dentry_operations *d_op ;
   struct super_block *d_sb ;
   unsigned long d_time ;
   void *d_fsdata ;
   union __anonunion_413 __anonCompField_dentry_62 ;
   struct list_head d_child ;
   struct list_head d_subdirs ;
   union __anonunion_d_u_414 d_u ;
} __attribute__((__designated_init__));
#line 135  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dcache.h"
struct dentry_operations {
   int (*d_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_weak_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_hash)(struct dentry *, struct qstr *) ;
   int (*d_compare)(struct dentry *, unsigned int , char *, struct qstr *) ;
   int (*d_delete)(struct dentry *) ;
   int (*d_init)(struct dentry *) ;
   void (*d_release)(struct dentry *) ;
   void (*d_prune)(struct dentry *) ;
   void (*d_iput)(struct dentry *, struct inode *) ;
   char *(*d_dname)(struct dentry *, char *, int ) ;
   struct vfsmount *(*d_automount)(struct path *) ;
   int (*d_manage)(struct path *, bool ) ;
   struct dentry *(*d_real)(struct dentry *, struct inode *) ;
} __attribute__((__aligned__(64)));
#line 8  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/path.h"
struct path {
   struct vfsmount *mnt ;
   struct dentry *dentry ;
} __attribute__((__designated_init__));
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/shrinker.h"
struct shrink_control {
   gfp_t gfp_mask ;
   int nid ;
   unsigned long nr_to_scan ;
   unsigned long nr_scanned ;
   struct mem_cgroup *memcg ;
};
#line 60  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/shrinker.h"
struct shrinker {
   unsigned long (*count_objects)(struct shrinker *, struct shrink_control *) ;
   unsigned long (*scan_objects)(struct shrinker *, struct shrink_control *) ;
   long batch ;
   int seeks ;
   unsigned int flags ;
   struct list_head list ;
   int id ;
   atomic_long_t *nr_deferred ;
};
#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_lru.h"
struct list_lru_one {
   struct list_head list ;
   long nr_items ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_lru.h"
struct list_lru_memcg {
   struct callback_head rcu ;
   struct list_lru_one *lru[0U] ;
};
#line 40  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_lru.h"
struct list_lru_node {
   spinlock_t lock ;
   struct list_lru_one lru ;
   struct list_lru_memcg *memcg_lrus ;
   long nr_items ;
} __attribute__((__aligned__(64)));
#line 52  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_lru.h"
struct list_lru {
   struct list_lru_node *node ;
   struct list_head list ;
   int shrinker_id ;
   bool memcg_aware ;
};
#line 292  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/xarray.h"
struct xarray {
   spinlock_t xa_lock ;
   gfp_t xa_flags ;
   void *xa_head ;
};
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/capability.h"
struct kernel_cap_struct {
   __u32 cap[2U] ;
};
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/capability.h"
typedef struct kernel_cap_struct kernel_cap_t;
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fiemap.h"
struct fiemap_extent {
   __u64 fe_logical ;
   __u64 fe_physical ;
   __u64 fe_length ;
   __u64 fe_reserved64[2U] ;
   __u32 fe_flags ;
   __u32 fe_reserved[3U] ;
};
#line 39 
enum migrate_mode {
    MIGRATE_ASYNC = 0,
    MIGRATE_SYNC_LIGHT = 1,
    MIGRATE_SYNC = 2,
    MIGRATE_SYNC_NO_COPY = 3
};
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rcuwait.h"
struct rcuwait {
   struct task_struct *task ;
};
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rcu_sync.h"
struct rcu_sync {
   int gp_state ;
   int gp_count ;
   wait_queue_head_t gp_wait ;
   struct callback_head cb_head ;
};
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/percpu-rwsem.h"
struct percpu_rw_semaphore {
   struct rcu_sync rss ;
   unsigned int *read_count ;
   struct rw_semaphore rw_sem ;
   struct rcuwait writer ;
   int readers_block ;
};
#line 10  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/delayed_call.h"
struct delayed_call {
   void (*fn)(void *) ;
   void *arg ;
};
#line 36  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/uuid.h"
struct __anonstruct_uuid_t_432 {
   __u8 b[16U] ;
};
#line 36  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/uuid.h"
typedef struct __anonstruct_uuid_t_432 uuid_t;
#line 87  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uuid.h"
typedef u32 errseq_t;
#line 72  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/iocontext.h"
union __anonunion_433 {
   struct list_head q_node ;
   struct kmem_cache *__rcu_icq_cache ;
};
#line 72  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/iocontext.h"
union __anonunion_434 {
   struct hlist_node ioc_node ;
   struct callback_head __rcu_head ;
};
#line 72  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/iocontext.h"
struct io_cq {
   struct request_queue *q ;
   struct io_context *ioc ;
   union __anonunion_433 __anonCompField_io_cq_65 ;
   union __anonunion_434 __anonCompField_io_cq_66 ;
   unsigned int flags ;
};
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/iocontext.h"
struct io_context {
   atomic_long_t refcount ;
   atomic_t active_ref ;
   atomic_t nr_tasks ;
   spinlock_t lock ;
   unsigned short ioprio ;
   int nr_batch_requests ;
   unsigned long last_waited ;
   struct xarray icq_tree ;
   struct io_cq *icq_hint ;
   struct hlist_head icq_list ;
   struct work_struct release_work ;
};
#line 286  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fs.h"
struct bdi_writeback;
#line 287 
struct bio;
#line 288 
struct export_operations;
#line 289 
struct hd_geometry;
#line 290 
struct kobject;
#line 291 
struct poll_table_struct;
#line 292 
struct kstatfs;
#line 293 
struct swap_info_struct;
#line 294 
struct fscrypt_info;
#line 295 
struct fscrypt_operations;
#line 296 
struct fsverity_info;
#line 297 
struct fsverity_operations;
#line 298 
struct fs_context;
#line 299 
struct fs_parameter_description;
#line 224  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct iattr {
   unsigned int ia_valid ;
   umode_t ia_mode ;
   kuid_t ia_uid ;
   kgid_t ia_gid ;
   loff_t ia_size ;
   struct timespec64 ia_atime ;
   struct timespec64 ia_mtime ;
   struct timespec64 ia_ctime ;
   struct file *ia_file ;
};
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/percpu_counter.h"
struct percpu_counter {
   raw_spinlock_t lock ;
   s64 count ;
   struct list_head list ;
   s32 *counters ;
};
#line 214  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dqblk_xfs.h"
struct dquot;
#line 215 
struct kqid;
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/projid.h"
typedef __kernel_uid32_t projid_t;
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/projid.h"
struct __anonstruct_kprojid_t_435 {
   projid_t val ;
};
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/projid.h"
typedef struct __anonstruct_kprojid_t_435 kprojid_t;
#line 180  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/quota.h"
enum quota_type {
    USRQUOTA = 0,
    GRPQUOTA = 1,
    PRJQUOTA = 2
};
#line 66  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
typedef long long qsize_t;
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
union __anonunion_436 {
   kuid_t uid ;
   kgid_t gid ;
   kprojid_t projid ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct kqid {
   union __anonunion_436 __anonCompField_kqid_67 ;
   enum quota_type type ;
};
#line 205  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct mem_dqblk {
   qsize_t dqb_bhardlimit ;
   qsize_t dqb_bsoftlimit ;
   qsize_t dqb_curspace ;
   qsize_t dqb_rsvspace ;
   qsize_t dqb_ihardlimit ;
   qsize_t dqb_isoftlimit ;
   qsize_t dqb_curinodes ;
   time64_t dqb_btime ;
   time64_t dqb_itime ;
};
#line 216 
struct quota_format_type;
#line 222  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct mem_dqinfo {
   struct quota_format_type *dqi_format ;
   int dqi_fmt_id ;
   struct list_head dqi_dirty_list ;
   unsigned long dqi_flags ;
   unsigned int dqi_bgrace ;
   unsigned int dqi_igrace ;
   qsize_t dqi_max_spc_limit ;
   qsize_t dqi_max_ino_limit ;
   void *dqi_priv ;
};
#line 294  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct dquot {
   struct hlist_node dq_hash ;
   struct list_head dq_inuse ;
   struct list_head dq_free ;
   struct list_head dq_dirty ;
   struct mutex dq_lock ;
   spinlock_t dq_dqb_lock ;
   atomic_t dq_count ;
   struct super_block *dq_sb ;
   struct kqid dq_id ;
   loff_t dq_off ;
   unsigned long dq_flags ;
   struct mem_dqblk dq_dqb ;
};
#line 310  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct quota_format_ops {
   int (*check_quota_file)(struct super_block *, int ) ;
   int (*read_file_info)(struct super_block *, int ) ;
   int (*write_file_info)(struct super_block *, int ) ;
   int (*free_file_info)(struct super_block *, int ) ;
   int (*read_dqblk)(struct dquot *) ;
   int (*commit_dqblk)(struct dquot *) ;
   int (*release_dqblk)(struct dquot *) ;
   int (*get_next_id)(struct super_block *, struct kqid *) ;
};
#line 322  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct dquot_operations {
   int (*write_dquot)(struct dquot *) ;
   struct dquot *(*alloc_dquot)(struct super_block *, int ) ;
   void (*destroy_dquot)(struct dquot *) ;
   int (*acquire_dquot)(struct dquot *) ;
   int (*release_dquot)(struct dquot *) ;
   int (*mark_dirty)(struct dquot *) ;
   int (*write_info)(struct super_block *, int ) ;
   qsize_t *(*get_reserved_space)(struct inode *) ;
   int (*get_projid)(struct inode *, kprojid_t *) ;
   int (*get_inode_usage)(struct inode *, qsize_t *) ;
   int (*get_next_id)(struct super_block *, struct kqid *) ;
};
#line 343  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct qc_dqblk {
   int d_fieldmask ;
   u64 d_spc_hardlimit ;
   u64 d_spc_softlimit ;
   u64 d_ino_hardlimit ;
   u64 d_ino_softlimit ;
   u64 d_space ;
   u64 d_ino_count ;
   s64 d_ino_timer ;
   s64 d_spc_timer ;
   int d_ino_warns ;
   int d_spc_warns ;
   u64 d_rt_spc_hardlimit ;
   u64 d_rt_spc_softlimit ;
   u64 d_rt_space ;
   s64 d_rt_spc_timer ;
   int d_rt_spc_warns ;
};
#line 395  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct qc_type_state {
   unsigned int flags ;
   unsigned int spc_timelimit ;
   unsigned int ino_timelimit ;
   unsigned int rt_spc_timelimit ;
   unsigned int spc_warnlimit ;
   unsigned int ino_warnlimit ;
   unsigned int rt_spc_warnlimit ;
   unsigned long long ino ;
   blkcnt_t blocks ;
   blkcnt_t nextents ;
};
#line 409  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct qc_state {
   unsigned int s_incoredqs ;
   struct qc_type_state s_state[3U] ;
};
#line 415  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct qc_info {
   int i_fieldmask ;
   unsigned int i_flags ;
   unsigned int i_spc_timelimit ;
   unsigned int i_ino_timelimit ;
   unsigned int i_rt_spc_timelimit ;
   unsigned int i_spc_warnlimit ;
   unsigned int i_ino_warnlimit ;
   unsigned int i_rt_spc_warnlimit ;
};
#line 428  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct quotactl_ops {
   int (*quota_on)(struct super_block *, int , int , struct path *) ;
   int (*quota_off)(struct super_block *, int ) ;
   int (*quota_enable)(struct super_block *, unsigned int ) ;
   int (*quota_disable)(struct super_block *, unsigned int ) ;
   int (*quota_sync)(struct super_block *, int ) ;
   int (*set_info)(struct super_block *, int , struct qc_info *) ;
   int (*get_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*get_nextdqblk)(struct super_block *, struct kqid *, struct qc_dqblk *) ;
   int (*set_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*get_state)(struct super_block *, struct qc_state *) ;
   int (*rm_xquota)(struct super_block *, unsigned int ) ;
};
#line 443  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct quota_format_type {
   int qf_fmt_id ;
   struct quota_format_ops *qf_ops ;
   struct module *qf_owner ;
   struct quota_format_type *qf_next ;
};
#line 518  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct quota_info {
   unsigned int flags ;
   struct rw_semaphore dqio_sem ;
   struct inode *files[3U] ;
   struct mem_dqinfo info[3U] ;
   struct quota_format_ops *ops[3U] ;
};
#line 538 
struct writeback_control;
#line 539 
enum rw_hint {
    WRITE_LIFE_NOT_SET = 0,
    WRITE_LIFE_NONE = 1,
    WRITE_LIFE_SHORT = 2,
    WRITE_LIFE_MEDIUM = 3,
    WRITE_LIFE_LONG = 4,
    WRITE_LIFE_EXTREME = 5
};
#line 318  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct kiocb {
   struct file *ki_filp ;
   loff_t ki_pos ;
   void (*ki_complete)(struct kiocb *, long , long ) ;
   void *private ;
   int ki_flags ;
   u16 ki_hint ;
   u16 ki_ioprio ;
   unsigned int ki_cookie ;
};
#line 339  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
union __anonunion_arg_438 {
   char *buf ;
   void *data ;
};
#line 339  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct __anonstruct_read_descriptor_t_437 {
   size_t written ;
   size_t count ;
   union __anonunion_arg_438 arg ;
   int error ;
};
#line 339  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
typedef struct __anonstruct_read_descriptor_t_437 read_descriptor_t;
#line 362  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct address_space_operations {
   int (*writepage)(struct page *, struct writeback_control *) ;
   int (*readpage)(struct file *, struct page *) ;
   int (*writepages)(struct address_space *, struct writeback_control *) ;
   int (*set_page_dirty)(struct page *) ;
   int (*readpages)(struct file *, struct address_space *, struct list_head *, unsigned int ) ;
   int (*write_begin)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page **, void **) ;
   int (*write_end)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page *, void *) ;
   sector_t (*bmap)(struct address_space *, sector_t ) ;
   void (*invalidatepage)(struct page *, unsigned int , unsigned int ) ;
   int (*releasepage)(struct page *, gfp_t ) ;
   void (*freepage)(struct page *) ;
   ssize_t (*direct_IO)(struct kiocb *, struct iov_iter *) ;
   int (*migratepage)(struct address_space *, struct page *, struct page *, enum migrate_mode ) ;
   bool (*isolate_page)(struct page *, isolate_mode_t ) ;
   void (*putback_page)(struct page *) ;
   int (*launder_page)(struct page *) ;
   int (*is_partially_uptodate)(struct page *, unsigned long , unsigned long ) ;
   void (*is_dirty_writeback)(struct page *, bool *, bool *) ;
   int (*error_remove_page)(struct address_space *, struct page *) ;
   int (*swap_activate)(struct swap_info_struct *, struct file *, sector_t *) ;
   void (*swap_deactivate)(struct file *) ;
};
#line 445  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct address_space {
   struct inode *host ;
   struct xarray i_pages ;
   gfp_t gfp_mask ;
   atomic_t i_mmap_writable ;
   atomic_t nr_thps ;
   struct rb_root_cached i_mmap ;
   struct rw_semaphore i_mmap_rwsem ;
   unsigned long nrpages ;
   unsigned long nrexceptional ;
   unsigned long writeback_index ;
   struct address_space_operations *a_ops ;
   unsigned long flags ;
   errseq_t wb_err ;
   spinlock_t private_lock ;
   struct list_head private_list ;
   void *private_data ;
} __attribute__((__designated_init__, __aligned__(8)));
#line 473 
struct hd_struct;
#line 473 
struct gendisk;
#line 473  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct block_device {
   dev_t bd_dev ;
   int bd_openers ;
   struct inode *bd_inode ;
   struct super_block *bd_super ;
   struct mutex bd_mutex ;
   void *bd_claiming ;
   void *bd_holder ;
   int bd_holders ;
   bool bd_write_holder ;
   struct list_head bd_holder_disks ;
   struct block_device *bd_contains ;
   unsigned int bd_block_size ;
   u8 bd_partno ;
   struct hd_struct *bd_part ;
   unsigned int bd_part_count ;
   int bd_invalidated ;
   struct gendisk *bd_disk ;
   struct request_queue *bd_queue ;
   struct backing_dev_info *bd_bdi ;
   struct list_head bd_list ;
   unsigned long bd_private ;
   int bd_fsfreeze_count ;
   struct mutex bd_fsfreeze_mutex ;
} __attribute__((__designated_init__));
#line 587 
struct posix_acl;
#line 614 
struct fsnotify_mark_connector;
#line 628 
struct inode_operations;
#line 628  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
union __anonunion_441 {
   unsigned int i_nlink ;
   unsigned int __i_nlink ;
};
#line 628  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
union __anonunion_442 {
   struct hlist_head i_dentry ;
   struct callback_head i_rcu ;
};
#line 628  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
union __anonunion_443 {
   struct file_operations *i_fop ;
   void (*free_inode)(struct inode *) ;
};
#line 628 
struct file_lock_context;
#line 628  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
union __anonunion_444 {
   struct pipe_inode_info *i_pipe ;
   struct block_device *i_bdev ;
   struct cdev *i_cdev ;
   char *i_link ;
   unsigned int i_dir_seq ;
};
#line 628  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct inode {
   umode_t i_mode ;
   unsigned short i_opflags ;
   kuid_t i_uid ;
   kgid_t i_gid ;
   unsigned int i_flags ;
   struct posix_acl *i_acl ;
   struct posix_acl *i_default_acl ;
   struct inode_operations *i_op ;
   struct super_block *i_sb ;
   struct address_space *i_mapping ;
   void *i_security ;
   unsigned long i_ino ;
   union __anonunion_441 __anonCompField_inode_68 ;
   dev_t i_rdev ;
   loff_t i_size ;
   struct timespec64 i_atime ;
   struct timespec64 i_mtime ;
   struct timespec64 i_ctime ;
   spinlock_t i_lock ;
   unsigned short i_bytes ;
   u8 i_blkbits ;
   u8 i_write_hint ;
   blkcnt_t i_blocks ;
   unsigned long i_state ;
   struct rw_semaphore i_rwsem ;
   unsigned long dirtied_when ;
   unsigned long dirtied_time_when ;
   struct hlist_node i_hash ;
   struct list_head i_io_list ;
   struct bdi_writeback *i_wb ;
   int i_wb_frn_winner ;
   u16 i_wb_frn_avg_time ;
   u16 i_wb_frn_history ;
   struct list_head i_lru ;
   struct list_head i_sb_list ;
   struct list_head i_wb_list ;
   union __anonunion_442 __anonCompField_inode_69 ;
   atomic64_t i_version ;
   atomic_t i_count ;
   atomic_t i_dio_count ;
   atomic_t i_writecount ;
   atomic_t i_readcount ;
   union __anonunion_443 __anonCompField_inode_70 ;
   struct file_lock_context *i_flctx ;
   struct address_space i_data ;
   struct list_head i_devices ;
   union __anonunion_444 __anonCompField_inode_71 ;
   __u32 i_generation ;
   __u32 i_fsnotify_mask ;
   struct fsnotify_mark_connector *i_fsnotify_marks ;
   struct fscrypt_info *i_crypt_info ;
   struct fsverity_info *i_verity_info ;
   void *i_private ;
} __attribute__((__designated_init__));
#line 904  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct fown_struct {
   rwlock_t lock ;
   struct pid *pid ;
   enum pid_type pid_type ;
   kuid_t uid ;
   kuid_t euid ;
   int signum ;
};
#line 915  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct file_ra_state {
   unsigned long start ;
   unsigned int size ;
   unsigned int async_size ;
   unsigned int ra_pages ;
   unsigned int mmap_miss ;
   loff_t prev_pos ;
};
#line 935  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
union __anonunion_f_u_445 {
   struct llist_node fu_llist ;
   struct callback_head fu_rcuhead ;
};
#line 935  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct file {
   union __anonunion_f_u_445 f_u ;
   struct path f_path ;
   struct inode *f_inode ;
   struct file_operations *f_op ;
   spinlock_t f_lock ;
   enum rw_hint f_write_hint ;
   atomic_long_t f_count ;
   unsigned int f_flags ;
   fmode_t f_mode ;
   struct mutex f_pos_lock ;
   loff_t f_pos ;
   struct fown_struct f_owner ;
   struct cred *f_cred ;
   struct file_ra_state f_ra ;
   u64 f_version ;
   void *f_security ;
   void *private_data ;
   struct list_head f_ep_links ;
   struct list_head f_tfile_llink ;
   struct address_space *f_mapping ;
   errseq_t f_wb_err ;
} __attribute__((__designated_init__, __aligned__(4)));
#line 988  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
typedef void *fl_owner_t;
#line 1026 
struct file_lock;
#line 1029  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct file_lock_operations {
   void (*fl_copy_lock)(struct file_lock *, struct file_lock *) ;
   void (*fl_release_private)(struct file_lock *) ;
};
#line 1034  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct lock_manager_operations {
   fl_owner_t (*lm_get_owner)(fl_owner_t ) ;
   void (*lm_put_owner)(fl_owner_t ) ;
   void (*lm_notify)(struct file_lock *) ;
   int (*lm_grant)(struct file_lock *, int ) ;
   bool (*lm_break)(struct file_lock *) ;
   int (*lm_change)(struct file_lock *, int , struct list_head *) ;
   void (*lm_setup)(struct file_lock *, void **) ;
};
#line 1052 
struct net;
#line 1058 
struct nlm_lockowner;
#line 10  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/nfs_fs_i.h"
struct nfs_lock_info {
   u32 state ;
   struct nlm_lockowner *owner ;
   struct list_head list ;
};
#line 15 
struct nfs4_lock_state;
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/nfs_fs_i.h"
struct nfs4_lock_info {
   struct nfs4_lock_state *owner ;
};
#line 1079  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct fasync_struct;
#line 1079  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct __anonstruct_afs_447 {
   struct list_head link ;
   int state ;
   unsigned int debug_id ;
};
#line 1079  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
union __anonunion_fl_u_446 {
   struct nfs_lock_info nfs_fl ;
   struct nfs4_lock_info nfs4_fl ;
   struct __anonstruct_afs_447 afs ;
};
#line 1079  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct file_lock {
   struct file_lock *fl_blocker ;
   struct list_head fl_list ;
   struct hlist_node fl_link ;
   struct list_head fl_blocked_requests ;
   struct list_head fl_blocked_member ;
   fl_owner_t fl_owner ;
   unsigned int fl_flags ;
   unsigned char fl_type ;
   unsigned int fl_pid ;
   int fl_link_cpu ;
   wait_queue_head_t fl_wait ;
   struct file *fl_file ;
   loff_t fl_start ;
   loff_t fl_end ;
   struct fasync_struct *fl_fasync ;
   unsigned long fl_break_time ;
   unsigned long fl_downgrade_time ;
   struct file_lock_operations *fl_ops ;
   struct lock_manager_operations *fl_lmops ;
   union __anonunion_fl_u_446 fl_u ;
} __attribute__((__designated_init__));
#line 1117  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct file_lock_context {
   spinlock_t flc_lock ;
   struct list_head flc_flock ;
   struct list_head flc_posix ;
   struct list_head flc_lease ;
};
#line 1331  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct fasync_struct {
   rwlock_t fa_lock ;
   int magic ;
   int fa_fd ;
   struct fasync_struct *fa_next ;
   struct file *fa_file ;
   struct callback_head fa_rcu ;
};
#line 1418  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct sb_writers {
   int frozen ;
   wait_queue_head_t wait_unfrozen ;
   struct percpu_rw_semaphore rw_sem[3U] ;
};
#line 1424 
struct super_operations;
#line 1424 
struct xattr_handler;
#line 1424 
struct mtd_info;
#line 1424  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct super_block {
   struct list_head s_list ;
   dev_t s_dev ;
   unsigned char s_blocksize_bits ;
   unsigned long s_blocksize ;
   loff_t s_maxbytes ;
   struct file_system_type *s_type ;
   struct super_operations *s_op ;
   struct dquot_operations *dq_op ;
   struct quotactl_ops *s_qcop ;
   struct export_operations *s_export_op ;
   unsigned long s_flags ;
   unsigned long s_iflags ;
   unsigned long s_magic ;
   struct dentry *s_root ;
   struct rw_semaphore s_umount ;
   int s_count ;
   atomic_t s_active ;
   void *s_security ;
   struct xattr_handler **s_xattr ;
   struct fscrypt_operations *s_cop ;
   struct key *s_master_keys ;
   struct fsverity_operations *s_vop ;
   struct hlist_bl_head s_roots ;
   struct list_head s_mounts ;
   struct block_device *s_bdev ;
   struct backing_dev_info *s_bdi ;
   struct mtd_info *s_mtd ;
   struct hlist_node s_instances ;
   unsigned int s_quota_types ;
   struct quota_info s_dquot ;
   struct sb_writers s_writers ;
   void *s_fs_info ;
   u32 s_time_gran ;
   time64_t s_time_min ;
   time64_t s_time_max ;
   __u32 s_fsnotify_mask ;
   struct fsnotify_mark_connector *s_fsnotify_marks ;
   char s_id[32U] ;
   uuid_t s_uuid ;
   unsigned int s_max_links ;
   fmode_t s_mode ;
   struct mutex s_vfs_rename_mutex ;
   char *s_subtype ;
   struct dentry_operations *s_d_op ;
   int cleancache_poolid ;
   struct shrinker s_shrink ;
   atomic_long_t s_remove_count ;
   atomic_long_t s_fsnotify_inode_refs ;
   int s_readonly_remount ;
   struct workqueue_struct *s_dio_done_wq ;
   struct hlist_head s_pins ;
   struct user_namespace *s_user_ns ;
   struct list_lru s_dentry_lru ;
   struct list_lru s_inode_lru ;
   struct callback_head rcu ;
   struct work_struct destroy_work ;
   struct mutex s_sync_lock ;
   int s_stack_depth ;
   spinlock_t s_inode_list_lock ;
   struct list_head s_inodes ;
   spinlock_t s_inode_wblist_lock ;
   struct list_head s_inodes_wb ;
} __attribute__((__designated_init__));
#line 1746  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct fiemap_extent_info {
   unsigned int fi_flags ;
   unsigned int fi_extents_mapped ;
   unsigned int fi_extents_max ;
   struct fiemap_extent *fi_extents_start ;
};
#line 1756 
struct dir_context;
#line 1767  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct dir_context {
   int (*actor)(struct dir_context *, char *, int , loff_t , u64 , unsigned int ) ;
   loff_t pos ;
};
#line 1771 
struct block_device_operations;
#line 1821  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct file_operations {
   struct module *owner ;
   loff_t (*llseek)(struct file *, loff_t , int ) ;
   ssize_t (*read)(struct file *, char *, size_t , loff_t *) ;
   ssize_t (*write)(struct file *, char *, size_t , loff_t *) ;
   ssize_t (*read_iter)(struct kiocb *, struct iov_iter *) ;
   ssize_t (*write_iter)(struct kiocb *, struct iov_iter *) ;
   int (*iopoll)(struct kiocb *, bool ) ;
   int (*iterate)(struct file *, struct dir_context *) ;
   int (*iterate_shared)(struct file *, struct dir_context *) ;
   __poll_t (*poll)(struct file *, struct poll_table_struct *) ;
   long (*unlocked_ioctl)(struct file *, unsigned int , unsigned long ) ;
   long (*compat_ioctl)(struct file *, unsigned int , unsigned long ) ;
   int (*mmap)(struct file *, struct vm_area_struct *) ;
   unsigned long mmap_supported_flags ;
   int (*open)(struct inode *, struct file *) ;
   int (*flush)(struct file *, fl_owner_t ) ;
   int (*release)(struct inode *, struct file *) ;
   int (*fsync)(struct file *, loff_t , loff_t , int ) ;
   int (*fasync)(int , struct file *, int ) ;
   int (*lock)(struct file *, int , struct file_lock *) ;
   ssize_t (*sendpage)(struct file *, struct page *, int , size_t , loff_t *, int ) ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   int (*check_flags)(int ) ;
   int (*flock)(struct file *, int , struct file_lock *) ;
   ssize_t (*splice_write)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ) ;
   ssize_t (*splice_read)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ) ;
   int (*setlease)(struct file *, long , struct file_lock **, void **) ;
   long (*fallocate)(struct file *, int , loff_t , loff_t ) ;
   void (*show_fdinfo)(struct seq_file *, struct file *) ;
   ssize_t (*copy_file_range)(struct file *, loff_t , struct file *, loff_t , size_t , unsigned int ) ;
   loff_t (*remap_file_range)(struct file *, loff_t , struct file *, loff_t , loff_t , unsigned int ) ;
   int (*fadvise)(struct file *, loff_t , loff_t , int ) ;
} __attribute__((__designated_init__));
#line 1863  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct inode_operations {
   struct dentry *(*lookup)(struct inode *, struct dentry *, unsigned int ) ;
   char *(*get_link)(struct dentry *, struct inode *, struct delayed_call *) ;
   int (*permission)(struct inode *, int ) ;
   struct posix_acl *(*get_acl)(struct inode *, int ) ;
   int (*readlink)(struct dentry *, char *, int ) ;
   int (*create)(struct inode *, struct dentry *, umode_t , bool ) ;
   int (*link)(struct dentry *, struct inode *, struct dentry *) ;
   int (*unlink)(struct inode *, struct dentry *) ;
   int (*symlink)(struct inode *, struct dentry *, char *) ;
   int (*mkdir)(struct inode *, struct dentry *, umode_t ) ;
   int (*rmdir)(struct inode *, struct dentry *) ;
   int (*mknod)(struct inode *, struct dentry *, umode_t , dev_t ) ;
   int (*rename)(struct inode *, struct dentry *, struct inode *, struct dentry *, unsigned int ) ;
   int (*setattr)(struct dentry *, struct iattr *) ;
   int (*getattr)(struct path *, struct kstat *, u32 , unsigned int ) ;
   ssize_t (*listxattr)(struct dentry *, char *, size_t ) ;
   int (*fiemap)(struct inode *, struct fiemap_extent_info *, u64 , u64 ) ;
   int (*update_time)(struct inode *, struct timespec64 *, int ) ;
   int (*atomic_open)(struct inode *, struct dentry *, struct file *, unsigned int , umode_t ) ;
   int (*tmpfile)(struct inode *, struct dentry *, umode_t ) ;
   int (*set_acl)(struct inode *, struct posix_acl *, int ) ;
} __attribute__((__aligned__(64)));
#line 1942  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct super_operations {
   struct inode *(*alloc_inode)(struct super_block *) ;
   void (*destroy_inode)(struct inode *) ;
   void (*free_inode)(struct inode *) ;
   void (*dirty_inode)(struct inode *, int ) ;
   int (*write_inode)(struct inode *, struct writeback_control *) ;
   int (*drop_inode)(struct inode *) ;
   void (*evict_inode)(struct inode *) ;
   void (*put_super)(struct super_block *) ;
   int (*sync_fs)(struct super_block *, int ) ;
   int (*freeze_super)(struct super_block *) ;
   int (*freeze_fs)(struct super_block *) ;
   int (*thaw_super)(struct super_block *) ;
   int (*unfreeze_fs)(struct super_block *) ;
   int (*statfs)(struct dentry *, struct kstatfs *) ;
   int (*remount_fs)(struct super_block *, int *, char *) ;
   void (*umount_begin)(struct super_block *) ;
   int (*show_options)(struct seq_file *, struct dentry *) ;
   int (*show_devname)(struct seq_file *, struct dentry *) ;
   int (*show_path)(struct seq_file *, struct dentry *) ;
   int (*show_stats)(struct seq_file *, struct dentry *) ;
   ssize_t (*quota_read)(struct super_block *, int , char *, size_t , loff_t ) ;
   ssize_t (*quota_write)(struct super_block *, int , char *, size_t , loff_t ) ;
   struct dquot **(*get_dquots)(struct inode *) ;
   int (*bdev_try_to_free_page)(struct super_block *, struct page *, gfp_t ) ;
   long (*nr_cached_objects)(struct super_block *, struct shrink_control *) ;
   long (*free_cached_objects)(struct super_block *, struct shrink_control *) ;
};
#line 2217  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct file_system_type {
   char *name ;
   int fs_flags ;
   int (*init_fs_context)(struct fs_context *) ;
   struct fs_parameter_description *parameters ;
   struct dentry *(*mount)(struct file_system_type *, int , char *, void *) ;
   void (*kill_sb)(struct super_block *) ;
   struct module *owner ;
   struct file_system_type *next ;
   struct hlist_head fs_supers ;
   struct lock_class_key s_lock_key ;
   struct lock_class_key s_umount_key ;
   struct lock_class_key s_vfs_rename_key ;
   struct lock_class_key s_writers_key[3U] ;
   struct lock_class_key i_lock_key ;
   struct lock_class_key i_mutex_key ;
   struct lock_class_key i_mutex_dir_key ;
};
#line 3599 
struct sock;
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/compat.h"
typedef s32 compat_long_t;
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/compat.h"
typedef u32 compat_uptr_t;
#line 367  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/compat.h"
struct compat_robust_list {
   compat_uptr_t next ;
};
#line 371  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/compat.h"
struct compat_robust_list_head {
   struct compat_robust_list list ;
   compat_long_t futex_offset ;
   compat_uptr_t list_op_pending ;
};
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ioport.h"
struct resource {
   resource_size_t start ;
   resource_size_t end ;
   char *name ;
   unsigned long flags ;
   unsigned long desc ;
   struct resource *parent ;
   struct resource *sibling ;
   struct resource *child ;
};
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memremap.h"
struct vmem_altmap {
   unsigned long base_pfn ;
   unsigned long end_pfn ;
   unsigned long reserve ;
   unsigned long free ;
   unsigned long align ;
   unsigned long alloc ;
};
#line 26 
enum memory_type {
    MEMORY_DEVICE_PRIVATE = 1,
    MEMORY_DEVICE_FS_DAX = 2,
    MEMORY_DEVICE_DEVDAX = 3,
    MEMORY_DEVICE_PCI_P2PDMA = 4
};
#line 67  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memremap.h"
struct dev_pagemap_ops {
   void (*page_free)(struct page *) ;
   void (*kill)(struct dev_pagemap *) ;
   void (*cleanup)(struct dev_pagemap *) ;
   vm_fault_t (*migrate_to_ram)(struct vm_fault *) ;
};
#line 107  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memremap.h"
struct dev_pagemap {
   struct vmem_altmap altmap ;
   struct resource res ;
   struct percpu_ref *ref ;
   struct percpu_ref internal_ref ;
   struct completion done ;
   enum memory_type type ;
   unsigned int flags ;
   struct dev_pagemap_ops *ops ;
};
#line 417  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm.h"
struct vm_fault {
   struct vm_area_struct *vma ;
   unsigned int flags ;
   gfp_t gfp_mask ;
   unsigned long pgoff ;
   unsigned long address ;
   pmd_t *pmd ;
   pud_t *pud ;
   pte_t orig_pte ;
   struct page *cow_page ;
   struct mem_cgroup *memcg ;
   struct page *page ;
   pte_t *pte ;
   spinlock_t *ptl ;
   pgtable_t prealloc_pte ;
};
#line 448 
enum page_entry_size {
    PE_SIZE_PTE = 0,
    PE_SIZE_PMD = 1,
    PE_SIZE_PUD = 2
};
#line 467  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm.h"
struct vm_operations_struct {
   void (*open)(struct vm_area_struct *) ;
   void (*close)(struct vm_area_struct *) ;
   int (*split)(struct vm_area_struct *, unsigned long ) ;
   int (*mremap)(struct vm_area_struct *) ;
   vm_fault_t (*fault)(struct vm_fault *) ;
   vm_fault_t (*huge_fault)(struct vm_fault *, enum page_entry_size ) ;
   void (*map_pages)(struct vm_fault *, unsigned long , unsigned long ) ;
   unsigned long (*pagesize)(struct vm_area_struct *) ;
   vm_fault_t (*page_mkwrite)(struct vm_fault *) ;
   vm_fault_t (*pfn_mkwrite)(struct vm_fault *) ;
   int (*access)(struct vm_area_struct *, unsigned long , void *, int , int ) ;
   char *(*name)(struct vm_area_struct *) ;
   int (*set_policy)(struct vm_area_struct *, struct mempolicy *) ;
   struct mempolicy *(*get_policy)(struct vm_area_struct *, unsigned long ) ;
   struct page *(*find_special_page)(struct vm_area_struct *, unsigned long ) ;
};
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bvec.h"
struct bio_vec {
   struct page *bv_page ;
   unsigned int bv_len ;
   unsigned int bv_offset ;
};
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bvec.h"
struct bvec_iter {
   sector_t bi_sector ;
   unsigned int bi_size ;
   unsigned int bi_idx ;
   unsigned int bi_bvec_done ;
};
#line 201  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/random.h"
enum ldv_9144 {
    SS_FREE = 0,
    SS_UNCONNECTED = 1,
    SS_CONNECTING = 2,
    SS_CONNECTED = 3,
    SS_DISCONNECTING = 4
};
#line 209  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/random.h"
typedef enum ldv_9144 socket_state;
#line 94  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/net.h"
struct socket_wq {
   wait_queue_head_t wait ;
   struct fasync_struct *fasync_list ;
   unsigned long flags ;
   struct callback_head rcu ;
} __attribute__((__aligned__(64)));
#line 112 
struct proto_ops;
#line 112  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/net.h"
struct socket {
   socket_state state ;
   short type ;
   unsigned long flags ;
   struct file *file ;
   struct sock *sk ;
   struct proto_ops *ops ;
   struct socket_wq wq ;
};
#line 125 
struct sk_buff;
#line 135  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/net.h"
struct proto_ops {
   int family ;
   struct module *owner ;
   int (*release)(struct socket *) ;
   int (*bind)(struct socket *, struct sockaddr *, int ) ;
   int (*connect)(struct socket *, struct sockaddr *, int , int ) ;
   int (*socketpair)(struct socket *, struct socket *) ;
   int (*accept)(struct socket *, struct socket *, int , bool ) ;
   int (*getname)(struct socket *, struct sockaddr *, int ) ;
   __poll_t (*poll)(struct file *, struct socket *, struct poll_table_struct *) ;
   int (*ioctl)(struct socket *, unsigned int , unsigned long ) ;
   int (*compat_ioctl)(struct socket *, unsigned int , unsigned long ) ;
   int (*gettstamp)(struct socket *, void *, bool , bool ) ;
   int (*listen)(struct socket *, int ) ;
   int (*shutdown)(struct socket *, int ) ;
   int (*setsockopt)(struct socket *, int , int , char *, unsigned int ) ;
   int (*getsockopt)(struct socket *, int , int , char *, int *) ;
   int (*compat_setsockopt)(struct socket *, int , int , char *, unsigned int ) ;
   int (*compat_getsockopt)(struct socket *, int , int , char *, int *) ;
   int (*sendmsg)(struct socket *, struct msghdr *, size_t ) ;
   int (*recvmsg)(struct socket *, struct msghdr *, size_t , int ) ;
   int (*mmap)(struct file *, struct socket *, struct vm_area_struct *) ;
   ssize_t (*sendpage)(struct socket *, struct page *, int , size_t , int ) ;
   ssize_t (*splice_read)(struct socket *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ) ;
   int (*set_peek_off)(struct sock *, int ) ;
   int (*peek_len)(struct socket *) ;
   int (*read_sock)(struct sock *, read_descriptor_t *, int (*)(read_descriptor_t *, struct sk_buff *, unsigned int , size_t )) ;
   int (*sendpage_locked)(struct sock *, struct page *, int , size_t , int ) ;
   int (*sendmsg_locked)(struct sock *, struct msghdr *, size_t ) ;
   int (*set_rcvlowat)(struct sock *, int ) ;
};
#line 162  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/checksum_64.h"
struct in6_addr;
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/idr.h"
struct idr {
   struct xarray idr_rt ;
   unsigned int idr_base ;
   unsigned int idr_next ;
};
#line 323 
struct kernfs_open_node;
#line 324 
struct kernfs_iattrs;
#line 84  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_root;
#line 84  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_elem_dir {
   unsigned long subdirs ;
   struct rb_root children ;
   struct kernfs_root *root ;
};
#line 96 
struct kernfs_node;
#line 96  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_elem_symlink {
   struct kernfs_node *target_kn ;
};
#line 100 
struct kernfs_ops;
#line 100  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_elem_attr {
   struct kernfs_ops *ops ;
   struct kernfs_open_node *open ;
   loff_t size ;
   struct kernfs_node *notify_next ;
};
#line 116  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
union __anonunion_495 {
   struct kernfs_elem_dir dir ;
   struct kernfs_elem_symlink symlink ;
   struct kernfs_elem_attr attr ;
};
#line 116  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_node {
   atomic_t count ;
   atomic_t active ;
   struct lockdep_map dep_map ;
   struct kernfs_node *parent ;
   char *name ;
   struct rb_node rb ;
   void *ns ;
   unsigned int hash ;
   union __anonunion_495 __anonCompField_kernfs_node_73 ;
   void *priv ;
   u64 id ;
   unsigned short flags ;
   umode_t mode ;
   struct kernfs_iattrs *iattr ;
};
#line 161  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_syscall_ops {
   int (*show_options)(struct seq_file *, struct kernfs_root *) ;
   int (*mkdir)(struct kernfs_node *, char *, umode_t ) ;
   int (*rmdir)(struct kernfs_node *) ;
   int (*rename)(struct kernfs_node *, struct kernfs_node *, char *) ;
   int (*show_path)(struct seq_file *, struct kernfs_node *, struct kernfs_root *) ;
};
#line 173  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_root {
   struct kernfs_node *kn ;
   unsigned int flags ;
   struct idr ino_idr ;
   u32 last_id_lowbits ;
   u32 id_highbits ;
   struct kernfs_syscall_ops *syscall_ops ;
   struct list_head supers ;
   wait_queue_head_t deactivate_waitq ;
};
#line 190  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_open_file {
   struct kernfs_node *kn ;
   struct file *file ;
   struct seq_file *seq_file ;
   void *priv ;
   struct mutex mutex ;
   struct mutex prealloc_mutex ;
   int event ;
   struct list_head list ;
   char *prealloc_buf ;
   size_t atomic_write_len ;
   bool mmapped : 1 ;
   bool released : 1 ;
   struct vm_operations_struct *vm_ops ;
};
#line 210  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_ops {
   int (*open)(struct kernfs_open_file *) ;
   void (*release)(struct kernfs_open_file *) ;
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   ssize_t (*read)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   size_t atomic_write_len ;
   bool prealloc ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   __poll_t (*poll)(struct kernfs_open_file *, struct poll_table_struct *) ;
   int (*mmap)(struct kernfs_open_file *, struct vm_area_struct *) ;
   struct lock_class_key lockdep_key ;
};
#line 595 
enum kobj_ns_type {
    KOBJ_NS_TYPE_NONE = 0,
    KOBJ_NS_TYPE_NET = 1,
    KOBJ_NS_TYPES = 2
};
#line 39  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kobject_ns.h"
struct kobj_ns_type_operations {
   enum kobj_ns_type type ;
   bool (*current_may_mount)(void) ;
   void *(*grab_current_ns)(void) ;
   void *(*netlink_ns)(struct sock *) ;
   void *(*initial_ns)(void) ;
   void (*drop_ns)(void *) ;
};
#line 58 
struct bin_attribute;
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysfs.h"
struct attribute {
   char *name ;
   umode_t mode ;
   bool ignore_lockdep : 1 ;
   struct lock_class_key *key ;
   struct lock_class_key skey ;
};
#line 84  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysfs.h"
struct attribute_group {
   char *name ;
   umode_t (*is_visible)(struct kobject *, struct attribute *, int ) ;
   umode_t (*is_bin_visible)(struct kobject *, struct bin_attribute *, int ) ;
   struct attribute **attrs ;
   struct bin_attribute **bin_attrs ;
};
#line 161  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysfs.h"
struct bin_attribute {
   struct attribute attr ;
   size_t size ;
   void *private ;
   ssize_t (*read)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   ssize_t (*write)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   int (*mmap)(struct file *, struct kobject *, struct bin_attribute *, struct vm_area_struct *) ;
};
#line 223  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysfs.h"
struct sysfs_ops {
   ssize_t (*show)(struct kobject *, struct attribute *, char *) ;
   ssize_t (*store)(struct kobject *, struct attribute *, char *, size_t ) ;
};
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kref.h"
struct kref {
   refcount_t refcount ;
};
#line 65  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kobject.h"
struct kset;
#line 65 
struct kobj_type;
#line 65  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kobject.h"
struct kobject {
   char *name ;
   struct list_head entry ;
   struct kobject *parent ;
   struct kset *kset ;
   struct kobj_type *ktype ;
   struct kernfs_node *sd ;
   struct kref kref ;
   struct delayed_work release ;
   unsigned int state_initialized : 1 ;
   unsigned int state_in_sysfs : 1 ;
   unsigned int state_add_uevent_sent : 1 ;
   unsigned int state_remove_uevent_sent : 1 ;
   unsigned int uevent_suppress : 1 ;
};
#line 139  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kobject.h"
struct kobj_type {
   void (*release)(struct kobject *) ;
   struct sysfs_ops *sysfs_ops ;
   struct attribute **default_attrs ;
   struct attribute_group **default_groups ;
   struct kobj_ns_type_operations *(*child_ns_type)(struct kobject *) ;
   void *(*namespace)(struct kobject *) ;
   void (*get_ownership)(struct kobject *, kuid_t *, kgid_t *) ;
};
#line 149  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kobject.h"
struct kobj_uevent_env {
   char *argv[3U] ;
   char *envp[32U] ;
   int envp_idx ;
   char buf[2048U] ;
   int buflen ;
};
#line 157  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kobject.h"
struct kset_uevent_ops {
   int (*filter)(struct kset *, struct kobject *) ;
   char *(*name)(struct kset *, struct kobject *) ;
   int (*uevent)(struct kset *, struct kobject *, struct kobj_uevent_env *) ;
};
#line 193  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kobject.h"
struct kset {
   struct list_head list ;
   spinlock_t list_lock ;
   struct kobject kobj ;
   struct kset_uevent_ops *uevent_ops ;
} __attribute__((__designated_init__));
#line 50  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pm.h"
struct pm_message {
   int event ;
};
#line 53  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pm.h"
typedef struct pm_message pm_message_t;
#line 278  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pm.h"
struct dev_pm_ops {
   int (*prepare)(struct device *) ;
   void (*complete)(struct device *) ;
   int (*suspend)(struct device *) ;
   int (*resume)(struct device *) ;
   int (*freeze)(struct device *) ;
   int (*thaw)(struct device *) ;
   int (*poweroff)(struct device *) ;
   int (*restore)(struct device *) ;
   int (*suspend_late)(struct device *) ;
   int (*resume_early)(struct device *) ;
   int (*freeze_late)(struct device *) ;
   int (*thaw_early)(struct device *) ;
   int (*poweroff_late)(struct device *) ;
   int (*restore_early)(struct device *) ;
   int (*suspend_noirq)(struct device *) ;
   int (*resume_noirq)(struct device *) ;
   int (*freeze_noirq)(struct device *) ;
   int (*thaw_noirq)(struct device *) ;
   int (*poweroff_noirq)(struct device *) ;
   int (*restore_noirq)(struct device *) ;
   int (*runtime_suspend)(struct device *) ;
   int (*runtime_resume)(struct device *) ;
   int (*runtime_idle)(struct device *) ;
};
#line 303 
enum rpm_status {
    RPM_ACTIVE = 0,
    RPM_RESUMING = 1,
    RPM_SUSPENDED = 2,
    RPM_SUSPENDING = 3
};
#line 310 
enum rpm_request {
    RPM_REQ_NONE = 0,
    RPM_REQ_IDLE = 1,
    RPM_REQ_SUSPEND = 2,
    RPM_REQ_AUTOSUSPEND = 3,
    RPM_REQ_RESUME = 4
};
#line 318 
struct wakeup_source;
#line 319 
struct wake_irq;
#line 320 
struct pm_domain_data;
#line 530  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pm.h"
struct pm_subsys_data {
   spinlock_t lock ;
   unsigned int refcount ;
   struct list_head clock_list ;
   struct pm_domain_data *domain_data ;
};
#line 573 
struct dev_pm_qos;
#line 573  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pm.h"
struct dev_pm_info {
   pm_message_t power_state ;
   unsigned int can_wakeup : 1 ;
   unsigned int async_suspend : 1 ;
   bool in_dpm_list : 1 ;
   bool is_prepared : 1 ;
   bool is_suspended : 1 ;
   bool is_noirq_suspended : 1 ;
   bool is_late_suspended : 1 ;
   bool no_pm : 1 ;
   bool early_init : 1 ;
   bool direct_complete : 1 ;
   u32 driver_flags ;
   spinlock_t lock ;
   struct list_head entry ;
   struct completion completion ;
   struct wakeup_source *wakeup ;
   bool wakeup_path : 1 ;
   bool syscore : 1 ;
   bool no_pm_callbacks : 1 ;
   unsigned int must_resume : 1 ;
   unsigned int may_skip_resume : 1 ;
   struct hrtimer suspend_timer ;
   unsigned long timer_expires ;
   struct work_struct work ;
   wait_queue_head_t wait_queue ;
   struct wake_irq *wakeirq ;
   atomic_t usage_count ;
   atomic_t child_count ;
   unsigned int disable_depth : 3 ;
   unsigned int idle_notification : 1 ;
   unsigned int request_pending : 1 ;
   unsigned int deferred_resume : 1 ;
   unsigned int runtime_auto : 1 ;
   bool ignore_children : 1 ;
   unsigned int no_callbacks : 1 ;
   unsigned int irq_safe : 1 ;
   unsigned int use_autosuspend : 1 ;
   unsigned int timer_autosuspends : 1 ;
   unsigned int memalloc_noio : 1 ;
   unsigned int links_count ;
   enum rpm_request request ;
   enum rpm_status runtime_status ;
   int runtime_error ;
   int autosuspend_delay ;
   u64 last_busy ;
   u64 active_time ;
   u64 suspended_time ;
   u64 accounting_timestamp ;
   struct pm_subsys_data *subsys_data ;
   void (*set_latency_tolerance)(struct device *, s32 ) ;
   struct dev_pm_qos *qos ;
};
#line 650  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pm.h"
struct dev_pm_domain {
   struct dev_pm_ops ops ;
   int (*start)(struct device *) ;
   void (*detach)(struct device *, bool ) ;
   int (*activate)(struct device *) ;
   void (*sync)(struct device *) ;
   void (*dismiss)(struct device *) ;
};
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ratelimit.h"
struct ratelimit_state {
   raw_spinlock_t lock ;
   int interval ;
   int burst ;
   int printed ;
   int missed ;
   unsigned long begin ;
   unsigned long flags ;
};
#line 5  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/device.h"
struct dev_archdata {
   void *iommu ;
};
#line 12 
struct dma_map_ops;
#line 23 
struct device_driver;
#line 24 
struct driver_private;
#line 25 
struct class;
#line 26 
struct subsys_private;
#line 27 
struct bus_type;
#line 28 
struct iommu_ops;
#line 29 
struct iommu_group;
#line 30 
struct iommu_fwspec;
#line 31 
struct dev_pin_info;
#line 32 
struct iommu_param;
#line 122  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
struct bus_type {
   char *name ;
   char *dev_name ;
   struct device *dev_root ;
   struct attribute_group **bus_groups ;
   struct attribute_group **dev_groups ;
   struct attribute_group **drv_groups ;
   int (*match)(struct device *, struct device_driver *) ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   int (*probe)(struct device *) ;
   void (*sync_state)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*online)(struct device *) ;
   int (*offline)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   int (*num_vf)(struct device *) ;
   int (*dma_configure)(struct device *) ;
   struct dev_pm_ops *pm ;
   struct iommu_ops *iommu_ops ;
   struct subsys_private *p ;
   struct lock_class_key lock_key ;
   bool need_parent_lock ;
};
#line 164 
struct device_type;
#line 309 
enum probe_type {
    PROBE_DEFAULT_STRATEGY = 0,
    PROBE_PREFER_ASYNCHRONOUS = 1,
    PROBE_FORCE_SYNCHRONOUS = 2
};
#line 383  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
struct device_driver {
   char *name ;
   struct bus_type *bus ;
   struct module *owner ;
   char *mod_name ;
   bool suppress_bind_attrs ;
   enum probe_type probe_type ;
   struct of_device_id *of_match_table ;
   struct acpi_device_id *acpi_match_table ;
   int (*probe)(struct device *) ;
   void (*sync_state)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct attribute_group **groups ;
   struct attribute_group **dev_groups ;
   struct dev_pm_ops *pm ;
   void (*coredump)(struct device *) ;
   struct driver_private *p ;
};
#line 589  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
struct class {
   char *name ;
   struct module *owner ;
   struct attribute_group **class_groups ;
   struct attribute_group **dev_groups ;
   struct kobject *dev_kobj ;
   int (*dev_uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *) ;
   void (*class_release)(struct class *) ;
   void (*dev_release)(struct device *) ;
   int (*shutdown_pre)(struct device *) ;
   struct kobj_ns_type_operations *ns_type ;
   void *(*namespace)(struct device *) ;
   void (*get_ownership)(struct device *, kuid_t *, kgid_t *) ;
   struct dev_pm_ops *pm ;
   struct subsys_private *p ;
};
#line 809  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
struct device_type {
   char *name ;
   struct attribute_group **groups ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *, kuid_t *, kgid_t *) ;
   void (*release)(struct device *) ;
   struct dev_pm_ops *pm ;
};
#line 1008  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
struct device_dma_parameters {
   unsigned int max_segment_size ;
   unsigned long segment_boundary_mask ;
};
#line 1139 
enum dl_dev_state {
    DL_DEV_NO_DRIVER = 0,
    DL_DEV_PROBING = 1,
    DL_DEV_DRIVER_BOUND = 2,
    DL_DEV_UNBINDING = 3
};
#line 1164  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
struct dev_links_info {
   struct list_head suppliers ;
   struct list_head consumers ;
   struct list_head needs_suppliers ;
   struct list_head defer_sync ;
   bool need_for_probe ;
   enum dl_dev_state status ;
};
#line 1259 
struct dma_coherent_mem;
#line 1259 
struct cma;
#line 1259  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
struct device {
   struct kobject kobj ;
   struct device *parent ;
   struct device_private *p ;
   char *init_name ;
   struct device_type *type ;
   struct bus_type *bus ;
   struct device_driver *driver ;
   void *platform_data ;
   void *driver_data ;
   struct mutex lockdep_mutex ;
   struct mutex mutex ;
   struct dev_links_info links ;
   struct dev_pm_info power ;
   struct dev_pm_domain *pm_domain ;
   struct irq_domain *msi_domain ;
   struct dev_pin_info *pins ;
   struct list_head msi_list ;
   struct dma_map_ops *dma_ops ;
   u64 *dma_mask ;
   u64 coherent_dma_mask ;
   u64 bus_dma_limit ;
   unsigned long dma_pfn_offset ;
   struct device_dma_parameters *dma_parms ;
   struct list_head dma_pools ;
   struct dma_coherent_mem *dma_mem ;
   struct cma *cma_area ;
   struct dev_archdata archdata ;
   struct device_node *of_node ;
   struct fwnode_handle *fwnode ;
   int numa_node ;
   dev_t devt ;
   u32 id ;
   spinlock_t devres_lock ;
   struct list_head devres_head ;
   struct class *class ;
   struct attribute_group **groups ;
   void (*release)(struct device *) ;
   struct iommu_group *iommu_group ;
   struct iommu_fwspec *iommu_fwspec ;
   struct iommu_param *iommu_param ;
   bool offline_disabled : 1 ;
   bool offline : 1 ;
   bool of_node_reused : 1 ;
   bool state_synced : 1 ;
};
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pm_wakeup.h"
struct wakeup_source {
   char *name ;
   int id ;
   struct list_head entry ;
   spinlock_t lock ;
   struct wake_irq *wakeirq ;
   struct timer_list timer ;
   unsigned long timer_expires ;
   ktime_t total_time ;
   ktime_t max_time ;
   ktime_t last_time ;
   ktime_t start_prevent_time ;
   ktime_t prevent_sleep_time ;
   unsigned long event_count ;
   unsigned long active_count ;
   unsigned long relax_count ;
   unsigned long expire_count ;
   unsigned long wakeup_count ;
   struct device *dev ;
   bool active : 1 ;
   bool autosleep_enabled : 1 ;
};
#line 71  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dma-debug.h"
enum dma_data_direction {
    DMA_BIDIRECTIONAL = 0,
    DMA_TO_DEVICE = 1,
    DMA_FROM_DEVICE = 2,
    DMA_NONE = 3
};
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/scatterlist.h"
struct scatterlist {
   unsigned long page_link ;
   unsigned int offset ;
   unsigned int length ;
   dma_addr_t dma_address ;
   unsigned int dma_length ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/scatterlist.h"
struct sg_table {
   struct scatterlist *sgl ;
   unsigned int nents ;
   unsigned int orig_nents ;
};
#line 76  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dma-mapping.h"
struct dma_map_ops {
   void *(*alloc)(struct device *, size_t , dma_addr_t *, gfp_t , unsigned long ) ;
   void (*free)(struct device *, size_t , void *, dma_addr_t , unsigned long ) ;
   int (*mmap)(struct device *, struct vm_area_struct *, void *, dma_addr_t , size_t , unsigned long ) ;
   int (*get_sgtable)(struct device *, struct sg_table *, void *, dma_addr_t , size_t , unsigned long ) ;
   dma_addr_t (*map_page)(struct device *, struct page *, unsigned long , size_t , enum dma_data_direction , unsigned long ) ;
   void (*unmap_page)(struct device *, dma_addr_t , size_t , enum dma_data_direction , unsigned long ) ;
   int (*map_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , unsigned long ) ;
   void (*unmap_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , unsigned long ) ;
   dma_addr_t (*map_resource)(struct device *, phys_addr_t , size_t , enum dma_data_direction , unsigned long ) ;
   void (*unmap_resource)(struct device *, dma_addr_t , size_t , enum dma_data_direction , unsigned long ) ;
   void (*sync_single_for_cpu)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_single_for_device)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_sg_for_cpu)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   void (*sync_sg_for_device)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   void (*cache_sync)(struct device *, void *, size_t , enum dma_data_direction ) ;
   int (*dma_supported)(struct device *, u64 ) ;
   u64 (*get_required_mask)(struct device *) ;
   size_t (*max_mapping_size)(struct device *) ;
   unsigned long (*get_merge_boundary)(struct device *) ;
};
#line 803  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dma-mapping.h"
typedef u64 netdev_features_t;
#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/in6.h"
union __anonunion_in6_u_498 {
   __u8 u6_addr8[16U] ;
   __be16 u6_addr16[8U] ;
   __be32 u6_addr32[4U] ;
};
#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/in6.h"
struct in6_addr {
   union __anonunion_in6_u_498 in6_u ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/in6.h"
struct __anonstruct_siphash_key_t_499 {
   u64 key[2U] ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/in6.h"
typedef struct __anonstruct_siphash_key_t_499 siphash_key_t;
#line 163  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if_ether.h"
struct ethhdr {
   unsigned char h_dest[6U] ;
   unsigned char h_source[6U] ;
   __be16 h_proto ;
} __attribute__((__packed__));
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pipe_fs_i.h"
struct pipe_buf_operations;
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pipe_fs_i.h"
struct pipe_buffer {
   struct page *page ;
   unsigned int offset ;
   unsigned int len ;
   struct pipe_buf_operations *ops ;
   unsigned int flags ;
   unsigned long private ;
};
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pipe_fs_i.h"
struct pipe_inode_info {
   struct mutex mutex ;
   wait_queue_head_t wait ;
   unsigned int head ;
   unsigned int tail ;
   unsigned int max_usage ;
   unsigned int ring_size ;
   unsigned int readers ;
   unsigned int writers ;
   unsigned int files ;
   unsigned int r_counter ;
   unsigned int w_counter ;
   struct page *tmp_page ;
   struct fasync_struct *fasync_readers ;
   struct fasync_struct *fasync_writers ;
   struct pipe_buffer *bufs ;
   struct user_struct *user ;
};
#line 77  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pipe_fs_i.h"
struct pipe_buf_operations {
   int (*confirm)(struct pipe_inode_info *, struct pipe_buffer *) ;
   void (*release)(struct pipe_inode_info *, struct pipe_buffer *) ;
   int (*steal)(struct pipe_inode_info *, struct pipe_buffer *) ;
   bool (*get)(struct pipe_inode_info *, struct pipe_buffer *) ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct flowi_tunnel {
   __be64 tun_id ;
};
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct flowi_common {
   int flowic_oif ;
   int flowic_iif ;
   __u32 flowic_mark ;
   __u8 flowic_tos ;
   __u8 flowic_scope ;
   __u8 flowic_proto ;
   __u8 flowic_flags ;
   __u32 flowic_secid ;
   kuid_t flowic_uid ;
   struct flowi_tunnel flowic_tun_key ;
   __u32 flowic_multipath_hash ;
};
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct __anonstruct_ports_510 {
   __be16 dport ;
   __be16 sport ;
};
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct __anonstruct_icmpt_511 {
   __u8 type ;
   __u8 code ;
};
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct __anonstruct_dnports_512 {
   __le16 dport ;
   __le16 sport ;
};
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct __anonstruct_mht_513 {
   __u8 type ;
};
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
union flowi_uli {
   struct __anonstruct_ports_510 ports ;
   struct __anonstruct_icmpt_511 icmpt ;
   struct __anonstruct_dnports_512 dnports ;
   __be32 spi ;
   __be32 gre_key ;
   struct __anonstruct_mht_513 mht ;
};
#line 70  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct flowi4 {
   struct flowi_common __fl_common ;
   __be32 saddr ;
   __be32 daddr ;
   union flowi_uli uli ;
} __attribute__((__aligned__(8)));
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct flowi6 {
   struct flowi_common __fl_common ;
   struct in6_addr daddr ;
   struct in6_addr saddr ;
   __be32 flowlabel ;
   union flowi_uli uli ;
   __u32 mp_hash ;
} __attribute__((__aligned__(8)));
#line 158  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct flowidn {
   struct flowi_common __fl_common ;
   __le16 daddr ;
   __le16 saddr ;
   union flowi_uli uli ;
} __attribute__((__aligned__(8)));
#line 173  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
union __anonunion_u_514 {
   struct flowi_common __fl_common ;
   struct flowi4 ip4 ;
   struct flowi6 ip6 ;
   struct flowidn dn ;
};
#line 173  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct flowi {
   union __anonunion_u_514 u ;
} __attribute__((__aligned__(8)));
#line 8  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netfilter/nf_conntrack_common.h"
struct ip_conntrack_stat {
   unsigned int found ;
   unsigned int invalid ;
   unsigned int ignore ;
   unsigned int insert ;
   unsigned int insert_failed ;
   unsigned int drop ;
   unsigned int early_drop ;
   unsigned int error ;
   unsigned int expect_new ;
   unsigned int expect_create ;
   unsigned int expect_delete ;
   unsigned int search_restart ;
};
#line 41 
struct napi_struct;
#line 42 
struct bpf_prog;
#line 43 
union bpf_attr;
#line 44 
struct skb_ext;
#line 289  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
struct sk_buff_head {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   __u32 qlen ;
   spinlock_t lock ;
};
#line 562  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
typedef unsigned int sk_buff_data_t;
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_521 {
   struct net_device *dev ;
   unsigned long dev_scratch ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
struct __anonstruct_520 {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   union __anonunion_521 __anonCompField___anonstruct_520_86 ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_519 {
   struct __anonstruct_520 __anonCompField___anonunion_519_87 ;
   struct rb_node rbnode ;
   struct list_head list ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_522 {
   struct sock *sk ;
   int ip_defrag_offset ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_523 {
   ktime_t tstamp ;
   u64 skb_mstamp_ns ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
struct __anonstruct_525 {
   unsigned long _skb_refdst ;
   void (*destructor)(struct sk_buff *) ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_524 {
   struct __anonstruct_525 __anonCompField___anonunion_524_91 ;
   struct list_head tcp_tsorted_anchor ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
struct __anonstruct_527 {
   __u16 csum_start ;
   __u16 csum_offset ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_526 {
   __wsum csum ;
   struct __anonstruct_527 __anonCompField___anonunion_526_93 ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_528 {
   unsigned int napi_id ;
   unsigned int sender_cpu ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_529 {
   __u32 mark ;
   __u32 reserved_tailroom ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_530 {
   __be16 inner_protocol ;
   __u8 inner_ipproto ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
struct sk_buff {
   union __anonunion_519 __anonCompField_sk_buff_88 ;
   union __anonunion_522 __anonCompField_sk_buff_89 ;
   union __anonunion_523 __anonCompField_sk_buff_90 ;
   char cb[48U] ;
   union __anonunion_524 __anonCompField_sk_buff_92 ;
   unsigned long _nfct ;
   unsigned int len ;
   unsigned int data_len ;
   __u16 mac_len ;
   __u16 hdr_len ;
   __u16 queue_mapping ;
   __u8 __cloned_offset[0U] ;
   __u8 cloned : 1 ;
   __u8 nohdr : 1 ;
   __u8 fclone : 2 ;
   __u8 peeked : 1 ;
   __u8 head_frag : 1 ;
   __u8 pfmemalloc : 1 ;
   __u8 active_extensions ;
   __u32 headers_start[0U] ;
   __u8 __pkt_type_offset[0U] ;
   __u8 pkt_type : 3 ;
   __u8 ignore_df : 1 ;
   __u8 nf_trace : 1 ;
   __u8 ip_summed : 2 ;
   __u8 ooo_okay : 1 ;
   __u8 l4_hash : 1 ;
   __u8 sw_hash : 1 ;
   __u8 wifi_acked_valid : 1 ;
   __u8 wifi_acked : 1 ;
   __u8 no_fcs : 1 ;
   __u8 encapsulation : 1 ;
   __u8 encap_hdr_csum : 1 ;
   __u8 csum_valid : 1 ;
   __u8 __pkt_vlan_present_offset[0U] ;
   __u8 vlan_present : 1 ;
   __u8 csum_complete_sw : 1 ;
   __u8 csum_level : 2 ;
   __u8 csum_not_inet : 1 ;
   __u8 dst_pending_confirm : 1 ;
   __u8 ndisc_nodetype : 2 ;
   __u8 ipvs_property : 1 ;
   __u8 inner_protocol_type : 1 ;
   __u8 remcsum_offload : 1 ;
   __u8 offload_fwd_mark : 1 ;
   __u8 offload_l3_fwd_mark : 1 ;
   __u8 tc_skip_classify : 1 ;
   __u8 tc_at_ingress : 1 ;
   __u8 tc_redirected : 1 ;
   __u8 tc_from_ingress : 1 ;
   __u8 decrypted : 1 ;
   __u16 tc_index ;
   union __anonunion_526 __anonCompField_sk_buff_94 ;
   __u32 priority ;
   int skb_iif ;
   __u32 hash ;
   __be16 vlan_proto ;
   __u16 vlan_tci ;
   union __anonunion_528 __anonCompField_sk_buff_95 ;
   __u32 secmark ;
   union __anonunion_529 __anonCompField_sk_buff_96 ;
   union __anonunion_530 __anonCompField_sk_buff_97 ;
   __u16 inner_transport_header ;
   __u16 inner_network_header ;
   __u16 inner_mac_header ;
   __be16 protocol ;
   __u16 transport_header ;
   __u16 network_header ;
   __u16 mac_header ;
   __u32 headers_end[0U] ;
   sk_buff_data_t tail ;
   sk_buff_data_t end ;
   unsigned char *head ;
   unsigned char *data ;
   unsigned int truesize ;
   refcount_t users ;
   struct skb_ext *extensions ;
};
#line 920 
struct dst_entry;
#line 973 
struct rtable;
#line 4108  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
struct skb_ext {
   refcount_t refcnt ;
   u8 offset[3U] ;
   u8 chunks ;
   char data[0U] ;
};
#line 177  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_drvinfo {
   __u32 cmd ;
   char driver[32U] ;
   char version[32U] ;
   char fw_version[32U] ;
   char bus_info[32U] ;
   char erom_version[32U] ;
   char reserved2[12U] ;
   __u32 n_priv_flags ;
   __u32 n_stats ;
   __u32 testinfo_len ;
   __u32 eedump_len ;
   __u32 regdump_len ;
};
#line 203  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_wolinfo {
   __u32 cmd ;
   __u32 supported ;
   __u32 wolopts ;
   __u8 sopass[6U] ;
};
#line 244  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_tunable {
   __u32 cmd ;
   __u32 id ;
   __u32 type_id ;
   __u32 len ;
   void *data[0U] ;
};
#line 310  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_regs {
   __u32 cmd ;
   __u32 version ;
   __u32 len ;
   __u8 data[0U] ;
};
#line 335  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_eeprom {
   __u32 cmd ;
   __u32 magic ;
   __u32 offset ;
   __u32 len ;
   __u8 data[0U] ;
};
#line 360  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_eee {
   __u32 cmd ;
   __u32 supported ;
   __u32 advertised ;
   __u32 lp_advertised ;
   __u32 eee_active ;
   __u32 eee_enabled ;
   __u32 tx_lpi_enabled ;
   __u32 tx_lpi_timer ;
   __u32 reserved[2U] ;
};
#line 382  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_modinfo {
   __u32 cmd ;
   __u32 type ;
   __u32 eeprom_len ;
   __u32 reserved[8U] ;
};
#line 462  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_coalesce {
   __u32 cmd ;
   __u32 rx_coalesce_usecs ;
   __u32 rx_max_coalesced_frames ;
   __u32 rx_coalesce_usecs_irq ;
   __u32 rx_max_coalesced_frames_irq ;
   __u32 tx_coalesce_usecs ;
   __u32 tx_max_coalesced_frames ;
   __u32 tx_coalesce_usecs_irq ;
   __u32 tx_max_coalesced_frames_irq ;
   __u32 stats_block_coalesce_usecs ;
   __u32 use_adaptive_rx_coalesce ;
   __u32 use_adaptive_tx_coalesce ;
   __u32 pkt_rate_low ;
   __u32 rx_coalesce_usecs_low ;
   __u32 rx_max_coalesced_frames_low ;
   __u32 tx_coalesce_usecs_low ;
   __u32 tx_max_coalesced_frames_low ;
   __u32 pkt_rate_high ;
   __u32 rx_coalesce_usecs_high ;
   __u32 rx_max_coalesced_frames_high ;
   __u32 tx_coalesce_usecs_high ;
   __u32 tx_max_coalesced_frames_high ;
   __u32 rate_sample_interval ;
};
#line 513  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_ringparam {
   __u32 cmd ;
   __u32 rx_max_pending ;
   __u32 rx_mini_max_pending ;
   __u32 rx_jumbo_max_pending ;
   __u32 tx_max_pending ;
   __u32 rx_pending ;
   __u32 rx_mini_pending ;
   __u32 rx_jumbo_pending ;
   __u32 tx_pending ;
};
#line 541  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_channels {
   __u32 cmd ;
   __u32 max_rx ;
   __u32 max_tx ;
   __u32 max_other ;
   __u32 max_combined ;
   __u32 rx_count ;
   __u32 tx_count ;
   __u32 other_count ;
   __u32 combined_count ;
};
#line 575  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_pauseparam {
   __u32 cmd ;
   __u32 autoneg ;
   __u32 rx_pause ;
   __u32 tx_pause ;
};
#line 683  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_test {
   __u32 cmd ;
   __u32 flags ;
   __u32 reserved ;
   __u32 len ;
   __u64 data[0U] ;
};
#line 702  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_stats {
   __u32 cmd ;
   __u32 n_stats ;
   __u64 data[0U] ;
};
#line 758  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_tcpip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be16 psrc ;
   __be16 pdst ;
   __u8 tos ;
};
#line 775  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_ah_espip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 spi ;
   __u8 tos ;
};
#line 793  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_usrip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 l4_4_bytes ;
   __u8 tos ;
   __u8 ip_ver ;
   __u8 proto ;
};
#line 812  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_tcpip6_spec {
   __be32 ip6src[4U] ;
   __be32 ip6dst[4U] ;
   __be16 psrc ;
   __be16 pdst ;
   __u8 tclass ;
};
#line 829  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_ah_espip6_spec {
   __be32 ip6src[4U] ;
   __be32 ip6dst[4U] ;
   __be32 spi ;
   __u8 tclass ;
};
#line 844  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_usrip6_spec {
   __be32 ip6src[4U] ;
   __be32 ip6dst[4U] ;
   __be32 l4_4_bytes ;
   __u8 tclass ;
   __u8 l4_proto ;
};
#line 852  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
union ethtool_flow_union {
   struct ethtool_tcpip4_spec tcp_ip4_spec ;
   struct ethtool_tcpip4_spec udp_ip4_spec ;
   struct ethtool_tcpip4_spec sctp_ip4_spec ;
   struct ethtool_ah_espip4_spec ah_ip4_spec ;
   struct ethtool_ah_espip4_spec esp_ip4_spec ;
   struct ethtool_usrip4_spec usr_ip4_spec ;
   struct ethtool_tcpip6_spec tcp_ip6_spec ;
   struct ethtool_tcpip6_spec udp_ip6_spec ;
   struct ethtool_tcpip6_spec sctp_ip6_spec ;
   struct ethtool_ah_espip6_spec ah_ip6_spec ;
   struct ethtool_ah_espip6_spec esp_ip6_spec ;
   struct ethtool_usrip6_spec usr_ip6_spec ;
   struct ethhdr ether_spec ;
   __u8 hdata[52U] ;
};
#line 880  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_flow_ext {
   __u8 padding[2U] ;
   unsigned char h_dest[6U] ;
   __be16 vlan_etype ;
   __be16 vlan_tci ;
   __be32 data[2U] ;
};
#line 905  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_rx_flow_spec {
   __u32 flow_type ;
   union ethtool_flow_union h_u ;
   struct ethtool_flow_ext h_ext ;
   union ethtool_flow_union m_u ;
   struct ethtool_flow_ext m_ext ;
   __u64 ring_cookie ;
   __u32 location ;
};
#line 1001  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
union __anonunion_556 {
   __u32 rule_cnt ;
   __u32 rss_context ;
};
#line 1001  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_rxnfc {
   __u32 cmd ;
   __u32 flow_type ;
   __u64 data ;
   struct ethtool_rx_flow_spec fs ;
   union __anonunion_556 __anonCompField_ethtool_rxnfc_99 ;
   __u32 rule_locs[0U] ;
};
#line 1130  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_flash {
   __u32 cmd ;
   __u32 region ;
   char data[128U] ;
};
#line 1150  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_dump {
   __u32 cmd ;
   __u32 version ;
   __u32 flag ;
   __u32 len ;
   __u8 data[0U] ;
};
#line 1230  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_ts_info {
   __u32 cmd ;
   __u32 so_timestamping ;
   __s32 phc_index ;
   __u32 tx_types ;
   __u32 tx_reserved[3U] ;
   __u32 rx_filters ;
   __u32 rx_reserved[3U] ;
};
#line 1302  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_fecparam {
   __u32 cmd ;
   __u32 active_fec ;
   __u32 fec ;
   __u32 reserved ;
};
#line 1876  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_link_settings {
   __u32 cmd ;
   __u32 speed ;
   __u8 duplex ;
   __u8 port ;
   __u8 phy_address ;
   __u8 autoneg ;
   __u8 mdio_support ;
   __u8 eth_tp_mdix ;
   __u8 eth_tp_mdix_ctrl ;
   __s8 link_mode_masks_nwords ;
   __u8 transceiver ;
   __u8 reserved1[3U] ;
   __u32 reserved[7U] ;
   __u32 link_mode_masks[0U] ;
};
#line 40  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ethtool.h"
enum ethtool_phys_id_state {
    ETHTOOL_ID_INACTIVE = 0,
    ETHTOOL_ID_ACTIVE = 1,
    ETHTOOL_ID_ON = 2,
    ETHTOOL_ID_OFF = 3
};
#line 108  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ethtool.h"
struct __anonstruct_link_modes_559 {
   unsigned long supported[2U] ;
   unsigned long advertising[2U] ;
   unsigned long lp_advertising[2U] ;
};
#line 108  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ethtool.h"
struct ethtool_link_ksettings {
   struct ethtool_link_settings base ;
   struct __anonstruct_link_modes_559 link_modes ;
};
#line 325  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ethtool.h"
struct ethtool_ops {
   void (*get_drvinfo)(struct net_device *, struct ethtool_drvinfo *) ;
   int (*get_regs_len)(struct net_device *) ;
   void (*get_regs)(struct net_device *, struct ethtool_regs *, void *) ;
   void (*get_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   int (*set_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   u32 (*get_msglevel)(struct net_device *) ;
   void (*set_msglevel)(struct net_device *, u32 ) ;
   int (*nway_reset)(struct net_device *) ;
   u32 (*get_link)(struct net_device *) ;
   int (*get_eeprom_len)(struct net_device *) ;
   int (*get_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*set_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   int (*set_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   void (*get_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   int (*set_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   void (*get_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   int (*set_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   void (*self_test)(struct net_device *, struct ethtool_test *, u64 *) ;
   void (*get_strings)(struct net_device *, u32 , u8 *) ;
   int (*set_phys_id)(struct net_device *, enum ethtool_phys_id_state ) ;
   void (*get_ethtool_stats)(struct net_device *, struct ethtool_stats *, u64 *) ;
   int (*begin)(struct net_device *) ;
   void (*complete)(struct net_device *) ;
   u32 (*get_priv_flags)(struct net_device *) ;
   int (*set_priv_flags)(struct net_device *, u32 ) ;
   int (*get_sset_count)(struct net_device *, int ) ;
   int (*get_rxnfc)(struct net_device *, struct ethtool_rxnfc *, u32 *) ;
   int (*set_rxnfc)(struct net_device *, struct ethtool_rxnfc *) ;
   int (*flash_device)(struct net_device *, struct ethtool_flash *) ;
   int (*reset)(struct net_device *, u32 *) ;
   u32 (*get_rxfh_key_size)(struct net_device *) ;
   u32 (*get_rxfh_indir_size)(struct net_device *) ;
   int (*get_rxfh)(struct net_device *, u32 *, u8 *, u8 *) ;
   int (*set_rxfh)(struct net_device *, u32 *, u8 *, u8 ) ;
   int (*get_rxfh_context)(struct net_device *, u32 *, u8 *, u8 *, u32 ) ;
   int (*set_rxfh_context)(struct net_device *, u32 *, u8 *, u8 , u32 *, bool ) ;
   void (*get_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*set_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*get_dump_flag)(struct net_device *, struct ethtool_dump *) ;
   int (*get_dump_data)(struct net_device *, struct ethtool_dump *, void *) ;
   int (*set_dump)(struct net_device *, struct ethtool_dump *) ;
   int (*get_ts_info)(struct net_device *, struct ethtool_ts_info *) ;
   int (*get_module_info)(struct net_device *, struct ethtool_modinfo *) ;
   int (*get_module_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*set_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*get_tunable)(struct net_device *, struct ethtool_tunable *, void *) ;
   int (*set_tunable)(struct net_device *, struct ethtool_tunable *, void *) ;
   int (*get_per_queue_coalesce)(struct net_device *, u32 , struct ethtool_coalesce *) ;
   int (*set_per_queue_coalesce)(struct net_device *, u32 , struct ethtool_coalesce *) ;
   int (*get_link_ksettings)(struct net_device *, struct ethtool_link_ksettings *) ;
   int (*set_link_ksettings)(struct net_device *, struct ethtool_link_ksettings *) ;
   int (*get_fecparam)(struct net_device *, struct ethtool_fecparam *) ;
   int (*set_fecparam)(struct net_device *, struct ethtool_fecparam *) ;
   void (*get_ethtool_phy_stats)(struct net_device *, struct ethtool_stats *, u64 *) ;
};
#line 822  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/sysctl.h"
struct ctl_table_root;
#line 823 
struct ctl_table_header;
#line 824 
struct ctl_dir;
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
typedef int proc_handler(struct ctl_table *, int , void *, size_t *, loff_t *);
#line 105  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
struct ctl_table_poll {
   atomic_t event ;
   wait_queue_head_t wait ;
};
#line 123  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
struct ctl_table {
   char *procname ;
   void *data ;
   int maxlen ;
   umode_t mode ;
   struct ctl_table *child ;
   proc_handler *proc_handler ;
   struct ctl_table_poll *poll ;
   void *extra1 ;
   void *extra2 ;
} __attribute__((__designated_init__));
#line 135  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
struct ctl_node {
   struct rb_node node ;
   struct ctl_table_header *header ;
};
#line 142  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
struct __anonstruct_561 {
   struct ctl_table *ctl_table ;
   int used ;
   int count ;
   int nreg ;
};
#line 142  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
union __anonunion_560 {
   struct __anonstruct_561 __anonCompField___anonunion_560_100 ;
   struct callback_head rcu ;
};
#line 142 
struct ctl_table_set;
#line 142  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
struct ctl_table_header {
   union __anonunion_560 __anonCompField_ctl_table_header_101 ;
   struct completion *unregistering ;
   struct ctl_table *ctl_table_arg ;
   struct ctl_table_root *root ;
   struct ctl_table_set *set ;
   struct ctl_dir *parent ;
   struct ctl_node *node ;
   struct hlist_head inodes ;
};
#line 161  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
struct ctl_dir {
   struct ctl_table_header header ;
   struct rb_root root ;
};
#line 167  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
struct ctl_table_set {
   int (*is_seen)(struct ctl_table_set *) ;
   struct ctl_dir dir ;
};
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
struct ctl_table_root {
   struct ctl_table_set default_set ;
   struct ctl_table_set *(*lookup)(struct ctl_table_root *) ;
   void (*set_ownership)(struct ctl_table_header *, struct ctl_table *, kuid_t *, kgid_t *) ;
   int (*permissions)(struct ctl_table_header *, struct ctl_table *) ;
};
#line 242 
struct prot_inuse;
#line 8  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/core.h"
struct netns_core {
   struct ctl_table_header *sysctl_hdr ;
   int sysctl_somaxconn ;
   int *sock_inuse ;
   struct prot_inuse *prot_inuse ;
};
#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct u64_stats_sync {
   };
#line 36  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct __anonstruct_local_t_562 {
   atomic_long_t a ;
};
#line 36  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
typedef struct __anonstruct_local_t_562 local_t;
#line 119  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/local.h"
struct __anonstruct_local64_t_563 {
   local_t a ;
};
#line 119  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/local.h"
typedef struct __anonstruct_local64_t_563 local64_t;
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/local64.h"
struct __anonstruct_u64_stats_t_564 {
   local64_t v ;
};
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/local64.h"
typedef struct __anonstruct_u64_stats_t_564 u64_stats_t;
#line 51  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct ipstats_mib {
   u64 mibs[37U] ;
   struct u64_stats_sync syncp ;
};
#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct icmp_mib {
   unsigned long mibs[28U] ;
};
#line 64  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct icmpmsg_mib {
   atomic_long_t mibs[512U] ;
};
#line 71  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct icmpv6_mib {
   unsigned long mibs[6U] ;
};
#line 75  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct icmpv6_mib_device {
   atomic_long_t mibs[6U] ;
};
#line 81  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct icmpv6msg_mib {
   atomic_long_t mibs[512U] ;
};
#line 85  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct icmpv6msg_mib_device {
   atomic_long_t mibs[512U] ;
};
#line 92  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct tcp_mib {
   unsigned long mibs[16U] ;
};
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct udp_mib {
   unsigned long mibs[9U] ;
};
#line 104  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct linux_mib {
   unsigned long mibs[120U] ;
};
#line 110  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct linux_xfrm_mib {
   unsigned long mibs[29U] ;
};
#line 116  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct linux_tls_mib {
   unsigned long mibs[11U] ;
};
#line 7  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/mib.h"
struct proc_dir_entry;
#line 7  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/mib.h"
struct netns_mib {
   struct tcp_mib *tcp_statistics ;
   struct ipstats_mib *ip_statistics ;
   struct linux_mib *net_statistics ;
   struct udp_mib *udp_statistics ;
   struct udp_mib *udplite_statistics ;
   struct icmp_mib *icmp_statistics ;
   struct icmpmsg_mib *icmpmsg_statistics ;
   struct proc_dir_entry *proc_net_devsnmp6 ;
   struct udp_mib *udp_stats_in6 ;
   struct udp_mib *udplite_stats_in6 ;
   struct ipstats_mib *ipv6_statistics ;
   struct icmpv6_mib *icmpv6_statistics ;
   struct icmpv6msg_mib *icmpv6msg_statistics ;
   struct linux_xfrm_mib *xfrm_statistics ;
   struct linux_tls_mib *tls_statistics ;
};
#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/unix.h"
struct netns_unix {
   int sysctl_max_dgram_qlen ;
   struct ctl_table_header *ctl ;
};
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/packet.h"
struct netns_packet {
   struct mutex sklist_lock ;
   struct hlist_head sklist ;
};
#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/inet_frag.h"
struct inet_frags;
#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/inet_frag.h"
struct fqdir {
   long high_thresh ;
   long low_thresh ;
   int timeout ;
   int max_dist ;
   struct inet_frags *f ;
   struct net *net ;
   bool dead ;
   struct rhashtable rhashtable ;
   atomic_long_t mem ;
   struct work_struct destroy_work ;
};
#line 41  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/inet_frag.h"
struct frag_v4_compare_key {
   __be32 saddr ;
   __be32 daddr ;
   u32 user ;
   u32 vif ;
   __be16 id ;
   u16 protocol ;
};
#line 50  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/inet_frag.h"
struct frag_v6_compare_key {
   struct in6_addr saddr ;
   struct in6_addr daddr ;
   u32 user ;
   __be32 id ;
   u32 iif ;
};
#line 77  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/inet_frag.h"
union __anonunion_key_565 {
   struct frag_v4_compare_key v4 ;
   struct frag_v6_compare_key v6 ;
};
#line 77  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/inet_frag.h"
struct inet_frag_queue {
   struct rhash_head node ;
   union __anonunion_key_565 key ;
   struct timer_list timer ;
   spinlock_t lock ;
   refcount_t refcnt ;
   struct rb_root rb_fragments ;
   struct sk_buff *fragments_tail ;
   struct sk_buff *last_run_head ;
   ktime_t stamp ;
   int len ;
   int meat ;
   __u8 flags ;
   u16 max_size ;
   struct fqdir *fqdir ;
   struct callback_head rcu ;
};
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/inet_frag.h"
struct inet_frags {
   unsigned int qsize ;
   void (*constructor)(struct inet_frag_queue *, void *) ;
   void (*destructor)(struct inet_frag_queue *) ;
   void (*frag_expire)(struct timer_list *) ;
   struct kmem_cache *frags_cachep ;
   char *frags_cache_name ;
   struct rhashtable_params rhash_params ;
   refcount_t refcnt ;
   struct completion completion ;
};
#line 177 
struct ipv4_devconf;
#line 178 
struct fib_rules_ops;
#line 179 
struct fib_table;
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ipv4.h"
struct local_ports {
   seqlock_t lock ;
   int range[2U] ;
   bool warned ;
};
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ipv4.h"
struct ping_group_range {
   seqlock_t lock ;
   kgid_t range[2U] ;
};
#line 31 
struct inet_hashinfo;
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ipv4.h"
struct inet_timewait_death_row {
   atomic_t tw_count ;
   struct inet_hashinfo *hashinfo ;
   int sysctl_max_tw_buckets ;
};
#line 40 
struct tcp_fastopen_context;
#line 43 
struct ip_ra_chain;
#line 43 
struct inet_peer_base;
#line 43 
struct xt_table;
#line 43 
struct tcp_congestion_ops;
#line 43 
struct fib_notifier_ops;
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ipv4.h"
struct netns_ipv4 {
   struct ctl_table_header *forw_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *ipv4_hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *xfrm4_hdr ;
   struct ipv4_devconf *devconf_all ;
   struct ipv4_devconf *devconf_dflt ;
   struct ip_ra_chain *ra_chain ;
   struct mutex ra_mutex ;
   struct fib_rules_ops *rules_ops ;
   bool fib_has_custom_rules ;
   unsigned int fib_rules_require_fldissect ;
   struct fib_table *fib_main ;
   struct fib_table *fib_default ;
   bool fib_has_custom_local_routes ;
   int fib_num_tclassid_users ;
   struct hlist_head *fib_table_hash ;
   bool fib_offload_disabled ;
   struct sock *fibnl ;
   struct sock **icmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct inet_peer_base *peers ;
   struct sock **tcp_sk ;
   struct fqdir *fqdir ;
   struct xt_table *iptable_filter ;
   struct xt_table *iptable_mangle ;
   struct xt_table *iptable_raw ;
   struct xt_table *arptable_filter ;
   struct xt_table *iptable_security ;
   struct xt_table *nat_table ;
   int sysctl_icmp_echo_ignore_all ;
   int sysctl_icmp_echo_ignore_broadcasts ;
   int sysctl_icmp_ignore_bogus_error_responses ;
   int sysctl_icmp_ratelimit ;
   int sysctl_icmp_ratemask ;
   int sysctl_icmp_errors_use_inbound_ifaddr ;
   struct local_ports ip_local_ports ;
   int sysctl_tcp_ecn ;
   int sysctl_tcp_ecn_fallback ;
   int sysctl_ip_default_ttl ;
   int sysctl_ip_no_pmtu_disc ;
   int sysctl_ip_fwd_use_pmtu ;
   int sysctl_ip_fwd_update_priority ;
   int sysctl_ip_nonlocal_bind ;
   int sysctl_ip_dynaddr ;
   int sysctl_ip_early_demux ;
   int sysctl_raw_l3mdev_accept ;
   int sysctl_tcp_early_demux ;
   int sysctl_udp_early_demux ;
   int sysctl_fwmark_reflect ;
   int sysctl_tcp_fwmark_accept ;
   int sysctl_tcp_l3mdev_accept ;
   int sysctl_tcp_mtu_probing ;
   int sysctl_tcp_mtu_probe_floor ;
   int sysctl_tcp_base_mss ;
   int sysctl_tcp_min_snd_mss ;
   int sysctl_tcp_probe_threshold ;
   u32 sysctl_tcp_probe_interval ;
   int sysctl_tcp_keepalive_time ;
   int sysctl_tcp_keepalive_probes ;
   int sysctl_tcp_keepalive_intvl ;
   int sysctl_tcp_syn_retries ;
   int sysctl_tcp_synack_retries ;
   int sysctl_tcp_syncookies ;
   int sysctl_tcp_reordering ;
   int sysctl_tcp_retries1 ;
   int sysctl_tcp_retries2 ;
   int sysctl_tcp_orphan_retries ;
   int sysctl_tcp_fin_timeout ;
   unsigned int sysctl_tcp_notsent_lowat ;
   int sysctl_tcp_tw_reuse ;
   int sysctl_tcp_sack ;
   int sysctl_tcp_window_scaling ;
   int sysctl_tcp_timestamps ;
   int sysctl_tcp_early_retrans ;
   int sysctl_tcp_recovery ;
   int sysctl_tcp_thin_linear_timeouts ;
   int sysctl_tcp_slow_start_after_idle ;
   int sysctl_tcp_retrans_collapse ;
   int sysctl_tcp_stdurg ;
   int sysctl_tcp_rfc1337 ;
   int sysctl_tcp_abort_on_overflow ;
   int sysctl_tcp_fack ;
   int sysctl_tcp_max_reordering ;
   int sysctl_tcp_dsack ;
   int sysctl_tcp_app_win ;
   int sysctl_tcp_adv_win_scale ;
   int sysctl_tcp_frto ;
   int sysctl_tcp_nometrics_save ;
   int sysctl_tcp_moderate_rcvbuf ;
   int sysctl_tcp_tso_win_divisor ;
   int sysctl_tcp_workaround_signed_windows ;
   int sysctl_tcp_limit_output_bytes ;
   int sysctl_tcp_challenge_ack_limit ;
   int sysctl_tcp_min_tso_segs ;
   int sysctl_tcp_min_rtt_wlen ;
   int sysctl_tcp_autocorking ;
   int sysctl_tcp_invalid_ratelimit ;
   int sysctl_tcp_pacing_ss_ratio ;
   int sysctl_tcp_pacing_ca_ratio ;
   int sysctl_tcp_wmem[3U] ;
   int sysctl_tcp_rmem[3U] ;
   int sysctl_tcp_comp_sack_nr ;
   unsigned long sysctl_tcp_comp_sack_delay_ns ;
   struct inet_timewait_death_row tcp_death_row ;
   int sysctl_max_syn_backlog ;
   int sysctl_tcp_fastopen ;
   struct tcp_congestion_ops *tcp_congestion_control ;
   struct tcp_fastopen_context *tcp_fastopen_ctx ;
   spinlock_t tcp_fastopen_ctx_lock ;
   unsigned int sysctl_tcp_fastopen_blackhole_timeout ;
   atomic_t tfo_active_disable_times ;
   unsigned long tfo_active_disable_stamp ;
   int sysctl_udp_wmem_min ;
   int sysctl_udp_rmem_min ;
   int sysctl_udp_l3mdev_accept ;
   int sysctl_igmp_max_memberships ;
   int sysctl_igmp_max_msf ;
   int sysctl_igmp_llm_reports ;
   int sysctl_igmp_qrv ;
   struct ping_group_range ping_group_range ;
   atomic_t dev_addr_genid ;
   unsigned long *sysctl_local_reserved_ports ;
   int sysctl_ip_prot_sock ;
   struct list_head mr_tables ;
   struct fib_rules_ops *mr_rules_ops ;
   int sysctl_fib_multipath_use_neigh ;
   int sysctl_fib_multipath_hash_policy ;
   struct fib_notifier_ops *notifier_ops ;
   unsigned int fib_seq ;
   struct fib_notifier_ops *ipmr_notifier_ops ;
   unsigned int ipmr_seq ;
   atomic_t rt_genid ;
   siphash_key_t ip_id_key ;
};
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/dst_ops.h"
struct neighbour;
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/dst_ops.h"
struct dst_ops {
   unsigned short family ;
   unsigned int gc_thresh ;
   int (*gc)(struct dst_ops *) ;
   struct dst_entry *(*check)(struct dst_entry *, __u32 ) ;
   unsigned int (*default_advmss)(struct dst_entry *) ;
   unsigned int (*mtu)(struct dst_entry *) ;
   u32 *(*cow_metrics)(struct dst_entry *, unsigned long ) ;
   void (*destroy)(struct dst_entry *) ;
   void (*ifdown)(struct dst_entry *, struct net_device *, int ) ;
   struct dst_entry *(*negative_advice)(struct dst_entry *) ;
   void (*link_failure)(struct sk_buff *) ;
   void (*update_pmtu)(struct dst_entry *, struct sock *, struct sk_buff *, u32 , bool ) ;
   void (*redirect)(struct dst_entry *, struct sock *, struct sk_buff *) ;
   int (*local_out)(struct net *, struct sock *, struct sk_buff *) ;
   struct neighbour *(*neigh_lookup)(struct dst_entry *, struct sk_buff *, void *) ;
   void (*confirm_neigh)(struct dst_entry *, void *) ;
   struct kmem_cache *kmem_cachep ;
   struct percpu_counter pcpuc_entries ;
};
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ipv6.h"
struct netns_sysctl_ipv6 {
   struct ctl_table_header *hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *icmp_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *xfrm6_hdr ;
   int bindv6only ;
   int flush_delay ;
   int ip6_rt_max_size ;
   int ip6_rt_gc_min_interval ;
   int ip6_rt_gc_timeout ;
   int ip6_rt_gc_interval ;
   int ip6_rt_gc_elasticity ;
   int ip6_rt_mtu_expires ;
   int ip6_rt_min_advmss ;
   int multipath_hash_policy ;
   int flowlabel_consistency ;
   int auto_flowlabels ;
   int icmpv6_time ;
   int icmpv6_echo_ignore_all ;
   int icmpv6_echo_ignore_multicast ;
   int icmpv6_echo_ignore_anycast ;
   unsigned long icmpv6_ratemask[4U] ;
   unsigned long *icmpv6_ratemask_ptr ;
   int anycast_src_echo_reply ;
   int ip_nonlocal_bind ;
   int fwmark_reflect ;
   int idgen_retries ;
   int idgen_delay ;
   int flowlabel_state_ranges ;
   int flowlabel_reflect ;
   int max_dst_opts_cnt ;
   int max_hbh_opts_cnt ;
   int max_dst_opts_len ;
   int max_hbh_opts_len ;
   int seg6_flowlabel ;
   bool skip_notify_on_dev_down ;
};
#line 56 
struct ipv6_devconf;
#line 56 
struct fib6_info;
#line 56 
struct rt6_info;
#line 56 
struct rt6_statistics;
#line 56 
struct fib6_table;
#line 56 
struct seg6_pernet_data;
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ipv6.h"
struct __anonstruct_ip6addrlbl_table_567 {
   struct hlist_head head ;
   spinlock_t lock ;
   u32 seq ;
};
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ipv6.h"
struct netns_ipv6 {
   struct netns_sysctl_ipv6 sysctl ;
   struct ipv6_devconf *devconf_all ;
   struct ipv6_devconf *devconf_dflt ;
   struct inet_peer_base *peers ;
   struct fqdir *fqdir ;
   struct xt_table *ip6table_filter ;
   struct xt_table *ip6table_mangle ;
   struct xt_table *ip6table_raw ;
   struct xt_table *ip6table_security ;
   struct xt_table *ip6table_nat ;
   struct fib6_info *fib6_null_entry ;
   struct rt6_info *ip6_null_entry ;
   struct rt6_statistics *rt6_stats ;
   struct timer_list ip6_fib_timer ;
   struct hlist_head *fib_table_hash ;
   struct fib6_table *fib6_main_tbl ;
   struct list_head fib6_walkers ;
   struct dst_ops ip6_dst_ops ;
   rwlock_t fib6_walker_lock ;
   spinlock_t fib6_gc_lock ;
   unsigned int ip6_rt_gc_expire ;
   unsigned long ip6_rt_last_gc ;
   unsigned int fib6_rules_require_fldissect ;
   bool fib6_has_custom_rules ;
   unsigned int fib6_routes_require_src ;
   struct rt6_info *ip6_prohibit_entry ;
   struct rt6_info *ip6_blk_hole_entry ;
   struct fib6_table *fib6_local_tbl ;
   struct fib_rules_ops *fib6_rules_ops ;
   struct sock **icmp_sk ;
   struct sock *ndisc_sk ;
   struct sock *tcp_sk ;
   struct sock *igmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct list_head mr6_tables ;
   struct fib_rules_ops *mr6_rules_ops ;
   atomic_t dev_addr_genid ;
   atomic_t fib6_sernum ;
   struct seg6_pernet_data *seg6_data ;
   struct fib_notifier_ops *notifier_ops ;
   struct fib_notifier_ops *ip6mr_notifier_ops ;
   unsigned int ipmr_seq ;
   struct __anonstruct_ip6addrlbl_table_567 ip6addrlbl_table ;
};
#line 121  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ipv6.h"
struct netns_nf_frag {
   struct fqdir *fqdir ;
};
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/nexthop.h"
struct netns_nexthop {
   struct rb_root rb_root ;
   struct hlist_head *devhash ;
   unsigned int seq ;
   u32 last_id_allocated ;
};
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ieee802154_6lowpan.h"
struct netns_sysctl_lowpan {
   struct ctl_table_header *frags_hdr ;
};
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ieee802154_6lowpan.h"
struct netns_ieee802154_lowpan {
   struct netns_sysctl_lowpan sysctl ;
   struct fqdir *fqdir ;
};
#line 21 
struct sctp_mib;
#line 10  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/sctp.h"
struct netns_sctp {
   struct sctp_mib *sctp_statistics ;
   struct proc_dir_entry *proc_net_sctp ;
   struct ctl_table_header *sysctl_header ;
   struct sock *ctl_sock ;
   struct list_head local_addr_list ;
   struct list_head addr_waitq ;
   struct timer_list addr_wq_timer ;
   struct list_head auto_asconf_splist ;
   spinlock_t addr_wq_lock ;
   spinlock_t local_addr_lock ;
   unsigned int rto_initial ;
   unsigned int rto_min ;
   unsigned int rto_max ;
   int rto_alpha ;
   int rto_beta ;
   int max_burst ;
   int cookie_preserve_enable ;
   char *sctp_hmac_alg ;
   unsigned int valid_cookie_life ;
   unsigned int sack_timeout ;
   unsigned int hb_interval ;
   int max_retrans_association ;
   int max_retrans_path ;
   int max_retrans_init ;
   int pf_retrans ;
   int ps_retrans ;
   int pf_enable ;
   int pf_expose ;
   int sndbuf_policy ;
   int rcvbuf_policy ;
   int default_auto_asconf ;
   int addip_enable ;
   int addip_noauth ;
   int prsctp_enable ;
   int reconf_enable ;
   int auth_enable ;
   int intl_enable ;
   int ecn_enable ;
   int scope_policy ;
   int rwnd_upd_shift ;
   unsigned long max_autoclose ;
};
#line 7  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/dccp.h"
struct netns_dccp {
   struct sock *v4_ctl_sk ;
   struct sock *v6_ctl_sk ;
};
#line 75  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/netfilter.h"
struct nf_logger;
#line 76 
struct nf_queue_handler;
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/netfilter.h"
struct nf_hook_entries;
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/netfilter.h"
struct netns_nf {
   struct proc_dir_entry *proc_netfilter ;
   struct nf_queue_handler *queue_handler ;
   struct nf_logger *nf_loggers[13U] ;
   struct ctl_table_header *nf_log_dir_header ;
   struct nf_hook_entries *hooks_ipv4[5U] ;
   struct nf_hook_entries *hooks_ipv6[5U] ;
   struct nf_hook_entries *hooks_arp[3U] ;
   struct nf_hook_entries *hooks_bridge[5U] ;
   struct nf_hook_entries *hooks_decnet[7U] ;
   bool defrag_ipv4 ;
   bool defrag_ipv6 ;
};
#line 37 
struct ebt_table;
#line 10  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/x_tables.h"
struct netns_xt {
   struct list_head tables[13U] ;
   bool notrack_deprecated_warning ;
   bool clusterip_deprecated_warning ;
   struct ebt_table *broute_table ;
   struct ebt_table *frame_filter ;
   struct ebt_table *frame_nat ;
};
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_nulls.h"
struct hlist_nulls_node;
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_nulls.h"
struct hlist_nulls_head {
   struct hlist_nulls_node *first ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_nulls.h"
struct hlist_nulls_node {
   struct hlist_nulls_node *next ;
   struct hlist_nulls_node **pprev ;
};
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct nf_generic_net {
   unsigned int timeout ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct nf_tcp_net {
   unsigned int timeouts[14U] ;
   int tcp_loose ;
   int tcp_be_liberal ;
   int tcp_max_retrans ;
};
#line 38  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct nf_udp_net {
   unsigned int timeouts[2U] ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct nf_icmp_net {
   unsigned int timeout ;
};
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct nf_dccp_net {
   int dccp_loose ;
   unsigned int dccp_timeout[10U] ;
};
#line 54  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct nf_sctp_net {
   unsigned int timeouts[10U] ;
};
#line 66  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct nf_gre_net {
   struct list_head keymap_list ;
   unsigned int timeouts[2U] ;
};
#line 72  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct nf_ip_net {
   struct nf_generic_net generic ;
   struct nf_tcp_net tcp ;
   struct nf_udp_net udp ;
   struct nf_icmp_net icmp ;
   struct nf_icmp_net icmpv6 ;
   struct nf_dccp_net dccp ;
   struct nf_sctp_net sctp ;
   struct nf_gre_net gre ;
};
#line 89  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct ct_pcpu {
   spinlock_t lock ;
   struct hlist_nulls_head unconfirmed ;
   struct hlist_nulls_head dying ;
};
#line 95 
struct nf_ct_event_notifier;
#line 95 
struct nf_exp_event_notifier;
#line 95  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct netns_ct {
   atomic_t count ;
   unsigned int expect_count ;
   struct delayed_work ecache_dwork ;
   bool ecache_dwork_pending ;
   bool auto_assign_helper_warned ;
   struct ctl_table_header *sysctl_header ;
   unsigned int sysctl_log_invalid ;
   int sysctl_events ;
   int sysctl_acct ;
   int sysctl_auto_assign_helper ;
   int sysctl_tstamp ;
   int sysctl_checksum ;
   struct ct_pcpu *pcpu_lists ;
   struct ip_conntrack_stat *stat ;
   struct nf_ct_event_notifier *nf_conntrack_event_cb ;
   struct nf_exp_event_notifier *nf_expect_event_cb ;
   struct nf_ip_net nf_ct_proto ;
   unsigned int labels_used ;
};
#line 7  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/nftables.h"
struct netns_nftables {
   struct list_head tables ;
   struct list_head commit_list ;
   struct list_head module_list ;
   struct mutex commit_mutex ;
   unsigned int base_seq ;
   u8 gencursor ;
   u8 validate_state ;
};
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/xfrm.h"
struct xfrm_policy_hash {
   struct hlist_head *table ;
   unsigned int hmask ;
   u8 dbits4 ;
   u8 sbits4 ;
   u8 dbits6 ;
   u8 sbits6 ;
};
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/xfrm.h"
struct xfrm_policy_hthresh {
   struct work_struct work ;
   seqlock_t lock ;
   u8 lbits4 ;
   u8 rbits4 ;
   u8 lbits6 ;
   u8 rbits6 ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/xfrm.h"
struct netns_xfrm {
   struct list_head state_all ;
   struct hlist_head *state_bydst ;
   struct hlist_head *state_bysrc ;
   struct hlist_head *state_byspi ;
   unsigned int state_hmask ;
   unsigned int state_num ;
   struct work_struct state_hash_work ;
   struct list_head policy_all ;
   struct hlist_head *policy_byidx ;
   unsigned int policy_idx_hmask ;
   struct hlist_head policy_inexact[3U] ;
   struct xfrm_policy_hash policy_bydst[3U] ;
   unsigned int policy_count[6U] ;
   struct work_struct policy_hash_work ;
   struct xfrm_policy_hthresh policy_hthresh ;
   struct list_head inexact_bins ;
   struct sock *nlsk ;
   struct sock *nlsk_stash ;
   u32 sysctl_aevent_etime ;
   u32 sysctl_aevent_rseqth ;
   int sysctl_larval_drop ;
   u32 sysctl_acq_expires ;
   struct ctl_table_header *sysctl_hdr ;
   struct dst_ops xfrm4_dst_ops ;
   struct dst_ops xfrm6_dst_ops ;
   spinlock_t xfrm_state_lock ;
   spinlock_t xfrm_policy_lock ;
   struct mutex xfrm_cfg_mutex ;
};
#line 79 
struct mpls_route;
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/mpls.h"
struct netns_mpls {
   int ip_ttl_propagate ;
   int default_ttl ;
   size_t platform_labels ;
   struct mpls_route **platform_label ;
   struct ctl_table_header *ctl ;
};
#line 20 
struct can_dev_rcv_lists;
#line 21 
struct can_pkg_stats;
#line 22 
struct can_rcv_lists_stats;
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/can.h"
struct netns_can {
   struct proc_dir_entry *proc_dir ;
   struct proc_dir_entry *pde_version ;
   struct proc_dir_entry *pde_stats ;
   struct proc_dir_entry *pde_reset_stats ;
   struct proc_dir_entry *pde_rcvlist_all ;
   struct proc_dir_entry *pde_rcvlist_fil ;
   struct proc_dir_entry *pde_rcvlist_inv ;
   struct proc_dir_entry *pde_rcvlist_sff ;
   struct proc_dir_entry *pde_rcvlist_eff ;
   struct proc_dir_entry *pde_rcvlist_err ;
   struct proc_dir_entry *bcmproc_dir ;
   struct can_dev_rcv_lists *rx_alldev_list ;
   spinlock_t rcvlists_lock ;
   struct timer_list stattimer ;
   struct can_pkg_stats *pkg_stats ;
   struct can_rcv_lists_stats *rcv_lists_stats ;
   struct hlist_head cgw_list ;
};
#line 8  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/xdp.h"
struct netns_xdp {
   struct mutex lock ;
   struct hlist_head list ;
};
#line 12 
struct proc_ns_operations;
#line 7  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ns_common.h"
struct ns_common {
   atomic_long_t stashed ;
   struct proc_ns_operations *ops ;
   unsigned int inum ;
};
#line 12 
struct net_generic;
#line 13 
struct uevent_sock;
#line 14 
struct netns_ipvs;
#line 55  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/net_namespace.h"
struct key_tag;
#line 55 
struct ucounts;
#line 55  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/net_namespace.h"
struct net {
   refcount_t passive ;
   refcount_t count ;
   spinlock_t rules_mod_lock ;
   unsigned int dev_unreg_count ;
   unsigned int dev_base_seq ;
   int ifindex ;
   spinlock_t nsid_lock ;
   atomic_t fnhe_genid ;
   struct list_head list ;
   struct list_head exit_list ;
   struct llist_node cleanup_list ;
   struct key_tag *key_domain ;
   struct user_namespace *user_ns ;
   struct ucounts *ucounts ;
   struct idr netns_ids ;
   struct ns_common ns ;
   struct list_head dev_base_head ;
   struct proc_dir_entry *proc_net ;
   struct proc_dir_entry *proc_net_stat ;
   struct ctl_table_set sysctls ;
   struct sock *rtnl ;
   struct sock *genl_sock ;
   struct uevent_sock *uevent_sock ;
   struct hlist_head *dev_name_head ;
   struct hlist_head *dev_index_head ;
   struct raw_notifier_head netdev_chain ;
   u32 hash_mix ;
   struct net_device *loopback_dev ;
   struct list_head rules_ops ;
   struct netns_core core ;
   struct netns_mib mib ;
   struct netns_packet packet ;
   struct netns_unix unx ;
   struct netns_nexthop nexthop ;
   struct netns_ipv4 ipv4 ;
   struct netns_ipv6 ipv6 ;
   struct netns_ieee802154_lowpan ieee802154_lowpan ;
   struct netns_sctp sctp ;
   struct netns_dccp dccp ;
   struct netns_nf nf ;
   struct netns_xt xt ;
   struct netns_ct ct ;
   struct netns_nftables nft ;
   struct netns_nf_frag nf_frag ;
   struct ctl_table_header *nf_frag_frags_hdr ;
   struct sock *nfnl ;
   struct sock *nfnl_stash ;
   struct list_head nfnl_acct_list ;
   struct list_head nfct_timeout_list ;
   struct sk_buff_head wext_nlevents ;
   struct net_generic *gen ;
   struct bpf_prog *flow_dissector_prog ;
   struct netns_xfrm xfrm ;
   struct netns_ipvs *ipvs ;
   struct netns_mpls mpls ;
   struct netns_can can ;
   struct netns_xdp xdp ;
   struct sock *crypto_nlsk ;
   struct sock *diag_nlsk ;
} __attribute__((__designated_init__));
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/assoc_array.h"
struct assoc_array_ptr;
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/assoc_array.h"
struct assoc_array {
   struct assoc_array_ptr *root ;
   unsigned long nr_leaves_on_tree ;
};
#line 83  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/assoc_array.h"
typedef int32_t key_serial_t;
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
typedef uint32_t key_perm_t;
#line 32 
struct key_type;
#line 85  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
struct key_tag {
   struct callback_head rcu ;
   refcount_t usage ;
   bool removed ;
};
#line 91  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
struct __anonstruct_580 {
   u16 desc_len ;
   char desc[6U] ;
};
#line 91  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
union __anonunion_579 {
   struct __anonstruct_580 __anonCompField___anonunion_579_102 ;
   unsigned long x ;
};
#line 91  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
struct keyring_index_key {
   unsigned long hash ;
   union __anonunion_579 __anonCompField_keyring_index_key_103 ;
   struct key_type *type ;
   struct key_tag *domain_tag ;
   char *description ;
};
#line 111  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
union key_payload {
   void *rcu_data0 ;
   void *data[4U] ;
};
#line 153  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
struct key_restriction {
   int (*check)(struct key *, struct key_type *, union key_payload *, struct key *) ;
   struct key *key ;
   struct key_type *keytype ;
};
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
union __anonunion_581 {
   struct list_head graveyard_link ;
   struct rb_node serial_node ;
};
#line 172 
struct key_user;
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
union __anonunion_582 {
   time64_t expiry ;
   time64_t revoked_at ;
};
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
struct __anonstruct_584 {
   unsigned long hash ;
   unsigned long len_desc ;
   struct key_type *type ;
   struct key_tag *domain_tag ;
   char *description ;
};
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
union __anonunion_583 {
   struct keyring_index_key index_key ;
   struct __anonstruct_584 __anonCompField___anonunion_583_106 ;
};
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
struct __anonstruct_586 {
   struct list_head name_link ;
   struct assoc_array keys ;
};
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
union __anonunion_585 {
   union key_payload payload ;
   struct __anonstruct_586 __anonCompField___anonunion_585_108 ;
};
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
struct key {
   refcount_t usage ;
   key_serial_t serial ;
   union __anonunion_581 __anonCompField_key_104 ;
   struct rw_semaphore sem ;
   struct key_user *user ;
   void *security ;
   union __anonunion_582 __anonCompField_key_105 ;
   time64_t last_used_at ;
   kuid_t uid ;
   kgid_t gid ;
   key_perm_t perm ;
   unsigned short quotalen ;
   unsigned short datalen ;
   short state ;
   unsigned long flags ;
   union __anonunion_583 __anonCompField_key_107 ;
   union __anonunion_585 __anonCompField_key_109 ;
   struct key_restriction *restrict_link ;
};
#line 13  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched/user.h"
struct user_struct {
   refcount_t __count ;
   atomic_t processes ;
   atomic_t sigpending ;
   atomic_t fanotify_listeners ;
   atomic_long_t epoll_watches ;
   unsigned long mq_bytes ;
   unsigned long locked_shm ;
   unsigned long unix_inflight ;
   atomic_long_t pipe_bufs ;
   struct hlist_node uidhash_node ;
   kuid_t uid ;
   atomic_long_t locked_vm ;
   struct ratelimit_state ratelimit ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cred.h"
struct group_info {
   atomic_t usage ;
   int ngroups ;
   kgid_t gid[0U] ;
} __attribute__((__designated_init__));
#line 111  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cred.h"
union __anonunion_589 {
   int non_rcu ;
   struct callback_head rcu ;
};
#line 111  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cred.h"
struct cred {
   atomic_t usage ;
   atomic_t subscribers ;
   void *put_addr ;
   unsigned int magic ;
   kuid_t uid ;
   kgid_t gid ;
   kuid_t suid ;
   kgid_t sgid ;
   kuid_t euid ;
   kgid_t egid ;
   kuid_t fsuid ;
   kgid_t fsgid ;
   unsigned int securebits ;
   kernel_cap_t cap_inheritable ;
   kernel_cap_t cap_permitted ;
   kernel_cap_t cap_effective ;
   kernel_cap_t cap_bset ;
   kernel_cap_t cap_ambient ;
   unsigned char jit_keyring ;
   struct key *session_keyring ;
   struct key *process_keyring ;
   struct key *thread_keyring ;
   struct key *request_key_auth ;
   void *security ;
   struct user_struct *user ;
   struct user_namespace *user_ns ;
   struct group_info *group_info ;
   union __anonunion_589 __anonCompField_cred_110 ;
} __attribute__((__designated_init__));
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/seq_file.h"
struct seq_file {
   char *buf ;
   size_t size ;
   size_t from ;
   size_t count ;
   size_t pad_until ;
   loff_t index ;
   loff_t read_pos ;
   u64 version ;
   struct mutex lock ;
   struct seq_operations *op ;
   int poll_event ;
   struct file *file ;
   void *private ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/seq_file.h"
struct seq_operations {
   void *(*start)(struct seq_file *, loff_t *) ;
   void (*stop)(struct seq_file *, void *) ;
   void *(*next)(struct seq_file *, void *, loff_t *) ;
   int (*show)(struct seq_file *, void *) ;
};
#line 275  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/net_namespace.h"
struct __anonstruct_possible_net_t_590 {
   struct net *net ;
};
#line 275  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/net_namespace.h"
typedef struct __anonstruct_possible_net_t_590 possible_net_t;
#line 58  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct ieee_ets {
   __u8 willing ;
   __u8 ets_cap ;
   __u8 cbs ;
   __u8 tc_tx_bw[8U] ;
   __u8 tc_rx_bw[8U] ;
   __u8 tc_tsa[8U] ;
   __u8 prio_tc[8U] ;
   __u8 tc_reco_bw[8U] ;
   __u8 tc_reco_tsa[8U] ;
   __u8 reco_prio_tc[8U] ;
};
#line 78  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct ieee_maxrate {
   __u64 tc_maxrate[8U] ;
};
#line 119  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct ieee_qcn {
   __u8 rpg_enable[8U] ;
   __u32 rppp_max_rps[8U] ;
   __u32 rpg_time_reset[8U] ;
   __u32 rpg_byte_reset[8U] ;
   __u32 rpg_threshold[8U] ;
   __u32 rpg_max_rate[8U] ;
   __u32 rpg_ai_rate[8U] ;
   __u32 rpg_hai_rate[8U] ;
   __u32 rpg_gd[8U] ;
   __u32 rpg_min_dec_fac[8U] ;
   __u32 rpg_min_rate[8U] ;
   __u32 cndd_state_machine[8U] ;
};
#line 141  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct ieee_qcn_stats {
   __u64 rppp_rp_centiseconds[8U] ;
   __u32 rppp_created_rps[8U] ;
};
#line 157  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct ieee_pfc {
   __u8 pfc_cap ;
   __u8 pfc_en ;
   __u8 mbc ;
   __u16 delay ;
   __u64 requests[8U] ;
   __u64 indications[8U] ;
};
#line 168  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct dcbnl_buffer {
   __u8 prio2buffer[8U] ;
   __u32 buffer_size[8U] ;
   __u32 total_size ;
};
#line 190  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct cee_pg {
   __u8 willing ;
   __u8 error ;
   __u8 pg_en ;
   __u8 tcs_supported ;
   __u8 pg_bw[8U] ;
   __u8 prio_pg[8U] ;
};
#line 207  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct cee_pfc {
   __u8 willing ;
   __u8 error ;
   __u8 pfc_en ;
   __u8 tcs_supported ;
};
#line 244  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct dcb_app {
   __u8 selector ;
   __u8 priority ;
   __u16 protocol ;
};
#line 259  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct dcb_peer_app_info {
   __u8 willing ;
   __u8 error ;
};
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/dcbnl.h"
struct dcbnl_rtnl_ops {
   int (*ieee_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_setets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_getmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_setmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_getqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_setqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_getqcnstats)(struct net_device *, struct ieee_qcn_stats *) ;
   int (*ieee_getpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_setpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_getapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_setapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_delapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_peer_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_peer_getpfc)(struct net_device *, struct ieee_pfc *) ;
   u8 (*getstate)(struct net_device *) ;
   u8 (*setstate)(struct net_device *, u8 ) ;
   void (*getpermhwaddr)(struct net_device *, u8 *) ;
   void (*setpgtccfgtx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgtx)(struct net_device *, int , u8 ) ;
   void (*setpgtccfgrx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgrx)(struct net_device *, int , u8 ) ;
   void (*getpgtccfgtx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgtx)(struct net_device *, int , u8 *) ;
   void (*getpgtccfgrx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgrx)(struct net_device *, int , u8 *) ;
   void (*setpfccfg)(struct net_device *, int , u8 ) ;
   void (*getpfccfg)(struct net_device *, int , u8 *) ;
   u8 (*setall)(struct net_device *) ;
   u8 (*getcap)(struct net_device *, int , u8 *) ;
   int (*getnumtcs)(struct net_device *, int , u8 *) ;
   int (*setnumtcs)(struct net_device *, int , u8 ) ;
   u8 (*getpfcstate)(struct net_device *) ;
   void (*setpfcstate)(struct net_device *, u8 ) ;
   void (*getbcncfg)(struct net_device *, int , u32 *) ;
   void (*setbcncfg)(struct net_device *, int , u32 ) ;
   void (*getbcnrp)(struct net_device *, int , u8 *) ;
   void (*setbcnrp)(struct net_device *, int , u8 ) ;
   int (*setapp)(struct net_device *, u8 , u16 , u8 ) ;
   int (*getapp)(struct net_device *, u8 , u16 ) ;
   u8 (*getfeatcfg)(struct net_device *, int , u8 *) ;
   u8 (*setfeatcfg)(struct net_device *, int , u8 ) ;
   u8 (*getdcbx)(struct net_device *) ;
   u8 (*setdcbx)(struct net_device *, u8 ) ;
   int (*peer_getappinfo)(struct net_device *, struct dcb_peer_app_info *, u16 *) ;
   int (*peer_getapptable)(struct net_device *, struct dcb_app *) ;
   int (*cee_peer_getpg)(struct net_device *, struct cee_pg *) ;
   int (*cee_peer_getpfc)(struct net_device *, struct cee_pfc *) ;
   int (*dcbnl_getbuffer)(struct net_device *, struct dcbnl_buffer *) ;
   int (*dcbnl_setbuffer)(struct net_device *, struct dcbnl_buffer *) ;
};
#line 41  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/taskstats.h"
struct taskstats {
   __u16 version ;
   __u32 ac_exitcode ;
   __u8 ac_flag ;
   __u8 ac_nice ;
   __u64 cpu_count ;
   __u64 cpu_delay_total ;
   __u64 blkio_count ;
   __u64 blkio_delay_total ;
   __u64 swapin_count ;
   __u64 swapin_delay_total ;
   __u64 cpu_run_real_total ;
   __u64 cpu_run_virtual_total ;
   char ac_comm[32U] ;
   __u8 ac_sched ;
   __u8 ac_pad[3U] ;
   __u32 ac_uid ;
   __u32 ac_gid ;
   __u32 ac_pid ;
   __u32 ac_ppid ;
   __u32 ac_btime ;
   __u64 ac_etime ;
   __u64 ac_utime ;
   __u64 ac_stime ;
   __u64 ac_minflt ;
   __u64 ac_majflt ;
   __u64 coremem ;
   __u64 virtmem ;
   __u64 hiwater_rss ;
   __u64 hiwater_vm ;
   __u64 read_char ;
   __u64 write_char ;
   __u64 read_syscalls ;
   __u64 write_syscalls ;
   __u64 read_bytes ;
   __u64 write_bytes ;
   __u64 cancelled_write_bytes ;
   __u64 nvcsw ;
   __u64 nivcsw ;
   __u64 ac_utimescaled ;
   __u64 ac_stimescaled ;
   __u64 cpu_scaled_run_real_total ;
   __u64 freepages_count ;
   __u64 freepages_delay_total ;
   __u64 thrashing_count ;
   __u64 thrashing_delay_total ;
};
#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/cgroupstats.h"
struct mnt_namespace;
#line 60 
struct uts_namespace;
#line 61 
struct ipc_namespace;
#line 62 
struct cgroup_namespace;
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/nsproxy.h"
struct nsproxy {
   atomic_t count ;
   struct uts_namespace *uts_ns ;
   struct ipc_namespace *ipc_ns ;
   struct mnt_namespace *mnt_ns ;
   struct pid_namespace *pid_ns_for_children ;
   struct net *net_ns ;
   struct cgroup_namespace *cgroup_ns ;
};
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/user_namespace.h"
struct uid_gid_extent {
   u32 first ;
   u32 lower_first ;
   u32 count ;
};
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/user_namespace.h"
struct __anonstruct_592 {
   struct uid_gid_extent *forward ;
   struct uid_gid_extent *reverse ;
};
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/user_namespace.h"
union __anonunion_591 {
   struct uid_gid_extent extent[5U] ;
   struct __anonstruct_592 __anonCompField___anonunion_591_111 ;
};
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/user_namespace.h"
struct uid_gid_map {
   u32 nr_extents ;
   union __anonunion_591 __anonCompField_uid_gid_map_112 ;
};
#line 55  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/user_namespace.h"
struct user_namespace {
   struct uid_gid_map uid_map ;
   struct uid_gid_map gid_map ;
   struct uid_gid_map projid_map ;
   atomic_t count ;
   struct user_namespace *parent ;
   int level ;
   kuid_t owner ;
   kgid_t group ;
   struct ns_common ns ;
   unsigned long flags ;
   struct list_head keyring_name_list ;
   struct key *user_keyring_register ;
   struct rw_semaphore keyring_sem ;
   struct key *persistent_keyring_register ;
   struct work_struct work ;
   struct ctl_table_set set ;
   struct ctl_table_header *sysctls ;
   struct ucounts *ucounts ;
   int ucount_max[9U] ;
} __attribute__((__designated_init__));
#line 91  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/user_namespace.h"
struct ucounts {
   struct hlist_node node ;
   struct user_namespace *ns ;
   kuid_t uid ;
   int count ;
   atomic_t ucount[9U] ;
};
#line 65  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct bpf_insn {
   __u8 code ;
   __u8 dst_reg : 4 ;
   __u8 src_reg : 4 ;
   __s16 off ;
   __s32 imm ;
};
#line 79  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct bpf_cgroup_storage_key {
   __u64 cgroup_inode_id ;
   __u32 attach_type ;
};
#line 110 
enum bpf_map_type {
    BPF_MAP_TYPE_UNSPEC = 0,
    BPF_MAP_TYPE_HASH = 1,
    BPF_MAP_TYPE_ARRAY = 2,
    BPF_MAP_TYPE_PROG_ARRAY = 3,
    BPF_MAP_TYPE_PERF_EVENT_ARRAY = 4,
    BPF_MAP_TYPE_PERCPU_HASH = 5,
    BPF_MAP_TYPE_PERCPU_ARRAY = 6,
    BPF_MAP_TYPE_STACK_TRACE = 7,
    BPF_MAP_TYPE_CGROUP_ARRAY = 8,
    BPF_MAP_TYPE_LRU_HASH = 9,
    BPF_MAP_TYPE_LRU_PERCPU_HASH = 10,
    BPF_MAP_TYPE_LPM_TRIE = 11,
    BPF_MAP_TYPE_ARRAY_OF_MAPS = 12,
    BPF_MAP_TYPE_HASH_OF_MAPS = 13,
    BPF_MAP_TYPE_DEVMAP = 14,
    BPF_MAP_TYPE_SOCKMAP = 15,
    BPF_MAP_TYPE_CPUMAP = 16,
    BPF_MAP_TYPE_XSKMAP = 17,
    BPF_MAP_TYPE_SOCKHASH = 18,
    BPF_MAP_TYPE_CGROUP_STORAGE = 19,
    BPF_MAP_TYPE_REUSEPORT_SOCKARRAY = 20,
    BPF_MAP_TYPE_PERCPU_CGROUP_STORAGE = 21,
    BPF_MAP_TYPE_QUEUE = 22,
    BPF_MAP_TYPE_STACK = 23,
    BPF_MAP_TYPE_SK_STORAGE = 24,
    BPF_MAP_TYPE_DEVMAP_HASH = 25
};
#line 139 
enum bpf_prog_type {
    BPF_PROG_TYPE_UNSPEC = 0,
    BPF_PROG_TYPE_SOCKET_FILTER = 1,
    BPF_PROG_TYPE_KPROBE = 2,
    BPF_PROG_TYPE_SCHED_CLS = 3,
    BPF_PROG_TYPE_SCHED_ACT = 4,
    BPF_PROG_TYPE_TRACEPOINT = 5,
    BPF_PROG_TYPE_XDP = 6,
    BPF_PROG_TYPE_PERF_EVENT = 7,
    BPF_PROG_TYPE_CGROUP_SKB = 8,
    BPF_PROG_TYPE_CGROUP_SOCK = 9,
    BPF_PROG_TYPE_LWT_IN = 10,
    BPF_PROG_TYPE_LWT_OUT = 11,
    BPF_PROG_TYPE_LWT_XMIT = 12,
    BPF_PROG_TYPE_SOCK_OPS = 13,
    BPF_PROG_TYPE_SK_SKB = 14,
    BPF_PROG_TYPE_CGROUP_DEVICE = 15,
    BPF_PROG_TYPE_SK_MSG = 16,
    BPF_PROG_TYPE_RAW_TRACEPOINT = 17,
    BPF_PROG_TYPE_CGROUP_SOCK_ADDR = 18,
    BPF_PROG_TYPE_LWT_SEG6LOCAL = 19,
    BPF_PROG_TYPE_LIRC_MODE2 = 20,
    BPF_PROG_TYPE_SK_REUSEPORT = 21,
    BPF_PROG_TYPE_FLOW_DISSECTOR = 22,
    BPF_PROG_TYPE_CGROUP_SYSCTL = 23,
    BPF_PROG_TYPE_RAW_TRACEPOINT_WRITABLE = 24,
    BPF_PROG_TYPE_CGROUP_SOCKOPT = 25,
    BPF_PROG_TYPE_TRACING = 26
};
#line 169 
enum bpf_attach_type {
    BPF_CGROUP_INET_INGRESS = 0,
    BPF_CGROUP_INET_EGRESS = 1,
    BPF_CGROUP_INET_SOCK_CREATE = 2,
    BPF_CGROUP_SOCK_OPS = 3,
    BPF_SK_SKB_STREAM_PARSER = 4,
    BPF_SK_SKB_STREAM_VERDICT = 5,
    BPF_CGROUP_DEVICE = 6,
    BPF_SK_MSG_VERDICT = 7,
    BPF_CGROUP_INET4_BIND = 8,
    BPF_CGROUP_INET6_BIND = 9,
    BPF_CGROUP_INET4_CONNECT = 10,
    BPF_CGROUP_INET6_CONNECT = 11,
    BPF_CGROUP_INET4_POST_BIND = 12,
    BPF_CGROUP_INET6_POST_BIND = 13,
    BPF_CGROUP_UDP4_SENDMSG = 14,
    BPF_CGROUP_UDP6_SENDMSG = 15,
    BPF_LIRC_MODE2 = 16,
    BPF_FLOW_DISSECTOR = 17,
    BPF_CGROUP_SYSCTL = 18,
    BPF_CGROUP_UDP4_RECVMSG = 19,
    BPF_CGROUP_UDP6_RECVMSG = 20,
    BPF_CGROUP_GETSOCKOPT = 21,
    BPF_CGROUP_SETSOCKOPT = 22,
    BPF_TRACE_RAW_TP = 23,
    BPF_TRACE_FENTRY = 24,
    BPF_TRACE_FEXIT = 25,
    __MAX_BPF_ATTACH_TYPE = 26
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_594 {
   __u32 map_type ;
   __u32 key_size ;
   __u32 value_size ;
   __u32 max_entries ;
   __u32 map_flags ;
   __u32 inner_map_fd ;
   __u32 numa_node ;
   char map_name[16U] ;
   __u32 map_ifindex ;
   __u32 btf_fd ;
   __u32 btf_key_type_id ;
   __u32 btf_value_type_id ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
union __anonunion_596 {
   __u64 value ;
   __u64 next_key ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_595 {
   __u32 map_fd ;
   __u64 key ;
   union __anonunion_596 __anonCompField___anonstruct_595_115 ;
   __u64 flags ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_597 {
   __u32 prog_type ;
   __u32 insn_cnt ;
   __u64 insns ;
   __u64 license ;
   __u32 log_level ;
   __u32 log_size ;
   __u64 log_buf ;
   __u32 kern_version ;
   __u32 prog_flags ;
   char prog_name[16U] ;
   __u32 prog_ifindex ;
   __u32 expected_attach_type ;
   __u32 prog_btf_fd ;
   __u32 func_info_rec_size ;
   __u64 func_info ;
   __u32 func_info_cnt ;
   __u32 line_info_rec_size ;
   __u64 line_info ;
   __u32 line_info_cnt ;
   __u32 attach_btf_id ;
   __u32 attach_prog_fd ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_598 {
   __u64 pathname ;
   __u32 bpf_fd ;
   __u32 file_flags ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_599 {
   __u32 target_fd ;
   __u32 attach_bpf_fd ;
   __u32 attach_type ;
   __u32 attach_flags ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_test_600 {
   __u32 prog_fd ;
   __u32 retval ;
   __u32 data_size_in ;
   __u32 data_size_out ;
   __u64 data_in ;
   __u64 data_out ;
   __u32 repeat ;
   __u32 duration ;
   __u32 ctx_size_in ;
   __u32 ctx_size_out ;
   __u64 ctx_in ;
   __u64 ctx_out ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
union __anonunion_602 {
   __u32 start_id ;
   __u32 prog_id ;
   __u32 map_id ;
   __u32 btf_id ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_601 {
   union __anonunion_602 __anonCompField___anonstruct_601_120 ;
   __u32 next_id ;
   __u32 open_flags ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_info_603 {
   __u32 bpf_fd ;
   __u32 info_len ;
   __u64 info ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_query_604 {
   __u32 target_fd ;
   __u32 attach_type ;
   __u32 query_flags ;
   __u32 attach_flags ;
   __u64 prog_ids ;
   __u32 prog_cnt ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_raw_tracepoint_605 {
   __u64 name ;
   __u32 prog_fd ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_606 {
   __u64 btf ;
   __u64 btf_log_buf ;
   __u32 btf_size ;
   __u32 btf_log_size ;
   __u32 btf_log_level ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_task_fd_query_607 {
   __u32 pid ;
   __u32 fd ;
   __u32 flags ;
   __u32 buf_len ;
   __u64 buf ;
   __u32 prog_id ;
   __u32 fd_type ;
   __u64 probe_offset ;
   __u64 probe_addr ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
union bpf_attr {
   struct __anonstruct_594 __anonCompField_bpf_attr_114 ;
   struct __anonstruct_595 __anonCompField_bpf_attr_116 ;
   struct __anonstruct_597 __anonCompField_bpf_attr_117 ;
   struct __anonstruct_598 __anonCompField_bpf_attr_118 ;
   struct __anonstruct_599 __anonCompField_bpf_attr_119 ;
   struct __anonstruct_test_600 test ;
   struct __anonstruct_601 __anonCompField_bpf_attr_121 ;
   struct __anonstruct_info_603 info ;
   struct __anonstruct_query_604 query ;
   struct __anonstruct_raw_tracepoint_605 raw_tracepoint ;
   struct __anonstruct_606 __anonCompField_bpf_attr_122 ;
   struct __anonstruct_task_fd_query_607 task_fd_query ;
} __attribute__((__aligned__(8)));
#line 3653  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct bpf_func_info {
   __u32 insn_off ;
   __u32 type_id ;
};
#line 3661  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct bpf_line_info {
   __u32 insn_off ;
   __u32 file_name_off ;
   __u32 line_off ;
   __u32 line_col ;
};
#line 40  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rbtree_latch.h"
struct latch_tree_node {
   struct rb_node node[2U] ;
};
#line 215 
struct bpf_prog_aux;
#line 216 
struct bpf_map;
#line 217 
struct btf;
#line 218 
struct btf_type;
#line 37  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_map_ops {
   int (*map_alloc_check)(union bpf_attr *) ;
   struct bpf_map *(*map_alloc)(union bpf_attr *) ;
   void (*map_release)(struct bpf_map *, struct file *) ;
   void (*map_free)(struct bpf_map *) ;
   int (*map_get_next_key)(struct bpf_map *, void *, void *) ;
   void (*map_release_uref)(struct bpf_map *) ;
   void *(*map_lookup_elem_sys_only)(struct bpf_map *, void *) ;
   void *(*map_lookup_elem)(struct bpf_map *, void *) ;
   int (*map_update_elem)(struct bpf_map *, void *, void *, u64 ) ;
   int (*map_delete_elem)(struct bpf_map *, void *) ;
   int (*map_push_elem)(struct bpf_map *, void *, u64 ) ;
   int (*map_pop_elem)(struct bpf_map *, void *) ;
   int (*map_peek_elem)(struct bpf_map *, void *) ;
   void *(*map_fd_get_ptr)(struct bpf_map *, struct file *, int ) ;
   void (*map_fd_put_ptr)(void *) ;
   u32 (*map_gen_lookup)(struct bpf_map *, struct bpf_insn *) ;
   u32 (*map_fd_sys_lookup_elem)(void *) ;
   void (*map_seq_show_elem)(struct bpf_map *, void *, struct seq_file *) ;
   int (*map_check_btf)(struct bpf_map *, struct btf *, struct btf_type *, struct btf_type *) ;
   int (*map_poke_track)(struct bpf_map *, struct bpf_prog_aux *) ;
   void (*map_poke_untrack)(struct bpf_map *, struct bpf_prog_aux *) ;
   void (*map_poke_run)(struct bpf_map *, u32 , struct bpf_prog *, struct bpf_prog *) ;
   int (*map_direct_value_addr)(struct bpf_map *, u64 *, u32 ) ;
   int (*map_direct_value_meta)(struct bpf_map *, u64 , u32 *) ;
   int (*map_mmap)(struct bpf_map *, struct vm_area_struct *) ;
};
#line 82  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_map_memory {
   u32 pages ;
   struct user_struct *user ;
};
#line 87  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_map {
   struct bpf_map_ops *ops ;
   struct bpf_map *inner_map_meta ;
   void *security ;
   enum bpf_map_type map_type ;
   u32 key_size ;
   u32 value_size ;
   u32 max_entries ;
   u32 map_flags ;
   int spin_lock_off ;
   u32 id ;
   int numa_node ;
   u32 btf_key_type_id ;
   u32 btf_value_type_id ;
   struct btf *btf ;
   struct bpf_map_memory memory ;
   char name[16U] ;
   bool unpriv_array ;
   bool frozen ;
   atomic64_t refcnt ;
   atomic64_t usercnt ;
   struct work_struct work ;
   struct mutex freeze_mutex ;
   u64 writecnt ;
};
#line 151 
struct bpf_offload_dev;
#line 152 
struct bpf_offloaded_map;
#line 156  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_map_dev_ops {
   int (*map_get_next_key)(struct bpf_offloaded_map *, void *, void *) ;
   int (*map_lookup_elem)(struct bpf_offloaded_map *, void *, void *) ;
   int (*map_update_elem)(struct bpf_offloaded_map *, void *, void *, u64 ) ;
   int (*map_delete_elem)(struct bpf_offloaded_map *, void *) ;
};
#line 166  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_offloaded_map {
   struct bpf_map map ;
   struct net_device *netdev ;
   struct bpf_map_dev_ops *dev_ops ;
   void *dev_priv ;
   struct list_head offloads ;
};
#line 327  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_prog_ops {
   int (*test_run)(struct bpf_prog *, union bpf_attr *, union bpf_attr *) ;
};
#line 369  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_prog_offload {
   struct bpf_prog *prog ;
   struct net_device *netdev ;
   struct bpf_offload_dev *offdev ;
   void *dev_priv ;
   struct list_head offloads ;
   bool dev_state ;
   bool opt_failed ;
   void *jited_image ;
   u32 jited_len ;
};
#line 394  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_prog_stats {
   u64 cnt ;
   u64 nsecs ;
   struct u64_stats_sync syncp ;
} __attribute__((__aligned__(16)));
#line 400  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct btf_func_model {
   u8 ret_size ;
   u8 nr_args ;
   u8 arg_size[12U] ;
};
#line 447 
enum bpf_tramp_prog_type {
    BPF_TRAMP_FENTRY = 0,
    BPF_TRAMP_FEXIT = 1,
    BPF_TRAMP_MAX = 2
};
#line 454  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct __anonstruct_func_640 {
   struct btf_func_model model ;
   void *addr ;
   bool ftrace_managed ;
};
#line 454  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_trampoline {
   struct hlist_node hlist ;
   struct mutex mutex ;
   refcount_t refcnt ;
   u64 key ;
   struct __anonstruct_func_640 func ;
   struct hlist_head progs_hlist[2U] ;
   int progs_cnt[2U] ;
   void *image ;
   u64 selector ;
};
#line 495  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_func_info_aux {
   bool unreliable ;
};
#line 504  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct __anonstruct_tail_call_642 {
   struct bpf_map *map ;
   u32 key ;
};
#line 504  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
union __anonunion_641 {
   struct __anonstruct_tail_call_642 tail_call ;
};
#line 504  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_jit_poke_descriptor {
   void *ip ;
   union __anonunion_641 __anonCompField_bpf_jit_poke_descriptor_147 ;
   bool ip_stable ;
   u8 adj_off ;
   u16 reason ;
};
#line 517  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
union __anonunion_643 {
   struct work_struct work ;
   struct callback_head rcu ;
};
#line 517  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_prog_aux {
   atomic64_t refcnt ;
   u32 used_map_cnt ;
   u32 max_ctx_offset ;
   u32 max_pkt_offset ;
   u32 max_tp_access ;
   u32 stack_depth ;
   u32 id ;
   u32 func_cnt ;
   u32 func_idx ;
   u32 attach_btf_id ;
   struct bpf_prog *linked_prog ;
   bool verifier_zext ;
   bool offload_requested ;
   bool attach_btf_trace ;
   bool func_proto_unreliable ;
   enum bpf_tramp_prog_type trampoline_prog_type ;
   struct bpf_trampoline *trampoline ;
   struct hlist_node tramp_hlist ;
   struct btf_type *attach_func_proto ;
   char *attach_func_name ;
   struct bpf_prog **func ;
   void *jit_data ;
   struct bpf_jit_poke_descriptor *poke_tab ;
   u32 size_poke_tab ;
   struct latch_tree_node ksym_tnode ;
   struct list_head ksym_lnode ;
   struct bpf_prog_ops *ops ;
   struct bpf_map **used_maps ;
   struct bpf_prog *prog ;
   struct user_struct *user ;
   u64 load_time ;
   struct bpf_map *cgroup_storage[2U] ;
   char name[16U] ;
   void *security ;
   struct bpf_prog_offload *offload ;
   struct btf *btf ;
   struct bpf_func_info *func_info ;
   struct bpf_func_info_aux *func_info_aux ;
   struct bpf_line_info *linfo ;
   void **jited_linfo ;
   u32 func_info_cnt ;
   u32 nr_linfo ;
   u32 linfo_idx ;
   u32 num_exentries ;
   struct exception_table_entry *extable ;
   struct bpf_prog_stats *stats ;
   union __anonunion_643 __anonCompField_bpf_prog_aux_148 ;
};
#line 686 
struct bpf_cgroup_storage;
#line 686  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_prog_array_item {
   struct bpf_prog *prog ;
   struct bpf_cgroup_storage *cgroup_storage[2U] ;
};
#line 691  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_prog_array {
   struct callback_head rcu ;
   struct bpf_prog_array_item items[0U] ;
};
#line 1335 
struct cgroup;
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf-cgroup.h"
struct bpf_cgroup_storage_map;
#line 37  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf-cgroup.h"
struct bpf_storage_buffer {
   struct callback_head rcu ;
   char data[0U] ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf-cgroup.h"
union __anonunion_645 {
   struct bpf_storage_buffer *buf ;
   void *percpu_buf ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf-cgroup.h"
struct bpf_cgroup_storage {
   union __anonunion_645 __anonCompField_bpf_cgroup_storage_150 ;
   struct bpf_cgroup_storage_map *map ;
   struct bpf_cgroup_storage_key key ;
   struct list_head list ;
   struct rb_node node ;
   struct callback_head rcu ;
};
#line 62  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf-cgroup.h"
struct cgroup_bpf {
   struct bpf_prog_array *effective[26U] ;
   struct list_head progs[26U] ;
   u32 flags[26U] ;
   struct bpf_prog_array *inactive ;
   struct percpu_ref refcnt ;
   struct work_struct release_work ;
};
#line 69  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kthread.h"
struct kthread_work;
#line 86  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kthread.h"
struct kthread_worker {
   unsigned int flags ;
   raw_spinlock_t lock ;
   struct list_head work_list ;
   struct list_head delayed_work_list ;
   struct task_struct *task ;
   struct kthread_work *current_work ;
};
#line 95  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kthread.h"
struct kthread_work {
   struct list_head node ;
   void (*func)(struct kthread_work *) ;
   struct kthread_worker *worker ;
   int canceling ;
};
#line 103  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kthread.h"
struct kthread_delayed_work {
   struct kthread_work work ;
   struct timer_list timer ;
};
#line 199 
struct cgroup_subsys_state;
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/psi_types.h"
struct psi_group_cpu {
   seqcount_t seq ;
   unsigned int tasks[3U] ;
   u32 state_mask ;
   u32 times[6U] ;
   u64 state_start ;
   u32 times_prev[2U][6U] ;
};
#line 96 
struct psi_group;
#line 128  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/psi_types.h"
struct psi_group {
   struct mutex avgs_lock ;
   struct psi_group_cpu *pcpu ;
   u64 avg_total[5U] ;
   u64 avg_last_update ;
   u64 avg_next_update ;
   struct delayed_work avgs_work ;
   u64 total[2U][5U] ;
   unsigned long avg[5U][3U] ;
   atomic_t poll_scheduled ;
   struct kthread_worker *poll_kworker ;
   struct kthread_delayed_work poll_work ;
   struct mutex trigger_lock ;
   struct list_head triggers ;
   u32 nr_triggers[5U] ;
   u32 poll_states ;
   u64 poll_min_period ;
   u64 polling_total[5U] ;
   u64 polling_next_update ;
   u64 polling_until ;
};
#line 166 
struct cgroup_root;
#line 167 
struct cgroup_subsys;
#line 168 
struct cgroup_taskset;
#line 119  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cgroup_file {
   struct kernfs_node *kn ;
   unsigned long notified_at ;
   struct timer_list notify_timer ;
};
#line 133  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cgroup_subsys_state {
   struct cgroup *cgroup ;
   struct cgroup_subsys *ss ;
   struct percpu_ref refcnt ;
   struct list_head sibling ;
   struct list_head children ;
   struct list_head rstat_css_node ;
   int id ;
   unsigned int flags ;
   u64 serial_nr ;
   atomic_t online_cnt ;
   struct work_struct destroy_work ;
   struct rcu_work destroy_rwork ;
   struct cgroup_subsys_state *parent ;
};
#line 190  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct css_set {
   struct cgroup_subsys_state *subsys[14U] ;
   refcount_t refcount ;
   struct css_set *dom_cset ;
   struct cgroup *dfl_cgrp ;
   int nr_tasks ;
   struct list_head tasks ;
   struct list_head mg_tasks ;
   struct list_head dying_tasks ;
   struct list_head task_iters ;
   struct list_head e_cset_node[14U] ;
   struct list_head threaded_csets ;
   struct list_head threaded_csets_node ;
   struct hlist_node hlist ;
   struct list_head cgrp_links ;
   struct list_head mg_preload_node ;
   struct list_head mg_node ;
   struct cgroup *mg_src_cgrp ;
   struct cgroup *mg_dst_cgrp ;
   struct css_set *mg_dst_cset ;
   bool dead ;
   struct callback_head callback_head ;
};
#line 279  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cgroup_base_stat {
   struct task_cputime cputime ;
};
#line 303  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cgroup_rstat_cpu {
   struct u64_stats_sync bsync ;
   struct cgroup_base_stat bstat ;
   struct cgroup_base_stat last_bstat ;
   struct cgroup *updated_children ;
   struct cgroup *updated_next ;
};
#line 332  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cgroup_freezer_state {
   bool freeze ;
   int e_freeze ;
   int nr_frozen_descendants ;
   int nr_frozen_tasks ;
};
#line 351  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cgroup {
   struct cgroup_subsys_state self ;
   unsigned long flags ;
   int level ;
   int max_depth ;
   int nr_descendants ;
   int nr_dying_descendants ;
   int max_descendants ;
   int nr_populated_csets ;
   int nr_populated_domain_children ;
   int nr_populated_threaded_children ;
   int nr_threaded_children ;
   struct kernfs_node *kn ;
   struct cgroup_file procs_file ;
   struct cgroup_file events_file ;
   u16 subtree_control ;
   u16 subtree_ss_mask ;
   u16 old_subtree_control ;
   u16 old_subtree_ss_mask ;
   struct cgroup_subsys_state *subsys[14U] ;
   struct cgroup_root *root ;
   struct list_head cset_links ;
   struct list_head e_csets[14U] ;
   struct cgroup *dom_cgrp ;
   struct cgroup *old_dom_cgrp ;
   struct cgroup_rstat_cpu *rstat_cpu ;
   struct list_head rstat_css_list ;
   struct cgroup_base_stat last_bstat ;
   struct cgroup_base_stat bstat ;
   struct prev_cputime prev_cputime ;
   struct list_head pidlists ;
   struct mutex pidlist_mutex ;
   wait_queue_head_t offline_waitq ;
   struct work_struct release_agent_work ;
   struct psi_group psi ;
   struct cgroup_bpf bpf ;
   atomic_t congestion_count ;
   struct cgroup_freezer_state freezer ;
   u64 ancestor_ids[] ;
};
#line 489  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cgroup_root {
   struct kernfs_root *kf_root ;
   unsigned int subsys_mask ;
   int hierarchy_id ;
   struct cgroup cgrp ;
   u64 cgrp_ancestor_id_storage ;
   atomic_t nr_cgrps ;
   struct list_head root_list ;
   unsigned int flags ;
   char release_agent_path[4096U] ;
   char name[64U] ;
};
#line 527  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cftype {
   char name[64U] ;
   unsigned long private ;
   size_t max_write_len ;
   unsigned int flags ;
   unsigned int file_offset ;
   struct cgroup_subsys *ss ;
   struct list_head node ;
   struct kernfs_ops *kf_ops ;
   int (*open)(struct kernfs_open_file *) ;
   void (*release)(struct kernfs_open_file *) ;
   u64 (*read_u64)(struct cgroup_subsys_state *, struct cftype *) ;
   s64 (*read_s64)(struct cgroup_subsys_state *, struct cftype *) ;
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   int (*write_u64)(struct cgroup_subsys_state *, struct cftype *, u64 ) ;
   int (*write_s64)(struct cgroup_subsys_state *, struct cftype *, s64 ) ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   __poll_t (*poll)(struct kernfs_open_file *, struct poll_table_struct *) ;
   struct lock_class_key lockdep_key ;
};
#line 616  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cgroup_subsys {
   struct cgroup_subsys_state *(*css_alloc)(struct cgroup_subsys_state *) ;
   int (*css_online)(struct cgroup_subsys_state *) ;
   void (*css_offline)(struct cgroup_subsys_state *) ;
   void (*css_released)(struct cgroup_subsys_state *) ;
   void (*css_free)(struct cgroup_subsys_state *) ;
   void (*css_reset)(struct cgroup_subsys_state *) ;
   void (*css_rstat_flush)(struct cgroup_subsys_state *, int ) ;
   int (*css_extra_stat_show)(struct seq_file *, struct cgroup_subsys_state *) ;
   int (*can_attach)(struct cgroup_taskset *) ;
   void (*cancel_attach)(struct cgroup_taskset *) ;
   void (*attach)(struct cgroup_taskset *) ;
   void (*post_attach)(void) ;
   int (*can_fork)(struct task_struct *) ;
   void (*cancel_fork)(struct task_struct *) ;
   void (*fork)(struct task_struct *) ;
   void (*exit)(struct task_struct *) ;
   void (*release)(struct task_struct *) ;
   void (*bind)(struct cgroup_subsys_state *) ;
   bool early_init : 1 ;
   bool implicit_on_dfl : 1 ;
   bool threaded : 1 ;
   bool broken_hierarchy : 1 ;
   bool warned_broken_hierarchy : 1 ;
   int id ;
   char *name ;
   char *legacy_name ;
   struct cgroup_root *root ;
   struct idr css_idr ;
   struct list_head cfts ;
   struct cftype *dfl_cftypes ;
   struct cftype *legacy_cftypes ;
   unsigned int depends_on ;
};
#line 783  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct __anonstruct_647 {
   u8 is_data ;
   u8 padding ;
   u16 prioidx ;
   u32 classid ;
} __attribute__((__packed__));
#line 783  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
union __anonunion_646 {
   struct __anonstruct_647 __anonCompField___anonunion_646_151 ;
   u64 val ;
};
#line 783  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct sock_cgroup_data {
   union __anonunion_646 __anonCompField_sock_cgroup_data_152 ;
};
#line 848  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup.h"
struct cgroup_namespace {
   refcount_t count ;
   struct ns_common ns ;
   struct user_namespace *user_ns ;
   struct ucounts *ucounts ;
   struct css_set *root_cset ;
};
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netprio_cgroup.h"
struct netprio_map {
   struct callback_head rcu ;
   u32 priomap_len ;
   u32 priomap[] ;
};
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/xdp.h"
struct xdp_mem_info {
   u32 type ;
   u32 id ;
};
#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/xdp.h"
struct xdp_rxq_info {
   struct net_device *dev ;
   u32 queue_index ;
   u32 reg_state ;
   struct xdp_mem_info mem ;
} __attribute__((__aligned__(64)));
#line 75  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/xdp.h"
struct xdp_frame {
   void *data ;
   u16 len ;
   u16 headroom ;
   u16 metasize ;
   struct xdp_mem_info mem ;
   struct net_device *dev_rx ;
};
#line 175 
struct netdev_bpf;
#line 160  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/security.h"
struct xfrm_policy;
#line 161 
struct xfrm_state;
#line 178 
struct request_sock;
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched/signal.h"
struct sighand_struct {
   spinlock_t siglock ;
   refcount_t count ;
   wait_queue_head_t signalfd_wqh ;
   struct k_sigaction action[64U] ;
};
#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched/signal.h"
struct pacct_struct {
   int ac_flag ;
   long ac_exitcode ;
   unsigned long ac_mem ;
   u64 ac_utime ;
   u64 ac_stime ;
   unsigned long ac_minflt ;
   unsigned long ac_majflt ;
};
#line 36  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched/signal.h"
struct cpu_itimer {
   u64 expires ;
   u64 incr ;
};
#line 45  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched/signal.h"
struct task_cputime_atomic {
   atomic64_t utime ;
   atomic64_t stime ;
   atomic64_t sum_exec_runtime ;
};
#line 64  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched/signal.h"
struct thread_group_cputimer {
   struct task_cputime_atomic cputime_atomic ;
};
#line 80 
struct tty_struct;
#line 80 
struct autogroup;
#line 80 
struct tty_audit_buf;
#line 80  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched/signal.h"
struct signal_struct {
   refcount_t sigcnt ;
   atomic_t live ;
   int nr_threads ;
   struct list_head thread_head ;
   wait_queue_head_t wait_chldexit ;
   struct task_struct *curr_target ;
   struct sigpending shared_pending ;
   struct hlist_head multiprocess ;
   int group_exit_code ;
   int notify_count ;
   struct task_struct *group_exit_task ;
   int group_stop_count ;
   unsigned int flags ;
   unsigned int is_child_subreaper : 1 ;
   unsigned int has_child_subreaper : 1 ;
   int posix_timer_id ;
   struct list_head posix_timers ;
   struct hrtimer real_timer ;
   ktime_t it_real_incr ;
   struct cpu_itimer it[2U] ;
   struct thread_group_cputimer cputimer ;
   struct posix_cputimers posix_cputimers ;
   struct pid *pids[4U] ;
   struct pid *tty_old_pgrp ;
   int leader ;
   struct tty_struct *tty ;
   struct autogroup *autogroup ;
   seqlock_t stats_lock ;
   u64 utime ;
   u64 stime ;
   u64 cutime ;
   u64 cstime ;
   u64 gtime ;
   u64 cgtime ;
   struct prev_cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   unsigned long cnvcsw ;
   unsigned long cnivcsw ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   unsigned long cmin_flt ;
   unsigned long cmaj_flt ;
   unsigned long inblock ;
   unsigned long oublock ;
   unsigned long cinblock ;
   unsigned long coublock ;
   unsigned long maxrss ;
   unsigned long cmaxrss ;
   struct task_io_accounting ioac ;
   unsigned long long sum_sched_runtime ;
   struct rlimit rlim[16U] ;
   struct pacct_struct pacct ;
   struct taskstats *stats ;
   unsigned int audit_tty ;
   struct tty_audit_buf *tty_audit_buf ;
   bool oom_flag_origin ;
   short oom_score_adj ;
   short oom_score_adj_min ;
   struct mm_struct *oom_mm ;
   struct mutex cred_guard_mutex ;
} __attribute__((__designated_init__));
#line 44  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/netlink.h"
struct nlmsghdr {
   __u32 nlmsg_len ;
   __u16 nlmsg_type ;
   __u16 nlmsg_flags ;
   __u32 nlmsg_seq ;
   __u32 nlmsg_pid ;
};
#line 211  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/netlink.h"
struct nlattr {
   __u16 nla_len ;
   __u16 nla_type ;
};
#line 74  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netlink.h"
struct netlink_ext_ack {
   char *_msg ;
   struct nlattr *bad_attr ;
   u8 cookie[20U] ;
   u8 cookie_len ;
};
#line 180  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netlink.h"
union __anonunion_670 {
   u8 ctx[48U] ;
   long args[6U] ;
};
#line 180  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netlink.h"
struct netlink_callback {
   struct sk_buff *skb ;
   struct nlmsghdr *nlh ;
   int (*dump)(struct sk_buff *, struct netlink_callback *) ;
   int (*done)(struct netlink_callback *) ;
   void *data ;
   struct module *module ;
   struct netlink_ext_ack *extack ;
   u16 family ;
   u16 min_dump_alloc ;
   bool strict_check ;
   u16 answer_flags ;
   unsigned int prev_seq ;
   unsigned int seq ;
   union __anonunion_670 __anonCompField_netlink_callback_153 ;
};
#line 8  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/neighbour.h"
struct ndmsg {
   __u8 ndm_family ;
   __u8 ndm_pad1 ;
   __u16 ndm_pad2 ;
   __s32 ndm_ifindex ;
   __u16 ndm_state ;
   __u8 ndm_flags ;
   __u8 ndm_type ;
};
#line 44  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if_link.h"
struct rtnl_link_stats64 {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 rx_errors ;
   __u64 tx_errors ;
   __u64 rx_dropped ;
   __u64 tx_dropped ;
   __u64 multicast ;
   __u64 collisions ;
   __u64 rx_length_errors ;
   __u64 rx_over_errors ;
   __u64 rx_crc_errors ;
   __u64 rx_frame_errors ;
   __u64 rx_fifo_errors ;
   __u64 rx_missed_errors ;
   __u64 tx_aborted_errors ;
   __u64 tx_carrier_errors ;
   __u64 tx_fifo_errors ;
   __u64 tx_heartbeat_errors ;
   __u64 tx_window_errors ;
   __u64 rx_compressed ;
   __u64 tx_compressed ;
   __u64 rx_nohandler ;
};
#line 753  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if_link.h"
struct ifla_vf_guid {
   __u32 vf ;
   __u64 guid ;
};
#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/if_link.h"
struct ifla_vf_stats {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 broadcast ;
   __u64 multicast ;
   __u64 rx_dropped ;
   __u64 tx_dropped ;
};
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/if_link.h"
struct ifla_vf_info {
   __u32 vf ;
   __u8 mac[32U] ;
   __u32 vlan ;
   __u32 qos ;
   __u32 spoofchk ;
   __u32 linkstate ;
   __u32 min_tx_rate ;
   __u32 max_tx_rate ;
   __u32 rss_query_en ;
   __u32 trusted ;
   __be16 vlan_proto ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/pkt_sched.h"
struct tc_stats {
   __u64 bytes ;
   __u32 packets ;
   __u32 drops ;
   __u32 overlimits ;
   __u32 bps ;
   __u32 pps ;
   __u32 qlen ;
   __u32 backlog ;
};
#line 102  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/pkt_sched.h"
struct tc_sizespec {
   unsigned char cell_log ;
   unsigned char size_log ;
   short cell_align ;
   int overhead ;
   unsigned int linklayer ;
   unsigned int mpu ;
   unsigned int mtu ;
   unsigned int tsize ;
};
#line 683  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/pkt_cls.h"
struct netpoll_info;
#line 684 
struct phy_device;
#line 685 
struct dsa_port;
#line 686 
struct sfp_bus;
#line 687 
struct wireless_dev;
#line 688 
struct wpan_dev;
#line 689 
struct mpls_dev;
#line 690 
struct udp_tunnel_info;
#line 69  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
enum netdev_tx {
    __NETDEV_TX_MIN = -2147483648,
    NETDEV_TX_OK = 0,
    NETDEV_TX_BUSY = 16
};
#line 75  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
typedef enum netdev_tx netdev_tx_t;
#line 161  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct net_device_stats {
   unsigned long rx_packets ;
   unsigned long tx_packets ;
   unsigned long rx_bytes ;
   unsigned long tx_bytes ;
   unsigned long rx_errors ;
   unsigned long tx_errors ;
   unsigned long rx_dropped ;
   unsigned long tx_dropped ;
   unsigned long multicast ;
   unsigned long collisions ;
   unsigned long rx_length_errors ;
   unsigned long rx_over_errors ;
   unsigned long rx_crc_errors ;
   unsigned long rx_frame_errors ;
   unsigned long rx_fifo_errors ;
   unsigned long rx_missed_errors ;
   unsigned long tx_aborted_errors ;
   unsigned long tx_carrier_errors ;
   unsigned long tx_fifo_errors ;
   unsigned long tx_heartbeat_errors ;
   unsigned long tx_window_errors ;
   unsigned long rx_compressed ;
   unsigned long tx_compressed ;
};
#line 195 
struct neigh_parms;
#line 217  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_hw_addr_list {
   struct list_head list ;
   int count ;
};
#line 237  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct hh_cache {
   unsigned int hh_len ;
   seqlock_t hh_lock ;
   unsigned long hh_data[16U] ;
};
#line 263  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct header_ops {
   int (*create)(struct sk_buff *, struct net_device *, unsigned short , void *, void *, unsigned int ) ;
   int (*parse)(struct sk_buff *, unsigned char *) ;
   int (*cache)(struct neighbour *, struct hh_cache *, __be16 ) ;
   void (*cache_update)(struct hh_cache *, struct net_device *, unsigned char *) ;
   bool (*validate)(char *, unsigned int ) ;
   __be16 (*parse_protocol)(struct sk_buff *) ;
};
#line 302  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct gro_list {
   struct list_head list ;
   int count ;
};
#line 316  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct napi_struct {
   struct list_head poll_list ;
   unsigned long state ;
   int weight ;
   unsigned long gro_bitmask ;
   int (*poll)(struct napi_struct *, int ) ;
   int poll_owner ;
   struct net_device *dev ;
   struct gro_list gro_hash[8U] ;
   struct sk_buff *skb ;
   struct list_head rx_list ;
   int rx_count ;
   struct hrtimer timer ;
   struct list_head dev_list ;
   struct hlist_node napi_hash_node ;
   unsigned int napi_id ;
};
#line 372 
enum rx_handler_result {
    RX_HANDLER_CONSUMED = 0,
    RX_HANDLER_ANOTHER = 1,
    RX_HANDLER_EXACT = 2,
    RX_HANDLER_PASS = 3
};
#line 379  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
typedef enum rx_handler_result rx_handler_result_t;
#line 421  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
typedef rx_handler_result_t rx_handler_func_t(struct sk_buff **);
#line 589 
struct Qdisc;
#line 589 
struct xdp_umem;
#line 589  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_queue {
   struct net_device *dev ;
   struct Qdisc *qdisc ;
   struct Qdisc *qdisc_sleeping ;
   struct kobject kobj ;
   int numa_node ;
   unsigned long tx_maxrate ;
   unsigned long trans_timeout ;
   struct net_device *sb_dev ;
   struct xdp_umem *umem ;
   spinlock_t _xmit_lock ;
   int xmit_lock_owner ;
   unsigned long trans_start ;
   unsigned long state ;
   struct dql dql ;
} __attribute__((__aligned__(64)));
#line 662  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct rps_map {
   unsigned int len ;
   struct callback_head rcu ;
   u16 cpus[0U] ;
};
#line 674  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct rps_dev_flow {
   u16 cpu ;
   u16 filter ;
   unsigned int last_qtail ;
};
#line 684  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct rps_dev_flow_table {
   unsigned int mask ;
   struct callback_head rcu ;
   struct rps_dev_flow flows[0U] ;
};
#line 736  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_rx_queue {
   struct rps_map *rps_map ;
   struct rps_dev_flow_table *rps_flow_table ;
   struct kobject kobj ;
   struct net_device *dev ;
   struct xdp_rxq_info xdp_rxq ;
   struct xdp_umem *umem ;
} __attribute__((__aligned__(64)));
#line 764  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct xps_map {
   unsigned int len ;
   unsigned int alloc_len ;
   struct callback_head rcu ;
   u16 queues[0U] ;
};
#line 777  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct xps_dev_maps {
   struct callback_head rcu ;
   struct xps_map *attr_map[0U] ;
};
#line 793  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_tc_txq {
   u16 count ;
   u16 offset ;
};
#line 803  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_fcoe_hbainfo {
   char manufacturer[64U] ;
   char serial_number[64U] ;
   char hardware_version[64U] ;
   char driver_version[64U] ;
   char optionrom_version[64U] ;
   char firmware_version[64U] ;
   char model[256U] ;
   char model_description[256U] ;
};
#line 820  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_phys_item_id {
   unsigned char id[32U] ;
   unsigned char id_len ;
};
#line 833 
enum tc_setup_type {
    TC_SETUP_QDISC_MQPRIO = 0,
    TC_SETUP_CLSU32 = 1,
    TC_SETUP_CLSFLOWER = 2,
    TC_SETUP_CLSMATCHALL = 3,
    TC_SETUP_CLSBPF = 4,
    TC_SETUP_BLOCK = 5,
    TC_SETUP_QDISC_CBS = 6,
    TC_SETUP_QDISC_RED = 7,
    TC_SETUP_QDISC_PRIO = 8,
    TC_SETUP_QDISC_MQ = 9,
    TC_SETUP_QDISC_ETF = 10,
    TC_SETUP_ROOT_QDISC = 11,
    TC_SETUP_QDISC_GRED = 12,
    TC_SETUP_QDISC_TAPRIO = 13,
    TC_SETUP_FT = 14
};
#line 851 
enum bpf_netdev_command {
    XDP_SETUP_PROG = 0,
    XDP_SETUP_PROG_HW = 1,
    XDP_QUERY_PROG = 2,
    XDP_QUERY_PROG_HW = 3,
    BPF_OFFLOAD_MAP_ALLOC = 4,
    BPF_OFFLOAD_MAP_FREE = 5,
    XDP_SETUP_XSK_UMEM = 6
};
#line 879  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct __anonstruct_675 {
   u32 flags ;
   struct bpf_prog *prog ;
   struct netlink_ext_ack *extack ;
};
#line 879  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct __anonstruct_676 {
   u32 prog_id ;
   u32 prog_flags ;
};
#line 879  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct __anonstruct_677 {
   struct bpf_offloaded_map *offmap ;
};
#line 879  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct __anonstruct_xsk_678 {
   struct xdp_umem *umem ;
   u16 queue_id ;
};
#line 879  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
union __anonunion_674 {
   struct __anonstruct_675 __anonCompField___anonunion_674_155 ;
   struct __anonstruct_676 __anonCompField___anonunion_674_156 ;
   struct __anonstruct_677 __anonCompField___anonunion_674_157 ;
   struct __anonstruct_xsk_678 xsk ;
};
#line 879  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_bpf {
   enum bpf_netdev_command command ;
   union __anonunion_674 __anonCompField_netdev_bpf_158 ;
};
#line 911  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct xfrmdev_ops {
   int (*xdo_dev_state_add)(struct xfrm_state *) ;
   void (*xdo_dev_state_delete)(struct xfrm_state *) ;
   void (*xdo_dev_state_free)(struct xfrm_state *) ;
   bool (*xdo_dev_offload_ok)(struct sk_buff *, struct xfrm_state *) ;
   void (*xdo_dev_state_advance_esn)(struct xfrm_state *) ;
};
#line 921  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct dev_ifalias {
   struct callback_head rcuhead ;
   char ifalias[] ;
};
#line 926 
struct tlsdev_ops;
#line 929  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_name_node {
   struct hlist_node hlist ;
   struct list_head list ;
   struct net_device *dev ;
   char *name ;
};
#line 1257 
struct devlink_port;
#line 1257  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct net_device_ops {
   int (*ndo_init)(struct net_device *) ;
   void (*ndo_uninit)(struct net_device *) ;
   int (*ndo_open)(struct net_device *) ;
   int (*ndo_stop)(struct net_device *) ;
   netdev_tx_t (*ndo_start_xmit)(struct sk_buff *, struct net_device *) ;
   netdev_features_t (*ndo_features_check)(struct sk_buff *, struct net_device *, netdev_features_t ) ;
   u16 (*ndo_select_queue)(struct net_device *, struct sk_buff *, struct net_device *) ;
   void (*ndo_change_rx_flags)(struct net_device *, int ) ;
   void (*ndo_set_rx_mode)(struct net_device *) ;
   int (*ndo_set_mac_address)(struct net_device *, void *) ;
   int (*ndo_validate_addr)(struct net_device *) ;
   int (*ndo_do_ioctl)(struct net_device *, struct ifreq *, int ) ;
   int (*ndo_set_config)(struct net_device *, struct ifmap *) ;
   int (*ndo_change_mtu)(struct net_device *, int ) ;
   int (*ndo_neigh_setup)(struct net_device *, struct neigh_parms *) ;
   void (*ndo_tx_timeout)(struct net_device *) ;
   void (*ndo_get_stats64)(struct net_device *, struct rtnl_link_stats64 *) ;
   bool (*ndo_has_offload_stats)(struct net_device *, int ) ;
   int (*ndo_get_offload_stats)(int , struct net_device *, void *) ;
   struct net_device_stats *(*ndo_get_stats)(struct net_device *) ;
   int (*ndo_vlan_rx_add_vid)(struct net_device *, __be16 , u16 ) ;
   int (*ndo_vlan_rx_kill_vid)(struct net_device *, __be16 , u16 ) ;
   void (*ndo_poll_controller)(struct net_device *) ;
   int (*ndo_netpoll_setup)(struct net_device *, struct netpoll_info *) ;
   void (*ndo_netpoll_cleanup)(struct net_device *) ;
   int (*ndo_set_vf_mac)(struct net_device *, int , u8 *) ;
   int (*ndo_set_vf_vlan)(struct net_device *, int , u16 , u8 , __be16 ) ;
   int (*ndo_set_vf_rate)(struct net_device *, int , int , int ) ;
   int (*ndo_set_vf_spoofchk)(struct net_device *, int , bool ) ;
   int (*ndo_set_vf_trust)(struct net_device *, int , bool ) ;
   int (*ndo_get_vf_config)(struct net_device *, int , struct ifla_vf_info *) ;
   int (*ndo_set_vf_link_state)(struct net_device *, int , int ) ;
   int (*ndo_get_vf_stats)(struct net_device *, int , struct ifla_vf_stats *) ;
   int (*ndo_set_vf_port)(struct net_device *, int , struct nlattr **) ;
   int (*ndo_get_vf_port)(struct net_device *, int , struct sk_buff *) ;
   int (*ndo_get_vf_guid)(struct net_device *, int , struct ifla_vf_guid *, struct ifla_vf_guid *) ;
   int (*ndo_set_vf_guid)(struct net_device *, int , u64 , int ) ;
   int (*ndo_set_vf_rss_query_en)(struct net_device *, int , bool ) ;
   int (*ndo_setup_tc)(struct net_device *, enum tc_setup_type , void *) ;
   int (*ndo_fcoe_enable)(struct net_device *) ;
   int (*ndo_fcoe_disable)(struct net_device *) ;
   int (*ndo_fcoe_ddp_setup)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_ddp_done)(struct net_device *, u16 ) ;
   int (*ndo_fcoe_ddp_target)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_get_hbainfo)(struct net_device *, struct netdev_fcoe_hbainfo *) ;
   int (*ndo_fcoe_get_wwn)(struct net_device *, u64 *, int ) ;
   int (*ndo_rx_flow_steer)(struct net_device *, struct sk_buff *, u16 , u32 ) ;
   int (*ndo_add_slave)(struct net_device *, struct net_device *, struct netlink_ext_ack *) ;
   int (*ndo_del_slave)(struct net_device *, struct net_device *) ;
   netdev_features_t (*ndo_fix_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_set_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_neigh_construct)(struct net_device *, struct neighbour *) ;
   void (*ndo_neigh_destroy)(struct net_device *, struct neighbour *) ;
   int (*ndo_fdb_add)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char *, u16 , u16 , struct netlink_ext_ack *) ;
   int (*ndo_fdb_del)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char *, u16 ) ;
   int (*ndo_fdb_dump)(struct sk_buff *, struct netlink_callback *, struct net_device *, struct net_device *, int *) ;
   int (*ndo_fdb_get)(struct sk_buff *, struct nlattr **, struct net_device *, unsigned char *, u16 , u32 , u32 , struct netlink_ext_ack *) ;
   int (*ndo_bridge_setlink)(struct net_device *, struct nlmsghdr *, u16 , struct netlink_ext_ack *) ;
   int (*ndo_bridge_getlink)(struct sk_buff *, u32 , u32 , struct net_device *, u32 , int ) ;
   int (*ndo_bridge_dellink)(struct net_device *, struct nlmsghdr *, u16 ) ;
   int (*ndo_change_carrier)(struct net_device *, bool ) ;
   int (*ndo_get_phys_port_id)(struct net_device *, struct netdev_phys_item_id *) ;
   int (*ndo_get_port_parent_id)(struct net_device *, struct netdev_phys_item_id *) ;
   int (*ndo_get_phys_port_name)(struct net_device *, char *, size_t ) ;
   void (*ndo_udp_tunnel_add)(struct net_device *, struct udp_tunnel_info *) ;
   void (*ndo_udp_tunnel_del)(struct net_device *, struct udp_tunnel_info *) ;
   void *(*ndo_dfwd_add_station)(struct net_device *, struct net_device *) ;
   void (*ndo_dfwd_del_station)(struct net_device *, void *) ;
   int (*ndo_set_tx_maxrate)(struct net_device *, int , u32 ) ;
   int (*ndo_get_iflink)(struct net_device *) ;
   int (*ndo_change_proto_down)(struct net_device *, bool ) ;
   int (*ndo_fill_metadata_dst)(struct net_device *, struct sk_buff *) ;
   void (*ndo_set_rx_headroom)(struct net_device *, int ) ;
   int (*ndo_bpf)(struct net_device *, struct netdev_bpf *) ;
   int (*ndo_xdp_xmit)(struct net_device *, int , struct xdp_frame **, u32 ) ;
   int (*ndo_xsk_wakeup)(struct net_device *, u32 , u32 ) ;
   struct devlink_port *(*ndo_get_devlink_port)(struct net_device *) ;
};
#line 1492 
enum ldv_14525 {
    NETREG_UNINITIALIZED = 0,
    NETREG_REGISTERED = 1,
    NETREG_UNREGISTERING = 2,
    NETREG_UNREGISTERED = 3,
    NETREG_RELEASED = 4,
    NETREG_DUMMY = 5
};
#line 1501 
enum ldv_14526 {
    RTNL_LINK_INITIALIZED = 0,
    RTNL_LINK_INITIALIZING = 1
};
#line 1795  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct __anonstruct_adj_list_679 {
   struct list_head upper ;
   struct list_head lower ;
};
#line 1795 
struct iw_handler_def;
#line 1795 
struct iw_public_data;
#line 1795 
struct l3mdev_ops;
#line 1795 
struct ndisc_ops;
#line 1795 
struct vlan_info;
#line 1795 
struct tipc_bearer;
#line 1795 
struct in_device;
#line 1795 
struct dn_dev;
#line 1795 
struct inet6_dev;
#line 1795 
struct mini_Qdisc;
#line 1795 
struct cpu_rmap;
#line 1795 
struct pcpu_lstats;
#line 1795 
struct pcpu_sw_netstats;
#line 1795 
struct pcpu_dstats;
#line 1795  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
union __anonunion_680 {
   void *ml_priv ;
   struct pcpu_lstats *lstats ;
   struct pcpu_sw_netstats *tstats ;
   struct pcpu_dstats *dstats ;
};
#line 1795 
struct garp_port;
#line 1795 
struct mrp_port;
#line 1795 
struct rtnl_link_ops;
#line 1795  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct net_device {
   char name[16U] ;
   struct netdev_name_node *name_node ;
   struct dev_ifalias *ifalias ;
   unsigned long mem_end ;
   unsigned long mem_start ;
   unsigned long base_addr ;
   int irq ;
   unsigned long state ;
   struct list_head dev_list ;
   struct list_head napi_list ;
   struct list_head unreg_list ;
   struct list_head close_list ;
   struct list_head ptype_all ;
   struct list_head ptype_specific ;
   struct __anonstruct_adj_list_679 adj_list ;
   netdev_features_t features ;
   netdev_features_t hw_features ;
   netdev_features_t wanted_features ;
   netdev_features_t vlan_features ;
   netdev_features_t hw_enc_features ;
   netdev_features_t mpls_features ;
   netdev_features_t gso_partial_features ;
   int ifindex ;
   int group ;
   struct net_device_stats stats ;
   atomic_long_t rx_dropped ;
   atomic_long_t tx_dropped ;
   atomic_long_t rx_nohandler ;
   atomic_t carrier_up_count ;
   atomic_t carrier_down_count ;
   struct iw_handler_def *wireless_handlers ;
   struct iw_public_data *wireless_data ;
   struct net_device_ops *netdev_ops ;
   struct ethtool_ops *ethtool_ops ;
   struct l3mdev_ops *l3mdev_ops ;
   struct ndisc_ops *ndisc_ops ;
   struct xfrmdev_ops *xfrmdev_ops ;
   struct tlsdev_ops *tlsdev_ops ;
   struct header_ops *header_ops ;
   unsigned int flags ;
   unsigned int priv_flags ;
   unsigned short gflags ;
   unsigned short padded ;
   unsigned char operstate ;
   unsigned char link_mode ;
   unsigned char if_port ;
   unsigned char dma ;
   unsigned int mtu ;
   unsigned int min_mtu ;
   unsigned int max_mtu ;
   unsigned short type ;
   unsigned short hard_header_len ;
   unsigned char min_header_len ;
   unsigned short needed_headroom ;
   unsigned short needed_tailroom ;
   unsigned char perm_addr[32U] ;
   unsigned char addr_assign_type ;
   unsigned char addr_len ;
   unsigned char upper_level ;
   unsigned char lower_level ;
   unsigned short neigh_priv_len ;
   unsigned short dev_id ;
   unsigned short dev_port ;
   spinlock_t addr_list_lock ;
   unsigned char name_assign_type ;
   bool uc_promisc ;
   struct netdev_hw_addr_list uc ;
   struct netdev_hw_addr_list mc ;
   struct netdev_hw_addr_list dev_addrs ;
   struct kset *queues_kset ;
   unsigned int promiscuity ;
   unsigned int allmulti ;
   struct vlan_info *vlan_info ;
   struct dsa_port *dsa_ptr ;
   struct tipc_bearer *tipc_ptr ;
   void *atalk_ptr ;
   struct in_device *ip_ptr ;
   struct dn_dev *dn_ptr ;
   struct inet6_dev *ip6_ptr ;
   void *ax25_ptr ;
   struct wireless_dev *ieee80211_ptr ;
   struct wpan_dev *ieee802154_ptr ;
   struct mpls_dev *mpls_ptr ;
   unsigned char *dev_addr ;
   struct netdev_rx_queue *_rx ;
   unsigned int num_rx_queues ;
   unsigned int real_num_rx_queues ;
   struct bpf_prog *xdp_prog ;
   unsigned long gro_flush_timeout ;
   rx_handler_func_t *rx_handler ;
   void *rx_handler_data ;
   struct mini_Qdisc *miniq_ingress ;
   struct netdev_queue *ingress_queue ;
   struct nf_hook_entries *nf_hooks_ingress ;
   unsigned char broadcast[32U] ;
   struct cpu_rmap *rx_cpu_rmap ;
   struct hlist_node index_hlist ;
   struct netdev_queue *_tx ;
   unsigned int num_tx_queues ;
   unsigned int real_num_tx_queues ;
   struct Qdisc *qdisc ;
   struct hlist_head qdisc_hash[16U] ;
   unsigned int tx_queue_len ;
   spinlock_t tx_global_lock ;
   int watchdog_timeo ;
   struct xps_dev_maps *xps_cpus_map ;
   struct xps_dev_maps *xps_rxqs_map ;
   struct mini_Qdisc *miniq_egress ;
   struct timer_list watchdog_timer ;
   int *pcpu_refcnt ;
   struct list_head todo_list ;
   struct list_head link_watch_list ;
   enum ldv_14525 reg_state : 8 ;
   bool dismantle ;
   enum ldv_14526 rtnl_link_state : 16 ;
   bool needs_free_netdev ;
   void (*priv_destructor)(struct net_device *) ;
   struct netpoll_info *npinfo ;
   possible_net_t nd_net ;
   union __anonunion_680 __anonCompField_net_device_159 ;
   struct garp_port *garp_port ;
   struct mrp_port *mrp_port ;
   struct device dev ;
   struct attribute_group *sysfs_groups[4U] ;
   struct attribute_group *sysfs_rx_queue_group ;
   struct rtnl_link_ops *rtnl_link_ops ;
   unsigned int gso_max_size ;
   u16 gso_max_segs ;
   struct dcbnl_rtnl_ops *dcbnl_ops ;
   s16 num_tc ;
   struct netdev_tc_txq tc_to_txq[16U] ;
   u8 prio_tc_map[16U] ;
   unsigned int fcoe_ddp_xid ;
   struct netprio_map *priomap ;
   struct phy_device *phydev ;
   struct sfp_bus *sfp_bus ;
   struct lock_class_key qdisc_tx_busylock_key ;
   struct lock_class_key qdisc_running_key ;
   struct lock_class_key qdisc_xmit_lock_key ;
   struct lock_class_key addr_list_lock_key ;
   bool proto_down ;
   unsigned int wol_enabled : 1 ;
};
#line 2400  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct pcpu_sw_netstats {
   u64 rx_packets ;
   u64 rx_bytes ;
   u64 tx_packets ;
   u64 tx_bytes ;
   struct u64_stats_sync syncp ;
} __attribute__((__aligned__(32)));
#line 2408  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct pcpu_lstats {
   u64_stats_t packets ;
   u64_stats_t bytes ;
   struct u64_stats_sync syncp ;
} __attribute__((__aligned__(16)));
#line 567  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/rtnetlink.h"
struct tcmsg {
   unsigned char tcm_family ;
   unsigned char tcm__pad1 ;
   unsigned short tcm__pad2 ;
   int tcm_ifindex ;
   __u32 tcm_handle ;
   __u32 tcm_parent ;
   __u32 tcm_info ;
};
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/inetdevice.h"
struct ipv4_devconf {
   void *sysctl ;
   int data[32U] ;
   unsigned long state[1U] ;
};
#line 25 
struct in_ifaddr;
#line 25 
struct ip_mc_list;
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/inetdevice.h"
struct in_device {
   struct net_device *dev ;
   refcount_t refcnt ;
   int dead ;
   struct in_ifaddr *ifa_list ;
   struct ip_mc_list *mc_list ;
   struct ip_mc_list **mc_hash ;
   int mc_count ;
   spinlock_t mc_tomb_lock ;
   struct ip_mc_list *mc_tomb ;
   unsigned long mr_v1_seen ;
   unsigned long mr_v2_seen ;
   unsigned long mr_maxdelay ;
   unsigned long mr_qi ;
   unsigned long mr_qri ;
   unsigned char mr_qrv ;
   unsigned char mr_gq_running ;
   unsigned char mr_ifc_count ;
   struct timer_list mr_gq_timer ;
   struct timer_list mr_ifc_timer ;
   struct neigh_parms *arp_parms ;
   struct ipv4_devconf cnf ;
   struct callback_head callback_head ;
};
#line 137  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/inetdevice.h"
struct in_ifaddr {
   struct hlist_node hash ;
   struct in_ifaddr *ifa_next ;
   struct in_device *ifa_dev ;
   struct callback_head callback_head ;
   __be32 ifa_local ;
   __be32 ifa_address ;
   __be32 ifa_mask ;
   __u32 ifa_rt_priority ;
   __be32 ifa_broadcast ;
   unsigned char ifa_scope ;
   unsigned char ifa_prefixlen ;
   __u32 ifa_flags ;
   char ifa_label[16U] ;
   __u32 ifa_valid_lft ;
   __u32 ifa_preferred_lft ;
   unsigned long ifa_cstamp ;
   unsigned long ifa_tstamp ;
};
#line 291  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netlink.h"
struct __anonstruct_705 {
   s16 min ;
   s16 max ;
};
#line 291  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netlink.h"
union __anonunion_704 {
   void *validation_data ;
   struct __anonstruct_705 __anonCompField___anonunion_704_160 ;
   int (*validate)(struct nlattr *, struct netlink_ext_ack *) ;
   u16 strict_start_type ;
};
#line 291  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netlink.h"
struct nla_policy {
   u8 type ;
   u8 validation_type ;
   u16 len ;
   union __anonunion_704 __anonCompField_nla_policy_161 ;
};
#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/rtnetlink.h"
struct rtnl_link_ops {
   struct list_head list ;
   char *kind ;
   size_t priv_size ;
   void (*setup)(struct net_device *) ;
   unsigned int maxtype ;
   struct nla_policy *policy ;
   int (*validate)(struct nlattr **, struct nlattr **, struct netlink_ext_ack *) ;
   int (*newlink)(struct net *, struct net_device *, struct nlattr **, struct nlattr **, struct netlink_ext_ack *) ;
   int (*changelink)(struct net_device *, struct nlattr **, struct nlattr **, struct netlink_ext_ack *) ;
   void (*dellink)(struct net_device *, struct list_head *) ;
   size_t (*get_size)(struct net_device *) ;
   int (*fill_info)(struct sk_buff *, struct net_device *) ;
   size_t (*get_xstats_size)(struct net_device *) ;
   int (*fill_xstats)(struct sk_buff *, struct net_device *) ;
   unsigned int (*get_num_tx_queues)(void) ;
   unsigned int (*get_num_rx_queues)(void) ;
   unsigned int slave_maxtype ;
   struct nla_policy *slave_policy ;
   int (*slave_changelink)(struct net_device *, struct net_device *, struct nlattr **, struct nlattr **, struct netlink_ext_ack *) ;
   size_t (*get_slave_size)(struct net_device *, struct net_device *) ;
   int (*fill_slave_info)(struct sk_buff *, struct net_device *, struct net_device *) ;
   struct net *(*get_link_net)(struct net_device *) ;
   size_t (*get_linkxstats_size)(struct net_device *, int ) ;
   int (*fill_linkxstats)(struct sk_buff *, struct net_device *, int *, int ) ;
};
#line 70  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/neighbour.h"
struct neigh_table;
#line 70  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/neighbour.h"
struct neigh_parms {
   possible_net_t net ;
   struct net_device *dev ;
   struct list_head list ;
   int (*neigh_setup)(struct neighbour *) ;
   struct neigh_table *tbl ;
   void *sysctl_table ;
   int dead ;
   refcount_t refcnt ;
   struct callback_head callback_head ;
   int reachable_time ;
   int data[13U] ;
   unsigned long data_state[1U] ;
};
#line 112  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/neighbour.h"
struct neigh_statistics {
   unsigned long allocs ;
   unsigned long destroys ;
   unsigned long hash_grows ;
   unsigned long res_failed ;
   unsigned long lookups ;
   unsigned long hits ;
   unsigned long rcv_probes_mcast ;
   unsigned long rcv_probes_ucast ;
   unsigned long periodic_gc_runs ;
   unsigned long forced_gc_runs ;
   unsigned long unres_discards ;
   unsigned long table_fulls ;
};
#line 134 
struct neigh_ops;
#line 134  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/neighbour.h"
struct neighbour {
   struct neighbour *next ;
   struct neigh_table *tbl ;
   struct neigh_parms *parms ;
   unsigned long confirmed ;
   unsigned long updated ;
   rwlock_t lock ;
   refcount_t refcnt ;
   unsigned int arp_queue_len_bytes ;
   struct sk_buff_head arp_queue ;
   struct timer_list timer ;
   unsigned long used ;
   atomic_t probes ;
   __u8 flags ;
   __u8 nud_state ;
   __u8 type ;
   __u8 dead ;
   u8 protocol ;
   seqlock_t ha_lock ;
   unsigned char ha[32U] ;
   struct hh_cache hh ;
   int (*output)(struct neighbour *, struct sk_buff *) ;
   struct neigh_ops *ops ;
   struct list_head gc_list ;
   struct callback_head rcu ;
   struct net_device *dev ;
   u8 primary_key[0U] ;
} __attribute__((__designated_init__));
#line 163  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/neighbour.h"
struct neigh_ops {
   int family ;
   void (*solicit)(struct neighbour *, struct sk_buff *) ;
   void (*error_report)(struct neighbour *, struct sk_buff *) ;
   int (*output)(struct neighbour *, struct sk_buff *) ;
   int (*connected_output)(struct neighbour *, struct sk_buff *) ;
};
#line 171  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/neighbour.h"
struct pneigh_entry {
   struct pneigh_entry *next ;
   possible_net_t net ;
   struct net_device *dev ;
   u8 flags ;
   u8 protocol ;
   u8 key[0U] ;
};
#line 186  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/neighbour.h"
struct neigh_hash_table {
   struct neighbour **hash_buckets ;
   unsigned int hash_shift ;
   __u32 hash_rnd[4U] ;
   struct callback_head rcu ;
};
#line 194  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/neighbour.h"
struct neigh_table {
   int family ;
   unsigned int entry_size ;
   unsigned int key_len ;
   __be16 protocol ;
   __u32 (*hash)(void *, struct net_device *, __u32 *) ;
   bool (*key_eq)(struct neighbour *, void *) ;
   int (*constructor)(struct neighbour *) ;
   int (*pconstructor)(struct pneigh_entry *) ;
   void (*pdestructor)(struct pneigh_entry *) ;
   void (*proxy_redo)(struct sk_buff *) ;
   bool (*allow_add)(struct net_device *, struct netlink_ext_ack *) ;
   char *id ;
   struct neigh_parms parms ;
   struct list_head parms_list ;
   int gc_interval ;
   int gc_thresh1 ;
   int gc_thresh2 ;
   int gc_thresh3 ;
   unsigned long last_flush ;
   struct delayed_work gc_work ;
   struct timer_list proxy_timer ;
   struct sk_buff_head proxy_queue ;
   atomic_t entries ;
   atomic_t gc_entries ;
   struct list_head gc_list ;
   rwlock_t lock ;
   unsigned long last_rand ;
   struct neigh_statistics *stats ;
   struct neigh_hash_table *nht ;
   struct pneigh_entry **phash_buckets ;
};
#line 289  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/neighbour.h"
union __anonunion___u_707 {
   struct neigh_hash_table *__val ;
   char __c[1U] ;
};
#line 294  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/neighbour.h"
union __anonunion___u_709 {
   struct neighbour *__val ;
   char __c[1U] ;
};
#line 296  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/neighbour.h"
union __anonunion___u_711 {
   struct neighbour *__val ;
   char __c[1U] ;
};
#line 442  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/neighbour.h"
union __anonunion___u_713 {
   unsigned long __val ;
   char __c[1U] ;
};
#line 441  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/neighbour.h"
union __anonunion___u_715 {
   unsigned long __val ;
   char __c[1U] ;
};
#line 10  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/fib_notifier.h"
struct fib_notifier_info {
   int family ;
   struct netlink_ext_ack *extack ;
};
#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/fib_notifier.h"
struct fib_notifier_ops {
   int family ;
   struct list_head list ;
   unsigned int (*fib_seq_read)(struct net *) ;
   int (*fib_dump)(struct net *, struct notifier_block *, struct netlink_ext_ack *) ;
   struct module *owner ;
   struct callback_head rcu ;
};
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fib_rules.h"
struct fib_rule_hdr {
   __u8 family ;
   __u8 dst_len ;
   __u8 src_len ;
   __u8 tos ;
   __u8 table ;
   __u8 res1 ;
   __u8 res2 ;
   __u8 action ;
   __u32 flags ;
};
#line 38  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fib_rules.h"
struct fib_rule_port_range {
   __u16 start ;
   __u16 end ;
};
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/fib_rules.h"
struct fib_kuid_range {
   kuid_t start ;
   kuid_t end ;
};
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/fib_rules.h"
struct fib_rule {
   struct list_head list ;
   int iifindex ;
   int oifindex ;
   u32 mark ;
   u32 mark_mask ;
   u32 flags ;
   u32 table ;
   u8 action ;
   u8 l3mdev ;
   u8 proto ;
   u8 ip_proto ;
   u32 target ;
   __be64 tun_id ;
   struct fib_rule *ctarget ;
   struct net *fr_net ;
   refcount_t refcnt ;
   u32 pref ;
   int suppress_ifgroup ;
   int suppress_prefixlen ;
   char iifname[16U] ;
   char oifname[16U] ;
   struct fib_kuid_range uid_range ;
   struct fib_rule_port_range sport_range ;
   struct fib_rule_port_range dport_range ;
   struct callback_head rcu ;
};
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/fib_rules.h"
struct fib_lookup_arg {
   void *lookup_ptr ;
   void *lookup_data ;
   void *result ;
   struct fib_rule *rule ;
   u32 table ;
   int flags ;
};
#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/fib_rules.h"
struct fib_rules_ops {
   int family ;
   struct list_head list ;
   int rule_size ;
   int addr_size ;
   int unresolved_rules ;
   int nr_goto_rules ;
   unsigned int fib_rules_seq ;
   int (*action)(struct fib_rule *, struct flowi *, int , struct fib_lookup_arg *) ;
   bool (*suppress)(struct fib_rule *, struct fib_lookup_arg *) ;
   int (*match)(struct fib_rule *, struct flowi *, int ) ;
   int (*configure)(struct fib_rule *, struct sk_buff *, struct fib_rule_hdr *, struct nlattr **, struct netlink_ext_ack *) ;
   int (*delete)(struct fib_rule *) ;
   int (*compare)(struct fib_rule *, struct fib_rule_hdr *, struct nlattr **) ;
   int (*fill)(struct fib_rule *, struct sk_buff *, struct fib_rule_hdr *) ;
   size_t (*nlmsg_payload)(struct fib_rule *) ;
   void (*flush_cache)(struct fib_rules_ops *) ;
   int nlgroup ;
   struct nla_policy *policy ;
   struct list_head rules_list ;
   struct module *owner ;
   struct net *fro_net ;
   struct callback_head rcu ;
};
#line 63  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ipv6.h"
struct ipv6_stable_secret {
   bool initialized ;
   struct in6_addr secret ;
};
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ipv6.h"
struct ipv6_devconf {
   __s32 forwarding ;
   __s32 hop_limit ;
   __s32 mtu6 ;
   __s32 accept_ra ;
   __s32 accept_redirects ;
   __s32 autoconf ;
   __s32 dad_transmits ;
   __s32 rtr_solicits ;
   __s32 rtr_solicit_interval ;
   __s32 rtr_solicit_max_interval ;
   __s32 rtr_solicit_delay ;
   __s32 force_mld_version ;
   __s32 mldv1_unsolicited_report_interval ;
   __s32 mldv2_unsolicited_report_interval ;
   __s32 use_tempaddr ;
   __s32 temp_valid_lft ;
   __s32 temp_prefered_lft ;
   __s32 regen_max_retry ;
   __s32 max_desync_factor ;
   __s32 max_addresses ;
   __s32 accept_ra_defrtr ;
   __s32 accept_ra_min_hop_limit ;
   __s32 accept_ra_pinfo ;
   __s32 ignore_routes_with_linkdown ;
   __s32 accept_ra_rtr_pref ;
   __s32 rtr_probe_interval ;
   __s32 accept_ra_rt_info_min_plen ;
   __s32 accept_ra_rt_info_max_plen ;
   __s32 proxy_ndp ;
   __s32 accept_source_route ;
   __s32 accept_ra_from_local ;
   __s32 optimistic_dad ;
   __s32 use_optimistic ;
   __s32 mc_forwarding ;
   __s32 disable_ipv6 ;
   __s32 drop_unicast_in_l2_multicast ;
   __s32 accept_dad ;
   __s32 force_tllao ;
   __s32 ndisc_notify ;
   __s32 suppress_frag_ndisc ;
   __s32 accept_ra_mtu ;
   __s32 drop_unsolicited_na ;
   struct ipv6_stable_secret stable_secret ;
   __s32 use_oif_addrs_only ;
   __s32 keep_addr_on_down ;
   __s32 seg6_enabled ;
   __s32 seg6_require_hmac ;
   __u32 enhanced_dad ;
   __u32 addr_gen_mode ;
   __s32 disable_policy ;
   __s32 ndisc_tclass ;
   struct ctl_table_header *sysctl_header ;
};
#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/page_counter.h"
struct page_counter {
   atomic_long_t usage ;
   unsigned long min ;
   unsigned long low ;
   unsigned long max ;
   struct page_counter *parent ;
   unsigned long emin ;
   atomic_long_t min_usage ;
   atomic_long_t children_min_usage ;
   unsigned long elow ;
   atomic_long_t low_usage ;
   atomic_long_t children_low_usage ;
   unsigned long watermark ;
   unsigned long failcnt ;
};
#line 66 
struct eventfd_ctx;
#line 13  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/vmpressure.h"
struct vmpressure {
   unsigned long scanned ;
   unsigned long reclaimed ;
   unsigned long tree_scanned ;
   unsigned long tree_reclaimed ;
   spinlock_t sr_lock ;
   struct list_head events ;
   struct mutex events_lock ;
   struct work_struct work ;
};
#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/flex_proportions.h"
struct fprop_global {
   struct percpu_counter events ;
   unsigned int period ;
   seqcount_t sequence ;
};
#line 76  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/flex_proportions.h"
struct fprop_local_percpu {
   struct percpu_counter events ;
   unsigned int period ;
   raw_spinlock_t lock ;
};
#line 116  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/flex_proportions.h"
typedef int congested_fn(void *, int );
#line 45  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backing-dev-defs.h"
enum wb_reason {
    WB_REASON_BACKGROUND = 0,
    WB_REASON_VMSCAN = 1,
    WB_REASON_SYNC = 2,
    WB_REASON_PERIODIC = 3,
    WB_REASON_LAPTOP_TIMER = 4,
    WB_REASON_FREE_MORE_MEM = 5,
    WB_REASON_FS_FREE_SPACE = 6,
    WB_REASON_FORKER_THREAD = 7,
    WB_REASON_FOREIGN_FLUSH = 8,
    WB_REASON_MAX = 9
};
#line 71  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backing-dev-defs.h"
struct wb_completion {
   atomic_t cnt ;
   wait_queue_head_t *waitq ;
};
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backing-dev-defs.h"
struct bdi_writeback_congested {
   unsigned long state ;
   refcount_t refcnt ;
   struct backing_dev_info *__bdi ;
   int blkcg_id ;
   struct rb_node rb_node ;
};
#line 130  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backing-dev-defs.h"
union __anonunion_718 {
   struct work_struct release_work ;
   struct callback_head rcu ;
};
#line 130  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backing-dev-defs.h"
struct bdi_writeback {
   struct backing_dev_info *bdi ;
   unsigned long state ;
   unsigned long last_old_flush ;
   struct list_head b_dirty ;
   struct list_head b_io ;
   struct list_head b_more_io ;
   struct list_head b_dirty_time ;
   spinlock_t list_lock ;
   struct percpu_counter stat[4U] ;
   struct bdi_writeback_congested *congested ;
   unsigned long bw_time_stamp ;
   unsigned long dirtied_stamp ;
   unsigned long written_stamp ;
   unsigned long write_bandwidth ;
   unsigned long avg_write_bandwidth ;
   unsigned long dirty_ratelimit ;
   unsigned long balanced_dirty_ratelimit ;
   struct fprop_local_percpu completions ;
   int dirty_exceeded ;
   enum wb_reason start_all_reason ;
   spinlock_t work_lock ;
   struct list_head work_list ;
   struct delayed_work dwork ;
   unsigned long dirty_sleep ;
   struct list_head bdi_node ;
   struct percpu_ref refcnt ;
   struct fprop_local_percpu memcg_completions ;
   struct cgroup_subsys_state *memcg_css ;
   struct cgroup_subsys_state *blkcg_css ;
   struct list_head memcg_node ;
   struct list_head blkcg_node ;
   union __anonunion_718 __anonCompField_bdi_writeback_162 ;
};
#line 188  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backing-dev-defs.h"
struct backing_dev_info {
   u64 id ;
   struct rb_node rb_node ;
   struct list_head bdi_list ;
   unsigned long ra_pages ;
   unsigned long io_pages ;
   congested_fn *congested_fn ;
   void *congested_data ;
   char *name ;
   struct kref refcnt ;
   unsigned int capabilities ;
   unsigned int min_ratio ;
   unsigned int max_ratio ;
   unsigned int max_prop_frac ;
   atomic_long_t tot_write_bandwidth ;
   struct bdi_writeback wb ;
   struct list_head wb_list ;
   struct xarray cgwb_tree ;
   struct rb_root cgwb_congested_tree ;
   struct mutex cgwb_release_mutex ;
   struct rw_semaphore wb_switch_rwsem ;
   wait_queue_head_t wb_waitq ;
   struct device *dev ;
   struct device *owner ;
   struct timer_list laptop_mode_wb_timer ;
   struct dentry *debug_dir ;
};
#line 306 
struct bio_set;
#line 307 
struct bio_integrity_payload;
#line 308  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backing-dev-defs.h"
typedef void bio_end_io_t(struct bio *);
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk_types.h"
typedef u8 blk_status_t;
#line 112  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk_types.h"
struct bio_issue {
   u64 value ;
};
#line 144 
struct blkcg_gq;
#line 144  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk_types.h"
union __anonunion_719 {
   struct bio_integrity_payload *bi_integrity ;
};
#line 144  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk_types.h"
struct bio {
   struct bio *bi_next ;
   struct gendisk *bi_disk ;
   unsigned int bi_opf ;
   unsigned short bi_flags ;
   unsigned short bi_ioprio ;
   unsigned short bi_write_hint ;
   blk_status_t bi_status ;
   u8 bi_partno ;
   atomic_t __bi_remaining ;
   struct bvec_iter bi_iter ;
   bio_end_io_t *bi_end_io ;
   void *bi_private ;
   struct blkcg_gq *bi_blkg ;
   struct bio_issue bi_issue ;
   u64 bi_iocost_cost ;
   union __anonunion_719 __anonCompField_bio_163 ;
   unsigned short bi_vcnt ;
   unsigned short bi_max_vecs ;
   atomic_t __bi_cnt ;
   struct bio_vec *bi_io_vec ;
   struct bio_set *bi_pool ;
   struct bio_vec bi_inline_vecs[0U] ;
};
#line 452  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk_types.h"
typedef unsigned int blk_qc_t;
#line 479  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk_types.h"
struct blk_rq_stat {
   u64 mean ;
   u64 min ;
   u64 max ;
   u32 nr_samples ;
   u64 batch ;
};
#line 86  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/genhd.h"
struct disk_stats {
   u64 nsecs[4U] ;
   unsigned long sectors[4U] ;
   unsigned long ios[4U] ;
   unsigned long merges[4U] ;
   unsigned long io_ticks ;
   unsigned long time_in_queue ;
   local_t in_flight[2U] ;
};
#line 103  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/genhd.h"
struct partition_meta_info {
   char uuid[37U] ;
   u8 volname[64U] ;
};
#line 108  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/genhd.h"
struct hd_struct {
   sector_t start_sect ;
   sector_t nr_sects ;
   seqcount_t nr_sects_seq ;
   sector_t alignment_offset ;
   unsigned int discard_alignment ;
   struct device __dev ;
   struct kobject *holder_dir ;
   int policy ;
   int partno ;
   struct partition_meta_info *info ;
   int make_it_fail ;
   unsigned long stamp ;
   struct disk_stats *dkstats ;
   struct percpu_ref ref ;
   struct rcu_work rcu_work ;
};
#line 160  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/genhd.h"
struct disk_part_tbl {
   struct callback_head callback_head ;
   int len ;
   struct hd_struct *last_lookup ;
   struct hd_struct *part[] ;
};
#line 166 
struct disk_events;
#line 167 
struct badblocks;
#line 172 
struct blk_integrity_profile;
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/genhd.h"
struct blk_integrity {
   struct blk_integrity_profile *profile ;
   unsigned char flags ;
   unsigned char tuple_size ;
   unsigned char interval_exp ;
   unsigned char tag_size ;
};
#line 182 
struct timer_rand_state;
#line 182  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/genhd.h"
struct gendisk {
   int major ;
   int first_minor ;
   int minors ;
   char disk_name[32U] ;
   char *(*devnode)(struct gendisk *, umode_t *) ;
   unsigned short events ;
   unsigned short event_flags ;
   struct disk_part_tbl *part_tbl ;
   struct hd_struct part0 ;
   struct block_device_operations *fops ;
   struct request_queue *queue ;
   void *private_data ;
   int flags ;
   struct rw_semaphore lookup_sem ;
   struct kobject *slave_dir ;
   struct timer_rand_state *random ;
   atomic_t sync_io ;
   struct disk_events *ev ;
   struct kobject integrity_kobj ;
   int node_id ;
   struct badblocks *bb ;
   struct lockdep_map lockdep_map ;
};
#line 637  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pagemap.h"
typedef void *mempool_alloc_t(gfp_t , void *);
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mempool.h"
typedef void mempool_free_t(void *, void *);
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mempool.h"
struct mempool_s {
   spinlock_t lock ;
   int min_nr ;
   int curr_nr ;
   void **elements ;
   void *pool_data ;
   mempool_alloc_t *alloc ;
   mempool_free_t *free ;
   wait_queue_head_t wait ;
};
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mempool.h"
typedef struct mempool_s mempool_t;
#line 307  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bio.h"
struct bio_integrity_payload {
   struct bio *bip_bio ;
   struct bvec_iter bip_iter ;
   unsigned short bip_slab ;
   unsigned short bip_vcnt ;
   unsigned short bip_max_vcnt ;
   unsigned short bip_flags ;
   struct bvec_iter bio_iter ;
   struct work_struct bip_work ;
   struct bio_vec *bip_vec ;
   struct bio_vec bip_inline_vecs[0U] ;
};
#line 575  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bio.h"
struct bio_list {
   struct bio *head ;
   struct bio *tail ;
};
#line 703  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bio.h"
struct bio_set {
   struct kmem_cache *bio_slab ;
   unsigned int front_pad ;
   mempool_t bio_pool ;
   mempool_t bvec_pool ;
   mempool_t bio_integrity_pool ;
   mempool_t bvec_integrity_pool ;
   spinlock_t rescue_lock ;
   struct bio_list rescue_list ;
   struct work_struct rescue_work ;
   struct workqueue_struct *rescue_workqueue ;
};
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bsg.h"
struct sg_io_v4 {
   __s32 guard ;
   __u32 protocol ;
   __u32 subprotocol ;
   __u32 request_len ;
   __u64 request ;
   __u64 request_tag ;
   __u32 request_attr ;
   __u32 request_priority ;
   __u32 request_extra ;
   __u32 max_response_len ;
   __u64 response ;
   __u32 dout_iovec_count ;
   __u32 dout_xfer_len ;
   __u32 din_iovec_count ;
   __u32 din_xfer_len ;
   __u64 dout_xferp ;
   __u64 din_xferp ;
   __u32 timeout ;
   __u32 flags ;
   __u64 usr_ptr ;
   __u32 spare_in ;
   __u32 driver_status ;
   __u32 transport_status ;
   __u32 device_status ;
   __u32 retry_delay ;
   __u32 info ;
   __u32 duration ;
   __u32 response_len ;
   __s32 din_resid ;
   __s32 dout_resid ;
   __u64 generated_tag ;
   __u32 spare_out ;
   __u32 padding ;
};
#line 65 
struct request;
#line 10  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bsg.h"
struct bsg_ops {
   int (*check_proto)(struct sg_io_v4 *) ;
   int (*fill_hdr)(struct request *, struct sg_io_v4 *, fmode_t ) ;
   int (*complete_rq)(struct request *, struct sg_io_v4 *) ;
   void (*free_rq)(struct request *) ;
};
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bsg.h"
struct bsg_class_device {
   struct device *class_dev ;
   int minor ;
   struct request_queue *queue ;
   struct bsg_ops *ops ;
};
#line 94  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/blkzoned.h"
struct blk_zone {
   __u64 start ;
   __u64 len ;
   __u64 wp ;
   __u8 type ;
   __u8 cond ;
   __u8 non_seq ;
   __u8 reset ;
   __u8 reserved[36U] ;
};
#line 134 
struct elevator_queue;
#line 135 
struct blk_trace;
#line 138 
struct blk_flush_queue;
#line 139 
struct pr_ops;
#line 140 
struct rq_qos;
#line 141 
struct blk_queue_stats;
#line 142 
struct blk_stat_callback;
#line 143  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/blkzoned.h"
typedef void rq_end_io_fn(struct request *, blk_status_t );
#line 63  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
typedef __u32 req_flags_t;
#line 67 
enum mq_rq_state {
    MQ_RQ_IDLE = 0,
    MQ_RQ_IN_FLIGHT = 1,
    MQ_RQ_COMPLETE = 2
};
#line 132 
struct blk_mq_ctx;
#line 132 
struct blk_mq_hw_ctx;
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
union __anonunion_722 {
   struct hlist_node hash ;
   struct list_head ipi_list ;
};
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
union __anonunion_723 {
   struct rb_node rb_node ;
   struct bio_vec special_vec ;
   void *completion_data ;
   int error_count ;
};
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
struct __anonstruct_elv_725 {
   struct io_cq *icq ;
   void *priv[2U] ;
};
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
struct __anonstruct_flush_726 {
   unsigned int seq ;
   struct list_head list ;
   rq_end_io_fn *saved_end_io ;
};
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
union __anonunion_724 {
   struct __anonstruct_elv_725 elv ;
   struct __anonstruct_flush_726 flush ;
};
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
union __anonunion_727 {
   struct __call_single_data csd ;
   u64 fifo_time ;
};
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
struct request {
   struct request_queue *q ;
   struct blk_mq_ctx *mq_ctx ;
   struct blk_mq_hw_ctx *mq_hctx ;
   unsigned int cmd_flags ;
   req_flags_t rq_flags ;
   int tag ;
   int internal_tag ;
   unsigned int __data_len ;
   sector_t __sector ;
   struct bio *bio ;
   struct bio *biotail ;
   struct list_head queuelist ;
   union __anonunion_722 __anonCompField_request_164 ;
   union __anonunion_723 __anonCompField_request_165 ;
   union __anonunion_724 __anonCompField_request_166 ;
   struct gendisk *rq_disk ;
   struct hd_struct *part ;
   u64 alloc_time_ns ;
   u64 start_time_ns ;
   u64 io_start_time_ns ;
   unsigned short wbt_flags ;
   unsigned short stats_sectors ;
   unsigned short nr_phys_segments ;
   unsigned short nr_integrity_segments ;
   unsigned short write_hint ;
   unsigned short ioprio ;
   unsigned int extra_len ;
   enum mq_rq_state state ;
   refcount_t ref ;
   unsigned int timeout ;
   unsigned long deadline ;
   union __anonunion_727 __anonCompField_request_167 ;
   rq_end_io_fn *end_io ;
   void *end_io_data ;
};
#line 285 
struct elevator_type;
#line 286 
struct blk_mq_debugfs_attr;
#line 287 
enum elv_merge {
    ELEVATOR_NO_MERGE = 0,
    ELEVATOR_FRONT_MERGE = 1,
    ELEVATOR_BACK_MERGE = 2,
    ELEVATOR_DISCARD_MERGE = 3
};
#line 294 
struct blk_mq_alloc_data;
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/elevator.h"
struct elevator_mq_ops {
   int (*init_sched)(struct request_queue *, struct elevator_type *) ;
   void (*exit_sched)(struct elevator_queue *) ;
   int (*init_hctx)(struct blk_mq_hw_ctx *, unsigned int ) ;
   void (*exit_hctx)(struct blk_mq_hw_ctx *, unsigned int ) ;
   void (*depth_updated)(struct blk_mq_hw_ctx *) ;
   bool (*allow_merge)(struct request_queue *, struct request *, struct bio *) ;
   bool (*bio_merge)(struct blk_mq_hw_ctx *, struct bio *, unsigned int ) ;
   int (*request_merge)(struct request_queue *, struct request **, struct bio *) ;
   void (*request_merged)(struct request_queue *, struct request *, enum elv_merge ) ;
   void (*requests_merged)(struct request_queue *, struct request *, struct request *) ;
   void (*limit_depth)(unsigned int , struct blk_mq_alloc_data *) ;
   void (*prepare_request)(struct request *, struct bio *) ;
   void (*finish_request)(struct request *) ;
   void (*insert_requests)(struct blk_mq_hw_ctx *, struct list_head *, bool ) ;
   struct request *(*dispatch_request)(struct blk_mq_hw_ctx *) ;
   bool (*has_work)(struct blk_mq_hw_ctx *) ;
   void (*completed_request)(struct request *, u64 ) ;
   void (*requeue_request)(struct request *) ;
   struct request *(*former_request)(struct request_queue *, struct request *) ;
   struct request *(*next_request)(struct request_queue *, struct request *) ;
   void (*init_icq)(struct io_cq *) ;
   void (*exit_icq)(struct io_cq *) ;
};
#line 57  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/elevator.h"
struct elv_fs_entry {
   struct attribute attr ;
   ssize_t (*show)(struct elevator_queue *, char *) ;
   ssize_t (*store)(struct elevator_queue *, char *, size_t ) ;
};
#line 66  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/elevator.h"
struct elevator_type {
   struct kmem_cache *icq_cache ;
   struct elevator_mq_ops ops ;
   size_t icq_size ;
   size_t icq_align ;
   struct elv_fs_entry *elevator_attrs ;
   char *elevator_name ;
   char *elevator_alias ;
   unsigned int elevator_features ;
   struct module *elevator_owner ;
   struct blk_mq_debugfs_attr *queue_debugfs_attrs ;
   struct blk_mq_debugfs_attr *hctx_debugfs_attrs ;
   char icq_cache_name[22U] ;
   struct list_head list ;
};
#line 101  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/elevator.h"
struct elevator_queue {
   struct elevator_type *type ;
   void *elevator_data ;
   struct kobject kobj ;
   struct mutex sysfs_lock ;
   unsigned int registered : 1 ;
   struct hlist_head hash[64U] ;
};
#line 153  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/elevator.h"
typedef blk_qc_t make_request_fn(struct request_queue *, struct bio *);
#line 291  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
typedef int dma_drain_needed_fn(struct request *);
#line 304 
enum blk_zoned_model {
    BLK_ZONED_NONE = 0,
    BLK_ZONED_HA = 1,
    BLK_ZONED_HM = 2
};
#line 320  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
struct queue_limits {
   unsigned long bounce_pfn ;
   unsigned long seg_boundary_mask ;
   unsigned long virt_boundary_mask ;
   unsigned int max_hw_sectors ;
   unsigned int max_dev_sectors ;
   unsigned int chunk_sectors ;
   unsigned int max_sectors ;
   unsigned int max_segment_size ;
   unsigned int physical_block_size ;
   unsigned int logical_block_size ;
   unsigned int alignment_offset ;
   unsigned int io_min ;
   unsigned int io_opt ;
   unsigned int max_discard_sectors ;
   unsigned int max_hw_discard_sectors ;
   unsigned int max_write_same_sectors ;
   unsigned int max_write_zeroes_sectors ;
   unsigned int discard_granularity ;
   unsigned int discard_alignment ;
   unsigned short max_segments ;
   unsigned short max_integrity_segments ;
   unsigned short max_discard_segments ;
   unsigned char misaligned ;
   unsigned char discard_misaligned ;
   unsigned char raid_partial_stripes_expensive ;
   enum blk_zoned_model zoned ;
};
#line 394 
struct blk_mq_ops;
#line 394 
struct throtl_data;
#line 394 
struct blk_mq_tag_set;
#line 394  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
struct request_queue {
   struct request *last_merge ;
   struct elevator_queue *elevator ;
   struct blk_queue_stats *stats ;
   struct rq_qos *rq_qos ;
   make_request_fn *make_request_fn ;
   dma_drain_needed_fn *dma_drain_needed ;
   struct blk_mq_ops *mq_ops ;
   struct blk_mq_ctx *queue_ctx ;
   unsigned int queue_depth ;
   struct blk_mq_hw_ctx **queue_hw_ctx ;
   unsigned int nr_hw_queues ;
   struct backing_dev_info *backing_dev_info ;
   void *queuedata ;
   unsigned long queue_flags ;
   atomic_t pm_only ;
   int id ;
   gfp_t bounce_gfp ;
   spinlock_t queue_lock ;
   struct kobject kobj ;
   struct kobject *mq_kobj ;
   struct blk_integrity integrity ;
   struct device *dev ;
   int rpm_status ;
   unsigned int nr_pending ;
   unsigned long nr_requests ;
   unsigned int dma_drain_size ;
   void *dma_drain_buffer ;
   unsigned int dma_pad_mask ;
   unsigned int dma_alignment ;
   unsigned int rq_timeout ;
   int poll_nsec ;
   struct blk_stat_callback *poll_cb ;
   struct blk_rq_stat poll_stat[16U] ;
   struct timer_list timeout ;
   struct work_struct timeout_work ;
   struct list_head icq_list ;
   unsigned long blkcg_pols[1U] ;
   struct blkcg_gq *root_blkg ;
   struct list_head blkg_list ;
   struct queue_limits limits ;
   unsigned int required_elevator_features ;
   unsigned int nr_zones ;
   unsigned long *conv_zones_bitmap ;
   unsigned long *seq_zones_wlock ;
   unsigned int sg_timeout ;
   unsigned int sg_reserved_size ;
   int node ;
   struct blk_trace *blk_trace ;
   struct mutex blk_trace_mutex ;
   struct blk_flush_queue *fq ;
   struct list_head requeue_list ;
   spinlock_t requeue_lock ;
   struct delayed_work requeue_work ;
   struct mutex sysfs_lock ;
   struct mutex sysfs_dir_lock ;
   struct list_head unused_hctx_list ;
   spinlock_t unused_hctx_lock ;
   int mq_freeze_depth ;
   struct bsg_class_device bsg_dev ;
   struct throtl_data *td ;
   struct callback_head callback_head ;
   wait_queue_head_t mq_freeze_wq ;
   struct mutex mq_freeze_lock ;
   struct percpu_ref q_usage_counter ;
   struct blk_mq_tag_set *tag_set ;
   struct list_head tag_set_list ;
   struct bio_set bio_split ;
   struct dentry *debugfs_dir ;
   struct dentry *sched_debugfs_dir ;
   struct dentry *rqos_debugfs_dir ;
   bool mq_sysfs_init_done ;
   size_t cmd_size ;
   struct work_struct release_work ;
   u64 write_hints[5U] ;
};
#line 1160  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
struct blk_plug {
   struct list_head mq_list ;
   struct list_head cb_list ;
   unsigned short rq_count ;
   bool multiple_queues ;
};
#line 1514  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
struct blk_integrity_iter {
   void *prot_buf ;
   void *data_buf ;
   sector_t seed ;
   unsigned int data_size ;
   unsigned short interval ;
   char *disk_name ;
};
#line 1522  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
typedef blk_status_t integrity_processing_fn(struct blk_integrity_iter *);
#line 1524  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
typedef void integrity_prepare_fn(struct request *);
#line 1525  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
typedef void integrity_complete_fn(struct request *, unsigned int );
#line 1527  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
struct blk_integrity_profile {
   integrity_processing_fn *generate_fn ;
   integrity_processing_fn *verify_fn ;
   integrity_prepare_fn *prepare_fn ;
   integrity_complete_fn *complete_fn ;
   char *name ;
};
#line 1693  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
struct block_device_operations {
   int (*open)(struct block_device *, fmode_t ) ;
   void (*release)(struct gendisk *, fmode_t ) ;
   int (*rw_page)(struct block_device *, sector_t , struct page *, unsigned int ) ;
   int (*ioctl)(struct block_device *, fmode_t , unsigned int , unsigned long ) ;
   int (*compat_ioctl)(struct block_device *, fmode_t , unsigned int , unsigned long ) ;
   unsigned int (*check_events)(struct gendisk *, unsigned int ) ;
   int (*media_changed)(struct gendisk *) ;
   void (*unlock_native_capacity)(struct gendisk *) ;
   int (*revalidate_disk)(struct gendisk *) ;
   int (*getgeo)(struct block_device *, struct hd_geometry *) ;
   void (*swap_slot_free_notify)(struct block_device *, unsigned long ) ;
   int (*report_zones)(struct gendisk *, sector_t , unsigned int , int (*)(struct blk_zone *, unsigned int , void *), void *) ;
   struct module *owner ;
   struct pr_ops *pr_ops ;
};
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk-cgroup.h"
struct blkcg_policy_data;
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk-cgroup.h"
struct blkcg {
   struct cgroup_subsys_state css ;
   spinlock_t lock ;
   struct xarray blkg_tree ;
   struct blkcg_gq *blkg_hint ;
   struct hlist_head blkg_list ;
   struct blkcg_policy_data *cpd[5U] ;
   struct list_head all_blkcgs_node ;
   struct list_head cgwb_list ;
   refcount_t cgwb_refcnt ;
};
#line 63  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk-cgroup.h"
struct blkg_iostat {
   u64 bytes[3U] ;
   u64 ios[3U] ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk-cgroup.h"
struct blkg_iostat_set {
   struct u64_stats_sync sync ;
   struct blkg_iostat cur ;
   struct blkg_iostat last ;
};
#line 85  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk-cgroup.h"
struct blkg_policy_data {
   struct blkcg_gq *blkg ;
   int plid ;
};
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk-cgroup.h"
struct blkcg_policy_data {
   struct blkcg *blkcg ;
   int plid ;
};
#line 105  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk-cgroup.h"
struct blkcg_gq {
   struct request_queue *q ;
   struct list_head q_node ;
   struct hlist_node blkcg_node ;
   struct blkcg *blkcg ;
   struct bdi_writeback_congested *wb_congested ;
   struct blkcg_gq *parent ;
   struct percpu_ref refcnt ;
   bool online ;
   struct blkg_iostat_set *iostat_cpu ;
   struct blkg_iostat_set iostat ;
   struct blkg_policy_data *pd[5U] ;
   spinlock_t async_bio_lock ;
   struct bio_list async_bios ;
   struct work_struct async_bio_work ;
   atomic_t use_delay ;
   atomic64_t delay_nsec ;
   atomic64_t delay_start ;
   u64 last_delay ;
   int last_use ;
   struct callback_head callback_head ;
};
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/writeback.h"
enum writeback_sync_modes {
    WB_SYNC_NONE = 0,
    WB_SYNC_ALL = 1
};
#line 51  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/writeback.h"
struct writeback_control {
   long nr_to_write ;
   long pages_skipped ;
   loff_t range_start ;
   loff_t range_end ;
   enum writeback_sync_modes sync_mode ;
   unsigned int for_kupdate : 1 ;
   unsigned int for_background : 1 ;
   unsigned int tagged_writepages : 1 ;
   unsigned int for_reclaim : 1 ;
   unsigned int range_cyclic : 1 ;
   unsigned int for_sync : 1 ;
   unsigned int no_cgroup_owner : 1 ;
   unsigned int punt_to_cgroup : 1 ;
   struct bdi_writeback *wb ;
   struct inode *inode ;
   int wb_id ;
   int wb_lcand_id ;
   int wb_tcand_id ;
   size_t wb_bytes ;
   size_t wb_lcand_bytes ;
   size_t wb_tcand_bytes ;
};
#line 129  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/writeback.h"
struct wb_domain {
   spinlock_t lock ;
   struct fprop_global completions ;
   struct timer_list period_timer ;
   unsigned long period_time ;
   unsigned long dirty_limit_tstamp ;
   unsigned long dirty_limit ;
};
#line 69  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct mem_cgroup_id {
   int id ;
   refcount_t ref ;
};
#line 86  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct memcg_vmstats_percpu {
   long stat[38U] ;
   unsigned long events[91U] ;
   unsigned long nr_page_events ;
   unsigned long targets[2U] ;
};
#line 93  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct mem_cgroup_reclaim_iter {
   struct mem_cgroup *position ;
   unsigned int generation ;
};
#line 99  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct lruvec_stat {
   long count[32U] ;
};
#line 107  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct memcg_shrinker_map {
   struct callback_head rcu ;
   unsigned long map[0U] ;
};
#line 115  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct mem_cgroup_per_node {
   struct lruvec lruvec ;
   struct lruvec_stat *lruvec_stat_local ;
   struct lruvec_stat *lruvec_stat_cpu ;
   atomic_long_t lruvec_stat[32U] ;
   unsigned long lru_zone_size[5U][5U] ;
   struct mem_cgroup_reclaim_iter iter ;
   struct memcg_shrinker_map *shrinker_map ;
   struct rb_node tree_node ;
   unsigned long usage_in_excess ;
   bool on_tree ;
   struct mem_cgroup *memcg ;
};
#line 139  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct mem_cgroup_threshold {
   struct eventfd_ctx *eventfd ;
   unsigned long threshold ;
};
#line 145  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct mem_cgroup_threshold_ary {
   int current_threshold ;
   unsigned int size ;
   struct mem_cgroup_threshold entries[0U] ;
};
#line 154  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct mem_cgroup_thresholds {
   struct mem_cgroup_threshold_ary *primary ;
   struct mem_cgroup_threshold_ary *spare ;
};
#line 164 
enum memcg_kmem_state {
    KMEM_NONE = 0,
    KMEM_ALLOCATED = 1,
    KMEM_ONLINE = 2
};
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct memcg_padding {
   char x[0U] ;
} __attribute__((__aligned__(4096)));
#line 190  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct memcg_cgwb_frn {
   u64 bdi_id ;
   int memcg_id ;
   u64 at ;
   struct wb_completion done ;
};
#line 203  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct mem_cgroup {
   struct cgroup_subsys_state css ;
   struct mem_cgroup_id id ;
   struct page_counter memory ;
   struct page_counter swap ;
   struct page_counter memsw ;
   struct page_counter kmem ;
   struct page_counter tcpmem ;
   unsigned long high ;
   struct work_struct high_work ;
   unsigned long soft_limit ;
   struct vmpressure vmpressure ;
   bool use_hierarchy ;
   bool oom_group ;
   bool oom_lock ;
   int under_oom ;
   int swappiness ;
   int oom_kill_disable ;
   struct cgroup_file events_file ;
   struct cgroup_file events_local_file ;
   struct cgroup_file swap_events_file ;
   struct mutex thresholds_lock ;
   struct mem_cgroup_thresholds thresholds ;
   struct mem_cgroup_thresholds memsw_thresholds ;
   struct list_head oom_notify ;
   unsigned long move_charge_at_immigrate ;
   spinlock_t move_lock ;
   unsigned long move_lock_flags ;
   struct memcg_padding _pad1_ ;
   atomic_t moving_account ;
   struct task_struct *move_lock_task ;
   struct memcg_vmstats_percpu *vmstats_local ;
   struct memcg_vmstats_percpu *vmstats_percpu ;
   struct memcg_padding _pad2_ ;
   atomic_long_t vmstats[38U] ;
   atomic_long_t vmevents[91U] ;
   atomic_long_t memory_events[7U] ;
   atomic_long_t memory_events_local[7U] ;
   unsigned long socket_pressure ;
   bool tcpmem_active ;
   int tcpmem_pressure ;
   int kmemcg_id ;
   enum memcg_kmem_state kmem_state ;
   struct list_head kmem_caches ;
   struct list_head cgwb_list ;
   struct wb_domain cgwb_domain ;
   struct memcg_cgwb_frn cgwb_frn[4U] ;
   struct list_head event_list ;
   spinlock_t event_list_lock ;
   struct deferred_split deferred_split_queue ;
   struct mem_cgroup_per_node *nodeinfo[0U] ;
};
#line 13  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/vdso.h"
struct vdso_image {
   void *data ;
   unsigned long size ;
   unsigned long alt ;
   unsigned long alt_len ;
   long sym_vvar_start ;
   long sym_vvar_page ;
   long sym_pvclock_page ;
   long sym_hvclock_page ;
   long sym_VDSO32_NOTE_MASK ;
   long sym___kernel_sigreturn ;
   long sym___kernel_rt_sigreturn ;
   long sym___kernel_vsyscall ;
   long sym_int80_landing_pad ;
};
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
typedef __u64 Elf64_Addr;
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
typedef __u16 Elf64_Half;
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
typedef __u64 Elf64_Off;
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
typedef __u32 Elf64_Word;
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
typedef __u64 Elf64_Xword;
#line 192  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
struct elf64_sym {
   Elf64_Word st_name ;
   unsigned char st_info ;
   unsigned char st_other ;
   Elf64_Half st_shndx ;
   Elf64_Addr st_value ;
   Elf64_Xword st_size ;
};
#line 200  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
typedef struct elf64_sym Elf64_Sym;
#line 221  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
struct elf64_hdr {
   unsigned char e_ident[16U] ;
   Elf64_Half e_type ;
   Elf64_Half e_machine ;
   Elf64_Word e_version ;
   Elf64_Addr e_entry ;
   Elf64_Off e_phoff ;
   Elf64_Off e_shoff ;
   Elf64_Word e_flags ;
   Elf64_Half e_ehsize ;
   Elf64_Half e_phentsize ;
   Elf64_Half e_phnum ;
   Elf64_Half e_shentsize ;
   Elf64_Half e_shnum ;
   Elf64_Half e_shstrndx ;
};
#line 237  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
typedef struct elf64_hdr Elf64_Ehdr;
#line 316  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
struct elf64_shdr {
   Elf64_Word sh_name ;
   Elf64_Word sh_type ;
   Elf64_Xword sh_flags ;
   Elf64_Addr sh_addr ;
   Elf64_Off sh_offset ;
   Elf64_Xword sh_size ;
   Elf64_Word sh_link ;
   Elf64_Word sh_info ;
   Elf64_Xword sh_addralign ;
   Elf64_Xword sh_entsize ;
};
#line 328  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
typedef struct elf64_shdr Elf64_Shdr;
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/elf.h"
struct kernel_param;
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/moduleparam.h"
struct kernel_param_ops {
   unsigned int flags ;
   int (*set)(char *, struct kernel_param *) ;
   int (*get)(char *, struct kernel_param *) ;
   void (*free)(void *) ;
};
#line 69 
struct kparam_string;
#line 69 
struct kparam_array;
#line 69  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/moduleparam.h"
union __anonunion_746 {
   void *arg ;
   struct kparam_string *str ;
   struct kparam_array *arr ;
};
#line 69  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/moduleparam.h"
struct kernel_param {
   char *name ;
   struct module *mod ;
   struct kernel_param_ops *ops ;
   u16 perm ;
   s8 level ;
   u8 flags ;
   union __anonunion_746 __anonCompField_kernel_param_168 ;
};
#line 86  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/moduleparam.h"
struct kparam_string {
   unsigned int maxlen ;
   char *string ;
};
#line 92  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/moduleparam.h"
struct kparam_array {
   unsigned int max ;
   unsigned int elemsize ;
   unsigned int *num ;
   struct kernel_param_ops *ops ;
   void *elem ;
};
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/error-injection.h"
struct error_injection_entry {
   unsigned long addr ;
   int etype ;
};
#line 8  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/module.h"
struct mod_arch_specific {
   unsigned int num_orcs ;
   int *orc_unwind_ip ;
   struct orc_entry *orc_unwind ;
};
#line 45  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
struct module_param_attrs;
#line 45  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
struct module_kobject {
   struct kobject kobj ;
   struct module *mod ;
   struct kobject *drivers_dir ;
   struct module_param_attrs *mp ;
   struct completion *kobj_completion ;
} __attribute__((__designated_init__));
#line 53  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
struct module_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct module_attribute *, struct module_kobject *, char *) ;
   ssize_t (*store)(struct module_attribute *, struct module_kobject *, char *, size_t ) ;
   void (*setup)(struct module *, char *) ;
   int (*test)(struct module *) ;
   void (*free)(struct module *) ;
};
#line 297 
enum module_state {
    MODULE_STATE_LIVE = 0,
    MODULE_STATE_COMING = 1,
    MODULE_STATE_GOING = 2,
    MODULE_STATE_UNFORMED = 3
};
#line 305  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
struct mod_tree_node {
   struct module *mod ;
   struct latch_tree_node node ;
};
#line 310  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
struct module_layout {
   void *base ;
   unsigned int size ;
   unsigned int text_size ;
   unsigned int ro_size ;
   unsigned int ro_after_init_size ;
   struct mod_tree_node mtn ;
};
#line 334  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
struct mod_kallsyms {
   Elf64_Sym *symtab ;
   unsigned int num_symtab ;
   char *strtab ;
   char *typetab ;
};
#line 342  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
struct klp_modinfo {
   Elf64_Ehdr hdr ;
   Elf64_Shdr *sechdrs ;
   char *secstrings ;
   unsigned int symndx ;
};
#line 350 
struct module_sect_attrs;
#line 350 
struct module_notes_attrs;
#line 350 
struct trace_event_call;
#line 350 
struct trace_eval_map;
#line 350  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
struct module {
   enum module_state state ;
   struct list_head list ;
   char name[56U] ;
   struct module_kobject mkobj ;
   struct module_attribute *modinfo_attrs ;
   char *version ;
   char *srcversion ;
   struct kobject *holders_dir ;
   struct kernel_symbol *syms ;
   s32 *crcs ;
   unsigned int num_syms ;
   struct mutex param_lock ;
   struct kernel_param *kp ;
   unsigned int num_kp ;
   unsigned int num_gpl_syms ;
   struct kernel_symbol *gpl_syms ;
   s32 *gpl_crcs ;
   struct kernel_symbol *unused_syms ;
   s32 *unused_crcs ;
   unsigned int num_unused_syms ;
   unsigned int num_unused_gpl_syms ;
   struct kernel_symbol *unused_gpl_syms ;
   s32 *unused_gpl_crcs ;
   bool sig_ok ;
   bool async_probe_requested ;
   struct kernel_symbol *gpl_future_syms ;
   s32 *gpl_future_crcs ;
   unsigned int num_gpl_future_syms ;
   unsigned int num_exentries ;
   struct exception_table_entry *extable ;
   int (*init)(void) ;
   struct module_layout core_layout ;
   struct module_layout init_layout ;
   struct mod_arch_specific arch ;
   unsigned long taints ;
   unsigned int num_bugs ;
   struct list_head bug_list ;
   struct bug_entry *bug_table ;
   struct mod_kallsyms *kallsyms ;
   struct mod_kallsyms core_kallsyms ;
   struct module_sect_attrs *sect_attrs ;
   struct module_notes_attrs *notes_attrs ;
   char *args ;
   void *percpu ;
   unsigned int percpu_size ;
   unsigned int num_tracepoints ;
   tracepoint_ptr_t *tracepoints_ptrs ;
   unsigned int num_srcu_structs ;
   struct srcu_struct **srcu_struct_ptrs ;
   unsigned int num_bpf_raw_events ;
   struct bpf_raw_event_map *bpf_raw_events ;
   struct jump_entry *jump_entries ;
   unsigned int num_jump_entries ;
   unsigned int num_trace_bprintk_fmt ;
   char **trace_bprintk_fmt_start ;
   struct trace_event_call **trace_events ;
   unsigned int num_trace_events ;
   struct trace_eval_map **trace_evals ;
   unsigned int num_trace_evals ;
   unsigned int num_ftrace_callsites ;
   unsigned long *ftrace_callsites ;
   bool klp ;
   bool klp_alive ;
   struct klp_modinfo *klp_info ;
   struct list_head source_list ;
   struct list_head target_list ;
   void (*exit)(void) ;
   atomic_t refcnt ;
   ctor_fn_t *ctors ;
   unsigned int num_ctors ;
   struct error_injection_entry *ei_funcs ;
   unsigned int num_ei_funcs ;
} __attribute__((__designated_init__, __aligned__(64)));
#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/gen_stats.h"
struct gnet_stats_queue {
   __u32 qlen ;
   __u32 backlog ;
   __u32 drops ;
   __u32 requeues ;
   __u32 overlimits ;
};
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/gen_stats.h"
struct gnet_stats_basic_packed {
   __u64 bytes ;
   __u64 packets ;
};
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/gen_stats.h"
struct gnet_stats_basic_cpu {
   struct gnet_stats_basic_packed bstats ;
   struct u64_stats_sync syncp ;
} __attribute__((__aligned__(16)));
#line 20 
struct net_rate_estimator;
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/gen_stats.h"
struct gnet_dump {
   spinlock_t *lock ;
   struct sk_buff *skb ;
   struct nlattr *tail ;
   int compat_tc_stats ;
   int compat_xstats ;
   int padattr ;
   void *xstats ;
   int xstats_len ;
   struct tc_stats tc_stats ;
};
#line 173  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jhash.h"
struct rhash_lock_head {
   };
#line 76  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable.h"
struct bucket_table {
   unsigned int size ;
   unsigned int nest ;
   u32 hash_rnd ;
   struct list_head walkers ;
   struct callback_head rcu ;
   struct bucket_table *future_tbl ;
   struct lockdep_map dep_map ;
   struct rhash_lock_head *buckets[] ;
};
#line 281  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow_offload.h"
struct flow_block {
   struct list_head cb_list ;
};
#line 298  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow_offload.h"
typedef int flow_setup_cb_t(enum tc_setup_type , void *, void *);
#line 412 
struct Qdisc_ops;
#line 413 
struct qdisc_walker;
#line 414 
struct tcf_walker;
#line 41  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct qdisc_size_table {
   struct callback_head rcu ;
   struct list_head list ;
   struct tc_sizespec szopts ;
   int refcnt ;
   u16 data[] ;
};
#line 50  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct qdisc_skb_head {
   struct sk_buff *head ;
   struct sk_buff *tail ;
   __u32 qlen ;
   spinlock_t lock ;
};
#line 57  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct Qdisc {
   int (*enqueue)(struct sk_buff *, struct Qdisc *, struct sk_buff **) ;
   struct sk_buff *(*dequeue)(struct Qdisc *) ;
   unsigned int flags ;
   u32 limit ;
   struct Qdisc_ops *ops ;
   struct qdisc_size_table *stab ;
   struct hlist_node hash ;
   u32 handle ;
   u32 parent ;
   struct netdev_queue *dev_queue ;
   struct net_rate_estimator *rate_est ;
   struct gnet_stats_basic_cpu *cpu_bstats ;
   struct gnet_stats_queue *cpu_qstats ;
   int padded ;
   refcount_t refcnt ;
   struct sk_buff_head gso_skb ;
   struct qdisc_skb_head q ;
   struct gnet_stats_basic_packed bstats ;
   seqcount_t running ;
   struct gnet_stats_queue qstats ;
   unsigned long state ;
   struct Qdisc *next_sched ;
   struct sk_buff_head skb_bad_txq ;
   spinlock_t busylock ;
   spinlock_t seqlock ;
   bool empty ;
   struct callback_head rcu ;
};
#line 195 
struct tcf_block;
#line 195  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct Qdisc_class_ops {
   unsigned int flags ;
   struct netdev_queue *(*select_queue)(struct Qdisc *, struct tcmsg *) ;
   int (*graft)(struct Qdisc *, unsigned long , struct Qdisc *, struct Qdisc **, struct netlink_ext_ack *) ;
   struct Qdisc *(*leaf)(struct Qdisc *, unsigned long ) ;
   void (*qlen_notify)(struct Qdisc *, unsigned long ) ;
   unsigned long (*find)(struct Qdisc *, u32 ) ;
   int (*change)(struct Qdisc *, u32 , u32 , struct nlattr **, unsigned long *, struct netlink_ext_ack *) ;
   int (*delete)(struct Qdisc *, unsigned long ) ;
   void (*walk)(struct Qdisc *, struct qdisc_walker *) ;
   struct tcf_block *(*tcf_block)(struct Qdisc *, unsigned long , struct netlink_ext_ack *) ;
   unsigned long (*bind_tcf)(struct Qdisc *, unsigned long , u32 ) ;
   void (*unbind_tcf)(struct Qdisc *, unsigned long ) ;
   int (*dump)(struct Qdisc *, unsigned long , struct sk_buff *, struct tcmsg *) ;
   int (*dump_stats)(struct Qdisc *, unsigned long , struct gnet_dump *) ;
};
#line 235  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct Qdisc_ops {
   struct Qdisc_ops *next ;
   struct Qdisc_class_ops *cl_ops ;
   char id[16U] ;
   int priv_size ;
   unsigned int static_flags ;
   int (*enqueue)(struct sk_buff *, struct Qdisc *, struct sk_buff **) ;
   struct sk_buff *(*dequeue)(struct Qdisc *) ;
   struct sk_buff *(*peek)(struct Qdisc *) ;
   int (*init)(struct Qdisc *, struct nlattr *, struct netlink_ext_ack *) ;
   void (*reset)(struct Qdisc *) ;
   void (*destroy)(struct Qdisc *) ;
   int (*change)(struct Qdisc *, struct nlattr *, struct netlink_ext_ack *) ;
   void (*attach)(struct Qdisc *) ;
   int (*change_tx_queue_len)(struct Qdisc *, unsigned int ) ;
   int (*dump)(struct Qdisc *, struct sk_buff *) ;
   int (*dump_stats)(struct Qdisc *, struct gnet_dump *) ;
   void (*ingress_block_set)(struct Qdisc *, u32 ) ;
   void (*egress_block_set)(struct Qdisc *, u32 ) ;
   u32 (*ingress_block_get)(struct Qdisc *) ;
   u32 (*egress_block_get)(struct Qdisc *) ;
   struct module *owner ;
};
#line 272  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct __anonstruct_820 {
   unsigned long class ;
   u32 classid ;
};
#line 272 
struct tcf_proto;
#line 272  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct __anonstruct_821 {
   bool ingress ;
   struct gnet_stats_queue *qstats ;
};
#line 272  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
union __anonunion_819 {
   struct __anonstruct_820 __anonCompField___anonunion_819_170 ;
   struct tcf_proto *goto_tp ;
   struct __anonstruct_821 __anonCompField___anonunion_819_171 ;
};
#line 272  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct tcf_result {
   union __anonunion_819 __anonCompField_tcf_result_172 ;
};
#line 287 
struct tcf_chain;
#line 290  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct tcf_proto_ops {
   struct list_head head ;
   char kind[16U] ;
   int (*classify)(struct sk_buff *, struct tcf_proto *, struct tcf_result *) ;
   int (*init)(struct tcf_proto *) ;
   void (*destroy)(struct tcf_proto *, bool , struct netlink_ext_ack *) ;
   void *(*get)(struct tcf_proto *, u32 ) ;
   void (*put)(struct tcf_proto *, void *) ;
   int (*change)(struct net *, struct sk_buff *, struct tcf_proto *, unsigned long , u32 , struct nlattr **, void **, bool , bool , struct netlink_ext_ack *) ;
   int (*delete)(struct tcf_proto *, void *, bool *, bool , struct netlink_ext_ack *) ;
   bool (*delete_empty)(struct tcf_proto *) ;
   void (*walk)(struct tcf_proto *, struct tcf_walker *, bool ) ;
   int (*reoffload)(struct tcf_proto *, bool , flow_setup_cb_t *, void *, struct netlink_ext_ack *) ;
   void (*hw_add)(struct tcf_proto *, void *) ;
   void (*hw_del)(struct tcf_proto *, void *) ;
   void (*bind_class)(void *, u32 , unsigned long ) ;
   void *(*tmplt_create)(struct net *, struct tcf_chain *, struct nlattr **, struct netlink_ext_ack *) ;
   void (*tmplt_destroy)(void *) ;
   int (*dump)(struct net *, struct tcf_proto *, void *, struct sk_buff *, struct tcmsg *, bool ) ;
   int (*tmplt_dump)(struct sk_buff *, struct net *, void *) ;
   struct module *owner ;
   int flags ;
};
#line 348  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct tcf_proto {
   struct tcf_proto *next ;
   void *root ;
   int (*classify)(struct sk_buff *, struct tcf_proto *, struct tcf_result *) ;
   __be16 protocol ;
   u32 prio ;
   void *data ;
   struct tcf_proto_ops *ops ;
   struct tcf_chain *chain ;
   spinlock_t lock ;
   bool deleting ;
   refcount_t refcnt ;
   struct callback_head rcu ;
   struct hlist_node destroy_ht_node ;
};
#line 386  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct tcf_chain {
   struct mutex filter_chain_lock ;
   struct tcf_proto *filter_chain ;
   struct list_head list ;
   struct tcf_block *block ;
   u32 index ;
   unsigned int refcnt ;
   unsigned int action_refcnt ;
   bool explicitly_created ;
   bool flushing ;
   struct tcf_proto_ops *tmplt_ops ;
   void *tmplt_priv ;
   struct callback_head rcu ;
};
#line 402  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct __anonstruct_chain0_823 {
   struct tcf_chain *chain ;
   struct list_head filter_chain_list ;
};
#line 402  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct tcf_block {
   struct mutex lock ;
   struct list_head chain_list ;
   u32 index ;
   refcount_t refcnt ;
   struct net *net ;
   struct Qdisc *q ;
   struct rw_semaphore cb_lock ;
   struct flow_block flow_block ;
   struct list_head owner_list ;
   bool keep_dst ;
   atomic_t offloadcnt ;
   unsigned int nooffloaddevcnt ;
   unsigned int lockeddevcnt ;
   struct __anonstruct_chain0_823 chain0 ;
   struct callback_head rcu ;
   struct hlist_head proto_destroy_ht[128U] ;
   struct mutex proto_destroy_lock ;
};
#line 1269  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct mini_Qdisc {
   struct tcf_proto *filter_list ;
   struct gnet_stats_basic_cpu *cpu_bstats ;
   struct gnet_stats_queue *cpu_qstats ;
   struct callback_head rcu ;
};
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/filter.h"
struct sock_filter {
   __u16 code ;
   __u8 jt ;
   __u8 jf ;
   __u32 k ;
};
#line 35 
struct sock_reuseport;
#line 513  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/filter.h"
struct sock_fprog_kern {
   u16 len ;
   struct sock_filter *filter ;
};
#line 526  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/filter.h"
union __anonunion_836 {
   struct sock_filter insns[0U] ;
   struct bpf_insn insnsi[0U] ;
};
#line 526  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/filter.h"
struct bpf_prog {
   u16 pages ;
   u16 jited : 1 ;
   u16 jit_requested : 1 ;
   u16 gpl_compatible : 1 ;
   u16 cb_access : 1 ;
   u16 dst_needed : 1 ;
   u16 blinded : 1 ;
   u16 is_func : 1 ;
   u16 kprobe_override : 1 ;
   u16 has_callchain_buf : 1 ;
   u16 enforce_expected_attach_type : 1 ;
   enum bpf_prog_type type ;
   enum bpf_attach_type expected_attach_type ;
   u32 len ;
   u32 jited_len ;
   u8 tag[8U] ;
   struct bpf_prog_aux *aux ;
   struct sock_fprog_kern *orig_prog ;
   unsigned int (*bpf_func)(void *, struct bpf_insn *) ;
   union __anonunion_836 __anonCompField_bpf_prog_174 ;
};
#line 554  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/filter.h"
struct sk_filter {
   refcount_t refcnt ;
   struct callback_head rcu ;
   struct bpf_prog *prog ;
};
#line 36  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/poll.h"
struct pollfd {
   int fd ;
   short events ;
   short revents ;
};
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/poll.h"
struct poll_table_struct {
   void (*_qproc)(struct file *, wait_queue_head_t *, struct poll_table_struct *) ;
   __poll_t _key ;
};
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/dst.h"
struct lwtunnel_state;
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/dst.h"
struct dst_entry {
   struct net_device *dev ;
   struct dst_ops *ops ;
   unsigned long _metrics ;
   unsigned long expires ;
   struct xfrm_state *xfrm ;
   int (*input)(struct sk_buff *) ;
   int (*output)(struct net *, struct sock *, struct sk_buff *) ;
   unsigned short flags ;
   short obsolete ;
   unsigned short header_len ;
   unsigned short trailer_len ;
   atomic_t __refcnt ;
   int __use ;
   unsigned long lastuse ;
   struct lwtunnel_state *lwtstate ;
   struct callback_head callback_head ;
   short error ;
   short __pad ;
   __u32 tclassid ;
};
#line 82  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/dst.h"
struct dst_metrics {
   u32 metrics[17U] ;
   refcount_t refcnt ;
} __attribute__((__aligned__(4)));
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/l3mdev.h"
struct l3mdev_ops {
   u32 (*l3mdev_fib_table)(struct net_device *) ;
   struct sk_buff *(*l3mdev_l3_rcv)(struct net_device *, struct sk_buff *, u16 ) ;
   struct sk_buff *(*l3mdev_l3_out)(struct net_device *, struct sock *, struct sk_buff *, u16 ) ;
   struct dst_entry *(*l3mdev_link_scope_lookup)(struct net_device *, struct flowi6 *) ;
};
#line 202  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/l3mdev.h"
struct __anonstruct_socket_lock_t_846 {
   spinlock_t slock ;
   int owned ;
   wait_queue_head_t wq ;
   struct lockdep_map dep_map ;
};
#line 202  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/l3mdev.h"
typedef struct __anonstruct_socket_lock_t_846 socket_lock_t;
#line 108  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
struct proto;
#line 109  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
typedef __u32 __portpair;
#line 114  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
typedef __u64 __addrpair;
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
struct __anonstruct_848 {
   __be32 skc_daddr ;
   __be32 skc_rcv_saddr ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_847 {
   __addrpair skc_addrpair ;
   struct __anonstruct_848 __anonCompField___anonunion_847_176 ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_849 {
   unsigned int skc_hash ;
   __u16 skc_u16hashes[2U] ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
struct __anonstruct_851 {
   __be16 skc_dport ;
   __u16 skc_num ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_850 {
   __portpair skc_portpair ;
   struct __anonstruct_851 __anonCompField___anonunion_850_179 ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_852 {
   struct hlist_node skc_bind_node ;
   struct hlist_node skc_portaddr_node ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_853 {
   unsigned long skc_flags ;
   struct sock *skc_listener ;
   struct inet_timewait_death_row *skc_tw_dr ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_854 {
   struct hlist_node skc_node ;
   struct hlist_nulls_node skc_nulls_node ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_855 {
   int skc_incoming_cpu ;
   u32 skc_rcv_wnd ;
   u32 skc_tw_rcv_nxt ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_856 {
   u32 skc_rxhash ;
   u32 skc_window_clamp ;
   u32 skc_tw_snd_nxt ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
struct sock_common {
   union __anonunion_847 __anonCompField_sock_common_177 ;
   union __anonunion_849 __anonCompField_sock_common_178 ;
   union __anonunion_850 __anonCompField_sock_common_180 ;
   unsigned short skc_family ;
   unsigned char skc_state ;
   unsigned char skc_reuse : 4 ;
   unsigned char skc_reuseport : 1 ;
   unsigned char skc_ipv6only : 1 ;
   unsigned char skc_net_refcnt : 1 ;
   int skc_bound_dev_if ;
   union __anonunion_852 __anonCompField_sock_common_181 ;
   struct proto *skc_prot ;
   possible_net_t skc_net ;
   struct in6_addr skc_v6_daddr ;
   struct in6_addr skc_v6_rcv_saddr ;
   atomic64_t skc_cookie ;
   union __anonunion_853 __anonCompField_sock_common_182 ;
   int skc_dontcopy_begin[0U] ;
   union __anonunion_854 __anonCompField_sock_common_183 ;
   unsigned short skc_tx_queue_mapping ;
   unsigned short skc_rx_queue_mapping ;
   union __anonunion_855 __anonCompField_sock_common_184 ;
   refcount_t skc_refcnt ;
   int skc_dontcopy_end[0U] ;
   union __anonunion_856 __anonCompField_sock_common_185 ;
};
#line 231 
struct bpf_sk_storage;
#line 323  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
struct __anonstruct_sk_backlog_857 {
   atomic_t rmem_alloc ;
   int len ;
   struct sk_buff *head ;
   struct sk_buff *tail ;
};
#line 323  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_858 {
   struct socket_wq *sk_wq ;
   struct socket_wq *sk_wq_raw ;
};
#line 323  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_859 {
   struct sk_buff *sk_send_head ;
   struct rb_root tcp_rtx_queue ;
};
#line 323  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
struct sock {
   struct sock_common __sk_common ;
   socket_lock_t sk_lock ;
   atomic_t sk_drops ;
   int sk_rcvlowat ;
   struct sk_buff_head sk_error_queue ;
   struct sk_buff *sk_rx_skb_cache ;
   struct sk_buff_head sk_receive_queue ;
   struct __anonstruct_sk_backlog_857 sk_backlog ;
   int sk_forward_alloc ;
   unsigned int sk_ll_usec ;
   unsigned int sk_napi_id ;
   int sk_rcvbuf ;
   struct sk_filter *sk_filter ;
   union __anonunion_858 __anonCompField_sock_186 ;
   struct xfrm_policy *sk_policy[2U] ;
   struct dst_entry *sk_rx_dst ;
   struct dst_entry *sk_dst_cache ;
   atomic_t sk_omem_alloc ;
   int sk_sndbuf ;
   int sk_wmem_queued ;
   refcount_t sk_wmem_alloc ;
   unsigned long sk_tsq_flags ;
   union __anonunion_859 __anonCompField_sock_187 ;
   struct sk_buff *sk_tx_skb_cache ;
   struct sk_buff_head sk_write_queue ;
   __s32 sk_peek_off ;
   int sk_write_pending ;
   __u32 sk_dst_pending_confirm ;
   u32 sk_pacing_status ;
   long sk_sndtimeo ;
   struct timer_list sk_timer ;
   __u32 sk_priority ;
   __u32 sk_mark ;
   unsigned long sk_pacing_rate ;
   unsigned long sk_max_pacing_rate ;
   struct page_frag sk_frag ;
   netdev_features_t sk_route_caps ;
   netdev_features_t sk_route_nocaps ;
   netdev_features_t sk_route_forced_caps ;
   int sk_gso_type ;
   unsigned int sk_gso_max_size ;
   gfp_t sk_allocation ;
   __u32 sk_txhash ;
   unsigned int __sk_flags_offset[0U] ;
   unsigned int sk_padding : 1 ;
   unsigned int sk_kern_sock : 1 ;
   unsigned int sk_no_check_tx : 1 ;
   unsigned int sk_no_check_rx : 1 ;
   unsigned int sk_userlocks : 4 ;
   unsigned int sk_protocol : 8 ;
   unsigned int sk_type : 16 ;
   u16 sk_gso_max_segs ;
   u8 sk_pacing_shift ;
   unsigned long sk_lingertime ;
   struct proto *sk_prot_creator ;
   rwlock_t sk_callback_lock ;
   int sk_err ;
   int sk_err_soft ;
   u32 sk_ack_backlog ;
   u32 sk_max_ack_backlog ;
   kuid_t sk_uid ;
   struct pid *sk_peer_pid ;
   struct cred *sk_peer_cred ;
   long sk_rcvtimeo ;
   ktime_t sk_stamp ;
   u16 sk_tsflags ;
   u8 sk_shutdown ;
   u32 sk_tskey ;
   atomic_t sk_zckey ;
   u8 sk_clockid ;
   u8 sk_txtime_deadline_mode : 1 ;
   u8 sk_txtime_report_errors : 1 ;
   u8 sk_txtime_unused : 6 ;
   struct socket *sk_socket ;
   void *sk_user_data ;
   void *sk_security ;
   struct sock_cgroup_data sk_cgrp_data ;
   struct mem_cgroup *sk_memcg ;
   void (*sk_state_change)(struct sock *) ;
   void (*sk_data_ready)(struct sock *) ;
   void (*sk_write_space)(struct sock *) ;
   void (*sk_error_report)(struct sock *) ;
   int (*sk_backlog_rcv)(struct sock *, struct sk_buff *) ;
   struct sk_buff *(*sk_validate_xmit_skb)(struct sock *, struct net_device *, struct sk_buff *) ;
   void (*sk_destruct)(struct sock *) ;
   struct sock_reuseport *sk_reuseport_cb ;
   struct bpf_sk_storage *sk_bpf_storage ;
   struct callback_head sk_rcu ;
};
#line 1048 
struct request_sock_ops;
#line 1049 
struct timewait_sock_ops;
#line 1050 
struct raw_hashinfo;
#line 1051 
struct smc_hashinfo;
#line 1071 
struct udp_table;
#line 1071  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_h_894 {
   struct inet_hashinfo *hashinfo ;
   struct udp_table *udp_table ;
   struct raw_hashinfo *raw_hash ;
   struct smc_hashinfo *smc_hash ;
};
#line 1071  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
struct proto {
   void (*close)(struct sock *, long ) ;
   int (*pre_connect)(struct sock *, struct sockaddr *, int ) ;
   int (*connect)(struct sock *, struct sockaddr *, int ) ;
   int (*disconnect)(struct sock *, int ) ;
   struct sock *(*accept)(struct sock *, int , int *, bool ) ;
   int (*ioctl)(struct sock *, int , unsigned long ) ;
   int (*init)(struct sock *) ;
   void (*destroy)(struct sock *) ;
   void (*shutdown)(struct sock *, int ) ;
   int (*setsockopt)(struct sock *, int , int , char *, unsigned int ) ;
   int (*getsockopt)(struct sock *, int , int , char *, int *) ;
   void (*keepalive)(struct sock *, int ) ;
   int (*compat_setsockopt)(struct sock *, int , int , char *, unsigned int ) ;
   int (*compat_getsockopt)(struct sock *, int , int , char *, int *) ;
   int (*compat_ioctl)(struct sock *, unsigned int , unsigned long ) ;
   int (*sendmsg)(struct sock *, struct msghdr *, size_t ) ;
   int (*recvmsg)(struct sock *, struct msghdr *, size_t , int , int , int *) ;
   int (*sendpage)(struct sock *, struct page *, int , size_t , int ) ;
   int (*bind)(struct sock *, struct sockaddr *, int ) ;
   int (*backlog_rcv)(struct sock *, struct sk_buff *) ;
   void (*release_cb)(struct sock *) ;
   int (*hash)(struct sock *) ;
   void (*unhash)(struct sock *) ;
   void (*rehash)(struct sock *) ;
   int (*get_port)(struct sock *, unsigned short ) ;
   unsigned int inuse_idx ;
   bool (*stream_memory_free)(struct sock *, int ) ;
   bool (*stream_memory_read)(struct sock *) ;
   void (*enter_memory_pressure)(struct sock *) ;
   void (*leave_memory_pressure)(struct sock *) ;
   atomic_long_t *memory_allocated ;
   struct percpu_counter *sockets_allocated ;
   unsigned long *memory_pressure ;
   long *sysctl_mem ;
   int *sysctl_wmem ;
   int *sysctl_rmem ;
   u32 sysctl_wmem_offset ;
   u32 sysctl_rmem_offset ;
   int max_header ;
   bool no_autobind ;
   struct kmem_cache *slab ;
   unsigned int obj_size ;
   slab_flags_t slab_flags ;
   unsigned int useroffset ;
   unsigned int usersize ;
   struct percpu_counter *orphan_count ;
   struct request_sock_ops *rsk_prot ;
   struct timewait_sock_ops *twsk_prot ;
   union __anonunion_h_894 h ;
   struct module *owner ;
   char name[32U] ;
   struct list_head node ;
   int (*diag_destroy)(struct sock *, int ) ;
} __attribute__((__designated_init__));
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/request_sock.h"
struct request_sock_ops {
   int family ;
   unsigned int obj_size ;
   struct kmem_cache *slab ;
   char *slab_name ;
   int (*rtx_syn_ack)(struct sock *, struct request_sock *) ;
   void (*send_ack)(struct sock *, struct sk_buff *, struct request_sock *) ;
   void (*send_reset)(struct sock *, struct sk_buff *) ;
   void (*destructor)(struct request_sock *) ;
   void (*syn_ack_timeout)(struct request_sock *) ;
};
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/request_sock.h"
struct request_sock {
   struct sock_common __req_common ;
   struct request_sock *dl_next ;
   u16 mss ;
   u8 num_retrans ;
   u8 cookie_ts : 1 ;
   u8 num_timeout : 7 ;
   u32 ts_recent ;
   struct timer_list rsk_timer ;
   struct request_sock_ops *rsk_ops ;
   struct sock *sk ;
   u32 *saved_syn ;
   u32 secid ;
   u32 peer_secid ;
};
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/timewait_sock.h"
struct timewait_sock_ops {
   struct kmem_cache *twsk_slab ;
   char *twsk_slab_name ;
   unsigned int twsk_obj_size ;
   int (*twsk_unique)(struct sock *, struct sock *, void *) ;
   void (*twsk_destructor)(struct sock *) ;
};
#line 99  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/if_inet6.h"
struct ip6_sf_list {
   struct ip6_sf_list *sf_next ;
   struct in6_addr sf_addr ;
   unsigned long sf_count[2U] ;
   unsigned char sf_gsresp ;
   unsigned char sf_oldin ;
   unsigned char sf_crcount ;
};
#line 114  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/if_inet6.h"
struct ifmcaddr6 {
   struct in6_addr mca_addr ;
   struct inet6_dev *idev ;
   struct ifmcaddr6 *next ;
   struct ip6_sf_list *mca_sources ;
   struct ip6_sf_list *mca_tomb ;
   unsigned int mca_sfmode ;
   unsigned char mca_crcount ;
   unsigned long mca_sfcount[2U] ;
   struct timer_list mca_timer ;
   unsigned int mca_flags ;
   int mca_users ;
   refcount_t mca_refcnt ;
   spinlock_t mca_lock ;
   unsigned long mca_cstamp ;
   unsigned long mca_tstamp ;
};
#line 140  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/if_inet6.h"
struct ifacaddr6 {
   struct in6_addr aca_addr ;
   struct fib6_info *aca_rt ;
   struct ifacaddr6 *aca_next ;
   struct hlist_node aca_addr_lst ;
   int aca_users ;
   refcount_t aca_refcnt ;
   unsigned long aca_cstamp ;
   unsigned long aca_tstamp ;
   struct callback_head rcu ;
};
#line 156  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/if_inet6.h"
struct ipv6_devstat {
   struct proc_dir_entry *proc_dir_entry ;
   struct ipstats_mib *ipv6 ;
   struct icmpv6_mib_device *icmpv6dev ;
   struct icmpv6msg_mib_device *icmpv6msgdev ;
};
#line 163  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/if_inet6.h"
struct inet6_dev {
   struct net_device *dev ;
   struct list_head addr_list ;
   struct ifmcaddr6 *mc_list ;
   struct ifmcaddr6 *mc_tomb ;
   spinlock_t mc_lock ;
   unsigned char mc_qrv ;
   unsigned char mc_gq_running ;
   unsigned char mc_ifc_count ;
   unsigned char mc_dad_count ;
   unsigned long mc_v1_seen ;
   unsigned long mc_qi ;
   unsigned long mc_qri ;
   unsigned long mc_maxdelay ;
   struct timer_list mc_gq_timer ;
   struct timer_list mc_ifc_timer ;
   struct timer_list mc_dad_timer ;
   struct ifacaddr6 *ac_list ;
   rwlock_t lock ;
   refcount_t refcnt ;
   __u32 if_flags ;
   int dead ;
   u32 desync_factor ;
   u8 rndid[8U] ;
   struct list_head tempaddr_list ;
   struct in6_addr token ;
   struct neigh_parms *nd_parms ;
   struct ipv6_devconf cnf ;
   struct ipv6_devstat stats ;
   struct timer_list rs_timer ;
   __s32 rs_interval ;
   __u8 rs_probes ;
   unsigned long tstamp ;
   struct callback_head rcu ;
};
#line 261 
struct fib6_nh;
#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/if_arp.h"
struct prefix_info;
#line 104  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/ndisc.h"
struct nd_opt_hdr {
   __u8 nd_opt_type ;
   __u8 nd_opt_len ;
} __attribute__((__packed__));
#line 110  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/ndisc.h"
struct ndisc_options {
   struct nd_opt_hdr *nd_opt_array[15U] ;
   struct nd_opt_hdr *nd_opts_ri ;
   struct nd_opt_hdr *nd_opts_ri_end ;
   struct nd_opt_hdr *nd_useropts ;
   struct nd_opt_hdr *nd_useropts_end ;
   struct nd_opt_hdr *nd_802154_opt_array[3U] ;
};
#line 201  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/ndisc.h"
struct ndisc_ops {
   int (*is_useropt)(u8 ) ;
   int (*parse_options)(struct net_device *, struct nd_opt_hdr *, struct ndisc_options *) ;
   void (*update)(struct net_device *, struct neighbour *, u32 , u8 , struct ndisc_options *) ;
   int (*opt_addr_space)(struct net_device *, u8 , struct neighbour *, u8 *, u8 **) ;
   void (*fill_addr_option)(struct net_device *, struct sk_buff *, u8 , u8 *) ;
   void (*prefix_rcv_add_addr)(struct net *, struct net_device *, struct prefix_info *, struct inet6_dev *, struct in6_addr *, int , u32 , bool , bool , __u32 , u32 , bool ) ;
};
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/inetpeer.h"
struct inet_peer_base {
   struct rb_root rb_root ;
   seqlock_t lock ;
   int total ;
};
#line 54  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/ip_fib.h"
struct fib_info;
#line 58  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/ip_fib.h"
struct fib_nh_exception {
   struct fib_nh_exception *fnhe_next ;
   int fnhe_genid ;
   __be32 fnhe_daddr ;
   u32 fnhe_pmtu ;
   bool fnhe_mtu_locked ;
   __be32 fnhe_gw ;
   unsigned long fnhe_expires ;
   struct rtable *fnhe_rth_input ;
   struct rtable *fnhe_rth_output ;
   unsigned long fnhe_stamp ;
   struct callback_head rcu ;
};
#line 72  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/ip_fib.h"
struct fnhe_hash_bucket {
   struct fib_nh_exception *chain ;
};
#line 80  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/ip_fib.h"
union __anonunion_nhc_gw_981 {
   __be32 ipv4 ;
   struct in6_addr ipv6 ;
};
#line 80  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/ip_fib.h"
struct fib_nh_common {
   struct net_device *nhc_dev ;
   int nhc_oif ;
   unsigned char nhc_scope ;
   u8 nhc_family ;
   u8 nhc_gw_family ;
   unsigned char nhc_flags ;
   struct lwtunnel_state *nhc_lwtstate ;
   union __anonunion_nhc_gw_981 nhc_gw ;
   int nhc_weight ;
   atomic_t nhc_upper_bound ;
   struct rtable **nhc_pcpu_rth_output ;
   struct rtable *nhc_rth_input ;
   struct fnhe_hash_bucket *nhc_exceptions ;
};
#line 103  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/ip_fib.h"
struct fib_nh {
   struct fib_nh_common nh_common ;
   struct hlist_node nh_hash ;
   struct fib_info *nh_parent ;
   __u32 nh_tclassid ;
   __be32 nh_saddr ;
   int nh_saddr_genid ;
};
#line 113 
struct nexthop;
#line 131  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/ip_fib.h"
struct fib_info {
   struct hlist_node fib_hash ;
   struct hlist_node fib_lhash ;
   struct list_head nh_list ;
   struct net *fib_net ;
   int fib_treeref ;
   refcount_t fib_clntref ;
   unsigned int fib_flags ;
   unsigned char fib_dead ;
   unsigned char fib_protocol ;
   unsigned char fib_scope ;
   unsigned char fib_type ;
   __be32 fib_prefsrc ;
   u32 fib_tb_id ;
   u32 fib_priority ;
   struct dst_metrics *fib_metrics ;
   int fib_nhs ;
   bool fib_nh_is_v6 ;
   bool nh_updated ;
   struct nexthop *nh ;
   struct callback_head rcu ;
   struct fib_nh fib_nh[0U] ;
};
#line 207  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/ip_fib.h"
struct fib_entry_notifier_info {
   struct fib_notifier_info info ;
   u32 dst ;
   int dst_len ;
   struct fib_info *fi ;
   u8 tos ;
   u8 type ;
   u32 tb_id ;
};
#line 235  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/ip_fib.h"
struct fib_table {
   struct hlist_node tb_hlist ;
   u32 tb_id ;
   int tb_num_default ;
   struct callback_head rcu ;
   unsigned long *tb_data ;
   unsigned long __data[0U] ;
};
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/switchdev.h"
struct switchdev_trans {
   bool ph_prepare ;
};
#line 60 
enum switchdev_obj_id {
    SWITCHDEV_OBJ_ID_UNDEFINED = 0,
    SWITCHDEV_OBJ_ID_PORT_VLAN = 1,
    SWITCHDEV_OBJ_ID_PORT_MDB = 2,
    SWITCHDEV_OBJ_ID_HOST_MDB = 3
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/switchdev.h"
struct switchdev_obj {
   struct net_device *orig_dev ;
   enum switchdev_obj_id id ;
   u32 flags ;
   void *complete_priv ;
   void (*complete)(struct net_device *, int , void *) ;
};
#line 77  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/switchdev.h"
struct switchdev_obj_port_vlan {
   struct switchdev_obj obj ;
   u16 flags ;
   u16 vid_begin ;
   u16 vid_end ;
};
#line 117  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/switchdev.h"
struct switchdev_notifier_info {
   struct net_device *dev ;
   struct netlink_ext_ack *extack ;
};
#line 122  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/switchdev.h"
struct switchdev_notifier_fdb_info {
   struct switchdev_notifier_info info ;
   unsigned char *addr ;
   u16 vid ;
   u8 added_by_user : 1 ;
   u8 offloaded : 1 ;
};
#line 70  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/ip6_fib.h"
struct fib6_node {
   struct fib6_node *parent ;
   struct fib6_node *left ;
   struct fib6_node *right ;
   struct fib6_node *subtree ;
   struct fib6_info *leaf ;
   __u16 fn_bit ;
   __u16 fn_flags ;
   int fn_sernum ;
   struct fib6_info *rr_ptr ;
   struct callback_head rcu ;
};
#line 127  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/ip6_fib.h"
struct rt6key {
   struct in6_addr addr ;
   int plen ;
};
#line 134  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/ip6_fib.h"
struct rt6_exception_bucket {
   struct hlist_head chain ;
   int depth ;
};
#line 150  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/ip6_fib.h"
struct fib6_nh {
   struct fib_nh_common nh_common ;
   unsigned long last_probe ;
   struct rt6_info **rt6i_pcpu ;
   struct rt6_exception_bucket *rt6i_exception_bucket ;
};
#line 161  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/ip6_fib.h"
union __anonunion_987 {
   struct list_head fib6_siblings ;
   struct list_head nh_list ;
};
#line 161  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/ip6_fib.h"
struct fib6_info {
   struct fib6_table *fib6_table ;
   struct fib6_info *fib6_next ;
   struct fib6_node *fib6_node ;
   union __anonunion_987 __anonCompField_fib6_info_194 ;
   unsigned int fib6_nsiblings ;
   refcount_t fib6_ref ;
   unsigned long expires ;
   struct dst_metrics *fib6_metrics ;
   struct rt6key fib6_dst ;
   u32 fib6_flags ;
   struct rt6key fib6_src ;
   struct rt6key fib6_prefsrc ;
   u32 fib6_metric ;
   u8 fib6_protocol ;
   u8 fib6_type ;
   u8 should_flush : 1 ;
   u8 dst_nocount : 1 ;
   u8 dst_nopolicy : 1 ;
   u8 dst_host : 1 ;
   u8 fib6_destroying : 1 ;
   u8 unused : 3 ;
   struct callback_head rcu ;
   struct nexthop *nh ;
   struct fib6_nh fib6_nh[0U] ;
};
#line 202 
struct uncached_list;
#line 202  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/ip6_fib.h"
struct rt6_info {
   struct dst_entry dst ;
   struct fib6_info *from ;
   struct rt6key rt6i_dst ;
   struct rt6key rt6i_src ;
   struct in6_addr rt6i_gateway ;
   struct inet6_dev *rt6i_idev ;
   u32 rt6i_flags ;
   struct list_head rt6i_uncached ;
   struct uncached_list *rt6i_uncached_list ;
   unsigned short rt6i_nfheader_len ;
};
#line 354  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/ip6_fib.h"
struct rt6_statistics {
   __u32 fib_nodes ;
   __u32 fib_route_nodes ;
   __u32 fib_rt_entries ;
   __u32 fib_rt_cache ;
   __u32 fib_discarded_routes ;
   atomic_t fib_rt_alloc ;
   atomic_t fib_rt_uncache ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/ip6_fib.h"
struct fib6_table {
   struct hlist_node tb6_hlist ;
   u32 tb6_id ;
   spinlock_t tb6_lock ;
   struct fib6_node tb6_root ;
   struct inet_peer_base tb6_peers ;
   unsigned int flags ;
   unsigned int fib_seq ;
};
#line 49  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/nexthop.h"
union __anonunion_995 {
   struct fib_nh_common fib_nhc ;
   struct fib_nh fib_nh ;
   struct fib6_nh fib6_nh ;
};
#line 49  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/nexthop.h"
struct nh_info {
   struct hlist_node dev_hash ;
   struct nexthop *nh_parent ;
   u8 family ;
   bool reject_nh ;
   union __anonunion_995 __anonCompField_nh_info_195 ;
};
#line 63  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/nexthop.h"
struct nh_grp_entry {
   struct nexthop *nh ;
   u8 weight ;
   atomic_t upper_bound ;
   struct list_head nh_list ;
   struct nexthop *nh_parent ;
};
#line 72  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/nexthop.h"
struct nh_group {
   u16 num_nh ;
   bool mpath ;
   bool has_v4 ;
   struct nh_grp_entry nh_entries[0U] ;
};
#line 79  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/nexthop.h"
union __anonunion_996 {
   struct nh_info *nh_info ;
   struct nh_group *nh_grp ;
};
#line 79  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/nexthop.h"
struct nexthop {
   struct rb_node rb_node ;
   struct list_head fi_list ;
   struct list_head f6i_list ;
   struct list_head grp_list ;
   struct net *net ;
   u32 id ;
   u8 protocol ;
   u8 nh_flags ;
   bool is_group ;
   refcount_t refcnt ;
   struct callback_head rcu ;
   union __anonunion_996 __anonCompField_nexthop_196 ;
};
#line 101  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_hw.h"
struct rocker_desc {
   u64 buf_addr ;
   u64 cookie ;
   u16 buf_size ;
   u16 tlv_size ;
   u16 resv[5U] ;
   u16 comp_err ;
};
#line 113  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_hw.h"
struct rocker_tlv {
   u32 type ;
   u16 len ;
};
#line 314 
enum rocker_of_dpa_table_id {
    ROCKER_OF_DPA_TABLE_ID_INGRESS_PORT = 0,
    ROCKER_OF_DPA_TABLE_ID_VLAN = 10,
    ROCKER_OF_DPA_TABLE_ID_TERMINATION_MAC = 20,
    ROCKER_OF_DPA_TABLE_ID_UNICAST_ROUTING = 30,
    ROCKER_OF_DPA_TABLE_ID_MULTICAST_ROUTING = 40,
    ROCKER_OF_DPA_TABLE_ID_BRIDGING = 50,
    ROCKER_OF_DPA_TABLE_ID_ACL_POLICY = 60
};
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker.h"
struct rocker_desc_info {
   char *data ;
   size_t data_size ;
   size_t tlv_size ;
   struct rocker_desc *desc ;
   dma_addr_t mapaddr ;
};
#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker.h"
struct rocker_dma_ring_info {
   size_t size ;
   u32 head ;
   u32 tail ;
   struct rocker_desc *desc ;
   dma_addr_t mapaddr ;
   struct rocker_desc_info *desc_info ;
   unsigned int type ;
};
#line 37 
struct rocker;
#line 40  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker.h"
struct rocker_port {
   struct net_device *dev ;
   struct rocker *rocker ;
   void *wpriv ;
   unsigned int port_number ;
   u32 pport ;
   struct napi_struct napi_tx ;
   struct napi_struct napi_rx ;
   struct rocker_dma_ring_info tx_ring ;
   struct rocker_dma_ring_info rx_ring ;
};
#line 53 
struct rocker_world_ops;
#line 57  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker.h"
struct __anonstruct_hw_1019 {
   u64 id ;
};
#line 57  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker.h"
struct rocker {
   struct pci_dev *pdev ;
   u8 *hw_addr ;
   struct msix_entry *msix_entries ;
   unsigned int port_count ;
   struct rocker_port **ports ;
   struct __anonstruct_hw_1019 hw ;
   spinlock_t cmd_ring_lock ;
   struct rocker_dma_ring_info cmd_ring ;
   struct rocker_dma_ring_info event_ring ;
   struct notifier_block fib_nb ;
   struct rocker_world_ops *wops ;
   struct workqueue_struct *rocker_owq ;
   void *wpriv ;
};
#line 90  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker.h"
struct rocker_world_ops {
   char *kind ;
   size_t priv_size ;
   size_t port_priv_size ;
   u8 mode ;
   int (*init)(struct rocker *) ;
   void (*fini)(struct rocker *) ;
   int (*port_pre_init)(struct rocker_port *) ;
   int (*port_init)(struct rocker_port *) ;
   void (*port_fini)(struct rocker_port *) ;
   void (*port_post_fini)(struct rocker_port *) ;
   int (*port_open)(struct rocker_port *) ;
   void (*port_stop)(struct rocker_port *) ;
   int (*port_attr_stp_state_set)(struct rocker_port *, u8 ) ;
   int (*port_attr_bridge_flags_set)(struct rocker_port *, unsigned long , struct switchdev_trans *) ;
   int (*port_attr_bridge_flags_support_get)(struct rocker_port *, unsigned long *) ;
   int (*port_attr_bridge_ageing_time_set)(struct rocker_port *, u32 , struct switchdev_trans *) ;
   int (*port_obj_vlan_add)(struct rocker_port *, struct switchdev_obj_port_vlan *) ;
   int (*port_obj_vlan_del)(struct rocker_port *, struct switchdev_obj_port_vlan *) ;
   int (*port_obj_fdb_add)(struct rocker_port *, u16 , unsigned char *) ;
   int (*port_obj_fdb_del)(struct rocker_port *, u16 , unsigned char *) ;
   int (*port_master_linked)(struct rocker_port *, struct net_device *) ;
   int (*port_master_unlinked)(struct rocker_port *, struct net_device *) ;
   int (*port_neigh_update)(struct rocker_port *, struct neighbour *) ;
   int (*port_neigh_destroy)(struct rocker_port *, struct neighbour *) ;
   int (*port_ev_mac_vlan_seen)(struct rocker_port *, unsigned char *, __be16 ) ;
   int (*fib4_add)(struct rocker *, struct fib_entry_notifier_info *) ;
   int (*fib4_del)(struct rocker *, struct fib_entry_notifier_info *) ;
   void (*fib4_abort)(struct rocker *) ;
};
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
struct __anonstruct_ig_port_1021 {
   u32 in_pport ;
   u32 in_pport_mask ;
   enum rocker_of_dpa_table_id goto_tbl ;
};
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
struct __anonstruct_vlan_1022 {
   u32 in_pport ;
   __be16 vlan_id ;
   __be16 vlan_id_mask ;
   enum rocker_of_dpa_table_id goto_tbl ;
   bool untagged ;
   __be16 new_vlan_id ;
};
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
struct __anonstruct_term_mac_1023 {
   u32 in_pport ;
   u32 in_pport_mask ;
   __be16 eth_type ;
   u8 eth_dst[6U] ;
   u8 eth_dst_mask[6U] ;
   __be16 vlan_id ;
   __be16 vlan_id_mask ;
   enum rocker_of_dpa_table_id goto_tbl ;
   bool copy_to_cpu ;
};
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
struct __anonstruct_ucast_routing_1024 {
   __be16 eth_type ;
   __be32 dst4 ;
   __be32 dst4_mask ;
   enum rocker_of_dpa_table_id goto_tbl ;
   u32 group_id ;
};
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
struct __anonstruct_bridge_1025 {
   u8 eth_dst[6U] ;
   u8 eth_dst_mask[6U] ;
   int has_eth_dst ;
   int has_eth_dst_mask ;
   __be16 vlan_id ;
   u32 tunnel_id ;
   enum rocker_of_dpa_table_id goto_tbl ;
   u32 group_id ;
   bool copy_to_cpu ;
};
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
struct __anonstruct_acl_1026 {
   u32 in_pport ;
   u32 in_pport_mask ;
   u8 eth_src[6U] ;
   u8 eth_src_mask[6U] ;
   u8 eth_dst[6U] ;
   u8 eth_dst_mask[6U] ;
   __be16 eth_type ;
   __be16 vlan_id ;
   __be16 vlan_id_mask ;
   u8 ip_proto ;
   u8 ip_proto_mask ;
   u8 ip_tos ;
   u8 ip_tos_mask ;
   u32 group_id ;
};
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
union __anonunion_1020 {
   struct __anonstruct_ig_port_1021 ig_port ;
   struct __anonstruct_vlan_1022 vlan ;
   struct __anonstruct_term_mac_1023 term_mac ;
   struct __anonstruct_ucast_routing_1024 ucast_routing ;
   struct __anonstruct_bridge_1025 bridge ;
   struct __anonstruct_acl_1026 acl ;
};
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
struct ofdpa_flow_tbl_key {
   u32 priority ;
   enum rocker_of_dpa_table_id tbl_id ;
   union __anonunion_1020 __anonCompField_ofdpa_flow_tbl_key_197 ;
};
#line 92  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
struct ofdpa_flow_tbl_entry {
   struct hlist_node entry ;
   u32 cmd ;
   u64 cookie ;
   struct ofdpa_flow_tbl_key key ;
   size_t key_len ;
   u32 key_crc32 ;
   struct fib_info *fi ;
};
#line 102  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
struct __anonstruct_l2_interface_1028 {
   u8 pop_vlan ;
};
#line 102  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
struct __anonstruct_l2_rewrite_1029 {
   u8 eth_src[6U] ;
   u8 eth_dst[6U] ;
   __be16 vlan_id ;
   u32 group_id ;
};
#line 102  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
struct __anonstruct_l3_unicast_1030 {
   u8 eth_src[6U] ;
   u8 eth_dst[6U] ;
   __be16 vlan_id ;
   bool ttl_check ;
   u32 group_id ;
};
#line 102  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
union __anonunion_1027 {
   struct __anonstruct_l2_interface_1028 l2_interface ;
   struct __anonstruct_l2_rewrite_1029 l2_rewrite ;
   struct __anonstruct_l3_unicast_1030 l3_unicast ;
};
#line 102  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
struct ofdpa_group_tbl_entry {
   struct hlist_node entry ;
   u32 cmd ;
   u32 group_id ;
   u16 group_count ;
   u32 *group_ids ;
   union __anonunion_1027 __anonCompField_ofdpa_group_tbl_entry_198 ;
};
#line 133 
struct ofdpa_port;
#line 133  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
struct ofdpa_fdb_tbl_key {
   struct ofdpa_port *ofdpa_port ;
   u8 addr[6U] ;
   __be16 vlan_id ;
};
#line 128  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
struct ofdpa_fdb_tbl_entry {
   struct hlist_node entry ;
   u32 key_crc32 ;
   bool learned ;
   unsigned long touched ;
   struct ofdpa_fdb_tbl_key key ;
};
#line 140  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
struct ofdpa_internal_vlan_tbl_entry {
   struct hlist_node entry ;
   int ifindex ;
   u32 ref_count ;
   __be16 vlan_id ;
};
#line 147  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
struct ofdpa_neigh_tbl_entry {
   struct hlist_node entry ;
   __be32 ip_addr ;
   struct net_device *dev ;
   u32 ref_count ;
   u32 index ;
   u8 eth_dst[6U] ;
   bool ttl_check ;
};
#line 173  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
struct ofdpa {
   struct rocker *rocker ;
   struct hlist_head flow_tbl[65536U] ;
   spinlock_t flow_tbl_lock ;
   u64 flow_tbl_next_cookie ;
   struct hlist_head group_tbl[65536U] ;
   spinlock_t group_tbl_lock ;
   struct timer_list fdb_cleanup_timer ;
   struct hlist_head fdb_tbl[65536U] ;
   spinlock_t fdb_tbl_lock ;
   unsigned long internal_vlan_bitmap[4U] ;
   struct hlist_head internal_vlan_tbl[256U] ;
   spinlock_t internal_vlan_tbl_lock ;
   struct hlist_head neigh_tbl[65536U] ;
   spinlock_t neigh_tbl_lock ;
   u32 neigh_tbl_next_index ;
   unsigned long ageing_time ;
   bool fib_aborted ;
};
#line 193  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
struct ofdpa_port {
   struct ofdpa *ofdpa ;
   struct rocker_port *rocker_port ;
   struct net_device *dev ;
   u32 pport ;
   struct net_device *bridge_dev ;
   __be16 internal_vlan_id ;
   int stp_state ;
   u32 brport_flags ;
   unsigned long ageing_time ;
   bool ctrls[6U] ;
   unsigned long vlan_bitmap[64U] ;
};
#line 1543  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
struct ofdpa_ctrl {
   u8 *eth_dst ;
   u8 *eth_dst_mask ;
   __be16 eth_type ;
   bool acl ;
   bool bridge ;
   bool term ;
   bool copy_to_cpu ;
};
#line 1811  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
struct ofdpa_fdb_learn_work {
   struct work_struct work ;
   struct ofdpa_port *ofdpa_port ;
   int flags ;
   u8 addr[6U] ;
   u16 vid ;
};
#line 71  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef __kernel_clock_t clock_t;
#line 346  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jump_label.h"
struct static_key_true {
   struct static_key key ;
};
#line 350  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jump_label.h"
struct static_key_false {
   struct static_key key ;
};
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dynamic_debug.h"
union __anonunion_key_4072 {
   struct static_key_true dd_key_true ;
   struct static_key_false dd_key_false ;
};
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dynamic_debug.h"
struct _ddebug {
   char *modname ;
   char *function ;
   char *filename ;
   char *format ;
   unsigned int lineno : 18 ;
   unsigned int flags : 8 ;
   union __anonunion_key_4072 key ;
} __attribute__((__aligned__(8)));
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmdebug.h"
struct wait_queue_entry;
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/wait.h"
struct wait_queue_entry {
   unsigned int flags ;
   void *private ;
   int (*func)(struct wait_queue_entry *, unsigned int , int , void *) ;
   struct list_head entry ;
};
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 159  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/topology.h"
struct pci_bus;
#line 87  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uuid.h"
typedef unsigned long kernel_ulong_t;
#line 38  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mod_devicetable.h"
struct pci_device_id {
   __u32 vendor ;
   __u32 device ;
   __u32 subvendor ;
   __u32 subdevice ;
   __u32 class ;
   __u32 class_mask ;
   kernel_ulong_t driver_data ;
};
#line 210  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mod_devicetable.h"
struct acpi_device_id {
   __u8 id[9U] ;
   kernel_ulong_t driver_data ;
   __u32 cls ;
   __u32 cls_msk ;
};
#line 260  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mod_devicetable.h"
struct of_device_id {
   char name[32U] ;
   char type[32U] ;
   char compatible[128U] ;
   void *data ;
};
#line 1913  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
enum irqreturn {
    IRQ_NONE = 0,
    IRQ_HANDLED = 1,
    IRQ_WAKE_THREAD = 2
};
#line 1919  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
typedef enum irqreturn irqreturn_t;
#line 62  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pci.h"
struct hotplug_slot;
#line 62  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pci.h"
struct pci_slot {
   struct pci_bus *bus ;
   struct list_head list ;
   struct hotplug_slot *hotplug ;
   unsigned char number ;
   struct kobject kobj ;
};
#line 99  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pci.h"
typedef int pci_power_t;
#line 153  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pci.h"
typedef unsigned int pci_channel_state_t;
#line 162 
enum pci_channel_state {
    pci_channel_io_normal = 1,
    pci_channel_io_frozen = 2,
    pci_channel_io_perm_failure = 3
};
#line 181  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pci.h"
typedef unsigned short pci_dev_flags_t;
#line 207  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pci.h"
typedef unsigned short pci_bus_flags_t;
#line 282 
struct pcie_link_state;
#line 283 
struct pci_vpd;
#line 284 
struct pci_sriov;
#line 285 
struct pci_p2pdma;
#line 290 
struct aer_stats;
#line 290 
struct pci_driver;
#line 290  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pci.h"
union __anonunion_4469 {
   struct pci_sriov *sriov ;
   struct pci_dev *physfn ;
};
#line 290  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pci.h"
struct pci_dev {
   struct list_head bus_list ;
   struct pci_bus *bus ;
   struct pci_bus *subordinate ;
   void *sysdata ;
   struct proc_dir_entry *procent ;
   struct pci_slot *slot ;
   unsigned int devfn ;
   unsigned short vendor ;
   unsigned short device ;
   unsigned short subsystem_vendor ;
   unsigned short subsystem_device ;
   unsigned int class ;
   u8 revision ;
   u8 hdr_type ;
   u16 aer_cap ;
   struct aer_stats *aer_stats ;
   u8 pcie_cap ;
   u8 msi_cap ;
   u8 msix_cap ;
   u8 pcie_mpss : 3 ;
   u8 rom_base_reg ;
   u8 pin ;
   u16 pcie_flags_reg ;
   unsigned long *dma_alias_mask ;
   struct pci_driver *driver ;
   u64 dma_mask ;
   struct device_dma_parameters dma_parms ;
   pci_power_t current_state ;
   unsigned int imm_ready : 1 ;
   u8 pm_cap ;
   unsigned int pme_support : 5 ;
   unsigned int pme_poll : 1 ;
   unsigned int d1_support : 1 ;
   unsigned int d2_support : 1 ;
   unsigned int no_d1d2 : 1 ;
   unsigned int no_d3cold : 1 ;
   unsigned int bridge_d3 : 1 ;
   unsigned int d3cold_allowed : 1 ;
   unsigned int mmio_always_on : 1 ;
   unsigned int wakeup_prepared : 1 ;
   unsigned int runtime_d3cold : 1 ;
   unsigned int skip_bus_pm : 1 ;
   unsigned int ignore_hotplug : 1 ;
   unsigned int hotplug_user_indicators : 1 ;
   unsigned int clear_retrain_link : 1 ;
   unsigned int d3_delay ;
   unsigned int d3cold_delay ;
   struct pcie_link_state *link_state ;
   unsigned int ltr_path : 1 ;
   unsigned int eetlp_prefix_path : 1 ;
   pci_channel_state_t error_state ;
   struct device dev ;
   int cfg_size ;
   unsigned int irq ;
   struct resource resource[17U] ;
   bool match_driver ;
   unsigned int transparent : 1 ;
   unsigned int io_window : 1 ;
   unsigned int pref_window : 1 ;
   unsigned int pref_64_window : 1 ;
   unsigned int multifunction : 1 ;
   unsigned int is_busmaster : 1 ;
   unsigned int no_msi : 1 ;
   unsigned int no_64bit_msi : 1 ;
   unsigned int block_cfg_access : 1 ;
   unsigned int broken_parity_status : 1 ;
   unsigned int irq_reroute_variant : 2 ;
   unsigned int msi_enabled : 1 ;
   unsigned int msix_enabled : 1 ;
   unsigned int ari_enabled : 1 ;
   unsigned int ats_enabled : 1 ;
   unsigned int pasid_enabled : 1 ;
   unsigned int pri_enabled : 1 ;
   unsigned int is_managed : 1 ;
   unsigned int needs_freset : 1 ;
   unsigned int state_saved : 1 ;
   unsigned int is_physfn : 1 ;
   unsigned int is_virtfn : 1 ;
   unsigned int reset_fn : 1 ;
   unsigned int is_hotplug_bridge : 1 ;
   unsigned int shpc_managed : 1 ;
   unsigned int is_thunderbolt : 1 ;
   unsigned int untrusted : 1 ;
   unsigned int __aer_firmware_first_valid : 1 ;
   unsigned int __aer_firmware_first : 1 ;
   unsigned int broken_intx_masking : 1 ;
   unsigned int io_window_1k : 1 ;
   unsigned int irq_managed : 1 ;
   unsigned int non_compliant_bars : 1 ;
   unsigned int is_probed : 1 ;
   unsigned int link_active_reporting : 1 ;
   unsigned int no_vf_scan : 1 ;
   pci_dev_flags_t dev_flags ;
   atomic_t enable_cnt ;
   u32 saved_config_space[16U] ;
   struct hlist_head saved_cap_space ;
   struct bin_attribute *rom_attr ;
   int rom_attr_enabled ;
   struct bin_attribute *res_attr[17U] ;
   struct bin_attribute *res_attr_wc[17U] ;
   unsigned int broken_cmd_compl : 1 ;
   unsigned int ptm_root : 1 ;
   unsigned int ptm_enabled : 1 ;
   u8 ptm_granularity ;
   struct attribute_group **msi_irq_groups ;
   struct pci_vpd *vpd ;
   union __anonunion_4469 __anonCompField_pci_dev_59 ;
   u16 ats_cap ;
   u8 ats_stu ;
   u16 pri_cap ;
   u32 pri_reqs_alloc ;
   unsigned int pasid_required : 1 ;
   u16 pasid_cap ;
   u16 pasid_features ;
   struct pci_p2pdma *p2pdma ;
   phys_addr_t rom ;
   size_t romlen ;
   char *driver_override ;
   unsigned long priv_flags ;
};
#line 493 
struct pci_ops;
#line 493 
struct msi_controller;
#line 571  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pci.h"
struct pci_bus {
   struct list_head node ;
   struct pci_bus *parent ;
   struct list_head children ;
   struct list_head devices ;
   struct pci_dev *self ;
   struct list_head slots ;
   struct resource *resource[4U] ;
   struct list_head resources ;
   struct resource busn_res ;
   struct pci_ops *ops ;
   struct msi_controller *msi ;
   void *sysdata ;
   struct proc_dir_entry *procdir ;
   unsigned char number ;
   unsigned char primary ;
   unsigned char max_bus_speed ;
   unsigned char cur_bus_speed ;
   char name[48U] ;
   unsigned short bridge_ctl ;
   pci_bus_flags_t bus_flags ;
   struct device *bridge ;
   struct device dev ;
   struct bin_attribute *legacy_io ;
   struct bin_attribute *legacy_mem ;
   unsigned int is_added : 1 ;
};
#line 697  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pci.h"
struct pci_ops {
   int (*add_bus)(struct pci_bus *) ;
   void (*remove_bus)(struct pci_bus *) ;
   void *(*map_bus)(struct pci_bus *, unsigned int , int ) ;
   int (*read)(struct pci_bus *, unsigned int , int , int , u32 *) ;
   int (*write)(struct pci_bus *, unsigned int , int , int , u32 ) ;
};
#line 725  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pci.h"
struct pci_dynids {
   spinlock_t lock ;
   struct list_head list ;
};
#line 729  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pci.h"
typedef unsigned int pci_ers_result_t;
#line 761  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pci.h"
struct pci_error_handlers {
   pci_ers_result_t (*error_detected)(struct pci_dev *, enum pci_channel_state ) ;
   pci_ers_result_t (*mmio_enabled)(struct pci_dev *) ;
   pci_ers_result_t (*slot_reset)(struct pci_dev *) ;
   void (*reset_prepare)(struct pci_dev *) ;
   void (*reset_done)(struct pci_dev *) ;
   void (*resume)(struct pci_dev *) ;
};
#line 824  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pci.h"
struct pci_driver {
   struct list_head node ;
   char *name ;
   struct pci_device_id *id_table ;
   int (*probe)(struct pci_dev *, struct pci_device_id *) ;
   void (*remove)(struct pci_dev *) ;
   int (*suspend)(struct pci_dev *, pm_message_t ) ;
   int (*resume)(struct pci_dev *) ;
   void (*shutdown)(struct pci_dev *) ;
   int (*sriov_configure)(struct pci_dev *, int ) ;
   struct pci_error_handlers *err_handler ;
   struct attribute_group **groups ;
   struct device_driver driver ;
   struct pci_dynids dynids ;
};
#line 1424  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pci.h"
struct msix_entry {
   u32 vector ;
   u16 entry ;
};
#line 313  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
typedef struct bio_vec skb_frag_t;
#line 416  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
struct skb_shared_hwtstamps {
   ktime_t hwtstamp ;
};
#line 510  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
struct skb_shared_info {
   __u8 __unused ;
   __u8 meta_len ;
   __u8 nr_frags ;
   __u8 tx_flags ;
   unsigned short gso_size ;
   unsigned short gso_segs ;
   struct sk_buff *frag_list ;
   struct skb_shared_hwtstamps hwtstamps ;
   unsigned int gso_type ;
   u32 tskey ;
   atomic_t dataref ;
   void *destructor_arg ;
   skb_frag_t frags[17U] ;
};
#line 2525  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_notifier_info {
   struct net_device *dev ;
   struct netlink_ext_ack *extack ;
};
#line 2542  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_notifier_changeupper_info {
   struct netdev_notifier_info info ;
   struct net_device *upper_dev ;
   bool master ;
   bool linking ;
   void *upper_info ;
};
#line 3610 
enum skb_free_reason {
    SKB_REASON_CONSUMED = 0,
    SKB_REASON_DROPPED = 1
};
#line 100  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/fib_rules.h"
struct fib_rule_notifier_info {
   struct fib_notifier_info info ;
   struct fib_rule *rule ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/switchdev.h"
enum switchdev_attr_id {
    SWITCHDEV_ATTR_ID_UNDEFINED = 0,
    SWITCHDEV_ATTR_ID_PORT_STP_STATE = 1,
    SWITCHDEV_ATTR_ID_PORT_BRIDGE_FLAGS = 2,
    SWITCHDEV_ATTR_ID_PORT_PRE_BRIDGE_FLAGS = 3,
    SWITCHDEV_ATTR_ID_PORT_MROUTER = 4,
    SWITCHDEV_ATTR_ID_BRIDGE_AGEING_TIME = 5,
    SWITCHDEV_ATTR_ID_BRIDGE_VLAN_FILTERING = 6,
    SWITCHDEV_ATTR_ID_BRIDGE_MC_DISABLED = 7,
    SWITCHDEV_ATTR_ID_BRIDGE_MROUTER = 8
};
#line 45  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/switchdev.h"
union __anonunion_u_5047 {
   u8 stp_state ;
   unsigned long brport_flags ;
   bool mrouter ;
   clock_t ageing_time ;
   bool vlan_filtering ;
   bool mc_disabled ;
};
#line 45  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/switchdev.h"
struct switchdev_attr {
   struct net_device *orig_dev ;
   enum switchdev_attr_id id ;
   u32 flags ;
   void *complete_priv ;
   void (*complete)(struct net_device *, int , void *) ;
   union __anonunion_u_5047 u ;
};
#line 130  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/switchdev.h"
struct switchdev_notifier_port_obj_info {
   struct switchdev_notifier_info info ;
   struct switchdev_obj *obj ;
   struct switchdev_trans *trans ;
   bool handled ;
};
#line 137  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/switchdev.h"
struct switchdev_notifier_port_attr_info {
   struct switchdev_notifier_info info ;
   struct switchdev_attr *attr ;
   struct switchdev_trans *trans ;
   bool handled ;
};
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
struct rocker_wait {
   wait_queue_head_t wait ;
   bool done ;
   bool nowait ;
};
#line 1201  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
struct port_name {
   char *buf ;
   size_t len ;
};
#line 2141  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
union __anonunion_5054 {
   struct fib_entry_notifier_info fen_info ;
   struct fib_rule_notifier_info fr_info ;
};
#line 2141  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
struct rocker_fib_event_work {
   struct work_struct work ;
   union __anonunion_5054 __anonCompField_rocker_fib_event_work_195 ;
   struct rocker *rocker ;
   unsigned long event ;
};
#line 2268  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
struct rocker_port_stats {
   char str[32U] ;
   int type ;
};
#line 2732  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
struct rocker_switchdev_event_work {
   struct work_struct work ;
   struct switchdev_notifier_fdb_info fdb_info ;
   struct rocker_port *rocker_port ;
   unsigned long event ;
};
#line 3097  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
struct rocker_walk_data {
   struct rocker *rocker ;
   struct rocker_port *port ;
};
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 197 
enum hrtimer_restart;
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
struct device_private {
   void *driver_data ;
};
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/firmware.h"
struct firmware {
   size_t size ;
   u8 *data ;
   struct page **pages ;
   void *priv ;
};
#line 164  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef unsigned long irq_hw_number_t;
#line 303  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ioport.h"
struct irq_data;
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 244  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/idr.h"
struct ida {
   struct xarray xa ;
};
#line 439  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/property.h"
typedef u32 phandle;
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/of.h"
struct property {
   char *name ;
   int length ;
   void *value ;
   struct property *next ;
   unsigned long _flags ;
   struct bin_attribute attr ;
};
#line 51  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/of.h"
struct device_node {
   char *name ;
   phandle phandle ;
   char *full_name ;
   struct fwnode_handle fwnode ;
   struct property *properties ;
   struct property *deadprops ;
   struct device_node *parent ;
   struct device_node *child ;
   struct device_node *sibling ;
   struct kobject kobj ;
   unsigned long _flags ;
   void *data ;
};
#line 63  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/irqdomain.h"
struct irq_fwspec {
   struct fwnode_handle *fwnode ;
   int param_count ;
   u32 param[16U] ;
};
#line 68 
enum irq_domain_bus_token {
    DOMAIN_BUS_ANY = 0,
    DOMAIN_BUS_WIRED = 1,
    DOMAIN_BUS_GENERIC_MSI = 2,
    DOMAIN_BUS_PCI_MSI = 3,
    DOMAIN_BUS_PLATFORM_MSI = 4,
    DOMAIN_BUS_NEXUS = 5,
    DOMAIN_BUS_IPI = 6,
    DOMAIN_BUS_FSL_MC_MSI = 7,
    DOMAIN_BUS_TI_SCI_INTA_MSI = 8,
    DOMAIN_BUS_WAKEUP = 9
};
#line 104  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/irqdomain.h"
struct irq_domain_ops {
   int (*match)(struct irq_domain *, struct device_node *, enum irq_domain_bus_token ) ;
   int (*select)(struct irq_domain *, struct irq_fwspec *, enum irq_domain_bus_token ) ;
   int (*map)(struct irq_domain *, unsigned int , irq_hw_number_t ) ;
   void (*unmap)(struct irq_domain *, unsigned int ) ;
   int (*xlate)(struct irq_domain *, struct device_node *, u32 *, unsigned int , unsigned long *, unsigned int *) ;
   int (*alloc)(struct irq_domain *, unsigned int , unsigned int , void *) ;
   void (*free)(struct irq_domain *, unsigned int , unsigned int ) ;
   int (*activate)(struct irq_domain *, struct irq_data *, bool ) ;
   void (*deactivate)(struct irq_domain *, struct irq_data *) ;
   int (*translate)(struct irq_domain *, struct irq_fwspec *, unsigned long *, unsigned int *) ;
   void (*debug_show)(struct seq_file *, struct irq_domain *, struct irq_data *, int ) ;
};
#line 132 
struct irq_domain_chip_generic;
#line 161  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/irqdomain.h"
struct irq_domain {
   struct list_head link ;
   char *name ;
   struct irq_domain_ops *ops ;
   void *host_data ;
   unsigned int flags ;
   unsigned int mapcount ;
   struct fwnode_handle *fwnode ;
   enum irq_domain_bus_token bus_token ;
   struct irq_domain_chip_generic *gc ;
   struct irq_domain *parent ;
   struct dentry *debugfs_file ;
   irq_hw_number_t hwirq_max ;
   unsigned int revmap_direct_max_irq ;
   unsigned int revmap_size ;
   struct xarray revmap_tree ;
   struct mutex revmap_tree_mutex ;
   unsigned int linear_revmap[] ;
};
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rtmutex.h"
struct rt_mutex {
   raw_spinlock_t wait_lock ;
   struct rb_root_cached waiters ;
   struct task_struct *owner ;
   int save_state ;
   char *name ;
   char *file ;
   int line ;
   void *magic ;
   struct lockdep_map dep_map ;
};
#line 69  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/i2c.h"
struct i2c_msg {
   __u16 addr ;
   __u16 flags ;
   __u16 len ;
   __u8 *buf ;
};
#line 135  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/i2c.h"
union i2c_smbus_data {
   __u8 byte ;
   __u16 word ;
   __u8 block[34U] ;
};
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/i2c.h"
struct i2c_algorithm;
#line 28 
struct i2c_adapter;
#line 29 
struct i2c_client;
#line 33 
enum i2c_slave_event;
#line 33 
enum i2c_slave_event;
#line 314  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/i2c.h"
struct i2c_client {
   unsigned short flags ;
   unsigned short addr ;
   char name[20U] ;
   struct i2c_adapter *adapter ;
   struct device dev ;
   int init_irq ;
   int irq ;
   struct list_head detected ;
   int (*slave_cb)(struct i2c_client *, enum i2c_slave_event , u8 *) ;
};
#line 360 
enum i2c_slave_event {
    I2C_SLAVE_READ_REQUESTED = 0,
    I2C_SLAVE_WRITE_REQUESTED = 1,
    I2C_SLAVE_READ_PROCESSED = 2,
    I2C_SLAVE_WRITE_RECEIVED = 3,
    I2C_SLAVE_STOP = 4
};
#line 527  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/i2c.h"
struct i2c_algorithm {
   int (*master_xfer)(struct i2c_adapter *, struct i2c_msg *, int ) ;
   int (*master_xfer_atomic)(struct i2c_adapter *, struct i2c_msg *, int ) ;
   int (*smbus_xfer)(struct i2c_adapter *, u16 , unsigned short , char , u8 , int , union i2c_smbus_data *) ;
   int (*smbus_xfer_atomic)(struct i2c_adapter *, u16 , unsigned short , char , u8 , int , union i2c_smbus_data *) ;
   u32 (*functionality)(struct i2c_adapter *) ;
   int (*reg_slave)(struct i2c_client *) ;
   int (*unreg_slave)(struct i2c_client *) ;
};
#line 565  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/i2c.h"
struct i2c_lock_operations {
   void (*lock_bus)(struct i2c_adapter *, unsigned int ) ;
   int (*trylock_bus)(struct i2c_adapter *, unsigned int ) ;
   void (*unlock_bus)(struct i2c_adapter *, unsigned int ) ;
};
#line 618 
struct gpio_desc;
#line 618  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/i2c.h"
struct i2c_bus_recovery_info {
   int (*recover_bus)(struct i2c_adapter *) ;
   int (*get_scl)(struct i2c_adapter *) ;
   void (*set_scl)(struct i2c_adapter *, int ) ;
   int (*get_sda)(struct i2c_adapter *) ;
   void (*set_sda)(struct i2c_adapter *, int ) ;
   int (*get_bus_free)(struct i2c_adapter *) ;
   void (*prepare_recovery)(struct i2c_adapter *) ;
   void (*unprepare_recovery)(struct i2c_adapter *) ;
   struct gpio_desc *scl_gpiod ;
   struct gpio_desc *sda_gpiod ;
};
#line 661  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/i2c.h"
struct i2c_adapter_quirks {
   u64 flags ;
   int max_num_msgs ;
   u16 max_write_len ;
   u16 max_read_len ;
   u16 max_comb_1st_msg_len ;
   u16 max_comb_2nd_msg_len ;
};
#line 692  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/i2c.h"
struct i2c_adapter {
   struct module *owner ;
   unsigned int class ;
   struct i2c_algorithm *algo ;
   void *algo_data ;
   struct i2c_lock_operations *lock_ops ;
   struct rt_mutex bus_lock ;
   struct rt_mutex mux_lock ;
   int timeout ;
   int retries ;
   struct device dev ;
   unsigned long locked_flags ;
   int nr ;
   char name[48U] ;
   struct completion dev_released ;
   struct mutex userspace_clients_lock ;
   struct list_head userspace_clients ;
   struct i2c_bus_recovery_info *bus_recovery_info ;
   struct i2c_adapter_quirks *quirks ;
   struct irq_domain *host_notify_domain ;
};
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cdev.h"
struct cdev {
   struct kobject kobj ;
   struct module *owner ;
   struct file_operations *ops ;
   struct list_head list ;
   dev_t dev ;
   unsigned int count ;
} __attribute__((__designated_init__));
#line 87  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/v4l2-common.h"
struct v4l2_edid {
   __u32 pad ;
   __u32 start_block ;
   __u32 blocks ;
   __u32 reserved[5U] ;
   __u8 *edid ;
};
#line 754 
enum v4l2_priority {
    V4L2_PRIORITY_UNSET = 0,
    V4L2_PRIORITY_BACKGROUND = 1,
    V4L2_PRIORITY_INTERACTIVE = 2,
    V4L2_PRIORITY_RECORD = 3,
    V4L2_PRIORITY_DEFAULT = 2
};
#line 413  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_rect {
   __s32 left ;
   __s32 top ;
   __u32 width ;
   __u32 height ;
};
#line 420  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_fract {
   __u32 numerator ;
   __u32 denominator ;
};
#line 1212  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
typedef __u64 v4l2_std_id;
#line 1394  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_bt_timings {
   __u32 width ;
   __u32 height ;
   __u32 interlaced ;
   __u32 polarities ;
   __u64 pixelclock ;
   __u32 hfrontporch ;
   __u32 hsync ;
   __u32 hbackporch ;
   __u32 vfrontporch ;
   __u32 vsync ;
   __u32 vbackporch ;
   __u32 il_vfrontporch ;
   __u32 il_vsync ;
   __u32 il_vbackporch ;
   __u32 standards ;
   __u32 flags ;
   struct v4l2_fract picture_aspect ;
   __u8 cea861_vic ;
   __u8 hdmi_vic ;
   __u8 reserved[46U] ;
} __attribute__((__packed__));
#line 1517  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
union __anonunion_6837 {
   struct v4l2_bt_timings bt ;
   __u32 reserved[32U] ;
};
#line 1517  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_dv_timings {
   __u32 type ;
   union __anonunion_6837 __anonCompField_v4l2_dv_timings_77 ;
} __attribute__((__packed__));
#line 1536  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_enum_dv_timings {
   __u32 index ;
   __u32 pad ;
   __u32 reserved[2U] ;
   struct v4l2_dv_timings timings ;
};
#line 1554  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_bt_timings_cap {
   __u32 min_width ;
   __u32 max_width ;
   __u32 min_height ;
   __u32 max_height ;
   __u64 min_pixelclock ;
   __u64 max_pixelclock ;
   __u32 standards ;
   __u32 capabilities ;
   __u32 reserved[16U] ;
} __attribute__((__packed__));
#line 1581  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
union __anonunion_6838 {
   struct v4l2_bt_timings_cap bt ;
   __u32 raw_data[32U] ;
};
#line 1581  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_dv_timings_cap {
   __u32 type ;
   __u32 pad ;
   __u32 reserved[2U] ;
   union __anonunion_6838 __anonCompField_v4l2_dv_timings_cap_78 ;
};
#line 1803  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_tuner {
   __u32 index ;
   __u8 name[32U] ;
   __u32 type ;
   __u32 capability ;
   __u32 rangelow ;
   __u32 rangehigh ;
   __u32 rxsubchans ;
   __u32 audmode ;
   __s32 signal ;
   __s32 afc ;
   __u32 reserved[4U] ;
};
#line 1817  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_modulator {
   __u32 index ;
   __u8 name[32U] ;
   __u32 capability ;
   __u32 rangelow ;
   __u32 rangehigh ;
   __u32 txsubchans ;
   __u32 type ;
   __u32 reserved[3U] ;
};
#line 1860  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_frequency {
   __u32 tuner ;
   __u32 type ;
   __u32 frequency ;
   __u32 reserved[8U] ;
};
#line 1871  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_frequency_band {
   __u32 tuner ;
   __u32 type ;
   __u32 index ;
   __u32 capability ;
   __u32 rangelow ;
   __u32 rangehigh ;
   __u32 modulation ;
   __u32 reserved[9U] ;
};
#line 2043  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_vbi_format {
   __u32 sampling_rate ;
   __u32 offset ;
   __u32 samples_per_line ;
   __u32 sample_format ;
   __s32 start[2U] ;
   __u32 count[2U] ;
   __u32 flags ;
   __u32 reserved[2U] ;
};
#line 2071  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_sliced_vbi_format {
   __u16 service_set ;
   __u16 service_lines[2U][24U] ;
   __u32 io_size ;
   __u32 reserved[2U] ;
};
#line 2095  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_sliced_vbi_cap {
   __u16 service_set ;
   __u16 service_lines[2U][24U] ;
   __u32 type ;
   __u32 reserved[3U] ;
};
#line 2106  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_sliced_vbi_data {
   __u32 id ;
   __u32 field ;
   __u32 line ;
   __u32 reserved ;
   __u8 data[48U] ;
};
#line 2350  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_event_subscription {
   __u32 type ;
   __u32 id ;
   __u32 flags ;
   __u32 reserved[5U] ;
};
#line 2375  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
union __anonunion_6854 {
   __u32 addr ;
   char name[32U] ;
};
#line 2375  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_dbg_match {
   __u32 type ;
   union __anonunion_6854 __anonCompField_v4l2_dbg_match_87 ;
} __attribute__((__packed__));
#line 2383  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_dbg_register {
   struct v4l2_dbg_match match ;
   __u32 size ;
   __u64 reg ;
   __u64 val ;
} __attribute__((__packed__));
#line 57  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_device;
#line 57  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_gobj {
   struct media_device *mdev ;
   u32 id ;
   struct list_head list ;
};
#line 72  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_entity_enum {
   unsigned long *bmap ;
   int idx_max ;
};
#line 88 
struct media_entity;
#line 88  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct __anonstruct_stack_6858 {
   struct media_entity *entity ;
   struct list_head *link ;
};
#line 88  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_graph {
   struct __anonstruct_stack_6858 stack[16U] ;
   struct media_entity_enum ent_enum ;
   int top ;
};
#line 104  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_pipeline {
   int streaming_count ;
   struct media_graph graph ;
};
#line 132 
struct media_pad;
#line 132 
struct media_interface;
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
union __anonunion_6859 {
   struct media_gobj *gobj0 ;
   struct media_pad *source ;
   struct media_interface *intf ;
};
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
union __anonunion_6860 {
   struct media_gobj *gobj1 ;
   struct media_pad *sink ;
   struct media_entity *entity ;
};
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_link {
   struct media_gobj graph_obj ;
   struct list_head list ;
   union __anonunion_6859 __anonCompField_media_link_90 ;
   union __anonunion_6860 __anonCompField_media_link_91 ;
   struct media_link *reverse ;
   unsigned long flags ;
   bool is_backlink ;
};
#line 149 
enum media_pad_signal_type {
    PAD_SIGNAL_DEFAULT = 0,
    PAD_SIGNAL_ANALOG = 1,
    PAD_SIGNAL_DV = 2,
    PAD_SIGNAL_AUDIO = 3
};
#line 189  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_pad {
   struct media_gobj graph_obj ;
   struct media_entity *entity ;
   u16 index ;
   enum media_pad_signal_type sig_type ;
   unsigned long flags ;
};
#line 214  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_entity_operations {
   int (*get_fwnode_pad)(struct fwnode_endpoint *) ;
   int (*link_setup)(struct media_entity *, struct media_pad *, struct media_pad *, u32 ) ;
   int (*link_validate)(struct media_link *) ;
};
#line 221 
enum media_entity_type {
    MEDIA_ENTITY_TYPE_BASE = 0,
    MEDIA_ENTITY_TYPE_VIDEO_DEVICE = 1,
    MEDIA_ENTITY_TYPE_V4L2_SUBDEV = 2
};
#line 289  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct __anonstruct_dev_6862 {
   u32 major ;
   u32 minor ;
};
#line 289  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
union __anonunion_info_6861 {
   struct __anonstruct_dev_6862 dev ;
};
#line 289  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_entity {
   struct media_gobj graph_obj ;
   char *name ;
   enum media_entity_type obj_type ;
   u32 function ;
   unsigned long flags ;
   u16 num_pads ;
   u16 num_links ;
   u16 num_backlinks ;
   int internal_idx ;
   struct media_pad *pads ;
   struct list_head links ;
   struct media_entity_operations *ops ;
   int stream_count ;
   int use_count ;
   struct media_pipeline *pipe ;
   union __anonunion_info_6861 info ;
};
#line 335  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_interface {
   struct media_gobj graph_obj ;
   struct list_head links ;
   u32 type ;
   u32 flags ;
};
#line 349  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_intf_devnode {
   struct media_interface intf ;
   u32 major ;
   u32 minor ;
};
#line 1087 
enum vfl_devnode_type {
    VFL_TYPE_GRABBER = 0,
    VFL_TYPE_VBI = 1,
    VFL_TYPE_RADIO = 2,
    VFL_TYPE_SUBDEV = 3,
    VFL_TYPE_SDR = 4,
    VFL_TYPE_TOUCH = 5,
    VFL_TYPE_MAX = 6
};
#line 1097 
enum vfl_devnode_direction {
    VFL_DIR_RX = 0,
    VFL_DIR_TX = 1,
    VFL_DIR_M2M = 2
};
#line 1104 
struct video_device;
#line 1105 
struct v4l2_device;
#line 1106 
struct v4l2_ctrl_handler;
#line 104  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-dev.h"
struct v4l2_prio_state {
   atomic_t prios[4U] ;
};
#line 193  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-dev.h"
struct v4l2_file_operations {
   struct module *owner ;
   ssize_t (*read)(struct file *, char *, size_t , loff_t *) ;
   ssize_t (*write)(struct file *, char *, size_t , loff_t *) ;
   __poll_t (*poll)(struct file *, struct poll_table_struct *) ;
   long (*unlocked_ioctl)(struct file *, unsigned int , unsigned long ) ;
   long (*compat_ioctl32)(struct file *, unsigned int , unsigned long ) ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   int (*mmap)(struct file *, struct vm_area_struct *) ;
   int (*open)(struct file *) ;
   int (*release)(struct file *) ;
};
#line 256 
struct vb2_queue;
#line 256 
struct v4l2_ioctl_ops;
#line 256  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-dev.h"
struct video_device {
   struct media_entity entity ;
   struct media_intf_devnode *intf_devnode ;
   struct media_pipeline pipe ;
   struct v4l2_file_operations *fops ;
   u32 device_caps ;
   struct device dev ;
   struct cdev *cdev ;
   struct v4l2_device *v4l2_dev ;
   struct device *dev_parent ;
   struct v4l2_ctrl_handler *ctrl_handler ;
   struct vb2_queue *queue ;
   struct v4l2_prio_state *prio ;
   char name[32U] ;
   enum vfl_devnode_type vfl_type ;
   enum vfl_devnode_direction vfl_dir ;
   int minor ;
   u16 num ;
   unsigned long flags ;
   int index ;
   spinlock_t fh_lock ;
   struct list_head fh_list ;
   int dev_debug ;
   v4l2_std_id tvnorms ;
   void (*release)(struct video_device *) ;
   struct v4l2_ioctl_ops *ioctl_ops ;
   unsigned long valid_ioctls[3U] ;
   struct mutex *lock ;
};
#line 95  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-common.h"
struct v4l2_subdev;
#line 96 
struct v4l2_subdev_ops;
#line 335  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-common.h"
struct v4l2_priv_tun_config {
   int tuner ;
   void *priv ;
};
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-devnode.h"
struct media_file_operations {
   struct module *owner ;
   ssize_t (*read)(struct file *, char *, size_t , loff_t *) ;
   ssize_t (*write)(struct file *, char *, size_t , loff_t *) ;
   __poll_t (*poll)(struct file *, struct poll_table_struct *) ;
   long (*ioctl)(struct file *, unsigned int , unsigned long ) ;
   long (*compat_ioctl)(struct file *, unsigned int , unsigned long ) ;
   int (*open)(struct file *) ;
   int (*release)(struct file *) ;
};
#line 75  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-devnode.h"
struct media_devnode {
   struct media_device *media_dev ;
   struct media_file_operations *fops ;
   struct device dev ;
   struct cdev cdev ;
   struct device *parent ;
   int minor ;
   unsigned long flags ;
   void (*release)(struct media_devnode *) ;
};
#line 65  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-device.h"
struct media_request;
#line 65  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-device.h"
struct media_device_ops {
   int (*link_notify)(struct media_link *, u32 , unsigned int ) ;
   struct media_request *(*req_alloc)(struct media_device *) ;
   void (*req_free)(struct media_request *) ;
   int (*req_validate)(struct media_request *) ;
   void (*req_queue)(struct media_request *) ;
};
#line 144  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-device.h"
struct media_device {
   struct device *dev ;
   struct media_devnode *devnode ;
   char model[32U] ;
   char driver_name[32U] ;
   char serial[40U] ;
   char bus_info[32U] ;
   u32 hw_revision ;
   u64 topology_version ;
   u32 id ;
   struct ida entity_internal_idx ;
   int entity_internal_idx_max ;
   struct list_head entities ;
   struct list_head interfaces ;
   struct list_head pads ;
   struct list_head links ;
   struct list_head entity_notify ;
   struct mutex graph_mutex ;
   struct media_graph pm_count_walk ;
   void *source_priv ;
   int (*enable_source)(struct media_entity *, struct media_pipeline *) ;
   void (*disable_source)(struct media_entity *) ;
   struct media_device_ops *ops ;
   struct mutex req_queue_mutex ;
   atomic_t request_id ;
};
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/v4l2-mediabus.h"
struct v4l2_mbus_framefmt {
   __u32 width ;
   __u32 height ;
   __u32 code ;
   __u32 field ;
   __u32 colorspace ;
   __u16 ycbcr_enc ;
   __u16 quantization ;
   __u16 xfer_func ;
   __u16 reserved[11U] ;
};
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/v4l2-subdev.h"
struct v4l2_subdev_format {
   __u32 which ;
   __u32 pad ;
   struct v4l2_mbus_framefmt format ;
   __u32 reserved[8U] ;
};
#line 75  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/v4l2-subdev.h"
struct v4l2_subdev_mbus_code_enum {
   __u32 pad ;
   __u32 index ;
   __u32 code ;
   __u32 which ;
   __u32 reserved[8U] ;
};
#line 90  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/v4l2-subdev.h"
struct v4l2_subdev_frame_size_enum {
   __u32 index ;
   __u32 pad ;
   __u32 code ;
   __u32 min_width ;
   __u32 max_width ;
   __u32 min_height ;
   __u32 max_height ;
   __u32 which ;
   __u32 reserved[8U] ;
};
#line 107  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/v4l2-subdev.h"
struct v4l2_subdev_frame_interval {
   __u32 pad ;
   struct v4l2_fract interval ;
   __u32 reserved[9U] ;
};
#line 123  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/v4l2-subdev.h"
struct v4l2_subdev_frame_interval_enum {
   __u32 index ;
   __u32 pad ;
   __u32 code ;
   __u32 width ;
   __u32 height ;
   struct v4l2_fract interval ;
   __u32 which ;
   __u32 reserved[8U] ;
};
#line 149  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/v4l2-subdev.h"
struct v4l2_subdev_selection {
   __u32 which ;
   __u32 pad ;
   __u32 target ;
   __u32 flags ;
   struct v4l2_rect r ;
   __u32 reserved[8U] ;
};
#line 157 
struct v4l2_async_notifier;
#line 158 
enum v4l2_async_match_type {
    V4L2_ASYNC_MATCH_CUSTOM = 0,
    V4L2_ASYNC_MATCH_DEVNAME = 1,
    V4L2_ASYNC_MATCH_I2C = 2,
    V4L2_ASYNC_MATCH_FWNODE = 3
};
#line 79  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-async.h"
struct __anonstruct_i2c_6876 {
   int adapter_id ;
   unsigned short address ;
};
#line 79  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-async.h"
struct __anonstruct_custom_6877 {
   bool (*match)(struct device *, struct v4l2_async_subdev *) ;
   void *priv ;
};
#line 79  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-async.h"
union __anonunion_match_6875 {
   struct fwnode_handle *fwnode ;
   char *device_name ;
   struct __anonstruct_i2c_6876 i2c ;
   struct __anonstruct_custom_6877 custom ;
};
#line 79  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-async.h"
struct v4l2_async_subdev {
   enum v4l2_async_match_type match_type ;
   union __anonunion_match_6875 match ;
   struct list_head list ;
   struct list_head asd_list ;
};
#line 107  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-async.h"
struct v4l2_async_notifier_operations {
   int (*bound)(struct v4l2_async_notifier *, struct v4l2_subdev *, struct v4l2_async_subdev *) ;
   int (*complete)(struct v4l2_async_notifier *) ;
   void (*unbind)(struct v4l2_async_notifier *, struct v4l2_subdev *, struct v4l2_async_subdev *) ;
};
#line 129  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-async.h"
struct v4l2_async_notifier {
   struct v4l2_async_notifier_operations *ops ;
   struct v4l2_device *v4l2_dev ;
   struct v4l2_subdev *sd ;
   struct v4l2_async_notifier *parent ;
   struct list_head asd_list ;
   struct list_head waiting ;
   struct list_head done ;
   struct list_head list ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-fh.h"
struct v4l2_m2m_ctx;
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-fh.h"
struct v4l2_fh {
   struct list_head list ;
   struct video_device *vdev ;
   struct v4l2_ctrl_handler *ctrl_handler ;
   enum v4l2_priority prio ;
   wait_queue_head_t wait ;
   struct mutex subscribe_lock ;
   struct list_head subscribed ;
   struct list_head available ;
   unsigned int navailable ;
   u32 sequence ;
   struct v4l2_m2m_ctx *m2m_ctx ;
};
#line 162 
enum v4l2_mbus_type {
    V4L2_MBUS_UNKNOWN = 0,
    V4L2_MBUS_PARALLEL = 1,
    V4L2_MBUS_BT656 = 2,
    V4L2_MBUS_CSI1 = 3,
    V4L2_MBUS_CCP2 = 4,
    V4L2_MBUS_CSI2_DPHY = 5,
    V4L2_MBUS_CSI2_CPHY = 6
};
#line 97  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-mediabus.h"
struct v4l2_mbus_config {
   enum v4l2_mbus_type type ;
   unsigned int flags ;
};
#line 184 
struct v4l2_subdev_fh;
#line 185 
struct tuner_setup;
#line 186 
struct v4l2_mbus_frame_desc;
#line 52  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_decode_vbi_line {
   u32 is_second_field ;
   u8 *p ;
   u32 line ;
   u32 type ;
};
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_io_pin_config {
   u32 flags ;
   u8 pin ;
   u8 function ;
   u8 value ;
   u8 strength ;
};
#line 188  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_core_ops {
   int (*log_status)(struct v4l2_subdev *) ;
   int (*s_io_pin_config)(struct v4l2_subdev *, size_t , struct v4l2_subdev_io_pin_config *) ;
   int (*init)(struct v4l2_subdev *, u32 ) ;
   int (*load_fw)(struct v4l2_subdev *) ;
   int (*reset)(struct v4l2_subdev *, u32 ) ;
   int (*s_gpio)(struct v4l2_subdev *, u32 ) ;
   long (*ioctl)(struct v4l2_subdev *, unsigned int , void *) ;
   long (*compat_ioctl32)(struct v4l2_subdev *, unsigned int , unsigned long ) ;
   int (*g_register)(struct v4l2_subdev *, struct v4l2_dbg_register *) ;
   int (*s_register)(struct v4l2_subdev *, struct v4l2_dbg_register *) ;
   int (*s_power)(struct v4l2_subdev *, int ) ;
   int (*interrupt_service_routine)(struct v4l2_subdev *, u32 , bool *) ;
   int (*subscribe_event)(struct v4l2_subdev *, struct v4l2_fh *, struct v4l2_event_subscription *) ;
   int (*unsubscribe_event)(struct v4l2_subdev *, struct v4l2_fh *, struct v4l2_event_subscription *) ;
};
#line 264  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_tuner_ops {
   int (*standby)(struct v4l2_subdev *) ;
   int (*s_radio)(struct v4l2_subdev *) ;
   int (*s_frequency)(struct v4l2_subdev *, struct v4l2_frequency *) ;
   int (*g_frequency)(struct v4l2_subdev *, struct v4l2_frequency *) ;
   int (*enum_freq_bands)(struct v4l2_subdev *, struct v4l2_frequency_band *) ;
   int (*g_tuner)(struct v4l2_subdev *, struct v4l2_tuner *) ;
   int (*s_tuner)(struct v4l2_subdev *, struct v4l2_tuner *) ;
   int (*g_modulator)(struct v4l2_subdev *, struct v4l2_modulator *) ;
   int (*s_modulator)(struct v4l2_subdev *, struct v4l2_modulator *) ;
   int (*s_type_addr)(struct v4l2_subdev *, struct tuner_setup *) ;
   int (*s_config)(struct v4l2_subdev *, struct v4l2_priv_tun_config *) ;
};
#line 304  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_audio_ops {
   int (*s_clock_freq)(struct v4l2_subdev *, u32 ) ;
   int (*s_i2s_clock_freq)(struct v4l2_subdev *, u32 ) ;
   int (*s_routing)(struct v4l2_subdev *, u32 , u32 , u32 ) ;
   int (*s_stream)(struct v4l2_subdev *, int ) ;
};
#line 310 
enum v4l2_mbus_frame_desc_flags {
    V4L2_MBUS_FRAME_DESC_FL_LEN_MAX = 1,
    V4L2_MBUS_FRAME_DESC_FL_BLOB = 2
};
#line 335  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_mbus_frame_desc_entry {
   enum v4l2_mbus_frame_desc_flags flags ;
   u32 pixelcode ;
   u32 length ;
};
#line 348  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_mbus_frame_desc {
   struct v4l2_mbus_frame_desc_entry entry[4U] ;
   unsigned short num_entries ;
};
#line 415  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_video_ops {
   int (*s_routing)(struct v4l2_subdev *, u32 , u32 , u32 ) ;
   int (*s_crystal_freq)(struct v4l2_subdev *, u32 , u32 ) ;
   int (*g_std)(struct v4l2_subdev *, v4l2_std_id *) ;
   int (*s_std)(struct v4l2_subdev *, v4l2_std_id ) ;
   int (*s_std_output)(struct v4l2_subdev *, v4l2_std_id ) ;
   int (*g_std_output)(struct v4l2_subdev *, v4l2_std_id *) ;
   int (*querystd)(struct v4l2_subdev *, v4l2_std_id *) ;
   int (*g_tvnorms)(struct v4l2_subdev *, v4l2_std_id *) ;
   int (*g_tvnorms_output)(struct v4l2_subdev *, v4l2_std_id *) ;
   int (*g_input_status)(struct v4l2_subdev *, u32 *) ;
   int (*s_stream)(struct v4l2_subdev *, int ) ;
   int (*g_pixelaspect)(struct v4l2_subdev *, struct v4l2_fract *) ;
   int (*g_frame_interval)(struct v4l2_subdev *, struct v4l2_subdev_frame_interval *) ;
   int (*s_frame_interval)(struct v4l2_subdev *, struct v4l2_subdev_frame_interval *) ;
   int (*s_dv_timings)(struct v4l2_subdev *, struct v4l2_dv_timings *) ;
   int (*g_dv_timings)(struct v4l2_subdev *, struct v4l2_dv_timings *) ;
   int (*query_dv_timings)(struct v4l2_subdev *, struct v4l2_dv_timings *) ;
   int (*g_mbus_config)(struct v4l2_subdev *, struct v4l2_mbus_config *) ;
   int (*s_mbus_config)(struct v4l2_subdev *, struct v4l2_mbus_config *) ;
   int (*s_rx_buffer)(struct v4l2_subdev *, void *, unsigned int *) ;
};
#line 481  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_vbi_ops {
   int (*decode_vbi_line)(struct v4l2_subdev *, struct v4l2_decode_vbi_line *) ;
   int (*s_vbi_data)(struct v4l2_subdev *, struct v4l2_sliced_vbi_data *) ;
   int (*g_vbi_data)(struct v4l2_subdev *, struct v4l2_sliced_vbi_data *) ;
   int (*g_sliced_vbi_cap)(struct v4l2_subdev *, struct v4l2_sliced_vbi_cap *) ;
   int (*s_raw_fmt)(struct v4l2_subdev *, struct v4l2_vbi_format *) ;
   int (*g_sliced_fmt)(struct v4l2_subdev *, struct v4l2_sliced_vbi_format *) ;
   int (*s_sliced_fmt)(struct v4l2_subdev *, struct v4l2_sliced_vbi_format *) ;
};
#line 501  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_sensor_ops {
   int (*g_skip_top_lines)(struct v4l2_subdev *, u32 *) ;
   int (*g_skip_frames)(struct v4l2_subdev *, u32 *) ;
};
#line 505 
enum v4l2_subdev_ir_mode {
    V4L2_SUBDEV_IR_MODE_PULSE_WIDTH = 0
};
#line 540  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_ir_parameters {
   unsigned int bytes_per_data_element ;
   enum v4l2_subdev_ir_mode mode ;
   bool enable ;
   bool interrupt_enable ;
   bool shutdown ;
   bool modulation ;
   u32 max_pulse_width ;
   unsigned int carrier_freq ;
   unsigned int duty_cycle ;
   bool invert_level ;
   bool invert_carrier_sense ;
   u32 noise_filter_min_width ;
   unsigned int carrier_range_lower ;
   unsigned int carrier_range_upper ;
   u32 resolution ;
};
#line 599  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_ir_ops {
   int (*rx_read)(struct v4l2_subdev *, u8 *, size_t , ssize_t *) ;
   int (*rx_g_parameters)(struct v4l2_subdev *, struct v4l2_subdev_ir_parameters *) ;
   int (*rx_s_parameters)(struct v4l2_subdev *, struct v4l2_subdev_ir_parameters *) ;
   int (*tx_write)(struct v4l2_subdev *, u8 *, size_t , ssize_t *) ;
   int (*tx_g_parameters)(struct v4l2_subdev *, struct v4l2_subdev_ir_parameters *) ;
   int (*tx_s_parameters)(struct v4l2_subdev *, struct v4l2_subdev_ir_parameters *) ;
};
#line 630  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_pad_config {
   struct v4l2_mbus_framefmt try_fmt ;
   struct v4l2_rect try_crop ;
   struct v4l2_rect try_compose ;
};
#line 674  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_pad_ops {
   int (*init_cfg)(struct v4l2_subdev *, struct v4l2_subdev_pad_config *) ;
   int (*enum_mbus_code)(struct v4l2_subdev *, struct v4l2_subdev_pad_config *, struct v4l2_subdev_mbus_code_enum *) ;
   int (*enum_frame_size)(struct v4l2_subdev *, struct v4l2_subdev_pad_config *, struct v4l2_subdev_frame_size_enum *) ;
   int (*enum_frame_interval)(struct v4l2_subdev *, struct v4l2_subdev_pad_config *, struct v4l2_subdev_frame_interval_enum *) ;
   int (*get_fmt)(struct v4l2_subdev *, struct v4l2_subdev_pad_config *, struct v4l2_subdev_format *) ;
   int (*set_fmt)(struct v4l2_subdev *, struct v4l2_subdev_pad_config *, struct v4l2_subdev_format *) ;
   int (*get_selection)(struct v4l2_subdev *, struct v4l2_subdev_pad_config *, struct v4l2_subdev_selection *) ;
   int (*set_selection)(struct v4l2_subdev *, struct v4l2_subdev_pad_config *, struct v4l2_subdev_selection *) ;
   int (*get_edid)(struct v4l2_subdev *, struct v4l2_edid *) ;
   int (*set_edid)(struct v4l2_subdev *, struct v4l2_edid *) ;
   int (*dv_timings_cap)(struct v4l2_subdev *, struct v4l2_dv_timings_cap *) ;
   int (*enum_dv_timings)(struct v4l2_subdev *, struct v4l2_enum_dv_timings *) ;
   int (*link_validate)(struct v4l2_subdev *, struct media_link *, struct v4l2_subdev_format *, struct v4l2_subdev_format *) ;
   int (*get_frame_desc)(struct v4l2_subdev *, unsigned int , struct v4l2_mbus_frame_desc *) ;
   int (*set_frame_desc)(struct v4l2_subdev *, unsigned int , struct v4l2_mbus_frame_desc *) ;
};
#line 727  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_ops {
   struct v4l2_subdev_core_ops *core ;
   struct v4l2_subdev_tuner_ops *tuner ;
   struct v4l2_subdev_audio_ops *audio ;
   struct v4l2_subdev_video_ops *video ;
   struct v4l2_subdev_vbi_ops *vbi ;
   struct v4l2_subdev_ir_ops *ir ;
   struct v4l2_subdev_sensor_ops *sensor ;
   struct v4l2_subdev_pad_ops *pad ;
};
#line 765  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_internal_ops {
   int (*registered)(struct v4l2_subdev *) ;
   void (*unregistered)(struct v4l2_subdev *) ;
   int (*open)(struct v4l2_subdev *, struct v4l2_subdev_fh *) ;
   int (*close)(struct v4l2_subdev *, struct v4l2_subdev_fh *) ;
   void (*release)(struct v4l2_subdev *) ;
};
#line 772 
struct regulator_bulk_data;
#line 797  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_platform_data {
   struct regulator_bulk_data *regulators ;
   int num_regulators ;
   void *host_priv ;
};
#line 848  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev {
   struct media_entity entity ;
   struct list_head list ;
   struct module *owner ;
   bool owner_v4l2_dev ;
   u32 flags ;
   struct v4l2_device *v4l2_dev ;
   struct v4l2_subdev_ops *ops ;
   struct v4l2_subdev_internal_ops *internal_ops ;
   struct v4l2_ctrl_handler *ctrl_handler ;
   char name[32U] ;
   u32 grp_id ;
   void *dev_priv ;
   void *host_priv ;
   struct video_device *devnode ;
   struct device *dev ;
   struct fwnode_handle *fwnode ;
   struct list_head async_list ;
   struct v4l2_async_subdev *asd ;
   struct v4l2_async_notifier *notifier ;
   struct v4l2_async_notifier *subdev_notifier ;
   struct v4l2_subdev_platform_data *pdata ;
};
#line 906  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_fh {
   struct v4l2_fh vfh ;
   struct module *owner ;
   struct v4l2_subdev_pad_config *pad ;
};
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-device.h"
struct v4l2_device {
   struct device *dev ;
   struct media_device *mdev ;
   struct list_head subdevs ;
   spinlock_t lock ;
   char name[36U] ;
   void (*notify)(struct v4l2_subdev *, unsigned int , void *) ;
   struct v4l2_ctrl_handler *ctrl_handler ;
   struct v4l2_prio_state prio ;
   struct kref ref ;
   void (*release)(struct v4l2_device *) ;
};
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ptp_clock_kernel.h"
struct ptp_system_timestamp {
   struct timespec64 pre_ts ;
   struct timespec64 post_ts ;
};
#line 277 
struct dma_chan;
#line 279 
struct spi_controller;
#line 280 
struct spi_transfer;
#line 281 
struct spi_controller_mem_ops;
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spi/spi.h"
struct spi_statistics {
   spinlock_t lock ;
   unsigned long messages ;
   unsigned long transfers ;
   unsigned long errors ;
   unsigned long timedout ;
   unsigned long spi_sync ;
   unsigned long spi_sync_immediate ;
   unsigned long spi_async ;
   unsigned long long bytes ;
   unsigned long long bytes_rx ;
   unsigned long long bytes_tx ;
   unsigned long transfer_bytes_histo[17U] ;
   unsigned long transfers_split_maxsize ;
};
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spi/spi.h"
struct spi_delay {
   u16 value ;
   u8 unit ;
};
#line 157  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spi/spi.h"
struct spi_device {
   struct device dev ;
   struct spi_controller *controller ;
   struct spi_controller *master ;
   u32 max_speed_hz ;
   u8 chip_select ;
   u8 bits_per_word ;
   bool rt ;
   u32 mode ;
   int irq ;
   void *controller_state ;
   void *controller_data ;
   char modalias[32U] ;
   char *driver_override ;
   int cs_gpio ;
   struct gpio_desc *cs_gpiod ;
   struct spi_delay word_delay ;
   struct spi_statistics statistics ;
};
#line 247 
struct spi_message;
#line 452  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spi/spi.h"
struct spi_controller {
   struct device dev ;
   struct list_head list ;
   s16 bus_num ;
   u16 num_chipselect ;
   u16 dma_alignment ;
   u32 mode_bits ;
   u32 bits_per_word_mask ;
   u32 min_speed_hz ;
   u32 max_speed_hz ;
   u16 flags ;
   bool slave ;
   size_t (*max_transfer_size)(struct spi_device *) ;
   size_t (*max_message_size)(struct spi_device *) ;
   struct mutex io_mutex ;
   spinlock_t bus_lock_spinlock ;
   struct mutex bus_lock_mutex ;
   bool bus_lock_flag ;
   int (*setup)(struct spi_device *) ;
   int (*set_cs_timing)(struct spi_device *, struct spi_delay *, struct spi_delay *, struct spi_delay *) ;
   int (*transfer)(struct spi_device *, struct spi_message *) ;
   void (*cleanup)(struct spi_device *) ;
   bool (*can_dma)(struct spi_controller *, struct spi_device *, struct spi_transfer *) ;
   bool queued ;
   struct kthread_worker kworker ;
   struct task_struct *kworker_task ;
   struct kthread_work pump_messages ;
   spinlock_t queue_lock ;
   struct list_head queue ;
   struct spi_message *cur_msg ;
   bool idling ;
   bool busy ;
   bool running ;
   bool rt ;
   bool auto_runtime_pm ;
   bool cur_msg_prepared ;
   bool cur_msg_mapped ;
   struct completion xfer_completion ;
   size_t max_dma_len ;
   int (*prepare_transfer_hardware)(struct spi_controller *) ;
   int (*transfer_one_message)(struct spi_controller *, struct spi_message *) ;
   int (*unprepare_transfer_hardware)(struct spi_controller *) ;
   int (*prepare_message)(struct spi_controller *, struct spi_message *) ;
   int (*unprepare_message)(struct spi_controller *, struct spi_message *) ;
   int (*slave_abort)(struct spi_controller *) ;
   void (*set_cs)(struct spi_device *, bool ) ;
   int (*transfer_one)(struct spi_controller *, struct spi_device *, struct spi_transfer *) ;
   void (*handle_err)(struct spi_controller *, struct spi_message *) ;
   struct spi_controller_mem_ops *mem_ops ;
   struct spi_delay cs_setup ;
   struct spi_delay cs_hold ;
   struct spi_delay cs_inactive ;
   int *cs_gpios ;
   struct gpio_desc **cs_gpiods ;
   bool use_gpio_descriptors ;
   struct spi_statistics statistics ;
   struct dma_chan *dma_tx ;
   struct dma_chan *dma_rx ;
   void *dummy_rx ;
   void *dummy_tx ;
   int (*fw_translate_cs)(struct spi_controller *, unsigned int ) ;
   bool ptp_sts_supported ;
   unsigned long irq_flags ;
};
#line 890  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spi/spi.h"
struct spi_transfer {
   void *tx_buf ;
   void *rx_buf ;
   unsigned int len ;
   dma_addr_t tx_dma ;
   dma_addr_t rx_dma ;
   struct sg_table tx_sg ;
   struct sg_table rx_sg ;
   unsigned int cs_change : 1 ;
   unsigned int tx_nbits : 3 ;
   unsigned int rx_nbits : 3 ;
   u8 bits_per_word ;
   u16 delay_usecs ;
   struct spi_delay delay ;
   struct spi_delay cs_change_delay ;
   struct spi_delay word_delay ;
   u32 speed_hz ;
   u32 effective_speed_hz ;
   unsigned int ptp_sts_word_pre ;
   unsigned int ptp_sts_word_post ;
   struct ptp_system_timestamp *ptp_sts ;
   bool timestamped_pre ;
   bool timestamped_post ;
   struct list_head transfer_list ;
};
#line 961  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spi/spi.h"
struct spi_message {
   struct list_head transfers ;
   struct spi_device *spi ;
   unsigned int is_dma_mapped : 1 ;
   void (*complete)(void *) ;
   void *context ;
   unsigned int frame_length ;
   unsigned int actual_length ;
   int status ;
   struct list_head queue ;
   void *state ;
   struct list_head resources ;
};
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 157  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fb_fix_screeninfo {
   char id[16U] ;
   unsigned long smem_start ;
   __u32 smem_len ;
   __u32 type ;
   __u32 type_aux ;
   __u32 visual ;
   __u16 xpanstep ;
   __u16 ypanstep ;
   __u16 ywrapstep ;
   __u32 line_length ;
   unsigned long mmio_start ;
   __u32 mmio_len ;
   __u32 accel ;
   __u16 capabilities ;
   __u16 reserved[2U] ;
};
#line 188  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fb_bitfield {
   __u32 offset ;
   __u32 length ;
   __u32 msb_right ;
};
#line 241  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fb_var_screeninfo {
   __u32 xres ;
   __u32 yres ;
   __u32 xres_virtual ;
   __u32 yres_virtual ;
   __u32 xoffset ;
   __u32 yoffset ;
   __u32 bits_per_pixel ;
   __u32 grayscale ;
   struct fb_bitfield red ;
   struct fb_bitfield green ;
   struct fb_bitfield blue ;
   struct fb_bitfield transp ;
   __u32 nonstd ;
   __u32 activate ;
   __u32 height ;
   __u32 width ;
   __u32 accel_flags ;
   __u32 pixclock ;
   __u32 left_margin ;
   __u32 right_margin ;
   __u32 upper_margin ;
   __u32 lower_margin ;
   __u32 hsync_len ;
   __u32 vsync_len ;
   __u32 sync ;
   __u32 vmode ;
   __u32 rotate ;
   __u32 colorspace ;
   __u32 reserved[4U] ;
};
#line 281  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fb_cmap {
   __u32 start ;
   __u32 len ;
   __u16 *red ;
   __u16 *green ;
   __u16 *blue ;
   __u16 *transp ;
};
#line 341  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fb_copyarea {
   __u32 dx ;
   __u32 dy ;
   __u32 width ;
   __u32 height ;
   __u32 sx ;
   __u32 sy ;
};
#line 350  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fb_fillrect {
   __u32 dx ;
   __u32 dy ;
   __u32 width ;
   __u32 height ;
   __u32 color ;
   __u32 rop ;
};
#line 359  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fb_image {
   __u32 dx ;
   __u32 dy ;
   __u32 width ;
   __u32 height ;
   __u32 fg_color ;
   __u32 bg_color ;
   __u8 depth ;
   char *data ;
   struct fb_cmap cmap ;
};
#line 383  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fbcurpos {
   __u16 x ;
   __u16 y ;
};
#line 387  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fb_cursor {
   __u16 set ;
   __u16 enable ;
   __u16 rop ;
   char *mask ;
   struct fbcurpos hot ;
   struct fb_image image ;
};
#line 400 
enum backlight_type {
    BACKLIGHT_RAW = 1,
    BACKLIGHT_PLATFORM = 2,
    BACKLIGHT_FIRMWARE = 3,
    BACKLIGHT_TYPE_MAX = 4
};
#line 412 
enum backlight_scale {
    BACKLIGHT_SCALE_UNKNOWN = 0,
    BACKLIGHT_SCALE_LINEAR = 1,
    BACKLIGHT_SCALE_NON_LINEAR = 2
};
#line 418 
struct backlight_device;
#line 419 
struct fb_info;
#line 58  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backlight.h"
struct backlight_ops {
   unsigned int options ;
   int (*update_status)(struct backlight_device *) ;
   int (*get_brightness)(struct backlight_device *) ;
   int (*check_fb)(struct backlight_device *, struct fb_info *) ;
};
#line 74  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backlight.h"
struct backlight_properties {
   int brightness ;
   int max_brightness ;
   int power ;
   int fb_blank ;
   enum backlight_type type ;
   unsigned int state ;
   enum backlight_scale scale ;
};
#line 97  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backlight.h"
struct backlight_device {
   struct backlight_properties props ;
   struct mutex update_lock ;
   struct mutex ops_lock ;
   struct backlight_ops *ops ;
   struct notifier_block fb_notif ;
   struct list_head entry ;
   struct device dev ;
   bool fb_bl_on[32U] ;
   int use_count ;
};
#line 52  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_chroma {
   __u32 redx ;
   __u32 greenx ;
   __u32 bluex ;
   __u32 whitex ;
   __u32 redy ;
   __u32 greeny ;
   __u32 bluey ;
   __u32 whitey ;
};
#line 63 
struct fb_videomode;
#line 63  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_monspecs {
   struct fb_chroma chroma ;
   struct fb_videomode *modedb ;
   __u8 manufacturer[4U] ;
   __u8 monitor[14U] ;
   __u8 serial_no[14U] ;
   __u8 ascii[14U] ;
   __u32 modedb_len ;
   __u32 model ;
   __u32 serial ;
   __u32 year ;
   __u32 week ;
   __u32 hfmin ;
   __u32 hfmax ;
   __u32 dclkmin ;
   __u32 dclkmax ;
   __u16 input ;
   __u16 dpms ;
   __u16 signal ;
   __u16 vfmin ;
   __u16 vfmax ;
   __u16 gamma ;
   __u16 gtf : 1 ;
   __u16 misc ;
   __u8 version ;
   __u8 revision ;
   __u8 max_x ;
   __u8 max_y ;
};
#line 144  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_blit_caps {
   u32 x ;
   u32 y ;
   u32 len ;
   u32 flags ;
};
#line 185  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_pixmap {
   u8 *addr ;
   u32 size ;
   u32 offset ;
   u32 buf_align ;
   u32 scan_align ;
   u32 access_align ;
   u32 flags ;
   u32 blit_x ;
   u32 blit_y ;
   void (*writeio)(struct fb_info *, void *, void *, unsigned int ) ;
   void (*readio)(struct fb_info *, void *, void *, unsigned int ) ;
};
#line 203  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_deferred_io {
   unsigned long delay ;
   struct mutex lock ;
   struct list_head pagelist ;
   void (*first_io)(struct fb_info *) ;
   void (*deferred_io)(struct fb_info *, struct list_head *) ;
};
#line 228  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_ops {
   struct module *owner ;
   int (*fb_open)(struct fb_info *, int ) ;
   int (*fb_release)(struct fb_info *, int ) ;
   ssize_t (*fb_read)(struct fb_info *, char *, size_t , loff_t *) ;
   ssize_t (*fb_write)(struct fb_info *, char *, size_t , loff_t *) ;
   int (*fb_check_var)(struct fb_var_screeninfo *, struct fb_info *) ;
   int (*fb_set_par)(struct fb_info *) ;
   int (*fb_setcolreg)(unsigned int , unsigned int , unsigned int , unsigned int , unsigned int , struct fb_info *) ;
   int (*fb_setcmap)(struct fb_cmap *, struct fb_info *) ;
   int (*fb_blank)(int , struct fb_info *) ;
   int (*fb_pan_display)(struct fb_var_screeninfo *, struct fb_info *) ;
   void (*fb_fillrect)(struct fb_info *, struct fb_fillrect *) ;
   void (*fb_copyarea)(struct fb_info *, struct fb_copyarea *) ;
   void (*fb_imageblit)(struct fb_info *, struct fb_image *) ;
   int (*fb_cursor)(struct fb_info *, struct fb_cursor *) ;
   int (*fb_sync)(struct fb_info *) ;
   int (*fb_ioctl)(struct fb_info *, unsigned int , unsigned long ) ;
   int (*fb_compat_ioctl)(struct fb_info *, unsigned int , unsigned long ) ;
   int (*fb_mmap)(struct fb_info *, struct vm_area_struct *) ;
   void (*fb_get_caps)(struct fb_info *, struct fb_blit_caps *, struct fb_var_screeninfo *) ;
   void (*fb_destroy)(struct fb_info *) ;
   int (*fb_debug_enter)(struct fb_info *) ;
   int (*fb_debug_leave)(struct fb_info *) ;
};
#line 306  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_tilemap {
   __u32 width ;
   __u32 height ;
   __u32 depth ;
   __u32 length ;
   __u8 *data ;
};
#line 315  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_tilerect {
   __u32 sx ;
   __u32 sy ;
   __u32 width ;
   __u32 height ;
   __u32 index ;
   __u32 fg ;
   __u32 bg ;
   __u32 rop ;
};
#line 326  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_tilearea {
   __u32 sx ;
   __u32 sy ;
   __u32 dx ;
   __u32 dy ;
   __u32 width ;
   __u32 height ;
};
#line 335  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_tileblit {
   __u32 sx ;
   __u32 sy ;
   __u32 width ;
   __u32 height ;
   __u32 fg ;
   __u32 bg ;
   __u32 length ;
   __u32 *indices ;
};
#line 346  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_tilecursor {
   __u32 sx ;
   __u32 sy ;
   __u32 mode ;
   __u32 shape ;
   __u32 fg ;
   __u32 bg ;
};
#line 355  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_tile_ops {
   void (*fb_settile)(struct fb_info *, struct fb_tilemap *) ;
   void (*fb_tilecopy)(struct fb_info *, struct fb_tilearea *) ;
   void (*fb_tilefill)(struct fb_info *, struct fb_tilerect *) ;
   void (*fb_tileblit)(struct fb_info *, struct fb_tileblit *) ;
   void (*fb_tilecursor)(struct fb_info *, struct fb_tilecursor *) ;
   int (*fb_get_tilemax)(struct fb_info *) ;
};
#line 499  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct aperture {
   resource_size_t base ;
   resource_size_t size ;
};
#line 497  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct apertures_struct {
   unsigned int count ;
   struct aperture ranges[0U] ;
};
#line 439  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
union __anonunion_7778 {
   char *screen_base ;
   char *screen_buffer ;
};
#line 439  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_info {
   atomic_t count ;
   int node ;
   int flags ;
   int fbcon_rotate_hint ;
   struct mutex lock ;
   struct mutex mm_lock ;
   struct fb_var_screeninfo var ;
   struct fb_fix_screeninfo fix ;
   struct fb_monspecs monspecs ;
   struct work_struct queue ;
   struct fb_pixmap pixmap ;
   struct fb_pixmap sprite ;
   struct fb_cmap cmap ;
   struct list_head modelist ;
   struct fb_videomode *mode ;
   struct backlight_device *bl_dev ;
   struct mutex bl_curve_mutex ;
   u8 bl_curve[128U] ;
   struct delayed_work deferred_work ;
   struct fb_deferred_io *fbdefio ;
   struct fb_ops *fbops ;
   struct device *device ;
   struct device *dev ;
   int class_flag ;
   struct fb_tile_ops *tileops ;
   union __anonunion_7778 __anonCompField_fb_info_73 ;
   unsigned long screen_size ;
   void *pseudo_palette ;
   u32 state ;
   void *fbcon_par ;
   void *par ;
   struct apertures_struct *apertures ;
   bool skip_vt_switch ;
};
#line 767  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_videomode {
   char *name ;
   u32 refresh ;
   u32 xres ;
   u32 yres ;
   u32 pixclock ;
   u32 left_margin ;
   u32 right_margin ;
   u32 upper_margin ;
   u32 lower_margin ;
   u32 hsync_len ;
   u32 vsync_len ;
   u32 sync ;
   u32 vmode ;
   u32 flag ;
};
#line 63  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
struct ldv_kmem_cache {
   char *name ;
   unsigned int size ;
};
#line 88  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
typedef unsigned long pthread_t;
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/thread.h"
union pthread_attr_t {
   char __size[56U] ;
   long __align ;
};
#line 30  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/thread.h"
typedef union pthread_attr_t pthread_attr_t;
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 15  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/emg/0/environment_model.c"
struct emg_struct_free_irq_5 {
   int arg0 ;
   int signal_pending ;
};
#line 20  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/emg/0/environment_model.c"
struct emg_struct_interrupt_scenario_rocker_cmd_irq_handler_14 {
   int arg0 ;
   enum irqreturn (*arg1)(int , void *) ;
   enum irqreturn (*arg2)(int , void *) ;
   void *arg3 ;
   int signal_pending ;
};
#line 28  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/emg/0/environment_model.c"
struct emg_struct_random_allocationless_scenario_rocker_port_get_drvinfo_19 {
   struct net_device *arg0 ;
   int signal_pending ;
};
#line 33  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/emg/0/environment_model.c"
struct emg_struct_pci_scenario_rocker_pci_driver_20 {
   struct pci_driver *arg0 ;
   int signal_pending ;
};
#line 38  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/emg/0/environment_model.c"
struct emg_struct_timer_scenario_7_21 {
   struct timer_list *arg0 ;
   int signal_pending ;
};
/* compiler builtin: 
   unsigned short __builtin_bswap16(unsigned short);   */
/* compiler builtin: 
   unsigned int __builtin_bswap32(unsigned int);   */
/* compiler builtin: 
   void *__builtin_memcpy(void *, void const *, unsigned long);   */
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/common/inline_asm.h"
#line 22 
void ldv_inline_asm(void);
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/compiler.h"
__inline static void __read_once_size(void *p, void *res, int size)
{
  #line 199 
  switch (size) {
    #line 199 
    case 1: 
            #line 199 
    ;
    #line 199 
    *((__u8 *)res) = *((__u8 *)p);
    #line 199 
    break;
    #line 199 
    case 2: 
            #line 199 
    ;
    #line 199 
    *((__u16 *)res) = *((__u16 *)p);
    #line 199 
    break;
    #line 199 
    case 4: 
            #line 199 
    ;
    #line 199 
    *((__u32 *)res) = *((__u32 *)p);
    #line 199 
    break;
    #line 199 
    case 8: 
            #line 199 
    ;
    #line 199 
    *((__u64 *)res) = *((__u64 *)p);
    #line 199 
    break;
    #line 199 
    default: 
             #line 199 
    ;
    #line 200 
    ldv_inline_asm();
    #line 199 
    __builtin_memcpy(res,(void const *)p,(unsigned long)size);
    #line 200 
    ldv_inline_asm();
  }
  #line 203 
  return;
}

#line 220  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/compiler.h"
__inline static void __write_once_size(void *p, void *res, int size)
{
  #line 222 
  switch (size) {
    #line 223 
    case 1: 
            #line 223 
    ;
    #line 223 
    *((__u8 *)p) = *((__u8 *)res);
    #line 223 
    break;
    #line 224 
    case 2: 
            #line 224 
    ;
    #line 224 
    *((__u16 *)p) = *((__u16 *)res);
    #line 224 
    break;
    #line 225 
    case 4: 
            #line 225 
    ;
    #line 225 
    *((__u32 *)p) = *((__u32 *)res);
    #line 225 
    break;
    #line 226 
    case 8: 
            #line 226 
    ;
    #line 226 
    *((__u64 *)p) = *((__u64 *)res);
    #line 226 
    break;
    #line 227 
    default: 
             #line 227 
    ;
    #line 228 
    ldv_inline_asm();
    #line 229 
    __builtin_memcpy(p,(void const *)res,(unsigned long)size);
    #line 230 
    ldv_inline_asm();
  }
  #line 232 
  return;
}

#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kasan-checks.h"
__inline static bool kasan_check_read(void *p, unsigned int size)
{
  #line 36 
  return (_Bool)1;
}

#line 123  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/bitops.h"
__inline static void arch_change_bit(long nr, unsigned long *addr)
{
  #line 125 
  if (0 != 0) 
              #line 127 
              ldv_inline_asm(); else 
                                     #line 130 
                                     ldv_inline_asm();
  #line 131 
  return;
}

#line 136  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/bitops.h"
__inline static bool arch_test_and_set_bit(long nr, unsigned long *addr)
{
  #line 138 
  bool c;
  #line 139 
  ldv_inline_asm();
  #line 138 
  return c;
}

#line 204  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/bitops.h"
__inline static bool constant_test_bit(long nr, unsigned long *addr)
{
  #line 207 
  return (_Bool)(((*(addr + (unsigned long)(nr >> 6)) >> (nr & 63L)) & 1UL) != 0UL);
}

#line 210  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/bitops.h"
__inline static bool variable_test_bit(long nr, unsigned long *addr)
{
  #line 212 
  bool oldbit;
  #line 213 
  ldv_inline_asm();
  #line 219 
  return oldbit;
}

#line 44  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/bitops/instrumented-atomic.h"
#line 126  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_ofdpa.i.aux"
static void cif_clear_bit(long nr, unsigned long *addr);
#line 55  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/bitops/instrumented-atomic.h"
__inline static void change_bit(long nr, unsigned long *addr)
{
  #line 57 
  kasan_check_read((void *)(addr + (unsigned long)(nr / 64L)),8U);
  #line 58 
  arch_change_bit(nr,addr);
  #line 59 
  return;
}

#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/bitops/instrumented-atomic.h"
__inline static bool test_and_set_bit(long nr, unsigned long *addr)
{
  #line 70 
  kasan_check_read((void *)(addr + (unsigned long)(nr / 64L)),8U);
  #line 71 
  return arch_test_and_set_bit(nr,addr);
}

#line 108  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/bitops/instrumented-non-atomic.h"
__inline static bool test_bit(long nr, unsigned long *addr)
{
  #line 111 
  int tmp_1;
  #line 110 
  kasan_check_read((void *)(addr + (unsigned long)(nr / 64L)),8U);
  #line 111 
  if (0 != 0) {
    #line 111 
    tmp_1 = (int)constant_test_bit(nr,addr) != 0;
  }
  else {
    #line 111 
    tmp_1 = (int)variable_test_bit(nr,addr) != 0;
  }
  #line 111 
  return (_Bool)(tmp_1 != 0);
}

#line 26  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
#line 133  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_ofdpa.i.aux"
static void INIT_LIST_HEAD(struct list_head *list);
#line 741  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
__inline static void INIT_HLIST_NODE(struct hlist_node *h)
{
  #line 743 
  h->next = (struct hlist_node *)0;
  #line 744 
  h->pprev = (struct hlist_node **)0;
  #line 745 
  return;
}

#line 747  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
__inline static int hlist_unhashed(struct hlist_node *h)
{
  #line 749 
  return h->pprev == (struct hlist_node **)0;
}

#line 757  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
__inline static void __hlist_del(struct hlist_node *n)
{
  #line 759 
  struct hlist_node *next = n->next;
  #line 760 
  struct hlist_node **pprev = n->pprev;
  {
    #line 763 
    union __anonunion___u_21 __u = {.__val = next};
    #line 762 
    __write_once_size((void *)pprev,(void *)(& __u.__c),8);
    #line 762 
    struct hlist_node *tmp = __u.__val;
  }
  #line 763 
  if (next != (struct hlist_node *)0) 
                                      #line 764 
                                      next->pprev = pprev;
  #line 765 
  return;
}

#line 774  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
__inline static void hlist_del_init(struct hlist_node *n)
{
  #line 776 
  if (hlist_unhashed(n) == 0) {
    #line 777 
    __hlist_del(n);
    #line 778 
    INIT_HLIST_NODE(n);
  }
  #line 780 
  return;
}

#line 782  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
__inline static void hlist_add_head(struct hlist_node *n, struct hlist_head *h)
{
  #line 784 
  struct hlist_node *first = h->first;
  #line 785 
  n->next = first;
  #line 786 
  if (first != (struct hlist_node *)0) 
                                       #line 787 
                                       first->pprev = & n->next;
  {
    #line 789 
    union __anonunion___u_23 __u = {.__val = n};
    #line 788 
    __write_once_size((void *)(& h->first),(void *)(& __u.__c),8);
    #line 788 
    struct hlist_node *tmp = __u.__val;
  }
  #line 789 
  n->pprev = & h->first;
  #line 790 
  return;
}

#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/string_64.h"
#line 14 
void *memcpy(void *, void *, size_t);
#line 61 
#line 61 
int memcmp(void *, void *, size_t);
#line 49  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/string.h"
#line 806  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_ofdpa.i.aux"
static int cif_strcmp(char *cs, char *ct);
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/cmpxchg.h"
#line 15 
void __cmpxchg_wrong_size(void);
#line 17 
#line 17 
void __xadd_wrong_size(void);
#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/cmpxchg_64.h"
__inline static int arch_atomic_read(atomic_t *v)
{
  #line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/atomic.h"
  union __anonunion___u_67 __u;
  #line 31 
  __read_once_size((void *)(& v->counter),(void *)(& __u.__c),4);
  #line 31 
  return (__u.__val);
}

#line 187  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/atomic.h"
__inline static int arch_atomic_fetch_sub(int i, atomic_t *v)
{
  #line 189 
  int __ret;
  #line 189 
  __ret = - i;
  #line 189 
  switch (4UL) {
    #line 189 
    case (unsigned long)1: 
                           #line 189 
    ;
    #line 190 
    ldv_inline_asm();
    #line 189 
    break;
    #line 189 
    case (unsigned long)2: 
                           #line 189 
    ;
    #line 190 
    ldv_inline_asm();
    #line 189 
    break;
    #line 189 
    case (unsigned long)4: 
                           #line 189 
    ;
    #line 190 
    ldv_inline_asm();
    #line 189 
    break;
    #line 189 
    case (unsigned long)8: 
                           #line 189 
    ;
    #line 190 
    ldv_inline_asm();
    #line 189 
    break;
    #line 189 
    default: 
             #line 189 
    ;
    #line 189 
    __xadd_wrong_size();
  }
  #line 189 
  return __ret;
}

#line 198  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/atomic.h"
__inline static bool arch_atomic_try_cmpxchg(atomic_t *v, int *old, int new)
{
  #line 200 
  bool success;
  {
    #line 200 
    int *_old = old;
    #line 200 
    int __old = *_old;
    #line 200 
    int __new = new;
    #line 200 
    switch (4UL) {
      #line 200 
      case (unsigned long)1: 
                             #line 200 
      ;
      {
        #line 200 
        u8 *__ptr = (u8 *)(& v->counter);
        #line 201 
        ldv_inline_asm();
        #line 200 
        break;
      }
      #line 200 
      case (unsigned long)2: 
                             #line 200 
      ;
      {
        #line 200 
        u16 *__ptr_0 = (u16 *)(& v->counter);
        #line 201 
        ldv_inline_asm();
        #line 200 
        break;
      }
      #line 200 
      case (unsigned long)4: 
                             #line 200 
      ;
      {
        #line 200 
        u32 *__ptr_1 = (u32 *)(& v->counter);
        #line 201 
        ldv_inline_asm();
        #line 200 
        break;
      }
      #line 200 
      case (unsigned long)8: 
                             #line 200 
      ;
      {
        #line 200 
        u64 *__ptr_2 = (u64 *)(& v->counter);
        #line 201 
        ldv_inline_asm();
        #line 200 
        break;
      }
      #line 200 
      default: 
               #line 200 
      ;
      #line 200 
      __cmpxchg_wrong_size();
    }
    #line 200 
    if ((long)(! success) != 0L) 
                                 #line 200 
                                 *_old = __old;
    }
  #line 200 
  return (_Bool)((long)((long)((int)success != 0)) != 0L);
}

#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/atomic-instrumented.h"
__inline static int atomic_read(atomic_t *v)
{
  #line 26 
  kasan_check_read((void *)v,4U);
  #line 27 
  return arch_atomic_read(v);
}

#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/atomic-instrumented.h"
__inline static int atomic_fetch_sub(int i, atomic_t *v)
{
  #line 199 
  kasan_check_read((void *)v,4U);
  #line 200 
  return arch_atomic_fetch_sub(i,v);
}

#line 691  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/atomic-instrumented.h"
__inline static bool atomic_try_cmpxchg(atomic_t *v, int *old, int new)
{
  #line 693 
  kasan_check_read((void *)v,4U);
  #line 694 
  kasan_check_read((void *)old,4U);
  #line 695 
  return arch_atomic_try_cmpxchg(v,old,new);
}

#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/err.h"
#line 210  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_ofdpa.i.aux"
static long PTR_ERR(void *ptr);
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/err.h"
#line 217  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_ofdpa.i.aux"
static bool IS_ERR(void *ptr);
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/irqflags.h"
#line 20 
unsigned long native_save_fl(void);
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/irqflags.h"
unsigned long native_save_fl(void)
{
  #line 22 
  unsigned long flags;
  #line 23 
  ldv_inline_asm();
  #line 35 
  return flags;
}

#line 38 
#line 39 
void native_restore_fl(unsigned long flags);
#line 39  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/irqflags.h"
void native_restore_fl(unsigned long flags)
{
  #line 41 
  ldv_inline_asm();
  #line 42 
  return;
}

#line 8  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bottom_half.h"
#line 8 
void __local_bh_disable_ip(unsigned long, unsigned int);
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bottom_half.h"
__inline static void local_bh_disable(void)
{
  #line 19 
  __here_0: 
            #line 19 
  ;
  #line 19 
  __local_bh_disable_ip((unsigned long)((void *)0),512U);
  #line 21 
  return;
}

#line 23 
#line 23 
void __local_bh_enable_ip(unsigned long, unsigned int);
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bottom_half.h"
__inline static void local_bh_enable(void)
{
  #line 32 
  __here_0: 
            #line 32 
  ;
  #line 32 
  __local_bh_enable_ip((unsigned long)((void *)0),512U);
  #line 34 
  return;
}

#line 302  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockdep.h"
#line 302 
void lockdep_init_map(struct lockdep_map *, char *, struct lock_class_key *, int);
#line 348 
#line 348 
void lock_acquire(struct lockdep_map *, unsigned int, int, int, int, struct lockdep_map *, unsigned long);
#line 352 
#line 352 
void lock_release(struct lockdep_map *, unsigned long);
#line 658 
#line 658 
void lockdep_rcu_suspicious(char *, int, char *);
#line 95  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
#line 95 
void __raw_spin_lock_init(raw_spinlock_t *, char *, struct lock_class_key *);
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_api_smp.h"
#line 43 
void _raw_spin_unlock_irqrestore(raw_spinlock_t *, unsigned long);
#line 325  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
__inline static raw_spinlock_t *spinlock_check(spinlock_t *lock)
{
  #line 327 
  return & lock->__anonCompField_spinlock_25.rlock;
}

#line 391  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
static void spin_unlock_irqrestore(spinlock_t *lock, unsigned long flags)
{
  {
    #line 393 
    unsigned long __dummy;
    #line 393 
    unsigned long __dummy2;
    }
  #line 393 
  _raw_spin_unlock_irqrestore(& lock->__anonCompField_spinlock_25.rlock,flags);
  #line 395 
  return;
}

#line 395 
#line 822  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_ofdpa.i.aux"
static void cif_spin_unlock_irqrestore_flow_tbl_lock_of_ofdpa(spinlock_t *lock, unsigned long flags);
#line 395  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
#line 840  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_ofdpa.i.aux"
static void cif_spin_unlock_irqrestore_group_tbl_lock_of_ofdpa(spinlock_t *lock, unsigned long flags);
#line 395  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
#line 858  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_ofdpa.i.aux"
static void cif_spin_unlock_irqrestore_neigh_tbl_lock_of_ofdpa(spinlock_t *lock, unsigned long flags);
#line 395  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
#line 876  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_ofdpa.i.aux"
static void cif_spin_unlock_irqrestore_fdb_tbl_lock_of_ofdpa(spinlock_t *lock, unsigned long flags);
#line 395  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
#line 902  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_ofdpa.i.aux"
static void cif_spin_unlock_irqrestore_internal_vlan_tbl_lock_of_ofdpa(spinlock_t *lock, unsigned long flags);
#line 33 
#line 33 
void __ldv_spin_lock(spinlock_t *);
#line 35 
#line 813 
static void cif___ldv_spin_lock_flow_tbl_lock_of_ofdpa(spinlock_t *lock);
#line 35 
#line 831 
static void cif___ldv_spin_lock_group_tbl_lock_of_ofdpa(spinlock_t *lock);
#line 35 
#line 849 
static void cif___ldv_spin_lock_neigh_tbl_lock_of_ofdpa(spinlock_t *lock);
#line 35 
#line 867 
static void cif___ldv_spin_lock_fdb_tbl_lock_of_ofdpa(spinlock_t *lock);
#line 35 
#line 893 
static void cif___ldv_spin_lock_internal_vlan_tbl_lock_of_ofdpa(spinlock_t *lock);
#line 40 
#line 40 
void ldv_spin_model_lock(char *);
#line 41 
#line 41 
void ldv_spin_model_unlock(char *);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/err.h"
#line 23 
bool ldv_is_err(void *ptr);
#line 26 
#line 26 
long ldv_ptr_err(void *ptr);
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/bitmap.h"
#line 22 
void ldv_clear_bit(long nr, unsigned long *addr);
#line 26  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/string.h"
#line 26 
int ldv_strcmp(char *cs, char *ct);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/list.h"
#line 23 
void ldv_init_list_head(struct list_head *list);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 23 
void *ldv_kzalloc(size_t size, gfp_t flags);
#line 25 
#line 25 
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags);
#line 60  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/hash.h"
__inline static u32 __hash_32_generic(u32 val)
{
  #line 62 
  return val * 1640531527U;
}

#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/hash.h"
__inline static u32 hash_32_generic(u32 val, unsigned int bits)
{
  #line 71 
  ;
  #line 71 
  return __hash_32_generic(val) >> (32U - bits);
}

#line 94  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/hash.h"
__inline static u32 hash32_ptr(void *ptr)
{
  #line 96 
  unsigned long val = (unsigned long)ptr;
  #line 99 
  val = (val >> 32) ^ val;
  #line 101 
  return (unsigned int)val;
}

#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rcutree.h"
#line 56 
bool rcu_is_watching(void);
#line 206  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rcupdate.h"
__inline static void rcu_lock_acquire(struct lockdep_map *map)
{
  #line 208 
  __here_0: 
            #line 208 
  ;
  #line 208 
  ;
  #line 208 
  lock_acquire(map,0U,0,2,0,(struct lockdep_map *)0,(unsigned long)((void *)0));
  #line 210 
  return;
}

#line 211  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rcupdate.h"
__inline static void rcu_lock_release(struct lockdep_map *map)
{
  #line 213 
  __here_0: 
            #line 213 
  ;
  #line 213 
  ;
  #line 213 
  lock_release(map,(unsigned long)((void *)0));
  #line 215 
  return;
}

#line 217 
#line 217 
extern struct lockdep_map rcu_bh_lock_map;
#line 220 
#line 220 
int debug_lockdep_rcu_enabled(void);
#line 222 
#line 222 
int rcu_read_lock_bh_held(void);
#line 686  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rcupdate.h"
__inline static void rcu_read_lock_bh(void)
{
  #line 688 
  local_bh_disable();
  #line 690 
  rcu_lock_acquire(& rcu_bh_lock_map);
  {
    #line 691 
    bool __warned;
    #line 691 
    if (debug_lockdep_rcu_enabled() != 0) 
      #line 691 
      if (! __warned) {
        #line 691 
        if (! rcu_is_watching()) {
          #line 691 
          __warned = (_Bool)1;
          #line 691 
          lockdep_rcu_suspicious((char *)"./include/linux/rcupdate.h",691,(char *)"rcu_read_lock_bh() used illegally while idle");
        }
      }
  }
  #line 694 
  return;
}

#line 700  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rcupdate.h"
__inline static void rcu_read_unlock_bh(void)
{
  {
    #line 702 
    bool __warned;
    #line 702 
    if (debug_lockdep_rcu_enabled() != 0) 
      #line 702 
      if (! __warned) {
        #line 702 
        if (! rcu_is_watching()) {
          #line 702 
          __warned = (_Bool)1;
          #line 702 
          lockdep_rcu_suspicious((char *)"./include/linux/rcupdate.h",702,(char *)"rcu_read_unlock_bh() used illegally while idle");
        }
      }
  }
  #line 704 
  rcu_lock_release(& rcu_bh_lock_map);
  #line 706 
  local_bh_enable();
  #line 707 
  return;
}

#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/hashtable.h"
__inline static void __hash_init(struct hlist_head *ht, unsigned int sz)
{
  #line 36 
  unsigned int i;
  #line 38 
  i = 0U;
  #line 38 
  while (i < sz) {
    #line 39 
    (ht + (unsigned long)i)->first = (struct hlist_node *)0;
    #line 38 
    i ++;
  }
  #line 40 
  return;
}

#line 105  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/hashtable.h"
__inline static void hash_del(struct hlist_node *node)
{
  #line 107 
  hlist_del_init(node);
  #line 108 
  return;
}

#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/crc32.h"
#line 11 
u32 crc32_le(u32, unsigned char *, size_t);
#line 81  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jiffies.h"
#line 81 
extern unsigned long jiffies;
#line 456 
#line 456 
unsigned long clock_t_to_jiffies(unsigned long);
#line 90  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
#line 90 
void init_timer_key(struct timer_list *, void (*)(struct timer_list *), unsigned int, char *, struct lock_class_key *);
#line 173 
#line 885  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_ofdpa.i.aux"
static int cif_mod_timer(struct timer_list *timer, unsigned long expires);
#line 188  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
#line 911  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_ofdpa.i.aux"
static int cif_del_timer_sync(struct timer_list *timer);
#line 214  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
#line 214 
unsigned long round_jiffies_up(unsigned long);
#line 207  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/workqueue.h"
#line 207 
void __init_work(struct work_struct *, int);
#line 454 
#line 454 
void flush_workqueue(struct workqueue_struct *);
#line 554 
#line 691  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_ofdpa.i.aux"
static bool cif_schedule_work(struct work_struct *work);
#line 114  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/refcount.h"
#line 114 
void refcount_warn_saturate(refcount_t *, enum refcount_saturation_type);
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/refcount.h"
__inline static unsigned int refcount_read(refcount_t *r)
{
  #line 134 
  return (unsigned int)atomic_read(& r->refs);
}

#line 155  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/refcount.h"
__inline static bool refcount_add_not_zero(int i, refcount_t *r)
{
  #line 157 
  int old = (int)refcount_read(r);
  #line 159 
  while (! (old == 0)) {
    #line 162 
    if (atomic_try_cmpxchg(& r->refs,& old,old + i)) 
                                                     #line 159 
                                                     break;
  }
  #line 164 
  if ((long)(old < 0) != 0L || (long)(old + i < 0) != 0L) 
                                                          #line 165 
                                                          refcount_warn_saturate(r,(enum refcount_saturation_type)REFCOUNT_ADD_NOT_ZERO_OVF);
  #line 167 
  return (_Bool)(old != 0);
}

#line 209  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/refcount.h"
__inline static bool refcount_inc_not_zero(refcount_t *r)
{
  #line 211 
  return refcount_add_not_zero(1,r);
}

#line 251  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/refcount.h"
__inline static bool refcount_sub_and_test(int i, refcount_t *r)
{
  #line 253 
  int old = atomic_fetch_sub(i,& r->refs);
  #line 255 
  if (old == i) {
    #line 257 
    ldv_inline_asm();
    #line 257 
    return (_Bool)1;
  }
  #line 260 
  if ((long)(old < 0) != 0L || (long)(old - i < 0) != 0L) 
                                                          #line 261 
                                                          refcount_warn_saturate(r,(enum refcount_saturation_type)REFCOUNT_SUB_UAF);
  #line 263 
  return (_Bool)0;
}

#line 279  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/refcount.h"
__inline static bool refcount_dec_and_test(refcount_t *r)
{
  #line 281 
  return refcount_sub_and_test(1,r);
}

#line 189  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/slab.h"
#line 189 
void kfree(void *);
#line 607 
#line 343  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_ofdpa.i.aux"
static void *kcalloc(size_t n, size_t size, gfp_t flags);
#line 668  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/slab.h"
#line 364  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_ofdpa.i.aux"
static void *kzalloc(size_t size, gfp_t flags);
#line 4639  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
__inline static bool netif_is_bridge_master(struct net_device *dev)
{
  #line 4641 
  return (_Bool)((dev->priv_flags & 2U) != 0U);
}

#line 4649  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
__inline static bool netif_is_ovs_master(struct net_device *dev)
{
  #line 4651 
  return (_Bool)((dev->priv_flags & 1048576U) != 0U);
}

#line 4750 
#line 4750 
void netdev_err(struct net_device *, char * , ...);
#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rtnetlink.h"
#line 33 
void rtnl_lock(void);
#line 34 
#line 34 
void rtnl_unlock(void);
#line 273  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/inetdevice.h"
__inline static __be32 inet_make_mask(int logmask)
{
  #line 275 
  if (logmask != 0) {
    #line 276 
    return __builtin_bswap32(- (1U << (32 - logmask)));
  }
  #line 277 
  return 0U;
}

#line 63  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/etherdevice.h"
static u8 eth_reserved_addr_base[6U] = {(unsigned char)1U, (unsigned char)128U, (unsigned char)194U};
#line 76  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/etherdevice.h"
__inline static bool is_link_local_ether_addr(u8 *addr)
{
  #line 78 
  __be16 *a = (__be16 *)addr;
  #line 79 
  __be16 *b = (__be16 *)(& eth_reserved_addr_base);
  #line 80 
  __be16 m = (unsigned short)61695U;
  #line 84 
  return (_Bool)(((*((u32 *)addr) ^ *((u32 *)b)) | ((unsigned int)((int)*(a + 2U) ^ (int)*(b + 2U)) & 61695U)) == 0U);
}

#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/etherdevice.h"
__inline static bool is_zero_ether_addr(u8 *addr)
{
  #line 101 
  return (_Bool)((*((u32 *)addr) | (unsigned int)*((u16 *)(addr + 4U))) == 0U);
}

#line 116  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/etherdevice.h"
__inline static bool is_multicast_ether_addr(u8 *addr)
{
  #line 119 
  u32 a = *((u32 *)addr);
  #line 126 
  return (_Bool)((a & 1U) != 0U);
}

#line 276  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/etherdevice.h"
__inline static void ether_addr_copy(u8 *dst, u8 *src)
{
  #line 279 
  *((u32 *)dst) = *((u32 *)src);
  #line 280 
  *((u16 *)(dst + 4U)) = *((u16 *)(src + 4U));
  #line 281 
  return;
}

#line 315  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/etherdevice.h"
__inline static bool ether_addr_equal(u8 *addr1, u8 *addr2)
{
  #line 318 
  u32 fold = (*((u32 *)addr1) ^ *((u32 *)addr2)) | (unsigned int)((int)*((u16 *)(addr1 + 4U)) ^ (int)*((u16 *)(addr2 + 4U)));
  #line 321 
  return (_Bool)(fold == 0U);
}

#line 266  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/neighbour.h"
__inline static bool neigh_key_eq32(struct neighbour *n, void *pkey)
{
  #line 268 
  return (_Bool)(*((u32 *)(& n->primary_key)) == *((u32 *)pkey));
}

#line 280  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/neighbour.h"
__inline static struct neighbour *___neigh_lookup_noref(struct neigh_table *tbl, bool (*key_eq)(struct neighbour *, void *), __u32 (*hash)(void *, struct net_device *, __u32 *), void *pkey, struct net_device *dev)
{
  #line 289 
  struct neigh_hash_table *________p1;
  #line 294 
  struct neighbour *________p1_0;
  #line 290 
  struct neighbour *n;
  #line 291 
  u32 hash_val;
  {
    #line 290 
    union __anonunion___u_707 __u;
    #line 289 
    __read_once_size((void *)(& tbl->nht),(void *)(& __u.__c),8);
    #line 289 
    ________p1 = (__u.__val);
    {
      #line 289 
      bool __warned;
      #line 289 
      if (debug_lockdep_rcu_enabled() != 0) 
        #line 289 
        if (! __warned) {
          #line 289 
          if (rcu_read_lock_bh_held() == 0) {
            #line 289 
            __warned = (_Bool)1;
            #line 289 
            lockdep_rcu_suspicious((char *)"./include/net/neighbour.h",289,(char *)"suspicious rcu_dereference_check() usage");
          }
        }
    }
    }
  #line 289 
  struct neigh_hash_table *nht = ________p1;
  #line 293 
  hash_val = (*hash)(pkey,dev,(__u32 *)(& nht->hash_rnd)) >> (32U - nht->hash_shift);
  {
    #line 295 
    union __anonunion___u_709 __u_0;
    #line 294 
    __read_once_size((void *)(nht->hash_buckets + (unsigned long)hash_val),(void *)(& __u_0.__c),8);
    #line 294 
    ________p1_0 = (__u_0.__val);
    {
      #line 294 
      bool __warned_0;
      #line 294 
      if (debug_lockdep_rcu_enabled() != 0) 
        #line 294 
        if (! __warned_0) {
          #line 294 
          if (rcu_read_lock_bh_held() == 0) {
            #line 294 
            __warned_0 = (_Bool)1;
            #line 294 
            lockdep_rcu_suspicious((char *)"./include/net/neighbour.h",294,(char *)"suspicious rcu_dereference_check() usage");
          }
        }
    }
    }
  #line 294 
  n = ________p1_0;
  #line 294 
  while (n != (struct neighbour *)0) {
    #line 296 
    struct neighbour *________p1_1;
    #line 297 
    if (n->dev == dev) {
      #line 297 
      if ((int)(*key_eq)(n,pkey) != 0) 
                                       #line 298 
                                       return n;
    }
    {
      #line 297 
      union __anonunion___u_711 __u_1;
      #line 296 
      __read_once_size((void *)(& n->next),(void *)(& __u_1.__c),8);
      #line 296 
      ________p1_1 = (__u_1.__val);
      {
        #line 296 
        bool __warned_1;
        #line 296 
        if (debug_lockdep_rcu_enabled() != 0) 
          #line 296 
          if (! __warned_1) {
            #line 296 
            if (rcu_read_lock_bh_held() == 0) {
              #line 296 
              __warned_1 = (_Bool)1;
              #line 296 
              lockdep_rcu_suspicious((char *)"./include/net/neighbour.h",296,(char *)"suspicious rcu_dereference_check() usage");
            }
          }
      }
      }
    #line 295 
    n = ________p1_1;
  }
  #line 301 
  return (struct neighbour *)0;
}

#line 317 
#line 317 
struct neighbour *__neigh_create(struct neigh_table *, void *, struct net_device *, bool);
#line 319  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/neighbour.h"
__inline static struct neighbour *neigh_create(struct neigh_table *tbl, void *pkey, struct net_device *dev)
{
  #line 323 
  return __neigh_create(tbl,pkey,dev,(_Bool)1);
}

#line 325 
#line 325 
void neigh_destroy(struct neighbour *);
#line 326 
#line 326 
int __neigh_event_send(struct neighbour *, struct sk_buff *);
#line 422  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/neighbour.h"
__inline static void neigh_release(struct neighbour *neigh)
{
  #line 424 
  if ((int)refcount_dec_and_test(& neigh->refcnt) != 0) 
                                                        #line 425 
                                                        neigh_destroy(neigh);
  #line 426 
  return;
}

#line 437  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/neighbour.h"
__inline static int neigh_event_send(struct neighbour *neigh, struct sk_buff *skb)
{
  #line 442 
  union __anonunion___u_715 __u_0;
  #line 439 
  unsigned long now = jiffies;
  #line 441 
  __read_once_size((void *)(& neigh->used),(void *)(& __u_0.__c),8);
  #line 441 
  ;
  #line 441 
  if ((__u_0.__val) != now) {
    #line 443 
    union __anonunion___u_713 __u = {.__val = now};
    #line 442 
    __write_once_size((void *)(& neigh->used),(void *)(& __u.__c),8);
    #line 442 
    unsigned long tmp = __u.__val;
  }
  #line 443 
  if (((int)neigh->nud_state & 218) == 0) {
    #line 444 
    return __neigh_event_send(neigh,skb);
  }
  #line 445 
  return 0;
}

#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/switchdev.h"
__inline static bool switchdev_trans_ph_prepare(struct switchdev_trans *trans)
{
  #line 25 
  return (_Bool)((trans != (struct switchdev_trans *)0 && (int)trans->ph_prepare != 0) != 0);
}

#line 169 
#line 169 
int call_switchdev_notifiers(unsigned long, struct net_device *, struct switchdev_notifier_info *, struct netlink_ext_ack *);
#line 249  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/nexthop.h"
__inline static struct fib_nh *fib_info_nh(struct fib_info *fi, int nhsel)
{
  {
    #line 251 
    int __ret_warn_on = fi->nh != (struct nexthop *)0;
    #line 251 
    if ((long)(__ret_warn_on != 0) != 0L) {
      #line 252 
      ldv_inline_asm();
      #line 253 
      ldv_inline_asm();
    }
    #line 251 
    long tmp = (long)(__ret_warn_on != 0);
  }
  #line 253 
  return & fi->fib_nh[nhsel];
}

#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/arp.h"
#line 11 
extern struct neigh_table arp_tbl;
#line 13  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/arp.h"
__inline static u32 arp_hashfn(void *pkey, struct net_device *dev, u32 *hash_rnd)
{
  #line 15 
  u32 key = *((u32 *)pkey);
  #line 16 
  u32 val = hash32_ptr((void *)dev) ^ key;
  #line 18 
  return *hash_rnd * val;
}

#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/arp.h"
__inline static struct neighbour *__ipv4_neigh_lookup_noref(struct net_device *dev, u32 key)
{
  #line 24 
  if ((dev->flags & 24U) != 0U) 
                                #line 25 
                                key = 0U;
  #line 27 
  return ___neigh_lookup_noref(& arp_tbl,& neigh_key_eq32,& arp_hashfn,
                            (void *)(& key),dev);
}

#line 37  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/arp.h"
__inline static struct neighbour *__ipv4_neigh_lookup(struct net_device *dev, u32 key)
{
  #line 39 
  struct neighbour *n;
  #line 41 
  rcu_read_lock_bh();
  #line 42 
  n = __ipv4_neigh_lookup_noref(dev,key);
  #line 43 
  if (n != (struct neighbour *)0) {
    #line 43 
    if (! refcount_inc_not_zero(& n->refcnt)) 
                                              #line 44 
                                              n = (struct neighbour *)0;
  }
  #line 45 
  rcu_read_unlock_bh();
  #line 47 
  return n;
}

#line 52  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker.h"
#line 52 
struct rocker_port *rocker_port_dev_lower_find(struct net_device *dev, struct rocker *rocker);
#line 83 
#line 83 
int rocker_cmd_exec(struct rocker_port *rocker_port, bool nowait, int (*prepare)(struct rocker_port *, struct rocker_desc_info *, void *), void *prepare_priv, int (*process)(struct rocker_port *, struct rocker_desc_info *, void *), void *process_priv);
#line 87 
#line 87 
int rocker_port_set_learning(struct rocker_port *rocker_port, bool learning);
#line 141 
#line 2805  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
struct rocker_world_ops rocker_ofdpa_ops;
#line 129  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_tlv.h"
__inline static struct rocker_tlv *rocker_tlv_start(struct rocker_desc_info *desc_info)
{
  #line 131 
  return (struct rocker_tlv *)(desc_info->data + desc_info->tlv_size);
}

#line 135 
#line 135 
int rocker_tlv_put(struct rocker_desc_info *desc_info, int attrtype, int attrlen, void *data);
#line 139  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_tlv.h"
__inline static int rocker_tlv_put_u8(struct rocker_desc_info *desc_info, int attrtype, u8 value)
{
  #line 141 
  u8 tmp = value;
  #line 143 
  return rocker_tlv_put(desc_info,attrtype,1,(void *)(& tmp));
}

#line 147  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_tlv.h"
__inline static int rocker_tlv_put_u16(struct rocker_desc_info *desc_info, int attrtype, u16 value)
{
  #line 149 
  u16 tmp = value;
  #line 151 
  return rocker_tlv_put(desc_info,attrtype,2,(void *)(& tmp));
}

#line 155  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_tlv.h"
__inline static int rocker_tlv_put_be16(struct rocker_desc_info *desc_info, int attrtype, __be16 value)
{
  #line 157 
  __be16 tmp = value;
  #line 159 
  return rocker_tlv_put(desc_info,attrtype,2,(void *)(& tmp));
}

#line 163  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_tlv.h"
__inline static int rocker_tlv_put_u32(struct rocker_desc_info *desc_info, int attrtype, u32 value)
{
  #line 165 
  u32 tmp = value;
  #line 167 
  return rocker_tlv_put(desc_info,attrtype,4,(void *)(& tmp));
}

#line 171  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_tlv.h"
__inline static int rocker_tlv_put_be32(struct rocker_desc_info *desc_info, int attrtype, __be32 value)
{
  #line 173 
  __be32 tmp = value;
  #line 175 
  return rocker_tlv_put(desc_info,attrtype,4,(void *)(& tmp));
}

#line 179  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_tlv.h"
__inline static int rocker_tlv_put_u64(struct rocker_desc_info *desc_info, int attrtype, u64 value)
{
  #line 181 
  u64 tmp = value;
  #line 183 
  return rocker_tlv_put(desc_info,attrtype,8,(void *)(& tmp));
}

#line 187  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_tlv.h"
__inline static struct rocker_tlv *rocker_tlv_nest_start(struct rocker_desc_info *desc_info, int attrtype)
{
  #line 189 
  struct rocker_tlv *start = rocker_tlv_start(desc_info);
  #line 191 
  if (rocker_tlv_put(desc_info,attrtype,0,(void *)0) < 0) 
                                                          #line 192 
                                                          return (struct rocker_tlv *)0;
  #line 194 
  return start;
}

#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_tlv.h"
__inline static void rocker_tlv_nest_end(struct rocker_desc_info *desc_info, struct rocker_tlv *start)
{
  #line 200 
  start->len = (unsigned short)((char *)rocker_tlv_start(desc_info) - (char *)start);
  #line 201 
  return;
}

#line 207  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static u8 zero_mac[6U] = {(unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U};
#line 208  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static u8 ff_mac[6U] = {(unsigned char)255U, (unsigned char)255U, (unsigned char)255U, (unsigned char)255U, (unsigned char)255U, (unsigned char)255U};
#line 209  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static u8 ll_mac[6U] = {(unsigned char)1U, (unsigned char)128U, (unsigned char)194U};
#line 210  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static u8 ll_mask[6U] = {(unsigned char)255U, (unsigned char)255U, (unsigned char)255U, (unsigned char)255U, (unsigned char)255U, (unsigned char)240U};
#line 211  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static u8 mcast_mac[6U] = {(unsigned char)1U};
#line 212  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static u8 ipv4_mcast[6U] = {(unsigned char)1U, [2] = (unsigned char)94U};
#line 213  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static u8 ipv4_mask[6U] = {(unsigned char)255U, (unsigned char)255U, (unsigned char)255U, (unsigned char)128U};
#line 214  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static u8 ipv6_mcast[6U] = {(unsigned char)51U, (unsigned char)51U};
#line 215  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static u8 ipv6_mask[6U] = {(unsigned char)255U, (unsigned char)255U};
#line 238  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static bool ofdpa_vlan_id_is_internal(__be16 vlan_id)
{
  #line 240 
  u16 start = (unsigned short)3840U;
  #line 241 
  u16 end = (unsigned short)4094U;
  #line 242 
  u16 _vlan_id = __builtin_bswap16((unsigned short)((int)vlan_id));
  #line 244 
  return (_Bool)(((int)_vlan_id >= (int)start && (int)_vlan_id <= (int)end) != 0);
}

#line 247  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static __be16 ofdpa_port_vid_to_vlan(struct ofdpa_port *ofdpa_port, u16 vid, bool *pop_vlan)
{
  #line 250 
  __be16 vlan_id;
  #line 252 
  if (pop_vlan != (bool *)0) 
                             #line 253 
                             *pop_vlan = (_Bool)0;
  #line 254 
  vlan_id = __builtin_bswap16((unsigned short)((int)vid));
  #line 255 
  if ((unsigned int)vlan_id == 0U) {
    #line 256 
    vlan_id = ofdpa_port->internal_vlan_id;
    #line 257 
    if (pop_vlan != (bool *)0) 
                               #line 258 
                               *pop_vlan = (_Bool)1;
  }
  #line 261 
  return vlan_id;
}

#line 264  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static u16 ofdpa_port_vlan_to_vid(struct ofdpa_port *ofdpa_port, __be16 vlan_id)
{
  #line 267 
  if ((int)ofdpa_vlan_id_is_internal((unsigned short)((int)vlan_id)) != 0) 
    #line 268 
    return (unsigned short)0U;
  #line 270 
  return __builtin_bswap16((unsigned short)((int)vlan_id));
}

#line 273  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static bool ofdpa_port_is_slave(struct ofdpa_port *ofdpa_port, char *kind)
{
  #line 276 
  int tmp_0;
  #line 276 
  if (ofdpa_port->bridge_dev != (struct net_device *)0) {
    #line 276 
    if (cif_strcmp(((ofdpa_port->bridge_dev)->rtnl_link_ops)->kind,kind) == 0) 
      #line 276 
      tmp_0 = 1; else 
                      #line 276 
                      tmp_0 = 0;
  }
  else 
       #line 276 
       tmp_0 = 0;
  #line 276 
  return (_Bool)(tmp_0 != 0);
}

#line 280  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static bool ofdpa_port_is_bridged(struct ofdpa_port *ofdpa_port)
{
  #line 282 
  return ofdpa_port_is_slave(ofdpa_port,(char *)"bridge");
}

#line 285  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static bool ofdpa_port_is_ovsed(struct ofdpa_port *ofdpa_port)
{
  #line 287 
  return ofdpa_port_is_slave(ofdpa_port,(char *)"openvswitch");
}

#line 295  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static bool ofdpa_flags_nowait(int flags)
{
  #line 297 
  return (_Bool)(((unsigned long)flags & 2UL) != 0UL);
}

#line 305  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static int ofdpa_cmd_flow_tbl_add_ig_port(struct rocker_desc_info *desc_info, struct ofdpa_flow_tbl_entry *entry)
{
  #line 308 
  if (rocker_tlv_put_u32(desc_info,6,
                         entry->key.__anonCompField_ofdpa_flow_tbl_key_197.ig_port.in_pport) != 0) 
    #line 310 
    return -90;
  #line 311 
  if (rocker_tlv_put_u32(desc_info,7,
                           entry->key.__anonCompField_ofdpa_flow_tbl_key_197.ig_port.in_pport_mask) != 0) 
    #line 313 
    return -90;
  #line 314 
  if (rocker_tlv_put_u16(desc_info,9,
                           (unsigned short)((int)((unsigned short)entry->key.__anonCompField_ofdpa_flow_tbl_key_197.ig_port.goto_tbl))) != 0) 
    #line 316 
    return -90;
  #line 318 
  return 0;
}

#line 322  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static int ofdpa_cmd_flow_tbl_add_vlan(struct rocker_desc_info *desc_info, struct ofdpa_flow_tbl_entry *entry)
{
  #line 325 
  if (rocker_tlv_put_u32(desc_info,6,
                         entry->key.__anonCompField_ofdpa_flow_tbl_key_197.vlan.in_pport) != 0) 
    #line 327 
    return -90;
  #line 328 
  if (rocker_tlv_put_be16(desc_info,14,
                            (unsigned short)((int)entry->key.__anonCompField_ofdpa_flow_tbl_key_197.vlan.vlan_id)) != 0) 
    #line 330 
    return -90;
  #line 331 
  if (rocker_tlv_put_be16(desc_info,15,
                            (unsigned short)((int)entry->key.__anonCompField_ofdpa_flow_tbl_key_197.vlan.vlan_id_mask)) != 0) 
    #line 333 
    return -90;
  #line 334 
  if (rocker_tlv_put_u16(desc_info,9,
                           (unsigned short)((int)((unsigned short)entry->key.__anonCompField_ofdpa_flow_tbl_key_197.vlan.goto_tbl))) != 0) 
    #line 336 
    return -90;
  #line 337 
  if ((int)entry->key.__anonCompField_ofdpa_flow_tbl_key_197.vlan.untagged != 0) {
    #line 337 
    if (rocker_tlv_put_be16(desc_info,19,
                            (unsigned short)((int)entry->key.__anonCompField_ofdpa_flow_tbl_key_197.vlan.new_vlan_id)) != 0) 
      #line 340 
      return -90;
  }
  #line 342 
  return 0;
}

#line 346  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static int ofdpa_cmd_flow_tbl_add_term_mac(struct rocker_desc_info *desc_info, struct ofdpa_flow_tbl_entry *entry)
{
  #line 349 
  if (rocker_tlv_put_u32(desc_info,6,
                         entry->key.__anonCompField_ofdpa_flow_tbl_key_197.term_mac.in_pport) != 0) 
    #line 351 
    return -90;
  #line 352 
  if (rocker_tlv_put_u32(desc_info,7,
                           entry->key.__anonCompField_ofdpa_flow_tbl_key_197.term_mac.in_pport_mask) != 0) 
    #line 354 
    return -90;
  #line 355 
  if (rocker_tlv_put_be16(desc_info,23,
                            (unsigned short)((int)entry->key.__anonCompField_ofdpa_flow_tbl_key_197.term_mac.eth_type)) != 0) 
    #line 357 
    return -90;
  #line 358 
  if (rocker_tlv_put(desc_info,24,6,
                       (void *)(& entry->key.__anonCompField_ofdpa_flow_tbl_key_197.term_mac.eth_dst)) != 0) 
    #line 360 
    return -90;
  #line 361 
  if (rocker_tlv_put(desc_info,25,6,
                       (void *)(& entry->key.__anonCompField_ofdpa_flow_tbl_key_197.term_mac.eth_dst_mask)) != 0) 
    #line 363 
    return -90;
  #line 364 
  if (rocker_tlv_put_be16(desc_info,14,
                            (unsigned short)((int)entry->key.__anonCompField_ofdpa_flow_tbl_key_197.term_mac.vlan_id)) != 0) 
    #line 366 
    return -90;
  #line 367 
  if (rocker_tlv_put_be16(desc_info,15,
                            (unsigned short)((int)entry->key.__anonCompField_ofdpa_flow_tbl_key_197.term_mac.vlan_id_mask)) != 0) 
    #line 369 
    return -90;
  #line 370 
  if (rocker_tlv_put_u16(desc_info,9,
                           (unsigned short)((int)((unsigned short)entry->key.__anonCompField_ofdpa_flow_tbl_key_197.term_mac.goto_tbl))) != 0) 
    #line 372 
    return -90;
  #line 373 
  if ((int)entry->key.__anonCompField_ofdpa_flow_tbl_key_197.term_mac.copy_to_cpu != 0) {
    #line 373 
    if (rocker_tlv_put_u8(desc_info,61,
                          (unsigned char)((int)entry->key.__anonCompField_ofdpa_flow_tbl_key_197.term_mac.copy_to_cpu)) != 0) 
      #line 376 
      return -90;
  }
  #line 378 
  return 0;
}

#line 382  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static int ofdpa_cmd_flow_tbl_add_ucast_routing(struct rocker_desc_info *desc_info, struct ofdpa_flow_tbl_entry *entry)
{
  #line 385 
  if (rocker_tlv_put_be16(desc_info,23,
                          (unsigned short)((int)entry->key.__anonCompField_ofdpa_flow_tbl_key_197.ucast_routing.eth_type)) != 0) 
    #line 387 
    return -90;
  #line 388 
  if (rocker_tlv_put_be32(desc_info,36,
                            entry->key.__anonCompField_ofdpa_flow_tbl_key_197.ucast_routing.dst4) != 0) 
    #line 390 
    return -90;
  #line 391 
  if (rocker_tlv_put_be32(desc_info,37,
                            entry->key.__anonCompField_ofdpa_flow_tbl_key_197.ucast_routing.dst4_mask) != 0) 
    #line 393 
    return -90;
  #line 394 
  if (rocker_tlv_put_u16(desc_info,9,
                           (unsigned short)((int)((unsigned short)entry->key.__anonCompField_ofdpa_flow_tbl_key_197.ucast_routing.goto_tbl))) != 0) 
    #line 396 
    return -90;
  #line 397 
  if (rocker_tlv_put_u32(desc_info,10,
                           entry->key.__anonCompField_ofdpa_flow_tbl_key_197.ucast_routing.group_id) != 0) 
    #line 399 
    return -90;
  #line 401 
  return 0;
}

#line 405  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static int ofdpa_cmd_flow_tbl_add_bridge(struct rocker_desc_info *desc_info, struct ofdpa_flow_tbl_entry *entry)
{
  #line 408 
  if (entry->key.__anonCompField_ofdpa_flow_tbl_key_197.bridge.has_eth_dst != 0) {
    #line 408 
    if (rocker_tlv_put(desc_info,24,6,
                     (void *)(& entry->key.__anonCompField_ofdpa_flow_tbl_key_197.bridge.eth_dst)) != 0) 
      #line 411 
      return -90;
  }
  #line 412 
  if (entry->key.__anonCompField_ofdpa_flow_tbl_key_197.bridge.has_eth_dst_mask != 0) {
    #line 412 
    if (rocker_tlv_put(desc_info,25,6,
                       (void *)(& entry->key.__anonCompField_ofdpa_flow_tbl_key_197.bridge.eth_dst_mask)) != 0) 
      #line 415 
      return -90;
  }
  #line 416 
  if ((unsigned int)entry->key.__anonCompField_ofdpa_flow_tbl_key_197.bridge.vlan_id != 0U) {
    #line 416 
    if (rocker_tlv_put_be16(desc_info,14,
                            (unsigned short)((int)entry->key.__anonCompField_ofdpa_flow_tbl_key_197.bridge.vlan_id)) != 0) 
      #line 419 
      return -90;
  }
  #line 420 
  if (entry->key.__anonCompField_ofdpa_flow_tbl_key_197.bridge.tunnel_id != 0U) {
    #line 420 
    if (rocker_tlv_put_u32(desc_info,21,
                           entry->key.__anonCompField_ofdpa_flow_tbl_key_197.bridge.tunnel_id) != 0) 
      #line 423 
      return -90;
  }
  #line 424 
  if (rocker_tlv_put_u16(desc_info,9,
                           (unsigned short)((int)((unsigned short)entry->key.__anonCompField_ofdpa_flow_tbl_key_197.bridge.goto_tbl))) != 0) 
    #line 426 
    return -90;
  #line 427 
  if (rocker_tlv_put_u32(desc_info,10,
                           entry->key.__anonCompField_ofdpa_flow_tbl_key_197.bridge.group_id) != 0) 
    #line 429 
    return -90;
  #line 430 
  if ((int)entry->key.__anonCompField_ofdpa_flow_tbl_key_197.bridge.copy_to_cpu != 0) {
    #line 430 
    if (rocker_tlv_put_u8(desc_info,61,
                          (unsigned char)((int)entry->key.__anonCompField_ofdpa_flow_tbl_key_197.bridge.copy_to_cpu)) != 0) 
      #line 433 
      return -90;
  }
  #line 435 
  return 0;
}

#line 439  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static int ofdpa_cmd_flow_tbl_add_acl(struct rocker_desc_info *desc_info, struct ofdpa_flow_tbl_entry *entry)
{
  #line 442 
  if (rocker_tlv_put_u32(desc_info,6,
                         entry->key.__anonCompField_ofdpa_flow_tbl_key_197.acl.in_pport) != 0) 
    #line 444 
    return -90;
  #line 445 
  if (rocker_tlv_put_u32(desc_info,7,
                           entry->key.__anonCompField_ofdpa_flow_tbl_key_197.acl.in_pport_mask) != 0) 
    #line 447 
    return -90;
  #line 448 
  if (rocker_tlv_put(desc_info,26,6,
                       (void *)(& entry->key.__anonCompField_ofdpa_flow_tbl_key_197.acl.eth_src)) != 0) 
    #line 450 
    return -90;
  #line 451 
  if (rocker_tlv_put(desc_info,27,6,
                       (void *)(& entry->key.__anonCompField_ofdpa_flow_tbl_key_197.acl.eth_src_mask)) != 0) 
    #line 453 
    return -90;
  #line 454 
  if (rocker_tlv_put(desc_info,24,6,
                       (void *)(& entry->key.__anonCompField_ofdpa_flow_tbl_key_197.acl.eth_dst)) != 0) 
    #line 456 
    return -90;
  #line 457 
  if (rocker_tlv_put(desc_info,25,6,
                       (void *)(& entry->key.__anonCompField_ofdpa_flow_tbl_key_197.acl.eth_dst_mask)) != 0) 
    #line 459 
    return -90;
  #line 460 
  if (rocker_tlv_put_be16(desc_info,23,
                            (unsigned short)((int)entry->key.__anonCompField_ofdpa_flow_tbl_key_197.acl.eth_type)) != 0) 
    #line 462 
    return -90;
  #line 463 
  if (rocker_tlv_put_be16(desc_info,14,
                            (unsigned short)((int)entry->key.__anonCompField_ofdpa_flow_tbl_key_197.acl.vlan_id)) != 0) 
    #line 465 
    return -90;
  #line 466 
  if (rocker_tlv_put_be16(desc_info,15,
                            (unsigned short)((int)entry->key.__anonCompField_ofdpa_flow_tbl_key_197.acl.vlan_id_mask)) != 0) 
    #line 468 
    return -90;
  #line 470 
  switch ((int)__builtin_bswap16((unsigned short)((int)entry->key.__anonCompField_ofdpa_flow_tbl_key_197.acl.eth_type))) {
    #line 471 
    case 2048: 
               #line 471 
    ;
    #line 472 
    case 34525: 
                #line 472 
    ;
    #line 473 
    if (rocker_tlv_put_u8(desc_info,28,
                          (unsigned char)((int)entry->key.__anonCompField_ofdpa_flow_tbl_key_197.acl.ip_proto)) != 0) 
      #line 475 
      return -90;
    #line 476 
    if (rocker_tlv_put_u8(desc_info,29,
                           (unsigned char)((int)entry->key.__anonCompField_ofdpa_flow_tbl_key_197.acl.ip_proto_mask)) != 0) 
      #line 479 
      return -90;
    #line 480 
    if (rocker_tlv_put_u8(desc_info,30,
                           (unsigned char)((int)entry->key.__anonCompField_ofdpa_flow_tbl_key_197.acl.ip_tos & 63)) != 0) 
      #line 482 
      return -90;
    #line 483 
    if (rocker_tlv_put_u8(desc_info,31,
                           (unsigned char)((int)entry->key.__anonCompField_ofdpa_flow_tbl_key_197.acl.ip_tos_mask & 63)) != 0) 
      #line 486 
      return -90;
    #line 487 
    if (rocker_tlv_put_u8(desc_info,34,
                           (unsigned char)((int)entry->key.__anonCompField_ofdpa_flow_tbl_key_197.acl.ip_tos >> 6)) != 0) 
      #line 489 
      return -90;
    #line 490 
    if (rocker_tlv_put_u8(desc_info,35,
                           (unsigned char)((int)entry->key.__anonCompField_ofdpa_flow_tbl_key_197.acl.ip_tos_mask >> 6)) != 0) 
      #line 493 
      return -90;
    #line 494 
    break;
  }
  #line 497 
  if (entry->key.__anonCompField_ofdpa_flow_tbl_key_197.acl.group_id != 0U) {
    #line 497 
    if (rocker_tlv_put_u32(desc_info,10,
                            entry->key.__anonCompField_ofdpa_flow_tbl_key_197.acl.group_id) != 0) 
      #line 500 
      return -90;
  }
  #line 502 
  return 0;
}

#line 505  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static int ofdpa_cmd_flow_tbl_add(struct rocker_port *rocker_port, struct rocker_desc_info *desc_info, void *priv)
{
  #line 510 
  struct rocker_tlv *cmd_info;
  #line 509 
  struct ofdpa_flow_tbl_entry *entry = (struct ofdpa_flow_tbl_entry *)priv;
  #line 511 
  int err = 0;
  #line 513 
  if (rocker_tlv_put_u16(desc_info,1,
                         (unsigned short)((int)((unsigned short)entry->cmd))) != 0) 
    #line 514 
    return -90;
  #line 515 
  cmd_info = rocker_tlv_nest_start(desc_info,2);
  #line 516 
  if (cmd_info == (struct rocker_tlv *)0) 
                                          #line 517 
                                          return -90;
  #line 518 
  if (rocker_tlv_put_u16(desc_info,1,
                           (unsigned short)((int)((unsigned short)entry->key.tbl_id))) != 0) 
    #line 520 
    return -90;
  #line 521 
  if (rocker_tlv_put_u32(desc_info,2,entry->key.priority) != 0) 
                                                                #line 523 
                                                                return -90;
  #line 524 
  if (rocker_tlv_put_u32(desc_info,3,0U) != 0) 
                                               #line 525 
                                               return -90;
  #line 526 
  if (rocker_tlv_put_u64(desc_info,5,entry->cookie) != 0) 
                                                          #line 528 
                                                          return -90;
  #line 530 
  switch ((unsigned int)entry->key.tbl_id) {
    #line 531 
    case (unsigned int)0: 
                          #line 531 
    ;
    #line 532 
    err = ofdpa_cmd_flow_tbl_add_ig_port(desc_info,entry);
    #line 533 
    break;
    #line 534 
    case (unsigned int)10: 
                           #line 534 
    ;
    #line 535 
    err = ofdpa_cmd_flow_tbl_add_vlan(desc_info,entry);
    #line 536 
    break;
    #line 537 
    case (unsigned int)20: 
                           #line 537 
    ;
    #line 538 
    err = ofdpa_cmd_flow_tbl_add_term_mac(desc_info,entry);
    #line 539 
    break;
    #line 540 
    case (unsigned int)30: 
                           #line 540 
    ;
    #line 541 
    err = ofdpa_cmd_flow_tbl_add_ucast_routing(desc_info,entry);
    #line 542 
    break;
    #line 543 
    case (unsigned int)50: 
                           #line 543 
    ;
    #line 544 
    err = ofdpa_cmd_flow_tbl_add_bridge(desc_info,entry);
    #line 545 
    break;
    #line 546 
    case (unsigned int)60: 
                           #line 546 
    ;
    #line 547 
    err = ofdpa_cmd_flow_tbl_add_acl(desc_info,entry);
    #line 548 
    break;
    #line 549 
    default: 
             #line 549 
    ;
    #line 550 
    err = -524;
    #line 551 
    break;
  }
  #line 554 
  if (err != 0) 
                #line 555 
                return err;
  #line 557 
  rocker_tlv_nest_end(desc_info,cmd_info);
  #line 559 
  return 0;
}

#line 562  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static int ofdpa_cmd_flow_tbl_del(struct rocker_port *rocker_port, struct rocker_desc_info *desc_info, void *priv)
{
  #line 567 
  struct rocker_tlv *cmd_info;
  #line 566 
  struct ofdpa_flow_tbl_entry *entry = (struct ofdpa_flow_tbl_entry *)priv;
  #line 569 
  if (rocker_tlv_put_u16(desc_info,1,
                         (unsigned short)((int)((unsigned short)entry->cmd))) != 0) 
    #line 570 
    return -90;
  #line 571 
  cmd_info = rocker_tlv_nest_start(desc_info,2);
  #line 572 
  if (cmd_info == (struct rocker_tlv *)0) 
                                          #line 573 
                                          return -90;
  #line 574 
  if (rocker_tlv_put_u64(desc_info,5,entry->cookie) != 0) 
                                                          #line 576 
                                                          return -90;
  #line 577 
  rocker_tlv_nest_end(desc_info,cmd_info);
  #line 579 
  return 0;
}

#line 583  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static int ofdpa_cmd_group_tbl_add_l2_interface(struct rocker_desc_info *desc_info, struct ofdpa_group_tbl_entry *entry)
{
  #line 586 
  if (rocker_tlv_put_u32(desc_info,8,entry->group_id & 65535U) != 0) 
    #line 588 
    return -90;
  #line 589 
  if (rocker_tlv_put_u8(desc_info,59,
                          (unsigned char)((int)entry->__anonCompField_ofdpa_group_tbl_entry_198.l2_interface.pop_vlan)) != 0) 
    #line 591 
    return -90;
  #line 593 
  return 0;
}

#line 597  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static int ofdpa_cmd_group_tbl_add_l2_rewrite(struct rocker_desc_info *desc_info, struct ofdpa_group_tbl_entry *entry)
{
  #line 600 
  if (rocker_tlv_put_u32(desc_info,11,
                         entry->__anonCompField_ofdpa_group_tbl_entry_198.l2_rewrite.group_id) != 0) 
    #line 602 
    return -90;
  #line 603 
  if (! is_zero_ether_addr((u8 *)(& entry->__anonCompField_ofdpa_group_tbl_entry_198.l2_rewrite.eth_src))) {
    #line 603 
    if (rocker_tlv_put(desc_info,26,6,
                       (void *)(& entry->__anonCompField_ofdpa_group_tbl_entry_198.l2_rewrite.eth_src)) != 0) 
      #line 606 
      return -90;
  }
  #line 607 
  if (! is_zero_ether_addr((u8 *)(& entry->__anonCompField_ofdpa_group_tbl_entry_198.l2_rewrite.eth_dst))) {
    #line 607 
    if (rocker_tlv_put(desc_info,24,6,
                       (void *)(& entry->__anonCompField_ofdpa_group_tbl_entry_198.l2_rewrite.eth_dst)) != 0) 
      #line 610 
      return -90;
  }
  #line 611 
  if ((unsigned int)entry->__anonCompField_ofdpa_group_tbl_entry_198.l2_rewrite.vlan_id != 0U) {
    #line 611 
    if (rocker_tlv_put_be16(desc_info,14,
                            (unsigned short)((int)entry->__anonCompField_ofdpa_group_tbl_entry_198.l2_rewrite.vlan_id)) != 0) 
      #line 614 
      return -90;
  }
  #line 616 
  return 0;
}

#line 620  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static int ofdpa_cmd_group_tbl_add_group_ids(struct rocker_desc_info *desc_info, struct ofdpa_group_tbl_entry *entry)
{
  #line 623 
  int i;
  #line 624 
  struct rocker_tlv *group_ids;
  #line 626 
  if (rocker_tlv_put_u16(desc_info,12,
                         (unsigned short)((int)entry->group_count)) != 0) 
    #line 628 
    return -90;
  #line 630 
  group_ids = rocker_tlv_nest_start(desc_info,13);
  #line 632 
  if (group_ids == (struct rocker_tlv *)0) 
                                           #line 633 
                                           return -90;
  #line 635 
  i = 0;
  #line 635 
  while ((int)entry->group_count > i) {
    #line 637 
    if (rocker_tlv_put_u32(desc_info,i + 1,
                           *(entry->group_ids + (unsigned long)i)) != 0) 
      #line 638 
      return -90;
    #line 635 
    i ++;
  }
  #line 640 
  rocker_tlv_nest_end(desc_info,group_ids);
  #line 642 
  return 0;
}

#line 646  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static int ofdpa_cmd_group_tbl_add_l3_unicast(struct rocker_desc_info *desc_info, struct ofdpa_group_tbl_entry *entry)
{
  #line 649 
  if (! is_zero_ether_addr((u8 *)(& entry->__anonCompField_ofdpa_group_tbl_entry_198.l3_unicast.eth_src))) {
    #line 649 
    if (rocker_tlv_put(desc_info,26,6,
                       (void *)(& entry->__anonCompField_ofdpa_group_tbl_entry_198.l3_unicast.eth_src)) != 0) 
      #line 652 
      return -90;
  }
  #line 653 
  if (! is_zero_ether_addr((u8 *)(& entry->__anonCompField_ofdpa_group_tbl_entry_198.l3_unicast.eth_dst))) {
    #line 653 
    if (rocker_tlv_put(desc_info,24,6,
                       (void *)(& entry->__anonCompField_ofdpa_group_tbl_entry_198.l3_unicast.eth_dst)) != 0) 
      #line 656 
      return -90;
  }
  #line 657 
  if ((unsigned int)entry->__anonCompField_ofdpa_group_tbl_entry_198.l3_unicast.vlan_id != 0U) {
    #line 657 
    if (rocker_tlv_put_be16(desc_info,14,
                            (unsigned short)((int)entry->__anonCompField_ofdpa_group_tbl_entry_198.l3_unicast.vlan_id)) != 0) 
      #line 660 
      return -90;
  }
  #line 661 
  if (rocker_tlv_put_u8(desc_info,60,
                          (unsigned char)((int)entry->__anonCompField_ofdpa_group_tbl_entry_198.l3_unicast.ttl_check)) != 0) 
    #line 663 
    return -90;
  #line 664 
  if (rocker_tlv_put_u32(desc_info,11,
                           entry->__anonCompField_ofdpa_group_tbl_entry_198.l3_unicast.group_id) != 0) 
    #line 666 
    return -90;
  #line 668 
  return 0;
}

#line 671  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static int ofdpa_cmd_group_tbl_add(struct rocker_port *rocker_port, struct rocker_desc_info *desc_info, void *priv)
{
  #line 676 
  struct rocker_tlv *cmd_info;
  #line 675 
  struct ofdpa_group_tbl_entry *entry = (struct ofdpa_group_tbl_entry *)priv;
  #line 677 
  int err = 0;
  #line 679 
  if (rocker_tlv_put_u16(desc_info,1,
                         (unsigned short)((int)((unsigned short)entry->cmd))) != 0) 
    #line 680 
    return -90;
  #line 681 
  cmd_info = rocker_tlv_nest_start(desc_info,2);
  #line 682 
  if (cmd_info == (struct rocker_tlv *)0) 
                                          #line 683 
                                          return -90;
  #line 685 
  if (rocker_tlv_put_u32(desc_info,10,entry->group_id) != 0) 
                                                             #line 687 
                                                             return -90;
  #line 689 
  switch (entry->group_id >> 28) {
    #line 690 
    case (u32)0: 
                 #line 690 
    ;
    #line 691 
    err = ofdpa_cmd_group_tbl_add_l2_interface(desc_info,entry);
    #line 692 
    break;
    #line 693 
    case (u32)1: 
                 #line 693 
    ;
    #line 694 
    err = ofdpa_cmd_group_tbl_add_l2_rewrite(desc_info,entry);
    #line 695 
    break;
    #line 696 
    case (u32)4: 
                 #line 696 
    ;
    #line 697 
    case (u32)3: 
                 #line 697 
    ;
    #line 698 
    err = ofdpa_cmd_group_tbl_add_group_ids(desc_info,entry);
    #line 699 
    break;
    #line 700 
    case (u32)2: 
                 #line 700 
    ;
    #line 701 
    err = ofdpa_cmd_group_tbl_add_l3_unicast(desc_info,entry);
    #line 702 
    break;
    #line 703 
    default: 
             #line 703 
    ;
    #line 704 
    err = -524;
    #line 705 
    break;
  }
  #line 708 
  if (err != 0) 
                #line 709 
                return err;
  #line 711 
  rocker_tlv_nest_end(desc_info,cmd_info);
  #line 713 
  return 0;
}

#line 716  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static int ofdpa_cmd_group_tbl_del(struct rocker_port *rocker_port, struct rocker_desc_info *desc_info, void *priv)
{
  #line 721 
  struct rocker_tlv *cmd_info;
  #line 720 
  struct ofdpa_group_tbl_entry *entry = (struct ofdpa_group_tbl_entry *)priv;
  #line 723 
  if (rocker_tlv_put_u16(desc_info,1,
                         (unsigned short)((int)((unsigned short)entry->cmd))) != 0) 
    #line 724 
    return -90;
  #line 725 
  cmd_info = rocker_tlv_nest_start(desc_info,2);
  #line 726 
  if (cmd_info == (struct rocker_tlv *)0) 
                                          #line 727 
                                          return -90;
  #line 728 
  if (rocker_tlv_put_u32(desc_info,10,entry->group_id) != 0) 
                                                             #line 730 
                                                             return -90;
  #line 731 
  rocker_tlv_nest_end(desc_info,cmd_info);
  #line 733 
  return 0;
}

#line 741  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static struct ofdpa_flow_tbl_entry *ofdpa_flow_tbl_find(struct ofdpa *ofdpa, struct ofdpa_flow_tbl_entry *match)
{
  #line 747 
  void *__mptr;
  #line 747 
  struct ofdpa_flow_tbl_entry *tmp_2;
  #line 744 
  struct ofdpa_flow_tbl_entry *found;
  #line 745 
  unsigned long tmp;
  #line 745 
  if (match->key_len != 0UL) 
                             #line 745 
                             tmp = match->key_len; else 
                                                        #line 745 
                                                        tmp = 56UL;
  #line 745 
  size_t key_len = tmp;
  {
    #line 747 
    struct hlist_node *____ptr = ofdpa->flow_tbl[hash_32_generic(match->key_crc32,16U)].first;
    #line 747 
    if (____ptr != (struct hlist_node *)0) {
      #line 747 
      __mptr = (void *)____ptr;
      #line 747 
      tmp_2 = ((struct ofdpa_flow_tbl_entry *)__mptr);
    }
    else 
         #line 747 
         tmp_2 = (struct ofdpa_flow_tbl_entry *)0;
    }
  #line 747 
  found = tmp_2;
  #line 747 
  while (found != (struct ofdpa_flow_tbl_entry *)0) {
    #line 747 
    struct ofdpa_flow_tbl_entry *tmp_5;
    #line 747 
    void *__mptr_0;
    #line 749 
    if (memcmp((void *)(& found->key),(void *)(& match->key),key_len) == 0) 
      #line 750 
      return found;
    {
      #line 747 
      struct hlist_node *____ptr_0 = found->entry.next;
      #line 747 
      if (____ptr_0 != (struct hlist_node *)0) {
        #line 747 
        __mptr_0 = (void *)____ptr_0;
        #line 747 
        tmp_5 = ((struct ofdpa_flow_tbl_entry *)__mptr_0);
      }
      else 
           #line 747 
           tmp_5 = (struct ofdpa_flow_tbl_entry *)0;
      }
    #line 747 
    found = tmp_5;
  }
  #line 753 
  return (struct ofdpa_flow_tbl_entry *)0;
}

#line 756  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static int ofdpa_flow_tbl_add(struct ofdpa_port *ofdpa_port, int flags, struct ofdpa_flow_tbl_entry *match)
{
  #line 760 
  struct ofdpa_flow_tbl_entry *found;
  #line 761 
  unsigned long tmp;
  #line 762 
  unsigned long lock_flags;
  #line 759 
  struct ofdpa *ofdpa = ofdpa_port->ofdpa;
  #line 761 
  if (match->key_len != 0UL) 
                             #line 761 
                             tmp = match->key_len; else 
                                                        #line 761 
                                                        tmp = 56UL;
  #line 761 
  size_t key_len = tmp;
  #line 764 
  match->key_crc32 = crc32_le(4294967295U,(unsigned char *)(& match->key),key_len);
  #line 766 
  cif___ldv_spin_lock_flow_tbl_lock_of_ofdpa(& ofdpa->flow_tbl_lock);
  #line 768 
  found = ofdpa_flow_tbl_find(ofdpa,match);
  #line 770 
  if (found != (struct ofdpa_flow_tbl_entry *)0) {
    #line 771 
    match->cookie = found->cookie;
    #line 772 
    hash_del(& found->entry);
    #line 773 
    kfree((void *)found);
    #line 774 
    found = match;
    #line 775 
    found->cmd = 4U;
  }
  else {
    #line 778 
    u64 tmp_0;
    #line 777 
    found = match;
    #line 778 
    tmp_0 = ofdpa->flow_tbl_next_cookie;
    #line 778 
    (ofdpa->flow_tbl_next_cookie) ++;
    #line 778 
    found->cookie = tmp_0;
    #line 779 
    found->cmd = 3U;
  }
  #line 782 
  ;
  #line 782 
  ;
  #line 782 
  hlist_add_head(& found->entry,& ofdpa->flow_tbl[hash_32_generic(found->key_crc32,16U)]);
  #line 783 
  cif_spin_unlock_irqrestore_flow_tbl_lock_of_ofdpa(& ofdpa->flow_tbl_lock,lock_flags);
  #line 785 
  ;
  #line 785 
  ;
  #line 785 
  return rocker_cmd_exec(ofdpa_port->rocker_port,
                        (_Bool)((bool)((int)ofdpa_flags_nowait(flags)) != 0),
                        & ofdpa_cmd_flow_tbl_add,(void *)found,
                        (int (*)(struct rocker_port *,
                                 struct rocker_desc_info *, void *))0,
                        (void *)0);
}

#line 791  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static int ofdpa_flow_tbl_del(struct ofdpa_port *ofdpa_port, int flags, struct ofdpa_flow_tbl_entry *match)
{
  #line 795 
  struct ofdpa_flow_tbl_entry *found;
  #line 796 
  unsigned long tmp;
  #line 797 
  unsigned long lock_flags;
  #line 794 
  struct ofdpa *ofdpa = ofdpa_port->ofdpa;
  #line 796 
  if (match->key_len != 0UL) 
                             #line 796 
                             tmp = match->key_len; else 
                                                        #line 796 
                                                        tmp = 56UL;
  #line 796 
  size_t key_len = tmp;
  #line 798 
  int err = 0;
  #line 800 
  match->key_crc32 = crc32_le(4294967295U,(unsigned char *)(& match->key),key_len);
  #line 802 
  cif___ldv_spin_lock_flow_tbl_lock_of_ofdpa(& ofdpa->flow_tbl_lock);
  #line 804 
  found = ofdpa_flow_tbl_find(ofdpa,match);
  #line 806 
  if (found != (struct ofdpa_flow_tbl_entry *)0) {
    #line 807 
    hash_del(& found->entry);
    #line 808 
    found->cmd = 5U;
  }
  #line 811 
  cif_spin_unlock_irqrestore_flow_tbl_lock_of_ofdpa(& ofdpa->flow_tbl_lock,lock_flags);
  #line 813 
  kfree((void *)match);
  #line 815 
  if (found != (struct ofdpa_flow_tbl_entry *)0) {
    #line 816 
    ;
    #line 816 
    ;
    #line 816 
    err = rocker_cmd_exec(ofdpa_port->rocker_port,(_Bool)((bool)((int)ofdpa_flags_nowait(flags)) != 0),& ofdpa_cmd_flow_tbl_del,(void *)found,(int (*)(struct rocker_port *, struct rocker_desc_info *, void *))0,(void *)0);
    #line 820 
    kfree((void *)found);
  }
  #line 823 
  return err;
}

#line 826  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static int ofdpa_flow_tbl_do(struct ofdpa_port *ofdpa_port, int flags, struct ofdpa_flow_tbl_entry *entry)
{
  #line 829 
  if (((unsigned long)flags & 1UL) != 0UL) {
    #line 830 
    return ofdpa_flow_tbl_del(ofdpa_port,flags,entry);
  }
  else {
    #line 832 
    return ofdpa_flow_tbl_add(ofdpa_port,flags,entry);
  }
}

#line 835  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static int ofdpa_flow_tbl_ig_port(struct ofdpa_port *ofdpa_port, int flags, u32 in_pport, u32 in_pport_mask, enum rocker_of_dpa_table_id goto_tbl)
{
  #line 839 
  struct ofdpa_flow_tbl_entry *entry;
  #line 841 
  entry = (struct ofdpa_flow_tbl_entry *)kzalloc(112UL,3264U);
  #line 842 
  if (entry == (struct ofdpa_flow_tbl_entry *)0) 
                                                 #line 843 
                                                 return -12;
  #line 845 
  entry->key.priority = 1U;
  #line 846 
  entry->key.tbl_id = ROCKER_OF_DPA_TABLE_ID_INGRESS_PORT;
  #line 847 
  entry->key.__anonCompField_ofdpa_flow_tbl_key_197.ig_port.in_pport = in_pport;
  #line 848 
  entry->key.__anonCompField_ofdpa_flow_tbl_key_197.ig_port.in_pport_mask = in_pport_mask;
  #line 849 
  entry->key.__anonCompField_ofdpa_flow_tbl_key_197.ig_port.goto_tbl = goto_tbl;
  #line 851 
  return ofdpa_flow_tbl_do(ofdpa_port,flags,entry);
}

#line 854  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static int ofdpa_flow_tbl_vlan(struct ofdpa_port *ofdpa_port, int flags, u32 in_pport, __be16 vlan_id, __be16 vlan_id_mask, enum rocker_of_dpa_table_id goto_tbl, bool untagged, __be16 new_vlan_id)
{
  #line 861 
  struct ofdpa_flow_tbl_entry *entry;
  #line 863 
  entry = (struct ofdpa_flow_tbl_entry *)kzalloc(112UL,3264U);
  #line 864 
  if (entry == (struct ofdpa_flow_tbl_entry *)0) 
                                                 #line 865 
                                                 return -12;
  #line 867 
  entry->key.priority = 1U;
  #line 868 
  entry->key.tbl_id = ROCKER_OF_DPA_TABLE_ID_VLAN;
  #line 869 
  entry->key.__anonCompField_ofdpa_flow_tbl_key_197.vlan.in_pport = in_pport;
  #line 870 
  entry->key.__anonCompField_ofdpa_flow_tbl_key_197.vlan.vlan_id = vlan_id;
  #line 871 
  entry->key.__anonCompField_ofdpa_flow_tbl_key_197.vlan.vlan_id_mask = vlan_id_mask;
  #line 872 
  entry->key.__anonCompField_ofdpa_flow_tbl_key_197.vlan.goto_tbl = goto_tbl;
  #line 874 
  entry->key.__anonCompField_ofdpa_flow_tbl_key_197.vlan.untagged = untagged;
  #line 875 
  entry->key.__anonCompField_ofdpa_flow_tbl_key_197.vlan.new_vlan_id = new_vlan_id;
  #line 877 
  return ofdpa_flow_tbl_do(ofdpa_port,flags,entry);
}

#line 880  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static int ofdpa_flow_tbl_term_mac(struct ofdpa_port *ofdpa_port, u32 in_pport, u32 in_pport_mask, __be16 eth_type, u8 *eth_dst, u8 *eth_dst_mask, __be16 vlan_id, __be16 vlan_id_mask, bool copy_to_cpu, int flags)
{
  #line 887 
  struct ofdpa_flow_tbl_entry *entry;
  #line 889 
  entry = (struct ofdpa_flow_tbl_entry *)kzalloc(112UL,3264U);
  #line 890 
  if (entry == (struct ofdpa_flow_tbl_entry *)0) 
                                                 #line 891 
                                                 return -12;
  #line 893 
  if ((int)is_multicast_ether_addr(eth_dst) != 0) {
    #line 894 
    entry->key.priority = 1U;
    #line 895 
    entry->key.__anonCompField_ofdpa_flow_tbl_key_197.term_mac.goto_tbl = ROCKER_OF_DPA_TABLE_ID_MULTICAST_ROUTING;
  }
  else {
    #line 898 
    entry->key.priority = 0U;
    #line 899 
    entry->key.__anonCompField_ofdpa_flow_tbl_key_197.term_mac.goto_tbl = ROCKER_OF_DPA_TABLE_ID_UNICAST_ROUTING;
  }
  #line 903 
  entry->key.tbl_id = ROCKER_OF_DPA_TABLE_ID_TERMINATION_MAC;
  #line 904 
  entry->key.__anonCompField_ofdpa_flow_tbl_key_197.term_mac.in_pport = in_pport;
  #line 905 
  entry->key.__anonCompField_ofdpa_flow_tbl_key_197.term_mac.in_pport_mask = in_pport_mask;
  #line 906 
  entry->key.__anonCompField_ofdpa_flow_tbl_key_197.term_mac.eth_type = eth_type;
  #line 907 
  ether_addr_copy((u8 *)(& entry->key.__anonCompField_ofdpa_flow_tbl_key_197.term_mac.eth_dst),eth_dst);
  #line 908 
  ether_addr_copy((u8 *)(& entry->key.__anonCompField_ofdpa_flow_tbl_key_197.term_mac.eth_dst_mask),eth_dst_mask);
  #line 909 
  entry->key.__anonCompField_ofdpa_flow_tbl_key_197.term_mac.vlan_id = vlan_id;
  #line 910 
  entry->key.__anonCompField_ofdpa_flow_tbl_key_197.term_mac.vlan_id_mask = vlan_id_mask;
  #line 911 
  entry->key.__anonCompField_ofdpa_flow_tbl_key_197.term_mac.copy_to_cpu = copy_to_cpu;
  #line 913 
  return ofdpa_flow_tbl_do(ofdpa_port,flags,entry);
}

#line 916  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static int ofdpa_flow_tbl_bridge(struct ofdpa_port *ofdpa_port, int flags, u8 *eth_dst, u8 *eth_dst_mask, __be16 vlan_id, u32 tunnel_id, enum rocker_of_dpa_table_id goto_tbl, u32 group_id, bool copy_to_cpu)
{
  #line 923 
  struct ofdpa_flow_tbl_entry *entry;
  #line 924 
  u32 priority;
  #line 925 
  bool vlan_bridging = (_Bool)((unsigned int)vlan_id != 0U);
  #line 926 
  bool dflt = (_Bool)((eth_dst == (u8 *)0U || eth_dst != (u8 *)0U && eth_dst_mask != (u8 *)0U) != 0);
  #line 927 
  bool wild = (_Bool)0;
  #line 929 
  entry = (struct ofdpa_flow_tbl_entry *)kzalloc(112UL,2592U);
  #line 930 
  if (entry == (struct ofdpa_flow_tbl_entry *)0) 
                                                 #line 931 
                                                 return -12;
  #line 933 
  entry->key.tbl_id = ROCKER_OF_DPA_TABLE_ID_BRIDGING;
  #line 935 
  if (eth_dst != (u8 *)0U) {
    #line 936 
    entry->key.__anonCompField_ofdpa_flow_tbl_key_197.bridge.has_eth_dst = 1;
    #line 937 
    ether_addr_copy((u8 *)(& entry->key.__anonCompField_ofdpa_flow_tbl_key_197.bridge.eth_dst),eth_dst);
  }
  #line 939 
  if (eth_dst_mask != (u8 *)0U) {
    #line 940 
    entry->key.__anonCompField_ofdpa_flow_tbl_key_197.bridge.has_eth_dst_mask = 1;
    #line 941 
    ether_addr_copy((u8 *)(& entry->key.__anonCompField_ofdpa_flow_tbl_key_197.bridge.eth_dst_mask),eth_dst_mask);
    #line 942 
    if (! ether_addr_equal(eth_dst_mask,(u8 *)(& ff_mac))) 
                                                           #line 943 
                                                           wild = (_Bool)1;
  }
  #line 946 
  priority = 0U;
  #line 947 
  if (((int)vlan_bridging != 0 && (int)dflt != 0) && (int)wild != 0) 
    #line 948 
    priority = 2U;
  else 
    #line 949 
    if (((int)vlan_bridging != 0 && (int)dflt != 0) && ! wild) 
                                                               #line 950 
                                                               priority = 1U;
    else 
      #line 951 
      if ((int)vlan_bridging != 0 && ! dflt) 
                                             #line 952 
                                             priority = 3U;
      else 
        #line 953 
        if ((! vlan_bridging && (int)dflt != 0) && (int)wild != 0) 
                                                                   #line 954 
                                                                   priority = 2U;
        else 
          #line 955 
          if ((! vlan_bridging && (int)dflt != 0) && ! wild) 
                                                             #line 956 
                                                             priority = 1U;
          else 
            #line 957 
            if (! vlan_bridging && ! dflt) 
                                           #line 958 
                                           priority = 3U;
  #line 960 
  entry->key.priority = priority;
  #line 961 
  entry->key.__anonCompField_ofdpa_flow_tbl_key_197.bridge.vlan_id = vlan_id;
  #line 962 
  entry->key.__anonCompField_ofdpa_flow_tbl_key_197.bridge.tunnel_id = tunnel_id;
  #line 963 
  entry->key.__anonCompField_ofdpa_flow_tbl_key_197.bridge.goto_tbl = goto_tbl;
  #line 964 
  entry->key.__anonCompField_ofdpa_flow_tbl_key_197.bridge.group_id = group_id;
  #line 965 
  entry->key.__anonCompField_ofdpa_flow_tbl_key_197.bridge.copy_to_cpu = copy_to_cpu;
  #line 967 
  return ofdpa_flow_tbl_do(ofdpa_port,flags,entry);
}

#line 970  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static int ofdpa_flow_tbl_ucast4_routing(struct ofdpa_port *ofdpa_port, __be16 eth_type, __be32 dst, __be32 dst_mask, u32 priority, enum rocker_of_dpa_table_id goto_tbl, u32 group_id, struct fib_info *fi, int flags)
{
  #line 977 
  struct ofdpa_flow_tbl_entry *entry;
  #line 979 
  entry = (struct ofdpa_flow_tbl_entry *)kzalloc(112UL,3264U);
  #line 980 
  if (entry == (struct ofdpa_flow_tbl_entry *)0) 
                                                 #line 981 
                                                 return -12;
  #line 983 
  entry->key.tbl_id = ROCKER_OF_DPA_TABLE_ID_UNICAST_ROUTING;
  #line 984 
  entry->key.priority = priority;
  #line 985 
  entry->key.__anonCompField_ofdpa_flow_tbl_key_197.ucast_routing.eth_type = eth_type;
  #line 986 
  entry->key.__anonCompField_ofdpa_flow_tbl_key_197.ucast_routing.dst4 = dst;
  #line 987 
  entry->key.__anonCompField_ofdpa_flow_tbl_key_197.ucast_routing.dst4_mask = dst_mask;
  #line 988 
  entry->key.__anonCompField_ofdpa_flow_tbl_key_197.ucast_routing.goto_tbl = goto_tbl;
  #line 989 
  entry->key.__anonCompField_ofdpa_flow_tbl_key_197.ucast_routing.group_id = group_id;
  #line 990 
  entry->key_len = 24UL;
  #line 992 
  entry->fi = fi;
  #line 994 
  return ofdpa_flow_tbl_do(ofdpa_port,flags,entry);
}

#line 997  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static int ofdpa_flow_tbl_acl(struct ofdpa_port *ofdpa_port, int flags, u32 in_pport, u32 in_pport_mask, u8 *eth_src, u8 *eth_src_mask, u8 *eth_dst, u8 *eth_dst_mask, __be16 eth_type, __be16 vlan_id, __be16 vlan_id_mask, u8 ip_proto, u8 ip_proto_mask, u8 ip_tos, u8 ip_tos_mask, u32 group_id)
{
  #line 1006 
  u32 priority;
  #line 1007 
  struct ofdpa_flow_tbl_entry *entry;
  #line 1009 
  entry = (struct ofdpa_flow_tbl_entry *)kzalloc(112UL,3264U);
  #line 1010 
  if (entry == (struct ofdpa_flow_tbl_entry *)0) 
                                                 #line 1011 
                                                 return -12;
  #line 1013 
  priority = 2U;
  #line 1014 
  if (eth_dst != (u8 *)0U && eth_dst_mask != (u8 *)0U) {
    #line 1015 
    if ((int)ether_addr_equal(eth_dst_mask,(u8 *)(& mcast_mac)) != 0) 
      #line 1016 
      priority = 1U;
    else {
      #line 1017 
      if ((int)is_link_local_ether_addr(eth_dst) != 0) 
                                                       #line 1018 
                                                       priority = 3U;
    }
  }
  #line 1021 
  entry->key.priority = priority;
  #line 1022 
  entry->key.tbl_id = ROCKER_OF_DPA_TABLE_ID_ACL_POLICY;
  #line 1023 
  entry->key.__anonCompField_ofdpa_flow_tbl_key_197.acl.in_pport = in_pport;
  #line 1024 
  entry->key.__anonCompField_ofdpa_flow_tbl_key_197.acl.in_pport_mask = in_pport_mask;
  #line 1026 
  if (eth_src != (u8 *)0U) 
                           #line 1027 
                           ether_addr_copy((u8 *)(& entry->key.__anonCompField_ofdpa_flow_tbl_key_197.acl.eth_src),eth_src);
  #line 1028 
  if (eth_src_mask != (u8 *)0U) 
                                #line 1029 
                                ether_addr_copy((u8 *)(& entry->key.__anonCompField_ofdpa_flow_tbl_key_197.acl.eth_src_mask),eth_src_mask);
  #line 1030 
  if (eth_dst != (u8 *)0U) 
                           #line 1031 
                           ether_addr_copy((u8 *)(& entry->key.__anonCompField_ofdpa_flow_tbl_key_197.acl.eth_dst),eth_dst);
  #line 1032 
  if (eth_dst_mask != (u8 *)0U) 
                                #line 1033 
                                ether_addr_copy((u8 *)(& entry->key.__anonCompField_ofdpa_flow_tbl_key_197.acl.eth_dst_mask),eth_dst_mask);
  #line 1035 
  entry->key.__anonCompField_ofdpa_flow_tbl_key_197.acl.eth_type = eth_type;
  #line 1036 
  entry->key.__anonCompField_ofdpa_flow_tbl_key_197.acl.vlan_id = vlan_id;
  #line 1037 
  entry->key.__anonCompField_ofdpa_flow_tbl_key_197.acl.vlan_id_mask = vlan_id_mask;
  #line 1038 
  entry->key.__anonCompField_ofdpa_flow_tbl_key_197.acl.ip_proto = ip_proto;
  #line 1039 
  entry->key.__anonCompField_ofdpa_flow_tbl_key_197.acl.ip_proto_mask = ip_proto_mask;
  #line 1040 
  entry->key.__anonCompField_ofdpa_flow_tbl_key_197.acl.ip_tos = ip_tos;
  #line 1041 
  entry->key.__anonCompField_ofdpa_flow_tbl_key_197.acl.ip_tos_mask = ip_tos_mask;
  #line 1042 
  entry->key.__anonCompField_ofdpa_flow_tbl_key_197.acl.group_id = group_id;
  #line 1044 
  return ofdpa_flow_tbl_do(ofdpa_port,flags,entry);
}

#line 1048  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static struct ofdpa_group_tbl_entry *ofdpa_group_tbl_find(struct ofdpa *ofdpa, struct ofdpa_group_tbl_entry *match)
{
  #line 1053 
  struct ofdpa_group_tbl_entry *tmp_1;
  #line 1053 
  void *__mptr;
  #line 1051 
  struct ofdpa_group_tbl_entry *found;
  {
    #line 1053 
    struct hlist_node *____ptr = ofdpa->group_tbl[hash_32_generic(match->group_id,16U)].first;
    #line 1053 
    if (____ptr != (struct hlist_node *)0) {
      #line 1053 
      __mptr = (void *)____ptr;
      #line 1053 
      tmp_1 = ((struct ofdpa_group_tbl_entry *)__mptr);
    }
    else 
         #line 1053 
         tmp_1 = (struct ofdpa_group_tbl_entry *)0;
    }
  #line 1053 
  found = tmp_1;
  #line 1053 
  while (found != (struct ofdpa_group_tbl_entry *)0) {
    #line 1053 
    void *__mptr_0;
    #line 1053 
    struct ofdpa_group_tbl_entry *tmp_4;
    #line 1055 
    if (found->group_id == match->group_id) 
                                            #line 1056 
                                            return found;
    {
      #line 1053 
      struct hlist_node *____ptr_0 = found->entry.next;
      #line 1053 
      if (____ptr_0 != (struct hlist_node *)0) {
        #line 1053 
        __mptr_0 = (void *)____ptr_0;
        #line 1053 
        tmp_4 = ((struct ofdpa_group_tbl_entry *)__mptr_0);
      }
      else 
           #line 1053 
           tmp_4 = (struct ofdpa_group_tbl_entry *)0;
      }
    #line 1053 
    found = tmp_4;
  }
  #line 1059 
  return (struct ofdpa_group_tbl_entry *)0;
}

#line 1062  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static void ofdpa_group_tbl_entry_free(struct ofdpa_group_tbl_entry *entry)
{
  #line 1064 
  switch (entry->group_id >> 28) {
    #line 1065 
    case (u32)4: 
                 #line 1065 
    ;
    #line 1066 
    case (u32)3: 
                 #line 1066 
    ;
    #line 1067 
    kfree((void *)entry->group_ids);
    #line 1068 
    break;
    #line 1069 
    default: 
             #line 1069 
    ;
    #line 1070 
    break;
  }
  #line 1072 
  kfree((void *)entry);
  #line 1073 
  return;
}

#line 1075  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static int ofdpa_group_tbl_add(struct ofdpa_port *ofdpa_port, int flags, struct ofdpa_group_tbl_entry *match)
{
  #line 1079 
  struct ofdpa_group_tbl_entry *found;
  #line 1080 
  unsigned long lock_flags;
  #line 1078 
  struct ofdpa *ofdpa = ofdpa_port->ofdpa;
  #line 1082 
  cif___ldv_spin_lock_group_tbl_lock_of_ofdpa(& ofdpa->group_tbl_lock);
  #line 1084 
  found = ofdpa_group_tbl_find(ofdpa,match);
  #line 1086 
  if (found != (struct ofdpa_group_tbl_entry *)0) {
    #line 1087 
    hash_del(& found->entry);
    #line 1088 
    ofdpa_group_tbl_entry_free(found);
    #line 1089 
    found = match;
    #line 1090 
    found->cmd = 8U;
  }
  else {
    #line 1092 
    found = match;
    #line 1093 
    found->cmd = 7U;
  }
  #line 1096 
  ;
  #line 1096 
  ;
  #line 1096 
  hlist_add_head(& found->entry,& ofdpa->group_tbl[hash_32_generic(found->group_id,16U)]);
  #line 1098 
  cif_spin_unlock_irqrestore_group_tbl_lock_of_ofdpa(& ofdpa->group_tbl_lock,lock_flags);
  #line 1100 
  ;
  #line 1100 
  ;
  #line 1100 
  return rocker_cmd_exec(ofdpa_port->rocker_port,
                        (_Bool)((bool)((int)ofdpa_flags_nowait(flags)) != 0),
                        & ofdpa_cmd_group_tbl_add,(void *)found,
                        (int (*)(struct rocker_port *,
                                 struct rocker_desc_info *, void *))0,
                        (void *)0);
}

#line 1106  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static int ofdpa_group_tbl_del(struct ofdpa_port *ofdpa_port, int flags, struct ofdpa_group_tbl_entry *match)
{
  #line 1110 
  struct ofdpa_group_tbl_entry *found;
  #line 1111 
  unsigned long lock_flags;
  #line 1109 
  struct ofdpa *ofdpa = ofdpa_port->ofdpa;
  #line 1112 
  int err = 0;
  #line 1114 
  cif___ldv_spin_lock_group_tbl_lock_of_ofdpa(& ofdpa->group_tbl_lock);
  #line 1116 
  found = ofdpa_group_tbl_find(ofdpa,match);
  #line 1118 
  if (found != (struct ofdpa_group_tbl_entry *)0) {
    #line 1119 
    hash_del(& found->entry);
    #line 1120 
    found->cmd = 9U;
  }
  #line 1123 
  cif_spin_unlock_irqrestore_group_tbl_lock_of_ofdpa(& ofdpa->group_tbl_lock,lock_flags);
  #line 1125 
  ofdpa_group_tbl_entry_free(match);
  #line 1127 
  if (found != (struct ofdpa_group_tbl_entry *)0) {
    #line 1128 
    ;
    #line 1128 
    ;
    #line 1128 
    err = rocker_cmd_exec(ofdpa_port->rocker_port,(_Bool)((bool)((int)ofdpa_flags_nowait(flags)) != 0),& ofdpa_cmd_group_tbl_del,(void *)found,(int (*)(struct rocker_port *, struct rocker_desc_info *, void *))0,(void *)0);
    #line 1132 
    ofdpa_group_tbl_entry_free(found);
  }
  #line 1135 
  return err;
}

#line 1138  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static int ofdpa_group_tbl_do(struct ofdpa_port *ofdpa_port, int flags, struct ofdpa_group_tbl_entry *entry)
{
  #line 1141 
  if (((unsigned long)flags & 1UL) != 0UL) {
    #line 1142 
    return ofdpa_group_tbl_del(ofdpa_port,flags,entry);
  }
  else {
    #line 1144 
    return ofdpa_group_tbl_add(ofdpa_port,flags,entry);
  }
}

#line 1147  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static int ofdpa_group_l2_interface(struct ofdpa_port *ofdpa_port, int flags, __be16 vlan_id, u32 out_pport, int pop_vlan)
{
  #line 1151 
  struct ofdpa_group_tbl_entry *entry;
  #line 1153 
  entry = (struct ofdpa_group_tbl_entry *)kzalloc(64UL,3264U);
  #line 1154 
  if (entry == (struct ofdpa_group_tbl_entry *)0) 
                                                  #line 1155 
                                                  return -12;
  #line 1157 
  entry->group_id = ((unsigned int)((int)__builtin_bswap16((unsigned short)((int)vlan_id)) << 16) & 268369920U) | (out_pport & 65535U);
  #line 1158 
  entry->__anonCompField_ofdpa_group_tbl_entry_198.l2_interface.pop_vlan = (unsigned char)pop_vlan;
  #line 1160 
  return ofdpa_group_tbl_do(ofdpa_port,flags,entry);
}

#line 1163  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static int ofdpa_group_l2_fan_out(struct ofdpa_port *ofdpa_port, int flags, u8 group_count, u32 *group_ids, u32 group_id)
{
  #line 1167 
  struct ofdpa_group_tbl_entry *entry;
  #line 1169 
  entry = (struct ofdpa_group_tbl_entry *)kzalloc(64UL,3264U);
  #line 1170 
  if (entry == (struct ofdpa_group_tbl_entry *)0) 
                                                  #line 1171 
                                                  return -12;
  #line 1173 
  entry->group_id = group_id;
  #line 1174 
  entry->group_count = (unsigned short)group_count;
  #line 1176 
  entry->group_ids = (u32 *)kcalloc((unsigned long)group_count,4UL,3264U);
  #line 1177 
  if (entry->group_ids == (u32 *)0U) {
    #line 1178 
    kfree((void *)entry);
    #line 1179 
    return -12;
  }
  #line 1181 
  memcpy((void *)entry->group_ids,(void *)group_ids,(unsigned long)group_count * 4UL);
  #line 1183 
  return ofdpa_group_tbl_do(ofdpa_port,flags,entry);
}

#line 1186  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static int ofdpa_group_l2_flood(struct ofdpa_port *ofdpa_port, int flags, __be16 vlan_id, u8 group_count, u32 *group_ids, u32 group_id)
{
  #line 1191 
  return ofdpa_group_l2_fan_out(ofdpa_port,flags,
                             (unsigned char)((int)group_count),group_ids,
                             group_id);
}

#line 1196  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static int ofdpa_group_l3_unicast(struct ofdpa_port *ofdpa_port, int flags, u32 index, u8 *src_mac, u8 *dst_mac, __be16 vlan_id, bool ttl_check, u32 pport)
{
  #line 1200 
  struct ofdpa_group_tbl_entry *entry;
  #line 1202 
  entry = (struct ofdpa_group_tbl_entry *)kzalloc(64UL,3264U);
  #line 1203 
  if (entry == (struct ofdpa_group_tbl_entry *)0) 
                                                  #line 1204 
                                                  return -12;
  #line 1206 
  entry->group_id = (index & 268435455U) | 536870912U;
  #line 1207 
  if (src_mac != (u8 *)0U) 
                           #line 1208 
                           ether_addr_copy((u8 *)(& entry->__anonCompField_ofdpa_group_tbl_entry_198.l3_unicast.eth_src),src_mac);
  #line 1209 
  if (dst_mac != (u8 *)0U) 
                           #line 1210 
                           ether_addr_copy((u8 *)(& entry->__anonCompField_ofdpa_group_tbl_entry_198.l3_unicast.eth_dst),dst_mac);
  #line 1211 
  entry->__anonCompField_ofdpa_group_tbl_entry_198.l3_unicast.vlan_id = vlan_id;
  #line 1212 
  entry->__anonCompField_ofdpa_group_tbl_entry_198.l3_unicast.ttl_check = ttl_check;
  #line 1213 
  entry->__anonCompField_ofdpa_group_tbl_entry_198.l3_unicast.group_id = ((unsigned int)((int)__builtin_bswap16((unsigned short)((int)vlan_id)) << 16) & 268369920U) | (pport & 65535U);
  #line 1215 
  return ofdpa_group_tbl_do(ofdpa_port,flags,entry);
}

#line 1219  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static struct ofdpa_neigh_tbl_entry *ofdpa_neigh_tbl_find(struct ofdpa *ofdpa, __be32 ip_addr)
{
  #line 1223 
  void *__mptr;
  #line 1223 
  struct ofdpa_neigh_tbl_entry *tmp_2;
  #line 1221 
  struct ofdpa_neigh_tbl_entry *found;
  {
    #line 1223 
    struct hlist_node *____ptr = ofdpa->neigh_tbl[hash_32_generic(__builtin_bswap32(ip_addr),16U)].first;
    #line 1223 
    if (____ptr != (struct hlist_node *)0) {
      #line 1223 
      __mptr = (void *)____ptr;
      #line 1223 
      tmp_2 = ((struct ofdpa_neigh_tbl_entry *)__mptr);
    }
    else 
         #line 1223 
         tmp_2 = (struct ofdpa_neigh_tbl_entry *)0;
    }
  #line 1223 
  found = tmp_2;
  #line 1223 
  while (found != (struct ofdpa_neigh_tbl_entry *)0) {
    #line 1223 
    void *__mptr_0;
    #line 1223 
    struct ofdpa_neigh_tbl_entry *tmp_5;
    #line 1225 
    if (found->ip_addr == ip_addr) 
                                   #line 1226 
                                   return found;
    {
      #line 1223 
      struct hlist_node *____ptr_0 = found->entry.next;
      #line 1223 
      if (____ptr_0 != (struct hlist_node *)0) {
        #line 1223 
        __mptr_0 = (void *)____ptr_0;
        #line 1223 
        tmp_5 = ((struct ofdpa_neigh_tbl_entry *)__mptr_0);
      }
      else 
           #line 1223 
           tmp_5 = (struct ofdpa_neigh_tbl_entry *)0;
      }
    #line 1223 
    found = tmp_5;
  }
  #line 1228 
  return (struct ofdpa_neigh_tbl_entry *)0;
}

#line 1231  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static void ofdpa_neigh_add(struct ofdpa *ofdpa, struct ofdpa_neigh_tbl_entry *entry)
{
  #line 1234 
  u32 tmp;
  #line 1234 
  tmp = ofdpa->neigh_tbl_next_index;
  #line 1234 
  (ofdpa->neigh_tbl_next_index) ++;
  #line 1234 
  entry->index = tmp;
  #line 1235 
  (entry->ref_count) ++;
  #line 1236 
  ;
  #line 1236 
  ;
  #line 1236 
  hlist_add_head(& entry->entry,& ofdpa->neigh_tbl[hash_32_generic(__builtin_bswap32(entry->ip_addr),16U)]);
  #line 1237 
  return;
}

#line 1240  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static void ofdpa_neigh_del(struct ofdpa_neigh_tbl_entry *entry)
{
  #line 1242 
  (entry->ref_count) --;
  #line 1242 
  if (entry->ref_count == 0U) {
    #line 1243 
    hash_del(& entry->entry);
    #line 1244 
    kfree((void *)entry);
  }
  #line 1246 
  return;
}

#line 1248  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static void ofdpa_neigh_update(struct ofdpa_neigh_tbl_entry *entry, u8 *eth_dst, bool ttl_check)
{
  #line 1251 
  if (eth_dst != (u8 *)0U) {
    #line 1252 
    ether_addr_copy((u8 *)(& entry->eth_dst),eth_dst);
    #line 1253 
    entry->ttl_check = ttl_check;
  }
  else 
       #line 1255 
       (entry->ref_count) ++;
  #line 1256 
  return;
}

#line 1259  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static int ofdpa_port_ipv4_neigh(struct ofdpa_port *ofdpa_port, int flags, __be32 ip_addr, u8 *eth_dst)
{
  #line 1263 
  struct ofdpa_neigh_tbl_entry *entry;
  #line 1264 
  struct ofdpa_neigh_tbl_entry *found;
  #line 1265 
  unsigned long lock_flags;
  #line 1269 
  u32 group_id;
  #line 1272 
  bool updating;
  #line 1273 
  bool removing;
  #line 1262 
  struct ofdpa *ofdpa = ofdpa_port->ofdpa;
  #line 1266 
  __be16 eth_type = (unsigned short)8U;
  #line 1267 
  enum rocker_of_dpa_table_id goto_tbl = ROCKER_OF_DPA_TABLE_ID_ACL_POLICY;
  #line 1270 
  u32 priority = 0U;
  #line 1271 
  bool adding = (_Bool)(((unsigned long)flags & 1UL) == 0UL);
  #line 1274 
  int err = 0;
  #line 1276 
  entry = (struct ofdpa_neigh_tbl_entry *)kzalloc(48UL,3264U);
  #line 1277 
  if (entry == (struct ofdpa_neigh_tbl_entry *)0) 
                                                  #line 1278 
                                                  return -12;
  #line 1280 
  cif___ldv_spin_lock_neigh_tbl_lock_of_ofdpa(& ofdpa->neigh_tbl_lock);
  #line 1282 
  found = ofdpa_neigh_tbl_find(ofdpa,ip_addr);
  #line 1284 
  updating = (_Bool)((found != (struct ofdpa_neigh_tbl_entry *)0 && (int)adding != 0) != 0);
  #line 1285 
  removing = (_Bool)((found != (struct ofdpa_neigh_tbl_entry *)0 && ! adding) != 0);
  #line 1286 
  adding = (_Bool)((found == (struct ofdpa_neigh_tbl_entry *)0 && (int)adding != 0) != 0);
  #line 1288 
  if ((int)adding != 0) {
    #line 1289 
    entry->ip_addr = ip_addr;
    #line 1290 
    entry->dev = ofdpa_port->dev;
    #line 1291 
    ether_addr_copy((u8 *)(& entry->eth_dst),eth_dst);
    #line 1292 
    entry->ttl_check = (_Bool)1;
    #line 1293 
    ofdpa_neigh_add(ofdpa,entry);
  }
  else 
    #line 1294 
    if ((int)removing != 0) {
      #line 1295 
      memcpy((void *)entry,(void *)found,48UL);
      #line 1296 
      ofdpa_neigh_del(found);
    }
    else 
      #line 1297 
      if ((int)updating != 0) {
        #line 1298 
        ofdpa_neigh_update(found,eth_dst,(_Bool)1);
        #line 1299 
        memcpy((void *)entry,(void *)found,48UL);
      }
      else 
           #line 1301 
           err = -2;
  #line 1304 
  cif_spin_unlock_irqrestore_neigh_tbl_lock_of_ofdpa(& ofdpa->neigh_tbl_lock,lock_flags);
  #line 1306 
  if (err != 0) 
                #line 1307 
                goto err_out;
  #line 1315 
  err = ofdpa_group_l3_unicast(ofdpa_port,flags,entry->index,(ofdpa_port->dev)->dev_addr,(u8 *)(& entry->eth_dst),(unsigned short)((int)ofdpa_port->internal_vlan_id),(_Bool)((bool)((int)entry->ttl_check) != 0),ofdpa_port->pport);
  #line 1322 
  if (err != 0) {
    #line 1323 
    netdev_err(ofdpa_port->dev,(char *)"Error (%d) L3 unicast group index %d\n",err,entry->index);
    #line 1325 
    goto err_out;
  }
  #line 1328 
  if ((int)adding != 0 || (int)removing != 0) {
    #line 1329 
    group_id = (entry->index & 268435455U) | 536870912U;
    #line 1330 
    ;
    #line 1330 
    ;
    #line 1330 
    ;
    #line 1330 
    ;
    #line 1330 
    ;
    #line 1330 
    ;
    #line 1330 
    ;
    #line 1330 
    err = ofdpa_flow_tbl_ucast4_routing(ofdpa_port,(unsigned short)((int)eth_type),ip_addr,inet_make_mask(32),priority,goto_tbl,group_id,(struct fib_info *)0,flags);
    #line 1336 
    if (err != 0) 
                  #line 1337 
                  netdev_err(ofdpa_port->dev,(char *)"Error (%d) /32 unicast route %pI4 group 0x%08x\n",err,& entry->ip_addr,group_id);
  }
  #line 1341 
  err_out: 
           #line 1341 
  ;
  #line 1342 
  if (! adding) 
                #line 1343 
                kfree((void *)entry);
  #line 1345 
  return err;
}

#line 1348  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static int ofdpa_port_ipv4_resolve(struct ofdpa_port *ofdpa_port, __be32 ip_addr)
{
  #line 1351 
  struct net_device *dev = ofdpa_port->dev;
  #line 1352 
  struct neighbour *n = __ipv4_neigh_lookup(dev,ip_addr);
  #line 1353 
  int err = 0;
  #line 1355 
  if (n == (struct neighbour *)0) {
    #line 1356 
    n = neigh_create(& arp_tbl,(void *)(& ip_addr),dev);
    #line 1357 
    if ((int)IS_ERR((void *)n) != 0) {
      #line 1358 
      return (int)PTR_ERR((void *)n);
    }
  }
  #line 1366 
  if (((int)n->nud_state & 222) != 0) 
                                      #line 1367 
                                      err = ofdpa_port_ipv4_neigh(ofdpa_port,0,ip_addr,(u8 *)(& n->ha)); else 
                                                                    #line 1370 
                                                                    neigh_event_send(n,(struct sk_buff *)0);
  #line 1372 
  neigh_release(n);
  #line 1373 
  return err;
}

#line 1376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static int ofdpa_port_ipv4_nh(struct ofdpa_port *ofdpa_port, int flags, __be32 ip_addr, u32 *index)
{
  #line 1380 
  struct ofdpa_neigh_tbl_entry *entry;
  #line 1381 
  struct ofdpa_neigh_tbl_entry *found;
  #line 1382 
  unsigned long lock_flags;
  #line 1384 
  bool updating;
  #line 1385 
  bool removing;
  #line 1379 
  struct ofdpa *ofdpa = ofdpa_port->ofdpa;
  #line 1383 
  bool adding = (_Bool)(((unsigned long)flags & 1UL) == 0UL);
  #line 1386 
  bool resolved = (_Bool)1;
  #line 1387 
  int err = 0;
  #line 1389 
  entry = (struct ofdpa_neigh_tbl_entry *)kzalloc(48UL,3264U);
  #line 1390 
  if (entry == (struct ofdpa_neigh_tbl_entry *)0) 
                                                  #line 1391 
                                                  return -12;
  #line 1393 
  cif___ldv_spin_lock_neigh_tbl_lock_of_ofdpa(& ofdpa->neigh_tbl_lock);
  #line 1395 
  found = ofdpa_neigh_tbl_find(ofdpa,ip_addr);
  #line 1397 
  updating = (_Bool)((found != (struct ofdpa_neigh_tbl_entry *)0 && (int)adding != 0) != 0);
  #line 1398 
  removing = (_Bool)((found != (struct ofdpa_neigh_tbl_entry *)0 && ! adding) != 0);
  #line 1399 
  adding = (_Bool)((found == (struct ofdpa_neigh_tbl_entry *)0 && (int)adding != 0) != 0);
  #line 1401 
  if ((int)adding != 0) {
    #line 1402 
    entry->ip_addr = ip_addr;
    #line 1403 
    entry->dev = ofdpa_port->dev;
    #line 1404 
    ofdpa_neigh_add(ofdpa,entry);
    #line 1405 
    *index = entry->index;
    #line 1406 
    resolved = (_Bool)0;
  }
  else 
    #line 1407 
    if ((int)removing != 0) {
      #line 1408 
      *index = found->index;
      #line 1409 
      ofdpa_neigh_del(found);
    }
    else 
      #line 1410 
      if ((int)updating != 0) {
        #line 1412 
        int tmp_1;
        #line 1411 
        ofdpa_neigh_update(found,(u8 *)0U,(_Bool)0);
        #line 1412 
        if ((int)is_zero_ether_addr((u8 *)(& found->eth_dst)) != 0) 
                                                                    #line 1412 
                                                                    tmp_1 = 0; else 
                                                                    #line 1412 
                                                                    tmp_1 = 1;
        #line 1412 
        resolved = (_Bool)(tmp_1 != 0);
        #line 1413 
        *index = found->index;
      }
      else 
           #line 1415 
           err = -2;
  #line 1418 
  cif_spin_unlock_irqrestore_neigh_tbl_lock_of_ofdpa(& ofdpa->neigh_tbl_lock,lock_flags);
  #line 1420 
  if (! adding) 
                #line 1421 
                kfree((void *)entry);
  #line 1423 
  if (err != 0) 
                #line 1424 
                return err;
  #line 1428 
  if (! resolved) 
                  #line 1429 
                  err = ofdpa_port_ipv4_resolve(ofdpa_port,ip_addr);
  #line 1431 
  return err;
}

#line 1434  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static struct ofdpa_port *ofdpa_port_get(struct ofdpa *ofdpa, int port_index)
{
  #line 1437 
  struct rocker_port *rocker_port;
  #line 1440 
  struct ofdpa_port *tmp;
  #line 1439 
  rocker_port = *((ofdpa->rocker)->ports + (unsigned long)port_index);
  #line 1440 
  if (rocker_port != (struct rocker_port *)0) 
                                              #line 1440 
                                              tmp = (struct ofdpa_port *)rocker_port->wpriv; else 
                                                                    #line 1440 
                                                                    tmp = (struct ofdpa_port *)0;
  #line 1440 
  return tmp;
}

#line 1443  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static int ofdpa_port_vlan_flood_group(struct ofdpa_port *ofdpa_port, int flags, __be16 vlan_id)
{
  #line 1446 
  struct ofdpa_port *p;
  #line 1450 
  u32 *group_ids;
  #line 1453 
  int i;
  #line 1447 
  struct ofdpa *ofdpa = ofdpa_port->ofdpa;
  #line 1448 
  unsigned int port_count = (ofdpa->rocker)->port_count;
  #line 1449 
  u32 group_id = ((unsigned int)((int)__builtin_bswap16((unsigned short)((int)vlan_id)) << 16) & 268369920U) | 1073741824U;
  #line 1451 
  u8 group_count = (unsigned char)0U;
  #line 1452 
  int err = 0;
  #line 1455 
  group_ids = (u32 *)kcalloc((unsigned long)port_count,4UL,3264U);
  #line 1456 
  if (group_ids == (u32 *)0U) 
                              #line 1457 
                              return -12;
  #line 1464 
  i = 0;
  #line 1464 
  while ((unsigned int)i < port_count) {
    {
      #line 1465 
      p = ofdpa_port_get(ofdpa,i);
      #line 1466 
      if (p == (struct ofdpa_port *)0) 
                                       #line 1467 
                                       goto __Cont;
      #line 1468 
      if (! ofdpa_port_is_bridged(p)) 
                                      #line 1469 
                                      goto __Cont;
      #line 1470 
      ;
      #line 1470 
      if ((int)test_bit((long)__builtin_bswap16((unsigned short)((int)vlan_id)),
                 (unsigned long *)(& p->vlan_bitmap)) != 0) {
        #line 1471 
        u8 tmp_2;
        #line 1471 
        tmp_2 = group_count;
        #line 1471 
        group_count = (u8)((int)group_count + 1);
        #line 1471 
        *(group_ids + (unsigned long)tmp_2) = ((unsigned int)((int)__builtin_bswap16((unsigned short)((int)vlan_id)) << 16) & 268369920U) | (p->pport & 65535U);
      }
    }
    #line 1464 
    __Cont: 
            #line 1464 
    i ++;
  }
  #line 1477 
  if ((unsigned int)group_count == 0U) 
                                       #line 1478 
                                       goto no_ports_in_vlan;
  #line 1480 
  err = ofdpa_group_l2_flood(ofdpa_port,flags,(unsigned short)((int)vlan_id),(unsigned char)((int)group_count),group_ids,group_id);
  #line 1482 
  if (err != 0) 
                #line 1483 
                netdev_err(ofdpa_port->dev,(char *)"Error (%d) port VLAN l2 flood group\n",err);
  #line 1485 
  no_ports_in_vlan: 
                    #line 1485 
  ;
  #line 1486 
  kfree((void *)group_ids);
  #line 1487 
  return err;
}

#line 1490  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static int ofdpa_port_vlan_l2_groups(struct ofdpa_port *ofdpa_port, int flags, __be16 vlan_id, bool pop_vlan)
{
  #line 1495 
  struct ofdpa_port *p;
  #line 1497 
  u32 out_pport;
  #line 1499 
  int err;
  #line 1500 
  int i;
  #line 1493 
  struct ofdpa *ofdpa = ofdpa_port->ofdpa;
  #line 1494 
  unsigned int port_count = (ofdpa->rocker)->port_count;
  #line 1496 
  bool adding = (_Bool)(((unsigned long)flags & 1UL) == 0UL);
  #line 1498 
  int ref = 0;
  #line 1506 
  if ((unsigned int)ofdpa_port->stp_state + 4294967294U <= 1U) {
    #line 1508 
    out_pport = ofdpa_port->pport;
    #line 1509 
    err = ofdpa_group_l2_interface(ofdpa_port,flags,(unsigned short)((int)vlan_id),out_pport,(int)pop_vlan);
    #line 1511 
    if (err != 0) {
      #line 1512 
      netdev_err(ofdpa_port->dev,(char *)"Error (%d) port VLAN l2 group for pport %d\n",err,out_pport);
      #line 1514 
      return err;
    }
  }
  #line 1523 
  i = 0;
  #line 1523 
  while ((unsigned int)i < port_count) {
    #line 1524 
    p = ofdpa_port_get(ofdpa,i);
    #line 1525 
    if (p != (struct ofdpa_port *)0) {
      #line 1525 
      ;
      #line 1525 
      if ((int)test_bit((long)__builtin_bswap16((unsigned short)((int)vlan_id)),
                 (unsigned long *)(& p->vlan_bitmap)) != 0) 
        #line 1526 
        ref ++;
    }
    #line 1523 
    i ++;
  }
  #line 1529 
  if ((! adding || ref != 1) && ((int)adding != 0 || ref != 0)) 
                                                                #line 1530 
                                                                return 0;
  #line 1532 
  out_pport = 0U;
  #line 1533 
  err = ofdpa_group_l2_interface(ofdpa_port,flags,(unsigned short)((int)vlan_id),out_pport,(int)pop_vlan);
  #line 1535 
  if (err != 0) {
    #line 1536 
    netdev_err(ofdpa_port->dev,(char *)"Error (%d) port VLAN l2 group for CPU port\n",err);
    #line 1537 
    return err;
  }
  #line 1540 
  return 0;
}

#line 1551  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static struct ofdpa_ctrl ofdpa_ctrls[6U] = {{.eth_dst = (u8 *)(& ll_mac), .eth_dst_mask = (u8 *)(& ll_mask), .acl = (_Bool)1}, {.eth_dst = (u8 *)(& zero_mac), .eth_dst_mask = (u8 *)(& zero_mac), .eth_type = (unsigned short)1544U, .acl = (_Bool)1}, {.eth_dst = (u8 *)(& ipv4_mcast), .eth_dst_mask = (u8 *)(& ipv4_mask), .eth_type = (unsigned short)8U, .term = (_Bool)1, .copy_to_cpu = (_Bool)1}, {.eth_dst = (u8 *)(& ipv6_mcast), .eth_dst_mask = (u8 *)(& ipv6_mask), .eth_type = (unsigned short)56710U, .term = (_Bool)1, .copy_to_cpu = (_Bool)1}, {.bridge = (_Bool)1, .copy_to_cpu = (_Bool)1}, {.eth_dst = (u8 *)(& zero_mac), .eth_dst_mask = (u8 *)(& zero_mac), .acl = (_Bool)1}};
#line 1594  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static int ofdpa_port_ctrl_vlan_acl(struct ofdpa_port *ofdpa_port, int flags, struct ofdpa_ctrl *ctrl, __be16 vlan_id)
{
  #line 1608 
  int err;
  #line 1597 
  u32 in_pport = ofdpa_port->pport;
  #line 1598 
  u32 in_pport_mask = 4294967295U;
  #line 1599 
  u32 out_pport = 0U;
  #line 1600 
  u8 *eth_src = (u8 *)0U;
  #line 1601 
  u8 *eth_src_mask = (u8 *)0U;
  #line 1602 
  __be16 vlan_id_mask = (unsigned short)65535U;
  #line 1603 
  u8 ip_proto = (unsigned char)0U;
  #line 1604 
  u8 ip_proto_mask = (unsigned char)0U;
  #line 1605 
  u8 ip_tos = (unsigned char)0U;
  #line 1606 
  u8 ip_tos_mask = (unsigned char)0U;
  #line 1607 
  u32 group_id = ((unsigned int)((int)__builtin_bswap16((unsigned short)((int)vlan_id)) << 16) & 268369920U) | (out_pport & 65535U);
  #line 1610 
  err = ofdpa_flow_tbl_acl(ofdpa_port,flags,in_pport,in_pport_mask,eth_src,eth_src_mask,ctrl->eth_dst,ctrl->eth_dst_mask,(unsigned short)((int)ctrl->eth_type),(unsigned short)((int)vlan_id),(unsigned short)((int)vlan_id_mask),(unsigned char)((int)ip_proto),(unsigned char)((int)ip_proto_mask),(unsigned char)((int)ip_tos),(unsigned char)((int)ip_tos_mask),group_id);
  #line 1620 
  if (err != 0) 
                #line 1621 
                netdev_err(ofdpa_port->dev,(char *)"Error (%d) ctrl ACL\n",err);
  #line 1623 
  return err;
}

#line 1626  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static int ofdpa_port_ctrl_vlan_bridge(struct ofdpa_port *ofdpa_port, int flags, struct ofdpa_ctrl *ctrl, __be16 vlan_id)
{
  #line 1634 
  int err;
  #line 1630 
  enum rocker_of_dpa_table_id goto_tbl = ROCKER_OF_DPA_TABLE_ID_ACL_POLICY;
  #line 1632 
  u32 group_id = ((unsigned int)((int)__builtin_bswap16((unsigned short)((int)vlan_id)) << 16) & 268369920U) | 1073741824U;
  #line 1633 
  u32 tunnel_id = 0U;
  #line 1636 
  if (! ofdpa_port_is_bridged(ofdpa_port)) 
                                           #line 1637 
                                           return 0;
  #line 1639 
  err = ofdpa_flow_tbl_bridge(ofdpa_port,flags,ctrl->eth_dst,ctrl->eth_dst_mask,(unsigned short)((int)vlan_id),tunnel_id,goto_tbl,group_id,(_Bool)((bool)((int)ctrl->copy_to_cpu) != 0));
  #line 1644 
  if (err != 0) 
                #line 1645 
                netdev_err(ofdpa_port->dev,(char *)"Error (%d) ctrl FLOOD\n",err);
  #line 1647 
  return err;
}

#line 1650  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static int ofdpa_port_ctrl_vlan_term(struct ofdpa_port *ofdpa_port, int flags, struct ofdpa_ctrl *ctrl, __be16 vlan_id)
{
  #line 1655 
  int err;
  #line 1653 
  u32 in_pport_mask = 4294967295U;
  #line 1654 
  __be16 vlan_id_mask = (unsigned short)65535U;
  #line 1657 
  if ((unsigned int)__builtin_bswap16((unsigned short)((int)vlan_id)) == 0U) 
    #line 1658 
    vlan_id = ofdpa_port->internal_vlan_id;
  #line 1660 
  err = ofdpa_flow_tbl_term_mac(ofdpa_port,ofdpa_port->pport,in_pport_mask,(unsigned short)((int)ctrl->eth_type),ctrl->eth_dst,ctrl->eth_dst_mask,(unsigned short)((int)vlan_id),(unsigned short)((int)vlan_id_mask),(_Bool)((bool)((int)ctrl->copy_to_cpu) != 0),flags);
  #line 1666 
  if (err != 0) 
                #line 1667 
                netdev_err(ofdpa_port->dev,(char *)"Error (%d) ctrl term\n",err);
  #line 1669 
  return err;
}

#line 1672  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static int ofdpa_port_ctrl_vlan(struct ofdpa_port *ofdpa_port, int flags, struct ofdpa_ctrl *ctrl, __be16 vlan_id)
{
  #line 1675 
  if ((int)ctrl->acl != 0) {
    #line 1676 
    return ofdpa_port_ctrl_vlan_acl(ofdpa_port,flags,ctrl,
                               (unsigned short)((int)vlan_id));
  }
  #line 1678 
  if ((int)ctrl->bridge != 0) {
    #line 1679 
    return ofdpa_port_ctrl_vlan_bridge(ofdpa_port,flags,ctrl,
                                    (unsigned short)((int)vlan_id));
  }
  #line 1682 
  if ((int)ctrl->term != 0) {
    #line 1683 
    return ofdpa_port_ctrl_vlan_term(ofdpa_port,flags,ctrl,
                                  (unsigned short)((int)vlan_id));
  }
  #line 1686 
  return -95;
}

#line 1689  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static int ofdpa_port_ctrl_vlan_add(struct ofdpa_port *ofdpa_port, int flags, __be16 vlan_id)
{
  #line 1693 
  int i;
  #line 1692 
  int err = 0;
  #line 1695 
  i = 0;
  #line 1695 
  while (i <= 5) {
    #line 1696 
    if ((int)ofdpa_port->ctrls[i] != 0) {
      #line 1697 
      err = ofdpa_port_ctrl_vlan(ofdpa_port,flags,& ofdpa_ctrls[i],(unsigned short)((int)vlan_id));
      #line 1699 
      if (err != 0) 
                    #line 1700 
                    return err;
    }
    #line 1695 
    i ++;
  }
  #line 1704 
  return err;
}

#line 1707  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static int ofdpa_port_ctrl(struct ofdpa_port *ofdpa_port, int flags, struct ofdpa_ctrl *ctrl)
{
  #line 1710 
  u16 vid;
  #line 1711 
  int err = 0;
  #line 1713 
  vid = (unsigned short)1U;
  #line 1713 
  while ((unsigned int)vid <= 4095U) {
    {
      #line 1714 
      if (! test_bit((long)vid,(unsigned long *)(& ofdpa_port->vlan_bitmap))) 
        #line 1715 
        goto __Cont;
      #line 1716 
      ;
      #line 1716 
      ;
      #line 1716 
      ;
      #line 1716 
      err = ofdpa_port_ctrl_vlan(ofdpa_port,flags,ctrl,(unsigned short)((int)__builtin_bswap16((unsigned short)((int)vid))));
      #line 1718 
      if (err != 0) 
                    #line 1719 
                    break;
    }
    #line 1713 
    __Cont: 
            #line 1713 
    vid = (u16)((int)vid + 1);
  }
  #line 1722 
  return err;
}

#line 1725  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static int ofdpa_port_vlan(struct ofdpa_port *ofdpa_port, int flags, u16 vid)
{
  #line 1733 
  __be16 internal_vlan_id;
  #line 1734 
  bool untagged;
  #line 1736 
  int err;
  #line 1728 
  enum rocker_of_dpa_table_id goto_tbl = ROCKER_OF_DPA_TABLE_ID_TERMINATION_MAC;
  #line 1730 
  u32 in_pport = ofdpa_port->pport;
  #line 1731 
  __be16 vlan_id = __builtin_bswap16((unsigned short)((int)vid));
  #line 1732 
  __be16 vlan_id_mask = (unsigned short)65535U;
  #line 1735 
  bool adding = (_Bool)(((unsigned long)flags & 1UL) == 0UL);
  #line 1738 
  internal_vlan_id = ofdpa_port_vid_to_vlan(ofdpa_port,(unsigned short)((int)vid),& untagged);
  #line 1740 
  if ((int)adding != 0) {
    #line 1740 
    ;
    #line 1740 
    if ((int)test_bit((long)__builtin_bswap16((unsigned short)((int)internal_vlan_id)),
                 (unsigned long *)(& ofdpa_port->vlan_bitmap)) != 0) 
      #line 1742 
      return 0; else 
                     #line 1740 
                     goto _LAND;
  }
  else 
    #line 1740 
    _LAND: 
           #line 1743 
           if (! adding) {
             #line 1744 
             ;
             #line 1744 
             if (! test_bit((long)__builtin_bswap16((unsigned short)((int)internal_vlan_id)),
                 (unsigned long *)(& ofdpa_port->vlan_bitmap))) 
               #line 1745 
               return 0;
           }
  #line 1747 
  ;
  #line 1747 
  change_bit((long)__builtin_bswap16((unsigned short)((int)internal_vlan_id)),(unsigned long *)(& ofdpa_port->vlan_bitmap));
  #line 1749 
  if ((int)adding != 0) {
    #line 1750 
    err = ofdpa_port_ctrl_vlan_add(ofdpa_port,flags,(unsigned short)((int)internal_vlan_id));
    #line 1752 
    if (err != 0) {
      #line 1753 
      netdev_err(ofdpa_port->dev,(char *)"Error (%d) port ctrl vlan add\n",err);
      #line 1754 
      goto err_vlan_add;
    }
  }
  #line 1758 
  err = ofdpa_port_vlan_l2_groups(ofdpa_port,flags,(unsigned short)((int)internal_vlan_id),(_Bool)((bool)((int)untagged) != 0));
  #line 1760 
  if (err != 0) {
    #line 1761 
    netdev_err(ofdpa_port->dev,(char *)"Error (%d) port VLAN l2 groups\n",err);
    #line 1762 
    goto err_vlan_l2_groups;
  }
  #line 1765 
  err = ofdpa_port_vlan_flood_group(ofdpa_port,flags,(unsigned short)((int)internal_vlan_id));
  #line 1767 
  if (err != 0) {
    #line 1768 
    netdev_err(ofdpa_port->dev,(char *)"Error (%d) port VLAN l2 flood group\n",err);
    #line 1769 
    goto err_flood_group;
  }
  #line 1772 
  err = ofdpa_flow_tbl_vlan(ofdpa_port,flags,in_pport,(unsigned short)((int)vlan_id),(unsigned short)((int)vlan_id_mask),goto_tbl,(_Bool)((bool)((int)untagged) != 0),(unsigned short)((int)internal_vlan_id));
  #line 1775 
  if (err != 0) 
                #line 1776 
                netdev_err(ofdpa_port->dev,(char *)"Error (%d) port VLAN table\n",err);
  #line 1778 
  return 0;
  #line 1780 
  err_vlan_add: 
                #line 1780 
  ;
  #line 1781 
  err_vlan_l2_groups: 
                      #line 1781 
  ;
  #line 1782 
  err_flood_group: 
                   #line 1782 
  ;
  #line 1783 
  ;
  #line 1783 
  change_bit((long)__builtin_bswap16((unsigned short)((int)internal_vlan_id)),(unsigned long *)(& ofdpa_port->vlan_bitmap));
  #line 1784 
  return err;
}

#line 1787  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static int ofdpa_port_ig_tbl(struct ofdpa_port *ofdpa_port, int flags)
{
  #line 1789 
  enum rocker_of_dpa_table_id goto_tbl;
  #line 1790 
  u32 in_pport;
  #line 1791 
  u32 in_pport_mask;
  #line 1792 
  int err;
  #line 1798 
  in_pport = 0U;
  #line 1799 
  in_pport_mask = 4294901760U;
  #line 1800 
  goto_tbl = ROCKER_OF_DPA_TABLE_ID_VLAN;
  #line 1802 
  err = ofdpa_flow_tbl_ig_port(ofdpa_port,flags,in_pport,in_pport_mask,goto_tbl);
  #line 1805 
  if (err != 0) 
                #line 1806 
                netdev_err(ofdpa_port->dev,(char *)"Error (%d) ingress port table entry\n",err);
  #line 1808 
  return err;
}

#line 1819  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static void ofdpa_port_fdb_learn_work(struct work_struct *work)
{
  #line 1822 
  void *__mptr;
  #line 1825 
  struct switchdev_notifier_fdb_info info;
  #line 1822 
  __mptr = (void *)work;
  #line 1821 
  struct ofdpa_fdb_learn_work *lw = ((struct ofdpa_fdb_learn_work *)__mptr);
  #line 1823 
  bool removing = (_Bool)(((unsigned long)lw->flags & 1UL) != 0UL);
  #line 1824 
  bool learned = (_Bool)(((unsigned long)lw->flags & 4UL) != 0UL);
  #line 1827 
  info.addr = (unsigned char *)(& lw->addr);
  #line 1828 
  info.vid = lw->vid;
  #line 1830 
  rtnl_lock();
  #line 1831 
  if ((int)learned != 0 && (int)removing != 0) 
                                               #line 1832 
                                               call_switchdev_notifiers(2UL,(lw->ofdpa_port)->dev,& info.info,(struct netlink_ext_ack *)0);
  else 
    #line 1834 
    if ((int)learned != 0 && ! removing) 
                                         #line 1835 
                                         call_switchdev_notifiers(1UL,(lw->ofdpa_port)->dev,& info.info,(struct netlink_ext_ack *)0);
  #line 1837 
  rtnl_unlock();
  #line 1839 
  kfree((void *)work);
  #line 1840 
  return;
}

#line 1842  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static int ofdpa_port_fdb_learn(struct ofdpa_port *ofdpa_port, int flags, u8 *addr, __be16 vlan_id)
{
  #line 1845 
  struct ofdpa_fdb_learn_work *lw;
  #line 1852 
  int err;
  #line 1846 
  enum rocker_of_dpa_table_id goto_tbl = ROCKER_OF_DPA_TABLE_ID_ACL_POLICY;
  #line 1848 
  u32 out_pport = ofdpa_port->pport;
  #line 1849 
  u32 tunnel_id = 0U;
  #line 1850 
  u32 group_id = 0U;
  #line 1851 
  bool copy_to_cpu = (_Bool)0;
  #line 1854 
  if ((int)ofdpa_port_is_bridged(ofdpa_port) != 0) {
    #line 1855 
    group_id = ((unsigned int)((int)__builtin_bswap16((unsigned short)((int)vlan_id)) << 16) & 268369920U) | (out_pport & 65535U);
  }
  #line 1857 
  if (((unsigned long)flags & 8UL) == 0UL) {
    #line 1858 
    err = ofdpa_flow_tbl_bridge(ofdpa_port,flags,addr,(u8 *)0U,(unsigned short)((int)vlan_id),tunnel_id,goto_tbl,group_id,(_Bool)((bool)((int)copy_to_cpu) != 0));
    #line 1861 
    if (err != 0) 
                  #line 1862 
                  return err;
  }
  #line 1865 
  if (! ofdpa_port_is_bridged(ofdpa_port)) 
                                           #line 1866 
                                           return 0;
  #line 1868 
  lw = (struct ofdpa_fdb_learn_work *)kzalloc(104UL,2592U);
  #line 1869 
  if (lw == (struct ofdpa_fdb_learn_work *)0) 
                                              #line 1870 
                                              return -12;
  {
    #line 1872 
    struct lock_class_key __key;
    #line 1872 
    __init_work(& lw->work,0);
    #line 1872 
    atomic_long_t __constr_expr_43 = {.counter = 137438953408LL};
    #line 1872 
    lw->work.data = __constr_expr_43;
    #line 1872 
    lockdep_init_map(& lw->work.lockdep_map,(char *)"(work_completion)",& __key,0);
    #line 1872 
    INIT_LIST_HEAD(& lw->work.entry);
    #line 1872 
    lw->work.func = & ofdpa_port_fdb_learn_work;
  }
  #line 1874 
  lw->ofdpa_port = ofdpa_port;
  #line 1875 
  lw->flags = flags;
  #line 1876 
  ether_addr_copy((u8 *)(& lw->addr),addr);
  #line 1877 
  lw->vid = ofdpa_port_vlan_to_vid(ofdpa_port,(unsigned short)((int)vlan_id));
  #line 1879 
  cif_schedule_work(& lw->work);
  #line 1880 
  return 0;
}

#line 1884  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static struct ofdpa_fdb_tbl_entry *ofdpa_fdb_tbl_find(struct ofdpa *ofdpa, struct ofdpa_fdb_tbl_entry *match)
{
  #line 1889 
  struct ofdpa_fdb_tbl_entry *tmp_1;
  #line 1889 
  void *__mptr;
  #line 1887 
  struct ofdpa_fdb_tbl_entry *found;
  {
    #line 1889 
    struct hlist_node *____ptr = ofdpa->fdb_tbl[hash_32_generic(match->key_crc32,16U)].first;
    #line 1889 
    if (____ptr != (struct hlist_node *)0) {
      #line 1889 
      __mptr = (void *)____ptr;
      #line 1889 
      tmp_1 = ((struct ofdpa_fdb_tbl_entry *)__mptr);
    }
    else 
         #line 1889 
         tmp_1 = (struct ofdpa_fdb_tbl_entry *)0;
    }
  #line 1889 
  found = tmp_1;
  #line 1889 
  while (found != (struct ofdpa_fdb_tbl_entry *)0) {
    #line 1889 
    void *__mptr_0;
    #line 1889 
    struct ofdpa_fdb_tbl_entry *tmp_4;
    #line 1890 
    if (memcmp((void *)(& found->key),(void *)(& match->key),16UL) == 0) 
      #line 1891 
      return found;
    {
      #line 1889 
      struct hlist_node *____ptr_0 = found->entry.next;
      #line 1889 
      if (____ptr_0 != (struct hlist_node *)0) {
        #line 1889 
        __mptr_0 = (void *)____ptr_0;
        #line 1889 
        tmp_4 = ((struct ofdpa_fdb_tbl_entry *)__mptr_0);
      }
      else 
           #line 1889 
           tmp_4 = (struct ofdpa_fdb_tbl_entry *)0;
      }
    #line 1889 
    found = tmp_4;
  }
  #line 1893 
  return (struct ofdpa_fdb_tbl_entry *)0;
}

#line 1896  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static int ofdpa_port_fdb(struct ofdpa_port *ofdpa_port, unsigned char *addr, __be16 vlan_id, int flags)
{
  #line 1901 
  struct ofdpa_fdb_tbl_entry *fdb;
  #line 1902 
  struct ofdpa_fdb_tbl_entry *found;
  #line 1904 
  unsigned long lock_flags;
  #line 1900 
  struct ofdpa *ofdpa = ofdpa_port->ofdpa;
  #line 1903 
  bool removing = (_Bool)(((unsigned long)flags & 1UL) != 0UL);
  #line 1906 
  fdb = (struct ofdpa_fdb_tbl_entry *)kzalloc(48UL,3264U);
  #line 1907 
  if (fdb == (struct ofdpa_fdb_tbl_entry *)0) 
                                              #line 1908 
                                              return -12;
  #line 1910 
  fdb->learned = (_Bool)(((unsigned long)flags & 4UL) != 0UL);
  #line 1911 
  fdb->touched = jiffies;
  #line 1912 
  fdb->key.ofdpa_port = ofdpa_port;
  #line 1913 
  ether_addr_copy((u8 *)(& fdb->key.addr),addr);
  #line 1914 
  fdb->key.vlan_id = vlan_id;
  #line 1915 
  fdb->key_crc32 = crc32_le(4294967295U,(unsigned char *)(& fdb->key),16UL);
  #line 1917 
  cif___ldv_spin_lock_fdb_tbl_lock_of_ofdpa(& ofdpa->fdb_tbl_lock);
  #line 1919 
  found = ofdpa_fdb_tbl_find(ofdpa,fdb);
  #line 1921 
  if (found != (struct ofdpa_fdb_tbl_entry *)0) {
    #line 1922 
    found->touched = jiffies;
    #line 1923 
    if ((int)removing != 0) {
      #line 1924 
      kfree((void *)fdb);
      #line 1925 
      hash_del(& found->entry);
    }
  }
  else 
    #line 1927 
    if (! removing) {
      #line 1928 
      ;
      #line 1928 
      ;
      #line 1928 
      hlist_add_head(& fdb->entry,& ofdpa->fdb_tbl[hash_32_generic(fdb->key_crc32,16U)]);
    }
  #line 1932 
  cif_spin_unlock_irqrestore_fdb_tbl_lock_of_ofdpa(& ofdpa->fdb_tbl_lock,lock_flags);
  #line 1935 
  if ((found == (struct ofdpa_fdb_tbl_entry *)0) != ! removing) {
    #line 1936 
    kfree((void *)fdb);
    #line 1937 
    if (found == (struct ofdpa_fdb_tbl_entry *)0 && (int)removing != 0) 
      #line 1938 
      return 0;
    #line 1940 
    flags |= 8;
  }
  #line 1943 
  return ofdpa_port_fdb_learn(ofdpa_port,flags,addr,
                             (unsigned short)((int)vlan_id));
}

#line 1946  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static int ofdpa_port_fdb_flush(struct ofdpa_port *ofdpa_port, int flags)
{
  #line 1949 
  struct ofdpa_fdb_tbl_entry *found;
  #line 1950 
  unsigned long lock_flags;
  #line 1951 
  struct hlist_node *tmp;
  #line 1952 
  int bkt;
  #line 1948 
  struct ofdpa *ofdpa = ofdpa_port->ofdpa;
  #line 1953 
  int err = 0;
  #line 1955 
  if ((unsigned int)ofdpa_port->stp_state + 4294967294U <= 1U) 
                                                               #line 1957 
                                                               return 0;
  #line 1959 
  flags |= 3;
  #line 1961 
  cif___ldv_spin_lock_fdb_tbl_lock_of_ofdpa(& ofdpa->fdb_tbl_lock);
  #line 1963 
  bkt = 0;
  #line 1963 
  found = (struct ofdpa_fdb_tbl_entry *)0;
  #line 1963 
  while (found == (struct ofdpa_fdb_tbl_entry *)0 && (unsigned int)bkt <= 65535U) {
    {
      #line 1963 
      void *__mptr;
      #line 1963 
      struct ofdpa_fdb_tbl_entry *tmp_1;
      {
        #line 1963 
        struct hlist_node *____ptr = ofdpa->fdb_tbl[bkt].first;
        #line 1963 
        if (____ptr != (struct hlist_node *)0) {
          #line 1963 
          __mptr = (void *)____ptr;
          #line 1963 
          tmp_1 = ((struct ofdpa_fdb_tbl_entry *)__mptr);
        }
        else 
             #line 1963 
             tmp_1 = (struct ofdpa_fdb_tbl_entry *)0;
        }
      #line 1963 
      found = tmp_1;
      #line 1963 
      while (1) {
        #line 1963 
        void *__mptr_0;
        #line 1963 
        struct ofdpa_fdb_tbl_entry *tmp_4;
        #line 1963 
        if (found != (struct ofdpa_fdb_tbl_entry *)0) {
          #line 1963 
          tmp = found->entry.next;
          #line 1963 
          if (! (1 != 0)) 
                          #line 1963 
                          break;
        }
        else 
             #line 1963 
             break;
        #line 1964 
        if (found->key.ofdpa_port != ofdpa_port) 
                                                 #line 1965 
                                                 goto __Cont;
        #line 1966 
        if (! found->learned) 
                              #line 1967 
                              goto __Cont;
        #line 1968 
        err = ofdpa_port_fdb_learn(ofdpa_port,flags,(u8 *)(& found->key.addr),(unsigned short)((int)found->key.vlan_id));
        #line 1971 
        if (err != 0) 
                      #line 1972 
                      goto err_out;
        #line 1973 
        hash_del(& found->entry);
        #line 1963 
        __Cont: { /* sequence */
                  {
                    #line 1963 
                    struct hlist_node *____ptr_0 = tmp;
                    #line 1963 
                    if (____ptr_0 != (struct hlist_node *)0) {
                      #line 1963 
                      __mptr_0 = (void *)____ptr_0;
                      #line 1963 
                      tmp_4 = ((struct ofdpa_fdb_tbl_entry *)__mptr_0);
                    }
                    else 
                         #line 1963 
                         tmp_4 = (struct ofdpa_fdb_tbl_entry *)0;
                    }
                  #line 1963 
                  found = tmp_4;
                }
      }
    }
    #line 1963 
    bkt ++;
  }
  #line 1976 
  err_out: 
           #line 1976 
  ;
  #line 1977 
  cif_spin_unlock_irqrestore_fdb_tbl_lock_of_ofdpa(& ofdpa->fdb_tbl_lock,lock_flags);
  #line 1979 
  return err;
}

#line 1982  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static void ofdpa_fdb_cleanup(struct timer_list *t)
{
  #line 1984 
  void *__mptr;
  #line 1985 
  struct ofdpa_port *ofdpa_port;
  #line 1986 
  struct ofdpa_fdb_tbl_entry *entry;
  #line 1987 
  struct hlist_node *tmp_0;
  #line 1989 
  unsigned long expires;
  #line 1990 
  unsigned long lock_flags;
  #line 1993 
  int bkt;
  #line 1984 
  __mptr = (void *)t;
  #line 1984 
  struct ofdpa *ofdpa = ((struct ofdpa *)(__mptr + 18446744073708502880U));
  #line 1988 
  unsigned long next_timer = ofdpa->ageing_time + jiffies;
  #line 1991 
  int flags = 7;
  #line 1995 
  cif___ldv_spin_lock_fdb_tbl_lock_of_ofdpa(& ofdpa->fdb_tbl_lock);
  #line 1997 
  bkt = 0;
  #line 1997 
  entry = (struct ofdpa_fdb_tbl_entry *)0;
  #line 1997 
  while (entry == (struct ofdpa_fdb_tbl_entry *)0 && (unsigned int)bkt <= 65535U) {
    {
      #line 1997 
      struct ofdpa_fdb_tbl_entry *tmp_2;
      #line 1997 
      void *__mptr_0;
      {
        #line 1997 
        struct hlist_node *____ptr = ofdpa->fdb_tbl[bkt].first;
        #line 1997 
        if (____ptr != (struct hlist_node *)0) {
          #line 1997 
          __mptr_0 = (void *)____ptr;
          #line 1997 
          tmp_2 = ((struct ofdpa_fdb_tbl_entry *)__mptr_0);
        }
        else 
             #line 1997 
             tmp_2 = (struct ofdpa_fdb_tbl_entry *)0;
        }
      #line 1997 
      entry = tmp_2;
      #line 1997 
      while (1) {
        #line 1997 
        void *__mptr_1;
        #line 1997 
        struct ofdpa_fdb_tbl_entry *tmp_5;
        #line 1997 
        if (entry != (struct ofdpa_fdb_tbl_entry *)0) {
          #line 1997 
          tmp_0 = entry->entry.next;
          #line 1997 
          if (! (1 != 0)) 
                          #line 1997 
                          break;
        }
        else 
             #line 1997 
             break;
        {
          #line 1998 
          if (! entry->learned) 
                                #line 1999 
                                goto __Cont;
          #line 2000 
          ofdpa_port = entry->key.ofdpa_port;
          #line 2001 
          expires = entry->touched + ofdpa_port->ageing_time;
          {
            #line 2002 
            unsigned long __dummy_1;
            #line 2002 
            unsigned long __dummy2_1;
            }
          #line 2002 
          if (1 != 0) {
            {
              #line 2002 
              unsigned long __dummy_2;
              #line 2002 
              unsigned long __dummy2_2;
              }
            #line 2002 
            if (1 != 0) {
              #line 2002 
              if ((long)(jiffies - expires) >= 0L) {
                #line 2003 
                ofdpa_port_fdb_learn(ofdpa_port,flags,(u8 *)(& entry->key.addr),(unsigned short)((int)entry->key.vlan_id));
                #line 2006 
                hash_del(& entry->entry);
              }
              else 
                   #line 2002 
                   goto _LAND_0;
            }
            else 
                 #line 2002 
                 goto _LAND_0;
          }
          else {
            #line 2002 
            _LAND_0: {
                       #line 2007 
                       unsigned long __dummy;
                       #line 2007 
                       unsigned long __dummy2;
                       }
            #line 2007 
            if (1 != 0) {
              {
                #line 2007 
                unsigned long __dummy_0;
                #line 2007 
                unsigned long __dummy2_0;
                }
              #line 2007 
              if (1 != 0) 
                #line 2007 
                if ((long)(expires - next_timer) < 0L) 
                                                       #line 2008 
                                                       next_timer = expires;
            }
          }
        }
        #line 1997 
        __Cont: { /* sequence */
                  {
                    #line 1997 
                    struct hlist_node *____ptr_0 = tmp_0;
                    #line 1997 
                    if (____ptr_0 != (struct hlist_node *)0) {
                      #line 1997 
                      __mptr_1 = (void *)____ptr_0;
                      #line 1997 
                      tmp_5 = ((struct ofdpa_fdb_tbl_entry *)__mptr_1);
                    }
                    else 
                         #line 1997 
                         tmp_5 = (struct ofdpa_fdb_tbl_entry *)0;
                    }
                  #line 1997 
                  entry = tmp_5;
                }
      }
    }
    #line 1997 
    bkt ++;
  }
  #line 2012 
  cif_spin_unlock_irqrestore_fdb_tbl_lock_of_ofdpa(& ofdpa->fdb_tbl_lock,lock_flags);
  #line 2014 
  ;
  #line 2014 
  cif_mod_timer(& ofdpa->fdb_cleanup_timer,round_jiffies_up(next_timer));
  #line 2015 
  return;
}

#line 2017  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static int ofdpa_port_router_mac(struct ofdpa_port *ofdpa_port, int flags, __be16 vlan_id)
{
  #line 2021 
  __be16 eth_type;
  #line 2025 
  int err;
  #line 2020 
  u32 in_pport_mask = 4294967295U;
  #line 2022 
  u8 *dst_mac_mask = (u8 *)(& ff_mac);
  #line 2023 
  __be16 vlan_id_mask = (unsigned short)65535U;
  #line 2024 
  bool copy_to_cpu = (_Bool)0;
  #line 2027 
  if ((unsigned int)__builtin_bswap16((unsigned short)((int)vlan_id)) == 0U) 
    #line 2028 
    vlan_id = ofdpa_port->internal_vlan_id;
  #line 2030 
  eth_type = (unsigned short)8U;
  #line 2031 
  err = ofdpa_flow_tbl_term_mac(ofdpa_port,ofdpa_port->pport,in_pport_mask,(unsigned short)((int)eth_type),(ofdpa_port->dev)->dev_addr,dst_mac_mask,(unsigned short)((int)vlan_id),(unsigned short)((int)vlan_id_mask),(_Bool)((bool)((int)copy_to_cpu) != 0),flags);
  #line 2036 
  if (err != 0) 
                #line 2037 
                return err;
  #line 2039 
  eth_type = (unsigned short)56710U;
  #line 2040 
  err = ofdpa_flow_tbl_term_mac(ofdpa_port,ofdpa_port->pport,in_pport_mask,(unsigned short)((int)eth_type),(ofdpa_port->dev)->dev_addr,dst_mac_mask,(unsigned short)((int)vlan_id),(unsigned short)((int)vlan_id_mask),(_Bool)((bool)((int)copy_to_cpu) != 0),flags);
  #line 2046 
  return err;
}

#line 2049  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static int ofdpa_port_fwding(struct ofdpa_port *ofdpa_port, int flags)
{
  #line 2051 
  bool pop_vlan;
  #line 2052 
  u32 out_pport;
  #line 2053 
  __be16 vlan_id;
  #line 2054 
  u16 vid;
  #line 2055 
  int err;
  #line 2064 
  if ((unsigned int)ofdpa_port->stp_state + 4294967294U > 1U) 
                                                              #line 2066 
                                                              flags |= 1;
  #line 2068 
  out_pport = ofdpa_port->pport;
  #line 2069 
  vid = (unsigned short)1U;
  #line 2069 
  while ((unsigned int)vid <= 4095U) {
    {
      #line 2070 
      if (! test_bit((long)vid,(unsigned long *)(& ofdpa_port->vlan_bitmap))) 
        #line 2071 
        goto __Cont;
      #line 2072 
      vlan_id = __builtin_bswap16((unsigned short)((int)vid));
      #line 2073 
      pop_vlan = ofdpa_vlan_id_is_internal((unsigned short)((int)vlan_id));
      #line 2074 
      err = ofdpa_group_l2_interface(ofdpa_port,flags,(unsigned short)((int)vlan_id),out_pport,(int)pop_vlan);
      #line 2076 
      if (err != 0) {
        #line 2077 
        netdev_err(ofdpa_port->dev,(char *)"Error (%d) port VLAN l2 group for pport %d\n",err,out_pport);
        #line 2079 
        return err;
      }
    }
    #line 2069 
    __Cont: 
            #line 2069 
    vid = (u16)((int)vid + 1);
  }
  #line 2083 
  return 0;
}

#line 2086  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static int ofdpa_port_stp_update(struct ofdpa_port *ofdpa_port, int flags, u8 state)
{
  #line 2090 
  bool prev_ctrls[6U];
  #line 2091 
  u8 prev_state;
  #line 2092 
  int err;
  #line 2093 
  int i;
  #line 2089 
  bool want[6U] = {(_Bool)0};
  #line 2095 
  memcpy((void *)(& prev_ctrls),(void *)(& ofdpa_port->ctrls),6UL);
  #line 2096 
  prev_state = (unsigned char)ofdpa_port->stp_state;
  #line 2098 
  if (ofdpa_port->stp_state == (int)state) 
                                           #line 2099 
                                           return 0;
  #line 2101 
  ofdpa_port->stp_state = (int)state;
  #line 2103 
  switch ((int)state) {
    #line 2104 
    case 0: 
            #line 2104 
    ;
    #line 2106 
    break;
    #line 2107 
    case 1: 
            #line 2107 
    ;
    #line 2108 
    case 4: 
            #line 2108 
    ;
    #line 2109 
    want[0] = (_Bool)1;
    #line 2110 
    break;
    #line 2111 
    case 2: 
            #line 2111 
    ;
    #line 2112 
    case 3: 
            #line 2112 
    ;
    #line 2113 
    if (! ofdpa_port_is_ovsed(ofdpa_port)) 
                                           #line 2114 
                                           want[0] = (_Bool)1;
    #line 2115 
    want[2] = (_Bool)1;
    #line 2116 
    want[3] = (_Bool)1;
    #line 2117 
    if ((int)ofdpa_port_is_bridged(ofdpa_port) != 0) 
                                                     #line 2118 
                                                     want[4] = (_Bool)1;
    else {
      #line 2119 
      if ((int)ofdpa_port_is_ovsed(ofdpa_port) != 0) 
                                                     #line 2120 
                                                     want[5] = (_Bool)1; else 
                                                                    #line 2122 
                                                                    want[1] = (_Bool)1;
    }
    #line 2123 
    break;
  }
  #line 2126 
  i = 0;
  #line 2126 
  while (i <= 5) {
    #line 2127 
    if ((int)want[i] != (int)ofdpa_port->ctrls[i]) {
      #line 2128 
      int ctrl_flags = ((int)want[i] == 0) | flags;
      #line 2130 
      err = ofdpa_port_ctrl(ofdpa_port,ctrl_flags,& ofdpa_ctrls[i]);
      #line 2132 
      if (err != 0) 
                    #line 2133 
                    goto err_port_ctrl;
      #line 2134 
      ofdpa_port->ctrls[i] = want[i];
    }
    #line 2126 
    i ++;
  }
  #line 2138 
  err = ofdpa_port_fdb_flush(ofdpa_port,flags);
  #line 2139 
  if (err != 0) 
                #line 2140 
                goto err_fdb_flush;
  #line 2142 
  err = ofdpa_port_fwding(ofdpa_port,flags);
  #line 2143 
  if (err != 0) 
                #line 2144 
                goto err_port_fwding;
  #line 2146 
  return 0;
  #line 2148 
  err_port_ctrl: 
                 #line 2148 
  ;
  #line 2149 
  err_fdb_flush: 
                 #line 2149 
  ;
  #line 2150 
  err_port_fwding: 
                   #line 2150 
  ;
  #line 2151 
  memcpy((void *)(& ofdpa_port->ctrls),(void *)(& prev_ctrls),6UL);
  #line 2152 
  ofdpa_port->stp_state = (int)prev_state;
  #line 2153 
  return err;
}

#line 2156  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static int ofdpa_port_fwd_enable(struct ofdpa_port *ofdpa_port, int flags)
{
  #line 2158 
  if ((int)ofdpa_port_is_bridged(ofdpa_port) != 0) 
                                                   #line 2160 
                                                   return 0;
  #line 2163 
  return ofdpa_port_stp_update(ofdpa_port,flags,(unsigned char)3);
}

#line 2167  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static int ofdpa_port_fwd_disable(struct ofdpa_port *ofdpa_port, int flags)
{
  #line 2169 
  if ((int)ofdpa_port_is_bridged(ofdpa_port) != 0) 
                                                   #line 2171 
                                                   return 0;
  #line 2174 
  return ofdpa_port_stp_update(ofdpa_port,flags,(unsigned char)0);
}

#line 2178  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static int ofdpa_port_vlan_add(struct ofdpa_port *ofdpa_port, u16 vid, u16 flags)
{
  #line 2181 
  int err;
  #line 2185 
  err = ofdpa_port_vlan(ofdpa_port,0,(unsigned short)((int)vid));
  #line 2186 
  if (err != 0) 
                #line 2187 
                return err;
  #line 2189 
  ;
  #line 2189 
  err = ofdpa_port_router_mac(ofdpa_port,0,(unsigned short)((int)__builtin_bswap16((unsigned short)((int)vid))));
  #line 2190 
  if (err != 0) 
                #line 2191 
                ofdpa_port_vlan(ofdpa_port,1,(unsigned short)((int)vid));
  #line 2194 
  return err;
}

#line 2197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static int ofdpa_port_vlan_del(struct ofdpa_port *ofdpa_port, u16 vid, u16 flags)
{
  #line 2200 
  int err;
  #line 2202 
  ;
  #line 2202 
  err = ofdpa_port_router_mac(ofdpa_port,1,(unsigned short)((int)__builtin_bswap16((unsigned short)((int)vid))));
  #line 2204 
  if (err != 0) 
                #line 2205 
                return err;
  #line 2207 
  return ofdpa_port_vlan(ofdpa_port,1,(unsigned short)((int)vid));
}

#line 2212  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static struct ofdpa_internal_vlan_tbl_entry *ofdpa_internal_vlan_tbl_find(struct ofdpa *ofdpa, int ifindex)
{
  #line 2216 
  void *__mptr;
  #line 2216 
  struct ofdpa_internal_vlan_tbl_entry *tmp_1;
  #line 2214 
  struct ofdpa_internal_vlan_tbl_entry *found;
  {
    #line 2216 
    struct hlist_node *____ptr = ofdpa->internal_vlan_tbl[hash_32_generic((unsigned int)ifindex,8U)].first;
    #line 2216 
    if (____ptr != (struct hlist_node *)0) {
      #line 2216 
      __mptr = (void *)____ptr;
      #line 2216 
      tmp_1 = ((struct ofdpa_internal_vlan_tbl_entry *)__mptr);
    }
    else 
         #line 2216 
         tmp_1 = (struct ofdpa_internal_vlan_tbl_entry *)0;
    }
  #line 2216 
  found = tmp_1;
  #line 2216 
  while (found != (struct ofdpa_internal_vlan_tbl_entry *)0) {
    #line 2216 
    struct ofdpa_internal_vlan_tbl_entry *tmp_4;
    #line 2216 
    void *__mptr_0;
    #line 2218 
    if (found->ifindex == ifindex) 
                                   #line 2219 
                                   return found;
    {
      #line 2216 
      struct hlist_node *____ptr_0 = found->entry.next;
      #line 2216 
      if (____ptr_0 != (struct hlist_node *)0) {
        #line 2216 
        __mptr_0 = (void *)____ptr_0;
        #line 2216 
        tmp_4 = ((struct ofdpa_internal_vlan_tbl_entry *)__mptr_0);
      }
      else 
           #line 2216 
           tmp_4 = (struct ofdpa_internal_vlan_tbl_entry *)0;
      }
    #line 2216 
    found = tmp_4;
  }
  #line 2222 
  return (struct ofdpa_internal_vlan_tbl_entry *)0;
}

#line 2225  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static __be16 ofdpa_port_internal_vlan_id_get(struct ofdpa_port *ofdpa_port, int ifindex)
{
  #line 2229 
  struct ofdpa_internal_vlan_tbl_entry *entry;
  #line 2230 
  struct ofdpa_internal_vlan_tbl_entry *found;
  #line 2231 
  unsigned long lock_flags;
  #line 2232 
  int i;
  #line 2228 
  struct ofdpa *ofdpa = ofdpa_port->ofdpa;
  #line 2234 
  entry = (struct ofdpa_internal_vlan_tbl_entry *)kzalloc(32UL,3264U);
  #line 2235 
  if (entry == (struct ofdpa_internal_vlan_tbl_entry *)0) 
                                                          #line 2236 
                                                          return (unsigned short)0U;
  #line 2238 
  entry->ifindex = ifindex;
  #line 2240 
  cif___ldv_spin_lock_internal_vlan_tbl_lock_of_ofdpa(& ofdpa->internal_vlan_tbl_lock);
  #line 2242 
  found = ofdpa_internal_vlan_tbl_find(ofdpa,ifindex);
  #line 2243 
  if (found != (struct ofdpa_internal_vlan_tbl_entry *)0) {
    #line 2244 
    kfree((void *)entry);
    #line 2245 
    goto found;
  }
  #line 2248 
  found = entry;
  #line 2249 
  ;
  #line 2249 
  ;
  #line 2249 
  hlist_add_head(& found->entry,& ofdpa->internal_vlan_tbl[hash_32_generic((unsigned int)found->ifindex,8U)]);
  #line 2251 
  i = 0;
  #line 2251 
  while (i <= 254) {
    {
      #line 2252 
      if ((int)test_and_set_bit((long)i,
                         (unsigned long *)(& ofdpa->internal_vlan_bitmap)) != 0) 
        #line 2253 
        goto __Cont;
      #line 2254 
      found->vlan_id = __builtin_bswap16((unsigned short)((int)((unsigned int)((unsigned short)i) + 3840U)));
      #line 2255 
      goto found;
    }
    #line 2251 
    __Cont: 
            #line 2251 
    i ++;
  }
  #line 2258 
  netdev_err(ofdpa_port->dev,(char *)"Out of internal VLAN IDs\n");
  #line 2260 
  found: 
         #line 2260 
  ;
  #line 2261 
  (found->ref_count) ++;
  #line 2262 
  cif_spin_unlock_irqrestore_internal_vlan_tbl_lock_of_ofdpa(& ofdpa->internal_vlan_tbl_lock,lock_flags);
  #line 2264 
  return found->vlan_id;
}

#line 2267  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static int ofdpa_port_fib_ipv4(struct ofdpa_port *ofdpa_port, __be32 dst, int dst_len, struct fib_info *fi, u32 tb_id, int flags)
{
  #line 2271 
  struct fib_nh *nh;
  #line 2278 
  u32 group_id;
  #line 2279 
  bool nh_on_port;
  #line 2280 
  bool has_gw;
  #line 2281 
  u32 index;
  #line 2282 
  int err;
  #line 2272 
  __be16 eth_type = (unsigned short)8U;
  #line 2273 
  __be32 dst_mask = inet_make_mask(dst_len);
  #line 2274 
  __be16 internal_vlan_id = ofdpa_port->internal_vlan_id;
  #line 2275 
  u32 priority = fi->fib_priority;
  #line 2276 
  enum rocker_of_dpa_table_id goto_tbl = ROCKER_OF_DPA_TABLE_ID_ACL_POLICY;
  #line 2286 
  nh = fib_info_nh(fi,0);
  #line 2287 
  nh_on_port = (_Bool)(nh->nh_common.nhc_dev == ofdpa_port->dev);
  #line 2288 
  has_gw = (_Bool)(nh->nh_common.nhc_gw.ipv4 != 0U);
  #line 2290 
  if ((int)has_gw != 0 && (int)nh_on_port != 0) {
    #line 2291 
    err = ofdpa_port_ipv4_nh(ofdpa_port,flags,nh->nh_common.nhc_gw.ipv4,& index);
    #line 2293 
    if (err != 0) 
                  #line 2294 
                  return err;
    #line 2296 
    group_id = (index & 268435455U) | 536870912U;
  }
  else {
    #line 2299 
    group_id = (unsigned int)((int)__builtin_bswap16((unsigned short)((int)internal_vlan_id)) << 16) & 268369920U;
  }
  #line 2302 
  err = ofdpa_flow_tbl_ucast4_routing(ofdpa_port,(unsigned short)((int)eth_type),dst,dst_mask,priority,goto_tbl,group_id,fi,flags);
  #line 2305 
  if (err != 0) 
                #line 2306 
                netdev_err(ofdpa_port->dev,(char *)"Error (%d) IPv4 route %pI4\n",err,& dst);
  #line 2309 
  return err;
}

#line 2313  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static void ofdpa_port_internal_vlan_id_put(struct ofdpa_port *ofdpa_port, int ifindex)
{
  #line 2317 
  struct ofdpa_internal_vlan_tbl_entry *found;
  #line 2318 
  unsigned long lock_flags;
  #line 2319 
  unsigned long bit;
  #line 2316 
  struct ofdpa *ofdpa = ofdpa_port->ofdpa;
  #line 2321 
  cif___ldv_spin_lock_internal_vlan_tbl_lock_of_ofdpa(& ofdpa->internal_vlan_tbl_lock);
  #line 2323 
  found = ofdpa_internal_vlan_tbl_find(ofdpa,ifindex);
  #line 2324 
  if (found == (struct ofdpa_internal_vlan_tbl_entry *)0) {
    #line 2325 
    netdev_err(ofdpa_port->dev,(char *)"ifindex (%d) not found in internal VLAN tbl\n",ifindex);
    #line 2328 
    goto not_found;
  }
  #line 2331 
  (found->ref_count) --;
  #line 2331 
  if (found->ref_count == 0U) {
    #line 2332 
    bit = (unsigned long)((int)__builtin_bswap16((unsigned short)((int)found->vlan_id)) + -3840);
    #line 2333 
    cif_clear_bit((long)bit,(unsigned long *)(& ofdpa->internal_vlan_bitmap));
    #line 2334 
    hash_del(& found->entry);
    #line 2335 
    kfree((void *)found);
  }
  #line 2338 
  not_found: 
             #line 2338 
  ;
  #line 2339 
  cif_spin_unlock_irqrestore_internal_vlan_tbl_lock_of_ofdpa(& ofdpa->internal_vlan_tbl_lock,lock_flags);
  #line 2340 
  return;
}

#line 2346  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static int ofdpa_init(struct rocker *rocker)
{
  #line 2348 
  struct ofdpa *ofdpa = (struct ofdpa *)rocker->wpriv;
  #line 2350 
  ofdpa->rocker = rocker;
  #line 2352 
  __hash_init((struct hlist_head *)(& ofdpa->flow_tbl),65536U);
  #line 2353 
  spinlock_check(& ofdpa->flow_tbl_lock);
  {
    #line 2353 
    struct lock_class_key __key;
    #line 2353 
    __raw_spin_lock_init(& ofdpa->flow_tbl_lock.__anonCompField_spinlock_25.rlock,(char *)"&(&ofdpa->flow_tbl_lock)->rlock",& __key);
  }
  #line 2355 
  __hash_init((struct hlist_head *)(& ofdpa->group_tbl),65536U);
  #line 2356 
  spinlock_check(& ofdpa->group_tbl_lock);
  {
    #line 2356 
    struct lock_class_key __key_0;
    #line 2356 
    __raw_spin_lock_init(& ofdpa->group_tbl_lock.__anonCompField_spinlock_25.rlock,(char *)"&(&ofdpa->group_tbl_lock)->rlock",& __key_0);
  }
  #line 2358 
  __hash_init((struct hlist_head *)(& ofdpa->fdb_tbl),65536U);
  #line 2359 
  spinlock_check(& ofdpa->fdb_tbl_lock);
  {
    #line 2359 
    struct lock_class_key __key_1;
    #line 2359 
    __raw_spin_lock_init(& ofdpa->fdb_tbl_lock.__anonCompField_spinlock_25.rlock,(char *)"&(&ofdpa->fdb_tbl_lock)->rlock",& __key_1);
  }
  #line 2361 
  __hash_init((struct hlist_head *)(& ofdpa->internal_vlan_tbl),256U);
  #line 2362 
  spinlock_check(& ofdpa->internal_vlan_tbl_lock);
  {
    #line 2362 
    struct lock_class_key __key_2;
    #line 2362 
    __raw_spin_lock_init(& ofdpa->internal_vlan_tbl_lock.__anonCompField_spinlock_25.rlock,(char *)"&(&ofdpa->internal_vlan_tbl_lock)->rlock",& __key_2);
  }
  #line 2364 
  __hash_init((struct hlist_head *)(& ofdpa->neigh_tbl),65536U);
  #line 2365 
  spinlock_check(& ofdpa->neigh_tbl_lock);
  {
    #line 2365 
    struct lock_class_key __key_3;
    #line 2365 
    __raw_spin_lock_init(& ofdpa->neigh_tbl_lock.__anonCompField_spinlock_25.rlock,(char *)"&(&ofdpa->neigh_tbl_lock)->rlock",& __key_3);
  }
  {
    #line 2367 
    struct lock_class_key __key_4;
    #line 2367 
    init_timer_key(& ofdpa->fdb_cleanup_timer,& ofdpa_fdb_cleanup,0U,(char *)"(&ofdpa->fdb_cleanup_timer)",& __key_4);
  }
  #line 2368 
  cif_mod_timer(& ofdpa->fdb_cleanup_timer,jiffies);
  #line 2370 
  ofdpa->ageing_time = 75000UL;
  #line 2372 
  return 0;
}

#line 2375  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static void ofdpa_fini(struct rocker *rocker)
{
  #line 2379 
  unsigned long flags;
  #line 2380 
  struct ofdpa_flow_tbl_entry *flow_entry;
  #line 2381 
  struct ofdpa_group_tbl_entry *group_entry;
  #line 2382 
  struct ofdpa_fdb_tbl_entry *fdb_entry;
  #line 2383 
  struct ofdpa_internal_vlan_tbl_entry *internal_vlan_entry;
  #line 2384 
  struct ofdpa_neigh_tbl_entry *neigh_entry;
  #line 2385 
  struct hlist_node *tmp;
  #line 2386 
  int bkt;
  #line 2377 
  struct ofdpa *ofdpa = (struct ofdpa *)rocker->wpriv;
  #line 2388 
  cif_del_timer_sync(& ofdpa->fdb_cleanup_timer);
  #line 2389 
  flush_workqueue(rocker->rocker_owq);
  #line 2391 
  cif___ldv_spin_lock_flow_tbl_lock_of_ofdpa(& ofdpa->flow_tbl_lock);
  #line 2392 
  bkt = 0;
  #line 2392 
  flow_entry = (struct ofdpa_flow_tbl_entry *)0;
  #line 2392 
  while (flow_entry == (struct ofdpa_flow_tbl_entry *)0 && (unsigned int)bkt <= 65535U) {
    {
      #line 2392 
      void *__mptr;
      #line 2392 
      struct ofdpa_flow_tbl_entry *tmp_1;
      {
        #line 2392 
        struct hlist_node *____ptr = ofdpa->flow_tbl[bkt].first;
        #line 2392 
        if (____ptr != (struct hlist_node *)0) {
          #line 2392 
          __mptr = (void *)____ptr;
          #line 2392 
          tmp_1 = ((struct ofdpa_flow_tbl_entry *)__mptr);
        }
        else 
             #line 2392 
             tmp_1 = (struct ofdpa_flow_tbl_entry *)0;
        }
      #line 2392 
      flow_entry = tmp_1;
      #line 2392 
      while (1) {
        #line 2392 
        void *__mptr_0;
        #line 2392 
        struct ofdpa_flow_tbl_entry *tmp_4;
        #line 2392 
        if (flow_entry != (struct ofdpa_flow_tbl_entry *)0) {
          #line 2392 
          tmp = flow_entry->entry.next;
          #line 2392 
          if (! (1 != 0)) 
                          #line 2392 
                          break;
        }
        else 
             #line 2392 
             break;
        #line 2393 
        hash_del(& flow_entry->entry);
        {
          #line 2392 
          struct hlist_node *____ptr_0 = tmp;
          #line 2392 
          if (____ptr_0 != (struct hlist_node *)0) {
            #line 2392 
            __mptr_0 = (void *)____ptr_0;
            #line 2392 
            tmp_4 = ((struct ofdpa_flow_tbl_entry *)__mptr_0);
          }
          else 
               #line 2392 
               tmp_4 = (struct ofdpa_flow_tbl_entry *)0;
          }
        #line 2392 
        flow_entry = tmp_4;
      }
    }
    #line 2392 
    bkt ++;
  }
  #line 2394 
  cif_spin_unlock_irqrestore_flow_tbl_lock_of_ofdpa(& ofdpa->flow_tbl_lock,flags);
  #line 2396 
  cif___ldv_spin_lock_group_tbl_lock_of_ofdpa(& ofdpa->group_tbl_lock);
  #line 2397 
  bkt = 0;
  #line 2397 
  group_entry = (struct ofdpa_group_tbl_entry *)0;
  #line 2397 
  while (group_entry == (struct ofdpa_group_tbl_entry *)0 && (unsigned int)bkt <= 65535U) {
    {
      #line 2397 
      void *__mptr_1;
      #line 2397 
      struct ofdpa_group_tbl_entry *tmp_7;
      {
        #line 2397 
        struct hlist_node *____ptr_1 = ofdpa->group_tbl[bkt].first;
        #line 2397 
        if (____ptr_1 != (struct hlist_node *)0) {
          #line 2397 
          __mptr_1 = (void *)____ptr_1;
          #line 2397 
          tmp_7 = ((struct ofdpa_group_tbl_entry *)__mptr_1);
        }
        else 
             #line 2397 
             tmp_7 = (struct ofdpa_group_tbl_entry *)0;
        }
      #line 2397 
      group_entry = tmp_7;
      #line 2397 
      while (1) {
        #line 2397 
        struct ofdpa_group_tbl_entry *tmp_10;
        #line 2397 
        void *__mptr_2;
        #line 2397 
        if (group_entry != (struct ofdpa_group_tbl_entry *)0) {
          #line 2397 
          tmp = group_entry->entry.next;
          #line 2397 
          if (! (1 != 0)) 
                          #line 2397 
                          break;
        }
        else 
             #line 2397 
             break;
        #line 2398 
        hash_del(& group_entry->entry);
        {
          #line 2397 
          struct hlist_node *____ptr_2 = tmp;
          #line 2397 
          if (____ptr_2 != (struct hlist_node *)0) {
            #line 2397 
            __mptr_2 = (void *)____ptr_2;
            #line 2397 
            tmp_10 = ((struct ofdpa_group_tbl_entry *)__mptr_2);
          }
          else 
               #line 2397 
               tmp_10 = (struct ofdpa_group_tbl_entry *)0;
          }
        #line 2397 
        group_entry = tmp_10;
      }
    }
    #line 2397 
    bkt ++;
  }
  #line 2399 
  cif_spin_unlock_irqrestore_group_tbl_lock_of_ofdpa(& ofdpa->group_tbl_lock,flags);
  #line 2401 
  cif___ldv_spin_lock_fdb_tbl_lock_of_ofdpa(& ofdpa->fdb_tbl_lock);
  #line 2402 
  bkt = 0;
  #line 2402 
  fdb_entry = (struct ofdpa_fdb_tbl_entry *)0;
  #line 2402 
  while (fdb_entry == (struct ofdpa_fdb_tbl_entry *)0 && (unsigned int)bkt <= 65535U) {
    {
      #line 2402 
      void *__mptr_3;
      #line 2402 
      struct ofdpa_fdb_tbl_entry *tmp_13;
      {
        #line 2402 
        struct hlist_node *____ptr_3 = ofdpa->fdb_tbl[bkt].first;
        #line 2402 
        if (____ptr_3 != (struct hlist_node *)0) {
          #line 2402 
          __mptr_3 = (void *)____ptr_3;
          #line 2402 
          tmp_13 = ((struct ofdpa_fdb_tbl_entry *)__mptr_3);
        }
        else 
             #line 2402 
             tmp_13 = (struct ofdpa_fdb_tbl_entry *)0;
        }
      #line 2402 
      fdb_entry = tmp_13;
      #line 2402 
      while (1) {
        #line 2402 
        struct ofdpa_fdb_tbl_entry *tmp_16;
        #line 2402 
        void *__mptr_4;
        #line 2402 
        if (fdb_entry != (struct ofdpa_fdb_tbl_entry *)0) {
          #line 2402 
          tmp = fdb_entry->entry.next;
          #line 2402 
          if (! (1 != 0)) 
                          #line 2402 
                          break;
        }
        else 
             #line 2402 
             break;
        #line 2403 
        hash_del(& fdb_entry->entry);
        {
          #line 2402 
          struct hlist_node *____ptr_4 = tmp;
          #line 2402 
          if (____ptr_4 != (struct hlist_node *)0) {
            #line 2402 
            __mptr_4 = (void *)____ptr_4;
            #line 2402 
            tmp_16 = ((struct ofdpa_fdb_tbl_entry *)__mptr_4);
          }
          else 
               #line 2402 
               tmp_16 = (struct ofdpa_fdb_tbl_entry *)0;
          }
        #line 2402 
        fdb_entry = tmp_16;
      }
    }
    #line 2402 
    bkt ++;
  }
  #line 2404 
  cif_spin_unlock_irqrestore_fdb_tbl_lock_of_ofdpa(& ofdpa->fdb_tbl_lock,flags);
  #line 2406 
  cif___ldv_spin_lock_internal_vlan_tbl_lock_of_ofdpa(& ofdpa->internal_vlan_tbl_lock);
  #line 2407 
  bkt = 0;
  #line 2407 
  internal_vlan_entry = (struct ofdpa_internal_vlan_tbl_entry *)0;
  #line 2407 
  while (internal_vlan_entry == (struct ofdpa_internal_vlan_tbl_entry *)0 && (unsigned int)bkt <= 255U) {
    {
      #line 2407 
      void *__mptr_5;
      #line 2407 
      struct ofdpa_internal_vlan_tbl_entry *tmp_19;
      {
        #line 2407 
        struct hlist_node *____ptr_5 = ofdpa->internal_vlan_tbl[bkt].first;
        #line 2407 
        if (____ptr_5 != (struct hlist_node *)0) {
          #line 2407 
          __mptr_5 = (void *)____ptr_5;
          #line 2407 
          tmp_19 = ((struct ofdpa_internal_vlan_tbl_entry *)__mptr_5);
        }
        else 
             #line 2407 
             tmp_19 = (struct ofdpa_internal_vlan_tbl_entry *)0;
        }
      #line 2407 
      internal_vlan_entry = tmp_19;
      #line 2407 
      while (1) {
        #line 2407 
        void *__mptr_6;
        #line 2407 
        struct ofdpa_internal_vlan_tbl_entry *tmp_22;
        #line 2407 
        if (internal_vlan_entry != (struct ofdpa_internal_vlan_tbl_entry *)0) {
          #line 2407 
          tmp = internal_vlan_entry->entry.next;
          #line 2407 
          if (! (1 != 0)) 
                          #line 2407 
                          break;
        }
        else 
             #line 2407 
             break;
        #line 2409 
        hash_del(& internal_vlan_entry->entry);
        {
          #line 2407 
          struct hlist_node *____ptr_6 = tmp;
          #line 2407 
          if (____ptr_6 != (struct hlist_node *)0) {
            #line 2407 
            __mptr_6 = (void *)____ptr_6;
            #line 2407 
            tmp_22 = ((struct ofdpa_internal_vlan_tbl_entry *)__mptr_6);
          }
          else 
               #line 2407 
               tmp_22 = (struct ofdpa_internal_vlan_tbl_entry *)0;
          }
        #line 2407 
        internal_vlan_entry = tmp_22;
      }
    }
    #line 2407 
    bkt ++;
  }
  #line 2410 
  cif_spin_unlock_irqrestore_internal_vlan_tbl_lock_of_ofdpa(& ofdpa->internal_vlan_tbl_lock,flags);
  #line 2412 
  cif___ldv_spin_lock_neigh_tbl_lock_of_ofdpa(& ofdpa->neigh_tbl_lock);
  #line 2413 
  bkt = 0;
  #line 2413 
  neigh_entry = (struct ofdpa_neigh_tbl_entry *)0;
  #line 2413 
  while (neigh_entry == (struct ofdpa_neigh_tbl_entry *)0 && (unsigned int)bkt <= 65535U) {
    {
      #line 2413 
      void *__mptr_7;
      #line 2413 
      struct ofdpa_neigh_tbl_entry *tmp_25;
      {
        #line 2413 
        struct hlist_node *____ptr_7 = ofdpa->neigh_tbl[bkt].first;
        #line 2413 
        if (____ptr_7 != (struct hlist_node *)0) {
          #line 2413 
          __mptr_7 = (void *)____ptr_7;
          #line 2413 
          tmp_25 = ((struct ofdpa_neigh_tbl_entry *)__mptr_7);
        }
        else 
             #line 2413 
             tmp_25 = (struct ofdpa_neigh_tbl_entry *)0;
        }
      #line 2413 
      neigh_entry = tmp_25;
      #line 2413 
      while (1) {
        #line 2413 
        void *__mptr_8;
        #line 2413 
        struct ofdpa_neigh_tbl_entry *tmp_28;
        #line 2413 
        if (neigh_entry != (struct ofdpa_neigh_tbl_entry *)0) {
          #line 2413 
          tmp = neigh_entry->entry.next;
          #line 2413 
          if (! (1 != 0)) 
                          #line 2413 
                          break;
        }
        else 
             #line 2413 
             break;
        #line 2414 
        hash_del(& neigh_entry->entry);
        {
          #line 2413 
          struct hlist_node *____ptr_8 = tmp;
          #line 2413 
          if (____ptr_8 != (struct hlist_node *)0) {
            #line 2413 
            __mptr_8 = (void *)____ptr_8;
            #line 2413 
            tmp_28 = ((struct ofdpa_neigh_tbl_entry *)__mptr_8);
          }
          else 
               #line 2413 
               tmp_28 = (struct ofdpa_neigh_tbl_entry *)0;
          }
        #line 2413 
        neigh_entry = tmp_28;
      }
    }
    #line 2413 
    bkt ++;
  }
  #line 2415 
  cif_spin_unlock_irqrestore_neigh_tbl_lock_of_ofdpa(& ofdpa->neigh_tbl_lock,flags);
  #line 2416 
  return;
}

#line 2418  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static int ofdpa_port_pre_init(struct rocker_port *rocker_port)
{
  #line 2420 
  struct ofdpa_port *ofdpa_port = (struct ofdpa_port *)rocker_port->wpriv;
  #line 2422 
  ofdpa_port->ofdpa = (struct ofdpa *)(rocker_port->rocker)->wpriv;
  #line 2423 
  ofdpa_port->rocker_port = rocker_port;
  #line 2424 
  ofdpa_port->dev = rocker_port->dev;
  #line 2425 
  ofdpa_port->pport = rocker_port->pport;
  #line 2426 
  ofdpa_port->brport_flags = 32U;
  #line 2427 
  ofdpa_port->ageing_time = 75000UL;
  #line 2428 
  return 0;
}

#line 2431  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static int ofdpa_port_init(struct rocker_port *rocker_port)
{
  #line 2434 
  int err;
  #line 2433 
  struct ofdpa_port *ofdpa_port = (struct ofdpa_port *)rocker_port->wpriv;
  #line 2436 
  rocker_port_set_learning(rocker_port,(_Bool)(((unsigned long)ofdpa_port->brport_flags & 32UL) != 0UL));
  #line 2439 
  err = ofdpa_port_ig_tbl(ofdpa_port,0);
  #line 2440 
  if (err != 0) {
    #line 2441 
    netdev_err(ofdpa_port->dev,(char *)"install ig port table failed\n");
    #line 2442 
    return err;
  }
  #line 2445 
  ofdpa_port->internal_vlan_id = ofdpa_port_internal_vlan_id_get(ofdpa_port,(ofdpa_port->dev)->ifindex);
  #line 2449 
  err = ofdpa_port_vlan_add(ofdpa_port,(unsigned short)0,(unsigned short)0);
  #line 2450 
  if (err != 0) {
    #line 2451 
    netdev_err(ofdpa_port->dev,(char *)"install untagged VLAN failed\n");
    #line 2452 
    goto err_untagged_vlan;
  }
  #line 2454 
  return 0;
  #line 2456 
  err_untagged_vlan: 
                     #line 2456 
  ;
  #line 2457 
  ofdpa_port_ig_tbl(ofdpa_port,1);
  #line 2458 
  return err;
}

#line 2461  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static void ofdpa_port_fini(struct rocker_port *rocker_port)
{
  #line 2463 
  struct ofdpa_port *ofdpa_port = (struct ofdpa_port *)rocker_port->wpriv;
  #line 2465 
  ofdpa_port_ig_tbl(ofdpa_port,1);
  #line 2466 
  return;
}

#line 2468  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static int ofdpa_port_open(struct rocker_port *rocker_port)
{
  #line 2470 
  struct ofdpa_port *ofdpa_port = (struct ofdpa_port *)rocker_port->wpriv;
  #line 2472 
  return ofdpa_port_fwd_enable(ofdpa_port,0);
}

#line 2475  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static void ofdpa_port_stop(struct rocker_port *rocker_port)
{
  #line 2477 
  struct ofdpa_port *ofdpa_port = (struct ofdpa_port *)rocker_port->wpriv;
  #line 2479 
  ofdpa_port_fwd_disable(ofdpa_port,2);
  #line 2480 
  return;
}

#line 2482  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static int ofdpa_port_attr_stp_state_set(struct rocker_port *rocker_port, u8 state)
{
  #line 2485 
  struct ofdpa_port *ofdpa_port = (struct ofdpa_port *)rocker_port->wpriv;
  #line 2487 
  return ofdpa_port_stp_update(ofdpa_port,0,(unsigned char)((int)state));
}

#line 2490  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static int ofdpa_port_attr_bridge_flags_set(struct rocker_port *rocker_port, unsigned long brport_flags, struct switchdev_trans *trans)
{
  #line 2495 
  unsigned long orig_flags;
  #line 2494 
  struct ofdpa_port *ofdpa_port = (struct ofdpa_port *)rocker_port->wpriv;
  #line 2496 
  int err = 0;
  #line 2498 
  orig_flags = (unsigned long)ofdpa_port->brport_flags;
  #line 2499 
  ofdpa_port->brport_flags = (unsigned int)brport_flags;
  #line 2500 
  if ((((unsigned long)ofdpa_port->brport_flags ^ orig_flags) & 32UL) != 0UL) {
    #line 2501 
    if (! switchdev_trans_ph_prepare(trans)) 
                                             #line 2502 
                                             err = rocker_port_set_learning(ofdpa_port->rocker_port,(_Bool)(((unsigned long)ofdpa_port->brport_flags & 32UL) != 0UL));
  }
  #line 2505 
  if ((int)switchdev_trans_ph_prepare(trans) != 0) 
                                                   #line 2506 
                                                   ofdpa_port->brport_flags = (unsigned int)orig_flags;
  #line 2508 
  return err;
}

#line 2512  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static int ofdpa_port_attr_bridge_flags_support_get(struct rocker_port *rocker_port, unsigned long *p_brport_flags_support)
{
  #line 2517 
  *p_brport_flags_support = 32UL;
  #line 2518 
  return 0;
}

#line 2522  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static int ofdpa_port_attr_bridge_ageing_time_set(struct rocker_port *rocker_port, u32 ageing_time, struct switchdev_trans *trans)
{
  #line 2526 
  struct ofdpa_port *ofdpa_port = (struct ofdpa_port *)rocker_port->wpriv;
  #line 2527 
  struct ofdpa *ofdpa = ofdpa_port->ofdpa;
  #line 2529 
  if (! switchdev_trans_ph_prepare(trans)) {
    #line 2530 
    ofdpa_port->ageing_time = clock_t_to_jiffies((unsigned long)ageing_time);
    #line 2531 
    if (ofdpa_port->ageing_time < ofdpa->ageing_time) 
                                                      #line 2532 
                                                      ofdpa->ageing_time = ofdpa_port->ageing_time;
    #line 2533 
    cif_mod_timer(& (ofdpa_port->ofdpa)->fdb_cleanup_timer,jiffies);
  }
  #line 2536 
  return 0;
}

#line 2539  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static int ofdpa_port_obj_vlan_add(struct rocker_port *rocker_port, struct switchdev_obj_port_vlan *vlan)
{
  #line 2543 
  u16 vid;
  #line 2544 
  int err;
  #line 2542 
  struct ofdpa_port *ofdpa_port = (struct ofdpa_port *)rocker_port->wpriv;
  #line 2546 
  vid = vlan->vid_begin;
  #line 2546 
  while ((int)vlan->vid_end >= (int)vid) {
    #line 2547 
    err = ofdpa_port_vlan_add(ofdpa_port,(unsigned short)((int)vid),(unsigned short)((int)vlan->flags));
    #line 2548 
    if (err != 0) 
                  #line 2549 
                  return err;
    #line 2546 
    vid = (u16)((int)vid + 1);
  }
  #line 2552 
  return 0;
}

#line 2555  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static int ofdpa_port_obj_vlan_del(struct rocker_port *rocker_port, struct switchdev_obj_port_vlan *vlan)
{
  #line 2559 
  u16 vid;
  #line 2560 
  int err;
  #line 2558 
  struct ofdpa_port *ofdpa_port = (struct ofdpa_port *)rocker_port->wpriv;
  #line 2562 
  vid = vlan->vid_begin;
  #line 2562 
  while ((int)vlan->vid_end >= (int)vid) {
    #line 2563 
    err = ofdpa_port_vlan_del(ofdpa_port,(unsigned short)((int)vid),(unsigned short)((int)vlan->flags));
    #line 2564 
    if (err != 0) 
                  #line 2565 
                  return err;
    #line 2562 
    vid = (u16)((int)vid + 1);
  }
  #line 2568 
  return 0;
}

#line 2571  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static int ofdpa_port_obj_fdb_add(struct rocker_port *rocker_port, u16 vid, unsigned char *addr)
{
  #line 2574 
  struct ofdpa_port *ofdpa_port = (struct ofdpa_port *)rocker_port->wpriv;
  #line 2575 
  __be16 vlan_id = ofdpa_port_vid_to_vlan(ofdpa_port,(unsigned short)((int)vid),(bool *)0);
  #line 2577 
  if (! ofdpa_port_is_bridged(ofdpa_port)) 
                                           #line 2578 
                                           return -22;
  #line 2580 
  return ofdpa_port_fdb(ofdpa_port,addr,(unsigned short)((int)vlan_id),0);
}

#line 2583  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static int ofdpa_port_obj_fdb_del(struct rocker_port *rocker_port, u16 vid, unsigned char *addr)
{
  #line 2586 
  struct ofdpa_port *ofdpa_port = (struct ofdpa_port *)rocker_port->wpriv;
  #line 2587 
  __be16 vlan_id = ofdpa_port_vid_to_vlan(ofdpa_port,(unsigned short)((int)vid),(bool *)0);
  #line 2588 
  int flags = 1;
  #line 2590 
  if (! ofdpa_port_is_bridged(ofdpa_port)) 
                                           #line 2591 
                                           return -22;
  #line 2593 
  return ofdpa_port_fdb(ofdpa_port,addr,(unsigned short)((int)vlan_id),flags);
}

#line 2596  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static int ofdpa_port_bridge_join(struct ofdpa_port *ofdpa_port, struct net_device *bridge)
{
  #line 2599 
  int err;
  #line 2607 
  err = ofdpa_port_vlan_del(ofdpa_port,(unsigned short)0,(unsigned short)0);
  #line 2608 
  if (err != 0) 
                #line 2609 
                return err;
  #line 2611 
  ofdpa_port_internal_vlan_id_put(ofdpa_port,(ofdpa_port->dev)->ifindex);
  #line 2613 
  ofdpa_port->internal_vlan_id = ofdpa_port_internal_vlan_id_get(ofdpa_port,bridge->ifindex);
  #line 2616 
  ofdpa_port->bridge_dev = bridge;
  #line 2618 
  return ofdpa_port_vlan_add(ofdpa_port,(unsigned short)0,(unsigned short)0);
}

#line 2621  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static int ofdpa_port_bridge_leave(struct ofdpa_port *ofdpa_port)
{
  #line 2623 
  int err;
  #line 2625 
  err = ofdpa_port_vlan_del(ofdpa_port,(unsigned short)0,(unsigned short)0);
  #line 2626 
  if (err != 0) 
                #line 2627 
                return err;
  #line 2629 
  ofdpa_port_internal_vlan_id_put(ofdpa_port,(ofdpa_port->bridge_dev)->ifindex);
  #line 2631 
  ofdpa_port->internal_vlan_id = ofdpa_port_internal_vlan_id_get(ofdpa_port,(ofdpa_port->dev)->ifindex);
  #line 2635 
  ofdpa_port->bridge_dev = (struct net_device *)0;
  #line 2637 
  err = ofdpa_port_vlan_add(ofdpa_port,(unsigned short)0,(unsigned short)0);
  #line 2638 
  if (err != 0) 
                #line 2639 
                return err;
  #line 2641 
  if (((ofdpa_port->dev)->flags & 1U) != 0U) 
                                             #line 2642 
                                             err = ofdpa_port_fwd_enable(ofdpa_port,0);
  #line 2644 
  return err;
}

#line 2647  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static int ofdpa_port_ovs_changed(struct ofdpa_port *ofdpa_port, struct net_device *master)
{
  #line 2650 
  int err;
  #line 2652 
  ofdpa_port->bridge_dev = master;
  #line 2654 
  err = ofdpa_port_fwd_disable(ofdpa_port,0);
  #line 2655 
  if (err != 0) 
                #line 2656 
                return err;
  #line 2657 
  err = ofdpa_port_fwd_enable(ofdpa_port,0);
  #line 2659 
  return err;
}

#line 2662  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static int ofdpa_port_master_linked(struct rocker_port *rocker_port, struct net_device *master)
{
  #line 2665 
  struct ofdpa_port *ofdpa_port = (struct ofdpa_port *)rocker_port->wpriv;
  #line 2666 
  int err = 0;
  #line 2668 
  if ((int)netif_is_bridge_master(master) != 0) 
                                                #line 2669 
                                                err = ofdpa_port_bridge_join(ofdpa_port,master);
  else {
    #line 2670 
    if ((int)netif_is_ovs_master(master) != 0) 
                                               #line 2671 
                                               err = ofdpa_port_ovs_changed(ofdpa_port,master);
  }
  #line 2672 
  return err;
}

#line 2675  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static int ofdpa_port_master_unlinked(struct rocker_port *rocker_port, struct net_device *master)
{
  #line 2678 
  struct ofdpa_port *ofdpa_port = (struct ofdpa_port *)rocker_port->wpriv;
  #line 2679 
  int err = 0;
  #line 2681 
  if ((int)ofdpa_port_is_bridged(ofdpa_port) != 0) 
                                                   #line 2682 
                                                   err = ofdpa_port_bridge_leave(ofdpa_port);
  else {
    #line 2683 
    if ((int)ofdpa_port_is_ovsed(ofdpa_port) != 0) 
                                                   #line 2684 
                                                   err = ofdpa_port_ovs_changed(ofdpa_port,(struct net_device *)0);
  }
  #line 2685 
  return err;
}

#line 2688  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static int ofdpa_port_neigh_update(struct rocker_port *rocker_port, struct neighbour *n)
{
  #line 2692 
  int tmp;
  #line 2691 
  struct ofdpa_port *ofdpa_port = (struct ofdpa_port *)rocker_port->wpriv;
  #line 2692 
  if (((int)n->nud_state & 222) == 0) 
                                      #line 2692 
                                      tmp = 3; else 
                                                    #line 2692 
                                                    tmp = 2;
  #line 2692 
  int flags = tmp;
  #line 2694 
  __be32 ip_addr = *((__be32 *)(& n->primary_key));
  #line 2696 
  return ofdpa_port_ipv4_neigh(ofdpa_port,flags,ip_addr,(u8 *)(& n->ha));
}

#line 2699  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static int ofdpa_port_neigh_destroy(struct rocker_port *rocker_port, struct neighbour *n)
{
  #line 2702 
  struct ofdpa_port *ofdpa_port = (struct ofdpa_port *)rocker_port->wpriv;
  #line 2703 
  int flags = 3;
  #line 2704 
  __be32 ip_addr = *((__be32 *)(& n->primary_key));
  #line 2706 
  return ofdpa_port_ipv4_neigh(ofdpa_port,flags,ip_addr,(u8 *)(& n->ha));
}

#line 2709  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static int ofdpa_port_ev_mac_vlan_seen(struct rocker_port *rocker_port, unsigned char *addr, __be16 vlan_id)
{
  #line 2713 
  struct ofdpa_port *ofdpa_port = (struct ofdpa_port *)rocker_port->wpriv;
  #line 2714 
  int flags = 6;
  #line 2716 
  if ((unsigned int)ofdpa_port->stp_state + 4294967294U > 1U) 
                                                              #line 2718 
                                                              return 0;
  #line 2720 
  return ofdpa_port_fdb(ofdpa_port,addr,(unsigned short)((int)vlan_id),flags);
}

#line 2723  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static struct ofdpa_port *ofdpa_port_dev_lower_find(struct net_device *dev, struct rocker *rocker)
{
  #line 2726 
  struct rocker_port *rocker_port;
  #line 2729 
  struct ofdpa_port *tmp;
  #line 2728 
  rocker_port = rocker_port_dev_lower_find(dev,rocker);
  #line 2729 
  if (rocker_port != (struct rocker_port *)0) 
                                              #line 2729 
                                              tmp = (struct ofdpa_port *)rocker_port->wpriv; else 
                                                                    #line 2729 
                                                                    tmp = (struct ofdpa_port *)0;
  #line 2729 
  return tmp;
}

#line 2732  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static int ofdpa_fib4_add(struct rocker *rocker, struct fib_entry_notifier_info *fen_info)
{
  #line 2736 
  struct ofdpa_port *ofdpa_port;
  #line 2737 
  struct fib_nh *nh;
  #line 2738 
  int err;
  #line 2735 
  struct ofdpa *ofdpa = (struct ofdpa *)rocker->wpriv;
  #line 2740 
  if ((int)ofdpa->fib_aborted != 0) 
                                    #line 2741 
                                    return 0;
  #line 2742 
  nh = fib_info_nh(fen_info->fi,0);
  #line 2743 
  ofdpa_port = ofdpa_port_dev_lower_find(nh->nh_common.nhc_dev,rocker);
  #line 2744 
  if (ofdpa_port == (struct ofdpa_port *)0) 
                                            #line 2745 
                                            return 0;
  #line 2746 
  ;
  #line 2746 
  ;
  #line 2746 
  ;
  #line 2746 
  ;
  #line 2746 
  err = ofdpa_port_fib_ipv4(ofdpa_port,__builtin_bswap32(fen_info->dst),fen_info->dst_len,fen_info->fi,fen_info->tb_id,0);
  #line 2749 
  if (err != 0) 
                #line 2750 
                return err;
  #line 2751 
  nh->nh_common.nhc_flags = (unsigned char)((unsigned int)nh->nh_common.nhc_flags | 8U);
  #line 2752 
  return 0;
}

#line 2755  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static int ofdpa_fib4_del(struct rocker *rocker, struct fib_entry_notifier_info *fen_info)
{
  #line 2759 
  struct ofdpa_port *ofdpa_port;
  #line 2760 
  struct fib_nh *nh;
  #line 2758 
  struct ofdpa *ofdpa = (struct ofdpa *)rocker->wpriv;
  #line 2762 
  if ((int)ofdpa->fib_aborted != 0) 
                                    #line 2763 
                                    return 0;
  #line 2764 
  nh = fib_info_nh(fen_info->fi,0);
  #line 2765 
  ofdpa_port = ofdpa_port_dev_lower_find(nh->nh_common.nhc_dev,rocker);
  #line 2766 
  if (ofdpa_port == (struct ofdpa_port *)0) 
                                            #line 2767 
                                            return 0;
  #line 2768 
  nh->nh_common.nhc_flags = (unsigned char)((unsigned int)nh->nh_common.nhc_flags & 247U);
  #line 2769 
  ;
  #line 2769 
  ;
  #line 2769 
  ;
  #line 2769 
  ;
  #line 2769 
  return ofdpa_port_fib_ipv4(ofdpa_port,__builtin_bswap32(fen_info->dst),
                            fen_info->dst_len,fen_info->fi,fen_info->tb_id,1);
}

#line 2774  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
static void ofdpa_fib4_abort(struct rocker *rocker)
{
  #line 2777 
  struct ofdpa_port *ofdpa_port;
  #line 2778 
  struct ofdpa_flow_tbl_entry *flow_entry;
  #line 2779 
  struct hlist_node *tmp;
  #line 2780 
  unsigned long flags;
  #line 2781 
  int bkt;
  #line 2776 
  struct ofdpa *ofdpa = (struct ofdpa *)rocker->wpriv;
  #line 2783 
  if ((int)ofdpa->fib_aborted != 0) 
                                    #line 2784 
                                    return;
  #line 2786 
  cif___ldv_spin_lock_flow_tbl_lock_of_ofdpa(& ofdpa->flow_tbl_lock);
  #line 2787 
  bkt = 0;
  #line 2787 
  flow_entry = (struct ofdpa_flow_tbl_entry *)0;
  #line 2787 
  while (flow_entry == (struct ofdpa_flow_tbl_entry *)0 && (unsigned int)bkt <= 65535U) {
    {
      #line 2787 
      void *__mptr;
      #line 2787 
      struct ofdpa_flow_tbl_entry *tmp_1;
      {
        #line 2787 
        struct hlist_node *____ptr = ofdpa->flow_tbl[bkt].first;
        #line 2787 
        if (____ptr != (struct hlist_node *)0) {
          #line 2787 
          __mptr = (void *)____ptr;
          #line 2787 
          tmp_1 = ((struct ofdpa_flow_tbl_entry *)__mptr);
        }
        else 
             #line 2787 
             tmp_1 = (struct ofdpa_flow_tbl_entry *)0;
        }
      #line 2787 
      flow_entry = tmp_1;
      #line 2787 
      while (1) {
        #line 2787 
        struct ofdpa_flow_tbl_entry *tmp_4;
        #line 2787 
        void *__mptr_0;
        #line 2787 
        if (flow_entry != (struct ofdpa_flow_tbl_entry *)0) {
          #line 2787 
          tmp = flow_entry->entry.next;
          #line 2787 
          if (! (1 != 0)) 
                          #line 2787 
                          break;
        }
        else 
             #line 2787 
             break;
        {
          #line 2788 
          struct fib_nh *nh;
          #line 2790 
          if (flow_entry->key.tbl_id != (unsigned int)ROCKER_OF_DPA_TABLE_ID_UNICAST_ROUTING) 
            #line 2792 
            goto __Cont;
          #line 2793 
          nh = fib_info_nh(flow_entry->fi,0);
          #line 2794 
          ofdpa_port = ofdpa_port_dev_lower_find(nh->nh_common.nhc_dev,rocker);
          #line 2795 
          if (ofdpa_port == (struct ofdpa_port *)0) 
                                                    #line 2796 
                                                    goto __Cont;
          #line 2797 
          nh->nh_common.nhc_flags = (unsigned char)((unsigned int)nh->nh_common.nhc_flags & 247U);
          #line 2798 
          ofdpa_flow_tbl_del(ofdpa_port,1,flow_entry);
        }
        #line 2787 
        __Cont: { /* sequence */
                  {
                    #line 2787 
                    struct hlist_node *____ptr_0 = tmp;
                    #line 2787 
                    if (____ptr_0 != (struct hlist_node *)0) {
                      #line 2787 
                      __mptr_0 = (void *)____ptr_0;
                      #line 2787 
                      tmp_4 = ((struct ofdpa_flow_tbl_entry *)__mptr_0);
                    }
                    else 
                         #line 2787 
                         tmp_4 = (struct ofdpa_flow_tbl_entry *)0;
                    }
                  #line 2787 
                  flow_entry = tmp_4;
                }
      }
    }
    #line 2787 
    bkt ++;
  }
  #line 2801 
  cif_spin_unlock_irqrestore_flow_tbl_lock_of_ofdpa(& ofdpa->flow_tbl_lock,flags);
  #line 2802 
  ofdpa->fib_aborted = (_Bool)1;
  #line 2803 
  return;
}

#line 2805  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_ofdpa.c"
struct rocker_world_ops rocker_ofdpa_ops = {.kind = (char *)"ofdpa", .priv_size = 2099720UL, .port_priv_size = 584UL, .init = & ofdpa_init, .fini = & ofdpa_fini, .port_pre_init = & ofdpa_port_pre_init, .port_init = & ofdpa_port_init, .port_fini = & ofdpa_port_fini, .port_open = & ofdpa_port_open, .port_stop = & ofdpa_port_stop, .port_attr_stp_state_set = & ofdpa_port_attr_stp_state_set, .port_attr_bridge_flags_set = & ofdpa_port_attr_bridge_flags_set, .port_attr_bridge_flags_support_get = & ofdpa_port_attr_bridge_flags_support_get, .port_attr_bridge_ageing_time_set = & ofdpa_port_attr_bridge_ageing_time_set, .port_obj_vlan_add = & ofdpa_port_obj_vlan_add, .port_obj_vlan_del = & ofdpa_port_obj_vlan_del, .port_obj_fdb_add = & ofdpa_port_obj_fdb_add, .port_obj_fdb_del = & ofdpa_port_obj_fdb_del, .port_master_linked = & ofdpa_port_master_linked, .port_master_unlinked = & ofdpa_port_master_unlinked, .port_neigh_update = & ofdpa_port_neigh_update, .port_neigh_destroy = & ofdpa_port_neigh_destroy, .port_ev_mac_vlan_seen = & ofdpa_port_ev_mac_vlan_seen, .fib4_add = & ofdpa_fib4_add, .fib4_del = & ofdpa_fib4_del, .fib4_abort = & ofdpa_fib4_abort};
#line 94  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_ofdpa.i.aux"
#line 94 
int emg_del_timer_sync(struct timer_list *arg0);
#line 97 
#line 97 
int emg_mod_timer(struct timer_list *arg0, unsigned long arg1);
#line 101 
#line 101 
_Bool emg_schedule_work(struct work_struct *arg0);
#line 126  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_ofdpa.i.aux"
static void cif_clear_bit(long nr, unsigned long *addr)
{
  #line 129 
  ldv_clear_bit(nr,addr);
  #line 130 
  return;
}

#line 133  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_ofdpa.i.aux"
static void INIT_LIST_HEAD(struct list_head *list)
{
  #line 136 
  ldv_init_list_head(list);
  #line 137 
  return;
}

#line 210  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_ofdpa.i.aux"
static long PTR_ERR(void *ptr)
{
  #line 213 
  return ldv_ptr_err(ptr);
}

#line 217  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_ofdpa.i.aux"
static bool IS_ERR(void *ptr)
{
  #line 220 
  return ldv_is_err(ptr);
}

#line 343  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_ofdpa.i.aux"
static void *kcalloc(size_t n, size_t size, gfp_t flags)
{
  #line 346 
  return ldv_kcalloc(n,size,flags);
}

#line 364  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_ofdpa.i.aux"
static void *kzalloc(size_t size, gfp_t flags)
{
  #line 367 
  return ldv_kzalloc(size,flags);
}

#line 691  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_ofdpa.i.aux"
static bool cif_schedule_work(struct work_struct *work)
{
  #line 695 
  return emg_schedule_work(work);
}

#line 806  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_ofdpa.i.aux"
static int cif_strcmp(char *cs, char *ct)
{
  #line 809 
  return ldv_strcmp(cs,ct);
}

#line 813  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_ofdpa.i.aux"
static void cif___ldv_spin_lock_flow_tbl_lock_of_ofdpa(spinlock_t *lock)
{
  #line 816 
  ldv_spin_model_lock((char *)"flow_tbl_lock_of_ofdpa");
  #line 818 
  __ldv_spin_lock(lock);
  #line 819 
  return;
}

#line 822  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_ofdpa.i.aux"
static void cif_spin_unlock_irqrestore_flow_tbl_lock_of_ofdpa(spinlock_t *lock, unsigned long flags)
{
  #line 825 
  ldv_spin_model_unlock((char *)"flow_tbl_lock_of_ofdpa");
  #line 827 
  spin_unlock_irqrestore(lock,flags);
  #line 828 
  return;
}

#line 831  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_ofdpa.i.aux"
static void cif___ldv_spin_lock_group_tbl_lock_of_ofdpa(spinlock_t *lock)
{
  #line 834 
  ldv_spin_model_lock((char *)"group_tbl_lock_of_ofdpa");
  #line 836 
  __ldv_spin_lock(lock);
  #line 837 
  return;
}

#line 840  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_ofdpa.i.aux"
static void cif_spin_unlock_irqrestore_group_tbl_lock_of_ofdpa(spinlock_t *lock, unsigned long flags)
{
  #line 843 
  ldv_spin_model_unlock((char *)"group_tbl_lock_of_ofdpa");
  #line 845 
  spin_unlock_irqrestore(lock,flags);
  #line 846 
  return;
}

#line 849  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_ofdpa.i.aux"
static void cif___ldv_spin_lock_neigh_tbl_lock_of_ofdpa(spinlock_t *lock)
{
  #line 852 
  ldv_spin_model_lock((char *)"neigh_tbl_lock_of_ofdpa");
  #line 854 
  __ldv_spin_lock(lock);
  #line 855 
  return;
}

#line 858  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_ofdpa.i.aux"
static void cif_spin_unlock_irqrestore_neigh_tbl_lock_of_ofdpa(spinlock_t *lock, unsigned long flags)
{
  #line 861 
  ldv_spin_model_unlock((char *)"neigh_tbl_lock_of_ofdpa");
  #line 863 
  spin_unlock_irqrestore(lock,flags);
  #line 864 
  return;
}

#line 867  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_ofdpa.i.aux"
static void cif___ldv_spin_lock_fdb_tbl_lock_of_ofdpa(spinlock_t *lock)
{
  #line 870 
  ldv_spin_model_lock((char *)"fdb_tbl_lock_of_ofdpa");
  #line 872 
  __ldv_spin_lock(lock);
  #line 873 
  return;
}

#line 876  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_ofdpa.i.aux"
static void cif_spin_unlock_irqrestore_fdb_tbl_lock_of_ofdpa(spinlock_t *lock, unsigned long flags)
{
  #line 879 
  ldv_spin_model_unlock((char *)"fdb_tbl_lock_of_ofdpa");
  #line 881 
  spin_unlock_irqrestore(lock,flags);
  #line 882 
  return;
}

#line 885  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_ofdpa.i.aux"
static int cif_mod_timer(struct timer_list *timer, unsigned long expires)
{
  #line 889 
  return emg_mod_timer(timer,expires);
}

#line 893  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_ofdpa.i.aux"
static void cif___ldv_spin_lock_internal_vlan_tbl_lock_of_ofdpa(spinlock_t *lock)
{
  #line 896 
  ldv_spin_model_lock((char *)"internal_vlan_tbl_lock_of_ofdpa");
  #line 898 
  __ldv_spin_lock(lock);
  #line 899 
  return;
}

#line 902  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_ofdpa.i.aux"
static void cif_spin_unlock_irqrestore_internal_vlan_tbl_lock_of_ofdpa(spinlock_t *lock, unsigned long flags)
{
  #line 905 
  ldv_spin_model_unlock((char *)"internal_vlan_tbl_lock_of_ofdpa");
  #line 907 
  spin_unlock_irqrestore(lock,flags);
  #line 908 
  return;
}

#line 911  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_ofdpa.i.aux"
static int cif_del_timer_sync(struct timer_list *timer)
{
  #line 915 
  return emg_del_timer_sync(timer);
}

#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/string_64.h"
#line 18 
void *memset(void *, int, size_t);
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_tlv.h"
__inline static struct rocker_tlv *rocker_tlv_next(struct rocker_tlv *tlv, int *remaining)
{
  #line 32 
  int totlen = (int)((unsigned int)tlv->len + 7U) & -8;
  #line 34 
  *remaining -= totlen;
  #line 35 
  return (struct rocker_tlv *)((char *)tlv + (unsigned long)totlen);
}

#line 38  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_tlv.h"
__inline static int rocker_tlv_ok(struct rocker_tlv *tlv, int remaining)
{
  #line 41 
  return ((remaining > 7 && (unsigned int)tlv->len > 7U) && (int)tlv->len <= remaining) != 0;
}

#line 54  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_tlv.h"
__inline static int rocker_tlv_attr_size(int payload)
{
  #line 56 
  return (int)((unsigned int)payload + 8U);
}

#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_tlv.h"
__inline static int rocker_tlv_total_size(int payload)
{
  #line 61 
  return (int)((unsigned int)rocker_tlv_attr_size(payload) + 7U) & -8;
}

#line 64  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_tlv.h"
__inline static int rocker_tlv_padlen(int payload)
{
  #line 66 
  return rocker_tlv_total_size(payload) - rocker_tlv_attr_size(payload);
}

#line 69  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_tlv.h"
__inline static int rocker_tlv_type(struct rocker_tlv *tlv)
{
  #line 71 
  return (int)tlv->type;
}

#line 74  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_tlv.h"
__inline static void *rocker_tlv_data(struct rocker_tlv *tlv)
{
  #line 76 
  return (void *)((char *)tlv + 8UL);
}

#line 109 
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_tlv.c"
void rocker_tlv_parse(struct rocker_tlv **tb, int maxtype, char *buf, int buf_len);
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_tlv.c"
void rocker_tlv_parse(struct rocker_tlv **tb, int maxtype, char *buf, int buf_len)
{
  #line 18 
  struct rocker_tlv *tlv;
  #line 20 
  int rem;
  #line 19 
  struct rocker_tlv *head = (struct rocker_tlv *)buf;
  #line 22 
  memset((void *)tb,0,(unsigned long)(maxtype + 1) * 8UL);
  #line 24 
  tlv = head;
  #line 24 
  rem = buf_len;
  #line 24 
  while (1) {
    #line 24 
    if (! (rocker_tlv_ok(tlv,rem) != 0)) 
                                         #line 24 
                                         break;
    {
      #line 25 
      u32 type = (unsigned int)rocker_tlv_type(tlv);
      #line 27 
      if (type != 0U && type <= (unsigned int)maxtype) 
                                                       #line 28 
                                                       *(tb + (unsigned long)type) = tlv;
    }
    #line 24 
    tlv = rocker_tlv_next(tlv,& rem);
  }
  #line 30 
  return;
}

#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_tlv.c"
int rocker_tlv_put(struct rocker_desc_info *desc_info, int attrtype, int attrlen, void *data)
{
  #line 37 
  struct rocker_tlv *tlv;
  #line 35 
  int tail_room = (int)(desc_info->data_size - desc_info->tlv_size);
  #line 36 
  int total_size = rocker_tlv_total_size(attrlen);
  #line 39 
  if ((long)(tail_room < total_size) != 0L) 
                                            #line 40 
                                            return -90;
  #line 42 
  tlv = rocker_tlv_start(desc_info);
  #line 43 
  desc_info->tlv_size += (unsigned long)total_size;
  #line 44 
  tlv->type = (unsigned int)attrtype;
  #line 45 
  tlv->len = (unsigned short)rocker_tlv_attr_size(attrlen);
  #line 46 
  ;
  #line 46 
  ;
  #line 46 
  memcpy(rocker_tlv_data(tlv),data,(unsigned long)attrlen);
  #line 47 
  ;
  #line 47 
  memset((void *)((char *)tlv + (unsigned long)tlv->len),0,(unsigned long)rocker_tlv_padlen(attrlen));
  #line 48 
  return 0;
}

/* compiler builtin: 
   void __builtin_unreachable(void);   */
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/export.h"
#line 16 
extern struct module __this_module;
#line 66  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/bitops.h"
__inline static void arch___set_bit(long nr, unsigned long *addr)
{
  #line 68 
  ldv_inline_asm();
  #line 69 
  return;
}

#line 366  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/bitops.h"
__inline static int fls64(__u64 x)
{
  #line 368 
  int bitpos = -1;
  #line 369 
  ldv_inline_asm();
  #line 377 
  return bitpos + 1;
}

#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/bitops/instrumented-atomic.h"
#line 245  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_main.i.aux"
static void cif_set_bit(long nr, unsigned long *addr);
#line 44  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/bitops/instrumented-atomic.h"
#line 252  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_main.i.aux"
static void cif_clear_bit_0(long nr, unsigned long *addr);
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/bitops/instrumented-non-atomic.h"
__inline static void __set_bit(long nr, unsigned long *addr)
{
  #line 27 
  kasan_check_read((void *)(addr + (unsigned long)(nr / 64L)),8U);
  #line 28 
  arch___set_bit(nr,addr);
  #line 29 
  return;
}

#line 179  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bitops.h"
__inline static unsigned int fls_long(unsigned long l)
{
  #line 183 
  return (unsigned int)fls64((unsigned long long)l);
}

#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/log2.h"
__inline static int __ilog2_u64(u64 n)
{
  #line 32 
  return fls64(n) + -1;
}

#line 55  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/log2.h"
__inline static unsigned long __roundup_pow_of_two(unsigned long n)
{
  #line 57 
  return 1UL << fls_long(n + 18446744073709551615UL);
}

#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/jump_label.h"
__inline static bool arch_static_branch(struct static_key *key, bool branch)
{
  #line 27 
  ldv_inline_asm();
  #line 28 
  ldv_inline_asm();
  #line 34 
  return (_Bool)0;
  #line 35 
  l_yes: 
         #line 35 
  ;
  #line 36 
  return (_Bool)1;
}

#line 70  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dynamic_debug.h"
#line 70 
void __dynamic_netdev_dbg(struct _ddebug *, struct net_device *, char * , ...);
#line 204  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernel.h"
#line 204 
void __might_sleep(char *, int, int);
#line 26  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
#line 259  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_main.i.aux"
static void INIT_LIST_HEAD_0(struct list_head *list);
#line 88  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/percpu.h"
#line 88 
void __bad_percpu_size(void);
#line 309  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/percpu-defs.h"
#line 309 
void __bad_size_call_parameter(void);
#line 89  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/bug.h"
#line 89 
void __warn_printk(char * , ...);
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/page_64.h"
#line 14 
extern unsigned long page_offset_base;
#line 15 
#line 15 
extern unsigned long vmalloc_base;
#line 16 
#line 16 
extern unsigned long vmemmap_base;
#line 29 
#line 29 
unsigned long __phys_addr(unsigned long);
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/string.h"
#line 29 
size_t strlcpy(char *, char *, size_t);
#line 230  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bitmap.h"
#line 322  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_main.i.aux"
static void cif_bitmap_zero(unsigned long *dst, unsigned int nbits);
#line 182  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/atomic.h"
__inline static int arch_atomic_fetch_add(int i, atomic_t *v)
{
  #line 184 
  int __ret;
  #line 184 
  __ret = i;
  #line 184 
  switch (4UL) {
    #line 184 
    case (unsigned long)1: 
                           #line 184 
    ;
    #line 185 
    ldv_inline_asm();
    #line 184 
    break;
    #line 184 
    case (unsigned long)2: 
                           #line 184 
    ;
    #line 185 
    ldv_inline_asm();
    #line 184 
    break;
    #line 184 
    case (unsigned long)4: 
                           #line 184 
    ;
    #line 185 
    ldv_inline_asm();
    #line 184 
    break;
    #line 184 
    case (unsigned long)8: 
                           #line 184 
    ;
    #line 185 
    ldv_inline_asm();
    #line 184 
    break;
    #line 184 
    default: 
             #line 184 
    ;
    #line 184 
    __xadd_wrong_size();
  }
  #line 184 
  return __ret;
}

#line 109  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/atomic-instrumented.h"
__inline static int atomic_fetch_add(int i, atomic_t *v)
{
  #line 111 
  kasan_check_read((void *)v,4U);
  #line 112 
  return arch_atomic_fetch_add(i,v);
}

#line 173  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/cpufeature.h"
__inline static bool _static_cpu_has(u16 bit)
{
  #line 177 
  ldv_inline_asm();
  #line 178 
  ldv_inline_asm();
  #line 211 
  t_yes: 
         #line 211 
  ;
  #line 212 
  return (_Bool)1;
  #line 213 
  t_no: 
        #line 213 
  ;
  #line 214 
  return (_Bool)0;
}

#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_api_smp.h"
#line 22 
void _raw_spin_lock(raw_spinlock_t *);
#line 39 
#line 39 
void _raw_spin_unlock(raw_spinlock_t *);
#line 336  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
static void spin_lock(spinlock_t *lock)
{
  #line 338 
  _raw_spin_lock(& lock->__anonCompField_spinlock_25.rlock);
  #line 339 
  return;
}

#line 340 
#line 948  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_main.i.aux"
static void cif_spin_lock_cmd_ring_lock_of_rocker(spinlock_t *lock);
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
static void spin_unlock(spinlock_t *lock)
{
  #line 378 
  _raw_spin_unlock(& lock->__anonCompField_spinlock_25.rlock);
  #line 379 
  return;
}

#line 380 
#line 957  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_main.i.aux"
static void cif_spin_unlock_cmd_ring_lock_of_rocker(spinlock_t *lock);
#line 391  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
static void spin_unlock_irqrestore_0(spinlock_t *lock, unsigned long flags)
{
  {
    #line 393 
    unsigned long __dummy;
    #line 393 
    unsigned long __dummy2;
    }
  #line 393 
  _raw_spin_unlock_irqrestore(& lock->__anonCompField_spinlock_25.rlock,flags);
  #line 395 
  return;
}

#line 395 
#line 975  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_main.i.aux"
static void cif_spin_unlock_irqrestore_cmd_ring_lock_of_rocker(spinlock_t *lock, unsigned long flags);
#line 35 
#line 966 
static void cif___ldv_spin_lock_cmd_ring_lock_of_rocker(spinlock_t *lock);
#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/bitmap.h"
#line 21 
void ldv_set_bit(long nr, unsigned long *addr);
#line 27 
#line 27 
void ldv_bitmap_zero(unsigned long *dst, unsigned int nbits);
#line 26  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 26 
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags);
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/wait.h"
#line 61 
void __init_waitqueue_head(struct wait_queue_head *, char *, struct lock_class_key *);
#line 200 
#line 200 
void __wake_up(struct wait_queue_head *, unsigned int, int, void *);
#line 248 
#line 248 
void init_wait_entry(struct wait_queue_entry *, int);
#line 1128 
#line 1128 
long prepare_to_wait_event(struct wait_queue_head *, struct wait_queue_entry *, int);
#line 1129 
#line 1129 
void finish_wait(struct wait_queue_head *, struct wait_queue_entry *);
#line 36  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rcutree.h"
#line 36 
void kfree_call_rcu(struct callback_head *, void (*)(struct callback_head *));
#line 407  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/workqueue.h"
#line 407 
struct workqueue_struct *alloc_workqueue(char *, unsigned int, int , ...);
#line 436 
#line 436 
void destroy_workqueue(struct workqueue_struct *);
#line 496 
#line 429  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_main.i.aux"
static bool cif_queue_work(struct workqueue_struct *wq, struct work_struct *work);
#line 190  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/notifier.h"
__inline static int notifier_from_errno(int err)
{
  #line 192 
  if (err != 0) 
                #line 193 
                return (1 - err) | 32768;
  #line 195 
  return 1;
}

#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/io.h"
__inline static unsigned int readl(void *addr)
{
  #line 59 
  unsigned int ret;
  #line 60 
  ldv_inline_asm();
  #line 59 
  return ret;
}

#line 67  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/io.h"
__inline static void writel(unsigned int val, void *addr)
{
  #line 69 
  ldv_inline_asm();
  #line 70 
  return;
}

#line 95  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/io.h"
__inline static u64 readq(void *addr)
{
  #line 95 
  u64 ret;
  #line 96 
  ldv_inline_asm();
  #line 95 
  return ret;
}

#line 97  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/io.h"
__inline static void writeq(u64 val, void *addr)
{
  #line 99 
  ldv_inline_asm();
  #line 100 
  return;
}

#line 206 
#line 206 
void *ioremap(resource_size_t, unsigned long);
#line 209 
#line 209 
void iounmap(void *);
#line 186  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/refcount.h"
__inline static void refcount_add(int i, refcount_t *r)
{
  #line 188 
  int old = atomic_fetch_add(i,& r->refs);
  #line 190 
  if ((long)(old == 0) != 0L) 
                              #line 191 
                              refcount_warn_saturate(r,(enum refcount_saturation_type)REFCOUNT_ADD_UAF);
  else 
    #line 192 
    if ((long)(old < 0) != 0L || (long)(old + i < 0) != 0L) 
                                                            #line 193 
                                                            refcount_warn_saturate(r,(enum refcount_saturation_type)REFCOUNT_ADD_OVF);
  #line 194 
  return;
}

#line 226  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/refcount.h"
__inline static void refcount_inc(refcount_t *r)
{
  #line 228 
  refcount_add(1,r);
  #line 229 
  return;
}

#line 89  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kobject.h"
__inline static char *kobject_name(struct kobject *kobj)
{
  #line 91 
  return kobj->name;
}

#line 219  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
#line 219 
long schedule_timeout(long);
#line 1370  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
__inline static char *dev_name(struct device *dev)
{
  #line 1373 
  if (dev->init_name != (char *)0) 
                                   #line 1374 
                                   return dev->init_name;
  #line 1376 
  return kobject_name(& dev->kobj);
}

#line 1417  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
__inline static void *dev_get_drvdata(struct device *dev)
{
  #line 1419 
  return dev->driver_data;
}

#line 1422  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
__inline static void dev_set_drvdata(struct device *dev, void *data)
{
  #line 1424 
  dev->driver_data = data;
  #line 1425 
  return;
}

#line 1680 
#line 1680 
char *dev_driver_string(struct device *);
#line 1712 
#line 1712 
void _dev_err(struct device *, char * , ...);
#line 1714 
#line 1714 
void _dev_warn(struct device *, char * , ...);
#line 1718 
#line 1718 
void _dev_info(struct device *, char * , ...);
#line 162  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/interrupt.h"
#line 932  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_main.i.aux"
static int cif_request_irq(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char *name, void *dev);
#line 189  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/interrupt.h"
#line 940  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_main.i.aux"
static void *cif_free_irq(unsigned int ldv_func_arg1, void *ldv_func_arg2);
#line 590  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/slab.h"
#line 582  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_main.i.aux"
static void *kmalloc_array(size_t n, size_t size, gfp_t flags);
#line 607  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/slab.h"
#line 589  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_main.i.aux"
static void *kcalloc_0(size_t n, size_t size, gfp_t flags);
#line 668  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/slab.h"
#line 610  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_main.i.aux"
static void *kzalloc_0(size_t size, gfp_t flags);
#line 1131  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pci.h"
#line 1131 
int pci_enable_device(struct pci_dev *);
#line 1157 
#line 1157 
void pci_disable_device(struct pci_dev *);
#line 1160 
#line 1160 
void pci_set_master(struct pci_dev *);
#line 1281 
#line 1281 
int pci_request_regions(struct pci_dev *, char *);
#line 1283 
#line 1283 
void pci_release_regions(struct pci_dev *);
#line 1346 
#line 1016  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_main.i.aux"
static int cif___pci_register_driver(struct pci_driver *ldv_func_arg1, struct module *ldv_func_arg2, char *mod_name);
#line 1352  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pci.h"
#line 1024  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_main.i.aux"
static void cif_pci_unregister_driver(struct pci_driver *dev);
#line 628  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm.h"
__inline static bool is_vmalloc_addr(void *x)
{
  #line 633 
  int tmp_1;
  #line 631 
  unsigned long addr = (unsigned long)x;
  #line 633 
  if (addr >= vmalloc_base) {
    #line 633 
    unsigned long tmp_0;
    #line 633 
    if ((int)_static_cpu_has((unsigned short)528) != 0) 
                                                        #line 633 
                                                        tmp_0 = 14073748835532800UL; else 
                                                                    #line 633 
                                                                    tmp_0 = 35184372088832UL;
    #line 633 
    ;
    #line 633 
    if ((tmp_0 + vmalloc_base) + 18446744073709551615UL > addr) 
                                                                #line 633 
                                                                tmp_1 = 1; else 
                                                                    #line 633 
                                                                    tmp_1 = 0;
  }
  else 
       #line 633 
       tmp_1 = 0;
  #line 633 
  return (_Bool)(tmp_1 != 0);
}

#line 1299  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm.h"
__inline static void *lowmem_page_address(struct page *page)
{
  #line 1301 
  return (void *)((unsigned long)((unsigned long long)((page - (struct page *)vmemmap_base) / 64L) << 12) + page_offset_base);
}

#line 1432  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pci.h"
#line 1432 
int pci_msix_vec_count(struct pci_dev *);
#line 1433 
#line 1433 
void pci_disable_msix(struct pci_dev *);
#line 1437 
#line 1437 
int pci_enable_msix_range(struct pci_dev *, struct msix_entry *, int, int);
#line 1439  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pci.h"
__inline static int pci_enable_msix_exact(struct pci_dev *dev, struct msix_entry *entries, int nvec)
{
  #line 1442 
  int rc = pci_enable_msix_range(dev,entries,nvec,nvec);
  #line 1443 
  if (rc < 0) 
              #line 1444 
              return rc;
  #line 1445 
  return 0;
}

#line 1833  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pci.h"
__inline static void *pci_get_drvdata(struct pci_dev *pdev)
{
  #line 1835 
  return dev_get_drvdata(& pdev->dev);
}

#line 1838  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pci.h"
__inline static void pci_set_drvdata(struct pci_dev *pdev, void *data)
{
  #line 1840 
  dev_set_drvdata(& pdev->dev,data);
  #line 1841 
  return;
}

#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dma-debug.h"
#line 21 
void debug_dma_map_single(struct device *, void *, unsigned long);
#line 24 
#line 24 
void debug_dma_map_page(struct device *, struct page *, size_t, size_t, int, dma_addr_t);
#line 28 
#line 28 
void debug_dma_mapping_error(struct device *, dma_addr_t);
#line 30 
#line 30 
void debug_dma_unmap_page(struct device *, dma_addr_t, size_t, int);
#line 143  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dma-mapping.h"
__inline static int valid_dma_direction(int dma_direction)
{
  #line 146 
  return (unsigned int)dma_direction <= 2U;
}

#line 191  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dma-mapping.h"
__inline static bool dma_is_direct(struct dma_map_ops *ops)
{
  #line 193 
  return (_Bool)((long)(ops == (struct dma_map_ops *)0) != 0L);
}

#line 200 
#line 200 
dma_addr_t dma_direct_map_page(struct device *, struct page *, unsigned long, size_t, enum dma_data_direction, unsigned long);
#line 228 
#line 228 
void dma_direct_unmap_page(struct device *, dma_addr_t, size_t, enum dma_data_direction, unsigned long);
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/dma-mapping.h"
#line 19 
extern struct dma_map_ops *dma_ops;
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/dma-mapping.h"
__inline static struct dma_map_ops *get_arch_dma_ops(struct bus_type *bus)
{
  #line 23 
  return dma_ops;
}

#line 261  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dma-mapping.h"
__inline static struct dma_map_ops *get_dma_ops(struct device *dev)
{
  #line 263 
  if (dev->dma_ops != (struct dma_map_ops *)0) 
                                               #line 264 
                                               return dev->dma_ops;
  #line 265 
  return get_arch_dma_ops(dev->bus);
}

#line 274  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dma-mapping.h"
__inline static dma_addr_t dma_map_page_attrs(struct device *dev, struct page *page, size_t offset, size_t size, enum dma_data_direction dir, unsigned long attrs)
{
  #line 279 
  dma_addr_t addr;
  #line 278 
  struct dma_map_ops *ops = get_dma_ops(dev);
  #line 281 
  if ((long)(valid_dma_direction((int)dir) == 0) != 0L) {
    #line 282 
    ldv_inline_asm();
    #line 283 
    ldv_inline_asm();
    #line 284 
    ldv_inline_asm();
    #line 281 
    ;
  }
  #line 282 
  if ((int)dma_is_direct(ops) != 0) 
                                    #line 283 
                                    addr = dma_direct_map_page(dev,page,offset,size,dir,attrs); else 
                                                                    #line 285 
                                                                    addr = (*(ops->map_page))(dev,page,offset,size,dir,attrs);
  #line 286 
  debug_dma_map_page(dev,page,offset,size,(int)dir,addr);
  #line 288 
  return addr;
}

#line 291  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dma-mapping.h"
__inline static void dma_unmap_page_attrs(struct device *dev, dma_addr_t addr, size_t size, enum dma_data_direction dir, unsigned long attrs)
{
  #line 294 
  struct dma_map_ops *ops = get_dma_ops(dev);
  #line 296 
  if ((long)(valid_dma_direction((int)dir) == 0) != 0L) {
    #line 297 
    ldv_inline_asm();
    #line 298 
    ldv_inline_asm();
    #line 299 
    ldv_inline_asm();
    #line 296 
    ;
  }
  #line 297 
  if ((int)dma_is_direct(ops) != 0) 
                                    #line 298 
                                    dma_direct_unmap_page(dev,addr,size,dir,attrs);
  else 
    #line 299 
    if (ops->unmap_page != (void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , unsigned long ))0) 
      #line 300 
      (*(ops->unmap_page))(dev,addr,size,dir,attrs);
  #line 301 
  debug_dma_unmap_page(dev,addr,size,(int)dir);
  #line 302 
  return;
}

#line 433  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dma-mapping.h"
__inline static int dma_mapping_error(struct device *dev, dma_addr_t dma_addr)
{
  #line 435 
  debug_dma_mapping_error(dev,dma_addr);
  #line 437 
  if (dma_addr == 18446744073709551615ULL) 
                                           #line 438 
                                           return -12;
  #line 439 
  return 0;
}

#line 442 
#line 442 
void *dma_alloc_attrs(struct device *, size_t, dma_addr_t *, gfp_t, unsigned long);
#line 444 
#line 444 
void dma_free_attrs(struct device *, size_t, void *, dma_addr_t, unsigned long);
#line 460 
#line 460 
int dma_set_mask(struct device *, u64);
#line 461 
#line 461 
int dma_set_coherent_mask(struct device *, u64);
#line 580  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dma-mapping.h"
__inline static dma_addr_t dma_map_single_attrs(struct device *dev, void *ptr, size_t size, enum dma_data_direction dir, unsigned long attrs)
{
  #line 584 
  int __ret_warn_once;
  {
    #line 584 
    bool __warned;
    #line 584 
    __ret_warn_once = (int)is_vmalloc_addr(ptr) != 0;
    #line 584 
    if ((long)(__ret_warn_once != 0) != 0L && (long)(! __warned) != 0L) {
      #line 584 
      __warned = (_Bool)1;
      {
        #line 584 
        int __ret_warn_on = 1;
        #line 584 
        if ((long)(__ret_warn_on != 0) != 0L) {
          #line 584 
          __warn_printk((char *)"%s %s: ",dev_driver_string(dev),dev_name(dev));
          #line 585 
          ldv_inline_asm();
          #line 586 
          ldv_inline_asm();
        }
        #line 584 
        long tmp_2 = (long)(__ret_warn_on != 0);
      }
    }
    }
  #line 584 
  if ((long)((long)(__ret_warn_once != 0)) != 0L) 
                                                  #line 586 
                                                  return 18446744073709551615ULL;
  #line 587 
  debug_dma_map_single(dev,ptr,size);
  #line 588 
  ;
  #line 588 
  ;
  #line 588 
  ;
  #line 588 
  ;
  #line 588 
  ;
  #line 588 
  ;
  #line 588 
  return dma_map_page_attrs(dev,
                           (struct page *)((__phys_addr((unsigned long)ptr) >> 12) + vmemmap_base),
                           (unsigned long)ptr & 4095UL,size,dir,attrs);
}

#line 592  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dma-mapping.h"
__inline static void dma_unmap_single_attrs(struct device *dev, dma_addr_t addr, size_t size, enum dma_data_direction dir, unsigned long attrs)
{
  #line 595 
  dma_unmap_page_attrs(dev,addr,size,dir,attrs);
  #line 596 
  return;
}

#line 641  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dma-mapping.h"
__inline static void *dma_alloc_coherent(struct device *dev, size_t size, dma_addr_t *dma_handle, gfp_t gfp)
{
  #line 645 
  return dma_alloc_attrs(dev,size,dma_handle,gfp,
                      (unsigned long)(gfp >> 5) & 256UL);
}

#line 649  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dma-mapping.h"
__inline static void dma_free_coherent(struct device *dev, size_t size, void *cpu_addr, dma_addr_t dma_handle)
{
  #line 652 
  dma_free_attrs(dev,size,cpu_addr,dma_handle,0UL);
  #line 653 
  return;
}

#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pci-dma-compat.h"
__inline static void *pci_alloc_consistent(struct pci_dev *hwdev, size_t size, dma_addr_t *dma_handle)
{
  #line 20 
  return dma_alloc_coherent(& hwdev->dev,size,dma_handle,2592U);
}

#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pci-dma-compat.h"
__inline static void pci_free_consistent(struct pci_dev *hwdev, size_t size, void *vaddr, dma_addr_t dma_handle)
{
  #line 34 
  dma_free_coherent(& hwdev->dev,size,vaddr,dma_handle);
  #line 35 
  return;
}

#line 38  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pci-dma-compat.h"
__inline static dma_addr_t pci_map_single(struct pci_dev *hwdev, void *ptr, size_t size, int direction)
{
  #line 40 
  return dma_map_single_attrs(& hwdev->dev,ptr,size,
                           (enum dma_data_direction)direction,0UL);
}

#line 44  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pci-dma-compat.h"
__inline static void pci_unmap_single(struct pci_dev *hwdev, dma_addr_t dma_addr, size_t size, int direction)
{
  #line 47 
  dma_unmap_single_attrs(& hwdev->dev,dma_addr,size,(enum dma_data_direction)direction,0UL);
  #line 48 
  return;
}

#line 107  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pci-dma-compat.h"
__inline static int pci_dma_mapping_error(struct pci_dev *pdev, dma_addr_t dma_addr)
{
  #line 109 
  return dma_mapping_error(& pdev->dev,dma_addr);
}

#line 113  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pci-dma-compat.h"
__inline static int pci_set_dma_mask(struct pci_dev *dev, u64 mask)
{
  #line 115 
  return dma_set_mask(& dev->dev,mask);
}

#line 118  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pci-dma-compat.h"
__inline static int pci_set_consistent_dma_mask(struct pci_dev *dev, u64 mask)
{
  #line 120 
  return dma_set_coherent_mask(& dev->dev,mask);
}

#line 38  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/random.h"
#line 38 
void get_random_bytes(void *, int);
#line 111 
#line 111 
u32 prandom_u32(void);
#line 112 
#line 112 
void prandom_bytes(void *, size_t);
#line 244  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/net.h"
#line 244 
int net_ratelimit(void);
#line 325  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static unsigned int skb_frag_size(skb_frag_t *frag)
{
  #line 327 
  return frag->bv_len;
}

#line 1023 
#line 1023 
void consume_skb(struct sk_buff *);
#line 1381  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static unsigned char *skb_end_pointer(struct sk_buff *skb)
{
  #line 1383 
  return skb->head + (unsigned long)skb->end;
}

#line 2065  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static bool skb_is_nonlinear(struct sk_buff *skb)
{
  #line 2067 
  return (_Bool)(skb->data_len != 0U);
}

#line 2070  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static unsigned int skb_headlen(struct sk_buff *skb)
{
  #line 2072 
  return skb->len - skb->data_len;
}

#line 2189 
#line 2189 
void *skb_put(struct sk_buff *, unsigned int);
#line 2266 
#line 2266 
void *__pskb_pull_tail(struct sk_buff *, int);
#line 2762 
#line 2762 
struct sk_buff *__netdev_alloc_skb(struct net_device *, unsigned int, gfp_t);
#line 2798  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static struct sk_buff *__netdev_alloc_skb_ip_align(struct net_device *dev, unsigned int length, gfp_t gfp)
{
  #line 2801 
  struct sk_buff *skb = __netdev_alloc_skb(dev,length,gfp);
  #line 2805 
  return skb;
}

#line 2808  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static struct sk_buff *netdev_alloc_skb_ip_align(struct net_device *dev, unsigned int length)
{
  #line 2811 
  return __netdev_alloc_skb_ip_align(dev,length,2592U);
}

#line 2896  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static unsigned int skb_frag_off(skb_frag_t *frag)
{
  #line 2898 
  return frag->bv_offset;
}

#line 2938  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static struct page *skb_frag_page(skb_frag_t *frag)
{
  #line 2940 
  return frag->bv_page;
}

#line 2996  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static void *skb_frag_address(skb_frag_t *frag)
{
  #line 2998 
  return lowmem_page_address(skb_frag_page(frag)) + (unsigned long)skb_frag_off(frag);
}

#line 3248  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static int __skb_linearize(struct sk_buff *skb)
{
  #line 3250 
  int tmp_0;
  #line 3250 
  if (__pskb_pull_tail(skb,(int)skb->data_len) != (void *)0) 
                                                             #line 3250 
                                                             tmp_0 = 0; else 
                                                                    #line 3250 
                                                                    tmp_0 = -12;
  #line 3250 
  return tmp_0;
}

#line 3260  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static int skb_linearize(struct sk_buff *skb)
{
  #line 3262 
  int tmp_1;
  #line 3262 
  if ((int)skb_is_nonlinear(skb) != 0) 
                                       #line 3262 
                                       tmp_1 = __skb_linearize(skb); else 
                                                                    #line 3262 
                                                                    tmp_1 = 0;
  #line 3262 
  return tmp_1;
}

#line 86  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ethtool.h"
#line 86 
u32 ethtool_op_get_link(struct net_device *);
#line 8  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/seq_file_net.h"
#line 8 
extern struct net init_net;
#line 423  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
#line 423 
void __napi_schedule(struct napi_struct *);
#line 431 
#line 431 
bool napi_schedule_prep(struct napi_struct *);
#line 440  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
__inline static void napi_schedule(struct napi_struct *n)
{
  #line 442 
  if ((int)napi_schedule_prep(n) != 0) 
                                       #line 443 
                                       __napi_schedule(n);
  #line 444 
  return;
}

#line 468 
#line 468 
bool napi_complete_done(struct napi_struct *, int);
#line 477  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
__inline static bool napi_complete(struct napi_struct *n)
{
  #line 479 
  return napi_complete_done(n,0);
}

#line 503 
#line 503 
void napi_disable(struct napi_struct *);
#line 512  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
__inline static void napi_enable(struct napi_struct *n)
{
  #line 514 
  int tmp_0;
  #line 514 
  if (test_bit(0L,& n->state)) 
                               #line 514 
                               tmp_0 = 0; else 
                                               #line 514 
                                               tmp_0 = 1;
  #line 514 
  if ((long)tmp_0 != 0L) {
    #line 515 
    ldv_inline_asm();
    #line 516 
    ldv_inline_asm();
    #line 517 
    ldv_inline_asm();
    #line 514 
    ;
  }
  #line 516 
  cif_clear_bit_0(0L,& n->state);
  #line 517 
  cif_clear_bit_0(3L,& n->state);
  #line 518 
  return;
}

#line 2132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
__inline static struct netdev_queue *netdev_get_tx_queue(struct net_device *dev, unsigned int index)
{
  #line 2135 
  return dev->_tx + (unsigned long)index;
}

#line 2203  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
__inline static void *netdev_priv(struct net_device *dev)
{
  #line 2205 
  return (void *)((char *)dev + 3328UL);
}

#line 2234 
#line 2234 
void netif_napi_add(struct net_device *, struct napi_struct *, int (*)(struct napi_struct *, int ), int);
#line 2248  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
__inline static void netif_tx_napi_add(struct net_device *dev, struct napi_struct *napi, int (*poll)(struct napi_struct *, int ), int weight)
{
  #line 2253 
  cif_set_bit(5L,& napi->state);
  #line 2254 
  netif_napi_add(dev,napi,poll,weight);
  #line 2255 
  return;
}

#line 2519 
#line 2519 
int register_netdevice_notifier(struct notifier_block *);
#line 2520 
#line 2520 
int unregister_netdevice_notifier(struct notifier_block *);
#line 2568  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
__inline static struct net_device *netdev_notifier_info_to_dev(struct netdev_notifier_info *info)
{
  #line 2570 
  return info->dev;
}

#line 2679 
#line 992  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_main.i.aux"
static void cif_free_netdev(struct net_device *dev);
#line 3104  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
__inline static void netif_tx_start_queue(struct netdev_queue *dev_queue)
{
  #line 3106 
  cif_clear_bit_0(0L,& dev_queue->state);
  #line 3107 
  return;
}

#line 3115  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
__inline static void netif_start_queue(struct net_device *dev)
{
  #line 3117 
  netif_tx_start_queue(netdev_get_tx_queue(dev,0U));
  #line 3118 
  return;
}

#line 3130 
#line 3130 
void netif_tx_wake_queue(struct netdev_queue *);
#line 3139  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
__inline static void netif_wake_queue(struct net_device *dev)
{
  #line 3141 
  netif_tx_wake_queue(netdev_get_tx_queue(dev,0U));
  #line 3142 
  return;
}

#line 3154  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
__inline static void netif_tx_stop_queue(struct netdev_queue *dev_queue)
{
  #line 3156 
  cif_set_bit(0L,& dev_queue->state);
  #line 3157 
  return;
}

#line 3166  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
__inline static void netif_stop_queue(struct net_device *dev)
{
  #line 3168 
  netif_tx_stop_queue(netdev_get_tx_queue(dev,0U));
  #line 3169 
  return;
}

#line 3174  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
__inline static bool netif_tx_queue_stopped(struct netdev_queue *dev_queue)
{
  #line 3176 
  return test_bit(0L,& dev_queue->state);
}

#line 3185  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
__inline static bool netif_queue_stopped(struct net_device *dev)
{
  #line 3187 
  return netif_tx_queue_stopped(netdev_get_tx_queue(dev,0U));
}

#line 3387  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
__inline static bool netif_running(struct net_device *dev)
{
  #line 3389 
  return test_bit(0L,& dev->state);
}

#line 3617 
#line 3617 
void __dev_kfree_skb_any(struct sk_buff *, enum skb_free_reason);
#line 3648  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
__inline static void dev_kfree_skb_any(struct sk_buff *skb)
{
  #line 3650 
  __dev_kfree_skb_any(skb,(enum skb_free_reason)SKB_REASON_DROPPED);
  #line 3651 
  return;
}

#line 3662 
#line 3662 
int netif_receive_skb(struct sk_buff *);
#line 3768  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
__inline static void dev_put(struct net_device *dev)
{
  {
    #line 3770 
    void *__vpp_verify = (void *)0;
    #line 3770 
    void *tmp = __vpp_verify;
  }
  #line 3770 
  switch (4UL) {
    #line 3770 
    case (unsigned long)1: 
                           #line 3770 
    ;
    {
      #line 3770 
      int pao_ID__ = -1;
      #line 3770 
      switch (4UL) {
        #line 3770 
        case (unsigned long)1: 
                               #line 3770 
        ;
        #line 3772 
        ldv_inline_asm();
        #line 3770 
        break;
        #line 3770 
        case (unsigned long)2: 
                               #line 3770 
        ;
        #line 3772 
        ldv_inline_asm();
        #line 3770 
        break;
        #line 3770 
        case (unsigned long)4: 
                               #line 3770 
        ;
        #line 3772 
        ldv_inline_asm();
        #line 3770 
        break;
        #line 3770 
        case (unsigned long)8: 
                               #line 3770 
        ;
        #line 3772 
        ldv_inline_asm();
        #line 3770 
        break;
        #line 3770 
        default: 
                 #line 3770 
        ;
        #line 3770 
        __bad_percpu_size();
      }
    }
    #line 3770 
    break;
    #line 3770 
    case (unsigned long)2: 
                           #line 3770 
    ;
    {
      #line 3770 
      int pao_ID___0 = -1;
      #line 3770 
      switch (4UL) {
        #line 3770 
        case (unsigned long)1: 
                               #line 3770 
        ;
        #line 3772 
        ldv_inline_asm();
        #line 3770 
        break;
        #line 3770 
        case (unsigned long)2: 
                               #line 3770 
        ;
        #line 3772 
        ldv_inline_asm();
        #line 3770 
        break;
        #line 3770 
        case (unsigned long)4: 
                               #line 3770 
        ;
        #line 3772 
        ldv_inline_asm();
        #line 3770 
        break;
        #line 3770 
        case (unsigned long)8: 
                               #line 3770 
        ;
        #line 3772 
        ldv_inline_asm();
        #line 3770 
        break;
        #line 3770 
        default: 
                 #line 3770 
        ;
        #line 3770 
        __bad_percpu_size();
      }
    }
    #line 3770 
    break;
    #line 3770 
    case (unsigned long)4: 
                           #line 3770 
    ;
    {
      #line 3770 
      int pao_ID___1 = -1;
      #line 3770 
      switch (4UL) {
        #line 3770 
        case (unsigned long)1: 
                               #line 3770 
        ;
        #line 3772 
        ldv_inline_asm();
        #line 3770 
        break;
        #line 3770 
        case (unsigned long)2: 
                               #line 3770 
        ;
        #line 3772 
        ldv_inline_asm();
        #line 3770 
        break;
        #line 3770 
        case (unsigned long)4: 
                               #line 3770 
        ;
        #line 3772 
        ldv_inline_asm();
        #line 3770 
        break;
        #line 3770 
        case (unsigned long)8: 
                               #line 3770 
        ;
        #line 3772 
        ldv_inline_asm();
        #line 3770 
        break;
        #line 3770 
        default: 
                 #line 3770 
        ;
        #line 3770 
        __bad_percpu_size();
      }
    }
    #line 3770 
    break;
    #line 3770 
    case (unsigned long)8: 
                           #line 3770 
    ;
    {
      #line 3770 
      int pao_ID___2 = -1;
      #line 3770 
      switch (4UL) {
        #line 3770 
        case (unsigned long)1: 
                               #line 3770 
        ;
        #line 3772 
        ldv_inline_asm();
        #line 3770 
        break;
        #line 3770 
        case (unsigned long)2: 
                               #line 3770 
        ;
        #line 3772 
        ldv_inline_asm();
        #line 3770 
        break;
        #line 3770 
        case (unsigned long)4: 
                               #line 3770 
        ;
        #line 3772 
        ldv_inline_asm();
        #line 3770 
        break;
        #line 3770 
        case (unsigned long)8: 
                               #line 3770 
        ;
        #line 3772 
        ldv_inline_asm();
        #line 3770 
        break;
        #line 3770 
        default: 
                 #line 3770 
        ;
        #line 3770 
        __bad_percpu_size();
      }
    }
    #line 3770 
    break;
    #line 3770 
    default: 
             #line 3770 
    ;
    #line 3770 
    __bad_size_call_parameter();
    #line 3770 
    break;
  }
  #line 3773 
  return;
}

#line 3779  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
__inline static void dev_hold(struct net_device *dev)
{
  {
    #line 3781 
    void *__vpp_verify = (void *)0;
    #line 3781 
    void *tmp = __vpp_verify;
  }
  #line 3781 
  switch (4UL) {
    #line 3781 
    case (unsigned long)1: 
                           #line 3781 
    ;
    {
      #line 3781 
      int pao_ID__ = 1;
      #line 3781 
      switch (4UL) {
        #line 3781 
        case (unsigned long)1: 
                               #line 3781 
        ;
        #line 3783 
        ldv_inline_asm();
        #line 3781 
        break;
        #line 3781 
        case (unsigned long)2: 
                               #line 3781 
        ;
        #line 3783 
        ldv_inline_asm();
        #line 3781 
        break;
        #line 3781 
        case (unsigned long)4: 
                               #line 3781 
        ;
        #line 3783 
        ldv_inline_asm();
        #line 3781 
        break;
        #line 3781 
        case (unsigned long)8: 
                               #line 3781 
        ;
        #line 3783 
        ldv_inline_asm();
        #line 3781 
        break;
        #line 3781 
        default: 
                 #line 3781 
        ;
        #line 3781 
        __bad_percpu_size();
      }
    }
    #line 3781 
    break;
    #line 3781 
    case (unsigned long)2: 
                           #line 3781 
    ;
    {
      #line 3781 
      int pao_ID___0 = 1;
      #line 3781 
      switch (4UL) {
        #line 3781 
        case (unsigned long)1: 
                               #line 3781 
        ;
        #line 3783 
        ldv_inline_asm();
        #line 3781 
        break;
        #line 3781 
        case (unsigned long)2: 
                               #line 3781 
        ;
        #line 3783 
        ldv_inline_asm();
        #line 3781 
        break;
        #line 3781 
        case (unsigned long)4: 
                               #line 3781 
        ;
        #line 3783 
        ldv_inline_asm();
        #line 3781 
        break;
        #line 3781 
        case (unsigned long)8: 
                               #line 3781 
        ;
        #line 3783 
        ldv_inline_asm();
        #line 3781 
        break;
        #line 3781 
        default: 
                 #line 3781 
        ;
        #line 3781 
        __bad_percpu_size();
      }
    }
    #line 3781 
    break;
    #line 3781 
    case (unsigned long)4: 
                           #line 3781 
    ;
    {
      #line 3781 
      int pao_ID___1 = 1;
      #line 3781 
      switch (4UL) {
        #line 3781 
        case (unsigned long)1: 
                               #line 3781 
        ;
        #line 3783 
        ldv_inline_asm();
        #line 3781 
        break;
        #line 3781 
        case (unsigned long)2: 
                               #line 3781 
        ;
        #line 3783 
        ldv_inline_asm();
        #line 3781 
        break;
        #line 3781 
        case (unsigned long)4: 
                               #line 3781 
        ;
        #line 3783 
        ldv_inline_asm();
        #line 3781 
        break;
        #line 3781 
        case (unsigned long)8: 
                               #line 3781 
        ;
        #line 3783 
        ldv_inline_asm();
        #line 3781 
        break;
        #line 3781 
        default: 
                 #line 3781 
        ;
        #line 3781 
        __bad_percpu_size();
      }
    }
    #line 3781 
    break;
    #line 3781 
    case (unsigned long)8: 
                           #line 3781 
    ;
    {
      #line 3781 
      int pao_ID___2 = 1;
      #line 3781 
      switch (4UL) {
        #line 3781 
        case (unsigned long)1: 
                               #line 3781 
        ;
        #line 3783 
        ldv_inline_asm();
        #line 3781 
        break;
        #line 3781 
        case (unsigned long)2: 
                               #line 3781 
        ;
        #line 3783 
        ldv_inline_asm();
        #line 3781 
        break;
        #line 3781 
        case (unsigned long)4: 
                               #line 3781 
        ;
        #line 3783 
        ldv_inline_asm();
        #line 3781 
        break;
        #line 3781 
        case (unsigned long)8: 
                               #line 3781 
        ;
        #line 3783 
        ldv_inline_asm();
        #line 3781 
        break;
        #line 3781 
        default: 
                 #line 3781 
        ;
        #line 3781 
        __bad_percpu_size();
      }
    }
    #line 3781 
    break;
    #line 3781 
    default: 
             #line 3781 
    ;
    #line 3781 
    __bad_size_call_parameter();
    #line 3781 
    break;
  }
  #line 3784 
  return;
}

#line 3803  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
__inline static bool netif_carrier_ok(struct net_device *dev)
{
  #line 3805 
  int tmp_0;
  #line 3805 
  if ((int)test_bit(2L,& dev->state) != 0) 
                                           #line 3805 
                                           tmp_0 = 0; else 
                                                           #line 3805 
                                                           tmp_0 = 1;
  #line 3805 
  return (_Bool)(tmp_0 != 0);
}

#line 3812 
#line 3812 
void netif_carrier_on(struct net_device *);
#line 3814 
#line 3814 
void netif_carrier_off(struct net_device *);
#line 4131 
#line 1008  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_main.i.aux"
static int cif_register_netdev(struct net_device *dev);
#line 4132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
#line 984  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_main.i.aux"
static void cif_unregister_netdev(struct net_device *dev);
#line 4331  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
#line 4331 
int netdev_walk_all_lower_dev(struct net_device *, int (*)(struct net_device *, void *), void *);
#line 4752 
#line 4752 
void netdev_warn(struct net_device *, char * , ...);
#line 4756 
#line 4756 
void netdev_info(struct net_device *, char * , ...);
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/etherdevice.h"
#line 32 
__be16 eth_type_trans(struct sk_buff *, struct net_device *);
#line 51 
#line 1000  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_main.i.aux"
static struct net_device *cif_alloc_etherdev_mqs(int sizeof_priv, unsigned int txqs, unsigned int rxqs);
#line 191  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/etherdevice.h"
__inline static bool is_valid_ether_addr(u8 *addr)
{
  #line 195 
  int tmp_1;
  #line 195 
  if (is_multicast_ether_addr(addr)) 
                                     #line 195 
                                     tmp_1 = 0;
  else {
    #line 195 
    if (is_zero_ether_addr(addr)) 
                                  #line 195 
                                  tmp_1 = 0; else 
                                                  #line 195 
                                                  tmp_1 = 1;
  }
  #line 195 
  return (_Bool)(tmp_1 != 0);
}

#line 223  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/etherdevice.h"
__inline static void eth_random_addr(u8 *addr)
{
  #line 225 
  get_random_bytes((void *)addr,6);
  #line 226 
  *addr = (unsigned char)((unsigned int)*addr & 254U);
  #line 227 
  *addr = (unsigned char)((unsigned int)*addr | 2U);
  #line 228 
  return;
}

#line 263  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/etherdevice.h"
__inline static void eth_hw_addr_random(struct net_device *dev)
{
  #line 265 
  dev->addr_assign_type = (unsigned char)1U;
  #line 266 
  eth_random_addr(dev->dev_addr);
  #line 267 
  return;
}

#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ctype.h"
#line 19 
extern unsigned char _ctype[];
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/fib_notifier.h"
#line 43 
int register_fib_notifier(struct net *, struct notifier_block *, void (*)(struct notifier_block *), struct netlink_ext_ack *);
#line 46 
#line 46 
int unregister_fib_notifier(struct net *, struct notifier_block *);
#line 124  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/fib_rules.h"
__inline static void fib_rule_get(struct fib_rule *rule)
{
  #line 126 
  refcount_inc(& rule->refcnt);
  #line 127 
  return;
}

#line 129  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/fib_rules.h"
__inline static void fib_rule_put(struct fib_rule *rule)
{
  #line 131 
  if ((int)refcount_dec_and_test(& rule->refcnt) != 0) {
    #line 132 
    struct fib_rule *___p = rule;
    #line 132 
    if (___p != (struct fib_rule *)0) 
                                      #line 132 
                                      kfree_call_rcu(& ___p->rcu,(void (*)(struct callback_head *))136);
  }
  #line 135 
  return;
}

#line 391  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/ip_fib.h"
#line 391 
bool fib4_rule_default(struct fib_rule *);
#line 496 
#line 496 
void free_fib_info(struct fib_info *);
#line 498  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/ip_fib.h"
__inline static void fib_info_hold(struct fib_info *fi)
{
  #line 500 
  refcount_inc(& fi->fib_clntref);
  #line 501 
  return;
}

#line 503  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/ip_fib.h"
__inline static void fib_info_put(struct fib_info *fi)
{
  #line 505 
  if ((int)refcount_dec_and_test(& fi->fib_clntref) != 0) 
                                                          #line 506 
                                                          free_fib_info(fi);
  #line 507 
  return;
}

#line 145  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/switchdev.h"
__inline static struct net_device *switchdev_notifier_info_to_dev(struct switchdev_notifier_info *info)
{
  #line 147 
  return info->dev;
}

#line 167 
#line 167 
int register_switchdev_notifier(struct notifier_block *);
#line 168 
#line 168 
int unregister_switchdev_notifier(struct notifier_block *);
#line 173 
#line 173 
int register_switchdev_blocking_notifier(struct notifier_block *);
#line 174 
#line 174 
int unregister_switchdev_blocking_notifier(struct notifier_block *);
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netevent.h"
#line 34 
int register_netevent_notifier(struct notifier_block *);
#line 35 
#line 35 
int unregister_netevent_notifier(struct notifier_block *);
#line 79  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_tlv.h"
__inline static int rocker_tlv_len(struct rocker_tlv *tlv)
{
  #line 81 
  return (int)((unsigned int)tlv->len + 4294967288U);
}

#line 84  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_tlv.h"
__inline static u8 rocker_tlv_get_u8(struct rocker_tlv *tlv)
{
  #line 86 
  return *((u8 *)rocker_tlv_data(tlv));
}

#line 89  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_tlv.h"
__inline static u16 rocker_tlv_get_u16(struct rocker_tlv *tlv)
{
  #line 91 
  return *((u16 *)rocker_tlv_data(tlv));
}

#line 94  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_tlv.h"
__inline static __be16 rocker_tlv_get_be16(struct rocker_tlv *tlv)
{
  #line 96 
  return *((__be16 *)rocker_tlv_data(tlv));
}

#line 99  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_tlv.h"
__inline static u32 rocker_tlv_get_u32(struct rocker_tlv *tlv)
{
  #line 101 
  return *((u32 *)rocker_tlv_data(tlv));
}

#line 104  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_tlv.h"
__inline static u64 rocker_tlv_get_u64(struct rocker_tlv *tlv)
{
  #line 106 
  return *((u64 *)rocker_tlv_data(tlv));
}

#line 112  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_tlv.h"
__inline static void rocker_tlv_parse_nested(struct rocker_tlv **tb, int maxtype, struct rocker_tlv *tlv)
{
  #line 116 
  ;
  #line 116 
  ;
  #line 116 
  rocker_tlv_parse(tb,maxtype,(char *)rocker_tlv_data(tlv),rocker_tlv_len(tlv));
  #line 118 
  return;
}

#line 121  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_tlv.h"
__inline static void rocker_tlv_parse_desc(struct rocker_tlv **tb, int maxtype, struct rocker_desc_info *desc_info)
{
  #line 124 
  rocker_tlv_parse(tb,maxtype,desc_info->data,(int)(desc_info->desc)->tlv_size);
  #line 126 
  return;
}

#line 203  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_tlv.h"
__inline static void rocker_tlv_nest_cancel(struct rocker_desc_info *desc_info, struct rocker_tlv *start)
{
  #line 206 
  desc_info->tlv_size = (unsigned long)((char *)start - desc_info->data);
  #line 207 
  return;
}

#line 41  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static char rocker_driver_name[7U] = {(char)'r', (char)'o', (char)'c', (char)'k', (char)'e', (char)'r'};
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static struct pci_device_id rocker_pci_id_table[2U] = {{.vendor = 6966U, .device = 6U, .subvendor = 4294967295U, .subdevice = 4294967295U}};
#line 54  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static void rocker_wait_reset(struct rocker_wait *wait)
{
  #line 56 
  wait->done = (_Bool)0;
  #line 57 
  wait->nowait = (_Bool)0;
  #line 58 
  return;
}

#line 60  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static void rocker_wait_init(struct rocker_wait *wait)
{
  {
    #line 62 
    struct lock_class_key __key;
    #line 62 
    __init_waitqueue_head(& wait->wait,(char *)"&wait->wait",& __key);
  }
  #line 63 
  rocker_wait_reset(wait);
  #line 64 
  return;
}

#line 66  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static struct rocker_wait *rocker_wait_create(void)
{
  #line 68 
  struct rocker_wait *wait;
  #line 70 
  wait = (struct rocker_wait *)kzalloc_0(96UL,3264U);
  #line 71 
  if (wait == (struct rocker_wait *)0) 
                                       #line 72 
                                       return (struct rocker_wait *)0;
  #line 73 
  return wait;
}

#line 76  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static void rocker_wait_destroy(struct rocker_wait *wait)
{
  #line 78 
  kfree((void *)wait);
  #line 79 
  return;
}

#line 81  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static bool rocker_wait_event_timeout(struct rocker_wait *wait, unsigned long timeout)
{
  {
    #line 84 
    long __ret = 25L;
    #line 84 
    __might_sleep((char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c",84,0);
    {
      #line 84 
      bool __cond_0;
      #line 84 
      __cond_0 = wait->done;
      #line 84 
      if ((int)__cond_0 != 0 && __ret == 0L) 
                                             #line 84 
                                             __ret = 1L;
      #line 84 
      if ((((int)__cond_0 != 0 || __ret == 0L) != 0) == 0) {
        #line 84 
        long __ret_0;
        {
          #line 84 
          struct wait_queue_entry __wq_entry;
          #line 84 
          __ret_0 = 25L;
          #line 84 
          init_wait_entry(& __wq_entry,0);
          #line 84 
          while (1) {
            #line 84 
            bool __cond;
            #line 84 
            long __int = prepare_to_wait_event(& wait->wait,& __wq_entry,2);
            #line 84 
            __cond = wait->done;
            #line 84 
            if ((int)__cond != 0 && __ret_0 == 0L) 
                                                   #line 84 
                                                   __ret_0 = 1L;
            #line 84 
            if ((((int)__cond != 0 || __ret_0 == 0L) != 0) != 0) 
                                                                 #line 84 
                                                                 break;
            #line 84 
            __ret_0 = schedule_timeout(__ret_0);
          }
          #line 84 
          finish_wait(& wait->wait,& __wq_entry);
          #line 84 
          __out_0: 
                   #line 84 
          ;
          }
        #line 84 
        __ret = __ret_0;
      }
    }
    #line 84 
    long tmp_3 = __ret;
  }
  #line 85 
  if (! wait->done) 
                    #line 86 
                    return (_Bool)0;
  #line 87 
  return (_Bool)1;
}

#line 90  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static void rocker_wait_wake_up(struct rocker_wait *wait)
{
  #line 92 
  wait->done = (_Bool)1;
  #line 93 
  __wake_up(& wait->wait,3U,1,(void *)0);
  #line 94 
  return;
}

#line 96  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static u32 rocker_msix_vector(struct rocker *rocker, unsigned int vector)
{
  #line 98 
  return (rocker->msix_entries + (unsigned long)vector)->vector;
}

#line 101  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static u32 rocker_msix_tx_vector(struct rocker_port *rocker_port)
{
  #line 103 
  return rocker_msix_vector(rocker_port->rocker,
                         (rocker_port->port_number + 2U) * 2U);
}

#line 107  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static u32 rocker_msix_rx_vector(struct rocker_port *rocker_port)
{
  #line 109 
  return rocker_msix_vector(rocker_port->rocker,
                         rocker_port->port_number * 2U + 5U);
}

#line 126  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static int rocker_reg_test(struct rocker *rocker)
{
  #line 129 
  u64 test_reg;
  #line 130 
  u64 rnd;
  #line 128 
  struct pci_dev *pdev = rocker->pdev;
  #line 132 
  rnd = (unsigned long long)prandom_u32();
  #line 133 
  rnd >>= 1;
  #line 134 
  writel((unsigned int)rnd,(void *)(rocker->hw_addr + 16U));
  #line 135 
  test_reg = (unsigned long long)readl((void *)(rocker->hw_addr + 16U));
  #line 136 
  if (rnd * 2ULL != test_reg) {
    #line 137 
    _dev_err(& pdev->dev,(char *)"unexpected 32bit register value %08llx, expected %08llx\n",test_reg,rnd * 2ULL);
    #line 139 
    return -5;
  }
  #line 142 
  rnd = (unsigned long long)prandom_u32();
  #line 143 
  rnd <<= 31;
  #line 144 
  rnd = (unsigned long long)prandom_u32() | rnd;
  #line 145 
  writeq(rnd,(void *)(rocker->hw_addr + 24U));
  #line 146 
  test_reg = readq((void *)(rocker->hw_addr + 24U));
  #line 147 
  if (rnd * 2ULL != test_reg) {
    #line 148 
    _dev_err(& pdev->dev,(char *)"unexpected 64bit register value %16llx, expected %16llx\n",test_reg,rnd * 2ULL);
    #line 150 
    return -5;
  }
  #line 153 
  return 0;
}

#line 156  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static int rocker_dma_test_one(struct rocker *rocker, struct rocker_wait *wait, u32 test_type, dma_addr_t dma_handle, unsigned char *buf, unsigned char *expect, size_t size)
{
  #line 162 
  int i;
  #line 161 
  struct pci_dev *pdev = rocker->pdev;
  #line 164 
  rocker_wait_reset(wait);
  #line 165 
  writel(test_type,(void *)(rocker->hw_addr + 52U));
  #line 167 
  if (! rocker_wait_event_timeout(wait,25UL)) {
    #line 168 
    _dev_err(& pdev->dev,(char *)"no interrupt received within a timeout\n");
    #line 169 
    return -5;
  }
  #line 172 
  i = 0;
  #line 172 
  while ((unsigned long)i < size) {
    #line 173 
    if ((int)*(buf + (unsigned long)i) != (int)*(expect + (unsigned long)i)) {
      #line 174 
      _dev_err(& pdev->dev,(char *)"unexpected memory content %02x at byte %x\n, %02x expected",(int)*(buf + (unsigned long)i),i,(int)*(expect + (unsigned long)i));
      #line 176 
      return -5;
    }
    #line 172 
    i ++;
  }
  #line 179 
  return 0;
}

#line 185  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static int rocker_dma_test_offset(struct rocker *rocker, struct rocker_wait *wait, int offset)
{
  #line 189 
  unsigned char *alloc;
  #line 190 
  unsigned char *buf;
  #line 191 
  unsigned char *expect;
  #line 192 
  dma_addr_t dma_handle;
  #line 193 
  int i;
  #line 194 
  int err;
  #line 188 
  struct pci_dev *pdev = rocker->pdev;
  #line 196 
  alloc = (unsigned char *)kzalloc_0((unsigned long)offset + 32768UL,3265U);
  #line 198 
  if (alloc == (unsigned char *)0U) 
                                    #line 199 
                                    return -12;
  #line 200 
  buf = alloc + (unsigned long)offset;
  #line 201 
  expect = buf + 16384UL;
  #line 203 
  dma_handle = pci_map_single(pdev,(void *)buf,16384UL,0);
  #line 205 
  if (pci_dma_mapping_error(pdev,dma_handle) != 0) {
    #line 206 
    err = -5;
    #line 207 
    goto free_alloc;
  }
  #line 210 
  writeq(dma_handle,(void *)(rocker->hw_addr + 40U));
  #line 211 
  writel(16384U,(void *)(rocker->hw_addr + 48U));
  #line 213 
  memset((void *)expect,150,16384UL);
  #line 214 
  err = rocker_dma_test_one(rocker,wait,2U,dma_handle,buf,expect,16384UL);
  #line 217 
  if (err != 0) 
                #line 218 
                goto unmap;
  #line 220 
  memset((void *)expect,0,16384UL);
  #line 221 
  err = rocker_dma_test_one(rocker,wait,1U,dma_handle,buf,expect,16384UL);
  #line 224 
  if (err != 0) 
                #line 225 
                goto unmap;
  #line 227 
  prandom_bytes((void *)buf,16384UL);
  #line 228 
  i = 0;
  #line 228 
  while ((unsigned int)i <= 16383U) {
    #line 229 
    *(expect + (unsigned long)i) = (unsigned char)(~ ((int)*(buf + (unsigned long)i)));
    #line 228 
    i ++;
  }
  #line 230 
  err = rocker_dma_test_one(rocker,wait,4U,dma_handle,buf,expect,16384UL);
  #line 233 
  if (err != 0) 
                #line 234 
                goto unmap;
  #line 236 
  unmap: 
         #line 236 
  ;
  #line 237 
  pci_unmap_single(pdev,dma_handle,16384UL,0);
  #line 239 
  free_alloc: 
              #line 239 
  ;
  #line 240 
  kfree((void *)alloc);
  #line 242 
  return err;
}

#line 245  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static int rocker_dma_test(struct rocker *rocker, struct rocker_wait *wait)
{
  #line 248 
  int i;
  #line 249 
  int err;
  #line 251 
  i = 0;
  #line 251 
  while (i <= 7) {
    #line 252 
    err = rocker_dma_test_offset(rocker,wait,i);
    #line 253 
    if (err != 0) 
                  #line 254 
                  return err;
    #line 251 
    i ++;
  }
  #line 256 
  return 0;
}

#line 259  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static irqreturn_t rocker_test_irq_handler(int irq, void *dev_id)
{
  #line 261 
  struct rocker_wait *wait = (struct rocker_wait *)dev_id;
  #line 263 
  rocker_wait_wake_up(wait);
  #line 265 
  return IRQ_HANDLED;
}

#line 268  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static int rocker_basic_hw_test(struct rocker *rocker)
{
  #line 271 
  struct rocker_wait wait;
  #line 272 
  int err;
  #line 270 
  struct pci_dev *pdev = rocker->pdev;
  #line 274 
  err = rocker_reg_test(rocker);
  #line 275 
  if (err != 0) {
    #line 276 
    _dev_err(& pdev->dev,(char *)"reg test failed\n");
    #line 277 
    return err;
  }
  #line 280 
  err = cif_request_irq(rocker_msix_vector(rocker,2U),& rocker_test_irq_handler,0UL,(char *)(& rocker_driver_name),(void *)(& wait));
  #line 283 
  if (err != 0) {
    #line 284 
    _dev_err(& pdev->dev,(char *)"cannot assign test irq\n");
    #line 285 
    return err;
  }
  #line 288 
  rocker_wait_init(& wait);
  #line 289 
  writel(2U,(void *)(rocker->hw_addr + 32U));
  #line 291 
  if (! rocker_wait_event_timeout(& wait,25UL)) {
    #line 292 
    _dev_err(& pdev->dev,(char *)"no interrupt received within a timeout\n");
    #line 293 
    err = -5;
    #line 294 
    goto free_irq;
  }
  #line 297 
  err = rocker_dma_test(rocker,& wait);
  #line 298 
  if (err != 0) 
                #line 299 
                _dev_err(& pdev->dev,(char *)"dma test failed\n");
  #line 301 
  free_irq: 
            #line 301 
  ;
  #line 302 
  cif_free_irq(rocker_msix_vector(rocker,2U),(void *)(& wait));
  #line 303 
  return err;
}

#line 310  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static u32 __pos_inc(u32 pos, size_t limit)
{
  #line 312 
  u32 tmp;
  #line 312 
  pos ++;
  #line 312 
  ;
  #line 312 
  if ((unsigned long)pos != limit) 
                                   #line 312 
                                   tmp = pos; else 
                                                   #line 312 
                                                   tmp = 0U;
  #line 312 
  return tmp;
}

#line 315  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static int rocker_desc_err(struct rocker_desc_info *desc_info)
{
  #line 317 
  int err = (int)(desc_info->desc)->comp_err & -32769;
  #line 319 
  switch (err) {
    #line 320 
    case 0: 
            #line 320 
    ;
    #line 321 
    return 0;
    #line 322 
    case -2: 
             #line 322 
    ;
    #line 323 
    return -2;
    #line 324 
    case -6: 
             #line 324 
    ;
    #line 325 
    return -6;
    #line 326 
    case -12: 
              #line 326 
    ;
    #line 327 
    return -12;
    #line 328 
    case -17: 
              #line 328 
    ;
    #line 329 
    return -17;
    #line 330 
    case -22: 
              #line 330 
    ;
    #line 331 
    return -22;
    #line 332 
    case -90: 
              #line 332 
    ;
    #line 333 
    return -90;
    #line 334 
    case -95: 
              #line 334 
    ;
    #line 335 
    return -95;
    #line 336 
    case -105: 
               #line 336 
    ;
    #line 337 
    return -105;
  }
  #line 340 
  return -22;
}

#line 343  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static void rocker_desc_gen_clear(struct rocker_desc_info *desc_info)
{
  #line 345 
  (desc_info->desc)->comp_err = (unsigned short)((unsigned int)(desc_info->desc)->comp_err & 32767U);
  #line 346 
  return;
}

#line 348  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static bool rocker_desc_gen(struct rocker_desc_info *desc_info)
{
  #line 350 
  u32 comp_err = (unsigned int)(desc_info->desc)->comp_err;
  #line 352 
  return (_Bool)(((int)((unsigned long)comp_err >> 15) & 1) != 0);
}

#line 356  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static void *rocker_desc_cookie_ptr_get(struct rocker_desc_info *desc_info)
{
  #line 358 
  return (void *)(desc_info->desc)->cookie;
}

#line 361  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static void rocker_desc_cookie_ptr_set(struct rocker_desc_info *desc_info, void *ptr)
{
  #line 364 
  (desc_info->desc)->cookie = (unsigned long long)ptr;
  #line 365 
  return;
}

#line 368  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static struct rocker_desc_info *rocker_desc_head_get(struct rocker_dma_ring_info *info)
{
  #line 370 
  struct rocker_desc_info *desc_info;
  #line 371 
  u32 head = __pos_inc(info->head,info->size);
  #line 373 
  desc_info = info->desc_info + (unsigned long)info->head;
  #line 374 
  if (info->tail == head) 
                          #line 375 
                          return (struct rocker_desc_info *)0;
  #line 376 
  desc_info->tlv_size = 0UL;
  #line 377 
  return desc_info;
}

#line 380  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static void rocker_desc_commit(struct rocker_desc_info *desc_info)
{
  #line 382 
  (desc_info->desc)->buf_size = (unsigned short)desc_info->data_size;
  #line 383 
  (desc_info->desc)->tlv_size = (unsigned short)desc_info->tlv_size;
  #line 384 
  return;
}

#line 386  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static void rocker_desc_head_set(struct rocker *rocker, struct rocker_dma_ring_info *info, struct rocker_desc_info *desc_info)
{
  #line 390 
  u32 head = __pos_inc(info->head,info->size);
  #line 392 
  if ((long)(info->tail == head) != 0L) {
    #line 393 
    ldv_inline_asm();
    #line 394 
    ldv_inline_asm();
    #line 395 
    ldv_inline_asm();
    #line 392 
    ;
  }
  #line 393 
  rocker_desc_commit(desc_info);
  #line 394 
  info->head = head;
  #line 395 
  writel(head,(void *)(rocker->hw_addr + (unsigned long)(info->type * 32U + 4108U)));
  #line 396 
  return;
}

#line 399  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static struct rocker_desc_info *rocker_desc_tail_get(struct rocker_dma_ring_info *info)
{
  #line 401 
  struct rocker_desc_info *desc_info;
  #line 403 
  if (info->tail == info->head) 
                                #line 404 
                                return (struct rocker_desc_info *)0;
  #line 405 
  desc_info = info->desc_info + (unsigned long)info->tail;
  #line 406 
  if (! rocker_desc_gen(desc_info)) 
                                    #line 407 
                                    return (struct rocker_desc_info *)0;
  #line 408 
  info->tail = __pos_inc(info->tail,info->size);
  #line 409 
  desc_info->tlv_size = (unsigned long)(desc_info->desc)->tlv_size;
  #line 410 
  return desc_info;
}

#line 413  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static void rocker_dma_ring_credits_set(struct rocker *rocker, struct rocker_dma_ring_info *info, u32 credits)
{
  #line 417 
  if (credits != 0U) 
                     #line 418 
                     writel(credits,(void *)(rocker->hw_addr + (unsigned long)(info->type * 32U + 4120U)));
  #line 419 
  return;
}

#line 421  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static unsigned long rocker_dma_ring_size_fix(size_t size)
{
  #line 423 
  unsigned long tmp_69;
  #line 423 
  unsigned long __UNIQUE_ID___x537;
  {
    #line 423 
    unsigned long tmp_67;
    #line 423 
    unsigned long __UNIQUE_ID___x535;
    #line 423 
    __UNIQUE_ID___x537 = 2UL;
    {
      #line 423 
      unsigned long tmp_3;
      #line 423 
      unsigned long tmp_4;
      #line 423 
      unsigned long tmp_5;
      #line 423 
      unsigned long tmp_6;
      #line 423 
      unsigned long tmp_7;
      #line 423 
      unsigned long tmp_8;
      #line 423 
      unsigned long tmp_9;
      #line 423 
      unsigned long tmp_10;
      #line 423 
      unsigned long tmp_11;
      #line 423 
      unsigned long tmp_12;
      #line 423 
      unsigned long tmp_13;
      #line 423 
      unsigned long tmp_14;
      #line 423 
      unsigned long tmp_15;
      #line 423 
      unsigned long tmp_16;
      #line 423 
      unsigned long tmp_17;
      #line 423 
      unsigned long tmp_18;
      #line 423 
      unsigned long tmp_19;
      #line 423 
      unsigned long tmp_20;
      #line 423 
      unsigned long tmp_21;
      #line 423 
      unsigned long tmp_22;
      #line 423 
      unsigned long tmp_23;
      #line 423 
      unsigned long tmp_24;
      #line 423 
      unsigned long tmp_25;
      #line 423 
      unsigned long tmp_26;
      #line 423 
      unsigned long tmp_27;
      #line 423 
      unsigned long tmp_28;
      #line 423 
      unsigned long tmp_29;
      #line 423 
      unsigned long tmp_30;
      #line 423 
      unsigned long tmp_31;
      #line 423 
      unsigned long tmp_32;
      #line 423 
      unsigned long tmp_33;
      #line 423 
      unsigned long tmp_34;
      #line 423 
      unsigned long tmp_35;
      #line 423 
      unsigned long tmp_36;
      #line 423 
      unsigned long tmp_37;
      #line 423 
      unsigned long tmp_38;
      #line 423 
      unsigned long tmp_39;
      #line 423 
      unsigned long tmp_40;
      #line 423 
      unsigned long tmp_41;
      #line 423 
      unsigned long tmp_42;
      #line 423 
      unsigned long tmp_43;
      #line 423 
      unsigned long tmp_44;
      #line 423 
      unsigned long tmp_45;
      #line 423 
      unsigned long tmp_46;
      #line 423 
      unsigned long tmp_47;
      #line 423 
      unsigned long tmp_48;
      #line 423 
      unsigned long tmp_49;
      #line 423 
      unsigned long tmp_50;
      #line 423 
      unsigned long tmp_51;
      #line 423 
      unsigned long tmp_52;
      #line 423 
      unsigned long tmp_53;
      #line 423 
      unsigned long tmp_54;
      #line 423 
      unsigned long tmp_55;
      #line 423 
      unsigned long tmp_56;
      #line 423 
      unsigned long tmp_57;
      #line 423 
      unsigned long tmp_58;
      #line 423 
      unsigned long tmp_59;
      #line 423 
      unsigned long tmp_60;
      #line 423 
      unsigned long tmp_61;
      #line 423 
      unsigned long tmp;
      #line 423 
      unsigned long tmp_63;
      #line 423 
      unsigned long tmp_64;
      #line 423 
      unsigned long tmp_0;
      #line 423 
      unsigned long tmp_1;
      #line 423 
      unsigned long tmp_2;
      #line 423 
      unsigned long tmp_66;
      #line 423 
      if (0 != 0) {
        #line 423 
        if (size != 1UL) {
          #line 423 
          if (0 != 0) {
            #line 423 
            if (size + 18446744073709551615UL > 1UL) {
              #line 423 
              if (((unsigned long long)(size + 18446744073709551615UL) & 9223372036854775808ULL) == 0ULL) {
                #line 423 
                if (((unsigned long long)(size + 18446744073709551615UL) & 4611686018427387904ULL) == 0ULL) {
                  #line 423 
                  if (((unsigned long long)(size + 18446744073709551615UL) & 2305843009213693952ULL) == 0ULL) {
                    #line 423 
                    if (((unsigned long long)(size + 18446744073709551615UL) & 1152921504606846976ULL) == 0ULL) {
                      #line 423 
                      if (((unsigned long long)(size + 18446744073709551615UL) & 576460752303423488ULL) == 0ULL) {
                        #line 423 
                        if (((unsigned long long)(size + 18446744073709551615UL) & 288230376151711744ULL) == 0ULL) {
                          #line 423 
                          if (((unsigned long long)(size + 18446744073709551615UL) & 144115188075855872ULL) == 0ULL) {
                            #line 423 
                            if (((unsigned long long)(size + 18446744073709551615UL) & 72057594037927936ULL) == 0ULL) {
                              #line 423 
                              if (((unsigned long long)(size + 18446744073709551615UL) & 36028797018963968ULL) == 0ULL) {
                                #line 423 
                                if (((unsigned long long)(size + 18446744073709551615UL) & 18014398509481984ULL) == 0ULL) {
                                  #line 423 
                                  if (((unsigned long long)(size + 18446744073709551615UL) & 9007199254740992ULL) == 0ULL) {
                                    #line 423 
                                    if (((unsigned long long)(size + 18446744073709551615UL) & 4503599627370496ULL) == 0ULL) {
                                      #line 423 
                                      if (((unsigned long long)(size + 18446744073709551615UL) & 2251799813685248ULL) == 0ULL) {
                                        #line 423 
                                        if (((unsigned long long)(size + 18446744073709551615UL) & 1125899906842624ULL) == 0ULL) {
                                          #line 423 
                                          if (((unsigned long long)(size + 18446744073709551615UL) & 562949953421312ULL) == 0ULL) {
                                            #line 423 
                                            if (((unsigned long long)(size + 18446744073709551615UL) & 281474976710656ULL) == 0ULL) {
                                              #line 423 
                                              if (((unsigned long long)(size + 18446744073709551615UL) & 140737488355328ULL) == 0ULL) {
                                                #line 423 
                                                if (((unsigned long long)(size + 18446744073709551615UL) & 70368744177664ULL) == 0ULL) {
                                                  #line 423 
                                                  if (((unsigned long long)(size + 18446744073709551615UL) & 35184372088832ULL) == 0ULL) {
                                                    #line 423 
                                                    if (((unsigned long long)(size + 18446744073709551615UL) & 17592186044416ULL) == 0ULL) {
                                                      #line 423 
                                                      if (((unsigned long long)(size + 18446744073709551615UL) & 8796093022208ULL) == 0ULL) {
                                                        #line 423 
                                                        if (((unsigned long long)(size + 18446744073709551615UL) & 4398046511104ULL) == 0ULL) {
                                                          #line 423 
                                                          if (((unsigned long long)(size + 18446744073709551615UL) & 2199023255552ULL) == 0ULL) {
                                                            #line 423 
                                                            if (((unsigned long long)(size + 18446744073709551615UL) & 1099511627776ULL) == 0ULL) {
                                                              #line 423 
                                                              if (((unsigned long long)(size + 18446744073709551615UL) & 549755813888ULL) == 0ULL) {
                                                                #line 423 
                                                                if (((unsigned long long)(size + 18446744073709551615UL) & 274877906944ULL) == 0ULL) {
                                                                  #line 423 
                                                                  if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 137438953472ULL) == 0ULL) {
                                                                    #line 423 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 68719476736ULL) == 0ULL) {
                                                                    #line 423 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 34359738368ULL) == 0ULL) {
                                                                    #line 423 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 17179869184ULL) == 0ULL) {
                                                                    #line 423 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 8589934592ULL) == 0ULL) {
                                                                    #line 423 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 4294967296ULL) == 0ULL) {
                                                                    #line 423 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 2147483648ULL) == 0ULL) {
                                                                    #line 423 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 1073741824ULL) == 0ULL) {
                                                                    #line 423 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 536870912ULL) == 0ULL) {
                                                                    #line 423 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 268435456ULL) == 0ULL) {
                                                                    #line 423 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 134217728ULL) == 0ULL) {
                                                                    #line 423 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 67108864ULL) == 0ULL) {
                                                                    #line 423 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 33554432ULL) == 0ULL) {
                                                                    #line 423 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 16777216ULL) == 0ULL) {
                                                                    #line 423 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 8388608ULL) == 0ULL) {
                                                                    #line 423 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 4194304ULL) == 0ULL) {
                                                                    #line 423 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 2097152ULL) == 0ULL) {
                                                                    #line 423 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 1048576ULL) == 0ULL) {
                                                                    #line 423 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 524288ULL) == 0ULL) {
                                                                    #line 423 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 262144ULL) == 0ULL) {
                                                                    #line 423 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 131072ULL) == 0ULL) {
                                                                    #line 423 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 65536ULL) == 0ULL) {
                                                                    #line 423 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 32768ULL) == 0ULL) {
                                                                    #line 423 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 16384ULL) == 0ULL) {
                                                                    #line 423 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 8192ULL) == 0ULL) {
                                                                    #line 423 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 4096ULL) == 0ULL) {
                                                                    #line 423 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 2048ULL) == 0ULL) {
                                                                    #line 423 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 1024ULL) == 0ULL) {
                                                                    #line 423 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 512ULL) == 0ULL) {
                                                                    #line 423 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 256ULL) == 0ULL) {
                                                                    #line 423 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 128ULL) == 0ULL) {
                                                                    #line 423 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 64ULL) == 0ULL) {
                                                                    #line 423 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 32ULL) == 0ULL) {
                                                                    #line 423 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 16ULL) == 0ULL) {
                                                                    #line 423 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 8ULL) == 0ULL) {
                                                                    #line 423 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 4ULL) != 0ULL) 
                                                                    #line 423 
                                                                    tmp = 8UL; else 
                                                                    #line 423 
                                                                    tmp = 4UL;
                                                                    #line 423 
                                                                    tmp_0 = tmp;
                                                                    }
                                                                    else 
                                                                    #line 423 
                                                                    tmp_0 = 16UL;
                                                                    #line 423 
                                                                    tmp_1 = tmp_0;
                                                                    }
                                                                    else 
                                                                    #line 423 
                                                                    tmp_1 = 32UL;
                                                                    #line 423 
                                                                    tmp_2 = tmp_1;
                                                                    }
                                                                    else 
                                                                    #line 423 
                                                                    tmp_2 = 64UL;
                                                                    #line 423 
                                                                    tmp_3 = tmp_2;
                                                                    }
                                                                    else 
                                                                    #line 423 
                                                                    tmp_3 = 128UL;
                                                                    #line 423 
                                                                    tmp_4 = tmp_3;
                                                                    }
                                                                    else 
                                                                    #line 423 
                                                                    tmp_4 = 256UL;
                                                                    #line 423 
                                                                    tmp_5 = tmp_4;
                                                                    }
                                                                    else 
                                                                    #line 423 
                                                                    tmp_5 = 512UL;
                                                                    #line 423 
                                                                    tmp_6 = tmp_5;
                                                                    }
                                                                    else 
                                                                    #line 423 
                                                                    tmp_6 = 1024UL;
                                                                    #line 423 
                                                                    tmp_7 = tmp_6;
                                                                    }
                                                                    else 
                                                                    #line 423 
                                                                    tmp_7 = 2048UL;
                                                                    #line 423 
                                                                    tmp_8 = tmp_7;
                                                                    }
                                                                    else 
                                                                    #line 423 
                                                                    tmp_8 = 4096UL;
                                                                    #line 423 
                                                                    tmp_9 = tmp_8;
                                                                    }
                                                                    else 
                                                                    #line 423 
                                                                    tmp_9 = 8192UL;
                                                                    #line 423 
                                                                    tmp_10 = tmp_9;
                                                                    }
                                                                    else 
                                                                    #line 423 
                                                                    tmp_10 = 16384UL;
                                                                    #line 423 
                                                                    tmp_11 = tmp_10;
                                                                    }
                                                                    else 
                                                                    #line 423 
                                                                    tmp_11 = 32768UL;
                                                                    #line 423 
                                                                    tmp_12 = tmp_11;
                                                                    }
                                                                    else 
                                                                    #line 423 
                                                                    tmp_12 = 65536UL;
                                                                    #line 423 
                                                                    tmp_13 = tmp_12;
                                                                    }
                                                                    else 
                                                                    #line 423 
                                                                    tmp_13 = 131072UL;
                                                                    #line 423 
                                                                    tmp_14 = tmp_13;
                                                                    }
                                                                    else 
                                                                    #line 423 
                                                                    tmp_14 = 262144UL;
                                                                    #line 423 
                                                                    tmp_15 = tmp_14;
                                                                    }
                                                                    else 
                                                                    #line 423 
                                                                    tmp_15 = 524288UL;
                                                                    #line 423 
                                                                    tmp_16 = tmp_15;
                                                                    }
                                                                    else 
                                                                    #line 423 
                                                                    tmp_16 = 1048576UL;
                                                                    #line 423 
                                                                    tmp_17 = tmp_16;
                                                                    }
                                                                    else 
                                                                    #line 423 
                                                                    tmp_17 = 2097152UL;
                                                                    #line 423 
                                                                    tmp_18 = tmp_17;
                                                                    }
                                                                    else 
                                                                    #line 423 
                                                                    tmp_18 = 4194304UL;
                                                                    #line 423 
                                                                    tmp_19 = tmp_18;
                                                                    }
                                                                    else 
                                                                    #line 423 
                                                                    tmp_19 = 8388608UL;
                                                                    #line 423 
                                                                    tmp_20 = tmp_19;
                                                                    }
                                                                    else 
                                                                    #line 423 
                                                                    tmp_20 = 16777216UL;
                                                                    #line 423 
                                                                    tmp_21 = tmp_20;
                                                                    }
                                                                    else 
                                                                    #line 423 
                                                                    tmp_21 = 33554432UL;
                                                                    #line 423 
                                                                    tmp_22 = tmp_21;
                                                                    }
                                                                    else 
                                                                    #line 423 
                                                                    tmp_22 = 67108864UL;
                                                                    #line 423 
                                                                    tmp_23 = tmp_22;
                                                                    }
                                                                    else 
                                                                    #line 423 
                                                                    tmp_23 = 134217728UL;
                                                                    #line 423 
                                                                    tmp_24 = tmp_23;
                                                                    }
                                                                    else 
                                                                    #line 423 
                                                                    tmp_24 = 268435456UL;
                                                                    #line 423 
                                                                    tmp_25 = tmp_24;
                                                                    }
                                                                    else 
                                                                    #line 423 
                                                                    tmp_25 = 536870912UL;
                                                                    #line 423 
                                                                    tmp_26 = tmp_25;
                                                                    }
                                                                    else 
                                                                    #line 423 
                                                                    tmp_26 = 1073741824UL;
                                                                    #line 423 
                                                                    tmp_27 = tmp_26;
                                                                    }
                                                                    else 
                                                                    #line 423 
                                                                    tmp_27 = 2147483648UL;
                                                                    #line 423 
                                                                    tmp_28 = tmp_27;
                                                                    }
                                                                    else 
                                                                    #line 423 
                                                                    tmp_28 = 4294967296UL;
                                                                    #line 423 
                                                                    tmp_29 = tmp_28;
                                                                    }
                                                                    else 
                                                                    #line 423 
                                                                    tmp_29 = 8589934592UL;
                                                                    #line 423 
                                                                    tmp_30 = tmp_29;
                                                                    }
                                                                    else 
                                                                    #line 423 
                                                                    tmp_30 = 17179869184UL;
                                                                    #line 423 
                                                                    tmp_31 = tmp_30;
                                                                    }
                                                                    else 
                                                                    #line 423 
                                                                    tmp_31 = 34359738368UL;
                                                                    #line 423 
                                                                    tmp_32 = tmp_31;
                                                                    }
                                                                    else 
                                                                    #line 423 
                                                                    tmp_32 = 68719476736UL;
                                                                    #line 423 
                                                                    tmp_33 = tmp_32;
                                                                    }
                                                                    else 
                                                                    #line 423 
                                                                    tmp_33 = 137438953472UL;
                                                                    #line 423 
                                                                    tmp_34 = tmp_33;
                                                                  }
                                                                  else 
                                                                    #line 423 
                                                                    tmp_34 = 274877906944UL;
                                                                  #line 423 
                                                                  tmp_35 = tmp_34;
                                                                }
                                                                else 
                                                                  #line 423 
                                                                  tmp_35 = 549755813888UL;
                                                                #line 423 
                                                                tmp_36 = tmp_35;
                                                              }
                                                              else 
                                                                   #line 423 
                                                                   tmp_36 = 1099511627776UL;
                                                              #line 423 
                                                              tmp_37 = tmp_36;
                                                            }
                                                            else 
                                                                 #line 423 
                                                                 tmp_37 = 2199023255552UL;
                                                            #line 423 
                                                            tmp_38 = tmp_37;
                                                          }
                                                          else 
                                                               #line 423 
                                                               tmp_38 = 4398046511104UL;
                                                          #line 423 
                                                          tmp_39 = tmp_38;
                                                        }
                                                        else 
                                                             #line 423 
                                                             tmp_39 = 8796093022208UL;
                                                        #line 423 
                                                        tmp_40 = tmp_39;
                                                      }
                                                      else 
                                                           #line 423 
                                                           tmp_40 = 17592186044416UL;
                                                      #line 423 
                                                      tmp_41 = tmp_40;
                                                    }
                                                    else 
                                                         #line 423 
                                                         tmp_41 = 35184372088832UL;
                                                    #line 423 
                                                    tmp_42 = tmp_41;
                                                  }
                                                  else 
                                                       #line 423 
                                                       tmp_42 = 70368744177664UL;
                                                  #line 423 
                                                  tmp_43 = tmp_42;
                                                }
                                                else 
                                                     #line 423 
                                                     tmp_43 = 140737488355328UL;
                                                #line 423 
                                                tmp_44 = tmp_43;
                                              }
                                              else 
                                                   #line 423 
                                                   tmp_44 = 281474976710656UL;
                                              #line 423 
                                              tmp_45 = tmp_44;
                                            }
                                            else 
                                                 #line 423 
                                                 tmp_45 = 562949953421312UL;
                                            #line 423 
                                            tmp_46 = tmp_45;
                                          }
                                          else 
                                               #line 423 
                                               tmp_46 = 1125899906842624UL;
                                          #line 423 
                                          tmp_47 = tmp_46;
                                        }
                                        else 
                                             #line 423 
                                             tmp_47 = 2251799813685248UL;
                                        #line 423 
                                        tmp_48 = tmp_47;
                                      }
                                      else 
                                           #line 423 
                                           tmp_48 = 4503599627370496UL;
                                      #line 423 
                                      tmp_49 = tmp_48;
                                    }
                                    else 
                                         #line 423 
                                         tmp_49 = 9007199254740992UL;
                                    #line 423 
                                    tmp_50 = tmp_49;
                                  }
                                  else 
                                       #line 423 
                                       tmp_50 = 18014398509481984UL;
                                  #line 423 
                                  tmp_51 = tmp_50;
                                }
                                else 
                                     #line 423 
                                     tmp_51 = 36028797018963968UL;
                                #line 423 
                                tmp_52 = tmp_51;
                              }
                              else 
                                   #line 423 
                                   tmp_52 = 72057594037927936UL;
                              #line 423 
                              tmp_53 = tmp_52;
                            }
                            else 
                                 #line 423 
                                 tmp_53 = 144115188075855872UL;
                            #line 423 
                            tmp_54 = tmp_53;
                          }
                          else 
                               #line 423 
                               tmp_54 = 288230376151711744UL;
                          #line 423 
                          tmp_55 = tmp_54;
                        }
                        else 
                             #line 423 
                             tmp_55 = 576460752303423488UL;
                        #line 423 
                        tmp_56 = tmp_55;
                      }
                      else 
                           #line 423 
                           tmp_56 = 1152921504606846976UL;
                      #line 423 
                      tmp_57 = tmp_56;
                    }
                    else 
                         #line 423 
                         tmp_57 = 2305843009213693952UL;
                    #line 423 
                    tmp_58 = tmp_57;
                  }
                  else 
                       #line 423 
                       tmp_58 = 4611686018427387904UL;
                  #line 423 
                  tmp_59 = tmp_58;
                }
                else 
                     #line 423 
                     tmp_59 = 9223372036854775808UL;
                #line 423 
                tmp_60 = tmp_59;
              }
              else 
                   #line 423 
                   tmp_60 = 0UL;
              #line 423 
              tmp_61 = tmp_60;
            }
            else 
                 #line 423 
                 tmp_61 = 2UL;
            #line 423 
            tmp_63 = tmp_61;
          }
          else {
            #line 423 
            tmp_63 = 1UL << (__ilog2_u64((unsigned long long)(size + 18446744073709551615UL)) + 1);
          }
          #line 423 
          tmp_64 = tmp_63;
        }
        else 
             #line 423 
             tmp_64 = 1UL;
        #line 423 
        tmp_66 = tmp_64;
      }
      else 
           #line 423 
           tmp_66 = __roundup_pow_of_two(size);
      #line 423 
      __UNIQUE_ID___x535 = tmp_66;
      #line 423 
      unsigned long __UNIQUE_ID___y536 = 65536UL;
      #line 423 
      if (__UNIQUE_ID___x535 < __UNIQUE_ID___y536) 
                                                   #line 423 
                                                   tmp_67 = __UNIQUE_ID___x535; else 
                                                                    #line 423 
                                                                    tmp_67 = __UNIQUE_ID___y536;
      }
    #line 423 
    unsigned long __UNIQUE_ID___y538 = tmp_67;
    #line 423 
    if (__UNIQUE_ID___x537 > __UNIQUE_ID___y538) 
                                                 #line 423 
                                                 tmp_69 = __UNIQUE_ID___x537; else 
                                                                    #line 423 
                                                                    tmp_69 = __UNIQUE_ID___y538;
    }
  #line 423 
  return tmp_69;
}

#line 427  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static int rocker_dma_ring_create(struct rocker *rocker, unsigned int type, size_t size, struct rocker_dma_ring_info *info)
{
  #line 432 
  int i;
  #line 434 
  ;
  #line 434 
  if ((long)(rocker_dma_ring_size_fix(size) != size) != 0L) {
    #line 435 
    ldv_inline_asm();
    #line 436 
    ldv_inline_asm();
    #line 437 
    ldv_inline_asm();
    #line 434 
    ;
  }
  #line 435 
  info->size = size;
  #line 436 
  info->type = type;
  #line 437 
  info->head = 0U;
  #line 438 
  info->tail = 0U;
  #line 439 
  info->desc_info = (struct rocker_desc_info *)kcalloc_0(info->size,40UL,3264U);
  #line 441 
  if (info->desc_info == (struct rocker_desc_info *)0) 
                                                       #line 442 
                                                       return -12;
  #line 444 
  info->desc = (struct rocker_desc *)pci_alloc_consistent(rocker->pdev,info->size * 32UL,& info->mapaddr);
  #line 447 
  if (info->desc == (struct rocker_desc *)0) {
    #line 448 
    kfree((void *)info->desc_info);
    #line 449 
    return -12;
  }
  #line 452 
  i = 0;
  #line 452 
  while ((unsigned long)i < info->size) {
    #line 453 
    (info->desc_info + (unsigned long)i)->desc = info->desc + (unsigned long)i;
    #line 452 
    i ++;
  }
  #line 455 
  writel(1U,(void *)(rocker->hw_addr + (unsigned long)(info->type * 32U + 4116U)));
  #line 457 
  writeq(info->mapaddr,(void *)(rocker->hw_addr + (unsigned long)((info->type + 128U) * 32U)));
  #line 458 
  writel((unsigned int)info->size,(void *)(rocker->hw_addr + (unsigned long)(info->type * 32U + 4104U)));
  #line 460 
  return 0;
}

#line 463  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static void rocker_dma_ring_destroy(struct rocker *rocker, struct rocker_dma_ring_info *info)
{
  #line 466 
  writeq(0ULL,(void *)(rocker->hw_addr + (unsigned long)((info->type + 128U) * 32U)));
  #line 468 
  pci_free_consistent(rocker->pdev,info->size * 32UL,(void *)info->desc,info->mapaddr);
  #line 471 
  kfree((void *)info->desc_info);
  #line 472 
  return;
}

#line 474  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static void rocker_dma_ring_pass_to_producer(struct rocker *rocker, struct rocker_dma_ring_info *info)
{
  #line 477 
  int i;
  #line 479 
  if ((long)(info->head != 0U) != 0L || (long)(info->tail != 0U) != 0L) {
    #line 480 
    ldv_inline_asm();
    #line 481 
    ldv_inline_asm();
    #line 482 
    ldv_inline_asm();
    #line 479 
    ;
  }
  #line 484 
  i = 0;
  #line 484 
  while ((unsigned long)i < info->size + 18446744073709551615UL) {
    #line 485 
    rocker_desc_head_set(rocker,info,info->desc_info + (unsigned long)i);
    #line 484 
    i ++;
  }
  #line 486 
  rocker_desc_commit(info->desc_info + (unsigned long)i);
  #line 487 
  return;
}

#line 489  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static int rocker_dma_ring_bufs_alloc(struct rocker *rocker, struct rocker_dma_ring_info *info, int direction, size_t buf_size)
{
  #line 494 
  int i;
  #line 495 
  int err;
  #line 493 
  struct pci_dev *pdev = rocker->pdev;
  #line 497 
  i = 0;
  #line 497 
  while ((unsigned long)i < info->size) {
    {
      #line 500 
      dma_addr_t dma_handle;
      #line 501 
      char *buf;
      #line 498 
      struct rocker_desc_info *desc_info = info->desc_info + (unsigned long)i;
      #line 499 
      struct rocker_desc *desc = info->desc + (unsigned long)i;
      #line 503 
      buf = (char *)kzalloc_0(buf_size,3265U);
      #line 504 
      if (buf == (char *)0) {
        #line 505 
        err = -12;
        #line 506 
        goto rollback;
      }
      #line 509 
      dma_handle = pci_map_single(pdev,(void *)buf,buf_size,direction);
      #line 510 
      if (pci_dma_mapping_error(pdev,dma_handle) != 0) {
        #line 511 
        kfree((void *)buf);
        #line 512 
        err = -5;
        #line 513 
        goto rollback;
      }
      #line 516 
      desc_info->data = buf;
      #line 517 
      desc_info->data_size = buf_size;
      #line 518 
      desc_info->mapaddr = dma_handle;
      #line 520 
      desc->buf_addr = dma_handle;
      #line 521 
      desc->buf_size = (unsigned short)buf_size;
    }
    #line 497 
    i ++;
  }
  #line 523 
  return 0;
  #line 525 
  rollback: 
            #line 525 
  ;
  #line 526 
  i --;
  #line 526 
  while (i >= 0) {
    {
      #line 527 
      struct rocker_desc_info *desc_info_0 = info->desc_info + (unsigned long)i;
      #line 529 
      pci_unmap_single(pdev,desc_info_0->mapaddr,desc_info_0->data_size,direction);
      #line 531 
      kfree((void *)desc_info_0->data);
    }
    #line 526 
    i --;
  }
  #line 533 
  return err;
}

#line 536  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static void rocker_dma_ring_bufs_free(struct rocker *rocker, struct rocker_dma_ring_info *info, int direction)
{
  #line 541 
  int i;
  #line 540 
  struct pci_dev *pdev = rocker->pdev;
  #line 543 
  i = 0;
  #line 543 
  while ((unsigned long)i < info->size) {
    {
      #line 544 
      struct rocker_desc_info *desc_info = info->desc_info + (unsigned long)i;
      #line 545 
      struct rocker_desc *desc = info->desc + (unsigned long)i;
      #line 547 
      desc->buf_addr = 0ULL;
      #line 548 
      desc->buf_size = (unsigned short)0U;
      #line 549 
      pci_unmap_single(pdev,desc_info->mapaddr,desc_info->data_size,direction);
      #line 551 
      kfree((void *)desc_info->data);
    }
    #line 543 
    i ++;
  }
  #line 553 
  return;
}

#line 555  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static int rocker_dma_cmd_ring_wait_alloc(struct rocker_desc_info *desc_info)
{
  #line 557 
  struct rocker_wait *wait;
  #line 559 
  wait = rocker_wait_create();
  #line 560 
  if (wait == (struct rocker_wait *)0) 
                                       #line 561 
                                       return -12;
  #line 562 
  rocker_desc_cookie_ptr_set(desc_info,(void *)wait);
  #line 563 
  return 0;
}

#line 567  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static void rocker_dma_cmd_ring_wait_free(struct rocker_desc_info *desc_info)
{
  #line 569 
  struct rocker_wait *wait = rocker_desc_cookie_ptr_get(desc_info);
  #line 571 
  rocker_wait_destroy(wait);
  #line 572 
  return;
}

#line 574  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static int rocker_dma_cmd_ring_waits_alloc(struct rocker *rocker)
{
  #line 577 
  int i;
  #line 578 
  int err;
  #line 576 
  struct rocker_dma_ring_info *cmd_ring = & rocker->cmd_ring;
  #line 580 
  i = 0;
  #line 580 
  while ((unsigned long)i < cmd_ring->size) {
    #line 581 
    err = rocker_dma_cmd_ring_wait_alloc(cmd_ring->desc_info + (unsigned long)i);
    #line 582 
    if (err != 0) 
                  #line 583 
                  goto rollback;
    #line 580 
    i ++;
  }
  #line 585 
  return 0;
  #line 587 
  rollback: 
            #line 587 
  ;
  #line 588 
  i --;
  #line 588 
  while (i >= 0) {
    #line 589 
    rocker_dma_cmd_ring_wait_free(cmd_ring->desc_info + (unsigned long)i);
    #line 588 
    i --;
  }
  #line 590 
  return err;
}

#line 593  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static void rocker_dma_cmd_ring_waits_free(struct rocker *rocker)
{
  #line 596 
  int i;
  #line 595 
  struct rocker_dma_ring_info *cmd_ring = & rocker->cmd_ring;
  #line 598 
  i = 0;
  #line 598 
  while ((unsigned long)i < cmd_ring->size) {
    #line 599 
    rocker_dma_cmd_ring_wait_free(cmd_ring->desc_info + (unsigned long)i);
    #line 598 
    i ++;
  }
  #line 600 
  return;
}

#line 602  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static int rocker_dma_rings_init(struct rocker *rocker)
{
  #line 605 
  int err;
  #line 604 
  struct pci_dev *pdev = rocker->pdev;
  #line 607 
  err = rocker_dma_ring_create(rocker,0U,32UL,& rocker->cmd_ring);
  #line 610 
  if (err != 0) {
    #line 611 
    _dev_err(& pdev->dev,(char *)"failed to create command dma ring\n");
    #line 612 
    return err;
  }
  #line 615 
  spinlock_check(& rocker->cmd_ring_lock);
  {
    #line 615 
    struct lock_class_key __key;
    #line 615 
    __raw_spin_lock_init(& rocker->cmd_ring_lock.__anonCompField_spinlock_25.rlock,(char *)"&(&rocker->cmd_ring_lock)->rlock",& __key);
  }
  #line 617 
  err = rocker_dma_ring_bufs_alloc(rocker,& rocker->cmd_ring,0,4096UL);
  #line 619 
  if (err != 0) {
    #line 620 
    _dev_err(& pdev->dev,(char *)"failed to alloc command dma ring buffers\n");
    #line 621 
    goto err_dma_cmd_ring_bufs_alloc;
  }
  #line 624 
  err = rocker_dma_cmd_ring_waits_alloc(rocker);
  #line 625 
  if (err != 0) {
    #line 626 
    _dev_err(& pdev->dev,(char *)"failed to alloc command dma ring waits\n");
    #line 627 
    goto err_dma_cmd_ring_waits_alloc;
  }
  #line 630 
  err = rocker_dma_ring_create(rocker,1U,32UL,& rocker->event_ring);
  #line 633 
  if (err != 0) {
    #line 634 
    _dev_err(& pdev->dev,(char *)"failed to create event dma ring\n");
    #line 635 
    goto err_dma_event_ring_create;
  }
  #line 638 
  err = rocker_dma_ring_bufs_alloc(rocker,& rocker->event_ring,2,4096UL);
  #line 640 
  if (err != 0) {
    #line 641 
    _dev_err(& pdev->dev,(char *)"failed to alloc event dma ring buffers\n");
    #line 642 
    goto err_dma_event_ring_bufs_alloc;
  }
  #line 644 
  rocker_dma_ring_pass_to_producer(rocker,& rocker->event_ring);
  #line 645 
  return 0;
  #line 647 
  err_dma_event_ring_bufs_alloc: 
                                 #line 647 
  ;
  #line 648 
  rocker_dma_ring_destroy(rocker,& rocker->event_ring);
  #line 649 
  err_dma_event_ring_create: 
                             #line 649 
  ;
  #line 650 
  rocker_dma_ring_bufs_free(rocker,& rocker->cmd_ring,0);
  #line 652 
  err_dma_cmd_ring_waits_alloc: 
                                #line 652 
  ;
  #line 653 
  rocker_dma_cmd_ring_waits_free(rocker);
  #line 654 
  err_dma_cmd_ring_bufs_alloc: 
                               #line 654 
  ;
  #line 655 
  rocker_dma_ring_destroy(rocker,& rocker->cmd_ring);
  #line 656 
  return err;
}

#line 659  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static void rocker_dma_rings_fini(struct rocker *rocker)
{
  #line 661 
  rocker_dma_ring_bufs_free(rocker,& rocker->event_ring,0);
  #line 663 
  rocker_dma_ring_destroy(rocker,& rocker->event_ring);
  #line 664 
  rocker_dma_cmd_ring_waits_free(rocker);
  #line 665 
  rocker_dma_ring_bufs_free(rocker,& rocker->cmd_ring,0);
  #line 667 
  rocker_dma_ring_destroy(rocker,& rocker->cmd_ring);
  #line 668 
  return;
}

#line 670  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static int rocker_dma_rx_ring_skb_map(struct rocker_port *rocker_port, struct rocker_desc_info *desc_info, struct sk_buff *skb, size_t buf_len)
{
  #line 676 
  dma_addr_t dma_handle;
  #line 674 
  struct rocker *rocker = rocker_port->rocker;
  #line 675 
  struct pci_dev *pdev = rocker->pdev;
  #line 678 
  dma_handle = pci_map_single(pdev,(void *)skb->data,buf_len,2);
  #line 680 
  if (pci_dma_mapping_error(pdev,dma_handle) != 0) 
                                                   #line 681 
                                                   return -5;
  #line 682 
  if (rocker_tlv_put_u64(desc_info,3,dma_handle) != 0) 
                                                       #line 683 
                                                       goto tlv_put_failure;
  #line 684 
  if (rocker_tlv_put_u16(desc_info,4,
                           (unsigned short)((int)((unsigned short)buf_len))) != 0) 
    #line 685 
    goto tlv_put_failure;
  #line 686 
  return 0;
  #line 688 
  tlv_put_failure: 
                   #line 688 
  ;
  #line 689 
  pci_unmap_single(pdev,dma_handle,buf_len,2);
  #line 690 
  desc_info->tlv_size = 0UL;
  #line 691 
  return -90;
}

#line 694  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static size_t rocker_port_rx_buf_len(struct rocker_port *rocker_port)
{
  #line 696 
  return (unsigned long)((rocker_port->dev)->mtu + 22U);
}

#line 699  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static int rocker_dma_rx_ring_skb_alloc(struct rocker_port *rocker_port, struct rocker_desc_info *desc_info)
{
  #line 703 
  struct sk_buff *skb;
  #line 705 
  int err;
  #line 702 
  struct net_device *dev = rocker_port->dev;
  #line 704 
  size_t buf_len = rocker_port_rx_buf_len(rocker_port);
  #line 710 
  rocker_desc_cookie_ptr_set(desc_info,(void *)0);
  #line 711 
  desc_info->tlv_size = 0UL;
  #line 713 
  skb = netdev_alloc_skb_ip_align(dev,(unsigned int)buf_len);
  #line 714 
  if (skb == (struct sk_buff *)0) 
                                  #line 715 
                                  return -12;
  #line 716 
  err = rocker_dma_rx_ring_skb_map(rocker_port,desc_info,skb,buf_len);
  #line 717 
  if (err != 0) {
    #line 718 
    dev_kfree_skb_any(skb);
    #line 719 
    return err;
  }
  #line 721 
  rocker_desc_cookie_ptr_set(desc_info,(void *)skb);
  #line 722 
  return 0;
}

#line 725  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static void rocker_dma_rx_ring_skb_unmap(struct rocker *rocker, struct rocker_tlv **attrs)
{
  #line 729 
  dma_addr_t dma_handle;
  #line 730 
  size_t len;
  #line 728 
  struct pci_dev *pdev = rocker->pdev;
  #line 732 
  if (*(attrs + 3U) == (struct rocker_tlv *)0 || *(attrs + 4U) == (struct rocker_tlv *)0) 
    #line 734 
    return;
  #line 735 
  dma_handle = rocker_tlv_get_u64(*(attrs + 3U));
  #line 736 
  len = (unsigned long)rocker_tlv_get_u16(*(attrs + 4U));
  #line 737 
  pci_unmap_single(pdev,dma_handle,len,2);
  #line 738 
  return;
}

#line 740  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static void rocker_dma_rx_ring_skb_free(struct rocker *rocker, struct rocker_desc_info *desc_info)
{
  #line 743 
  struct rocker_tlv *attrs[6U];
  #line 744 
  struct sk_buff *skb = rocker_desc_cookie_ptr_get(desc_info);
  #line 746 
  if (skb == (struct sk_buff *)0) 
                                  #line 747 
                                  return;
  #line 748 
  rocker_tlv_parse_desc((struct rocker_tlv **)(& attrs),5,desc_info);
  #line 749 
  rocker_dma_rx_ring_skb_unmap(rocker,(struct rocker_tlv **)(& attrs));
  #line 750 
  dev_kfree_skb_any(skb);
  #line 751 
  return;
}

#line 753  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static int rocker_dma_rx_ring_skbs_alloc(struct rocker_port *rocker_port)
{
  #line 757 
  int i;
  #line 758 
  int err;
  #line 755 
  struct rocker_dma_ring_info *rx_ring = & rocker_port->rx_ring;
  #line 756 
  struct rocker *rocker = rocker_port->rocker;
  #line 760 
  i = 0;
  #line 760 
  while ((unsigned long)i < rx_ring->size) {
    #line 761 
    err = rocker_dma_rx_ring_skb_alloc(rocker_port,rx_ring->desc_info + (unsigned long)i);
    #line 763 
    if (err != 0) 
                  #line 764 
                  goto rollback;
    #line 760 
    i ++;
  }
  #line 766 
  return 0;
  #line 768 
  rollback: 
            #line 768 
  ;
  #line 769 
  i --;
  #line 769 
  while (i >= 0) {
    #line 770 
    rocker_dma_rx_ring_skb_free(rocker,rx_ring->desc_info + (unsigned long)i);
    #line 769 
    i --;
  }
  #line 771 
  return err;
}

#line 774  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static void rocker_dma_rx_ring_skbs_free(struct rocker_port *rocker_port)
{
  #line 778 
  int i;
  #line 776 
  struct rocker_dma_ring_info *rx_ring = & rocker_port->rx_ring;
  #line 777 
  struct rocker *rocker = rocker_port->rocker;
  #line 780 
  i = 0;
  #line 780 
  while ((unsigned long)i < rx_ring->size) {
    #line 781 
    rocker_dma_rx_ring_skb_free(rocker,rx_ring->desc_info + (unsigned long)i);
    #line 780 
    i ++;
  }
  #line 782 
  return;
}

#line 784  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static int rocker_port_dma_rings_init(struct rocker_port *rocker_port)
{
  #line 787 
  int err;
  #line 786 
  struct rocker *rocker = rocker_port->rocker;
  #line 789 
  err = rocker_dma_ring_create(rocker,(rocker_port->port_number + 1U) * 2U,64UL,& rocker_port->tx_ring);
  #line 793 
  if (err != 0) {
    #line 794 
    netdev_err(rocker_port->dev,(char *)"failed to create tx dma ring\n");
    #line 795 
    return err;
  }
  #line 798 
  err = rocker_dma_ring_bufs_alloc(rocker,& rocker_port->tx_ring,1,256UL);
  #line 801 
  if (err != 0) {
    #line 802 
    netdev_err(rocker_port->dev,(char *)"failed to alloc tx dma ring buffers\n");
    #line 803 
    goto err_dma_tx_ring_bufs_alloc;
  }
  #line 806 
  err = rocker_dma_ring_create(rocker,rocker_port->port_number * 2U + 3U,64UL,& rocker_port->rx_ring);
  #line 810 
  if (err != 0) {
    #line 811 
    netdev_err(rocker_port->dev,(char *)"failed to create rx dma ring\n");
    #line 812 
    goto err_dma_rx_ring_create;
  }
  #line 815 
  err = rocker_dma_ring_bufs_alloc(rocker,& rocker_port->rx_ring,0,256UL);
  #line 818 
  if (err != 0) {
    #line 819 
    netdev_err(rocker_port->dev,(char *)"failed to alloc rx dma ring buffers\n");
    #line 820 
    goto err_dma_rx_ring_bufs_alloc;
  }
  #line 823 
  err = rocker_dma_rx_ring_skbs_alloc(rocker_port);
  #line 824 
  if (err != 0) {
    #line 825 
    netdev_err(rocker_port->dev,(char *)"failed to alloc rx dma ring skbs\n");
    #line 826 
    goto err_dma_rx_ring_skbs_alloc;
  }
  #line 828 
  rocker_dma_ring_pass_to_producer(rocker,& rocker_port->rx_ring);
  #line 830 
  return 0;
  #line 832 
  err_dma_rx_ring_skbs_alloc: 
                              #line 832 
  ;
  #line 833 
  rocker_dma_ring_bufs_free(rocker,& rocker_port->rx_ring,0);
  #line 835 
  err_dma_rx_ring_bufs_alloc: 
                              #line 835 
  ;
  #line 836 
  rocker_dma_ring_destroy(rocker,& rocker_port->rx_ring);
  #line 837 
  err_dma_rx_ring_create: 
                          #line 837 
  ;
  #line 838 
  rocker_dma_ring_bufs_free(rocker,& rocker_port->tx_ring,1);
  #line 840 
  err_dma_tx_ring_bufs_alloc: 
                              #line 840 
  ;
  #line 841 
  rocker_dma_ring_destroy(rocker,& rocker_port->tx_ring);
  #line 842 
  return err;
}

#line 845  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static void rocker_port_dma_rings_fini(struct rocker_port *rocker_port)
{
  #line 847 
  struct rocker *rocker = rocker_port->rocker;
  #line 849 
  rocker_dma_rx_ring_skbs_free(rocker_port);
  #line 850 
  rocker_dma_ring_bufs_free(rocker,& rocker_port->rx_ring,0);
  #line 852 
  rocker_dma_ring_destroy(rocker,& rocker_port->rx_ring);
  #line 853 
  rocker_dma_ring_bufs_free(rocker,& rocker_port->tx_ring,1);
  #line 855 
  rocker_dma_ring_destroy(rocker,& rocker_port->tx_ring);
  #line 856 
  return;
}

#line 858  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static void rocker_port_set_enable(struct rocker_port *rocker_port, bool enable)
{
  #line 861 
  u64 val = readq((void *)((rocker_port->rocker)->hw_addr + 792U));
  #line 863 
  if ((int)enable != 0) 
                        #line 864 
                        val = (1ULL << rocker_port->pport) | val; else 
                                                                    #line 866 
                                                                    val = ~ (1ULL << rocker_port->pport) & val;
  #line 867 
  writeq(val,(void *)((rocker_port->rocker)->hw_addr + 792U));
  #line 868 
  return;
}

#line 874  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static irqreturn_t rocker_cmd_irq_handler(int irq, void *dev_id)
{
  #line 877 
  struct rocker_desc_info *desc_info;
  #line 878 
  struct rocker_wait *wait;
  #line 876 
  struct rocker *rocker = (struct rocker *)dev_id;
  #line 879 
  u32 credits = 0U;
  #line 881 
  cif_spin_lock_cmd_ring_lock_of_rocker(& rocker->cmd_ring_lock);
  #line 882 
  while (1) {
    #line 882 
    desc_info = rocker_desc_tail_get(& rocker->cmd_ring);
    #line 882 
    if (! (desc_info != (struct rocker_desc_info *)0)) 
                                                       #line 882 
                                                       break;
    #line 883 
    wait = (struct rocker_wait *)rocker_desc_cookie_ptr_get(desc_info);
    #line 884 
    if ((int)wait->nowait != 0) 
                                #line 885 
                                rocker_desc_gen_clear(desc_info); else 
                                                                    #line 887 
                                                                    rocker_wait_wake_up(wait);
    #line 889 
    credits ++;
  }
  #line 891 
  cif_spin_unlock_cmd_ring_lock_of_rocker(& rocker->cmd_ring_lock);
  #line 892 
  rocker_dma_ring_credits_set(rocker,& rocker->cmd_ring,credits);
  #line 894 
  return IRQ_HANDLED;
}

#line 897  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static void rocker_port_link_up(struct rocker_port *rocker_port)
{
  #line 899 
  netif_carrier_on(rocker_port->dev);
  #line 900 
  netdev_info(rocker_port->dev,(char *)"Link is up\n");
  #line 901 
  return;
}

#line 903  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static void rocker_port_link_down(struct rocker_port *rocker_port)
{
  #line 905 
  netif_carrier_off(rocker_port->dev);
  #line 906 
  netdev_info(rocker_port->dev,(char *)"Link is down\n");
  #line 907 
  return;
}

#line 909  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static int rocker_event_link_change(struct rocker *rocker, struct rocker_tlv *info)
{
  #line 912 
  struct rocker_tlv *attrs[3U];
  #line 913 
  unsigned int port_number;
  #line 914 
  bool link_up;
  #line 915 
  struct rocker_port *rocker_port;
  #line 917 
  rocker_tlv_parse_nested((struct rocker_tlv **)(& attrs),2,info);
  #line 918 
  if (attrs[1] == (struct rocker_tlv *)0 || attrs[2] == (struct rocker_tlv *)0) 
    #line 920 
    return -5;
  #line 921 
  port_number = rocker_tlv_get_u32(attrs[1]) + 4294967295U;
  #line 923 
  link_up = (_Bool)((unsigned int)rocker_tlv_get_u8(attrs[2]) != 0U);
  #line 925 
  if (rocker->port_count <= port_number) 
                                         #line 926 
                                         return -22;
  #line 928 
  rocker_port = *(rocker->ports + (unsigned long)port_number);
  #line 929 
  ;
  #line 929 
  if ((int)netif_carrier_ok(rocker_port->dev) != (int)link_up) 
    #line 930 
    if ((int)link_up != 0) 
                           #line 931 
                           rocker_port_link_up(rocker_port); else 
                                                                  #line 933 
                                                                  rocker_port_link_down(rocker_port);
  #line 936 
  return 0;
}

#line 939 
#line 1729 
static int rocker_world_port_ev_mac_vlan_seen(struct rocker_port *rocker_port, unsigned char *addr, __be16 vlan_id);
#line 943  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static int rocker_event_mac_vlan_seen(struct rocker *rocker, struct rocker_tlv *info)
{
  #line 946 
  struct rocker_tlv *attrs[4U];
  #line 947 
  unsigned int port_number;
  #line 948 
  struct rocker_port *rocker_port;
  #line 949 
  unsigned char *addr;
  #line 950 
  __be16 vlan_id;
  #line 952 
  rocker_tlv_parse_nested((struct rocker_tlv **)(& attrs),3,info);
  #line 953 
  if ((attrs[1] == (struct rocker_tlv *)0 || attrs[2] == (struct rocker_tlv *)0) || attrs[3] == (struct rocker_tlv *)0) 
    #line 956 
    return -5;
  #line 957 
  port_number = rocker_tlv_get_u32(attrs[1]) + 4294967295U;
  #line 959 
  addr = (unsigned char *)rocker_tlv_data(attrs[2]);
  #line 960 
  vlan_id = rocker_tlv_get_be16(attrs[3]);
  #line 962 
  if (rocker->port_count <= port_number) 
                                         #line 963 
                                         return -22;
  #line 965 
  rocker_port = *(rocker->ports + (unsigned long)port_number);
  #line 966 
  return rocker_world_port_ev_mac_vlan_seen(rocker_port,addr,
                                           (unsigned short)((int)vlan_id));
}

#line 969  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static int rocker_event_process(struct rocker *rocker, struct rocker_desc_info *desc_info)
{
  #line 972 
  struct rocker_tlv *attrs[3U];
  #line 973 
  struct rocker_tlv *info;
  #line 974 
  u16 type;
  #line 976 
  rocker_tlv_parse_desc((struct rocker_tlv **)(& attrs),2,desc_info);
  #line 977 
  if (attrs[1] == (struct rocker_tlv *)0 || attrs[2] == (struct rocker_tlv *)0) 
    #line 979 
    return -5;
  #line 981 
  type = rocker_tlv_get_u16(attrs[1]);
  #line 982 
  info = attrs[2];
  #line 984 
  switch ((int)type) {
    #line 985 
    case 1: 
            #line 985 
    ;
    #line 986 
    return rocker_event_link_change(rocker,info);
    #line 987 
    case 2: 
            #line 987 
    ;
    #line 988 
    return rocker_event_mac_vlan_seen(rocker,info);
  }
  #line 991 
  return -95;
}

#line 994  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static irqreturn_t rocker_event_irq_handler(int irq, void *dev_id)
{
  #line 998 
  struct rocker_desc_info *desc_info;
  #line 1000 
  int err;
  #line 996 
  struct rocker *rocker = (struct rocker *)dev_id;
  #line 997 
  struct pci_dev *pdev = rocker->pdev;
  #line 999 
  u32 credits = 0U;
  #line 1002 
  while (1) {
    #line 1002 
    desc_info = rocker_desc_tail_get(& rocker->event_ring);
    #line 1002 
    if (! (desc_info != (struct rocker_desc_info *)0)) 
                                                       #line 1002 
                                                       break;
    #line 1003 
    err = rocker_desc_err(desc_info);
    #line 1004 
    if (err != 0) 
                  #line 1005 
                  _dev_err(& pdev->dev,(char *)"event desc received with err %d\n",err);
    else {
      #line 1008 
      err = rocker_event_process(rocker,desc_info);
      #line 1009 
      if (err != 0) 
                    #line 1010 
                    _dev_err(& pdev->dev,(char *)"event processing failed with err %d\n",err);
    }
    #line 1013 
    rocker_desc_gen_clear(desc_info);
    #line 1014 
    rocker_desc_head_set(rocker,& rocker->event_ring,desc_info);
    #line 1015 
    credits ++;
  }
  #line 1017 
  rocker_dma_ring_credits_set(rocker,& rocker->event_ring,credits);
  #line 1019 
  return IRQ_HANDLED;
}

#line 1022  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static irqreturn_t rocker_tx_irq_handler(int irq, void *dev_id)
{
  #line 1024 
  struct rocker_port *rocker_port = (struct rocker_port *)dev_id;
  #line 1026 
  napi_schedule(& rocker_port->napi_tx);
  #line 1027 
  return IRQ_HANDLED;
}

#line 1030  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static irqreturn_t rocker_rx_irq_handler(int irq, void *dev_id)
{
  #line 1032 
  struct rocker_port *rocker_port = (struct rocker_port *)dev_id;
  #line 1034 
  napi_schedule(& rocker_port->napi_rx);
  #line 1035 
  return IRQ_HANDLED;
}

#line 1042  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
int rocker_cmd_exec(struct rocker_port *rocker_port, bool nowait, int (*prepare)(struct rocker_port *, struct rocker_desc_info *, void *), void *prepare_priv, int (*process)(struct rocker_port *, struct rocker_desc_info *, void *), void *process_priv)
{
  #line 1047 
  struct rocker_desc_info *desc_info;
  #line 1048 
  struct rocker_wait *wait;
  #line 1049 
  unsigned long lock_flags;
  #line 1050 
  int err;
  #line 1046 
  struct rocker *rocker = rocker_port->rocker;
  #line 1052 
  cif___ldv_spin_lock_cmd_ring_lock_of_rocker(& rocker->cmd_ring_lock);
  #line 1054 
  desc_info = rocker_desc_head_get(& rocker->cmd_ring);
  #line 1055 
  if (desc_info == (struct rocker_desc_info *)0) {
    #line 1056 
    cif_spin_unlock_irqrestore_cmd_ring_lock_of_rocker(& rocker->cmd_ring_lock,lock_flags);
    #line 1057 
    return -11;
  }
  #line 1060 
  wait = (struct rocker_wait *)rocker_desc_cookie_ptr_get(desc_info);
  #line 1061 
  rocker_wait_init(wait);
  #line 1062 
  wait->nowait = nowait;
  #line 1064 
  err = (*prepare)(rocker_port,desc_info,prepare_priv);
  #line 1065 
  if (err != 0) {
    #line 1066 
    cif_spin_unlock_irqrestore_cmd_ring_lock_of_rocker(& rocker->cmd_ring_lock,lock_flags);
    #line 1067 
    return err;
  }
  #line 1070 
  rocker_desc_head_set(rocker,& rocker->cmd_ring,desc_info);
  #line 1072 
  cif_spin_unlock_irqrestore_cmd_ring_lock_of_rocker(& rocker->cmd_ring_lock,lock_flags);
  #line 1074 
  if ((int)nowait != 0) 
                        #line 1075 
                        return 0;
  #line 1077 
  if (! rocker_wait_event_timeout(wait,25UL)) 
                                              #line 1078 
                                              return -5;
  #line 1080 
  err = rocker_desc_err(desc_info);
  #line 1081 
  if (err != 0) 
                #line 1082 
                return err;
  #line 1084 
  if (process != (int (*)(struct rocker_port *, struct rocker_desc_info *, void *))0) 
    #line 1085 
    err = (*process)(rocker_port,desc_info,process_priv);
  #line 1087 
  rocker_desc_gen_clear(desc_info);
  #line 1088 
  return err;
}

#line 1092  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static int rocker_cmd_get_port_settings_prep(struct rocker_port *rocker_port, struct rocker_desc_info *desc_info, void *priv)
{
  #line 1096 
  struct rocker_tlv *cmd_info;
  #line 1098 
  if (rocker_tlv_put_u16(desc_info,1,(unsigned short)1) != 0) 
                                                              #line 1100 
                                                              return -90;
  #line 1101 
  cmd_info = rocker_tlv_nest_start(desc_info,2);
  #line 1102 
  if (cmd_info == (struct rocker_tlv *)0) 
                                          #line 1103 
                                          return -90;
  #line 1104 
  if (rocker_tlv_put_u32(desc_info,1,rocker_port->pport) != 0) 
                                                               #line 1106 
                                                               return -90;
  #line 1107 
  rocker_tlv_nest_end(desc_info,cmd_info);
  #line 1108 
  return 0;
}

#line 1112  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static int rocker_cmd_get_port_settings_ethtool_proc(struct rocker_port *rocker_port, struct rocker_desc_info *desc_info, void *priv)
{
  #line 1117 
  struct rocker_tlv *attrs[3U];
  #line 1118 
  struct rocker_tlv *info_attrs[10U];
  #line 1119 
  u32 speed;
  #line 1120 
  u8 duplex;
  #line 1121 
  u8 autoneg;
  #line 1116 
  struct ethtool_link_ksettings *ecmd = (struct ethtool_link_ksettings *)priv;
  #line 1123 
  rocker_tlv_parse_desc((struct rocker_tlv **)(& attrs),2,desc_info);
  #line 1124 
  if (attrs[2] == (struct rocker_tlv *)0) 
                                          #line 1125 
                                          return -5;
  #line 1127 
  rocker_tlv_parse_nested((struct rocker_tlv **)(& info_attrs),9,attrs[2]);
  #line 1129 
  if ((info_attrs[2] == (struct rocker_tlv *)0 || info_attrs[3] == (struct rocker_tlv *)0) || info_attrs[4] == (struct rocker_tlv *)0) 
    #line 1132 
    return -5;
  #line 1134 
  speed = rocker_tlv_get_u32(info_attrs[2]);
  #line 1135 
  duplex = rocker_tlv_get_u8(info_attrs[3]);
  #line 1136 
  autoneg = rocker_tlv_get_u8(info_attrs[4]);
  #line 1138 
  cif_bitmap_zero((unsigned long *)(& ecmd->link_modes.supported),74U);
  #line 1139 
  __set_bit(7L,(unsigned long *)(& ecmd->link_modes.supported));
  #line 1141 
  ecmd->base.phy_address = (unsigned char)255U;
  #line 1142 
  ecmd->base.port = (unsigned char)0U;
  #line 1143 
  ecmd->base.speed = speed;
  #line 1144 
  ecmd->base.duplex = (unsigned char)((unsigned int)duplex != 0U);
  #line 1145 
  ecmd->base.autoneg = (unsigned char)((unsigned int)autoneg != 0U);
  #line 1147 
  return 0;
}

#line 1151  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static int rocker_cmd_get_port_settings_macaddr_proc(struct rocker_port *rocker_port, struct rocker_desc_info *desc_info, void *priv)
{
  #line 1156 
  struct rocker_tlv *attrs[3U];
  #line 1157 
  struct rocker_tlv *info_attrs[10U];
  #line 1158 
  struct rocker_tlv *attr;
  #line 1155 
  unsigned char *macaddr = (unsigned char *)priv;
  #line 1160 
  rocker_tlv_parse_desc((struct rocker_tlv **)(& attrs),2,desc_info);
  #line 1161 
  if (attrs[2] == (struct rocker_tlv *)0) 
                                          #line 1162 
                                          return -5;
  #line 1164 
  rocker_tlv_parse_nested((struct rocker_tlv **)(& info_attrs),9,attrs[2]);
  #line 1166 
  attr = info_attrs[5];
  #line 1167 
  if (attr == (struct rocker_tlv *)0) 
                                      #line 1168 
                                      return -5;
  #line 1170 
  if (rocker_tlv_len(attr) != 6) 
                                 #line 1171 
                                 return -22;
  #line 1173 
  ;
  #line 1173 
  ether_addr_copy(macaddr,(u8 *)rocker_tlv_data(attr));
  #line 1174 
  return 0;
}

#line 1178  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static int rocker_cmd_get_port_settings_mode_proc(struct rocker_port *rocker_port, struct rocker_desc_info *desc_info, void *priv)
{
  #line 1183 
  struct rocker_tlv *attrs[3U];
  #line 1184 
  struct rocker_tlv *info_attrs[10U];
  #line 1185 
  struct rocker_tlv *attr;
  #line 1182 
  u8 *p_mode = (u8 *)priv;
  #line 1187 
  rocker_tlv_parse_desc((struct rocker_tlv **)(& attrs),2,desc_info);
  #line 1188 
  if (attrs[2] == (struct rocker_tlv *)0) 
                                          #line 1189 
                                          return -5;
  #line 1191 
  rocker_tlv_parse_nested((struct rocker_tlv **)(& info_attrs),9,attrs[2]);
  #line 1193 
  attr = info_attrs[6];
  #line 1194 
  if (attr == (struct rocker_tlv *)0) 
                                      #line 1195 
                                      return -5;
  #line 1197 
  *p_mode = rocker_tlv_get_u8(info_attrs[6]);
  #line 1198 
  return 0;
}

#line 1207  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static int rocker_cmd_get_port_settings_phys_name_proc(struct rocker_port *rocker_port, struct rocker_desc_info *desc_info, void *priv)
{
  #line 1228 
  unsigned long __UNIQUE_ID___x541;
  #line 1228 
  unsigned long tmp_0;
  #line 1211 
  struct rocker_tlv *info_attrs[10U];
  #line 1212 
  struct rocker_tlv *attrs[3U];
  #line 1214 
  struct rocker_tlv *attr;
  #line 1215 
  size_t i;
  #line 1215 
  size_t j;
  #line 1215 
  size_t len;
  #line 1216 
  char *str;
  #line 1213 
  struct port_name *name = (struct port_name *)priv;
  #line 1218 
  rocker_tlv_parse_desc((struct rocker_tlv **)(& attrs),2,desc_info);
  #line 1219 
  if (attrs[2] == (struct rocker_tlv *)0) 
                                          #line 1220 
                                          return -5;
  #line 1222 
  rocker_tlv_parse_nested((struct rocker_tlv **)(& info_attrs),9,attrs[2]);
  #line 1224 
  attr = info_attrs[8];
  #line 1225 
  if (attr == (struct rocker_tlv *)0) 
                                      #line 1226 
                                      return -5;
  {
    #line 1228 
    __UNIQUE_ID___x541 = (unsigned long)rocker_tlv_len(attr);
    #line 1228 
    unsigned long __UNIQUE_ID___y542 = name->len;
    #line 1228 
    if (__UNIQUE_ID___x541 < __UNIQUE_ID___y542) 
                                                 #line 1228 
                                                 tmp_0 = __UNIQUE_ID___x541; else 
                                                                    #line 1228 
                                                                    tmp_0 = __UNIQUE_ID___y542;
    }
  #line 1228 
  len = tmp_0;
  #line 1229 
  str = (char *)rocker_tlv_data(attr);
  #line 1232 
  j = 0UL;
  #line 1232 
  i = j;
  #line 1232 
  while (i < len) {
    #line 1233 
    if (((int)_ctype[(int)((unsigned char)*(str + i))] & 7) != 0) {
      #line 1234 
      *(name->buf + j) = *(str + i);
      #line 1235 
      j ++;
    }
    #line 1232 
    i ++;
  }
  #line 1239 
  if (j == 0UL) 
                #line 1240 
                return -5;
  #line 1242 
  *(name->buf + j) = (char)0;
  #line 1244 
  return 0;
}

#line 1248  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static int rocker_cmd_set_port_settings_ethtool_prep(struct rocker_port *rocker_port, struct rocker_desc_info *desc_info, void *priv)
{
  #line 1253 
  struct rocker_tlv *cmd_info;
  #line 1252 
  struct ethtool_link_ksettings *ecmd = (struct ethtool_link_ksettings *)priv;
  #line 1255 
  if (rocker_tlv_put_u16(desc_info,1,(unsigned short)2) != 0) 
                                                              #line 1257 
                                                              return -90;
  #line 1258 
  cmd_info = rocker_tlv_nest_start(desc_info,2);
  #line 1259 
  if (cmd_info == (struct rocker_tlv *)0) 
                                          #line 1260 
                                          return -90;
  #line 1261 
  if (rocker_tlv_put_u32(desc_info,1,rocker_port->pport) != 0) 
                                                               #line 1263 
                                                               return -90;
  #line 1264 
  if (rocker_tlv_put_u32(desc_info,2,ecmd->base.speed) != 0) 
                                                             #line 1266 
                                                             return -90;
  #line 1267 
  if (rocker_tlv_put_u8(desc_info,3,
                          (unsigned char)((int)ecmd->base.duplex)) != 0) 
    #line 1269 
    return -90;
  #line 1270 
  if (rocker_tlv_put_u8(desc_info,4,
                          (unsigned char)((int)ecmd->base.autoneg)) != 0) 
    #line 1272 
    return -90;
  #line 1273 
  rocker_tlv_nest_end(desc_info,cmd_info);
  #line 1274 
  return 0;
}

#line 1278  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static int rocker_cmd_set_port_settings_macaddr_prep(struct rocker_port *rocker_port, struct rocker_desc_info *desc_info, void *priv)
{
  #line 1283 
  struct rocker_tlv *cmd_info;
  #line 1282 
  unsigned char *macaddr = (unsigned char *)priv;
  #line 1285 
  if (rocker_tlv_put_u16(desc_info,1,(unsigned short)2) != 0) 
                                                              #line 1287 
                                                              return -90;
  #line 1288 
  cmd_info = rocker_tlv_nest_start(desc_info,2);
  #line 1289 
  if (cmd_info == (struct rocker_tlv *)0) 
                                          #line 1290 
                                          return -90;
  #line 1291 
  if (rocker_tlv_put_u32(desc_info,1,rocker_port->pport) != 0) 
                                                               #line 1293 
                                                               return -90;
  #line 1294 
  if (rocker_tlv_put(desc_info,5,6,(void *)macaddr) != 0) 
                                                          #line 1296 
                                                          return -90;
  #line 1297 
  rocker_tlv_nest_end(desc_info,cmd_info);
  #line 1298 
  return 0;
}

#line 1302  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static int rocker_cmd_set_port_settings_mtu_prep(struct rocker_port *rocker_port, struct rocker_desc_info *desc_info, void *priv)
{
  #line 1307 
  struct rocker_tlv *cmd_info;
  #line 1306 
  int mtu = *((int *)priv);
  #line 1309 
  if (rocker_tlv_put_u16(desc_info,1,(unsigned short)2) != 0) 
                                                              #line 1311 
                                                              return -90;
  #line 1312 
  cmd_info = rocker_tlv_nest_start(desc_info,2);
  #line 1313 
  if (cmd_info == (struct rocker_tlv *)0) 
                                          #line 1314 
                                          return -90;
  #line 1315 
  if (rocker_tlv_put_u32(desc_info,1,rocker_port->pport) != 0) 
                                                               #line 1317 
                                                               return -90;
  #line 1318 
  if (rocker_tlv_put_u16(desc_info,9,
                           (unsigned short)((int)((unsigned short)mtu))) != 0) 
    #line 1320 
    return -90;
  #line 1321 
  rocker_tlv_nest_end(desc_info,cmd_info);
  #line 1322 
  return 0;
}

#line 1326  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static int rocker_cmd_set_port_learning_prep(struct rocker_port *rocker_port, struct rocker_desc_info *desc_info, void *priv)
{
  #line 1331 
  struct rocker_tlv *cmd_info;
  #line 1330 
  bool learning = *((bool *)priv);
  #line 1333 
  if (rocker_tlv_put_u16(desc_info,1,(unsigned short)2) != 0) 
                                                              #line 1335 
                                                              return -90;
  #line 1336 
  cmd_info = rocker_tlv_nest_start(desc_info,2);
  #line 1337 
  if (cmd_info == (struct rocker_tlv *)0) 
                                          #line 1338 
                                          return -90;
  #line 1339 
  if (rocker_tlv_put_u32(desc_info,1,rocker_port->pport) != 0) 
                                                               #line 1341 
                                                               return -90;
  #line 1342 
  if (rocker_tlv_put_u8(desc_info,7,(unsigned char)((int)learning)) != 0) 
    #line 1344 
    return -90;
  #line 1345 
  rocker_tlv_nest_end(desc_info,cmd_info);
  #line 1346 
  return 0;
}

#line 1350  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static int rocker_cmd_get_port_settings_ethtool(struct rocker_port *rocker_port, struct ethtool_link_ksettings *ecmd)
{
  #line 1353 
  return rocker_cmd_exec(rocker_port,(_Bool)0,
                      & rocker_cmd_get_port_settings_prep,(void *)0,
                      & rocker_cmd_get_port_settings_ethtool_proc,
                      (void *)ecmd);
}

#line 1359  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static int rocker_cmd_get_port_settings_macaddr(struct rocker_port *rocker_port, unsigned char *macaddr)
{
  #line 1362 
  return rocker_cmd_exec(rocker_port,(_Bool)0,
                      & rocker_cmd_get_port_settings_prep,(void *)0,
                      & rocker_cmd_get_port_settings_macaddr_proc,
                      (void *)macaddr);
}

#line 1368  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static int rocker_cmd_get_port_settings_mode(struct rocker_port *rocker_port, u8 *p_mode)
{
  #line 1371 
  return rocker_cmd_exec(rocker_port,(_Bool)0,
                      & rocker_cmd_get_port_settings_prep,(void *)0,
                      & rocker_cmd_get_port_settings_mode_proc,
                      (void *)p_mode);
}

#line 1377  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static int rocker_cmd_set_port_settings_ethtool(struct rocker_port *rocker_port, struct ethtool_link_ksettings *ecmd)
{
  #line 1380 
  struct ethtool_link_ksettings copy_ecmd;
  #line 1382 
  memcpy((void *)(& copy_ecmd),(void *)ecmd,96UL);
  #line 1384 
  return rocker_cmd_exec(rocker_port,(_Bool)0,
                      & rocker_cmd_set_port_settings_ethtool_prep,
                      (void *)(& copy_ecmd),
                      (int (*)(struct rocker_port *,
                               struct rocker_desc_info *, void *))0,
                      (void *)0);
}

#line 1389  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static int rocker_cmd_set_port_settings_macaddr(struct rocker_port *rocker_port, unsigned char *macaddr)
{
  #line 1392 
  return rocker_cmd_exec(rocker_port,(_Bool)0,
                      & rocker_cmd_set_port_settings_macaddr_prep,
                      (void *)macaddr,
                      (int (*)(struct rocker_port *,
                               struct rocker_desc_info *, void *))0,
                      (void *)0);
}

#line 1397  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static int rocker_cmd_set_port_settings_mtu(struct rocker_port *rocker_port, int mtu)
{
  #line 1400 
  return rocker_cmd_exec(rocker_port,(_Bool)0,
                      & rocker_cmd_set_port_settings_mtu_prep,
                      (void *)(& mtu),
                      (int (*)(struct rocker_port *,
                               struct rocker_desc_info *, void *))0,
                      (void *)0);
}

#line 1405  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
int rocker_port_set_learning(struct rocker_port *rocker_port, bool learning)
{
  #line 1408 
  return rocker_cmd_exec(rocker_port,(_Bool)0,
                      & rocker_cmd_set_port_learning_prep,
                      (void *)(& learning),
                      (int (*)(struct rocker_port *,
                               struct rocker_desc_info *, void *))0,
                      (void *)0);
}

#line 1417  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static struct rocker_world_ops *rocker_world_ops[1U] = {& rocker_ofdpa_ops};
#line 1423  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static struct rocker_world_ops *rocker_world_ops_find(u8 mode)
{
  #line 1425 
  int i;
  #line 1427 
  i = 0;
  #line 1427 
  while (i == 0) {
    #line 1428 
    if ((int)(rocker_world_ops[i])->mode == (int)mode) 
                                                       #line 1429 
                                                       return rocker_world_ops[i];
    #line 1427 
    i ++;
  }
  #line 1430 
  return (struct rocker_world_ops *)0;
}

#line 1433  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static int rocker_world_init(struct rocker *rocker, u8 mode)
{
  #line 1435 
  struct rocker_world_ops *wops;
  #line 1436 
  int err;
  #line 1438 
  wops = rocker_world_ops_find((unsigned char)((int)mode));
  #line 1439 
  if (wops == (struct rocker_world_ops *)0) {
    #line 1440 
    _dev_err(& (rocker->pdev)->dev,(char *)"port mode \"%d\" is not supported\n",(int)mode);
    #line 1442 
    return -22;
  }
  #line 1444 
  rocker->wops = wops;
  #line 1445 
  rocker->wpriv = kzalloc_0(wops->priv_size,3264U);
  #line 1446 
  if (rocker->wpriv == (void *)0) 
                                  #line 1447 
                                  return -12;
  #line 1448 
  if (wops->init == (int (*)(struct rocker *))0) 
                                                 #line 1449 
                                                 return 0;
  #line 1450 
  err = (*(wops->init))(rocker);
  #line 1451 
  if (err != 0) 
                #line 1452 
                kfree(rocker->wpriv);
  #line 1453 
  return err;
}

#line 1456  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static void rocker_world_fini(struct rocker *rocker)
{
  #line 1458 
  struct rocker_world_ops *wops = rocker->wops;
  #line 1460 
  if (wops == (struct rocker_world_ops *)0 || wops->fini == (void (*)(struct rocker *))0) 
    #line 1461 
    return;
  #line 1462 
  (*(wops->fini))(rocker);
  #line 1463 
  kfree(rocker->wpriv);
  #line 1464 
  return;
}

#line 1466  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static int rocker_world_check_init(struct rocker_port *rocker_port)
{
  #line 1469 
  u8 mode;
  #line 1470 
  int err;
  #line 1468 
  struct rocker *rocker = rocker_port->rocker;
  #line 1472 
  err = rocker_cmd_get_port_settings_mode(rocker_port,& mode);
  #line 1473 
  if (err != 0) {
    #line 1474 
    _dev_err(& (rocker->pdev)->dev,(char *)"failed to get port mode\n");
    #line 1475 
    return err;
  }
  #line 1477 
  if (rocker->wops != (struct rocker_world_ops *)0) {
    #line 1478 
    if ((int)(rocker->wops)->mode != (int)mode) {
      #line 1479 
      _dev_err(& (rocker->pdev)->dev,(char *)"hardware has ports in different worlds, which is not supported\n");
      #line 1480 
      return -22;
    }
    #line 1482 
    return 0;
  }
  #line 1484 
  return rocker_world_init(rocker,(unsigned char)((int)mode));
}

#line 1487  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static int rocker_world_port_pre_init(struct rocker_port *rocker_port)
{
  #line 1490 
  int err;
  #line 1489 
  struct rocker_world_ops *wops = (rocker_port->rocker)->wops;
  #line 1492 
  rocker_port->wpriv = kzalloc_0(wops->port_priv_size,3264U);
  #line 1493 
  if (rocker_port->wpriv == (void *)0) 
                                       #line 1494 
                                       return -12;
  #line 1495 
  if (wops->port_pre_init == (int (*)(struct rocker_port *))0) 
                                                               #line 1496 
                                                               return 0;
  #line 1497 
  err = (*(wops->port_pre_init))(rocker_port);
  #line 1498 
  if (err != 0) 
                #line 1499 
                kfree(rocker_port->wpriv);
  #line 1500 
  return 0;
}

#line 1503  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static int rocker_world_port_init(struct rocker_port *rocker_port)
{
  #line 1505 
  struct rocker_world_ops *wops = (rocker_port->rocker)->wops;
  #line 1507 
  if (wops->port_init == (int (*)(struct rocker_port *))0) 
                                                           #line 1508 
                                                           return 0;
  #line 1509 
  return (*(wops->port_init))(rocker_port);
}

#line 1512  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static void rocker_world_port_fini(struct rocker_port *rocker_port)
{
  #line 1514 
  struct rocker_world_ops *wops = (rocker_port->rocker)->wops;
  #line 1516 
  if (wops->port_fini == (void (*)(struct rocker_port *))0) 
                                                            #line 1517 
                                                            return;
  #line 1518 
  (*(wops->port_fini))(rocker_port);
  #line 1519 
  return;
}

#line 1521  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static void rocker_world_port_post_fini(struct rocker_port *rocker_port)
{
  #line 1523 
  struct rocker_world_ops *wops = (rocker_port->rocker)->wops;
  #line 1525 
  if (wops->port_post_fini == (void (*)(struct rocker_port *))0) 
                                                                 #line 1526 
                                                                 return;
  #line 1527 
  (*(wops->port_post_fini))(rocker_port);
  #line 1528 
  kfree(rocker_port->wpriv);
  #line 1529 
  return;
}

#line 1531  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static int rocker_world_port_open(struct rocker_port *rocker_port)
{
  #line 1533 
  struct rocker_world_ops *wops = (rocker_port->rocker)->wops;
  #line 1535 
  if (wops->port_open == (int (*)(struct rocker_port *))0) 
                                                           #line 1536 
                                                           return 0;
  #line 1537 
  return (*(wops->port_open))(rocker_port);
}

#line 1540  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static void rocker_world_port_stop(struct rocker_port *rocker_port)
{
  #line 1542 
  struct rocker_world_ops *wops = (rocker_port->rocker)->wops;
  #line 1544 
  if (wops->port_stop == (void (*)(struct rocker_port *))0) 
                                                            #line 1545 
                                                            return;
  #line 1546 
  (*(wops->port_stop))(rocker_port);
  #line 1547 
  return;
}

#line 1549  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static int rocker_world_port_attr_stp_state_set(struct rocker_port *rocker_port, u8 state, struct switchdev_trans *trans)
{
  #line 1553 
  struct rocker_world_ops *wops = (rocker_port->rocker)->wops;
  #line 1555 
  if (wops->port_attr_stp_state_set == (int (*)(struct rocker_port *, u8 ))0) 
    #line 1556 
    return -95;
  #line 1558 
  if ((int)switchdev_trans_ph_prepare(trans) != 0) 
                                                   #line 1559 
                                                   return 0;
  #line 1561 
  return (*(wops->port_attr_stp_state_set))(rocker_port,
                                           (unsigned char)((int)state));
}

#line 1565  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static int rocker_world_port_attr_bridge_flags_support_get(struct rocker_port *rocker_port, unsigned long *p_brport_flags_support)
{
  #line 1570 
  struct rocker_world_ops *wops = (rocker_port->rocker)->wops;
  #line 1572 
  if (wops->port_attr_bridge_flags_support_get == (int (*)(struct rocker_port *, unsigned long *))0) 
    #line 1573 
    return -95;
  #line 1574 
  return (*(wops->port_attr_bridge_flags_support_get))(rocker_port,
                                                    p_brport_flags_support);
}

#line 1579  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static int rocker_world_port_attr_pre_bridge_flags_set(struct rocker_port *rocker_port, unsigned long brport_flags, struct switchdev_trans *trans)
{
  #line 1584 
  unsigned long brport_flags_s;
  #line 1585 
  int err;
  #line 1583 
  struct rocker_world_ops *wops = (rocker_port->rocker)->wops;
  #line 1587 
  if (wops->port_attr_bridge_flags_set == (int (*)(struct rocker_port *, unsigned long , struct switchdev_trans *))0) 
    #line 1588 
    return -95;
  #line 1590 
  err = rocker_world_port_attr_bridge_flags_support_get(rocker_port,& brport_flags_s);
  #line 1592 
  if (err != 0) 
                #line 1593 
                return err;
  #line 1595 
  if ((~ brport_flags_s & brport_flags) != 0UL) 
                                                #line 1596 
                                                return -22;
  #line 1598 
  return 0;
}

#line 1602  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static int rocker_world_port_attr_bridge_flags_set(struct rocker_port *rocker_port, unsigned long brport_flags, struct switchdev_trans *trans)
{
  #line 1606 
  struct rocker_world_ops *wops = (rocker_port->rocker)->wops;
  #line 1608 
  if (wops->port_attr_bridge_flags_set == (int (*)(struct rocker_port *, unsigned long , struct switchdev_trans *))0) 
    #line 1609 
    return -95;
  #line 1611 
  if ((int)switchdev_trans_ph_prepare(trans) != 0) 
                                                   #line 1612 
                                                   return 0;
  #line 1614 
  return (*(wops->port_attr_bridge_flags_set))(rocker_port,brport_flags,trans);
}

#line 1619  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static int rocker_world_port_attr_bridge_ageing_time_set(struct rocker_port *rocker_port, u32 ageing_time, struct switchdev_trans *trans)
{
  #line 1624 
  struct rocker_world_ops *wops = (rocker_port->rocker)->wops;
  #line 1626 
  if (wops->port_attr_bridge_ageing_time_set == (int (*)(struct rocker_port *, u32 , struct switchdev_trans *))0) 
    #line 1627 
    return -95;
  #line 1629 
  if ((int)switchdev_trans_ph_prepare(trans) != 0) 
                                                   #line 1630 
                                                   return 0;
  #line 1632 
  return (*(wops->port_attr_bridge_ageing_time_set))(rocker_port,ageing_time,
                                                    trans);
}

#line 1637  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static int rocker_world_port_obj_vlan_add(struct rocker_port *rocker_port, struct switchdev_obj_port_vlan *vlan, struct switchdev_trans *trans)
{
  #line 1641 
  struct rocker_world_ops *wops = (rocker_port->rocker)->wops;
  #line 1643 
  if (wops->port_obj_vlan_add == (int (*)(struct rocker_port *, struct switchdev_obj_port_vlan *))0) 
    #line 1644 
    return -95;
  #line 1646 
  if ((int)switchdev_trans_ph_prepare(trans) != 0) 
                                                   #line 1647 
                                                   return 0;
  #line 1649 
  return (*(wops->port_obj_vlan_add))(rocker_port,vlan);
}

#line 1653  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static int rocker_world_port_obj_vlan_del(struct rocker_port *rocker_port, struct switchdev_obj_port_vlan *vlan)
{
  #line 1656 
  struct rocker_world_ops *wops = (rocker_port->rocker)->wops;
  #line 1658 
  if ((int)netif_is_bridge_master(vlan->obj.orig_dev) != 0) 
                                                            #line 1659 
                                                            return -95;
  #line 1661 
  if (wops->port_obj_vlan_del == (int (*)(struct rocker_port *, struct switchdev_obj_port_vlan *))0) 
    #line 1662 
    return -95;
  #line 1663 
  return (*(wops->port_obj_vlan_del))(rocker_port,vlan);
}

#line 1667  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static int rocker_world_port_fdb_add(struct rocker_port *rocker_port, struct switchdev_notifier_fdb_info *info)
{
  #line 1670 
  struct rocker_world_ops *wops = (rocker_port->rocker)->wops;
  #line 1672 
  if (wops->port_obj_fdb_add == (int (*)(struct rocker_port *, u16 , unsigned char *))0) 
    #line 1673 
    return -95;
  #line 1675 
  return (*(wops->port_obj_fdb_add))(rocker_port,
                                  (unsigned short)((int)info->vid),
                                  info->addr);
}

#line 1679  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static int rocker_world_port_fdb_del(struct rocker_port *rocker_port, struct switchdev_notifier_fdb_info *info)
{
  #line 1682 
  struct rocker_world_ops *wops = (rocker_port->rocker)->wops;
  #line 1684 
  if (wops->port_obj_fdb_del == (int (*)(struct rocker_port *, u16 , unsigned char *))0) 
    #line 1685 
    return -95;
  #line 1686 
  return (*(wops->port_obj_fdb_del))(rocker_port,
                                  (unsigned short)((int)info->vid),
                                  info->addr);
}

#line 1689  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static int rocker_world_port_master_linked(struct rocker_port *rocker_port, struct net_device *master)
{
  #line 1692 
  struct rocker_world_ops *wops = (rocker_port->rocker)->wops;
  #line 1694 
  if (wops->port_master_linked == (int (*)(struct rocker_port *, struct net_device *))0) 
    #line 1695 
    return -95;
  #line 1696 
  return (*(wops->port_master_linked))(rocker_port,master);
}

#line 1699  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static int rocker_world_port_master_unlinked(struct rocker_port *rocker_port, struct net_device *master)
{
  #line 1702 
  struct rocker_world_ops *wops = (rocker_port->rocker)->wops;
  #line 1704 
  if (wops->port_master_unlinked == (int (*)(struct rocker_port *, struct net_device *))0) 
    #line 1705 
    return -95;
  #line 1706 
  return (*(wops->port_master_unlinked))(rocker_port,master);
}

#line 1709  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static int rocker_world_port_neigh_update(struct rocker_port *rocker_port, struct neighbour *n)
{
  #line 1712 
  struct rocker_world_ops *wops = (rocker_port->rocker)->wops;
  #line 1714 
  if (wops->port_neigh_update == (int (*)(struct rocker_port *, struct neighbour *))0) 
    #line 1715 
    return -95;
  #line 1716 
  return (*(wops->port_neigh_update))(rocker_port,n);
}

#line 1719  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static int rocker_world_port_neigh_destroy(struct rocker_port *rocker_port, struct neighbour *n)
{
  #line 1722 
  struct rocker_world_ops *wops = (rocker_port->rocker)->wops;
  #line 1724 
  if (wops->port_neigh_destroy == (int (*)(struct rocker_port *, struct neighbour *))0) 
    #line 1725 
    return -95;
  #line 1726 
  return (*(wops->port_neigh_destroy))(rocker_port,n);
}

#line 1729  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static int rocker_world_port_ev_mac_vlan_seen(struct rocker_port *rocker_port, unsigned char *addr, __be16 vlan_id)
{
  #line 1733 
  struct rocker_world_ops *wops = (rocker_port->rocker)->wops;
  #line 1735 
  if (wops->port_ev_mac_vlan_seen == (int (*)(struct rocker_port *, unsigned char *, __be16 ))0) 
    #line 1736 
    return -95;
  #line 1737 
  return (*(wops->port_ev_mac_vlan_seen))(rocker_port,addr,
                                       (unsigned short)((int)vlan_id));
}

#line 1740  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static int rocker_world_fib4_add(struct rocker *rocker, struct fib_entry_notifier_info *fen_info)
{
  #line 1743 
  struct rocker_world_ops *wops = rocker->wops;
  #line 1745 
  if (wops->fib4_add == (int (*)(struct rocker *, struct fib_entry_notifier_info *))0) 
    #line 1746 
    return 0;
  #line 1747 
  return (*(wops->fib4_add))(rocker,fen_info);
}

#line 1750  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static int rocker_world_fib4_del(struct rocker *rocker, struct fib_entry_notifier_info *fen_info)
{
  #line 1753 
  struct rocker_world_ops *wops = rocker->wops;
  #line 1755 
  if (wops->fib4_del == (int (*)(struct rocker *, struct fib_entry_notifier_info *))0) 
    #line 1756 
    return 0;
  #line 1757 
  return (*(wops->fib4_del))(rocker,fen_info);
}

#line 1760  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static void rocker_world_fib4_abort(struct rocker *rocker)
{
  #line 1762 
  struct rocker_world_ops *wops = rocker->wops;
  #line 1764 
  if (wops->fib4_abort != (void (*)(struct rocker *))0) 
                                                        #line 1765 
                                                        (*(wops->fib4_abort))(rocker);
  #line 1766 
  return;
}

#line 1772  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static int rocker_port_open(struct net_device *dev)
{
  #line 1775 
  int err;
  #line 1774 
  struct rocker_port *rocker_port = netdev_priv(dev);
  #line 1777 
  err = rocker_port_dma_rings_init(rocker_port);
  #line 1778 
  if (err != 0) 
                #line 1779 
                return err;
  #line 1781 
  ;
  #line 1781 
  err = cif_request_irq(rocker_msix_tx_vector(rocker_port),& rocker_tx_irq_handler,0UL,(char *)(& rocker_driver_name),(void *)rocker_port);
  #line 1784 
  if (err != 0) {
    #line 1785 
    netdev_err(rocker_port->dev,(char *)"cannot assign tx irq\n");
    #line 1786 
    goto err_request_tx_irq;
  }
  #line 1789 
  ;
  #line 1789 
  err = cif_request_irq(rocker_msix_rx_vector(rocker_port),& rocker_rx_irq_handler,0UL,(char *)(& rocker_driver_name),(void *)rocker_port);
  #line 1792 
  if (err != 0) {
    #line 1793 
    netdev_err(rocker_port->dev,(char *)"cannot assign rx irq\n");
    #line 1794 
    goto err_request_rx_irq;
  }
  #line 1797 
  err = rocker_world_port_open(rocker_port);
  #line 1798 
  if (err != 0) {
    #line 1799 
    netdev_err(rocker_port->dev,(char *)"cannot open port in world\n");
    #line 1800 
    goto err_world_port_open;
  }
  #line 1803 
  napi_enable(& rocker_port->napi_tx);
  #line 1804 
  napi_enable(& rocker_port->napi_rx);
  #line 1805 
  if (! dev->proto_down) 
                         #line 1806 
                         rocker_port_set_enable(rocker_port,(_Bool)1);
  #line 1807 
  netif_start_queue(dev);
  #line 1808 
  return 0;
  #line 1810 
  err_world_port_open: 
                       #line 1810 
  ;
  #line 1811 
  ;
  #line 1811 
  cif_free_irq(rocker_msix_rx_vector(rocker_port),(void *)rocker_port);
  #line 1812 
  err_request_rx_irq: 
                      #line 1812 
  ;
  #line 1813 
  ;
  #line 1813 
  cif_free_irq(rocker_msix_tx_vector(rocker_port),(void *)rocker_port);
  #line 1814 
  err_request_tx_irq: 
                      #line 1814 
  ;
  #line 1815 
  rocker_port_dma_rings_fini(rocker_port);
  #line 1816 
  return err;
}

#line 1819  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static int rocker_port_stop(struct net_device *dev)
{
  #line 1821 
  struct rocker_port *rocker_port = netdev_priv(dev);
  #line 1823 
  netif_stop_queue(dev);
  #line 1824 
  rocker_port_set_enable(rocker_port,(_Bool)0);
  #line 1825 
  napi_disable(& rocker_port->napi_rx);
  #line 1826 
  napi_disable(& rocker_port->napi_tx);
  #line 1827 
  rocker_world_port_stop(rocker_port);
  #line 1828 
  ;
  #line 1828 
  cif_free_irq(rocker_msix_rx_vector(rocker_port),(void *)rocker_port);
  #line 1829 
  ;
  #line 1829 
  cif_free_irq(rocker_msix_tx_vector(rocker_port),(void *)rocker_port);
  #line 1830 
  rocker_port_dma_rings_fini(rocker_port);
  #line 1832 
  return 0;
}

#line 1835  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static void rocker_tx_desc_frags_unmap(struct rocker_port *rocker_port, struct rocker_desc_info *desc_info)
{
  #line 1840 
  struct rocker_tlv *attrs[6U];
  #line 1841 
  struct rocker_tlv *attr;
  #line 1842 
  int rem;
  #line 1838 
  struct rocker *rocker = rocker_port->rocker;
  #line 1839 
  struct pci_dev *pdev = rocker->pdev;
  #line 1844 
  rocker_tlv_parse_desc((struct rocker_tlv **)(& attrs),5,desc_info);
  #line 1845 
  if (attrs[5] == (struct rocker_tlv *)0) 
                                          #line 1846 
                                          return;
  #line 1847 
  attr = (struct rocker_tlv *)rocker_tlv_data(attrs[5]);
  #line 1847 
  rem = rocker_tlv_len(attrs[5]);
  #line 1847 
  while (1) {
    #line 1847 
    if (! (rocker_tlv_ok(attr,rem) != 0)) 
                                          #line 1847 
                                          break;
    {
      #line 1848 
      struct rocker_tlv *frag_attrs[3U];
      #line 1849 
      dma_addr_t dma_handle;
      #line 1850 
      size_t len;
      #line 1852 
      if (rocker_tlv_type(attr) != 1) 
                                      #line 1853 
                                      goto __Cont;
      #line 1854 
      rocker_tlv_parse_nested((struct rocker_tlv **)(& frag_attrs),2,attr);
      #line 1856 
      if (frag_attrs[1] == (struct rocker_tlv *)0 || frag_attrs[2] == (struct rocker_tlv *)0) 
        #line 1858 
        goto __Cont;
      #line 1859 
      dma_handle = rocker_tlv_get_u64(frag_attrs[1]);
      #line 1860 
      len = (unsigned long)rocker_tlv_get_u16(frag_attrs[2]);
      #line 1861 
      pci_unmap_single(pdev,dma_handle,len,1);
    }
    #line 1847 
    __Cont: 
            #line 1847 
    attr = rocker_tlv_next(attr,& rem);
  }
  #line 1863 
  return;
}

#line 1865  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static int rocker_tx_desc_frag_map_put(struct rocker_port *rocker_port, struct rocker_desc_info *desc_info, char *buf, size_t buf_len)
{
  #line 1871 
  dma_addr_t dma_handle;
  #line 1872 
  struct rocker_tlv *frag;
  #line 1869 
  struct rocker *rocker = rocker_port->rocker;
  #line 1870 
  struct pci_dev *pdev = rocker->pdev;
  #line 1874 
  dma_handle = pci_map_single(pdev,(void *)buf,buf_len,1);
  #line 1875 
  if ((long)(pci_dma_mapping_error(pdev,dma_handle) != 0) != 0L) {
    #line 1876 
    if (net_ratelimit() != 0) 
                              #line 1877 
                              netdev_err(rocker_port->dev,(char *)"failed to dma map tx frag\n");
    #line 1878 
    return -5;
  }
  #line 1880 
  frag = rocker_tlv_nest_start(desc_info,1);
  #line 1881 
  if (frag == (struct rocker_tlv *)0) 
                                      #line 1882 
                                      goto unmap_frag;
  #line 1883 
  if (rocker_tlv_put_u64(desc_info,1,dma_handle) != 0) 
                                                       #line 1885 
                                                       goto nest_cancel;
  #line 1886 
  if (rocker_tlv_put_u16(desc_info,2,
                           (unsigned short)((int)((unsigned short)buf_len))) != 0) 
    #line 1888 
    goto nest_cancel;
  #line 1889 
  rocker_tlv_nest_end(desc_info,frag);
  #line 1890 
  return 0;
  #line 1892 
  nest_cancel: 
               #line 1892 
  ;
  #line 1893 
  rocker_tlv_nest_cancel(desc_info,frag);
  #line 1894 
  unmap_frag: 
              #line 1894 
  ;
  #line 1895 
  pci_unmap_single(pdev,dma_handle,buf_len,1);
  #line 1896 
  return -90;
}

#line 1899  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static netdev_tx_t rocker_port_xmit(struct sk_buff *skb, struct net_device *dev)
{
  #line 1903 
  struct rocker_desc_info *desc_info;
  #line 1904 
  struct rocker_tlv *frags;
  #line 1905 
  int i;
  #line 1906 
  int err;
  #line 1901 
  struct rocker_port *rocker_port = netdev_priv(dev);
  #line 1902 
  struct rocker *rocker = rocker_port->rocker;
  #line 1908 
  desc_info = rocker_desc_head_get(& rocker_port->tx_ring);
  #line 1909 
  if ((long)(desc_info == (struct rocker_desc_info *)0) != 0L) {
    #line 1910 
    if (net_ratelimit() != 0) 
                              #line 1911 
                              netdev_err(dev,(char *)"tx ring full when queue awake\n");
    #line 1912 
    return NETDEV_TX_BUSY;
  }
  #line 1915 
  rocker_desc_cookie_ptr_set(desc_info,(void *)skb);
  #line 1917 
  frags = rocker_tlv_nest_start(desc_info,5);
  #line 1918 
  if (frags == (struct rocker_tlv *)0) 
                                       #line 1919 
                                       goto out;
  #line 1920 
  ;
  #line 1920 
  ;
  #line 1920 
  ;
  #line 1920 
  err = rocker_tx_desc_frag_map_put(rocker_port,desc_info,(char *)skb->data,(unsigned long)skb_headlen(skb));
  #line 1922 
  if (err != 0) 
                #line 1923 
                goto nest_cancel;
  #line 1924 
  ;
  #line 1924 
  if ((unsigned int)((struct skb_shared_info *)skb_end_pointer(skb))->nr_frags > 16U) {
    #line 1925 
    err = skb_linearize(skb);
    #line 1926 
    if (err != 0) 
                  #line 1927 
                  goto unmap_frags;
  }
  #line 1930 
  i = 0;
  #line 1930 
  while (1) {
    #line 1930 
    ;
    #line 1930 
    if (! ((int)((struct skb_shared_info *)skb_end_pointer(skb))->nr_frags > i)) 
      #line 1930 
      break;
    {
      #line 1931 
      skb_frag_t *frag = & ((struct skb_shared_info *)skb_end_pointer(skb))->frags[i];
      #line 1933 
      ;
      #line 1933 
      ;
      #line 1933 
      err = rocker_tx_desc_frag_map_put(rocker_port,desc_info,(char *)skb_frag_address(frag),(unsigned long)skb_frag_size(frag));
      #line 1936 
      if (err != 0) 
                    #line 1937 
                    goto unmap_frags;
    }
    #line 1930 
    i ++;
  }
  #line 1939 
  rocker_tlv_nest_end(desc_info,frags);
  #line 1941 
  rocker_desc_gen_clear(desc_info);
  #line 1942 
  rocker_desc_head_set(rocker,& rocker_port->tx_ring,desc_info);
  #line 1944 
  desc_info = rocker_desc_head_get(& rocker_port->tx_ring);
  #line 1945 
  if (desc_info == (struct rocker_desc_info *)0) 
                                                 #line 1946 
                                                 netif_stop_queue(dev);
  #line 1948 
  return NETDEV_TX_OK;
  #line 1950 
  unmap_frags: 
               #line 1950 
  ;
  #line 1951 
  rocker_tx_desc_frags_unmap(rocker_port,desc_info);
  #line 1952 
  nest_cancel: 
               #line 1952 
  ;
  #line 1953 
  rocker_tlv_nest_cancel(desc_info,frags);
  #line 1954 
  out: 
       #line 1954 
  ;
  #line 1955 
  consume_skb(skb);
  #line 1956 
  (dev->stats.tx_dropped) ++;
  #line 1958 
  return NETDEV_TX_OK;
}

#line 1961  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static int rocker_port_set_mac_address(struct net_device *dev, void *p)
{
  #line 1965 
  int err;
  #line 1963 
  struct sockaddr *addr = (struct sockaddr *)p;
  #line 1964 
  struct rocker_port *rocker_port = netdev_priv(dev);
  #line 1967 
  if (! is_valid_ether_addr((u8 *)(& addr->sa_data))) 
                                                      #line 1968 
                                                      return -99;
  #line 1970 
  err = rocker_cmd_set_port_settings_macaddr(rocker_port,(unsigned char *)(& addr->sa_data));
  #line 1971 
  if (err != 0) 
                #line 1972 
                return err;
  #line 1973 
  memcpy((void *)dev->dev_addr,(void *)(& addr->sa_data),(unsigned long)dev->addr_len);
  #line 1974 
  return 0;
}

#line 1977  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static int rocker_port_change_mtu(struct net_device *dev, int new_mtu)
{
  #line 1981 
  int err;
  #line 1979 
  struct rocker_port *rocker_port = netdev_priv(dev);
  #line 1980 
  int running = (int)netif_running(dev);
  #line 1983 
  if (running != 0) 
                    #line 1984 
                    rocker_port_stop(dev);
  #line 1986 
  netdev_info(dev,(char *)"MTU change from %d to %d\n",dev->mtu,new_mtu);
  #line 1987 
  dev->mtu = (unsigned int)new_mtu;
  #line 1989 
  err = rocker_cmd_set_port_settings_mtu(rocker_port,new_mtu);
  #line 1990 
  if (err != 0) 
                #line 1991 
                return err;
  #line 1993 
  if (running != 0) 
                    #line 1994 
                    err = rocker_port_open(dev);
  #line 1996 
  return err;
}

#line 1999  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static int rocker_port_get_phys_port_name(struct net_device *dev, char *buf, size_t len)
{
  #line 2004 
  int err;
  #line 2011 
  int tmp_0;
  #line 2002 
  struct rocker_port *rocker_port = netdev_priv(dev);
  #line 2003 
  struct port_name name = {.buf = buf, .len = len};
  #line 2006 
  err = rocker_cmd_exec(rocker_port,(_Bool)0,& rocker_cmd_get_port_settings_prep,(void *)0,& rocker_cmd_get_port_settings_phys_name_proc,(void *)(& name));
  #line 2011 
  if (err != 0) 
                #line 2011 
                tmp_0 = -95; else 
                                  #line 2011 
                                  tmp_0 = 0;
  #line 2011 
  return tmp_0;
}

#line 2014  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static int rocker_port_change_proto_down(struct net_device *dev, bool proto_down)
{
  #line 2017 
  struct rocker_port *rocker_port = netdev_priv(dev);
  #line 2019 
  if (((rocker_port->dev)->flags & 1U) != 0U) 
                                              #line 2020 
                                              rocker_port_set_enable(rocker_port,(_Bool)((int)((_Bool)(! ((int)proto_down != 0)))));
  #line 2021 
  (rocker_port->dev)->proto_down = proto_down;
  #line 2022 
  return 0;
}

#line 2025  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static void rocker_port_neigh_destroy(struct net_device *dev, struct neighbour *n)
{
  #line 2029 
  int err;
  #line 2028 
  struct rocker_port *rocker_port = netdev_priv(n->dev);
  #line 2031 
  err = rocker_world_port_neigh_destroy(rocker_port,n);
  #line 2032 
  if (err != 0) 
                #line 2033 
                netdev_warn(rocker_port->dev,(char *)"failed to handle neigh destroy (err %d)\n",err);
  #line 2034 
  return;
}

#line 2037  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static int rocker_port_get_port_parent_id(struct net_device *dev, struct netdev_phys_item_id *ppid)
{
  #line 2040 
  struct rocker_port *rocker_port = netdev_priv(dev);
  #line 2041 
  struct rocker *rocker = rocker_port->rocker;
  #line 2043 
  ppid->id_len = (unsigned char)8U;
  #line 2044 
  memcpy((void *)(& ppid->id),(void *)(& rocker->hw.id),(unsigned long)ppid->id_len);
  #line 2046 
  return 0;
}

#line 2049  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static struct net_device_ops rocker_port_netdev_ops = {.ndo_open = & rocker_port_open, .ndo_stop = & rocker_port_stop, .ndo_start_xmit = & rocker_port_xmit, .ndo_set_mac_address = & rocker_port_set_mac_address, .ndo_change_mtu = & rocker_port_change_mtu, .ndo_neigh_destroy = & rocker_port_neigh_destroy, .ndo_get_port_parent_id = & rocker_port_get_port_parent_id, .ndo_get_phys_port_name = & rocker_port_get_phys_port_name, .ndo_change_proto_down = & rocker_port_change_proto_down};
#line 2065  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static int rocker_port_attr_set(struct net_device *dev, struct switchdev_attr *attr, struct switchdev_trans *trans)
{
  #line 2069 
  struct rocker_port *rocker_port = netdev_priv(dev);
  #line 2070 
  int err = 0;
  #line 2072 
  switch ((unsigned int)attr->id) {
    #line 2073 
    case (unsigned int)1: 
                          #line 2073 
    ;
    #line 2074 
    err = rocker_world_port_attr_stp_state_set(rocker_port,(unsigned char)((int)attr->u.stp_state),trans);
    #line 2077 
    break;
    #line 2078 
    case (unsigned int)3: 
                          #line 2078 
    ;
    #line 2079 
    err = rocker_world_port_attr_pre_bridge_flags_set(rocker_port,attr->u.brport_flags,trans);
    #line 2082 
    break;
    #line 2083 
    case (unsigned int)2: 
                          #line 2083 
    ;
    #line 2084 
    err = rocker_world_port_attr_bridge_flags_set(rocker_port,attr->u.brport_flags,trans);
    #line 2087 
    break;
    #line 2088 
    case (unsigned int)5: 
                          #line 2088 
    ;
    #line 2089 
    err = rocker_world_port_attr_bridge_ageing_time_set(rocker_port,(unsigned int)attr->u.ageing_time,trans);
    #line 2092 
    break;
    #line 2093 
    default: 
             #line 2093 
    ;
    #line 2094 
    err = -95;
    #line 2095 
    break;
  }
  #line 2098 
  return err;
}

#line 2101  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static int rocker_port_obj_add(struct net_device *dev, struct switchdev_obj *obj, struct switchdev_trans *trans)
{
  #line 2105 
  struct rocker_port *rocker_port = netdev_priv(dev);
  #line 2106 
  int err = 0;
  #line 2108 
  switch ((unsigned int)obj->id) {
    #line 2111 
    void *__mptr;
    #line 2109 
    case (unsigned int)1: 
                          #line 2109 
    ;
    #line 2110 
    ;
    #line 2111 
    __mptr = (void *)obj;
    #line 2110 
    ;
    #line 2110 
    err = rocker_world_port_obj_vlan_add(rocker_port,((struct switchdev_obj_port_vlan *)__mptr),trans);
    #line 2113 
    break;
    #line 2114 
    default: 
             #line 2114 
    ;
    #line 2115 
    err = -95;
    #line 2116 
    break;
  }
  #line 2119 
  return err;
}

#line 2122  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static int rocker_port_obj_del(struct net_device *dev, struct switchdev_obj *obj)
{
  #line 2125 
  struct rocker_port *rocker_port = netdev_priv(dev);
  #line 2126 
  int err = 0;
  #line 2128 
  switch ((unsigned int)obj->id) {
    #line 2131 
    void *__mptr;
    #line 2129 
    case (unsigned int)1: 
                          #line 2129 
    ;
    #line 2131 
    __mptr = (void *)obj;
    #line 2130 
    ;
    #line 2130 
    err = rocker_world_port_obj_vlan_del(rocker_port,((struct switchdev_obj_port_vlan *)__mptr));
    #line 2132 
    break;
    #line 2133 
    default: 
             #line 2133 
    ;
    #line 2134 
    err = -95;
    #line 2135 
    break;
  }
  #line 2138 
  return err;
}

#line 2151  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static void rocker_router_fib_event_work(struct work_struct *work)
{
  #line 2154 
  void *__mptr;
  #line 2156 
  struct fib_rule *rule;
  #line 2157 
  int err;
  #line 2154 
  __mptr = (void *)work;
  #line 2153 
  struct rocker_fib_event_work *fib_work = ((struct rocker_fib_event_work *)__mptr);
  #line 2155 
  struct rocker *rocker = fib_work->rocker;
  #line 2160 
  rtnl_lock();
  #line 2161 
  switch (fib_work->event) {
    #line 2162 
    case (unsigned long)2: 
                           #line 2162 
    ;
    #line 2163 
    err = rocker_world_fib4_add(rocker,& fib_work->__anonCompField_rocker_fib_event_work_195.fen_info);
    #line 2164 
    if (err != 0) 
                  #line 2165 
                  rocker_world_fib4_abort(rocker);
    #line 2166 
    fib_info_put(fib_work->__anonCompField_rocker_fib_event_work_195.fen_info.fi);
    #line 2167 
    break;
    #line 2168 
    case (unsigned long)3: 
                           #line 2168 
    ;
    #line 2169 
    rocker_world_fib4_del(rocker,& fib_work->__anonCompField_rocker_fib_event_work_195.fen_info);
    #line 2170 
    fib_info_put(fib_work->__anonCompField_rocker_fib_event_work_195.fen_info.fi);
    #line 2171 
    break;
    #line 2172 
    case (unsigned long)4: 
                           #line 2172 
    ;
    #line 2173 
    case (unsigned long)5: 
                           #line 2173 
    ;
    #line 2174 
    rule = fib_work->__anonCompField_rocker_fib_event_work_195.fr_info.rule;
    #line 2175 
    if (! fib4_rule_default(rule)) 
                                   #line 2176 
                                   rocker_world_fib4_abort(rocker);
    #line 2177 
    fib_rule_put(rule);
    #line 2178 
    break;
  }
  #line 2180 
  rtnl_unlock();
  #line 2181 
  kfree((void *)fib_work);
  #line 2182 
  return;
}

#line 2185  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static int rocker_router_fib_event(struct notifier_block *nb, unsigned long event, void *ptr)
{
  #line 2188 
  void *__mptr;
  #line 2196 
  int __ret_warn_on;
  #line 2189 
  struct rocker_fib_event_work *fib_work;
  #line 2188 
  __mptr = (void *)nb;
  #line 2188 
  struct rocker *rocker = ((struct rocker *)(__mptr + 18446744073709551400U));
  #line 2190 
  struct fib_notifier_info *info = (struct fib_notifier_info *)ptr;
  #line 2192 
  if (info->family != 2) 
                         #line 2193 
                         return 0;
  #line 2195 
  fib_work = (struct rocker_fib_event_work *)kzalloc_0(136UL,2592U);
  #line 2196 
  __ret_warn_on = fib_work == (struct rocker_fib_event_work *)0;
  #line 2196 
  if ((long)(__ret_warn_on != 0) != 0L) {
    #line 2197 
    ldv_inline_asm();
    #line 2198 
    ldv_inline_asm();
  }
  #line 2196 
  if ((long)((long)(__ret_warn_on != 0)) != 0L) 
                                                #line 2197 
                                                return 32770;
  {
    #line 2199 
    struct lock_class_key __key;
    #line 2199 
    __init_work(& fib_work->work,0);
    #line 2199 
    atomic_long_t __constr_expr_43 = {.counter = 137438953408LL};
    #line 2199 
    fib_work->work.data = __constr_expr_43;
    #line 2199 
    lockdep_init_map(& fib_work->work.lockdep_map,(char *)"(work_completion)",& __key,0);
    #line 2199 
    INIT_LIST_HEAD_0(& fib_work->work.entry);
    #line 2199 
    fib_work->work.func = & rocker_router_fib_event_work;
  }
  #line 2200 
  fib_work->rocker = rocker;
  #line 2201 
  fib_work->event = event;
  #line 2203 
  switch (event) {
    #line 2204 
    case (unsigned long)2: 
                           #line 2204 
    ;
    #line 2205 
    case (unsigned long)3: 
                           #line 2205 
    ;
    #line 2206 
    if (info->family == 2) {
      #line 2207 
      struct fib_entry_notifier_info *fen_info = (struct fib_entry_notifier_info *)ptr;
      #line 2209 
      if ((int)(fen_info->fi)->fib_nh_is_v6 != 0) {
        {
          #line 2210 
          char __msg[54U] = {(char)'r', (char)'o', (char)'c', (char)'k', (char)'e', (char)'r', (char)'\000'};
          #line 2210 
          struct netlink_ext_ack *__extack = info->extack;
          #line 2210 
          if (__extack != (struct netlink_ext_ack *)0) 
                                                       #line 2210 
                                                       __extack->_msg = (char *)(& __msg);
        }
        #line 2211 
        kfree((void *)fib_work);
        #line 2212 
        return notifier_from_errno(-22);
      }
      #line 2214 
      if ((fen_info->fi)->nh != (struct nexthop *)0) {
        {
          #line 2215 
          char __msg_0[57U] = {(char)'r', (char)'o', (char)'c', (char)'k', (char)'e', (char)'r', (char)'\000'};
          #line 2215 
          struct netlink_ext_ack *__extack_0 = info->extack;
          #line 2215 
          if (__extack_0 != (struct netlink_ext_ack *)0) 
                                                         #line 2215 
                                                         __extack_0->_msg = (char *)(& __msg_0);
        }
        #line 2216 
        kfree((void *)fib_work);
        #line 2217 
        return notifier_from_errno(-22);
      }
    }
    #line 2221 
    memcpy((void *)(& fib_work->__anonCompField_rocker_fib_event_work_195.fen_info),ptr,40UL);
    #line 2225 
    fib_info_hold(fib_work->__anonCompField_rocker_fib_event_work_195.fen_info.fi);
    #line 2226 
    break;
    #line 2227 
    case (unsigned long)4: 
                           #line 2227 
    ;
    #line 2228 
    case (unsigned long)5: 
                           #line 2228 
    ;
    #line 2229 
    memcpy((void *)(& fib_work->__anonCompField_rocker_fib_event_work_195.fr_info),ptr,24UL);
    #line 2230 
    fib_rule_get(fib_work->__anonCompField_rocker_fib_event_work_195.fr_info.rule);
    #line 2231 
    break;
  }
  #line 2234 
  cif_queue_work(rocker->rocker_owq,& fib_work->work);
  #line 2236 
  return 0;
}

#line 2244  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static int rocker_port_get_link_ksettings(struct net_device *dev, struct ethtool_link_ksettings *ecmd)
{
  #line 2247 
  struct rocker_port *rocker_port = netdev_priv(dev);
  #line 2249 
  return rocker_cmd_get_port_settings_ethtool(rocker_port,ecmd);
}

#line 2253  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static int rocker_port_set_link_ksettings(struct net_device *dev, struct ethtool_link_ksettings *ecmd)
{
  #line 2256 
  struct rocker_port *rocker_port = netdev_priv(dev);
  #line 2258 
  return rocker_cmd_set_port_settings_ethtool(rocker_port,ecmd);
}

#line 2261  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static void rocker_port_get_drvinfo(struct net_device *dev, struct ethtool_drvinfo *drvinfo)
{
  #line 2264 
  strlcpy((char *)(& drvinfo->driver),(char *)(& rocker_driver_name),32UL);
  #line 2265 
  strlcpy((char *)(& drvinfo->version),(char *)"5.5.0",32UL);
  #line 2266 
  return;
}

#line 2271  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static struct rocker_port_stats rocker_port_stats[8U] = {{.str = {(char)'r', (char)'x', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s'}, .type = 2}, {.str = {(char)'r', (char)'x', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'s'}, .type = 3}, {.str = {(char)'r', (char)'x', (char)'_', (char)'d', (char)'r', (char)'o', (char)'p', (char)'p', (char)'e', (char)'d'}, .type = 4}, {.str = {(char)'r', (char)'x', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s'}, .type = 5}, {.str = {(char)'t', (char)'x', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s'}, .type = 6}, {.str = {(char)'t', (char)'x', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'s'}, .type = 7}, {.str = {(char)'t', (char)'x', (char)'_', (char)'d', (char)'r', (char)'o', (char)'p', (char)'p', (char)'e', (char)'d'}, .type = 8}, {.str = {(char)'t', (char)'x', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s'}, .type = 9}};
#line 2285  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static void rocker_port_get_strings(struct net_device *netdev, u32 stringset, u8 *data)
{
  #line 2289 
  int i;
  #line 2288 
  u8 *p = data;
  #line 2291 
  switch (stringset) {
    #line 2292 
    case (u32)1: 
                 #line 2292 
    ;
    #line 2293 
    i = 0;
    #line 2293 
    while ((unsigned int)i <= 7U) {
      #line 2294 
      memcpy((void *)p,(void *)(& rocker_port_stats[i].str),32UL);
      #line 2295 
      p += 32U;
      #line 2293 
      i ++;
    }
    #line 2297 
    break;
  }
  #line 2299 
  return;
}

#line 2302  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static int rocker_cmd_get_port_stats_prep(struct rocker_port *rocker_port, struct rocker_desc_info *desc_info, void *priv)
{
  #line 2306 
  struct rocker_tlv *cmd_stats;
  #line 2308 
  if (rocker_tlv_put_u16(desc_info,1,(unsigned short)12) != 0) 
                                                               #line 2310 
                                                               return -90;
  #line 2312 
  cmd_stats = rocker_tlv_nest_start(desc_info,2);
  #line 2313 
  if (cmd_stats == (struct rocker_tlv *)0) 
                                           #line 2314 
                                           return -90;
  #line 2316 
  if (rocker_tlv_put_u32(desc_info,1,rocker_port->pport) != 0) 
                                                               #line 2318 
                                                               return -90;
  #line 2320 
  rocker_tlv_nest_end(desc_info,cmd_stats);
  #line 2322 
  return 0;
}

#line 2326  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static int rocker_cmd_get_port_stats_ethtool_proc(struct rocker_port *rocker_port, struct rocker_desc_info *desc_info, void *priv)
{
  #line 2330 
  struct rocker_tlv *attrs[3U];
  #line 2331 
  struct rocker_tlv *stats_attrs[10U];
  #line 2332 
  struct rocker_tlv *pattr;
  #line 2333 
  u32 pport;
  #line 2335 
  int i;
  #line 2334 
  u64 *data = (u64 *)priv;
  #line 2337 
  rocker_tlv_parse_desc((struct rocker_tlv **)(& attrs),2,desc_info);
  #line 2339 
  if (attrs[2] == (struct rocker_tlv *)0) 
                                          #line 2340 
                                          return -5;
  #line 2342 
  rocker_tlv_parse_nested((struct rocker_tlv **)(& stats_attrs),9,attrs[2]);
  #line 2345 
  if (stats_attrs[1] == (struct rocker_tlv *)0) 
                                                #line 2346 
                                                return -5;
  #line 2348 
  pport = rocker_tlv_get_u32(stats_attrs[1]);
  #line 2349 
  if (rocker_port->pport != pport) 
                                   #line 2350 
                                   return -5;
  #line 2352 
  i = 0;
  #line 2352 
  while ((unsigned int)i <= 7U) {
    #line 2353 
    pattr = stats_attrs[rocker_port_stats[i].type];
    #line 2354 
    if (pattr == (struct rocker_tlv *)0) 
                                         #line 2355 
                                         goto __Cont;
    #line 2357 
    *(data + (unsigned long)i) = rocker_tlv_get_u64(pattr);
    #line 2352 
    __Cont: 
            #line 2352 
    i ++;
  }
  #line 2360 
  return 0;
}

#line 2363  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static int rocker_cmd_get_port_stats_ethtool(struct rocker_port *rocker_port, void *priv)
{
  #line 2366 
  return rocker_cmd_exec(rocker_port,(_Bool)0,& rocker_cmd_get_port_stats_prep,
                      (void *)0,& rocker_cmd_get_port_stats_ethtool_proc,
                      priv);
}

#line 2372  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static void rocker_port_get_stats(struct net_device *dev, struct ethtool_stats *stats, u64 *data)
{
  #line 2375 
  struct rocker_port *rocker_port = netdev_priv(dev);
  #line 2377 
  if (rocker_cmd_get_port_stats_ethtool(rocker_port,(void *)data) != 0) {
    #line 2378 
    int i;
    #line 2380 
    i = 0;
    #line 2380 
    while ((unsigned int)i <= 7U) {
      #line 2381 
      *(data + (unsigned long)i) = 0ULL;
      #line 2380 
      i ++;
    }
  }
  #line 2383 
  return;
}

#line 2385  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static int rocker_port_get_sset_count(struct net_device *netdev, int sset)
{
  #line 2387 
  switch (sset) {
    #line 2388 
    case 1: 
            #line 2388 
    ;
    #line 2389 
    return 8;
    #line 2390 
    default: 
             #line 2390 
    ;
    #line 2391 
    return -95;
  }
}

#line 2395  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static struct ethtool_ops rocker_port_ethtool_ops = {.get_drvinfo = & rocker_port_get_drvinfo, .get_link = & ethtool_op_get_link, .get_strings = & rocker_port_get_strings, .get_ethtool_stats = & rocker_port_get_stats, .get_sset_count = & rocker_port_get_sset_count, .get_link_ksettings = & rocker_port_get_link_ksettings, .set_link_ksettings = & rocker_port_set_link_ksettings};
#line 2409  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static struct rocker_port *rocker_port_napi_tx_get(struct napi_struct *napi)
{
  #line 2411 
  void *__mptr;
  #line 2411 
  __mptr = (void *)napi;
  #line 2411 
  return ((struct rocker_port *)(__mptr + 18446744073709551584U));
}

#line 2414  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static int rocker_port_poll_tx(struct napi_struct *napi, int budget)
{
  #line 2418 
  struct rocker_desc_info *desc_info;
  #line 2420 
  int err;
  #line 2416 
  struct rocker_port *rocker_port = rocker_port_napi_tx_get(napi);
  #line 2417 
  struct rocker *rocker = rocker_port->rocker;
  #line 2419 
  u32 credits = 0U;
  #line 2423 
  while (1) {
    #line 2423 
    desc_info = rocker_desc_tail_get(& rocker_port->tx_ring);
    #line 2423 
    if (! (desc_info != (struct rocker_desc_info *)0)) 
                                                       #line 2423 
                                                       break;
    {
      #line 2424 
      struct sk_buff *skb;
      #line 2426 
      err = rocker_desc_err(desc_info);
      #line 2427 
      if (err != 0) {
        #line 2427 
        if (net_ratelimit() != 0) 
                                  #line 2428 
                                  netdev_err(rocker_port->dev,(char *)"tx desc received with err %d\n",err);
      }
      #line 2430 
      rocker_tx_desc_frags_unmap(rocker_port,desc_info);
      #line 2432 
      skb = (struct sk_buff *)rocker_desc_cookie_ptr_get(desc_info);
      #line 2433 
      if (err == 0) {
        #line 2434 
        ((rocker_port->dev)->stats.tx_packets) ++;
        #line 2435 
        (rocker_port->dev)->stats.tx_bytes += (unsigned long)skb->len;
      }
      else 
           #line 2437 
           ((rocker_port->dev)->stats.tx_errors) ++;
      #line 2440 
      dev_kfree_skb_any(skb);
      #line 2441 
      credits ++;
    }
  }
  #line 2444 
  if (credits != 0U) {
    #line 2444 
    if ((int)netif_queue_stopped(rocker_port->dev) != 0) 
                                                         #line 2445 
                                                         netif_wake_queue(rocker_port->dev);
  }
  #line 2447 
  napi_complete(napi);
  #line 2448 
  rocker_dma_ring_credits_set(rocker,& rocker_port->tx_ring,credits);
  #line 2450 
  return 0;
}

#line 2453  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static int rocker_port_rx_proc(struct rocker *rocker, struct rocker_port *rocker_port, struct rocker_desc_info *desc_info)
{
  #line 2457 
  struct rocker_tlv *attrs[6U];
  #line 2459 
  size_t rx_len;
  #line 2458 
  struct sk_buff *skb = rocker_desc_cookie_ptr_get(desc_info);
  #line 2460 
  u16 rx_flags = (unsigned short)0U;
  #line 2462 
  if (skb == (struct sk_buff *)0) 
                                  #line 2463 
                                  return -2;
  #line 2465 
  rocker_tlv_parse_desc((struct rocker_tlv **)(& attrs),5,desc_info);
  #line 2466 
  if (attrs[5] == (struct rocker_tlv *)0) 
                                          #line 2467 
                                          return -22;
  #line 2468 
  if (attrs[1] != (struct rocker_tlv *)0) 
                                          #line 2469 
                                          rx_flags = rocker_tlv_get_u16(attrs[1]);
  #line 2471 
  rocker_dma_rx_ring_skb_unmap(rocker,(struct rocker_tlv **)(& attrs));
  #line 2473 
  rx_len = (unsigned long)rocker_tlv_get_u16(attrs[5]);
  #line 2474 
  skb_put(skb,(unsigned int)rx_len);
  #line 2475 
  skb->protocol = eth_type_trans(skb,rocker_port->dev);
  #line 2477 
  if (((unsigned long)rx_flags & 256UL) != 0UL) 
                                                #line 2478 
                                                skb->offload_fwd_mark = (unsigned char)1U;
  #line 2480 
  ((rocker_port->dev)->stats.rx_packets) ++;
  #line 2481 
  (rocker_port->dev)->stats.rx_bytes += (unsigned long)skb->len;
  #line 2483 
  netif_receive_skb(skb);
  #line 2485 
  return rocker_dma_rx_ring_skb_alloc(rocker_port,desc_info);
}

#line 2488  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static struct rocker_port *rocker_port_napi_rx_get(struct napi_struct *napi)
{
  #line 2490 
  void *__mptr;
  #line 2490 
  __mptr = (void *)napi;
  #line 2490 
  return ((struct rocker_port *)(__mptr + 18446744073709551192U));
}

#line 2493  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static int rocker_port_poll_rx(struct napi_struct *napi, int budget)
{
  #line 2497 
  struct rocker_desc_info *desc_info;
  #line 2499 
  int err;
  #line 2495 
  struct rocker_port *rocker_port = rocker_port_napi_rx_get(napi);
  #line 2496 
  struct rocker *rocker = rocker_port->rocker;
  #line 2498 
  u32 credits = 0U;
  #line 2502 
  while (1) {
    #line 2502 
    if (credits < (unsigned int)budget) {
      #line 2503 
      desc_info = rocker_desc_tail_get(& rocker_port->rx_ring);
      #line 2502 
      if (! (desc_info != (struct rocker_desc_info *)0)) 
                                                         #line 2502 
                                                         break;
    }
    else 
         #line 2502 
         break;
    #line 2504 
    err = rocker_desc_err(desc_info);
    #line 2505 
    if (err != 0) {
      #line 2506 
      if (net_ratelimit() != 0) 
                                #line 2507 
                                netdev_err(rocker_port->dev,(char *)"rx desc received with err %d\n",err);
    }
    else {
      #line 2510 
      err = rocker_port_rx_proc(rocker,rocker_port,desc_info);
      #line 2512 
      if (err != 0) {
        #line 2512 
        if (net_ratelimit() != 0) 
                                  #line 2513 
                                  netdev_err(rocker_port->dev,(char *)"rx processing failed with err %d\n",err);
      }
    }
    #line 2516 
    if (err != 0) 
                  #line 2517 
                  ((rocker_port->dev)->stats.rx_errors) ++;
    #line 2519 
    rocker_desc_gen_clear(desc_info);
    #line 2520 
    rocker_desc_head_set(rocker,& rocker_port->rx_ring,desc_info);
    #line 2521 
    credits ++;
  }
  #line 2524 
  if (credits < (unsigned int)budget) 
                                      #line 2525 
                                      napi_complete_done(napi,(int)credits);
  #line 2527 
  rocker_dma_ring_credits_set(rocker,& rocker_port->rx_ring,credits);
  #line 2529 
  return (int)credits;
}

#line 2536  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static void rocker_carrier_init(struct rocker_port *rocker_port)
{
  #line 2540 
  bool link_up;
  #line 2538 
  struct rocker *rocker = rocker_port->rocker;
  #line 2539 
  u64 link_status = readq((void *)(rocker->hw_addr + 784U));
  #line 2542 
  link_up = (_Bool)(((unsigned long long)(1 << rocker_port->pport) & link_status) != 0ULL);
  #line 2543 
  if ((int)link_up != 0) 
                         #line 2544 
                         netif_carrier_on(rocker_port->dev); else 
                                                                  #line 2546 
                                                                  netif_carrier_off(rocker_port->dev);
  #line 2547 
  return;
}

#line 2549  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static void rocker_remove_ports(struct rocker *rocker)
{
  #line 2551 
  struct rocker_port *rocker_port;
  #line 2552 
  int i;
  #line 2554 
  i = 0;
  #line 2554 
  while (rocker->port_count > (unsigned int)i) {
    #line 2555 
    rocker_port = *(rocker->ports + (unsigned long)i);
    #line 2556 
    if (rocker_port == (struct rocker_port *)0) 
                                                #line 2557 
                                                goto __Cont;
    #line 2558 
    rocker_world_port_fini(rocker_port);
    #line 2559 
    cif_unregister_netdev(rocker_port->dev);
    #line 2560 
    rocker_world_port_post_fini(rocker_port);
    #line 2561 
    cif_free_netdev(rocker_port->dev);
    #line 2554 
    __Cont: 
            #line 2554 
    i ++;
  }
  #line 2563 
  rocker_world_fini(rocker);
  #line 2564 
  kfree((void *)rocker->ports);
  #line 2565 
  return;
}

#line 2567  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static void rocker_port_dev_addr_init(struct rocker_port *rocker_port)
{
  #line 2571 
  int err;
  #line 2569 
  struct rocker *rocker = rocker_port->rocker;
  #line 2570 
  struct pci_dev *pdev = rocker->pdev;
  #line 2573 
  err = rocker_cmd_get_port_settings_macaddr(rocker_port,(rocker_port->dev)->dev_addr);
  #line 2575 
  if (err != 0) {
    #line 2576 
    _dev_warn(& pdev->dev,(char *)"failed to get mac address, using random\n");
    #line 2577 
    eth_hw_addr_random(rocker_port->dev);
  }
  #line 2579 
  return;
}

#line 2583  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static int rocker_probe_port(struct rocker *rocker, unsigned int port_number)
{
  #line 2586 
  struct rocker_port *rocker_port;
  #line 2587 
  struct net_device *dev;
  #line 2588 
  int err;
  #line 2585 
  struct pci_dev *pdev = rocker->pdev;
  #line 2590 
  dev = cif_alloc_etherdev_mqs(912,1U,1U);
  #line 2591 
  if (dev == (struct net_device *)0) 
                                     #line 2592 
                                     return -12;
  #line 2593 
  dev->dev.parent = & pdev->dev;
  #line 2594 
  rocker_port = (struct rocker_port *)netdev_priv(dev);
  #line 2595 
  rocker_port->dev = dev;
  #line 2596 
  rocker_port->rocker = rocker;
  #line 2597 
  rocker_port->port_number = port_number;
  #line 2598 
  rocker_port->pport = port_number + 1U;
  #line 2600 
  err = rocker_world_check_init(rocker_port);
  #line 2601 
  if (err != 0) {
    #line 2602 
    _dev_err(& pdev->dev,(char *)"world init failed\n");
    #line 2603 
    goto err_world_check_init;
  }
  #line 2606 
  rocker_port_dev_addr_init(rocker_port);
  #line 2607 
  dev->netdev_ops = & rocker_port_netdev_ops;
  #line 2608 
  dev->ethtool_ops = & rocker_port_ethtool_ops;
  #line 2609 
  netif_tx_napi_add(dev,& rocker_port->napi_tx,& rocker_port_poll_tx,64);
  #line 2611 
  netif_napi_add(dev,& rocker_port->napi_rx,& rocker_port_poll_rx,64);
  #line 2613 
  rocker_carrier_init(rocker_port);
  #line 2615 
  dev->features |= 8193ULL;
  #line 2618 
  dev->min_mtu = 68U;
  #line 2619 
  dev->max_mtu = 9000U;
  #line 2621 
  err = rocker_world_port_pre_init(rocker_port);
  #line 2622 
  if (err != 0) {
    #line 2623 
    _dev_err(& pdev->dev,(char *)"port world pre-init failed\n");
    #line 2624 
    goto err_world_port_pre_init;
  }
  #line 2626 
  err = cif_register_netdev(dev);
  #line 2627 
  if (err != 0) {
    #line 2628 
    _dev_err(& pdev->dev,(char *)"register_netdev failed\n");
    #line 2629 
    goto err_register_netdev;
  }
  #line 2631 
  *(rocker->ports + (unsigned long)port_number) = rocker_port;
  #line 2633 
  err = rocker_world_port_init(rocker_port);
  #line 2634 
  if (err != 0) {
    #line 2635 
    _dev_err(& pdev->dev,(char *)"port world init failed\n");
    #line 2636 
    goto err_world_port_init;
  }
  #line 2639 
  return 0;
  #line 2641 
  err_world_port_init: 
                       #line 2641 
  ;
  #line 2642 
  *(rocker->ports + (unsigned long)port_number) = (struct rocker_port *)0;
  #line 2643 
  cif_unregister_netdev(dev);
  #line 2644 
  err_register_netdev: 
                       #line 2644 
  ;
  #line 2645 
  rocker_world_port_post_fini(rocker_port);
  #line 2646 
  err_world_port_pre_init: 
                           #line 2646 
  ;
  #line 2647 
  err_world_check_init: 
                        #line 2647 
  ;
  #line 2648 
  cif_free_netdev(dev);
  #line 2649 
  return err;
}

#line 2652  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static int rocker_probe_ports(struct rocker *rocker)
{
  #line 2654 
  int i;
  #line 2655 
  size_t alloc_size;
  #line 2656 
  int err;
  #line 2658 
  alloc_size = (unsigned long)rocker->port_count * 8UL;
  #line 2659 
  rocker->ports = (struct rocker_port **)kzalloc_0(alloc_size,3264U);
  #line 2660 
  if (rocker->ports == (struct rocker_port **)0) 
                                                 #line 2661 
                                                 return -12;
  #line 2662 
  i = 0;
  #line 2662 
  while (rocker->port_count > (unsigned int)i) {
    #line 2663 
    err = rocker_probe_port(rocker,(unsigned int)i);
    #line 2664 
    if (err != 0) 
                  #line 2665 
                  goto remove_ports;
    #line 2662 
    i ++;
  }
  #line 2667 
  return 0;
  #line 2669 
  remove_ports: 
                #line 2669 
  ;
  #line 2670 
  rocker_remove_ports(rocker);
  #line 2671 
  return err;
}

#line 2674  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static int rocker_msix_init(struct rocker *rocker)
{
  #line 2677 
  int msix_entries;
  #line 2678 
  int i;
  #line 2679 
  int err;
  #line 2676 
  struct pci_dev *pdev = rocker->pdev;
  #line 2681 
  msix_entries = pci_msix_vec_count(pdev);
  #line 2682 
  if (msix_entries < 0) 
                        #line 2683 
                        return msix_entries;
  #line 2685 
  if ((rocker->port_count + 2U) * 2U != (unsigned int)msix_entries) 
                                                                    #line 2686 
                                                                    return -22;
  #line 2688 
  rocker->msix_entries = (struct msix_entry *)kmalloc_array((unsigned long)msix_entries,8UL,3264U);
  #line 2691 
  if (rocker->msix_entries == (struct msix_entry *)0) 
                                                      #line 2692 
                                                      return -12;
  #line 2694 
  i = 0;
  #line 2694 
  while (i < msix_entries) {
    #line 2695 
    (rocker->msix_entries + (unsigned long)i)->entry = (unsigned short)i;
    #line 2694 
    i ++;
  }
  #line 2697 
  err = pci_enable_msix_exact(pdev,rocker->msix_entries,msix_entries);
  #line 2698 
  if (err < 0) 
               #line 2699 
               goto err_enable_msix;
  #line 2701 
  return 0;
  #line 2703 
  err_enable_msix: 
                   #line 2703 
  ;
  #line 2704 
  kfree((void *)rocker->msix_entries);
  #line 2705 
  return err;
}

#line 2708  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static void rocker_msix_fini(struct rocker *rocker)
{
  #line 2710 
  pci_disable_msix(rocker->pdev);
  #line 2711 
  kfree((void *)rocker->msix_entries);
  #line 2712 
  return;
}

#line 2714  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static bool rocker_port_dev_check(struct net_device *dev)
{
  #line 2716 
  return (_Bool)(dev->netdev_ops == & rocker_port_netdev_ops);
}

#line 2720  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static int rocker_switchdev_port_attr_set_event(struct net_device *netdev, struct switchdev_notifier_port_attr_info *port_attr_info)
{
  #line 2723 
  int err;
  #line 2725 
  err = rocker_port_attr_set(netdev,port_attr_info->attr,port_attr_info->trans);
  #line 2728 
  port_attr_info->handled = (_Bool)1;
  #line 2729 
  return notifier_from_errno(err);
}

#line 2740  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static void rocker_fdb_offload_notify(struct rocker_port *rocker_port, struct switchdev_notifier_fdb_info *recv_info)
{
  #line 2743 
  struct switchdev_notifier_fdb_info info;
  #line 2745 
  info.addr = recv_info->addr;
  #line 2746 
  info.vid = recv_info->vid;
  #line 2747 
  info.offloaded = (unsigned char)1U;
  #line 2748 
  call_switchdev_notifiers(5UL,rocker_port->dev,& info.info,(struct netlink_ext_ack *)0);
  #line 2750 
  return;
}

#line 2752  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static void rocker_switchdev_event_work(struct work_struct *work)
{
  #line 2755 
  void *__mptr;
  #line 2757 
  struct switchdev_notifier_fdb_info *fdb_info;
  #line 2758 
  int err;
  #line 2755 
  __mptr = (void *)work;
  #line 2754 
  struct rocker_switchdev_event_work *switchdev_work = ((struct rocker_switchdev_event_work *)__mptr);
  #line 2756 
  struct rocker_port *rocker_port = switchdev_work->rocker_port;
  #line 2760 
  rtnl_lock();
  #line 2761 
  switch (switchdev_work->event) {
    #line 2762 
    case (unsigned long)3: 
                           #line 2762 
    ;
    #line 2763 
    fdb_info = & switchdev_work->fdb_info;
    #line 2764 
    if ((unsigned int)fdb_info->added_by_user == 0U) 
                                                     #line 2765 
                                                     break;
    #line 2766 
    err = rocker_world_port_fdb_add(rocker_port,fdb_info);
    #line 2767 
    if (err != 0) {
      {
        #line 2768 
        bool branch;
        #line 2768 
        struct _ddebug __UNIQUE_ID_ddebug544 = {.modname = (char *)"rocker", .function = (char *)"rocker_switchdev_event_work", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c", .format = (char *)"fdb add failed err=%d\n", .lineno = (unsigned int)2768U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
        #line 2768 
        branch = arch_static_branch(& __UNIQUE_ID_ddebug544.key.dd_key_false.key,(_Bool)0);
        #line 2768 
        if ((long)((long)((int)branch != 0)) != 0L) 
                                                    #line 2768 
                                                    __dynamic_netdev_dbg(& __UNIQUE_ID_ddebug544,rocker_port->dev,(char *)"fdb add failed err=%d\n",err);
      }
      #line 2769 
      break;
    }
    #line 2771 
    rocker_fdb_offload_notify(rocker_port,fdb_info);
    #line 2772 
    break;
    #line 2773 
    case (unsigned long)4: 
                           #line 2773 
    ;
    #line 2774 
    fdb_info = & switchdev_work->fdb_info;
    #line 2775 
    if ((unsigned int)fdb_info->added_by_user == 0U) 
                                                     #line 2776 
                                                     break;
    #line 2777 
    err = rocker_world_port_fdb_del(rocker_port,fdb_info);
    #line 2778 
    if (err != 0) {
      #line 2779 
      bool branch_0;
      #line 2779 
      struct _ddebug __UNIQUE_ID_ddebug545 = {.modname = (char *)"rocker", .function = (char *)"rocker_switchdev_event_work", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c", .format = (char *)"fdb add failed err=%d\n", .lineno = (unsigned int)2779U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
      #line 2779 
      branch_0 = arch_static_branch(& __UNIQUE_ID_ddebug545.key.dd_key_false.key,(_Bool)0);
      #line 2779 
      if ((long)((long)((int)branch_0 != 0)) != 0L) 
                                                    #line 2779 
                                                    __dynamic_netdev_dbg(& __UNIQUE_ID_ddebug545,rocker_port->dev,(char *)"fdb add failed err=%d\n",err);
    }
    #line 2780 
    break;
  }
  #line 2782 
  rtnl_unlock();
  #line 2784 
  kfree((void *)switchdev_work->fdb_info.addr);
  #line 2785 
  kfree((void *)switchdev_work);
  #line 2786 
  dev_put(rocker_port->dev);
  #line 2787 
  return;
}

#line 2790  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static int rocker_switchdev_event(struct notifier_block *unused, unsigned long event, void *ptr)
{
  #line 2806 
  int __ret_warn_on;
  #line 2794 
  struct rocker_switchdev_event_work *switchdev_work;
  #line 2796 
  struct rocker_port *rocker_port;
  #line 2793 
  struct net_device *dev = switchdev_notifier_info_to_dev((struct switchdev_notifier_info *)ptr);
  #line 2795 
  struct switchdev_notifier_fdb_info *fdb_info = (struct switchdev_notifier_fdb_info *)ptr;
  #line 2798 
  if (! rocker_port_dev_check(dev)) 
                                    #line 2799 
                                    return 0;
  #line 2801 
  if (event == 8UL) {
    #line 2802 
    return rocker_switchdev_port_attr_set_event(dev,
                                             (struct switchdev_notifier_port_attr_info *)ptr);
  }
  #line 2804 
  rocker_port = (struct rocker_port *)netdev_priv(dev);
  #line 2805 
  switchdev_work = (struct rocker_switchdev_event_work *)kzalloc_0(128UL,2592U);
  #line 2806 
  __ret_warn_on = switchdev_work == (struct rocker_switchdev_event_work *)0;
  #line 2806 
  if ((long)(__ret_warn_on != 0) != 0L) {
    #line 2807 
    ldv_inline_asm();
    #line 2808 
    ldv_inline_asm();
  }
  #line 2806 
  if ((long)((long)(__ret_warn_on != 0)) != 0L) 
                                                #line 2807 
                                                return 32770;
  {
    #line 2809 
    struct lock_class_key __key;
    #line 2809 
    __init_work(& switchdev_work->work,0);
    #line 2809 
    atomic_long_t __constr_expr_44 = {.counter = 137438953408LL};
    #line 2809 
    switchdev_work->work.data = __constr_expr_44;
    #line 2809 
    lockdep_init_map(& switchdev_work->work.lockdep_map,(char *)"(work_completion)",& __key,0);
    #line 2809 
    INIT_LIST_HEAD_0(& switchdev_work->work.entry);
    #line 2809 
    switchdev_work->work.func = & rocker_switchdev_event_work;
  }
  #line 2810 
  switchdev_work->rocker_port = rocker_port;
  #line 2811 
  switchdev_work->event = event;
  #line 2813 
  switch (event) {
    #line 2814 
    case (unsigned long)3: 
                           #line 2814 
    ;
    #line 2815 
    case (unsigned long)4: 
                           #line 2815 
    ;
    #line 2816 
    memcpy((void *)(& switchdev_work->fdb_info),ptr,32UL);
    #line 2818 
    switchdev_work->fdb_info.addr = (unsigned char *)kzalloc_0(6UL,2592U);
    #line 2819 
    if ((long)(switchdev_work->fdb_info.addr == (unsigned char *)0U) != 0L) {
      #line 2820 
      kfree((void *)switchdev_work);
      #line 2821 
      return 32770;
    }
    #line 2824 
    ether_addr_copy(switchdev_work->fdb_info.addr,fdb_info->addr);
    #line 2827 
    dev_hold(dev);
    #line 2828 
    break;
    #line 2829 
    default: 
             #line 2829 
    ;
    #line 2830 
    kfree((void *)switchdev_work);
    #line 2831 
    return 0;
  }
  #line 2834 
  cif_queue_work((rocker_port->rocker)->rocker_owq,& switchdev_work->work);
  #line 2836 
  return 0;
}

#line 2840  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static int rocker_switchdev_port_obj_event(unsigned long event, struct net_device *netdev, struct switchdev_notifier_port_obj_info *port_obj_info)
{
  #line 2843 
  int err = -95;
  #line 2845 
  switch (event) {
    #line 2846 
    case (unsigned long)6: 
                           #line 2846 
    ;
    #line 2847 
    err = rocker_port_obj_add(netdev,port_obj_info->obj,port_obj_info->trans);
    #line 2849 
    break;
    #line 2850 
    case (unsigned long)7: 
                           #line 2850 
    ;
    #line 2851 
    err = rocker_port_obj_del(netdev,port_obj_info->obj);
    #line 2852 
    break;
  }
  #line 2855 
  port_obj_info->handled = (_Bool)1;
  #line 2856 
  return notifier_from_errno(err);
}

#line 2859  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static int rocker_switchdev_blocking_event(struct notifier_block *unused, unsigned long event, void *ptr)
{
  #line 2862 
  struct net_device *dev = switchdev_notifier_info_to_dev((struct switchdev_notifier_info *)ptr);
  #line 2864 
  if (! rocker_port_dev_check(dev)) 
                                    #line 2865 
                                    return 0;
  #line 2867 
  switch (event) {
    #line 2868 
    case (unsigned long)6: 
                           #line 2868 
    ;
    #line 2869 
    case (unsigned long)7: 
                           #line 2869 
    ;
    #line 2870 
    return rocker_switchdev_port_obj_event(event,dev,
                                        (struct switchdev_notifier_port_obj_info *)ptr);
    #line 2871 
    case (unsigned long)8: 
                           #line 2871 
    ;
    #line 2872 
    return rocker_switchdev_port_attr_set_event(dev,
                                             (struct switchdev_notifier_port_attr_info *)ptr);
  }
  #line 2875 
  return 0;
}

#line 2878  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static struct notifier_block rocker_switchdev_notifier = {.notifier_call = & rocker_switchdev_event};
#line 2882  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static struct notifier_block rocker_switchdev_blocking_notifier = {.notifier_call = & rocker_switchdev_blocking_event};
#line 2886  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static int rocker_probe(struct pci_dev *pdev, struct pci_device_id *id)
{
  #line 2888 
  struct notifier_block *nb;
  #line 2889 
  struct rocker *rocker;
  #line 2890 
  int err;
  #line 2929 
  unsigned long tmp_0;
  #line 2892 
  rocker = (struct rocker *)kzalloc_0(264UL,3264U);
  #line 2893 
  if (rocker == (struct rocker *)0) 
                                    #line 2894 
                                    return -12;
  #line 2896 
  err = pci_enable_device(pdev);
  #line 2897 
  if (err != 0) {
    #line 2898 
    _dev_err(& pdev->dev,(char *)"pci_enable_device failed\n");
    #line 2899 
    goto err_pci_enable_device;
  }
  #line 2902 
  err = pci_request_regions(pdev,(char *)(& rocker_driver_name));
  #line 2903 
  if (err != 0) {
    #line 2904 
    _dev_err(& pdev->dev,(char *)"pci_request_regions failed\n");
    #line 2905 
    goto err_pci_request_regions;
  }
  #line 2908 
  err = pci_set_dma_mask(pdev,18446744073709551615ULL);
  #line 2909 
  if (err == 0) {
    #line 2910 
    err = pci_set_consistent_dma_mask(pdev,18446744073709551615ULL);
    #line 2911 
    if (err != 0) {
      #line 2912 
      _dev_err(& pdev->dev,(char *)"pci_set_consistent_dma_mask failed\n");
      #line 2913 
      goto err_pci_set_dma_mask;
    }
  }
  else {
    #line 2916 
    err = pci_set_dma_mask(pdev,4294967295ULL);
    #line 2917 
    if (err != 0) {
      #line 2918 
      _dev_err(& pdev->dev,(char *)"pci_set_dma_mask failed\n");
      #line 2919 
      goto err_pci_set_dma_mask;
    }
  }
  #line 2923 
  if (pdev->resource[0].start == 0ULL && pdev->resource[0].end == pdev->resource[0].start || (pdev->resource[0].end - pdev->resource[0].start) + 1ULL <= 8191ULL) {
    #line 2924 
    _dev_err(& pdev->dev,(char *)"invalid PCI region size\n");
    #line 2925 
    err = -22;
    #line 2926 
    goto err_pci_resource_len_check;
  }
  #line 2929 
  if (pdev->resource[0].start != 0ULL || pdev->resource[0].end != pdev->resource[0].start) 
    #line 2929 
    tmp_0 = (unsigned long)((pdev->resource[0].end - pdev->resource[0].start) + 1ULL); else 
                                                                    #line 2929 
                                                                    tmp_0 = 0UL;
  #line 2929 
  ;
  #line 2929 
  rocker->hw_addr = (u8 *)ioremap(pdev->resource[0].start,tmp_0);
  #line 2931 
  if (rocker->hw_addr == (u8 *)0U) {
    #line 2932 
    _dev_err(& pdev->dev,(char *)"ioremap failed\n");
    #line 2933 
    err = -5;
    #line 2934 
    goto err_ioremap;
  }
  #line 2936 
  pci_set_master(pdev);
  #line 2938 
  rocker->pdev = pdev;
  #line 2939 
  pci_set_drvdata(pdev,(void *)rocker);
  #line 2941 
  rocker->port_count = readl((void *)(rocker->hw_addr + 772U));
  #line 2943 
  err = rocker_msix_init(rocker);
  #line 2944 
  if (err != 0) {
    #line 2945 
    _dev_err(& pdev->dev,(char *)"MSI-X init failed\n");
    #line 2946 
    goto err_msix_init;
  }
  #line 2949 
  err = rocker_basic_hw_test(rocker);
  #line 2950 
  if (err != 0) {
    #line 2951 
    _dev_err(& pdev->dev,(char *)"basic hw test failed\n");
    #line 2952 
    goto err_basic_hw_test;
  }
  #line 2955 
  writel(1U,(void *)(rocker->hw_addr + 768U));
  #line 2957 
  err = rocker_dma_rings_init(rocker);
  #line 2958 
  if (err != 0) 
                #line 2959 
                goto err_dma_rings_init;
  #line 2961 
  ;
  #line 2961 
  err = cif_request_irq(rocker_msix_vector(rocker,0U),& rocker_cmd_irq_handler,0UL,(char *)(& rocker_driver_name),(void *)rocker);
  #line 2964 
  if (err != 0) {
    #line 2965 
    _dev_err(& pdev->dev,(char *)"cannot assign cmd irq\n");
    #line 2966 
    goto err_request_cmd_irq;
  }
  #line 2969 
  ;
  #line 2969 
  err = cif_request_irq(rocker_msix_vector(rocker,1U),& rocker_event_irq_handler,0UL,(char *)(& rocker_driver_name),(void *)rocker);
  #line 2972 
  if (err != 0) {
    #line 2973 
    _dev_err(& pdev->dev,(char *)"cannot assign event irq\n");
    #line 2974 
    goto err_request_event_irq;
  }
  #line 2977 
  rocker->rocker_owq = alloc_workqueue((char *)(& rocker_driver_name),655370U,1);
  #line 2979 
  if (rocker->rocker_owq == (struct workqueue_struct *)0) {
    #line 2980 
    err = -12;
    #line 2981 
    goto err_alloc_ordered_workqueue;
  }
  #line 2984 
  err = rocker_probe_ports(rocker);
  #line 2985 
  if (err != 0) {
    #line 2986 
    _dev_err(& pdev->dev,(char *)"failed to probe ports\n");
    #line 2987 
    goto err_probe_ports;
  }
  #line 2993 
  rocker->fib_nb.notifier_call = & rocker_router_fib_event;
  #line 2994 
  err = register_fib_notifier(& init_net,& rocker->fib_nb,(void (*)(struct notifier_block *))0,(struct netlink_ext_ack *)0);
  #line 2995 
  if (err != 0) 
                #line 2996 
                goto err_register_fib_notifier;
  #line 2998 
  err = register_switchdev_notifier(& rocker_switchdev_notifier);
  #line 2999 
  if (err != 0) {
    #line 3000 
    _dev_err(& pdev->dev,(char *)"Failed to register switchdev notifier\n");
    #line 3001 
    goto err_register_switchdev_notifier;
  }
  #line 3004 
  nb = & rocker_switchdev_blocking_notifier;
  #line 3005 
  err = register_switchdev_blocking_notifier(nb);
  #line 3006 
  if (err != 0) {
    #line 3007 
    _dev_err(& pdev->dev,(char *)"Failed to register switchdev blocking notifier\n");
    #line 3008 
    goto err_register_switchdev_blocking_notifier;
  }
  #line 3011 
  rocker->hw.id = readq((void *)(rocker->hw_addr + 800U));
  #line 3013 
  _dev_info(& pdev->dev,(char *)"Rocker switch with id %*phN\n",8,& rocker->hw.id);
  #line 3016 
  return 0;
  #line 3018 
  err_register_switchdev_blocking_notifier: 
                                            #line 3018 
  ;
  #line 3019 
  unregister_switchdev_notifier(& rocker_switchdev_notifier);
  #line 3020 
  err_register_switchdev_notifier: 
                                   #line 3020 
  ;
  #line 3021 
  unregister_fib_notifier(& init_net,& rocker->fib_nb);
  #line 3022 
  err_register_fib_notifier: 
                             #line 3022 
  ;
  #line 3023 
  rocker_remove_ports(rocker);
  #line 3024 
  err_probe_ports: 
                   #line 3024 
  ;
  #line 3025 
  destroy_workqueue(rocker->rocker_owq);
  #line 3026 
  err_alloc_ordered_workqueue: 
                               #line 3026 
  ;
  #line 3027 
  ;
  #line 3027 
  cif_free_irq(rocker_msix_vector(rocker,1U),(void *)rocker);
  #line 3028 
  err_request_event_irq: 
                         #line 3028 
  ;
  #line 3029 
  ;
  #line 3029 
  cif_free_irq(rocker_msix_vector(rocker,0U),(void *)rocker);
  #line 3030 
  err_request_cmd_irq: 
                       #line 3030 
  ;
  #line 3031 
  rocker_dma_rings_fini(rocker);
  #line 3032 
  err_dma_rings_init: 
                      #line 3032 
  ;
  #line 3033 
  err_basic_hw_test: 
                     #line 3033 
  ;
  #line 3034 
  rocker_msix_fini(rocker);
  #line 3035 
  err_msix_init: 
                 #line 3035 
  ;
  #line 3036 
  iounmap((void *)rocker->hw_addr);
  #line 3037 
  err_ioremap: 
               #line 3037 
  ;
  #line 3038 
  err_pci_resource_len_check: 
                              #line 3038 
  ;
  #line 3039 
  err_pci_set_dma_mask: 
                        #line 3039 
  ;
  #line 3040 
  pci_release_regions(pdev);
  #line 3041 
  err_pci_request_regions: 
                           #line 3041 
  ;
  #line 3042 
  pci_disable_device(pdev);
  #line 3043 
  err_pci_enable_device: 
                         #line 3043 
  ;
  #line 3044 
  kfree((void *)rocker);
  #line 3045 
  return err;
}

#line 3048  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static void rocker_remove(struct pci_dev *pdev)
{
  #line 3051 
  struct notifier_block *nb;
  #line 3050 
  struct rocker *rocker = pci_get_drvdata(pdev);
  #line 3053 
  nb = & rocker_switchdev_blocking_notifier;
  #line 3054 
  unregister_switchdev_blocking_notifier(nb);
  #line 3056 
  unregister_switchdev_notifier(& rocker_switchdev_notifier);
  #line 3057 
  unregister_fib_notifier(& init_net,& rocker->fib_nb);
  #line 3058 
  rocker_remove_ports(rocker);
  #line 3059 
  writel(1U,(void *)(rocker->hw_addr + 768U));
  #line 3060 
  destroy_workqueue(rocker->rocker_owq);
  #line 3061 
  ;
  #line 3061 
  cif_free_irq(rocker_msix_vector(rocker,1U),(void *)rocker);
  #line 3062 
  ;
  #line 3062 
  cif_free_irq(rocker_msix_vector(rocker,0U),(void *)rocker);
  #line 3063 
  rocker_dma_rings_fini(rocker);
  #line 3064 
  rocker_msix_fini(rocker);
  #line 3065 
  iounmap((void *)rocker->hw_addr);
  #line 3066 
  pci_release_regions(rocker->pdev);
  #line 3067 
  pci_disable_device(rocker->pdev);
  #line 3068 
  kfree((void *)rocker);
  #line 3069 
  return;
}

#line 3071  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static struct pci_driver rocker_pci_driver = {.name = (char *)(& rocker_driver_name), .id_table = (struct pci_device_id *)(& rocker_pci_id_table), .probe = & rocker_probe, .remove = & rocker_remove};
#line 3082  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static bool rocker_port_dev_check_under(struct net_device *dev, struct rocker *rocker)
{
  #line 3085 
  struct rocker_port *rocker_port;
  #line 3087 
  if (! rocker_port_dev_check(dev)) 
                                    #line 3088 
                                    return (_Bool)0;
  #line 3090 
  rocker_port = (struct rocker_port *)netdev_priv(dev);
  #line 3091 
  if (rocker_port->rocker != rocker) 
                                     #line 3092 
                                     return (_Bool)0;
  #line 3094 
  return (_Bool)1;
}

#line 3102  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static int rocker_lower_dev_walk(struct net_device *lower_dev, void *_data)
{
  #line 3104 
  struct rocker_walk_data *data = (struct rocker_walk_data *)_data;
  #line 3105 
  int ret = 0;
  #line 3107 
  if ((int)rocker_port_dev_check_under(lower_dev,data->rocker) != 0) {
    #line 3108 
    data->port = (struct rocker_port *)netdev_priv(lower_dev);
    #line 3109 
    ret = 1;
  }
  #line 3112 
  return ret;
}

#line 3115  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
struct rocker_port *rocker_port_dev_lower_find(struct net_device *dev, struct rocker *rocker)
{
  #line 3118 
  struct rocker_walk_data data;
  #line 3120 
  if ((int)rocker_port_dev_check_under(dev,rocker) != 0) {
    #line 3121 
    return (struct rocker_port *)netdev_priv(dev);
  }
  #line 3123 
  data.rocker = rocker;
  #line 3124 
  data.port = (struct rocker_port *)0;
  #line 3125 
  netdev_walk_all_lower_dev(dev,& rocker_lower_dev_walk,(void *)(& data));
  #line 3127 
  return data.port;
}

#line 3130  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static int rocker_netdevice_event(struct notifier_block *unused, unsigned long event, void *ptr)
{
  #line 3134 
  struct netdev_notifier_changeupper_info *info;
  #line 3135 
  struct rocker_port *rocker_port;
  #line 3136 
  int err;
  #line 3133 
  struct net_device *dev = netdev_notifier_info_to_dev((struct netdev_notifier_info *)ptr);
  #line 3138 
  if (! rocker_port_dev_check(dev)) 
                                    #line 3139 
                                    return 0;
  #line 3141 
  switch (event) {
    #line 3142 
    case (unsigned long)21: 
                            #line 3142 
    ;
    #line 3143 
    info = (struct netdev_notifier_changeupper_info *)ptr;
    #line 3144 
    if (! info->master) 
                        #line 3145 
                        goto out;
    #line 3146 
    rocker_port = (struct rocker_port *)netdev_priv(dev);
    #line 3147 
    if ((int)info->linking != 0) {
      #line 3148 
      err = rocker_world_port_master_linked(rocker_port,info->upper_dev);
      #line 3150 
      if (err != 0) 
                    #line 3151 
                    netdev_warn(dev,(char *)"failed to reflect master linked (err %d)\n",err);
    }
    else {
      #line 3154 
      err = rocker_world_port_master_unlinked(rocker_port,info->upper_dev);
      #line 3156 
      if (err != 0) 
                    #line 3157 
                    netdev_warn(dev,(char *)"failed to reflect master unlinked (err %d)\n",err);
    }
  }
  #line 3161 
  out: 
       #line 3161 
  ;
  #line 3162 
  return 0;
}

#line 3165  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static struct notifier_block rocker_netdevice_nb = {.notifier_call = & rocker_netdevice_event};
#line 3173  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static int rocker_netevent_event(struct notifier_block *unused, unsigned long event, void *ptr)
{
  #line 3176 
  struct rocker_port *rocker_port;
  #line 3177 
  struct net_device *dev;
  #line 3179 
  int err;
  #line 3178 
  struct neighbour *n = (struct neighbour *)ptr;
  #line 3181 
  switch (event) {
    #line 3182 
    case (unsigned long)1: 
                           #line 3182 
    ;
    #line 3183 
    if (n->tbl != & arp_tbl) 
                             #line 3184 
                             return 0;
    #line 3185 
    dev = n->dev;
    #line 3186 
    if (! rocker_port_dev_check(dev)) 
                                      #line 3187 
                                      return 0;
    #line 3188 
    rocker_port = (struct rocker_port *)netdev_priv(dev);
    #line 3189 
    err = rocker_world_port_neigh_update(rocker_port,n);
    #line 3190 
    if (err != 0) 
                  #line 3191 
                  netdev_warn(dev,(char *)"failed to handle neigh update (err %d)\n",err);
    #line 3193 
    break;
  }
  #line 3196 
  return 0;
}

#line 3199  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static struct notifier_block rocker_netevent_nb = {.notifier_call = & rocker_netevent_event};
#line 3207  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static int rocker_module_init(void)
{
  #line 3209 
  int err;
  #line 3211 
  register_netdevice_notifier(& rocker_netdevice_nb);
  #line 3212 
  register_netevent_notifier(& rocker_netevent_nb);
  #line 3213 
  err = cif___pci_register_driver(& rocker_pci_driver,& __this_module,(char *)"rocker");
  #line 3214 
  if (err != 0) 
                #line 3215 
                goto err_pci_register_driver;
  #line 3216 
  return 0;
  #line 3218 
  err_pci_register_driver: 
                           #line 3218 
  ;
  #line 3219 
  unregister_netevent_notifier(& rocker_netevent_nb);
  #line 3220 
  unregister_netdevice_notifier(& rocker_netdevice_nb);
  #line 3221 
  return err;
}

#line 3224  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
static void rocker_module_exit(void)
{
  #line 3226 
  unregister_netevent_notifier(& rocker_netevent_nb);
  #line 3227 
  unregister_netdevice_notifier(& rocker_netdevice_nb);
  #line 3228 
  cif_pci_unregister_driver(& rocker_pci_driver);
  #line 3229 
  return;
}

#line 3238  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/rocker/rocker_main.c"
struct pci_device_id __mod_pci__rocker_pci_id_table_device_table[2U];
#line 93  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_main.i.aux"
struct pci_driver *emg_alias_rocker_pci_driver = & rocker_pci_driver;
#line 94  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_main.i.aux"
struct pci_device_id (*emg_alias_rocker_pci_id_table)[2U] = & rocker_pci_id_table;
#line 97 
#line 97 
int emg___pci_register_driver(struct pci_driver *arg0, struct module *arg1, char *arg2);
#line 98 
#line 98 
struct net_device *emg_alloc_etherdev_mqs(int arg0, unsigned int arg1, unsigned int arg2);
#line 100 
#line 100 
void *emg_free_irq(unsigned int arg0, void *arg1);
#line 101 
#line 101 
void emg_free_netdev(struct net_device *arg0);
#line 103 
#line 103 
void emg_pci_unregister_driver(struct pci_driver *arg0);
#line 104 
#line 104 
_Bool emg_queue_work(struct workqueue_struct *arg0, struct work_struct *arg1);
#line 105 
#line 105 
int emg_register_netdev(struct net_device *arg0);
#line 106 
#line 106 
int emg_request_irq(unsigned int arg0, enum irqreturn (*arg1)(int , void *), unsigned long arg2, char *arg3, void *arg4);
#line 108 
#line 108 
void emg_unregister_netdev(struct net_device *arg0);
#line 112  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_main.i.aux"
enum irqreturn emg_wrapper_rocker_cmd_irq_handler(int arg0, void *arg1)
{
  #line 113 
  return rocker_cmd_irq_handler(arg0,arg1);
}

#line 117  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_main.i.aux"
enum irqreturn emg_wrapper_rocker_event_irq_handler(int arg0, void *arg1)
{
  #line 118 
  return rocker_event_irq_handler(arg0,arg1);
}

#line 122  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_main.i.aux"
int emg_wrapper_rocker_port_change_mtu(struct net_device *arg0, int arg1)
{
  #line 123 
  return rocker_port_change_mtu(arg0,arg1);
}

#line 127  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_main.i.aux"
int emg_wrapper_rocker_port_change_proto_down(struct net_device *arg0, _Bool arg1)
{
  #line 128 
  return rocker_port_change_proto_down(arg0,(_Bool)((bool)((int)arg1) != 0));
}

#line 132  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_main.i.aux"
void emg_wrapper_rocker_port_get_drvinfo(struct net_device *arg0, struct ethtool_drvinfo *arg1)
{
  #line 133 
  rocker_port_get_drvinfo(arg0,arg1);
  #line 134 
  return;
}

#line 137  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_main.i.aux"
int emg_wrapper_rocker_port_get_link_ksettings(struct net_device *arg0, struct ethtool_link_ksettings *arg1)
{
  #line 138 
  return rocker_port_get_link_ksettings(arg0,arg1);
}

#line 142  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_main.i.aux"
int emg_wrapper_rocker_port_get_phys_port_name(struct net_device *arg0, char *arg1, unsigned long arg2)
{
  #line 143 
  return rocker_port_get_phys_port_name(arg0,arg1,arg2);
}

#line 147  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_main.i.aux"
int emg_wrapper_rocker_port_get_port_parent_id(struct net_device *arg0, struct netdev_phys_item_id *arg1)
{
  #line 148 
  return rocker_port_get_port_parent_id(arg0,arg1);
}

#line 152  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_main.i.aux"
int emg_wrapper_rocker_port_get_sset_count(struct net_device *arg0, int arg1)
{
  #line 153 
  return rocker_port_get_sset_count(arg0,arg1);
}

#line 157  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_main.i.aux"
void emg_wrapper_rocker_port_get_stats(struct net_device *arg0, struct ethtool_stats *arg1, unsigned long long *arg2)
{
  #line 158 
  rocker_port_get_stats(arg0,arg1,arg2);
  #line 159 
  return;
}

#line 162  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_main.i.aux"
void emg_wrapper_rocker_port_get_strings(struct net_device *arg0, unsigned int arg1, unsigned char *arg2)
{
  #line 163 
  rocker_port_get_strings(arg0,arg1,arg2);
  #line 164 
  return;
}

#line 167  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_main.i.aux"
void emg_wrapper_rocker_port_neigh_destroy(struct net_device *arg0, struct neighbour *arg1)
{
  #line 168 
  rocker_port_neigh_destroy(arg0,arg1);
  #line 169 
  return;
}

#line 172  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_main.i.aux"
int emg_wrapper_rocker_port_open(struct net_device *arg0)
{
  #line 173 
  return rocker_port_open(arg0);
}

#line 177  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_main.i.aux"
int emg_wrapper_rocker_port_set_link_ksettings(struct net_device *arg0, struct ethtool_link_ksettings *arg1)
{
  #line 178 
  return rocker_port_set_link_ksettings(arg0,arg1);
}

#line 182  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_main.i.aux"
int emg_wrapper_rocker_port_set_mac_address(struct net_device *arg0, void *arg1)
{
  #line 183 
  return rocker_port_set_mac_address(arg0,arg1);
}

#line 187  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_main.i.aux"
int emg_wrapper_rocker_port_stop(struct net_device *arg0)
{
  #line 188 
  return rocker_port_stop(arg0);
}

#line 192  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_main.i.aux"
enum netdev_tx emg_wrapper_rocker_port_xmit(struct sk_buff *arg0, struct net_device *arg1)
{
  #line 193 
  return rocker_port_xmit(arg0,arg1);
}

#line 197  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_main.i.aux"
int emg_wrapper_rocker_probe(struct pci_dev *arg0, struct pci_device_id *arg1)
{
  #line 198 
  return rocker_probe(arg0,arg1);
}

#line 202  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_main.i.aux"
void emg_wrapper_rocker_remove(struct pci_dev *arg0)
{
  #line 203 
  rocker_remove(arg0);
  #line 204 
  return;
}

#line 207  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_main.i.aux"
enum irqreturn emg_wrapper_rocker_rx_irq_handler(int arg0, void *arg1)
{
  #line 208 
  return rocker_rx_irq_handler(arg0,arg1);
}

#line 212  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_main.i.aux"
enum irqreturn emg_wrapper_rocker_test_irq_handler(int arg0, void *arg1)
{
  #line 213 
  return rocker_test_irq_handler(arg0,arg1);
}

#line 217  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_main.i.aux"
enum irqreturn emg_wrapper_rocker_tx_irq_handler(int arg0, void *arg1)
{
  #line 218 
  return rocker_tx_irq_handler(arg0,arg1);
}

#line 222  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_main.i.aux"
void emg_rocker_module_exit(void)
{
  #line 223 
  rocker_module_exit();
  #line 224 
  return;
}

#line 226  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_main.i.aux"
int emg_rocker_module_init(void)
{
  #line 227 
  return rocker_module_init();
}

#line 245  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_main.i.aux"
static void cif_set_bit(long nr, unsigned long *addr)
{
  #line 248 
  ldv_set_bit(nr,addr);
  #line 249 
  return;
}

#line 252  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_main.i.aux"
static void cif_clear_bit_0(long nr, unsigned long *addr)
{
  #line 255 
  ldv_clear_bit(nr,addr);
  #line 256 
  return;
}

#line 259  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_main.i.aux"
static void INIT_LIST_HEAD_0(struct list_head *list)
{
  #line 262 
  ldv_init_list_head(list);
  #line 263 
  return;
}

#line 322  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_main.i.aux"
static void cif_bitmap_zero(unsigned long *dst, unsigned int nbits)
{
  #line 325 
  ldv_bitmap_zero(dst,nbits);
  #line 326 
  return;
}

#line 429  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_main.i.aux"
static bool cif_queue_work(struct workqueue_struct *wq, struct work_struct *work)
{
  #line 433 
  return emg_queue_work(wq,work);
}

#line 582  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_main.i.aux"
static void *kmalloc_array(size_t n, size_t size, gfp_t flags)
{
  #line 585 
  return ldv_kmalloc_array(n,size,flags);
}

#line 589  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_main.i.aux"
static void *kcalloc_0(size_t n, size_t size, gfp_t flags)
{
  #line 592 
  return ldv_kcalloc(n,size,flags);
}

#line 610  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_main.i.aux"
static void *kzalloc_0(size_t size, gfp_t flags)
{
  #line 613 
  return ldv_kzalloc(size,flags);
}

#line 932  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_main.i.aux"
static int cif_request_irq(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char *name, void *dev)
{
  #line 936 
  return emg_request_irq(irq,handler,flags,name,dev);
}

#line 940  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_main.i.aux"
static void *cif_free_irq(unsigned int ldv_func_arg1, void *ldv_func_arg2)
{
  #line 944 
  return emg_free_irq(ldv_func_arg1,ldv_func_arg2);
}

#line 948  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_main.i.aux"
static void cif_spin_lock_cmd_ring_lock_of_rocker(spinlock_t *lock)
{
  #line 951 
  ldv_spin_model_lock((char *)"cmd_ring_lock_of_rocker");
  #line 953 
  spin_lock(lock);
  #line 954 
  return;
}

#line 957  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_main.i.aux"
static void cif_spin_unlock_cmd_ring_lock_of_rocker(spinlock_t *lock)
{
  #line 960 
  ldv_spin_model_unlock((char *)"cmd_ring_lock_of_rocker");
  #line 962 
  spin_unlock(lock);
  #line 963 
  return;
}

#line 966  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_main.i.aux"
static void cif___ldv_spin_lock_cmd_ring_lock_of_rocker(spinlock_t *lock)
{
  #line 969 
  ldv_spin_model_lock((char *)"cmd_ring_lock_of_rocker");
  #line 971 
  __ldv_spin_lock(lock);
  #line 972 
  return;
}

#line 975  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_main.i.aux"
static void cif_spin_unlock_irqrestore_cmd_ring_lock_of_rocker(spinlock_t *lock, unsigned long flags)
{
  #line 978 
  ldv_spin_model_unlock((char *)"cmd_ring_lock_of_rocker");
  #line 980 
  spin_unlock_irqrestore_0(lock,flags);
  #line 981 
  return;
}

#line 984  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_main.i.aux"
static void cif_unregister_netdev(struct net_device *dev)
{
  #line 988 
  emg_unregister_netdev(dev);
  #line 989 
  return;
}

#line 992  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_main.i.aux"
static void cif_free_netdev(struct net_device *dev)
{
  #line 996 
  emg_free_netdev(dev);
  #line 997 
  return;
}

#line 1000  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_main.i.aux"
static struct net_device *cif_alloc_etherdev_mqs(int sizeof_priv, unsigned int txqs, unsigned int rxqs)
{
  #line 1004 
  return emg_alloc_etherdev_mqs(sizeof_priv,txqs,rxqs);
}

#line 1008  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_main.i.aux"
static int cif_register_netdev(struct net_device *dev)
{
  #line 1012 
  return emg_register_netdev(dev);
}

#line 1016  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_main.i.aux"
static int cif___pci_register_driver(struct pci_driver *ldv_func_arg1, struct module *ldv_func_arg2, char *mod_name)
{
  #line 1020 
  return emg___pci_register_driver(ldv_func_arg1,ldv_func_arg2,mod_name);
}

#line 1024  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/0/concurrency safety/weaver/rocker_main.i.aux"
static void cif_pci_unregister_driver(struct pci_driver *dev)
{
  #line 1028 
  emg_pci_unregister_driver(dev);
  #line 1029 
  return;
}

#line 20  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/common/inline_asm.c"
void ldv_inline_asm(void)
{
  #line 24 
  return;
}

#line 20  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
void ldv_atomic_add(int i, atomic_t *v)
{
  #line 22 
  v->counter += i;
  #line 23 
  return;
}

#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
void ldv_atomic_sub(int i, atomic_t *v)
{
  #line 27 
  v->counter -= i;
  #line 28 
  return;
}

#line 30  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
int ldv_atomic_sub_and_test(int i, atomic_t *v)
{
  #line 32 
  v->counter -= i;
  #line 33 
  if (v->counter != 0) 
                       #line 34 
                       return 0;
  #line 36 
  return 1;
}

#line 39  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
void ldv_atomic_inc(atomic_t *v)
{
  #line 41 
  (v->counter) ++;
  #line 42 
  return;
}

#line 44  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
void ldv_atomic_dec(atomic_t *v)
{
  #line 46 
  (v->counter) --;
  #line 47 
  return;
}

#line 49  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
int ldv_atomic_dec_and_test(atomic_t *v)
{
  #line 51 
  (v->counter) --;
  #line 52 
  if (v->counter != 0) 
                       #line 53 
                       return 0;
  #line 55 
  return 1;
}

#line 58  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
int ldv_atomic_inc_and_test(atomic_t *v)
{
  #line 60 
  (v->counter) ++;
  #line 61 
  if (v->counter != 0) 
                       #line 62 
                       return 0;
  #line 64 
  return 1;
}

#line 67  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
int ldv_atomic_add_return(int i, atomic_t *v)
{
  #line 69 
  v->counter += i;
  #line 70 
  return v->counter;
}

#line 73  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
int ldv_atomic_add_negative(int i, atomic_t *v)
{
  #line 75 
  v->counter += i;
  #line 76 
  return v->counter < 0;
}

#line 79  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
int ldv_atomic_inc_short(short *v)
{
  #line 81 
  *v = (short)((unsigned int)*v + 1U);
  #line 82 
  return (int)*v;
}

#line 20  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/current.c"
static struct task_struct ldv_current;
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/current.c"
struct task_struct *ldv_get_current(void)
{
  #line 28 
  ldv_current.pid = 1;
  #line 29 
  return & ldv_current;
}

#line 32  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 28  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
void ldv_switch_to_interrupt_context(void);
#line 42  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 34  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
void ldv_switch_to_process_context(void);
#line 50  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 40  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
bool ldv_in_interrupt_context(void);
#line 112  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 55  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
int ldv_post_init(int init_ret_val);
#line 132  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 61  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
int ldv_post_probe(int probe_ret_val);
#line 133  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 133 
void ldv_check_return_value_probe(int);
#line 141 
#line 68  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
int ldv_filter_err_code(int ret_val);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/common.h"
#line 23 
void __VERIFIER_assume(int);
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
static bool __ldv_in_interrupt_context = (_Bool)0;
#line 28  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
void ldv_switch_to_interrupt_context(void)
{
  #line 31 
  __ldv_in_interrupt_context = (_Bool)1;
  #line 32 
  return;
}

#line 34  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
void ldv_switch_to_process_context(void)
{
  #line 37 
  __ldv_in_interrupt_context = (_Bool)0;
  #line 38 
  return;
}

#line 40  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
bool ldv_in_interrupt_context(void)
{
  #line 42 
  return __ldv_in_interrupt_context;
}

#line 45  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
static int ldv_filter_positive_int(int val)
{
  #line 47 
  __VERIFIER_assume(val <= 0);
  #line 48 
  return val;
}

#line 55  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
int ldv_post_init(int init_ret_val)
{
  #line 57 
  return ldv_filter_positive_int(init_ret_val);
}

#line 61  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
int ldv_post_probe(int probe_ret_val)
{
  #line 63 
  ldv_check_return_value_probe(probe_ret_val);
  #line 64 
  return ldv_filter_positive_int(probe_ret_val);
}

#line 68  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
int ldv_filter_err_code(int ret_val)
{
  #line 70 
  return ldv_filter_positive_int(ret_val);
}

#line 28  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/common/list.h"
#line 28 
void ldv_save_allocated_memory_to_list(void *);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/device.h"
#line 29  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
void *ldv_dev_get_drvdata(struct device *dev);
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/device.h"
#line 43  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
int ldv_dev_set_drvdata(struct device *dev, void *data);
#line 57  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 57 
void *ldv_xzalloc(size_t size);
#line 29  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
void *ldv_dev_get_drvdata(struct device *dev)
{
  #line 31 
  if (dev != (struct device *)0 && dev->p != (struct device_private *)0) 
    #line 32 
    return (dev->p)->driver_data;
  #line 34 
  return (void *)0;
}

#line 43  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
int ldv_dev_set_drvdata(struct device *dev, void *data)
{
  #line 45 
  dev->p = (struct device_private *)ldv_xzalloc(8UL);
  #line 46 
  ldv_save_allocated_memory_to_list((void *)dev->p);
  #line 47 
  (dev->p)->driver_data = data;
  #line 49 
  return 0;
}

#line 156  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 156 
void ldv_check_alloc_flags(gfp_t);
#line 48  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 48 
void *ldv_malloc(size_t size);
#line 49 
#line 49 
void *ldv_calloc(size_t nmemb, size_t size);
#line 50 
#line 50 
void *ldv_zalloc(size_t size);
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/devres.c"
void *ldv_devm_kmalloc(size_t size, gfp_t flags)
{
  #line 26 
  void *res;
  #line 28 
  ldv_check_alloc_flags(flags);
  #line 29 
  res = ldv_malloc(size);
  #line 30 
  ldv_save_allocated_memory_to_list(res);
  #line 32 
  return res;
}

#line 35  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/devres.c"
void *ldv_devm_kzalloc(size_t size, gfp_t flags)
{
  #line 37 
  void *res;
  #line 39 
  ldv_check_alloc_flags(flags);
  #line 40 
  res = ldv_zalloc(size);
  #line 41 
  ldv_save_allocated_memory_to_list(res);
  #line 43 
  return res;
}

#line 46  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/devres.c"
void *ldv_devm_kmalloc_array(size_t n, size_t size, gfp_t flags)
{
  #line 48 
  void *res;
  #line 50 
  ldv_check_alloc_flags(flags);
  #line 51 
  res = ldv_malloc(n * size);
  #line 52 
  ldv_save_allocated_memory_to_list(res);
  #line 54 
  return res;
}

#line 57  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/devres.c"
void *ldv_devm_kcalloc(size_t n, size_t size, gfp_t flags)
{
  #line 59 
  void *res;
  #line 61 
  ldv_check_alloc_flags(flags);
  #line 62 
  res = ldv_calloc(n,size);
  #line 63 
  ldv_save_allocated_memory_to_list(res);
  #line 65 
  return res;
}

#line 51  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 51 
void ldv_free(void *s);
#line 59 
#line 59 
void *ldv_malloc_unknown_size(void);
#line 31  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 31 
int ldv_undef_int_positive(void);
#line 40 
#line 40 
int ldv_undef_int_nonpositive(void);
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/firmware_loader.c"
int ldv_request_firmware(struct firmware **fw)
{
  #line 27 
  int retval;
  #line 26 
  struct firmware *_fw = (struct firmware *)0;
  #line 29 
  retval = ldv_undef_int_nonpositive();
  #line 31 
  if (retval == 0) {
    #line 33 
    _fw = (struct firmware *)ldv_xzalloc(32UL);
    #line 34 
    _fw->data = (u8 *)ldv_malloc_unknown_size();
    #line 35 
    __VERIFIER_assume(_fw->data != (u8 *)0U);
    #line 36 
    _fw->size = (unsigned long)ldv_undef_int_positive();
  }
  #line 39 
  *fw = _fw;
  #line 41 
  return retval;
}

#line 44  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/firmware_loader.c"
void ldv_release_firmware(struct firmware *fw)
{
  #line 46 
  if (fw != (struct firmware *)0) {
    #line 48 
    ldv_free((void *)fw->data);
    #line 49 
    ldv_free((void *)fw);
  }
  #line 51 
  return;
}

#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/i2c.h"
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/i2c/i2c-core-smbus.c"
s32 ldv_i2c_smbus_read_block_data(u8 *values);
#line 55  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 55 
void *ldv_xmalloc(size_t size);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 23 
int ldv_undef_int(void);
#line 34 
#line 34 
int ldv_undef_int_negative(void);
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/i2c/i2c-core-smbus.c"
s32 ldv_i2c_smbus_read_block_data(u8 *values)
{
  #line 27 
  __u8 size;
  #line 28 
  char *bytes;
  #line 30 
  if (ldv_undef_int() != 0) {
    #line 33 
    size = (unsigned char)ldv_undef_int_positive();
    #line 35 
    __VERIFIER_assume((unsigned int)size <= 32U);
    #line 37 
    bytes = (char *)ldv_xmalloc((unsigned long)size);
    #line 39 
    memcpy((void *)values,(void *)bytes,(unsigned long)size);
    #line 40 
    ldv_free((void *)bytes);
    #line 42 
    return (int)size;
  }
  else {
    #line 46 
    return ldv_undef_int_negative();
  }
}

#line 988  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
__inline static void v4l2_set_subdevdata(struct v4l2_subdev *sd, void *p)
{
  #line 990 
  sd->dev_priv = p;
  #line 991 
  return;
}

#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/media/v4l2-common.h"
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/media/v4l2-core/v4l2-i2c.c"
void ldv_v4l2_i2c_subdev_init(struct v4l2_subdev *sd, struct i2c_client *client, struct v4l2_subdev_ops *ops);
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/media/v4l2-core/v4l2-i2c.c"
void ldv_v4l2_i2c_subdev_init(struct v4l2_subdev *sd, struct i2c_client *client, struct v4l2_subdev_ops *ops)
{
  #line 26 
  sd->ops = ops;
  #line 27 
  v4l2_set_subdevdata(sd,(void *)client);
  #line 28 
  ldv_dev_set_drvdata(& client->dev,(void *)sd);
  #line 29 
  return;
}

#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/spi.c"
struct spi_controller *ldv_spi_alloc_master(struct device *host, unsigned int size)
{
  #line 25 
  struct spi_controller *master;
  #line 27 
  master = (struct spi_controller *)ldv_zalloc((unsigned long)size + 2936UL);
  #line 29 
  if (master == (struct spi_controller *)0) 
                                            #line 30 
                                            return (struct spi_controller *)0;
  #line 32 
  ldv_dev_set_drvdata(& master->dev,(void *)(master + 1U));
  #line 34 
  return master;
}

#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/fb.h"
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/video/fbdev/core/fbsysfs.c"
struct fb_info *ldv_framebuffer_alloc(size_t size);
#line 26  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/fb.h"
#line 38  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/video/fbdev/core/fbsysfs.c"
void ldv_framebuffer_release(struct fb_info *info);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/video/fbdev/core/fbsysfs.c"
struct fb_info *ldv_framebuffer_alloc(size_t size)
{
  #line 25 
  struct fb_info *info;
  #line 27 
  info = (struct fb_info *)ldv_zalloc(size + 1568UL);
  #line 29 
  if (info == (struct fb_info *)0) 
                                   #line 30 
                                   return (struct fb_info *)0;
  #line 32 
  if (size != 0UL) 
                   #line 33 
                   info->par = (void *)((char *)info + 1568UL);
  #line 35 
  return info;
}

#line 38  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/video/fbdev/core/fbsysfs.c"
void ldv_framebuffer_release(struct fb_info *info)
{
  #line 40 
  if (info == (struct fb_info *)0) 
                                   #line 41 
                                   return;
  #line 44 
  ldv_free((void *)info->apertures);
  #line 46 
  ldv_free((void *)info);
  #line 47 
  return;
}

#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/err.h"
#line 59  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/err.c"
bool ldv_is_err_or_null(void *ptr);
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/err.h"
#line 35  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/err.c"
void *ldv_err_ptr(long error);
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/err.c"
bool ldv_is_err(void *ptr)
{
  #line 29 
  if ((unsigned long)ptr > 18446744073709547520UL) 
                                                   #line 30 
                                                   return (_Bool)1; else 
                                                                    #line 32 
                                                                    return (_Bool)0;
}

#line 35  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/err.c"
void *ldv_err_ptr(long error)
{
  #line 37 
  unsigned long result;
  #line 39 
  __VERIFIER_assume(error < 0L);
  #line 40 
  __VERIFIER_assume(error >= -4095L);
  #line 41 
  result = 18446744073709547520UL - (unsigned long)error;
  #line 42 
  __VERIFIER_assume(result > 18446744073709547520UL);
  #line 44 
  return (void *)result;
}

#line 47  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_ptr_err(void *ptr)
{
  #line 49 
  long result;
  #line 51 
  __VERIFIER_assume((unsigned long)ptr > 18446744073709547520UL);
  #line 52 
  result = (long)(18446744073709547520UL - (unsigned long)ptr);
  #line 53 
  __VERIFIER_assume(result < 0L);
  #line 54 
  __VERIFIER_assume(result >= -4095L);
  #line 56 
  return result;
}

#line 59  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/err.c"
bool ldv_is_err_or_null(void *ptr)
{
  #line 61 
  int tmp_0;
  #line 61 
  if (ptr == (void *)0) 
                        #line 61 
                        tmp_0 = 1;
  else {
    #line 61 
    if ((int)ldv_is_err(ptr) != 0) 
                                   #line 61 
                                   tmp_0 = 1; else 
                                                   #line 61 
                                                   tmp_0 = 0;
  }
  #line 61 
  return (_Bool)(tmp_0 != 0);
}

#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/panic.h"
#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/kernel/panic.c"
void ldv_panic(void);
#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/kernel/panic.c"
void ldv_panic(void)
{
  #line 23 
  __VERIFIER_assume(0);
  #line 24 
  return;
}

#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/bitmap.h"
#line 32  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_bitmap_set(unsigned long *map, unsigned int start, int nbits);
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/bitmap.h"
#line 52  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_bitmap_clear(unsigned long *map, unsigned int start, int nbits);
#line 29  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/bitmap.h"
#line 78  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
unsigned long ldv_bitmap_find_next_zero_area(unsigned long *map, unsigned long size, unsigned long start, unsigned int nr, unsigned long align_mask);
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/find_bit.h"
#line 22 
unsigned long ldv_find_next_bit(unsigned long *addr, unsigned long size, unsigned long offset);
#line 23 
#line 23 
unsigned long ldv_find_next_zero_bit(unsigned long *addr, unsigned long size, unsigned long offset);
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_set_bit(long nr, unsigned long *addr)
{
  #line 24 
  *(addr + (unsigned long)nr / 64UL) |= 1UL << ((unsigned long)nr & 63UL);
  #line 25 
  return;
}

#line 27  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_clear_bit(long nr, unsigned long *addr)
{
  #line 29 
  *(addr + (unsigned long)nr / 64UL) &= ~ (1UL << ((unsigned long)nr & 63UL));
  #line 30 
  return;
}

#line 32  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_bitmap_set(unsigned long *map, unsigned int start, int nbits)
{
  #line 34 
  unsigned long *p = map + (unsigned long)(start / 64U);
  #line 35 
  unsigned int size = start + (unsigned int)nbits;
  #line 36 
  int bits_to_set = (int)(64U - (start & 63U));
  #line 37 
  unsigned long mask_to_set = 18446744073709551615UL << ((unsigned long)start & 63UL);
  #line 39 
  while (nbits - bits_to_set >= 0) {
    #line 40 
    *p |= mask_to_set;
    #line 41 
    nbits -= bits_to_set;
    #line 42 
    bits_to_set = 64;
    #line 43 
    mask_to_set = 18446744073709551615UL;
    #line 44 
    p ++;
  }
  #line 46 
  if (nbits != 0) {
    #line 47 
    mask_to_set = (18446744073709551615UL >> ((unsigned long)(- size) & 63UL)) & mask_to_set;
    #line 48 
    *p |= mask_to_set;
  }
  #line 50 
  return;
}

#line 52  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_bitmap_clear(unsigned long *map, unsigned int start, int nbits)
{
  #line 54 
  unsigned long *p = map + (unsigned long)(start / 64U);
  #line 55 
  unsigned int size = start + (unsigned int)nbits;
  #line 56 
  int bits_to_clear = (int)(64U - (start & 63U));
  #line 57 
  unsigned long mask_to_clear = 18446744073709551615UL << ((unsigned long)start & 63UL);
  #line 59 
  while (nbits - bits_to_clear >= 0) {
    #line 60 
    *p &= ~ mask_to_clear;
    #line 61 
    nbits -= bits_to_clear;
    #line 62 
    bits_to_clear = 64;
    #line 63 
    mask_to_clear = 18446744073709551615UL;
    #line 64 
    p ++;
  }
  #line 66 
  if (nbits != 0) {
    #line 67 
    mask_to_clear = (18446744073709551615UL >> ((unsigned long)(- size) & 63UL)) & mask_to_clear;
    #line 68 
    *p &= ~ mask_to_clear;
  }
  #line 70 
  return;
}

#line 72  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_bitmap_zero(unsigned long *dst, unsigned int nbits)
{
  #line 74 
  unsigned int len = (unsigned int)(((unsigned long)nbits + 63UL) / 64UL) * 8U;
  #line 75 
  memset((void *)dst,0,(unsigned long)len);
  #line 76 
  return;
}

#line 78  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
unsigned long ldv_bitmap_find_next_zero_area(unsigned long *map, unsigned long size, unsigned long start, unsigned int nr, unsigned long align_mask)
{
  #line 80 
  unsigned long index;
  #line 80 
  unsigned long end;
  #line 80 
  unsigned long i;
  #line 82 
  again: 
         #line 82 
  ;
  #line 83 
  index = ldv_find_next_zero_bit(map,size,start);
  #line 84 
  index = (index + align_mask) & ~ align_mask;
  #line 85 
  end = (unsigned long)nr + index;
  #line 87 
  if (end > size) 
                  #line 88 
                  return end;
  #line 90 
  i = ldv_find_next_bit(map,end,index);
  #line 92 
  if (i < end) {
    #line 93 
    start = i + 1UL;
    #line 94 
    goto again;
  }
  #line 97 
  return index;
}

#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/find_bit.h"
#line 68  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/find_bit.common.c"
unsigned long ldv_find_first_bit(unsigned long *addr, unsigned long size);
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/find_bit.h"
#line 25 
void ldv_check_find_bit_offset(unsigned long, unsigned long);
#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/find_bit.common.c"
static unsigned long ldv_ffs(unsigned long word)
{
  #line 23 
  int num = 0;
  #line 25 
  if ((word & 4294967295UL) == 0UL) {
    #line 26 
    num += 32;
    #line 27 
    word >>= 32;
  }
  #line 29 
  if ((word & 65535UL) == 0UL) {
    #line 30 
    num += 16;
    #line 31 
    word >>= 16;
  }
  #line 33 
  if ((word & 255UL) == 0UL) {
    #line 34 
    num += 8;
    #line 35 
    word >>= 8;
  }
  #line 37 
  if ((word & 15UL) == 0UL) {
    #line 38 
    num += 4;
    #line 39 
    word >>= 4;
  }
  #line 41 
  if ((word & 3UL) == 0UL) {
    #line 42 
    num += 2;
    #line 43 
    word >>= 2;
  }
  #line 45 
  if ((word & 1UL) == 0UL) 
                           #line 46 
                           num ++;
  #line 48 
  return (unsigned long)num;
}

#line 51  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/find_bit.common.c"
static unsigned long ldv_min(unsigned long a, unsigned long b)
{
  #line 53 
  if (a < b) 
             #line 54 
             return a;
  #line 56 
  return b;
}

#line 59  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/find_bit.common.c"
static unsigned long ldv_restrict_find_bit_res(unsigned long res, unsigned long size)
{
  #line 62 
  __VERIFIER_assume(1);
  #line 63 
  __VERIFIER_assume(res <= size);
  #line 65 
  return res;
}

#line 68  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/find_bit.common.c"
unsigned long ldv_find_first_bit(unsigned long *addr, unsigned long size)
{
  #line 70 
  unsigned long i;
  #line 72 
  i = 0UL;
  #line 72 
  while (i * 64UL < size) {
    #line 73 
    if (*(addr + i) != 0UL) {
      #line 74 
      ;
      #line 74 
      ;
      #line 74 
      ;
      #line 74 
      return ldv_restrict_find_bit_res(ldv_min(i * 64UL + ldv_ffs(*(addr + i)),size),
                                  size);
    }
    #line 72 
    i ++;
  }
  #line 76 
  return size;
}

#line 79  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/find_bit.common.c"
unsigned long ldv_find_next_bit(unsigned long *addr, unsigned long size, unsigned long offset)
{
  #line 81 
  unsigned long tmp;
  #line 83 
  ldv_check_find_bit_offset(size,offset);
  #line 85 
  tmp = *(addr + offset / 64UL);
  #line 86 
  tmp = (unsigned long)((18446744073709551615ULL << (offset & 63UL)) & (unsigned long long)tmp);
  #line 87 
  offset &= 18446744073709551552UL;
  #line 89 
  while (tmp == 0UL) {
    #line 90 
    offset += 64UL;
    #line 91 
    if (offset >= size) 
                        #line 92 
                        return size;
    #line 94 
    tmp = *(addr + offset / 64UL);
  }
  #line 97 
  ;
  #line 97 
  ;
  #line 97 
  ;
  #line 97 
  return ldv_restrict_find_bit_res(ldv_min(ldv_ffs(tmp) + offset,size),size);
}

#line 100  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/find_bit.common.c"
unsigned long ldv_find_next_zero_bit(unsigned long *addr, unsigned long size, unsigned long offset)
{
  #line 102 
  unsigned long tmp;
  #line 104 
  ldv_check_find_bit_offset(size,offset);
  #line 106 
  tmp = *(addr + offset / 64UL);
  #line 107 
  tmp = ~ tmp;
  #line 108 
  tmp = (unsigned long)((18446744073709551615ULL << (offset & 63UL)) & (unsigned long long)tmp);
  #line 109 
  offset &= 18446744073709551552UL;
  #line 111 
  while (tmp == 0UL) {
    #line 112 
    offset += 64UL;
    #line 113 
    if (offset >= size) 
                        #line 114 
                        return size;
    #line 116 
    tmp = *(addr + offset / 64UL);
    #line 117 
    tmp = ~ tmp;
  }
  #line 120 
  ;
  #line 120 
  ;
  #line 120 
  ;
  #line 120 
  return ldv_restrict_find_bit_res(ldv_min(ldv_ffs(tmp) + offset,size),size);
}

#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/string.h"
#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
size_t ldv_strlen(char *s);
#line 27  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/string.h"
#line 40  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
int ldv_strncmp(char *cs, char *ct, __kernel_size_t count);
#line 28  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/string.h"
#line 70  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
char *ldv_strstr(char *cs, char *ct);
#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
size_t ldv_strlen(char *s)
{
  #line 23 
  unsigned int len = 0U;
  #line 25 
  while ((int)*s != 0) {
    #line 26 
    len ++;
    #line 25 
    s ++;
  }
  #line 28 
  return (unsigned long)len;
}

#line 31  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
int ldv_strcmp(char *cs, char *ct)
{
  #line 33 
  while ((int)*cs != 0 && (int)*ct != 0) {
    #line 34 
    if ((int)*cs != (int)*ct) 
                              #line 35 
                              break;
    #line 33 
    cs ++;
    #line 33 
    ct ++;
  }
  #line 37 
  return (int)*cs - (int)*ct;
}

#line 40  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
int ldv_strncmp(char *cs, char *ct, __kernel_size_t count)
{
  #line 42 
  if (count == 0UL) 
                    #line 43 
                    return 0;
  #line 45 
  while ((int)*cs != 0 && (int)*ct != 0) {
    #line 46 
    if ((int)*cs != (int)*ct) 
                              #line 47 
                              break;
    #line 49 
    count --;
    #line 51 
    if (count == 0UL) 
                      #line 52 
                      break;
    #line 45 
    cs ++;
    #line 45 
    ct ++;
  }
  #line 55 
  return (int)*cs - (int)*ct;
}

#line 58  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
int ldv_memcmp(void *cs, void *ct, size_t count)
{
  #line 60 
  unsigned char *su1;
  #line 60 
  unsigned char *su2;
  #line 61 
  int res = 0;
  #line 63 
  su1 = (unsigned char *)cs;
  #line 63 
  su2 = (unsigned char *)ct;
  #line 63 
  while (count != 0UL) {
    #line 64 
    res = (int)*su1 - (int)*su2;
    #line 64 
    if (res != 0) 
                  #line 65 
                  break;
    #line 63 
    su1 ++;
    #line 63 
    su2 ++;
    #line 63 
    count --;
  }
  #line 67 
  return res;
}

#line 70  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
char *ldv_strstr(char *cs, char *ct)
{
  #line 72 
  size_t cs_len;
  #line 72 
  size_t ct_len;
  #line 74 
  cs_len = ldv_strlen(cs);
  #line 75 
  ct_len = ldv_strlen(ct);
  #line 77 
  while (cs_len >= ct_len) {
    #line 78 
    if (ldv_memcmp((void *)cs,(void *)ct,ct_len) == 0) 
                                                       #line 79 
                                                       return cs;
    #line 81 
    cs_len --;
    #line 82 
    cs ++;
  }
  #line 85 
  return (char *)0;
}

#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/list.c"
void ldv_init_list_head(struct list_head *list)
{
  #line 23 
  list->next = list;
  #line 24 
  list->prev = list;
  #line 25 
  return;
}

#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc(size_t size, gfp_t flags);
#line 30  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 69  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
struct kmem_cache *ldv_kmem_cache_create(char *name, unsigned int size);
#line 31  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 85  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmem_cache_alloc(struct kmem_cache *cachep, gfp_t flags);
#line 32  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 90  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmem_cache_zalloc(struct kmem_cache *cachep, gfp_t flags);
#line 33  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 95  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void ldv_kmem_cache_free(struct kmem_cache *cachep, void *objp);
#line 34  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 100  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void ldv_kmem_cache_destroy(struct kmem_cache *cachep);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc(size_t size, gfp_t flags)
{
  #line 25 
  void *res;
  #line 27 
  ldv_check_alloc_flags(flags);
  #line 28 
  res = ldv_malloc(size);
  #line 30 
  return res;
}

#line 33  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kzalloc(size_t size, gfp_t flags)
{
  #line 35 
  void *res;
  #line 37 
  ldv_check_alloc_flags(flags);
  #line 38 
  res = ldv_zalloc(size);
  #line 40 
  return res;
}

#line 43  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags)
{
  #line 45 
  void *res;
  #line 47 
  ldv_check_alloc_flags(flags);
  #line 48 
  res = ldv_malloc(n * size);
  #line 50 
  return res;
}

#line 53  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags)
{
  #line 55 
  void *res;
  #line 57 
  ldv_check_alloc_flags(flags);
  #line 58 
  res = ldv_calloc(n,size);
  #line 60 
  return res;
}

#line 69  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
struct kmem_cache *ldv_kmem_cache_create(char *name, unsigned int size)
{
  #line 71 
  struct kmem_cache *res;
  #line 72 
  struct ldv_kmem_cache *ldv_res;
  #line 74 
  res = (struct kmem_cache *)ldv_zalloc(16UL);
  #line 76 
  if (res != (struct kmem_cache *)0) {
    #line 77 
    ldv_res = (struct ldv_kmem_cache *)res;
    #line 78 
    ldv_res->name = name;
    #line 79 
    ldv_res->size = size;
  }
  #line 82 
  return res;
}

#line 85  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmem_cache_alloc(struct kmem_cache *cachep, gfp_t flags)
{
  #line 87 
  return ldv_kmalloc((unsigned long)((struct ldv_kmem_cache *)cachep)->size,
                  flags);
}

#line 90  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmem_cache_zalloc(struct kmem_cache *cachep, gfp_t flags)
{
  #line 92 
  return ldv_kzalloc((unsigned long)((struct ldv_kmem_cache *)cachep)->size,
                  flags);
}

#line 95  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void ldv_kmem_cache_free(struct kmem_cache *cachep, void *objp)
{
  #line 97 
  ldv_free(objp);
  #line 98 
  return;
}

#line 100  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void ldv_kmem_cache_destroy(struct kmem_cache *cachep)
{
  #line 102 
  ldv_free((void *)cachep);
  #line 103 
  return;
}

#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/string.h"
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/util.c"
void *ldv_kmemdup(void *src, size_t len, gfp_t gfp);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/util.c"
void *ldv_kmemdup(void *src, size_t len, gfp_t gfp)
{
  #line 25 
  void *res;
  #line 27 
  ldv_check_alloc_flags(gfp);
  #line 28 
  res = ldv_malloc(len);
  #line 30 
  if (res != (void *)0) 
                        #line 31 
                        memcpy(res,src,len);
  #line 33 
  return res;
}

#line 162  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 162 
void ldv_check_alloc_nonatomic(void);
#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/vmalloc.h"
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/vmalloc.c"
void *ldv_vmalloc(unsigned long size);
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/vmalloc.h"
#line 33  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/vmalloc.c"
void *ldv_vzalloc(unsigned long size);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/vmalloc.h"
#line 43  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/vmalloc.c"
void ldv_vfree(void *addr);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/vmalloc.c"
void *ldv_vmalloc(unsigned long size)
{
  #line 25 
  void *res;
  #line 27 
  ldv_check_alloc_nonatomic();
  #line 28 
  res = ldv_malloc(size);
  #line 30 
  return res;
}

#line 33  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/vmalloc.c"
void *ldv_vzalloc(unsigned long size)
{
  #line 35 
  void *res;
  #line 37 
  ldv_check_alloc_nonatomic();
  #line 38 
  res = ldv_zalloc(size);
  #line 40 
  return res;
}

#line 43  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/vmalloc.c"
void ldv_vfree(void *addr)
{
  #line 45 
  ldv_free(addr);
  #line 46 
  return;
}

#line 28  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 28 
void *malloc(size_t);
#line 29 
#line 29 
void *calloc(size_t, size_t);
#line 30 
#line 30 
void free(void *);
#line 45 
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
unsigned int ldv_is_memory_alloc_failures;
#line 56  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 63  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xcalloc(size_t nmemb, size_t size);
#line 60  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 88  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc_unknown_size(void);
#line 61  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 97  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc_unknown_size(void);
#line 64  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc(size_t size);
#line 65  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 37  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc(size_t nmemb, size_t size);
#line 66  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 42  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc(size_t size);
#line 67  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 47  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void ldv_reference_free(void *s);
#line 69  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 52  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_realloc(void *ptr, size_t size);
#line 71  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 80  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc(size_t size);
#line 72  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 90  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xcalloc(size_t nmemb, size_t size);
#line 73  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 100  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xzalloc(size_t size);
#line 75  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 110  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc_unknown_size(void);
#line 76  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 124  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc_unknown_size(void);
#line 77  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 139  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc_unknown_size(void);
#line 83  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 106  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc_unknown_size(size_t size);
#line 85  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 144  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size);
#line 87  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 87 
void *external_allocated_data(void);
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
unsigned int ldv_is_memory_alloc_failures = 1U;
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc(size_t size)
{
  #line 26 
  void *res;
  #line 28 
  if (ldv_is_memory_alloc_failures != 0U) {
    #line 28 
    if (ldv_undef_int() != 0) 
                              #line 29 
                              return (void *)0;
  }
  #line 32 
  res = malloc(size);
  #line 33 
  __VERIFIER_assume(res != (void *)0);
  #line 34 
  return res;
}

#line 37  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc(size_t nmemb, size_t size)
{
  #line 39 
  return calloc(nmemb,size);
}

#line 42  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc(size_t size)
{
  #line 44 
  return calloc(1UL,size);
}

#line 47  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void ldv_reference_free(void *s)
{
  #line 49 
  free(s);
  #line 50 
  return;
}

#line 52  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_realloc(void *ptr, size_t size)
{
  #line 54 
  void *res;
  #line 56 
  if (ptr != (void *)0 && size == 0UL) {
    #line 57 
    free(ptr);
    #line 58 
    return (void *)0;
  }
  #line 61 
  if (ptr == (void *)0) {
    #line 62 
    res = malloc(size);
    #line 63 
    return res;
  }
  #line 66 
  if (ldv_undef_int() != 0) {
    #line 68 
    res = malloc(size);
    #line 69 
    __VERIFIER_assume(res != (void *)0);
    #line 71 
    memcpy(res,ptr,size);
    #line 72 
    free(ptr);
    #line 74 
    return res;
  }
  else 
       #line 77 
       return (void *)0;
}

#line 80  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc(size_t size)
{
  #line 82 
  void *res;
  #line 84 
  res = malloc(size);
  #line 85 
  __VERIFIER_assume(res != (void *)0);
  #line 87 
  return res;
}

#line 90  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xcalloc(size_t nmemb, size_t size)
{
  #line 92 
  void *res;
  #line 94 
  res = calloc(nmemb,size);
  #line 95 
  __VERIFIER_assume(res != (void *)0);
  #line 97 
  return res;
}

#line 100  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xzalloc(size_t size)
{
  #line 102 
  void *res;
  #line 104 
  res = calloc(1UL,size);
  #line 105 
  __VERIFIER_assume(res != (void *)0);
  #line 107 
  return res;
}

#line 110  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc_unknown_size(void)
{
  #line 112 
  void *res;
  #line 114 
  if (ldv_undef_int() != 0) {
    #line 116 
    res = external_allocated_data();
    #line 117 
    __VERIFIER_assume(res != (void *)0);
    #line 118 
    return res;
  }
  else 
       #line 121 
       return (void *)0;
}

#line 124  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc_unknown_size(void)
{
  #line 126 
  void *res;
  #line 128 
  if (ldv_undef_int() != 0) {
    #line 130 
    res = external_allocated_data();
    #line 131 
    memset(res,0,8UL);
    #line 132 
    __VERIFIER_assume(res != (void *)0);
    #line 133 
    return res;
  }
  else 
       #line 136 
       return (void *)0;
}

#line 139  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc_unknown_size(void)
{
  #line 141 
  return ldv_reference_calloc_unknown_size();
}

#line 144  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size)
{
  #line 146 
  void *res;
  #line 149 
  res = external_allocated_data();
  #line 150 
  __VERIFIER_assume(res != (void *)0);
  #line 152 
  return res;
}

#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc(size_t size)
{
  #line 25 
  void *res;
  #line 26 
  res = ldv_reference_malloc(size);
  #line 27 
  if (res != (void *)0) {
    #line 28 
    int tmp_0;
    #line 28 
    if (ldv_is_err(res)) 
                         #line 28 
                         tmp_0 = 0; else 
                                         #line 28 
                                         tmp_0 = 1;
    #line 28 
    __VERIFIER_assume(tmp_0);
  }
  #line 29 
  return res;
}

#line 32  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc(size_t nmemb, size_t size)
{
  #line 34 
  void *res;
  #line 35 
  res = ldv_reference_calloc(nmemb,size);
  #line 36 
  if (res != (void *)0) {
    #line 37 
    int tmp_0;
    #line 37 
    if (ldv_is_err(res)) 
                         #line 37 
                         tmp_0 = 0; else 
                                         #line 37 
                                         tmp_0 = 1;
    #line 37 
    __VERIFIER_assume(tmp_0);
  }
  #line 38 
  return res;
}

#line 41  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc(size_t size)
{
  #line 43 
  void *res;
  #line 44 
  res = ldv_reference_zalloc(size);
  #line 45 
  if (res != (void *)0) {
    #line 46 
    int tmp_0;
    #line 46 
    if (ldv_is_err(res)) 
                         #line 46 
                         tmp_0 = 0; else 
                                         #line 46 
                                         tmp_0 = 1;
    #line 46 
    __VERIFIER_assume(tmp_0);
  }
  #line 47 
  return res;
}

#line 50  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void ldv_free(void *s)
{
  #line 52 
  ldv_reference_free(s);
  #line 53 
  return;
}

#line 55  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc(size_t size)
{
  #line 57 
  void *res;
  #line 59 
  int tmp_0;
  #line 58 
  res = ldv_reference_xmalloc(size);
  #line 59 
  if (ldv_is_err(res)) 
                       #line 59 
                       tmp_0 = 0; else 
                                       #line 59 
                                       tmp_0 = 1;
  #line 59 
  __VERIFIER_assume(tmp_0);
  #line 60 
  return res;
}

#line 63  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xcalloc(size_t nmemb, size_t size)
{
  #line 65 
  void *res;
  #line 67 
  int tmp_0;
  #line 66 
  res = ldv_reference_xcalloc(nmemb,size);
  #line 67 
  if (ldv_is_err(res)) 
                       #line 67 
                       tmp_0 = 0; else 
                                       #line 67 
                                       tmp_0 = 1;
  #line 67 
  __VERIFIER_assume(tmp_0);
  #line 68 
  return res;
}

#line 71  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xzalloc(size_t size)
{
  #line 73 
  void *res;
  #line 75 
  int tmp_0;
  #line 74 
  res = ldv_reference_xzalloc(size);
  #line 75 
  if (ldv_is_err(res)) 
                       #line 75 
                       tmp_0 = 0; else 
                                       #line 75 
                                       tmp_0 = 1;
  #line 75 
  __VERIFIER_assume(tmp_0);
  #line 76 
  return res;
}

#line 79  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc_unknown_size(void)
{
  #line 81 
  void *res;
  #line 82 
  res = ldv_reference_malloc_unknown_size();
  #line 83 
  if (res != (void *)0) {
    #line 84 
    int tmp_0;
    #line 84 
    if (ldv_is_err(res)) 
                         #line 84 
                         tmp_0 = 0; else 
                                         #line 84 
                                         tmp_0 = 1;
    #line 84 
    __VERIFIER_assume(tmp_0);
  }
  #line 85 
  return res;
}

#line 88  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc_unknown_size(void)
{
  #line 90 
  void *res;
  #line 91 
  res = ldv_reference_calloc_unknown_size();
  #line 92 
  if (res != (void *)0) {
    #line 93 
    int tmp_0;
    #line 93 
    if (ldv_is_err(res)) 
                         #line 93 
                         tmp_0 = 0; else 
                                         #line 93 
                                         tmp_0 = 1;
    #line 93 
    __VERIFIER_assume(tmp_0);
  }
  #line 94 
  return res;
}

#line 97  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc_unknown_size(void)
{
  #line 99 
  void *res;
  #line 100 
  res = ldv_reference_zalloc_unknown_size();
  #line 101 
  if (res != (void *)0) {
    #line 102 
    int tmp_0;
    #line 102 
    if (ldv_is_err(res)) 
                         #line 102 
                         tmp_0 = 0; else 
                                         #line 102 
                                         tmp_0 = 1;
    #line 102 
    __VERIFIER_assume(tmp_0);
  }
  #line 103 
  return res;
}

#line 106  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc_unknown_size(size_t size)
{
  #line 108 
  void *res;
  #line 110 
  int tmp_0;
  #line 109 
  res = ldv_reference_xmalloc_unknown_size(size);
  #line 110 
  if (ldv_is_err(res)) 
                       #line 110 
                       tmp_0 = 0; else 
                                       #line 110 
                                       tmp_0 = 1;
  #line 110 
  __VERIFIER_assume(tmp_0);
  #line 111 
  return res;
}

/* compiler builtin: 
   long __builtin_expect(long exp, long c);   */
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/common.h"
#line 22 
void __VERIFIER_error(void);
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/common.h"
long __builtin_expect(long exp, long c)
{
  #line 26 
  return exp;
}

#line 35  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/gcc.c"
void __builtin_trap(void)
{
  #line 37 
  __VERIFIER_error();
  #line 38 
  return;
}

#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 53  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
long ldv_undef_long(void);
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 61  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned int ldv_undef_uint(void);
#line 26  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 77  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long ldv_undef_ulong(void);
#line 27  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 85  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long long ldv_undef_ulonglong(void);
#line 28  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 69  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr(void);
#line 37  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 111  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_nonnegative(void);
#line 43  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 129  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr_non_null(void);
#line 54  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 139  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int __ldv_undef_int_range(int begin, int end);
#line 56  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 151  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int __ldv_undef_int_range2(int begin, int end);
#line 29 
#line 29 
int __VERIFIER_nondet_int(void);
#line 31 
#line 31 
long __VERIFIER_nondet_long(void);
#line 38 
#line 38 
unsigned int __VERIFIER_nondet_uint(void);
#line 41 
#line 41 
unsigned long __VERIFIER_nondet_ulong(void);
#line 42 
#line 42 
unsigned long long __VERIFIER_nondet_ulonglong(void);
#line 43 
#line 43 
void *__VERIFIER_nondet_pointer(void);
#line 45  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int(void)
{
  #line 48 
  int undef_int = __VERIFIER_nondet_int();
  #line 50 
  return undef_int;
}

#line 53  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
long ldv_undef_long(void)
{
  #line 56 
  long undef_long = __VERIFIER_nondet_long();
  #line 58 
  return undef_long;
}

#line 61  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned int ldv_undef_uint(void)
{
  #line 64 
  unsigned int undef_uint = __VERIFIER_nondet_uint();
  #line 66 
  return undef_uint;
}

#line 69  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr(void)
{
  #line 72 
  void *undef_ptr = __VERIFIER_nondet_pointer();
  #line 74 
  return undef_ptr;
}

#line 77  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long ldv_undef_ulong(void)
{
  #line 80 
  unsigned long undef_ulong = __VERIFIER_nondet_ulong();
  #line 82 
  return undef_ulong;
}

#line 85  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long long ldv_undef_ulonglong(void)
{
  #line 88 
  unsigned long long undef_ulonglong = __VERIFIER_nondet_ulonglong();
  #line 90 
  return undef_ulonglong;
}

#line 93  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_positive(void)
{
  #line 95 
  int ret = ldv_undef_int();
  #line 97 
  __VERIFIER_assume(ret > 0);
  #line 99 
  return ret;
}

#line 102  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_negative(void)
{
  #line 104 
  int ret = ldv_undef_int();
  #line 106 
  __VERIFIER_assume(ret < 0);
  #line 108 
  return ret;
}

#line 111  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_nonnegative(void)
{
  #line 113 
  int ret = ldv_undef_int();
  #line 115 
  __VERIFIER_assume(ret >= 0);
  #line 117 
  return ret;
}

#line 120  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_nonpositive(void)
{
  #line 122 
  int ret = ldv_undef_int();
  #line 124 
  __VERIFIER_assume(ret <= 0);
  #line 126 
  return ret;
}

#line 129  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr_non_null(void)
{
  #line 131 
  void *ret = ldv_undef_ptr();
  #line 133 
  __VERIFIER_assume(ret != (void *)0);
  #line 135 
  return ret;
}

#line 139  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int __ldv_undef_int_range(int begin, int end)
{
  #line 141 
  int ret;
  #line 143 
  ret = ldv_undef_int();
  #line 144 
  __VERIFIER_assume(ret >= begin);
  #line 145 
  __VERIFIER_assume(ret <= end);
  #line 147 
  return ret;
}

#line 151  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int __ldv_undef_int_range2(int begin, int end)
{
  #line 153 
  int ret;
  #line 155 
  ret = begin;
  #line 155 
  while (ret < end) {
    #line 156 
    if (ldv_undef_int() != 0) 
                              #line 157 
                              break;
    #line 155 
    ret ++;
  }
  #line 159 
  return ret;
}

#line 62  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 62 
void ldv_initialize(void);
#line 97 
#line 97 
void ldv_failed_register_netdev(void);
#line 123 
#line 123 
void ldv_pre_probe(void);
#line 35  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/thread.h"
#line 35 
int pthread_create(pthread_t *, pthread_attr_t *, void *(*)(void *), void *);
#line 39 
#line 39 
int pthread_join(pthread_t, void **);
#line 77  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/emg/0/environment_model.c"
#line 271 
void emg_dispatch_deregister_13(struct net_device *arg0);
#line 78 
#line 187 
void emg_dispatch_deregister_8(struct pci_driver *arg0);
#line 79 
#line 128 
void emg_dispatch_instance_deregister_4(struct timer_list *arg0);
#line 80 
#line 176 
void emg_dispatch_instance_register_7(struct timer_list *arg0);
#line 81 
#line 137 
void emg_dispatch_irq_deregister_5(int arg0);
#line 82 
#line 207 
void emg_dispatch_irq_register_11(int arg0, enum irqreturn (*arg1)(int , void *), enum irqreturn (*arg2)(int , void *), void *arg3);
#line 83 
#line 196 
void emg_dispatch_register_10(struct net_device *arg0);
#line 84 
#line 117 
void emg_dispatch_register_2(struct pci_driver *arg0);
#line 85 
#line 1356 
void *emg_entry_point_insmod(void *arg0);
#line 88 
#line 280 
void *emg_interrupt_interrupt_scenario_rocker_cmd_irq_handler(void *arg0);
#line 89 
#line 343 
void *emg_interrupt_interrupt_scenario_rocker_event_irq_handler(void *arg0);
#line 90 
#line 406 
void *emg_interrupt_interrupt_scenario_rocker_rx_irq_handler(void *arg0);
#line 91 
#line 469 
void *emg_interrupt_interrupt_scenario_rocker_test_irq_handler(void *arg0);
#line 92 
#line 532 
void *emg_interrupt_interrupt_scenario_rocker_tx_irq_handler(void *arg0);
#line 94 
#line 595 
void *emg_net_random_allocationless_scenario_rocker_port_get_drvinfo(void *arg0);
#line 95 
#line 828 
void *emg_pci_pci_scenario_rocker_pci_driver(void *arg0);
#line 101 
#line 1006 
void *emg_timer_timer_scenario_7(void *arg0);
#line 103 
#line 1385 
int main(void);
#line 106  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/emg/0/environment_model.c"
pthread_t emg_thread_14;
#line 107  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/emg/0/environment_model.c"
pthread_t emg_thread_15;
#line 108  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/emg/0/environment_model.c"
pthread_t emg_thread_16;
#line 109  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/emg/0/environment_model.c"
pthread_t emg_thread_17;
#line 110  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/emg/0/environment_model.c"
pthread_t emg_thread_18;
#line 111  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/emg/0/environment_model.c"
pthread_t emg_thread_19;
#line 112  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/emg/0/environment_model.c"
pthread_t emg_thread_20;
#line 113  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/emg/0/environment_model.c"
pthread_t emg_thread_21;
#line 117  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/emg/0/environment_model.c"
void emg_dispatch_register_2(struct pci_driver *arg0)
{
  #line 118 
  int ret;
  #line 119 
  struct emg_struct_pci_scenario_rocker_pci_driver_20 *cf_arg_20;
  #line 120 
  cf_arg_20 = (struct emg_struct_pci_scenario_rocker_pci_driver_20 *)ldv_xmalloc(16UL);
  #line 121 
  cf_arg_20->arg0 = arg0;
  #line 122 
  ret = pthread_create(& emg_thread_20,(pthread_attr_t *)0,& emg_pci_pci_scenario_rocker_pci_driver,(void *)cf_arg_20);
  #line 123 
  __VERIFIER_assume(ret == 0);
  #line 124 
  return;
}

#line 128  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/emg/0/environment_model.c"
void emg_dispatch_instance_deregister_4(struct timer_list *arg0)
{
  #line 129 
  int ret;
  #line 130 
  struct emg_struct_timer_scenario_7_21 *cf_arg_21;
  #line 131 
  ret = pthread_join(emg_thread_21,(void **)0);
  #line 132 
  __VERIFIER_assume(ret == 0);
  #line 133 
  return;
}

#line 137  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/emg/0/environment_model.c"
void emg_dispatch_irq_deregister_5(int arg0)
{
  #line 138 
  int ret;
  #line 139 
  struct emg_struct_free_irq_5 *cf_arg_14;
  #line 140 
  struct emg_struct_free_irq_5 *cf_arg_15;
  #line 141 
  struct emg_struct_free_irq_5 *cf_arg_16;
  #line 142 
  struct emg_struct_free_irq_5 *cf_arg_17;
  #line 143 
  struct emg_struct_free_irq_5 *cf_arg_18;
  #line 144 
  switch (ldv_undef_int()) {
    #line 145 
    case 0: 
            #line 145 
    ;
    #line 146 
    ret = pthread_join(emg_thread_14,(void **)0);
    #line 147 
    __VERIFIER_assume(ret == 0);
    #line 148 
    break;
    #line 150 
    case 1: 
            #line 150 
    ;
    #line 151 
    ret = pthread_join(emg_thread_15,(void **)0);
    #line 152 
    __VERIFIER_assume(ret == 0);
    #line 153 
    break;
    #line 155 
    case 2: 
            #line 155 
    ;
    #line 156 
    ret = pthread_join(emg_thread_16,(void **)0);
    #line 157 
    __VERIFIER_assume(ret == 0);
    #line 158 
    break;
    #line 160 
    case 3: 
            #line 160 
    ;
    #line 161 
    ret = pthread_join(emg_thread_17,(void **)0);
    #line 162 
    __VERIFIER_assume(ret == 0);
    #line 163 
    break;
    #line 165 
    case 4: 
            #line 165 
    ;
    #line 166 
    ret = pthread_join(emg_thread_18,(void **)0);
    #line 167 
    __VERIFIER_assume(ret == 0);
    #line 168 
    break;
    #line 170 
    default: 
             #line 170 
    ;
    #line 170 
    __VERIFIER_assume(0);
  }
  #line 172 
  return;
}

#line 176  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/emg/0/environment_model.c"
void emg_dispatch_instance_register_7(struct timer_list *arg0)
{
  #line 177 
  int ret;
  #line 178 
  struct emg_struct_timer_scenario_7_21 *cf_arg_21;
  #line 179 
  cf_arg_21 = (struct emg_struct_timer_scenario_7_21 *)ldv_xmalloc(16UL);
  #line 180 
  cf_arg_21->arg0 = arg0;
  #line 181 
  ret = pthread_create(& emg_thread_21,(pthread_attr_t *)0,& emg_timer_timer_scenario_7,(void *)cf_arg_21);
  #line 182 
  __VERIFIER_assume(ret == 0);
  #line 183 
  return;
}

#line 187  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/emg/0/environment_model.c"
void emg_dispatch_deregister_8(struct pci_driver *arg0)
{
  #line 188 
  int ret;
  #line 189 
  struct emg_struct_pci_scenario_rocker_pci_driver_20 *cf_arg_20;
  #line 190 
  ret = pthread_join(emg_thread_20,(void **)0);
  #line 191 
  __VERIFIER_assume(ret == 0);
  #line 192 
  return;
}

#line 196  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/emg/0/environment_model.c"
void emg_dispatch_register_10(struct net_device *arg0)
{
  #line 197 
  int ret;
  #line 198 
  struct emg_struct_random_allocationless_scenario_rocker_port_get_drvinfo_19 *cf_arg_19;
  #line 199 
  cf_arg_19 = (struct emg_struct_random_allocationless_scenario_rocker_port_get_drvinfo_19 *)ldv_xmalloc(16UL);
  #line 200 
  cf_arg_19->arg0 = arg0;
  #line 201 
  ret = pthread_create(& emg_thread_19,(pthread_attr_t *)0,& emg_net_random_allocationless_scenario_rocker_port_get_drvinfo,(void *)cf_arg_19);
  #line 202 
  __VERIFIER_assume(ret == 0);
  #line 203 
  return;
}

#line 207  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/emg/0/environment_model.c"
void emg_dispatch_irq_register_11(int arg0, enum irqreturn (*arg1)(int , void *), enum irqreturn (*arg2)(int , void *), void *arg3)
{
  #line 208 
  int ret;
  #line 209 
  struct emg_struct_interrupt_scenario_rocker_cmd_irq_handler_14 *cf_arg_14;
  #line 210 
  struct emg_struct_interrupt_scenario_rocker_cmd_irq_handler_14 *cf_arg_15;
  #line 211 
  struct emg_struct_interrupt_scenario_rocker_cmd_irq_handler_14 *cf_arg_16;
  #line 212 
  struct emg_struct_interrupt_scenario_rocker_cmd_irq_handler_14 *cf_arg_17;
  #line 213 
  struct emg_struct_interrupt_scenario_rocker_cmd_irq_handler_14 *cf_arg_18;
  #line 214 
  switch (ldv_undef_int()) {
    #line 215 
    case 0: 
            #line 215 
    ;
    #line 216 
    cf_arg_14 = (struct emg_struct_interrupt_scenario_rocker_cmd_irq_handler_14 *)ldv_xmalloc(40UL);
    #line 217 
    cf_arg_14->arg0 = arg0;
    #line 218 
    cf_arg_14->arg1 = arg1;
    #line 219 
    cf_arg_14->arg2 = arg2;
    #line 220 
    cf_arg_14->arg3 = arg3;
    #line 221 
    ret = pthread_create(& emg_thread_14,(pthread_attr_t *)0,& emg_interrupt_interrupt_scenario_rocker_cmd_irq_handler,(void *)cf_arg_14);
    #line 222 
    __VERIFIER_assume(ret == 0);
    #line 223 
    break;
    #line 225 
    case 1: 
            #line 225 
    ;
    #line 226 
    cf_arg_15 = (struct emg_struct_interrupt_scenario_rocker_cmd_irq_handler_14 *)ldv_xmalloc(40UL);
    #line 227 
    cf_arg_15->arg0 = arg0;
    #line 228 
    cf_arg_15->arg1 = arg1;
    #line 229 
    cf_arg_15->arg2 = arg2;
    #line 230 
    cf_arg_15->arg3 = arg3;
    #line 231 
    ret = pthread_create(& emg_thread_15,(pthread_attr_t *)0,& emg_interrupt_interrupt_scenario_rocker_event_irq_handler,(void *)cf_arg_15);
    #line 232 
    __VERIFIER_assume(ret == 0);
    #line 233 
    break;
    #line 235 
    case 2: 
            #line 235 
    ;
    #line 236 
    cf_arg_16 = (struct emg_struct_interrupt_scenario_rocker_cmd_irq_handler_14 *)ldv_xmalloc(40UL);
    #line 237 
    cf_arg_16->arg0 = arg0;
    #line 238 
    cf_arg_16->arg1 = arg1;
    #line 239 
    cf_arg_16->arg2 = arg2;
    #line 240 
    cf_arg_16->arg3 = arg3;
    #line 241 
    ret = pthread_create(& emg_thread_16,(pthread_attr_t *)0,& emg_interrupt_interrupt_scenario_rocker_rx_irq_handler,(void *)cf_arg_16);
    #line 242 
    __VERIFIER_assume(ret == 0);
    #line 243 
    break;
    #line 245 
    case 3: 
            #line 245 
    ;
    #line 246 
    cf_arg_17 = (struct emg_struct_interrupt_scenario_rocker_cmd_irq_handler_14 *)ldv_xmalloc(40UL);
    #line 247 
    cf_arg_17->arg0 = arg0;
    #line 248 
    cf_arg_17->arg1 = arg1;
    #line 249 
    cf_arg_17->arg2 = arg2;
    #line 250 
    cf_arg_17->arg3 = arg3;
    #line 251 
    ret = pthread_create(& emg_thread_17,(pthread_attr_t *)0,& emg_interrupt_interrupt_scenario_rocker_test_irq_handler,(void *)cf_arg_17);
    #line 252 
    __VERIFIER_assume(ret == 0);
    #line 253 
    break;
    #line 255 
    case 4: 
            #line 255 
    ;
    #line 256 
    cf_arg_18 = (struct emg_struct_interrupt_scenario_rocker_cmd_irq_handler_14 *)ldv_xmalloc(40UL);
    #line 257 
    cf_arg_18->arg0 = arg0;
    #line 258 
    cf_arg_18->arg1 = arg1;
    #line 259 
    cf_arg_18->arg2 = arg2;
    #line 260 
    cf_arg_18->arg3 = arg3;
    #line 261 
    ret = pthread_create(& emg_thread_18,(pthread_attr_t *)0,& emg_interrupt_interrupt_scenario_rocker_tx_irq_handler,(void *)cf_arg_18);
    #line 262 
    __VERIFIER_assume(ret == 0);
    #line 263 
    break;
    #line 265 
    default: 
             #line 265 
    ;
    #line 265 
    __VERIFIER_assume(0);
  }
  #line 267 
  return;
}

#line 271  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/emg/0/environment_model.c"
void emg_dispatch_deregister_13(struct net_device *arg0)
{
  #line 272 
  int ret;
  #line 273 
  struct emg_struct_random_allocationless_scenario_rocker_port_get_drvinfo_19 *cf_arg_19;
  #line 274 
  ret = pthread_join(emg_thread_19,(void **)0);
  #line 275 
  __VERIFIER_assume(ret == 0);
  #line 276 
  return;
}

#line 280  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/emg/0/environment_model.c"
void *emg_interrupt_interrupt_scenario_rocker_cmd_irq_handler(void *arg0)
{
  #line 283 
  enum irqreturn (*emg_14_callback)(int , void *);
  #line 284 
  void *emg_14_data;
  #line 285 
  int emg_14_line;
  #line 286 
  enum irqreturn emg_14_ret_val;
  #line 287 
  enum irqreturn (*emg_14_thread)(int , void *);
  #line 289 
  struct emg_struct_interrupt_scenario_rocker_cmd_irq_handler_14 *data = (struct emg_struct_interrupt_scenario_rocker_cmd_irq_handler_14 *)arg0;
  #line 292 
  emg_14_callback = & emg_wrapper_rocker_cmd_irq_handler;
  #line 295 
  if (data != (struct emg_struct_interrupt_scenario_rocker_cmd_irq_handler_14 *)0) {
    #line 296 
    emg_14_line = data->arg0;
    #line 297 
    emg_14_callback = data->arg1;
    #line 298 
    emg_14_thread = data->arg2;
    #line 299 
    emg_14_data = data->arg3;
    #line 300 
    ldv_free((void *)data);
  }
  #line 306 
  ldv_switch_to_interrupt_context();
  #line 310 
  emg_14_ret_val = emg_wrapper_rocker_cmd_irq_handler(emg_14_line,emg_14_data);
  #line 315 
  ldv_switch_to_process_context();
  #line 318 
  if (ldv_undef_int() != 0) {
    #line 320 
    __VERIFIER_assume(emg_14_ret_val == (unsigned int)IRQ_WAKE_THREAD);
    #line 324 
    if (emg_14_thread != (enum irqreturn (*)(int , void *))0) 
                                                              #line 325 
                                                              (*emg_14_thread)(emg_14_line,emg_14_data);
  }
  else 
       #line 330 
       __VERIFIER_assume(emg_14_ret_val != (unsigned int)IRQ_WAKE_THREAD);
  #line 338 
  return (void *)0;
}

#line 343  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/emg/0/environment_model.c"
void *emg_interrupt_interrupt_scenario_rocker_event_irq_handler(void *arg0)
{
  #line 346 
  enum irqreturn (*emg_15_callback)(int , void *);
  #line 347 
  void *emg_15_data;
  #line 348 
  int emg_15_line;
  #line 349 
  enum irqreturn emg_15_ret_val;
  #line 350 
  enum irqreturn (*emg_15_thread)(int , void *);
  #line 352 
  struct emg_struct_interrupt_scenario_rocker_cmd_irq_handler_14 *data = (struct emg_struct_interrupt_scenario_rocker_cmd_irq_handler_14 *)arg0;
  #line 355 
  emg_15_callback = & emg_wrapper_rocker_event_irq_handler;
  #line 358 
  if (data != (struct emg_struct_interrupt_scenario_rocker_cmd_irq_handler_14 *)0) {
    #line 359 
    emg_15_line = data->arg0;
    #line 360 
    emg_15_callback = data->arg1;
    #line 361 
    emg_15_thread = data->arg2;
    #line 362 
    emg_15_data = data->arg3;
    #line 363 
    ldv_free((void *)data);
  }
  #line 369 
  ldv_switch_to_interrupt_context();
  #line 373 
  emg_15_ret_val = emg_wrapper_rocker_event_irq_handler(emg_15_line,emg_15_data);
  #line 378 
  ldv_switch_to_process_context();
  #line 381 
  if (ldv_undef_int() != 0) {
    #line 383 
    __VERIFIER_assume(emg_15_ret_val == (unsigned int)IRQ_WAKE_THREAD);
    #line 387 
    if (emg_15_thread != (enum irqreturn (*)(int , void *))0) 
                                                              #line 388 
                                                              (*emg_15_thread)(emg_15_line,emg_15_data);
  }
  else 
       #line 393 
       __VERIFIER_assume(emg_15_ret_val != (unsigned int)IRQ_WAKE_THREAD);
  #line 401 
  return (void *)0;
}

#line 406  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/emg/0/environment_model.c"
void *emg_interrupt_interrupt_scenario_rocker_rx_irq_handler(void *arg0)
{
  #line 409 
  enum irqreturn (*emg_16_callback)(int , void *);
  #line 410 
  void *emg_16_data;
  #line 411 
  int emg_16_line;
  #line 412 
  enum irqreturn emg_16_ret_val;
  #line 413 
  enum irqreturn (*emg_16_thread)(int , void *);
  #line 415 
  struct emg_struct_interrupt_scenario_rocker_cmd_irq_handler_14 *data = (struct emg_struct_interrupt_scenario_rocker_cmd_irq_handler_14 *)arg0;
  #line 418 
  emg_16_callback = & emg_wrapper_rocker_rx_irq_handler;
  #line 421 
  if (data != (struct emg_struct_interrupt_scenario_rocker_cmd_irq_handler_14 *)0) {
    #line 422 
    emg_16_line = data->arg0;
    #line 423 
    emg_16_callback = data->arg1;
    #line 424 
    emg_16_thread = data->arg2;
    #line 425 
    emg_16_data = data->arg3;
    #line 426 
    ldv_free((void *)data);
  }
  #line 432 
  ldv_switch_to_interrupt_context();
  #line 436 
  emg_16_ret_val = emg_wrapper_rocker_rx_irq_handler(emg_16_line,emg_16_data);
  #line 441 
  ldv_switch_to_process_context();
  #line 444 
  if (ldv_undef_int() != 0) {
    #line 446 
    __VERIFIER_assume(emg_16_ret_val == (unsigned int)IRQ_WAKE_THREAD);
    #line 450 
    if (emg_16_thread != (enum irqreturn (*)(int , void *))0) 
                                                              #line 451 
                                                              (*emg_16_thread)(emg_16_line,emg_16_data);
  }
  else 
       #line 456 
       __VERIFIER_assume(emg_16_ret_val != (unsigned int)IRQ_WAKE_THREAD);
  #line 464 
  return (void *)0;
}

#line 469  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/emg/0/environment_model.c"
void *emg_interrupt_interrupt_scenario_rocker_test_irq_handler(void *arg0)
{
  #line 472 
  enum irqreturn (*emg_17_callback)(int , void *);
  #line 473 
  void *emg_17_data;
  #line 474 
  int emg_17_line;
  #line 475 
  enum irqreturn emg_17_ret_val;
  #line 476 
  enum irqreturn (*emg_17_thread)(int , void *);
  #line 478 
  struct emg_struct_interrupt_scenario_rocker_cmd_irq_handler_14 *data = (struct emg_struct_interrupt_scenario_rocker_cmd_irq_handler_14 *)arg0;
  #line 481 
  emg_17_callback = & emg_wrapper_rocker_test_irq_handler;
  #line 484 
  if (data != (struct emg_struct_interrupt_scenario_rocker_cmd_irq_handler_14 *)0) {
    #line 485 
    emg_17_line = data->arg0;
    #line 486 
    emg_17_callback = data->arg1;
    #line 487 
    emg_17_thread = data->arg2;
    #line 488 
    emg_17_data = data->arg3;
    #line 489 
    ldv_free((void *)data);
  }
  #line 495 
  ldv_switch_to_interrupt_context();
  #line 499 
  emg_17_ret_val = emg_wrapper_rocker_test_irq_handler(emg_17_line,emg_17_data);
  #line 504 
  ldv_switch_to_process_context();
  #line 507 
  if (ldv_undef_int() != 0) {
    #line 509 
    __VERIFIER_assume(emg_17_ret_val == (unsigned int)IRQ_WAKE_THREAD);
    #line 513 
    if (emg_17_thread != (enum irqreturn (*)(int , void *))0) 
                                                              #line 514 
                                                              (*emg_17_thread)(emg_17_line,emg_17_data);
  }
  else 
       #line 519 
       __VERIFIER_assume(emg_17_ret_val != (unsigned int)IRQ_WAKE_THREAD);
  #line 527 
  return (void *)0;
}

#line 532  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/emg/0/environment_model.c"
void *emg_interrupt_interrupt_scenario_rocker_tx_irq_handler(void *arg0)
{
  #line 535 
  enum irqreturn (*emg_18_callback)(int , void *);
  #line 536 
  void *emg_18_data;
  #line 537 
  int emg_18_line;
  #line 538 
  enum irqreturn emg_18_ret_val;
  #line 539 
  enum irqreturn (*emg_18_thread)(int , void *);
  #line 541 
  struct emg_struct_interrupt_scenario_rocker_cmd_irq_handler_14 *data = (struct emg_struct_interrupt_scenario_rocker_cmd_irq_handler_14 *)arg0;
  #line 544 
  emg_18_callback = & emg_wrapper_rocker_tx_irq_handler;
  #line 547 
  if (data != (struct emg_struct_interrupt_scenario_rocker_cmd_irq_handler_14 *)0) {
    #line 548 
    emg_18_line = data->arg0;
    #line 549 
    emg_18_callback = data->arg1;
    #line 550 
    emg_18_thread = data->arg2;
    #line 551 
    emg_18_data = data->arg3;
    #line 552 
    ldv_free((void *)data);
  }
  #line 558 
  ldv_switch_to_interrupt_context();
  #line 562 
  emg_18_ret_val = emg_wrapper_rocker_tx_irq_handler(emg_18_line,emg_18_data);
  #line 567 
  ldv_switch_to_process_context();
  #line 570 
  if (ldv_undef_int() != 0) {
    #line 572 
    __VERIFIER_assume(emg_18_ret_val == (unsigned int)IRQ_WAKE_THREAD);
    #line 576 
    if (emg_18_thread != (enum irqreturn (*)(int , void *))0) 
                                                              #line 577 
                                                              (*emg_18_thread)(emg_18_line,emg_18_data);
  }
  else 
       #line 582 
       __VERIFIER_assume(emg_18_ret_val != (unsigned int)IRQ_WAKE_THREAD);
  #line 590 
  return (void *)0;
}

#line 595  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/emg/0/environment_model.c"
void *emg_net_random_allocationless_scenario_rocker_port_get_drvinfo(void *arg0)
{
  #line 598 
  struct net_device *emg_19_container;
  #line 599 
  struct sk_buff *emg_19_emg_param_0_14;
  #line 600 
  struct ethtool_drvinfo *emg_19_emg_param_1_0;
  #line 601 
  struct ethtool_stats *emg_19_emg_param_1_1;
  #line 602 
  struct netdev_phys_item_id *emg_19_emg_param_1_11;
  #line 603 
  struct neighbour *emg_19_emg_param_1_12;
  #line 604 
  void *emg_19_emg_param_1_13;
  #line 605 
  struct ethtool_link_ksettings *emg_19_emg_param_1_15;
  #line 606 
  struct ethtool_link_ksettings *emg_19_emg_param_1_3;
  #line 607 
  int emg_19_emg_param_1_4;
  #line 608 
  unsigned int emg_19_emg_param_1_5;
  #line 609 
  int emg_19_emg_param_1_7;
  #line 610 
  _Bool emg_19_emg_param_1_8;
  #line 611 
  char *emg_19_emg_param_1_9;
  #line 612 
  unsigned long emg_19_emg_param_2_10;
  #line 613 
  unsigned long long *emg_19_emg_param_2_2;
  #line 614 
  unsigned char *emg_19_emg_param_2_6;
  #line 615 
  int emg_repeat_cnt_call_19 = 1;
  #line 617 
  struct emg_struct_random_allocationless_scenario_rocker_port_get_drvinfo_19 *data = (struct emg_struct_random_allocationless_scenario_rocker_port_get_drvinfo_19 *)arg0;
  #line 622 
  if (data != (struct emg_struct_random_allocationless_scenario_rocker_port_get_drvinfo_19 *)0) {
    #line 623 
    emg_19_container = data->arg0;
    #line 624 
    ldv_free((void *)data);
  }
  #line 629 
  goto emg_call_19;
  #line 633 
  return (void *)0;
  #line 636 
  emg_call_19: 
               #line 636 
  ;
  #line 637 
  switch (ldv_undef_int()) {
    #line 638 
    case 0: 
            #line 638 
    ;
    #line 640 
    emg_19_emg_param_1_15 = (struct ethtool_link_ksettings *)ldv_xmalloc_unknown_size(0UL);
    #line 640 
    emg_19_emg_param_1_15 = emg_19_emg_param_1_15;
    #line 644 
    emg_wrapper_rocker_port_set_link_ksettings(emg_19_container,emg_19_emg_param_1_15);
    #line 648 
    ldv_free((void *)emg_19_emg_param_1_15);
    #line 650 
    break;
    #line 652 
    case 1: 
            #line 652 
    ;
    #line 654 
    emg_19_emg_param_0_14 = (struct sk_buff *)ldv_xmalloc_unknown_size(0UL);
    #line 654 
    emg_19_emg_param_0_14 = emg_19_emg_param_0_14;
    #line 658 
    emg_wrapper_rocker_port_xmit(emg_19_emg_param_0_14,emg_19_container);
    #line 662 
    ldv_free((void *)emg_19_emg_param_0_14);
    #line 664 
    break;
    #line 666 
    case 2: 
            #line 666 
    ;
    #line 668 
    emg_19_emg_param_1_13 = ldv_xmalloc_unknown_size(0UL);
    #line 668 
    emg_19_emg_param_1_13 = emg_19_emg_param_1_13;
    #line 672 
    emg_wrapper_rocker_port_set_mac_address(emg_19_container,emg_19_emg_param_1_13);
    #line 676 
    ldv_free(emg_19_emg_param_1_13);
    #line 678 
    break;
    #line 680 
    case 3: 
            #line 680 
    ;
    #line 682 
    emg_19_emg_param_1_12 = (struct neighbour *)ldv_xmalloc_unknown_size(0UL);
    #line 682 
    emg_19_emg_param_1_12 = emg_19_emg_param_1_12;
    #line 686 
    emg_wrapper_rocker_port_neigh_destroy(emg_19_container,emg_19_emg_param_1_12);
    #line 690 
    ldv_free((void *)emg_19_emg_param_1_12);
    #line 692 
    break;
    #line 694 
    case 4: 
            #line 694 
    ;
    #line 696 
    emg_19_emg_param_1_11 = (struct netdev_phys_item_id *)ldv_xmalloc_unknown_size(0UL);
    #line 696 
    emg_19_emg_param_1_11 = emg_19_emg_param_1_11;
    #line 700 
    emg_wrapper_rocker_port_get_port_parent_id(emg_19_container,emg_19_emg_param_1_11);
    #line 704 
    ldv_free((void *)emg_19_emg_param_1_11);
    #line 706 
    break;
    #line 708 
    case 5: 
            #line 708 
    ;
    #line 710 
    emg_19_emg_param_1_9 = (char *)ldv_xmalloc_unknown_size(0UL);
    #line 710 
    emg_19_emg_param_1_9 = emg_19_emg_param_1_9;
    #line 714 
    emg_wrapper_rocker_port_get_phys_port_name(emg_19_container,emg_19_emg_param_1_9,emg_19_emg_param_2_10);
    #line 718 
    ldv_free((void *)emg_19_emg_param_1_9);
    #line 720 
    break;
    #line 722 
    case 6: 
            #line 722 
    ;
    #line 724 
    emg_wrapper_rocker_port_change_proto_down(emg_19_container,(_Bool)((_Bool)((int)emg_19_emg_param_1_8) != 0));
    #line 726 
    break;
    #line 728 
    case 7: 
            #line 728 
    ;
    #line 730 
    emg_wrapper_rocker_port_change_mtu(emg_19_container,emg_19_emg_param_1_7);
    #line 732 
    break;
    #line 734 
    case 8: 
            #line 734 
    ;
    #line 736 
    emg_19_emg_param_2_6 = (unsigned char *)ldv_xmalloc_unknown_size(0UL);
    #line 736 
    emg_19_emg_param_2_6 = emg_19_emg_param_2_6;
    #line 740 
    emg_wrapper_rocker_port_get_strings(emg_19_container,emg_19_emg_param_1_5,emg_19_emg_param_2_6);
    #line 744 
    ldv_free((void *)emg_19_emg_param_2_6);
    #line 746 
    break;
    #line 748 
    case 9: 
            #line 748 
    ;
    #line 750 
    emg_wrapper_rocker_port_get_sset_count(emg_19_container,emg_19_emg_param_1_4);
    #line 752 
    break;
    #line 754 
    case 10: 
             #line 754 
    ;
    #line 756 
    emg_19_emg_param_1_3 = (struct ethtool_link_ksettings *)ldv_xmalloc_unknown_size(0UL);
    #line 756 
    emg_19_emg_param_1_3 = emg_19_emg_param_1_3;
    #line 760 
    emg_wrapper_rocker_port_get_link_ksettings(emg_19_container,emg_19_emg_param_1_3);
    #line 764 
    ldv_free((void *)emg_19_emg_param_1_3);
    #line 766 
    break;
    #line 768 
    case 11: 
             #line 768 
    ;
    #line 770 
    ethtool_op_get_link(emg_19_container);
    #line 772 
    break;
    #line 774 
    case 12: 
             #line 774 
    ;
    #line 776 
    emg_19_emg_param_1_1 = (struct ethtool_stats *)ldv_xmalloc_unknown_size(0UL);
    #line 776 
    emg_19_emg_param_1_1 = emg_19_emg_param_1_1;
    #line 777 
    emg_19_emg_param_2_2 = (unsigned long long *)ldv_xmalloc_unknown_size(0UL);
    #line 777 
    emg_19_emg_param_2_2 = emg_19_emg_param_2_2;
    #line 781 
    emg_wrapper_rocker_port_get_stats(emg_19_container,emg_19_emg_param_1_1,emg_19_emg_param_2_2);
    #line 785 
    ldv_free((void *)emg_19_emg_param_1_1);
    #line 786 
    ldv_free((void *)emg_19_emg_param_2_2);
    #line 788 
    break;
    #line 790 
    case 13: 
             #line 790 
    ;
    #line 792 
    emg_19_emg_param_1_0 = (struct ethtool_drvinfo *)ldv_xmalloc_unknown_size(0UL);
    #line 792 
    emg_19_emg_param_1_0 = emg_19_emg_param_1_0;
    #line 796 
    emg_wrapper_rocker_port_get_drvinfo(emg_19_container,emg_19_emg_param_1_0);
    #line 800 
    ldv_free((void *)emg_19_emg_param_1_0);
    #line 803 
    if (emg_repeat_cnt_call_19 > 0) {
      #line 804 
      emg_repeat_cnt_call_19 --;
      #line 806 
      goto emg_call_19;
    }
    else 
         #line 808 
         __VERIFIER_assume(0);
    #line 812 
    break;
    #line 814 
    case 14: 
             #line 814 
    ;
    #line 818 
    break;
    #line 820 
    default: 
             #line 820 
    ;
    #line 820 
    __VERIFIER_assume(0);
  }
  #line 823 
  return (void *)0;
}

#line 828  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/emg/0/environment_model.c"
void *emg_pci_pci_scenario_rocker_pci_driver(void *arg0)
{
  #line 831 
  int emg_20_choice;
  #line 832 
  struct pci_driver *emg_20_container;
  #line 833 
  struct pci_device_id *emg_20_device_id;
  #line 834 
  struct pci_dev *emg_20_resource_0;
  #line 835 
  struct pm_message emg_20_resource_1;
  #line 836 
  int emg_20_ret;
  #line 837 
  int emg_repeat_cnt_call_20_1 = 1;
  #line 838 
  int emg_repeat_cnt_call_20_0 = 1;
  #line 839 
  int emg_repeat_cnt_main_20_0 = 1;
  #line 840 
  int emg_repeat_cnt_main_20_1 = 1;
  #line 842 
  struct emg_struct_pci_scenario_rocker_pci_driver_20 *data = (struct emg_struct_pci_scenario_rocker_pci_driver_20 *)arg0;
  #line 846 
  emg_20_choice = 0;
  #line 847 
  emg_20_ret = ldv_undef_int();
  #line 848 
  emg_20_choice = 0;
  #line 849 
  emg_20_container = emg_alias_rocker_pci_driver;
  #line 850 
  emg_20_ret = ldv_undef_int();
  #line 852 
  __VERIFIER_assume(data->arg0 == emg_alias_rocker_pci_driver);
  #line 854 
  if (data != (struct emg_struct_pci_scenario_rocker_pci_driver_20 *)0) {
    #line 855 
    emg_20_container = data->arg0;
    #line 856 
    ldv_free((void *)data);
  }
  #line 861 
  emg_20_resource_0 = (struct pci_dev *)ldv_xmalloc(3312UL);
  #line 862 
  emg_20_choice = __ldv_undef_int_range(0,1);
  #line 863 
  emg_20_device_id = emg_20_container->id_table + (unsigned long)emg_20_choice;
  #line 867 
  goto emg_main_20;
  #line 871 
  return (void *)0;
  #line 874 
  emg_call_20: 
               #line 874 
  ;
  #line 875 
  switch (ldv_undef_int()) {
    #line 876 
    case 0: 
            #line 876 
    ;
    #line 881 
    if (emg_repeat_cnt_call_20_1 > 0) {
      #line 882 
      emg_repeat_cnt_call_20_1 --;
      #line 884 
      goto emg_call_20;
    }
    else 
         #line 886 
         __VERIFIER_assume(0);
    #line 890 
    break;
    #line 892 
    case 1: 
            #line 892 
    ;
    #line 894 
    if (emg_20_container->suspend != (int (*)(struct pci_dev *, pm_message_t ))0) 
      #line 895 
      emg_20_ret = (*(emg_20_container->suspend))(emg_20_resource_0,emg_20_resource_1); else 
                                                                    #line 897 
                                                                    emg_20_ret = ldv_undef_int();
    #line 903 
    emg_20_ret = ldv_filter_err_code(emg_20_ret);
    #line 907 
    if (emg_20_container->resume != (int (*)(struct pci_dev *))0) 
                                                                  #line 908 
                                                                  (*(emg_20_container->resume))(emg_20_resource_0);
    #line 912 
    if (emg_repeat_cnt_call_20_0 > 0) {
      #line 913 
      emg_repeat_cnt_call_20_0 --;
      #line 915 
      goto emg_call_20;
    }
    else 
         #line 917 
         __VERIFIER_assume(0);
    #line 921 
    break;
    #line 923 
    case 2: 
            #line 923 
    ;
    #line 925 
    if (emg_20_container->shutdown != (void (*)(struct pci_dev *))0) 
      #line 926 
      (*(emg_20_container->shutdown))(emg_20_resource_0);
    #line 931 
    emg_wrapper_rocker_remove(emg_20_resource_0);
    #line 934 
    if (emg_repeat_cnt_main_20_0 > 0) {
      #line 935 
      emg_repeat_cnt_main_20_0 --;
      #line 937 
      goto emg_main_20;
    }
    else 
         #line 939 
         __VERIFIER_assume(0);
    #line 943 
    break;
    #line 945 
    default: 
             #line 945 
    ;
    #line 945 
    __VERIFIER_assume(0);
  }
  #line 948 
  return (void *)0;
  #line 951 
  emg_main_20: 
               #line 951 
  ;
  #line 952 
  if (ldv_undef_int() != 0) {
    #line 955 
    ldv_pre_probe();
    #line 959 
    emg_20_ret = emg_wrapper_rocker_probe(emg_20_resource_0,emg_20_device_id);
    #line 964 
    emg_20_ret = ldv_post_probe(emg_20_ret);
    #line 967 
    if (ldv_undef_int() != 0) {
      #line 969 
      __VERIFIER_assume(emg_20_ret == 0);
      #line 973 
      goto emg_call_20;
    }
    else 
         #line 978 
         __VERIFIER_assume(emg_20_ret != 0);
    #line 982 
    if (emg_repeat_cnt_main_20_1 > 0) {
      #line 983 
      emg_repeat_cnt_main_20_1 --;
      #line 985 
      goto emg_main_20;
    }
    else 
         #line 987 
         __VERIFIER_assume(0);
  }
  else 
       #line 993 
       ldv_free((void *)emg_20_resource_0);
  #line 1001 
  return (void *)0;
}

#line 1006  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/emg/0/environment_model.c"
void *emg_timer_timer_scenario_7(void *arg0)
{
  #line 1009 
  struct timer_list *emg_21_container;
  #line 1010 
  unsigned long emg_21_emg_param_0_0;
  #line 1012 
  struct emg_struct_timer_scenario_7_21 *data = (struct emg_struct_timer_scenario_7_21 *)arg0;
  #line 1017 
  if (data != (struct emg_struct_timer_scenario_7_21 *)0) {
    #line 1018 
    emg_21_container = data->arg0;
    #line 1019 
    ldv_free((void *)data);
  }
  #line 1025 
  ldv_switch_to_interrupt_context();
  #line 1029 
  if (emg_21_container->function != (void (*)(struct timer_list *))0) 
    #line 1030 
    (*(emg_21_container->function))((struct timer_list *)emg_21_emg_param_0_0);
  #line 1036 
  ldv_switch_to_process_context();
  #line 1043 
  return (void *)0;
}

#line 1048  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/emg/0/environment_model.c"
int emg___pci_register_driver(struct pci_driver *arg0, struct module *arg1, char *arg2)
{
  #line 1051 
  struct pci_driver *emg_2_pci_driver;
  #line 1053 
  emg_2_pci_driver = emg_alias_rocker_pci_driver;
  #line 1054 
  if (ldv_undef_int() != 0) {
    #line 1056 
    emg_2_pci_driver = arg0;
    #line 1060 
    emg_dispatch_register_2(emg_2_pci_driver);
    #line 1064 
    return 0;
  }
  else {
    #line 1068 
    return ldv_undef_int_negative();
  }
}

#line 1076  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/emg/0/environment_model.c"
struct net_device *emg_alloc_etherdev_mqs(int arg0, unsigned int arg1, unsigned int arg2)
{
  #line 1079 
  struct net_device *emg_3_netdev;
  #line 1081 
  if (ldv_undef_int() != 0) {
    #line 1083 
    emg_3_netdev = (struct net_device *)ldv_xmalloc(3328UL);
    #line 1087 
    return emg_3_netdev;
  }
  else 
       #line 1091 
       return (struct net_device *)0;
}

#line 1099  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/emg/0/environment_model.c"
int emg_del_timer_sync(struct timer_list *arg0)
{
  #line 1102 
  struct timer_list *emg_4_timer_list;
  #line 1105 
  emg_4_timer_list = arg0;
  #line 1109 
  emg_dispatch_instance_deregister_4(emg_4_timer_list);
  #line 1110 
  ;
  #line 1110 
  return 0;
}

#line 1116  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/emg/0/environment_model.c"
void *emg_free_irq(unsigned int arg0, void *arg1)
{
  #line 1119 
  int emg_5_line;
  #line 1122 
  emg_5_line = (int)arg0;
  #line 1126 
  emg_dispatch_irq_deregister_5(emg_5_line);
  #line 1127 
  ;
  #line 1127 
  return (void *)0;
}

#line 1133  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/emg/0/environment_model.c"
void emg_free_netdev(struct net_device *arg0)
{
  #line 1136 
  struct net_device *emg_6_netdev;
  #line 1139 
  emg_6_netdev = arg0;
  #line 1140 
  ldv_free((void *)emg_6_netdev);
  #line 1143 
  return;
}

#line 1148  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/emg/0/environment_model.c"
int emg_mod_timer(struct timer_list *arg0, unsigned long arg1)
{
  #line 1151 
  struct timer_list *emg_7_timer_list;
  #line 1153 
  if (ldv_undef_int() != 0) {
    #line 1155 
    emg_7_timer_list = arg0;
    #line 1159 
    emg_dispatch_instance_register_7(emg_7_timer_list);
    #line 1163 
    return 1;
  }
  else 
       #line 1167 
       return 0;
}

#line 1175  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/emg/0/environment_model.c"
void emg_pci_unregister_driver(struct pci_driver *arg0)
{
  #line 1178 
  struct pci_driver *emg_8_pci_driver;
  #line 1180 
  emg_8_pci_driver = emg_alias_rocker_pci_driver;
  #line 1182 
  emg_8_pci_driver = arg0;
  #line 1186 
  emg_dispatch_deregister_8(emg_8_pci_driver);
  #line 1189 
  return;
}

#line 1194  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/emg/0/environment_model.c"
_Bool emg_queue_work(struct workqueue_struct *arg0, struct work_struct *arg1)
{
  #line 1197 
  struct work_struct *emg_9_work_struct;
  #line 1199 
  if (ldv_undef_int() != 0) {
    #line 1201 
    emg_9_work_struct = arg1;
    #line 1205 
    if (emg_9_work_struct->func != (void (*)(struct work_struct *))0) 
      #line 1206 
      (*(emg_9_work_struct->func))(emg_9_work_struct);
    #line 1211 
    return (_Bool)1;
  }
  else 
       #line 1215 
       return (_Bool)0;
}

#line 1223  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/emg/0/environment_model.c"
int emg_register_netdev(struct net_device *arg0)
{
  #line 1226 
  struct net_device *emg_10_netdev;
  #line 1227 
  int emg_10_ret;
  #line 1230 
  emg_10_ret = ldv_undef_int();
  #line 1231 
  emg_10_ret = ldv_undef_int();
  #line 1232 
  if (ldv_undef_int() != 0) {
    #line 1234 
    emg_10_netdev = arg0;
    #line 1238 
    emg_10_ret = emg_wrapper_rocker_port_open(emg_10_netdev);
    #line 1241 
    if (ldv_undef_int() != 0) {
      #line 1243 
      __VERIFIER_assume(emg_10_ret == 0);
      #line 1247 
      emg_dispatch_register_10(emg_10_netdev);
      #line 1251 
      return 0;
    }
    else {
      #line 1255 
      __VERIFIER_assume(emg_10_ret != 0);
      #line 1256 
      ldv_failed_register_netdev();
      #line 1257 
      return ldv_undef_int_negative();
    }
  }
  else {
    #line 1262 
    ldv_failed_register_netdev();
    #line 1263 
    return ldv_undef_int_negative();
  }
}

#line 1271  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/emg/0/environment_model.c"
int emg_request_irq(unsigned int arg0, enum irqreturn (*arg1)(int , void *), unsigned long arg2, char *arg3, void *arg4)
{
  #line 1274 
  enum irqreturn (*emg_11_callback)(int , void *);
  #line 1275 
  void *emg_11_data;
  #line 1276 
  int emg_11_line;
  #line 1277 
  enum irqreturn (*emg_11_thread)(int , void *);
  #line 1279 
  emg_11_callback = & emg_wrapper_rocker_cmd_irq_handler;
  #line 1280 
  if (ldv_undef_int() != 0) {
    #line 1282 
    emg_11_line = (int)arg0;
    #line 1283 
    emg_11_callback = arg1;
    #line 1284 
    emg_11_thread = (enum irqreturn (*)(int , void *))0;
    #line 1285 
    emg_11_data = arg4;
    #line 1289 
    emg_dispatch_irq_register_11(emg_11_line,emg_11_callback,emg_11_thread,emg_11_data);
    #line 1293 
    return 0;
  }
  else {
    #line 1297 
    return ldv_undef_int_negative();
  }
}

#line 1305  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/emg/0/environment_model.c"
_Bool emg_schedule_work(struct work_struct *arg0)
{
  #line 1308 
  struct work_struct *emg_12_work_struct;
  #line 1310 
  if (ldv_undef_int() != 0) {
    #line 1312 
    emg_12_work_struct = arg0;
    #line 1316 
    if (emg_12_work_struct->func != (void (*)(struct work_struct *))0) 
      #line 1317 
      (*(emg_12_work_struct->func))(emg_12_work_struct);
    #line 1322 
    return (_Bool)1;
  }
  else 
       #line 1326 
       return (_Bool)0;
}

#line 1334  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/emg/0/environment_model.c"
void emg_unregister_netdev(struct net_device *arg0)
{
  #line 1337 
  struct net_device *emg_13_netdev;
  #line 1340 
  emg_13_netdev = arg0;
  #line 1344 
  emg_wrapper_rocker_port_stop(emg_13_netdev);
  #line 1348 
  emg_dispatch_deregister_13(emg_13_netdev);
  #line 1351 
  return;
}

#line 1356  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/emg/0/environment_model.c"
void *emg_entry_point_insmod(void *arg0)
{
  #line 1359 
  int emg_1_ret;
  #line 1362 
  emg_1_ret = emg_rocker_module_init();
  #line 1363 
  emg_1_ret = ldv_post_init(emg_1_ret);
  #line 1366 
  if (ldv_undef_int() != 0) {
    #line 1368 
    __VERIFIER_assume(emg_1_ret == 0);
    #line 1372 
    emg_rocker_module_exit();
  }
  else 
       #line 1376 
       __VERIFIER_assume(emg_1_ret != 0);
  #line 1380 
  return (void *)0;
}

#line 1385  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/concurrency safety/emg/0/environment_model.c"
int main(void)
{
  #line 1387 
  ldv_initialize();
  #line 1389 
  emg_entry_point_insmod((void *)0);
  #line 1391 
  return 0;
}

