/* Generated by Frama-C */
#line 106  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/compiler_types.h"
typedef signed char __s8;
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/int-ll64.h"
typedef unsigned char __u8;
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/int-ll64.h"
typedef short __s16;
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/int-ll64.h"
typedef unsigned short __u16;
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/int-ll64.h"
typedef int __s32;
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/int-ll64.h"
typedef unsigned int __u32;
#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/int-ll64.h"
typedef long long __s64;
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/int-ll64.h"
typedef unsigned long long __u64;
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/int-ll64.h"
typedef __s8 s8;
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/int-ll64.h"
typedef __u8 u8;
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/int-ll64.h"
typedef __s16 s16;
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/int-ll64.h"
typedef __u16 u16;
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/int-ll64.h"
typedef __s32 s32;
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/int-ll64.h"
typedef __u32 u32;
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/int-ll64.h"
typedef __s64 s64;
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/int-ll64.h"
typedef __u64 u64;
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/uapi/asm/posix_types_64.h"
typedef long __kernel_long_t;
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef unsigned long __kernel_ulong_t;
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_pid_t;
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_uid32_t;
#line 50  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_gid32_t;
#line 51  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef __kernel_ulong_t __kernel_size_t;
#line 73  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_ssize_t;
#line 88  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef long long __kernel_loff_t;
#line 91  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef long long __kernel_time64_t;
#line 92  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_clock_t;
#line 93  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_timer_t;
#line 94  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_clockid_t;
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef __u16 __le16;
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/types.h"
typedef __u16 __be16;
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/types.h"
typedef __u32 __be32;
#line 37  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/types.h"
typedef __u32 __wsum;
#line 38  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/types.h"
typedef unsigned int __poll_t;
#line 53  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/types.h"
typedef u32 __kernel_dev_t;
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef __kernel_dev_t dev_t;
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef unsigned short umode_t;
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef __kernel_pid_t pid_t;
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef __kernel_clockid_t clockid_t;
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef _Bool bool;
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef __kernel_uid32_t uid_t;
#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef __kernel_gid32_t gid_t;
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef __kernel_loff_t loff_t;
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef __kernel_size_t size_t;
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef __kernel_ssize_t ssize_t;
#line 103  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef s32 int32_t;
#line 109  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef u32 uint32_t;
#line 115  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef u64 sector_t;
#line 131  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef u64 blkcnt_t;
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef u64 dma_addr_t;
#line 149  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef unsigned int gfp_t;
#line 155  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef unsigned int fmode_t;
#line 156  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef u64 phys_addr_t;
#line 159  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef phys_addr_t resource_size_t;
#line 170  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
struct __anonstruct_atomic_t_6 {
   int counter ;
};
#line 170  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef struct __anonstruct_atomic_t_6 atomic_t;
#line 174  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
struct __anonstruct_atomic64_t_7 {
   s64 counter ;
};
#line 174  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef struct __anonstruct_atomic64_t_7 atomic64_t;
#line 181  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
struct list_head {
   struct list_head *next ;
   struct list_head *prev ;
};
#line 185 
struct hlist_node;
#line 185  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
struct hlist_head {
   struct hlist_node *first ;
};
#line 189  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
struct hlist_node {
   struct hlist_node *next ;
   struct hlist_node **pprev ;
};
#line 219  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
struct callback_head {
   struct callback_head *next ;
   void (*func)(struct callback_head *) ;
} __attribute__((__aligned__(8)));
#line 14  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/hw_atl_a0.i.aux"
struct task_struct;
#line 139  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/init.h"
struct file_system_type;
#line 83  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/printk.h"
struct ctl_table;
#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dynamic_debug.h"
struct device;
#line 65 
struct net_device;
#line 476  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/printk.h"
struct file_operations;
#line 87  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/div64.h"
struct completion;
#line 88 
struct pt_regs;
#line 188  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/math64.h"
typedef __s64 time64_t;
#line 7  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/time_types.h"
struct __kernel_timespec {
   __kernel_time64_t tv_sec ;
   long long tv_nsec ;
};
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/time64.h"
struct timespec64 {
   time64_t tv_sec ;
   long tv_nsec ;
};
#line 165 
struct old_timespec32;
#line 167 
enum timespec_type {
    TT_NONE = 0,
    TT_NATIVE = 1,
    TT_COMPAT = 2
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/restart_block.h"
struct __anonstruct_futex_27 {
   u32 *uaddr ;
   u32 val ;
   u32 flags ;
   u32 bitset ;
   u64 time ;
   u32 *uaddr2 ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/restart_block.h"
union __anonunion_29 {
   struct __kernel_timespec *rmtp ;
   struct old_timespec32 *compat_rmtp ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/restart_block.h"
struct __anonstruct_nanosleep_28 {
   clockid_t clockid ;
   enum timespec_type type ;
   union __anonunion_29 __anonCompField___anonstruct_nanosleep_28_5 ;
   u64 expires ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/restart_block.h"
struct __anonstruct_poll_30 {
   struct pollfd *ufds ;
   int nfds ;
   int has_timeout ;
   unsigned long tv_sec ;
   unsigned long tv_nsec ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/restart_block.h"
union __anonunion_26 {
   struct __anonstruct_futex_27 futex ;
   struct __anonstruct_nanosleep_28 nanosleep ;
   struct __anonstruct_poll_30 poll ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/restart_block.h"
struct restart_block {
   long (*fn)(struct restart_block *) ;
   union __anonunion_26 __anonCompField_restart_block_6 ;
};
#line 58  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/page_64.h"
struct page;
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/getorder.h"
struct mm_struct;
#line 49 
struct io_bitmap;
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/ptrace.h"
struct pt_regs {
   unsigned long r15 ;
   unsigned long r14 ;
   unsigned long r13 ;
   unsigned long r12 ;
   unsigned long bp ;
   unsigned long bx ;
   unsigned long r11 ;
   unsigned long r10 ;
   unsigned long r9 ;
   unsigned long r8 ;
   unsigned long ax ;
   unsigned long cx ;
   unsigned long dx ;
   unsigned long si ;
   unsigned long di ;
   unsigned long orig_ax ;
   unsigned long ip ;
   unsigned long cs ;
   unsigned long flags ;
   unsigned long sp ;
   unsigned long ss ;
};
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/desc_defs.h"
struct desc_struct {
   u16 limit0 ;
   u16 base0 ;
   u16 base1 : 8 ;
   u16 type : 4 ;
   u16 s : 1 ;
   u16 dpl : 2 ;
   u16 p : 1 ;
   u16 limit1 : 4 ;
   u16 avl : 1 ;
   u16 l : 1 ;
   u16 d : 1 ;
   u16 g : 1 ;
   u16 base2 : 8 ;
} __attribute__((__packed__));
#line 119  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/desc_defs.h"
typedef unsigned long pteval_t;
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pmdval_t;
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pudval_t;
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgdval_t;
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgprotval_t;
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_64_types.h"
struct __anonstruct_pte_t_53 {
   pteval_t pte ;
};
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_64_types.h"
typedef struct __anonstruct_pte_t_53 pte_t;
#line 265  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
struct pgprot {
   pgprotval_t pgprot ;
};
#line 267  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
typedef struct pgprot pgprot_t;
#line 266  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
struct __anonstruct_pgd_t_54 {
   pgdval_t pgd ;
};
#line 266  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
typedef struct __anonstruct_pgd_t_54 pgd_t;
#line 319  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
struct __anonstruct_pud_t_56 {
   pudval_t pud ;
};
#line 319  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
typedef struct __anonstruct_pud_t_56 pud_t;
#line 345  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
struct __anonstruct_pmd_t_57 {
   pmdval_t pmd ;
};
#line 345  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
typedef struct __anonstruct_pmd_t_57 pmd_t;
#line 505  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
typedef struct page *pgtable_t;
#line 519 
struct file;
#line 530 
struct seq_file;
#line 360  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/nospec-branch.h"
struct thread_struct;
#line 362 
struct cpumask;
#line 365 
struct vm_area_struct;
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qspinlock_types.h"
struct __anonstruct_59 {
   u8 locked ;
   u8 pending ;
};
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qspinlock_types.h"
struct __anonstruct_60 {
   u16 locked_pending ;
   u16 tail ;
};
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qspinlock_types.h"
union __anonunion_58 {
   atomic_t val ;
   struct __anonstruct_59 __anonCompField___anonunion_58_7 ;
   struct __anonstruct_60 __anonCompField___anonunion_58_8 ;
};
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qspinlock_types.h"
struct qspinlock {
   union __anonunion_58 __anonCompField_qspinlock_9 ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qspinlock_types.h"
typedef struct qspinlock arch_spinlock_t;
#line 13  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qrwlock_types.h"
struct __anonstruct_62 {
   u8 wlocked ;
   u8 __lstate[3U] ;
};
#line 13  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qrwlock_types.h"
union __anonunion_61 {
   atomic_t cnts ;
   struct __anonstruct_62 __anonCompField___anonunion_61_10 ;
};
#line 13  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qrwlock_types.h"
struct qrwlock {
   union __anonunion_61 __anonCompField_qrwlock_11 ;
   arch_spinlock_t wait_lock ;
};
#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qrwlock_types.h"
typedef struct qrwlock arch_rwlock_t;
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/math_emu.h"
struct math_emu_info {
   long ___orig_eip ;
   struct pt_regs *regs ;
};
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/atomic.h"
union __anonunion___u_67 {
   int __val ;
   char __c[1U] ;
};
#line 2288  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/atomic-fallback.h"
typedef atomic64_t atomic_long_t;
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cpumask.h"
struct cpumask {
   unsigned long bits[128U] ;
};
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cpumask.h"
typedef struct cpumask cpumask_t;
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
struct fregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u32 status ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_90 {
   u64 rip ;
   u64 rdp ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_91 {
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
union __anonunion_89 {
   struct __anonstruct_90 __anonCompField___anonunion_89_17 ;
   struct __anonstruct_91 __anonCompField___anonunion_89_18 ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
union __anonunion_92 {
   u32 padding1[12U] ;
   u32 sw_reserved[12U] ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
struct fxregs_state {
   u16 cwd ;
   u16 swd ;
   u16 twd ;
   u16 fop ;
   union __anonunion_89 __anonCompField_fxregs_state_19 ;
   u32 mxcsr ;
   u32 mxcsr_mask ;
   u32 st_space[32U] ;
   u32 xmm_space[64U] ;
   u32 padding[12U] ;
   union __anonunion_92 __anonCompField_fxregs_state_20 ;
} __attribute__((__aligned__(16)));
#line 79  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
struct swregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u8 ftop ;
   u8 changed ;
   u8 lookahead ;
   u8 no_update ;
   u8 rm ;
   u8 alimit ;
   struct math_emu_info *info ;
   u32 entry_eip ;
};
#line 232  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
struct xstate_header {
   u64 xfeatures ;
   u64 xcomp_bv ;
   u64 reserved[6U] ;
} __attribute__((__packed__));
#line 253  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
struct xregs_state {
   struct fxregs_state i387 ;
   struct xstate_header header ;
   u8 extended_state_area[0U] ;
} __attribute__((__packed__, __aligned__(64)));
#line 268  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
union fpregs_state {
   struct fregs_state fsave ;
   struct fxregs_state fxsave ;
   struct swregs_state soft ;
   struct xregs_state xsave ;
   u8 __padding[4096U] ;
};
#line 281  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
struct fpu {
   unsigned int last_cpu ;
   unsigned long avx512_timestamp ;
   union fpregs_state state ;
};
#line 180  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/processor.h"
struct seq_operations;
#line 478 
struct perf_event;
#line 479  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/processor.h"
struct __anonstruct_mm_segment_t_95 {
   unsigned long seg ;
};
#line 479  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/processor.h"
typedef struct __anonstruct_mm_segment_t_95 mm_segment_t;
#line 485  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/processor.h"
struct thread_struct {
   struct desc_struct tls_array[3U] ;
   unsigned long sp ;
   unsigned short es ;
   unsigned short ds ;
   unsigned short fsindex ;
   unsigned short gsindex ;
   unsigned long fsbase ;
   unsigned long gsbase ;
   struct perf_event *ptrace_bps[4U] ;
   unsigned long debugreg6 ;
   unsigned long ptrace_dr7 ;
   unsigned long cr2 ;
   unsigned long trap_nr ;
   unsigned long error_code ;
   struct io_bitmap *io_bitmap ;
   unsigned long iopl_emul ;
   mm_segment_t addr_limit ;
   unsigned int sig_on_uaccess_err : 1 ;
   unsigned int uaccess_err : 1 ;
   struct fpu fpu ;
};
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/thread_info.h"
struct thread_info {
   unsigned long flags ;
   u32 status ;
};
#line 35  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bottom_half.h"
struct lockdep_map;
#line 55  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockdep.h"
struct lockdep_subclass_key {
   char __one_byte ;
} __attribute__((__packed__));
#line 60  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockdep.h"
union __anonunion_96 {
   struct hlist_node hash_entry ;
   struct lockdep_subclass_key subkeys[8U] ;
};
#line 60  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockdep.h"
struct lock_class_key {
   union __anonunion_96 __anonCompField_lock_class_key_23 ;
};
#line 68 
struct lock_trace;
#line 77  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockdep.h"
struct lock_class {
   struct hlist_node hash_entry ;
   struct list_head lock_entry ;
   struct list_head locks_after ;
   struct list_head locks_before ;
   struct lockdep_subclass_key *key ;
   unsigned int subclass ;
   unsigned int dep_gen_id ;
   unsigned long usage_mask ;
   struct lock_trace *usage_traces[9U] ;
   int name_version ;
   char *name ;
   unsigned long contention_point[4U] ;
   unsigned long contending_point[4U] ;
};
#line 157  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockdep.h"
struct lockdep_map {
   struct lock_class_key *key ;
   struct lock_class *class_cache[2U] ;
   char *name ;
   int cpu ;
   unsigned long ip ;
};
#line 226  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockdep.h"
struct held_lock {
   u64 prev_chain_key ;
   unsigned long acquire_ip ;
   struct lockdep_map *instance ;
   struct lockdep_map *nest_lock ;
   u64 waittime_stamp ;
   u64 holdtime_stamp ;
   unsigned int class_idx : 13 ;
   unsigned int irq_context : 2 ;
   unsigned int trylock : 1 ;
   unsigned int read : 2 ;
   unsigned int check : 1 ;
   unsigned int hardirqs_off : 1 ;
   unsigned int references : 12 ;
   unsigned int pin_count ;
};
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_types.h"
struct raw_spinlock {
   arch_spinlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_types.h"
typedef struct raw_spinlock raw_spinlock_t;
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_types.h"
struct __anonstruct_98 {
   u8 __padding[24U] ;
   struct lockdep_map dep_map ;
};
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_types.h"
union __anonunion_97 {
   struct raw_spinlock rlock ;
   struct __anonstruct_98 __anonCompField___anonunion_97_24 ;
};
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_types.h"
struct spinlock {
   union __anonunion_97 __anonCompField_spinlock_25 ;
};
#line 73  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_types.h"
typedef struct spinlock spinlock_t;
#line 74  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_types.h"
struct __anonstruct_rwlock_t_99 {
   arch_rwlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};
#line 74  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_types.h"
typedef struct __anonstruct_rwlock_t_99 rwlock_t;
#line 57  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
struct mutex;
#line 27  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
struct kmem_cache;
#line 48  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/thread.h"
struct seqcount {
   unsigned int sequence ;
   struct lockdep_map dep_map ;
};
#line 53  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/seqlock.h"
typedef struct seqcount seqcount_t;
#line 403  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/seqlock.h"
struct __anonstruct_seqlock_t_112 {
   struct seqcount seqcount ;
   spinlock_t lock ;
};
#line 403  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/seqlock.h"
typedef struct __anonstruct_seqlock_t_112 seqlock_t;
#line 161  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timex.h"
typedef s32 old_time32_t;
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/time32.h"
struct old_timespec32 {
   old_time32_t tv_sec ;
   s32 tv_nsec ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/wait.h"
struct wait_queue_head {
   spinlock_t lock ;
   struct list_head head ;
};
#line 38  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/wait.h"
typedef struct wait_queue_head wait_queue_head_t;
#line 1133  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/wait.h"
struct __anonstruct_nodemask_t_113 {
   unsigned long bits[16U] ;
};
#line 1133  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/wait.h"
typedef struct __anonstruct_nodemask_t_113 nodemask_t;
#line 7  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/tlbbatch.h"
struct arch_tlbflush_unmap_batch {
   struct cpumask cpumask ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types_task.h"
struct vmacache {
   u64 seqnum ;
   struct vm_area_struct *vmas[4U] ;
};
#line 54  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types_task.h"
struct task_rss_stat {
   int events ;
   int count[4U] ;
};
#line 60  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types_task.h"
struct mm_rss_stat {
   atomic_long_t count[4U] ;
};
#line 64  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types_task.h"
struct page_frag {
   struct page *page ;
   __u32 offset ;
   __u32 size ;
};
#line 76  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types_task.h"
struct tlbflush_unmap_batch {
   struct arch_tlbflush_unmap_batch arch ;
   bool flush_required ;
   bool writable ;
};
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rbtree.h"
struct rb_node {
   unsigned long __rb_parent_color ;
   struct rb_node *rb_right ;
   struct rb_node *rb_left ;
} __attribute__((__aligned__(8)));
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rbtree.h"
struct rb_root {
   struct rb_node *rb_node ;
};
#line 125  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rbtree.h"
struct rb_root_cached {
   struct rb_root rb_root ;
   struct rb_node *rb_leftmost ;
};
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/osq_lock.h"
struct optimistic_spin_queue {
   atomic_t tail ;
};
#line 35  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rwsem.h"
struct rw_semaphore {
   atomic_long_t count ;
   atomic_long_t owner ;
   struct optimistic_spin_queue osq ;
   raw_spinlock_t wait_lock ;
   struct list_head wait_list ;
   void *magic ;
   struct lockdep_map dep_map ;
};
#line 26  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/completion.h"
struct completion {
   unsigned int done ;
   wait_queue_head_t wait ;
};
#line 120 
struct inode;
#line 121 
struct notifier_block;
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uprobes.h"
struct ww_acquire_ctx;
#line 53  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mutex.h"
struct mutex {
   atomic_long_t owner ;
   spinlock_t wait_lock ;
   struct optimistic_spin_queue osq ;
   struct list_head wait_list ;
   void *magic ;
   struct lockdep_map dep_map ;
};
#line 72  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mutex.h"
struct mutex_waiter {
   struct list_head list ;
   struct task_struct *task ;
   struct ww_acquire_ctx *ww_ctx ;
   void *magic ;
};
#line 461  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jiffies.h"
typedef s64 ktime_t;
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
struct timer_list {
   struct hlist_node entry ;
   unsigned long expires ;
   void (*function)(struct timer_list *) ;
   u32 flags ;
   struct lockdep_map lockdep_map ;
};
#line 196 
struct hrtimer;
#line 197 
enum hrtimer_restart;
#line 221 
struct workqueue_struct;
#line 222 
struct work_struct;
#line 102  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/workqueue.h"
struct work_struct {
   atomic_long_t data ;
   struct list_head entry ;
   void (*func)(struct work_struct *) ;
   struct lockdep_map lockdep_map ;
};
#line 115  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/workqueue.h"
struct delayed_work {
   struct work_struct work ;
   struct timer_list timer ;
   struct workqueue_struct *wq ;
   int cpu ;
};
#line 124  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/workqueue.h"
struct rcu_work {
   struct work_struct work ;
   struct callback_head rcu ;
   struct workqueue_struct *wq ;
};
#line 54  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/notifier.h"
struct notifier_block {
   int (*notifier_call)(struct notifier_block *, unsigned long , void *) ;
   struct notifier_block *next ;
   int priority ;
};
#line 70  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/notifier.h"
struct raw_notifier_head {
   struct notifier_block *head ;
};
#line 50  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/uprobes.h"
struct arch_uprobe_task {
   unsigned long saved_scratch_register ;
   unsigned int saved_trap_nr ;
   unsigned int saved_tf ;
};
#line 57 
enum uprobe_task_state {
    UTASK_RUNNING = 0,
    UTASK_SSTEP = 1,
    UTASK_SSTEP_ACK = 2,
    UTASK_SSTEP_TRAPPED = 3
};
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uprobes.h"
struct __anonstruct_126 {
   struct arch_uprobe_task autask ;
   unsigned long vaddr ;
};
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uprobes.h"
struct __anonstruct_127 {
   struct callback_head dup_xol_work ;
   unsigned long dup_xol_addr ;
};
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uprobes.h"
union __anonunion_125 {
   struct __anonstruct_126 __anonCompField___anonunion_125_28 ;
   struct __anonstruct_127 __anonCompField___anonunion_125_29 ;
};
#line 61 
struct uprobe;
#line 61 
struct return_instance;
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uprobes.h"
struct uprobe_task {
   enum uprobe_task_state state ;
   union __anonunion_125 __anonCompField_uprobe_task_30 ;
   struct uprobe *active_uprobe ;
   unsigned long xol_vaddr ;
   struct return_instance *return_instances ;
   unsigned int depth ;
};
#line 83  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uprobes.h"
struct return_instance {
   struct uprobe *uprobe ;
   unsigned long func ;
   unsigned long stack ;
   unsigned long orig_ret_vaddr ;
   bool chained ;
   struct return_instance *next ;
};
#line 98 
struct xol_area;
#line 101  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uprobes.h"
struct uprobes_state {
   struct xol_area *xol_area ;
};
#line 140 
struct ldt_struct;
#line 140  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uprobes.h"
struct __anonstruct_mm_context_t_128 {
   u64 ctx_id ;
   atomic64_t tlb_gen ;
   struct rw_semaphore ldt_usr_sem ;
   struct ldt_struct *ldt ;
   unsigned short ia32_compat ;
   struct mutex lock ;
   void *vdso ;
   struct vdso_image *vdso_image ;
   atomic_t perf_rdpmc_allowed ;
   u16 pkey_allocation_map ;
   s16 execute_only_pkey ;
   void *bd_addr ;
};
#line 140  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uprobes.h"
typedef struct __anonstruct_mm_context_t_128 mm_context_t;
#line 66  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
struct address_space;
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
struct __anonstruct_130 {
   struct list_head lru ;
   struct address_space *mapping ;
   unsigned long index ;
   unsigned long private ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
struct __anonstruct_131 {
   dma_addr_t dma_addr ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
struct __anonstruct_134 {
   struct page *next ;
   int pages ;
   int pobjects ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
union __anonunion_133 {
   struct list_head slab_list ;
   struct __anonstruct_134 __anonCompField___anonunion_133_33 ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
struct __anonstruct_136 {
   unsigned int inuse : 16 ;
   unsigned int objects : 15 ;
   unsigned int frozen : 1 ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
union __anonunion_135 {
   void *s_mem ;
   unsigned long counters ;
   struct __anonstruct_136 __anonCompField___anonunion_135_35 ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
struct __anonstruct_132 {
   union __anonunion_133 __anonCompField___anonstruct_132_34 ;
   struct kmem_cache *slab_cache ;
   void *freelist ;
   union __anonunion_135 __anonCompField___anonstruct_132_36 ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
struct __anonstruct_137 {
   unsigned long compound_head ;
   unsigned char compound_dtor ;
   unsigned char compound_order ;
   atomic_t compound_mapcount ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
struct __anonstruct_138 {
   unsigned long _compound_pad_1 ;
   unsigned long _compound_pad_2 ;
   struct list_head deferred_list ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
union __anonunion_140 {
   struct mm_struct *pt_mm ;
   atomic_t pt_frag_refcount ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
struct __anonstruct_139 {
   unsigned long _pt_pad_1 ;
   pgtable_t pmd_huge_pte ;
   unsigned long _pt_pad_2 ;
   union __anonunion_140 __anonCompField___anonstruct_139_40 ;
   spinlock_t *ptl ;
};
#line 68 
struct dev_pagemap;
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
struct __anonstruct_141 {
   struct dev_pagemap *pgmap ;
   void *zone_device_data ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
union __anonunion_129 {
   struct __anonstruct_130 __anonCompField___anonunion_129_31 ;
   struct __anonstruct_131 __anonCompField___anonunion_129_32 ;
   struct __anonstruct_132 __anonCompField___anonunion_129_37 ;
   struct __anonstruct_137 __anonCompField___anonunion_129_38 ;
   struct __anonstruct_138 __anonCompField___anonunion_129_39 ;
   struct __anonstruct_139 __anonCompField___anonunion_129_41 ;
   struct __anonstruct_141 __anonCompField___anonunion_129_42 ;
   struct callback_head callback_head ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
union __anonunion_142 {
   atomic_t _mapcount ;
   unsigned int page_type ;
   unsigned int active ;
   int units ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
struct page {
   unsigned long flags ;
   union __anonunion_129 __anonCompField_page_43 ;
   union __anonunion_142 __anonCompField_page_44 ;
   atomic_t _refcount ;
   struct mem_cgroup *mem_cgroup ;
} __attribute__((__aligned__(16)));
#line 278  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct userfaultfd_ctx;
#line 278  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct vm_userfaultfd_ctx {
   struct userfaultfd_ctx *ctx ;
};
#line 292  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct __anonstruct_shared_143 {
   struct rb_node rb ;
   unsigned long rb_subtree_last ;
};
#line 292 
struct anon_vma;
#line 292 
struct vm_operations_struct;
#line 292 
struct mempolicy;
#line 292  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct vm_area_struct {
   unsigned long vm_start ;
   unsigned long vm_end ;
   struct vm_area_struct *vm_next ;
   struct vm_area_struct *vm_prev ;
   struct rb_node vm_rb ;
   unsigned long rb_subtree_gap ;
   struct mm_struct *vm_mm ;
   pgprot_t vm_page_prot ;
   unsigned long vm_flags ;
   struct __anonstruct_shared_143 shared ;
   struct list_head anon_vma_chain ;
   struct anon_vma *anon_vma ;
   struct vm_operations_struct *vm_ops ;
   unsigned long vm_pgoff ;
   struct file *vm_file ;
   void *vm_private_data ;
   atomic_long_t swap_readahead_info ;
   struct mempolicy *vm_policy ;
   struct vm_userfaultfd_ctx vm_userfaultfd_ctx ;
} __attribute__((__designated_init__));
#line 358  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct core_thread {
   struct task_struct *task ;
   struct core_thread *next ;
};
#line 363  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct core_state {
   atomic_t nr_threads ;
   struct core_thread dumper ;
   struct completion startup ;
};
#line 368 
struct kioctx_table;
#line 370 
struct linux_binfmt;
#line 370 
struct user_namespace;
#line 370 
struct mmu_notifier_mm;
#line 370  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct __anonstruct_144 {
   struct vm_area_struct *mmap ;
   struct rb_root mm_rb ;
   u64 vmacache_seqnum ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   unsigned long mmap_base ;
   unsigned long mmap_legacy_base ;
   unsigned long mmap_compat_base ;
   unsigned long mmap_compat_legacy_base ;
   unsigned long task_size ;
   unsigned long highest_vm_end ;
   pgd_t *pgd ;
   atomic_t membarrier_state ;
   atomic_t mm_users ;
   atomic_t mm_count ;
   atomic_long_t pgtables_bytes ;
   int map_count ;
   spinlock_t page_table_lock ;
   struct rw_semaphore mmap_sem ;
   struct list_head mmlist ;
   unsigned long hiwater_rss ;
   unsigned long hiwater_vm ;
   unsigned long total_vm ;
   unsigned long locked_vm ;
   atomic64_t pinned_vm ;
   unsigned long data_vm ;
   unsigned long exec_vm ;
   unsigned long stack_vm ;
   unsigned long def_flags ;
   spinlock_t arg_lock ;
   unsigned long start_code ;
   unsigned long end_code ;
   unsigned long start_data ;
   unsigned long end_data ;
   unsigned long start_brk ;
   unsigned long brk ;
   unsigned long start_stack ;
   unsigned long arg_start ;
   unsigned long arg_end ;
   unsigned long env_start ;
   unsigned long env_end ;
   unsigned long saved_auxv[46U] ;
   struct mm_rss_stat rss_stat ;
   struct linux_binfmt *binfmt ;
   mm_context_t context ;
   unsigned long flags ;
   struct core_state *core_state ;
   spinlock_t ioctx_lock ;
   struct kioctx_table *ioctx_table ;
   struct task_struct *owner ;
   struct user_namespace *user_ns ;
   struct file *exe_file ;
   struct mmu_notifier_mm *mmu_notifier_mm ;
   unsigned long numa_next_scan ;
   unsigned long numa_scan_offset ;
   int numa_scan_seq ;
   atomic_t tlb_flush_pending ;
   bool tlb_flush_batched ;
   struct uprobes_state uprobes_state ;
   atomic_long_t hugetlb_usage ;
   struct work_struct async_put_work ;
} __attribute__((__designated_init__));
#line 370  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct mm_struct {
   struct __anonstruct_144 __anonCompField_mm_struct_45 ;
   unsigned long cpu_bitmap[] ;
};
#line 642 
struct vm_fault;
#line 643  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
typedef unsigned int vm_fault_t;
#line 316  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
typedef unsigned int isolate_mode_t;
#line 824 
struct resource;
#line 825 
struct vmem_altmap;
#line 282  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/x86_init.h"
struct pci_dev;
#line 159  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/topology.h"
struct pci_bus;
#line 440  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/io.h"
struct fwnode_operations;
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fwnode.h"
struct fwnode_handle {
   struct fwnode_handle *secondary ;
   struct fwnode_operations *ops ;
   struct device *dev ;
};
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fwnode.h"
struct fwnode_endpoint {
   unsigned int port ;
   unsigned int id ;
   struct fwnode_handle *local_fwnode ;
};
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fwnode.h"
struct fwnode_reference_args {
   struct fwnode_handle *fwnode ;
   unsigned int nargs ;
   u64 args[8U] ;
};
#line 110  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fwnode.h"
struct fwnode_operations {
   struct fwnode_handle *(*get)(struct fwnode_handle *) ;
   void (*put)(struct fwnode_handle *) ;
   bool (*device_is_available)(struct fwnode_handle *) ;
   void *(*device_get_match_data)(struct fwnode_handle *, struct device *) ;
   bool (*property_present)(struct fwnode_handle *, char *) ;
   int (*property_read_int_array)(struct fwnode_handle *, char *, unsigned int , void *, size_t ) ;
   int (*property_read_string_array)(struct fwnode_handle *, char *, char **, size_t ) ;
   char *(*get_name)(struct fwnode_handle *) ;
   char *(*get_name_prefix)(struct fwnode_handle *) ;
   struct fwnode_handle *(*get_parent)(struct fwnode_handle *) ;
   struct fwnode_handle *(*get_next_child_node)(struct fwnode_handle *, struct fwnode_handle *) ;
   struct fwnode_handle *(*get_named_child_node)(struct fwnode_handle *, char *) ;
   int (*get_reference_args)(struct fwnode_handle *, char *, char *, unsigned int , unsigned int , struct fwnode_reference_args *) ;
   struct fwnode_handle *(*graph_get_next_endpoint)(struct fwnode_handle *, struct fwnode_handle *) ;
   struct fwnode_handle *(*graph_get_remote_endpoint)(struct fwnode_handle *) ;
   struct fwnode_handle *(*graph_get_port_parent)(struct fwnode_handle *) ;
   int (*graph_parse_endpoint)(struct fwnode_handle *, struct fwnode_endpoint *) ;
   int (*add_links)(struct fwnode_handle *, struct device *) ;
};
#line 54  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/llist.h"
struct llist_node;
#line 58  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/llist.h"
struct llist_node {
   struct llist_node *next ;
};
#line 53  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/vmalloc.h"
struct vm_struct {
   struct vm_struct *next ;
   void *addr ;
   unsigned long size ;
   unsigned long flags ;
   struct page **pages ;
   unsigned int nr_pages ;
   phys_addr_t phys_addr ;
   void *caller ;
};
#line 623  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/gfp.h"
struct percpu_ref;
#line 624  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/gfp.h"
typedef void percpu_ref_func_t(struct percpu_ref *);
#line 95  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/percpu-refcount.h"
struct percpu_ref {
   atomic_long_t count ;
   unsigned long percpu_count_ptr ;
   percpu_ref_func_t *release ;
   percpu_ref_func_t *confirm_switch ;
   bool force_atomic : 1 ;
   bool allow_reinit : 1 ;
   struct callback_head rcu ;
};
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/shrinker.h"
struct shrink_control {
   gfp_t gfp_mask ;
   int nid ;
   unsigned long nr_to_scan ;
   unsigned long nr_scanned ;
   struct mem_cgroup *memcg ;
};
#line 60  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/shrinker.h"
struct shrinker {
   unsigned long (*count_objects)(struct shrinker *, struct shrink_control *) ;
   unsigned long (*scan_objects)(struct shrinker *, struct shrink_control *) ;
   long batch ;
   int seeks ;
   unsigned int flags ;
   struct list_head list ;
   int id ;
   atomic_long_t *nr_deferred ;
};
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/resource.h"
struct rlimit {
   __kernel_ulong_t rlim_cur ;
   __kernel_ulong_t rlim_max ;
};
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ioport.h"
struct resource {
   resource_size_t start ;
   resource_size_t end ;
   char *name ;
   unsigned long flags ;
   unsigned long desc ;
   struct resource *parent ;
   struct resource *sibling ;
   struct resource *child ;
};
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memremap.h"
struct vmem_altmap {
   unsigned long base_pfn ;
   unsigned long end_pfn ;
   unsigned long reserve ;
   unsigned long free ;
   unsigned long align ;
   unsigned long alloc ;
};
#line 26 
enum memory_type {
    MEMORY_DEVICE_PRIVATE = 1,
    MEMORY_DEVICE_FS_DAX = 2,
    MEMORY_DEVICE_DEVDAX = 3,
    MEMORY_DEVICE_PCI_P2PDMA = 4
};
#line 67  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memremap.h"
struct dev_pagemap_ops {
   void (*page_free)(struct page *) ;
   void (*kill)(struct dev_pagemap *) ;
   void (*cleanup)(struct dev_pagemap *) ;
   vm_fault_t (*migrate_to_ram)(struct vm_fault *) ;
};
#line 107  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memremap.h"
struct dev_pagemap {
   struct vmem_altmap altmap ;
   struct resource res ;
   struct percpu_ref *ref ;
   struct percpu_ref internal_ref ;
   struct completion done ;
   enum memory_type type ;
   unsigned int flags ;
   struct dev_pagemap_ops *ops ;
};
#line 176 
struct file_ra_state;
#line 177 
struct user_struct;
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/refcount.h"
struct refcount_struct {
   atomic_t refs ;
};
#line 101  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/refcount.h"
typedef struct refcount_struct refcount_t;
#line 305 
enum pid_type {
    PIDTYPE_PID = 0,
    PIDTYPE_TGID = 1,
    PIDTYPE_PGID = 2,
    PIDTYPE_SID = 3,
    PIDTYPE_MAX = 4
};
#line 54  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pid.h"
struct pid_namespace;
#line 54  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pid.h"
struct upid {
   int nr ;
   struct pid_namespace *ns ;
};
#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pid.h"
struct pid {
   refcount_t count ;
   unsigned int level ;
   struct hlist_head tasks[4U] ;
   wait_queue_head_t wait_pidfd ;
   struct callback_head rcu ;
   struct upid numbers[1U] ;
};
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uidgid.h"
struct __anonstruct_kuid_t_272 {
   uid_t val ;
};
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uidgid.h"
typedef struct __anonstruct_kuid_t_272 kuid_t;
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uidgid.h"
struct __anonstruct_kgid_t_273 {
   gid_t val ;
};
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uidgid.h"
typedef struct __anonstruct_kgid_t_273 kgid_t;
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable-types.h"
struct rhash_head {
   struct rhash_head *next ;
};
#line 33 
struct rhashtable;
#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable-types.h"
struct rhashtable_compare_arg {
   struct rhashtable *ht ;
   void *key ;
};
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable-types.h"
struct rhashtable_params {
   u16 nelem_hint ;
   u16 key_len ;
   u16 key_offset ;
   u16 head_offset ;
   unsigned int max_size ;
   u16 min_size ;
   bool automatic_shrinking ;
   u32 (*hashfn)(void *, u32 , u32 ) ;
   u32 (*obj_hashfn)(void *, u32 , u32 ) ;
   int (*obj_cmpfn)(struct rhashtable_compare_arg *, void *) ;
};
#line 81  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable-types.h"
struct rhashtable {
   struct bucket_table *tbl ;
   unsigned int key_len ;
   unsigned int max_elems ;
   struct rhashtable_params p ;
   bool rhlist ;
   struct work_struct run_work ;
   struct mutex mutex ;
   spinlock_t lock ;
   atomic_t nelems ;
};
#line 67  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/sem.h"
struct sem_undo_list;
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sem.h"
struct sysv_sem {
   struct sem_undo_list *undo_list ;
};
#line 13  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/shm.h"
struct sysv_shm {
   struct list_head shm_clist ;
};
#line 83  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/plist.h"
struct plist_node {
   int prio ;
   struct list_head prio_list ;
   struct list_head node_list ;
};
#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timerqueue.h"
struct timerqueue_node {
   struct rb_node node ;
   ktime_t expires ;
};
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timerqueue.h"
struct timerqueue_head {
   struct rb_root_cached rb_root ;
};
#line 60 
struct hrtimer_clock_base;
#line 61 
struct hrtimer_cpu_base;
#line 80 
enum hrtimer_restart {
    HRTIMER_NORESTART = 0,
    HRTIMER_RESTART = 1
};
#line 117  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/hrtimer.h"
struct hrtimer {
   struct timerqueue_node node ;
   ktime_t _softexpires ;
   enum hrtimer_restart (*function)(struct hrtimer *) ;
   struct hrtimer_clock_base *base ;
   u8 state ;
   u8 is_rel ;
   u8 is_soft ;
   u8 is_hard ;
};
#line 158  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/hrtimer.h"
struct hrtimer_clock_base {
   struct hrtimer_cpu_base *cpu_base ;
   unsigned int index ;
   clockid_t clockid ;
   seqcount_t seq ;
   struct hrtimer *running ;
   struct timerqueue_head active ;
   ktime_t (*get_time)(void) ;
   ktime_t offset ;
} __attribute__((__aligned__(64)));
#line 213  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/hrtimer.h"
struct hrtimer_cpu_base {
   raw_spinlock_t lock ;
   unsigned int cpu ;
   unsigned int active_bases ;
   unsigned int clock_was_set_seq ;
   unsigned int hres_active : 1 ;
   unsigned int in_hrtirq : 1 ;
   unsigned int hang_detected : 1 ;
   unsigned int softirq_activated : 1 ;
   unsigned int nr_events ;
   unsigned short nr_retries ;
   unsigned short nr_hangs ;
   unsigned int max_hang_time ;
   ktime_t expires_next ;
   struct hrtimer *next_timer ;
   ktime_t softirq_expires_next ;
   struct hrtimer *softirq_next_timer ;
   struct hrtimer_clock_base clock_base[8U] ;
} __attribute__((__aligned__(64)));
#line 40  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/seccomp.h"
struct seccomp_filter;
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/seccomp.h"
struct seccomp {
   int mode ;
   struct seccomp_filter *filter ;
};
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/latencytop.h"
struct latency_record {
   unsigned long backtrace[12U] ;
   unsigned int count ;
   unsigned long time ;
   unsigned long max ;
};
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched/types.h"
struct task_cputime {
   u64 stime ;
   u64 utime ;
   unsigned long long sum_exec_runtime ;
};
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/signal.h"
struct __anonstruct_sigset_t_276 {
   unsigned long sig[1U] ;
};
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/signal.h"
typedef struct __anonstruct_sigset_t_276 sigset_t;
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/signal.h"
typedef void __signalfn_t(int );
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/signal-defs.h"
typedef __signalfn_t *__sighandler_t;
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/signal-defs.h"
typedef void __restorefn_t(void);
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/signal-defs.h"
typedef __restorefn_t *__sigrestore_t;
#line 8  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
union sigval {
   int sival_int ;
   void *sival_ptr ;
};
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
typedef union sigval sigval_t;
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__kill_277 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__timer_278 {
   __kernel_timer_t _tid ;
   int _overrun ;
   sigval_t _sigval ;
   int _sys_private ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__rt_279 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   sigval_t _sigval ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigchld_280 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   int _status ;
   __kernel_clock_t _utime ;
   __kernel_clock_t _stime ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__addr_bnd_283 {
   char _dummy_bnd[8U] ;
   void *_lower ;
   void *_upper ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__addr_pkey_284 {
   char _dummy_pkey[8U] ;
   __u32 _pkey ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
union __anonunion_282 {
   short _addr_lsb ;
   struct __anonstruct__addr_bnd_283 _addr_bnd ;
   struct __anonstruct__addr_pkey_284 _addr_pkey ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigfault_281 {
   void *_addr ;
   union __anonunion_282 __anonCompField___anonstruct__sigfault_281_47 ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigpoll_285 {
   long _band ;
   int _fd ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigsys_286 {
   void *_call_addr ;
   int _syscall ;
   unsigned int _arch ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
union __sifields {
   struct __anonstruct__kill_277 _kill ;
   struct __anonstruct__timer_278 _timer ;
   struct __anonstruct__rt_279 _rt ;
   struct __anonstruct__sigchld_280 _sigchld ;
   struct __anonstruct__sigfault_281 _sigfault ;
   struct __anonstruct__sigpoll_285 _sigpoll ;
   struct __anonstruct__sigsys_286 _sigsys ;
};
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/signal_types.h"
struct __anonstruct_291 {
   int si_signo ;
   int si_errno ;
   int si_code ;
   union __sifields _sifields ;
};
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/signal_types.h"
struct kernel_siginfo {
   struct __anonstruct_291 __anonCompField_kernel_siginfo_50 ;
};
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/signal_types.h"
typedef struct kernel_siginfo kernel_siginfo_t;
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/signal_types.h"
struct sigpending {
   struct list_head list ;
   sigset_t signal ;
};
#line 35  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/signal_types.h"
struct sigaction {
   __sighandler_t sa_handler ;
   unsigned long sa_flags ;
   __sigrestore_t sa_restorer ;
   sigset_t sa_mask ;
};
#line 49  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/signal_types.h"
struct k_sigaction {
   struct sigaction sa ;
};
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/task_io_accounting.h"
struct task_io_accounting {
   u64 rchar ;
   u64 wchar ;
   u64 syscr ;
   u64 syscw ;
   u64 read_bytes ;
   u64 write_bytes ;
   u64 cancelled_write_bytes ;
};
#line 107  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/posix-timers.h"
struct posix_cputimer_base {
   u64 nextevt ;
   struct timerqueue_head tqhead ;
};
#line 122  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/posix-timers.h"
struct posix_cputimers {
   struct posix_cputimer_base bases[3U] ;
   unsigned int timers_active ;
   unsigned int expiry_active ;
};
#line 193 
struct signal_struct;
#line 62  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/rseq.h"
union __anonunion_rseq_cs_296 {
   __u64 ptr64 ;
   __u64 ptr ;
};
#line 62  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/rseq.h"
struct rseq {
   __u32 cpu_id_start ;
   __u32 cpu_id ;
   union __anonunion_rseq_cs_296 rseq_cs ;
   __u32 flags ;
} __attribute__((__aligned__(32)));
#line 146 
struct audit_context;
#line 150 
struct capture_control;
#line 151 
struct cfs_rq;
#line 152 
struct fs_struct;
#line 153 
struct futex_pi_state;
#line 154 
struct io_context;
#line 155 
struct nameidata;
#line 156 
struct nsproxy;
#line 157 
struct perf_event_context;
#line 158 
struct pipe_inode_info;
#line 160 
struct reclaim_state;
#line 161 
struct robust_list_head;
#line 166 
struct sighand_struct;
#line 167 
struct task_delay_info;
#line 168 
struct task_group;
#line 242  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct prev_cputime {
   u64 utime ;
   u64 stime ;
   raw_spinlock_t lock ;
};
#line 290  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct sched_info {
   unsigned long pcount ;
   unsigned long long run_delay ;
   unsigned long long last_arrival ;
   unsigned long long last_queued ;
};
#line 325  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct load_weight {
   unsigned long weight ;
   u32 inv_weight ;
};
#line 352  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct util_est {
   unsigned int enqueued ;
   unsigned int ewma ;
} __attribute__((__aligned__(8)));
#line 401  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct sched_avg {
   u64 last_update_time ;
   u64 load_sum ;
   u64 runnable_load_sum ;
   u32 util_sum ;
   u32 period_contrib ;
   unsigned long load_avg ;
   unsigned long runnable_load_avg ;
   unsigned long util_avg ;
   struct util_est util_est ;
} __attribute__((__aligned__(64)));
#line 413  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct sched_statistics {
   u64 wait_start ;
   u64 wait_max ;
   u64 wait_count ;
   u64 wait_sum ;
   u64 iowait_count ;
   u64 iowait_sum ;
   u64 sleep_start ;
   u64 sleep_max ;
   s64 sum_sleep_runtime ;
   u64 block_start ;
   u64 block_max ;
   u64 exec_max ;
   u64 slice_max ;
   u64 nr_migrations_cold ;
   u64 nr_failed_migrations_affine ;
   u64 nr_failed_migrations_running ;
   u64 nr_failed_migrations_hot ;
   u64 nr_forced_migrations ;
   u64 nr_wakeups ;
   u64 nr_wakeups_sync ;
   u64 nr_wakeups_migrate ;
   u64 nr_wakeups_local ;
   u64 nr_wakeups_remote ;
   u64 nr_wakeups_affine ;
   u64 nr_wakeups_affine_attempts ;
   u64 nr_wakeups_passive ;
   u64 nr_wakeups_idle ;
};
#line 449  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct sched_entity {
   struct load_weight load ;
   unsigned long runnable_weight ;
   struct rb_node run_node ;
   struct list_head group_node ;
   unsigned int on_rq ;
   u64 exec_start ;
   u64 sum_exec_runtime ;
   u64 vruntime ;
   u64 prev_sum_exec_runtime ;
   u64 nr_migrations ;
   struct sched_statistics statistics ;
   int depth ;
   struct sched_entity *parent ;
   struct cfs_rq *cfs_rq ;
   struct cfs_rq *my_q ;
   struct sched_avg avg ;
};
#line 486 
struct rt_rq;
#line 486  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct sched_rt_entity {
   struct list_head run_list ;
   unsigned long timeout ;
   unsigned long watchdog_stamp ;
   unsigned int time_slice ;
   unsigned short on_rq ;
   unsigned short on_list ;
   struct sched_rt_entity *back ;
   struct sched_rt_entity *parent ;
   struct rt_rq *rt_rq ;
   struct rt_rq *my_q ;
} __attribute__((__designated_init__));
#line 504  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct sched_dl_entity {
   struct rb_node rb_node ;
   u64 dl_runtime ;
   u64 dl_deadline ;
   u64 dl_period ;
   u64 dl_bw ;
   u64 dl_density ;
   s64 runtime ;
   u64 deadline ;
   unsigned int flags ;
   unsigned int dl_throttled : 1 ;
   unsigned int dl_boosted : 1 ;
   unsigned int dl_yielded : 1 ;
   unsigned int dl_non_contending : 1 ;
   unsigned int dl_overrun : 1 ;
   struct hrtimer dl_timer ;
   struct hrtimer inactive_timer ;
};
#line 600  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct uclamp_se {
   unsigned int value : 11 ;
   unsigned int bucket_id : 3 ;
   unsigned int active : 1 ;
   unsigned int user_defined : 1 ;
};
#line 625  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct wake_q_node {
   struct wake_q_node *next ;
};
#line 629 
struct sched_class;
#line 629 
struct cred;
#line 629 
struct key;
#line 629 
struct files_struct;
#line 629 
struct rt_mutex_waiter;
#line 629 
struct css_set;
#line 629 
struct compat_robust_list_head;
#line 629 
struct numa_group;
#line 629  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
union __anonunion_298 {
   refcount_t rcu_users ;
   struct callback_head rcu ;
};
#line 629 
struct ftrace_ret_stack;
#line 629 
struct kcov;
#line 629  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct task_struct {
   struct thread_info thread_info ;
   long state ;
   void *stack ;
   refcount_t usage ;
   unsigned int flags ;
   unsigned int ptrace ;
   struct llist_node wake_entry ;
   int on_cpu ;
   unsigned int cpu ;
   unsigned int wakee_flips ;
   unsigned long wakee_flip_decay_ts ;
   struct task_struct *last_wakee ;
   int recent_used_cpu ;
   int wake_cpu ;
   int on_rq ;
   int prio ;
   int static_prio ;
   int normal_prio ;
   unsigned int rt_priority ;
   struct sched_class *sched_class ;
   struct sched_entity se ;
   struct sched_rt_entity rt ;
   struct task_group *sched_task_group ;
   struct sched_dl_entity dl ;
   struct uclamp_se uclamp_req[2U] ;
   struct uclamp_se uclamp[2U] ;
   struct hlist_head preempt_notifiers ;
   unsigned int btrace_seq ;
   unsigned int policy ;
   int nr_cpus_allowed ;
   cpumask_t *cpus_ptr ;
   cpumask_t cpus_mask ;
   unsigned long rcu_tasks_nvcsw ;
   u8 rcu_tasks_holdout ;
   u8 rcu_tasks_idx ;
   int rcu_tasks_idle_cpu ;
   struct list_head rcu_tasks_holdout_list ;
   struct sched_info sched_info ;
   struct list_head tasks ;
   struct plist_node pushable_tasks ;
   struct rb_node pushable_dl_tasks ;
   struct mm_struct *mm ;
   struct mm_struct *active_mm ;
   struct vmacache vmacache ;
   struct task_rss_stat rss_stat ;
   int exit_state ;
   int exit_code ;
   int exit_signal ;
   int pdeath_signal ;
   unsigned long jobctl ;
   unsigned int personality ;
   unsigned int sched_reset_on_fork : 1 ;
   unsigned int sched_contributes_to_load : 1 ;
   unsigned int sched_migrated : 1 ;
   unsigned int sched_remote_wakeup : 1 ;
   unsigned int sched_psi_wake_requeue : 1 ;
   unsigned int  ;
   unsigned int in_execve : 1 ;
   unsigned int in_iowait : 1 ;
   unsigned int restore_sigmask : 1 ;
   unsigned int in_user_fault : 1 ;
   unsigned int brk_randomized : 1 ;
   unsigned int no_cgroup_migration : 1 ;
   unsigned int frozen : 1 ;
   unsigned int use_memdelay : 1 ;
   unsigned long atomic_flags ;
   struct restart_block restart_block ;
   pid_t pid ;
   pid_t tgid ;
   unsigned long stack_canary ;
   struct task_struct *real_parent ;
   struct task_struct *parent ;
   struct list_head children ;
   struct list_head sibling ;
   struct task_struct *group_leader ;
   struct list_head ptraced ;
   struct list_head ptrace_entry ;
   struct pid *thread_pid ;
   struct hlist_node pid_links[4U] ;
   struct list_head thread_group ;
   struct list_head thread_node ;
   struct completion *vfork_done ;
   int *set_child_tid ;
   int *clear_child_tid ;
   u64 utime ;
   u64 stime ;
   u64 gtime ;
   struct prev_cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   u64 start_time ;
   u64 start_boottime ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   struct posix_cputimers posix_cputimers ;
   struct cred *ptracer_cred ;
   struct cred *real_cred ;
   struct cred *cred ;
   struct key *cached_requested_key ;
   char comm[16U] ;
   struct nameidata *nameidata ;
   struct sysv_sem sysvsem ;
   struct sysv_shm sysvshm ;
   unsigned long last_switch_count ;
   unsigned long last_switch_time ;
   struct fs_struct *fs ;
   struct files_struct *files ;
   struct nsproxy *nsproxy ;
   struct signal_struct *signal ;
   struct sighand_struct *sighand ;
   sigset_t blocked ;
   sigset_t real_blocked ;
   sigset_t saved_sigmask ;
   struct sigpending pending ;
   unsigned long sas_ss_sp ;
   size_t sas_ss_size ;
   unsigned int sas_ss_flags ;
   struct callback_head *task_works ;
   struct audit_context *audit_context ;
   kuid_t loginuid ;
   unsigned int sessionid ;
   struct seccomp seccomp ;
   u32 parent_exec_id ;
   u32 self_exec_id ;
   spinlock_t alloc_lock ;
   raw_spinlock_t pi_lock ;
   struct wake_q_node wake_q ;
   struct rb_root_cached pi_waiters ;
   struct task_struct *pi_top_task ;
   struct rt_mutex_waiter *pi_blocked_on ;
   struct mutex_waiter *blocked_on ;
   int non_block_count ;
   unsigned int irq_events ;
   unsigned long hardirq_enable_ip ;
   unsigned long hardirq_disable_ip ;
   unsigned int hardirq_enable_event ;
   unsigned int hardirq_disable_event ;
   int hardirqs_enabled ;
   int hardirq_context ;
   unsigned long softirq_disable_ip ;
   unsigned long softirq_enable_ip ;
   unsigned int softirq_disable_event ;
   unsigned int softirq_enable_event ;
   int softirqs_enabled ;
   int softirq_context ;
   u64 curr_chain_key ;
   int lockdep_depth ;
   unsigned int lockdep_recursion ;
   struct held_lock held_locks[48U] ;
   unsigned int in_ubsan ;
   void *journal_info ;
   struct bio_list *bio_list ;
   struct blk_plug *plug ;
   struct reclaim_state *reclaim_state ;
   struct backing_dev_info *backing_dev_info ;
   struct io_context *io_context ;
   struct capture_control *capture_control ;
   unsigned long ptrace_message ;
   kernel_siginfo_t *last_siginfo ;
   struct task_io_accounting ioac ;
   unsigned int psi_flags ;
   u64 acct_rss_mem1 ;
   u64 acct_vm_mem1 ;
   u64 acct_timexpd ;
   nodemask_t mems_allowed ;
   seqcount_t mems_allowed_seq ;
   int cpuset_mem_spread_rotor ;
   int cpuset_slab_spread_rotor ;
   struct css_set *cgroups ;
   struct list_head cg_list ;
   u32 closid ;
   u32 rmid ;
   struct robust_list_head *robust_list ;
   struct compat_robust_list_head *compat_robust_list ;
   struct list_head pi_state_list ;
   struct futex_pi_state *pi_state_cache ;
   struct mutex futex_exit_mutex ;
   unsigned int futex_state ;
   struct perf_event_context *perf_event_ctxp[2U] ;
   struct mutex perf_event_mutex ;
   struct list_head perf_event_list ;
   struct mempolicy *mempolicy ;
   short il_prev ;
   short pref_node_fork ;
   int numa_scan_seq ;
   unsigned int numa_scan_period ;
   unsigned int numa_scan_period_max ;
   int numa_preferred_nid ;
   unsigned long numa_migrate_retry ;
   u64 node_stamp ;
   u64 last_task_numa_placement ;
   u64 last_sum_exec_runtime ;
   struct callback_head numa_work ;
   struct numa_group *numa_group ;
   unsigned long *numa_faults ;
   unsigned long total_numa_faults ;
   unsigned long numa_faults_locality[3U] ;
   unsigned long numa_pages_migrated ;
   struct rseq *rseq ;
   u32 rseq_sig ;
   unsigned long rseq_event_mask ;
   struct tlbflush_unmap_batch tlb_ubc ;
   union __anonunion_298 __anonCompField_task_struct_52 ;
   struct pipe_inode_info *splice_pipe ;
   struct page_frag task_frag ;
   struct task_delay_info *delays ;
   int make_it_fail ;
   unsigned int fail_nth ;
   int nr_dirtied ;
   int nr_dirtied_pause ;
   unsigned long dirty_paused_when ;
   int latency_record_count ;
   struct latency_record latency_record[32U] ;
   u64 timer_slack_ns ;
   u64 default_timer_slack_ns ;
   unsigned int kasan_depth ;
   int curr_ret_stack ;
   int curr_ret_depth ;
   struct ftrace_ret_stack *ret_stack ;
   unsigned long long ftrace_timestamp ;
   atomic_t trace_overrun ;
   atomic_t tracing_graph_pause ;
   unsigned long trace ;
   unsigned long trace_recursion ;
   unsigned int kcov_mode ;
   unsigned int kcov_size ;
   void *kcov_area ;
   struct kcov *kcov ;
   u64 kcov_handle ;
   int kcov_sequence ;
   struct mem_cgroup *memcg_in_oom ;
   gfp_t memcg_oom_gfp_mask ;
   int memcg_oom_order ;
   unsigned int memcg_nr_pages_over_high ;
   struct mem_cgroup *active_memcg ;
   struct request_queue *throttle_queue ;
   struct uprobe_task *utask ;
   unsigned int sequential_io ;
   unsigned int sequential_io_avg ;
   unsigned long task_state_change ;
   int pagefault_disabled ;
   struct task_struct *oom_reaper_list ;
   struct vm_struct *stack_vm_area ;
   refcount_t stack_refcount ;
   int patch_state ;
   void *security ;
   struct thread_struct thread ;
};
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/extable.h"
struct exception_table_entry {
   int insn ;
   int fixup ;
   int handler ;
};
#line 417  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm.h"
struct vm_fault {
   struct vm_area_struct *vma ;
   unsigned int flags ;
   gfp_t gfp_mask ;
   unsigned long pgoff ;
   unsigned long address ;
   pmd_t *pmd ;
   pud_t *pud ;
   pte_t orig_pte ;
   struct page *cow_page ;
   struct mem_cgroup *memcg ;
   struct page *page ;
   pte_t *pte ;
   spinlock_t *ptl ;
   pgtable_t prealloc_pte ;
};
#line 448 
enum page_entry_size {
    PE_SIZE_PTE = 0,
    PE_SIZE_PMD = 1,
    PE_SIZE_PUD = 2
};
#line 467  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm.h"
struct vm_operations_struct {
   void (*open)(struct vm_area_struct *) ;
   void (*close)(struct vm_area_struct *) ;
   int (*split)(struct vm_area_struct *, unsigned long ) ;
   int (*mremap)(struct vm_area_struct *) ;
   vm_fault_t (*fault)(struct vm_fault *) ;
   vm_fault_t (*huge_fault)(struct vm_fault *, enum page_entry_size ) ;
   void (*map_pages)(struct vm_fault *, unsigned long , unsigned long ) ;
   unsigned long (*pagesize)(struct vm_area_struct *) ;
   vm_fault_t (*page_mkwrite)(struct vm_fault *) ;
   vm_fault_t (*pfn_mkwrite)(struct vm_fault *) ;
   int (*access)(struct vm_area_struct *, unsigned long , void *, int , int ) ;
   char *(*name)(struct vm_area_struct *) ;
   int (*set_policy)(struct vm_area_struct *, struct mempolicy *) ;
   struct mempolicy *(*get_policy)(struct vm_area_struct *, unsigned long ) ;
   struct page *(*find_special_page)(struct vm_area_struct *, unsigned long ) ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_bl.h"
struct hlist_bl_node;
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_bl.h"
struct hlist_bl_head {
   struct hlist_bl_node *first ;
};
#line 38  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_bl.h"
struct hlist_bl_node {
   struct hlist_bl_node *next ;
   struct hlist_bl_node **pprev ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockref.h"
struct __anonstruct_387 {
   spinlock_t lock ;
   int count ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockref.h"
union __anonunion_386 {
   struct __anonstruct_387 __anonCompField___anonunion_386_53 ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockref.h"
struct lockref {
   union __anonunion_386 __anonCompField_lockref_54 ;
};
#line 78  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/stringhash.h"
struct path;
#line 79 
struct vfsmount;
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dcache.h"
struct __anonstruct_389 {
   u32 hash ;
   u32 len ;
};
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dcache.h"
union __anonunion_388 {
   struct __anonstruct_389 __anonCompField___anonunion_388_55 ;
   u64 hash_len ;
};
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dcache.h"
struct qstr {
   union __anonunion_388 __anonCompField_qstr_56 ;
   unsigned char *name ;
};
#line 89 
struct dentry_operations;
#line 89 
struct super_block;
#line 89  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dcache.h"
union __anonunion_390 {
   struct list_head d_lru ;
   wait_queue_head_t *d_wait ;
};
#line 89  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dcache.h"
union __anonunion_d_u_391 {
   struct hlist_node d_alias ;
   struct hlist_bl_node d_in_lookup_hash ;
   struct callback_head d_rcu ;
};
#line 89  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dcache.h"
struct dentry {
   unsigned int d_flags ;
   seqcount_t d_seq ;
   struct hlist_bl_node d_hash ;
   struct dentry *d_parent ;
   struct qstr d_name ;
   struct inode *d_inode ;
   unsigned char d_iname[32U] ;
   struct lockref d_lockref ;
   struct dentry_operations *d_op ;
   struct super_block *d_sb ;
   unsigned long d_time ;
   void *d_fsdata ;
   union __anonunion_390 __anonCompField_dentry_57 ;
   struct list_head d_child ;
   struct list_head d_subdirs ;
   union __anonunion_d_u_391 d_u ;
} __attribute__((__designated_init__));
#line 135  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dcache.h"
struct dentry_operations {
   int (*d_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_weak_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_hash)(struct dentry *, struct qstr *) ;
   int (*d_compare)(struct dentry *, unsigned int , char *, struct qstr *) ;
   int (*d_delete)(struct dentry *) ;
   int (*d_init)(struct dentry *) ;
   void (*d_release)(struct dentry *) ;
   void (*d_prune)(struct dentry *) ;
   void (*d_iput)(struct dentry *, struct inode *) ;
   char *(*d_dname)(struct dentry *, char *, int ) ;
   struct vfsmount *(*d_automount)(struct path *) ;
   int (*d_manage)(struct path *, bool ) ;
   struct dentry *(*d_real)(struct dentry *, struct inode *) ;
} __attribute__((__aligned__(64)));
#line 8  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/path.h"
struct path {
   struct vfsmount *mnt ;
   struct dentry *dentry ;
} __attribute__((__designated_init__));
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/stat.h"
struct kstat {
   u32 result_mask ;
   umode_t mode ;
   unsigned int nlink ;
   uint32_t blksize ;
   u64 attributes ;
   u64 attributes_mask ;
   u64 ino ;
   dev_t dev ;
   dev_t rdev ;
   kuid_t uid ;
   kgid_t gid ;
   loff_t size ;
   struct timespec64 atime ;
   struct timespec64 mtime ;
   struct timespec64 ctime ;
   struct timespec64 btime ;
   u64 blocks ;
};
#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_lru.h"
struct list_lru_one {
   struct list_head list ;
   long nr_items ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_lru.h"
struct list_lru_memcg {
   struct callback_head rcu ;
   struct list_lru_one *lru[0U] ;
};
#line 40  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_lru.h"
struct list_lru_node {
   spinlock_t lock ;
   struct list_lru_one lru ;
   struct list_lru_memcg *memcg_lrus ;
   long nr_items ;
} __attribute__((__aligned__(64)));
#line 52  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_lru.h"
struct list_lru {
   struct list_lru_node *node ;
   struct list_head list ;
   int shrinker_id ;
   bool memcg_aware ;
};
#line 292  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/xarray.h"
struct xarray {
   spinlock_t xa_lock ;
   gfp_t xa_flags ;
   void *xa_head ;
};
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/capability.h"
struct kernel_cap_struct {
   __u32 cap[2U] ;
};
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/capability.h"
typedef struct kernel_cap_struct kernel_cap_t;
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fiemap.h"
struct fiemap_extent {
   __u64 fe_logical ;
   __u64 fe_physical ;
   __u64 fe_length ;
   __u64 fe_reserved64[2U] ;
   __u32 fe_flags ;
   __u32 fe_reserved[3U] ;
};
#line 39 
enum migrate_mode {
    MIGRATE_ASYNC = 0,
    MIGRATE_SYNC_LIGHT = 1,
    MIGRATE_SYNC = 2,
    MIGRATE_SYNC_NO_COPY = 3
};
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rcuwait.h"
struct rcuwait {
   struct task_struct *task ;
};
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rcu_sync.h"
struct rcu_sync {
   int gp_state ;
   int gp_count ;
   wait_queue_head_t gp_wait ;
   struct callback_head cb_head ;
};
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/percpu-rwsem.h"
struct percpu_rw_semaphore {
   struct rcu_sync rss ;
   unsigned int *read_count ;
   struct rw_semaphore rw_sem ;
   struct rcuwait writer ;
   int readers_block ;
};
#line 10  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/delayed_call.h"
struct delayed_call {
   void (*fn)(void *) ;
   void *arg ;
};
#line 36  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/uuid.h"
struct __anonstruct_uuid_t_409 {
   __u8 b[16U] ;
};
#line 36  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/uuid.h"
typedef struct __anonstruct_uuid_t_409 uuid_t;
#line 87  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uuid.h"
typedef u32 errseq_t;
#line 72  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/iocontext.h"
union __anonunion_410 {
   struct list_head q_node ;
   struct kmem_cache *__rcu_icq_cache ;
};
#line 72  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/iocontext.h"
union __anonunion_411 {
   struct hlist_node ioc_node ;
   struct callback_head __rcu_head ;
};
#line 72  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/iocontext.h"
struct io_cq {
   struct request_queue *q ;
   struct io_context *ioc ;
   union __anonunion_410 __anonCompField_io_cq_60 ;
   union __anonunion_411 __anonCompField_io_cq_61 ;
   unsigned int flags ;
};
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/iocontext.h"
struct io_context {
   atomic_long_t refcount ;
   atomic_t active_ref ;
   atomic_t nr_tasks ;
   spinlock_t lock ;
   unsigned short ioprio ;
   int nr_batch_requests ;
   unsigned long last_waited ;
   struct xarray icq_tree ;
   struct io_cq *icq_hint ;
   struct hlist_head icq_list ;
   struct work_struct release_work ;
};
#line 287  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fs.h"
struct export_operations;
#line 289 
struct iovec;
#line 290 
struct kiocb;
#line 291 
struct kobject;
#line 293 
struct kstatfs;
#line 294 
struct swap_info_struct;
#line 295 
struct iov_iter;
#line 296 
struct fscrypt_info;
#line 297 
struct fscrypt_operations;
#line 298 
struct fsverity_info;
#line 299 
struct fsverity_operations;
#line 300 
struct fs_context;
#line 301 
struct fs_parameter_description;
#line 224  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct iattr {
   unsigned int ia_valid ;
   umode_t ia_mode ;
   kuid_t ia_uid ;
   kgid_t ia_gid ;
   loff_t ia_size ;
   struct timespec64 ia_atime ;
   struct timespec64 ia_mtime ;
   struct timespec64 ia_ctime ;
   struct file *ia_file ;
};
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/percpu_counter.h"
struct percpu_counter {
   raw_spinlock_t lock ;
   s64 count ;
   struct list_head list ;
   s32 *counters ;
};
#line 214  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dqblk_xfs.h"
struct dquot;
#line 215 
struct kqid;
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/projid.h"
typedef __kernel_uid32_t projid_t;
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/projid.h"
struct __anonstruct_kprojid_t_412 {
   projid_t val ;
};
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/projid.h"
typedef struct __anonstruct_kprojid_t_412 kprojid_t;
#line 180  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/quota.h"
enum quota_type {
    USRQUOTA = 0,
    GRPQUOTA = 1,
    PRJQUOTA = 2
};
#line 66  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
typedef long long qsize_t;
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
union __anonunion_413 {
   kuid_t uid ;
   kgid_t gid ;
   kprojid_t projid ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct kqid {
   union __anonunion_413 __anonCompField_kqid_62 ;
   enum quota_type type ;
};
#line 205  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct mem_dqblk {
   qsize_t dqb_bhardlimit ;
   qsize_t dqb_bsoftlimit ;
   qsize_t dqb_curspace ;
   qsize_t dqb_rsvspace ;
   qsize_t dqb_ihardlimit ;
   qsize_t dqb_isoftlimit ;
   qsize_t dqb_curinodes ;
   time64_t dqb_btime ;
   time64_t dqb_itime ;
};
#line 216 
struct quota_format_type;
#line 222  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct mem_dqinfo {
   struct quota_format_type *dqi_format ;
   int dqi_fmt_id ;
   struct list_head dqi_dirty_list ;
   unsigned long dqi_flags ;
   unsigned int dqi_bgrace ;
   unsigned int dqi_igrace ;
   qsize_t dqi_max_spc_limit ;
   qsize_t dqi_max_ino_limit ;
   void *dqi_priv ;
};
#line 294  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct dquot {
   struct hlist_node dq_hash ;
   struct list_head dq_inuse ;
   struct list_head dq_free ;
   struct list_head dq_dirty ;
   struct mutex dq_lock ;
   spinlock_t dq_dqb_lock ;
   atomic_t dq_count ;
   struct super_block *dq_sb ;
   struct kqid dq_id ;
   loff_t dq_off ;
   unsigned long dq_flags ;
   struct mem_dqblk dq_dqb ;
};
#line 310  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct quota_format_ops {
   int (*check_quota_file)(struct super_block *, int ) ;
   int (*read_file_info)(struct super_block *, int ) ;
   int (*write_file_info)(struct super_block *, int ) ;
   int (*free_file_info)(struct super_block *, int ) ;
   int (*read_dqblk)(struct dquot *) ;
   int (*commit_dqblk)(struct dquot *) ;
   int (*release_dqblk)(struct dquot *) ;
   int (*get_next_id)(struct super_block *, struct kqid *) ;
};
#line 322  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct dquot_operations {
   int (*write_dquot)(struct dquot *) ;
   struct dquot *(*alloc_dquot)(struct super_block *, int ) ;
   void (*destroy_dquot)(struct dquot *) ;
   int (*acquire_dquot)(struct dquot *) ;
   int (*release_dquot)(struct dquot *) ;
   int (*mark_dirty)(struct dquot *) ;
   int (*write_info)(struct super_block *, int ) ;
   qsize_t *(*get_reserved_space)(struct inode *) ;
   int (*get_projid)(struct inode *, kprojid_t *) ;
   int (*get_inode_usage)(struct inode *, qsize_t *) ;
   int (*get_next_id)(struct super_block *, struct kqid *) ;
};
#line 343  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct qc_dqblk {
   int d_fieldmask ;
   u64 d_spc_hardlimit ;
   u64 d_spc_softlimit ;
   u64 d_ino_hardlimit ;
   u64 d_ino_softlimit ;
   u64 d_space ;
   u64 d_ino_count ;
   s64 d_ino_timer ;
   s64 d_spc_timer ;
   int d_ino_warns ;
   int d_spc_warns ;
   u64 d_rt_spc_hardlimit ;
   u64 d_rt_spc_softlimit ;
   u64 d_rt_space ;
   s64 d_rt_spc_timer ;
   int d_rt_spc_warns ;
};
#line 395  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct qc_type_state {
   unsigned int flags ;
   unsigned int spc_timelimit ;
   unsigned int ino_timelimit ;
   unsigned int rt_spc_timelimit ;
   unsigned int spc_warnlimit ;
   unsigned int ino_warnlimit ;
   unsigned int rt_spc_warnlimit ;
   unsigned long long ino ;
   blkcnt_t blocks ;
   blkcnt_t nextents ;
};
#line 409  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct qc_state {
   unsigned int s_incoredqs ;
   struct qc_type_state s_state[3U] ;
};
#line 415  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct qc_info {
   int i_fieldmask ;
   unsigned int i_flags ;
   unsigned int i_spc_timelimit ;
   unsigned int i_ino_timelimit ;
   unsigned int i_rt_spc_timelimit ;
   unsigned int i_spc_warnlimit ;
   unsigned int i_ino_warnlimit ;
   unsigned int i_rt_spc_warnlimit ;
};
#line 428  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct quotactl_ops {
   int (*quota_on)(struct super_block *, int , int , struct path *) ;
   int (*quota_off)(struct super_block *, int ) ;
   int (*quota_enable)(struct super_block *, unsigned int ) ;
   int (*quota_disable)(struct super_block *, unsigned int ) ;
   int (*quota_sync)(struct super_block *, int ) ;
   int (*set_info)(struct super_block *, int , struct qc_info *) ;
   int (*get_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*get_nextdqblk)(struct super_block *, struct kqid *, struct qc_dqblk *) ;
   int (*set_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*get_state)(struct super_block *, struct qc_state *) ;
   int (*rm_xquota)(struct super_block *, unsigned int ) ;
};
#line 443  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct quota_format_type {
   int qf_fmt_id ;
   struct quota_format_ops *qf_ops ;
   struct module *qf_owner ;
   struct quota_format_type *qf_next ;
};
#line 518  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct quota_info {
   unsigned int flags ;
   struct rw_semaphore dqio_sem ;
   struct inode *files[3U] ;
   struct mem_dqinfo info[3U] ;
   struct quota_format_ops *ops[3U] ;
};
#line 538 
enum rw_hint {
    WRITE_LIFE_NOT_SET = 0,
    WRITE_LIFE_NONE = 1,
    WRITE_LIFE_SHORT = 2,
    WRITE_LIFE_MEDIUM = 3,
    WRITE_LIFE_LONG = 4,
    WRITE_LIFE_EXTREME = 5
};
#line 318  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct kiocb {
   struct file *ki_filp ;
   loff_t ki_pos ;
   void (*ki_complete)(struct kiocb *, long , long ) ;
   void *private ;
   int ki_flags ;
   u16 ki_hint ;
   u16 ki_ioprio ;
   unsigned int ki_cookie ;
};
#line 362  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct address_space_operations {
   int (*writepage)(struct page *, struct writeback_control *) ;
   int (*readpage)(struct file *, struct page *) ;
   int (*writepages)(struct address_space *, struct writeback_control *) ;
   int (*set_page_dirty)(struct page *) ;
   int (*readpages)(struct file *, struct address_space *, struct list_head *, unsigned int ) ;
   int (*write_begin)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page **, void **) ;
   int (*write_end)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page *, void *) ;
   sector_t (*bmap)(struct address_space *, sector_t ) ;
   void (*invalidatepage)(struct page *, unsigned int , unsigned int ) ;
   int (*releasepage)(struct page *, gfp_t ) ;
   void (*freepage)(struct page *) ;
   ssize_t (*direct_IO)(struct kiocb *, struct iov_iter *) ;
   int (*migratepage)(struct address_space *, struct page *, struct page *, enum migrate_mode ) ;
   bool (*isolate_page)(struct page *, isolate_mode_t ) ;
   void (*putback_page)(struct page *) ;
   int (*launder_page)(struct page *) ;
   int (*is_partially_uptodate)(struct page *, unsigned long , unsigned long ) ;
   void (*is_dirty_writeback)(struct page *, bool *, bool *) ;
   int (*error_remove_page)(struct address_space *, struct page *) ;
   int (*swap_activate)(struct swap_info_struct *, struct file *, sector_t *) ;
   void (*swap_deactivate)(struct file *) ;
};
#line 445  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct address_space {
   struct inode *host ;
   struct xarray i_pages ;
   gfp_t gfp_mask ;
   atomic_t i_mmap_writable ;
   atomic_t nr_thps ;
   struct rb_root_cached i_mmap ;
   struct rw_semaphore i_mmap_rwsem ;
   unsigned long nrpages ;
   unsigned long nrexceptional ;
   unsigned long writeback_index ;
   struct address_space_operations *a_ops ;
   unsigned long flags ;
   errseq_t wb_err ;
   spinlock_t private_lock ;
   struct list_head private_list ;
   void *private_data ;
} __attribute__((__designated_init__, __aligned__(8)));
#line 473  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct block_device {
   dev_t bd_dev ;
   int bd_openers ;
   struct inode *bd_inode ;
   struct super_block *bd_super ;
   struct mutex bd_mutex ;
   void *bd_claiming ;
   void *bd_holder ;
   int bd_holders ;
   bool bd_write_holder ;
   struct list_head bd_holder_disks ;
   struct block_device *bd_contains ;
   unsigned int bd_block_size ;
   u8 bd_partno ;
   struct hd_struct *bd_part ;
   unsigned int bd_part_count ;
   int bd_invalidated ;
   struct gendisk *bd_disk ;
   struct request_queue *bd_queue ;
   struct backing_dev_info *bd_bdi ;
   struct list_head bd_list ;
   unsigned long bd_private ;
   int bd_fsfreeze_count ;
   struct mutex bd_fsfreeze_mutex ;
} __attribute__((__designated_init__));
#line 587 
struct posix_acl;
#line 614 
struct fsnotify_mark_connector;
#line 628 
struct inode_operations;
#line 628  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
union __anonunion_418 {
   unsigned int i_nlink ;
   unsigned int __i_nlink ;
};
#line 628  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
union __anonunion_419 {
   struct hlist_head i_dentry ;
   struct callback_head i_rcu ;
};
#line 628  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
union __anonunion_420 {
   struct file_operations *i_fop ;
   void (*free_inode)(struct inode *) ;
};
#line 628 
struct file_lock_context;
#line 628  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
union __anonunion_421 {
   struct pipe_inode_info *i_pipe ;
   struct block_device *i_bdev ;
   struct cdev *i_cdev ;
   char *i_link ;
   unsigned int i_dir_seq ;
};
#line 628  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct inode {
   umode_t i_mode ;
   unsigned short i_opflags ;
   kuid_t i_uid ;
   kgid_t i_gid ;
   unsigned int i_flags ;
   struct posix_acl *i_acl ;
   struct posix_acl *i_default_acl ;
   struct inode_operations *i_op ;
   struct super_block *i_sb ;
   struct address_space *i_mapping ;
   void *i_security ;
   unsigned long i_ino ;
   union __anonunion_418 __anonCompField_inode_63 ;
   dev_t i_rdev ;
   loff_t i_size ;
   struct timespec64 i_atime ;
   struct timespec64 i_mtime ;
   struct timespec64 i_ctime ;
   spinlock_t i_lock ;
   unsigned short i_bytes ;
   u8 i_blkbits ;
   u8 i_write_hint ;
   blkcnt_t i_blocks ;
   unsigned long i_state ;
   struct rw_semaphore i_rwsem ;
   unsigned long dirtied_when ;
   unsigned long dirtied_time_when ;
   struct hlist_node i_hash ;
   struct list_head i_io_list ;
   struct bdi_writeback *i_wb ;
   int i_wb_frn_winner ;
   u16 i_wb_frn_avg_time ;
   u16 i_wb_frn_history ;
   struct list_head i_lru ;
   struct list_head i_sb_list ;
   struct list_head i_wb_list ;
   union __anonunion_419 __anonCompField_inode_64 ;
   atomic64_t i_version ;
   atomic_t i_count ;
   atomic_t i_dio_count ;
   atomic_t i_writecount ;
   atomic_t i_readcount ;
   union __anonunion_420 __anonCompField_inode_65 ;
   struct file_lock_context *i_flctx ;
   struct address_space i_data ;
   struct list_head i_devices ;
   union __anonunion_421 __anonCompField_inode_66 ;
   __u32 i_generation ;
   __u32 i_fsnotify_mask ;
   struct fsnotify_mark_connector *i_fsnotify_marks ;
   struct fscrypt_info *i_crypt_info ;
   struct fsverity_info *i_verity_info ;
   void *i_private ;
} __attribute__((__designated_init__));
#line 904  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct fown_struct {
   rwlock_t lock ;
   struct pid *pid ;
   enum pid_type pid_type ;
   kuid_t uid ;
   kuid_t euid ;
   int signum ;
};
#line 915  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct file_ra_state {
   unsigned long start ;
   unsigned int size ;
   unsigned int async_size ;
   unsigned int ra_pages ;
   unsigned int mmap_miss ;
   loff_t prev_pos ;
};
#line 935  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
union __anonunion_f_u_422 {
   struct llist_node fu_llist ;
   struct callback_head fu_rcuhead ;
};
#line 935  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct file {
   union __anonunion_f_u_422 f_u ;
   struct path f_path ;
   struct inode *f_inode ;
   struct file_operations *f_op ;
   spinlock_t f_lock ;
   enum rw_hint f_write_hint ;
   atomic_long_t f_count ;
   unsigned int f_flags ;
   fmode_t f_mode ;
   struct mutex f_pos_lock ;
   loff_t f_pos ;
   struct fown_struct f_owner ;
   struct cred *f_cred ;
   struct file_ra_state f_ra ;
   u64 f_version ;
   void *f_security ;
   void *private_data ;
   struct list_head f_ep_links ;
   struct list_head f_tfile_llink ;
   struct address_space *f_mapping ;
   errseq_t f_wb_err ;
} __attribute__((__designated_init__, __aligned__(4)));
#line 988  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
typedef void *fl_owner_t;
#line 1026 
struct file_lock;
#line 1029  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct file_lock_operations {
   void (*fl_copy_lock)(struct file_lock *, struct file_lock *) ;
   void (*fl_release_private)(struct file_lock *) ;
};
#line 1034  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct lock_manager_operations {
   fl_owner_t (*lm_get_owner)(fl_owner_t ) ;
   void (*lm_put_owner)(fl_owner_t ) ;
   void (*lm_notify)(struct file_lock *) ;
   int (*lm_grant)(struct file_lock *, int ) ;
   bool (*lm_break)(struct file_lock *) ;
   int (*lm_change)(struct file_lock *, int , struct list_head *) ;
   void (*lm_setup)(struct file_lock *, void **) ;
};
#line 1052 
struct net;
#line 1058 
struct nlm_lockowner;
#line 10  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/nfs_fs_i.h"
struct nfs_lock_info {
   u32 state ;
   struct nlm_lockowner *owner ;
   struct list_head list ;
};
#line 15 
struct nfs4_lock_state;
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/nfs_fs_i.h"
struct nfs4_lock_info {
   struct nfs4_lock_state *owner ;
};
#line 1079  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct fasync_struct;
#line 1079  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct __anonstruct_afs_424 {
   struct list_head link ;
   int state ;
   unsigned int debug_id ;
};
#line 1079  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
union __anonunion_fl_u_423 {
   struct nfs_lock_info nfs_fl ;
   struct nfs4_lock_info nfs4_fl ;
   struct __anonstruct_afs_424 afs ;
};
#line 1079  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct file_lock {
   struct file_lock *fl_blocker ;
   struct list_head fl_list ;
   struct hlist_node fl_link ;
   struct list_head fl_blocked_requests ;
   struct list_head fl_blocked_member ;
   fl_owner_t fl_owner ;
   unsigned int fl_flags ;
   unsigned char fl_type ;
   unsigned int fl_pid ;
   int fl_link_cpu ;
   wait_queue_head_t fl_wait ;
   struct file *fl_file ;
   loff_t fl_start ;
   loff_t fl_end ;
   struct fasync_struct *fl_fasync ;
   unsigned long fl_break_time ;
   unsigned long fl_downgrade_time ;
   struct file_lock_operations *fl_ops ;
   struct lock_manager_operations *fl_lmops ;
   union __anonunion_fl_u_423 fl_u ;
} __attribute__((__designated_init__));
#line 1117  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct file_lock_context {
   spinlock_t flc_lock ;
   struct list_head flc_flock ;
   struct list_head flc_posix ;
   struct list_head flc_lease ;
};
#line 1331  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct fasync_struct {
   rwlock_t fa_lock ;
   int magic ;
   int fa_fd ;
   struct fasync_struct *fa_next ;
   struct file *fa_file ;
   struct callback_head fa_rcu ;
};
#line 1418  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct sb_writers {
   int frozen ;
   wait_queue_head_t wait_unfrozen ;
   struct percpu_rw_semaphore rw_sem[3U] ;
};
#line 1424 
struct super_operations;
#line 1424 
struct xattr_handler;
#line 1424 
struct mtd_info;
#line 1424  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct super_block {
   struct list_head s_list ;
   dev_t s_dev ;
   unsigned char s_blocksize_bits ;
   unsigned long s_blocksize ;
   loff_t s_maxbytes ;
   struct file_system_type *s_type ;
   struct super_operations *s_op ;
   struct dquot_operations *dq_op ;
   struct quotactl_ops *s_qcop ;
   struct export_operations *s_export_op ;
   unsigned long s_flags ;
   unsigned long s_iflags ;
   unsigned long s_magic ;
   struct dentry *s_root ;
   struct rw_semaphore s_umount ;
   int s_count ;
   atomic_t s_active ;
   void *s_security ;
   struct xattr_handler **s_xattr ;
   struct fscrypt_operations *s_cop ;
   struct key *s_master_keys ;
   struct fsverity_operations *s_vop ;
   struct hlist_bl_head s_roots ;
   struct list_head s_mounts ;
   struct block_device *s_bdev ;
   struct backing_dev_info *s_bdi ;
   struct mtd_info *s_mtd ;
   struct hlist_node s_instances ;
   unsigned int s_quota_types ;
   struct quota_info s_dquot ;
   struct sb_writers s_writers ;
   void *s_fs_info ;
   u32 s_time_gran ;
   time64_t s_time_min ;
   time64_t s_time_max ;
   __u32 s_fsnotify_mask ;
   struct fsnotify_mark_connector *s_fsnotify_marks ;
   char s_id[32U] ;
   uuid_t s_uuid ;
   unsigned int s_max_links ;
   fmode_t s_mode ;
   struct mutex s_vfs_rename_mutex ;
   char *s_subtype ;
   struct dentry_operations *s_d_op ;
   int cleancache_poolid ;
   struct shrinker s_shrink ;
   atomic_long_t s_remove_count ;
   atomic_long_t s_fsnotify_inode_refs ;
   int s_readonly_remount ;
   struct workqueue_struct *s_dio_done_wq ;
   struct hlist_head s_pins ;
   struct user_namespace *s_user_ns ;
   struct list_lru s_dentry_lru ;
   struct list_lru s_inode_lru ;
   struct callback_head rcu ;
   struct work_struct destroy_work ;
   struct mutex s_sync_lock ;
   int s_stack_depth ;
   spinlock_t s_inode_list_lock ;
   struct list_head s_inodes ;
   spinlock_t s_inode_wblist_lock ;
   struct list_head s_inodes_wb ;
} __attribute__((__designated_init__));
#line 1746  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct fiemap_extent_info {
   unsigned int fi_flags ;
   unsigned int fi_extents_mapped ;
   unsigned int fi_extents_max ;
   struct fiemap_extent *fi_extents_start ;
};
#line 1756 
struct dir_context;
#line 1767  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct dir_context {
   int (*actor)(struct dir_context *, char *, int , loff_t , u64 , unsigned int ) ;
   loff_t pos ;
};
#line 1821  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct file_operations {
   struct module *owner ;
   loff_t (*llseek)(struct file *, loff_t , int ) ;
   ssize_t (*read)(struct file *, char *, size_t , loff_t *) ;
   ssize_t (*write)(struct file *, char *, size_t , loff_t *) ;
   ssize_t (*read_iter)(struct kiocb *, struct iov_iter *) ;
   ssize_t (*write_iter)(struct kiocb *, struct iov_iter *) ;
   int (*iopoll)(struct kiocb *, bool ) ;
   int (*iterate)(struct file *, struct dir_context *) ;
   int (*iterate_shared)(struct file *, struct dir_context *) ;
   __poll_t (*poll)(struct file *, struct poll_table_struct *) ;
   long (*unlocked_ioctl)(struct file *, unsigned int , unsigned long ) ;
   long (*compat_ioctl)(struct file *, unsigned int , unsigned long ) ;
   int (*mmap)(struct file *, struct vm_area_struct *) ;
   unsigned long mmap_supported_flags ;
   int (*open)(struct inode *, struct file *) ;
   int (*flush)(struct file *, fl_owner_t ) ;
   int (*release)(struct inode *, struct file *) ;
   int (*fsync)(struct file *, loff_t , loff_t , int ) ;
   int (*fasync)(int , struct file *, int ) ;
   int (*lock)(struct file *, int , struct file_lock *) ;
   ssize_t (*sendpage)(struct file *, struct page *, int , size_t , loff_t *, int ) ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   int (*check_flags)(int ) ;
   int (*flock)(struct file *, int , struct file_lock *) ;
   ssize_t (*splice_write)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ) ;
   ssize_t (*splice_read)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ) ;
   int (*setlease)(struct file *, long , struct file_lock **, void **) ;
   long (*fallocate)(struct file *, int , loff_t , loff_t ) ;
   void (*show_fdinfo)(struct seq_file *, struct file *) ;
   ssize_t (*copy_file_range)(struct file *, loff_t , struct file *, loff_t , size_t , unsigned int ) ;
   loff_t (*remap_file_range)(struct file *, loff_t , struct file *, loff_t , loff_t , unsigned int ) ;
   int (*fadvise)(struct file *, loff_t , loff_t , int ) ;
} __attribute__((__designated_init__));
#line 1863  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct inode_operations {
   struct dentry *(*lookup)(struct inode *, struct dentry *, unsigned int ) ;
   char *(*get_link)(struct dentry *, struct inode *, struct delayed_call *) ;
   int (*permission)(struct inode *, int ) ;
   struct posix_acl *(*get_acl)(struct inode *, int ) ;
   int (*readlink)(struct dentry *, char *, int ) ;
   int (*create)(struct inode *, struct dentry *, umode_t , bool ) ;
   int (*link)(struct dentry *, struct inode *, struct dentry *) ;
   int (*unlink)(struct inode *, struct dentry *) ;
   int (*symlink)(struct inode *, struct dentry *, char *) ;
   int (*mkdir)(struct inode *, struct dentry *, umode_t ) ;
   int (*rmdir)(struct inode *, struct dentry *) ;
   int (*mknod)(struct inode *, struct dentry *, umode_t , dev_t ) ;
   int (*rename)(struct inode *, struct dentry *, struct inode *, struct dentry *, unsigned int ) ;
   int (*setattr)(struct dentry *, struct iattr *) ;
   int (*getattr)(struct path *, struct kstat *, u32 , unsigned int ) ;
   ssize_t (*listxattr)(struct dentry *, char *, size_t ) ;
   int (*fiemap)(struct inode *, struct fiemap_extent_info *, u64 , u64 ) ;
   int (*update_time)(struct inode *, struct timespec64 *, int ) ;
   int (*atomic_open)(struct inode *, struct dentry *, struct file *, unsigned int , umode_t ) ;
   int (*tmpfile)(struct inode *, struct dentry *, umode_t ) ;
   int (*set_acl)(struct inode *, struct posix_acl *, int ) ;
} __attribute__((__aligned__(64)));
#line 1942  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct super_operations {
   struct inode *(*alloc_inode)(struct super_block *) ;
   void (*destroy_inode)(struct inode *) ;
   void (*free_inode)(struct inode *) ;
   void (*dirty_inode)(struct inode *, int ) ;
   int (*write_inode)(struct inode *, struct writeback_control *) ;
   int (*drop_inode)(struct inode *) ;
   void (*evict_inode)(struct inode *) ;
   void (*put_super)(struct super_block *) ;
   int (*sync_fs)(struct super_block *, int ) ;
   int (*freeze_super)(struct super_block *) ;
   int (*freeze_fs)(struct super_block *) ;
   int (*thaw_super)(struct super_block *) ;
   int (*unfreeze_fs)(struct super_block *) ;
   int (*statfs)(struct dentry *, struct kstatfs *) ;
   int (*remount_fs)(struct super_block *, int *, char *) ;
   void (*umount_begin)(struct super_block *) ;
   int (*show_options)(struct seq_file *, struct dentry *) ;
   int (*show_devname)(struct seq_file *, struct dentry *) ;
   int (*show_path)(struct seq_file *, struct dentry *) ;
   int (*show_stats)(struct seq_file *, struct dentry *) ;
   ssize_t (*quota_read)(struct super_block *, int , char *, size_t , loff_t ) ;
   ssize_t (*quota_write)(struct super_block *, int , char *, size_t , loff_t ) ;
   struct dquot **(*get_dquots)(struct inode *) ;
   int (*bdev_try_to_free_page)(struct super_block *, struct page *, gfp_t ) ;
   long (*nr_cached_objects)(struct super_block *, struct shrink_control *) ;
   long (*free_cached_objects)(struct super_block *, struct shrink_control *) ;
};
#line 2217  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct file_system_type {
   char *name ;
   int fs_flags ;
   int (*init_fs_context)(struct fs_context *) ;
   struct fs_parameter_description *parameters ;
   struct dentry *(*mount)(struct file_system_type *, int , char *, void *) ;
   void (*kill_sb)(struct super_block *) ;
   struct module *owner ;
   struct file_system_type *next ;
   struct hlist_head fs_supers ;
   struct lock_class_key s_lock_key ;
   struct lock_class_key s_umount_key ;
   struct lock_class_key s_vfs_rename_key ;
   struct lock_class_key s_writers_key[3U] ;
   struct lock_class_key i_lock_key ;
   struct lock_class_key i_mutex_key ;
   struct lock_class_key i_mutex_dir_key ;
};
#line 1565  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm.h"
struct kvec;
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bvec.h"
struct bio_vec {
   struct page *bv_page ;
   unsigned int bv_len ;
   unsigned int bv_offset ;
};
#line 686  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/slab.h"
struct scatterlist;
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/uio.h"
struct iovec {
   void *iov_base ;
   __kernel_size_t iov_len ;
};
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uio.h"
struct kvec {
   void *iov_base ;
   size_t iov_len ;
};
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uio.h"
union __anonunion_438 {
   struct iovec *iov ;
   struct kvec *kvec ;
   struct bio_vec *bvec ;
   struct pipe_inode_info *pipe ;
};
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uio.h"
struct __anonstruct_440 {
   unsigned int head ;
   unsigned int start_head ;
};
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uio.h"
union __anonunion_439 {
   unsigned long nr_segs ;
   struct __anonstruct_440 __anonCompField___anonunion_439_68 ;
};
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uio.h"
struct iov_iter {
   unsigned int type ;
   size_t iov_offset ;
   size_t count ;
   union __anonunion_438 __anonCompField_iov_iter_67 ;
   union __anonunion_439 __anonCompField_iov_iter_69 ;
};
#line 285  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uio.h"
typedef unsigned short __kernel_sa_family_t;
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/socket.h"
typedef __kernel_sa_family_t sa_family_t;
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/socket.h"
struct sockaddr {
   sa_family_t sa_family ;
   char sa_data[14U] ;
};
#line 422 
struct ns_common;
#line 125  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/net.h"
struct sk_buff;
#line 162  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/checksum_64.h"
struct in6_addr;
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/idr.h"
struct idr {
   struct xarray idr_rt ;
   unsigned int idr_base ;
   unsigned int idr_next ;
};
#line 323 
struct kernfs_open_node;
#line 324 
struct kernfs_iattrs;
#line 84  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_root;
#line 84  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_elem_dir {
   unsigned long subdirs ;
   struct rb_root children ;
   struct kernfs_root *root ;
};
#line 96 
struct kernfs_node;
#line 96  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_elem_symlink {
   struct kernfs_node *target_kn ;
};
#line 100 
struct kernfs_ops;
#line 100  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_elem_attr {
   struct kernfs_ops *ops ;
   struct kernfs_open_node *open ;
   loff_t size ;
   struct kernfs_node *notify_next ;
};
#line 116  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
union __anonunion_463 {
   struct kernfs_elem_dir dir ;
   struct kernfs_elem_symlink symlink ;
   struct kernfs_elem_attr attr ;
};
#line 116  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_node {
   atomic_t count ;
   atomic_t active ;
   struct lockdep_map dep_map ;
   struct kernfs_node *parent ;
   char *name ;
   struct rb_node rb ;
   void *ns ;
   unsigned int hash ;
   union __anonunion_463 __anonCompField_kernfs_node_72 ;
   void *priv ;
   u64 id ;
   unsigned short flags ;
   umode_t mode ;
   struct kernfs_iattrs *iattr ;
};
#line 161  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_syscall_ops {
   int (*show_options)(struct seq_file *, struct kernfs_root *) ;
   int (*mkdir)(struct kernfs_node *, char *, umode_t ) ;
   int (*rmdir)(struct kernfs_node *) ;
   int (*rename)(struct kernfs_node *, struct kernfs_node *, char *) ;
   int (*show_path)(struct seq_file *, struct kernfs_node *, struct kernfs_root *) ;
};
#line 173  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_root {
   struct kernfs_node *kn ;
   unsigned int flags ;
   struct idr ino_idr ;
   u32 last_id_lowbits ;
   u32 id_highbits ;
   struct kernfs_syscall_ops *syscall_ops ;
   struct list_head supers ;
   wait_queue_head_t deactivate_waitq ;
};
#line 190  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_open_file {
   struct kernfs_node *kn ;
   struct file *file ;
   struct seq_file *seq_file ;
   void *priv ;
   struct mutex mutex ;
   struct mutex prealloc_mutex ;
   int event ;
   struct list_head list ;
   char *prealloc_buf ;
   size_t atomic_write_len ;
   bool mmapped : 1 ;
   bool released : 1 ;
   struct vm_operations_struct *vm_ops ;
};
#line 210  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_ops {
   int (*open)(struct kernfs_open_file *) ;
   void (*release)(struct kernfs_open_file *) ;
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   ssize_t (*read)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   size_t atomic_write_len ;
   bool prealloc ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   __poll_t (*poll)(struct kernfs_open_file *, struct poll_table_struct *) ;
   int (*mmap)(struct kernfs_open_file *, struct vm_area_struct *) ;
   struct lock_class_key lockdep_key ;
};
#line 595 
enum kobj_ns_type {
    KOBJ_NS_TYPE_NONE = 0,
    KOBJ_NS_TYPE_NET = 1,
    KOBJ_NS_TYPES = 2
};
#line 39  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kobject_ns.h"
struct kobj_ns_type_operations {
   enum kobj_ns_type type ;
   bool (*current_may_mount)(void) ;
   void *(*grab_current_ns)(void) ;
   void *(*netlink_ns)(struct sock *) ;
   void *(*initial_ns)(void) ;
   void (*drop_ns)(void *) ;
};
#line 58 
struct bin_attribute;
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysfs.h"
struct attribute {
   char *name ;
   umode_t mode ;
   bool ignore_lockdep : 1 ;
   struct lock_class_key *key ;
   struct lock_class_key skey ;
};
#line 84  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysfs.h"
struct attribute_group {
   char *name ;
   umode_t (*is_visible)(struct kobject *, struct attribute *, int ) ;
   umode_t (*is_bin_visible)(struct kobject *, struct bin_attribute *, int ) ;
   struct attribute **attrs ;
   struct bin_attribute **bin_attrs ;
};
#line 161  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysfs.h"
struct bin_attribute {
   struct attribute attr ;
   size_t size ;
   void *private ;
   ssize_t (*read)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   ssize_t (*write)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   int (*mmap)(struct file *, struct kobject *, struct bin_attribute *, struct vm_area_struct *) ;
};
#line 223  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysfs.h"
struct sysfs_ops {
   ssize_t (*show)(struct kobject *, struct attribute *, char *) ;
   ssize_t (*store)(struct kobject *, struct attribute *, char *, size_t ) ;
};
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kref.h"
struct kref {
   refcount_t refcount ;
};
#line 65  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kobject.h"
struct kset;
#line 65 
struct kobj_type;
#line 65  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kobject.h"
struct kobject {
   char *name ;
   struct list_head entry ;
   struct kobject *parent ;
   struct kset *kset ;
   struct kobj_type *ktype ;
   struct kernfs_node *sd ;
   struct kref kref ;
   struct delayed_work release ;
   unsigned int state_initialized : 1 ;
   unsigned int state_in_sysfs : 1 ;
   unsigned int state_add_uevent_sent : 1 ;
   unsigned int state_remove_uevent_sent : 1 ;
   unsigned int uevent_suppress : 1 ;
};
#line 139  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kobject.h"
struct kobj_type {
   void (*release)(struct kobject *) ;
   struct sysfs_ops *sysfs_ops ;
   struct attribute **default_attrs ;
   struct attribute_group **default_groups ;
   struct kobj_ns_type_operations *(*child_ns_type)(struct kobject *) ;
   void *(*namespace)(struct kobject *) ;
   void (*get_ownership)(struct kobject *, kuid_t *, kgid_t *) ;
};
#line 149  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kobject.h"
struct kobj_uevent_env {
   char *argv[3U] ;
   char *envp[32U] ;
   int envp_idx ;
   char buf[2048U] ;
   int buflen ;
};
#line 157  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kobject.h"
struct kset_uevent_ops {
   int (*filter)(struct kset *, struct kobject *) ;
   char *(*name)(struct kset *, struct kobject *) ;
   int (*uevent)(struct kset *, struct kobject *, struct kobj_uevent_env *) ;
};
#line 193  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kobject.h"
struct kset {
   struct list_head list ;
   spinlock_t list_lock ;
   struct kobject kobj ;
   struct kset_uevent_ops *uevent_ops ;
} __attribute__((__designated_init__));
#line 50  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pm.h"
struct pm_message {
   int event ;
};
#line 53  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pm.h"
typedef struct pm_message pm_message_t;
#line 278  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pm.h"
struct dev_pm_ops {
   int (*prepare)(struct device *) ;
   void (*complete)(struct device *) ;
   int (*suspend)(struct device *) ;
   int (*resume)(struct device *) ;
   int (*freeze)(struct device *) ;
   int (*thaw)(struct device *) ;
   int (*poweroff)(struct device *) ;
   int (*restore)(struct device *) ;
   int (*suspend_late)(struct device *) ;
   int (*resume_early)(struct device *) ;
   int (*freeze_late)(struct device *) ;
   int (*thaw_early)(struct device *) ;
   int (*poweroff_late)(struct device *) ;
   int (*restore_early)(struct device *) ;
   int (*suspend_noirq)(struct device *) ;
   int (*resume_noirq)(struct device *) ;
   int (*freeze_noirq)(struct device *) ;
   int (*thaw_noirq)(struct device *) ;
   int (*poweroff_noirq)(struct device *) ;
   int (*restore_noirq)(struct device *) ;
   int (*runtime_suspend)(struct device *) ;
   int (*runtime_resume)(struct device *) ;
   int (*runtime_idle)(struct device *) ;
};
#line 303 
enum rpm_status {
    RPM_ACTIVE = 0,
    RPM_RESUMING = 1,
    RPM_SUSPENDED = 2,
    RPM_SUSPENDING = 3
};
#line 310 
enum rpm_request {
    RPM_REQ_NONE = 0,
    RPM_REQ_IDLE = 1,
    RPM_REQ_SUSPEND = 2,
    RPM_REQ_AUTOSUSPEND = 3,
    RPM_REQ_RESUME = 4
};
#line 318 
struct wakeup_source;
#line 319 
struct wake_irq;
#line 320 
struct pm_domain_data;
#line 530  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pm.h"
struct pm_subsys_data {
   spinlock_t lock ;
   unsigned int refcount ;
   struct list_head clock_list ;
   struct pm_domain_data *domain_data ;
};
#line 573 
struct dev_pm_qos;
#line 573  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pm.h"
struct dev_pm_info {
   pm_message_t power_state ;
   unsigned int can_wakeup : 1 ;
   unsigned int async_suspend : 1 ;
   bool in_dpm_list : 1 ;
   bool is_prepared : 1 ;
   bool is_suspended : 1 ;
   bool is_noirq_suspended : 1 ;
   bool is_late_suspended : 1 ;
   bool no_pm : 1 ;
   bool early_init : 1 ;
   bool direct_complete : 1 ;
   u32 driver_flags ;
   spinlock_t lock ;
   struct list_head entry ;
   struct completion completion ;
   struct wakeup_source *wakeup ;
   bool wakeup_path : 1 ;
   bool syscore : 1 ;
   bool no_pm_callbacks : 1 ;
   unsigned int must_resume : 1 ;
   unsigned int may_skip_resume : 1 ;
   struct hrtimer suspend_timer ;
   unsigned long timer_expires ;
   struct work_struct work ;
   wait_queue_head_t wait_queue ;
   struct wake_irq *wakeirq ;
   atomic_t usage_count ;
   atomic_t child_count ;
   unsigned int disable_depth : 3 ;
   unsigned int idle_notification : 1 ;
   unsigned int request_pending : 1 ;
   unsigned int deferred_resume : 1 ;
   unsigned int runtime_auto : 1 ;
   bool ignore_children : 1 ;
   unsigned int no_callbacks : 1 ;
   unsigned int irq_safe : 1 ;
   unsigned int use_autosuspend : 1 ;
   unsigned int timer_autosuspends : 1 ;
   unsigned int memalloc_noio : 1 ;
   unsigned int links_count ;
   enum rpm_request request ;
   enum rpm_status runtime_status ;
   int runtime_error ;
   int autosuspend_delay ;
   u64 last_busy ;
   u64 active_time ;
   u64 suspended_time ;
   u64 accounting_timestamp ;
   struct pm_subsys_data *subsys_data ;
   void (*set_latency_tolerance)(struct device *, s32 ) ;
   struct dev_pm_qos *qos ;
};
#line 650  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pm.h"
struct dev_pm_domain {
   struct dev_pm_ops ops ;
   int (*start)(struct device *) ;
   void (*detach)(struct device *, bool ) ;
   int (*activate)(struct device *) ;
   void (*sync)(struct device *) ;
   void (*dismiss)(struct device *) ;
};
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ratelimit.h"
struct ratelimit_state {
   raw_spinlock_t lock ;
   int interval ;
   int burst ;
   int printed ;
   int missed ;
   unsigned long begin ;
   unsigned long flags ;
};
#line 5  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/device.h"
struct dev_archdata {
   void *iommu ;
};
#line 12 
struct dma_map_ops;
#line 23 
struct device_driver;
#line 24 
struct driver_private;
#line 25 
struct class;
#line 26 
struct subsys_private;
#line 27 
struct bus_type;
#line 28 
struct iommu_ops;
#line 29 
struct iommu_group;
#line 30 
struct iommu_fwspec;
#line 31 
struct dev_pin_info;
#line 32 
struct iommu_param;
#line 122  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
struct bus_type {
   char *name ;
   char *dev_name ;
   struct device *dev_root ;
   struct attribute_group **bus_groups ;
   struct attribute_group **dev_groups ;
   struct attribute_group **drv_groups ;
   int (*match)(struct device *, struct device_driver *) ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   int (*probe)(struct device *) ;
   void (*sync_state)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*online)(struct device *) ;
   int (*offline)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   int (*num_vf)(struct device *) ;
   int (*dma_configure)(struct device *) ;
   struct dev_pm_ops *pm ;
   struct iommu_ops *iommu_ops ;
   struct subsys_private *p ;
   struct lock_class_key lock_key ;
   bool need_parent_lock ;
};
#line 164 
struct device_type;
#line 309 
enum probe_type {
    PROBE_DEFAULT_STRATEGY = 0,
    PROBE_PREFER_ASYNCHRONOUS = 1,
    PROBE_FORCE_SYNCHRONOUS = 2
};
#line 383 
struct of_device_id;
#line 383 
struct acpi_device_id;
#line 383  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
struct device_driver {
   char *name ;
   struct bus_type *bus ;
   struct module *owner ;
   char *mod_name ;
   bool suppress_bind_attrs ;
   enum probe_type probe_type ;
   struct of_device_id *of_match_table ;
   struct acpi_device_id *acpi_match_table ;
   int (*probe)(struct device *) ;
   void (*sync_state)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct attribute_group **groups ;
   struct attribute_group **dev_groups ;
   struct dev_pm_ops *pm ;
   void (*coredump)(struct device *) ;
   struct driver_private *p ;
};
#line 589  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
struct class {
   char *name ;
   struct module *owner ;
   struct attribute_group **class_groups ;
   struct attribute_group **dev_groups ;
   struct kobject *dev_kobj ;
   int (*dev_uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *) ;
   void (*class_release)(struct class *) ;
   void (*dev_release)(struct device *) ;
   int (*shutdown_pre)(struct device *) ;
   struct kobj_ns_type_operations *ns_type ;
   void *(*namespace)(struct device *) ;
   void (*get_ownership)(struct device *, kuid_t *, kgid_t *) ;
   struct dev_pm_ops *pm ;
   struct subsys_private *p ;
};
#line 809  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
struct device_type {
   char *name ;
   struct attribute_group **groups ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *, kuid_t *, kgid_t *) ;
   void (*release)(struct device *) ;
   struct dev_pm_ops *pm ;
};
#line 1008  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
struct device_dma_parameters {
   unsigned int max_segment_size ;
   unsigned long segment_boundary_mask ;
};
#line 1139 
enum dl_dev_state {
    DL_DEV_NO_DRIVER = 0,
    DL_DEV_PROBING = 1,
    DL_DEV_DRIVER_BOUND = 2,
    DL_DEV_UNBINDING = 3
};
#line 1164  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
struct dev_links_info {
   struct list_head suppliers ;
   struct list_head consumers ;
   struct list_head needs_suppliers ;
   struct list_head defer_sync ;
   bool need_for_probe ;
   enum dl_dev_state status ;
};
#line 1259 
struct dma_coherent_mem;
#line 1259 
struct cma;
#line 1259  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
struct device {
   struct kobject kobj ;
   struct device *parent ;
   struct device_private *p ;
   char *init_name ;
   struct device_type *type ;
   struct bus_type *bus ;
   struct device_driver *driver ;
   void *platform_data ;
   void *driver_data ;
   struct mutex lockdep_mutex ;
   struct mutex mutex ;
   struct dev_links_info links ;
   struct dev_pm_info power ;
   struct dev_pm_domain *pm_domain ;
   struct irq_domain *msi_domain ;
   struct dev_pin_info *pins ;
   struct list_head msi_list ;
   struct dma_map_ops *dma_ops ;
   u64 *dma_mask ;
   u64 coherent_dma_mask ;
   u64 bus_dma_limit ;
   unsigned long dma_pfn_offset ;
   struct device_dma_parameters *dma_parms ;
   struct list_head dma_pools ;
   struct dma_coherent_mem *dma_mem ;
   struct cma *cma_area ;
   struct dev_archdata archdata ;
   struct device_node *of_node ;
   struct fwnode_handle *fwnode ;
   int numa_node ;
   dev_t devt ;
   u32 id ;
   spinlock_t devres_lock ;
   struct list_head devres_head ;
   struct class *class ;
   struct attribute_group **groups ;
   void (*release)(struct device *) ;
   struct iommu_group *iommu_group ;
   struct iommu_fwspec *iommu_fwspec ;
   struct iommu_param *iommu_param ;
   bool offline_disabled : 1 ;
   bool offline : 1 ;
   bool of_node_reused : 1 ;
   bool state_synced : 1 ;
};
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pm_wakeup.h"
struct wakeup_source {
   char *name ;
   int id ;
   struct list_head entry ;
   spinlock_t lock ;
   struct wake_irq *wakeirq ;
   struct timer_list timer ;
   unsigned long timer_expires ;
   ktime_t total_time ;
   ktime_t max_time ;
   ktime_t last_time ;
   ktime_t start_prevent_time ;
   ktime_t prevent_sleep_time ;
   unsigned long event_count ;
   unsigned long active_count ;
   unsigned long relax_count ;
   unsigned long expire_count ;
   unsigned long wakeup_count ;
   struct device *dev ;
   bool active : 1 ;
   bool autosleep_enabled : 1 ;
};
#line 71  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dma-debug.h"
enum dma_data_direction {
    DMA_BIDIRECTIONAL = 0,
    DMA_TO_DEVICE = 1,
    DMA_FROM_DEVICE = 2,
    DMA_NONE = 3
};
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/scatterlist.h"
struct scatterlist {
   unsigned long page_link ;
   unsigned int offset ;
   unsigned int length ;
   dma_addr_t dma_address ;
   unsigned int dma_length ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/scatterlist.h"
struct sg_table {
   struct scatterlist *sgl ;
   unsigned int nents ;
   unsigned int orig_nents ;
};
#line 76  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dma-mapping.h"
struct dma_map_ops {
   void *(*alloc)(struct device *, size_t , dma_addr_t *, gfp_t , unsigned long ) ;
   void (*free)(struct device *, size_t , void *, dma_addr_t , unsigned long ) ;
   int (*mmap)(struct device *, struct vm_area_struct *, void *, dma_addr_t , size_t , unsigned long ) ;
   int (*get_sgtable)(struct device *, struct sg_table *, void *, dma_addr_t , size_t , unsigned long ) ;
   dma_addr_t (*map_page)(struct device *, struct page *, unsigned long , size_t , enum dma_data_direction , unsigned long ) ;
   void (*unmap_page)(struct device *, dma_addr_t , size_t , enum dma_data_direction , unsigned long ) ;
   int (*map_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , unsigned long ) ;
   void (*unmap_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , unsigned long ) ;
   dma_addr_t (*map_resource)(struct device *, phys_addr_t , size_t , enum dma_data_direction , unsigned long ) ;
   void (*unmap_resource)(struct device *, dma_addr_t , size_t , enum dma_data_direction , unsigned long ) ;
   void (*sync_single_for_cpu)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_single_for_device)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_sg_for_cpu)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   void (*sync_sg_for_device)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   void (*cache_sync)(struct device *, void *, size_t , enum dma_data_direction ) ;
   int (*dma_supported)(struct device *, u64 ) ;
   u64 (*get_required_mask)(struct device *) ;
   size_t (*max_mapping_size)(struct device *) ;
   unsigned long (*get_merge_boundary)(struct device *) ;
};
#line 803  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dma-mapping.h"
typedef u64 netdev_features_t;
#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/in6.h"
union __anonunion_in6_u_466 {
   __u8 u6_addr8[16U] ;
   __be16 u6_addr16[8U] ;
   __be32 u6_addr32[4U] ;
};
#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/in6.h"
struct in6_addr {
   union __anonunion_in6_u_466 in6_u ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/in6.h"
struct __anonstruct_siphash_key_t_467 {
   u64 key[2U] ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/in6.h"
typedef struct __anonstruct_siphash_key_t_467 siphash_key_t;
#line 163  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if_ether.h"
struct ethhdr {
   unsigned char h_dest[6U] ;
   unsigned char h_source[6U] ;
   __be16 h_proto ;
} __attribute__((__packed__));
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pipe_fs_i.h"
struct pipe_buf_operations;
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pipe_fs_i.h"
struct pipe_buffer {
   struct page *page ;
   unsigned int offset ;
   unsigned int len ;
   struct pipe_buf_operations *ops ;
   unsigned int flags ;
   unsigned long private ;
};
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pipe_fs_i.h"
struct pipe_inode_info {
   struct mutex mutex ;
   wait_queue_head_t wait ;
   unsigned int head ;
   unsigned int tail ;
   unsigned int max_usage ;
   unsigned int ring_size ;
   unsigned int readers ;
   unsigned int writers ;
   unsigned int files ;
   unsigned int r_counter ;
   unsigned int w_counter ;
   struct page *tmp_page ;
   struct fasync_struct *fasync_readers ;
   struct fasync_struct *fasync_writers ;
   struct pipe_buffer *bufs ;
   struct user_struct *user ;
};
#line 77  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pipe_fs_i.h"
struct pipe_buf_operations {
   int (*confirm)(struct pipe_inode_info *, struct pipe_buffer *) ;
   void (*release)(struct pipe_inode_info *, struct pipe_buffer *) ;
   int (*steal)(struct pipe_inode_info *, struct pipe_buffer *) ;
   bool (*get)(struct pipe_inode_info *, struct pipe_buffer *) ;
};
#line 8  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netfilter/nf_conntrack_common.h"
struct ip_conntrack_stat {
   unsigned int found ;
   unsigned int invalid ;
   unsigned int ignore ;
   unsigned int insert ;
   unsigned int insert_failed ;
   unsigned int drop ;
   unsigned int early_drop ;
   unsigned int error ;
   unsigned int expect_new ;
   unsigned int expect_create ;
   unsigned int expect_delete ;
   unsigned int search_restart ;
};
#line 43 
union bpf_attr;
#line 44 
struct skb_ext;
#line 289  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
struct sk_buff_head {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   __u32 qlen ;
   spinlock_t lock ;
};
#line 562  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
typedef unsigned int sk_buff_data_t;
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_489 {
   struct net_device *dev ;
   unsigned long dev_scratch ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
struct __anonstruct_488 {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   union __anonunion_489 __anonCompField___anonstruct_488_85 ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_487 {
   struct __anonstruct_488 __anonCompField___anonunion_487_86 ;
   struct rb_node rbnode ;
   struct list_head list ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_490 {
   struct sock *sk ;
   int ip_defrag_offset ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_491 {
   ktime_t tstamp ;
   u64 skb_mstamp_ns ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
struct __anonstruct_493 {
   unsigned long _skb_refdst ;
   void (*destructor)(struct sk_buff *) ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_492 {
   struct __anonstruct_493 __anonCompField___anonunion_492_90 ;
   struct list_head tcp_tsorted_anchor ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
struct __anonstruct_495 {
   __u16 csum_start ;
   __u16 csum_offset ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_494 {
   __wsum csum ;
   struct __anonstruct_495 __anonCompField___anonunion_494_92 ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_496 {
   unsigned int napi_id ;
   unsigned int sender_cpu ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_497 {
   __u32 mark ;
   __u32 reserved_tailroom ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_498 {
   __be16 inner_protocol ;
   __u8 inner_ipproto ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
struct sk_buff {
   union __anonunion_487 __anonCompField_sk_buff_87 ;
   union __anonunion_490 __anonCompField_sk_buff_88 ;
   union __anonunion_491 __anonCompField_sk_buff_89 ;
   char cb[48U] ;
   union __anonunion_492 __anonCompField_sk_buff_91 ;
   unsigned long _nfct ;
   unsigned int len ;
   unsigned int data_len ;
   __u16 mac_len ;
   __u16 hdr_len ;
   __u16 queue_mapping ;
   __u8 __cloned_offset[0U] ;
   __u8 cloned : 1 ;
   __u8 nohdr : 1 ;
   __u8 fclone : 2 ;
   __u8 peeked : 1 ;
   __u8 head_frag : 1 ;
   __u8 pfmemalloc : 1 ;
   __u8 active_extensions ;
   __u32 headers_start[0U] ;
   __u8 __pkt_type_offset[0U] ;
   __u8 pkt_type : 3 ;
   __u8 ignore_df : 1 ;
   __u8 nf_trace : 1 ;
   __u8 ip_summed : 2 ;
   __u8 ooo_okay : 1 ;
   __u8 l4_hash : 1 ;
   __u8 sw_hash : 1 ;
   __u8 wifi_acked_valid : 1 ;
   __u8 wifi_acked : 1 ;
   __u8 no_fcs : 1 ;
   __u8 encapsulation : 1 ;
   __u8 encap_hdr_csum : 1 ;
   __u8 csum_valid : 1 ;
   __u8 __pkt_vlan_present_offset[0U] ;
   __u8 vlan_present : 1 ;
   __u8 csum_complete_sw : 1 ;
   __u8 csum_level : 2 ;
   __u8 csum_not_inet : 1 ;
   __u8 dst_pending_confirm : 1 ;
   __u8 ndisc_nodetype : 2 ;
   __u8 ipvs_property : 1 ;
   __u8 inner_protocol_type : 1 ;
   __u8 remcsum_offload : 1 ;
   __u8 offload_fwd_mark : 1 ;
   __u8 offload_l3_fwd_mark : 1 ;
   __u8 tc_skip_classify : 1 ;
   __u8 tc_at_ingress : 1 ;
   __u8 tc_redirected : 1 ;
   __u8 tc_from_ingress : 1 ;
   __u8 decrypted : 1 ;
   __u16 tc_index ;
   union __anonunion_494 __anonCompField_sk_buff_93 ;
   __u32 priority ;
   int skb_iif ;
   __u32 hash ;
   __be16 vlan_proto ;
   __u16 vlan_tci ;
   union __anonunion_496 __anonCompField_sk_buff_94 ;
   __u32 secmark ;
   union __anonunion_497 __anonCompField_sk_buff_95 ;
   union __anonunion_498 __anonCompField_sk_buff_96 ;
   __u16 inner_transport_header ;
   __u16 inner_network_header ;
   __u16 inner_mac_header ;
   __be16 protocol ;
   __u16 transport_header ;
   __u16 network_header ;
   __u16 mac_header ;
   __u32 headers_end[0U] ;
   sk_buff_data_t tail ;
   sk_buff_data_t end ;
   unsigned char *head ;
   unsigned char *data ;
   unsigned int truesize ;
   refcount_t users ;
   struct skb_ext *extensions ;
};
#line 4108  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
struct skb_ext {
   refcount_t refcnt ;
   u8 offset[3U] ;
   u8 chunks ;
   char data[0U] ;
};
#line 41  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dynamic_queue_limits.h"
struct dql {
   unsigned int num_queued ;
   unsigned int adj_limit ;
   unsigned int last_obj_cnt ;
   unsigned int limit ;
   unsigned int num_completed ;
   unsigned int prev_ovlimit ;
   unsigned int prev_num_queued ;
   unsigned int prev_last_obj_cnt ;
   unsigned int lowest_slack ;
   unsigned long slack_start_time ;
   unsigned int max_limit ;
   unsigned int min_limit ;
   unsigned int slack_hold_time ;
};
#line 103  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dynamic_queue_limits.h"
struct __anonstruct_sync_serial_settings_528 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
};
#line 103  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dynamic_queue_limits.h"
typedef struct __anonstruct_sync_serial_settings_528 sync_serial_settings;
#line 45  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_te1_settings_529 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
   unsigned int slot_map ;
};
#line 45  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_te1_settings_529 te1_settings;
#line 52  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_raw_hdlc_proto_530 {
   unsigned short encoding ;
   unsigned short parity ;
};
#line 52  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_raw_hdlc_proto_530 raw_hdlc_proto;
#line 57  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_531 {
   unsigned int t391 ;
   unsigned int t392 ;
   unsigned int n391 ;
   unsigned int n392 ;
   unsigned int n393 ;
   unsigned short lmi ;
   unsigned short dce ;
};
#line 57  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_531 fr_proto;
#line 67  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_532 {
   unsigned int dlci ;
};
#line 67  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_532 fr_proto_pvc;
#line 71  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_info_533 {
   unsigned int dlci ;
   char master[16U] ;
};
#line 71  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_info_533 fr_proto_pvc_info;
#line 76  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_cisco_proto_534 {
   unsigned int interval ;
   unsigned int timeout ;
};
#line 76  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_cisco_proto_534 cisco_proto;
#line 195  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if.h"
struct ifmap {
   unsigned long mem_start ;
   unsigned long mem_end ;
   unsigned short base_addr ;
   unsigned char irq ;
   unsigned char dma ;
   unsigned char port ;
};
#line 206  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if.h"
union __anonunion_ifs_ifsu_535 {
   raw_hdlc_proto *raw_hdlc ;
   cisco_proto *cisco ;
   fr_proto *fr ;
   fr_proto_pvc *fr_pvc ;
   fr_proto_pvc_info *fr_pvc_info ;
   sync_serial_settings *sync ;
   te1_settings *te1 ;
};
#line 206  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if.h"
struct if_settings {
   unsigned int type ;
   unsigned int size ;
   union __anonunion_ifs_ifsu_535 ifs_ifsu ;
};
#line 232  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if.h"
union __anonunion_ifr_ifrn_536 {
   char ifrn_name[16U] ;
};
#line 232  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if.h"
union __anonunion_ifr_ifru_537 {
   struct sockaddr ifru_addr ;
   struct sockaddr ifru_dstaddr ;
   struct sockaddr ifru_broadaddr ;
   struct sockaddr ifru_netmask ;
   struct sockaddr ifru_hwaddr ;
   short ifru_flags ;
   int ifru_ivalue ;
   int ifru_mtu ;
   struct ifmap ifru_map ;
   char ifru_slave[16U] ;
   char ifru_newname[16U] ;
   void *ifru_data ;
   struct if_settings ifru_settings ;
};
#line 232  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if.h"
struct ifreq {
   union __anonunion_ifr_ifrn_536 ifr_ifrn ;
   union __anonunion_ifr_ifru_537 ifr_ifru ;
};
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/compat.h"
typedef s32 compat_long_t;
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/compat.h"
typedef u32 compat_uptr_t;
#line 367  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/compat.h"
struct compat_robust_list {
   compat_uptr_t next ;
};
#line 371  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/compat.h"
struct compat_robust_list_head {
   struct compat_robust_list list ;
   compat_long_t futex_offset ;
   compat_uptr_t list_op_pending ;
};
#line 177  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_drvinfo {
   __u32 cmd ;
   char driver[32U] ;
   char version[32U] ;
   char fw_version[32U] ;
   char bus_info[32U] ;
   char erom_version[32U] ;
   char reserved2[12U] ;
   __u32 n_priv_flags ;
   __u32 n_stats ;
   __u32 testinfo_len ;
   __u32 eedump_len ;
   __u32 regdump_len ;
};
#line 203  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_wolinfo {
   __u32 cmd ;
   __u32 supported ;
   __u32 wolopts ;
   __u8 sopass[6U] ;
};
#line 244  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_tunable {
   __u32 cmd ;
   __u32 id ;
   __u32 type_id ;
   __u32 len ;
   void *data[0U] ;
};
#line 310  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_regs {
   __u32 cmd ;
   __u32 version ;
   __u32 len ;
   __u8 data[0U] ;
};
#line 335  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_eeprom {
   __u32 cmd ;
   __u32 magic ;
   __u32 offset ;
   __u32 len ;
   __u8 data[0U] ;
};
#line 360  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_eee {
   __u32 cmd ;
   __u32 supported ;
   __u32 advertised ;
   __u32 lp_advertised ;
   __u32 eee_active ;
   __u32 eee_enabled ;
   __u32 tx_lpi_enabled ;
   __u32 tx_lpi_timer ;
   __u32 reserved[2U] ;
};
#line 382  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_modinfo {
   __u32 cmd ;
   __u32 type ;
   __u32 eeprom_len ;
   __u32 reserved[8U] ;
};
#line 462  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_coalesce {
   __u32 cmd ;
   __u32 rx_coalesce_usecs ;
   __u32 rx_max_coalesced_frames ;
   __u32 rx_coalesce_usecs_irq ;
   __u32 rx_max_coalesced_frames_irq ;
   __u32 tx_coalesce_usecs ;
   __u32 tx_max_coalesced_frames ;
   __u32 tx_coalesce_usecs_irq ;
   __u32 tx_max_coalesced_frames_irq ;
   __u32 stats_block_coalesce_usecs ;
   __u32 use_adaptive_rx_coalesce ;
   __u32 use_adaptive_tx_coalesce ;
   __u32 pkt_rate_low ;
   __u32 rx_coalesce_usecs_low ;
   __u32 rx_max_coalesced_frames_low ;
   __u32 tx_coalesce_usecs_low ;
   __u32 tx_max_coalesced_frames_low ;
   __u32 pkt_rate_high ;
   __u32 rx_coalesce_usecs_high ;
   __u32 rx_max_coalesced_frames_high ;
   __u32 tx_coalesce_usecs_high ;
   __u32 tx_max_coalesced_frames_high ;
   __u32 rate_sample_interval ;
};
#line 513  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_ringparam {
   __u32 cmd ;
   __u32 rx_max_pending ;
   __u32 rx_mini_max_pending ;
   __u32 rx_jumbo_max_pending ;
   __u32 tx_max_pending ;
   __u32 rx_pending ;
   __u32 rx_mini_pending ;
   __u32 rx_jumbo_pending ;
   __u32 tx_pending ;
};
#line 541  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_channels {
   __u32 cmd ;
   __u32 max_rx ;
   __u32 max_tx ;
   __u32 max_other ;
   __u32 max_combined ;
   __u32 rx_count ;
   __u32 tx_count ;
   __u32 other_count ;
   __u32 combined_count ;
};
#line 575  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_pauseparam {
   __u32 cmd ;
   __u32 autoneg ;
   __u32 rx_pause ;
   __u32 tx_pause ;
};
#line 683  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_test {
   __u32 cmd ;
   __u32 flags ;
   __u32 reserved ;
   __u32 len ;
   __u64 data[0U] ;
};
#line 702  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_stats {
   __u32 cmd ;
   __u32 n_stats ;
   __u64 data[0U] ;
};
#line 758  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_tcpip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be16 psrc ;
   __be16 pdst ;
   __u8 tos ;
};
#line 775  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_ah_espip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 spi ;
   __u8 tos ;
};
#line 793  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_usrip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 l4_4_bytes ;
   __u8 tos ;
   __u8 ip_ver ;
   __u8 proto ;
};
#line 812  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_tcpip6_spec {
   __be32 ip6src[4U] ;
   __be32 ip6dst[4U] ;
   __be16 psrc ;
   __be16 pdst ;
   __u8 tclass ;
};
#line 829  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_ah_espip6_spec {
   __be32 ip6src[4U] ;
   __be32 ip6dst[4U] ;
   __be32 spi ;
   __u8 tclass ;
};
#line 844  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_usrip6_spec {
   __be32 ip6src[4U] ;
   __be32 ip6dst[4U] ;
   __be32 l4_4_bytes ;
   __u8 tclass ;
   __u8 l4_proto ;
};
#line 852  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
union ethtool_flow_union {
   struct ethtool_tcpip4_spec tcp_ip4_spec ;
   struct ethtool_tcpip4_spec udp_ip4_spec ;
   struct ethtool_tcpip4_spec sctp_ip4_spec ;
   struct ethtool_ah_espip4_spec ah_ip4_spec ;
   struct ethtool_ah_espip4_spec esp_ip4_spec ;
   struct ethtool_usrip4_spec usr_ip4_spec ;
   struct ethtool_tcpip6_spec tcp_ip6_spec ;
   struct ethtool_tcpip6_spec udp_ip6_spec ;
   struct ethtool_tcpip6_spec sctp_ip6_spec ;
   struct ethtool_ah_espip6_spec ah_ip6_spec ;
   struct ethtool_ah_espip6_spec esp_ip6_spec ;
   struct ethtool_usrip6_spec usr_ip6_spec ;
   struct ethhdr ether_spec ;
   __u8 hdata[52U] ;
};
#line 880  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_flow_ext {
   __u8 padding[2U] ;
   unsigned char h_dest[6U] ;
   __be16 vlan_etype ;
   __be16 vlan_tci ;
   __be32 data[2U] ;
};
#line 905  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_rx_flow_spec {
   __u32 flow_type ;
   union ethtool_flow_union h_u ;
   struct ethtool_flow_ext h_ext ;
   union ethtool_flow_union m_u ;
   struct ethtool_flow_ext m_ext ;
   __u64 ring_cookie ;
   __u32 location ;
};
#line 1001  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
union __anonunion_556 {
   __u32 rule_cnt ;
   __u32 rss_context ;
};
#line 1001  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_rxnfc {
   __u32 cmd ;
   __u32 flow_type ;
   __u64 data ;
   struct ethtool_rx_flow_spec fs ;
   union __anonunion_556 __anonCompField_ethtool_rxnfc_99 ;
   __u32 rule_locs[0U] ;
};
#line 1130  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_flash {
   __u32 cmd ;
   __u32 region ;
   char data[128U] ;
};
#line 1150  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_dump {
   __u32 cmd ;
   __u32 version ;
   __u32 flag ;
   __u32 len ;
   __u8 data[0U] ;
};
#line 1230  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_ts_info {
   __u32 cmd ;
   __u32 so_timestamping ;
   __s32 phc_index ;
   __u32 tx_types ;
   __u32 tx_reserved[3U] ;
   __u32 rx_filters ;
   __u32 rx_reserved[3U] ;
};
#line 1302  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_fecparam {
   __u32 cmd ;
   __u32 active_fec ;
   __u32 fec ;
   __u32 reserved ;
};
#line 1876  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_link_settings {
   __u32 cmd ;
   __u32 speed ;
   __u8 duplex ;
   __u8 port ;
   __u8 phy_address ;
   __u8 autoneg ;
   __u8 mdio_support ;
   __u8 eth_tp_mdix ;
   __u8 eth_tp_mdix_ctrl ;
   __s8 link_mode_masks_nwords ;
   __u8 transceiver ;
   __u8 reserved1[3U] ;
   __u32 reserved[7U] ;
   __u32 link_mode_masks[0U] ;
};
#line 40  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ethtool.h"
enum ethtool_phys_id_state {
    ETHTOOL_ID_INACTIVE = 0,
    ETHTOOL_ID_ACTIVE = 1,
    ETHTOOL_ID_ON = 2,
    ETHTOOL_ID_OFF = 3
};
#line 108  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ethtool.h"
struct __anonstruct_link_modes_559 {
   unsigned long supported[2U] ;
   unsigned long advertising[2U] ;
   unsigned long lp_advertising[2U] ;
};
#line 108  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ethtool.h"
struct ethtool_link_ksettings {
   struct ethtool_link_settings base ;
   struct __anonstruct_link_modes_559 link_modes ;
};
#line 325  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ethtool.h"
struct ethtool_ops {
   void (*get_drvinfo)(struct net_device *, struct ethtool_drvinfo *) ;
   int (*get_regs_len)(struct net_device *) ;
   void (*get_regs)(struct net_device *, struct ethtool_regs *, void *) ;
   void (*get_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   int (*set_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   u32 (*get_msglevel)(struct net_device *) ;
   void (*set_msglevel)(struct net_device *, u32 ) ;
   int (*nway_reset)(struct net_device *) ;
   u32 (*get_link)(struct net_device *) ;
   int (*get_eeprom_len)(struct net_device *) ;
   int (*get_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*set_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   int (*set_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   void (*get_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   int (*set_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   void (*get_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   int (*set_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   void (*self_test)(struct net_device *, struct ethtool_test *, u64 *) ;
   void (*get_strings)(struct net_device *, u32 , u8 *) ;
   int (*set_phys_id)(struct net_device *, enum ethtool_phys_id_state ) ;
   void (*get_ethtool_stats)(struct net_device *, struct ethtool_stats *, u64 *) ;
   int (*begin)(struct net_device *) ;
   void (*complete)(struct net_device *) ;
   u32 (*get_priv_flags)(struct net_device *) ;
   int (*set_priv_flags)(struct net_device *, u32 ) ;
   int (*get_sset_count)(struct net_device *, int ) ;
   int (*get_rxnfc)(struct net_device *, struct ethtool_rxnfc *, u32 *) ;
   int (*set_rxnfc)(struct net_device *, struct ethtool_rxnfc *) ;
   int (*flash_device)(struct net_device *, struct ethtool_flash *) ;
   int (*reset)(struct net_device *, u32 *) ;
   u32 (*get_rxfh_key_size)(struct net_device *) ;
   u32 (*get_rxfh_indir_size)(struct net_device *) ;
   int (*get_rxfh)(struct net_device *, u32 *, u8 *, u8 *) ;
   int (*set_rxfh)(struct net_device *, u32 *, u8 *, u8 ) ;
   int (*get_rxfh_context)(struct net_device *, u32 *, u8 *, u8 *, u32 ) ;
   int (*set_rxfh_context)(struct net_device *, u32 *, u8 *, u8 , u32 *, bool ) ;
   void (*get_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*set_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*get_dump_flag)(struct net_device *, struct ethtool_dump *) ;
   int (*get_dump_data)(struct net_device *, struct ethtool_dump *, void *) ;
   int (*set_dump)(struct net_device *, struct ethtool_dump *) ;
   int (*get_ts_info)(struct net_device *, struct ethtool_ts_info *) ;
   int (*get_module_info)(struct net_device *, struct ethtool_modinfo *) ;
   int (*get_module_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*set_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*get_tunable)(struct net_device *, struct ethtool_tunable *, void *) ;
   int (*set_tunable)(struct net_device *, struct ethtool_tunable *, void *) ;
   int (*get_per_queue_coalesce)(struct net_device *, u32 , struct ethtool_coalesce *) ;
   int (*set_per_queue_coalesce)(struct net_device *, u32 , struct ethtool_coalesce *) ;
   int (*get_link_ksettings)(struct net_device *, struct ethtool_link_ksettings *) ;
   int (*set_link_ksettings)(struct net_device *, struct ethtool_link_ksettings *) ;
   int (*get_fecparam)(struct net_device *, struct ethtool_fecparam *) ;
   int (*set_fecparam)(struct net_device *, struct ethtool_fecparam *) ;
   void (*get_ethtool_phy_stats)(struct net_device *, struct ethtool_stats *, u64 *) ;
};
#line 822  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/sysctl.h"
struct ctl_table_root;
#line 823 
struct ctl_table_header;
#line 824 
struct ctl_dir;
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
typedef int proc_handler(struct ctl_table *, int , void *, size_t *, loff_t *);
#line 105  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
struct ctl_table_poll {
   atomic_t event ;
   wait_queue_head_t wait ;
};
#line 123  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
struct ctl_table {
   char *procname ;
   void *data ;
   int maxlen ;
   umode_t mode ;
   struct ctl_table *child ;
   proc_handler *proc_handler ;
   struct ctl_table_poll *poll ;
   void *extra1 ;
   void *extra2 ;
} __attribute__((__designated_init__));
#line 135  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
struct ctl_node {
   struct rb_node node ;
   struct ctl_table_header *header ;
};
#line 142  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
struct __anonstruct_561 {
   struct ctl_table *ctl_table ;
   int used ;
   int count ;
   int nreg ;
};
#line 142  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
union __anonunion_560 {
   struct __anonstruct_561 __anonCompField___anonunion_560_100 ;
   struct callback_head rcu ;
};
#line 142 
struct ctl_table_set;
#line 142  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
struct ctl_table_header {
   union __anonunion_560 __anonCompField_ctl_table_header_101 ;
   struct completion *unregistering ;
   struct ctl_table *ctl_table_arg ;
   struct ctl_table_root *root ;
   struct ctl_table_set *set ;
   struct ctl_dir *parent ;
   struct ctl_node *node ;
   struct hlist_head inodes ;
};
#line 161  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
struct ctl_dir {
   struct ctl_table_header header ;
   struct rb_root root ;
};
#line 167  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
struct ctl_table_set {
   int (*is_seen)(struct ctl_table_set *) ;
   struct ctl_dir dir ;
};
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
struct ctl_table_root {
   struct ctl_table_set default_set ;
   struct ctl_table_set *(*lookup)(struct ctl_table_root *) ;
   void (*set_ownership)(struct ctl_table_header *, struct ctl_table *, kuid_t *, kgid_t *) ;
   int (*permissions)(struct ctl_table_header *, struct ctl_table *) ;
};
#line 242 
struct prot_inuse;
#line 8  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/core.h"
struct netns_core {
   struct ctl_table_header *sysctl_hdr ;
   int sysctl_somaxconn ;
   int *sock_inuse ;
   struct prot_inuse *prot_inuse ;
};
#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct u64_stats_sync {
   };
#line 36  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct __anonstruct_local_t_562 {
   atomic_long_t a ;
};
#line 36  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
typedef struct __anonstruct_local_t_562 local_t;
#line 119  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/local.h"
struct __anonstruct_local64_t_563 {
   local_t a ;
};
#line 119  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/local.h"
typedef struct __anonstruct_local64_t_563 local64_t;
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/local64.h"
struct __anonstruct_u64_stats_t_564 {
   local64_t v ;
};
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/local64.h"
typedef struct __anonstruct_u64_stats_t_564 u64_stats_t;
#line 51  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct ipstats_mib {
   u64 mibs[37U] ;
   struct u64_stats_sync syncp ;
};
#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct icmp_mib {
   unsigned long mibs[28U] ;
};
#line 64  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct icmpmsg_mib {
   atomic_long_t mibs[512U] ;
};
#line 71  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct icmpv6_mib {
   unsigned long mibs[6U] ;
};
#line 81  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct icmpv6msg_mib {
   atomic_long_t mibs[512U] ;
};
#line 92  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct tcp_mib {
   unsigned long mibs[16U] ;
};
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct udp_mib {
   unsigned long mibs[9U] ;
};
#line 104  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct linux_mib {
   unsigned long mibs[120U] ;
};
#line 110  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct linux_xfrm_mib {
   unsigned long mibs[29U] ;
};
#line 116  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct linux_tls_mib {
   unsigned long mibs[11U] ;
};
#line 7  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/mib.h"
struct proc_dir_entry;
#line 7  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/mib.h"
struct netns_mib {
   struct tcp_mib *tcp_statistics ;
   struct ipstats_mib *ip_statistics ;
   struct linux_mib *net_statistics ;
   struct udp_mib *udp_statistics ;
   struct udp_mib *udplite_statistics ;
   struct icmp_mib *icmp_statistics ;
   struct icmpmsg_mib *icmpmsg_statistics ;
   struct proc_dir_entry *proc_net_devsnmp6 ;
   struct udp_mib *udp_stats_in6 ;
   struct udp_mib *udplite_stats_in6 ;
   struct ipstats_mib *ipv6_statistics ;
   struct icmpv6_mib *icmpv6_statistics ;
   struct icmpv6msg_mib *icmpv6msg_statistics ;
   struct linux_xfrm_mib *xfrm_statistics ;
   struct linux_tls_mib *tls_statistics ;
};
#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/unix.h"
struct netns_unix {
   int sysctl_max_dgram_qlen ;
   struct ctl_table_header *ctl ;
};
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/packet.h"
struct netns_packet {
   struct mutex sklist_lock ;
   struct hlist_head sklist ;
};
#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/inet_frag.h"
struct inet_frags;
#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/inet_frag.h"
struct fqdir {
   long high_thresh ;
   long low_thresh ;
   int timeout ;
   int max_dist ;
   struct inet_frags *f ;
   struct net *net ;
   bool dead ;
   struct rhashtable rhashtable ;
   atomic_long_t mem ;
   struct work_struct destroy_work ;
};
#line 41  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/inet_frag.h"
struct frag_v4_compare_key {
   __be32 saddr ;
   __be32 daddr ;
   u32 user ;
   u32 vif ;
   __be16 id ;
   u16 protocol ;
};
#line 50  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/inet_frag.h"
struct frag_v6_compare_key {
   struct in6_addr saddr ;
   struct in6_addr daddr ;
   u32 user ;
   __be32 id ;
   u32 iif ;
};
#line 77  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/inet_frag.h"
union __anonunion_key_565 {
   struct frag_v4_compare_key v4 ;
   struct frag_v6_compare_key v6 ;
};
#line 77  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/inet_frag.h"
struct inet_frag_queue {
   struct rhash_head node ;
   union __anonunion_key_565 key ;
   struct timer_list timer ;
   spinlock_t lock ;
   refcount_t refcnt ;
   struct rb_root rb_fragments ;
   struct sk_buff *fragments_tail ;
   struct sk_buff *last_run_head ;
   ktime_t stamp ;
   int len ;
   int meat ;
   __u8 flags ;
   u16 max_size ;
   struct fqdir *fqdir ;
   struct callback_head rcu ;
};
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/inet_frag.h"
struct inet_frags {
   unsigned int qsize ;
   void (*constructor)(struct inet_frag_queue *, void *) ;
   void (*destructor)(struct inet_frag_queue *) ;
   void (*frag_expire)(struct timer_list *) ;
   struct kmem_cache *frags_cachep ;
   char *frags_cache_name ;
   struct rhashtable_params rhash_params ;
   refcount_t refcnt ;
   struct completion completion ;
};
#line 177 
struct ipv4_devconf;
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ipv4.h"
struct local_ports {
   seqlock_t lock ;
   int range[2U] ;
   bool warned ;
};
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ipv4.h"
struct ping_group_range {
   seqlock_t lock ;
   kgid_t range[2U] ;
};
#line 31 
struct inet_hashinfo;
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ipv4.h"
struct inet_timewait_death_row {
   atomic_t tw_count ;
   struct inet_hashinfo *hashinfo ;
   int sysctl_max_tw_buckets ;
};
#line 40 
struct tcp_fastopen_context;
#line 43 
struct xt_table;
#line 43 
struct tcp_congestion_ops;
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ipv4.h"
struct netns_ipv4 {
   struct ctl_table_header *forw_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *ipv4_hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *xfrm4_hdr ;
   struct ipv4_devconf *devconf_all ;
   struct ipv4_devconf *devconf_dflt ;
   struct ip_ra_chain *ra_chain ;
   struct mutex ra_mutex ;
   struct fib_rules_ops *rules_ops ;
   bool fib_has_custom_rules ;
   unsigned int fib_rules_require_fldissect ;
   struct fib_table *fib_main ;
   struct fib_table *fib_default ;
   bool fib_has_custom_local_routes ;
   int fib_num_tclassid_users ;
   struct hlist_head *fib_table_hash ;
   bool fib_offload_disabled ;
   struct sock *fibnl ;
   struct sock **icmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct inet_peer_base *peers ;
   struct sock **tcp_sk ;
   struct fqdir *fqdir ;
   struct xt_table *iptable_filter ;
   struct xt_table *iptable_mangle ;
   struct xt_table *iptable_raw ;
   struct xt_table *arptable_filter ;
   struct xt_table *iptable_security ;
   struct xt_table *nat_table ;
   int sysctl_icmp_echo_ignore_all ;
   int sysctl_icmp_echo_ignore_broadcasts ;
   int sysctl_icmp_ignore_bogus_error_responses ;
   int sysctl_icmp_ratelimit ;
   int sysctl_icmp_ratemask ;
   int sysctl_icmp_errors_use_inbound_ifaddr ;
   struct local_ports ip_local_ports ;
   int sysctl_tcp_ecn ;
   int sysctl_tcp_ecn_fallback ;
   int sysctl_ip_default_ttl ;
   int sysctl_ip_no_pmtu_disc ;
   int sysctl_ip_fwd_use_pmtu ;
   int sysctl_ip_fwd_update_priority ;
   int sysctl_ip_nonlocal_bind ;
   int sysctl_ip_dynaddr ;
   int sysctl_ip_early_demux ;
   int sysctl_raw_l3mdev_accept ;
   int sysctl_tcp_early_demux ;
   int sysctl_udp_early_demux ;
   int sysctl_fwmark_reflect ;
   int sysctl_tcp_fwmark_accept ;
   int sysctl_tcp_l3mdev_accept ;
   int sysctl_tcp_mtu_probing ;
   int sysctl_tcp_mtu_probe_floor ;
   int sysctl_tcp_base_mss ;
   int sysctl_tcp_min_snd_mss ;
   int sysctl_tcp_probe_threshold ;
   u32 sysctl_tcp_probe_interval ;
   int sysctl_tcp_keepalive_time ;
   int sysctl_tcp_keepalive_probes ;
   int sysctl_tcp_keepalive_intvl ;
   int sysctl_tcp_syn_retries ;
   int sysctl_tcp_synack_retries ;
   int sysctl_tcp_syncookies ;
   int sysctl_tcp_reordering ;
   int sysctl_tcp_retries1 ;
   int sysctl_tcp_retries2 ;
   int sysctl_tcp_orphan_retries ;
   int sysctl_tcp_fin_timeout ;
   unsigned int sysctl_tcp_notsent_lowat ;
   int sysctl_tcp_tw_reuse ;
   int sysctl_tcp_sack ;
   int sysctl_tcp_window_scaling ;
   int sysctl_tcp_timestamps ;
   int sysctl_tcp_early_retrans ;
   int sysctl_tcp_recovery ;
   int sysctl_tcp_thin_linear_timeouts ;
   int sysctl_tcp_slow_start_after_idle ;
   int sysctl_tcp_retrans_collapse ;
   int sysctl_tcp_stdurg ;
   int sysctl_tcp_rfc1337 ;
   int sysctl_tcp_abort_on_overflow ;
   int sysctl_tcp_fack ;
   int sysctl_tcp_max_reordering ;
   int sysctl_tcp_dsack ;
   int sysctl_tcp_app_win ;
   int sysctl_tcp_adv_win_scale ;
   int sysctl_tcp_frto ;
   int sysctl_tcp_nometrics_save ;
   int sysctl_tcp_moderate_rcvbuf ;
   int sysctl_tcp_tso_win_divisor ;
   int sysctl_tcp_workaround_signed_windows ;
   int sysctl_tcp_limit_output_bytes ;
   int sysctl_tcp_challenge_ack_limit ;
   int sysctl_tcp_min_tso_segs ;
   int sysctl_tcp_min_rtt_wlen ;
   int sysctl_tcp_autocorking ;
   int sysctl_tcp_invalid_ratelimit ;
   int sysctl_tcp_pacing_ss_ratio ;
   int sysctl_tcp_pacing_ca_ratio ;
   int sysctl_tcp_wmem[3U] ;
   int sysctl_tcp_rmem[3U] ;
   int sysctl_tcp_comp_sack_nr ;
   unsigned long sysctl_tcp_comp_sack_delay_ns ;
   struct inet_timewait_death_row tcp_death_row ;
   int sysctl_max_syn_backlog ;
   int sysctl_tcp_fastopen ;
   struct tcp_congestion_ops *tcp_congestion_control ;
   struct tcp_fastopen_context *tcp_fastopen_ctx ;
   spinlock_t tcp_fastopen_ctx_lock ;
   unsigned int sysctl_tcp_fastopen_blackhole_timeout ;
   atomic_t tfo_active_disable_times ;
   unsigned long tfo_active_disable_stamp ;
   int sysctl_udp_wmem_min ;
   int sysctl_udp_rmem_min ;
   int sysctl_udp_l3mdev_accept ;
   int sysctl_igmp_max_memberships ;
   int sysctl_igmp_max_msf ;
   int sysctl_igmp_llm_reports ;
   int sysctl_igmp_qrv ;
   struct ping_group_range ping_group_range ;
   atomic_t dev_addr_genid ;
   unsigned long *sysctl_local_reserved_ports ;
   int sysctl_ip_prot_sock ;
   struct list_head mr_tables ;
   struct fib_rules_ops *mr_rules_ops ;
   int sysctl_fib_multipath_use_neigh ;
   int sysctl_fib_multipath_hash_policy ;
   struct fib_notifier_ops *notifier_ops ;
   unsigned int fib_seq ;
   struct fib_notifier_ops *ipmr_notifier_ops ;
   unsigned int ipmr_seq ;
   atomic_t rt_genid ;
   siphash_key_t ip_id_key ;
};
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/dst_ops.h"
struct dst_ops {
   unsigned short family ;
   unsigned int gc_thresh ;
   int (*gc)(struct dst_ops *) ;
   struct dst_entry *(*check)(struct dst_entry *, __u32 ) ;
   unsigned int (*default_advmss)(struct dst_entry *) ;
   unsigned int (*mtu)(struct dst_entry *) ;
   u32 *(*cow_metrics)(struct dst_entry *, unsigned long ) ;
   void (*destroy)(struct dst_entry *) ;
   void (*ifdown)(struct dst_entry *, struct net_device *, int ) ;
   struct dst_entry *(*negative_advice)(struct dst_entry *) ;
   void (*link_failure)(struct sk_buff *) ;
   void (*update_pmtu)(struct dst_entry *, struct sock *, struct sk_buff *, u32 , bool ) ;
   void (*redirect)(struct dst_entry *, struct sock *, struct sk_buff *) ;
   int (*local_out)(struct net *, struct sock *, struct sk_buff *) ;
   struct neighbour *(*neigh_lookup)(struct dst_entry *, struct sk_buff *, void *) ;
   void (*confirm_neigh)(struct dst_entry *, void *) ;
   struct kmem_cache *kmem_cachep ;
   struct percpu_counter pcpuc_entries ;
};
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ipv6.h"
struct netns_sysctl_ipv6 {
   struct ctl_table_header *hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *icmp_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *xfrm6_hdr ;
   int bindv6only ;
   int flush_delay ;
   int ip6_rt_max_size ;
   int ip6_rt_gc_min_interval ;
   int ip6_rt_gc_timeout ;
   int ip6_rt_gc_interval ;
   int ip6_rt_gc_elasticity ;
   int ip6_rt_mtu_expires ;
   int ip6_rt_min_advmss ;
   int multipath_hash_policy ;
   int flowlabel_consistency ;
   int auto_flowlabels ;
   int icmpv6_time ;
   int icmpv6_echo_ignore_all ;
   int icmpv6_echo_ignore_multicast ;
   int icmpv6_echo_ignore_anycast ;
   unsigned long icmpv6_ratemask[4U] ;
   unsigned long *icmpv6_ratemask_ptr ;
   int anycast_src_echo_reply ;
   int ip_nonlocal_bind ;
   int fwmark_reflect ;
   int idgen_retries ;
   int idgen_delay ;
   int flowlabel_state_ranges ;
   int flowlabel_reflect ;
   int max_dst_opts_cnt ;
   int max_hbh_opts_cnt ;
   int max_dst_opts_len ;
   int max_hbh_opts_len ;
   int seg6_flowlabel ;
   bool skip_notify_on_dev_down ;
};
#line 56 
struct fib6_info;
#line 56 
struct rt6_info;
#line 56 
struct rt6_statistics;
#line 56 
struct fib6_table;
#line 56 
struct seg6_pernet_data;
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ipv6.h"
struct __anonstruct_ip6addrlbl_table_567 {
   struct hlist_head head ;
   spinlock_t lock ;
   u32 seq ;
};
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ipv6.h"
struct netns_ipv6 {
   struct netns_sysctl_ipv6 sysctl ;
   struct ipv6_devconf *devconf_all ;
   struct ipv6_devconf *devconf_dflt ;
   struct inet_peer_base *peers ;
   struct fqdir *fqdir ;
   struct xt_table *ip6table_filter ;
   struct xt_table *ip6table_mangle ;
   struct xt_table *ip6table_raw ;
   struct xt_table *ip6table_security ;
   struct xt_table *ip6table_nat ;
   struct fib6_info *fib6_null_entry ;
   struct rt6_info *ip6_null_entry ;
   struct rt6_statistics *rt6_stats ;
   struct timer_list ip6_fib_timer ;
   struct hlist_head *fib_table_hash ;
   struct fib6_table *fib6_main_tbl ;
   struct list_head fib6_walkers ;
   struct dst_ops ip6_dst_ops ;
   rwlock_t fib6_walker_lock ;
   spinlock_t fib6_gc_lock ;
   unsigned int ip6_rt_gc_expire ;
   unsigned long ip6_rt_last_gc ;
   unsigned int fib6_rules_require_fldissect ;
   bool fib6_has_custom_rules ;
   unsigned int fib6_routes_require_src ;
   struct rt6_info *ip6_prohibit_entry ;
   struct rt6_info *ip6_blk_hole_entry ;
   struct fib6_table *fib6_local_tbl ;
   struct fib_rules_ops *fib6_rules_ops ;
   struct sock **icmp_sk ;
   struct sock *ndisc_sk ;
   struct sock *tcp_sk ;
   struct sock *igmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct list_head mr6_tables ;
   struct fib_rules_ops *mr6_rules_ops ;
   atomic_t dev_addr_genid ;
   atomic_t fib6_sernum ;
   struct seg6_pernet_data *seg6_data ;
   struct fib_notifier_ops *notifier_ops ;
   struct fib_notifier_ops *ip6mr_notifier_ops ;
   unsigned int ipmr_seq ;
   struct __anonstruct_ip6addrlbl_table_567 ip6addrlbl_table ;
};
#line 121  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ipv6.h"
struct netns_nf_frag {
   struct fqdir *fqdir ;
};
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/nexthop.h"
struct netns_nexthop {
   struct rb_root rb_root ;
   struct hlist_head *devhash ;
   unsigned int seq ;
   u32 last_id_allocated ;
};
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ieee802154_6lowpan.h"
struct netns_sysctl_lowpan {
   struct ctl_table_header *frags_hdr ;
};
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ieee802154_6lowpan.h"
struct netns_ieee802154_lowpan {
   struct netns_sysctl_lowpan sysctl ;
   struct fqdir *fqdir ;
};
#line 21 
struct sctp_mib;
#line 10  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/sctp.h"
struct netns_sctp {
   struct sctp_mib *sctp_statistics ;
   struct proc_dir_entry *proc_net_sctp ;
   struct ctl_table_header *sysctl_header ;
   struct sock *ctl_sock ;
   struct list_head local_addr_list ;
   struct list_head addr_waitq ;
   struct timer_list addr_wq_timer ;
   struct list_head auto_asconf_splist ;
   spinlock_t addr_wq_lock ;
   spinlock_t local_addr_lock ;
   unsigned int rto_initial ;
   unsigned int rto_min ;
   unsigned int rto_max ;
   int rto_alpha ;
   int rto_beta ;
   int max_burst ;
   int cookie_preserve_enable ;
   char *sctp_hmac_alg ;
   unsigned int valid_cookie_life ;
   unsigned int sack_timeout ;
   unsigned int hb_interval ;
   int max_retrans_association ;
   int max_retrans_path ;
   int max_retrans_init ;
   int pf_retrans ;
   int ps_retrans ;
   int pf_enable ;
   int pf_expose ;
   int sndbuf_policy ;
   int rcvbuf_policy ;
   int default_auto_asconf ;
   int addip_enable ;
   int addip_noauth ;
   int prsctp_enable ;
   int reconf_enable ;
   int auth_enable ;
   int intl_enable ;
   int ecn_enable ;
   int scope_policy ;
   int rwnd_upd_shift ;
   unsigned long max_autoclose ;
};
#line 7  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/dccp.h"
struct netns_dccp {
   struct sock *v4_ctl_sk ;
   struct sock *v6_ctl_sk ;
};
#line 75  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/netfilter.h"
struct nf_logger;
#line 76 
struct nf_queue_handler;
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/netfilter.h"
struct nf_hook_entries;
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/netfilter.h"
struct netns_nf {
   struct proc_dir_entry *proc_netfilter ;
   struct nf_queue_handler *queue_handler ;
   struct nf_logger *nf_loggers[13U] ;
   struct ctl_table_header *nf_log_dir_header ;
   struct nf_hook_entries *hooks_ipv4[5U] ;
   struct nf_hook_entries *hooks_ipv6[5U] ;
   struct nf_hook_entries *hooks_arp[3U] ;
   struct nf_hook_entries *hooks_bridge[5U] ;
   struct nf_hook_entries *hooks_decnet[7U] ;
   bool defrag_ipv4 ;
   bool defrag_ipv6 ;
};
#line 37 
struct ebt_table;
#line 10  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/x_tables.h"
struct netns_xt {
   struct list_head tables[13U] ;
   bool notrack_deprecated_warning ;
   bool clusterip_deprecated_warning ;
   struct ebt_table *broute_table ;
   struct ebt_table *frame_filter ;
   struct ebt_table *frame_nat ;
};
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_nulls.h"
struct hlist_nulls_node;
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_nulls.h"
struct hlist_nulls_head {
   struct hlist_nulls_node *first ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_nulls.h"
struct hlist_nulls_node {
   struct hlist_nulls_node *next ;
   struct hlist_nulls_node **pprev ;
};
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct nf_generic_net {
   unsigned int timeout ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct nf_tcp_net {
   unsigned int timeouts[14U] ;
   int tcp_loose ;
   int tcp_be_liberal ;
   int tcp_max_retrans ;
};
#line 38  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct nf_udp_net {
   unsigned int timeouts[2U] ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct nf_icmp_net {
   unsigned int timeout ;
};
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct nf_dccp_net {
   int dccp_loose ;
   unsigned int dccp_timeout[10U] ;
};
#line 54  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct nf_sctp_net {
   unsigned int timeouts[10U] ;
};
#line 66  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct nf_gre_net {
   struct list_head keymap_list ;
   unsigned int timeouts[2U] ;
};
#line 72  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct nf_ip_net {
   struct nf_generic_net generic ;
   struct nf_tcp_net tcp ;
   struct nf_udp_net udp ;
   struct nf_icmp_net icmp ;
   struct nf_icmp_net icmpv6 ;
   struct nf_dccp_net dccp ;
   struct nf_sctp_net sctp ;
   struct nf_gre_net gre ;
};
#line 89  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct ct_pcpu {
   spinlock_t lock ;
   struct hlist_nulls_head unconfirmed ;
   struct hlist_nulls_head dying ;
};
#line 95 
struct nf_ct_event_notifier;
#line 95 
struct nf_exp_event_notifier;
#line 95  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct netns_ct {
   atomic_t count ;
   unsigned int expect_count ;
   struct delayed_work ecache_dwork ;
   bool ecache_dwork_pending ;
   bool auto_assign_helper_warned ;
   struct ctl_table_header *sysctl_header ;
   unsigned int sysctl_log_invalid ;
   int sysctl_events ;
   int sysctl_acct ;
   int sysctl_auto_assign_helper ;
   int sysctl_tstamp ;
   int sysctl_checksum ;
   struct ct_pcpu *pcpu_lists ;
   struct ip_conntrack_stat *stat ;
   struct nf_ct_event_notifier *nf_conntrack_event_cb ;
   struct nf_exp_event_notifier *nf_expect_event_cb ;
   struct nf_ip_net nf_ct_proto ;
   unsigned int labels_used ;
};
#line 7  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/nftables.h"
struct netns_nftables {
   struct list_head tables ;
   struct list_head commit_list ;
   struct list_head module_list ;
   struct mutex commit_mutex ;
   unsigned int base_seq ;
   u8 gencursor ;
   u8 validate_state ;
};
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/xfrm.h"
struct xfrm_policy_hash {
   struct hlist_head *table ;
   unsigned int hmask ;
   u8 dbits4 ;
   u8 sbits4 ;
   u8 dbits6 ;
   u8 sbits6 ;
};
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/xfrm.h"
struct xfrm_policy_hthresh {
   struct work_struct work ;
   seqlock_t lock ;
   u8 lbits4 ;
   u8 rbits4 ;
   u8 lbits6 ;
   u8 rbits6 ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/xfrm.h"
struct netns_xfrm {
   struct list_head state_all ;
   struct hlist_head *state_bydst ;
   struct hlist_head *state_bysrc ;
   struct hlist_head *state_byspi ;
   unsigned int state_hmask ;
   unsigned int state_num ;
   struct work_struct state_hash_work ;
   struct list_head policy_all ;
   struct hlist_head *policy_byidx ;
   unsigned int policy_idx_hmask ;
   struct hlist_head policy_inexact[3U] ;
   struct xfrm_policy_hash policy_bydst[3U] ;
   unsigned int policy_count[6U] ;
   struct work_struct policy_hash_work ;
   struct xfrm_policy_hthresh policy_hthresh ;
   struct list_head inexact_bins ;
   struct sock *nlsk ;
   struct sock *nlsk_stash ;
   u32 sysctl_aevent_etime ;
   u32 sysctl_aevent_rseqth ;
   int sysctl_larval_drop ;
   u32 sysctl_acq_expires ;
   struct ctl_table_header *sysctl_hdr ;
   struct dst_ops xfrm4_dst_ops ;
   struct dst_ops xfrm6_dst_ops ;
   spinlock_t xfrm_state_lock ;
   spinlock_t xfrm_policy_lock ;
   struct mutex xfrm_cfg_mutex ;
};
#line 79 
struct mpls_route;
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/mpls.h"
struct netns_mpls {
   int ip_ttl_propagate ;
   int default_ttl ;
   size_t platform_labels ;
   struct mpls_route **platform_label ;
   struct ctl_table_header *ctl ;
};
#line 20 
struct can_dev_rcv_lists;
#line 21 
struct can_pkg_stats;
#line 22 
struct can_rcv_lists_stats;
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/can.h"
struct netns_can {
   struct proc_dir_entry *proc_dir ;
   struct proc_dir_entry *pde_version ;
   struct proc_dir_entry *pde_stats ;
   struct proc_dir_entry *pde_reset_stats ;
   struct proc_dir_entry *pde_rcvlist_all ;
   struct proc_dir_entry *pde_rcvlist_fil ;
   struct proc_dir_entry *pde_rcvlist_inv ;
   struct proc_dir_entry *pde_rcvlist_sff ;
   struct proc_dir_entry *pde_rcvlist_eff ;
   struct proc_dir_entry *pde_rcvlist_err ;
   struct proc_dir_entry *bcmproc_dir ;
   struct can_dev_rcv_lists *rx_alldev_list ;
   spinlock_t rcvlists_lock ;
   struct timer_list stattimer ;
   struct can_pkg_stats *pkg_stats ;
   struct can_rcv_lists_stats *rcv_lists_stats ;
   struct hlist_head cgw_list ;
};
#line 8  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/xdp.h"
struct netns_xdp {
   struct mutex lock ;
   struct hlist_head list ;
};
#line 12 
struct proc_ns_operations;
#line 7  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ns_common.h"
struct ns_common {
   atomic_long_t stashed ;
   struct proc_ns_operations *ops ;
   unsigned int inum ;
};
#line 12 
struct net_generic;
#line 13 
struct uevent_sock;
#line 14 
struct netns_ipvs;
#line 55  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/net_namespace.h"
struct key_tag;
#line 55 
struct ucounts;
#line 55  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/net_namespace.h"
struct net {
   refcount_t passive ;
   refcount_t count ;
   spinlock_t rules_mod_lock ;
   unsigned int dev_unreg_count ;
   unsigned int dev_base_seq ;
   int ifindex ;
   spinlock_t nsid_lock ;
   atomic_t fnhe_genid ;
   struct list_head list ;
   struct list_head exit_list ;
   struct llist_node cleanup_list ;
   struct key_tag *key_domain ;
   struct user_namespace *user_ns ;
   struct ucounts *ucounts ;
   struct idr netns_ids ;
   struct ns_common ns ;
   struct list_head dev_base_head ;
   struct proc_dir_entry *proc_net ;
   struct proc_dir_entry *proc_net_stat ;
   struct ctl_table_set sysctls ;
   struct sock *rtnl ;
   struct sock *genl_sock ;
   struct uevent_sock *uevent_sock ;
   struct hlist_head *dev_name_head ;
   struct hlist_head *dev_index_head ;
   struct raw_notifier_head netdev_chain ;
   u32 hash_mix ;
   struct net_device *loopback_dev ;
   struct list_head rules_ops ;
   struct netns_core core ;
   struct netns_mib mib ;
   struct netns_packet packet ;
   struct netns_unix unx ;
   struct netns_nexthop nexthop ;
   struct netns_ipv4 ipv4 ;
   struct netns_ipv6 ipv6 ;
   struct netns_ieee802154_lowpan ieee802154_lowpan ;
   struct netns_sctp sctp ;
   struct netns_dccp dccp ;
   struct netns_nf nf ;
   struct netns_xt xt ;
   struct netns_ct ct ;
   struct netns_nftables nft ;
   struct netns_nf_frag nf_frag ;
   struct ctl_table_header *nf_frag_frags_hdr ;
   struct sock *nfnl ;
   struct sock *nfnl_stash ;
   struct list_head nfnl_acct_list ;
   struct list_head nfct_timeout_list ;
   struct sk_buff_head wext_nlevents ;
   struct net_generic *gen ;
   struct bpf_prog *flow_dissector_prog ;
   struct netns_xfrm xfrm ;
   struct netns_ipvs *ipvs ;
   struct netns_mpls mpls ;
   struct netns_can can ;
   struct netns_xdp xdp ;
   struct sock *crypto_nlsk ;
   struct sock *diag_nlsk ;
} __attribute__((__designated_init__));
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/assoc_array.h"
struct assoc_array_ptr;
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/assoc_array.h"
struct assoc_array {
   struct assoc_array_ptr *root ;
   unsigned long nr_leaves_on_tree ;
};
#line 83  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/assoc_array.h"
typedef int32_t key_serial_t;
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
typedef uint32_t key_perm_t;
#line 32 
struct key_type;
#line 85  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
struct key_tag {
   struct callback_head rcu ;
   refcount_t usage ;
   bool removed ;
};
#line 91  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
struct __anonstruct_580 {
   u16 desc_len ;
   char desc[6U] ;
};
#line 91  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
union __anonunion_579 {
   struct __anonstruct_580 __anonCompField___anonunion_579_102 ;
   unsigned long x ;
};
#line 91  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
struct keyring_index_key {
   unsigned long hash ;
   union __anonunion_579 __anonCompField_keyring_index_key_103 ;
   struct key_type *type ;
   struct key_tag *domain_tag ;
   char *description ;
};
#line 111  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
union key_payload {
   void *rcu_data0 ;
   void *data[4U] ;
};
#line 153  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
struct key_restriction {
   int (*check)(struct key *, struct key_type *, union key_payload *, struct key *) ;
   struct key *key ;
   struct key_type *keytype ;
};
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
union __anonunion_581 {
   struct list_head graveyard_link ;
   struct rb_node serial_node ;
};
#line 172 
struct key_user;
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
union __anonunion_582 {
   time64_t expiry ;
   time64_t revoked_at ;
};
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
struct __anonstruct_584 {
   unsigned long hash ;
   unsigned long len_desc ;
   struct key_type *type ;
   struct key_tag *domain_tag ;
   char *description ;
};
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
union __anonunion_583 {
   struct keyring_index_key index_key ;
   struct __anonstruct_584 __anonCompField___anonunion_583_106 ;
};
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
struct __anonstruct_586 {
   struct list_head name_link ;
   struct assoc_array keys ;
};
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
union __anonunion_585 {
   union key_payload payload ;
   struct __anonstruct_586 __anonCompField___anonunion_585_108 ;
};
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
struct key {
   refcount_t usage ;
   key_serial_t serial ;
   union __anonunion_581 __anonCompField_key_104 ;
   struct rw_semaphore sem ;
   struct key_user *user ;
   void *security ;
   union __anonunion_582 __anonCompField_key_105 ;
   time64_t last_used_at ;
   kuid_t uid ;
   kgid_t gid ;
   key_perm_t perm ;
   unsigned short quotalen ;
   unsigned short datalen ;
   short state ;
   unsigned long flags ;
   union __anonunion_583 __anonCompField_key_107 ;
   union __anonunion_585 __anonCompField_key_109 ;
   struct key_restriction *restrict_link ;
};
#line 13  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched/user.h"
struct user_struct {
   refcount_t __count ;
   atomic_t processes ;
   atomic_t sigpending ;
   atomic_t fanotify_listeners ;
   atomic_long_t epoll_watches ;
   unsigned long mq_bytes ;
   unsigned long locked_shm ;
   unsigned long unix_inflight ;
   atomic_long_t pipe_bufs ;
   struct hlist_node uidhash_node ;
   kuid_t uid ;
   atomic_long_t locked_vm ;
   struct ratelimit_state ratelimit ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cred.h"
struct group_info {
   atomic_t usage ;
   int ngroups ;
   kgid_t gid[0U] ;
} __attribute__((__designated_init__));
#line 111  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cred.h"
union __anonunion_589 {
   int non_rcu ;
   struct callback_head rcu ;
};
#line 111  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cred.h"
struct cred {
   atomic_t usage ;
   atomic_t subscribers ;
   void *put_addr ;
   unsigned int magic ;
   kuid_t uid ;
   kgid_t gid ;
   kuid_t suid ;
   kgid_t sgid ;
   kuid_t euid ;
   kgid_t egid ;
   kuid_t fsuid ;
   kgid_t fsgid ;
   unsigned int securebits ;
   kernel_cap_t cap_inheritable ;
   kernel_cap_t cap_permitted ;
   kernel_cap_t cap_effective ;
   kernel_cap_t cap_bset ;
   kernel_cap_t cap_ambient ;
   unsigned char jit_keyring ;
   struct key *session_keyring ;
   struct key *process_keyring ;
   struct key *thread_keyring ;
   struct key *request_key_auth ;
   void *security ;
   struct user_struct *user ;
   struct user_namespace *user_ns ;
   struct group_info *group_info ;
   union __anonunion_589 __anonCompField_cred_110 ;
} __attribute__((__designated_init__));
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/seq_file.h"
struct seq_file {
   char *buf ;
   size_t size ;
   size_t from ;
   size_t count ;
   size_t pad_until ;
   loff_t index ;
   loff_t read_pos ;
   u64 version ;
   struct mutex lock ;
   struct seq_operations *op ;
   int poll_event ;
   struct file *file ;
   void *private ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/seq_file.h"
struct seq_operations {
   void *(*start)(struct seq_file *, loff_t *) ;
   void (*stop)(struct seq_file *, void *) ;
   void *(*next)(struct seq_file *, void *, loff_t *) ;
   int (*show)(struct seq_file *, void *) ;
};
#line 275  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/net_namespace.h"
struct __anonstruct_possible_net_t_590 {
   struct net *net ;
};
#line 275  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/net_namespace.h"
typedef struct __anonstruct_possible_net_t_590 possible_net_t;
#line 58  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct ieee_ets {
   __u8 willing ;
   __u8 ets_cap ;
   __u8 cbs ;
   __u8 tc_tx_bw[8U] ;
   __u8 tc_rx_bw[8U] ;
   __u8 tc_tsa[8U] ;
   __u8 prio_tc[8U] ;
   __u8 tc_reco_bw[8U] ;
   __u8 tc_reco_tsa[8U] ;
   __u8 reco_prio_tc[8U] ;
};
#line 78  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct ieee_maxrate {
   __u64 tc_maxrate[8U] ;
};
#line 119  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct ieee_qcn {
   __u8 rpg_enable[8U] ;
   __u32 rppp_max_rps[8U] ;
   __u32 rpg_time_reset[8U] ;
   __u32 rpg_byte_reset[8U] ;
   __u32 rpg_threshold[8U] ;
   __u32 rpg_max_rate[8U] ;
   __u32 rpg_ai_rate[8U] ;
   __u32 rpg_hai_rate[8U] ;
   __u32 rpg_gd[8U] ;
   __u32 rpg_min_dec_fac[8U] ;
   __u32 rpg_min_rate[8U] ;
   __u32 cndd_state_machine[8U] ;
};
#line 141  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct ieee_qcn_stats {
   __u64 rppp_rp_centiseconds[8U] ;
   __u32 rppp_created_rps[8U] ;
};
#line 157  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct ieee_pfc {
   __u8 pfc_cap ;
   __u8 pfc_en ;
   __u8 mbc ;
   __u16 delay ;
   __u64 requests[8U] ;
   __u64 indications[8U] ;
};
#line 168  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct dcbnl_buffer {
   __u8 prio2buffer[8U] ;
   __u32 buffer_size[8U] ;
   __u32 total_size ;
};
#line 190  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct cee_pg {
   __u8 willing ;
   __u8 error ;
   __u8 pg_en ;
   __u8 tcs_supported ;
   __u8 pg_bw[8U] ;
   __u8 prio_pg[8U] ;
};
#line 207  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct cee_pfc {
   __u8 willing ;
   __u8 error ;
   __u8 pfc_en ;
   __u8 tcs_supported ;
};
#line 244  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct dcb_app {
   __u8 selector ;
   __u8 priority ;
   __u16 protocol ;
};
#line 259  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct dcb_peer_app_info {
   __u8 willing ;
   __u8 error ;
};
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/dcbnl.h"
struct dcbnl_rtnl_ops {
   int (*ieee_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_setets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_getmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_setmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_getqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_setqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_getqcnstats)(struct net_device *, struct ieee_qcn_stats *) ;
   int (*ieee_getpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_setpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_getapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_setapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_delapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_peer_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_peer_getpfc)(struct net_device *, struct ieee_pfc *) ;
   u8 (*getstate)(struct net_device *) ;
   u8 (*setstate)(struct net_device *, u8 ) ;
   void (*getpermhwaddr)(struct net_device *, u8 *) ;
   void (*setpgtccfgtx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgtx)(struct net_device *, int , u8 ) ;
   void (*setpgtccfgrx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgrx)(struct net_device *, int , u8 ) ;
   void (*getpgtccfgtx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgtx)(struct net_device *, int , u8 *) ;
   void (*getpgtccfgrx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgrx)(struct net_device *, int , u8 *) ;
   void (*setpfccfg)(struct net_device *, int , u8 ) ;
   void (*getpfccfg)(struct net_device *, int , u8 *) ;
   u8 (*setall)(struct net_device *) ;
   u8 (*getcap)(struct net_device *, int , u8 *) ;
   int (*getnumtcs)(struct net_device *, int , u8 *) ;
   int (*setnumtcs)(struct net_device *, int , u8 ) ;
   u8 (*getpfcstate)(struct net_device *) ;
   void (*setpfcstate)(struct net_device *, u8 ) ;
   void (*getbcncfg)(struct net_device *, int , u32 *) ;
   void (*setbcncfg)(struct net_device *, int , u32 ) ;
   void (*getbcnrp)(struct net_device *, int , u8 *) ;
   void (*setbcnrp)(struct net_device *, int , u8 ) ;
   int (*setapp)(struct net_device *, u8 , u16 , u8 ) ;
   int (*getapp)(struct net_device *, u8 , u16 ) ;
   u8 (*getfeatcfg)(struct net_device *, int , u8 *) ;
   u8 (*setfeatcfg)(struct net_device *, int , u8 ) ;
   u8 (*getdcbx)(struct net_device *) ;
   u8 (*setdcbx)(struct net_device *, u8 ) ;
   int (*peer_getappinfo)(struct net_device *, struct dcb_peer_app_info *, u16 *) ;
   int (*peer_getapptable)(struct net_device *, struct dcb_app *) ;
   int (*cee_peer_getpg)(struct net_device *, struct cee_pg *) ;
   int (*cee_peer_getpfc)(struct net_device *, struct cee_pfc *) ;
   int (*dcbnl_getbuffer)(struct net_device *, struct dcbnl_buffer *) ;
   int (*dcbnl_setbuffer)(struct net_device *, struct dcbnl_buffer *) ;
};
#line 41  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/taskstats.h"
struct taskstats {
   __u16 version ;
   __u32 ac_exitcode ;
   __u8 ac_flag ;
   __u8 ac_nice ;
   __u64 cpu_count ;
   __u64 cpu_delay_total ;
   __u64 blkio_count ;
   __u64 blkio_delay_total ;
   __u64 swapin_count ;
   __u64 swapin_delay_total ;
   __u64 cpu_run_real_total ;
   __u64 cpu_run_virtual_total ;
   char ac_comm[32U] ;
   __u8 ac_sched ;
   __u8 ac_pad[3U] ;
   __u32 ac_uid ;
   __u32 ac_gid ;
   __u32 ac_pid ;
   __u32 ac_ppid ;
   __u32 ac_btime ;
   __u64 ac_etime ;
   __u64 ac_utime ;
   __u64 ac_stime ;
   __u64 ac_minflt ;
   __u64 ac_majflt ;
   __u64 coremem ;
   __u64 virtmem ;
   __u64 hiwater_rss ;
   __u64 hiwater_vm ;
   __u64 read_char ;
   __u64 write_char ;
   __u64 read_syscalls ;
   __u64 write_syscalls ;
   __u64 read_bytes ;
   __u64 write_bytes ;
   __u64 cancelled_write_bytes ;
   __u64 nvcsw ;
   __u64 nivcsw ;
   __u64 ac_utimescaled ;
   __u64 ac_stimescaled ;
   __u64 cpu_scaled_run_real_total ;
   __u64 freepages_count ;
   __u64 freepages_delay_total ;
   __u64 thrashing_count ;
   __u64 thrashing_delay_total ;
};
#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/cgroupstats.h"
struct mnt_namespace;
#line 60 
struct uts_namespace;
#line 61 
struct ipc_namespace;
#line 62 
struct cgroup_namespace;
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/nsproxy.h"
struct nsproxy {
   atomic_t count ;
   struct uts_namespace *uts_ns ;
   struct ipc_namespace *ipc_ns ;
   struct mnt_namespace *mnt_ns ;
   struct pid_namespace *pid_ns_for_children ;
   struct net *net_ns ;
   struct cgroup_namespace *cgroup_ns ;
};
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/user_namespace.h"
struct uid_gid_extent {
   u32 first ;
   u32 lower_first ;
   u32 count ;
};
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/user_namespace.h"
struct __anonstruct_592 {
   struct uid_gid_extent *forward ;
   struct uid_gid_extent *reverse ;
};
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/user_namespace.h"
union __anonunion_591 {
   struct uid_gid_extent extent[5U] ;
   struct __anonstruct_592 __anonCompField___anonunion_591_111 ;
};
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/user_namespace.h"
struct uid_gid_map {
   u32 nr_extents ;
   union __anonunion_591 __anonCompField_uid_gid_map_112 ;
};
#line 55  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/user_namespace.h"
struct user_namespace {
   struct uid_gid_map uid_map ;
   struct uid_gid_map gid_map ;
   struct uid_gid_map projid_map ;
   atomic_t count ;
   struct user_namespace *parent ;
   int level ;
   kuid_t owner ;
   kgid_t group ;
   struct ns_common ns ;
   unsigned long flags ;
   struct list_head keyring_name_list ;
   struct key *user_keyring_register ;
   struct rw_semaphore keyring_sem ;
   struct key *persistent_keyring_register ;
   struct work_struct work ;
   struct ctl_table_set set ;
   struct ctl_table_header *sysctls ;
   struct ucounts *ucounts ;
   int ucount_max[9U] ;
} __attribute__((__designated_init__));
#line 91  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/user_namespace.h"
struct ucounts {
   struct hlist_node node ;
   struct user_namespace *ns ;
   kuid_t uid ;
   int count ;
   atomic_t ucount[9U] ;
};
#line 65  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct bpf_insn {
   __u8 code ;
   __u8 dst_reg : 4 ;
   __u8 src_reg : 4 ;
   __s16 off ;
   __s32 imm ;
};
#line 79  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct bpf_cgroup_storage_key {
   __u64 cgroup_inode_id ;
   __u32 attach_type ;
};
#line 110 
enum bpf_map_type {
    BPF_MAP_TYPE_UNSPEC = 0,
    BPF_MAP_TYPE_HASH = 1,
    BPF_MAP_TYPE_ARRAY = 2,
    BPF_MAP_TYPE_PROG_ARRAY = 3,
    BPF_MAP_TYPE_PERF_EVENT_ARRAY = 4,
    BPF_MAP_TYPE_PERCPU_HASH = 5,
    BPF_MAP_TYPE_PERCPU_ARRAY = 6,
    BPF_MAP_TYPE_STACK_TRACE = 7,
    BPF_MAP_TYPE_CGROUP_ARRAY = 8,
    BPF_MAP_TYPE_LRU_HASH = 9,
    BPF_MAP_TYPE_LRU_PERCPU_HASH = 10,
    BPF_MAP_TYPE_LPM_TRIE = 11,
    BPF_MAP_TYPE_ARRAY_OF_MAPS = 12,
    BPF_MAP_TYPE_HASH_OF_MAPS = 13,
    BPF_MAP_TYPE_DEVMAP = 14,
    BPF_MAP_TYPE_SOCKMAP = 15,
    BPF_MAP_TYPE_CPUMAP = 16,
    BPF_MAP_TYPE_XSKMAP = 17,
    BPF_MAP_TYPE_SOCKHASH = 18,
    BPF_MAP_TYPE_CGROUP_STORAGE = 19,
    BPF_MAP_TYPE_REUSEPORT_SOCKARRAY = 20,
    BPF_MAP_TYPE_PERCPU_CGROUP_STORAGE = 21,
    BPF_MAP_TYPE_QUEUE = 22,
    BPF_MAP_TYPE_STACK = 23,
    BPF_MAP_TYPE_SK_STORAGE = 24,
    BPF_MAP_TYPE_DEVMAP_HASH = 25
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_594 {
   __u32 map_type ;
   __u32 key_size ;
   __u32 value_size ;
   __u32 max_entries ;
   __u32 map_flags ;
   __u32 inner_map_fd ;
   __u32 numa_node ;
   char map_name[16U] ;
   __u32 map_ifindex ;
   __u32 btf_fd ;
   __u32 btf_key_type_id ;
   __u32 btf_value_type_id ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
union __anonunion_596 {
   __u64 value ;
   __u64 next_key ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_595 {
   __u32 map_fd ;
   __u64 key ;
   union __anonunion_596 __anonCompField___anonstruct_595_115 ;
   __u64 flags ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_597 {
   __u32 prog_type ;
   __u32 insn_cnt ;
   __u64 insns ;
   __u64 license ;
   __u32 log_level ;
   __u32 log_size ;
   __u64 log_buf ;
   __u32 kern_version ;
   __u32 prog_flags ;
   char prog_name[16U] ;
   __u32 prog_ifindex ;
   __u32 expected_attach_type ;
   __u32 prog_btf_fd ;
   __u32 func_info_rec_size ;
   __u64 func_info ;
   __u32 func_info_cnt ;
   __u32 line_info_rec_size ;
   __u64 line_info ;
   __u32 line_info_cnt ;
   __u32 attach_btf_id ;
   __u32 attach_prog_fd ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_598 {
   __u64 pathname ;
   __u32 bpf_fd ;
   __u32 file_flags ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_599 {
   __u32 target_fd ;
   __u32 attach_bpf_fd ;
   __u32 attach_type ;
   __u32 attach_flags ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_test_600 {
   __u32 prog_fd ;
   __u32 retval ;
   __u32 data_size_in ;
   __u32 data_size_out ;
   __u64 data_in ;
   __u64 data_out ;
   __u32 repeat ;
   __u32 duration ;
   __u32 ctx_size_in ;
   __u32 ctx_size_out ;
   __u64 ctx_in ;
   __u64 ctx_out ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
union __anonunion_602 {
   __u32 start_id ;
   __u32 prog_id ;
   __u32 map_id ;
   __u32 btf_id ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_601 {
   union __anonunion_602 __anonCompField___anonstruct_601_120 ;
   __u32 next_id ;
   __u32 open_flags ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_info_603 {
   __u32 bpf_fd ;
   __u32 info_len ;
   __u64 info ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_query_604 {
   __u32 target_fd ;
   __u32 attach_type ;
   __u32 query_flags ;
   __u32 attach_flags ;
   __u64 prog_ids ;
   __u32 prog_cnt ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_raw_tracepoint_605 {
   __u64 name ;
   __u32 prog_fd ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_606 {
   __u64 btf ;
   __u64 btf_log_buf ;
   __u32 btf_size ;
   __u32 btf_log_size ;
   __u32 btf_log_level ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_task_fd_query_607 {
   __u32 pid ;
   __u32 fd ;
   __u32 flags ;
   __u32 buf_len ;
   __u64 buf ;
   __u32 prog_id ;
   __u32 fd_type ;
   __u64 probe_offset ;
   __u64 probe_addr ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
union bpf_attr {
   struct __anonstruct_594 __anonCompField_bpf_attr_114 ;
   struct __anonstruct_595 __anonCompField_bpf_attr_116 ;
   struct __anonstruct_597 __anonCompField_bpf_attr_117 ;
   struct __anonstruct_598 __anonCompField_bpf_attr_118 ;
   struct __anonstruct_599 __anonCompField_bpf_attr_119 ;
   struct __anonstruct_test_600 test ;
   struct __anonstruct_601 __anonCompField_bpf_attr_121 ;
   struct __anonstruct_info_603 info ;
   struct __anonstruct_query_604 query ;
   struct __anonstruct_raw_tracepoint_605 raw_tracepoint ;
   struct __anonstruct_606 __anonCompField_bpf_attr_122 ;
   struct __anonstruct_task_fd_query_607 task_fd_query ;
} __attribute__((__aligned__(8)));
#line 3653  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct bpf_func_info {
   __u32 insn_off ;
   __u32 type_id ;
};
#line 3661  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct bpf_line_info {
   __u32 insn_off ;
   __u32 file_name_off ;
   __u32 line_off ;
   __u32 line_col ;
};
#line 40  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rbtree_latch.h"
struct latch_tree_node {
   struct rb_node node[2U] ;
};
#line 215 
struct bpf_prog_aux;
#line 216 
struct bpf_map;
#line 217 
struct btf;
#line 218 
struct btf_type;
#line 37  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_map_ops {
   int (*map_alloc_check)(union bpf_attr *) ;
   struct bpf_map *(*map_alloc)(union bpf_attr *) ;
   void (*map_release)(struct bpf_map *, struct file *) ;
   void (*map_free)(struct bpf_map *) ;
   int (*map_get_next_key)(struct bpf_map *, void *, void *) ;
   void (*map_release_uref)(struct bpf_map *) ;
   void *(*map_lookup_elem_sys_only)(struct bpf_map *, void *) ;
   void *(*map_lookup_elem)(struct bpf_map *, void *) ;
   int (*map_update_elem)(struct bpf_map *, void *, void *, u64 ) ;
   int (*map_delete_elem)(struct bpf_map *, void *) ;
   int (*map_push_elem)(struct bpf_map *, void *, u64 ) ;
   int (*map_pop_elem)(struct bpf_map *, void *) ;
   int (*map_peek_elem)(struct bpf_map *, void *) ;
   void *(*map_fd_get_ptr)(struct bpf_map *, struct file *, int ) ;
   void (*map_fd_put_ptr)(void *) ;
   u32 (*map_gen_lookup)(struct bpf_map *, struct bpf_insn *) ;
   u32 (*map_fd_sys_lookup_elem)(void *) ;
   void (*map_seq_show_elem)(struct bpf_map *, void *, struct seq_file *) ;
   int (*map_check_btf)(struct bpf_map *, struct btf *, struct btf_type *, struct btf_type *) ;
   int (*map_poke_track)(struct bpf_map *, struct bpf_prog_aux *) ;
   void (*map_poke_untrack)(struct bpf_map *, struct bpf_prog_aux *) ;
   void (*map_poke_run)(struct bpf_map *, u32 , struct bpf_prog *, struct bpf_prog *) ;
   int (*map_direct_value_addr)(struct bpf_map *, u64 *, u32 ) ;
   int (*map_direct_value_meta)(struct bpf_map *, u64 , u32 *) ;
   int (*map_mmap)(struct bpf_map *, struct vm_area_struct *) ;
};
#line 82  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_map_memory {
   u32 pages ;
   struct user_struct *user ;
};
#line 87  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_map {
   struct bpf_map_ops *ops ;
   struct bpf_map *inner_map_meta ;
   void *security ;
   enum bpf_map_type map_type ;
   u32 key_size ;
   u32 value_size ;
   u32 max_entries ;
   u32 map_flags ;
   int spin_lock_off ;
   u32 id ;
   int numa_node ;
   u32 btf_key_type_id ;
   u32 btf_value_type_id ;
   struct btf *btf ;
   struct bpf_map_memory memory ;
   char name[16U] ;
   bool unpriv_array ;
   bool frozen ;
   atomic64_t refcnt ;
   atomic64_t usercnt ;
   struct work_struct work ;
   struct mutex freeze_mutex ;
   u64 writecnt ;
};
#line 151 
struct bpf_offload_dev;
#line 152 
struct bpf_offloaded_map;
#line 156  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_map_dev_ops {
   int (*map_get_next_key)(struct bpf_offloaded_map *, void *, void *) ;
   int (*map_lookup_elem)(struct bpf_offloaded_map *, void *, void *) ;
   int (*map_update_elem)(struct bpf_offloaded_map *, void *, void *, u64 ) ;
   int (*map_delete_elem)(struct bpf_offloaded_map *, void *) ;
};
#line 166  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_offloaded_map {
   struct bpf_map map ;
   struct net_device *netdev ;
   struct bpf_map_dev_ops *dev_ops ;
   void *dev_priv ;
   struct list_head offloads ;
};
#line 327  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_prog_ops {
   int (*test_run)(struct bpf_prog *, union bpf_attr *, union bpf_attr *) ;
};
#line 369  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_prog_offload {
   struct bpf_prog *prog ;
   struct net_device *netdev ;
   struct bpf_offload_dev *offdev ;
   void *dev_priv ;
   struct list_head offloads ;
   bool dev_state ;
   bool opt_failed ;
   void *jited_image ;
   u32 jited_len ;
};
#line 394  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_prog_stats {
   u64 cnt ;
   u64 nsecs ;
   struct u64_stats_sync syncp ;
} __attribute__((__aligned__(16)));
#line 400  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct btf_func_model {
   u8 ret_size ;
   u8 nr_args ;
   u8 arg_size[12U] ;
};
#line 447 
enum bpf_tramp_prog_type {
    BPF_TRAMP_FENTRY = 0,
    BPF_TRAMP_FEXIT = 1,
    BPF_TRAMP_MAX = 2
};
#line 454  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct __anonstruct_func_640 {
   struct btf_func_model model ;
   void *addr ;
   bool ftrace_managed ;
};
#line 454  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_trampoline {
   struct hlist_node hlist ;
   struct mutex mutex ;
   refcount_t refcnt ;
   u64 key ;
   struct __anonstruct_func_640 func ;
   struct hlist_head progs_hlist[2U] ;
   int progs_cnt[2U] ;
   void *image ;
   u64 selector ;
};
#line 495  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_func_info_aux {
   bool unreliable ;
};
#line 504  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct __anonstruct_tail_call_642 {
   struct bpf_map *map ;
   u32 key ;
};
#line 504  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
union __anonunion_641 {
   struct __anonstruct_tail_call_642 tail_call ;
};
#line 504  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_jit_poke_descriptor {
   void *ip ;
   union __anonunion_641 __anonCompField_bpf_jit_poke_descriptor_147 ;
   bool ip_stable ;
   u8 adj_off ;
   u16 reason ;
};
#line 517  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
union __anonunion_643 {
   struct work_struct work ;
   struct callback_head rcu ;
};
#line 517  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_prog_aux {
   atomic64_t refcnt ;
   u32 used_map_cnt ;
   u32 max_ctx_offset ;
   u32 max_pkt_offset ;
   u32 max_tp_access ;
   u32 stack_depth ;
   u32 id ;
   u32 func_cnt ;
   u32 func_idx ;
   u32 attach_btf_id ;
   struct bpf_prog *linked_prog ;
   bool verifier_zext ;
   bool offload_requested ;
   bool attach_btf_trace ;
   bool func_proto_unreliable ;
   enum bpf_tramp_prog_type trampoline_prog_type ;
   struct bpf_trampoline *trampoline ;
   struct hlist_node tramp_hlist ;
   struct btf_type *attach_func_proto ;
   char *attach_func_name ;
   struct bpf_prog **func ;
   void *jit_data ;
   struct bpf_jit_poke_descriptor *poke_tab ;
   u32 size_poke_tab ;
   struct latch_tree_node ksym_tnode ;
   struct list_head ksym_lnode ;
   struct bpf_prog_ops *ops ;
   struct bpf_map **used_maps ;
   struct bpf_prog *prog ;
   struct user_struct *user ;
   u64 load_time ;
   struct bpf_map *cgroup_storage[2U] ;
   char name[16U] ;
   void *security ;
   struct bpf_prog_offload *offload ;
   struct btf *btf ;
   struct bpf_func_info *func_info ;
   struct bpf_func_info_aux *func_info_aux ;
   struct bpf_line_info *linfo ;
   void **jited_linfo ;
   u32 func_info_cnt ;
   u32 nr_linfo ;
   u32 linfo_idx ;
   u32 num_exentries ;
   struct exception_table_entry *extable ;
   struct bpf_prog_stats *stats ;
   union __anonunion_643 __anonCompField_bpf_prog_aux_148 ;
};
#line 686 
struct bpf_cgroup_storage;
#line 686  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_prog_array_item {
   struct bpf_prog *prog ;
   struct bpf_cgroup_storage *cgroup_storage[2U] ;
};
#line 691  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_prog_array {
   struct callback_head rcu ;
   struct bpf_prog_array_item items[0U] ;
};
#line 1335 
struct cgroup;
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf-cgroup.h"
struct bpf_cgroup_storage_map;
#line 37  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf-cgroup.h"
struct bpf_storage_buffer {
   struct callback_head rcu ;
   char data[0U] ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf-cgroup.h"
union __anonunion_645 {
   struct bpf_storage_buffer *buf ;
   void *percpu_buf ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf-cgroup.h"
struct bpf_cgroup_storage {
   union __anonunion_645 __anonCompField_bpf_cgroup_storage_150 ;
   struct bpf_cgroup_storage_map *map ;
   struct bpf_cgroup_storage_key key ;
   struct list_head list ;
   struct rb_node node ;
   struct callback_head rcu ;
};
#line 62  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf-cgroup.h"
struct cgroup_bpf {
   struct bpf_prog_array *effective[26U] ;
   struct list_head progs[26U] ;
   u32 flags[26U] ;
   struct bpf_prog_array *inactive ;
   struct percpu_ref refcnt ;
   struct work_struct release_work ;
};
#line 69  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kthread.h"
struct kthread_work;
#line 86  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kthread.h"
struct kthread_worker {
   unsigned int flags ;
   raw_spinlock_t lock ;
   struct list_head work_list ;
   struct list_head delayed_work_list ;
   struct task_struct *task ;
   struct kthread_work *current_work ;
};
#line 95  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kthread.h"
struct kthread_work {
   struct list_head node ;
   void (*func)(struct kthread_work *) ;
   struct kthread_worker *worker ;
   int canceling ;
};
#line 103  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kthread.h"
struct kthread_delayed_work {
   struct kthread_work work ;
   struct timer_list timer ;
};
#line 199 
struct cgroup_subsys_state;
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/psi_types.h"
struct psi_group_cpu {
   seqcount_t seq ;
   unsigned int tasks[3U] ;
   u32 state_mask ;
   u32 times[6U] ;
   u64 state_start ;
   u32 times_prev[2U][6U] ;
};
#line 96 
struct psi_group;
#line 128  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/psi_types.h"
struct psi_group {
   struct mutex avgs_lock ;
   struct psi_group_cpu *pcpu ;
   u64 avg_total[5U] ;
   u64 avg_last_update ;
   u64 avg_next_update ;
   struct delayed_work avgs_work ;
   u64 total[2U][5U] ;
   unsigned long avg[5U][3U] ;
   atomic_t poll_scheduled ;
   struct kthread_worker *poll_kworker ;
   struct kthread_delayed_work poll_work ;
   struct mutex trigger_lock ;
   struct list_head triggers ;
   u32 nr_triggers[5U] ;
   u32 poll_states ;
   u64 poll_min_period ;
   u64 polling_total[5U] ;
   u64 polling_next_update ;
   u64 polling_until ;
};
#line 166 
struct cgroup_root;
#line 167 
struct cgroup_subsys;
#line 168 
struct cgroup_taskset;
#line 119  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cgroup_file {
   struct kernfs_node *kn ;
   unsigned long notified_at ;
   struct timer_list notify_timer ;
};
#line 133  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cgroup_subsys_state {
   struct cgroup *cgroup ;
   struct cgroup_subsys *ss ;
   struct percpu_ref refcnt ;
   struct list_head sibling ;
   struct list_head children ;
   struct list_head rstat_css_node ;
   int id ;
   unsigned int flags ;
   u64 serial_nr ;
   atomic_t online_cnt ;
   struct work_struct destroy_work ;
   struct rcu_work destroy_rwork ;
   struct cgroup_subsys_state *parent ;
};
#line 190  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct css_set {
   struct cgroup_subsys_state *subsys[14U] ;
   refcount_t refcount ;
   struct css_set *dom_cset ;
   struct cgroup *dfl_cgrp ;
   int nr_tasks ;
   struct list_head tasks ;
   struct list_head mg_tasks ;
   struct list_head dying_tasks ;
   struct list_head task_iters ;
   struct list_head e_cset_node[14U] ;
   struct list_head threaded_csets ;
   struct list_head threaded_csets_node ;
   struct hlist_node hlist ;
   struct list_head cgrp_links ;
   struct list_head mg_preload_node ;
   struct list_head mg_node ;
   struct cgroup *mg_src_cgrp ;
   struct cgroup *mg_dst_cgrp ;
   struct css_set *mg_dst_cset ;
   bool dead ;
   struct callback_head callback_head ;
};
#line 279  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cgroup_base_stat {
   struct task_cputime cputime ;
};
#line 303  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cgroup_rstat_cpu {
   struct u64_stats_sync bsync ;
   struct cgroup_base_stat bstat ;
   struct cgroup_base_stat last_bstat ;
   struct cgroup *updated_children ;
   struct cgroup *updated_next ;
};
#line 332  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cgroup_freezer_state {
   bool freeze ;
   int e_freeze ;
   int nr_frozen_descendants ;
   int nr_frozen_tasks ;
};
#line 351  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cgroup {
   struct cgroup_subsys_state self ;
   unsigned long flags ;
   int level ;
   int max_depth ;
   int nr_descendants ;
   int nr_dying_descendants ;
   int max_descendants ;
   int nr_populated_csets ;
   int nr_populated_domain_children ;
   int nr_populated_threaded_children ;
   int nr_threaded_children ;
   struct kernfs_node *kn ;
   struct cgroup_file procs_file ;
   struct cgroup_file events_file ;
   u16 subtree_control ;
   u16 subtree_ss_mask ;
   u16 old_subtree_control ;
   u16 old_subtree_ss_mask ;
   struct cgroup_subsys_state *subsys[14U] ;
   struct cgroup_root *root ;
   struct list_head cset_links ;
   struct list_head e_csets[14U] ;
   struct cgroup *dom_cgrp ;
   struct cgroup *old_dom_cgrp ;
   struct cgroup_rstat_cpu *rstat_cpu ;
   struct list_head rstat_css_list ;
   struct cgroup_base_stat last_bstat ;
   struct cgroup_base_stat bstat ;
   struct prev_cputime prev_cputime ;
   struct list_head pidlists ;
   struct mutex pidlist_mutex ;
   wait_queue_head_t offline_waitq ;
   struct work_struct release_agent_work ;
   struct psi_group psi ;
   struct cgroup_bpf bpf ;
   atomic_t congestion_count ;
   struct cgroup_freezer_state freezer ;
   u64 ancestor_ids[] ;
};
#line 489  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cgroup_root {
   struct kernfs_root *kf_root ;
   unsigned int subsys_mask ;
   int hierarchy_id ;
   struct cgroup cgrp ;
   u64 cgrp_ancestor_id_storage ;
   atomic_t nr_cgrps ;
   struct list_head root_list ;
   unsigned int flags ;
   char release_agent_path[4096U] ;
   char name[64U] ;
};
#line 527  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cftype {
   char name[64U] ;
   unsigned long private ;
   size_t max_write_len ;
   unsigned int flags ;
   unsigned int file_offset ;
   struct cgroup_subsys *ss ;
   struct list_head node ;
   struct kernfs_ops *kf_ops ;
   int (*open)(struct kernfs_open_file *) ;
   void (*release)(struct kernfs_open_file *) ;
   u64 (*read_u64)(struct cgroup_subsys_state *, struct cftype *) ;
   s64 (*read_s64)(struct cgroup_subsys_state *, struct cftype *) ;
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   int (*write_u64)(struct cgroup_subsys_state *, struct cftype *, u64 ) ;
   int (*write_s64)(struct cgroup_subsys_state *, struct cftype *, s64 ) ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   __poll_t (*poll)(struct kernfs_open_file *, struct poll_table_struct *) ;
   struct lock_class_key lockdep_key ;
};
#line 616  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cgroup_subsys {
   struct cgroup_subsys_state *(*css_alloc)(struct cgroup_subsys_state *) ;
   int (*css_online)(struct cgroup_subsys_state *) ;
   void (*css_offline)(struct cgroup_subsys_state *) ;
   void (*css_released)(struct cgroup_subsys_state *) ;
   void (*css_free)(struct cgroup_subsys_state *) ;
   void (*css_reset)(struct cgroup_subsys_state *) ;
   void (*css_rstat_flush)(struct cgroup_subsys_state *, int ) ;
   int (*css_extra_stat_show)(struct seq_file *, struct cgroup_subsys_state *) ;
   int (*can_attach)(struct cgroup_taskset *) ;
   void (*cancel_attach)(struct cgroup_taskset *) ;
   void (*attach)(struct cgroup_taskset *) ;
   void (*post_attach)(void) ;
   int (*can_fork)(struct task_struct *) ;
   void (*cancel_fork)(struct task_struct *) ;
   void (*fork)(struct task_struct *) ;
   void (*exit)(struct task_struct *) ;
   void (*release)(struct task_struct *) ;
   void (*bind)(struct cgroup_subsys_state *) ;
   bool early_init : 1 ;
   bool implicit_on_dfl : 1 ;
   bool threaded : 1 ;
   bool broken_hierarchy : 1 ;
   bool warned_broken_hierarchy : 1 ;
   int id ;
   char *name ;
   char *legacy_name ;
   struct cgroup_root *root ;
   struct idr css_idr ;
   struct list_head cfts ;
   struct cftype *dfl_cftypes ;
   struct cftype *legacy_cftypes ;
   unsigned int depends_on ;
};
#line 848  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup.h"
struct cgroup_namespace {
   refcount_t count ;
   struct ns_common ns ;
   struct user_namespace *user_ns ;
   struct ucounts *ucounts ;
   struct css_set *root_cset ;
};
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netprio_cgroup.h"
struct netprio_map {
   struct callback_head rcu ;
   u32 priomap_len ;
   u32 priomap[] ;
};
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/xdp.h"
struct xdp_mem_info {
   u32 type ;
   u32 id ;
};
#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/xdp.h"
struct xdp_rxq_info {
   struct net_device *dev ;
   u32 queue_index ;
   u32 reg_state ;
   struct xdp_mem_info mem ;
} __attribute__((__aligned__(64)));
#line 75  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/xdp.h"
struct xdp_frame {
   void *data ;
   u16 len ;
   u16 headroom ;
   u16 metasize ;
   struct xdp_mem_info mem ;
   struct net_device *dev_rx ;
};
#line 175 
struct netdev_bpf;
#line 161  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/security.h"
struct xfrm_state;
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched/signal.h"
struct sighand_struct {
   spinlock_t siglock ;
   refcount_t count ;
   wait_queue_head_t signalfd_wqh ;
   struct k_sigaction action[64U] ;
};
#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched/signal.h"
struct pacct_struct {
   int ac_flag ;
   long ac_exitcode ;
   unsigned long ac_mem ;
   u64 ac_utime ;
   u64 ac_stime ;
   unsigned long ac_minflt ;
   unsigned long ac_majflt ;
};
#line 36  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched/signal.h"
struct cpu_itimer {
   u64 expires ;
   u64 incr ;
};
#line 45  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched/signal.h"
struct task_cputime_atomic {
   atomic64_t utime ;
   atomic64_t stime ;
   atomic64_t sum_exec_runtime ;
};
#line 64  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched/signal.h"
struct thread_group_cputimer {
   struct task_cputime_atomic cputime_atomic ;
};
#line 80 
struct tty_struct;
#line 80 
struct autogroup;
#line 80 
struct tty_audit_buf;
#line 80  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched/signal.h"
struct signal_struct {
   refcount_t sigcnt ;
   atomic_t live ;
   int nr_threads ;
   struct list_head thread_head ;
   wait_queue_head_t wait_chldexit ;
   struct task_struct *curr_target ;
   struct sigpending shared_pending ;
   struct hlist_head multiprocess ;
   int group_exit_code ;
   int notify_count ;
   struct task_struct *group_exit_task ;
   int group_stop_count ;
   unsigned int flags ;
   unsigned int is_child_subreaper : 1 ;
   unsigned int has_child_subreaper : 1 ;
   int posix_timer_id ;
   struct list_head posix_timers ;
   struct hrtimer real_timer ;
   ktime_t it_real_incr ;
   struct cpu_itimer it[2U] ;
   struct thread_group_cputimer cputimer ;
   struct posix_cputimers posix_cputimers ;
   struct pid *pids[4U] ;
   struct pid *tty_old_pgrp ;
   int leader ;
   struct tty_struct *tty ;
   struct autogroup *autogroup ;
   seqlock_t stats_lock ;
   u64 utime ;
   u64 stime ;
   u64 cutime ;
   u64 cstime ;
   u64 gtime ;
   u64 cgtime ;
   struct prev_cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   unsigned long cnvcsw ;
   unsigned long cnivcsw ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   unsigned long cmin_flt ;
   unsigned long cmaj_flt ;
   unsigned long inblock ;
   unsigned long oublock ;
   unsigned long cinblock ;
   unsigned long coublock ;
   unsigned long maxrss ;
   unsigned long cmaxrss ;
   struct task_io_accounting ioac ;
   unsigned long long sum_sched_runtime ;
   struct rlimit rlim[16U] ;
   struct pacct_struct pacct ;
   struct taskstats *stats ;
   unsigned int audit_tty ;
   struct tty_audit_buf *tty_audit_buf ;
   bool oom_flag_origin ;
   short oom_score_adj ;
   short oom_score_adj_min ;
   struct mm_struct *oom_mm ;
   struct mutex cred_guard_mutex ;
} __attribute__((__designated_init__));
#line 44  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/netlink.h"
struct nlmsghdr {
   __u32 nlmsg_len ;
   __u16 nlmsg_type ;
   __u16 nlmsg_flags ;
   __u32 nlmsg_seq ;
   __u32 nlmsg_pid ;
};
#line 211  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/netlink.h"
struct nlattr {
   __u16 nla_len ;
   __u16 nla_type ;
};
#line 74  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netlink.h"
struct netlink_ext_ack {
   char *_msg ;
   struct nlattr *bad_attr ;
   u8 cookie[20U] ;
   u8 cookie_len ;
};
#line 180  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netlink.h"
union __anonunion_670 {
   u8 ctx[48U] ;
   long args[6U] ;
};
#line 180  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netlink.h"
struct netlink_callback {
   struct sk_buff *skb ;
   struct nlmsghdr *nlh ;
   int (*dump)(struct sk_buff *, struct netlink_callback *) ;
   int (*done)(struct netlink_callback *) ;
   void *data ;
   struct module *module ;
   struct netlink_ext_ack *extack ;
   u16 family ;
   u16 min_dump_alloc ;
   bool strict_check ;
   u16 answer_flags ;
   unsigned int prev_seq ;
   unsigned int seq ;
   union __anonunion_670 __anonCompField_netlink_callback_153 ;
};
#line 8  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/neighbour.h"
struct ndmsg {
   __u8 ndm_family ;
   __u8 ndm_pad1 ;
   __u16 ndm_pad2 ;
   __s32 ndm_ifindex ;
   __u16 ndm_state ;
   __u8 ndm_flags ;
   __u8 ndm_type ;
};
#line 44  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if_link.h"
struct rtnl_link_stats64 {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 rx_errors ;
   __u64 tx_errors ;
   __u64 rx_dropped ;
   __u64 tx_dropped ;
   __u64 multicast ;
   __u64 collisions ;
   __u64 rx_length_errors ;
   __u64 rx_over_errors ;
   __u64 rx_crc_errors ;
   __u64 rx_frame_errors ;
   __u64 rx_fifo_errors ;
   __u64 rx_missed_errors ;
   __u64 tx_aborted_errors ;
   __u64 tx_carrier_errors ;
   __u64 tx_fifo_errors ;
   __u64 tx_heartbeat_errors ;
   __u64 tx_window_errors ;
   __u64 rx_compressed ;
   __u64 tx_compressed ;
   __u64 rx_nohandler ;
};
#line 753  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if_link.h"
struct ifla_vf_guid {
   __u32 vf ;
   __u64 guid ;
};
#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/if_link.h"
struct ifla_vf_stats {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 broadcast ;
   __u64 multicast ;
   __u64 rx_dropped ;
   __u64 tx_dropped ;
};
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/if_link.h"
struct ifla_vf_info {
   __u32 vf ;
   __u8 mac[32U] ;
   __u32 vlan ;
   __u32 qos ;
   __u32 spoofchk ;
   __u32 linkstate ;
   __u32 min_tx_rate ;
   __u32 max_tx_rate ;
   __u32 rss_query_en ;
   __u32 trusted ;
   __be16 vlan_proto ;
};
#line 118  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/hashtable.h"
struct netpoll_info;
#line 119 
struct phy_device;
#line 120 
struct dsa_port;
#line 121 
struct sfp_bus;
#line 122 
struct wireless_dev;
#line 123 
struct wpan_dev;
#line 124 
struct mpls_dev;
#line 125 
struct udp_tunnel_info;
#line 69  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
enum netdev_tx {
    __NETDEV_TX_MIN = -2147483648,
    NETDEV_TX_OK = 0,
    NETDEV_TX_BUSY = 16
};
#line 75  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
typedef enum netdev_tx netdev_tx_t;
#line 161  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct net_device_stats {
   unsigned long rx_packets ;
   unsigned long tx_packets ;
   unsigned long rx_bytes ;
   unsigned long tx_bytes ;
   unsigned long rx_errors ;
   unsigned long tx_errors ;
   unsigned long rx_dropped ;
   unsigned long tx_dropped ;
   unsigned long multicast ;
   unsigned long collisions ;
   unsigned long rx_length_errors ;
   unsigned long rx_over_errors ;
   unsigned long rx_crc_errors ;
   unsigned long rx_frame_errors ;
   unsigned long rx_fifo_errors ;
   unsigned long rx_missed_errors ;
   unsigned long tx_aborted_errors ;
   unsigned long tx_carrier_errors ;
   unsigned long tx_fifo_errors ;
   unsigned long tx_heartbeat_errors ;
   unsigned long tx_window_errors ;
   unsigned long rx_compressed ;
   unsigned long tx_compressed ;
};
#line 217  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_hw_addr_list {
   struct list_head list ;
   int count ;
};
#line 237  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct hh_cache {
   unsigned int hh_len ;
   seqlock_t hh_lock ;
   unsigned long hh_data[16U] ;
};
#line 263  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct header_ops {
   int (*create)(struct sk_buff *, struct net_device *, unsigned short , void *, void *, unsigned int ) ;
   int (*parse)(struct sk_buff *, unsigned char *) ;
   int (*cache)(struct neighbour *, struct hh_cache *, __be16 ) ;
   void (*cache_update)(struct hh_cache *, struct net_device *, unsigned char *) ;
   bool (*validate)(char *, unsigned int ) ;
   __be16 (*parse_protocol)(struct sk_buff *) ;
};
#line 372 
enum rx_handler_result {
    RX_HANDLER_CONSUMED = 0,
    RX_HANDLER_ANOTHER = 1,
    RX_HANDLER_EXACT = 2,
    RX_HANDLER_PASS = 3
};
#line 379  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
typedef enum rx_handler_result rx_handler_result_t;
#line 421  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
typedef rx_handler_result_t rx_handler_func_t(struct sk_buff **);
#line 589 
struct xdp_umem;
#line 589  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_queue {
   struct net_device *dev ;
   struct Qdisc *qdisc ;
   struct Qdisc *qdisc_sleeping ;
   struct kobject kobj ;
   int numa_node ;
   unsigned long tx_maxrate ;
   unsigned long trans_timeout ;
   struct net_device *sb_dev ;
   struct xdp_umem *umem ;
   spinlock_t _xmit_lock ;
   int xmit_lock_owner ;
   unsigned long trans_start ;
   unsigned long state ;
   struct dql dql ;
} __attribute__((__aligned__(64)));
#line 662  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct rps_map {
   unsigned int len ;
   struct callback_head rcu ;
   u16 cpus[0U] ;
};
#line 674  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct rps_dev_flow {
   u16 cpu ;
   u16 filter ;
   unsigned int last_qtail ;
};
#line 684  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct rps_dev_flow_table {
   unsigned int mask ;
   struct callback_head rcu ;
   struct rps_dev_flow flows[0U] ;
};
#line 736  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_rx_queue {
   struct rps_map *rps_map ;
   struct rps_dev_flow_table *rps_flow_table ;
   struct kobject kobj ;
   struct net_device *dev ;
   struct xdp_rxq_info xdp_rxq ;
   struct xdp_umem *umem ;
} __attribute__((__aligned__(64)));
#line 764  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct xps_map {
   unsigned int len ;
   unsigned int alloc_len ;
   struct callback_head rcu ;
   u16 queues[0U] ;
};
#line 777  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct xps_dev_maps {
   struct callback_head rcu ;
   struct xps_map *attr_map[0U] ;
};
#line 793  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_tc_txq {
   u16 count ;
   u16 offset ;
};
#line 803  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_fcoe_hbainfo {
   char manufacturer[64U] ;
   char serial_number[64U] ;
   char hardware_version[64U] ;
   char driver_version[64U] ;
   char optionrom_version[64U] ;
   char firmware_version[64U] ;
   char model[256U] ;
   char model_description[256U] ;
};
#line 820  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_phys_item_id {
   unsigned char id[32U] ;
   unsigned char id_len ;
};
#line 833 
enum tc_setup_type {
    TC_SETUP_QDISC_MQPRIO = 0,
    TC_SETUP_CLSU32 = 1,
    TC_SETUP_CLSFLOWER = 2,
    TC_SETUP_CLSMATCHALL = 3,
    TC_SETUP_CLSBPF = 4,
    TC_SETUP_BLOCK = 5,
    TC_SETUP_QDISC_CBS = 6,
    TC_SETUP_QDISC_RED = 7,
    TC_SETUP_QDISC_PRIO = 8,
    TC_SETUP_QDISC_MQ = 9,
    TC_SETUP_QDISC_ETF = 10,
    TC_SETUP_ROOT_QDISC = 11,
    TC_SETUP_QDISC_GRED = 12,
    TC_SETUP_QDISC_TAPRIO = 13,
    TC_SETUP_FT = 14
};
#line 851 
enum bpf_netdev_command {
    XDP_SETUP_PROG = 0,
    XDP_SETUP_PROG_HW = 1,
    XDP_QUERY_PROG = 2,
    XDP_QUERY_PROG_HW = 3,
    BPF_OFFLOAD_MAP_ALLOC = 4,
    BPF_OFFLOAD_MAP_FREE = 5,
    XDP_SETUP_XSK_UMEM = 6
};
#line 879  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct __anonstruct_675 {
   u32 flags ;
   struct bpf_prog *prog ;
   struct netlink_ext_ack *extack ;
};
#line 879  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct __anonstruct_676 {
   u32 prog_id ;
   u32 prog_flags ;
};
#line 879  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct __anonstruct_677 {
   struct bpf_offloaded_map *offmap ;
};
#line 879  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct __anonstruct_xsk_678 {
   struct xdp_umem *umem ;
   u16 queue_id ;
};
#line 879  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
union __anonunion_674 {
   struct __anonstruct_675 __anonCompField___anonunion_674_155 ;
   struct __anonstruct_676 __anonCompField___anonunion_674_156 ;
   struct __anonstruct_677 __anonCompField___anonunion_674_157 ;
   struct __anonstruct_xsk_678 xsk ;
};
#line 879  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_bpf {
   enum bpf_netdev_command command ;
   union __anonunion_674 __anonCompField_netdev_bpf_158 ;
};
#line 911  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct xfrmdev_ops {
   int (*xdo_dev_state_add)(struct xfrm_state *) ;
   void (*xdo_dev_state_delete)(struct xfrm_state *) ;
   void (*xdo_dev_state_free)(struct xfrm_state *) ;
   bool (*xdo_dev_offload_ok)(struct sk_buff *, struct xfrm_state *) ;
   void (*xdo_dev_state_advance_esn)(struct xfrm_state *) ;
};
#line 921  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct dev_ifalias {
   struct callback_head rcuhead ;
   char ifalias[] ;
};
#line 926 
struct tlsdev_ops;
#line 929  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_name_node {
   struct hlist_node hlist ;
   struct list_head list ;
   struct net_device *dev ;
   char *name ;
};
#line 1257 
struct devlink_port;
#line 1257  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct net_device_ops {
   int (*ndo_init)(struct net_device *) ;
   void (*ndo_uninit)(struct net_device *) ;
   int (*ndo_open)(struct net_device *) ;
   int (*ndo_stop)(struct net_device *) ;
   netdev_tx_t (*ndo_start_xmit)(struct sk_buff *, struct net_device *) ;
   netdev_features_t (*ndo_features_check)(struct sk_buff *, struct net_device *, netdev_features_t ) ;
   u16 (*ndo_select_queue)(struct net_device *, struct sk_buff *, struct net_device *) ;
   void (*ndo_change_rx_flags)(struct net_device *, int ) ;
   void (*ndo_set_rx_mode)(struct net_device *) ;
   int (*ndo_set_mac_address)(struct net_device *, void *) ;
   int (*ndo_validate_addr)(struct net_device *) ;
   int (*ndo_do_ioctl)(struct net_device *, struct ifreq *, int ) ;
   int (*ndo_set_config)(struct net_device *, struct ifmap *) ;
   int (*ndo_change_mtu)(struct net_device *, int ) ;
   int (*ndo_neigh_setup)(struct net_device *, struct neigh_parms *) ;
   void (*ndo_tx_timeout)(struct net_device *) ;
   void (*ndo_get_stats64)(struct net_device *, struct rtnl_link_stats64 *) ;
   bool (*ndo_has_offload_stats)(struct net_device *, int ) ;
   int (*ndo_get_offload_stats)(int , struct net_device *, void *) ;
   struct net_device_stats *(*ndo_get_stats)(struct net_device *) ;
   int (*ndo_vlan_rx_add_vid)(struct net_device *, __be16 , u16 ) ;
   int (*ndo_vlan_rx_kill_vid)(struct net_device *, __be16 , u16 ) ;
   void (*ndo_poll_controller)(struct net_device *) ;
   int (*ndo_netpoll_setup)(struct net_device *, struct netpoll_info *) ;
   void (*ndo_netpoll_cleanup)(struct net_device *) ;
   int (*ndo_set_vf_mac)(struct net_device *, int , u8 *) ;
   int (*ndo_set_vf_vlan)(struct net_device *, int , u16 , u8 , __be16 ) ;
   int (*ndo_set_vf_rate)(struct net_device *, int , int , int ) ;
   int (*ndo_set_vf_spoofchk)(struct net_device *, int , bool ) ;
   int (*ndo_set_vf_trust)(struct net_device *, int , bool ) ;
   int (*ndo_get_vf_config)(struct net_device *, int , struct ifla_vf_info *) ;
   int (*ndo_set_vf_link_state)(struct net_device *, int , int ) ;
   int (*ndo_get_vf_stats)(struct net_device *, int , struct ifla_vf_stats *) ;
   int (*ndo_set_vf_port)(struct net_device *, int , struct nlattr **) ;
   int (*ndo_get_vf_port)(struct net_device *, int , struct sk_buff *) ;
   int (*ndo_get_vf_guid)(struct net_device *, int , struct ifla_vf_guid *, struct ifla_vf_guid *) ;
   int (*ndo_set_vf_guid)(struct net_device *, int , u64 , int ) ;
   int (*ndo_set_vf_rss_query_en)(struct net_device *, int , bool ) ;
   int (*ndo_setup_tc)(struct net_device *, enum tc_setup_type , void *) ;
   int (*ndo_fcoe_enable)(struct net_device *) ;
   int (*ndo_fcoe_disable)(struct net_device *) ;
   int (*ndo_fcoe_ddp_setup)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_ddp_done)(struct net_device *, u16 ) ;
   int (*ndo_fcoe_ddp_target)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_get_hbainfo)(struct net_device *, struct netdev_fcoe_hbainfo *) ;
   int (*ndo_fcoe_get_wwn)(struct net_device *, u64 *, int ) ;
   int (*ndo_rx_flow_steer)(struct net_device *, struct sk_buff *, u16 , u32 ) ;
   int (*ndo_add_slave)(struct net_device *, struct net_device *, struct netlink_ext_ack *) ;
   int (*ndo_del_slave)(struct net_device *, struct net_device *) ;
   netdev_features_t (*ndo_fix_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_set_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_neigh_construct)(struct net_device *, struct neighbour *) ;
   void (*ndo_neigh_destroy)(struct net_device *, struct neighbour *) ;
   int (*ndo_fdb_add)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char *, u16 , u16 , struct netlink_ext_ack *) ;
   int (*ndo_fdb_del)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char *, u16 ) ;
   int (*ndo_fdb_dump)(struct sk_buff *, struct netlink_callback *, struct net_device *, struct net_device *, int *) ;
   int (*ndo_fdb_get)(struct sk_buff *, struct nlattr **, struct net_device *, unsigned char *, u16 , u32 , u32 , struct netlink_ext_ack *) ;
   int (*ndo_bridge_setlink)(struct net_device *, struct nlmsghdr *, u16 , struct netlink_ext_ack *) ;
   int (*ndo_bridge_getlink)(struct sk_buff *, u32 , u32 , struct net_device *, u32 , int ) ;
   int (*ndo_bridge_dellink)(struct net_device *, struct nlmsghdr *, u16 ) ;
   int (*ndo_change_carrier)(struct net_device *, bool ) ;
   int (*ndo_get_phys_port_id)(struct net_device *, struct netdev_phys_item_id *) ;
   int (*ndo_get_port_parent_id)(struct net_device *, struct netdev_phys_item_id *) ;
   int (*ndo_get_phys_port_name)(struct net_device *, char *, size_t ) ;
   void (*ndo_udp_tunnel_add)(struct net_device *, struct udp_tunnel_info *) ;
   void (*ndo_udp_tunnel_del)(struct net_device *, struct udp_tunnel_info *) ;
   void *(*ndo_dfwd_add_station)(struct net_device *, struct net_device *) ;
   void (*ndo_dfwd_del_station)(struct net_device *, void *) ;
   int (*ndo_set_tx_maxrate)(struct net_device *, int , u32 ) ;
   int (*ndo_get_iflink)(struct net_device *) ;
   int (*ndo_change_proto_down)(struct net_device *, bool ) ;
   int (*ndo_fill_metadata_dst)(struct net_device *, struct sk_buff *) ;
   void (*ndo_set_rx_headroom)(struct net_device *, int ) ;
   int (*ndo_bpf)(struct net_device *, struct netdev_bpf *) ;
   int (*ndo_xdp_xmit)(struct net_device *, int , struct xdp_frame **, u32 ) ;
   int (*ndo_xsk_wakeup)(struct net_device *, u32 , u32 ) ;
   struct devlink_port *(*ndo_get_devlink_port)(struct net_device *) ;
};
#line 1492 
enum ldv_14506 {
    NETREG_UNINITIALIZED = 0,
    NETREG_REGISTERED = 1,
    NETREG_UNREGISTERING = 2,
    NETREG_UNREGISTERED = 3,
    NETREG_RELEASED = 4,
    NETREG_DUMMY = 5
};
#line 1501 
enum ldv_14507 {
    RTNL_LINK_INITIALIZED = 0,
    RTNL_LINK_INITIALIZING = 1
};
#line 1795  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct __anonstruct_adj_list_679 {
   struct list_head upper ;
   struct list_head lower ;
};
#line 1795 
struct iw_handler_def;
#line 1795 
struct iw_public_data;
#line 1795 
struct vlan_info;
#line 1795 
struct tipc_bearer;
#line 1795 
struct in_device;
#line 1795 
struct dn_dev;
#line 1795 
struct cpu_rmap;
#line 1795 
struct pcpu_lstats;
#line 1795 
struct pcpu_sw_netstats;
#line 1795 
struct pcpu_dstats;
#line 1795  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
union __anonunion_680 {
   void *ml_priv ;
   struct pcpu_lstats *lstats ;
   struct pcpu_sw_netstats *tstats ;
   struct pcpu_dstats *dstats ;
};
#line 1795 
struct garp_port;
#line 1795 
struct mrp_port;
#line 1795  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct net_device {
   char name[16U] ;
   struct netdev_name_node *name_node ;
   struct dev_ifalias *ifalias ;
   unsigned long mem_end ;
   unsigned long mem_start ;
   unsigned long base_addr ;
   int irq ;
   unsigned long state ;
   struct list_head dev_list ;
   struct list_head napi_list ;
   struct list_head unreg_list ;
   struct list_head close_list ;
   struct list_head ptype_all ;
   struct list_head ptype_specific ;
   struct __anonstruct_adj_list_679 adj_list ;
   netdev_features_t features ;
   netdev_features_t hw_features ;
   netdev_features_t wanted_features ;
   netdev_features_t vlan_features ;
   netdev_features_t hw_enc_features ;
   netdev_features_t mpls_features ;
   netdev_features_t gso_partial_features ;
   int ifindex ;
   int group ;
   struct net_device_stats stats ;
   atomic_long_t rx_dropped ;
   atomic_long_t tx_dropped ;
   atomic_long_t rx_nohandler ;
   atomic_t carrier_up_count ;
   atomic_t carrier_down_count ;
   struct iw_handler_def *wireless_handlers ;
   struct iw_public_data *wireless_data ;
   struct net_device_ops *netdev_ops ;
   struct ethtool_ops *ethtool_ops ;
   struct l3mdev_ops *l3mdev_ops ;
   struct ndisc_ops *ndisc_ops ;
   struct xfrmdev_ops *xfrmdev_ops ;
   struct tlsdev_ops *tlsdev_ops ;
   struct header_ops *header_ops ;
   unsigned int flags ;
   unsigned int priv_flags ;
   unsigned short gflags ;
   unsigned short padded ;
   unsigned char operstate ;
   unsigned char link_mode ;
   unsigned char if_port ;
   unsigned char dma ;
   unsigned int mtu ;
   unsigned int min_mtu ;
   unsigned int max_mtu ;
   unsigned short type ;
   unsigned short hard_header_len ;
   unsigned char min_header_len ;
   unsigned short needed_headroom ;
   unsigned short needed_tailroom ;
   unsigned char perm_addr[32U] ;
   unsigned char addr_assign_type ;
   unsigned char addr_len ;
   unsigned char upper_level ;
   unsigned char lower_level ;
   unsigned short neigh_priv_len ;
   unsigned short dev_id ;
   unsigned short dev_port ;
   spinlock_t addr_list_lock ;
   unsigned char name_assign_type ;
   bool uc_promisc ;
   struct netdev_hw_addr_list uc ;
   struct netdev_hw_addr_list mc ;
   struct netdev_hw_addr_list dev_addrs ;
   struct kset *queues_kset ;
   unsigned int promiscuity ;
   unsigned int allmulti ;
   struct vlan_info *vlan_info ;
   struct dsa_port *dsa_ptr ;
   struct tipc_bearer *tipc_ptr ;
   void *atalk_ptr ;
   struct in_device *ip_ptr ;
   struct dn_dev *dn_ptr ;
   struct inet6_dev *ip6_ptr ;
   void *ax25_ptr ;
   struct wireless_dev *ieee80211_ptr ;
   struct wpan_dev *ieee802154_ptr ;
   struct mpls_dev *mpls_ptr ;
   unsigned char *dev_addr ;
   struct netdev_rx_queue *_rx ;
   unsigned int num_rx_queues ;
   unsigned int real_num_rx_queues ;
   struct bpf_prog *xdp_prog ;
   unsigned long gro_flush_timeout ;
   rx_handler_func_t *rx_handler ;
   void *rx_handler_data ;
   struct mini_Qdisc *miniq_ingress ;
   struct netdev_queue *ingress_queue ;
   struct nf_hook_entries *nf_hooks_ingress ;
   unsigned char broadcast[32U] ;
   struct cpu_rmap *rx_cpu_rmap ;
   struct hlist_node index_hlist ;
   struct netdev_queue *_tx ;
   unsigned int num_tx_queues ;
   unsigned int real_num_tx_queues ;
   struct Qdisc *qdisc ;
   struct hlist_head qdisc_hash[16U] ;
   unsigned int tx_queue_len ;
   spinlock_t tx_global_lock ;
   int watchdog_timeo ;
   struct xps_dev_maps *xps_cpus_map ;
   struct xps_dev_maps *xps_rxqs_map ;
   struct mini_Qdisc *miniq_egress ;
   struct timer_list watchdog_timer ;
   int *pcpu_refcnt ;
   struct list_head todo_list ;
   struct list_head link_watch_list ;
   enum ldv_14506 reg_state : 8 ;
   bool dismantle ;
   enum ldv_14507 rtnl_link_state : 16 ;
   bool needs_free_netdev ;
   void (*priv_destructor)(struct net_device *) ;
   struct netpoll_info *npinfo ;
   possible_net_t nd_net ;
   union __anonunion_680 __anonCompField_net_device_159 ;
   struct garp_port *garp_port ;
   struct mrp_port *mrp_port ;
   struct device dev ;
   struct attribute_group *sysfs_groups[4U] ;
   struct attribute_group *sysfs_rx_queue_group ;
   struct rtnl_link_ops *rtnl_link_ops ;
   unsigned int gso_max_size ;
   u16 gso_max_segs ;
   struct dcbnl_rtnl_ops *dcbnl_ops ;
   s16 num_tc ;
   struct netdev_tc_txq tc_to_txq[16U] ;
   u8 prio_tc_map[16U] ;
   unsigned int fcoe_ddp_xid ;
   struct netprio_map *priomap ;
   struct phy_device *phydev ;
   struct sfp_bus *sfp_bus ;
   struct lock_class_key qdisc_tx_busylock_key ;
   struct lock_class_key qdisc_running_key ;
   struct lock_class_key qdisc_xmit_lock_key ;
   struct lock_class_key addr_list_lock_key ;
   bool proto_down ;
   unsigned int wol_enabled : 1 ;
};
#line 2400  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct pcpu_sw_netstats {
   u64 rx_packets ;
   u64 rx_bytes ;
   u64 tx_packets ;
   u64 tx_bytes ;
   struct u64_stats_sync syncp ;
} __attribute__((__aligned__(32)));
#line 2408  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct pcpu_lstats {
   u64_stats_t packets ;
   u64_stats_t bytes ;
   struct u64_stats_sync syncp ;
} __attribute__((__aligned__(16)));
#line 534  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/etherdevice.h"
typedef unsigned long kernel_ulong_t;
#line 38  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mod_devicetable.h"
struct pci_device_id {
   __u32 vendor ;
   __u32 device ;
   __u32 subvendor ;
   __u32 subdevice ;
   __u32 class ;
   __u32 class_mask ;
   kernel_ulong_t driver_data ;
};
#line 210  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mod_devicetable.h"
struct acpi_device_id {
   __u8 id[9U] ;
   kernel_ulong_t driver_data ;
   __u32 cls ;
   __u32 cls_msk ;
};
#line 260  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mod_devicetable.h"
struct of_device_id {
   char name[32U] ;
   char type[32U] ;
   char compatible[128U] ;
   void *data ;
};
#line 62  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pci.h"
struct hotplug_slot;
#line 62  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pci.h"
struct pci_slot {
   struct pci_bus *bus ;
   struct list_head list ;
   struct hotplug_slot *hotplug ;
   unsigned char number ;
   struct kobject kobj ;
};
#line 99  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pci.h"
typedef int pci_power_t;
#line 153  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pci.h"
typedef unsigned int pci_channel_state_t;
#line 162 
enum pci_channel_state {
    pci_channel_io_normal = 1,
    pci_channel_io_frozen = 2,
    pci_channel_io_perm_failure = 3
};
#line 181  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pci.h"
typedef unsigned short pci_dev_flags_t;
#line 207  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pci.h"
typedef unsigned short pci_bus_flags_t;
#line 282 
struct pcie_link_state;
#line 283 
struct pci_vpd;
#line 284 
struct pci_sriov;
#line 285 
struct pci_p2pdma;
#line 290 
struct aer_stats;
#line 290 
struct pci_driver;
#line 290  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pci.h"
union __anonunion_692 {
   struct pci_sriov *sriov ;
   struct pci_dev *physfn ;
};
#line 290  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pci.h"
struct pci_dev {
   struct list_head bus_list ;
   struct pci_bus *bus ;
   struct pci_bus *subordinate ;
   void *sysdata ;
   struct proc_dir_entry *procent ;
   struct pci_slot *slot ;
   unsigned int devfn ;
   unsigned short vendor ;
   unsigned short device ;
   unsigned short subsystem_vendor ;
   unsigned short subsystem_device ;
   unsigned int class ;
   u8 revision ;
   u8 hdr_type ;
   u16 aer_cap ;
   struct aer_stats *aer_stats ;
   u8 pcie_cap ;
   u8 msi_cap ;
   u8 msix_cap ;
   u8 pcie_mpss : 3 ;
   u8 rom_base_reg ;
   u8 pin ;
   u16 pcie_flags_reg ;
   unsigned long *dma_alias_mask ;
   struct pci_driver *driver ;
   u64 dma_mask ;
   struct device_dma_parameters dma_parms ;
   pci_power_t current_state ;
   unsigned int imm_ready : 1 ;
   u8 pm_cap ;
   unsigned int pme_support : 5 ;
   unsigned int pme_poll : 1 ;
   unsigned int d1_support : 1 ;
   unsigned int d2_support : 1 ;
   unsigned int no_d1d2 : 1 ;
   unsigned int no_d3cold : 1 ;
   unsigned int bridge_d3 : 1 ;
   unsigned int d3cold_allowed : 1 ;
   unsigned int mmio_always_on : 1 ;
   unsigned int wakeup_prepared : 1 ;
   unsigned int runtime_d3cold : 1 ;
   unsigned int skip_bus_pm : 1 ;
   unsigned int ignore_hotplug : 1 ;
   unsigned int hotplug_user_indicators : 1 ;
   unsigned int clear_retrain_link : 1 ;
   unsigned int d3_delay ;
   unsigned int d3cold_delay ;
   struct pcie_link_state *link_state ;
   unsigned int ltr_path : 1 ;
   unsigned int eetlp_prefix_path : 1 ;
   pci_channel_state_t error_state ;
   struct device dev ;
   int cfg_size ;
   unsigned int irq ;
   struct resource resource[17U] ;
   bool match_driver ;
   unsigned int transparent : 1 ;
   unsigned int io_window : 1 ;
   unsigned int pref_window : 1 ;
   unsigned int pref_64_window : 1 ;
   unsigned int multifunction : 1 ;
   unsigned int is_busmaster : 1 ;
   unsigned int no_msi : 1 ;
   unsigned int no_64bit_msi : 1 ;
   unsigned int block_cfg_access : 1 ;
   unsigned int broken_parity_status : 1 ;
   unsigned int irq_reroute_variant : 2 ;
   unsigned int msi_enabled : 1 ;
   unsigned int msix_enabled : 1 ;
   unsigned int ari_enabled : 1 ;
   unsigned int ats_enabled : 1 ;
   unsigned int pasid_enabled : 1 ;
   unsigned int pri_enabled : 1 ;
   unsigned int is_managed : 1 ;
   unsigned int needs_freset : 1 ;
   unsigned int state_saved : 1 ;
   unsigned int is_physfn : 1 ;
   unsigned int is_virtfn : 1 ;
   unsigned int reset_fn : 1 ;
   unsigned int is_hotplug_bridge : 1 ;
   unsigned int shpc_managed : 1 ;
   unsigned int is_thunderbolt : 1 ;
   unsigned int untrusted : 1 ;
   unsigned int __aer_firmware_first_valid : 1 ;
   unsigned int __aer_firmware_first : 1 ;
   unsigned int broken_intx_masking : 1 ;
   unsigned int io_window_1k : 1 ;
   unsigned int irq_managed : 1 ;
   unsigned int non_compliant_bars : 1 ;
   unsigned int is_probed : 1 ;
   unsigned int link_active_reporting : 1 ;
   unsigned int no_vf_scan : 1 ;
   pci_dev_flags_t dev_flags ;
   atomic_t enable_cnt ;
   u32 saved_config_space[16U] ;
   struct hlist_head saved_cap_space ;
   struct bin_attribute *rom_attr ;
   int rom_attr_enabled ;
   struct bin_attribute *res_attr[17U] ;
   struct bin_attribute *res_attr_wc[17U] ;
   unsigned int broken_cmd_compl : 1 ;
   unsigned int ptm_root : 1 ;
   unsigned int ptm_enabled : 1 ;
   u8 ptm_granularity ;
   struct attribute_group **msi_irq_groups ;
   struct pci_vpd *vpd ;
   union __anonunion_692 __anonCompField_pci_dev_160 ;
   u16 ats_cap ;
   u8 ats_stu ;
   u16 pri_cap ;
   u32 pri_reqs_alloc ;
   unsigned int pasid_required : 1 ;
   u16 pasid_cap ;
   u16 pasid_features ;
   struct pci_p2pdma *p2pdma ;
   phys_addr_t rom ;
   size_t romlen ;
   char *driver_override ;
   unsigned long priv_flags ;
};
#line 493 
struct pci_ops;
#line 493 
struct msi_controller;
#line 571  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pci.h"
struct pci_bus {
   struct list_head node ;
   struct pci_bus *parent ;
   struct list_head children ;
   struct list_head devices ;
   struct pci_dev *self ;
   struct list_head slots ;
   struct resource *resource[4U] ;
   struct list_head resources ;
   struct resource busn_res ;
   struct pci_ops *ops ;
   struct msi_controller *msi ;
   void *sysdata ;
   struct proc_dir_entry *procdir ;
   unsigned char number ;
   unsigned char primary ;
   unsigned char max_bus_speed ;
   unsigned char cur_bus_speed ;
   char name[48U] ;
   unsigned short bridge_ctl ;
   pci_bus_flags_t bus_flags ;
   struct device *bridge ;
   struct device dev ;
   struct bin_attribute *legacy_io ;
   struct bin_attribute *legacy_mem ;
   unsigned int is_added : 1 ;
};
#line 697  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pci.h"
struct pci_ops {
   int (*add_bus)(struct pci_bus *) ;
   void (*remove_bus)(struct pci_bus *) ;
   void *(*map_bus)(struct pci_bus *, unsigned int , int ) ;
   int (*read)(struct pci_bus *, unsigned int , int , int , u32 *) ;
   int (*write)(struct pci_bus *, unsigned int , int , int , u32 ) ;
};
#line 725  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pci.h"
struct pci_dynids {
   spinlock_t lock ;
   struct list_head list ;
};
#line 729  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pci.h"
typedef unsigned int pci_ers_result_t;
#line 761  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pci.h"
struct pci_error_handlers {
   pci_ers_result_t (*error_detected)(struct pci_dev *, enum pci_channel_state ) ;
   pci_ers_result_t (*mmio_enabled)(struct pci_dev *) ;
   pci_ers_result_t (*slot_reset)(struct pci_dev *) ;
   void (*reset_prepare)(struct pci_dev *) ;
   void (*reset_done)(struct pci_dev *) ;
   void (*resume)(struct pci_dev *) ;
};
#line 824  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pci.h"
struct pci_driver {
   struct list_head node ;
   char *name ;
   struct pci_device_id *id_table ;
   int (*probe)(struct pci_dev *, struct pci_device_id *) ;
   void (*remove)(struct pci_dev *) ;
   int (*suspend)(struct pci_dev *, pm_message_t ) ;
   int (*resume)(struct pci_dev *) ;
   void (*shutdown)(struct pci_dev *) ;
   int (*sriov_configure)(struct pci_dev *, int ) ;
   struct pci_error_handlers *err_handler ;
   struct attribute_group **groups ;
   struct device_driver driver ;
   struct pci_dynids dynids ;
};
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_rss.h"
struct aq_rss_parameters {
   u16 base_cpu_number ;
   u16 indirection_table_size ;
   u16 hash_secret_key_size ;
   u32 hash_secret_key[10U] ;
   u8 indirection_table[64U] ;
};
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.h"
struct hw_atl_txd_s {
   u64 buf_addr ;
   u32 ctl ;
   u32 ctl2 ;
} __attribute__((__packed__));
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.h"
struct hw_atl_rxd_s {
   u64 buf_addr ;
   u64 hdr_addr ;
} __attribute__((__packed__));
#line 38  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.h"
struct hw_atl_rxd_wb_s {
   u32 type ;
   u32 rss_hash ;
   u16 status ;
   u16 pkt_len ;
   u16 next_desc_ptr ;
   __le16 vlan ;
} __attribute__((__packed__));
#line 55  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.h"
struct hw_atl_stats_s {
   u32 uprc ;
   u32 mprc ;
   u32 bprc ;
   u32 erpt ;
   u32 uptc ;
   u32 mptc ;
   u32 bptc ;
   u32 erpr ;
   u32 mbtc ;
   u32 bbtc ;
   u32 mbrc ;
   u32 bbrc ;
   u32 ubrc ;
   u32 ubtc ;
   u32 dpc ;
} __attribute__((__packed__));
#line 73  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.h"
struct __anonstruct_700 {
   u32 reason_arp_v4_pkt : 1 ;
   u32 reason_ipv4_ping_pkt : 1 ;
   u32 reason_ipv6_ns_pkt : 1 ;
   u32 reason_ipv6_ping_pkt : 1 ;
   u32 reason_link_up : 1 ;
   u32 reason_link_down : 1 ;
   u32 reason_maximum : 1 ;
};
#line 73  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.h"
union __anonunion_699 {
   u32 pattern_mask ;
   struct __anonstruct_700 __anonCompField___anonunion_699_161 ;
};
#line 73  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.h"
union __anonunion_701 {
   u32 offload_mask ;
};
#line 73  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.h"
struct drv_msg_enable_wakeup {
   union __anonunion_699 __anonCompField_drv_msg_enable_wakeup_162 ;
   union __anonunion_701 __anonCompField_drv_msg_enable_wakeup_163 ;
} __attribute__((__packed__));
#line 93  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.h"
struct magic_packet_pattern_s {
   u8 mac_addr[6U] ;
} __attribute__((__packed__));
#line 97  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.h"
struct drv_msg_wol_add {
   u32 priority ;
   u32 packet_type ;
   u32 pattern_id ;
   u32 next_pattern_offset ;
   struct magic_packet_pattern_s magic_packet_pattern ;
} __attribute__((__packed__));
#line 106  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.h"
struct drv_msg_wol_remove {
   u32 id ;
} __attribute__((__packed__));
#line 110  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.h"
struct hw_atl_utils_mbox_header {
   u32 version ;
   u32 transaction_id ;
   u32 error ;
} __attribute__((__packed__));
#line 116  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.h"
struct hw_atl_ptp_offset {
   u16 ingress_100 ;
   u16 egress_100 ;
   u16 ingress_1000 ;
   u16 egress_1000 ;
   u16 ingress_2500 ;
   u16 egress_2500 ;
   u16 ingress_5000 ;
   u16 egress_5000 ;
   u16 ingress_10000 ;
   u16 egress_10000 ;
} __attribute__((__packed__));
#line 129  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.h"
struct hw_atl_cable_diag {
   u8 fault ;
   u8 distance ;
   u8 far_distance ;
   u8 reserved ;
} __attribute__((__packed__));
#line 135 
enum gpio_pin_function {
    GPIO_PIN_FUNCTION_NC = 0,
    GPIO_PIN_FUNCTION_VAUX_ENABLE = 1,
    GPIO_PIN_FUNCTION_EFUSE_BURN_ENABLE = 2,
    GPIO_PIN_FUNCTION_SFP_PLUS_DETECT = 3,
    GPIO_PIN_FUNCTION_TX_DISABLE = 4,
    GPIO_PIN_FUNCTION_RATE_SEL_0 = 5,
    GPIO_PIN_FUNCTION_RATE_SEL_1 = 6,
    GPIO_PIN_FUNCTION_TX_FAULT = 7,
    GPIO_PIN_FUNCTION_PTP0 = 8,
    GPIO_PIN_FUNCTION_PTP1 = 9,
    GPIO_PIN_FUNCTION_PTP2 = 10,
    GPIO_PIN_FUNCTION_SIZE = 11
};
#line 151  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.h"
struct hw_atl_info {
   u8 reserved[6U] ;
   u16 phy_fault_code ;
   u16 phy_temperature ;
   u8 cable_len ;
   u8 reserved1 ;
   struct hw_atl_cable_diag cable_diag_data[4U] ;
   struct hw_atl_ptp_offset ptp_offset ;
   u8 reserved2[12U] ;
   u32 caps_lo ;
   u32 caps_hi ;
   u32 reserved_datapath ;
   u32 reserved3[7U] ;
   u32 reserved_simpleresp[3U] ;
   u32 reserved_linkstat[7U] ;
   u32 reserved_wakes_count ;
   u32 reserved_eee_stat[12U] ;
   u32 tx_stuck_cnt ;
   u32 setting_address ;
   u32 setting_length ;
   u32 caps_ex ;
   enum gpio_pin_function gpio_pin[3U] ;
   u32 pcie_aer_dump[18U] ;
   u16 snr_margin[4U] ;
} __attribute__((__packed__));
#line 177  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.h"
struct hw_atl_utils_mbox {
   struct hw_atl_utils_mbox_header header ;
   struct hw_atl_stats_s stats ;
   struct hw_atl_info info ;
} __attribute__((__packed__));
#line 183  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.h"
struct offload_ip_info {
   u8 v4_local_addr_count ;
   u8 v4_addr_count ;
   u8 v6_local_addr_count ;
   u8 v6_addr_count ;
   u32 v4_addr ;
   u32 v4_prefix ;
   u32 v6_addr ;
   u32 v6_prefix ;
} __attribute__((__packed__));
#line 194  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.h"
struct offload_port_info {
   u16 udp_port_count ;
   u16 tcp_port_count ;
   u32 udp_port ;
   u32 tcp_port ;
} __attribute__((__packed__));
#line 201  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.h"
struct offload_ka_info {
   u16 v4_ka_count ;
   u16 v6_ka_count ;
   u32 retry_count ;
   u32 retry_interval ;
   u32 v4_ka ;
   u32 v6_ka ;
} __attribute__((__packed__));
#line 210  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.h"
struct offload_rr_info {
   u32 rr_count ;
   u32 rr_buf_len ;
   u32 rr_id_x ;
   u32 rr_buf ;
} __attribute__((__packed__));
#line 217  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.h"
struct offload_info {
   u32 version ;
   u32 len ;
   u8 mac_addr[6U] ;
   u8 reserved[2U] ;
   struct offload_ip_info ips ;
   struct offload_port_info ports ;
   struct offload_ka_info kas ;
   struct offload_rr_info rrs ;
   u8 buf[0U] ;
} __attribute__((__packed__));
#line 231  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.h"
union __anonunion_702 {
   struct drv_msg_wol_add msg_wol_add ;
   struct drv_msg_wol_remove msg_wol_remove ;
   struct drv_msg_enable_wakeup msg_enable_wakeup ;
   struct offload_info fw2x_offloads ;
};
#line 231  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.h"
struct hw_atl_utils_fw_rpc {
   u32 msg_id ;
   union __anonunion_702 __anonCompField_hw_atl_utils_fw_rpc_164 ;
} __attribute__((__packed__));
#line 245  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.h"
struct hw_fw_request_ptp_gpio_ctrl {
   u32 index ;
   u32 period ;
   u64 start ;
} __attribute__((__packed__));
#line 251  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.h"
struct hw_fw_request_ptp_adj_freq {
   u32 ns_mac ;
   u32 fns_mac ;
   u32 ns_phy ;
   u32 fns_phy ;
   u32 mac_ns_adj ;
   u32 mac_fns_adj ;
} __attribute__((__packed__));
#line 260  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.h"
struct hw_fw_request_ptp_adj_clock {
   u32 ns ;
   u32 sec ;
   int sign ;
} __attribute__((__packed__));
#line 270  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.h"
union __anonunion_703 {
   struct hw_fw_request_ptp_gpio_ctrl ptp_gpio_ctrl ;
   struct hw_fw_request_ptp_adj_freq ptp_adj_freq ;
   struct hw_fw_request_ptp_adj_clock ptp_adj_clock ;
};
#line 270  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.h"
struct hw_fw_request_iface {
   u32 msg_id ;
   union __anonunion_703 __anonCompField_hw_fw_request_iface_165 ;
} __attribute__((__packed__));
#line 330  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.h"
struct aq_rx_filter_vlan {
   u8 enable ;
   u8 location ;
   u16 vlan_id ;
   u8 queue ;
};
#line 337  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.h"
struct aq_rx_filter_l2 {
   s8 queue ;
   u8 location ;
   u8 user_priority_en ;
   u8 user_priority ;
   u16 ethertype ;
};
#line 345  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.h"
struct aq_rx_filter_l3l4 {
   u32 cmd ;
   u8 location ;
   u32 ip_dst[4U] ;
   u32 ip_src[4U] ;
   u16 p_dst ;
   u16 p_src ;
   u8 is_ipv6 ;
};
#line 374 
enum hal_atl_utils_fw_state_e {
    MPI_DEINIT = 0,
    MPI_RESET = 1,
    MPI_INIT = 2,
    MPI_POWER = 4
};
#line 509 
struct aq_hw_s;
#line 510 
struct aq_fw_ops;
#line 511 
struct aq_hw_caps_s;
#line 512 
struct aq_hw_link_status_s;
#line 594 
struct aq_stats_s;
#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_hw.h"
struct aq_hw_caps_s {
   u64 hw_features ;
   u64 link_speed_msk ;
   unsigned int hw_priv_flags ;
   u32 media_type ;
   u32 rxds_max ;
   u32 txds_max ;
   u32 rxds_min ;
   u32 txds_min ;
   u32 txhwb_alignment ;
   u32 irq_mask ;
   u32 vecs ;
   u32 mtu ;
   u32 mac_regs_count ;
   u32 hw_alive_check_addr ;
   u8 msix_irqs ;
   u8 tcs ;
   u8 rxd_alignment ;
   u8 rxd_size ;
   u8 txd_alignment ;
   u8 txd_size ;
   u8 tx_rings ;
   u8 rx_rings ;
   bool flow_control ;
   bool is_64_dma ;
};
#line 60  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_hw.h"
struct aq_hw_link_status_s {
   unsigned int mbps ;
};
#line 64  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_hw.h"
struct aq_stats_s {
   u64 uprc ;
   u64 mprc ;
   u64 bprc ;
   u64 erpt ;
   u64 uptc ;
   u64 mptc ;
   u64 bptc ;
   u64 erpr ;
   u64 mbtc ;
   u64 bbtc ;
   u64 mbrc ;
   u64 bbrc ;
   u64 ubrc ;
   u64 ubtc ;
   u64 dpc ;
   u64 dma_pkt_rc ;
   u64 dma_pkt_tc ;
   u64 dma_oct_rc ;
   u64 dma_oct_tc ;
};
#line 139 
struct aq_nic_cfg_s;
#line 139  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_hw.h"
struct aq_hw_s {
   atomic_t flags ;
   u8 rbl_enabled : 1 ;
   struct aq_nic_cfg_s *aq_nic_cfg ;
   struct aq_fw_ops *aq_fw_ops ;
   void *mmio ;
   struct aq_hw_link_status_s aq_link_status ;
   struct hw_atl_utils_mbox mbox ;
   struct hw_atl_stats_s last_stats ;
   struct aq_stats_s curr_stats ;
   u64 speed ;
   u32 itr_tx ;
   u32 itr_rx ;
   unsigned int chip_features ;
   u32 fw_ver_actual ;
   atomic_t dpc ;
   u32 mbox_addr ;
   u32 rpc_addr ;
   u32 settings_addr ;
   u32 rpc_tid ;
   struct hw_atl_utils_fw_rpc rpc ;
   s64 ptp_clk_offset ;
   u16 phy_id ;
};
#line 163 
struct aq_ring_s;
#line 164 
struct aq_ring_param_s;
#line 169  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_hw.h"
struct aq_hw_ops {
   int (*hw_ring_tx_xmit)(struct aq_hw_s *, struct aq_ring_s *, unsigned int ) ;
   int (*hw_ring_rx_receive)(struct aq_hw_s *, struct aq_ring_s *) ;
   int (*hw_ring_rx_fill)(struct aq_hw_s *, struct aq_ring_s *, unsigned int ) ;
   int (*hw_ring_tx_head_update)(struct aq_hw_s *, struct aq_ring_s *) ;
   int (*hw_set_mac_address)(struct aq_hw_s *, u8 *) ;
   int (*hw_reset)(struct aq_hw_s *) ;
   int (*hw_init)(struct aq_hw_s *, u8 *) ;
   int (*hw_start)(struct aq_hw_s *) ;
   int (*hw_stop)(struct aq_hw_s *) ;
   int (*hw_ring_tx_init)(struct aq_hw_s *, struct aq_ring_s *, struct aq_ring_param_s *) ;
   int (*hw_ring_tx_start)(struct aq_hw_s *, struct aq_ring_s *) ;
   int (*hw_ring_tx_stop)(struct aq_hw_s *, struct aq_ring_s *) ;
   int (*hw_ring_rx_init)(struct aq_hw_s *, struct aq_ring_s *, struct aq_ring_param_s *) ;
   int (*hw_ring_rx_start)(struct aq_hw_s *, struct aq_ring_s *) ;
   int (*hw_ring_rx_stop)(struct aq_hw_s *, struct aq_ring_s *) ;
   int (*hw_irq_enable)(struct aq_hw_s *, u64 ) ;
   int (*hw_irq_disable)(struct aq_hw_s *, u64 ) ;
   int (*hw_irq_read)(struct aq_hw_s *, u64 *) ;
   int (*hw_packet_filter_set)(struct aq_hw_s *, unsigned int ) ;
   int (*hw_filter_l3l4_set)(struct aq_hw_s *, struct aq_rx_filter_l3l4 *) ;
   int (*hw_filter_l3l4_clear)(struct aq_hw_s *, struct aq_rx_filter_l3l4 *) ;
   int (*hw_filter_l2_set)(struct aq_hw_s *, struct aq_rx_filter_l2 *) ;
   int (*hw_filter_l2_clear)(struct aq_hw_s *, struct aq_rx_filter_l2 *) ;
   int (*hw_filter_vlan_set)(struct aq_hw_s *, struct aq_rx_filter_vlan *) ;
   int (*hw_filter_vlan_ctrl)(struct aq_hw_s *, bool ) ;
   int (*hw_multicast_list_set)(struct aq_hw_s *, u8 (*)[6U], u32 ) ;
   int (*hw_interrupt_moderation_set)(struct aq_hw_s *) ;
   int (*hw_rss_set)(struct aq_hw_s *, struct aq_rss_parameters *) ;
   int (*hw_rss_hash_set)(struct aq_hw_s *, struct aq_rss_parameters *) ;
   int (*hw_get_regs)(struct aq_hw_s *, struct aq_hw_caps_s *, u32 *) ;
   struct aq_stats_s *(*hw_get_hw_stats)(struct aq_hw_s *) ;
   int (*hw_get_fw_version)(struct aq_hw_s *, u32 *) ;
   int (*hw_set_offload)(struct aq_hw_s *, struct aq_nic_cfg_s *) ;
   int (*hw_tx_tc_mode_get)(struct aq_hw_s *, u32 *) ;
   int (*hw_rx_tc_mode_get)(struct aq_hw_s *, u32 *) ;
   int (*hw_ring_hwts_rx_fill)(struct aq_hw_s *, struct aq_ring_s *) ;
   int (*hw_ring_hwts_rx_receive)(struct aq_hw_s *, struct aq_ring_s *) ;
   void (*hw_get_ptp_ts)(struct aq_hw_s *, u64 *) ;
   int (*hw_adj_clock_freq)(struct aq_hw_s *, s32 ) ;
   int (*hw_adj_sys_clock)(struct aq_hw_s *, s64 ) ;
   int (*hw_set_sys_clock)(struct aq_hw_s *, u64 , u64 ) ;
   int (*hw_ts_to_sys_clock)(struct aq_hw_s *, u64 , u64 *) ;
   int (*hw_gpio_pulse)(struct aq_hw_s *, u32 , u64 , u32 ) ;
   int (*hw_extts_gpio_enable)(struct aq_hw_s *, u32 , u32 ) ;
   int (*hw_get_sync_ts)(struct aq_hw_s *, u64 *) ;
   u16 (*rx_extract_ts)(struct aq_hw_s *, u8 *, unsigned int , u64 *) ;
   int (*extract_hwts)(struct aq_hw_s *, u8 *, unsigned int , u64 *) ;
   int (*hw_set_fc)(struct aq_hw_s *, u32 , u32 ) ;
   int (*hw_set_loopback)(struct aq_hw_s *, u32 , bool ) ;
};
#line 301  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_hw.h"
struct aq_fw_ops {
   int (*init)(struct aq_hw_s *) ;
   int (*deinit)(struct aq_hw_s *) ;
   int (*reset)(struct aq_hw_s *) ;
   int (*renegotiate)(struct aq_hw_s *) ;
   int (*get_mac_permanent)(struct aq_hw_s *, u8 *) ;
   int (*set_link_speed)(struct aq_hw_s *, u32 ) ;
   int (*set_state)(struct aq_hw_s *, enum hal_atl_utils_fw_state_e ) ;
   int (*update_link_status)(struct aq_hw_s *) ;
   int (*update_stats)(struct aq_hw_s *) ;
   int (*get_phy_temp)(struct aq_hw_s *, int *) ;
   u32 (*get_flow_control)(struct aq_hw_s *, u32 *) ;
   int (*set_flow_control)(struct aq_hw_s *) ;
   int (*led_control)(struct aq_hw_s *, u32 ) ;
   int (*set_phyloopback)(struct aq_hw_s *, u32 , bool ) ;
   int (*set_power)(struct aq_hw_s *, unsigned int , u8 *) ;
   int (*send_fw_request)(struct aq_hw_s *, struct hw_fw_request_iface *, size_t ) ;
   void (*enable_ptp)(struct aq_hw_s *, int ) ;
   int (*set_eee_rate)(struct aq_hw_s *, u32 ) ;
   int (*get_eee_rate)(struct aq_hw_s *, u32 *, u32 *) ;
};
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ring.h"
struct aq_rxpage {
   struct page *page ;
   dma_addr_t daddr ;
   unsigned int order ;
   unsigned int pg_off ;
};
#line 36  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ring.h"
struct __anonstruct_705 {
   u32 rss_hash ;
   u16 next ;
   u8 is_hash_l4 ;
   u8 rsvd1 ;
   struct aq_rxpage rxdata ;
   u16 vlan_rx_tag ;
};
#line 36  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ring.h"
struct __anonstruct_706 {
   dma_addr_t pa_eop ;
   struct sk_buff *skb ;
};
#line 36  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ring.h"
struct __anonstruct_707 {
   u32 mss ;
   u8 len_l2 ;
   u8 len_l3 ;
   u8 len_l4 ;
   u8 is_ipv6 : 1 ;
   u8 rsvd2 : 7 ;
   u32 len_pkt ;
   u16 vlan_tx_tag ;
};
#line 36  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ring.h"
union __anonunion_704 {
   dma_addr_t pa ;
   struct __anonstruct_705 __anonCompField___anonunion_704_166 ;
   struct __anonstruct_706 __anonCompField___anonunion_704_167 ;
   struct __anonstruct_707 __anonCompField___anonunion_704_168 ;
};
#line 36  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ring.h"
struct __anonstruct_709 {
   u32 len : 16 ;
   u32 is_ip_cso : 1 ;
   u32 is_udp_cso : 1 ;
   u32 is_tcp_cso : 1 ;
   u32 is_cso_err : 1 ;
   u32 is_sop : 1 ;
   u32 is_eop : 1 ;
   u32 is_gso_tcp : 1 ;
   u32 is_gso_udp : 1 ;
   u32 is_mapped : 1 ;
   u32 is_cleaned : 1 ;
   u32 is_error : 1 ;
   u32 is_vlan : 1 ;
   u32 rsvd3 : 4 ;
   u16 eop_index ;
   u16 rsvd4 ;
};
#line 36  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ring.h"
union __anonunion_708 {
   struct __anonstruct_709 __anonCompField___anonunion_708_170 ;
   u64 flags ;
};
#line 36  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ring.h"
struct aq_ring_buff_s {
   union __anonunion_704 __anonCompField_aq_ring_buff_s_169 ;
   union __anonunion_708 __anonCompField_aq_ring_buff_s_171 ;
} __attribute__((__packed__));
#line 89  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ring.h"
struct aq_ring_stats_rx_s {
   u64 errors ;
   u64 packets ;
   u64 bytes ;
   u64 lro_packets ;
   u64 jumbo_packets ;
   u64 pg_losts ;
   u64 pg_flips ;
   u64 pg_reuses ;
};
#line 100  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ring.h"
struct aq_ring_stats_tx_s {
   u64 errors ;
   u64 packets ;
   u64 bytes ;
   u64 queue_restarts ;
};
#line 107  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ring.h"
union aq_ring_stats_s {
   struct aq_ring_stats_rx_s rx ;
   struct aq_ring_stats_tx_s tx ;
};
#line 112 
struct aq_nic_s;
#line 112  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ring.h"
struct aq_ring_s {
   struct aq_ring_buff_s *buff_ring ;
   u8 *dx_ring ;
   struct aq_nic_s *aq_nic ;
   unsigned int idx ;
   unsigned int hw_head ;
   unsigned int sw_head ;
   unsigned int sw_tail ;
   unsigned int size ;
   unsigned int dx_size ;
   unsigned int page_order ;
   union aq_ring_stats_s stats ;
   dma_addr_t dx_ring_pa ;
};
#line 128  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ring.h"
struct aq_ring_param_s {
   unsigned int vec_idx ;
   unsigned int cpu ;
   cpumask_t affinity_mask ;
};
#line 186 
enum aq_fc_mode {
    AQ_NIC_FC_OFF = 0,
    AQ_NIC_FC_TX = 1,
    AQ_NIC_FC_RX = 2,
    AQ_NIC_FC_FULL = 3
};
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_nic.h"
struct aq_fc_info {
   enum aq_fc_mode req ;
   enum aq_fc_mode cur ;
};
#line 35  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_nic.h"
struct aq_nic_cfg_s {
   struct aq_hw_caps_s *aq_hw_caps ;
   u64 features ;
   u32 rxds ;
   u32 txds ;
   u32 vecs ;
   u32 link_irq_vec ;
   u32 irq_type ;
   u32 itr ;
   u16 rx_itr ;
   u16 tx_itr ;
   u32 rxpageorder ;
   u32 num_rss_queues ;
   u32 mtu ;
   struct aq_fc_info fc ;
   u32 link_speed_msk ;
   u32 wol ;
   u8 is_vlan_rx_strip ;
   u8 is_vlan_tx_insert ;
   bool is_vlan_force_promisc ;
   u16 is_mc_list_enabled ;
   u16 mc_list_count ;
   bool is_autoneg ;
   bool is_polling ;
   bool is_rss ;
   bool is_lro ;
   u32 priv_flags ;
   u8 tcs ;
   struct aq_rss_parameters aq_rss ;
   u32 eee_speeds ;
};
#line 82  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_nic.h"
struct aq_hw_rx_fl2 {
   struct aq_rx_filter_vlan aq_vlans[16U] ;
};
#line 86  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_nic.h"
struct aq_hw_rx_fl3l4 {
   u8 active_ipv4 ;
   u8 active_ipv6 : 2 ;
   u8 is_ipv6 ;
   u8 reserved_count ;
};
#line 93  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_nic.h"
struct aq_hw_rx_fltrs_s {
   struct hlist_head filter_list ;
   u16 active_filters ;
   struct aq_hw_rx_fl2 fl2 ;
   struct aq_hw_rx_fl3l4 fl3l4 ;
   u8 fet_reserved_count ;
};
#line 102  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_nic.h"
struct __anonstruct_mc_list_710 {
   u32 count ;
   u8 ar[32U][6U] ;
};
#line 102  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_nic.h"
struct aq_nic_s {
   atomic_t flags ;
   u32 msg_enable ;
   struct aq_vec_s *aq_vec[8U] ;
   struct aq_ring_s *aq_ring_tx[64U] ;
   struct aq_hw_s *aq_hw ;
   struct net_device *ndev ;
   unsigned int aq_vecs ;
   unsigned int packet_filter ;
   unsigned int power_state ;
   u8 port ;
   struct aq_hw_ops *aq_hw_ops ;
   struct aq_fw_ops *aq_fw_ops ;
   struct aq_nic_cfg_s aq_nic_cfg ;
   struct timer_list service_timer ;
   struct work_struct service_task ;
   struct timer_list polling_timer ;
   struct aq_hw_link_status_s link_status ;
   struct __anonstruct_mc_list_710 mc_list ;
   unsigned long active_vlans[64U] ;
   struct pci_dev *pdev ;
   unsigned int msix_entry_mask ;
   u32 irqvecs ;
   struct mutex fwreq_mutex ;
   struct aq_ptp_s *aq_ptp ;
   struct aq_hw_rx_fltrs_s aq_hw_rx_fltrs ;
};
#line 381  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.h"
enum hw_atl_fw2x_rate {
    FW2X_RATE_100M = 32,
    FW2X_RATE_1G = 256,
    FW2X_RATE_2G5 = 512,
    FW2X_RATE_5G = 1024,
    FW2X_RATE_10G = 2048
};
#line 60  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/export.h"
struct kernel_symbol {
   int value_offset ;
   int name_offset ;
   int namespace_offset ;
};
#line 136  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/init.h"
typedef void (*ctor_fn_t)(void);
#line 87  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jump_label.h"
struct jump_entry;
#line 87 
struct static_key_mod;
#line 87  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jump_label.h"
union __anonunion_1430 {
   unsigned long type ;
   struct jump_entry *entries ;
   struct static_key_mod *next ;
};
#line 87  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jump_label.h"
struct static_key {
   atomic_t enabled ;
   union __anonunion_1430 __anonCompField_static_key_4 ;
};
#line 122  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jump_label.h"
struct jump_entry {
   s32 code ;
   s32 target ;
   long key ;
};
#line 557  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernel.h"
enum system_states {
    SYSTEM_BOOTING = 0,
    SYSTEM_SCHEDULING = 1,
    SYSTEM_RUNNING = 2,
    SYSTEM_HALT = 3,
    SYSTEM_POWER_OFF = 4,
    SYSTEM_RESTART = 5,
    SYSTEM_SUSPEND = 6
};
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/bug.h"
struct bug_entry {
   int bug_addr_disp ;
   int file_disp ;
   unsigned short line ;
   unsigned short flags ;
};
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/atomic.h"
union __anonunion___u_1489 {
   int __val ;
   char __c[1U] ;
};
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/tracepoint-defs.h"
struct tracepoint_func {
   void *func ;
   void *data ;
   int prio ;
};
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/tracepoint-defs.h"
struct tracepoint {
   char *name ;
   struct static_key key ;
   int (*regfunc)(void) ;
   void (*unregfunc)(void) ;
   struct tracepoint_func *funcs ;
};
#line 37  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/tracepoint-defs.h"
typedef int tracepoint_ptr_t;
#line 44  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/tracepoint-defs.h"
struct bpf_raw_event_map {
   struct tracepoint *tp ;
   void *bpf_func ;
   u32 num_args ;
   u32 writable_size ;
} __attribute__((__aligned__(32)));
#line 73  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/orc_types.h"
struct orc_entry {
   s16 sp_offset ;
   s16 bp_offset ;
   unsigned int sp_reg : 4 ;
   unsigned int bp_reg : 4 ;
   unsigned int type : 2 ;
   unsigned int end : 1 ;
} __attribute__((__packed__));
#line 48  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/thread.h"
enum irqreturn {
    IRQ_NONE = 0,
    IRQ_HANDLED = 1,
    IRQ_WAKE_THREAD = 2
};
#line 54  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/thread.h"
typedef enum irqreturn irqreturn_t;
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 67  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rcu_segcblist.h"
struct rcu_segcblist {
   struct callback_head *head ;
   struct callback_head **tails[4U] ;
   unsigned long gp_seq[4U] ;
   atomic_long_t len ;
   long len_lazy ;
   u8 enabled ;
   u8 offloaded ;
};
#line 80 
struct srcu_struct;
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/srcu.h"
struct srcu_node;
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/srcutree.h"
struct srcu_data {
   unsigned long srcu_lock_count[2U] ;
   unsigned long srcu_unlock_count[2U] ;
   spinlock_t lock ;
   struct rcu_segcblist srcu_cblist ;
   unsigned long srcu_gp_seq_needed ;
   unsigned long srcu_gp_seq_needed_exp ;
   bool srcu_cblist_invoking ;
   struct timer_list delay_work ;
   struct work_struct work ;
   struct callback_head srcu_barrier_head ;
   struct srcu_node *mynode ;
   unsigned long grpmask ;
   int cpu ;
   struct srcu_struct *ssp ;
};
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/srcutree.h"
struct srcu_node {
   spinlock_t lock ;
   unsigned long srcu_have_cbs[4U] ;
   unsigned long srcu_data_have_cbs[4U] ;
   unsigned long srcu_gp_seq_needed_exp ;
   struct srcu_node *srcu_parent ;
   int grplo ;
   int grphi ;
};
#line 64  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/srcutree.h"
struct srcu_struct {
   struct srcu_node node[521U] ;
   struct srcu_node *level[4U] ;
   struct mutex srcu_cb_mutex ;
   spinlock_t lock ;
   struct mutex srcu_gp_mutex ;
   unsigned int srcu_idx ;
   unsigned long srcu_gp_seq ;
   unsigned long srcu_gp_seq_needed ;
   unsigned long srcu_gp_seq_needed_exp ;
   unsigned long srcu_last_gp_end ;
   struct srcu_data *sda ;
   unsigned long srcu_barrier_seq ;
   struct mutex srcu_barrier_mutex ;
   struct completion srcu_barrier_completion ;
   atomic_t srcu_barrier_cpu_cnt ;
   struct delayed_work work ;
   struct lockdep_map dep_map ;
};
#line 292  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/interrupt.h"
struct irq_affinity {
   unsigned int pre_vectors ;
   unsigned int post_vectors ;
   unsigned int nr_sets ;
   unsigned int set_size[4U] ;
   void (*calc_sets)(struct irq_affinity *, unsigned int ) ;
   void *priv ;
};
#line 13  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/vdso.h"
struct vdso_image {
   void *data ;
   unsigned long size ;
   unsigned long alt ;
   unsigned long alt_len ;
   long sym_vvar_start ;
   long sym_vvar_page ;
   long sym_pvclock_page ;
   long sym_hvclock_page ;
   long sym_VDSO32_NOTE_MASK ;
   long sym___kernel_sigreturn ;
   long sym___kernel_rt_sigreturn ;
   long sym___kernel_vsyscall ;
   long sym_int80_landing_pad ;
};
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
typedef __u64 Elf64_Addr;
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
typedef __u16 Elf64_Half;
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
typedef __u64 Elf64_Off;
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
typedef __u32 Elf64_Word;
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
typedef __u64 Elf64_Xword;
#line 192  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
struct elf64_sym {
   Elf64_Word st_name ;
   unsigned char st_info ;
   unsigned char st_other ;
   Elf64_Half st_shndx ;
   Elf64_Addr st_value ;
   Elf64_Xword st_size ;
};
#line 200  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
typedef struct elf64_sym Elf64_Sym;
#line 221  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
struct elf64_hdr {
   unsigned char e_ident[16U] ;
   Elf64_Half e_type ;
   Elf64_Half e_machine ;
   Elf64_Word e_version ;
   Elf64_Addr e_entry ;
   Elf64_Off e_phoff ;
   Elf64_Off e_shoff ;
   Elf64_Word e_flags ;
   Elf64_Half e_ehsize ;
   Elf64_Half e_phentsize ;
   Elf64_Half e_phnum ;
   Elf64_Half e_shentsize ;
   Elf64_Half e_shnum ;
   Elf64_Half e_shstrndx ;
};
#line 237  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
typedef struct elf64_hdr Elf64_Ehdr;
#line 316  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
struct elf64_shdr {
   Elf64_Word sh_name ;
   Elf64_Word sh_type ;
   Elf64_Xword sh_flags ;
   Elf64_Addr sh_addr ;
   Elf64_Off sh_offset ;
   Elf64_Xword sh_size ;
   Elf64_Word sh_link ;
   Elf64_Word sh_info ;
   Elf64_Xword sh_addralign ;
   Elf64_Xword sh_entsize ;
};
#line 328  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
typedef struct elf64_shdr Elf64_Shdr;
#line 247  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kobject.h"
struct kernel_param;
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/moduleparam.h"
struct kernel_param_ops {
   unsigned int flags ;
   int (*set)(char *, struct kernel_param *) ;
   int (*get)(char *, struct kernel_param *) ;
   void (*free)(void *) ;
};
#line 69 
struct kparam_string;
#line 69 
struct kparam_array;
#line 69  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/moduleparam.h"
union __anonunion_1683 {
   void *arg ;
   struct kparam_string *str ;
   struct kparam_array *arr ;
};
#line 69  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/moduleparam.h"
struct kernel_param {
   char *name ;
   struct module *mod ;
   struct kernel_param_ops *ops ;
   u16 perm ;
   s8 level ;
   u8 flags ;
   union __anonunion_1683 __anonCompField_kernel_param_52 ;
};
#line 86  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/moduleparam.h"
struct kparam_string {
   unsigned int maxlen ;
   char *string ;
};
#line 92  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/moduleparam.h"
struct kparam_array {
   unsigned int max ;
   unsigned int elemsize ;
   unsigned int *num ;
   struct kernel_param_ops *ops ;
   void *elem ;
};
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/error-injection.h"
struct error_injection_entry {
   unsigned long addr ;
   int etype ;
};
#line 8  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/module.h"
struct mod_arch_specific {
   unsigned int num_orcs ;
   int *orc_unwind_ip ;
   struct orc_entry *orc_unwind ;
};
#line 45  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
struct module_param_attrs;
#line 45  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
struct module_kobject {
   struct kobject kobj ;
   struct module *mod ;
   struct kobject *drivers_dir ;
   struct module_param_attrs *mp ;
   struct completion *kobj_completion ;
} __attribute__((__designated_init__));
#line 53  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
struct module_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct module_attribute *, struct module_kobject *, char *) ;
   ssize_t (*store)(struct module_attribute *, struct module_kobject *, char *, size_t ) ;
   void (*setup)(struct module *, char *) ;
   int (*test)(struct module *) ;
   void (*free)(struct module *) ;
};
#line 297 
enum module_state {
    MODULE_STATE_LIVE = 0,
    MODULE_STATE_COMING = 1,
    MODULE_STATE_GOING = 2,
    MODULE_STATE_UNFORMED = 3
};
#line 305  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
struct mod_tree_node {
   struct module *mod ;
   struct latch_tree_node node ;
};
#line 310  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
struct module_layout {
   void *base ;
   unsigned int size ;
   unsigned int text_size ;
   unsigned int ro_size ;
   unsigned int ro_after_init_size ;
   struct mod_tree_node mtn ;
};
#line 334  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
struct mod_kallsyms {
   Elf64_Sym *symtab ;
   unsigned int num_symtab ;
   char *strtab ;
   char *typetab ;
};
#line 342  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
struct klp_modinfo {
   Elf64_Ehdr hdr ;
   Elf64_Shdr *sechdrs ;
   char *secstrings ;
   unsigned int symndx ;
};
#line 350 
struct module_sect_attrs;
#line 350 
struct module_notes_attrs;
#line 350 
struct trace_event_call;
#line 350 
struct trace_eval_map;
#line 350  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
struct module {
   enum module_state state ;
   struct list_head list ;
   char name[56U] ;
   struct module_kobject mkobj ;
   struct module_attribute *modinfo_attrs ;
   char *version ;
   char *srcversion ;
   struct kobject *holders_dir ;
   struct kernel_symbol *syms ;
   s32 *crcs ;
   unsigned int num_syms ;
   struct mutex param_lock ;
   struct kernel_param *kp ;
   unsigned int num_kp ;
   unsigned int num_gpl_syms ;
   struct kernel_symbol *gpl_syms ;
   s32 *gpl_crcs ;
   struct kernel_symbol *unused_syms ;
   s32 *unused_crcs ;
   unsigned int num_unused_syms ;
   unsigned int num_unused_gpl_syms ;
   struct kernel_symbol *unused_gpl_syms ;
   s32 *unused_gpl_crcs ;
   bool sig_ok ;
   bool async_probe_requested ;
   struct kernel_symbol *gpl_future_syms ;
   s32 *gpl_future_crcs ;
   unsigned int num_gpl_future_syms ;
   unsigned int num_exentries ;
   struct exception_table_entry *extable ;
   int (*init)(void) ;
   struct module_layout core_layout ;
   struct module_layout init_layout ;
   struct mod_arch_specific arch ;
   unsigned long taints ;
   unsigned int num_bugs ;
   struct list_head bug_list ;
   struct bug_entry *bug_table ;
   struct mod_kallsyms *kallsyms ;
   struct mod_kallsyms core_kallsyms ;
   struct module_sect_attrs *sect_attrs ;
   struct module_notes_attrs *notes_attrs ;
   char *args ;
   void *percpu ;
   unsigned int percpu_size ;
   unsigned int num_tracepoints ;
   tracepoint_ptr_t *tracepoints_ptrs ;
   unsigned int num_srcu_structs ;
   struct srcu_struct **srcu_struct_ptrs ;
   unsigned int num_bpf_raw_events ;
   struct bpf_raw_event_map *bpf_raw_events ;
   struct jump_entry *jump_entries ;
   unsigned int num_jump_entries ;
   unsigned int num_trace_bprintk_fmt ;
   char **trace_bprintk_fmt_start ;
   struct trace_event_call **trace_events ;
   unsigned int num_trace_events ;
   struct trace_eval_map **trace_evals ;
   unsigned int num_trace_evals ;
   unsigned int num_ftrace_callsites ;
   unsigned long *ftrace_callsites ;
   bool klp ;
   bool klp_alive ;
   struct klp_modinfo *klp_info ;
   struct list_head source_list ;
   struct list_head target_list ;
   void (*exit)(void) ;
   atomic_t refcnt ;
   ctor_fn_t *ctors ;
   unsigned int num_ctors ;
   struct error_injection_entry *ei_funcs ;
   unsigned int num_ei_funcs ;
} __attribute__((__designated_init__, __aligned__(64)));
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_pci_func.h"
struct aq_board_revision_s {
   unsigned short devid ;
   unsigned short revision ;
   struct aq_hw_ops *ops ;
   struct aq_hw_caps_s *caps ;
};
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/atomic.h"
union __anonunion___u_2199 {
   int __val ;
   char __c[1U] ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/nodemask.h"
enum node_states {
    N_POSSIBLE = 0,
    N_ONLINE = 1,
    N_NORMAL_MEMORY = 2,
    N_HIGH_MEMORY = 2,
    N_MEMORY = 3,
    N_CPU = 4,
    NR_NODE_STATES = 5
};
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 41  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netfilter/nf_conntrack_common.h"
struct napi_struct;
#line 1165  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
enum pkt_hash_types {
    PKT_HASH_TYPE_NONE = 0,
    PKT_HASH_TYPE_L2 = 1,
    PKT_HASH_TYPE_L3 = 2,
    PKT_HASH_TYPE_L4 = 3
};
#line 302  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct gro_list {
   struct list_head list ;
   int count ;
};
#line 316  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct napi_struct {
   struct list_head poll_list ;
   unsigned long state ;
   int weight ;
   unsigned long gro_bitmask ;
   int (*poll)(struct napi_struct *, int ) ;
   int poll_owner ;
   struct net_device *dev ;
   struct gro_list gro_hash[8U] ;
   struct sk_buff *skb ;
   struct list_head rx_list ;
   int rx_count ;
   struct hrtimer timer ;
   struct list_head dev_list ;
   struct hlist_node napi_hash_node ;
   unsigned int napi_id ;
};
#line 362 
enum gro_result {
    GRO_MERGED = 0,
    GRO_MERGED_FREE = 1,
    GRO_HELD = 2,
    GRO_NORMAL = 3,
    GRO_DROP = 4,
    GRO_CONSUMED = 5
};
#line 371  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
typedef enum gro_result gro_result_t;
#line 3610 
enum skb_free_reason {
    SKB_REASON_CONSUMED = 0,
    SKB_REASON_DROPPED = 1
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/types.h"
typedef __u64 __be64;
#line 35  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/types.h"
typedef __u16 __sum16;
#line 154  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef unsigned int slab_flags_t;
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/atomic.h"
union __anonunion___u_2909 {
   int __val ;
   char __c[1U] ;
};
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct free_area {
   struct list_head free_list[6U] ;
   unsigned long nr_free ;
};
#line 158 
struct pglist_data;
#line 168  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct zone_padding {
   char x[0U] ;
} __attribute__((__aligned__(4096)));
#line 285  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct zone_reclaim_stat {
   unsigned long recent_rotated[2U] ;
   unsigned long recent_scanned[2U] ;
};
#line 304  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct lruvec {
   struct list_head lists[5U] ;
   struct zone_reclaim_stat reclaim_stat ;
   atomic_long_t inactive_age ;
   unsigned long refaults ;
   unsigned long flags ;
   struct pglist_data *pgdat ;
};
#line 340  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct per_cpu_pages {
   int count ;
   int high ;
   int batch ;
   struct list_head lists[3U] ;
};
#line 349  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct per_cpu_pageset {
   struct per_cpu_pages pcp ;
   s8 expire ;
   u16 vm_numa_stat_diff[6U] ;
   s8 stat_threshold ;
   s8 vm_stat_diff[13U] ;
};
#line 361  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct per_cpu_nodestat {
   s8 stat_threshold ;
   s8 vm_node_stat_diff[32U] ;
};
#line 365 
enum zone_type {
    ZONE_DMA = 0,
    ZONE_DMA32 = 1,
    ZONE_NORMAL = 2,
    ZONE_MOVABLE = 3,
    ZONE_DEVICE = 4,
    __MAX_NR_ZONES = 5
};
#line 432  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct zone {
   unsigned long _watermark[3U] ;
   unsigned long watermark_boost ;
   unsigned long nr_reserved_highatomic ;
   long lowmem_reserve[5U] ;
   int node ;
   struct pglist_data *zone_pgdat ;
   struct per_cpu_pageset *pageset ;
   unsigned long zone_start_pfn ;
   atomic_long_t managed_pages ;
   unsigned long spanned_pages ;
   unsigned long present_pages ;
   char *name ;
   unsigned long nr_isolate_pageblock ;
   seqlock_t span_seqlock ;
   int initialized ;
   struct zone_padding _pad1_ ;
   struct free_area free_area[11U] ;
   unsigned long flags ;
   spinlock_t lock ;
   struct zone_padding _pad2_ ;
   unsigned long percpu_drift_mark ;
   unsigned long compact_cached_free_pfn ;
   unsigned long compact_cached_migrate_pfn[2U] ;
   unsigned long compact_init_migrate_pfn ;
   unsigned long compact_init_free_pfn ;
   unsigned int compact_considered ;
   unsigned int compact_defer_shift ;
   int compact_order_failed ;
   bool compact_blockskip_flush ;
   bool contiguous ;
   struct zone_padding _pad3_ ;
   atomic_long_t vm_stat[13U] ;
   atomic_long_t vm_numa_stat[6U] ;
} __attribute__((__aligned__(4096)));
#line 665  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct zoneref {
   struct zone *zone ;
   int zone_idx ;
};
#line 684  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct zonelist {
   struct zoneref _zonerefs[5121U] ;
};
#line 694  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct deferred_split {
   spinlock_t split_queue_lock ;
   struct list_head split_queue ;
   unsigned long split_queue_len ;
};
#line 710  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct pglist_data {
   struct zone node_zones[5U] ;
   struct zonelist node_zonelists[2U] ;
   int nr_zones ;
   spinlock_t node_size_lock ;
   unsigned long node_start_pfn ;
   unsigned long node_present_pages ;
   unsigned long node_spanned_pages ;
   int node_id ;
   wait_queue_head_t kswapd_wait ;
   wait_queue_head_t pfmemalloc_wait ;
   struct task_struct *kswapd ;
   int kswapd_order ;
   enum zone_type kswapd_classzone_idx ;
   int kswapd_failures ;
   int kcompactd_max_order ;
   enum zone_type kcompactd_classzone_idx ;
   wait_queue_head_t kcompactd_wait ;
   struct task_struct *kcompactd ;
   unsigned long totalreserve_pages ;
   unsigned long min_unmapped_pages ;
   unsigned long min_slab_pages ;
   struct zone_padding _pad1_ ;
   spinlock_t lru_lock ;
   unsigned long first_deferred_pfn ;
   struct deferred_split deferred_split_queue ;
   struct lruvec __lruvec ;
   unsigned long flags ;
   struct zone_padding _pad2_ ;
   struct per_cpu_nodestat *per_cpu_nodestats ;
   atomic_long_t vm_stat[32U] ;
};
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/smp.h"
struct __call_single_data {
   struct llist_node llist ;
   void (*func)(void *) ;
   void *info ;
   unsigned int flags ;
};
#line 286  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fs.h"
struct bio;
#line 288 
struct hd_geometry;
#line 339  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
union __anonunion_arg_3257 {
   char *buf ;
   void *data ;
};
#line 339  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct __anonstruct_read_descriptor_t_3256 {
   size_t written ;
   size_t count ;
   union __anonunion_arg_3257 arg ;
   int error ;
};
#line 339  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
typedef struct __anonstruct_read_descriptor_t_3256 read_descriptor_t;
#line 1771 
struct block_device_operations;
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bvec.h"
struct bvec_iter {
   sector_t bi_sector ;
   unsigned int bi_size ;
   unsigned int bi_idx ;
   unsigned int bi_bvec_done ;
};
#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/socket.h"
struct socket;
#line 49  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/socket.h"
struct msghdr {
   void *msg_name ;
   int msg_namelen ;
   struct iov_iter msg_iter ;
   void *msg_control ;
   __kernel_size_t msg_controllen ;
   unsigned int msg_flags ;
   struct kiocb *msg_iocb ;
};
#line 201  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/random.h"
enum ldv_8871 {
    SS_FREE = 0,
    SS_UNCONNECTED = 1,
    SS_CONNECTING = 2,
    SS_CONNECTED = 3,
    SS_DISCONNECTING = 4
};
#line 209  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/random.h"
typedef enum ldv_8871 socket_state;
#line 94  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/net.h"
struct socket_wq {
   wait_queue_head_t wait ;
   struct fasync_struct *fasync_list ;
   unsigned long flags ;
   struct callback_head rcu ;
} __attribute__((__aligned__(64)));
#line 112 
struct proto_ops;
#line 112  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/net.h"
struct socket {
   socket_state state ;
   short type ;
   unsigned long flags ;
   struct file *file ;
   struct sock *sk ;
   struct proto_ops *ops ;
   struct socket_wq wq ;
};
#line 135  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/net.h"
struct proto_ops {
   int family ;
   struct module *owner ;
   int (*release)(struct socket *) ;
   int (*bind)(struct socket *, struct sockaddr *, int ) ;
   int (*connect)(struct socket *, struct sockaddr *, int , int ) ;
   int (*socketpair)(struct socket *, struct socket *) ;
   int (*accept)(struct socket *, struct socket *, int , bool ) ;
   int (*getname)(struct socket *, struct sockaddr *, int ) ;
   __poll_t (*poll)(struct file *, struct socket *, struct poll_table_struct *) ;
   int (*ioctl)(struct socket *, unsigned int , unsigned long ) ;
   int (*compat_ioctl)(struct socket *, unsigned int , unsigned long ) ;
   int (*gettstamp)(struct socket *, void *, bool , bool ) ;
   int (*listen)(struct socket *, int ) ;
   int (*shutdown)(struct socket *, int ) ;
   int (*setsockopt)(struct socket *, int , int , char *, unsigned int ) ;
   int (*getsockopt)(struct socket *, int , int , char *, int *) ;
   int (*compat_setsockopt)(struct socket *, int , int , char *, unsigned int ) ;
   int (*compat_getsockopt)(struct socket *, int , int , char *, int *) ;
   int (*sendmsg)(struct socket *, struct msghdr *, size_t ) ;
   int (*recvmsg)(struct socket *, struct msghdr *, size_t , int ) ;
   int (*mmap)(struct file *, struct socket *, struct vm_area_struct *) ;
   ssize_t (*sendpage)(struct socket *, struct page *, int , size_t , int ) ;
   ssize_t (*splice_read)(struct socket *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ) ;
   int (*set_peek_off)(struct sock *, int ) ;
   int (*peek_len)(struct socket *) ;
   int (*read_sock)(struct sock *, read_descriptor_t *, int (*)(read_descriptor_t *, struct sk_buff *, unsigned int , size_t )) ;
   int (*sendpage_locked)(struct sock *, struct page *, int , size_t , int ) ;
   int (*sendmsg_locked)(struct sock *, struct msghdr *, size_t ) ;
   int (*set_rcvlowat)(struct sock *, int ) ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct flowi_tunnel {
   __be64 tun_id ;
};
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct flowi_common {
   int flowic_oif ;
   int flowic_iif ;
   __u32 flowic_mark ;
   __u8 flowic_tos ;
   __u8 flowic_scope ;
   __u8 flowic_proto ;
   __u8 flowic_flags ;
   __u32 flowic_secid ;
   kuid_t flowic_uid ;
   struct flowi_tunnel flowic_tun_key ;
   __u32 flowic_multipath_hash ;
};
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct __anonstruct_ports_3320 {
   __be16 dport ;
   __be16 sport ;
};
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct __anonstruct_icmpt_3321 {
   __u8 type ;
   __u8 code ;
};
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct __anonstruct_dnports_3322 {
   __le16 dport ;
   __le16 sport ;
};
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct __anonstruct_mht_3323 {
   __u8 type ;
};
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
union flowi_uli {
   struct __anonstruct_ports_3320 ports ;
   struct __anonstruct_icmpt_3321 icmpt ;
   struct __anonstruct_dnports_3322 dnports ;
   __be32 spi ;
   __be32 gre_key ;
   struct __anonstruct_mht_3323 mht ;
};
#line 70  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct flowi4 {
   struct flowi_common __fl_common ;
   __be32 saddr ;
   __be32 daddr ;
   union flowi_uli uli ;
} __attribute__((__aligned__(8)));
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct flowi6 {
   struct flowi_common __fl_common ;
   struct in6_addr daddr ;
   struct in6_addr saddr ;
   __be32 flowlabel ;
   union flowi_uli uli ;
   __u32 mp_hash ;
} __attribute__((__aligned__(8)));
#line 158  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct flowidn {
   struct flowi_common __fl_common ;
   __le16 daddr ;
   __le16 saddr ;
   union flowi_uli uli ;
} __attribute__((__aligned__(8)));
#line 173  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
union __anonunion_u_3324 {
   struct flowi_common __fl_common ;
   struct flowi4 ip4 ;
   struct flowi6 ip6 ;
   struct flowidn dn ;
};
#line 173  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct flowi {
   union __anonunion_u_3324 u ;
} __attribute__((__aligned__(8)));
#line 313  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
typedef struct bio_vec skb_frag_t;
#line 416  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
struct skb_shared_hwtstamps {
   ktime_t hwtstamp ;
};
#line 510  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
struct skb_shared_info {
   __u8 __unused ;
   __u8 meta_len ;
   __u8 nr_frags ;
   __u8 tx_flags ;
   unsigned short gso_size ;
   unsigned short gso_segs ;
   struct sk_buff *frag_list ;
   struct skb_shared_hwtstamps hwtstamps ;
   unsigned int gso_type ;
   u32 tskey ;
   atomic_t dataref ;
   void *destructor_arg ;
   skb_frag_t frags[17U] ;
};
#line 139  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
enum bpf_prog_type {
    BPF_PROG_TYPE_UNSPEC = 0,
    BPF_PROG_TYPE_SOCKET_FILTER = 1,
    BPF_PROG_TYPE_KPROBE = 2,
    BPF_PROG_TYPE_SCHED_CLS = 3,
    BPF_PROG_TYPE_SCHED_ACT = 4,
    BPF_PROG_TYPE_TRACEPOINT = 5,
    BPF_PROG_TYPE_XDP = 6,
    BPF_PROG_TYPE_PERF_EVENT = 7,
    BPF_PROG_TYPE_CGROUP_SKB = 8,
    BPF_PROG_TYPE_CGROUP_SOCK = 9,
    BPF_PROG_TYPE_LWT_IN = 10,
    BPF_PROG_TYPE_LWT_OUT = 11,
    BPF_PROG_TYPE_LWT_XMIT = 12,
    BPF_PROG_TYPE_SOCK_OPS = 13,
    BPF_PROG_TYPE_SK_SKB = 14,
    BPF_PROG_TYPE_CGROUP_DEVICE = 15,
    BPF_PROG_TYPE_SK_MSG = 16,
    BPF_PROG_TYPE_RAW_TRACEPOINT = 17,
    BPF_PROG_TYPE_CGROUP_SOCK_ADDR = 18,
    BPF_PROG_TYPE_LWT_SEG6LOCAL = 19,
    BPF_PROG_TYPE_LIRC_MODE2 = 20,
    BPF_PROG_TYPE_SK_REUSEPORT = 21,
    BPF_PROG_TYPE_FLOW_DISSECTOR = 22,
    BPF_PROG_TYPE_CGROUP_SYSCTL = 23,
    BPF_PROG_TYPE_RAW_TRACEPOINT_WRITABLE = 24,
    BPF_PROG_TYPE_CGROUP_SOCKOPT = 25,
    BPF_PROG_TYPE_TRACING = 26
};
#line 169 
enum bpf_attach_type {
    BPF_CGROUP_INET_INGRESS = 0,
    BPF_CGROUP_INET_EGRESS = 1,
    BPF_CGROUP_INET_SOCK_CREATE = 2,
    BPF_CGROUP_SOCK_OPS = 3,
    BPF_SK_SKB_STREAM_PARSER = 4,
    BPF_SK_SKB_STREAM_VERDICT = 5,
    BPF_CGROUP_DEVICE = 6,
    BPF_SK_MSG_VERDICT = 7,
    BPF_CGROUP_INET4_BIND = 8,
    BPF_CGROUP_INET6_BIND = 9,
    BPF_CGROUP_INET4_CONNECT = 10,
    BPF_CGROUP_INET6_CONNECT = 11,
    BPF_CGROUP_INET4_POST_BIND = 12,
    BPF_CGROUP_INET6_POST_BIND = 13,
    BPF_CGROUP_UDP4_SENDMSG = 14,
    BPF_CGROUP_UDP6_SENDMSG = 15,
    BPF_LIRC_MODE2 = 16,
    BPF_FLOW_DISSECTOR = 17,
    BPF_CGROUP_SYSCTL = 18,
    BPF_CGROUP_UDP4_RECVMSG = 19,
    BPF_CGROUP_UDP6_RECVMSG = 20,
    BPF_CGROUP_GETSOCKOPT = 21,
    BPF_CGROUP_SETSOCKOPT = 22,
    BPF_TRACE_RAW_TP = 23,
    BPF_TRACE_FENTRY = 24,
    BPF_TRACE_FEXIT = 25,
    __MAX_BPF_ATTACH_TYPE = 26
};
#line 783  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct __anonstruct_3489 {
   u8 is_data ;
   u8 padding ;
   u16 prioidx ;
   u32 classid ;
} __attribute__((__packed__));
#line 783  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
union __anonunion_3488 {
   struct __anonstruct_3489 __anonCompField___anonunion_3488_151 ;
   u64 val ;
};
#line 783  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct sock_cgroup_data {
   union __anonunion_3488 __anonCompField_sock_cgroup_data_152 ;
};
#line 160  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/security.h"
struct xfrm_policy;
#line 178 
struct request_sock;
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/pkt_sched.h"
struct tc_stats {
   __u64 bytes ;
   __u32 packets ;
   __u32 drops ;
   __u32 overlimits ;
   __u32 bps ;
   __u32 pps ;
   __u32 qlen ;
   __u32 backlog ;
};
#line 102  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/pkt_sched.h"
struct tc_sizespec {
   unsigned char cell_log ;
   unsigned char size_log ;
   short cell_align ;
   int overhead ;
   unsigned int linklayer ;
   unsigned int mpu ;
   unsigned int mtu ;
   unsigned int tsize ;
};
#line 567  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/rtnetlink.h"
struct tcmsg {
   unsigned char tcm_family ;
   unsigned char tcm__pad1 ;
   unsigned short tcm__pad2 ;
   int tcm_ifindex ;
   __u32 tcm_handle ;
   __u32 tcm_parent ;
   __u32 tcm_info ;
};
#line 62  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/net_tstamp.h"
struct hwtstamp_config {
   int flags ;
   int tx_type ;
   int rx_filter ;
};
#line 86  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ip.h"
struct iphdr {
   __u8 ihl : 4 ;
   __u8 version : 4 ;
   __u8 tos ;
   __be16 tot_len ;
   __be16 id ;
   __be16 frag_off ;
   __u8 ttl ;
   __u8 protocol ;
   __sum16 check ;
   __be32 saddr ;
   __be32 daddr ;
};
#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/page_counter.h"
struct page_counter {
   atomic_long_t usage ;
   unsigned long min ;
   unsigned long low ;
   unsigned long max ;
   struct page_counter *parent ;
   unsigned long emin ;
   atomic_long_t min_usage ;
   atomic_long_t children_min_usage ;
   unsigned long elow ;
   atomic_long_t low_usage ;
   atomic_long_t children_low_usage ;
   unsigned long watermark ;
   unsigned long failcnt ;
};
#line 66 
struct eventfd_ctx;
#line 13  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/vmpressure.h"
struct vmpressure {
   unsigned long scanned ;
   unsigned long reclaimed ;
   unsigned long tree_scanned ;
   unsigned long tree_reclaimed ;
   spinlock_t sr_lock ;
   struct list_head events ;
   struct mutex events_lock ;
   struct work_struct work ;
};
#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/flex_proportions.h"
struct fprop_global {
   struct percpu_counter events ;
   unsigned int period ;
   seqcount_t sequence ;
};
#line 76  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/flex_proportions.h"
struct fprop_local_percpu {
   struct percpu_counter events ;
   unsigned int period ;
   raw_spinlock_t lock ;
};
#line 116  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/flex_proportions.h"
typedef int congested_fn(void *, int );
#line 45  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backing-dev-defs.h"
enum wb_reason {
    WB_REASON_BACKGROUND = 0,
    WB_REASON_VMSCAN = 1,
    WB_REASON_SYNC = 2,
    WB_REASON_PERIODIC = 3,
    WB_REASON_LAPTOP_TIMER = 4,
    WB_REASON_FREE_MORE_MEM = 5,
    WB_REASON_FS_FREE_SPACE = 6,
    WB_REASON_FORKER_THREAD = 7,
    WB_REASON_FOREIGN_FLUSH = 8,
    WB_REASON_MAX = 9
};
#line 71  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backing-dev-defs.h"
struct wb_completion {
   atomic_t cnt ;
   wait_queue_head_t *waitq ;
};
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backing-dev-defs.h"
struct bdi_writeback_congested {
   unsigned long state ;
   refcount_t refcnt ;
   struct backing_dev_info *__bdi ;
   int blkcg_id ;
   struct rb_node rb_node ;
};
#line 130  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backing-dev-defs.h"
union __anonunion_3551 {
   struct work_struct release_work ;
   struct callback_head rcu ;
};
#line 130  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backing-dev-defs.h"
struct bdi_writeback {
   struct backing_dev_info *bdi ;
   unsigned long state ;
   unsigned long last_old_flush ;
   struct list_head b_dirty ;
   struct list_head b_io ;
   struct list_head b_more_io ;
   struct list_head b_dirty_time ;
   spinlock_t list_lock ;
   struct percpu_counter stat[4U] ;
   struct bdi_writeback_congested *congested ;
   unsigned long bw_time_stamp ;
   unsigned long dirtied_stamp ;
   unsigned long written_stamp ;
   unsigned long write_bandwidth ;
   unsigned long avg_write_bandwidth ;
   unsigned long dirty_ratelimit ;
   unsigned long balanced_dirty_ratelimit ;
   struct fprop_local_percpu completions ;
   int dirty_exceeded ;
   enum wb_reason start_all_reason ;
   spinlock_t work_lock ;
   struct list_head work_list ;
   struct delayed_work dwork ;
   unsigned long dirty_sleep ;
   struct list_head bdi_node ;
   struct percpu_ref refcnt ;
   struct fprop_local_percpu memcg_completions ;
   struct cgroup_subsys_state *memcg_css ;
   struct cgroup_subsys_state *blkcg_css ;
   struct list_head memcg_node ;
   struct list_head blkcg_node ;
   union __anonunion_3551 __anonCompField_bdi_writeback_167 ;
};
#line 188  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backing-dev-defs.h"
struct backing_dev_info {
   u64 id ;
   struct rb_node rb_node ;
   struct list_head bdi_list ;
   unsigned long ra_pages ;
   unsigned long io_pages ;
   congested_fn *congested_fn ;
   void *congested_data ;
   char *name ;
   struct kref refcnt ;
   unsigned int capabilities ;
   unsigned int min_ratio ;
   unsigned int max_ratio ;
   unsigned int max_prop_frac ;
   atomic_long_t tot_write_bandwidth ;
   struct bdi_writeback wb ;
   struct list_head wb_list ;
   struct xarray cgwb_tree ;
   struct rb_root cgwb_congested_tree ;
   struct mutex cgwb_release_mutex ;
   struct rw_semaphore wb_switch_rwsem ;
   wait_queue_head_t wb_waitq ;
   struct device *dev ;
   struct device *owner ;
   struct timer_list laptop_mode_wb_timer ;
   struct dentry *debug_dir ;
};
#line 306 
struct bio_set;
#line 307 
struct bio_integrity_payload;
#line 308  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backing-dev-defs.h"
typedef void bio_end_io_t(struct bio *);
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk_types.h"
typedef u8 blk_status_t;
#line 112  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk_types.h"
struct bio_issue {
   u64 value ;
};
#line 144 
struct blkcg_gq;
#line 144  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk_types.h"
union __anonunion_3552 {
   struct bio_integrity_payload *bi_integrity ;
};
#line 144  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk_types.h"
struct bio {
   struct bio *bi_next ;
   struct gendisk *bi_disk ;
   unsigned int bi_opf ;
   unsigned short bi_flags ;
   unsigned short bi_ioprio ;
   unsigned short bi_write_hint ;
   blk_status_t bi_status ;
   u8 bi_partno ;
   atomic_t __bi_remaining ;
   struct bvec_iter bi_iter ;
   bio_end_io_t *bi_end_io ;
   void *bi_private ;
   struct blkcg_gq *bi_blkg ;
   struct bio_issue bi_issue ;
   u64 bi_iocost_cost ;
   union __anonunion_3552 __anonCompField_bio_168 ;
   unsigned short bi_vcnt ;
   unsigned short bi_max_vecs ;
   atomic_t __bi_cnt ;
   struct bio_vec *bi_io_vec ;
   struct bio_set *bi_pool ;
   struct bio_vec bi_inline_vecs[0U] ;
};
#line 452  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk_types.h"
typedef unsigned int blk_qc_t;
#line 479  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk_types.h"
struct blk_rq_stat {
   u64 mean ;
   u64 min ;
   u64 max ;
   u32 nr_samples ;
   u64 batch ;
};
#line 86  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/genhd.h"
struct disk_stats {
   u64 nsecs[4U] ;
   unsigned long sectors[4U] ;
   unsigned long ios[4U] ;
   unsigned long merges[4U] ;
   unsigned long io_ticks ;
   unsigned long time_in_queue ;
   local_t in_flight[2U] ;
};
#line 103  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/genhd.h"
struct partition_meta_info {
   char uuid[37U] ;
   u8 volname[64U] ;
};
#line 108  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/genhd.h"
struct hd_struct {
   sector_t start_sect ;
   sector_t nr_sects ;
   seqcount_t nr_sects_seq ;
   sector_t alignment_offset ;
   unsigned int discard_alignment ;
   struct device __dev ;
   struct kobject *holder_dir ;
   int policy ;
   int partno ;
   struct partition_meta_info *info ;
   int make_it_fail ;
   unsigned long stamp ;
   struct disk_stats *dkstats ;
   struct percpu_ref ref ;
   struct rcu_work rcu_work ;
};
#line 160  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/genhd.h"
struct disk_part_tbl {
   struct callback_head callback_head ;
   int len ;
   struct hd_struct *last_lookup ;
   struct hd_struct *part[] ;
};
#line 166 
struct disk_events;
#line 167 
struct badblocks;
#line 172 
struct blk_integrity_profile;
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/genhd.h"
struct blk_integrity {
   struct blk_integrity_profile *profile ;
   unsigned char flags ;
   unsigned char tuple_size ;
   unsigned char interval_exp ;
   unsigned char tag_size ;
};
#line 182 
struct timer_rand_state;
#line 182  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/genhd.h"
struct gendisk {
   int major ;
   int first_minor ;
   int minors ;
   char disk_name[32U] ;
   char *(*devnode)(struct gendisk *, umode_t *) ;
   unsigned short events ;
   unsigned short event_flags ;
   struct disk_part_tbl *part_tbl ;
   struct hd_struct part0 ;
   struct block_device_operations *fops ;
   struct request_queue *queue ;
   void *private_data ;
   int flags ;
   struct rw_semaphore lookup_sem ;
   struct kobject *slave_dir ;
   struct timer_rand_state *random ;
   atomic_t sync_io ;
   struct disk_events *ev ;
   struct kobject integrity_kobj ;
   int node_id ;
   struct badblocks *bb ;
   struct lockdep_map lockdep_map ;
};
#line 637  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pagemap.h"
typedef void *mempool_alloc_t(gfp_t , void *);
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mempool.h"
typedef void mempool_free_t(void *, void *);
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mempool.h"
struct mempool_s {
   spinlock_t lock ;
   int min_nr ;
   int curr_nr ;
   void **elements ;
   void *pool_data ;
   mempool_alloc_t *alloc ;
   mempool_free_t *free ;
   wait_queue_head_t wait ;
};
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mempool.h"
typedef struct mempool_s mempool_t;
#line 307  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bio.h"
struct bio_integrity_payload {
   struct bio *bip_bio ;
   struct bvec_iter bip_iter ;
   unsigned short bip_slab ;
   unsigned short bip_vcnt ;
   unsigned short bip_max_vcnt ;
   unsigned short bip_flags ;
   struct bvec_iter bio_iter ;
   struct work_struct bip_work ;
   struct bio_vec *bip_vec ;
   struct bio_vec bip_inline_vecs[0U] ;
};
#line 575  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bio.h"
struct bio_list {
   struct bio *head ;
   struct bio *tail ;
};
#line 703  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bio.h"
struct bio_set {
   struct kmem_cache *bio_slab ;
   unsigned int front_pad ;
   mempool_t bio_pool ;
   mempool_t bvec_pool ;
   mempool_t bio_integrity_pool ;
   mempool_t bvec_integrity_pool ;
   spinlock_t rescue_lock ;
   struct bio_list rescue_list ;
   struct work_struct rescue_work ;
   struct workqueue_struct *rescue_workqueue ;
};
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bsg.h"
struct sg_io_v4 {
   __s32 guard ;
   __u32 protocol ;
   __u32 subprotocol ;
   __u32 request_len ;
   __u64 request ;
   __u64 request_tag ;
   __u32 request_attr ;
   __u32 request_priority ;
   __u32 request_extra ;
   __u32 max_response_len ;
   __u64 response ;
   __u32 dout_iovec_count ;
   __u32 dout_xfer_len ;
   __u32 din_iovec_count ;
   __u32 din_xfer_len ;
   __u64 dout_xferp ;
   __u64 din_xferp ;
   __u32 timeout ;
   __u32 flags ;
   __u64 usr_ptr ;
   __u32 spare_in ;
   __u32 driver_status ;
   __u32 transport_status ;
   __u32 device_status ;
   __u32 retry_delay ;
   __u32 info ;
   __u32 duration ;
   __u32 response_len ;
   __s32 din_resid ;
   __s32 dout_resid ;
   __u64 generated_tag ;
   __u32 spare_out ;
   __u32 padding ;
};
#line 65 
struct request;
#line 10  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bsg.h"
struct bsg_ops {
   int (*check_proto)(struct sg_io_v4 *) ;
   int (*fill_hdr)(struct request *, struct sg_io_v4 *, fmode_t ) ;
   int (*complete_rq)(struct request *, struct sg_io_v4 *) ;
   void (*free_rq)(struct request *) ;
};
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bsg.h"
struct bsg_class_device {
   struct device *class_dev ;
   int minor ;
   struct request_queue *queue ;
   struct bsg_ops *ops ;
};
#line 94  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/blkzoned.h"
struct blk_zone {
   __u64 start ;
   __u64 len ;
   __u64 wp ;
   __u8 type ;
   __u8 cond ;
   __u8 non_seq ;
   __u8 reset ;
   __u8 reserved[36U] ;
};
#line 134 
struct elevator_queue;
#line 135 
struct blk_trace;
#line 138 
struct blk_flush_queue;
#line 139 
struct pr_ops;
#line 140 
struct rq_qos;
#line 141 
struct blk_queue_stats;
#line 142 
struct blk_stat_callback;
#line 143  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/blkzoned.h"
typedef void rq_end_io_fn(struct request *, blk_status_t );
#line 63  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
typedef __u32 req_flags_t;
#line 67 
enum mq_rq_state {
    MQ_RQ_IDLE = 0,
    MQ_RQ_IN_FLIGHT = 1,
    MQ_RQ_COMPLETE = 2
};
#line 132 
struct blk_mq_ctx;
#line 132 
struct blk_mq_hw_ctx;
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
union __anonunion_3555 {
   struct hlist_node hash ;
   struct list_head ipi_list ;
};
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
union __anonunion_3556 {
   struct rb_node rb_node ;
   struct bio_vec special_vec ;
   void *completion_data ;
   int error_count ;
};
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
struct __anonstruct_elv_3558 {
   struct io_cq *icq ;
   void *priv[2U] ;
};
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
struct __anonstruct_flush_3559 {
   unsigned int seq ;
   struct list_head list ;
   rq_end_io_fn *saved_end_io ;
};
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
union __anonunion_3557 {
   struct __anonstruct_elv_3558 elv ;
   struct __anonstruct_flush_3559 flush ;
};
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
union __anonunion_3560 {
   struct __call_single_data csd ;
   u64 fifo_time ;
};
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
struct request {
   struct request_queue *q ;
   struct blk_mq_ctx *mq_ctx ;
   struct blk_mq_hw_ctx *mq_hctx ;
   unsigned int cmd_flags ;
   req_flags_t rq_flags ;
   int tag ;
   int internal_tag ;
   unsigned int __data_len ;
   sector_t __sector ;
   struct bio *bio ;
   struct bio *biotail ;
   struct list_head queuelist ;
   union __anonunion_3555 __anonCompField_request_169 ;
   union __anonunion_3556 __anonCompField_request_170 ;
   union __anonunion_3557 __anonCompField_request_171 ;
   struct gendisk *rq_disk ;
   struct hd_struct *part ;
   u64 alloc_time_ns ;
   u64 start_time_ns ;
   u64 io_start_time_ns ;
   unsigned short wbt_flags ;
   unsigned short stats_sectors ;
   unsigned short nr_phys_segments ;
   unsigned short nr_integrity_segments ;
   unsigned short write_hint ;
   unsigned short ioprio ;
   unsigned int extra_len ;
   enum mq_rq_state state ;
   refcount_t ref ;
   unsigned int timeout ;
   unsigned long deadline ;
   union __anonunion_3560 __anonCompField_request_172 ;
   rq_end_io_fn *end_io ;
   void *end_io_data ;
};
#line 285 
struct elevator_type;
#line 286 
struct blk_mq_debugfs_attr;
#line 287 
enum elv_merge {
    ELEVATOR_NO_MERGE = 0,
    ELEVATOR_FRONT_MERGE = 1,
    ELEVATOR_BACK_MERGE = 2,
    ELEVATOR_DISCARD_MERGE = 3
};
#line 294 
struct blk_mq_alloc_data;
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/elevator.h"
struct elevator_mq_ops {
   int (*init_sched)(struct request_queue *, struct elevator_type *) ;
   void (*exit_sched)(struct elevator_queue *) ;
   int (*init_hctx)(struct blk_mq_hw_ctx *, unsigned int ) ;
   void (*exit_hctx)(struct blk_mq_hw_ctx *, unsigned int ) ;
   void (*depth_updated)(struct blk_mq_hw_ctx *) ;
   bool (*allow_merge)(struct request_queue *, struct request *, struct bio *) ;
   bool (*bio_merge)(struct blk_mq_hw_ctx *, struct bio *, unsigned int ) ;
   int (*request_merge)(struct request_queue *, struct request **, struct bio *) ;
   void (*request_merged)(struct request_queue *, struct request *, enum elv_merge ) ;
   void (*requests_merged)(struct request_queue *, struct request *, struct request *) ;
   void (*limit_depth)(unsigned int , struct blk_mq_alloc_data *) ;
   void (*prepare_request)(struct request *, struct bio *) ;
   void (*finish_request)(struct request *) ;
   void (*insert_requests)(struct blk_mq_hw_ctx *, struct list_head *, bool ) ;
   struct request *(*dispatch_request)(struct blk_mq_hw_ctx *) ;
   bool (*has_work)(struct blk_mq_hw_ctx *) ;
   void (*completed_request)(struct request *, u64 ) ;
   void (*requeue_request)(struct request *) ;
   struct request *(*former_request)(struct request_queue *, struct request *) ;
   struct request *(*next_request)(struct request_queue *, struct request *) ;
   void (*init_icq)(struct io_cq *) ;
   void (*exit_icq)(struct io_cq *) ;
};
#line 57  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/elevator.h"
struct elv_fs_entry {
   struct attribute attr ;
   ssize_t (*show)(struct elevator_queue *, char *) ;
   ssize_t (*store)(struct elevator_queue *, char *, size_t ) ;
};
#line 66  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/elevator.h"
struct elevator_type {
   struct kmem_cache *icq_cache ;
   struct elevator_mq_ops ops ;
   size_t icq_size ;
   size_t icq_align ;
   struct elv_fs_entry *elevator_attrs ;
   char *elevator_name ;
   char *elevator_alias ;
   unsigned int elevator_features ;
   struct module *elevator_owner ;
   struct blk_mq_debugfs_attr *queue_debugfs_attrs ;
   struct blk_mq_debugfs_attr *hctx_debugfs_attrs ;
   char icq_cache_name[22U] ;
   struct list_head list ;
};
#line 101  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/elevator.h"
struct elevator_queue {
   struct elevator_type *type ;
   void *elevator_data ;
   struct kobject kobj ;
   struct mutex sysfs_lock ;
   unsigned int registered : 1 ;
   struct hlist_head hash[64U] ;
};
#line 153  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/elevator.h"
typedef blk_qc_t make_request_fn(struct request_queue *, struct bio *);
#line 291  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
typedef int dma_drain_needed_fn(struct request *);
#line 304 
enum blk_zoned_model {
    BLK_ZONED_NONE = 0,
    BLK_ZONED_HA = 1,
    BLK_ZONED_HM = 2
};
#line 320  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
struct queue_limits {
   unsigned long bounce_pfn ;
   unsigned long seg_boundary_mask ;
   unsigned long virt_boundary_mask ;
   unsigned int max_hw_sectors ;
   unsigned int max_dev_sectors ;
   unsigned int chunk_sectors ;
   unsigned int max_sectors ;
   unsigned int max_segment_size ;
   unsigned int physical_block_size ;
   unsigned int logical_block_size ;
   unsigned int alignment_offset ;
   unsigned int io_min ;
   unsigned int io_opt ;
   unsigned int max_discard_sectors ;
   unsigned int max_hw_discard_sectors ;
   unsigned int max_write_same_sectors ;
   unsigned int max_write_zeroes_sectors ;
   unsigned int discard_granularity ;
   unsigned int discard_alignment ;
   unsigned short max_segments ;
   unsigned short max_integrity_segments ;
   unsigned short max_discard_segments ;
   unsigned char misaligned ;
   unsigned char discard_misaligned ;
   unsigned char raid_partial_stripes_expensive ;
   enum blk_zoned_model zoned ;
};
#line 394 
struct blk_mq_ops;
#line 394 
struct throtl_data;
#line 394 
struct blk_mq_tag_set;
#line 394  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
struct request_queue {
   struct request *last_merge ;
   struct elevator_queue *elevator ;
   struct blk_queue_stats *stats ;
   struct rq_qos *rq_qos ;
   make_request_fn *make_request_fn ;
   dma_drain_needed_fn *dma_drain_needed ;
   struct blk_mq_ops *mq_ops ;
   struct blk_mq_ctx *queue_ctx ;
   unsigned int queue_depth ;
   struct blk_mq_hw_ctx **queue_hw_ctx ;
   unsigned int nr_hw_queues ;
   struct backing_dev_info *backing_dev_info ;
   void *queuedata ;
   unsigned long queue_flags ;
   atomic_t pm_only ;
   int id ;
   gfp_t bounce_gfp ;
   spinlock_t queue_lock ;
   struct kobject kobj ;
   struct kobject *mq_kobj ;
   struct blk_integrity integrity ;
   struct device *dev ;
   int rpm_status ;
   unsigned int nr_pending ;
   unsigned long nr_requests ;
   unsigned int dma_drain_size ;
   void *dma_drain_buffer ;
   unsigned int dma_pad_mask ;
   unsigned int dma_alignment ;
   unsigned int rq_timeout ;
   int poll_nsec ;
   struct blk_stat_callback *poll_cb ;
   struct blk_rq_stat poll_stat[16U] ;
   struct timer_list timeout ;
   struct work_struct timeout_work ;
   struct list_head icq_list ;
   unsigned long blkcg_pols[1U] ;
   struct blkcg_gq *root_blkg ;
   struct list_head blkg_list ;
   struct queue_limits limits ;
   unsigned int required_elevator_features ;
   unsigned int nr_zones ;
   unsigned long *conv_zones_bitmap ;
   unsigned long *seq_zones_wlock ;
   unsigned int sg_timeout ;
   unsigned int sg_reserved_size ;
   int node ;
   struct blk_trace *blk_trace ;
   struct mutex blk_trace_mutex ;
   struct blk_flush_queue *fq ;
   struct list_head requeue_list ;
   spinlock_t requeue_lock ;
   struct delayed_work requeue_work ;
   struct mutex sysfs_lock ;
   struct mutex sysfs_dir_lock ;
   struct list_head unused_hctx_list ;
   spinlock_t unused_hctx_lock ;
   int mq_freeze_depth ;
   struct bsg_class_device bsg_dev ;
   struct throtl_data *td ;
   struct callback_head callback_head ;
   wait_queue_head_t mq_freeze_wq ;
   struct mutex mq_freeze_lock ;
   struct percpu_ref q_usage_counter ;
   struct blk_mq_tag_set *tag_set ;
   struct list_head tag_set_list ;
   struct bio_set bio_split ;
   struct dentry *debugfs_dir ;
   struct dentry *sched_debugfs_dir ;
   struct dentry *rqos_debugfs_dir ;
   bool mq_sysfs_init_done ;
   size_t cmd_size ;
   struct work_struct release_work ;
   u64 write_hints[5U] ;
};
#line 1160  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
struct blk_plug {
   struct list_head mq_list ;
   struct list_head cb_list ;
   unsigned short rq_count ;
   bool multiple_queues ;
};
#line 1514  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
struct blk_integrity_iter {
   void *prot_buf ;
   void *data_buf ;
   sector_t seed ;
   unsigned int data_size ;
   unsigned short interval ;
   char *disk_name ;
};
#line 1522  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
typedef blk_status_t integrity_processing_fn(struct blk_integrity_iter *);
#line 1524  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
typedef void integrity_prepare_fn(struct request *);
#line 1525  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
typedef void integrity_complete_fn(struct request *, unsigned int );
#line 1527  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
struct blk_integrity_profile {
   integrity_processing_fn *generate_fn ;
   integrity_processing_fn *verify_fn ;
   integrity_prepare_fn *prepare_fn ;
   integrity_complete_fn *complete_fn ;
   char *name ;
};
#line 1693  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
struct block_device_operations {
   int (*open)(struct block_device *, fmode_t ) ;
   void (*release)(struct gendisk *, fmode_t ) ;
   int (*rw_page)(struct block_device *, sector_t , struct page *, unsigned int ) ;
   int (*ioctl)(struct block_device *, fmode_t , unsigned int , unsigned long ) ;
   int (*compat_ioctl)(struct block_device *, fmode_t , unsigned int , unsigned long ) ;
   unsigned int (*check_events)(struct gendisk *, unsigned int ) ;
   int (*media_changed)(struct gendisk *) ;
   void (*unlock_native_capacity)(struct gendisk *) ;
   int (*revalidate_disk)(struct gendisk *) ;
   int (*getgeo)(struct block_device *, struct hd_geometry *) ;
   void (*swap_slot_free_notify)(struct block_device *, unsigned long ) ;
   int (*report_zones)(struct gendisk *, sector_t , unsigned int , int (*)(struct blk_zone *, unsigned int , void *), void *) ;
   struct module *owner ;
   struct pr_ops *pr_ops ;
};
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk-cgroup.h"
struct blkcg_policy_data;
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk-cgroup.h"
struct blkcg {
   struct cgroup_subsys_state css ;
   spinlock_t lock ;
   struct xarray blkg_tree ;
   struct blkcg_gq *blkg_hint ;
   struct hlist_head blkg_list ;
   struct blkcg_policy_data *cpd[5U] ;
   struct list_head all_blkcgs_node ;
   struct list_head cgwb_list ;
   refcount_t cgwb_refcnt ;
};
#line 63  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk-cgroup.h"
struct blkg_iostat {
   u64 bytes[3U] ;
   u64 ios[3U] ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk-cgroup.h"
struct blkg_iostat_set {
   struct u64_stats_sync sync ;
   struct blkg_iostat cur ;
   struct blkg_iostat last ;
};
#line 85  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk-cgroup.h"
struct blkg_policy_data {
   struct blkcg_gq *blkg ;
   int plid ;
};
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk-cgroup.h"
struct blkcg_policy_data {
   struct blkcg *blkcg ;
   int plid ;
};
#line 105  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk-cgroup.h"
struct blkcg_gq {
   struct request_queue *q ;
   struct list_head q_node ;
   struct hlist_node blkcg_node ;
   struct blkcg *blkcg ;
   struct bdi_writeback_congested *wb_congested ;
   struct blkcg_gq *parent ;
   struct percpu_ref refcnt ;
   bool online ;
   struct blkg_iostat_set *iostat_cpu ;
   struct blkg_iostat_set iostat ;
   struct blkg_policy_data *pd[5U] ;
   spinlock_t async_bio_lock ;
   struct bio_list async_bios ;
   struct work_struct async_bio_work ;
   atomic_t use_delay ;
   atomic64_t delay_nsec ;
   atomic64_t delay_start ;
   u64 last_delay ;
   int last_use ;
   struct callback_head callback_head ;
};
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/writeback.h"
enum writeback_sync_modes {
    WB_SYNC_NONE = 0,
    WB_SYNC_ALL = 1
};
#line 51  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/writeback.h"
struct writeback_control {
   long nr_to_write ;
   long pages_skipped ;
   loff_t range_start ;
   loff_t range_end ;
   enum writeback_sync_modes sync_mode ;
   unsigned int for_kupdate : 1 ;
   unsigned int for_background : 1 ;
   unsigned int tagged_writepages : 1 ;
   unsigned int for_reclaim : 1 ;
   unsigned int range_cyclic : 1 ;
   unsigned int for_sync : 1 ;
   unsigned int no_cgroup_owner : 1 ;
   unsigned int punt_to_cgroup : 1 ;
   struct bdi_writeback *wb ;
   struct inode *inode ;
   int wb_id ;
   int wb_lcand_id ;
   int wb_tcand_id ;
   size_t wb_bytes ;
   size_t wb_lcand_bytes ;
   size_t wb_tcand_bytes ;
};
#line 129  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/writeback.h"
struct wb_domain {
   spinlock_t lock ;
   struct fprop_global completions ;
   struct timer_list period_timer ;
   unsigned long period_time ;
   unsigned long dirty_limit_tstamp ;
   unsigned long dirty_limit ;
};
#line 69  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct mem_cgroup_id {
   int id ;
   refcount_t ref ;
};
#line 86  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct memcg_vmstats_percpu {
   long stat[38U] ;
   unsigned long events[91U] ;
   unsigned long nr_page_events ;
   unsigned long targets[2U] ;
};
#line 93  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct mem_cgroup_reclaim_iter {
   struct mem_cgroup *position ;
   unsigned int generation ;
};
#line 99  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct lruvec_stat {
   long count[32U] ;
};
#line 107  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct memcg_shrinker_map {
   struct callback_head rcu ;
   unsigned long map[0U] ;
};
#line 115  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct mem_cgroup_per_node {
   struct lruvec lruvec ;
   struct lruvec_stat *lruvec_stat_local ;
   struct lruvec_stat *lruvec_stat_cpu ;
   atomic_long_t lruvec_stat[32U] ;
   unsigned long lru_zone_size[5U][5U] ;
   struct mem_cgroup_reclaim_iter iter ;
   struct memcg_shrinker_map *shrinker_map ;
   struct rb_node tree_node ;
   unsigned long usage_in_excess ;
   bool on_tree ;
   struct mem_cgroup *memcg ;
};
#line 139  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct mem_cgroup_threshold {
   struct eventfd_ctx *eventfd ;
   unsigned long threshold ;
};
#line 145  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct mem_cgroup_threshold_ary {
   int current_threshold ;
   unsigned int size ;
   struct mem_cgroup_threshold entries[0U] ;
};
#line 154  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct mem_cgroup_thresholds {
   struct mem_cgroup_threshold_ary *primary ;
   struct mem_cgroup_threshold_ary *spare ;
};
#line 164 
enum memcg_kmem_state {
    KMEM_NONE = 0,
    KMEM_ALLOCATED = 1,
    KMEM_ONLINE = 2
};
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct memcg_padding {
   char x[0U] ;
} __attribute__((__aligned__(4096)));
#line 190  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct memcg_cgwb_frn {
   u64 bdi_id ;
   int memcg_id ;
   u64 at ;
   struct wb_completion done ;
};
#line 203  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct mem_cgroup {
   struct cgroup_subsys_state css ;
   struct mem_cgroup_id id ;
   struct page_counter memory ;
   struct page_counter swap ;
   struct page_counter memsw ;
   struct page_counter kmem ;
   struct page_counter tcpmem ;
   unsigned long high ;
   struct work_struct high_work ;
   unsigned long soft_limit ;
   struct vmpressure vmpressure ;
   bool use_hierarchy ;
   bool oom_group ;
   bool oom_lock ;
   int under_oom ;
   int swappiness ;
   int oom_kill_disable ;
   struct cgroup_file events_file ;
   struct cgroup_file events_local_file ;
   struct cgroup_file swap_events_file ;
   struct mutex thresholds_lock ;
   struct mem_cgroup_thresholds thresholds ;
   struct mem_cgroup_thresholds memsw_thresholds ;
   struct list_head oom_notify ;
   unsigned long move_charge_at_immigrate ;
   spinlock_t move_lock ;
   unsigned long move_lock_flags ;
   struct memcg_padding _pad1_ ;
   atomic_t moving_account ;
   struct task_struct *move_lock_task ;
   struct memcg_vmstats_percpu *vmstats_local ;
   struct memcg_vmstats_percpu *vmstats_percpu ;
   struct memcg_padding _pad2_ ;
   atomic_long_t vmstats[38U] ;
   atomic_long_t vmevents[91U] ;
   atomic_long_t memory_events[7U] ;
   atomic_long_t memory_events_local[7U] ;
   unsigned long socket_pressure ;
   bool tcpmem_active ;
   int tcpmem_pressure ;
   int kmemcg_id ;
   enum memcg_kmem_state kmem_state ;
   struct list_head kmem_caches ;
   struct list_head cgwb_list ;
   struct wb_domain cgwb_domain ;
   struct memcg_cgwb_frn cgwb_frn[4U] ;
   struct list_head event_list ;
   spinlock_t event_list_lock ;
   struct deferred_split deferred_split_queue ;
   struct mem_cgroup_per_node *nodeinfo[0U] ;
};
#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/gen_stats.h"
struct gnet_stats_queue {
   __u32 qlen ;
   __u32 backlog ;
   __u32 drops ;
   __u32 requeues ;
   __u32 overlimits ;
};
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/gen_stats.h"
struct gnet_stats_basic_packed {
   __u64 bytes ;
   __u64 packets ;
};
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/gen_stats.h"
struct gnet_stats_basic_cpu {
   struct gnet_stats_basic_packed bstats ;
   struct u64_stats_sync syncp ;
} __attribute__((__aligned__(16)));
#line 20 
struct net_rate_estimator;
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/gen_stats.h"
struct gnet_dump {
   spinlock_t *lock ;
   struct sk_buff *skb ;
   struct nlattr *tail ;
   int compat_tc_stats ;
   int compat_xstats ;
   int padattr ;
   void *xstats ;
   int xstats_len ;
   struct tc_stats tc_stats ;
};
#line 291  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netlink.h"
struct __anonstruct_3577 {
   s16 min ;
   s16 max ;
};
#line 291  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netlink.h"
union __anonunion_3576 {
   void *validation_data ;
   struct __anonstruct_3577 __anonCompField___anonunion_3576_173 ;
   int (*validate)(struct nlattr *, struct netlink_ext_ack *) ;
   u16 strict_start_type ;
};
#line 291  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netlink.h"
struct nla_policy {
   u8 type ;
   u8 validation_type ;
   u16 len ;
   union __anonunion_3576 __anonCompField_nla_policy_174 ;
};
#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/rtnetlink.h"
struct rtnl_link_ops {
   struct list_head list ;
   char *kind ;
   size_t priv_size ;
   void (*setup)(struct net_device *) ;
   unsigned int maxtype ;
   struct nla_policy *policy ;
   int (*validate)(struct nlattr **, struct nlattr **, struct netlink_ext_ack *) ;
   int (*newlink)(struct net *, struct net_device *, struct nlattr **, struct nlattr **, struct netlink_ext_ack *) ;
   int (*changelink)(struct net_device *, struct nlattr **, struct nlattr **, struct netlink_ext_ack *) ;
   void (*dellink)(struct net_device *, struct list_head *) ;
   size_t (*get_size)(struct net_device *) ;
   int (*fill_info)(struct sk_buff *, struct net_device *) ;
   size_t (*get_xstats_size)(struct net_device *) ;
   int (*fill_xstats)(struct sk_buff *, struct net_device *) ;
   unsigned int (*get_num_tx_queues)(void) ;
   unsigned int (*get_num_rx_queues)(void) ;
   unsigned int slave_maxtype ;
   struct nla_policy *slave_policy ;
   int (*slave_changelink)(struct net_device *, struct net_device *, struct nlattr **, struct nlattr **, struct netlink_ext_ack *) ;
   size_t (*get_slave_size)(struct net_device *, struct net_device *) ;
   int (*fill_slave_info)(struct sk_buff *, struct net_device *, struct net_device *) ;
   struct net *(*get_link_net)(struct net_device *) ;
   size_t (*get_linkxstats_size)(struct net_device *, int ) ;
   int (*fill_linkxstats)(struct sk_buff *, struct net_device *, int *, int ) ;
};
#line 170  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/rtnetlink.h"
struct rhash_lock_head {
   };
#line 76  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable.h"
struct bucket_table {
   unsigned int size ;
   unsigned int nest ;
   u32 hash_rnd ;
   struct list_head walkers ;
   struct callback_head rcu ;
   struct bucket_table *future_tbl ;
   struct lockdep_map dep_map ;
   struct rhash_lock_head *buckets[] ;
};
#line 281  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow_offload.h"
struct flow_block {
   struct list_head cb_list ;
};
#line 298  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow_offload.h"
typedef int flow_setup_cb_t(enum tc_setup_type , void *, void *);
#line 412 
struct Qdisc_ops;
#line 413 
struct qdisc_walker;
#line 414 
struct tcf_walker;
#line 41  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct qdisc_size_table {
   struct callback_head rcu ;
   struct list_head list ;
   struct tc_sizespec szopts ;
   int refcnt ;
   u16 data[] ;
};
#line 50  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct qdisc_skb_head {
   struct sk_buff *head ;
   struct sk_buff *tail ;
   __u32 qlen ;
   spinlock_t lock ;
};
#line 57  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct Qdisc {
   int (*enqueue)(struct sk_buff *, struct Qdisc *, struct sk_buff **) ;
   struct sk_buff *(*dequeue)(struct Qdisc *) ;
   unsigned int flags ;
   u32 limit ;
   struct Qdisc_ops *ops ;
   struct qdisc_size_table *stab ;
   struct hlist_node hash ;
   u32 handle ;
   u32 parent ;
   struct netdev_queue *dev_queue ;
   struct net_rate_estimator *rate_est ;
   struct gnet_stats_basic_cpu *cpu_bstats ;
   struct gnet_stats_queue *cpu_qstats ;
   int padded ;
   refcount_t refcnt ;
   struct sk_buff_head gso_skb ;
   struct qdisc_skb_head q ;
   struct gnet_stats_basic_packed bstats ;
   seqcount_t running ;
   struct gnet_stats_queue qstats ;
   unsigned long state ;
   struct Qdisc *next_sched ;
   struct sk_buff_head skb_bad_txq ;
   spinlock_t busylock ;
   spinlock_t seqlock ;
   bool empty ;
   struct callback_head rcu ;
};
#line 195 
struct tcf_block;
#line 195  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct Qdisc_class_ops {
   unsigned int flags ;
   struct netdev_queue *(*select_queue)(struct Qdisc *, struct tcmsg *) ;
   int (*graft)(struct Qdisc *, unsigned long , struct Qdisc *, struct Qdisc **, struct netlink_ext_ack *) ;
   struct Qdisc *(*leaf)(struct Qdisc *, unsigned long ) ;
   void (*qlen_notify)(struct Qdisc *, unsigned long ) ;
   unsigned long (*find)(struct Qdisc *, u32 ) ;
   int (*change)(struct Qdisc *, u32 , u32 , struct nlattr **, unsigned long *, struct netlink_ext_ack *) ;
   int (*delete)(struct Qdisc *, unsigned long ) ;
   void (*walk)(struct Qdisc *, struct qdisc_walker *) ;
   struct tcf_block *(*tcf_block)(struct Qdisc *, unsigned long , struct netlink_ext_ack *) ;
   unsigned long (*bind_tcf)(struct Qdisc *, unsigned long , u32 ) ;
   void (*unbind_tcf)(struct Qdisc *, unsigned long ) ;
   int (*dump)(struct Qdisc *, unsigned long , struct sk_buff *, struct tcmsg *) ;
   int (*dump_stats)(struct Qdisc *, unsigned long , struct gnet_dump *) ;
};
#line 235  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct Qdisc_ops {
   struct Qdisc_ops *next ;
   struct Qdisc_class_ops *cl_ops ;
   char id[16U] ;
   int priv_size ;
   unsigned int static_flags ;
   int (*enqueue)(struct sk_buff *, struct Qdisc *, struct sk_buff **) ;
   struct sk_buff *(*dequeue)(struct Qdisc *) ;
   struct sk_buff *(*peek)(struct Qdisc *) ;
   int (*init)(struct Qdisc *, struct nlattr *, struct netlink_ext_ack *) ;
   void (*reset)(struct Qdisc *) ;
   void (*destroy)(struct Qdisc *) ;
   int (*change)(struct Qdisc *, struct nlattr *, struct netlink_ext_ack *) ;
   void (*attach)(struct Qdisc *) ;
   int (*change_tx_queue_len)(struct Qdisc *, unsigned int ) ;
   int (*dump)(struct Qdisc *, struct sk_buff *) ;
   int (*dump_stats)(struct Qdisc *, struct gnet_dump *) ;
   void (*ingress_block_set)(struct Qdisc *, u32 ) ;
   void (*egress_block_set)(struct Qdisc *, u32 ) ;
   u32 (*ingress_block_get)(struct Qdisc *) ;
   u32 (*egress_block_get)(struct Qdisc *) ;
   struct module *owner ;
};
#line 272  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct __anonstruct_3651 {
   unsigned long class ;
   u32 classid ;
};
#line 272 
struct tcf_proto;
#line 272  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct __anonstruct_3652 {
   bool ingress ;
   struct gnet_stats_queue *qstats ;
};
#line 272  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
union __anonunion_3650 {
   struct __anonstruct_3651 __anonCompField___anonunion_3650_176 ;
   struct tcf_proto *goto_tp ;
   struct __anonstruct_3652 __anonCompField___anonunion_3650_177 ;
};
#line 272  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct tcf_result {
   union __anonunion_3650 __anonCompField_tcf_result_178 ;
};
#line 287 
struct tcf_chain;
#line 290  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct tcf_proto_ops {
   struct list_head head ;
   char kind[16U] ;
   int (*classify)(struct sk_buff *, struct tcf_proto *, struct tcf_result *) ;
   int (*init)(struct tcf_proto *) ;
   void (*destroy)(struct tcf_proto *, bool , struct netlink_ext_ack *) ;
   void *(*get)(struct tcf_proto *, u32 ) ;
   void (*put)(struct tcf_proto *, void *) ;
   int (*change)(struct net *, struct sk_buff *, struct tcf_proto *, unsigned long , u32 , struct nlattr **, void **, bool , bool , struct netlink_ext_ack *) ;
   int (*delete)(struct tcf_proto *, void *, bool *, bool , struct netlink_ext_ack *) ;
   bool (*delete_empty)(struct tcf_proto *) ;
   void (*walk)(struct tcf_proto *, struct tcf_walker *, bool ) ;
   int (*reoffload)(struct tcf_proto *, bool , flow_setup_cb_t *, void *, struct netlink_ext_ack *) ;
   void (*hw_add)(struct tcf_proto *, void *) ;
   void (*hw_del)(struct tcf_proto *, void *) ;
   void (*bind_class)(void *, u32 , unsigned long ) ;
   void *(*tmplt_create)(struct net *, struct tcf_chain *, struct nlattr **, struct netlink_ext_ack *) ;
   void (*tmplt_destroy)(void *) ;
   int (*dump)(struct net *, struct tcf_proto *, void *, struct sk_buff *, struct tcmsg *, bool ) ;
   int (*tmplt_dump)(struct sk_buff *, struct net *, void *) ;
   struct module *owner ;
   int flags ;
};
#line 348  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct tcf_proto {
   struct tcf_proto *next ;
   void *root ;
   int (*classify)(struct sk_buff *, struct tcf_proto *, struct tcf_result *) ;
   __be16 protocol ;
   u32 prio ;
   void *data ;
   struct tcf_proto_ops *ops ;
   struct tcf_chain *chain ;
   spinlock_t lock ;
   bool deleting ;
   refcount_t refcnt ;
   struct callback_head rcu ;
   struct hlist_node destroy_ht_node ;
};
#line 386  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct tcf_chain {
   struct mutex filter_chain_lock ;
   struct tcf_proto *filter_chain ;
   struct list_head list ;
   struct tcf_block *block ;
   u32 index ;
   unsigned int refcnt ;
   unsigned int action_refcnt ;
   bool explicitly_created ;
   bool flushing ;
   struct tcf_proto_ops *tmplt_ops ;
   void *tmplt_priv ;
   struct callback_head rcu ;
};
#line 402  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct __anonstruct_chain0_3654 {
   struct tcf_chain *chain ;
   struct list_head filter_chain_list ;
};
#line 402  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct tcf_block {
   struct mutex lock ;
   struct list_head chain_list ;
   u32 index ;
   refcount_t refcnt ;
   struct net *net ;
   struct Qdisc *q ;
   struct rw_semaphore cb_lock ;
   struct flow_block flow_block ;
   struct list_head owner_list ;
   bool keep_dst ;
   atomic_t offloadcnt ;
   unsigned int nooffloaddevcnt ;
   unsigned int lockeddevcnt ;
   struct __anonstruct_chain0_3654 chain0 ;
   struct callback_head rcu ;
   struct hlist_head proto_destroy_ht[128U] ;
   struct mutex proto_destroy_lock ;
};
#line 1269  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct mini_Qdisc {
   struct tcf_proto *filter_list ;
   struct gnet_stats_basic_cpu *cpu_bstats ;
   struct gnet_stats_queue *cpu_qstats ;
   struct callback_head rcu ;
};
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/filter.h"
struct sock_filter {
   __u16 code ;
   __u8 jt ;
   __u8 jf ;
   __u32 k ;
};
#line 35 
struct sock_reuseport;
#line 513  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/filter.h"
struct sock_fprog_kern {
   u16 len ;
   struct sock_filter *filter ;
};
#line 526  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/filter.h"
union __anonunion_3667 {
   struct sock_filter insns[0U] ;
   struct bpf_insn insnsi[0U] ;
};
#line 526  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/filter.h"
struct bpf_prog {
   u16 pages ;
   u16 jited : 1 ;
   u16 jit_requested : 1 ;
   u16 gpl_compatible : 1 ;
   u16 cb_access : 1 ;
   u16 dst_needed : 1 ;
   u16 blinded : 1 ;
   u16 is_func : 1 ;
   u16 kprobe_override : 1 ;
   u16 has_callchain_buf : 1 ;
   u16 enforce_expected_attach_type : 1 ;
   enum bpf_prog_type type ;
   enum bpf_attach_type expected_attach_type ;
   u32 len ;
   u32 jited_len ;
   u8 tag[8U] ;
   struct bpf_prog_aux *aux ;
   struct sock_fprog_kern *orig_prog ;
   unsigned int (*bpf_func)(void *, struct bpf_insn *) ;
   union __anonunion_3667 __anonCompField_bpf_prog_180 ;
};
#line 554  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/filter.h"
struct sk_filter {
   refcount_t refcnt ;
   struct callback_head rcu ;
   struct bpf_prog *prog ;
};
#line 36  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/poll.h"
struct pollfd {
   int fd ;
   short events ;
   short revents ;
};
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/poll.h"
struct poll_table_struct {
   void (*_qproc)(struct file *, wait_queue_head_t *, struct poll_table_struct *) ;
   __poll_t _key ;
};
#line 70  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/neighbour.h"
struct neigh_table;
#line 70  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/neighbour.h"
struct neigh_parms {
   possible_net_t net ;
   struct net_device *dev ;
   struct list_head list ;
   int (*neigh_setup)(struct neighbour *) ;
   struct neigh_table *tbl ;
   void *sysctl_table ;
   int dead ;
   refcount_t refcnt ;
   struct callback_head callback_head ;
   int reachable_time ;
   int data[13U] ;
   unsigned long data_state[1U] ;
};
#line 112  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/neighbour.h"
struct neigh_statistics {
   unsigned long allocs ;
   unsigned long destroys ;
   unsigned long hash_grows ;
   unsigned long res_failed ;
   unsigned long lookups ;
   unsigned long hits ;
   unsigned long rcv_probes_mcast ;
   unsigned long rcv_probes_ucast ;
   unsigned long periodic_gc_runs ;
   unsigned long forced_gc_runs ;
   unsigned long unres_discards ;
   unsigned long table_fulls ;
};
#line 134 
struct neigh_ops;
#line 134  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/neighbour.h"
struct neighbour {
   struct neighbour *next ;
   struct neigh_table *tbl ;
   struct neigh_parms *parms ;
   unsigned long confirmed ;
   unsigned long updated ;
   rwlock_t lock ;
   refcount_t refcnt ;
   unsigned int arp_queue_len_bytes ;
   struct sk_buff_head arp_queue ;
   struct timer_list timer ;
   unsigned long used ;
   atomic_t probes ;
   __u8 flags ;
   __u8 nud_state ;
   __u8 type ;
   __u8 dead ;
   u8 protocol ;
   seqlock_t ha_lock ;
   unsigned char ha[32U] ;
   struct hh_cache hh ;
   int (*output)(struct neighbour *, struct sk_buff *) ;
   struct neigh_ops *ops ;
   struct list_head gc_list ;
   struct callback_head rcu ;
   struct net_device *dev ;
   u8 primary_key[0U] ;
} __attribute__((__designated_init__));
#line 163  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/neighbour.h"
struct neigh_ops {
   int family ;
   void (*solicit)(struct neighbour *, struct sk_buff *) ;
   void (*error_report)(struct neighbour *, struct sk_buff *) ;
   int (*output)(struct neighbour *, struct sk_buff *) ;
   int (*connected_output)(struct neighbour *, struct sk_buff *) ;
};
#line 171  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/neighbour.h"
struct pneigh_entry {
   struct pneigh_entry *next ;
   possible_net_t net ;
   struct net_device *dev ;
   u8 flags ;
   u8 protocol ;
   u8 key[0U] ;
};
#line 186  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/neighbour.h"
struct neigh_hash_table {
   struct neighbour **hash_buckets ;
   unsigned int hash_shift ;
   __u32 hash_rnd[4U] ;
   struct callback_head rcu ;
};
#line 194  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/neighbour.h"
struct neigh_table {
   int family ;
   unsigned int entry_size ;
   unsigned int key_len ;
   __be16 protocol ;
   __u32 (*hash)(void *, struct net_device *, __u32 *) ;
   bool (*key_eq)(struct neighbour *, void *) ;
   int (*constructor)(struct neighbour *) ;
   int (*pconstructor)(struct pneigh_entry *) ;
   void (*pdestructor)(struct pneigh_entry *) ;
   void (*proxy_redo)(struct sk_buff *) ;
   bool (*allow_add)(struct net_device *, struct netlink_ext_ack *) ;
   char *id ;
   struct neigh_parms parms ;
   struct list_head parms_list ;
   int gc_interval ;
   int gc_thresh1 ;
   int gc_thresh2 ;
   int gc_thresh3 ;
   unsigned long last_flush ;
   struct delayed_work gc_work ;
   struct timer_list proxy_timer ;
   struct sk_buff_head proxy_queue ;
   atomic_t entries ;
   atomic_t gc_entries ;
   struct list_head gc_list ;
   rwlock_t lock ;
   unsigned long last_rand ;
   struct neigh_statistics *stats ;
   struct neigh_hash_table *nht ;
   struct pneigh_entry **phash_buckets ;
};
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/dst.h"
struct lwtunnel_state;
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/dst.h"
struct dst_entry {
   struct net_device *dev ;
   struct dst_ops *ops ;
   unsigned long _metrics ;
   unsigned long expires ;
   struct xfrm_state *xfrm ;
   int (*input)(struct sk_buff *) ;
   int (*output)(struct net *, struct sock *, struct sk_buff *) ;
   unsigned short flags ;
   short obsolete ;
   unsigned short header_len ;
   unsigned short trailer_len ;
   atomic_t __refcnt ;
   int __use ;
   unsigned long lastuse ;
   struct lwtunnel_state *lwtstate ;
   struct callback_head callback_head ;
   short error ;
   short __pad ;
   __u32 tclassid ;
};
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fib_rules.h"
struct fib_rule_hdr {
   __u8 family ;
   __u8 dst_len ;
   __u8 src_len ;
   __u8 tos ;
   __u8 table ;
   __u8 res1 ;
   __u8 res2 ;
   __u8 action ;
   __u32 flags ;
};
#line 38  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fib_rules.h"
struct fib_rule_port_range {
   __u16 start ;
   __u16 end ;
};
#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/fib_notifier.h"
struct fib_notifier_ops {
   int family ;
   struct list_head list ;
   unsigned int (*fib_seq_read)(struct net *) ;
   int (*fib_dump)(struct net *, struct notifier_block *, struct netlink_ext_ack *) ;
   struct module *owner ;
   struct callback_head rcu ;
};
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/fib_rules.h"
struct fib_kuid_range {
   kuid_t start ;
   kuid_t end ;
};
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/fib_rules.h"
struct fib_rule {
   struct list_head list ;
   int iifindex ;
   int oifindex ;
   u32 mark ;
   u32 mark_mask ;
   u32 flags ;
   u32 table ;
   u8 action ;
   u8 l3mdev ;
   u8 proto ;
   u8 ip_proto ;
   u32 target ;
   __be64 tun_id ;
   struct fib_rule *ctarget ;
   struct net *fr_net ;
   refcount_t refcnt ;
   u32 pref ;
   int suppress_ifgroup ;
   int suppress_prefixlen ;
   char iifname[16U] ;
   char oifname[16U] ;
   struct fib_kuid_range uid_range ;
   struct fib_rule_port_range sport_range ;
   struct fib_rule_port_range dport_range ;
   struct callback_head rcu ;
};
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/fib_rules.h"
struct fib_lookup_arg {
   void *lookup_ptr ;
   void *lookup_data ;
   void *result ;
   struct fib_rule *rule ;
   u32 table ;
   int flags ;
};
#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/fib_rules.h"
struct fib_rules_ops {
   int family ;
   struct list_head list ;
   int rule_size ;
   int addr_size ;
   int unresolved_rules ;
   int nr_goto_rules ;
   unsigned int fib_rules_seq ;
   int (*action)(struct fib_rule *, struct flowi *, int , struct fib_lookup_arg *) ;
   bool (*suppress)(struct fib_rule *, struct fib_lookup_arg *) ;
   int (*match)(struct fib_rule *, struct flowi *, int ) ;
   int (*configure)(struct fib_rule *, struct sk_buff *, struct fib_rule_hdr *, struct nlattr **, struct netlink_ext_ack *) ;
   int (*delete)(struct fib_rule *) ;
   int (*compare)(struct fib_rule *, struct fib_rule_hdr *, struct nlattr **) ;
   int (*fill)(struct fib_rule *, struct sk_buff *, struct fib_rule_hdr *) ;
   size_t (*nlmsg_payload)(struct fib_rule *) ;
   void (*flush_cache)(struct fib_rules_ops *) ;
   int nlgroup ;
   struct nla_policy *policy ;
   struct list_head rules_list ;
   struct module *owner ;
   struct net *fro_net ;
   struct callback_head rcu ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/l3mdev.h"
struct l3mdev_ops {
   u32 (*l3mdev_fib_table)(struct net_device *) ;
   struct sk_buff *(*l3mdev_l3_rcv)(struct net_device *, struct sk_buff *, u16 ) ;
   struct sk_buff *(*l3mdev_l3_out)(struct net_device *, struct sock *, struct sk_buff *, u16 ) ;
   struct dst_entry *(*l3mdev_link_scope_lookup)(struct net_device *, struct flowi6 *) ;
};
#line 202  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/l3mdev.h"
struct __anonstruct_socket_lock_t_3689 {
   spinlock_t slock ;
   int owned ;
   wait_queue_head_t wq ;
   struct lockdep_map dep_map ;
};
#line 202  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/l3mdev.h"
typedef struct __anonstruct_socket_lock_t_3689 socket_lock_t;
#line 108  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
struct proto;
#line 109  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
typedef __u32 __portpair;
#line 114  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
typedef __u64 __addrpair;
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
struct __anonstruct_3691 {
   __be32 skc_daddr ;
   __be32 skc_rcv_saddr ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_3690 {
   __addrpair skc_addrpair ;
   struct __anonstruct_3691 __anonCompField___anonunion_3690_182 ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_3692 {
   unsigned int skc_hash ;
   __u16 skc_u16hashes[2U] ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
struct __anonstruct_3694 {
   __be16 skc_dport ;
   __u16 skc_num ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_3693 {
   __portpair skc_portpair ;
   struct __anonstruct_3694 __anonCompField___anonunion_3693_185 ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_3695 {
   struct hlist_node skc_bind_node ;
   struct hlist_node skc_portaddr_node ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_3696 {
   unsigned long skc_flags ;
   struct sock *skc_listener ;
   struct inet_timewait_death_row *skc_tw_dr ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_3697 {
   struct hlist_node skc_node ;
   struct hlist_nulls_node skc_nulls_node ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_3698 {
   int skc_incoming_cpu ;
   u32 skc_rcv_wnd ;
   u32 skc_tw_rcv_nxt ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_3699 {
   u32 skc_rxhash ;
   u32 skc_window_clamp ;
   u32 skc_tw_snd_nxt ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
struct sock_common {
   union __anonunion_3690 __anonCompField_sock_common_183 ;
   union __anonunion_3692 __anonCompField_sock_common_184 ;
   union __anonunion_3693 __anonCompField_sock_common_186 ;
   unsigned short skc_family ;
   unsigned char skc_state ;
   unsigned char skc_reuse : 4 ;
   unsigned char skc_reuseport : 1 ;
   unsigned char skc_ipv6only : 1 ;
   unsigned char skc_net_refcnt : 1 ;
   int skc_bound_dev_if ;
   union __anonunion_3695 __anonCompField_sock_common_187 ;
   struct proto *skc_prot ;
   possible_net_t skc_net ;
   struct in6_addr skc_v6_daddr ;
   struct in6_addr skc_v6_rcv_saddr ;
   atomic64_t skc_cookie ;
   union __anonunion_3696 __anonCompField_sock_common_188 ;
   int skc_dontcopy_begin[0U] ;
   union __anonunion_3697 __anonCompField_sock_common_189 ;
   unsigned short skc_tx_queue_mapping ;
   unsigned short skc_rx_queue_mapping ;
   union __anonunion_3698 __anonCompField_sock_common_190 ;
   refcount_t skc_refcnt ;
   int skc_dontcopy_end[0U] ;
   union __anonunion_3699 __anonCompField_sock_common_191 ;
};
#line 231 
struct bpf_sk_storage;
#line 323  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
struct __anonstruct_sk_backlog_3700 {
   atomic_t rmem_alloc ;
   int len ;
   struct sk_buff *head ;
   struct sk_buff *tail ;
};
#line 323  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_3701 {
   struct socket_wq *sk_wq ;
   struct socket_wq *sk_wq_raw ;
};
#line 323  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_3702 {
   struct sk_buff *sk_send_head ;
   struct rb_root tcp_rtx_queue ;
};
#line 323  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
struct sock {
   struct sock_common __sk_common ;
   socket_lock_t sk_lock ;
   atomic_t sk_drops ;
   int sk_rcvlowat ;
   struct sk_buff_head sk_error_queue ;
   struct sk_buff *sk_rx_skb_cache ;
   struct sk_buff_head sk_receive_queue ;
   struct __anonstruct_sk_backlog_3700 sk_backlog ;
   int sk_forward_alloc ;
   unsigned int sk_ll_usec ;
   unsigned int sk_napi_id ;
   int sk_rcvbuf ;
   struct sk_filter *sk_filter ;
   union __anonunion_3701 __anonCompField_sock_192 ;
   struct xfrm_policy *sk_policy[2U] ;
   struct dst_entry *sk_rx_dst ;
   struct dst_entry *sk_dst_cache ;
   atomic_t sk_omem_alloc ;
   int sk_sndbuf ;
   int sk_wmem_queued ;
   refcount_t sk_wmem_alloc ;
   unsigned long sk_tsq_flags ;
   union __anonunion_3702 __anonCompField_sock_193 ;
   struct sk_buff *sk_tx_skb_cache ;
   struct sk_buff_head sk_write_queue ;
   __s32 sk_peek_off ;
   int sk_write_pending ;
   __u32 sk_dst_pending_confirm ;
   u32 sk_pacing_status ;
   long sk_sndtimeo ;
   struct timer_list sk_timer ;
   __u32 sk_priority ;
   __u32 sk_mark ;
   unsigned long sk_pacing_rate ;
   unsigned long sk_max_pacing_rate ;
   struct page_frag sk_frag ;
   netdev_features_t sk_route_caps ;
   netdev_features_t sk_route_nocaps ;
   netdev_features_t sk_route_forced_caps ;
   int sk_gso_type ;
   unsigned int sk_gso_max_size ;
   gfp_t sk_allocation ;
   __u32 sk_txhash ;
   unsigned int __sk_flags_offset[0U] ;
   unsigned int sk_padding : 1 ;
   unsigned int sk_kern_sock : 1 ;
   unsigned int sk_no_check_tx : 1 ;
   unsigned int sk_no_check_rx : 1 ;
   unsigned int sk_userlocks : 4 ;
   unsigned int sk_protocol : 8 ;
   unsigned int sk_type : 16 ;
   u16 sk_gso_max_segs ;
   u8 sk_pacing_shift ;
   unsigned long sk_lingertime ;
   struct proto *sk_prot_creator ;
   rwlock_t sk_callback_lock ;
   int sk_err ;
   int sk_err_soft ;
   u32 sk_ack_backlog ;
   u32 sk_max_ack_backlog ;
   kuid_t sk_uid ;
   struct pid *sk_peer_pid ;
   struct cred *sk_peer_cred ;
   long sk_rcvtimeo ;
   ktime_t sk_stamp ;
   u16 sk_tsflags ;
   u8 sk_shutdown ;
   u32 sk_tskey ;
   atomic_t sk_zckey ;
   u8 sk_clockid ;
   u8 sk_txtime_deadline_mode : 1 ;
   u8 sk_txtime_report_errors : 1 ;
   u8 sk_txtime_unused : 6 ;
   struct socket *sk_socket ;
   void *sk_user_data ;
   void *sk_security ;
   struct sock_cgroup_data sk_cgrp_data ;
   struct mem_cgroup *sk_memcg ;
   void (*sk_state_change)(struct sock *) ;
   void (*sk_data_ready)(struct sock *) ;
   void (*sk_write_space)(struct sock *) ;
   void (*sk_error_report)(struct sock *) ;
   int (*sk_backlog_rcv)(struct sock *, struct sk_buff *) ;
   struct sk_buff *(*sk_validate_xmit_skb)(struct sock *, struct net_device *, struct sk_buff *) ;
   void (*sk_destruct)(struct sock *) ;
   struct sock_reuseport *sk_reuseport_cb ;
   struct bpf_sk_storage *sk_bpf_storage ;
   struct callback_head sk_rcu ;
};
#line 1048 
struct request_sock_ops;
#line 1050 
struct raw_hashinfo;
#line 1051 
struct smc_hashinfo;
#line 1071 
struct udp_table;
#line 1071  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_h_3737 {
   struct inet_hashinfo *hashinfo ;
   struct udp_table *udp_table ;
   struct raw_hashinfo *raw_hash ;
   struct smc_hashinfo *smc_hash ;
};
#line 1071  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
struct proto {
   void (*close)(struct sock *, long ) ;
   int (*pre_connect)(struct sock *, struct sockaddr *, int ) ;
   int (*connect)(struct sock *, struct sockaddr *, int ) ;
   int (*disconnect)(struct sock *, int ) ;
   struct sock *(*accept)(struct sock *, int , int *, bool ) ;
   int (*ioctl)(struct sock *, int , unsigned long ) ;
   int (*init)(struct sock *) ;
   void (*destroy)(struct sock *) ;
   void (*shutdown)(struct sock *, int ) ;
   int (*setsockopt)(struct sock *, int , int , char *, unsigned int ) ;
   int (*getsockopt)(struct sock *, int , int , char *, int *) ;
   void (*keepalive)(struct sock *, int ) ;
   int (*compat_setsockopt)(struct sock *, int , int , char *, unsigned int ) ;
   int (*compat_getsockopt)(struct sock *, int , int , char *, int *) ;
   int (*compat_ioctl)(struct sock *, unsigned int , unsigned long ) ;
   int (*sendmsg)(struct sock *, struct msghdr *, size_t ) ;
   int (*recvmsg)(struct sock *, struct msghdr *, size_t , int , int , int *) ;
   int (*sendpage)(struct sock *, struct page *, int , size_t , int ) ;
   int (*bind)(struct sock *, struct sockaddr *, int ) ;
   int (*backlog_rcv)(struct sock *, struct sk_buff *) ;
   void (*release_cb)(struct sock *) ;
   int (*hash)(struct sock *) ;
   void (*unhash)(struct sock *) ;
   void (*rehash)(struct sock *) ;
   int (*get_port)(struct sock *, unsigned short ) ;
   unsigned int inuse_idx ;
   bool (*stream_memory_free)(struct sock *, int ) ;
   bool (*stream_memory_read)(struct sock *) ;
   void (*enter_memory_pressure)(struct sock *) ;
   void (*leave_memory_pressure)(struct sock *) ;
   atomic_long_t *memory_allocated ;
   struct percpu_counter *sockets_allocated ;
   unsigned long *memory_pressure ;
   long *sysctl_mem ;
   int *sysctl_wmem ;
   int *sysctl_rmem ;
   u32 sysctl_wmem_offset ;
   u32 sysctl_rmem_offset ;
   int max_header ;
   bool no_autobind ;
   struct kmem_cache *slab ;
   unsigned int obj_size ;
   slab_flags_t slab_flags ;
   unsigned int useroffset ;
   unsigned int usersize ;
   struct percpu_counter *orphan_count ;
   struct request_sock_ops *rsk_prot ;
   struct timewait_sock_ops *twsk_prot ;
   union __anonunion_h_3737 h ;
   struct module *owner ;
   char name[32U] ;
   struct list_head node ;
   int (*diag_destroy)(struct sock *, int ) ;
} __attribute__((__designated_init__));
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/request_sock.h"
struct request_sock_ops {
   int family ;
   unsigned int obj_size ;
   struct kmem_cache *slab ;
   char *slab_name ;
   int (*rtx_syn_ack)(struct sock *, struct request_sock *) ;
   void (*send_ack)(struct sock *, struct sk_buff *, struct request_sock *) ;
   void (*send_reset)(struct sock *, struct sk_buff *) ;
   void (*destructor)(struct request_sock *) ;
   void (*syn_ack_timeout)(struct request_sock *) ;
};
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/request_sock.h"
struct request_sock {
   struct sock_common __req_common ;
   struct request_sock *dl_next ;
   u16 mss ;
   u8 num_retrans ;
   u8 cookie_ts : 1 ;
   u8 num_timeout : 7 ;
   u32 ts_recent ;
   struct timer_list rsk_timer ;
   struct request_sock_ops *rsk_ops ;
   struct sock *sk ;
   u32 *saved_syn ;
   u32 secid ;
   u32 peer_secid ;
};
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/udp.h"
struct udphdr {
   __be16 source ;
   __be16 dest ;
   __be16 len ;
   __sum16 check ;
};
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
enum hwmon_sensor_types {
    hwmon_chip = 0,
    hwmon_temp = 1,
    hwmon_in = 2,
    hwmon_curr = 3,
    hwmon_power = 4,
    hwmon_energy = 5,
    hwmon_humidity = 6,
    hwmon_fan = 7,
    hwmon_pwm = 8,
    hwmon_max = 9
};
#line 354  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/hwmon.h"
struct hwmon_ops {
   umode_t (*is_visible)(void *, enum hwmon_sensor_types , u32 , int ) ;
   int (*read)(struct device *, enum hwmon_sensor_types , u32 , int , long *) ;
   int (*read_string)(struct device *, enum hwmon_sensor_types , u32 , int , char **) ;
   int (*write)(struct device *, enum hwmon_sensor_types , u32 , int , long ) ;
};
#line 371  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/hwmon.h"
struct hwmon_channel_info {
   enum hwmon_sensor_types type ;
   u32 *config ;
};
#line 389  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/hwmon.h"
struct hwmon_chip_info {
   struct hwmon_ops *ops ;
   struct hwmon_channel_info **info ;
};
#line 110  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef u64 uint64_t;
#line 346  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jump_label.h"
struct static_key_true {
   struct static_key key ;
};
#line 350  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jump_label.h"
struct static_key_false {
   struct static_key key ;
};
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dynamic_debug.h"
union __anonunion_key_4512 {
   struct static_key_true dd_key_true ;
   struct static_key_false dd_key_false ;
};
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dynamic_debug.h"
struct _ddebug {
   char *modname ;
   char *function ;
   char *filename ;
   char *format ;
   unsigned int lineno : 18 ;
   unsigned int flags : 8 ;
   union __anonunion_key_4512 key ;
} __attribute__((__aligned__(8)));
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/atomic.h"
union __anonunion___u_4570 {
   int __val ;
   char __c[1U] ;
};
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/atomic.h"
union __anonunion___u_4572 {
   int __val ;
   char __c[1U] ;
};
#line 249  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timekeeping.h"
struct system_device_crosststamp {
   ktime_t device ;
   ktime_t sys_realtime ;
   ktime_t sys_monoraw ;
};
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 101  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/refcount.h"
enum refcount_saturation_type {
    REFCOUNT_ADD_NOT_ZERO_OVF = 0,
    REFCOUNT_ADD_OVF = 1,
    REFCOUNT_ADD_UAF = 2,
    REFCOUNT_SUB_UAF = 3,
    REFCOUNT_DEC_LEAK = 4
};
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cdev.h"
struct cdev {
   struct kobject kobj ;
   struct module *owner ;
   struct file_operations *ops ;
   struct list_head list ;
   dev_t dev ;
   unsigned int count ;
} __attribute__((__designated_init__));
#line 35  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pps_kernel.h"
struct pps_event_time {
   struct timespec64 ts_real ;
};
#line 77  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ptp_clock.h"
struct ptp_clock_time {
   __s64 sec ;
   __u32 nsec ;
   __u32 reserved ;
};
#line 95  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ptp_clock.h"
struct ptp_extts_request {
   unsigned int index ;
   unsigned int flags ;
   unsigned int rsv[2U] ;
};
#line 101  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ptp_clock.h"
struct ptp_perout_request {
   struct ptp_clock_time start ;
   struct ptp_clock_time period ;
   unsigned int index ;
   unsigned int flags ;
   unsigned int rsv[4U] ;
};
#line 138 
enum ptp_pin_function {
    PTP_PF_NONE = 0,
    PTP_PF_EXTTS = 1,
    PTP_PF_PEROUT = 2,
    PTP_PF_PHYSYNC = 3
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ptp_clock.h"
struct ptp_pin_desc {
   char name[64U] ;
   unsigned int index ;
   unsigned int func ;
   unsigned int chan ;
   unsigned int rsv[5U] ;
};
#line 205 
enum ldv_6759 {
    PTP_CLK_REQ_EXTTS = 0,
    PTP_CLK_REQ_PEROUT = 1,
    PTP_CLK_REQ_PPS = 2
};
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ptp_clock_kernel.h"
union __anonunion_4823 {
   struct ptp_extts_request extts ;
   struct ptp_perout_request perout ;
};
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ptp_clock_kernel.h"
struct ptp_clock_request {
   enum ldv_6759 type ;
   union __anonunion_4823 __anonCompField_ptp_clock_request_56 ;
};
#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ptp_clock_kernel.h"
struct ptp_system_timestamp {
   struct timespec64 pre_ts ;
   struct timespec64 post_ts ;
};
#line 119  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ptp_clock_kernel.h"
struct ptp_clock_info {
   struct module *owner ;
   char name[16U] ;
   s32 max_adj ;
   int n_alarm ;
   int n_ext_ts ;
   int n_per_out ;
   int n_pins ;
   int pps ;
   struct ptp_pin_desc *pin_config ;
   int (*adjfine)(struct ptp_clock_info *, long ) ;
   int (*adjfreq)(struct ptp_clock_info *, s32 ) ;
   int (*adjtime)(struct ptp_clock_info *, s64 ) ;
   int (*gettime64)(struct ptp_clock_info *, struct timespec64 *) ;
   int (*gettimex64)(struct ptp_clock_info *, struct timespec64 *, struct ptp_system_timestamp *) ;
   int (*getcrosststamp)(struct ptp_clock_info *, struct system_device_crosststamp *) ;
   int (*settime64)(struct ptp_clock_info *, struct timespec64 *) ;
   int (*enable)(struct ptp_clock_info *, struct ptp_clock_request *, int ) ;
   int (*verify)(struct ptp_clock_info *, unsigned int , enum ptp_pin_function , unsigned int ) ;
   long (*do_aux_work)(struct ptp_clock_info *) ;
};
#line 144 
struct ptp_clock;
#line 163  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ptp_clock_kernel.h"
union __anonunion_4824 {
   u64 timestamp ;
   struct pps_event_time pps_times ;
};
#line 163  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ptp_clock_kernel.h"
struct ptp_clock_event {
   int type ;
   int index ;
   union __anonunion_4824 __anonCompField_ptp_clock_event_57 ;
};
#line 439  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/property.h"
typedef u32 phandle;
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/of.h"
struct property {
   char *name ;
   int length ;
   void *value ;
   struct property *next ;
   unsigned long _flags ;
   struct bin_attribute attr ;
};
#line 51  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/of.h"
struct device_node {
   char *name ;
   phandle phandle ;
   char *full_name ;
   struct fwnode_handle fwnode ;
   struct property *properties ;
   struct property *deadprops ;
   struct device_node *parent ;
   struct device_node *child ;
   struct device_node *sibling ;
   struct kobject kobj ;
   unsigned long _flags ;
   void *data ;
};
#line 347  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_hw.h"
enum aq_rx_filter_type;
#line 347 
enum aq_rx_filter_type;
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_phy.h"
enum aq_rx_filter_type {
    aq_rx_filter_ethertype = 0,
    aq_rx_filter_vlan = 1,
    aq_rx_filter_l3l4 = 2
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.c"
struct ptp_skb_ring {
   struct sk_buff **buff ;
   spinlock_t lock ;
   unsigned int size ;
   unsigned int head ;
   unsigned int tail ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.c"
struct ptp_tx_timeout {
   spinlock_t lock ;
   bool active ;
   unsigned long tx_start ;
};
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.c"
struct aq_ptp_s {
   struct aq_nic_s *aq_nic ;
   struct hwtstamp_config hwtstamp_config ;
   spinlock_t ptp_lock ;
   spinlock_t ptp_ring_lock ;
   struct ptp_clock *ptp_clock ;
   struct ptp_clock_info ptp_info ;
   atomic_t offset_egress ;
   atomic_t offset_ingress ;
   struct aq_ring_param_s ptp_ring_param ;
   struct ptp_tx_timeout ptp_tx_timeout ;
   unsigned int idx_vector ;
   struct napi_struct napi ;
   struct aq_ring_s ptp_tx ;
   struct aq_ring_s ptp_rx ;
   struct aq_ring_s hwts_rx ;
   struct ptp_skb_ring skb_ring ;
   struct aq_rx_filter_l3l4 udp_filter ;
   struct aq_rx_filter_l2 eth_type_filter ;
   struct delayed_work poll_sync ;
   u32 poll_timeout_ms ;
   bool extts_pin_enabled ;
   u64 last_sync1588_ts ;
};
#line 82  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.c"
struct ptp_tm_offset {
   unsigned int mbps ;
   int egress ;
   int ingress ;
};
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/atomic.h"
union __anonunion___u_5286 {
   int __val ;
   char __c[1U] ;
};
#line 762  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
union __anonunion___u_5944 {
   struct hlist_node *__val ;
   char __c[1U] ;
};
#line 788  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
union __anonunion___u_5946 {
   struct hlist_node *__val ;
   char __c[1U] ;
};
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 347  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_hw.h"
enum aq_rx_filter_type;
#line 347 
enum aq_rx_filter_type;
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_filters.h"
struct aq_rx_filter {
   struct hlist_node aq_node ;
   enum aq_rx_filter_type type ;
   struct ethtool_rx_flow_spec aq_fsp ;
};
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_vec.c"
struct aq_vec_s {
   struct aq_hw_ops *aq_hw_ops ;
   struct aq_hw_s *aq_hw ;
   struct aq_nic_s *aq_nic ;
   unsigned int tx_rings ;
   unsigned int rx_rings ;
   struct aq_ring_param_s aq_ring_param ;
   struct napi_struct napi ;
   struct aq_ring_s ring[8U][2U] ;
};
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/atomic.h"
union __anonunion___u_7404 {
   int __val ;
   char __c[1U] ;
};
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.h"
struct hw_atl_rxd_hwts_wb_s {
   u32 sec_hw ;
   u32 ns ;
   u32 sec_lw0 ;
   u32 sec_lw1 ;
} __attribute__((__packed__));
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/atomic.h"
union __anonunion___u_8818 {
   int __val ;
   char __c[1U] ;
};
#line 196  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 75  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct icmpv6_mib_device {
   atomic_long_t mibs[6U] ;
};
#line 85  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct icmpv6msg_mib_device {
   atomic_long_t mibs[512U] ;
};
#line 201  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_hw_addr {
   struct list_head list ;
   unsigned char addr[32U] ;
   unsigned char type ;
   bool global_use ;
   int sync_cnt ;
   int refcount ;
   int synced ;
   struct callback_head callback_head ;
};
#line 347  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_hw.h"
enum aq_rx_filter_type;
#line 347 
enum aq_rx_filter_type;
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/timewait_sock.h"
struct timewait_sock_ops {
   struct kmem_cache *twsk_slab ;
   char *twsk_slab_name ;
   unsigned int twsk_obj_size ;
   int (*twsk_unique)(struct sock *, struct sock *, void *) ;
   void (*twsk_destructor)(struct sock *) ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/tcp.h"
struct tcphdr {
   __be16 source ;
   __be16 dest ;
   __be32 seq ;
   __be32 ack_seq ;
   __u16 res1 : 4 ;
   __u16 doff : 4 ;
   __u16 fin : 1 ;
   __u16 syn : 1 ;
   __u16 rst : 1 ;
   __u16 psh : 1 ;
   __u16 ack : 1 ;
   __u16 urg : 1 ;
   __u16 ece : 1 ;
   __u16 cwr : 1 ;
   __be16 window ;
   __sum16 check ;
   __be16 urg_ptr ;
};
#line 116  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ipv6.h"
struct ipv6hdr {
   __u8 priority : 4 ;
   __u8 version : 4 ;
   __u8 flow_lbl[3U] ;
   __be16 payload_len ;
   __u8 nexthdr ;
   __u8 hop_limit ;
   struct in6_addr saddr ;
   struct in6_addr daddr ;
};
#line 63  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ipv6.h"
struct ipv6_stable_secret {
   bool initialized ;
   struct in6_addr secret ;
};
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ipv6.h"
struct ipv6_devconf {
   __s32 forwarding ;
   __s32 hop_limit ;
   __s32 mtu6 ;
   __s32 accept_ra ;
   __s32 accept_redirects ;
   __s32 autoconf ;
   __s32 dad_transmits ;
   __s32 rtr_solicits ;
   __s32 rtr_solicit_interval ;
   __s32 rtr_solicit_max_interval ;
   __s32 rtr_solicit_delay ;
   __s32 force_mld_version ;
   __s32 mldv1_unsolicited_report_interval ;
   __s32 mldv2_unsolicited_report_interval ;
   __s32 use_tempaddr ;
   __s32 temp_valid_lft ;
   __s32 temp_prefered_lft ;
   __s32 regen_max_retry ;
   __s32 max_desync_factor ;
   __s32 max_addresses ;
   __s32 accept_ra_defrtr ;
   __s32 accept_ra_min_hop_limit ;
   __s32 accept_ra_pinfo ;
   __s32 ignore_routes_with_linkdown ;
   __s32 accept_ra_rtr_pref ;
   __s32 rtr_probe_interval ;
   __s32 accept_ra_rt_info_min_plen ;
   __s32 accept_ra_rt_info_max_plen ;
   __s32 proxy_ndp ;
   __s32 accept_source_route ;
   __s32 accept_ra_from_local ;
   __s32 optimistic_dad ;
   __s32 use_optimistic ;
   __s32 mc_forwarding ;
   __s32 disable_ipv6 ;
   __s32 drop_unicast_in_l2_multicast ;
   __s32 accept_dad ;
   __s32 force_tllao ;
   __s32 ndisc_notify ;
   __s32 suppress_frag_ndisc ;
   __s32 accept_ra_mtu ;
   __s32 drop_unsolicited_na ;
   struct ipv6_stable_secret stable_secret ;
   __s32 use_oif_addrs_only ;
   __s32 keep_addr_on_down ;
   __s32 seg6_enabled ;
   __s32 seg6_require_hmac ;
   __u32 enhanced_dad ;
   __u32 addr_gen_mode ;
   __s32 disable_policy ;
   __s32 ndisc_tclass ;
   struct ctl_table_header *sysctl_header ;
};
#line 99  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/if_inet6.h"
struct ip6_sf_list {
   struct ip6_sf_list *sf_next ;
   struct in6_addr sf_addr ;
   unsigned long sf_count[2U] ;
   unsigned char sf_gsresp ;
   unsigned char sf_oldin ;
   unsigned char sf_crcount ;
};
#line 114  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/if_inet6.h"
struct ifmcaddr6 {
   struct in6_addr mca_addr ;
   struct inet6_dev *idev ;
   struct ifmcaddr6 *next ;
   struct ip6_sf_list *mca_sources ;
   struct ip6_sf_list *mca_tomb ;
   unsigned int mca_sfmode ;
   unsigned char mca_crcount ;
   unsigned long mca_sfcount[2U] ;
   struct timer_list mca_timer ;
   unsigned int mca_flags ;
   int mca_users ;
   refcount_t mca_refcnt ;
   spinlock_t mca_lock ;
   unsigned long mca_cstamp ;
   unsigned long mca_tstamp ;
};
#line 140  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/if_inet6.h"
struct ifacaddr6 {
   struct in6_addr aca_addr ;
   struct fib6_info *aca_rt ;
   struct ifacaddr6 *aca_next ;
   struct hlist_node aca_addr_lst ;
   int aca_users ;
   refcount_t aca_refcnt ;
   unsigned long aca_cstamp ;
   unsigned long aca_tstamp ;
   struct callback_head rcu ;
};
#line 156  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/if_inet6.h"
struct ipv6_devstat {
   struct proc_dir_entry *proc_dir_entry ;
   struct ipstats_mib *ipv6 ;
   struct icmpv6_mib_device *icmpv6dev ;
   struct icmpv6msg_mib_device *icmpv6msgdev ;
};
#line 163  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/if_inet6.h"
struct inet6_dev {
   struct net_device *dev ;
   struct list_head addr_list ;
   struct ifmcaddr6 *mc_list ;
   struct ifmcaddr6 *mc_tomb ;
   spinlock_t mc_lock ;
   unsigned char mc_qrv ;
   unsigned char mc_gq_running ;
   unsigned char mc_ifc_count ;
   unsigned char mc_dad_count ;
   unsigned long mc_v1_seen ;
   unsigned long mc_qi ;
   unsigned long mc_qri ;
   unsigned long mc_maxdelay ;
   struct timer_list mc_gq_timer ;
   struct timer_list mc_ifc_timer ;
   struct timer_list mc_dad_timer ;
   struct ifacaddr6 *ac_list ;
   rwlock_t lock ;
   refcount_t refcnt ;
   __u32 if_flags ;
   int dead ;
   u32 desync_factor ;
   u8 rndid[8U] ;
   struct list_head tempaddr_list ;
   struct in6_addr token ;
   struct neigh_parms *nd_parms ;
   struct ipv6_devconf cnf ;
   struct ipv6_devstat stats ;
   struct timer_list rs_timer ;
   __s32 rs_interval ;
   __u8 rs_probes ;
   unsigned long tstamp ;
   struct callback_head rcu ;
};
#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/if_arp.h"
struct prefix_info;
#line 104  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/ndisc.h"
struct nd_opt_hdr {
   __u8 nd_opt_type ;
   __u8 nd_opt_len ;
} __attribute__((__packed__));
#line 110  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/ndisc.h"
struct ndisc_options {
   struct nd_opt_hdr *nd_opt_array[15U] ;
   struct nd_opt_hdr *nd_opts_ri ;
   struct nd_opt_hdr *nd_opts_ri_end ;
   struct nd_opt_hdr *nd_useropts ;
   struct nd_opt_hdr *nd_useropts_end ;
   struct nd_opt_hdr *nd_802154_opt_array[3U] ;
};
#line 201  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/ndisc.h"
struct ndisc_ops {
   int (*is_useropt)(u8 ) ;
   int (*parse_options)(struct net_device *, struct nd_opt_hdr *, struct ndisc_options *) ;
   void (*update)(struct net_device *, struct neighbour *, u32 , u8 , struct ndisc_options *) ;
   int (*opt_addr_space)(struct net_device *, u8 , struct neighbour *, u8 *, u8 **) ;
   void (*fill_addr_option)(struct net_device *, struct sk_buff *, u8 , u8 *) ;
   void (*prefix_rcv_add_addr)(struct net *, struct net_device *, struct prefix_info *, struct inet6_dev *, struct in6_addr *, int , u32 , bool , bool , __u32 , u32 , bool ) ;
};
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/inetpeer.h"
struct inet_peer_base {
   struct rb_root rb_root ;
   seqlock_t lock ;
   int total ;
};
#line 235  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/ip_fib.h"
struct fib_table {
   struct hlist_node tb_hlist ;
   u32 tb_id ;
   int tb_num_default ;
   struct callback_head rcu ;
   unsigned long *tb_data ;
   unsigned long __data[0U] ;
};
#line 121  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/ip.h"
union __anonunion_9749 {
   void (*destructor)(struct sock *) ;
   struct sock *saved_sk ;
};
#line 121  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/ip.h"
struct ip_ra_chain {
   struct ip_ra_chain *next ;
   struct sock *sk ;
   union __anonunion_9749 __anonCompField_ip_ra_chain_207 ;
   struct callback_head rcu ;
};
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/atomic.h"
union __anonunion___u_9823 {
   int __val ;
   char __c[1U] ;
};
#line 827  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.h"
enum mcp_area {
    MCP_AREA_CONFIG = 2147483648,
    MCP_AREA_SETTINGS = 536870912
};
#line 483  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.c"
struct __anonstruct_10462 {
   u16 tid ;
   u16 len ;
};
#line 483  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.c"
union __anonunion_10461 {
   u32 val ;
   struct __anonstruct_10462 __anonCompField___anonunion_10461_166 ;
};
#line 483  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.c"
struct aq_hw_atl_utils_fw_rpc_tid_s {
   union __anonunion_10461 __anonCompField_aq_hw_atl_utils_fw_rpc_tid_s_167 ;
};
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 197 
enum hrtimer_restart;
#line 197 
enum hrtimer_restart;
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
struct device_private {
   void *driver_data ;
};
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/firmware.h"
struct firmware {
   size_t size ;
   u8 *data ;
   struct page **pages ;
   void *priv ;
};
#line 164  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef unsigned long irq_hw_number_t;
#line 303  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ioport.h"
struct irq_data;
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 244  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/idr.h"
struct ida {
   struct xarray xa ;
};
#line 63  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/irqdomain.h"
struct irq_fwspec {
   struct fwnode_handle *fwnode ;
   int param_count ;
   u32 param[16U] ;
};
#line 68 
enum irq_domain_bus_token {
    DOMAIN_BUS_ANY = 0,
    DOMAIN_BUS_WIRED = 1,
    DOMAIN_BUS_GENERIC_MSI = 2,
    DOMAIN_BUS_PCI_MSI = 3,
    DOMAIN_BUS_PLATFORM_MSI = 4,
    DOMAIN_BUS_NEXUS = 5,
    DOMAIN_BUS_IPI = 6,
    DOMAIN_BUS_FSL_MC_MSI = 7,
    DOMAIN_BUS_TI_SCI_INTA_MSI = 8,
    DOMAIN_BUS_WAKEUP = 9
};
#line 104  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/irqdomain.h"
struct irq_domain_ops {
   int (*match)(struct irq_domain *, struct device_node *, enum irq_domain_bus_token ) ;
   int (*select)(struct irq_domain *, struct irq_fwspec *, enum irq_domain_bus_token ) ;
   int (*map)(struct irq_domain *, unsigned int , irq_hw_number_t ) ;
   void (*unmap)(struct irq_domain *, unsigned int ) ;
   int (*xlate)(struct irq_domain *, struct device_node *, u32 *, unsigned int , unsigned long *, unsigned int *) ;
   int (*alloc)(struct irq_domain *, unsigned int , unsigned int , void *) ;
   void (*free)(struct irq_domain *, unsigned int , unsigned int ) ;
   int (*activate)(struct irq_domain *, struct irq_data *, bool ) ;
   void (*deactivate)(struct irq_domain *, struct irq_data *) ;
   int (*translate)(struct irq_domain *, struct irq_fwspec *, unsigned long *, unsigned int *) ;
   void (*debug_show)(struct seq_file *, struct irq_domain *, struct irq_data *, int ) ;
};
#line 132 
struct irq_domain_chip_generic;
#line 161  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/irqdomain.h"
struct irq_domain {
   struct list_head link ;
   char *name ;
   struct irq_domain_ops *ops ;
   void *host_data ;
   unsigned int flags ;
   unsigned int mapcount ;
   struct fwnode_handle *fwnode ;
   enum irq_domain_bus_token bus_token ;
   struct irq_domain_chip_generic *gc ;
   struct irq_domain *parent ;
   struct dentry *debugfs_file ;
   irq_hw_number_t hwirq_max ;
   unsigned int revmap_direct_max_irq ;
   unsigned int revmap_size ;
   struct xarray revmap_tree ;
   struct mutex revmap_tree_mutex ;
   unsigned int linear_revmap[] ;
};
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rtmutex.h"
struct rt_mutex {
   raw_spinlock_t wait_lock ;
   struct rb_root_cached waiters ;
   struct task_struct *owner ;
   int save_state ;
   char *name ;
   char *file ;
   int line ;
   void *magic ;
   struct lockdep_map dep_map ;
};
#line 69  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/i2c.h"
struct i2c_msg {
   __u16 addr ;
   __u16 flags ;
   __u16 len ;
   __u8 *buf ;
};
#line 135  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/i2c.h"
union i2c_smbus_data {
   __u8 byte ;
   __u16 word ;
   __u8 block[34U] ;
};
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/i2c.h"
struct i2c_algorithm;
#line 28 
struct i2c_adapter;
#line 29 
struct i2c_client;
#line 33 
enum i2c_slave_event;
#line 33 
enum i2c_slave_event;
#line 314  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/i2c.h"
struct i2c_client {
   unsigned short flags ;
   unsigned short addr ;
   char name[20U] ;
   struct i2c_adapter *adapter ;
   struct device dev ;
   int init_irq ;
   int irq ;
   struct list_head detected ;
   int (*slave_cb)(struct i2c_client *, enum i2c_slave_event , u8 *) ;
};
#line 360 
enum i2c_slave_event {
    I2C_SLAVE_READ_REQUESTED = 0,
    I2C_SLAVE_WRITE_REQUESTED = 1,
    I2C_SLAVE_READ_PROCESSED = 2,
    I2C_SLAVE_WRITE_RECEIVED = 3,
    I2C_SLAVE_STOP = 4
};
#line 527  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/i2c.h"
struct i2c_algorithm {
   int (*master_xfer)(struct i2c_adapter *, struct i2c_msg *, int ) ;
   int (*master_xfer_atomic)(struct i2c_adapter *, struct i2c_msg *, int ) ;
   int (*smbus_xfer)(struct i2c_adapter *, u16 , unsigned short , char , u8 , int , union i2c_smbus_data *) ;
   int (*smbus_xfer_atomic)(struct i2c_adapter *, u16 , unsigned short , char , u8 , int , union i2c_smbus_data *) ;
   u32 (*functionality)(struct i2c_adapter *) ;
   int (*reg_slave)(struct i2c_client *) ;
   int (*unreg_slave)(struct i2c_client *) ;
};
#line 565  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/i2c.h"
struct i2c_lock_operations {
   void (*lock_bus)(struct i2c_adapter *, unsigned int ) ;
   int (*trylock_bus)(struct i2c_adapter *, unsigned int ) ;
   void (*unlock_bus)(struct i2c_adapter *, unsigned int ) ;
};
#line 618 
struct gpio_desc;
#line 618  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/i2c.h"
struct i2c_bus_recovery_info {
   int (*recover_bus)(struct i2c_adapter *) ;
   int (*get_scl)(struct i2c_adapter *) ;
   void (*set_scl)(struct i2c_adapter *, int ) ;
   int (*get_sda)(struct i2c_adapter *) ;
   void (*set_sda)(struct i2c_adapter *, int ) ;
   int (*get_bus_free)(struct i2c_adapter *) ;
   void (*prepare_recovery)(struct i2c_adapter *) ;
   void (*unprepare_recovery)(struct i2c_adapter *) ;
   struct gpio_desc *scl_gpiod ;
   struct gpio_desc *sda_gpiod ;
};
#line 661  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/i2c.h"
struct i2c_adapter_quirks {
   u64 flags ;
   int max_num_msgs ;
   u16 max_write_len ;
   u16 max_read_len ;
   u16 max_comb_1st_msg_len ;
   u16 max_comb_2nd_msg_len ;
};
#line 692  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/i2c.h"
struct i2c_adapter {
   struct module *owner ;
   unsigned int class ;
   struct i2c_algorithm *algo ;
   void *algo_data ;
   struct i2c_lock_operations *lock_ops ;
   struct rt_mutex bus_lock ;
   struct rt_mutex mux_lock ;
   int timeout ;
   int retries ;
   struct device dev ;
   unsigned long locked_flags ;
   int nr ;
   char name[48U] ;
   struct completion dev_released ;
   struct mutex userspace_clients_lock ;
   struct list_head userspace_clients ;
   struct i2c_bus_recovery_info *bus_recovery_info ;
   struct i2c_adapter_quirks *quirks ;
   struct irq_domain *host_notify_domain ;
};
#line 87  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/v4l2-common.h"
struct v4l2_edid {
   __u32 pad ;
   __u32 start_block ;
   __u32 blocks ;
   __u32 reserved[5U] ;
   __u8 *edid ;
};
#line 754 
enum v4l2_priority {
    V4L2_PRIORITY_UNSET = 0,
    V4L2_PRIORITY_BACKGROUND = 1,
    V4L2_PRIORITY_INTERACTIVE = 2,
    V4L2_PRIORITY_RECORD = 3,
    V4L2_PRIORITY_DEFAULT = 2
};
#line 413  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_rect {
   __s32 left ;
   __s32 top ;
   __u32 width ;
   __u32 height ;
};
#line 420  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_fract {
   __u32 numerator ;
   __u32 denominator ;
};
#line 1212  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
typedef __u64 v4l2_std_id;
#line 1394  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_bt_timings {
   __u32 width ;
   __u32 height ;
   __u32 interlaced ;
   __u32 polarities ;
   __u64 pixelclock ;
   __u32 hfrontporch ;
   __u32 hsync ;
   __u32 hbackporch ;
   __u32 vfrontporch ;
   __u32 vsync ;
   __u32 vbackporch ;
   __u32 il_vfrontporch ;
   __u32 il_vsync ;
   __u32 il_vbackporch ;
   __u32 standards ;
   __u32 flags ;
   struct v4l2_fract picture_aspect ;
   __u8 cea861_vic ;
   __u8 hdmi_vic ;
   __u8 reserved[46U] ;
} __attribute__((__packed__));
#line 1517  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
union __anonunion_13654 {
   struct v4l2_bt_timings bt ;
   __u32 reserved[32U] ;
};
#line 1517  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_dv_timings {
   __u32 type ;
   union __anonunion_13654 __anonCompField_v4l2_dv_timings_77 ;
} __attribute__((__packed__));
#line 1536  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_enum_dv_timings {
   __u32 index ;
   __u32 pad ;
   __u32 reserved[2U] ;
   struct v4l2_dv_timings timings ;
};
#line 1554  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_bt_timings_cap {
   __u32 min_width ;
   __u32 max_width ;
   __u32 min_height ;
   __u32 max_height ;
   __u64 min_pixelclock ;
   __u64 max_pixelclock ;
   __u32 standards ;
   __u32 capabilities ;
   __u32 reserved[16U] ;
} __attribute__((__packed__));
#line 1581  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
union __anonunion_13655 {
   struct v4l2_bt_timings_cap bt ;
   __u32 raw_data[32U] ;
};
#line 1581  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_dv_timings_cap {
   __u32 type ;
   __u32 pad ;
   __u32 reserved[2U] ;
   union __anonunion_13655 __anonCompField_v4l2_dv_timings_cap_78 ;
};
#line 1803  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_tuner {
   __u32 index ;
   __u8 name[32U] ;
   __u32 type ;
   __u32 capability ;
   __u32 rangelow ;
   __u32 rangehigh ;
   __u32 rxsubchans ;
   __u32 audmode ;
   __s32 signal ;
   __s32 afc ;
   __u32 reserved[4U] ;
};
#line 1817  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_modulator {
   __u32 index ;
   __u8 name[32U] ;
   __u32 capability ;
   __u32 rangelow ;
   __u32 rangehigh ;
   __u32 txsubchans ;
   __u32 type ;
   __u32 reserved[3U] ;
};
#line 1860  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_frequency {
   __u32 tuner ;
   __u32 type ;
   __u32 frequency ;
   __u32 reserved[8U] ;
};
#line 1871  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_frequency_band {
   __u32 tuner ;
   __u32 type ;
   __u32 index ;
   __u32 capability ;
   __u32 rangelow ;
   __u32 rangehigh ;
   __u32 modulation ;
   __u32 reserved[9U] ;
};
#line 2043  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_vbi_format {
   __u32 sampling_rate ;
   __u32 offset ;
   __u32 samples_per_line ;
   __u32 sample_format ;
   __s32 start[2U] ;
   __u32 count[2U] ;
   __u32 flags ;
   __u32 reserved[2U] ;
};
#line 2071  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_sliced_vbi_format {
   __u16 service_set ;
   __u16 service_lines[2U][24U] ;
   __u32 io_size ;
   __u32 reserved[2U] ;
};
#line 2095  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_sliced_vbi_cap {
   __u16 service_set ;
   __u16 service_lines[2U][24U] ;
   __u32 type ;
   __u32 reserved[3U] ;
};
#line 2106  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_sliced_vbi_data {
   __u32 id ;
   __u32 field ;
   __u32 line ;
   __u32 reserved ;
   __u8 data[48U] ;
};
#line 2350  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_event_subscription {
   __u32 type ;
   __u32 id ;
   __u32 flags ;
   __u32 reserved[5U] ;
};
#line 2375  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
union __anonunion_13671 {
   __u32 addr ;
   char name[32U] ;
};
#line 2375  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_dbg_match {
   __u32 type ;
   union __anonunion_13671 __anonCompField_v4l2_dbg_match_87 ;
} __attribute__((__packed__));
#line 2383  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_dbg_register {
   struct v4l2_dbg_match match ;
   __u32 size ;
   __u64 reg ;
   __u64 val ;
} __attribute__((__packed__));
#line 57  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_device;
#line 57  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_gobj {
   struct media_device *mdev ;
   u32 id ;
   struct list_head list ;
};
#line 72  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_entity_enum {
   unsigned long *bmap ;
   int idx_max ;
};
#line 88 
struct media_entity;
#line 88  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct __anonstruct_stack_13675 {
   struct media_entity *entity ;
   struct list_head *link ;
};
#line 88  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_graph {
   struct __anonstruct_stack_13675 stack[16U] ;
   struct media_entity_enum ent_enum ;
   int top ;
};
#line 104  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_pipeline {
   int streaming_count ;
   struct media_graph graph ;
};
#line 132 
struct media_pad;
#line 132 
struct media_interface;
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
union __anonunion_13676 {
   struct media_gobj *gobj0 ;
   struct media_pad *source ;
   struct media_interface *intf ;
};
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
union __anonunion_13677 {
   struct media_gobj *gobj1 ;
   struct media_pad *sink ;
   struct media_entity *entity ;
};
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_link {
   struct media_gobj graph_obj ;
   struct list_head list ;
   union __anonunion_13676 __anonCompField_media_link_90 ;
   union __anonunion_13677 __anonCompField_media_link_91 ;
   struct media_link *reverse ;
   unsigned long flags ;
   bool is_backlink ;
};
#line 149 
enum media_pad_signal_type {
    PAD_SIGNAL_DEFAULT = 0,
    PAD_SIGNAL_ANALOG = 1,
    PAD_SIGNAL_DV = 2,
    PAD_SIGNAL_AUDIO = 3
};
#line 189  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_pad {
   struct media_gobj graph_obj ;
   struct media_entity *entity ;
   u16 index ;
   enum media_pad_signal_type sig_type ;
   unsigned long flags ;
};
#line 214  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_entity_operations {
   int (*get_fwnode_pad)(struct fwnode_endpoint *) ;
   int (*link_setup)(struct media_entity *, struct media_pad *, struct media_pad *, u32 ) ;
   int (*link_validate)(struct media_link *) ;
};
#line 221 
enum media_entity_type {
    MEDIA_ENTITY_TYPE_BASE = 0,
    MEDIA_ENTITY_TYPE_VIDEO_DEVICE = 1,
    MEDIA_ENTITY_TYPE_V4L2_SUBDEV = 2
};
#line 289  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct __anonstruct_dev_13679 {
   u32 major ;
   u32 minor ;
};
#line 289  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
union __anonunion_info_13678 {
   struct __anonstruct_dev_13679 dev ;
};
#line 289  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_entity {
   struct media_gobj graph_obj ;
   char *name ;
   enum media_entity_type obj_type ;
   u32 function ;
   unsigned long flags ;
   u16 num_pads ;
   u16 num_links ;
   u16 num_backlinks ;
   int internal_idx ;
   struct media_pad *pads ;
   struct list_head links ;
   struct media_entity_operations *ops ;
   int stream_count ;
   int use_count ;
   struct media_pipeline *pipe ;
   union __anonunion_info_13678 info ;
};
#line 335  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_interface {
   struct media_gobj graph_obj ;
   struct list_head links ;
   u32 type ;
   u32 flags ;
};
#line 349  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_intf_devnode {
   struct media_interface intf ;
   u32 major ;
   u32 minor ;
};
#line 1087 
enum vfl_devnode_type {
    VFL_TYPE_GRABBER = 0,
    VFL_TYPE_VBI = 1,
    VFL_TYPE_RADIO = 2,
    VFL_TYPE_SUBDEV = 3,
    VFL_TYPE_SDR = 4,
    VFL_TYPE_TOUCH = 5,
    VFL_TYPE_MAX = 6
};
#line 1097 
enum vfl_devnode_direction {
    VFL_DIR_RX = 0,
    VFL_DIR_TX = 1,
    VFL_DIR_M2M = 2
};
#line 1104 
struct video_device;
#line 1105 
struct v4l2_device;
#line 1106 
struct v4l2_ctrl_handler;
#line 104  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-dev.h"
struct v4l2_prio_state {
   atomic_t prios[4U] ;
};
#line 193  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-dev.h"
struct v4l2_file_operations {
   struct module *owner ;
   ssize_t (*read)(struct file *, char *, size_t , loff_t *) ;
   ssize_t (*write)(struct file *, char *, size_t , loff_t *) ;
   __poll_t (*poll)(struct file *, struct poll_table_struct *) ;
   long (*unlocked_ioctl)(struct file *, unsigned int , unsigned long ) ;
   long (*compat_ioctl32)(struct file *, unsigned int , unsigned long ) ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   int (*mmap)(struct file *, struct vm_area_struct *) ;
   int (*open)(struct file *) ;
   int (*release)(struct file *) ;
};
#line 256 
struct vb2_queue;
#line 256 
struct v4l2_ioctl_ops;
#line 256  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-dev.h"
struct video_device {
   struct media_entity entity ;
   struct media_intf_devnode *intf_devnode ;
   struct media_pipeline pipe ;
   struct v4l2_file_operations *fops ;
   u32 device_caps ;
   struct device dev ;
   struct cdev *cdev ;
   struct v4l2_device *v4l2_dev ;
   struct device *dev_parent ;
   struct v4l2_ctrl_handler *ctrl_handler ;
   struct vb2_queue *queue ;
   struct v4l2_prio_state *prio ;
   char name[32U] ;
   enum vfl_devnode_type vfl_type ;
   enum vfl_devnode_direction vfl_dir ;
   int minor ;
   u16 num ;
   unsigned long flags ;
   int index ;
   spinlock_t fh_lock ;
   struct list_head fh_list ;
   int dev_debug ;
   v4l2_std_id tvnorms ;
   void (*release)(struct video_device *) ;
   struct v4l2_ioctl_ops *ioctl_ops ;
   unsigned long valid_ioctls[3U] ;
   struct mutex *lock ;
};
#line 95  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-common.h"
struct v4l2_subdev;
#line 96 
struct v4l2_subdev_ops;
#line 335  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-common.h"
struct v4l2_priv_tun_config {
   int tuner ;
   void *priv ;
};
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-devnode.h"
struct media_file_operations {
   struct module *owner ;
   ssize_t (*read)(struct file *, char *, size_t , loff_t *) ;
   ssize_t (*write)(struct file *, char *, size_t , loff_t *) ;
   __poll_t (*poll)(struct file *, struct poll_table_struct *) ;
   long (*ioctl)(struct file *, unsigned int , unsigned long ) ;
   long (*compat_ioctl)(struct file *, unsigned int , unsigned long ) ;
   int (*open)(struct file *) ;
   int (*release)(struct file *) ;
};
#line 75  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-devnode.h"
struct media_devnode {
   struct media_device *media_dev ;
   struct media_file_operations *fops ;
   struct device dev ;
   struct cdev cdev ;
   struct device *parent ;
   int minor ;
   unsigned long flags ;
   void (*release)(struct media_devnode *) ;
};
#line 65  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-device.h"
struct media_request;
#line 65  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-device.h"
struct media_device_ops {
   int (*link_notify)(struct media_link *, u32 , unsigned int ) ;
   struct media_request *(*req_alloc)(struct media_device *) ;
   void (*req_free)(struct media_request *) ;
   int (*req_validate)(struct media_request *) ;
   void (*req_queue)(struct media_request *) ;
};
#line 144  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-device.h"
struct media_device {
   struct device *dev ;
   struct media_devnode *devnode ;
   char model[32U] ;
   char driver_name[32U] ;
   char serial[40U] ;
   char bus_info[32U] ;
   u32 hw_revision ;
   u64 topology_version ;
   u32 id ;
   struct ida entity_internal_idx ;
   int entity_internal_idx_max ;
   struct list_head entities ;
   struct list_head interfaces ;
   struct list_head pads ;
   struct list_head links ;
   struct list_head entity_notify ;
   struct mutex graph_mutex ;
   struct media_graph pm_count_walk ;
   void *source_priv ;
   int (*enable_source)(struct media_entity *, struct media_pipeline *) ;
   void (*disable_source)(struct media_entity *) ;
   struct media_device_ops *ops ;
   struct mutex req_queue_mutex ;
   atomic_t request_id ;
};
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/v4l2-mediabus.h"
struct v4l2_mbus_framefmt {
   __u32 width ;
   __u32 height ;
   __u32 code ;
   __u32 field ;
   __u32 colorspace ;
   __u16 ycbcr_enc ;
   __u16 quantization ;
   __u16 xfer_func ;
   __u16 reserved[11U] ;
};
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/v4l2-subdev.h"
struct v4l2_subdev_format {
   __u32 which ;
   __u32 pad ;
   struct v4l2_mbus_framefmt format ;
   __u32 reserved[8U] ;
};
#line 75  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/v4l2-subdev.h"
struct v4l2_subdev_mbus_code_enum {
   __u32 pad ;
   __u32 index ;
   __u32 code ;
   __u32 which ;
   __u32 reserved[8U] ;
};
#line 90  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/v4l2-subdev.h"
struct v4l2_subdev_frame_size_enum {
   __u32 index ;
   __u32 pad ;
   __u32 code ;
   __u32 min_width ;
   __u32 max_width ;
   __u32 min_height ;
   __u32 max_height ;
   __u32 which ;
   __u32 reserved[8U] ;
};
#line 107  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/v4l2-subdev.h"
struct v4l2_subdev_frame_interval {
   __u32 pad ;
   struct v4l2_fract interval ;
   __u32 reserved[9U] ;
};
#line 123  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/v4l2-subdev.h"
struct v4l2_subdev_frame_interval_enum {
   __u32 index ;
   __u32 pad ;
   __u32 code ;
   __u32 width ;
   __u32 height ;
   struct v4l2_fract interval ;
   __u32 which ;
   __u32 reserved[8U] ;
};
#line 149  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/v4l2-subdev.h"
struct v4l2_subdev_selection {
   __u32 which ;
   __u32 pad ;
   __u32 target ;
   __u32 flags ;
   struct v4l2_rect r ;
   __u32 reserved[8U] ;
};
#line 157 
struct v4l2_async_notifier;
#line 158 
enum v4l2_async_match_type {
    V4L2_ASYNC_MATCH_CUSTOM = 0,
    V4L2_ASYNC_MATCH_DEVNAME = 1,
    V4L2_ASYNC_MATCH_I2C = 2,
    V4L2_ASYNC_MATCH_FWNODE = 3
};
#line 79  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-async.h"
struct __anonstruct_i2c_13693 {
   int adapter_id ;
   unsigned short address ;
};
#line 79  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-async.h"
struct __anonstruct_custom_13694 {
   bool (*match)(struct device *, struct v4l2_async_subdev *) ;
   void *priv ;
};
#line 79  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-async.h"
union __anonunion_match_13692 {
   struct fwnode_handle *fwnode ;
   char *device_name ;
   struct __anonstruct_i2c_13693 i2c ;
   struct __anonstruct_custom_13694 custom ;
};
#line 79  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-async.h"
struct v4l2_async_subdev {
   enum v4l2_async_match_type match_type ;
   union __anonunion_match_13692 match ;
   struct list_head list ;
   struct list_head asd_list ;
};
#line 107  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-async.h"
struct v4l2_async_notifier_operations {
   int (*bound)(struct v4l2_async_notifier *, struct v4l2_subdev *, struct v4l2_async_subdev *) ;
   int (*complete)(struct v4l2_async_notifier *) ;
   void (*unbind)(struct v4l2_async_notifier *, struct v4l2_subdev *, struct v4l2_async_subdev *) ;
};
#line 129  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-async.h"
struct v4l2_async_notifier {
   struct v4l2_async_notifier_operations *ops ;
   struct v4l2_device *v4l2_dev ;
   struct v4l2_subdev *sd ;
   struct v4l2_async_notifier *parent ;
   struct list_head asd_list ;
   struct list_head waiting ;
   struct list_head done ;
   struct list_head list ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-fh.h"
struct v4l2_m2m_ctx;
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-fh.h"
struct v4l2_fh {
   struct list_head list ;
   struct video_device *vdev ;
   struct v4l2_ctrl_handler *ctrl_handler ;
   enum v4l2_priority prio ;
   wait_queue_head_t wait ;
   struct mutex subscribe_lock ;
   struct list_head subscribed ;
   struct list_head available ;
   unsigned int navailable ;
   u32 sequence ;
   struct v4l2_m2m_ctx *m2m_ctx ;
};
#line 162 
enum v4l2_mbus_type {
    V4L2_MBUS_UNKNOWN = 0,
    V4L2_MBUS_PARALLEL = 1,
    V4L2_MBUS_BT656 = 2,
    V4L2_MBUS_CSI1 = 3,
    V4L2_MBUS_CCP2 = 4,
    V4L2_MBUS_CSI2_DPHY = 5,
    V4L2_MBUS_CSI2_CPHY = 6
};
#line 97  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-mediabus.h"
struct v4l2_mbus_config {
   enum v4l2_mbus_type type ;
   unsigned int flags ;
};
#line 184 
struct v4l2_subdev_fh;
#line 185 
struct tuner_setup;
#line 186 
struct v4l2_mbus_frame_desc;
#line 52  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_decode_vbi_line {
   u32 is_second_field ;
   u8 *p ;
   u32 line ;
   u32 type ;
};
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_io_pin_config {
   u32 flags ;
   u8 pin ;
   u8 function ;
   u8 value ;
   u8 strength ;
};
#line 188  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_core_ops {
   int (*log_status)(struct v4l2_subdev *) ;
   int (*s_io_pin_config)(struct v4l2_subdev *, size_t , struct v4l2_subdev_io_pin_config *) ;
   int (*init)(struct v4l2_subdev *, u32 ) ;
   int (*load_fw)(struct v4l2_subdev *) ;
   int (*reset)(struct v4l2_subdev *, u32 ) ;
   int (*s_gpio)(struct v4l2_subdev *, u32 ) ;
   long (*ioctl)(struct v4l2_subdev *, unsigned int , void *) ;
   long (*compat_ioctl32)(struct v4l2_subdev *, unsigned int , unsigned long ) ;
   int (*g_register)(struct v4l2_subdev *, struct v4l2_dbg_register *) ;
   int (*s_register)(struct v4l2_subdev *, struct v4l2_dbg_register *) ;
   int (*s_power)(struct v4l2_subdev *, int ) ;
   int (*interrupt_service_routine)(struct v4l2_subdev *, u32 , bool *) ;
   int (*subscribe_event)(struct v4l2_subdev *, struct v4l2_fh *, struct v4l2_event_subscription *) ;
   int (*unsubscribe_event)(struct v4l2_subdev *, struct v4l2_fh *, struct v4l2_event_subscription *) ;
};
#line 264  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_tuner_ops {
   int (*standby)(struct v4l2_subdev *) ;
   int (*s_radio)(struct v4l2_subdev *) ;
   int (*s_frequency)(struct v4l2_subdev *, struct v4l2_frequency *) ;
   int (*g_frequency)(struct v4l2_subdev *, struct v4l2_frequency *) ;
   int (*enum_freq_bands)(struct v4l2_subdev *, struct v4l2_frequency_band *) ;
   int (*g_tuner)(struct v4l2_subdev *, struct v4l2_tuner *) ;
   int (*s_tuner)(struct v4l2_subdev *, struct v4l2_tuner *) ;
   int (*g_modulator)(struct v4l2_subdev *, struct v4l2_modulator *) ;
   int (*s_modulator)(struct v4l2_subdev *, struct v4l2_modulator *) ;
   int (*s_type_addr)(struct v4l2_subdev *, struct tuner_setup *) ;
   int (*s_config)(struct v4l2_subdev *, struct v4l2_priv_tun_config *) ;
};
#line 304  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_audio_ops {
   int (*s_clock_freq)(struct v4l2_subdev *, u32 ) ;
   int (*s_i2s_clock_freq)(struct v4l2_subdev *, u32 ) ;
   int (*s_routing)(struct v4l2_subdev *, u32 , u32 , u32 ) ;
   int (*s_stream)(struct v4l2_subdev *, int ) ;
};
#line 310 
enum v4l2_mbus_frame_desc_flags {
    V4L2_MBUS_FRAME_DESC_FL_LEN_MAX = 1,
    V4L2_MBUS_FRAME_DESC_FL_BLOB = 2
};
#line 335  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_mbus_frame_desc_entry {
   enum v4l2_mbus_frame_desc_flags flags ;
   u32 pixelcode ;
   u32 length ;
};
#line 348  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_mbus_frame_desc {
   struct v4l2_mbus_frame_desc_entry entry[4U] ;
   unsigned short num_entries ;
};
#line 415  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_video_ops {
   int (*s_routing)(struct v4l2_subdev *, u32 , u32 , u32 ) ;
   int (*s_crystal_freq)(struct v4l2_subdev *, u32 , u32 ) ;
   int (*g_std)(struct v4l2_subdev *, v4l2_std_id *) ;
   int (*s_std)(struct v4l2_subdev *, v4l2_std_id ) ;
   int (*s_std_output)(struct v4l2_subdev *, v4l2_std_id ) ;
   int (*g_std_output)(struct v4l2_subdev *, v4l2_std_id *) ;
   int (*querystd)(struct v4l2_subdev *, v4l2_std_id *) ;
   int (*g_tvnorms)(struct v4l2_subdev *, v4l2_std_id *) ;
   int (*g_tvnorms_output)(struct v4l2_subdev *, v4l2_std_id *) ;
   int (*g_input_status)(struct v4l2_subdev *, u32 *) ;
   int (*s_stream)(struct v4l2_subdev *, int ) ;
   int (*g_pixelaspect)(struct v4l2_subdev *, struct v4l2_fract *) ;
   int (*g_frame_interval)(struct v4l2_subdev *, struct v4l2_subdev_frame_interval *) ;
   int (*s_frame_interval)(struct v4l2_subdev *, struct v4l2_subdev_frame_interval *) ;
   int (*s_dv_timings)(struct v4l2_subdev *, struct v4l2_dv_timings *) ;
   int (*g_dv_timings)(struct v4l2_subdev *, struct v4l2_dv_timings *) ;
   int (*query_dv_timings)(struct v4l2_subdev *, struct v4l2_dv_timings *) ;
   int (*g_mbus_config)(struct v4l2_subdev *, struct v4l2_mbus_config *) ;
   int (*s_mbus_config)(struct v4l2_subdev *, struct v4l2_mbus_config *) ;
   int (*s_rx_buffer)(struct v4l2_subdev *, void *, unsigned int *) ;
};
#line 481  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_vbi_ops {
   int (*decode_vbi_line)(struct v4l2_subdev *, struct v4l2_decode_vbi_line *) ;
   int (*s_vbi_data)(struct v4l2_subdev *, struct v4l2_sliced_vbi_data *) ;
   int (*g_vbi_data)(struct v4l2_subdev *, struct v4l2_sliced_vbi_data *) ;
   int (*g_sliced_vbi_cap)(struct v4l2_subdev *, struct v4l2_sliced_vbi_cap *) ;
   int (*s_raw_fmt)(struct v4l2_subdev *, struct v4l2_vbi_format *) ;
   int (*g_sliced_fmt)(struct v4l2_subdev *, struct v4l2_sliced_vbi_format *) ;
   int (*s_sliced_fmt)(struct v4l2_subdev *, struct v4l2_sliced_vbi_format *) ;
};
#line 501  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_sensor_ops {
   int (*g_skip_top_lines)(struct v4l2_subdev *, u32 *) ;
   int (*g_skip_frames)(struct v4l2_subdev *, u32 *) ;
};
#line 505 
enum v4l2_subdev_ir_mode {
    V4L2_SUBDEV_IR_MODE_PULSE_WIDTH = 0
};
#line 540  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_ir_parameters {
   unsigned int bytes_per_data_element ;
   enum v4l2_subdev_ir_mode mode ;
   bool enable ;
   bool interrupt_enable ;
   bool shutdown ;
   bool modulation ;
   u32 max_pulse_width ;
   unsigned int carrier_freq ;
   unsigned int duty_cycle ;
   bool invert_level ;
   bool invert_carrier_sense ;
   u32 noise_filter_min_width ;
   unsigned int carrier_range_lower ;
   unsigned int carrier_range_upper ;
   u32 resolution ;
};
#line 599  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_ir_ops {
   int (*rx_read)(struct v4l2_subdev *, u8 *, size_t , ssize_t *) ;
   int (*rx_g_parameters)(struct v4l2_subdev *, struct v4l2_subdev_ir_parameters *) ;
   int (*rx_s_parameters)(struct v4l2_subdev *, struct v4l2_subdev_ir_parameters *) ;
   int (*tx_write)(struct v4l2_subdev *, u8 *, size_t , ssize_t *) ;
   int (*tx_g_parameters)(struct v4l2_subdev *, struct v4l2_subdev_ir_parameters *) ;
   int (*tx_s_parameters)(struct v4l2_subdev *, struct v4l2_subdev_ir_parameters *) ;
};
#line 630  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_pad_config {
   struct v4l2_mbus_framefmt try_fmt ;
   struct v4l2_rect try_crop ;
   struct v4l2_rect try_compose ;
};
#line 674  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_pad_ops {
   int (*init_cfg)(struct v4l2_subdev *, struct v4l2_subdev_pad_config *) ;
   int (*enum_mbus_code)(struct v4l2_subdev *, struct v4l2_subdev_pad_config *, struct v4l2_subdev_mbus_code_enum *) ;
   int (*enum_frame_size)(struct v4l2_subdev *, struct v4l2_subdev_pad_config *, struct v4l2_subdev_frame_size_enum *) ;
   int (*enum_frame_interval)(struct v4l2_subdev *, struct v4l2_subdev_pad_config *, struct v4l2_subdev_frame_interval_enum *) ;
   int (*get_fmt)(struct v4l2_subdev *, struct v4l2_subdev_pad_config *, struct v4l2_subdev_format *) ;
   int (*set_fmt)(struct v4l2_subdev *, struct v4l2_subdev_pad_config *, struct v4l2_subdev_format *) ;
   int (*get_selection)(struct v4l2_subdev *, struct v4l2_subdev_pad_config *, struct v4l2_subdev_selection *) ;
   int (*set_selection)(struct v4l2_subdev *, struct v4l2_subdev_pad_config *, struct v4l2_subdev_selection *) ;
   int (*get_edid)(struct v4l2_subdev *, struct v4l2_edid *) ;
   int (*set_edid)(struct v4l2_subdev *, struct v4l2_edid *) ;
   int (*dv_timings_cap)(struct v4l2_subdev *, struct v4l2_dv_timings_cap *) ;
   int (*enum_dv_timings)(struct v4l2_subdev *, struct v4l2_enum_dv_timings *) ;
   int (*link_validate)(struct v4l2_subdev *, struct media_link *, struct v4l2_subdev_format *, struct v4l2_subdev_format *) ;
   int (*get_frame_desc)(struct v4l2_subdev *, unsigned int , struct v4l2_mbus_frame_desc *) ;
   int (*set_frame_desc)(struct v4l2_subdev *, unsigned int , struct v4l2_mbus_frame_desc *) ;
};
#line 727  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_ops {
   struct v4l2_subdev_core_ops *core ;
   struct v4l2_subdev_tuner_ops *tuner ;
   struct v4l2_subdev_audio_ops *audio ;
   struct v4l2_subdev_video_ops *video ;
   struct v4l2_subdev_vbi_ops *vbi ;
   struct v4l2_subdev_ir_ops *ir ;
   struct v4l2_subdev_sensor_ops *sensor ;
   struct v4l2_subdev_pad_ops *pad ;
};
#line 765  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_internal_ops {
   int (*registered)(struct v4l2_subdev *) ;
   void (*unregistered)(struct v4l2_subdev *) ;
   int (*open)(struct v4l2_subdev *, struct v4l2_subdev_fh *) ;
   int (*close)(struct v4l2_subdev *, struct v4l2_subdev_fh *) ;
   void (*release)(struct v4l2_subdev *) ;
};
#line 772 
struct regulator_bulk_data;
#line 797  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_platform_data {
   struct regulator_bulk_data *regulators ;
   int num_regulators ;
   void *host_priv ;
};
#line 848  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev {
   struct media_entity entity ;
   struct list_head list ;
   struct module *owner ;
   bool owner_v4l2_dev ;
   u32 flags ;
   struct v4l2_device *v4l2_dev ;
   struct v4l2_subdev_ops *ops ;
   struct v4l2_subdev_internal_ops *internal_ops ;
   struct v4l2_ctrl_handler *ctrl_handler ;
   char name[32U] ;
   u32 grp_id ;
   void *dev_priv ;
   void *host_priv ;
   struct video_device *devnode ;
   struct device *dev ;
   struct fwnode_handle *fwnode ;
   struct list_head async_list ;
   struct v4l2_async_subdev *asd ;
   struct v4l2_async_notifier *notifier ;
   struct v4l2_async_notifier *subdev_notifier ;
   struct v4l2_subdev_platform_data *pdata ;
};
#line 906  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_fh {
   struct v4l2_fh vfh ;
   struct module *owner ;
   struct v4l2_subdev_pad_config *pad ;
};
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-device.h"
struct v4l2_device {
   struct device *dev ;
   struct media_device *mdev ;
   struct list_head subdevs ;
   spinlock_t lock ;
   char name[36U] ;
   void (*notify)(struct v4l2_subdev *, unsigned int , void *) ;
   struct v4l2_ctrl_handler *ctrl_handler ;
   struct v4l2_prio_state prio ;
   struct kref ref ;
   void (*release)(struct v4l2_device *) ;
};
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 277  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ptp_clock_kernel.h"
struct dma_chan;
#line 279 
struct spi_controller;
#line 280 
struct spi_transfer;
#line 281 
struct spi_controller_mem_ops;
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spi/spi.h"
struct spi_statistics {
   spinlock_t lock ;
   unsigned long messages ;
   unsigned long transfers ;
   unsigned long errors ;
   unsigned long timedout ;
   unsigned long spi_sync ;
   unsigned long spi_sync_immediate ;
   unsigned long spi_async ;
   unsigned long long bytes ;
   unsigned long long bytes_rx ;
   unsigned long long bytes_tx ;
   unsigned long transfer_bytes_histo[17U] ;
   unsigned long transfers_split_maxsize ;
};
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spi/spi.h"
struct spi_delay {
   u16 value ;
   u8 unit ;
};
#line 157  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spi/spi.h"
struct spi_device {
   struct device dev ;
   struct spi_controller *controller ;
   struct spi_controller *master ;
   u32 max_speed_hz ;
   u8 chip_select ;
   u8 bits_per_word ;
   bool rt ;
   u32 mode ;
   int irq ;
   void *controller_state ;
   void *controller_data ;
   char modalias[32U] ;
   char *driver_override ;
   int cs_gpio ;
   struct gpio_desc *cs_gpiod ;
   struct spi_delay word_delay ;
   struct spi_statistics statistics ;
};
#line 247 
struct spi_message;
#line 452  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spi/spi.h"
struct spi_controller {
   struct device dev ;
   struct list_head list ;
   s16 bus_num ;
   u16 num_chipselect ;
   u16 dma_alignment ;
   u32 mode_bits ;
   u32 bits_per_word_mask ;
   u32 min_speed_hz ;
   u32 max_speed_hz ;
   u16 flags ;
   bool slave ;
   size_t (*max_transfer_size)(struct spi_device *) ;
   size_t (*max_message_size)(struct spi_device *) ;
   struct mutex io_mutex ;
   spinlock_t bus_lock_spinlock ;
   struct mutex bus_lock_mutex ;
   bool bus_lock_flag ;
   int (*setup)(struct spi_device *) ;
   int (*set_cs_timing)(struct spi_device *, struct spi_delay *, struct spi_delay *, struct spi_delay *) ;
   int (*transfer)(struct spi_device *, struct spi_message *) ;
   void (*cleanup)(struct spi_device *) ;
   bool (*can_dma)(struct spi_controller *, struct spi_device *, struct spi_transfer *) ;
   bool queued ;
   struct kthread_worker kworker ;
   struct task_struct *kworker_task ;
   struct kthread_work pump_messages ;
   spinlock_t queue_lock ;
   struct list_head queue ;
   struct spi_message *cur_msg ;
   bool idling ;
   bool busy ;
   bool running ;
   bool rt ;
   bool auto_runtime_pm ;
   bool cur_msg_prepared ;
   bool cur_msg_mapped ;
   struct completion xfer_completion ;
   size_t max_dma_len ;
   int (*prepare_transfer_hardware)(struct spi_controller *) ;
   int (*transfer_one_message)(struct spi_controller *, struct spi_message *) ;
   int (*unprepare_transfer_hardware)(struct spi_controller *) ;
   int (*prepare_message)(struct spi_controller *, struct spi_message *) ;
   int (*unprepare_message)(struct spi_controller *, struct spi_message *) ;
   int (*slave_abort)(struct spi_controller *) ;
   void (*set_cs)(struct spi_device *, bool ) ;
   int (*transfer_one)(struct spi_controller *, struct spi_device *, struct spi_transfer *) ;
   void (*handle_err)(struct spi_controller *, struct spi_message *) ;
   struct spi_controller_mem_ops *mem_ops ;
   struct spi_delay cs_setup ;
   struct spi_delay cs_hold ;
   struct spi_delay cs_inactive ;
   int *cs_gpios ;
   struct gpio_desc **cs_gpiods ;
   bool use_gpio_descriptors ;
   struct spi_statistics statistics ;
   struct dma_chan *dma_tx ;
   struct dma_chan *dma_rx ;
   void *dummy_rx ;
   void *dummy_tx ;
   int (*fw_translate_cs)(struct spi_controller *, unsigned int ) ;
   bool ptp_sts_supported ;
   unsigned long irq_flags ;
};
#line 890  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spi/spi.h"
struct spi_transfer {
   void *tx_buf ;
   void *rx_buf ;
   unsigned int len ;
   dma_addr_t tx_dma ;
   dma_addr_t rx_dma ;
   struct sg_table tx_sg ;
   struct sg_table rx_sg ;
   unsigned int cs_change : 1 ;
   unsigned int tx_nbits : 3 ;
   unsigned int rx_nbits : 3 ;
   u8 bits_per_word ;
   u16 delay_usecs ;
   struct spi_delay delay ;
   struct spi_delay cs_change_delay ;
   struct spi_delay word_delay ;
   u32 speed_hz ;
   u32 effective_speed_hz ;
   unsigned int ptp_sts_word_pre ;
   unsigned int ptp_sts_word_post ;
   struct ptp_system_timestamp *ptp_sts ;
   bool timestamped_pre ;
   bool timestamped_post ;
   struct list_head transfer_list ;
};
#line 961  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spi/spi.h"
struct spi_message {
   struct list_head transfers ;
   struct spi_device *spi ;
   unsigned int is_dma_mapped : 1 ;
   void (*complete)(void *) ;
   void *context ;
   unsigned int frame_length ;
   unsigned int actual_length ;
   int status ;
   struct list_head queue ;
   void *state ;
   struct list_head resources ;
};
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 157  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fb_fix_screeninfo {
   char id[16U] ;
   unsigned long smem_start ;
   __u32 smem_len ;
   __u32 type ;
   __u32 type_aux ;
   __u32 visual ;
   __u16 xpanstep ;
   __u16 ypanstep ;
   __u16 ywrapstep ;
   __u32 line_length ;
   unsigned long mmio_start ;
   __u32 mmio_len ;
   __u32 accel ;
   __u16 capabilities ;
   __u16 reserved[2U] ;
};
#line 188  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fb_bitfield {
   __u32 offset ;
   __u32 length ;
   __u32 msb_right ;
};
#line 241  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fb_var_screeninfo {
   __u32 xres ;
   __u32 yres ;
   __u32 xres_virtual ;
   __u32 yres_virtual ;
   __u32 xoffset ;
   __u32 yoffset ;
   __u32 bits_per_pixel ;
   __u32 grayscale ;
   struct fb_bitfield red ;
   struct fb_bitfield green ;
   struct fb_bitfield blue ;
   struct fb_bitfield transp ;
   __u32 nonstd ;
   __u32 activate ;
   __u32 height ;
   __u32 width ;
   __u32 accel_flags ;
   __u32 pixclock ;
   __u32 left_margin ;
   __u32 right_margin ;
   __u32 upper_margin ;
   __u32 lower_margin ;
   __u32 hsync_len ;
   __u32 vsync_len ;
   __u32 sync ;
   __u32 vmode ;
   __u32 rotate ;
   __u32 colorspace ;
   __u32 reserved[4U] ;
};
#line 281  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fb_cmap {
   __u32 start ;
   __u32 len ;
   __u16 *red ;
   __u16 *green ;
   __u16 *blue ;
   __u16 *transp ;
};
#line 341  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fb_copyarea {
   __u32 dx ;
   __u32 dy ;
   __u32 width ;
   __u32 height ;
   __u32 sx ;
   __u32 sy ;
};
#line 350  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fb_fillrect {
   __u32 dx ;
   __u32 dy ;
   __u32 width ;
   __u32 height ;
   __u32 color ;
   __u32 rop ;
};
#line 359  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fb_image {
   __u32 dx ;
   __u32 dy ;
   __u32 width ;
   __u32 height ;
   __u32 fg_color ;
   __u32 bg_color ;
   __u8 depth ;
   char *data ;
   struct fb_cmap cmap ;
};
#line 383  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fbcurpos {
   __u16 x ;
   __u16 y ;
};
#line 387  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fb_cursor {
   __u16 set ;
   __u16 enable ;
   __u16 rop ;
   char *mask ;
   struct fbcurpos hot ;
   struct fb_image image ;
};
#line 400 
enum backlight_type {
    BACKLIGHT_RAW = 1,
    BACKLIGHT_PLATFORM = 2,
    BACKLIGHT_FIRMWARE = 3,
    BACKLIGHT_TYPE_MAX = 4
};
#line 412 
enum backlight_scale {
    BACKLIGHT_SCALE_UNKNOWN = 0,
    BACKLIGHT_SCALE_LINEAR = 1,
    BACKLIGHT_SCALE_NON_LINEAR = 2
};
#line 418 
struct backlight_device;
#line 419 
struct fb_info;
#line 58  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backlight.h"
struct backlight_ops {
   unsigned int options ;
   int (*update_status)(struct backlight_device *) ;
   int (*get_brightness)(struct backlight_device *) ;
   int (*check_fb)(struct backlight_device *, struct fb_info *) ;
};
#line 74  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backlight.h"
struct backlight_properties {
   int brightness ;
   int max_brightness ;
   int power ;
   int fb_blank ;
   enum backlight_type type ;
   unsigned int state ;
   enum backlight_scale scale ;
};
#line 97  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backlight.h"
struct backlight_device {
   struct backlight_properties props ;
   struct mutex update_lock ;
   struct mutex ops_lock ;
   struct backlight_ops *ops ;
   struct notifier_block fb_notif ;
   struct list_head entry ;
   struct device dev ;
   bool fb_bl_on[32U] ;
   int use_count ;
};
#line 52  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_chroma {
   __u32 redx ;
   __u32 greenx ;
   __u32 bluex ;
   __u32 whitex ;
   __u32 redy ;
   __u32 greeny ;
   __u32 bluey ;
   __u32 whitey ;
};
#line 63 
struct fb_videomode;
#line 63  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_monspecs {
   struct fb_chroma chroma ;
   struct fb_videomode *modedb ;
   __u8 manufacturer[4U] ;
   __u8 monitor[14U] ;
   __u8 serial_no[14U] ;
   __u8 ascii[14U] ;
   __u32 modedb_len ;
   __u32 model ;
   __u32 serial ;
   __u32 year ;
   __u32 week ;
   __u32 hfmin ;
   __u32 hfmax ;
   __u32 dclkmin ;
   __u32 dclkmax ;
   __u16 input ;
   __u16 dpms ;
   __u16 signal ;
   __u16 vfmin ;
   __u16 vfmax ;
   __u16 gamma ;
   __u16 gtf : 1 ;
   __u16 misc ;
   __u8 version ;
   __u8 revision ;
   __u8 max_x ;
   __u8 max_y ;
};
#line 144  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_blit_caps {
   u32 x ;
   u32 y ;
   u32 len ;
   u32 flags ;
};
#line 185  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_pixmap {
   u8 *addr ;
   u32 size ;
   u32 offset ;
   u32 buf_align ;
   u32 scan_align ;
   u32 access_align ;
   u32 flags ;
   u32 blit_x ;
   u32 blit_y ;
   void (*writeio)(struct fb_info *, void *, void *, unsigned int ) ;
   void (*readio)(struct fb_info *, void *, void *, unsigned int ) ;
};
#line 203  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_deferred_io {
   unsigned long delay ;
   struct mutex lock ;
   struct list_head pagelist ;
   void (*first_io)(struct fb_info *) ;
   void (*deferred_io)(struct fb_info *, struct list_head *) ;
};
#line 228  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_ops {
   struct module *owner ;
   int (*fb_open)(struct fb_info *, int ) ;
   int (*fb_release)(struct fb_info *, int ) ;
   ssize_t (*fb_read)(struct fb_info *, char *, size_t , loff_t *) ;
   ssize_t (*fb_write)(struct fb_info *, char *, size_t , loff_t *) ;
   int (*fb_check_var)(struct fb_var_screeninfo *, struct fb_info *) ;
   int (*fb_set_par)(struct fb_info *) ;
   int (*fb_setcolreg)(unsigned int , unsigned int , unsigned int , unsigned int , unsigned int , struct fb_info *) ;
   int (*fb_setcmap)(struct fb_cmap *, struct fb_info *) ;
   int (*fb_blank)(int , struct fb_info *) ;
   int (*fb_pan_display)(struct fb_var_screeninfo *, struct fb_info *) ;
   void (*fb_fillrect)(struct fb_info *, struct fb_fillrect *) ;
   void (*fb_copyarea)(struct fb_info *, struct fb_copyarea *) ;
   void (*fb_imageblit)(struct fb_info *, struct fb_image *) ;
   int (*fb_cursor)(struct fb_info *, struct fb_cursor *) ;
   int (*fb_sync)(struct fb_info *) ;
   int (*fb_ioctl)(struct fb_info *, unsigned int , unsigned long ) ;
   int (*fb_compat_ioctl)(struct fb_info *, unsigned int , unsigned long ) ;
   int (*fb_mmap)(struct fb_info *, struct vm_area_struct *) ;
   void (*fb_get_caps)(struct fb_info *, struct fb_blit_caps *, struct fb_var_screeninfo *) ;
   void (*fb_destroy)(struct fb_info *) ;
   int (*fb_debug_enter)(struct fb_info *) ;
   int (*fb_debug_leave)(struct fb_info *) ;
};
#line 306  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_tilemap {
   __u32 width ;
   __u32 height ;
   __u32 depth ;
   __u32 length ;
   __u8 *data ;
};
#line 315  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_tilerect {
   __u32 sx ;
   __u32 sy ;
   __u32 width ;
   __u32 height ;
   __u32 index ;
   __u32 fg ;
   __u32 bg ;
   __u32 rop ;
};
#line 326  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_tilearea {
   __u32 sx ;
   __u32 sy ;
   __u32 dx ;
   __u32 dy ;
   __u32 width ;
   __u32 height ;
};
#line 335  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_tileblit {
   __u32 sx ;
   __u32 sy ;
   __u32 width ;
   __u32 height ;
   __u32 fg ;
   __u32 bg ;
   __u32 length ;
   __u32 *indices ;
};
#line 346  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_tilecursor {
   __u32 sx ;
   __u32 sy ;
   __u32 mode ;
   __u32 shape ;
   __u32 fg ;
   __u32 bg ;
};
#line 355  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_tile_ops {
   void (*fb_settile)(struct fb_info *, struct fb_tilemap *) ;
   void (*fb_tilecopy)(struct fb_info *, struct fb_tilearea *) ;
   void (*fb_tilefill)(struct fb_info *, struct fb_tilerect *) ;
   void (*fb_tileblit)(struct fb_info *, struct fb_tileblit *) ;
   void (*fb_tilecursor)(struct fb_info *, struct fb_tilecursor *) ;
   int (*fb_get_tilemax)(struct fb_info *) ;
};
#line 499  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct aperture {
   resource_size_t base ;
   resource_size_t size ;
};
#line 497  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct apertures_struct {
   unsigned int count ;
   struct aperture ranges[0U] ;
};
#line 439  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
union __anonunion_14595 {
   char *screen_base ;
   char *screen_buffer ;
};
#line 439  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_info {
   atomic_t count ;
   int node ;
   int flags ;
   int fbcon_rotate_hint ;
   struct mutex lock ;
   struct mutex mm_lock ;
   struct fb_var_screeninfo var ;
   struct fb_fix_screeninfo fix ;
   struct fb_monspecs monspecs ;
   struct work_struct queue ;
   struct fb_pixmap pixmap ;
   struct fb_pixmap sprite ;
   struct fb_cmap cmap ;
   struct list_head modelist ;
   struct fb_videomode *mode ;
   struct backlight_device *bl_dev ;
   struct mutex bl_curve_mutex ;
   u8 bl_curve[128U] ;
   struct delayed_work deferred_work ;
   struct fb_deferred_io *fbdefio ;
   struct fb_ops *fbops ;
   struct device *device ;
   struct device *dev ;
   int class_flag ;
   struct fb_tile_ops *tileops ;
   union __anonunion_14595 __anonCompField_fb_info_73 ;
   unsigned long screen_size ;
   void *pseudo_palette ;
   u32 state ;
   void *fbcon_par ;
   void *par ;
   struct apertures_struct *apertures ;
   bool skip_vt_switch ;
};
#line 767  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_videomode {
   char *name ;
   u32 refresh ;
   u32 xres ;
   u32 yres ;
   u32 pixclock ;
   u32 left_margin ;
   u32 right_margin ;
   u32 upper_margin ;
   u32 lower_margin ;
   u32 hsync_len ;
   u32 vsync_len ;
   u32 sync ;
   u32 vmode ;
   u32 flag ;
};
#line 63  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
struct ldv_kmem_cache {
   char *name ;
   unsigned int size ;
};
#line 88  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
typedef unsigned long pthread_t;
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/thread.h"
union pthread_attr_t {
   char __size[56U] ;
   long __align ;
};
#line 30  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/thread.h"
typedef union pthread_attr_t pthread_attr_t;
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 16  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/emg/0/environment_model.c"
struct emg_struct_free_irq_5 {
   int arg0 ;
   int signal_pending ;
};
#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/emg/0/environment_model.c"
struct emg_struct_interrupt_scenario_aq_ptp_isr_15 {
   int arg0 ;
   enum irqreturn (*arg1)(int , void *) ;
   enum irqreturn (*arg2)(int , void *) ;
   void *arg3 ;
   int signal_pending ;
};
#line 29  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/emg/0/environment_model.c"
struct emg_struct_random_allocationless_scenario_aq_ethtool_get_coalesce_17 {
   struct net_device *arg0 ;
   int signal_pending ;
};
#line 34  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/emg/0/environment_model.c"
struct emg_struct_pci_scenario_aq_pci_ops_18 {
   struct pci_driver *arg0 ;
   int signal_pending ;
};
#line 39  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/emg/0/environment_model.c"
struct emg_struct_timer_scenario_5_20 {
   struct timer_list *arg0 ;
   int signal_pending ;
};
/* compiler builtin: 
   unsigned int __builtin_bswap32(unsigned int);   */
/* compiler builtin: 
   void *__builtin_memcpy(void *, void const *, unsigned long);   */
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/common/inline_asm.h"
#line 22 
void ldv_inline_asm(void);
#line 7  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/hw_atl_a0.i.aux"
#line 7 
void ldv_atomic_inc(atomic_t *v);
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/compiler.h"
__inline static void __read_once_size(void *p, void *res, int size)
{
  #line 199 
  switch (size) {
    #line 199 
    case 1: 
            #line 199 
    ;
    #line 199 
    *((__u8 *)res) = *((__u8 *)p);
    #line 199 
    break;
    #line 199 
    case 2: 
            #line 199 
    ;
    #line 199 
    *((__u16 *)res) = *((__u16 *)p);
    #line 199 
    break;
    #line 199 
    case 4: 
            #line 199 
    ;
    #line 199 
    *((__u32 *)res) = *((__u32 *)p);
    #line 199 
    break;
    #line 199 
    case 8: 
            #line 199 
    ;
    #line 199 
    *((__u64 *)res) = *((__u64 *)p);
    #line 199 
    break;
    #line 199 
    default: 
             #line 199 
    ;
    #line 200 
    ldv_inline_asm();
    #line 199 
    __builtin_memcpy(res,(void const *)p,(unsigned long)size);
    #line 200 
    ldv_inline_asm();
  }
  #line 203 
  return;
}

#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kasan-checks.h"
__inline static bool kasan_check_read(void *p, unsigned int size)
{
  #line 36 
  return (_Bool)1;
}

#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/string_64.h"
#line 18 
void *memset(void *, int, size_t);
#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/cmpxchg_64.h"
__inline static int arch_atomic_read(atomic_t *v)
{
  #line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/atomic.h"
  union __anonunion___u_67 __u;
  #line 31 
  __read_once_size((void *)(& v->counter),(void *)(& __u.__c),4);
  #line 31 
  return (__u.__val);
}

#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/atomic-instrumented.h"
__inline static int atomic_read(atomic_t *v)
{
  #line 26 
  kasan_check_read((void *)v,4U);
  #line 27 
  return arch_atomic_read(v);
}

#line 237 
#line 185  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/hw_atl_a0.i.aux"
static void atomic_inc(atomic_t *v);
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/irqflags.h"
#line 20 
unsigned long native_save_fl(void);
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/irqflags.h"
unsigned long native_save_fl(void)
{
  #line 22 
  unsigned long flags;
  #line 23 
  ldv_inline_asm();
  #line 35 
  return flags;
}

#line 38 
#line 39 
void native_restore_fl(unsigned long flags);
#line 39  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/irqflags.h"
void native_restore_fl(unsigned long flags)
{
  #line 41 
  ldv_inline_asm();
  #line 42 
  return;
}

#line 112  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ktime.h"
__inline static int ktime_compare(ktime_t cmp1, ktime_t cmp2)
{
  #line 114 
  if (cmp1 < cmp2) 
                   #line 115 
                   return -1;
  #line 116 
  if (cmp1 > cmp2) 
                   #line 117 
                   return 1;
  #line 118 
  return 0;
}

#line 196  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ktime.h"
__inline static ktime_t ktime_add_us(ktime_t kt, u64 usec)
{
  #line 198 
  return (long long)(usec * 1000ULL + (unsigned long long)kt);
}

#line 67  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timekeeping.h"
#line 67 
ktime_t ktime_get(void);
#line 6  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/delay.h"
#line 6 
void __bad_udelay(void);
#line 9 
#line 9 
void __udelay(unsigned long);
#line 11 
#line 11 
void __const_udelay(unsigned long);
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_utils.h"
__inline static bool aq_utils_obj_test(atomic_t *flags, u32 mask)
{
  #line 36 
  ;
  #line 36 
  return (_Bool)(((unsigned int)atomic_read(flags) & mask) != 0U);
}

#line 579  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.h"
#line 579 
unsigned int hw_atl_utils_mbps_2_speed_index(unsigned int mbps);
#line 581 
#line 581 
int hw_atl_utils_hw_get_regs(struct aq_hw_s *self, struct aq_hw_caps_s *aq_hw_caps, u32 *regs_buff);
#line 590 
#line 590 
int hw_atl_utils_get_fw_version(struct aq_hw_s *self, u32 *fw_version);
#line 594 
#line 594 
struct aq_stats_s *hw_atl_utils_get_hw_stats(struct aq_hw_s *self);
#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_hw_utils.h"
#line 33 
u32 aq_hw_read_reg(struct aq_hw_s *hw, u32 reg);
#line 34 
#line 34 
void aq_hw_write_reg(struct aq_hw_s *hw, u32 reg, u32 value);
#line 36 
#line 36 
int aq_hw_err_from_flags(struct aq_hw_s *hw);
#line 144  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ring.h"
__inline static unsigned int aq_ring_next_dx(struct aq_ring_s *self, unsigned int dx)
{
  #line 147 
  unsigned int tmp;
  #line 147 
  dx ++;
  #line 147 
  ;
  #line 147 
  if (dx < self->size) 
                       #line 147 
                       tmp = dx; else 
                                      #line 147 
                                      tmp = 0U;
  #line 147 
  return tmp;
}

#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_a0.h"
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_a0.c"
struct aq_hw_caps_s hw_atl_a0_caps_aqc100;
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_a0.h"
#line 55  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_a0.c"
struct aq_hw_caps_s hw_atl_a0_caps_aqc107;
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_a0.h"
#line 65  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_a0.c"
struct aq_hw_caps_s hw_atl_a0_caps_aqc108;
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_a0.h"
#line 74  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_a0.c"
struct aq_hw_caps_s hw_atl_a0_caps_aqc109;
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_a0.h"
#line 888  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_a0.c"
struct aq_hw_ops hw_atl_ops_a0;
#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.h"
#line 28 
void hw_atl_glb_glb_reg_res_dis_set(struct aq_hw_s *aq_hw, u32 glb_reg_res_dis);
#line 31 
#line 31 
void hw_atl_glb_soft_res_set(struct aq_hw_s *aq_hw, u32 soft_res);
#line 34 
#line 34 
u32 hw_atl_glb_soft_res_get(struct aq_hw_s *aq_hw);
#line 97 
#line 97 
void hw_atl_itr_irq_auto_masklsw_set(struct aq_hw_s *aq_hw, u32 irq_auto_masklsw);
#line 101 
#line 101 
void hw_atl_itr_irq_map_en_rx_set(struct aq_hw_s *aq_hw, u32 irq_map_en_rx, u32 rx);
#line 105 
#line 105 
void hw_atl_itr_irq_map_en_tx_set(struct aq_hw_s *aq_hw, u32 irq_map_en_tx, u32 tx);
#line 109 
#line 109 
void hw_atl_itr_irq_map_rx_set(struct aq_hw_s *aq_hw, u32 irq_map_rx, u32 rx);
#line 112 
#line 112 
void hw_atl_itr_irq_map_tx_set(struct aq_hw_s *aq_hw, u32 irq_map_tx, u32 tx);
#line 115 
#line 115 
void hw_atl_itr_irq_msk_clearlsw_set(struct aq_hw_s *aq_hw, u32 irq_msk_clearlsw);
#line 119 
#line 119 
void hw_atl_itr_irq_msk_setlsw_set(struct aq_hw_s *aq_hw, u32 irq_msk_setlsw);
#line 122 
#line 122 
void hw_atl_itr_irq_reg_res_dis_set(struct aq_hw_s *aq_hw, u32 irq_reg_res_dis);
#line 125 
#line 125 
void hw_atl_itr_irq_status_clearlsw_set(struct aq_hw_s *aq_hw, u32 irq_status_clearlsw);
#line 129 
#line 129 
u32 hw_atl_itr_irq_statuslsw_get(struct aq_hw_s *aq_hw);
#line 132 
#line 132 
u32 hw_atl_itr_res_irq_get(struct aq_hw_s *aq_hw);
#line 135 
#line 135 
void hw_atl_itr_res_irq_set(struct aq_hw_s *aq_hw, u32 res_irq);
#line 146 
#line 146 
void hw_atl_rdm_cpu_id_set(struct aq_hw_s *aq_hw, u32 cpuid, u32 dca);
#line 149 
#line 149 
void hw_atl_rdm_rx_dca_en_set(struct aq_hw_s *aq_hw, u32 rx_dca_en);
#line 152 
#line 152 
void hw_atl_rdm_rx_dca_mode_set(struct aq_hw_s *aq_hw, u32 rx_dca_mode);
#line 155 
#line 155 
void hw_atl_rdm_rx_desc_data_buff_size_set(struct aq_hw_s *aq_hw, u32 rx_desc_data_buff_size, u32 descriptor);
#line 160 
#line 160 
void hw_atl_rdm_rx_desc_dca_en_set(struct aq_hw_s *aq_hw, u32 rx_desc_dca_en, u32 dca);
#line 164 
#line 164 
void hw_atl_rdm_rx_desc_en_set(struct aq_hw_s *aq_hw, u32 rx_desc_en, u32 descriptor);
#line 168 
#line 168 
void hw_atl_rdm_rx_desc_head_splitting_set(struct aq_hw_s *aq_hw, u32 rx_desc_head_splitting, u32 descriptor);
#line 173 
#line 173 
u32 hw_atl_rdm_rx_desc_head_ptr_get(struct aq_hw_s *aq_hw, u32 descriptor);
#line 176 
#line 176 
void hw_atl_rdm_rx_desc_len_set(struct aq_hw_s *aq_hw, u32 rx_desc_len, u32 descriptor);
#line 180 
#line 180 
void hw_atl_rdm_rx_desc_wr_wb_irq_en_set(struct aq_hw_s *aq_hw, u32 rx_desc_wr_wb_irq_en);
#line 184 
#line 184 
void hw_atl_rdm_rx_head_dca_en_set(struct aq_hw_s *aq_hw, u32 rx_head_dca_en, u32 dca);
#line 188 
#line 188 
void hw_atl_rdm_rx_pld_dca_en_set(struct aq_hw_s *aq_hw, u32 rx_pld_dca_en, u32 dca);
#line 192 
#line 192 
void hw_atl_rdm_rx_desc_head_buff_size_set(struct aq_hw_s *aq_hw, u32 rx_desc_head_buff_size, u32 descriptor);
#line 197 
#line 197 
void hw_atl_rdm_rx_desc_res_set(struct aq_hw_s *aq_hw, u32 rx_desc_res, u32 descriptor);
#line 207 
#line 207 
void hw_atl_reg_gen_irq_map_set(struct aq_hw_s *aq_hw, u32 gen_intr_map, u32 regidx);
#line 211 
#line 211 
u32 hw_atl_reg_gen_irq_status_get(struct aq_hw_s *aq_hw);
#line 214 
#line 214 
void hw_atl_reg_irq_glb_ctl_set(struct aq_hw_s *aq_hw, u32 intr_glb_ctl);
#line 217 
#line 217 
void hw_atl_reg_irq_thr_set(struct aq_hw_s *aq_hw, u32 intr_thr, u32 throttle);
#line 220 
#line 220 
void hw_atl_reg_rx_dma_desc_base_addresslswset(struct aq_hw_s *aq_hw, u32 rx_dma_desc_base_addrlsw, u32 descriptor);
#line 225 
#line 225 
void hw_atl_reg_rx_dma_desc_base_addressmswset(struct aq_hw_s *aq_hw, u32 rx_dma_desc_base_addrmsw, u32 descriptor);
#line 230 
#line 230 
u32 hw_atl_reg_rx_dma_desc_status_get(struct aq_hw_s *aq_hw, u32 descriptor);
#line 233 
#line 233 
void hw_atl_reg_rx_dma_desc_tail_ptr_set(struct aq_hw_s *aq_hw, u32 rx_dma_desc_tail_ptr, u32 descriptor);
#line 238 
#line 238 
void hw_atl_reg_rx_flr_mcst_flr_msk_set(struct aq_hw_s *aq_hw, u32 rx_flr_mcst_flr_msk);
#line 242 
#line 242 
void hw_atl_reg_rx_flr_mcst_flr_set(struct aq_hw_s *aq_hw, u32 rx_flr_mcst_flr, u32 filter);
#line 246 
#line 246 
void hw_atl_reg_rx_flr_rss_control1set(struct aq_hw_s *aq_hw, u32 rx_flr_rss_control1);
#line 258 
#line 258 
void hw_atl_reg_tx_dma_debug_ctl_set(struct aq_hw_s *aq_hw, u32 tx_dma_debug_ctl);
#line 262 
#line 262 
void hw_atl_reg_tx_dma_desc_base_addresslswset(struct aq_hw_s *aq_hw, u32 tx_dma_desc_base_addrlsw, u32 descriptor);
#line 267 
#line 267 
void hw_atl_reg_tx_dma_desc_base_addressmswset(struct aq_hw_s *aq_hw, u32 tx_dma_desc_base_addrmsw, u32 descriptor);
#line 272 
#line 272 
void hw_atl_reg_tx_dma_desc_tail_ptr_set(struct aq_hw_s *aq_hw, u32 tx_dma_desc_tail_ptr, u32 descriptor);
#line 295 
#line 295 
void hw_atl_rpb_rpf_rx_traf_class_mode_set(struct aq_hw_s *aq_hw, u32 rx_traf_class_mode);
#line 302 
#line 302 
void hw_atl_rpb_rx_buff_en_set(struct aq_hw_s *aq_hw, u32 rx_buff_en);
#line 305 
#line 305 
void hw_atl_rpb_rx_buff_hi_threshold_per_tc_set(struct aq_hw_s *aq_hw, u32 rx_buff_hi_threshold_per_tc, u32 buffer);
#line 310 
#line 310 
void hw_atl_rpb_rx_buff_lo_threshold_per_tc_set(struct aq_hw_s *aq_hw, u32 rx_buff_lo_threshold_per_tc, u32 buffer);
#line 315 
#line 315 
void hw_atl_rpb_rx_flow_ctl_mode_set(struct aq_hw_s *aq_hw, u32 rx_flow_ctl_mode);
#line 319 
#line 319 
void hw_atl_rpb_rx_pkt_buff_size_per_tc_set(struct aq_hw_s *aq_hw, u32 rx_pkt_buff_size_per_tc, u32 buffer);
#line 330 
#line 330 
void hw_atl_rpb_rx_xoff_en_per_tc_set(struct aq_hw_s *aq_hw, u32 rx_xoff_en_per_tc, u32 buffer);
#line 337 
#line 337 
void hw_atl_rpfl2broadcast_count_threshold_set(struct aq_hw_s *aq_hw, u32 l2broadcast_count_threshold);
#line 341 
#line 341 
void hw_atl_rpfl2broadcast_en_set(struct aq_hw_s *aq_hw, u32 l2broadcast_en);
#line 344 
#line 344 
void hw_atl_rpfl2broadcast_flr_act_set(struct aq_hw_s *aq_hw, u32 l2broadcast_flr_act);
#line 348 
#line 348 
void hw_atl_rpfl2multicast_flr_en_set(struct aq_hw_s *aq_hw, u32 l2multicast_flr_en, u32 filter);
#line 353 
#line 353 
void hw_atl_rpfl2promiscuous_mode_en_set(struct aq_hw_s *aq_hw, u32 l2promiscuous_mode_en);
#line 357 
#line 357 
void hw_atl_rpfl2unicast_flr_act_set(struct aq_hw_s *aq_hw, u32 l2unicast_flr_act, u32 filter);
#line 362 
#line 362 
void hw_atl_rpfl2_uc_flr_en_set(struct aq_hw_s *aq_hw, u32 l2unicast_flr_en, u32 filter);
#line 366 
#line 366 
void hw_atl_rpfl2unicast_dest_addresslsw_set(struct aq_hw_s *aq_hw, u32 l2unicast_dest_addresslsw, u32 filter);
#line 371 
#line 371 
void hw_atl_rpfl2unicast_dest_addressmsw_set(struct aq_hw_s *aq_hw, u32 l2unicast_dest_addressmsw, u32 filter);
#line 380 
#line 380 
void hw_atl_rpf_rpb_user_priority_tc_map_set(struct aq_hw_s *aq_hw, u32 user_priority_tc_map, u32 tc);
#line 384 
#line 384 
void hw_atl_rpf_rss_key_addr_set(struct aq_hw_s *aq_hw, u32 rss_key_addr);
#line 387 
#line 387 
void hw_atl_rpf_rss_key_wr_data_set(struct aq_hw_s *aq_hw, u32 rss_key_wr_data);
#line 390 
#line 390 
u32 hw_atl_rpf_rss_key_wr_en_get(struct aq_hw_s *aq_hw);
#line 393 
#line 393 
void hw_atl_rpf_rss_key_wr_en_set(struct aq_hw_s *aq_hw, u32 rss_key_wr_en);
#line 396 
#line 396 
void hw_atl_rpf_rss_redir_tbl_addr_set(struct aq_hw_s *aq_hw, u32 rss_redir_tbl_addr);
#line 400 
#line 400 
void hw_atl_rpf_rss_redir_tbl_wr_data_set(struct aq_hw_s *aq_hw, u32 rss_redir_tbl_wr_data);
#line 404 
#line 404 
u32 hw_atl_rpf_rss_redir_wr_en_get(struct aq_hw_s *aq_hw);
#line 407 
#line 407 
void hw_atl_rpf_rss_redir_wr_en_set(struct aq_hw_s *aq_hw, u32 rss_redir_wr_en);
#line 414 
#line 414 
void hw_atl_rpf_vlan_inner_etht_set(struct aq_hw_s *aq_hw, u32 vlan_inner_etht);
#line 417 
#line 417 
void hw_atl_rpf_vlan_outer_etht_set(struct aq_hw_s *aq_hw, u32 vlan_outer_etht);
#line 420 
#line 420 
void hw_atl_rpf_vlan_prom_mode_en_set(struct aq_hw_s *aq_hw, u32 vlan_prom_mode_en);
#line 494 
#line 494 
void hw_atl_rpo_ipv4header_crc_offload_en_set(struct aq_hw_s *aq_hw, u32 ipv4header_crc_offload_en);
#line 498 
#line 498 
void hw_atl_rpo_rx_desc_vlan_stripping_set(struct aq_hw_s *aq_hw, u32 rx_desc_vlan_stripping, u32 descriptor);
#line 508 
#line 508 
void hw_atl_rpo_tcp_udp_crc_offload_en_set(struct aq_hw_s *aq_hw, u32 tcp_udp_crc_offload_en);
#line 552 
#line 552 
void hw_atl_rx_rx_reg_res_dis_set(struct aq_hw_s *aq_hw, u32 rx_reg_res_dis);
#line 557 
#line 557 
void hw_atl_tdm_cpu_id_set(struct aq_hw_s *aq_hw, u32 cpuid, u32 dca);
#line 560 
#line 560 
void hw_atl_tdm_large_send_offload_en_set(struct aq_hw_s *aq_hw, u32 large_send_offload_en);
#line 564 
#line 564 
void hw_atl_tdm_tx_desc_en_set(struct aq_hw_s *aq_hw, u32 tx_desc_en, u32 descriptor);
#line 568 
#line 568 
void hw_atl_tdm_tx_dca_en_set(struct aq_hw_s *aq_hw, u32 tx_dca_en);
#line 571 
#line 571 
void hw_atl_tdm_tx_dca_mode_set(struct aq_hw_s *aq_hw, u32 tx_dca_mode);
#line 574 
#line 574 
void hw_atl_tdm_tx_desc_dca_en_set(struct aq_hw_s *aq_hw, u32 tx_desc_dca_en, u32 dca);
#line 578 
#line 578 
u32 hw_atl_tdm_tx_desc_head_ptr_get(struct aq_hw_s *aq_hw, u32 descriptor);
#line 581 
#line 581 
void hw_atl_tdm_tx_desc_len_set(struct aq_hw_s *aq_hw, u32 tx_desc_len, u32 descriptor);
#line 585 
#line 585 
void hw_atl_tdm_tx_desc_wr_wb_irq_en_set(struct aq_hw_s *aq_hw, u32 tx_desc_wr_wb_irq_en);
#line 589 
#line 589 
void hw_atl_tdm_tx_desc_wr_wb_threshold_set(struct aq_hw_s *aq_hw, u32 tx_desc_wr_wb_threshold, u32 descriptor);
#line 599 
#line 599 
void hw_atl_thm_lso_tcp_flag_of_first_pkt_set(struct aq_hw_s *aq_hw, u32 lso_tcp_flag_of_first_pkt);
#line 603 
#line 603 
void hw_atl_thm_lso_tcp_flag_of_last_pkt_set(struct aq_hw_s *aq_hw, u32 lso_tcp_flag_of_last_pkt);
#line 607 
#line 607 
void hw_atl_thm_lso_tcp_flag_of_middle_pkt_set(struct aq_hw_s *aq_hw, u32 lso_tcp_flag_of_middle_pkt);
#line 620 
#line 620 
void hw_atl_tpb_tx_buff_en_set(struct aq_hw_s *aq_hw, u32 tx_buff_en);
#line 623 
#line 623 
void hw_atl_tpb_tx_buff_hi_threshold_per_tc_set(struct aq_hw_s *aq_hw, u32 tx_buff_hi_threshold_per_tc, u32 buffer);
#line 628 
#line 628 
void hw_atl_tpb_tx_buff_lo_threshold_per_tc_set(struct aq_hw_s *aq_hw, u32 tx_buff_lo_threshold_per_tc, u32 buffer);
#line 644 
#line 644 
void hw_atl_tpb_tx_pkt_buff_size_per_tc_set(struct aq_hw_s *aq_hw, u32 tx_pkt_buff_size_per_tc, u32 buffer);
#line 649 
#line 649 
void hw_atl_tpb_tx_path_scp_ins_en_set(struct aq_hw_s *aq_hw, u32 tx_path_scp_ins_en);
#line 654 
#line 654 
void hw_atl_tpo_ipv4header_crc_offload_en_set(struct aq_hw_s *aq_hw, u32 ipv4header_crc_offload_en);
#line 658 
#line 658 
void hw_atl_tpo_tcp_udp_crc_offload_en_set(struct aq_hw_s *aq_hw, u32 tcp_udp_crc_offload_en);
#line 668 
#line 668 
void hw_atl_tps_tx_pkt_shed_data_arb_mode_set(struct aq_hw_s *aq_hw, u32 tx_pkt_shed_data_arb_mode);
#line 672 
#line 672 
void hw_atl_tps_tx_pkt_shed_desc_rate_curr_time_res_set(struct aq_hw_s *aq_hw, u32 curr_time_res);
#line 676 
#line 676 
void hw_atl_tps_tx_pkt_shed_desc_rate_lim_set(struct aq_hw_s *aq_hw, u32 tx_pkt_shed_desc_rate_lim);
#line 680 
#line 680 
void hw_atl_tps_tx_pkt_shed_desc_tc_arb_mode_set(struct aq_hw_s *aq_hw, u32 arb_mode);
#line 684 
#line 684 
void hw_atl_tps_tx_pkt_shed_desc_tc_max_credit_set(struct aq_hw_s *aq_hw, u32 max_credit, u32 tc);
#line 689 
#line 689 
void hw_atl_tps_tx_pkt_shed_desc_tc_weight_set(struct aq_hw_s *aq_hw, u32 tx_pkt_shed_desc_tc_weight, u32 tc);
#line 694 
#line 694 
void hw_atl_tps_tx_pkt_shed_desc_vm_arb_mode_set(struct aq_hw_s *aq_hw, u32 arb_mode);
#line 698 
#line 698 
void hw_atl_tps_tx_pkt_shed_tc_data_max_credit_set(struct aq_hw_s *aq_hw, u32 max_credit, u32 tc);
#line 703 
#line 703 
void hw_atl_tps_tx_pkt_shed_tc_data_weight_set(struct aq_hw_s *aq_hw, u32 tx_pkt_shed_tc_data_weight, u32 tc);
#line 710 
#line 710 
void hw_atl_tx_tx_reg_res_dis_set(struct aq_hw_s *aq_hw, u32 tx_reg_res_dis);
#line 736 
#line 736 
void hw_atl_pci_pci_reg_res_dis_set(struct aq_hw_s *aq_hw, u32 pci_reg_res_dis);
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_a0.c"
struct aq_hw_caps_s hw_atl_a0_caps_aqc100 = {.hw_features = 824633786377ULL, .link_speed_msk = 58ULL, .hw_priv_flags = 4096U, .media_type = 2U, .rxds_max = 8184U, .txds_max = 8184U, .rxds_min = 40U, .txds_min = 40U, .txhwb_alignment = 4096U, .irq_mask = 4294967295U, .vecs = 8U, .mtu = 9014U, .mac_regs_count = 88U, .hw_alive_check_addr = 16U, .msix_irqs = (unsigned char)4U, .tcs = (unsigned char)1U, .rxd_alignment = (unsigned char)1U, .rxd_size = (unsigned char)16U, .txd_alignment = (unsigned char)1U, .txd_size = (unsigned char)16U, .tx_rings = (unsigned char)4U, .rx_rings = (unsigned char)4U, .flow_control = (_Bool)1, .is_64_dma = (_Bool)1};
#line 55  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_a0.c"
struct aq_hw_caps_s hw_atl_a0_caps_aqc107 = {.hw_features = 824633786377ULL, .link_speed_msk = 59ULL, .hw_priv_flags = 4096U, .media_type = 1U, .rxds_max = 8184U, .txds_max = 8184U, .rxds_min = 40U, .txds_min = 40U, .txhwb_alignment = 4096U, .irq_mask = 4294967295U, .vecs = 8U, .mtu = 9014U, .mac_regs_count = 88U, .hw_alive_check_addr = 16U, .msix_irqs = (unsigned char)4U, .tcs = (unsigned char)1U, .rxd_alignment = (unsigned char)1U, .rxd_size = (unsigned char)16U, .txd_alignment = (unsigned char)1U, .txd_size = (unsigned char)16U, .tx_rings = (unsigned char)4U, .rx_rings = (unsigned char)4U, .flow_control = (_Bool)1, .is_64_dma = (_Bool)1};
#line 65  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_a0.c"
struct aq_hw_caps_s hw_atl_a0_caps_aqc108 = {.hw_features = 824633786377ULL, .link_speed_msk = 58ULL, .hw_priv_flags = 4096U, .media_type = 1U, .rxds_max = 8184U, .txds_max = 8184U, .rxds_min = 40U, .txds_min = 40U, .txhwb_alignment = 4096U, .irq_mask = 4294967295U, .vecs = 8U, .mtu = 9014U, .mac_regs_count = 88U, .hw_alive_check_addr = 16U, .msix_irqs = (unsigned char)4U, .tcs = (unsigned char)1U, .rxd_alignment = (unsigned char)1U, .rxd_size = (unsigned char)16U, .txd_alignment = (unsigned char)1U, .txd_size = (unsigned char)16U, .tx_rings = (unsigned char)4U, .rx_rings = (unsigned char)4U, .flow_control = (_Bool)1, .is_64_dma = (_Bool)1};
#line 74  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_a0.c"
struct aq_hw_caps_s hw_atl_a0_caps_aqc109 = {.hw_features = 824633786377ULL, .link_speed_msk = 56ULL, .hw_priv_flags = 4096U, .media_type = 1U, .rxds_max = 8184U, .txds_max = 8184U, .rxds_min = 40U, .txds_min = 40U, .txhwb_alignment = 4096U, .irq_mask = 4294967295U, .vecs = 8U, .mtu = 9014U, .mac_regs_count = 88U, .hw_alive_check_addr = 16U, .msix_irqs = (unsigned char)4U, .tcs = (unsigned char)1U, .rxd_alignment = (unsigned char)1U, .rxd_size = (unsigned char)16U, .txd_alignment = (unsigned char)1U, .txd_size = (unsigned char)16U, .tx_rings = (unsigned char)4U, .rx_rings = (unsigned char)4U, .flow_control = (_Bool)1, .is_64_dma = (_Bool)1};
#line 82  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_a0.c"
static int hw_atl_a0_hw_reset(struct aq_hw_s *self)
{
  #line 106 
  int tmp_9;
  #line 96 
  int tmp_3;
  #line 85 
  u32 val;
  #line 84 
  int err = 0;
  #line 87 
  hw_atl_glb_glb_reg_res_dis_set(self,1U);
  #line 88 
  hw_atl_pci_pci_reg_res_dis_set(self,0U);
  #line 89 
  hw_atl_rx_rx_reg_res_dis_set(self,0U);
  #line 90 
  hw_atl_tx_tx_reg_res_dis_set(self,0U);
  #line 92 
  aq_hw_read_reg(self,16U);
  #line 93 
  hw_atl_glb_soft_res_set(self,1U);
  {
    #line 96 
    u64 __timeout_us = 10000ULL;
    #line 96 
    unsigned long __delay_us = 1000UL;
    #line 96 
    ;
    #line 96 
    ktime_t __timeout = ktime_add_us(ktime_get(),__timeout_us);
    #line 96 
    while (1) {
      #line 96 
      val = hw_atl_glb_soft_res_get(self);
      #line 96 
      if (val == 0U) 
                     #line 96 
                     break;
      #line 96 
      if (__timeout_us != 0ULL) {
        #line 96 
        ;
        #line 96 
        if (ktime_compare(ktime_get(),__timeout) > 0) {
          #line 96 
          val = hw_atl_glb_soft_res_get(self);
          #line 96 
          break;
        }
      }
      #line 96 
      if (__delay_us != 0UL) 
        #line 96 
        if (0 != 0) 
          #line 96 
          if (__delay_us > 19999UL) 
                                    #line 96 
                                    __bad_udelay(); else 
                                                         #line 96 
                                                         __const_udelay(__delay_us * 4295UL);
        else 
             #line 96 
             __udelay(__delay_us);
    }
    #line 96 
    if (val == 0U) 
                   #line 96 
                   tmp_3 = 0; else 
                                   #line 96 
                                   tmp_3 = -110;
    }
  #line 96 
  err = tmp_3;
  #line 99 
  if (err < 0) 
               #line 100 
               goto err_exit;
  #line 102 
  hw_atl_itr_irq_reg_res_dis_set(self,0U);
  #line 103 
  hw_atl_itr_res_irq_set(self,1U);
  {
    #line 106 
    u64 __timeout_us_0 = 10000ULL;
    #line 106 
    unsigned long __delay_us_0 = 1000UL;
    #line 106 
    ;
    #line 106 
    ktime_t __timeout_0 = ktime_add_us(ktime_get(),__timeout_us_0);
    #line 106 
    while (1) {
      #line 106 
      val = hw_atl_itr_res_irq_get(self);
      #line 106 
      if (val == 0U) 
                     #line 106 
                     break;
      #line 106 
      if (__timeout_us_0 != 0ULL) {
        #line 106 
        ;
        #line 106 
        if (ktime_compare(ktime_get(),__timeout_0) > 0) {
          #line 106 
          val = hw_atl_itr_res_irq_get(self);
          #line 106 
          break;
        }
      }
      #line 106 
      if (__delay_us_0 != 0UL) 
        #line 106 
        if (0 != 0) 
          #line 106 
          if (__delay_us_0 > 19999UL) 
                                      #line 106 
                                      __bad_udelay(); else 
                                                           #line 106 
                                                           __const_udelay(__delay_us_0 * 4295UL);
        else 
             #line 106 
             __udelay(__delay_us_0);
    }
    #line 106 
    if (val == 0U) 
                   #line 106 
                   tmp_9 = 0; else 
                                   #line 106 
                                   tmp_9 = -110;
    }
  #line 106 
  err = tmp_9;
  #line 109 
  if (err < 0) 
               #line 110 
               goto err_exit;
  #line 112 
  (*((self->aq_fw_ops)->set_state))(self,(enum hal_atl_utils_fw_state_e)MPI_RESET);
  #line 114 
  err = aq_hw_err_from_flags(self);
  #line 116 
  err_exit: 
            #line 116 
  ;
  #line 117 
  return err;
}

#line 120  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_a0.c"
static int hw_atl_a0_hw_qos_set(struct aq_hw_s *self)
{
  #line 170 
  unsigned int tmp;
  #line 122 
  bool is_rx_flow_control = (_Bool)0;
  #line 123 
  unsigned int i_priority = 0U;
  #line 124 
  u32 buff_size = 0U;
  #line 125 
  u32 tc = 0U;
  #line 128 
  hw_atl_tps_tx_pkt_shed_desc_rate_curr_time_res_set(self,0U);
  #line 129 
  hw_atl_tps_tx_pkt_shed_desc_rate_lim_set(self,10U);
  #line 132 
  hw_atl_tps_tx_pkt_shed_desc_vm_arb_mode_set(self,0U);
  #line 135 
  hw_atl_tps_tx_pkt_shed_desc_tc_arb_mode_set(self,0U);
  #line 136 
  hw_atl_tps_tx_pkt_shed_data_arb_mode_set(self,0U);
  #line 138 
  hw_atl_tps_tx_pkt_shed_tc_data_max_credit_set(self,4095U,0U);
  #line 139 
  hw_atl_tps_tx_pkt_shed_tc_data_weight_set(self,100U,0U);
  #line 140 
  hw_atl_tps_tx_pkt_shed_desc_tc_max_credit_set(self,80U,0U);
  #line 141 
  hw_atl_tps_tx_pkt_shed_desc_tc_weight_set(self,30U,0U);
  #line 144 
  buff_size = 160U;
  #line 146 
  hw_atl_tpb_tx_pkt_buff_size_per_tc_set(self,buff_size,tc);
  #line 147 
  hw_atl_tpb_tx_buff_hi_threshold_per_tc_set(self,(buff_size * 2112U) / 100U,tc);
  #line 151 
  hw_atl_tpb_tx_buff_lo_threshold_per_tc_set(self,(buff_size * 1600U) / 100U,tc);
  #line 157 
  tc = 0U;
  #line 158 
  is_rx_flow_control = (_Bool)(((unsigned int)(self->aq_nic_cfg)->fc.req & 2U) != 0U);
  #line 159 
  buff_size = 320U;
  #line 161 
  hw_atl_rpb_rx_pkt_buff_size_per_tc_set(self,buff_size,tc);
  #line 162 
  hw_atl_rpb_rx_buff_hi_threshold_per_tc_set(self,(buff_size * 2112U) / 100U,tc);
  #line 166 
  hw_atl_rpb_rx_buff_lo_threshold_per_tc_set(self,(buff_size * 1600U) / 100U,tc);
  #line 170 
  ;
  #line 170 
  if ((int)is_rx_flow_control != 0) 
                                    #line 170 
                                    tmp = 1U; else 
                                                   #line 170 
                                                   tmp = 0U;
  #line 170 
  ;
  #line 170 
  hw_atl_rpb_rx_xoff_en_per_tc_set(self,tmp,tc);
  #line 173 
  i_priority = 8U;
  #line 173 
  while (1) {
    #line 173 
    unsigned int tmp_0;
    #line 173 
    tmp_0 = i_priority;
    #line 173 
    i_priority --;
    #line 173 
    ;
    #line 173 
    if (! (tmp_0 != 0U)) 
                         #line 173 
                         break;
    #line 174 
    hw_atl_rpf_rpb_user_priority_tc_map_set(self,i_priority,0U);
  }
  #line 176 
  return aq_hw_err_from_flags(self);
}

#line 179  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_a0.c"
static int hw_atl_a0_hw_rss_hash_set(struct aq_hw_s *self, struct aq_rss_parameters *rss_params)
{
  #line 186 
  u32 val;
  #line 182 
  struct aq_nic_cfg_s *cfg = self->aq_nic_cfg;
  #line 183 
  unsigned int addr = 0U;
  #line 184 
  unsigned int i = 0U;
  #line 185 
  int err = 0;
  #line 188 
  i = 10U;
  #line 188 
  addr = 0U;
  #line 188 
  while (1) {
    #line 188 
    unsigned int tmp_7;
    #line 188 
    tmp_7 = i;
    #line 188 
    i --;
    #line 188 
    ;
    #line 188 
    if (! (tmp_7 != 0U)) 
                         #line 188 
                         break;
    {
      #line 194 
      int tmp_5;
      #line 189 
      unsigned int tmp_0;
      #line 189 
      if ((int)cfg->is_rss != 0) 
                                 #line 189 
                                 tmp_0 = __builtin_bswap32(rss_params->hash_secret_key[i]); else 
                                                                    #line 189 
                                                                    tmp_0 = 0U;
      #line 189 
      u32 key_data = tmp_0;
      #line 191 
      hw_atl_rpf_rss_key_wr_data_set(self,key_data);
      #line 192 
      hw_atl_rpf_rss_key_addr_set(self,addr);
      #line 193 
      hw_atl_rpf_rss_key_wr_en_set(self,1U);
      {
        #line 194 
        u64 __timeout_us = 10000ULL;
        #line 194 
        unsigned long __delay_us = 1000UL;
        #line 194 
        ;
        #line 194 
        ktime_t __timeout = ktime_add_us(ktime_get(),__timeout_us);
        #line 194 
        while (1) {
          #line 194 
          val = hw_atl_rpf_rss_key_wr_en_get(self);
          #line 194 
          if (val == 0U) 
                         #line 194 
                         break;
          #line 194 
          if (__timeout_us != 0ULL) {
            #line 194 
            ;
            #line 194 
            if (ktime_compare(ktime_get(),__timeout) > 0) {
              #line 194 
              val = hw_atl_rpf_rss_key_wr_en_get(self);
              #line 194 
              break;
            }
          }
          #line 194 
          if (__delay_us != 0UL) 
            #line 194 
            if (0 != 0) 
              #line 194 
              if (__delay_us > 19999UL) 
                                        #line 194 
                                        __bad_udelay(); else 
                                                             #line 194 
                                                             __const_udelay(__delay_us * 4295UL);
            else 
                 #line 194 
                 __udelay(__delay_us);
        }
        #line 194 
        if (val == 0U) 
                       #line 194 
                       tmp_5 = 0; else 
                                       #line 194 
                                       tmp_5 = -110;
        }
      #line 194 
      err = tmp_5;
      #line 197 
      if (err < 0) 
                   #line 198 
                   goto err_exit;
    }
    #line 188 
    addr ++;
  }
  #line 201 
  err = aq_hw_err_from_flags(self);
  #line 203 
  err_exit: 
            #line 203 
  ;
  #line 204 
  return err;
}

#line 207  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_a0.c"
static int hw_atl_a0_hw_rss_set(struct aq_hw_s *self, struct aq_rss_parameters *rss_params)
{
  #line 210 
  unsigned int tmp;
  #line 210 
  unsigned int __UNIQUE_ID___x441;
  #line 213 
  u16 bitary[13U];
  #line 216 
  u32 val;
  {
    #line 210 
    __UNIQUE_ID___x441 = 1U;
    #line 210 
    u32 __UNIQUE_ID___y442 = (self->aq_nic_cfg)->num_rss_queues;
    #line 210 
    if (__UNIQUE_ID___x441 > __UNIQUE_ID___y442) 
                                                 #line 210 
                                                 tmp = __UNIQUE_ID___x441; else 
                                                                    #line 210 
                                                                    tmp = __UNIQUE_ID___y442;
    }
  #line 210 
  u32 num_rss_queues = tmp;
  #line 211 
  u8 *indirection_table = (u8 *)(& rss_params->indirection_table);
  #line 214 
  int err = 0;
  #line 215 
  u32 i = 0U;
  #line 218 
  memset((void *)(& bitary),0,26UL);
  #line 220 
  i = 64U;
  #line 220 
  while (1) {
    #line 220 
    u32 tmp_1;
    #line 220 
    tmp_1 = i;
    #line 220 
    i --;
    #line 220 
    ;
    #line 220 
    if (! (tmp_1 != 0U)) 
                         #line 220 
                         break;
    #line 221 
    *((u32 *)((u16 *)(& bitary) + (unsigned long)((i * 3U) / 16U))) |= (unsigned int)*(indirection_table + (unsigned long)i) % num_rss_queues << (i * 3U & 15U);
  }
  #line 226 
  i = 13U;
  #line 226 
  while (1) {
    #line 226 
    u32 tmp_8;
    #line 226 
    tmp_8 = i;
    #line 226 
    i --;
    #line 226 
    ;
    #line 226 
    if (! (tmp_8 != 0U)) 
                         #line 226 
                         break;
    {
      #line 230 
      int tmp_6;
      #line 227 
      hw_atl_rpf_rss_redir_tbl_wr_data_set(self,(unsigned int)bitary[i]);
      #line 228 
      hw_atl_rpf_rss_redir_tbl_addr_set(self,i);
      #line 229 
      hw_atl_rpf_rss_redir_wr_en_set(self,1U);
      {
        #line 230 
        u64 __timeout_us = 10000ULL;
        #line 230 
        unsigned long __delay_us = 1000UL;
        #line 230 
        ;
        #line 230 
        ktime_t __timeout = ktime_add_us(ktime_get(),__timeout_us);
        #line 230 
        while (1) {
          #line 230 
          val = hw_atl_rpf_rss_redir_wr_en_get(self);
          #line 230 
          if (val == 0U) 
                         #line 230 
                         break;
          #line 230 
          if (__timeout_us != 0ULL) {
            #line 230 
            ;
            #line 230 
            if (ktime_compare(ktime_get(),__timeout) > 0) {
              #line 230 
              val = hw_atl_rpf_rss_redir_wr_en_get(self);
              #line 230 
              break;
            }
          }
          #line 230 
          if (__delay_us != 0UL) 
            #line 230 
            if (0 != 0) 
              #line 230 
              if (__delay_us > 19999UL) 
                                        #line 230 
                                        __bad_udelay(); else 
                                                             #line 230 
                                                             __const_udelay(__delay_us * 4295UL);
            else 
                 #line 230 
                 __udelay(__delay_us);
        }
        #line 230 
        if (val == 0U) 
                       #line 230 
                       tmp_6 = 0; else 
                                       #line 230 
                                       tmp_6 = -110;
        }
      #line 230 
      err = tmp_6;
      #line 233 
      if (err < 0) 
                   #line 234 
                   goto err_exit;
    }
  }
  #line 237 
  err = aq_hw_err_from_flags(self);
  #line 239 
  err_exit: 
            #line 239 
  ;
  #line 240 
  return err;
}

#line 243  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_a0.c"
static int hw_atl_a0_hw_offload_set(struct aq_hw_s *self, struct aq_nic_cfg_s *aq_nic_cfg)
{
  #line 247 
  hw_atl_tpo_ipv4header_crc_offload_en_set(self,1U);
  #line 248 
  hw_atl_tpo_tcp_udp_crc_offload_en_set(self,1U);
  #line 251 
  hw_atl_rpo_ipv4header_crc_offload_en_set(self,1U);
  #line 252 
  hw_atl_rpo_tcp_udp_crc_offload_en_set(self,1U);
  #line 255 
  hw_atl_tdm_large_send_offload_en_set(self,4294967295U);
  #line 257 
  return aq_hw_err_from_flags(self);
}

#line 260  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_a0.c"
static int hw_atl_a0_hw_init_tx_path(struct aq_hw_s *self)
{
  #line 262 
  hw_atl_thm_lso_tcp_flag_of_first_pkt_set(self,4086U);
  #line 263 
  hw_atl_thm_lso_tcp_flag_of_middle_pkt_set(self,4086U);
  #line 264 
  hw_atl_thm_lso_tcp_flag_of_last_pkt_set(self,3967U);
  #line 267 
  hw_atl_tdm_tx_desc_wr_wb_irq_en_set(self,1U);
  #line 270 
  aq_hw_write_reg(self,28736U,(self->chip_features << 15) & 65536U);
  #line 272 
  hw_atl_tdm_tx_dca_en_set(self,0U);
  #line 273 
  hw_atl_tdm_tx_dca_mode_set(self,0U);
  #line 275 
  hw_atl_tpb_tx_path_scp_ins_en_set(self,1U);
  #line 277 
  return aq_hw_err_from_flags(self);
}

#line 280  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_a0.c"
static int hw_atl_a0_hw_init_rx_path(struct aq_hw_s *self)
{
  #line 283 
  int i;
  #line 292 
  unsigned int tmp;
  #line 282 
  struct aq_nic_cfg_s *cfg = self->aq_nic_cfg;
  #line 286 
  hw_atl_rpb_rpf_rx_traf_class_mode_set(self,1U);
  #line 289 
  hw_atl_rpb_rx_flow_ctl_mode_set(self,1U);
  #line 292 
  if ((int)cfg->is_rss != 0) 
                             #line 292 
                             tmp = 3006477107U; else 
                                                     #line 292 
                                                     tmp = 0U;
  #line 292 
  ;
  #line 292 
  hw_atl_reg_rx_flr_rss_control1set(self,tmp);
  #line 296 
  i = 33;
  #line 296 
  while (1) {
    #line 296 
    int tmp_1;
    #line 296 
    tmp_1 = i;
    #line 296 
    i --;
    #line 296 
    ;
    #line 296 
    if (! (tmp_1 != 0)) 
                        #line 296 
                        break;
    {
      #line 297 
      unsigned int tmp_0;
      #line 297 
      ;
      #line 297 
      if (i == 0) 
                  #line 297 
                  tmp_0 = 1U; else 
                                   #line 297 
                                   tmp_0 = 0U;
      #line 297 
      ;
      #line 297 
      hw_atl_rpfl2_uc_flr_en_set(self,tmp_0,(unsigned int)i);
      #line 298 
      hw_atl_rpfl2unicast_flr_act_set(self,1U,(unsigned int)i);
    }
  }
  #line 301 
  hw_atl_reg_rx_flr_mcst_flr_msk_set(self,0U);
  #line 302 
  hw_atl_reg_rx_flr_mcst_flr_set(self,69631U,0U);
  #line 305 
  hw_atl_rpf_vlan_outer_etht_set(self,34984U);
  #line 306 
  hw_atl_rpf_vlan_inner_etht_set(self,33024U);
  #line 307 
  hw_atl_rpf_vlan_prom_mode_en_set(self,1U);
  #line 310 
  hw_atl_rdm_rx_desc_wr_wb_irq_en_set(self,1U);
  #line 313 
  hw_atl_rpfl2broadcast_flr_act_set(self,1U);
  #line 314 
  hw_atl_rpfl2broadcast_count_threshold_set(self,65535U);
  #line 316 
  hw_atl_rdm_rx_dca_en_set(self,0U);
  #line 317 
  hw_atl_rdm_rx_dca_mode_set(self,0U);
  #line 319 
  return aq_hw_err_from_flags(self);
}

#line 322  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_a0.c"
static int hw_atl_a0_hw_mac_addr_set(struct aq_hw_s *self, u8 *mac_addr)
{
  #line 324 
  unsigned int h = 0U;
  #line 325 
  unsigned int l = 0U;
  #line 326 
  int err = 0;
  #line 328 
  if (mac_addr == (u8 *)0U) {
    #line 329 
    err = -22;
    #line 330 
    goto err_exit;
  }
  #line 332 
  h = (unsigned int)(((int)*mac_addr << 8) | (int)*(mac_addr + 1U));
  #line 333 
  l = (unsigned int)(((((int)*(mac_addr + 2U) << 24) | ((int)*(mac_addr + 3U) << 16)) | ((int)*(mac_addr + 4U) << 8)) | (int)*(mac_addr + 5U));
  #line 336 
  hw_atl_rpfl2_uc_flr_en_set(self,0U,0U);
  #line 337 
  hw_atl_rpfl2unicast_dest_addresslsw_set(self,l,0U);
  #line 338 
  hw_atl_rpfl2unicast_dest_addressmsw_set(self,h,0U);
  #line 339 
  hw_atl_rpfl2_uc_flr_en_set(self,1U,0U);
  #line 341 
  err = aq_hw_err_from_flags(self);
  #line 343 
  err_exit: 
            #line 343 
  ;
  #line 344 
  return err;
}

#line 347  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_a0.c"
static int hw_atl_a0_hw_init(struct aq_hw_s *self, u8 *mac_addr)
{
  #line 349 
  u32 aq_hw_atl_igcr_table_[4U][2U] = {{536870912U, 536870912U}, {536871040U, 536871040U}, {536870945U, 536870949U}, {536870946U, 536870950U}};
  #line 355 
  struct aq_nic_cfg_s *aq_nic_cfg = self->aq_nic_cfg;
  #line 356 
  int err = 0;
  #line 359 
  hw_atl_a0_hw_init_tx_path(self);
  #line 360 
  hw_atl_a0_hw_init_rx_path(self);
  #line 362 
  hw_atl_a0_hw_mac_addr_set(self,mac_addr);
  #line 364 
  (*((self->aq_fw_ops)->set_link_speed))(self,aq_nic_cfg->link_speed_msk);
  #line 365 
  (*((self->aq_fw_ops)->set_state))(self,(enum hal_atl_utils_fw_state_e)MPI_INIT);
  #line 367 
  hw_atl_reg_tx_dma_debug_ctl_set(self,2147483832U);
  #line 368 
  hw_atl_reg_tx_dma_debug_ctl_set(self,184U);
  #line 370 
  hw_atl_a0_hw_qos_set(self);
  #line 371 
  hw_atl_a0_hw_rss_set(self,& aq_nic_cfg->aq_rss);
  #line 372 
  hw_atl_a0_hw_rss_hash_set(self,& aq_nic_cfg->aq_rss);
  #line 375 
  self->aq_link_status.mbps = 0U;
  #line 376 
  (*((self->aq_fw_ops)->update_stats))(self);
  #line 378 
  err = aq_hw_err_from_flags(self);
  #line 379 
  if (err < 0) 
               #line 380 
               goto err_exit;
  #line 383 
  hw_atl_reg_irq_glb_ctl_set(self,aq_hw_atl_igcr_table_[aq_nic_cfg->irq_type][aq_nic_cfg->vecs > 1U]);
  #line 387 
  hw_atl_itr_irq_auto_masklsw_set(self,(aq_nic_cfg->aq_hw_caps)->irq_mask);
  #line 390 
  hw_atl_reg_gen_irq_map_set(self,2290649224U,0U);
  #line 396 
  hw_atl_a0_hw_offload_set(self,aq_nic_cfg);
  #line 398 
  err_exit: 
            #line 398 
  ;
  #line 399 
  return err;
}

#line 402  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_a0.c"
static int hw_atl_a0_hw_ring_tx_start(struct aq_hw_s *self, struct aq_ring_s *ring)
{
  #line 405 
  hw_atl_tdm_tx_desc_en_set(self,1U,ring->idx);
  #line 407 
  return aq_hw_err_from_flags(self);
}

#line 410  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_a0.c"
static int hw_atl_a0_hw_ring_rx_start(struct aq_hw_s *self, struct aq_ring_s *ring)
{
  #line 413 
  hw_atl_rdm_rx_desc_en_set(self,1U,ring->idx);
  #line 415 
  return aq_hw_err_from_flags(self);
}

#line 418  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_a0.c"
static int hw_atl_a0_hw_start(struct aq_hw_s *self)
{
  #line 420 
  hw_atl_tpb_tx_buff_en_set(self,1U);
  #line 421 
  hw_atl_rpb_rx_buff_en_set(self,1U);
  #line 423 
  return aq_hw_err_from_flags(self);
}

#line 426  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_a0.c"
static int hw_atl_a0_hw_tx_ring_tail_update(struct aq_hw_s *self, struct aq_ring_s *ring)
{
  #line 429 
  hw_atl_reg_tx_dma_desc_tail_ptr_set(self,ring->sw_tail,ring->idx);
  #line 431 
  return 0;
}

#line 434  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_a0.c"
static int hw_atl_a0_hw_ring_tx_xmit(struct aq_hw_s *self, struct aq_ring_s *ring, unsigned int frags)
{
  #line 438 
  struct aq_ring_buff_s *buff = (struct aq_ring_buff_s *)0;
  #line 439 
  struct hw_atl_txd_s *txd = (struct hw_atl_txd_s *)0;
  #line 440 
  unsigned int buff_pa_len = 0U;
  #line 441 
  unsigned int frag_count = 0U;
  #line 442 
  unsigned int pkt_len = 0U;
  #line 443 
  bool is_gso = (_Bool)0;
  #line 445 
  buff = ring->buff_ring + (unsigned long)ring->sw_tail;
  #line 446 
  if ((unsigned int)buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.is_eop != 0U && (unsigned int)buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.is_sop != 0U) 
    #line 446 
    pkt_len = (unsigned int)buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.len; else 
                                                                    #line 446 
                                                                    pkt_len = buff->__anonCompField_aq_ring_buff_s_169.__anonCompField___anonunion_704_168.len_pkt;
  #line 448 
  frag_count = 0U;
  #line 448 
  while (frag_count < frags) {
    #line 449 
    txd = (struct hw_atl_txd_s *)(ring->dx_ring + (unsigned long)(ring->sw_tail * 16U));
    #line 451 
    txd->ctl = 0U;
    #line 452 
    txd->ctl2 = 0U;
    #line 453 
    txd->buf_addr = 0ULL;
    #line 455 
    buff = ring->buff_ring + (unsigned long)ring->sw_tail;
    #line 457 
    if ((unsigned int)buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.is_gso_tcp != 0U) {
      #line 458 
      txd->ctl = (txd->ctl | (unsigned int)(((int)buff->__anonCompField_aq_ring_buff_s_169.__anonCompField___anonunion_704_168.len_l3 << 31) | ((int)buff->__anonCompField_aq_ring_buff_s_169.__anonCompField___anonunion_704_168.len_l2 << 24))) | 4194306U;
      #line 462 
      txd->ctl2 |= ((buff->__anonCompField_aq_ring_buff_s_169.__anonCompField___anonunion_704_168.mss << 16) | (unsigned int)((int)buff->__anonCompField_aq_ring_buff_s_169.__anonCompField___anonunion_704_168.len_l4 << 8)) | (unsigned int)((int)buff->__anonCompField_aq_ring_buff_s_169.__anonCompField___anonunion_704_168.len_l3 >> 1);
      #line 466 
      pkt_len -= (unsigned int)(((int)buff->__anonCompField_aq_ring_buff_s_169.__anonCompField___anonunion_704_168.len_l4 + (int)buff->__anonCompField_aq_ring_buff_s_169.__anonCompField___anonunion_704_168.len_l3) + (int)buff->__anonCompField_aq_ring_buff_s_169.__anonCompField___anonunion_704_168.len_l2);
      #line 469 
      is_gso = (_Bool)1;
      #line 471 
      if ((unsigned int)buff->__anonCompField_aq_ring_buff_s_169.__anonCompField___anonunion_704_168.is_ipv6 != 0U) 
        #line 472 
        txd->ctl |= 2097152U;
    }
    else {
      #line 474 
      buff_pa_len = (unsigned int)buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.len;
      #line 476 
      txd->buf_addr = buff->__anonCompField_aq_ring_buff_s_169.pa;
      #line 477 
      txd->ctl |= (buff_pa_len << 4) & 1048560U;
      #line 479 
      txd->ctl |= 1U;
      #line 481 
      txd->ctl2 |= pkt_len << 14;
      #line 483 
      if ((int)is_gso != 0) {
        #line 484 
        txd->ctl |= 67108864U;
        #line 485 
        txd->ctl2 |= 8192U;
      }
      #line 489 
      if ((unsigned int)buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.is_ip_cso != 0U) 
        #line 490 
        txd->ctl |= 16777216U;
      #line 492 
      if ((unsigned int)buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.is_udp_cso != 0U || (unsigned int)buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.is_tcp_cso != 0U) 
        #line 493 
        txd->ctl |= 33554432U;
      #line 495 
      if ((long)((unsigned int)buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.is_eop != 0U) != 0L) {
        #line 496 
        txd->ctl |= 2097152U;
        #line 497 
        txd->ctl |= 134217728U;
        #line 498 
        is_gso = (_Bool)0;
      }
    }
    #line 502 
    ring->sw_tail = aq_ring_next_dx(ring,ring->sw_tail);
    #line 448 
    frag_count ++;
  }
  #line 505 
  hw_atl_a0_hw_tx_ring_tail_update(self,ring);
  #line 507 
  return aq_hw_err_from_flags(self);
}

#line 510  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_a0.c"
static int hw_atl_a0_hw_ring_rx_init(struct aq_hw_s *self, struct aq_ring_s *aq_ring, struct aq_ring_param_s *aq_ring_param)
{
  #line 514 
  u32 dma_desc_addr_msw = (unsigned int)(aq_ring->dx_ring_pa >> 32);
  #line 515 
  u32 dma_desc_addr_lsw = (unsigned int)aq_ring->dx_ring_pa;
  #line 517 
  hw_atl_rdm_rx_desc_en_set(self,0U,aq_ring->idx);
  #line 519 
  hw_atl_rdm_rx_desc_head_splitting_set(self,0U,aq_ring->idx);
  #line 521 
  hw_atl_reg_rx_dma_desc_base_addresslswset(self,dma_desc_addr_lsw,aq_ring->idx);
  #line 524 
  hw_atl_reg_rx_dma_desc_base_addressmswset(self,dma_desc_addr_msw,aq_ring->idx);
  #line 528 
  hw_atl_rdm_rx_desc_len_set(self,aq_ring->size / 8U,aq_ring->idx);
  #line 530 
  hw_atl_rdm_rx_desc_data_buff_size_set(self,2U,aq_ring->idx);
  #line 534 
  hw_atl_rdm_rx_desc_head_buff_size_set(self,0U,aq_ring->idx);
  #line 535 
  hw_atl_rdm_rx_desc_head_splitting_set(self,0U,aq_ring->idx);
  #line 536 
  hw_atl_rpo_rx_desc_vlan_stripping_set(self,0U,aq_ring->idx);
  #line 541 
  hw_atl_itr_irq_map_rx_set(self,aq_ring_param->vec_idx,aq_ring->idx);
  #line 542 
  hw_atl_itr_irq_map_en_rx_set(self,1U,aq_ring->idx);
  #line 544 
  hw_atl_rdm_cpu_id_set(self,aq_ring_param->cpu,aq_ring->idx);
  #line 545 
  hw_atl_rdm_rx_desc_dca_en_set(self,0U,aq_ring->idx);
  #line 546 
  hw_atl_rdm_rx_head_dca_en_set(self,0U,aq_ring->idx);
  #line 547 
  hw_atl_rdm_rx_pld_dca_en_set(self,0U,aq_ring->idx);
  #line 549 
  return aq_hw_err_from_flags(self);
}

#line 552  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_a0.c"
static int hw_atl_a0_hw_ring_tx_init(struct aq_hw_s *self, struct aq_ring_s *aq_ring, struct aq_ring_param_s *aq_ring_param)
{
  #line 556 
  u32 dma_desc_msw_addr = (unsigned int)(aq_ring->dx_ring_pa >> 32);
  #line 557 
  u32 dma_desc_lsw_addr = (unsigned int)aq_ring->dx_ring_pa;
  #line 559 
  hw_atl_reg_tx_dma_desc_base_addresslswset(self,dma_desc_lsw_addr,aq_ring->idx);
  #line 562 
  hw_atl_reg_tx_dma_desc_base_addressmswset(self,dma_desc_msw_addr,aq_ring->idx);
  #line 565 
  hw_atl_tdm_tx_desc_len_set(self,aq_ring->size / 8U,aq_ring->idx);
  #line 567 
  hw_atl_a0_hw_tx_ring_tail_update(self,aq_ring);
  #line 570 
  hw_atl_tdm_tx_desc_wr_wb_threshold_set(self,0U,aq_ring->idx);
  #line 573 
  hw_atl_itr_irq_map_tx_set(self,aq_ring_param->vec_idx,aq_ring->idx);
  #line 574 
  hw_atl_itr_irq_map_en_tx_set(self,1U,aq_ring->idx);
  #line 576 
  hw_atl_tdm_cpu_id_set(self,aq_ring_param->cpu,aq_ring->idx);
  #line 577 
  hw_atl_tdm_tx_desc_dca_en_set(self,0U,aq_ring->idx);
  #line 579 
  return aq_hw_err_from_flags(self);
}

#line 582  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_a0.c"
static int hw_atl_a0_hw_ring_rx_fill(struct aq_hw_s *self, struct aq_ring_s *ring, unsigned int sw_tail_old)
{
  #line 586 
  while (ring->sw_tail != sw_tail_old) {
    {
      #line 588 
      struct hw_atl_rxd_s *rxd = (struct hw_atl_rxd_s *)(ring->dx_ring + (unsigned long)(sw_tail_old * 16U));
      #line 592 
      struct aq_ring_buff_s *buff = ring->buff_ring + (unsigned long)sw_tail_old;
      #line 594 
      rxd->buf_addr = buff->__anonCompField_aq_ring_buff_s_169.pa;
      #line 595 
      rxd->hdr_addr = 0ULL;
    }
    #line 587 
    sw_tail_old = aq_ring_next_dx(ring,sw_tail_old);
  }
  #line 598 
  hw_atl_reg_rx_dma_desc_tail_ptr_set(self,sw_tail_old,ring->idx);
  #line 600 
  return aq_hw_err_from_flags(self);
}

#line 603  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_a0.c"
static int hw_atl_a0_hw_ring_tx_head_update(struct aq_hw_s *self, struct aq_ring_s *ring)
{
  #line 606 
  unsigned int hw_head = hw_atl_tdm_tx_desc_head_ptr_get(self,ring->idx);
  #line 607 
  int err = 0;
  #line 609 
  if ((int)aq_utils_obj_test(& self->flags,1073741824U) != 0) {
    #line 610 
    err = -6;
    #line 611 
    goto err_exit;
  }
  #line 613 
  ring->hw_head = hw_head;
  #line 614 
  err = aq_hw_err_from_flags(self);
  #line 616 
  err_exit: 
            #line 616 
  ;
  #line 617 
  return err;
}

#line 620  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_a0.c"
static int hw_atl_a0_hw_ring_rx_receive(struct aq_hw_s *self, struct aq_ring_s *ring)
{
  #line 623 
  while (ring->hw_head != ring->sw_tail) {
    {
      #line 625 
      struct aq_ring_buff_s *buff = (struct aq_ring_buff_s *)0;
      #line 626 
      struct hw_atl_rxd_wb_s *rxd_wb = (struct hw_atl_rxd_wb_s *)(ring->dx_ring + (unsigned long)(ring->hw_head * 16U));
      #line 629 
      unsigned int is_err = 1U;
      #line 630 
      unsigned int is_rx_check_sum_enabled = 0U;
      #line 631 
      unsigned int pkt_type = 0U;
      #line 633 
      if (((unsigned int)rxd_wb->status & 5U) == 0U) {
        #line 634 
        if ((hw_atl_reg_rx_dma_desc_status_get(self,ring->idx) & 16U) != 0U) {
          #line 636 
          hw_atl_rdm_rx_desc_en_set(self,0U,ring->idx);
          #line 637 
          hw_atl_rdm_rx_desc_res_set(self,1U,ring->idx);
          #line 638 
          hw_atl_rdm_rx_desc_res_set(self,0U,ring->idx);
          #line 639 
          hw_atl_rdm_rx_desc_en_set(self,1U,ring->idx);
        }
        #line 642 
        if (ring->hw_head != 0U) 
                                 #line 642 
                                 goto _LOR;
        else {
          #line 642 
          if (hw_atl_rdm_rx_desc_head_ptr_get(self,ring->idx) <= 1U) 
            #line 642 
            _LOR: 
                  #line 645 
                  break;
          else 
            #line 646 
            if (((unsigned int)rxd_wb->status & 1U) == 0U) {
              #line 647 
              struct hw_atl_rxd_wb_s *rxd_wb1 = (struct hw_atl_rxd_wb_s *)(ring->dx_ring + 16U);
              #line 652 
              if (((unsigned int)rxd_wb1->status & 1U) != 0U) {
                #line 653 
                rxd_wb->pkt_len = (unsigned short)1514U;
                #line 654 
                rxd_wb->status = (unsigned short)3U;
              }
              else 
                   #line 656 
                   break;
            }
        }
      }
      #line 661 
      buff = ring->buff_ring + (unsigned long)ring->hw_head;
      #line 663 
      if (((unsigned int)rxd_wb->status & 3U) != 3U) 
                                                     #line 664 
                                                     rxd_wb->status = (unsigned short)((unsigned int)rxd_wb->status | 4U);
      #line 666 
      is_err = (unsigned int)rxd_wb->status & 28U;
      #line 667 
      is_rx_check_sum_enabled = rxd_wb->type & 1572864U;
      #line 668 
      pkt_type = (rxd_wb->type >> 4) & 255U;
      #line 670 
      if (is_rx_check_sum_enabled != 0U) {
        #line 671 
        if ((pkt_type & 3U) == 0U) 
                                   #line 672 
                                   buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.is_ip_cso = (unsigned int)((is_err & 8U) == 0U);
        #line 674 
        if ((pkt_type & 28U) == 4U) 
                                    #line 675 
                                    buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.is_udp_cso = (unsigned int)((is_err & 16U) == 0U);
        else 
          #line 676 
          if ((pkt_type & 28U) == 0U) 
                                      #line 677 
                                      buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.is_tcp_cso = (unsigned int)((is_err & 16U) == 0U);
        #line 680 
        if ((unsigned int)rxd_wb->pkt_len <= 60U) {
          #line 681 
          buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.is_ip_cso = (unsigned int)0U;
          #line 682 
          buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.is_cso_err = (unsigned int)0U;
        }
      }
      #line 686 
      is_err &= 4294967271U;
      #line 687 
      is_err &= 4294967291U;
      #line 689 
      if (is_err != 0U || (rxd_wb->type & 4096U) != 0U) 
                                                        #line 691 
                                                        buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.is_error = (unsigned int)1U;
      else {
        #line 693 
        if ((int)(self->aq_nic_cfg)->is_rss != 0) {
          #line 695 
          u16 rss_type = (unsigned short)((unsigned int)((unsigned short)rxd_wb->type) & 15U);
          #line 697 
          if ((unsigned int)rss_type + 65535U <= 6U) {
            #line 698 
            buff->__anonCompField_aq_ring_buff_s_169.__anonCompField___anonunion_704_166.is_hash_l4 = (unsigned char)((unsigned int)rss_type + 65532U <= 1U);
            #line 700 
            buff->__anonCompField_aq_ring_buff_s_169.__anonCompField___anonunion_704_166.rss_hash = rxd_wb->rss_hash;
          }
        }
        #line 704 
        if (((unsigned int)rxd_wb->status & 2U) != 0U) {
          #line 705 
          buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.len = (unsigned int)((unsigned int)rxd_wb->pkt_len & 2047U);
          #line 707 
          if ((unsigned int)buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.len != 0U) 
            #line 707 
            buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.len = buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.len; else 
                                                                    #line 707 
                                                                    buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.len = (unsigned int)2048U;
          #line 709 
          buff->__anonCompField_aq_ring_buff_s_169.__anonCompField___anonunion_704_166.next = (unsigned short)0U;
          #line 710 
          buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.is_eop = (unsigned int)1U;
        }
        else {
          #line 713 
          buff->__anonCompField_aq_ring_buff_s_169.__anonCompField___anonunion_704_166.next = (unsigned short)aq_ring_next_dx(ring,ring->hw_head);
          #line 715 
          (ring->stats.rx.jumbo_packets) ++;
        }
      }
    }
    #line 624 
    ring->hw_head = aq_ring_next_dx(ring,ring->hw_head);
  }
  #line 720 
  return aq_hw_err_from_flags(self);
}

#line 723  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_a0.c"
static int hw_atl_a0_hw_irq_enable(struct aq_hw_s *self, u64 mask)
{
  #line 725 
  hw_atl_itr_irq_msk_setlsw_set(self,(unsigned int)mask | 256U);
  #line 728 
  return aq_hw_err_from_flags(self);
}

#line 731  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_a0.c"
static int hw_atl_a0_hw_irq_disable(struct aq_hw_s *self, u64 mask)
{
  #line 733 
  hw_atl_itr_irq_msk_clearlsw_set(self,(unsigned int)mask);
  #line 734 
  hw_atl_itr_irq_status_clearlsw_set(self,(unsigned int)mask);
  #line 736 
  if ((hw_atl_reg_gen_irq_status_get(self) & 65536U) != 0U) 
                                                            #line 737 
                                                            atomic_inc(& self->dpc);
  #line 739 
  return aq_hw_err_from_flags(self);
}

#line 742  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_a0.c"
static int hw_atl_a0_hw_irq_read(struct aq_hw_s *self, u64 *mask)
{
  #line 744 
  *mask = (unsigned long long)hw_atl_itr_irq_statuslsw_get(self);
  #line 746 
  return aq_hw_err_from_flags(self);
}

#line 751  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_a0.c"
static int hw_atl_a0_hw_packet_filter_set(struct aq_hw_s *self, unsigned int packet_filter)
{
  #line 754 
  unsigned int i = 0U;
  #line 756 
  hw_atl_rpfl2promiscuous_mode_en_set(self,(packet_filter >> 8) & 1U);
  #line 758 
  hw_atl_rpfl2multicast_flr_en_set(self,(packet_filter >> 12) & 1U,0U);
  #line 760 
  hw_atl_rpfl2broadcast_en_set(self,(packet_filter >> 1) & 1U);
  #line 762 
  (self->aq_nic_cfg)->is_mc_list_enabled = (unsigned short)((unsigned int)((unsigned short)(packet_filter >> 12)) & 1U);
  #line 765 
  i = 1U;
  #line 765 
  while (i <= 32U) {
    #line 766 
    unsigned int tmp;
    #line 766 
    ;
    #line 766 
    if ((unsigned int)(self->aq_nic_cfg)->is_mc_list_enabled != 0U && (unsigned int)(self->aq_nic_cfg)->mc_list_count >= i) 
      #line 766 
      tmp = 1U; else 
                     #line 766 
                     tmp = 0U;
    #line 766 
    ;
    #line 766 
    hw_atl_rpfl2_uc_flr_en_set(self,tmp,i);
    #line 765 
    i ++;
  }
  #line 771 
  return aq_hw_err_from_flags(self);
}

#line 776  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_a0.c"
static int hw_atl_a0_hw_multicast_list_set(struct aq_hw_s *self, u8 (*ar_mac)[6U], u32 count)
{
  #line 782 
  int err = 0;
  #line 784 
  if (count > 32U) {
    #line 785 
    err = 56;
    #line 786 
    goto err_exit;
  }
  #line 788 
  (self->aq_nic_cfg)->mc_list_count = (unsigned short)0U;
  #line 788 
  while ((unsigned int)(self->aq_nic_cfg)->mc_list_count < count) {
    {
      #line 791 
      u32 i = (unsigned int)(self->aq_nic_cfg)->mc_list_count;
      #line 792 
      u32 h = (unsigned int)(((int)(*(ar_mac + (unsigned long)i))[0] << 8) | (int)(*(ar_mac + (unsigned long)i))[1]);
      #line 793 
      u32 l = (unsigned int)(((((int)(*(ar_mac + (unsigned long)i))[2] << 24) | ((int)(*(ar_mac + (unsigned long)i))[3] << 16)) | ((int)(*(ar_mac + (unsigned long)i))[4] << 8)) | (int)(*(ar_mac + (unsigned long)i))[5]);
      #line 796 
      hw_atl_rpfl2_uc_flr_en_set(self,0U,i + 1U);
      #line 798 
      hw_atl_rpfl2unicast_dest_addresslsw_set(self,l,i + 1U);
      #line 802 
      hw_atl_rpfl2unicast_dest_addressmsw_set(self,h,i + 1U);
      #line 806 
      hw_atl_rpfl2_uc_flr_en_set(self,(unsigned int)(self->aq_nic_cfg)->is_mc_list_enabled,i + 1U);
    }
    #line 790 
    (self->aq_nic_cfg)->mc_list_count = (u16)((int)(self->aq_nic_cfg)->mc_list_count + 1);
  }
  #line 811 
  err = aq_hw_err_from_flags(self);
  #line 813 
  err_exit: 
            #line 813 
  ;
  #line 814 
  return err;
}

#line 817  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_a0.c"
static int hw_atl_a0_hw_interrupt_moderation_set(struct aq_hw_s *self)
{
  #line 820 
  u32 itr_rx;
  #line 819 
  unsigned int i = 0U;
  #line 822 
  if ((self->aq_nic_cfg)->itr != 0U) 
    #line 823 
    if ((self->aq_nic_cfg)->itr != 65535U) {
      #line 826 
      unsigned int __UNIQUE_ID___x443;
      #line 826 
      unsigned int tmp;
      #line 824 
      u32 itr_ = (self->aq_nic_cfg)->itr >> 1;
      {
        #line 826 
        __UNIQUE_ID___x443 = 1023U;
        #line 826 
        u32 __UNIQUE_ID___y444 = itr_;
        #line 826 
        if (__UNIQUE_ID___x443 < __UNIQUE_ID___y444) 
                                                     #line 826 
                                                     tmp = __UNIQUE_ID___x443; else 
                                                                    #line 826 
                                                                    tmp = __UNIQUE_ID___y444;
        }
      #line 826 
      itr_ = tmp;
      #line 828 
      itr_rx = (itr_ << 16) | 2147483648U;
    }
    else {
      #line 830 
      u32 n = aq_hw_read_reg(self,10752U) & 65535U;
      #line 832 
      if (self->aq_link_status.mbps > n) 
                                         #line 833 
                                         itr_rx = 0U;
      else {
        #line 835 
        unsigned int hw_timers_tbl_[6U] = {28U, 57U, 57U, 115U, 288U, 511U};
        #line 844 
        unsigned int speed_index = hw_atl_utils_mbps_2_speed_index(self->aq_link_status.mbps);
        #line 848 
        itr_rx = (hw_timers_tbl_[speed_index] << 16U) | 2147483648U;
      }
      #line 852 
      aq_hw_write_reg(self,10752U,1073741824U);
      #line 853 
      aq_hw_write_reg(self,10752U,2365587456U);
    }
  else 
       #line 856 
       itr_rx = 0U;
  #line 859 
  i = 32U;
  #line 859 
  while (1) {
    #line 859 
    unsigned int tmp_3;
    #line 859 
    tmp_3 = i;
    #line 859 
    i --;
    #line 859 
    ;
    #line 859 
    if (! (tmp_3 != 0U)) 
                         #line 859 
                         break;
    #line 860 
    hw_atl_reg_irq_thr_set(self,itr_rx,i);
  }
  #line 862 
  return aq_hw_err_from_flags(self);
}

#line 865  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_a0.c"
static int hw_atl_a0_hw_stop(struct aq_hw_s *self)
{
  #line 867 
  hw_atl_a0_hw_irq_disable(self,4294967295ULL);
  #line 869 
  return aq_hw_err_from_flags(self);
}

#line 872  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_a0.c"
static int hw_atl_a0_hw_ring_tx_stop(struct aq_hw_s *self, struct aq_ring_s *ring)
{
  #line 875 
  hw_atl_tdm_tx_desc_en_set(self,0U,ring->idx);
  #line 877 
  return aq_hw_err_from_flags(self);
}

#line 880  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_a0.c"
static int hw_atl_a0_hw_ring_rx_stop(struct aq_hw_s *self, struct aq_ring_s *ring)
{
  #line 883 
  hw_atl_rdm_rx_desc_en_set(self,0U,ring->idx);
  #line 885 
  return aq_hw_err_from_flags(self);
}

#line 888  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_a0.c"
struct aq_hw_ops hw_atl_ops_a0 = {.hw_ring_tx_xmit = & hw_atl_a0_hw_ring_tx_xmit, .hw_ring_rx_receive = & hw_atl_a0_hw_ring_rx_receive, .hw_ring_rx_fill = & hw_atl_a0_hw_ring_rx_fill, .hw_ring_tx_head_update = & hw_atl_a0_hw_ring_tx_head_update, .hw_set_mac_address = & hw_atl_a0_hw_mac_addr_set, .hw_reset = & hw_atl_a0_hw_reset, .hw_init = & hw_atl_a0_hw_init, .hw_start = & hw_atl_a0_hw_start, .hw_stop = & hw_atl_a0_hw_stop, .hw_ring_tx_init = & hw_atl_a0_hw_ring_tx_init, .hw_ring_tx_start = & hw_atl_a0_hw_ring_tx_start, .hw_ring_tx_stop = & hw_atl_a0_hw_ring_tx_stop, .hw_ring_rx_init = & hw_atl_a0_hw_ring_rx_init, .hw_ring_rx_start = & hw_atl_a0_hw_ring_rx_start, .hw_ring_rx_stop = & hw_atl_a0_hw_ring_rx_stop, .hw_irq_enable = & hw_atl_a0_hw_irq_enable, .hw_irq_disable = & hw_atl_a0_hw_irq_disable, .hw_irq_read = & hw_atl_a0_hw_irq_read, .hw_packet_filter_set = & hw_atl_a0_hw_packet_filter_set, .hw_multicast_list_set = & hw_atl_a0_hw_multicast_list_set, .hw_interrupt_moderation_set = & hw_atl_a0_hw_interrupt_moderation_set, .hw_rss_set = & hw_atl_a0_hw_rss_set, .hw_rss_hash_set = & hw_atl_a0_hw_rss_hash_set, .hw_get_regs = & hw_atl_utils_hw_get_regs, .hw_get_hw_stats = & hw_atl_utils_get_hw_stats, .hw_get_fw_version = & hw_atl_utils_get_fw_version};
#line 185  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/hw_atl_a0.i.aux"
static void atomic_inc(atomic_t *v)
{
  #line 188 
  ldv_atomic_inc(v);
  #line 189 
  return;
}

#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/string_64.h"
#line 14 
void *memcpy(void *, void *, size_t);
#line 38  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/random.h"
#line 38 
void get_random_bytes(void *, int);
#line 276  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/etherdevice.h"
__inline static void ether_addr_copy(u8 *dst, u8 *src)
{
  #line 279 
  *((u32 *)dst) = *((u32 *)src);
  #line 280 
  *((u16 *)(dst + 4U)) = *((u16 *)(src + 4U));
  #line 281 
  return;
}

#line 592  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.h"
#line 592 
int hw_atl_utils_update_stats(struct aq_hw_s *self);
#line 596 
#line 596 
int hw_atl_utils_fw_downld_dwords(struct aq_hw_s *self, u32 a, u32 *p, u32 cnt);
#line 599 
#line 599 
int hw_atl_write_fwcfg_dwords(struct aq_hw_s *self, u32 *p, u32 cnt);
#line 606 
#line 606 
int hw_atl_utils_fw_rpc_call(struct aq_hw_s *self, unsigned int rpc_size);
#line 608 
#line 608 
int hw_atl_utils_fw_rpc_wait(struct aq_hw_s *self, struct hw_atl_utils_fw_rpc **rpc);
#line 612 
#line 616  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils_fw2x.c"
struct aq_fw_ops aq_fw_2x_ops;
#line 79 
#line 175 
static int aq_fw2x_set_link_speed(struct aq_hw_s *self, u32 speed);
#line 80 
#line 217 
static int aq_fw2x_set_state(struct aq_hw_s *self, enum hal_atl_utils_fw_state_e state);
#line 83 
#line 588 
static u32 aq_fw2x_mbox_get(struct aq_hw_s *self);
#line 84 
#line 593 
static u32 aq_fw2x_rpc_get(struct aq_hw_s *self);
#line 85 
#line 598 
static int aq_fw2x_settings_get(struct aq_hw_s *self, u32 *addr);
#line 86 
#line 611 
static u32 aq_fw2x_state2_get(struct aq_hw_s *self);
#line 88  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils_fw2x.c"
static int aq_fw2x_init(struct aq_hw_s *self)
{
  #line 98 
  int tmp_9;
  #line 93 
  int tmp_3;
  #line 90 
  int err = 0;
  {
    #line 93 
    u64 __timeout_us = 10000ULL;
    #line 93 
    unsigned long __delay_us = 1000UL;
    #line 93 
    ;
    #line 93 
    ktime_t __timeout = ktime_add_us(ktime_get(),__timeout_us);
    #line 93 
    while (1) {
      #line 93 
      self->mbox_addr = aq_fw2x_mbox_get(self);
      #line 93 
      if (self->mbox_addr != 0U) 
                                 #line 93 
                                 break;
      #line 93 
      if (__timeout_us != 0ULL) {
        #line 93 
        ;
        #line 93 
        if (ktime_compare(ktime_get(),__timeout) > 0) {
          #line 93 
          self->mbox_addr = aq_fw2x_mbox_get(self);
          #line 93 
          break;
        }
      }
      #line 93 
      if (__delay_us != 0UL) 
        #line 93 
        if (0 != 0) 
          #line 93 
          if (__delay_us > 19999UL) 
                                    #line 93 
                                    __bad_udelay(); else 
                                                         #line 93 
                                                         __const_udelay(__delay_us * 4295UL);
        else 
             #line 93 
             __udelay(__delay_us);
    }
    #line 93 
    if (self->mbox_addr != 0U) 
                               #line 93 
                               tmp_3 = 0; else 
                                               #line 93 
                                               tmp_3 = -110;
    }
  #line 93 
  err = tmp_3;
  {
    #line 98 
    u64 __timeout_us_0 = 100000ULL;
    #line 98 
    unsigned long __delay_us_0 = 1000UL;
    #line 98 
    ;
    #line 98 
    ktime_t __timeout_0 = ktime_add_us(ktime_get(),__timeout_us_0);
    #line 98 
    while (1) {
      #line 98 
      self->rpc_addr = aq_fw2x_rpc_get(self);
      #line 98 
      if (self->rpc_addr != 0U) 
                                #line 98 
                                break;
      #line 98 
      if (__timeout_us_0 != 0ULL) {
        #line 98 
        ;
        #line 98 
        if (ktime_compare(ktime_get(),__timeout_0) > 0) {
          #line 98 
          self->rpc_addr = aq_fw2x_rpc_get(self);
          #line 98 
          break;
        }
      }
      #line 98 
      if (__delay_us_0 != 0UL) 
        #line 98 
        if (0 != 0) 
          #line 98 
          if (__delay_us_0 > 19999UL) 
                                      #line 98 
                                      __bad_udelay(); else 
                                                           #line 98 
                                                           __const_udelay(__delay_us_0 * 4295UL);
        else 
             #line 98 
             __udelay(__delay_us_0);
    }
    #line 98 
    if (self->rpc_addr != 0U) 
                              #line 98 
                              tmp_9 = 0; else 
                                              #line 98 
                                              tmp_9 = -110;
    }
  #line 98 
  err = tmp_9;
  #line 103 
  err = aq_fw2x_settings_get(self,& self->settings_addr);
  #line 105 
  return err;
}

#line 108  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils_fw2x.c"
static int aq_fw2x_deinit(struct aq_hw_s *self)
{
  #line 110 
  int err = aq_fw2x_set_link_speed(self,0U);
  #line 112 
  if (err == 0) 
                #line 113 
                err = aq_fw2x_set_state(self,(enum hal_atl_utils_fw_state_e)MPI_DEINIT);
  #line 115 
  return err;
}

#line 118  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils_fw2x.c"
static enum hw_atl_fw2x_rate link_speed_mask_2fw2x_ratemask(u32 speed)
{
  #line 120 
  enum hw_atl_fw2x_rate rate = (enum hw_atl_fw2x_rate)0;
  #line 122 
  if (((unsigned long)speed & 1UL) != 0UL) 
                                           #line 123 
                                           rate = (enum hw_atl_fw2x_rate)((unsigned int)rate | 2048U);
  #line 125 
  if (((unsigned long)speed & 2UL) != 0UL) 
                                           #line 126 
                                           rate = (enum hw_atl_fw2x_rate)((unsigned int)rate | 1024U);
  #line 128 
  if (((unsigned long)speed & 4UL) != 0UL) 
                                           #line 129 
                                           rate = (enum hw_atl_fw2x_rate)((unsigned int)rate | 1024U);
  #line 131 
  if (((unsigned long)speed & 8UL) != 0UL) 
                                           #line 132 
                                           rate = (enum hw_atl_fw2x_rate)((unsigned int)rate | 512U);
  #line 134 
  if (((unsigned long)speed & 16UL) != 0UL) 
                                            #line 135 
                                            rate = (enum hw_atl_fw2x_rate)((unsigned int)rate | 256U);
  #line 137 
  if (((unsigned long)speed & 32UL) != 0UL) 
                                            #line 138 
                                            rate = (enum hw_atl_fw2x_rate)((unsigned int)rate | 32U);
  #line 140 
  return rate;
}

#line 143  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils_fw2x.c"
static u32 fw2x_to_eee_mask(u32 speed)
{
  #line 145 
  u32 rate = 0U;
  #line 147 
  if (((unsigned long)speed & 2048UL) != 0UL) 
                                              #line 148 
                                              rate |= 64U;
  #line 149 
  if (((unsigned long)speed & 1024UL) != 0UL) 
                                              #line 150 
                                              rate |= 128U;
  #line 151 
  if (((unsigned long)speed & 512UL) != 0UL) 
                                             #line 152 
                                             rate |= 256U;
  #line 153 
  if (((unsigned long)speed & 256UL) != 0UL) 
                                             #line 154 
                                             rate |= 512U;
  #line 156 
  return rate;
}

#line 159  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils_fw2x.c"
static u32 eee_mask_to_fw2x(u32 speed)
{
  #line 161 
  u32 rate = 0U;
  #line 163 
  if (((unsigned long)speed & 64UL) != 0UL) 
                                            #line 164 
                                            rate |= 2048U;
  #line 165 
  if (((unsigned long)speed & 128UL) != 0UL) 
                                             #line 166 
                                             rate |= 1024U;
  #line 167 
  if (((unsigned long)speed & 256UL) != 0UL) 
                                             #line 168 
                                             rate |= 512U;
  #line 169 
  if (((unsigned long)speed & 512UL) != 0UL) 
                                             #line 170 
                                             rate |= 256U;
  #line 172 
  return rate;
}

#line 175  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils_fw2x.c"
static int aq_fw2x_set_link_speed(struct aq_hw_s *self, u32 speed)
{
  #line 177 
  u32 val = link_speed_mask_2fw2x_ratemask(speed);
  #line 179 
  aq_hw_write_reg(self,872U,val);
  #line 181 
  return 0;
}

#line 184  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils_fw2x.c"
static void aq_fw2x_upd_flow_control_bits(struct aq_hw_s *self, u32 *mpi_state, u32 fc)
{
  #line 187 
  *mpi_state &= 4294967271U;
  #line 190 
  switch (fc) {
    #line 195 
    case (u32)3: 
                 #line 195 
    ;
    #line 196 
    case (u32)2: 
                 #line 196 
    ;
    #line 197 
    *mpi_state |= 24U;
    #line 199 
    break;
    #line 200 
    case (u32)1: 
                 #line 200 
    ;
    #line 201 
    *mpi_state |= 16U;
    #line 202 
    break;
  }
  #line 204 
  return;
}

#line 206  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils_fw2x.c"
static void aq_fw2x_upd_eee_rate_bits(struct aq_hw_s *self, u32 *mpi_opts, u32 eee_speeds)
{
  #line 209 
  *mpi_opts &= 4294963455U;
  #line 214 
  *mpi_opts |= eee_mask_to_fw2x(eee_speeds);
  #line 215 
  return;
}

#line 217  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils_fw2x.c"
static int aq_fw2x_set_state(struct aq_hw_s *self, enum hal_atl_utils_fw_state_e state)
{
  #line 220 
  u32 mpi_state = aq_hw_read_reg(self,876U);
  #line 221 
  struct aq_nic_cfg_s *cfg = self->aq_nic_cfg;
  #line 223 
  switch ((unsigned int)state) {
    #line 224 
    case (unsigned int)2: 
                          #line 224 
    ;
    #line 225 
    mpi_state &= 4290772991U;
    #line 226 
    aq_fw2x_upd_eee_rate_bits(self,& mpi_state,cfg->eee_speeds);
    #line 227 
    aq_fw2x_upd_flow_control_bits(self,& mpi_state,(unsigned int)(self->aq_nic_cfg)->fc.req);
    #line 229 
    break;
    #line 230 
    case (unsigned int)0: 
                          #line 230 
    ;
    #line 231 
    mpi_state |= 4194304U;
    #line 232 
    break;
    #line 233 
    case (unsigned int)1: 
                          #line 233 
    ;
    #line 234 
    case (unsigned int)4: 
                          #line 234 
    ;
    #line 236 
    break;
  }
  #line 238 
  aq_hw_write_reg(self,876U,mpi_state);
  #line 240 
  return 0;
}

#line 243  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils_fw2x.c"
static int aq_fw2x_update_link_status(struct aq_hw_s *self)
{
  #line 246 
  u32 mpi_state;
  #line 247 
  u32 speed;
  #line 245 
  struct aq_hw_link_status_s *link_status = & self->aq_link_status;
  #line 249 
  mpi_state = aq_hw_read_reg(self,880U);
  #line 250 
  speed = mpi_state & 3872U;
  #line 254 
  if (speed != 0U) 
    #line 255 
    if ((speed & 2048U) != 0U) 
                               #line 256 
                               link_status->mbps = 10000U;
    else 
      #line 257 
      if ((speed & 1024U) != 0U) 
                                 #line 258 
                                 link_status->mbps = 5000U;
      else 
        #line 259 
        if ((speed & 512U) != 0U) 
                                  #line 260 
                                  link_status->mbps = 2500U;
        else 
          #line 261 
          if ((speed & 256U) != 0U) 
                                    #line 262 
                                    link_status->mbps = 1000U;
          else 
            #line 263 
            if ((speed & 32U) != 0U) 
                                     #line 264 
                                     link_status->mbps = 100U; else 
                                                                    #line 266 
                                                                    link_status->mbps = 10000U;
  else 
       #line 268 
       link_status->mbps = 0U;
  #line 271 
  return 0;
}

#line 274  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils_fw2x.c"
static int aq_fw2x_get_mac_permanent(struct aq_hw_s *self, u8 *mac)
{
  #line 276 
  u32 efuse_addr = aq_hw_read_reg(self,868U);
  #line 277 
  u32 mac_addr[2U] = {0U};
  #line 278 
  int err = 0;
  #line 279 
  u32 h = 0U;
  #line 280 
  u32 l = 0U;
  #line 282 
  if (efuse_addr != 0U) {
    #line 283 
    err = hw_atl_utils_fw_downld_dwords(self,efuse_addr + 160U,(u32 *)(& mac_addr),2U);
    #line 287 
    if (err != 0) 
                  #line 288 
                  return err;
    #line 289 
    mac_addr[0] = __builtin_bswap32(mac_addr[0]);
    #line 290 
    mac_addr[1] = __builtin_bswap32(mac_addr[1]);
  }
  #line 293 
  ether_addr_copy(mac,(u8 *)(& mac_addr));
  #line 295 
  if (((unsigned int)*mac & 1U) != 0U || (unsigned int)(((int)*mac | (int)*(mac + 1U)) | (int)*(mac + 2U)) == 0U) {
    #line 296 
    unsigned int rnd = 0U;
    #line 298 
    get_random_bytes((void *)(& rnd),4);
    #line 300 
    l = (rnd & 65535U) | 3808428032U;
    #line 301 
    h = 2147561486U;
    #line 303 
    *(mac + 5U) = (unsigned char)l;
    #line 304 
    l >>= 8;
    #line 305 
    *(mac + 4U) = (unsigned char)l;
    #line 306 
    l >>= 8;
    #line 307 
    *(mac + 3U) = (unsigned char)l;
    #line 308 
    l >>= 8;
    #line 309 
    *(mac + 2U) = (unsigned char)l;
    #line 310 
    *(mac + 1U) = (unsigned char)h;
    #line 311 
    h >>= 8;
    #line 312 
    *mac = (unsigned char)h;
  }
  #line 315 
  return err;
}

#line 318  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils_fw2x.c"
static int aq_fw2x_update_stats(struct aq_hw_s *self)
{
  #line 330 
  int tmp_4;
  #line 322 
  u32 stats_val;
  #line 320 
  u32 mpi_opts = aq_hw_read_reg(self,876U);
  #line 321 
  u32 orig_stats_val = mpi_opts & 1073741824U;
  #line 323 
  int err = 0;
  #line 326 
  mpi_opts ^= 1073741824U;
  #line 327 
  aq_hw_write_reg(self,876U,mpi_opts);
  {
    #line 330 
    u64 __timeout_us = 10000ULL;
    #line 330 
    unsigned long __delay_us = 1UL;
    #line 330 
    ;
    #line 330 
    ktime_t __timeout = ktime_add_us(ktime_get(),__timeout_us);
    #line 330 
    while (1) {
      #line 330 
      stats_val = aq_fw2x_state2_get(self);
      #line 330 
      if ((unsigned long)orig_stats_val != ((unsigned long)stats_val & 1073741824UL)) 
        #line 330 
        break;
      #line 330 
      if (__timeout_us != 0ULL) {
        #line 330 
        ;
        #line 330 
        if (ktime_compare(ktime_get(),__timeout) > 0) {
          #line 330 
          stats_val = aq_fw2x_state2_get(self);
          #line 330 
          break;
        }
      }
      #line 330 
      if (__delay_us != 0UL) 
        #line 330 
        if (0 != 0) 
          #line 330 
          if (__delay_us > 19999UL) 
                                    #line 330 
                                    __bad_udelay(); else 
                                                         #line 330 
                                                         __const_udelay(__delay_us * 4295UL);
        else 
             #line 330 
             __udelay(__delay_us);
    }
    #line 330 
    if ((unsigned long)orig_stats_val != ((unsigned long)stats_val & 1073741824UL)) 
      #line 330 
      tmp_4 = 0; else 
                      #line 330 
                      tmp_4 = -110;
    }
  #line 330 
  err = tmp_4;
  #line 335 
  if (err != 0) 
                #line 336 
                return err;
  #line 338 
  return hw_atl_utils_update_stats(self);
}

#line 341  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils_fw2x.c"
static int aq_fw2x_get_phy_temp(struct aq_hw_s *self, int *temp)
{
  #line 357 
  int tmp_4;
  #line 345 
  u32 phy_temp_offset;
  #line 346 
  u32 temp_res;
  #line 348 
  u32 val;
  #line 343 
  u32 mpi_opts = aq_hw_read_reg(self,876U);
  #line 344 
  u32 temp_val = mpi_opts & 262144U;
  #line 347 
  int err = 0;
  #line 350 
  phy_temp_offset = self->mbox_addr + 80U;
  #line 354 
  mpi_opts ^= 262144U;
  #line 355 
  aq_hw_write_reg(self,876U,mpi_opts);
  {
    #line 357 
    u64 __timeout_us = 10000ULL;
    #line 357 
    unsigned long __delay_us = 1UL;
    #line 357 
    ;
    #line 357 
    ktime_t __timeout = ktime_add_us(ktime_get(),__timeout_us);
    #line 357 
    while (1) {
      #line 357 
      val = aq_fw2x_state2_get(self);
      #line 357 
      if ((unsigned long)temp_val != ((unsigned long)val & 262144UL)) 
        #line 357 
        break;
      #line 357 
      if (__timeout_us != 0ULL) {
        #line 357 
        ;
        #line 357 
        if (ktime_compare(ktime_get(),__timeout) > 0) {
          #line 357 
          val = aq_fw2x_state2_get(self);
          #line 357 
          break;
        }
      }
      #line 357 
      if (__delay_us != 0UL) 
        #line 357 
        if (0 != 0) 
          #line 357 
          if (__delay_us > 19999UL) 
                                    #line 357 
                                    __bad_udelay(); else 
                                                         #line 357 
                                                         __const_udelay(__delay_us * 4295UL);
        else 
             #line 357 
             __udelay(__delay_us);
    }
    #line 357 
    if ((unsigned long)temp_val != ((unsigned long)val & 262144UL)) 
                                                                    #line 357 
                                                                    tmp_4 = 0; else 
                                                                    #line 357 
                                                                    tmp_4 = -110;
    }
  #line 357 
  err = tmp_4;
  #line 361 
  err = hw_atl_utils_fw_downld_dwords(self,phy_temp_offset,& temp_res,1U);
  #line 364 
  if (err != 0) 
                #line 365 
                return err;
  #line 370 
  *temp = (int)(((temp_res & 65535U) * 1000U) / 256U);
  #line 372 
  return 0;
}

#line 375  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils_fw2x.c"
static int aq_fw2x_set_wol(struct aq_hw_s *self, u8 *mac)
{
  #line 380 
  u32 rpc_size;
  #line 382 
  u32 val;
  #line 377 
  struct hw_atl_utils_fw_rpc *rpc = (struct hw_atl_utils_fw_rpc *)0;
  #line 378 
  struct offload_info *info = (struct offload_info *)0;
  #line 379 
  u32 wol_bits = 0U;
  #line 381 
  int err = 0;
  #line 384 
  if (((self->aq_nic_cfg)->wol & 1U) != 0U) {
    #line 385 
    aq_hw_write_reg(self,876U,4194304U);
    {
      #line 387 
      u64 __timeout_us = 100000ULL;
      #line 387 
      unsigned long __delay_us = 1000UL;
      #line 387 
      ;
      #line 387 
      ktime_t __timeout = ktime_add_us(ktime_get(),__timeout_us);
      #line 387 
      while (1) {
        #line 387 
        val = aq_fw2x_state2_get(self);
        #line 387 
        if (((unsigned long)val & 4194304UL) != 0UL) 
                                                     #line 387 
                                                     break;
        #line 387 
        if (__timeout_us != 0ULL) {
          #line 387 
          ;
          #line 387 
          if (ktime_compare(ktime_get(),__timeout) > 0) {
            #line 387 
            val = aq_fw2x_state2_get(self);
            #line 387 
            break;
          }
        }
        #line 387 
        if (__delay_us != 0UL) 
          #line 387 
          if (0 != 0) 
            #line 387 
            if (__delay_us > 19999UL) 
                                      #line 387 
                                      __bad_udelay(); else 
                                                           #line 387 
                                                           __const_udelay(__delay_us * 4295UL);
          else 
               #line 387 
               __udelay(__delay_us);
      }
      #line 387 
      int tmp_3 = ((unsigned long)val & 4194304UL) != 0UL;
      #line 387 
      ;
    }
    #line 391 
    wol_bits |= 65536U;
  }
  #line 394 
  if (((self->aq_nic_cfg)->wol & 32U) != 0U) {
    #line 395 
    wol_bits |= 25165824U;
    #line 398 
    err = hw_atl_utils_fw_rpc_wait(self,& rpc);
    #line 399 
    if (err < 0) 
                 #line 400 
                 goto err_exit;
    #line 402 
    rpc_size = 88U;
    #line 404 
    memset((void *)rpc,0,(unsigned long)rpc_size);
    #line 405 
    info = & rpc->__anonCompField_hw_atl_utils_fw_rpc_164.fw2x_offloads;
    #line 406 
    memcpy((void *)(& info->mac_addr),(void *)mac,6UL);
    #line 407 
    info->len = 84U;
    #line 409 
    err = hw_atl_utils_fw_rpc_call(self,rpc_size);
    #line 410 
    if (err < 0) 
                 #line 411 
                 goto err_exit;
  }
  #line 414 
  aq_hw_write_reg(self,876U,wol_bits);
  #line 416 
  err_exit: 
            #line 416 
  ;
  #line 417 
  return err;
}

#line 420  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils_fw2x.c"
static int aq_fw2x_set_power(struct aq_hw_s *self, unsigned int power_state, u8 *mac)
{
  #line 423 
  int err = 0;
  #line 425 
  if ((self->aq_nic_cfg)->wol != 0U) 
                                     #line 426 
                                     err = aq_fw2x_set_wol(self,mac);
  #line 428 
  return err;
}

#line 431  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils_fw2x.c"
static int aq_fw2x_send_fw_request(struct aq_hw_s *self, struct hw_fw_request_iface *fw_req, size_t size)
{
  #line 455 
  int tmp_3;
  #line 435 
  u32 ctrl2;
  #line 435 
  u32 orig_ctrl2;
  #line 436 
  u32 dword_cnt;
  #line 438 
  u32 val;
  #line 437 
  int err = 0;
  #line 441 
  dword_cnt = (unsigned int)(size / 4UL);
  #line 442 
  if ((size & 3UL) != 0UL) 
                           #line 443 
                           dword_cnt ++;
  #line 444 
  err = hw_atl_write_fwcfg_dwords(self,(u32 *)fw_req,dword_cnt);
  #line 445 
  if (err < 0) 
               #line 446 
               goto err_exit;
  #line 449 
  ctrl2 = aq_hw_read_reg(self,876U);
  #line 450 
  orig_ctrl2 = ctrl2 & 4096U;
  #line 451 
  ctrl2 ^= 4096U;
  #line 452 
  aq_hw_write_reg(self,876U,ctrl2);
  {
    #line 455 
    u64 __timeout_us = 10000ULL;
    #line 455 
    unsigned long __delay_us = 1UL;
    #line 455 
    ;
    #line 455 
    ktime_t __timeout = ktime_add_us(ktime_get(),__timeout_us);
    #line 455 
    while (1) {
      #line 455 
      val = aq_fw2x_state2_get(self);
      #line 455 
      if ((unsigned long)orig_ctrl2 != ((unsigned long)val & 4096UL)) 
        #line 455 
        break;
      #line 455 
      if (__timeout_us != 0ULL) {
        #line 455 
        ;
        #line 455 
        if (ktime_compare(ktime_get(),__timeout) > 0) {
          #line 455 
          val = aq_fw2x_state2_get(self);
          #line 455 
          break;
        }
      }
      #line 455 
      if (__delay_us != 0UL) 
        #line 455 
        if (0 != 0) 
          #line 455 
          if (__delay_us > 19999UL) 
                                    #line 455 
                                    __bad_udelay(); else 
                                                         #line 455 
                                                         __const_udelay(__delay_us * 4295UL);
        else 
             #line 455 
             __udelay(__delay_us);
    }
    #line 455 
    if ((unsigned long)orig_ctrl2 != ((unsigned long)val & 4096UL)) 
                                                                    #line 455 
                                                                    tmp_3 = 0; else 
                                                                    #line 455 
                                                                    tmp_3 = -110;
    }
  #line 455 
  err = tmp_3;
  #line 460 
  err_exit: 
            #line 460 
  ;
  #line 461 
  return err;
}

#line 464  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils_fw2x.c"
static void aq_fw3x_enable_ptp(struct aq_hw_s *self, int enable)
{
  #line 466 
  u32 ptp_opts = aq_hw_read_reg(self,892U);
  #line 467 
  u32 all_ptp_features = 1114112U;
  #line 470 
  if (enable != 0) 
                   #line 471 
                   ptp_opts |= all_ptp_features; else 
                                                      #line 473 
                                                      ptp_opts = ~ all_ptp_features & ptp_opts;
  #line 475 
  aq_hw_write_reg(self,888U,ptp_opts);
  #line 476 
  return;
}

#line 478  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils_fw2x.c"
static int aq_fw2x_led_control(struct aq_hw_s *self, u32 mode)
{
  #line 480 
  if (self->fw_ver_actual <= 50397221U) 
                                        #line 481 
                                        return -95;
  #line 483 
  aq_hw_write_reg(self,796U,mode);
  #line 485 
  return 0;
}

#line 488  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils_fw2x.c"
static int aq_fw2x_set_eee_rate(struct aq_hw_s *self, u32 speed)
{
  #line 490 
  u32 mpi_opts = aq_hw_read_reg(self,876U);
  #line 492 
  aq_fw2x_upd_eee_rate_bits(self,& mpi_opts,speed);
  #line 494 
  aq_hw_write_reg(self,876U,mpi_opts);
  #line 496 
  return 0;
}

#line 499  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils_fw2x.c"
static int aq_fw2x_get_eee_rate(struct aq_hw_s *self, u32 *rate, u32 *supported_rates)
{
  #line 502 
  u32 mpi_state;
  #line 503 
  u32 caps_hi;
  #line 505 
  u32 offset;
  #line 504 
  int err = 0;
  #line 507 
  offset = self->mbox_addr + 136U;
  #line 510 
  err = hw_atl_utils_fw_downld_dwords(self,offset,& caps_hi,1U);
  #line 512 
  if (err != 0) 
                #line 513 
                return err;
  #line 515 
  *supported_rates = fw2x_to_eee_mask(caps_hi);
  #line 517 
  mpi_state = aq_fw2x_state2_get(self);
  #line 518 
  *rate = fw2x_to_eee_mask(mpi_state);
  #line 520 
  return err;
}

#line 523  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils_fw2x.c"
static int aq_fw2x_renegotiate(struct aq_hw_s *self)
{
  #line 525 
  u32 mpi_opts = aq_hw_read_reg(self,876U);
  #line 527 
  mpi_opts |= 2147483648U;
  #line 529 
  aq_hw_write_reg(self,876U,mpi_opts);
  #line 531 
  return 0;
}

#line 534  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils_fw2x.c"
static int aq_fw2x_set_flow_control(struct aq_hw_s *self)
{
  #line 536 
  u32 mpi_state = aq_hw_read_reg(self,876U);
  #line 538 
  aq_fw2x_upd_flow_control_bits(self,& mpi_state,(unsigned int)(self->aq_nic_cfg)->fc.req);
  #line 541 
  aq_hw_write_reg(self,876U,mpi_state);
  #line 543 
  return 0;
}

#line 546  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils_fw2x.c"
static u32 aq_fw2x_get_flow_control(struct aq_hw_s *self, u32 *fcmode)
{
  #line 548 
  u32 mpi_state = aq_fw2x_state2_get(self);
  #line 549 
  *fcmode = 0U;
  #line 551 
  if (((unsigned long)mpi_state & 8UL) != 0UL) 
                                               #line 552 
                                               *fcmode |= 2U;
  #line 554 
  if (((unsigned long)mpi_state & 16UL) != 0UL) 
                                                #line 555 
                                                *fcmode |= 1U;
  #line 557 
  return 0U;
}

#line 560  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils_fw2x.c"
static int aq_fw2x_set_phyloopback(struct aq_hw_s *self, u32 mode, bool enable)
{
  #line 562 
  u32 mpi_opts;
  #line 564 
  switch (mode) {
    #line 565 
    case (u32)3: 
                 #line 565 
    ;
    #line 566 
    mpi_opts = aq_hw_read_reg(self,876U);
    #line 567 
    if ((int)enable != 0) 
                          #line 568 
                          mpi_opts |= 134217728U; else 
                                                       #line 570 
                                                       mpi_opts &= 4160749567U;
    #line 571 
    aq_hw_write_reg(self,876U,mpi_opts);
    #line 572 
    break;
    #line 573 
    case (u32)4: 
                 #line 573 
    ;
    #line 574 
    mpi_opts = aq_hw_read_reg(self,876U);
    #line 575 
    if ((int)enable != 0) 
                          #line 576 
                          mpi_opts |= 67108864U; else 
                                                      #line 578 
                                                      mpi_opts &= 4227858431U;
    #line 579 
    aq_hw_write_reg(self,876U,mpi_opts);
    #line 580 
    break;
    #line 581 
    default: 
             #line 581 
    ;
    #line 582 
    return -22;
  }
  #line 585 
  return 0;
}

#line 588  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils_fw2x.c"
static u32 aq_fw2x_mbox_get(struct aq_hw_s *self)
{
  #line 590 
  return aq_hw_read_reg(self,864U);
}

#line 593  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils_fw2x.c"
static u32 aq_fw2x_rpc_get(struct aq_hw_s *self)
{
  #line 595 
  return aq_hw_read_reg(self,820U);
}

#line 598  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils_fw2x.c"
static int aq_fw2x_settings_get(struct aq_hw_s *self, u32 *addr)
{
  #line 601 
  u32 offset;
  #line 600 
  int err = 0;
  #line 603 
  offset = self->mbox_addr + 268U;
  #line 606 
  err = hw_atl_utils_fw_downld_dwords(self,offset,addr,1U);
  #line 608 
  return err;
}

#line 611  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils_fw2x.c"
static u32 aq_fw2x_state2_get(struct aq_hw_s *self)
{
  #line 613 
  return aq_hw_read_reg(self,884U);
}

#line 616  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils_fw2x.c"
struct aq_fw_ops aq_fw_2x_ops = {.init = & aq_fw2x_init, .deinit = & aq_fw2x_deinit, .renegotiate = & aq_fw2x_renegotiate, .get_mac_permanent = & aq_fw2x_get_mac_permanent, .set_link_speed = & aq_fw2x_set_link_speed, .set_state = & aq_fw2x_set_state, .update_link_status = & aq_fw2x_update_link_status, .update_stats = & aq_fw2x_update_stats, .get_phy_temp = & aq_fw2x_get_phy_temp, .get_flow_control = & aq_fw2x_get_flow_control, .set_flow_control = & aq_fw2x_set_flow_control, .led_control = & aq_fw2x_led_control, .set_phyloopback = & aq_fw2x_set_phyloopback, .set_power = & aq_fw2x_set_power, .send_fw_request = & aq_fw2x_send_fw_request, .enable_ptp = & aq_fw3x_enable_ptp, .set_eee_rate = & aq_fw2x_set_eee_rate, .get_eee_rate = & aq_fw2x_get_eee_rate};
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/export.h"
#line 16 
extern struct module __this_module;
#line 44  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/bitops/instrumented-atomic.h"
#line 171  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_pci_func.i.aux"
static void cif_clear_bit(long nr, unsigned long *addr);
#line 570  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernel.h"
#line 570 
extern enum system_states system_state;
#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/cmpxchg_64.h"
__inline static int arch_atomic_read_0(atomic_t *v)
{
  #line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/atomic.h"
  union __anonunion___u_1489 __u;
  #line 31 
  __read_once_size((void *)(& v->counter),(void *)(& __u.__c),4);
  #line 31 
  return (__u.__val);
}

#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/atomic-instrumented.h"
__inline static int atomic_read_0(atomic_t *v)
{
  #line 26 
  kasan_check_read((void *)v,4U);
  #line 27 
  return arch_atomic_read_0(v);
}

#line 99  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cpumask.h"
#line 99 
extern atomic_t __num_online_cpus;
#line 110  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cpumask.h"
__inline static unsigned int num_online_cpus(void)
{
  #line 112 
  return (unsigned int)atomic_read_0(& __num_online_cpus);
}

#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/bitmap.h"
#line 22 
void ldv_clear_bit(long nr, unsigned long *addr);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 23 
void *ldv_kzalloc(size_t size, gfp_t flags);
#line 128  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mutex.h"
#line 128 
void __mutex_init(struct mutex *, char *, struct lock_class_key *);
#line 206  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/io.h"
#line 206 
void *ioremap(resource_size_t, unsigned long);
#line 209 
#line 209 
void iounmap(void *);
#line 162  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/interrupt.h"
#line 710  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_pci_func.i.aux"
static int cif_request_irq(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char *name, void *dev);
#line 189  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/interrupt.h"
#line 718  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_pci_func.i.aux"
static void *cif_free_irq(unsigned int ldv_func_arg1, void *ldv_func_arg2);
#line 352  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/interrupt.h"
#line 352 
int irq_set_affinity_hint(unsigned int, struct cpumask *);
#line 189  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/slab.h"
#line 189 
void kfree(void *);
#line 668 
#line 480  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_pci_func.i.aux"
static void *kzalloc(size_t size, gfp_t flags);
#line 1417  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
__inline static void *dev_get_drvdata(struct device *dev)
{
  #line 1419 
  return dev->driver_data;
}

#line 1422  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
__inline static void dev_set_drvdata(struct device *dev, void *data)
{
  #line 1424 
  dev->driver_data = data;
  #line 1425 
  return;
}

#line 460  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dma-mapping.h"
#line 460 
int dma_set_mask(struct device *, u64);
#line 461 
#line 461 
int dma_set_coherent_mask(struct device *, u64);
#line 2132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
__inline static struct netdev_queue *netdev_get_tx_queue(struct net_device *dev, unsigned int index)
{
  #line 2135 
  return dev->_tx + (unsigned long)index;
}

#line 2203  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
__inline static void *netdev_priv(struct net_device *dev)
{
  #line 2205 
  return (void *)((char *)dev + 3328UL);
}

#line 2679 
#line 726  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_pci_func.i.aux"
static void cif_free_netdev(struct net_device *dev);
#line 3104  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
__inline static void netif_tx_start_queue(struct netdev_queue *dev_queue)
{
  #line 3106 
  cif_clear_bit(0L,& dev_queue->state);
  #line 3107 
  return;
}

#line 3120  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
__inline static void netif_tx_start_all_queues(struct net_device *dev)
{
  #line 3122 
  unsigned int i;
  #line 3124 
  i = 0U;
  #line 3124 
  while (dev->num_tx_queues > i) {
    {
      #line 3125 
      struct netdev_queue *txq = netdev_get_tx_queue(dev,i);
      #line 3126 
      netif_tx_start_queue(txq);
    }
    #line 3124 
    i ++;
  }
  #line 3128 
  return;
}

#line 3171 
#line 3171 
void netif_tx_stop_all_queues(struct net_device *);
#line 3881 
#line 3881 
void netif_device_detach(struct net_device *);
#line 3883 
#line 3883 
void netif_device_attach(struct net_device *);
#line 4132 
#line 734  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_pci_func.i.aux"
static void cif_unregister_netdev(struct net_device *dev);
#line 1131  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pci.h"
#line 1131 
int pci_enable_device(struct pci_dev *);
#line 1157 
#line 1157 
void pci_disable_device(struct pci_dev *);
#line 1160 
#line 1160 
void pci_set_master(struct pci_dev *);
#line 1220 
#line 1220 
void pci_restore_state(struct pci_dev *);
#line 1233 
#line 1233 
int pci_set_power_state(struct pci_dev *, pci_power_t);
#line 1238 
#line 1238 
int pci_wake_from_d3(struct pci_dev *, bool);
#line 1281 
#line 1281 
int pci_request_regions(struct pci_dev *, char *);
#line 1283 
#line 1283 
void pci_release_regions(struct pci_dev *);
#line 1346 
#line 742  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_pci_func.i.aux"
static int cif___pci_register_driver(struct pci_driver *ldv_func_arg1, struct module *ldv_func_arg2, char *mod_name);
#line 1352  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pci.h"
#line 750  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_pci_func.i.aux"
static void cif_pci_unregister_driver(struct pci_driver *dev);
#line 1447  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pci.h"
#line 1447 
int pci_alloc_irq_vectors_affinity(struct pci_dev *, unsigned int, unsigned int, unsigned int, struct irq_affinity *);
#line 1451 
#line 1451 
void pci_free_irq_vectors(struct pci_dev *);
#line 1452 
#line 1452 
int pci_irq_vector(struct pci_dev *, unsigned int);
#line 1768  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pci.h"
__inline static int pci_alloc_irq_vectors(struct pci_dev *dev, unsigned int min_vecs, unsigned int max_vecs, unsigned int flags)
{
  #line 1771 
  return pci_alloc_irq_vectors_affinity(dev,min_vecs,max_vecs,flags,
                                     (struct irq_affinity *)0);
}

#line 1833  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pci.h"
__inline static void *pci_get_drvdata(struct pci_dev *pdev)
{
  #line 1835 
  return dev_get_drvdata(& pdev->dev);
}

#line 1838  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pci.h"
__inline static void pci_set_drvdata(struct pci_dev *pdev, void *data)
{
  #line 1840 
  dev_set_drvdata(& pdev->dev,data);
  #line 1841 
  return;
}

#line 113  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pci-dma-compat.h"
__inline static int pci_set_dma_mask(struct pci_dev *dev, u64 mask)
{
  #line 115 
  return dma_set_mask(& dev->dev,mask);
}

#line 118  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pci-dma-compat.h"
__inline static int pci_set_consistent_dma_mask(struct pci_dev *dev, u64 mask)
{
  #line 120 
  return dma_set_coherent_mask(& dev->dev,mask);
}

#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rtnetlink.h"
#line 33 
void rtnl_lock(void);
#line 34 
#line 34 
void rtnl_unlock(void);
#line 142  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_nic.h"
#line 142 
void aq_nic_ndev_init(struct aq_nic_s *self);
#line 147 
#line 147 
int aq_nic_init(struct aq_nic_s *self);
#line 148 
#line 148 
void aq_nic_cfg_start(struct aq_nic_s *self);
#line 149 
#line 149 
int aq_nic_ndev_register(struct aq_nic_s *self);
#line 151 
#line 151 
int aq_nic_start(struct aq_nic_s *self);
#line 158 
#line 158 
int aq_nic_stop(struct aq_nic_s *self);
#line 159 
#line 159 
void aq_nic_deinit(struct aq_nic_s *self, bool link_down);
#line 160 
#line 160 
void aq_nic_set_power(struct aq_nic_s *self);
#line 162 
#line 162 
void aq_nic_free_vectors(struct aq_nic_s *self);
#line 172 
#line 172 
struct aq_nic_cfg_s *aq_nic_get_cfg(struct aq_nic_s *self);
#line 176 
#line 176 
void aq_nic_shutdown(struct aq_nic_s *self);
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_main.h"
#line 16 
struct net_device *aq_ndev_alloc(void);
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_vec.h"
#line 25 
irqreturn_t aq_vec_isr_legacy(int irq, void *private);
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_pci_func.h"
#line 101  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_pci_func.c"
int aq_pci_func_init(struct pci_dev *pdev);
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_pci_func.h"
#line 133  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_pci_func.c"
int aq_pci_func_alloc_irq(struct aq_nic_s *self, unsigned int i, char *name, irqreturn_t (*irq_handler)(int , void *), void *irq_arg, cpumask_t *affinity_mask);
#line 26  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_pci_func.h"
#line 158  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_pci_func.c"
void aq_pci_func_free_irqs(struct aq_nic_s *self);
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_pci_func.h"
#line 182  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_pci_func.c"
unsigned int aq_pci_func_get_irq_type(struct aq_nic_s *self);
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_pci_func.h"
#line 446  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_pci_func.c"
int aq_pci_func_register_driver(void);
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_pci_func.h"
#line 451  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_pci_func.c"
void aq_pci_func_unregister_driver(void);
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_b0.h"
#line 57  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_b0.c"
struct aq_hw_caps_s hw_atl_b0_caps_aqc100;
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_b0.h"
#line 67  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_b0.c"
struct aq_hw_caps_s hw_atl_b0_caps_aqc107;
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_b0.h"
#line 77  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_b0.c"
struct aq_hw_caps_s hw_atl_b0_caps_aqc108;
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_b0.h"
#line 86  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_b0.c"
struct aq_hw_caps_s hw_atl_b0_caps_aqc109;
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_b0.h"
#line 1474  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_b0.c"
struct aq_hw_ops hw_atl_ops_b0;
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_filters.h"
#line 31 
int aq_clear_rxnfc_all_rules(struct aq_nic_s *aq_nic);
#line 13  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_drvinfo.h"
#line 13 
int aq_drvinfo_init(struct net_device *ndev);
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_pci_func.c"
static struct pci_device_id aq_pci_tbl[18U] = {{.vendor = 7530U, .device = 1U, .subvendor = 4294967295U, .subdevice = 4294967295U}, {.vendor = 7530U, .device = 53504U, .subvendor = 4294967295U, .subdevice = 4294967295U}, {.vendor = 7530U, .device = 53511U, .subvendor = 4294967295U, .subdevice = 4294967295U}, {.vendor = 7530U, .device = 53512U, .subvendor = 4294967295U, .subdevice = 4294967295U}, {.vendor = 7530U, .device = 53513U, .subvendor = 4294967295U, .subdevice = 4294967295U}, {.vendor = 7530U, .device = 177U, .subvendor = 4294967295U, .subdevice = 4294967295U}, {.vendor = 7530U, .device = 1969U, .subvendor = 4294967295U, .subdevice = 4294967295U}, {.vendor = 7530U, .device = 2225U, .subvendor = 4294967295U, .subdevice = 4294967295U}, {.vendor = 7530U, .device = 2481U, .subvendor = 4294967295U, .subdevice = 4294967295U}, {.vendor = 7530U, .device = 4529U, .subvendor = 4294967295U, .subdevice = 4294967295U}, {.vendor = 7530U, .device = 4785U, .subvendor = 4294967295U, .subdevice = 4294967295U}, {.vendor = 7530U, .device = 32945U, .subvendor = 4294967295U, .subdevice = 4294967295U}, {.vendor = 7530U, .device = 34737U, .subvendor = 4294967295U, .subdevice = 4294967295U}, {.vendor = 7530U, .device = 34993U, .subvendor = 4294967295U, .subdevice = 4294967295U}, {.vendor = 7530U, .device = 35249U, .subvendor = 4294967295U, .subdevice = 4294967295U}, {.vendor = 7530U, .device = 37297U, .subvendor = 4294967295U, .subdevice = 4294967295U}, {.vendor = 7530U, .device = 37553U, .subvendor = 4294967295U, .subdevice = 4294967295U}};
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_pci_func.c"
static struct aq_board_revision_s hw_atl_boards[22U] = {{.devid = (unsigned short)1U, .revision = (unsigned short)1U, .ops = & hw_atl_ops_a0, .caps = & hw_atl_a0_caps_aqc107}, {.devid = (unsigned short)53504U, .revision = (unsigned short)1U, .ops = & hw_atl_ops_a0, .caps = & hw_atl_a0_caps_aqc100}, {.devid = (unsigned short)53511U, .revision = (unsigned short)1U, .ops = & hw_atl_ops_a0, .caps = & hw_atl_a0_caps_aqc107}, {.devid = (unsigned short)53512U, .revision = (unsigned short)1U, .ops = & hw_atl_ops_a0, .caps = & hw_atl_a0_caps_aqc108}, {.devid = (unsigned short)53513U, .revision = (unsigned short)1U, .ops = & hw_atl_ops_a0, .caps = & hw_atl_a0_caps_aqc109}, {.devid = (unsigned short)1U, .revision = (unsigned short)2U, .ops = & hw_atl_ops_b0, .caps = & hw_atl_b0_caps_aqc107}, {.devid = (unsigned short)53504U, .revision = (unsigned short)2U, .ops = & hw_atl_ops_b0, .caps = & hw_atl_b0_caps_aqc100}, {.devid = (unsigned short)53511U, .revision = (unsigned short)2U, .ops = & hw_atl_ops_b0, .caps = & hw_atl_b0_caps_aqc107}, {.devid = (unsigned short)53512U, .revision = (unsigned short)2U, .ops = & hw_atl_ops_b0, .caps = & hw_atl_b0_caps_aqc108}, {.devid = (unsigned short)53513U, .revision = (unsigned short)2U, .ops = & hw_atl_ops_b0, .caps = & hw_atl_b0_caps_aqc109}, {.devid = (unsigned short)177U, .ops = & hw_atl_ops_b0, .caps = & hw_atl_b0_caps_aqc107}, {.devid = (unsigned short)1969U, .ops = & hw_atl_ops_b0, .caps = & hw_atl_b0_caps_aqc107}, {.devid = (unsigned short)2225U, .ops = & hw_atl_ops_b0, .caps = & hw_atl_b0_caps_aqc108}, {.devid = (unsigned short)2481U, .ops = & hw_atl_ops_b0, .caps = & hw_atl_b0_caps_aqc109}, {.devid = (unsigned short)4529U, .ops = & hw_atl_ops_b0, .caps = & hw_atl_b0_caps_aqc108}, {.devid = (unsigned short)4785U, .ops = & hw_atl_ops_b0, .caps = & hw_atl_b0_caps_aqc109}, {.devid = (unsigned short)32945U, .ops = & hw_atl_ops_b0, .caps = & hw_atl_b0_caps_aqc100}, {.devid = (unsigned short)34737U, .ops = & hw_atl_ops_b0, .caps = & hw_atl_b0_caps_aqc107}, {.devid = (unsigned short)34993U, .ops = & hw_atl_ops_b0, .caps = & hw_atl_b0_caps_aqc108}, {.devid = (unsigned short)35249U, .ops = & hw_atl_ops_b0, .caps = & hw_atl_b0_caps_aqc109}, {.devid = (unsigned short)37297U, .ops = & hw_atl_ops_b0, .caps = & hw_atl_b0_caps_aqc108}, {.devid = (unsigned short)37553U, .ops = & hw_atl_ops_b0, .caps = & hw_atl_b0_caps_aqc109}};
#line 74  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_pci_func.c"
struct pci_device_id __mod_pci__aq_pci_tbl_device_table[18U];
#line 76  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_pci_func.c"
static int aq_pci_probe_get_hw_by_id(struct pci_dev *pdev, struct aq_hw_ops **ops, struct aq_hw_caps_s **caps)
{
  #line 80 
  int i;
  #line 82 
  if ((unsigned int)pdev->vendor != 7530U) 
                                           #line 83 
                                           return -22;
  #line 85 
  i = 0;
  #line 85 
  while ((unsigned int)i <= 21U) {
    #line 86 
    if ((int)hw_atl_boards[i].devid == (int)pdev->device && ((unsigned int)hw_atl_boards[i].revision == 0U || (int)hw_atl_boards[i].revision == (int)((unsigned short)pdev->revision))) {
      #line 89 
      *ops = hw_atl_boards[i].ops;
      #line 90 
      *caps = hw_atl_boards[i].caps;
      #line 91 
      break;
    }
    #line 85 
    i ++;
  }
  #line 95 
  if (i == 22) 
               #line 96 
               return -22;
  #line 98 
  return 0;
}

#line 101  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_pci_func.c"
int aq_pci_func_init(struct pci_dev *pdev)
{
  #line 103 
  int err;
  #line 105 
  err = pci_set_dma_mask(pdev,18446744073709551615ULL);
  #line 106 
  if (err == 0) 
                #line 107 
                err = pci_set_consistent_dma_mask(pdev,18446744073709551615ULL);
  #line 110 
  if (err != 0) {
    #line 111 
    err = pci_set_dma_mask(pdev,4294967295ULL);
    #line 112 
    if (err == 0) 
                  #line 113 
                  err = pci_set_consistent_dma_mask(pdev,4294967295ULL);
  }
  #line 116 
  if (err != 0) {
    #line 117 
    err = -63;
    #line 118 
    goto err_exit;
  }
  #line 121 
  err = pci_request_regions(pdev,(char *)"atlantic");
  #line 122 
  if (err < 0) 
               #line 123 
               goto err_exit;
  #line 125 
  pci_set_master(pdev);
  #line 127 
  return 0;
  #line 129 
  err_exit: 
            #line 129 
  ;
  #line 130 
  return err;
}

#line 133  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_pci_func.c"
int aq_pci_func_alloc_irq(struct aq_nic_s *self, unsigned int i, char *name, irqreturn_t (*irq_handler)(int , void *), void *irq_arg, cpumask_t *affinity_mask)
{
  #line 138 
  int err;
  #line 137 
  struct pci_dev *pdev = self->pdev;
  #line 140 
  if ((unsigned int)pdev->msix_enabled != 0U || (unsigned int)pdev->msi_enabled != 0U) {
    #line 141 
    ;
    #line 141 
    ;
    #line 141 
    ;
    #line 141 
    err = cif_request_irq((unsigned int)pci_irq_vector(pdev,i),irq_handler,0UL,name,irq_arg);
  }
  else {
    #line 144 
    ;
    #line 144 
    ;
    #line 144 
    err = cif_request_irq((unsigned int)pci_irq_vector(pdev,i),& aq_vec_isr_legacy,128UL,name,irq_arg);
  }
  #line 147 
  if (err >= 0) {
    #line 148 
    self->msix_entry_mask |= (unsigned int)(1 << i);
    #line 150 
    if ((unsigned int)pdev->msix_enabled != 0U && affinity_mask != (cpumask_t *)0) {
      #line 151 
      ;
      #line 151 
      irq_set_affinity_hint((unsigned int)pci_irq_vector(pdev,i),affinity_mask);
    }
  }
  #line 155 
  return err;
}

#line 158  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_pci_func.c"
void aq_pci_func_free_irqs(struct aq_nic_s *self)
{
  #line 161 
  unsigned int i;
  #line 162 
  void *irq_data;
  #line 160 
  struct pci_dev *pdev = self->pdev;
  #line 164 
  i = 32U;
  #line 164 
  while (1) {
    #line 164 
    unsigned int tmp_1;
    #line 164 
    tmp_1 = i;
    #line 164 
    i --;
    #line 164 
    ;
    #line 164 
    if (! (tmp_1 != 0U)) 
                         #line 164 
                         break;
    {
      #line 165 
      if (((self->msix_entry_mask >> i) & 1U) == 0U) 
                                                     #line 166 
                                                     goto __Cont;
      #line 167 
      if (self->aq_nic_cfg.link_irq_vec != 0U && self->aq_nic_cfg.link_irq_vec == i) 
        #line 169 
        irq_data = (void *)self;
      else 
        #line 170 
        if (i <= 7U) 
                     #line 171 
                     irq_data = (void *)self->aq_vec[i]; else 
                                                              #line 173 
                                                              goto __Cont;
      #line 175 
      if ((unsigned int)pdev->msix_enabled != 0U) {
        #line 176 
        irq_set_affinity_hint((unsigned int)pci_irq_vector(pdev,i),(struct cpumask *)0);
      }
      #line 177 
      ;
      #line 177 
      cif_free_irq((unsigned int)pci_irq_vector(pdev,i),irq_data);
      #line 178 
      self->msix_entry_mask &= ~ (1U << i);
    }
    #line 164 
    __Cont: 
            #line 164 
    ;
  }
  #line 180 
  return;
}

#line 182  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_pci_func.c"
unsigned int aq_pci_func_get_irq_type(struct aq_nic_s *self)
{
  #line 184 
  if ((unsigned int)(self->pdev)->msix_enabled != 0U) 
                                                      #line 185 
                                                      return 3U;
  #line 186 
  if ((unsigned int)(self->pdev)->msi_enabled != 0U) 
                                                     #line 187 
                                                     return 2U;
  #line 189 
  return 1U;
}

#line 192  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_pci_func.c"
static void aq_pci_free_irq_vectors(struct aq_nic_s *self)
{
  #line 194 
  pci_free_irq_vectors(self->pdev);
  #line 195 
  return;
}

#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_pci_func.c"
static int aq_pci_probe(struct pci_dev *pdev, struct pci_device_id *pci_id)
{
  #line 272 
  u32 __UNIQUE_ID___x443;
  #line 272 
  u32 tmp_6;
  #line 270 
  unsigned char __UNIQUE_ID___x441;
  #line 270 
  int tmp_3;
  #line 200 
  struct net_device *ndev;
  #line 201 
  resource_size_t mmio_pa;
  #line 202 
  struct aq_nic_s *self;
  #line 203 
  u32 numvecs;
  #line 204 
  u32 bar;
  #line 205 
  int err;
  #line 207 
  err = pci_enable_device(pdev);
  #line 208 
  if (err != 0) 
                #line 209 
                return err;
  #line 211 
  err = aq_pci_func_init(pdev);
  #line 212 
  if (err != 0) 
                #line 213 
                goto err_pci_func;
  #line 215 
  ndev = aq_ndev_alloc();
  #line 216 
  if (ndev == (struct net_device *)0) {
    #line 217 
    err = -12;
    #line 218 
    goto err_ndev;
  }
  #line 221 
  self = (struct aq_nic_s *)netdev_priv(ndev);
  #line 222 
  self->pdev = pdev;
  #line 223 
  ndev->dev.parent = & pdev->dev;
  #line 224 
  pci_set_drvdata(pdev,(void *)self);
  {
    #line 226 
    struct lock_class_key __key;
    #line 226 
    __mutex_init(& self->fwreq_mutex,(char *)"&self->fwreq_mutex",& __key);
  }
  #line 228 
  ;
  #line 228 
  ;
  #line 228 
  err = aq_pci_probe_get_hw_by_id(pdev,& self->aq_hw_ops,& aq_nic_get_cfg(self)->aq_hw_caps);
  #line 230 
  if (err != 0) 
                #line 231 
                goto err_ioremap;
  #line 233 
  self->aq_hw = (struct aq_hw_s *)kzalloc(776UL,3264U);
  #line 234 
  if (self->aq_hw == (struct aq_hw_s *)0) {
    #line 235 
    err = -12;
    #line 236 
    goto err_ioremap;
  }
  #line 238 
  (self->aq_hw)->aq_nic_cfg = aq_nic_get_cfg(self);
  #line 240 
  bar = 0U;
  #line 240 
  while (bar <= 3U) {
    #line 241 
    if ((pdev->resource[bar].flags & 512UL) != 0UL) {
      #line 242 
      resource_size_t reg_sz;
      #line 244 
      mmio_pa = pdev->resource[bar].start;
      #line 245 
      if (mmio_pa == 0ULL) {
        #line 246 
        err = -5;
        #line 247 
        goto err_free_aq_hw;
      }
      #line 250 
      if (pdev->resource[bar].start != 0ULL || pdev->resource[bar].end != pdev->resource[bar].start) 
        #line 250 
        reg_sz = (pdev->resource[bar].end - pdev->resource[bar].start) + 1ULL; else 
                                                                    #line 250 
                                                                    reg_sz = 0ULL;
      #line 251 
      if (reg_sz <= 24ULL) {
        #line 252 
        err = -5;
        #line 253 
        goto err_free_aq_hw;
      }
      #line 256 
      (self->aq_hw)->mmio = ioremap(mmio_pa,(unsigned long)reg_sz);
      #line 257 
      if ((self->aq_hw)->mmio == (void *)0) {
        #line 258 
        err = -5;
        #line 259 
        goto err_free_aq_hw;
      }
      #line 261 
      break;
    }
    #line 240 
    bar ++;
  }
  #line 265 
  if (bar == 4U) {
    #line 266 
    err = -5;
    #line 267 
    goto err_free_aq_hw;
  }
  {
    #line 270 
    __UNIQUE_ID___x441 = (unsigned char)8U;
    #line 270 
    u8 __UNIQUE_ID___y442 = (aq_nic_get_cfg(self)->aq_hw_caps)->msix_irqs;
    #line 270 
    if ((int)__UNIQUE_ID___x441 < (int)__UNIQUE_ID___y442) 
                                                           #line 270 
                                                           tmp_3 = (int)__UNIQUE_ID___x441; else 
                                                                    #line 270 
                                                                    tmp_3 = (int)__UNIQUE_ID___y442;
    }
  #line 270 
  numvecs = (unsigned int)tmp_3;
  {
    #line 272 
    __UNIQUE_ID___x443 = numvecs;
    #line 272 
    unsigned int __UNIQUE_ID___y444 = num_online_cpus();
    #line 272 
    if (__UNIQUE_ID___x443 < __UNIQUE_ID___y444) 
                                                 #line 272 
                                                 tmp_6 = __UNIQUE_ID___x443; else 
                                                                    #line 272 
                                                                    tmp_6 = __UNIQUE_ID___y444;
    }
  #line 272 
  numvecs = tmp_6;
  #line 274 
  numvecs ++;
  #line 276 
  numvecs ++;
  #line 279 
  err = pci_alloc_irq_vectors(self->pdev,1U,numvecs,7U);
  #line 283 
  if (err < 0) 
               #line 284 
               goto err_hwinit;
  #line 285 
  numvecs = (unsigned int)err;
  #line 287 
  self->irqvecs = numvecs;
  #line 290 
  aq_nic_cfg_start(self);
  #line 292 
  aq_nic_ndev_init(self);
  #line 294 
  err = aq_nic_ndev_register(self);
  #line 295 
  if (err < 0) 
               #line 296 
               goto err_register;
  #line 298 
  aq_drvinfo_init(ndev);
  #line 300 
  return 0;
  #line 302 
  err_register: 
                #line 302 
  ;
  #line 303 
  aq_nic_free_vectors(self);
  #line 304 
  aq_pci_free_irq_vectors(self);
  #line 305 
  err_hwinit: 
              #line 305 
  ;
  #line 306 
  iounmap((self->aq_hw)->mmio);
  #line 307 
  err_free_aq_hw: 
                  #line 307 
  ;
  #line 308 
  kfree((void *)self->aq_hw);
  #line 309 
  err_ioremap: 
               #line 309 
  ;
  #line 310 
  cif_free_netdev(ndev);
  #line 311 
  err_ndev: 
            #line 311 
  ;
  #line 312 
  pci_release_regions(pdev);
  #line 313 
  err_pci_func: 
                #line 313 
  ;
  #line 314 
  pci_disable_device(pdev);
  #line 316 
  return err;
}

#line 319  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_pci_func.c"
static void aq_pci_remove(struct pci_dev *pdev)
{
  #line 321 
  struct aq_nic_s *self = pci_get_drvdata(pdev);
  #line 323 
  if (self->ndev != (struct net_device *)0) {
    #line 324 
    aq_clear_rxnfc_all_rules(self);
    #line 325 
    if ((unsigned int)(self->ndev)->reg_state == 1U) 
                                                     #line 326 
                                                     cif_unregister_netdev(self->ndev);
    #line 327 
    aq_nic_free_vectors(self);
    #line 328 
    aq_pci_free_irq_vectors(self);
    #line 329 
    iounmap((self->aq_hw)->mmio);
    #line 330 
    kfree((void *)self->aq_hw);
    #line 331 
    pci_release_regions(pdev);
    #line 332 
    cif_free_netdev(self->ndev);
  }
  #line 335 
  pci_disable_device(pdev);
  #line 336 
  return;
}

#line 338  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_pci_func.c"
static void aq_pci_shutdown(struct pci_dev *pdev)
{
  #line 340 
  struct aq_nic_s *self = pci_get_drvdata(pdev);
  #line 342 
  aq_nic_shutdown(self);
  #line 344 
  pci_disable_device(pdev);
  #line 346 
  if (system_state == (unsigned int)SYSTEM_POWER_OFF) {
    #line 347 
    pci_wake_from_d3(pdev,(_Bool)0);
    #line 348 
    pci_set_power_state(pdev,3);
  }
  #line 350 
  return;
}

#line 352  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_pci_func.c"
static int aq_suspend_common(struct device *dev, bool deep)
{
  #line 354 
  void *__mptr;
  #line 354 
  __mptr = (void *)dev;
  #line 354 
  struct aq_nic_s *nic = (struct aq_nic_s *)pci_get_drvdata(((struct pci_dev *)(__mptr + 18446744073709551440U)));
  #line 356 
  rtnl_lock();
  #line 358 
  nic->power_state = 3U;
  #line 359 
  netif_device_detach(nic->ndev);
  #line 360 
  netif_tx_stop_all_queues(nic->ndev);
  #line 362 
  aq_nic_stop(nic);
  #line 364 
  if ((int)deep != 0) {
    #line 365 
    aq_nic_deinit(nic,(_Bool)(((nic->aq_hw)->aq_nic_cfg)->wol == 0U));
    #line 366 
    aq_nic_set_power(nic);
  }
  #line 369 
  rtnl_unlock();
  #line 371 
  return 0;
}

#line 374  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_pci_func.c"
static int atl_resume_common(struct device *dev, bool deep)
{
  #line 376 
  void *__mptr;
  #line 377 
  struct aq_nic_s *nic;
  #line 378 
  int ret;
  #line 376 
  __mptr = (void *)dev;
  #line 376 
  struct pci_dev *pdev = ((struct pci_dev *)(__mptr + 18446744073709551440U));
  #line 380 
  nic = (struct aq_nic_s *)pci_get_drvdata(pdev);
  #line 382 
  rtnl_lock();
  #line 384 
  pci_set_power_state(pdev,0);
  #line 385 
  pci_restore_state(pdev);
  #line 387 
  if ((int)deep != 0) {
    #line 388 
    ret = aq_nic_init(nic);
    #line 389 
    if (ret != 0) 
                  #line 390 
                  goto err_exit;
  }
  #line 393 
  ret = aq_nic_start(nic);
  #line 394 
  if (ret != 0) 
                #line 395 
                goto err_exit;
  #line 397 
  netif_device_attach(nic->ndev);
  #line 398 
  netif_tx_start_all_queues(nic->ndev);
  #line 400 
  err_exit: 
            #line 400 
  ;
  #line 401 
  rtnl_unlock();
  #line 403 
  return ret;
}

#line 406  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_pci_func.c"
static int aq_pm_freeze(struct device *dev)
{
  #line 408 
  return aq_suspend_common(dev,(_Bool)0);
}

#line 411  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_pci_func.c"
static int aq_pm_suspend_poweroff(struct device *dev)
{
  #line 413 
  return aq_suspend_common(dev,(_Bool)1);
}

#line 416  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_pci_func.c"
static int aq_pm_thaw(struct device *dev)
{
  #line 418 
  return atl_resume_common(dev,(_Bool)0);
}

#line 421  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_pci_func.c"
static int aq_pm_resume_restore(struct device *dev)
{
  #line 423 
  return atl_resume_common(dev,(_Bool)1);
}

#line 426  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_pci_func.c"
static struct dev_pm_ops aq_pm_ops = {.suspend = & aq_pm_suspend_poweroff, .resume = & aq_pm_resume_restore, .freeze = & aq_pm_freeze, .thaw = & aq_pm_thaw, .poweroff = & aq_pm_suspend_poweroff, .restore = & aq_pm_resume_restore};
#line 435  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_pci_func.c"
static struct pci_driver aq_pci_ops = {.name = (char *)"atlantic", .id_table = (struct pci_device_id *)(& aq_pci_tbl), .probe = & aq_pci_probe, .remove = & aq_pci_remove, .shutdown = & aq_pci_shutdown, .driver = {.pm = & aq_pm_ops}};
#line 446  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_pci_func.c"
int aq_pci_func_register_driver(void)
{
  #line 448 
  return cif___pci_register_driver(& aq_pci_ops,& __this_module,
                                (char *)"atlantic");
}

#line 451  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_pci_func.c"
void aq_pci_func_unregister_driver(void)
{
  #line 453 
  cif_pci_unregister_driver(& aq_pci_ops);
  #line 454 
  return;
}

#line 93  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_pci_func.i.aux"
struct pci_driver *emg_alias_aq_pci_ops = & aq_pci_ops;
#line 94  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_pci_func.i.aux"
struct pci_device_id (*emg_alias_aq_pci_tbl)[18U] = & aq_pci_tbl;
#line 95  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_pci_func.i.aux"
struct dev_pm_ops *emg_alias_aq_pm_ops = & aq_pm_ops;
#line 98 
#line 98 
int emg___pci_register_driver(struct pci_driver *arg0, struct module *arg1, char *arg2);
#line 101 
#line 101 
void *emg_free_irq(unsigned int arg0, void *arg1);
#line 102 
#line 102 
void emg_free_netdev(struct net_device *arg0);
#line 104 
#line 104 
void emg_pci_unregister_driver(struct pci_driver *arg0);
#line 107 
#line 107 
int emg_request_irq(unsigned int arg0, enum irqreturn (*arg1)(int , void *), unsigned long arg2, char *arg3, void *arg4);
#line 110 
#line 110 
void emg_unregister_netdev(struct net_device *arg0);
#line 114  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_pci_func.i.aux"
int emg_wrapper_aq_pci_probe(struct pci_dev *arg0, struct pci_device_id *arg1)
{
  #line 115 
  return aq_pci_probe(arg0,arg1);
}

#line 119  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_pci_func.i.aux"
void emg_wrapper_aq_pci_remove(struct pci_dev *arg0)
{
  #line 120 
  aq_pci_remove(arg0);
  #line 121 
  return;
}

#line 124  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_pci_func.i.aux"
void emg_wrapper_aq_pci_shutdown(struct pci_dev *arg0)
{
  #line 125 
  aq_pci_shutdown(arg0);
  #line 126 
  return;
}

#line 129  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_pci_func.i.aux"
int emg_wrapper_aq_pm_freeze(struct device *arg0)
{
  #line 130 
  return aq_pm_freeze(arg0);
}

#line 134  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_pci_func.i.aux"
int emg_wrapper_aq_pm_resume_restore(struct device *arg0)
{
  #line 135 
  return aq_pm_resume_restore(arg0);
}

#line 139  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_pci_func.i.aux"
int emg_wrapper_aq_pm_suspend_poweroff(struct device *arg0)
{
  #line 140 
  return aq_pm_suspend_poweroff(arg0);
}

#line 144  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_pci_func.i.aux"
int emg_wrapper_aq_pm_thaw(struct device *arg0)
{
  #line 145 
  return aq_pm_thaw(arg0);
}

#line 171  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_pci_func.i.aux"
static void cif_clear_bit(long nr, unsigned long *addr)
{
  #line 174 
  ldv_clear_bit(nr,addr);
  #line 175 
  return;
}

#line 480  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_pci_func.i.aux"
static void *kzalloc(size_t size, gfp_t flags)
{
  #line 483 
  return ldv_kzalloc(size,flags);
}

#line 710  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_pci_func.i.aux"
static int cif_request_irq(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char *name, void *dev)
{
  #line 714 
  return emg_request_irq(irq,handler,flags,name,dev);
}

#line 718  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_pci_func.i.aux"
static void *cif_free_irq(unsigned int ldv_func_arg1, void *ldv_func_arg2)
{
  #line 722 
  return emg_free_irq(ldv_func_arg1,ldv_func_arg2);
}

#line 726  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_pci_func.i.aux"
static void cif_free_netdev(struct net_device *dev)
{
  #line 730 
  emg_free_netdev(dev);
  #line 731 
  return;
}

#line 734  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_pci_func.i.aux"
static void cif_unregister_netdev(struct net_device *dev)
{
  #line 738 
  emg_unregister_netdev(dev);
  #line 739 
  return;
}

#line 742  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_pci_func.i.aux"
static int cif___pci_register_driver(struct pci_driver *ldv_func_arg1, struct module *ldv_func_arg2, char *mod_name)
{
  #line 746 
  return emg___pci_register_driver(ldv_func_arg1,ldv_func_arg2,mod_name);
}

#line 750  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_pci_func.i.aux"
static void cif_pci_unregister_driver(struct pci_driver *dev)
{
  #line 754 
  emg_pci_unregister_driver(dev);
  #line 755 
  return;
}

/* compiler builtin: 
   void __builtin_unreachable(void);   */
#line 204  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/bitops.h"
__inline static bool constant_test_bit(long nr, unsigned long *addr)
{
  #line 207 
  return (_Bool)(((*(addr + (unsigned long)(nr >> 6)) >> (nr & 63L)) & 1UL) != 0UL);
}

#line 210  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/bitops.h"
__inline static bool variable_test_bit(long nr, unsigned long *addr)
{
  #line 212 
  bool oldbit;
  #line 213 
  ldv_inline_asm();
  #line 219 
  return oldbit;
}

#line 324  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/bitops.h"
__inline static int fls(unsigned int x)
{
  #line 326 
  int r;
  #line 327 
  ldv_inline_asm();
  #line 351 
  return r + 1;
}

#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/bitops/instrumented-atomic.h"
#line 122  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_ring.i.aux"
static void cif_set_bit(long nr, unsigned long *addr);
#line 108  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/bitops/instrumented-non-atomic.h"
__inline static bool test_bit(long nr, unsigned long *addr)
{
  #line 111 
  int tmp_1;
  #line 110 
  kasan_check_read((void *)(addr + (unsigned long)(nr / 64L)),8U);
  #line 111 
  if (0 != 0) {
    #line 111 
    tmp_1 = (int)constant_test_bit(nr,addr) != 0;
  }
  else {
    #line 111 
    tmp_1 = (int)variable_test_bit(nr,addr) != 0;
  }
  #line 111 
  return (_Bool)(tmp_1 != 0);
}

#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/jump_label.h"
__inline static bool arch_static_branch(struct static_key *key, bool branch)
{
  #line 27 
  ldv_inline_asm();
  #line 28 
  ldv_inline_asm();
  #line 34 
  return (_Bool)0;
  #line 35 
  l_yes: 
         #line 35 
  ;
  #line 36 
  return (_Bool)1;
}

#line 198  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jump_label.h"
__inline static bool static_key_false(struct static_key *key)
{
  #line 200 
  return arch_static_branch(key,(_Bool)0);
}

#line 88  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/percpu.h"
#line 88 
void __bad_percpu_size(void);
#line 309  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/percpu-defs.h"
#line 309 
void __bad_size_call_parameter(void);
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/page_64.h"
#line 14 
extern unsigned long page_offset_base;
#line 16 
#line 16 
extern unsigned long vmemmap_base;
#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/cmpxchg_64.h"
__inline static int arch_atomic_read_1(atomic_t *v)
{
  #line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/atomic.h"
  union __anonunion___u_2199 __u;
  #line 31 
  __read_once_size((void *)(& v->counter),(void *)(& __u.__c),4);
  #line 31 
  return (__u.__val);
}

#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/atomic-instrumented.h"
__inline static int atomic_read_1(atomic_t *v)
{
  #line 26 
  kasan_check_read((void *)v,4U);
  #line 27 
  return arch_atomic_read_1(v);
}

#line 237 
#line 185  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_ring.i.aux"
static void atomic_inc_0(atomic_t *v);
#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/bitmap.h"
#line 21 
void ldv_set_bit(long nr, unsigned long *addr);
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 25 
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags);
#line 410  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/nodemask.h"
#line 410 
extern nodemask_t node_states[5U];
#line 413  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/nodemask.h"
__inline static int node_state(int node, enum node_states state)
{
  #line 415 
  return (int)test_bit((long)node,
               (unsigned long *)(& node_states[(unsigned int)state].bits));
}

#line 86  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/topology.h"
__inline static int numa_node_id(void)
{
  #line 88 
  int pscr_ret__;
  {
    #line 88 
    void *__vpp_verify = (void *)0;
    #line 88 
    void *tmp = __vpp_verify;
  }
  #line 88 
  switch (4UL) {
    #line 88 
    int pfo_ret___1;
    #line 88 
    int pfo_ret___2;
    #line 88 
    int pfo_ret__;
    #line 88 
    int pfo_ret___0;
    #line 88 
    case (unsigned long)1: 
                           #line 88 
    ;
    #line 88 
    switch (4UL) {
      #line 88 
      case (unsigned long)1: 
                             #line 88 
      ;
      #line 89 
      ldv_inline_asm();
      #line 88 
      break;
      #line 88 
      case (unsigned long)2: 
                             #line 88 
      ;
      #line 89 
      ldv_inline_asm();
      #line 88 
      break;
      #line 88 
      case (unsigned long)4: 
                             #line 88 
      ;
      #line 89 
      ldv_inline_asm();
      #line 88 
      break;
      #line 88 
      case (unsigned long)8: 
                             #line 88 
      ;
      #line 89 
      ldv_inline_asm();
      #line 88 
      break;
      #line 88 
      default: 
               #line 88 
      ;
      #line 88 
      __bad_percpu_size();
    }
    #line 88 
    pscr_ret__ = pfo_ret__;
    #line 88 
    break;
    #line 88 
    case (unsigned long)2: 
                           #line 88 
    ;
    #line 88 
    switch (4UL) {
      #line 88 
      case (unsigned long)1: 
                             #line 88 
      ;
      #line 89 
      ldv_inline_asm();
      #line 88 
      break;
      #line 88 
      case (unsigned long)2: 
                             #line 88 
      ;
      #line 89 
      ldv_inline_asm();
      #line 88 
      break;
      #line 88 
      case (unsigned long)4: 
                             #line 88 
      ;
      #line 89 
      ldv_inline_asm();
      #line 88 
      break;
      #line 88 
      case (unsigned long)8: 
                             #line 88 
      ;
      #line 89 
      ldv_inline_asm();
      #line 88 
      break;
      #line 88 
      default: 
               #line 88 
      ;
      #line 88 
      __bad_percpu_size();
    }
    #line 88 
    pscr_ret__ = pfo_ret___0;
    #line 88 
    break;
    #line 88 
    case (unsigned long)4: 
                           #line 88 
    ;
    #line 88 
    switch (4UL) {
      #line 88 
      case (unsigned long)1: 
                             #line 88 
      ;
      #line 89 
      ldv_inline_asm();
      #line 88 
      break;
      #line 88 
      case (unsigned long)2: 
                             #line 88 
      ;
      #line 89 
      ldv_inline_asm();
      #line 88 
      break;
      #line 88 
      case (unsigned long)4: 
                             #line 88 
      ;
      #line 89 
      ldv_inline_asm();
      #line 88 
      break;
      #line 88 
      case (unsigned long)8: 
                             #line 88 
      ;
      #line 89 
      ldv_inline_asm();
      #line 88 
      break;
      #line 88 
      default: 
               #line 88 
      ;
      #line 88 
      __bad_percpu_size();
    }
    #line 88 
    pscr_ret__ = pfo_ret___1;
    #line 88 
    break;
    #line 88 
    case (unsigned long)8: 
                           #line 88 
    ;
    #line 88 
    switch (4UL) {
      #line 88 
      case (unsigned long)1: 
                             #line 88 
      ;
      #line 89 
      ldv_inline_asm();
      #line 88 
      break;
      #line 88 
      case (unsigned long)2: 
                             #line 88 
      ;
      #line 89 
      ldv_inline_asm();
      #line 88 
      break;
      #line 88 
      case (unsigned long)4: 
                             #line 88 
      ;
      #line 89 
      ldv_inline_asm();
      #line 88 
      break;
      #line 88 
      case (unsigned long)8: 
                             #line 88 
      ;
      #line 89 
      ldv_inline_asm();
      #line 88 
      break;
      #line 88 
      default: 
               #line 88 
      ;
      #line 88 
      __bad_percpu_size();
    }
    #line 88 
    pscr_ret__ = pfo_ret___2;
    #line 88 
    break;
    #line 88 
    default: 
             #line 88 
    ;
    #line 88 
    __bad_size_call_parameter();
    #line 88 
    break;
  }
  #line 88 
  return pscr_ret__;
}

#line 177  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/topology.h"
__inline static int numa_mem_id(void)
{
  #line 179 
  return numa_node_id();
}

#line 490  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/gfp.h"
#line 490 
struct page *__alloc_pages_nodemask(gfp_t, unsigned int, int, nodemask_t *);
#line 494  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/gfp.h"
__inline static struct page *__alloc_pages(gfp_t gfp_mask, unsigned int order, int preferred_nid)
{
  #line 496 
  return __alloc_pages_nodemask(gfp_mask,order,preferred_nid,(nodemask_t *)0);
}

#line 504  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/gfp.h"
__inline static struct page *__alloc_pages_node(int nid, gfp_t gfp_mask, unsigned int order)
{
  #line 506 
  if ((long)((unsigned int)nid > 1023U) != 0L) {
    #line 507 
    ldv_inline_asm();
    #line 508 
    ldv_inline_asm();
    #line 509 
    ldv_inline_asm();
    #line 506 
    ;
  }
  {
    #line 507 
    int tmp_0;
    #line 507 
    if ((gfp_mask & 2097152U) != 0U) {
      #line 507 
      if (node_state(nid,(enum node_states)N_ONLINE) == 0) 
                                                           #line 507 
                                                           tmp_0 = 1; else 
                                                                    #line 507 
                                                                    tmp_0 = 0;
    }
    else 
         #line 507 
         tmp_0 = 0;
    #line 507 
    int __ret_warn_on = tmp_0;
    #line 507 
    if ((long)(__ret_warn_on != 0) != 0L) {
      #line 508 
      ldv_inline_asm();
      #line 509 
      ldv_inline_asm();
    }
    #line 507 
    long tmp_2 = (long)(__ret_warn_on != 0);
  }
  #line 509 
  return __alloc_pages(gfp_mask,order,nid);
}

#line 517  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/gfp.h"
__inline static struct page *alloc_pages_node(int nid, gfp_t gfp_mask, unsigned int order)
{
  #line 520 
  if (nid == -1) 
                 #line 521 
                 nid = numa_mem_id();
  #line 523 
  return __alloc_pages_node(nid,gfp_mask,order);
}

#line 566 
#line 566 
void __free_pages(struct page *, unsigned int);
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/page_ref.h"
#line 11 
extern struct tracepoint __tracepoint_page_ref_mod;
#line 30 
#line 30 
void __page_ref_mod(struct page *, int);
#line 65  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/page_ref.h"
__inline static int page_ref_count(struct page *page)
{
  #line 67 
  return atomic_read_1(& page->_refcount);
}

#line 105  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/page_ref.h"
__inline static void page_ref_inc(struct page *page)
{
  #line 107 
  atomic_inc_0(& page->_refcount);
  #line 108 
  if ((int)static_key_false(& __tracepoint_page_ref_mod.key) != 0) 
                                                                   #line 109 
                                                                   __page_ref_mod(page,1);
  #line 110 
  return;
}

#line 607  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/slab.h"
#line 409  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_ring.i.aux"
static void *kcalloc(size_t n, size_t size, gfp_t flags);
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dma-debug.h"
#line 24 
void debug_dma_map_page(struct device *, struct page *, size_t, size_t, int, dma_addr_t);
#line 28 
#line 28 
void debug_dma_mapping_error(struct device *, dma_addr_t);
#line 30 
#line 30 
void debug_dma_unmap_page(struct device *, dma_addr_t, size_t, int);
#line 52 
#line 52 
void debug_dma_sync_single_for_cpu(struct device *, dma_addr_t, size_t, int);
#line 143  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dma-mapping.h"
__inline static int valid_dma_direction(int dma_direction)
{
  #line 146 
  return (unsigned int)dma_direction <= 2U;
}

#line 191  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dma-mapping.h"
__inline static bool dma_is_direct(struct dma_map_ops *ops)
{
  #line 193 
  return (_Bool)((long)(ops == (struct dma_map_ops *)0) != 0L);
}

#line 200 
#line 200 
dma_addr_t dma_direct_map_page(struct device *, struct page *, unsigned long, size_t, enum dma_data_direction, unsigned long);
#line 228 
#line 228 
void dma_direct_unmap_page(struct device *, dma_addr_t, size_t, enum dma_data_direction, unsigned long);
#line 232 
#line 232 
void dma_direct_sync_single_for_cpu(struct device *, dma_addr_t, size_t, enum dma_data_direction);
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/dma-mapping.h"
#line 19 
extern struct dma_map_ops *dma_ops;
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/dma-mapping.h"
__inline static struct dma_map_ops *get_arch_dma_ops(struct bus_type *bus)
{
  #line 23 
  return dma_ops;
}

#line 261  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dma-mapping.h"
__inline static struct dma_map_ops *get_dma_ops(struct device *dev)
{
  #line 263 
  if (dev->dma_ops != (struct dma_map_ops *)0) 
                                               #line 264 
                                               return dev->dma_ops;
  #line 265 
  return get_arch_dma_ops(dev->bus);
}

#line 274  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dma-mapping.h"
__inline static dma_addr_t dma_map_page_attrs(struct device *dev, struct page *page, size_t offset, size_t size, enum dma_data_direction dir, unsigned long attrs)
{
  #line 279 
  dma_addr_t addr;
  #line 278 
  struct dma_map_ops *ops = get_dma_ops(dev);
  #line 281 
  if ((long)(valid_dma_direction((int)dir) == 0) != 0L) {
    #line 282 
    ldv_inline_asm();
    #line 283 
    ldv_inline_asm();
    #line 284 
    ldv_inline_asm();
    #line 281 
    ;
  }
  #line 282 
  if ((int)dma_is_direct(ops) != 0) 
                                    #line 283 
                                    addr = dma_direct_map_page(dev,page,offset,size,dir,attrs); else 
                                                                    #line 285 
                                                                    addr = (*(ops->map_page))(dev,page,offset,size,dir,attrs);
  #line 286 
  debug_dma_map_page(dev,page,offset,size,(int)dir,addr);
  #line 288 
  return addr;
}

#line 291  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dma-mapping.h"
__inline static void dma_unmap_page_attrs(struct device *dev, dma_addr_t addr, size_t size, enum dma_data_direction dir, unsigned long attrs)
{
  #line 294 
  struct dma_map_ops *ops = get_dma_ops(dev);
  #line 296 
  if ((long)(valid_dma_direction((int)dir) == 0) != 0L) {
    #line 297 
    ldv_inline_asm();
    #line 298 
    ldv_inline_asm();
    #line 299 
    ldv_inline_asm();
    #line 296 
    ;
  }
  #line 297 
  if ((int)dma_is_direct(ops) != 0) 
                                    #line 298 
                                    dma_direct_unmap_page(dev,addr,size,dir,attrs);
  else 
    #line 299 
    if (ops->unmap_page != (void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , unsigned long ))0) 
      #line 300 
      (*(ops->unmap_page))(dev,addr,size,dir,attrs);
  #line 301 
  debug_dma_unmap_page(dev,addr,size,(int)dir);
  #line 302 
  return;
}

#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dma-mapping.h"
__inline static void dma_sync_single_for_cpu(struct device *dev, dma_addr_t addr, size_t size, enum dma_data_direction dir)
{
  #line 380 
  struct dma_map_ops *ops = get_dma_ops(dev);
  #line 382 
  if ((long)(valid_dma_direction((int)dir) == 0) != 0L) {
    #line 383 
    ldv_inline_asm();
    #line 384 
    ldv_inline_asm();
    #line 385 
    ldv_inline_asm();
    #line 382 
    ;
  }
  #line 383 
  if ((int)dma_is_direct(ops) != 0) 
                                    #line 384 
                                    dma_direct_sync_single_for_cpu(dev,addr,size,dir);
  else 
    #line 385 
    if (ops->sync_single_for_cpu != (void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ))0) 
      #line 386 
      (*(ops->sync_single_for_cpu))(dev,addr,size,dir);
  #line 387 
  debug_dma_sync_single_for_cpu(dev,addr,size,(int)dir);
  #line 388 
  return;
}

#line 433  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dma-mapping.h"
__inline static int dma_mapping_error(struct device *dev, dma_addr_t dma_addr)
{
  #line 435 
  debug_dma_mapping_error(dev,dma_addr);
  #line 437 
  if (dma_addr == 18446744073709551615ULL) 
                                           #line 438 
                                           return -12;
  #line 439 
  return 0;
}

#line 442 
#line 442 
void *dma_alloc_attrs(struct device *, size_t, dma_addr_t *, gfp_t, unsigned long);
#line 444 
#line 444 
void dma_free_attrs(struct device *, size_t, void *, dma_addr_t, unsigned long);
#line 592  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dma-mapping.h"
__inline static void dma_unmap_single_attrs(struct device *dev, dma_addr_t addr, size_t size, enum dma_data_direction dir, unsigned long attrs)
{
  #line 595 
  dma_unmap_page_attrs(dev,addr,size,dir,attrs);
  #line 596 
  return;
}

#line 598  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dma-mapping.h"
__inline static void dma_sync_single_range_for_cpu(struct device *dev, dma_addr_t addr, unsigned long offset, size_t size, enum dma_data_direction dir)
{
  #line 602 
  dma_sync_single_for_cpu(dev,addr + (unsigned long long)offset,size,dir);
  #line 603 
  return;
}

#line 641  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dma-mapping.h"
__inline static void *dma_alloc_coherent(struct device *dev, size_t size, dma_addr_t *dma_handle, gfp_t gfp)
{
  #line 645 
  return dma_alloc_attrs(dev,size,dma_handle,gfp,
                      (unsigned long)(gfp >> 5) & 256UL);
}

#line 649  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dma-mapping.h"
__inline static void dma_free_coherent(struct device *dev, size_t size, void *cpu_addr, dma_addr_t dma_handle)
{
  #line 652 
  dma_free_attrs(dev,size,cpu_addr,dma_handle,0UL);
  #line 653 
  return;
}

#line 1035  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
#line 1035 
struct sk_buff *build_skb(void *, unsigned int);
#line 1214  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static void __skb_set_hash(struct sk_buff *skb, __u32 hash, bool is_sw, bool is_l4)
{
  #line 1216 
  skb->l4_hash = (unsigned char)is_l4;
  #line 1217 
  skb->sw_hash = (unsigned char)is_sw;
  #line 1218 
  skb->hash = hash;
  #line 1219 
  return;
}

#line 1222  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static void skb_set_hash(struct sk_buff *skb, __u32 hash, enum pkt_hash_types type)
{
  #line 1225 
  __skb_set_hash(skb,hash,(_Bool)0,(_Bool)(type == (unsigned int)PKT_HASH_TYPE_L4));
  #line 1226 
  return;
}

#line 2065  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static bool skb_is_nonlinear(struct sk_buff *skb)
{
  #line 2067 
  return (_Bool)(skb->data_len != 0U);
}

#line 2142 
#line 2142 
void skb_add_rx_frag(struct sk_buff *, int, struct page *, int, int, unsigned int);
#line 2151  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static unsigned char *skb_tail_pointer(struct sk_buff *skb)
{
  #line 2153 
  return skb->head + (unsigned long)skb->tail;
}

#line 2189 
#line 2189 
void *skb_put(struct sk_buff *, unsigned int);
#line 2190  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static void *__skb_put(struct sk_buff *skb, unsigned int len)
{
  #line 2192 
  void *tmp = skb_tail_pointer(skb);
  #line 2193 
  if ((long)((int)skb_is_nonlinear(skb) != 0) != 0L) {
    #line 2194 
    ldv_inline_asm();
    #line 2195 
    ldv_inline_asm();
    #line 2196 
    ldv_inline_asm();
    #line 2193 
    ;
  }
  #line 2194 
  skb->tail += len;
  #line 2195 
  skb->len += len;
  #line 2196 
  return tmp;
}

#line 2820 
#line 2820 
struct sk_buff *__napi_alloc_skb(struct napi_struct *, unsigned int, gfp_t);
#line 2822  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static struct sk_buff *napi_alloc_skb(struct napi_struct *napi, unsigned int length)
{
  #line 2825 
  return __napi_alloc_skb(napi,length,2592U);
}

#line 2841  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static struct page *__dev_alloc_pages(gfp_t gfp_mask, unsigned int order)
{
  #line 2852 
  gfp_mask |= 393216U;
  #line 2854 
  return alloc_pages_node(-1,gfp_mask,order);
}

#line 2857  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static struct page *dev_alloc_pages(unsigned int order)
{
  #line 2859 
  return __dev_alloc_pages(10784U,order);
}

#line 3887  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static void __skb_incr_checksum_unnecessary(struct sk_buff *skb)
{
  #line 3889 
  if ((unsigned int)skb->ip_summed == 1U) {
    #line 3890 
    if ((unsigned int)skb->csum_level != 3U) 
                                             #line 3891 
                                             skb->csum_level = (__u8)((int)skb->csum_level + 1);
  }
  else 
    #line 3892 
    if ((unsigned int)skb->ip_summed == 0U) {
      #line 3893 
      skb->ip_summed = (unsigned char)1U;
      #line 3894 
      skb->csum_level = (unsigned char)0U;
    }
  #line 3896 
  return;
}

#line 4287  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static void skb_record_rx_queue(struct sk_buff *skb, u16 rx_queue)
{
  #line 4289 
  skb->queue_mapping = (unsigned short)((unsigned int)rx_queue + 1U);
  #line 4290 
  return;
}

#line 3130  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
#line 3130 
void netif_tx_wake_queue(struct netdev_queue *);
#line 3154  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
__inline static void netif_tx_stop_queue(struct netdev_queue *dev_queue)
{
  #line 3156 
  cif_set_bit(0L,& dev_queue->state);
  #line 3157 
  return;
}

#line 3174  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
__inline static bool netif_tx_queue_stopped(struct netdev_queue *dev_queue)
{
  #line 3176 
  return test_bit(0L,& dev_queue->state);
}

#line 3420  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
__inline static void netif_stop_subqueue(struct net_device *dev, u16 queue_index)
{
  #line 3422 
  struct netdev_queue *txq = netdev_get_tx_queue(dev,(unsigned int)queue_index);
  #line 3423 
  netif_tx_stop_queue(txq);
  #line 3424 
  return;
}

#line 3433  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
__inline static bool __netif_subqueue_stopped(struct net_device *dev, u16 queue_index)
{
  #line 3436 
  struct netdev_queue *txq = netdev_get_tx_queue(dev,(unsigned int)queue_index);
  #line 3438 
  return netif_tx_queue_stopped(txq);
}

#line 3454  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
__inline static void netif_wake_subqueue(struct net_device *dev, u16 queue_index)
{
  #line 3456 
  struct netdev_queue *txq = netdev_get_tx_queue(dev,(unsigned int)queue_index);
  #line 3458 
  netif_tx_wake_queue(txq);
  #line 3459 
  return;
}

#line 3617 
#line 3617 
void __dev_kfree_skb_any(struct sk_buff *, enum skb_free_reason);
#line 3648  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
__inline static void dev_kfree_skb_any(struct sk_buff *skb)
{
  #line 3650 
  __dev_kfree_skb_any(skb,(enum skb_free_reason)SKB_REASON_DROPPED);
  #line 3651 
  return;
}

#line 3665 
#line 3665 
gro_result_t napi_gro_receive(struct napi_struct *, struct sk_buff *);
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/etherdevice.h"
#line 31 
u32 eth_get_headlen(struct net_device *, void *, unsigned int);
#line 32 
#line 32 
__be16 eth_type_trans(struct sk_buff *, struct net_device *);
#line 510  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/if_vlan.h"
__inline static void __vlan_hwaccel_put_tag(struct sk_buff *skb, __be16 vlan_proto, u16 vlan_tci)
{
  #line 513 
  skb->vlan_proto = vlan_proto;
  #line 514 
  skb->vlan_tci = vlan_tci;
  #line 515 
  skb->vlan_present = (unsigned char)1U;
  #line 516 
  return;
}

#line 134  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ring.h"
__inline static void *aq_buf_vaddr(struct aq_rxpage *rxpage)
{
  #line 136 
  return (void *)((unsigned long)rxpage->pg_off + ((unsigned long)((unsigned long long)((rxpage->page - (struct page *)vmemmap_base) / 64L) << 12) + page_offset_base));
}

#line 139  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ring.h"
__inline static dma_addr_t aq_buf_daddr(struct aq_rxpage *rxpage)
{
  #line 141 
  return rxpage->daddr + (unsigned long long)rxpage->pg_off;
}

#line 150  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ring.h"
__inline static unsigned int aq_ring_avail_dx(struct aq_ring_s *self)
{
  #line 153 
  unsigned int tmp;
  #line 153 
  if (self->sw_tail >= self->sw_head) 
                                      #line 153 
                                      tmp = ((self->size - self->sw_tail) + self->sw_head) + 4294967295U; else 
                                                                    #line 153 
                                                                    tmp = (self->sw_head - self->sw_tail) + 4294967295U;
  #line 153 
  return tmp;
}

#line 157 
#line 125  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ring.c"
struct aq_ring_s *aq_ring_tx_alloc(struct aq_ring_s *self, struct aq_nic_s *aq_nic, unsigned int idx, struct aq_nic_cfg_s *aq_nic_cfg);
#line 161  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ring.h"
#line 152  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ring.c"
struct aq_ring_s *aq_ring_rx_alloc(struct aq_ring_s *self, struct aq_nic_s *aq_nic, unsigned int idx, struct aq_nic_cfg_s *aq_nic_cfg);
#line 165  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ring.h"
#line 208  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ring.c"
int aq_ring_init(struct aq_ring_s *self);
#line 166  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ring.h"
#line 522  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ring.c"
void aq_ring_rx_deinit(struct aq_ring_s *self);
#line 167  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ring.h"
#line 537  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ring.c"
void aq_ring_free(struct aq_ring_s *self);
#line 168  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ring.h"
#line 223  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ring.c"
void aq_ring_update_queue_state(struct aq_ring_s *ring);
#line 169  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ring.h"
#line 231  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ring.c"
void aq_ring_queue_wake(struct aq_ring_s *ring);
#line 170  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ring.h"
#line 241  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ring.c"
void aq_ring_queue_stop(struct aq_ring_s *ring);
#line 171  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ring.h"
#line 249  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ring.c"
bool aq_ring_tx_clean(struct aq_ring_s *self);
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ring.h"
#line 309  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ring.c"
int aq_ring_rx_clean(struct aq_ring_s *self, struct napi_struct *napi, int *work_done, int budget);
#line 176  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ring.h"
#line 492  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ring.c"
int aq_ring_rx_fill(struct aq_ring_s *self);
#line 178  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ring.h"
#line 185  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ring.c"
struct aq_ring_s *aq_ring_hwts_rx_alloc(struct aq_ring_s *self, struct aq_nic_s *aq_nic, unsigned int idx, unsigned int size, unsigned int dx_size);
#line 181  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ring.h"
#line 477  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ring.c"
void aq_ring_hwts_rx_clean(struct aq_ring_s *self, struct aq_nic_s *aq_nic);
#line 137  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_nic.h"
__inline static struct device *aq_nic_get_dev(struct aq_nic_s *self)
{
  #line 139 
  return (self->ndev)->dev.parent;
}

#line 146 
#line 146 
struct net_device *aq_nic_get_ndev(struct aq_nic_s *self);
#line 40  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.h"
#line 40 
void aq_ptp_tx_hwtstamp(struct aq_nic_s *aq_nic, u64 timestamp);
#line 49 
#line 49 
bool aq_ptp_ring(struct aq_nic_s *aq_nic, struct aq_ring_s *ring);
#line 51 
#line 51 
u16 aq_ptp_extract_ts(struct aq_nic_s *aq_nic, struct sk_buff *skb, u8 *p, unsigned int len);
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ring.c"
__inline static void aq_free_rxpage(struct aq_rxpage *rxpage, struct device *dev)
{
  #line 20 
  unsigned int len = (unsigned int)(4096UL << rxpage->order);
  #line 22 
  dma_unmap_page_attrs(dev,rxpage->daddr,(unsigned long)len,(enum dma_data_direction)DMA_FROM_DEVICE,0UL);
  #line 25 
  __free_pages(rxpage->page,rxpage->order);
  #line 26 
  rxpage->page = (struct page *)0;
  #line 27 
  return;
}

#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ring.c"
static int aq_get_rxpage(struct aq_rxpage *rxpage, unsigned int order, struct device *dev)
{
  #line 32 
  struct page *page;
  #line 34 
  dma_addr_t daddr;
  #line 33 
  int ret = -12;
  #line 36 
  page = dev_alloc_pages(order);
  #line 37 
  if ((long)(page == (struct page *)0) != 0L) 
                                              #line 38 
                                              goto err_exit;
  #line 40 
  daddr = dma_map_page_attrs(dev,page,0UL,4096UL << order,(enum dma_data_direction)DMA_FROM_DEVICE,0UL);
  #line 43 
  if ((long)(dma_mapping_error(dev,daddr) != 0) != 0L) 
                                                       #line 44 
                                                       goto free_page;
  #line 46 
  rxpage->page = page;
  #line 47 
  rxpage->daddr = daddr;
  #line 48 
  rxpage->order = order;
  #line 49 
  rxpage->pg_off = 0U;
  #line 51 
  return 0;
  #line 53 
  free_page: 
             #line 53 
  ;
  #line 54 
  __free_pages(page,order);
  #line 56 
  err_exit: 
            #line 56 
  ;
  #line 57 
  return ret;
}

#line 60  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ring.c"
static int aq_get_rxpages(struct aq_ring_s *self, struct aq_ring_buff_s *rxbuf, int order)
{
  #line 63 
  int ret;
  #line 65 
  if (rxbuf->__anonCompField_aq_ring_buff_s_169.__anonCompField___anonunion_704_166.rxdata.page != (struct page *)0) {
    #line 67 
    if (page_ref_count(rxbuf->__anonCompField_aq_ring_buff_s_169.__anonCompField___anonunion_704_166.rxdata.page) > 1) {
      #line 69 
      rxbuf->__anonCompField_aq_ring_buff_s_169.__anonCompField___anonunion_704_166.rxdata.pg_off += 2048U;
      #line 70 
      if ((unsigned long)(rxbuf->__anonCompField_aq_ring_buff_s_169.__anonCompField___anonunion_704_166.rxdata.pg_off + 2048U) <= 4096UL << order) 
        #line 72 
        (self->stats.rx.pg_flips) ++;
      else {
        #line 77 
        ;
        #line 77 
        aq_free_rxpage(& rxbuf->__anonCompField_aq_ring_buff_s_169.__anonCompField___anonunion_704_166.rxdata,aq_nic_get_dev(self->aq_nic));
        #line 79 
        (self->stats.rx.pg_losts) ++;
      }
    }
    else {
      #line 82 
      rxbuf->__anonCompField_aq_ring_buff_s_169.__anonCompField___anonunion_704_166.rxdata.pg_off = 0U;
      #line 83 
      (self->stats.rx.pg_reuses) ++;
    }
  }
  #line 87 
  if (rxbuf->__anonCompField_aq_ring_buff_s_169.__anonCompField___anonunion_704_166.rxdata.page == (struct page *)0) {
    #line 88 
    ;
    #line 88 
    ;
    #line 88 
    ret = aq_get_rxpage(& rxbuf->__anonCompField_aq_ring_buff_s_169.__anonCompField___anonunion_704_166.rxdata,(unsigned int)order,aq_nic_get_dev(self->aq_nic));
    #line 90 
    return ret;
  }
  #line 93 
  return 0;
}

#line 96  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ring.c"
static struct aq_ring_s *aq_ring_alloc(struct aq_ring_s *self, struct aq_nic_s *aq_nic)
{
  #line 99 
  int err = 0;
  #line 102 
  self->buff_ring = (struct aq_ring_buff_s *)kcalloc((unsigned long)self->size,48UL,3264U);
  #line 104 
  if (self->buff_ring == (struct aq_ring_buff_s *)0) {
    #line 105 
    err = -12;
    #line 106 
    goto err_exit;
  }
  #line 108 
  ;
  #line 108 
  ;
  #line 108 
  self->dx_ring = (u8 *)dma_alloc_coherent(aq_nic_get_dev(aq_nic),
                           (unsigned long)(self->size * self->dx_size),
                           & self->dx_ring_pa,3264U);
  #line 111 
  if (self->dx_ring == (u8 *)0U) {
    #line 112 
    err = -12;
    #line 113 
    goto err_exit;
  }
  #line 116 
  err_exit: 
            #line 116 
  ;
  #line 117 
  if (err < 0) {
    #line 118 
    aq_ring_free(self);
    #line 119 
    self = (struct aq_ring_s *)0;
  }
  #line 122 
  return self;
}

#line 125  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ring.c"
struct aq_ring_s *aq_ring_tx_alloc(struct aq_ring_s *self, struct aq_nic_s *aq_nic, unsigned int idx, struct aq_nic_cfg_s *aq_nic_cfg)
{
  #line 130 
  int err = 0;
  #line 132 
  self->aq_nic = aq_nic;
  #line 133 
  self->idx = idx;
  #line 134 
  self->size = aq_nic_cfg->txds;
  #line 135 
  self->dx_size = (unsigned int)(aq_nic_cfg->aq_hw_caps)->txd_size;
  #line 137 
  self = aq_ring_alloc(self,aq_nic);
  #line 138 
  if (self == (struct aq_ring_s *)0) {
    #line 139 
    err = -12;
    #line 140 
    goto err_exit;
  }
  #line 143 
  err_exit: 
            #line 143 
  ;
  #line 144 
  if (err < 0) {
    #line 145 
    aq_ring_free(self);
    #line 146 
    self = (struct aq_ring_s *)0;
  }
  #line 149 
  return self;
}

#line 152  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ring.c"
struct aq_ring_s *aq_ring_rx_alloc(struct aq_ring_s *self, struct aq_nic_s *aq_nic, unsigned int idx, struct aq_nic_cfg_s *aq_nic_cfg)
{
  #line 157 
  int err = 0;
  #line 159 
  self->aq_nic = aq_nic;
  #line 160 
  self->idx = idx;
  #line 161 
  self->size = aq_nic_cfg->rxds;
  #line 162 
  self->dx_size = (unsigned int)(aq_nic_cfg->aq_hw_caps)->rxd_size;
  #line 163 
  self->page_order = (unsigned int)(fls(1U) + -1);
  #line 166 
  if (aq_nic_cfg->rxpageorder > self->page_order) 
                                                  #line 167 
                                                  self->page_order = aq_nic_cfg->rxpageorder;
  #line 169 
  self = aq_ring_alloc(self,aq_nic);
  #line 170 
  if (self == (struct aq_ring_s *)0) {
    #line 171 
    err = -12;
    #line 172 
    goto err_exit;
  }
  #line 175 
  err_exit: 
            #line 175 
  ;
  #line 176 
  if (err < 0) {
    #line 177 
    aq_ring_free(self);
    #line 178 
    self = (struct aq_ring_s *)0;
  }
  #line 181 
  return self;
}

#line 185  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ring.c"
struct aq_ring_s *aq_ring_hwts_rx_alloc(struct aq_ring_s *self, struct aq_nic_s *aq_nic, unsigned int idx, unsigned int size, unsigned int dx_size)
{
  #line 188 
  struct device *dev = aq_nic_get_dev(aq_nic);
  #line 189 
  size_t sz = (unsigned long)(size * dx_size + 2048U);
  #line 191 
  memset((void *)self,0,128UL);
  #line 193 
  self->aq_nic = aq_nic;
  #line 194 
  self->idx = idx;
  #line 195 
  self->size = size;
  #line 196 
  self->dx_size = dx_size;
  #line 198 
  self->dx_ring = (u8 *)dma_alloc_coherent(dev,sz,& self->dx_ring_pa,3264U);
  #line 200 
  if (self->dx_ring == (u8 *)0U) {
    #line 201 
    aq_ring_free(self);
    #line 202 
    return (struct aq_ring_s *)0;
  }
  #line 205 
  return self;
}

#line 208  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ring.c"
int aq_ring_init(struct aq_ring_s *self)
{
  #line 210 
  self->hw_head = 0U;
  #line 211 
  self->sw_head = 0U;
  #line 212 
  self->sw_tail = 0U;
  #line 214 
  return 0;
}

#line 217  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ring.c"
__inline static bool aq_ring_dx_in_range(unsigned int h, unsigned int i, unsigned int t)
{
  #line 220 
  int tmp;
  #line 220 
  if (h < t) 
             #line 220 
             tmp = (h < i && i < t) != 0; else 
                                               #line 220 
                                               tmp = (h < i || i < t) != 0;
  #line 220 
  return (_Bool)(tmp != 0);
}

#line 223  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ring.c"
void aq_ring_update_queue_state(struct aq_ring_s *ring)
{
  #line 225 
  if (aq_ring_avail_dx(ring) <= 32U) 
                                     #line 226 
                                     aq_ring_queue_stop(ring);
  else {
    #line 227 
    if (aq_ring_avail_dx(ring) > 64U) 
                                      #line 228 
                                      aq_ring_queue_wake(ring);
  }
  #line 229 
  return;
}

#line 231  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ring.c"
void aq_ring_queue_wake(struct aq_ring_s *ring)
{
  #line 233 
  struct net_device *ndev = aq_nic_get_ndev(ring->aq_nic);
  #line 235 
  if ((int)__netif_subqueue_stopped(ndev,
                                 (unsigned short)((int)((unsigned short)ring->idx))) != 0) {
    #line 236 
    netif_wake_subqueue(ndev,(unsigned short)((int)((unsigned short)ring->idx)));
    #line 237 
    (ring->stats.tx.queue_restarts) ++;
  }
  #line 239 
  return;
}

#line 241  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ring.c"
void aq_ring_queue_stop(struct aq_ring_s *ring)
{
  #line 243 
  struct net_device *ndev = aq_nic_get_ndev(ring->aq_nic);
  #line 245 
  if (! __netif_subqueue_stopped(ndev,
                                 (unsigned short)((int)((unsigned short)ring->idx)))) 
    #line 246 
    netif_stop_subqueue(ndev,(unsigned short)((int)((unsigned short)ring->idx)));
  #line 247 
  return;
}

#line 249  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ring.c"
bool aq_ring_tx_clean(struct aq_ring_s *self)
{
  #line 252 
  unsigned int budget;
  #line 251 
  struct device *dev = aq_nic_get_dev(self->aq_nic);
  #line 254 
  budget = 256U;
  #line 254 
  while (budget != 0U && self->sw_head != self->hw_head) {
    {
      #line 256 
      struct aq_ring_buff_s *buff = self->buff_ring + (unsigned long)self->sw_head;
      #line 258 
      if ((long)((unsigned int)buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.is_mapped != 0U) != 0L) 
        #line 259 
        if ((long)((unsigned int)buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.is_sop != 0U) != 0L) {
          #line 260 
          if ((unsigned int)buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.is_eop == 0U && (unsigned int)buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.eop_index != 65535U) {
            #line 262 
            if (! aq_ring_dx_in_range(self->sw_head,
                            (unsigned int)buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.eop_index,
                            self->hw_head)) 
              #line 265 
              break;
          }
          #line 267 
          dma_unmap_single_attrs(dev,buff->__anonCompField_aq_ring_buff_s_169.pa,(unsigned long)buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.len,(enum dma_data_direction)DMA_TO_DEVICE,0UL);
        }
        else 
             #line 270 
             dma_unmap_page_attrs(dev,buff->__anonCompField_aq_ring_buff_s_169.pa,(unsigned long)buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.len,(enum dma_data_direction)DMA_TO_DEVICE,0UL);
      #line 275 
      if ((long)((unsigned int)buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.is_eop != 0U) != 0L) 
        #line 276 
        dev_kfree_skb_any(buff->__anonCompField_aq_ring_buff_s_169.__anonCompField___anonunion_704_167.skb);
      #line 278 
      buff->__anonCompField_aq_ring_buff_s_169.pa = 0ULL;
      #line 279 
      buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.eop_index = (unsigned short)65535U;
      #line 280 
      self->sw_head = aq_ring_next_dx(self,self->sw_head);
    }
    #line 255 
    budget --;
  }
  #line 283 
  return (_Bool)(budget != 0U);
}

#line 286  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ring.c"
static void aq_rx_checksum(struct aq_ring_s *self, struct aq_ring_buff_s *buff, struct sk_buff *skb)
{
  #line 290 
  if ((((self->aq_nic)->ndev)->features & 549755813888ULL) == 0ULL) 
                                                                    #line 291 
                                                                    return;
  #line 293 
  if ((long)((unsigned int)buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.is_cso_err != 0U) != 0L) {
    #line 294 
    (self->stats.rx.errors) ++;
    #line 295 
    skb->ip_summed = (unsigned char)0U;
    #line 296 
    return;
  }
  #line 298 
  if ((unsigned int)buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.is_ip_cso != 0U) 
    #line 299 
    __skb_incr_checksum_unnecessary(skb); else 
                                               #line 301 
                                               skb->ip_summed = (unsigned char)0U;
  #line 304 
  if ((unsigned int)buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.is_udp_cso != 0U || (unsigned int)buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.is_tcp_cso != 0U) 
    #line 305 
    __skb_incr_checksum_unnecessary(skb);
  #line 306 
  return;
}

#line 309  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ring.c"
int aq_ring_rx_clean(struct aq_ring_s *self, struct napi_struct *napi, int *work_done, int budget)
{
  #line 314 
  struct net_device *ndev = aq_nic_get_ndev(self->aq_nic);
  #line 315 
  bool is_rsc_completed = (_Bool)1;
  #line 316 
  int err = 0;
  #line 318 
  while (self->sw_head != self->hw_head && budget != 0) {
    {
      #line 327 
      u16 hdr_len;
      #line 461 
      int tmp_13;
      #line 465 
      int tmp_14;
      #line 321 
      struct aq_ring_buff_s *buff = self->buff_ring + (unsigned long)self->sw_head;
      #line 322 
      bool is_ptp_ring = aq_ptp_ring(self->aq_nic,self);
      #line 323 
      struct aq_ring_buff_s *buff_ = (struct aq_ring_buff_s *)0;
      #line 324 
      struct sk_buff *skb = (struct sk_buff *)0;
      #line 325 
      unsigned int next_ = 0U;
      #line 326 
      unsigned int i = 0U;
      #line 329 
      if ((unsigned int)buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.is_cleaned != 0U) 
        #line 330 
        goto __Cont;
      #line 332 
      if ((unsigned int)buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.is_eop == 0U) {
        #line 333 
        buff_ = buff;
        #line 334 
        while (1) {
          #line 335 
          next_ = (unsigned int)buff_->__anonCompField_aq_ring_buff_s_169.__anonCompField___anonunion_704_166.next;
          #line 335 
          buff_ = self->buff_ring + (unsigned long)next_;
          #line 337 
          is_rsc_completed = aq_ring_dx_in_range(self->sw_head,next_,self->hw_head);
          #line 342 
          if ((long)(! is_rsc_completed) != 0L) 
                                                #line 343 
                                                break;
          #line 345 
          buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.is_error = (unsigned int)((int)buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.is_error | (int)buff_->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.is_error);
          #line 346 
          buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.is_cso_err = (unsigned int)((int)buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.is_cso_err | (int)buff_->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.is_cso_err);
          #line 347 
          if (! ((unsigned int)buff_->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.is_eop == 0U)) 
            #line 334 
            break;
        }
        #line 350 
        if (! is_rsc_completed) {
          #line 351 
          err = 0;
          #line 352 
          goto err_exit;
        }
        #line 354 
        if ((unsigned int)buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.is_error != 0U || (unsigned int)buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.is_cso_err != 0U) {
          #line 355 
          buff_ = buff;
          #line 356 
          while (1) {
            #line 357 
            next_ = (unsigned int)buff_->__anonCompField_aq_ring_buff_s_169.__anonCompField___anonunion_704_166.next;
            #line 357 
            buff_ = self->buff_ring + (unsigned long)next_;
            #line 360 
            buff_->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.is_cleaned = (unsigned int)1U;
            #line 361 
            if (! ((unsigned int)buff_->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.is_eop == 0U)) 
              #line 356 
              break;
          }
          #line 363 
          (self->stats.rx.errors) ++;
          #line 364 
          goto __Cont;
        }
      }
      #line 368 
      if ((unsigned int)buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.is_error != 0U) {
        #line 369 
        (self->stats.rx.errors) ++;
        #line 370 
        goto __Cont;
      }
      #line 373 
      ;
      #line 373 
      ;
      #line 373 
      ;
      #line 373 
      dma_sync_single_range_for_cpu(aq_nic_get_dev(self->aq_nic),buff->__anonCompField_aq_ring_buff_s_169.__anonCompField___anonunion_704_166.rxdata.daddr,(unsigned long)buff->__anonCompField_aq_ring_buff_s_169.__anonCompField___anonunion_704_166.rxdata.pg_off,(unsigned long)buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.len,(enum dma_data_direction)DMA_FROM_DEVICE);
      #line 379 
      if ((unsigned int)buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.is_eop != 0U && (unsigned int)buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.len <= 1728U) {
        #line 381 
        skb = build_skb(aq_buf_vaddr(& buff->__anonCompField_aq_ring_buff_s_169.__anonCompField___anonunion_704_166.rxdata),2048U);
        #line 383 
        if ((long)(skb == (struct sk_buff *)0) != 0L) {
          #line 384 
          err = -12;
          #line 385 
          goto err_exit;
        }
        #line 387 
        if ((int)is_ptp_ring != 0) {
          #line 389 
          ;
          #line 389 
          ;
          #line 389 
          ;
          #line 391 
          buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.len = (unsigned int)((int)buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.len - (int)aq_ptp_extract_ts(self->aq_nic,skb,
                          (u8 *)aq_buf_vaddr(& buff->__anonCompField_aq_ring_buff_s_169.__anonCompField___anonunion_704_166.rxdata),
                          (unsigned int)buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.len));
        }
        #line 392 
        skb_put(skb,(unsigned int)buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.len);
        #line 393 
        page_ref_inc(buff->__anonCompField_aq_ring_buff_s_169.__anonCompField___anonunion_704_166.rxdata.page);
      }
      else {
        #line 395 
        skb = napi_alloc_skb(napi,256U);
        #line 396 
        if ((long)(skb == (struct sk_buff *)0) != 0L) {
          #line 397 
          err = -12;
          #line 398 
          goto err_exit;
        }
        #line 400 
        if ((int)is_ptp_ring != 0) {
          #line 402 
          ;
          #line 402 
          ;
          #line 402 
          ;
          #line 404 
          buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.len = (unsigned int)((int)buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.len - (int)aq_ptp_extract_ts(self->aq_nic,skb,
                          (u8 *)aq_buf_vaddr(& buff->__anonCompField_aq_ring_buff_s_169.__anonCompField___anonunion_704_166.rxdata),
                          (unsigned int)buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.len));
        }
        #line 406 
        hdr_len = (unsigned short)buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.len;
        #line 407 
        if ((unsigned int)hdr_len > 256U) {
          #line 408 
          ;
          #line 408 
          hdr_len = (unsigned short)eth_get_headlen(skb->__anonCompField_sk_buff_87.__anonCompField___anonunion_487_86.__anonCompField___anonstruct_488_85.dev,
                        aq_buf_vaddr(& buff->__anonCompField_aq_ring_buff_s_169.__anonCompField___anonunion_704_166.rxdata),
                        256U);
        }
        #line 412 
        ;
        #line 412 
        memcpy(__skb_put(skb,(unsigned int)hdr_len),aq_buf_vaddr(& buff->__anonCompField_aq_ring_buff_s_169.__anonCompField___anonunion_704_166.rxdata),(unsigned long)(((int)hdr_len + 7) & -8));
        #line 415 
        if ((int)buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.len - (int)hdr_len > 0) {
          #line 416 
          skb_add_rx_frag(skb,0,buff->__anonCompField_aq_ring_buff_s_169.__anonCompField___anonunion_704_166.rxdata.page,(int)(buff->__anonCompField_aq_ring_buff_s_169.__anonCompField___anonunion_704_166.rxdata.pg_off + (unsigned int)hdr_len),(int)buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.len - (int)hdr_len,2048U);
          #line 420 
          page_ref_inc(buff->__anonCompField_aq_ring_buff_s_169.__anonCompField___anonunion_704_166.rxdata.page);
        }
        #line 423 
        if ((unsigned int)buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.is_eop == 0U) {
          #line 424 
          buff_ = buff;
          #line 425 
          i = 1U;
          #line 426 
          while (1) {
            {
              #line 436 
              unsigned int tmp_12;
              #line 427 
              next_ = (unsigned int)buff_->__anonCompField_aq_ring_buff_s_169.__anonCompField___anonunion_704_166.next;
              #line 427 
              buff_ = self->buff_ring + (unsigned long)next_;
              #line 430 
              ;
              #line 430 
              ;
              #line 430 
              ;
              #line 430 
              dma_sync_single_range_for_cpu(aq_nic_get_dev(self->aq_nic),buff_->__anonCompField_aq_ring_buff_s_169.__anonCompField___anonunion_704_166.rxdata.daddr,(unsigned long)buff_->__anonCompField_aq_ring_buff_s_169.__anonCompField___anonunion_704_166.rxdata.pg_off,(unsigned long)buff_->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.len,(enum dma_data_direction)DMA_FROM_DEVICE);
              #line 436 
              ;
              #line 436 
              ;
              #line 436 
              ;
              #line 436 
              tmp_12 = i;
              #line 436 
              i ++;
              #line 436 
              ;
              #line 436 
              ;
              #line 436 
              skb_add_rx_frag(skb,(int)tmp_12,buff_->__anonCompField_aq_ring_buff_s_169.__anonCompField___anonunion_704_166.rxdata.page,(int)buff_->__anonCompField_aq_ring_buff_s_169.__anonCompField___anonunion_704_166.rxdata.pg_off,(int)buff_->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.len,2048U);
              #line 441 
              page_ref_inc(buff_->__anonCompField_aq_ring_buff_s_169.__anonCompField___anonunion_704_166.rxdata.page);
              #line 442 
              buff_->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.is_cleaned = (unsigned int)1U;
              #line 444 
              buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.is_ip_cso = (unsigned int)((int)((unsigned char)buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.is_ip_cso) & (int)((unsigned char)buff_->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.is_ip_cso));
              #line 445 
              buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.is_udp_cso = (unsigned int)((int)((unsigned char)buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.is_udp_cso) & (int)((unsigned char)buff_->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.is_udp_cso));
              #line 446 
              buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.is_tcp_cso = (unsigned int)((int)((unsigned char)buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.is_tcp_cso) & (int)((unsigned char)buff_->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.is_tcp_cso));
              #line 447 
              buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.is_cso_err = (unsigned int)((int)buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.is_cso_err | (int)buff_->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.is_cso_err);
            }
            #line 448 
            if (! ((unsigned int)buff_->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.is_eop == 0U)) 
              #line 426 
              break;
          }
        }
      }
      #line 453 
      if ((unsigned int)buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.is_vlan != 0U) 
        #line 454 
        __vlan_hwaccel_put_tag(skb,(unsigned short)129,(unsigned short)((int)buff->__anonCompField_aq_ring_buff_s_169.__anonCompField___anonunion_704_166.vlan_rx_tag));
      #line 457 
      skb->protocol = eth_type_trans(skb,ndev);
      #line 459 
      aq_rx_checksum(self,buff,skb);
      #line 461 
      if ((unsigned int)buff->__anonCompField_aq_ring_buff_s_169.__anonCompField___anonunion_704_166.is_hash_l4 != 0U) 
        #line 461 
        tmp_13 = PKT_HASH_TYPE_L4; else 
                                        #line 461 
                                        tmp_13 = PKT_HASH_TYPE_NONE;
      #line 461 
      ;
      #line 461 
      ;
      #line 461 
      skb_set_hash(skb,buff->__anonCompField_aq_ring_buff_s_169.__anonCompField___anonunion_704_166.rss_hash,(enum pkt_hash_types)tmp_13);
      #line 465 
      if (is_ptp_ring) 
                       #line 465 
                       tmp_14 = 0; else 
                                        #line 465 
                                        tmp_14 = (int)((unsigned short)self->idx);
      #line 465 
      ;
      #line 465 
      skb_record_rx_queue(skb,(unsigned short)tmp_14);
      #line 467 
      (self->stats.rx.packets) ++;
      #line 468 
      self->stats.rx.bytes += (unsigned long long)skb->len;
      #line 470 
      napi_gro_receive(napi,skb);
    }
    #line 318 
    __Cont: 
            #line 319 
    self->sw_head = aq_ring_next_dx(self,self->sw_head);
    #line 320 
    budget --;
    #line 320 
    (*work_done) ++;
  }
  #line 473 
  err_exit: 
            #line 473 
  ;
  #line 474 
  return err;
}

#line 477  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ring.c"
void aq_ring_hwts_rx_clean(struct aq_ring_s *self, struct aq_nic_s *aq_nic)
{
  #line 479 
  while (self->sw_head != self->hw_head) {
    #line 480 
    u64 ns;
    #line 482 
    (*((aq_nic->aq_hw_ops)->extract_hwts))(aq_nic->aq_hw,self->dx_ring + (unsigned long)(self->sw_head * self->dx_size),self->dx_size,& ns);
    #line 486 
    aq_ptp_tx_hwtstamp(aq_nic,ns);
    #line 488 
    self->sw_head = aq_ring_next_dx(self,self->sw_head);
  }
  #line 490 
  return;
}

#line 492  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ring.c"
int aq_ring_rx_fill(struct aq_ring_s *self)
{
  #line 499 
  unsigned int __UNIQUE_ID___x441;
  #line 499 
  unsigned int tmp_0;
  #line 499 
  unsigned int tmp;
  #line 494 
  unsigned int page_order = self->page_order;
  #line 495 
  struct aq_ring_buff_s *buff = (struct aq_ring_buff_s *)0;
  #line 496 
  int err = 0;
  #line 497 
  int i = 0;
  #line 499 
  tmp = aq_ring_avail_dx(self);
  {
    #line 499 
    __UNIQUE_ID___x441 = 32U;
    #line 499 
    unsigned int __UNIQUE_ID___y442 = self->size / 2U;
    #line 499 
    if (__UNIQUE_ID___x441 < __UNIQUE_ID___y442) 
                                                 #line 499 
                                                 tmp_0 = __UNIQUE_ID___x441; else 
                                                                    #line 499 
                                                                    tmp_0 = __UNIQUE_ID___y442;
    }
  #line 499 
  if (tmp < tmp_0) 
                   #line 501 
                   return err;
  #line 503 
  i = (int)aq_ring_avail_dx(self);
  #line 503 
  while (1) {
    #line 503 
    int tmp_3;
    #line 503 
    tmp_3 = i;
    #line 503 
    i --;
    #line 503 
    ;
    #line 503 
    if (! (tmp_3 != 0)) 
                        #line 503 
                        break;
    #line 505 
    buff = self->buff_ring + (unsigned long)self->sw_tail;
    #line 507 
    buff->__anonCompField_aq_ring_buff_s_171.flags = 0ULL;
    #line 508 
    buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.len = (unsigned int)2048U;
    #line 510 
    err = aq_get_rxpages(self,buff,(int)page_order);
    #line 511 
    if (err != 0) 
                  #line 512 
                  goto err_exit;
    #line 514 
    buff->__anonCompField_aq_ring_buff_s_169.pa = aq_buf_daddr(& buff->__anonCompField_aq_ring_buff_s_169.__anonCompField___anonunion_704_166.rxdata);
    #line 515 
    buff = (struct aq_ring_buff_s *)0;
    #line 504 
    self->sw_tail = aq_ring_next_dx(self,self->sw_tail);
  }
  #line 518 
  err_exit: 
            #line 518 
  ;
  #line 519 
  return err;
}

#line 522  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ring.c"
void aq_ring_rx_deinit(struct aq_ring_s *self)
{
  #line 524 
  if (self == (struct aq_ring_s *)0) 
                                     #line 525 
                                     goto err_exit;
  #line 527 
  while (self->sw_head != self->sw_tail) {
    {
      #line 529 
      struct aq_ring_buff_s *buff = self->buff_ring + (unsigned long)self->sw_head;
      #line 531 
      ;
      #line 531 
      aq_free_rxpage(& buff->__anonCompField_aq_ring_buff_s_169.__anonCompField___anonunion_704_166.rxdata,aq_nic_get_dev(self->aq_nic));
    }
    #line 528 
    self->sw_head = aq_ring_next_dx(self,self->sw_head);
  }
  #line 534 
  err_exit: 
            #line 534 
  ;
  #line 535 
  return;
}

#line 537  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ring.c"
void aq_ring_free(struct aq_ring_s *self)
{
  #line 539 
  if (self == (struct aq_ring_s *)0) 
                                     #line 540 
                                     goto err_exit;
  #line 542 
  kfree((void *)self->buff_ring);
  #line 544 
  if (self->dx_ring != (u8 *)0U) {
    #line 545 
    ;
    #line 545 
    ;
    #line 545 
    ;
    #line 545 
    dma_free_coherent(aq_nic_get_dev(self->aq_nic),(unsigned long)(self->size * self->dx_size),(void *)self->dx_ring,self->dx_ring_pa);
  }
  #line 549 
  err_exit: 
            #line 549 
  ;
  #line 550 
  return;
}

#line 122  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_ring.i.aux"
static void cif_set_bit(long nr, unsigned long *addr)
{
  #line 125 
  ldv_set_bit(nr,addr);
  #line 126 
  return;
}

#line 185  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_ring.i.aux"
static void atomic_inc_0(atomic_t *v)
{
  #line 188 
  ldv_atomic_inc(v);
  #line 189 
  return;
}

#line 409  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_ring.i.aux"
static void *kcalloc(size_t n, size_t size, gfp_t flags)
{
  #line 412 
  return ldv_kcalloc(n,size,flags);
}

/* compiler builtin: 
   unsigned long __builtin_object_size(void *, int);   */
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/bitops/instrumented-atomic.h"
#line 182  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_main.i.aux"
static void cif_set_bit_0(long nr, unsigned long *addr);
#line 44  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/bitops/instrumented-atomic.h"
#line 189  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_main.i.aux"
static void cif_clear_bit_0(long nr, unsigned long *addr);
#line 171  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/printk.h"
#line 171 
int printk(char * , ...);
#line 89  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/bug.h"
#line 89 
void __warn_printk(char * , ...);
#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/cmpxchg_64.h"
__inline static int arch_atomic_read_2(atomic_t *v)
{
  #line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/atomic.h"
  union __anonunion___u_2909 __u;
  #line 31 
  __read_once_size((void *)(& v->counter),(void *)(& __u.__c),4);
  #line 31 
  return (__u.__val);
}

#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/atomic-instrumented.h"
__inline static int atomic_read_2(atomic_t *v)
{
  #line 26 
  kasan_check_read((void *)v,4U);
  #line 27 
  return arch_atomic_read_2(v);
}

#line 112  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/thread_info.h"
#line 112 
void __check_object_size(void *, unsigned long, bool);
#line 115  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/thread_info.h"
__inline static void check_object_size(void *ptr, unsigned long n, bool to_user)
{
  #line 118 
  if (0 == 0) 
              #line 119 
              __check_object_size(ptr,n,(_Bool)((bool)((int)to_user) != 0));
  #line 120 
  return;
}

#line 128 
#line 128 
void __bad_copy_from(void);
#line 130 
#line 130 
void __bad_copy_to(void);
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/thread_info.h"
__inline static void copy_overflow(int size, unsigned long count)
{
  #line 134 
  int __ret_warn_on = 1;
  #line 134 
  if ((long)(__ret_warn_on != 0) != 0L) {
    #line 134 
    __warn_printk((char *)"Buffer overflow detected (%d < %lu)!\n",size,count);
    #line 135 
    ldv_inline_asm();
    #line 136 
    ldv_inline_asm();
  }
  #line 134 
  long tmp = (long)(__ret_warn_on != 0);
  #line 136 
  return;
}

#line 138  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/thread_info.h"
__inline static bool check_copy_size(void *addr, size_t bytes, bool is_source)
{
  #line 150 
  int __ret_warn_on;
  #line 140 
  int sz = (int)__builtin_object_size(addr,0);
  #line 141 
  if ((long)(sz >= 0) != 0L && (long)((unsigned long)sz < bytes) != 0L) {
    #line 142 
    if (0 == 0) 
                #line 143 
                copy_overflow(sz,bytes);
    else 
      #line 144 
      if ((int)is_source != 0) 
                               #line 145 
                               __bad_copy_from(); else 
                                                       #line 147 
                                                       __bad_copy_to();
    #line 148 
    return (_Bool)0;
  }
  #line 150 
  __ret_warn_on = bytes > 2147483647UL;
  #line 150 
  if ((long)(__ret_warn_on != 0) != 0L) {
    #line 151 
    ldv_inline_asm();
    #line 152 
    ldv_inline_asm();
  }
  #line 150 
  if ((long)((long)(__ret_warn_on != 0)) != 0L) 
                                                #line 151 
                                                return (_Bool)0;
  #line 152 
  check_object_size(addr,bytes,(_Bool)((bool)((int)is_source) != 0));
  #line 153 
  return (_Bool)1;
}

#line 407  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/workqueue.h"
#line 407 
struct workqueue_struct *alloc_workqueue(char *, unsigned int, int , ...);
#line 436 
#line 436 
void destroy_workqueue(struct workqueue_struct *);
#line 496 
#line 366  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_main.i.aux"
static bool cif_queue_work(struct workqueue_struct *wq, struct work_struct *work);
#line 121  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uaccess.h"
#line 121 
unsigned long _copy_from_user(void *, void *, unsigned long);
#line 137 
#line 137 
unsigned long _copy_to_user(void *, void *, unsigned long);
#line 141  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uaccess.h"
__inline static unsigned long copy_from_user(void *to, void *from, unsigned long n)
{
  #line 143 
  if ((long)((int)check_copy_size(to,n,(_Bool)0) != 0) != 0L) 
                                                              #line 144 
                                                              n = _copy_from_user(to,from,n);
  #line 145 
  return n;
}

#line 149  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uaccess.h"
__inline static unsigned long copy_to_user(void *to, void *from, unsigned long n)
{
  #line 151 
  if ((long)((int)check_copy_size(from,n,(_Bool)1) != 0) != 0L) 
                                                                #line 152 
                                                                n = _copy_to_user(to,from,n);
  #line 153 
  return n;
}

#line 1381  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static unsigned char *skb_end_pointer(struct sk_buff *skb)
{
  #line 1383 
  return skb->head + (unsigned long)skb->end;
}

#line 2458  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static unsigned char *skb_transport_header(struct sk_buff *skb)
{
  #line 2460 
  return skb->head + (unsigned long)skb->transport_header;
}

#line 2475  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static unsigned char *skb_network_header(struct sk_buff *skb)
{
  #line 2477 
  return skb->head + (unsigned long)skb->network_header;
}

#line 2491  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static unsigned char *skb_mac_header(struct sk_buff *skb)
{
  #line 2493 
  return skb->head + (unsigned long)skb->mac_header;
}

#line 3767 
#line 3767 
void skb_clone_tx_timestamp(struct sk_buff *);
#line 3813 
#line 3813 
void skb_tstamp_tx(struct sk_buff *, struct skb_shared_hwtstamps *);
#line 3828  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static void skb_tx_timestamp(struct sk_buff *skb)
{
  #line 3830 
  skb_clone_tx_timestamp(skb);
  #line 3831 
  ;
  #line 3831 
  if (((int)((struct skb_shared_info *)skb_end_pointer(skb))->tx_flags & 2) != 0) 
    #line 3832 
    skb_tstamp_tx(skb,(struct skb_shared_hwtstamps *)0);
  #line 3833 
  return;
}

#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/if_ether.h"
__inline static struct ethhdr *eth_hdr(struct sk_buff *skb)
{
  #line 24 
  return (struct ethhdr *)skb_mac_header(skb);
}

#line 3387  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
__inline static bool netif_running(struct net_device *dev)
{
  #line 3389 
  return test_bit(0L,& dev->state);
}

#line 45  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/etherdevice.h"
#line 45 
int eth_mac_addr(struct net_device *, void *);
#line 51 
#line 869  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_main.i.aux"
static struct net_device *cif_alloc_etherdev_mqs(int sizeof_priv, unsigned int txqs, unsigned int rxqs);
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_utils.h"
__inline static bool aq_utils_obj_test_0(atomic_t *flags, u32 mask)
{
  #line 36 
  ;
  #line 36 
  return (_Bool)(((unsigned int)atomic_read_2(flags) & mask) != 0U);
}

#line 154  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_nic.h"
#line 154 
int aq_nic_xmit(struct aq_nic_s *self, struct sk_buff *skb);
#line 163 
#line 163 
int aq_nic_set_mtu(struct aq_nic_s *self, int new_mtu);
#line 164 
#line 164 
int aq_nic_set_mac(struct aq_nic_s *self, struct net_device *ndev);
#line 166 
#line 166 
int aq_nic_set_multicast_list(struct aq_nic_s *self, struct net_device *ndev);
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_main.h"
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_main.c"
void aq_ndev_schedule_work(struct work_struct *work);
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ethtool.h"
#line 740  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ethtool.c"
struct ethtool_ops aq_ethtool_ops;
#line 39  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.h"
#line 39 
int aq_ptp_xmit(struct aq_nic_s *aq_nic, struct sk_buff *skb);
#line 43 
#line 43 
void aq_ptp_hwtstamp_config_get(struct aq_ptp_s *aq_ptp, struct hwtstamp_config *config);
#line 45 
#line 45 
int aq_ptp_hwtstamp_config_set(struct aq_ptp_s *aq_ptp, struct hwtstamp_config *config);
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_filters.h"
#line 30 
int aq_del_fvlan_by_vlan(struct aq_nic_s *aq_nic, u16 vlan_id);
#line 32 
#line 32 
int aq_reapply_rxnfc_all_rules(struct aq_nic_s *aq_nic);
#line 33 
#line 33 
int aq_filters_vlans_update(struct aq_nic_s *aq_nic);
#line 34 
#line 34 
int aq_filters_vlan_offload_off(struct aq_nic_s *aq_nic);
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ip.h"
__inline static struct iphdr *ip_hdr(struct sk_buff *skb)
{
  #line 21 
  return (struct iphdr *)skb_network_header(skb);
}

#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/udp.h"
__inline static struct udphdr *udp_hdr(struct sk_buff *skb)
{
  #line 23 
  return (struct udphdr *)skb_transport_header(skb);
}

#line 26  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_main.c"
static char aq_ndev_driver_name[9U] = {(char)'a', (char)'t', (char)'l', (char)'a', (char)'n', (char)'t', (char)'i', (char)'c'};
#line 28 
#line 334 
static struct net_device_ops aq_ndev_ops;
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_main.c"
static struct workqueue_struct *aq_ndev_wq;
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_main.c"
void aq_ndev_schedule_work(struct work_struct *work)
{
  #line 34 
  cif_queue_work(aq_ndev_wq,work);
  #line 35 
  return;
}

#line 37  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_main.c"
struct net_device *aq_ndev_alloc(void)
{
  #line 39 
  struct net_device *ndev = (struct net_device *)0;
  #line 40 
  struct aq_nic_s *aq_nic = (struct aq_nic_s *)0;
  #line 42 
  ndev = cif_alloc_etherdev_mqs(2104,8U,8U);
  #line 43 
  if (ndev == (struct net_device *)0) 
                                      #line 44 
                                      return (struct net_device *)0;
  #line 46 
  aq_nic = (struct aq_nic_s *)netdev_priv(ndev);
  #line 47 
  aq_nic->ndev = ndev;
  #line 48 
  ndev->netdev_ops = & aq_ndev_ops;
  #line 49 
  ndev->ethtool_ops = & aq_ethtool_ops;
  #line 51 
  return ndev;
}

#line 54  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_main.c"
static int aq_ndev_open(struct net_device *ndev)
{
  #line 56 
  struct aq_nic_s *aq_nic = netdev_priv(ndev);
  #line 57 
  int err = 0;
  #line 59 
  err = aq_nic_init(aq_nic);
  #line 60 
  if (err < 0) 
               #line 61 
               goto err_exit;
  #line 63 
  err = aq_reapply_rxnfc_all_rules(aq_nic);
  #line 64 
  if (err < 0) 
               #line 65 
               goto err_exit;
  #line 67 
  err = aq_filters_vlans_update(aq_nic);
  #line 68 
  if (err < 0) 
               #line 69 
               goto err_exit;
  #line 71 
  err = aq_nic_start(aq_nic);
  #line 72 
  if (err < 0) 
               #line 73 
               goto err_exit;
  #line 75 
  err_exit: 
            #line 75 
  ;
  #line 76 
  if (err < 0) 
               #line 77 
               aq_nic_deinit(aq_nic,(_Bool)1);
  #line 79 
  return err;
}

#line 82  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_main.c"
static int aq_ndev_close(struct net_device *ndev)
{
  #line 84 
  struct aq_nic_s *aq_nic = netdev_priv(ndev);
  #line 85 
  int err = 0;
  #line 87 
  err = aq_nic_stop(aq_nic);
  #line 88 
  if (err < 0) 
               #line 89 
               goto err_exit;
  #line 90 
  aq_nic_deinit(aq_nic,(_Bool)1);
  #line 92 
  err_exit: 
            #line 92 
  ;
  #line 93 
  return err;
}

#line 96  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_main.c"
static int aq_ndev_start_xmit(struct sk_buff *skb, struct net_device *ndev)
{
  #line 98 
  struct aq_nic_s *aq_nic = netdev_priv(ndev);
  #line 100 
  if ((long)((int)aq_utils_obj_test_0(& aq_nic->flags,33554432U) != 0) != 0L) {
    #line 108 
    ;
    #line 108 
    if ((long)(((int)((struct skb_shared_info *)skb_end_pointer(skb))->tx_flags & 1) != 0) != 0L) 
      #line 108 
      goto _LOR;
    else {
      #line 108 
      int tmp_4;
      #line 108 
      ;
      #line 108 
      if ((long)((unsigned int)ip_hdr(skb)->version == 4U) != 0L) {
        #line 109 
        ;
        #line 109 
        if ((long)((unsigned int)ip_hdr(skb)->protocol == 17U) != 0L) 
          #line 108 
          tmp_4 = 1; else 
                          #line 108 
                          tmp_4 = 0;
      }
      else 
           #line 108 
           tmp_4 = 0;
      #line 108 
      if (tmp_4 != 0) {
        #line 109 
        int tmp_7;
        #line 109 
        ;
        #line 109 
        if ((long)((unsigned int)udp_hdr(skb)->dest == 16129U) != 0L) 
          #line 109 
          tmp_7 = 1;
        else {
          #line 109 
          ;
          #line 109 
          if ((long)((unsigned int)udp_hdr(skb)->dest == 16385U) != 0L) 
            #line 109 
            tmp_7 = 1; else 
                            #line 109 
                            tmp_7 = 0;
        }
        #line 109 
        if (tmp_7 != 0) 
                        #line 108 
                        goto _LOR; else 
                                        #line 108 
                                        goto _LAND;
      }
      else {
        #line 108 
        _LAND: { /* sequence */
                 #line 112 
                 ;
               }
        #line 112 
        if ((long)((unsigned int)eth_hdr(skb)->h_proto == 63368U) != 0L) {
          #line 108 
          _LOR: 
          #line 114 
          return aq_ptp_xmit(aq_nic,skb);
        }
      }
    }
  }
  #line 117 
  skb_tx_timestamp(skb);
  #line 118 
  return aq_nic_xmit(aq_nic,skb);
}

#line 121  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_main.c"
static int aq_ndev_change_mtu(struct net_device *ndev, int new_mtu)
{
  #line 124 
  int err;
  #line 123 
  struct aq_nic_s *aq_nic = netdev_priv(ndev);
  #line 126 
  err = aq_nic_set_mtu(aq_nic,new_mtu + 14);
  #line 128 
  if (err < 0) 
               #line 129 
               goto err_exit;
  #line 130 
  ndev->mtu = (unsigned int)new_mtu;
  #line 132 
  err_exit: 
            #line 132 
  ;
  #line 133 
  return err;
}

#line 136  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_main.c"
static int aq_ndev_set_features(struct net_device *ndev, netdev_features_t features)
{
  #line 143 
  struct aq_nic_cfg_s *aq_cfg;
  #line 139 
  bool is_vlan_tx_insert = (_Bool)((features & 128ULL) != 0ULL);
  #line 140 
  bool is_vlan_rx_strip = (_Bool)((features & 256ULL) != 0ULL);
  #line 141 
  struct aq_nic_s *aq_nic = netdev_priv(ndev);
  #line 142 
  bool need_ndev_restart = (_Bool)0;
  #line 144 
  bool is_lro = (_Bool)0;
  #line 145 
  int err = 0;
  #line 147 
  aq_cfg = aq_nic_get_cfg(aq_nic);
  #line 149 
  if ((features & 137438953472ULL) == 0ULL) 
    #line 150 
    if (((aq_nic->ndev)->features & 137438953472ULL) != 0ULL) {
      #line 151 
      err = aq_clear_rxnfc_all_rules(aq_nic);
      #line 152 
      if ((long)(err != 0) != 0L) 
                                  #line 153 
                                  goto err_exit;
    }
  #line 156 
  if ((features & 512ULL) == 0ULL) 
    #line 157 
    if (((aq_nic->ndev)->features & 512ULL) != 0ULL) {
      #line 158 
      err = aq_filters_vlan_offload_off(aq_nic);
      #line 159 
      if ((long)(err != 0) != 0L) 
                                  #line 160 
                                  goto err_exit;
    }
  #line 164 
  aq_cfg->features = features;
  #line 166 
  if (((aq_cfg->aq_hw_caps)->hw_features & 32768ULL) != 0ULL) {
    #line 167 
    is_lro = (_Bool)((features & 32768ULL) != 0ULL);
    #line 169 
    if ((int)aq_cfg->is_lro != (int)is_lro) {
      #line 170 
      aq_cfg->is_lro = is_lro;
      #line 171 
      need_ndev_restart = (_Bool)1;
    }
  }
  #line 175 
  if ((((aq_nic->ndev)->features ^ features) & 549755813888ULL) != 0ULL) {
    #line 176 
    err = (*((aq_nic->aq_hw_ops)->hw_set_offload))(aq_nic->aq_hw,aq_cfg);
    #line 179 
    if ((long)(err != 0) != 0L) 
                                #line 180 
                                goto err_exit;
  }
  #line 183 
  if ((int)aq_cfg->is_vlan_rx_strip != (int)((unsigned char)is_vlan_rx_strip)) {
    #line 184 
    aq_cfg->is_vlan_rx_strip = (unsigned char)is_vlan_rx_strip;
    #line 185 
    need_ndev_restart = (_Bool)1;
  }
  #line 187 
  if ((int)aq_cfg->is_vlan_tx_insert != (int)((unsigned char)is_vlan_tx_insert)) {
    #line 188 
    aq_cfg->is_vlan_tx_insert = (unsigned char)is_vlan_tx_insert;
    #line 189 
    need_ndev_restart = (_Bool)1;
  }
  #line 192 
  if ((int)need_ndev_restart != 0) {
    #line 192 
    if ((int)netif_running(ndev) != 0) {
      #line 193 
      aq_ndev_close(ndev);
      #line 194 
      aq_ndev_open(ndev);
    }
  }
  #line 197 
  err_exit: 
            #line 197 
  ;
  #line 198 
  return err;
}

#line 201  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_main.c"
static int aq_ndev_set_mac_address(struct net_device *ndev, void *addr)
{
  #line 203 
  struct aq_nic_s *aq_nic = netdev_priv(ndev);
  #line 204 
  int err = 0;
  #line 206 
  err = eth_mac_addr(ndev,addr);
  #line 207 
  if (err < 0) 
               #line 208 
               goto err_exit;
  #line 209 
  err = aq_nic_set_mac(aq_nic,ndev);
  #line 210 
  if (err < 0) 
               #line 211 
               goto err_exit;
  #line 213 
  err_exit: 
            #line 213 
  ;
  #line 214 
  return err;
}

#line 217  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_main.c"
static void aq_ndev_set_multicast_settings(struct net_device *ndev)
{
  #line 219 
  struct aq_nic_s *aq_nic = netdev_priv(ndev);
  #line 221 
  aq_nic_set_multicast_list(aq_nic,ndev);
  #line 222 
  return;
}

#line 224  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_main.c"
static int aq_ndev_config_hwtstamp(struct aq_nic_s *aq_nic, struct hwtstamp_config *config)
{
  #line 227 
  if (config->flags != 0) 
                          #line 228 
                          return -22;
  #line 230 
  switch (config->tx_type) {
    #line 231 
    case 0: 
            #line 231 
    ;
    #line 232 
    case 1: 
            #line 232 
    ;
    #line 233 
    break;
    #line 234 
    default: 
             #line 234 
    ;
    #line 235 
    return -34;
  }
  #line 238 
  switch (config->rx_filter) {
    #line 239 
    case 6: 
            #line 239 
    ;
    #line 240 
    case 7: 
            #line 240 
    ;
    #line 241 
    case 8: 
            #line 241 
    ;
    #line 242 
    case 9: 
            #line 242 
    ;
    #line 243 
    case 10: 
             #line 243 
    ;
    #line 244 
    case 11: 
             #line 244 
    ;
    #line 245 
    case 13: 
             #line 245 
    ;
    #line 246 
    case 14: 
             #line 246 
    ;
    #line 247 
    config->rx_filter = 12;
    #line 248 
    break;
    #line 249 
    case 12: 
             #line 249 
    ;
    #line 250 
    case 0: 
            #line 250 
    ;
    #line 251 
    break;
    #line 252 
    default: 
             #line 252 
    ;
    #line 253 
    return -34;
  }
  #line 256 
  return aq_ptp_hwtstamp_config_set(aq_nic->aq_ptp,config);
}

#line 259  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_main.c"
static int aq_ndev_hwtstamp_set(struct aq_nic_s *aq_nic, struct ifreq *ifr)
{
  #line 261 
  struct hwtstamp_config config;
  #line 262 
  int ret_val;
  #line 275 
  int tmp_1;
  #line 264 
  if (aq_nic->aq_ptp == (struct aq_ptp_s *)0) 
                                              #line 265 
                                              return -95;
  #line 267 
  if (copy_from_user((void *)(& config),ifr->ifr_ifru.ifru_data,12UL) != 0UL) 
    #line 268 
    return -14;
  #line 270 
  ret_val = aq_ndev_config_hwtstamp(aq_nic,& config);
  #line 271 
  if (ret_val != 0) 
                    #line 272 
                    return ret_val;
  #line 275 
  if (copy_to_user(ifr->ifr_ifru.ifru_data,(void *)(& config),12UL) != 0UL) 
    #line 275 
    tmp_1 = -14; else 
                      #line 275 
                      tmp_1 = 0;
  #line 275 
  return tmp_1;
}

#line 278  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_main.c"
static int aq_ndev_hwtstamp_get(struct aq_nic_s *aq_nic, struct ifreq *ifr)
{
  #line 280 
  struct hwtstamp_config config;
  #line 287 
  int tmp_0;
  #line 282 
  if (aq_nic->aq_ptp == (struct aq_ptp_s *)0) 
                                              #line 283 
                                              return -95;
  #line 285 
  aq_ptp_hwtstamp_config_get(aq_nic->aq_ptp,& config);
  #line 287 
  if (copy_to_user(ifr->ifr_ifru.ifru_data,(void *)(& config),12UL) != 0UL) 
    #line 287 
    tmp_0 = -14; else 
                      #line 287 
                      tmp_0 = 0;
  #line 287 
  return tmp_0;
}

#line 290  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_main.c"
static int aq_ndev_ioctl(struct net_device *netdev, struct ifreq *ifr, int cmd)
{
  #line 292 
  struct aq_nic_s *aq_nic = netdev_priv(netdev);
  #line 294 
  switch (cmd) {
    #line 295 
    case 35248: 
                #line 295 
    ;
    #line 296 
    return aq_ndev_hwtstamp_set(aq_nic,ifr);
    #line 298 
    case 35249: 
                #line 298 
    ;
    #line 299 
    return aq_ndev_hwtstamp_get(aq_nic,ifr);
  }
  #line 302 
  return -95;
}

#line 305  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_main.c"
static int aq_ndo_vlan_rx_add_vid(struct net_device *ndev, __be16 proto, u16 vid)
{
  #line 308 
  struct aq_nic_s *aq_nic = netdev_priv(ndev);
  #line 310 
  if ((aq_nic->aq_hw_ops)->hw_filter_vlan_set == (int (*)(struct aq_hw_s *, struct aq_rx_filter_vlan *))0) 
    #line 311 
    return -95;
  #line 313 
  cif_set_bit_0((long)vid,(unsigned long *)(& aq_nic->active_vlans));
  #line 315 
  return aq_filters_vlans_update(aq_nic);
}

#line 318  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_main.c"
static int aq_ndo_vlan_rx_kill_vid(struct net_device *ndev, __be16 proto, u16 vid)
{
  #line 321 
  struct aq_nic_s *aq_nic = netdev_priv(ndev);
  #line 323 
  if ((aq_nic->aq_hw_ops)->hw_filter_vlan_set == (int (*)(struct aq_hw_s *, struct aq_rx_filter_vlan *))0) 
    #line 324 
    return -95;
  #line 326 
  cif_clear_bit_0((long)vid,(unsigned long *)(& aq_nic->active_vlans));
  #line 328 
  if (aq_del_fvlan_by_vlan(aq_nic,(unsigned short)((int)vid)) == -2) {
    #line 329 
    return aq_filters_vlans_update(aq_nic);
  }
  #line 331 
  return 0;
}

#line 334  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_main.c"
static struct net_device_ops aq_ndev_ops = {.ndo_open = & aq_ndev_open, .ndo_stop = & aq_ndev_close, .ndo_start_xmit = (netdev_tx_t (*)(struct sk_buff *, struct net_device *))(& aq_ndev_start_xmit), .ndo_set_rx_mode = & aq_ndev_set_multicast_settings, .ndo_set_mac_address = & aq_ndev_set_mac_address, .ndo_do_ioctl = & aq_ndev_ioctl, .ndo_change_mtu = & aq_ndev_change_mtu, .ndo_vlan_rx_add_vid = & aq_ndo_vlan_rx_add_vid, .ndo_vlan_rx_kill_vid = & aq_ndo_vlan_rx_kill_vid, .ndo_set_features = & aq_ndev_set_features};
#line 347  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_main.c"
static int aq_ndev_init_module(void)
{
  #line 349 
  int ret;
  #line 351 
  aq_ndev_wq = alloc_workqueue((char *)"%s",917514U,1,(char *)(& aq_ndev_driver_name));
  #line 352 
  if (aq_ndev_wq == (struct workqueue_struct *)0) {
    #line 353 
    printk((char *)"\001");
    #line 354 
    return -12;
  }
  #line 357 
  ret = aq_pci_func_register_driver();
  #line 358 
  if (ret != 0) {
    #line 359 
    destroy_workqueue(aq_ndev_wq);
    #line 360 
    return ret;
  }
  #line 363 
  return 0;
}

#line 366  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_main.c"
static void aq_ndev_exit_module(void)
{
  #line 368 
  aq_pci_func_unregister_driver();
  #line 370 
  if (aq_ndev_wq != (struct workqueue_struct *)0) {
    #line 371 
    destroy_workqueue(aq_ndev_wq);
    #line 372 
    aq_ndev_wq = (struct workqueue_struct *)0;
  }
  #line 374 
  return;
}

#line 94  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_main.i.aux"
#line 94 
struct net_device *emg_alloc_etherdev_mqs(int arg0, unsigned int arg1, unsigned int arg2);
#line 100 
#line 100 
_Bool emg_queue_work(struct workqueue_struct *arg0, struct work_struct *arg1);
#line 109  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_main.i.aux"
void emg_aq_ndev_exit_module(void)
{
  #line 110 
  aq_ndev_exit_module();
  #line 111 
  return;
}

#line 113  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_main.i.aux"
int emg_aq_ndev_init_module(void)
{
  #line 114 
  return aq_ndev_init_module();
}

#line 117  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_main.i.aux"
int emg_wrapper_aq_ndev_change_mtu(struct net_device *arg0, int arg1)
{
  #line 118 
  return aq_ndev_change_mtu(arg0,arg1);
}

#line 122  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_main.i.aux"
int emg_wrapper_aq_ndev_close(struct net_device *arg0)
{
  #line 123 
  return aq_ndev_close(arg0);
}

#line 127  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_main.i.aux"
int emg_wrapper_aq_ndev_ioctl(struct net_device *arg0, struct ifreq *arg1, int arg2)
{
  #line 128 
  return aq_ndev_ioctl(arg0,arg1,arg2);
}

#line 132  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_main.i.aux"
int emg_wrapper_aq_ndev_open(struct net_device *arg0)
{
  #line 133 
  return aq_ndev_open(arg0);
}

#line 137  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_main.i.aux"
int emg_wrapper_aq_ndev_set_features(struct net_device *arg0, unsigned long long arg1)
{
  #line 138 
  return aq_ndev_set_features(arg0,arg1);
}

#line 142  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_main.i.aux"
int emg_wrapper_aq_ndev_set_mac_address(struct net_device *arg0, void *arg1)
{
  #line 143 
  return aq_ndev_set_mac_address(arg0,arg1);
}

#line 147  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_main.i.aux"
void emg_wrapper_aq_ndev_set_multicast_settings(struct net_device *arg0)
{
  #line 148 
  aq_ndev_set_multicast_settings(arg0);
  #line 149 
  return;
}

#line 152  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_main.i.aux"
int emg_wrapper_aq_ndev_start_xmit(struct sk_buff *arg0, struct net_device *arg1)
{
  #line 153 
  return aq_ndev_start_xmit(arg0,arg1);
}

#line 157  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_main.i.aux"
int emg_wrapper_aq_ndo_vlan_rx_add_vid(struct net_device *arg0, unsigned short arg1, unsigned short arg2)
{
  #line 158 
  return aq_ndo_vlan_rx_add_vid(arg0,(unsigned short)((int)arg1),
                             (unsigned short)((int)arg2));
}

#line 162  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_main.i.aux"
int emg_wrapper_aq_ndo_vlan_rx_kill_vid(struct net_device *arg0, unsigned short arg1, unsigned short arg2)
{
  #line 163 
  return aq_ndo_vlan_rx_kill_vid(arg0,(unsigned short)((int)arg1),
                              (unsigned short)((int)arg2));
}

#line 182  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_main.i.aux"
static void cif_set_bit_0(long nr, unsigned long *addr)
{
  #line 185 
  ldv_set_bit(nr,addr);
  #line 186 
  return;
}

#line 189  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_main.i.aux"
static void cif_clear_bit_0(long nr, unsigned long *addr)
{
  #line 192 
  ldv_clear_bit(nr,addr);
  #line 193 
  return;
}

#line 366  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_main.i.aux"
static bool cif_queue_work(struct workqueue_struct *wq, struct work_struct *work)
{
  #line 370 
  return emg_queue_work(wq,work);
}

#line 869  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_main.i.aux"
static struct net_device *cif_alloc_etherdev_mqs(int sizeof_priv, unsigned int txqs, unsigned int rxqs)
{
  #line 873 
  return emg_alloc_etherdev_mqs(sizeof_priv,txqs,rxqs);
}

#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/err.h"
#line 213  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_drvinfo.i.aux"
static long PTR_ERR(void *ptr);
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/err.h"
#line 220  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_drvinfo.i.aux"
static bool IS_ERR(void *ptr);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/err.h"
#line 23 
bool ldv_is_err(void *ptr);
#line 26 
#line 26 
long ldv_ptr_err(void *ptr);
#line 411  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/hwmon.h"
#line 411 
struct device *devm_hwmon_device_register_with_info(struct device *, char *, void *, struct hwmon_chip_info *, struct attribute_group **);
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_drvinfo.c"
static int aq_hwmon_read(struct device *dev, enum hwmon_sensor_types type, u32 attr, int channel, long *value)
{
  #line 21 
  int temp;
  #line 22 
  int err;
  #line 20 
  struct aq_nic_s *aq_nic = dev_get_drvdata(dev);
  #line 24 
  if (aq_nic == (struct aq_nic_s *)0) 
                                      #line 25 
                                      return -5;
  #line 27 
  if (type != (unsigned int)hwmon_temp) 
                                        #line 28 
                                        return -95;
  #line 30 
  if ((aq_nic->aq_fw_ops)->get_phy_temp == (int (*)(struct aq_hw_s *, int *))0) 
    #line 31 
    return -95;
  #line 33 
  switch (attr) {
    #line 34 
    case (u32)0: 
                 #line 34 
    ;
    #line 35 
    err = (*((aq_nic->aq_fw_ops)->get_phy_temp))(aq_nic->aq_hw,& temp);
    #line 36 
    *value = (long)temp;
    #line 37 
    return err;
    #line 38 
    default: 
             #line 38 
    ;
    #line 39 
    return -95;
  }
}

#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_drvinfo.c"
static int aq_hwmon_read_string(struct device *dev, enum hwmon_sensor_types type, u32 attr, int channel, char **str)
{
  #line 47 
  struct aq_nic_s *aq_nic = dev_get_drvdata(dev);
  #line 49 
  if (aq_nic == (struct aq_nic_s *)0) 
                                      #line 50 
                                      return -5;
  #line 52 
  if (type != (unsigned int)hwmon_temp) 
                                        #line 53 
                                        return -95;
  #line 55 
  if ((aq_nic->aq_fw_ops)->get_phy_temp == (int (*)(struct aq_hw_s *, int *))0) 
    #line 56 
    return -95;
  #line 58 
  switch (attr) {
    #line 59 
    case (u32)20: 
                  #line 59 
    ;
    #line 60 
    *str = (char *)"PHY Temperature";
    #line 61 
    return 0;
    #line 62 
    default: 
             #line 62 
    ;
    #line 63 
    return -95;
  }
}

#line 67  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_drvinfo.c"
static umode_t aq_hwmon_is_visible(void *data, enum hwmon_sensor_types type, u32 attr, int channel)
{
  #line 71 
  if (type != (unsigned int)hwmon_temp) 
                                        #line 72 
                                        return (unsigned short)0U;
  #line 74 
  switch (attr) {
    #line 75 
    case (u32)0: 
                 #line 75 
    ;
    #line 76 
    case (u32)20: 
                  #line 76 
    ;
    #line 77 
    return (unsigned short)292U;
    #line 78 
    default: 
             #line 78 
    ;
    #line 79 
    return (unsigned short)0U;
  }
}

#line 83  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_drvinfo.c"
static struct hwmon_ops aq_hwmon_ops = {.is_visible = & aq_hwmon_is_visible, .read = & aq_hwmon_read, .read_string = & aq_hwmon_read_string};
#line 89  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_drvinfo.c"
static u32 aq_hwmon_temp_config[2U] = {1048577U};
#line 94  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_drvinfo.c"
static struct hwmon_channel_info aq_hwmon_temp = {.type = hwmon_temp, .config = (u32 *)(& aq_hwmon_temp_config)};
#line 99  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_drvinfo.c"
static struct hwmon_channel_info *aq_hwmon_info[2U] = {& aq_hwmon_temp};
#line 104  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_drvinfo.c"
static struct hwmon_chip_info aq_hwmon_chip_info = {.ops = & aq_hwmon_ops, .info = (struct hwmon_channel_info **)(& aq_hwmon_info)};
#line 109  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_drvinfo.c"
int aq_drvinfo_init(struct net_device *ndev)
{
  #line 113 
  struct device *hwmon_dev;
  #line 111 
  struct aq_nic_s *aq_nic = netdev_priv(ndev);
  #line 112 
  struct device *dev = & (aq_nic->pdev)->dev;
  #line 114 
  int err = 0;
  #line 116 
  hwmon_dev = devm_hwmon_device_register_with_info(dev,(char *)(& ndev->name),(void *)aq_nic,& aq_hwmon_chip_info,(struct attribute_group **)0);
  #line 122 
  if ((int)IS_ERR((void *)hwmon_dev) != 0) {
    #line 123 
    err = (int)PTR_ERR((void *)hwmon_dev);
  }
  #line 125 
  return err;
}

#line 213  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_drvinfo.i.aux"
static long PTR_ERR(void *ptr)
{
  #line 216 
  return ldv_ptr_err(ptr);
}

#line 220  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_drvinfo.i.aux"
static bool IS_ERR(void *ptr)
{
  #line 223 
  return ldv_is_err(ptr);
}

#line 220  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/compiler.h"
__inline static void __write_once_size(void *p, void *res, int size)
{
  #line 222 
  switch (size) {
    #line 223 
    case 1: 
            #line 223 
    ;
    #line 223 
    *((__u8 *)p) = *((__u8 *)res);
    #line 223 
    break;
    #line 224 
    case 2: 
            #line 224 
    ;
    #line 224 
    *((__u16 *)p) = *((__u16 *)res);
    #line 224 
    break;
    #line 225 
    case 4: 
            #line 225 
    ;
    #line 225 
    *((__u32 *)p) = *((__u32 *)res);
    #line 225 
    break;
    #line 226 
    case 8: 
            #line 226 
    ;
    #line 226 
    *((__u64 *)p) = *((__u64 *)res);
    #line 226 
    break;
    #line 227 
    default: 
             #line 227 
    ;
    #line 228 
    ldv_inline_asm();
    #line 229 
    __builtin_memcpy(p,(void const *)res,(unsigned long)size);
    #line 230 
    ldv_inline_asm();
  }
  #line 232 
  return;
}

#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/bitops/instrumented-atomic.h"
#line 129  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_ptp.i.aux"
static void cif_set_bit_1(long nr, unsigned long *addr);
#line 44  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/bitops/instrumented-atomic.h"
#line 136  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_ptp.i.aux"
static void cif_clear_bit_1(long nr, unsigned long *addr);
#line 70  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dynamic_debug.h"
#line 70 
void __dynamic_netdev_dbg(struct _ddebug *, struct net_device *, char * , ...);
#line 472  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernel.h"
#line 472 
int snprintf(char *, size_t, char * , ...);
#line 26  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
#line 143  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_ptp.i.aux"
static void INIT_LIST_HEAD(struct list_head *list);
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/math64.h"
__inline static u64 div_u64_rem(u64 dividend, u32 divisor, u32 *remainder)
{
  #line 26 
  *remainder = (unsigned int)(dividend % (unsigned long long)divisor);
  #line 27 
  return dividend / (unsigned long long)divisor;
}

#line 133  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/time64.h"
__inline static s64 timespec64_to_ns(struct timespec64 *ts)
{
  #line 135 
  return ts->tv_sec * 1000000000LL + (long long)ts->tv_nsec;
}

#line 144 
#line 144 
struct timespec64 ns_to_timespec64(s64);
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/cmpxchg.h"
#line 15 
void __cmpxchg_wrong_size(void);
#line 17 
#line 17 
void __xadd_wrong_size(void);
#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/cmpxchg_64.h"
__inline static int arch_atomic_read_3(atomic_t *v)
{
  #line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/atomic.h"
  union __anonunion___u_4570 __u;
  #line 31 
  __read_once_size((void *)(& v->counter),(void *)(& __u.__c),4);
  #line 31 
  return (__u.__val);
}

#line 41  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/atomic.h"
__inline static void arch_atomic_set(atomic_t *v, int i)
{
  #line 44 
  union __anonunion___u_4572 __u = {.__val = i};
  #line 43 
  __write_once_size((void *)(& v->counter),(void *)(& __u.__c),4);
  #line 43 
  int tmp = __u.__val;
  #line 45 
  return;
}

#line 182  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/atomic.h"
__inline static int arch_atomic_fetch_add(int i, atomic_t *v)
{
  #line 184 
  int __ret;
  #line 184 
  __ret = i;
  #line 184 
  switch (4UL) {
    #line 184 
    case (unsigned long)1: 
                           #line 184 
    ;
    #line 185 
    ldv_inline_asm();
    #line 184 
    break;
    #line 184 
    case (unsigned long)2: 
                           #line 184 
    ;
    #line 185 
    ldv_inline_asm();
    #line 184 
    break;
    #line 184 
    case (unsigned long)4: 
                           #line 184 
    ;
    #line 185 
    ldv_inline_asm();
    #line 184 
    break;
    #line 184 
    case (unsigned long)8: 
                           #line 184 
    ;
    #line 185 
    ldv_inline_asm();
    #line 184 
    break;
    #line 184 
    default: 
             #line 184 
    ;
    #line 184 
    __xadd_wrong_size();
  }
  #line 184 
  return __ret;
}

#line 192  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/atomic.h"
__inline static int arch_atomic_cmpxchg(atomic_t *v, int old, int new)
{
  #line 194 
  int __ret;
  {
    #line 194 
    int __old = old;
    #line 194 
    int __new = new;
    #line 194 
    switch (4UL) {
      #line 194 
      case (unsigned long)1: 
                             #line 194 
      ;
      {
        #line 194 
        u8 *__ptr = (u8 *)(& v->counter);
        #line 195 
        ldv_inline_asm();
        #line 194 
        break;
      }
      #line 194 
      case (unsigned long)2: 
                             #line 194 
      ;
      {
        #line 194 
        u16 *__ptr_0 = (u16 *)(& v->counter);
        #line 195 
        ldv_inline_asm();
        #line 194 
        break;
      }
      #line 194 
      case (unsigned long)4: 
                             #line 194 
      ;
      {
        #line 194 
        u32 *__ptr_1 = (u32 *)(& v->counter);
        #line 195 
        ldv_inline_asm();
        #line 194 
        break;
      }
      #line 194 
      case (unsigned long)8: 
                             #line 194 
      ;
      {
        #line 194 
        u64 *__ptr_2 = (u64 *)(& v->counter);
        #line 195 
        ldv_inline_asm();
        #line 194 
        break;
      }
      #line 194 
      default: 
               #line 194 
      ;
      #line 194 
      __cmpxchg_wrong_size();
    }
    }
  #line 194 
  return __ret;
}

#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/atomic-instrumented.h"
__inline static int atomic_read_3(atomic_t *v)
{
  #line 26 
  kasan_check_read((void *)v,4U);
  #line 27 
  return arch_atomic_read_3(v);
}

#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/atomic-instrumented.h"
__inline static void atomic_set(atomic_t *v, int i)
{
  #line 44 
  kasan_check_read((void *)v,4U);
  #line 45 
  arch_atomic_set(v,i);
  #line 46 
  return;
}

#line 109  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/atomic-instrumented.h"
__inline static int atomic_fetch_add(int i, atomic_t *v)
{
  #line 111 
  kasan_check_read((void *)v,4U);
  #line 112 
  return arch_atomic_fetch_add(i,v);
}

#line 651  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/atomic-instrumented.h"
__inline static int atomic_cmpxchg(atomic_t *v, int old, int new)
{
  #line 653 
  kasan_check_read((void *)v,4U);
  #line 654 
  return arch_atomic_cmpxchg(v,old,new);
}

#line 39  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cpumask.h"
#line 39 
extern unsigned int nr_cpu_ids;
#line 134  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cpumask.h"
__inline static void cpu_max_bits_warn(unsigned int cpu, unsigned int bits)
{
  #line 137 
  int __ret_warn_on = cpu >= bits;
  #line 137 
  if ((long)(__ret_warn_on != 0) != 0L) {
    #line 138 
    ldv_inline_asm();
    #line 139 
    ldv_inline_asm();
  }
  #line 137 
  long tmp = (long)(__ret_warn_on != 0);
  #line 139 
  return;
}

#line 142  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cpumask.h"
__inline static unsigned int cpumask_check(unsigned int cpu)
{
  #line 144 
  cpu_max_bits_warn(cpu,nr_cpu_ids);
  #line 145 
  return cpu;
}

#line 325  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cpumask.h"
__inline static void cpumask_set_cpu(unsigned int cpu, struct cpumask *dstp)
{
  #line 327 
  ;
  #line 327 
  cif_set_bit_1((long)cpumask_check(cpu),(unsigned long *)(& dstp->bits));
  #line 328 
  return;
}

#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/err.h"
#line 220  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_ptp.i.aux"
static long PTR_ERR_0(void *ptr);
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/err.h"
#line 227  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_ptp.i.aux"
static bool IS_ERR_0(void *ptr);
#line 302  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockdep.h"
#line 302 
void lockdep_init_map(struct lockdep_map *, char *, struct lock_class_key *, int);
#line 95  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
#line 95 
void __raw_spin_lock_init(raw_spinlock_t *, char *, struct lock_class_key *);
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_api_smp.h"
#line 43 
void _raw_spin_unlock_irqrestore(raw_spinlock_t *, unsigned long);
#line 325  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
__inline static raw_spinlock_t *spinlock_check(spinlock_t *lock)
{
  #line 327 
  return & lock->__anonCompField_spinlock_25.rlock;
}

#line 391  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
static void spin_unlock_irqrestore(spinlock_t *lock, unsigned long flags)
{
  {
    #line 393 
    unsigned long __dummy;
    #line 393 
    unsigned long __dummy2;
    }
  #line 393 
  _raw_spin_unlock_irqrestore(& lock->__anonCompField_spinlock_25.rlock,flags);
  #line 395 
  return;
}

#line 395 
#line 691  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_ptp.i.aux"
static void cif_spin_unlock_irqrestore_lock_of_ptp_skb_ring(spinlock_t *lock, unsigned long flags);
#line 395  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
#line 709  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_ptp.i.aux"
static void cif_spin_unlock_irqrestore_lock_of_ptp_tx_timeout(spinlock_t *lock, unsigned long flags);
#line 395  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
#line 741  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_ptp.i.aux"
static void cif_spin_unlock_irqrestore_ptp_lock_of_aq_ptp_s(spinlock_t *lock, unsigned long flags);
#line 395  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
#line 767  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_ptp.i.aux"
static void cif_spin_unlock_irqrestore_ptp_ring_lock_of_aq_ptp_s(spinlock_t *lock, unsigned long flags);
#line 26 
#line 718 
static void cif_mutex_lock_fwreq_mutex_of_aq_nic_s(struct mutex *lock);
#line 29 
#line 29 
void ldv_mutex_model_lock(struct mutex *, char *);
#line 31 
#line 31 
void ldv_mutex_model_unlock(struct mutex *, char *);
#line 33 
#line 33 
void __ldv_spin_lock(spinlock_t *);
#line 35 
#line 682 
static void cif___ldv_spin_lock_lock_of_ptp_skb_ring(spinlock_t *lock);
#line 35 
#line 700 
static void cif___ldv_spin_lock_lock_of_ptp_tx_timeout(spinlock_t *lock);
#line 35 
#line 732 
static void cif___ldv_spin_lock_ptp_lock_of_aq_ptp_s(spinlock_t *lock);
#line 35 
#line 758 
static void cif___ldv_spin_lock_ptp_ring_lock_of_aq_ptp_s(spinlock_t *lock);
#line 40 
#line 40 
void ldv_spin_model_lock(char *);
#line 41 
#line 41 
void ldv_spin_model_unlock(char *);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/list.h"
#line 23 
void ldv_init_list_head(struct list_head *list);
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 24 
void *ldv_kmalloc(size_t size, gfp_t flags);
#line 185  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mutex.h"
#line 725  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_ptp.i.aux"
static void cif_mutex_unlock_fwreq_mutex_of_aq_nic_s(struct mutex *lock);
#line 81  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jiffies.h"
#line 81 
extern unsigned long jiffies;
#line 302 
#line 302 
unsigned long __msecs_to_jiffies(unsigned int);
#line 309  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jiffies.h"
__inline static unsigned long _msecs_to_jiffies(unsigned int m)
{
  #line 311 
  return (unsigned long)(((long)m + 3L) / 4L);
}

#line 364  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jiffies.h"
__inline static unsigned long msecs_to_jiffies(unsigned int m)
{
  #line 366 
  if (0 != 0) {
    #line 367 
    if ((int)m < 0) 
                    #line 368 
                    return 4611686018427387902UL;
    #line 369 
    return _msecs_to_jiffies(m);
  }
  else {
    #line 371 
    return __msecs_to_jiffies(m);
  }
}

#line 265  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ktime.h"
__inline static ktime_t ns_to_ktime(u64 ns)
{
  #line 267 
  return (long long)ns;
}

#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timekeeping.h"
#line 43 
void ktime_get_real_ts64(struct timespec64 *);
#line 90  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
#line 90 
void init_timer_key(struct timer_list *, void (*)(struct timer_list *), unsigned int, char *, struct lock_class_key *);
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/workqueue.h"
#line 22 
void delayed_work_timer_fn(struct timer_list *);
#line 158  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/workqueue.h"
__inline static struct delayed_work *to_delayed_work(struct work_struct *work)
{
  #line 160 
  void *__mptr;
  #line 160 
  __mptr = (void *)work;
  #line 160 
  return ((struct delayed_work *)__mptr);
}

#line 207 
#line 207 
void __init_work(struct work_struct *, int);
#line 466 
#line 466 
bool cancel_delayed_work_sync(struct delayed_work *);
#line 612 
#line 750  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_ptp.i.aux"
static bool cif_schedule_delayed_work(struct delayed_work *dwork, unsigned long delay);
#line 114  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/refcount.h"
#line 114 
void refcount_warn_saturate(refcount_t *, enum refcount_saturation_type);
#line 186  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/refcount.h"
__inline static void refcount_add(int i, refcount_t *r)
{
  #line 188 
  int old = atomic_fetch_add(i,& r->refs);
  #line 190 
  if ((long)(old == 0) != 0L) 
                              #line 191 
                              refcount_warn_saturate(r,(enum refcount_saturation_type)REFCOUNT_ADD_UAF);
  else 
    #line 192 
    if ((long)(old < 0) != 0L || (long)(old + i < 0) != 0L) 
                                                            #line 193 
                                                            refcount_warn_saturate(r,(enum refcount_saturation_type)REFCOUNT_ADD_OVF);
  #line 194 
  return;
}

#line 226  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/refcount.h"
__inline static void refcount_inc(refcount_t *r)
{
  #line 228 
  refcount_add(1,r);
  #line 229 
  return;
}

#line 186  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ptp_clock_kernel.h"
#line 186 
struct ptp_clock *ptp_clock_register(struct ptp_clock_info *, struct device *);
#line 195 
#line 195 
int ptp_clock_unregister(struct ptp_clock *);
#line 204 
#line 204 
void ptp_clock_event(struct ptp_clock *, struct ptp_clock_event *);
#line 221 
#line 221 
s32 scaled_ppm_to_ppb(long);
#line 542  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/slab.h"
#line 468  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_ptp.i.aux"
static void *kmalloc(size_t size, gfp_t flags);
#line 607  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/slab.h"
#line 482  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_ptp.i.aux"
static void *kcalloc_0(size_t n, size_t size, gfp_t flags);
#line 668  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/slab.h"
#line 503  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_ptp.i.aux"
static void *kzalloc_0(size_t size, gfp_t flags);
#line 1405  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static struct skb_shared_hwtstamps *skb_hwtstamps(struct sk_buff *skb)
{
  #line 1407 
  return & ((struct skb_shared_info *)skb_end_pointer(skb))->hwtstamps;
}

#line 1580  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static struct sk_buff *skb_get(struct sk_buff *skb)
{
  #line 1582 
  refcount_inc(& skb->users);
  #line 1583 
  return skb;
}

#line 162  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/interrupt.h"
#line 776  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_ptp.i.aux"
static int cif_request_irq_0(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char *name, void *dev);
#line 189  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/interrupt.h"
#line 784  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_ptp.i.aux"
static void *cif_free_irq_0(unsigned int ldv_func_arg1, void *ldv_func_arg2);
#line 423  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
#line 423 
void __napi_schedule(struct napi_struct *);
#line 431 
#line 431 
bool napi_schedule_prep(struct napi_struct *);
#line 440  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
__inline static void napi_schedule(struct napi_struct *n)
{
  #line 442 
  if ((int)napi_schedule_prep(n) != 0) 
                                       #line 443 
                                       __napi_schedule(n);
  #line 444 
  return;
}

#line 468 
#line 468 
bool napi_complete_done(struct napi_struct *, int);
#line 503 
#line 503 
void napi_disable(struct napi_struct *);
#line 512  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
__inline static void napi_enable(struct napi_struct *n)
{
  #line 514 
  int tmp_0;
  #line 514 
  if (test_bit(0L,& n->state)) 
                               #line 514 
                               tmp_0 = 0; else 
                                               #line 514 
                                               tmp_0 = 1;
  #line 514 
  if ((long)tmp_0 != 0L) {
    #line 515 
    ldv_inline_asm();
    #line 516 
    ldv_inline_asm();
    #line 517 
    ldv_inline_asm();
    #line 514 
    ;
  }
  #line 516 
  cif_clear_bit_1(0L,& n->state);
  #line 517 
  cif_clear_bit_1(3L,& n->state);
  #line 518 
  return;
}

#line 2234 
#line 2234 
void netif_napi_add(struct net_device *, struct napi_struct *, int (*)(struct napi_struct *, int ), int);
#line 2263 
#line 2263 
void netif_napi_del(struct napi_struct *);
#line 4750 
#line 4750 
void netdev_err(struct net_device *, char * , ...);
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_utils.h"
__inline static void aq_utils_obj_set(atomic_t *flags, u32 mask)
{
  #line 16 
  unsigned long flags_old;
  #line 16 
  unsigned long flags_new;
  #line 18 
  while (1) {
    {
      #line 19 
      flags_old = (unsigned long)atomic_read_3(flags);
      #line 20 
      flags_new = (unsigned long)mask | flags_old;
    }
    #line 21 
    ;
    #line 21 
    if (! ((unsigned long)atomic_cmpxchg(flags,(int)flags_old,(int)flags_new) != flags_old)) 
      #line 18 
      break;
  }
  #line 22 
  return;
}

#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_utils.h"
__inline static void aq_utils_obj_clear(atomic_t *flags, u32 mask)
{
  #line 26 
  unsigned long flags_old;
  #line 26 
  unsigned long flags_new;
  #line 28 
  while (1) {
    {
      #line 29 
      flags_old = (unsigned long)atomic_read_3(flags);
      #line 30 
      flags_new = (unsigned long)(~ mask) & flags_old;
    }
    #line 31 
    ;
    #line 31 
    if (! ((unsigned long)atomic_cmpxchg(flags,(int)flags_old,(int)flags_new) != flags_old)) 
      #line 28 
      break;
  }
  #line 32 
  return;
}

#line 567  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.h"
#line 567 
void hw_atl_utils_mpi_read_stats(struct aq_hw_s *self, struct hw_atl_utils_mbox *pmbox);
#line 152  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_nic.h"
#line 152 
unsigned int aq_nic_map_skb(struct aq_nic_s *self, struct sk_buff *skb, struct aq_ring_s *ring);
#line 177 
#line 177 
u8 aq_nic_reserve_filter(struct aq_nic_s *self, enum aq_rx_filter_type type);
#line 178 
#line 178 
void aq_nic_release_filter(struct aq_nic_s *self, enum aq_rx_filter_type type, u32 location);
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.h"
#line 1170  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.c"
int aq_ptp_init(struct aq_nic_s *aq_nic, unsigned int idx_vec);
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.h"
#line 1251  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.c"
void aq_ptp_unregister(struct aq_nic_s *aq_nic);
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.h"
#line 1261  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.c"
void aq_ptp_free(struct aq_nic_s *aq_nic);
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.h"
#line 803  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.c"
int aq_ptp_irq_alloc(struct aq_nic_s *aq_nic);
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.h"
#line 824  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.c"
void aq_ptp_irq_free(struct aq_nic_s *aq_nic);
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.h"
#line 948  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.c"
int aq_ptp_ring_alloc(struct aq_nic_s *aq_nic);
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.h"
#line 1021  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.c"
void aq_ptp_ring_free(struct aq_nic_s *aq_nic);
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.h"
#line 835  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.c"
int aq_ptp_ring_init(struct aq_nic_s *aq_nic);
#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.h"
#line 891  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.c"
int aq_ptp_ring_start(struct aq_nic_s *aq_nic);
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.h"
#line 918  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.c"
void aq_ptp_ring_stop(struct aq_nic_s *aq_nic);
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.h"
#line 933  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.c"
void aq_ptp_ring_deinit(struct aq_nic_s *aq_nic);
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.h"
#line 793  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.c"
void aq_ptp_service_task(struct aq_nic_s *aq_nic);
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.h"
#line 90  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.c"
void aq_ptp_tm_offset_set(struct aq_nic_s *aq_nic, unsigned int mbps);
#line 36  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.h"
#line 1159  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.c"
void aq_ptp_clock_init(struct aq_nic_s *aq_nic);
#line 54  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.h"
#line 1285  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.c"
struct ptp_clock *aq_ptp_get_ptp_clock(struct aq_ptp_s *aq_ptp);
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.h"
#line 1312  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.c"
int aq_ptp_link_change(struct aq_nic_s *aq_nic);
#line 88  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.c"
static struct ptp_tm_offset ptp_offset[6U];
#line 90  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.c"
void aq_ptp_tm_offset_set(struct aq_nic_s *aq_nic, unsigned int mbps)
{
  #line 93 
  int i;
  #line 93 
  int egress;
  #line 93 
  int ingress;
  #line 92 
  struct aq_ptp_s *aq_ptp = aq_nic->aq_ptp;
  #line 95 
  if (aq_ptp == (struct aq_ptp_s *)0) 
                                      #line 96 
                                      return;
  #line 98 
  egress = 0;
  #line 99 
  ingress = 0;
  #line 101 
  i = 0;
  #line 101 
  while ((unsigned int)i <= 5U) {
    #line 102 
    if (ptp_offset[i].mbps == mbps) {
      #line 103 
      egress = ptp_offset[i].egress;
      #line 104 
      ingress = ptp_offset[i].ingress;
      #line 105 
      break;
    }
    #line 101 
    i ++;
  }
  #line 109 
  atomic_set(& aq_ptp->offset_egress,egress);
  #line 110 
  atomic_set(& aq_ptp->offset_ingress,ingress);
  #line 111 
  return;
}

#line 113  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.c"
static int __aq_ptp_skb_put(struct ptp_skb_ring *ring, struct sk_buff *skb)
{
  #line 115 
  unsigned int next_head = (ring->head + 1U) % ring->size;
  #line 117 
  if (ring->tail == next_head) 
                               #line 118 
                               return -12;
  #line 120 
  *(ring->buff + (unsigned long)ring->head) = skb_get(skb);
  #line 121 
  ring->head = next_head;
  #line 123 
  return 0;
}

#line 126  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.c"
static int aq_ptp_skb_put(struct ptp_skb_ring *ring, struct sk_buff *skb)
{
  #line 128 
  unsigned long flags;
  #line 129 
  int ret;
  #line 131 
  cif___ldv_spin_lock_lock_of_ptp_skb_ring(& ring->lock);
  #line 132 
  ret = __aq_ptp_skb_put(ring,skb);
  #line 133 
  cif_spin_unlock_irqrestore_lock_of_ptp_skb_ring(& ring->lock,flags);
  #line 135 
  return ret;
}

#line 138  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.c"
static struct sk_buff *__aq_ptp_skb_get(struct ptp_skb_ring *ring)
{
  #line 140 
  struct sk_buff *skb;
  #line 142 
  if (ring->tail == ring->head) 
                                #line 143 
                                return (struct sk_buff *)0;
  #line 145 
  skb = *(ring->buff + (unsigned long)ring->tail);
  #line 146 
  ring->tail = (ring->tail + 1U) % ring->size;
  #line 148 
  return skb;
}

#line 151  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.c"
static struct sk_buff *aq_ptp_skb_get(struct ptp_skb_ring *ring)
{
  #line 153 
  unsigned long flags;
  #line 154 
  struct sk_buff *skb;
  #line 156 
  cif___ldv_spin_lock_lock_of_ptp_skb_ring(& ring->lock);
  #line 157 
  skb = __aq_ptp_skb_get(ring);
  #line 158 
  cif_spin_unlock_irqrestore_lock_of_ptp_skb_ring(& ring->lock,flags);
  #line 160 
  return skb;
}

#line 163  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.c"
static unsigned int aq_ptp_skb_buf_len(struct ptp_skb_ring *ring)
{
  #line 165 
  unsigned long flags;
  #line 166 
  unsigned int len;
  #line 168 
  cif___ldv_spin_lock_lock_of_ptp_skb_ring(& ring->lock);
  #line 169 
  if (ring->head >= ring->tail) 
                                #line 169 
                                len = ring->head - ring->tail; else 
                                                                    #line 169 
                                                                    len = (ring->size - ring->tail) + ring->head;
  #line 172 
  cif_spin_unlock_irqrestore_lock_of_ptp_skb_ring(& ring->lock,flags);
  #line 174 
  return len;
}

#line 177  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.c"
static int aq_ptp_skb_ring_init(struct ptp_skb_ring *ring, unsigned int size)
{
  #line 179 
  struct sk_buff **buff = kmalloc((unsigned long)size * 8UL,3264U);
  #line 181 
  if (buff == (struct sk_buff **)0) 
                                    #line 182 
                                    return -12;
  #line 184 
  spinlock_check(& ring->lock);
  {
    #line 184 
    struct lock_class_key __key;
    #line 184 
    __raw_spin_lock_init(& ring->lock.__anonCompField_spinlock_25.rlock,(char *)"&(&ring->lock)->rlock",& __key);
  }
  #line 186 
  ring->buff = buff;
  #line 187 
  ring->size = size;
  #line 188 
  ring->head = 0U;
  #line 189 
  ring->tail = 0U;
  #line 191 
  return 0;
}

#line 194  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.c"
static void aq_ptp_skb_ring_clean(struct ptp_skb_ring *ring)
{
  #line 196 
  struct sk_buff *skb;
  #line 198 
  while (1) {
    #line 198 
    skb = aq_ptp_skb_get(ring);
    #line 198 
    if (! (skb != (struct sk_buff *)0)) 
                                        #line 198 
                                        break;
    #line 199 
    dev_kfree_skb_any(skb);
  }
  #line 200 
  return;
}

#line 202  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.c"
static void aq_ptp_skb_ring_release(struct ptp_skb_ring *ring)
{
  #line 204 
  if (ring->buff != (struct sk_buff **)0) {
    #line 205 
    aq_ptp_skb_ring_clean(ring);
    #line 206 
    kfree((void *)ring->buff);
    #line 207 
    ring->buff = (struct sk_buff **)0;
  }
  #line 209 
  return;
}

#line 211  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.c"
static void aq_ptp_tx_timeout_init(struct ptp_tx_timeout *timeout)
{
  #line 213 
  spinlock_check(& timeout->lock);
  {
    #line 213 
    struct lock_class_key __key;
    #line 213 
    __raw_spin_lock_init(& timeout->lock.__anonCompField_spinlock_25.rlock,(char *)"&(&timeout->lock)->rlock",& __key);
  }
  #line 214 
  timeout->active = (_Bool)0;
  #line 215 
  return;
}

#line 217  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.c"
static void aq_ptp_tx_timeout_start(struct aq_ptp_s *aq_ptp)
{
  #line 220 
  unsigned long flags;
  #line 219 
  struct ptp_tx_timeout *timeout = & aq_ptp->ptp_tx_timeout;
  #line 222 
  cif___ldv_spin_lock_lock_of_ptp_tx_timeout(& timeout->lock);
  #line 223 
  timeout->active = (_Bool)1;
  #line 224 
  timeout->tx_start = jiffies;
  #line 225 
  cif_spin_unlock_irqrestore_lock_of_ptp_tx_timeout(& timeout->lock,flags);
  #line 226 
  return;
}

#line 228  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.c"
static void aq_ptp_tx_timeout_update(struct aq_ptp_s *aq_ptp)
{
  #line 230 
  if (aq_ptp_skb_buf_len(& aq_ptp->skb_ring) == 0U) {
    #line 232 
    unsigned long flags;
    #line 231 
    struct ptp_tx_timeout *timeout = & aq_ptp->ptp_tx_timeout;
    #line 234 
    cif___ldv_spin_lock_lock_of_ptp_tx_timeout(& timeout->lock);
    #line 235 
    timeout->active = (_Bool)0;
    #line 236 
    cif_spin_unlock_irqrestore_lock_of_ptp_tx_timeout(& timeout->lock,flags);
  }
  #line 238 
  return;
}

#line 240  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.c"
static void aq_ptp_tx_timeout_check(struct aq_ptp_s *aq_ptp)
{
  #line 243 
  unsigned long flags;
  #line 244 
  bool timeout_flag;
  #line 242 
  struct ptp_tx_timeout *timeout = & aq_ptp->ptp_tx_timeout;
  #line 246 
  timeout_flag = (_Bool)0;
  #line 248 
  cif___ldv_spin_lock_lock_of_ptp_tx_timeout(& timeout->lock);
  #line 249 
  if ((int)timeout->active != 0) {
    #line 250 
    int tmp_1;
    {
      #line 250 
      unsigned long __dummy;
      #line 250 
      unsigned long __dummy2;
      }
    #line 250 
    if (1 != 0) {
      {
        #line 250 
        unsigned long __dummy_0;
        #line 250 
        unsigned long __dummy2_0;
        }
      #line 250 
      if (1 != 0) 
        #line 250 
        if ((long)((timeout->tx_start - jiffies) + 2500UL) < 0L) 
                                                                 #line 250 
                                                                 tmp_1 = 1; else 
                                                                    #line 250 
                                                                    tmp_1 = 0;
      else 
           #line 250 
           tmp_1 = 0;
    }
    else 
         #line 250 
         tmp_1 = 0;
    #line 250 
    timeout_flag = (_Bool)(tmp_1 != 0);
    #line 253 
    if ((int)timeout_flag != 0) 
                                #line 254 
                                timeout->active = (_Bool)0;
  }
  #line 256 
  cif_spin_unlock_irqrestore_lock_of_ptp_tx_timeout(& timeout->lock,flags);
  #line 258 
  if ((int)timeout_flag != 0) {
    #line 259 
    aq_ptp_skb_ring_clean(& aq_ptp->skb_ring);
    #line 260 
    netdev_err((aq_ptp->aq_nic)->ndev,(char *)"PTP Timeout. Clearing Tx Timestamp SKBs\n");
  }
  #line 263 
  return;
}

#line 272  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.c"
static int aq_ptp_adjfine(struct ptp_clock_info *ptp, long scaled_ppm)
{
  #line 274 
  void *__mptr;
  #line 274 
  __mptr = (void *)ptp;
  #line 274 
  struct aq_ptp_s *aq_ptp = ((struct aq_ptp_s *)(__mptr + 18446744073709551440U));
  #line 275 
  struct aq_nic_s *aq_nic = aq_ptp->aq_nic;
  #line 277 
  cif_mutex_lock_fwreq_mutex_of_aq_nic_s(& aq_nic->fwreq_mutex);
  #line 278 
  ;
  #line 278 
  (*((aq_nic->aq_hw_ops)->hw_adj_clock_freq))(aq_nic->aq_hw,scaled_ppm_to_ppb(scaled_ppm));
  #line 280 
  cif_mutex_unlock_fwreq_mutex_of_aq_nic_s(& aq_nic->fwreq_mutex);
  #line 282 
  return 0;
}

#line 291  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.c"
static int aq_ptp_adjtime(struct ptp_clock_info *ptp, s64 delta)
{
  #line 293 
  void *__mptr;
  #line 295 
  unsigned long flags;
  #line 293 
  __mptr = (void *)ptp;
  #line 293 
  struct aq_ptp_s *aq_ptp = ((struct aq_ptp_s *)(__mptr + 18446744073709551440U));
  #line 294 
  struct aq_nic_s *aq_nic = aq_ptp->aq_nic;
  #line 297 
  cif___ldv_spin_lock_ptp_lock_of_aq_ptp_s(& aq_ptp->ptp_lock);
  #line 298 
  (*((aq_nic->aq_hw_ops)->hw_adj_sys_clock))(aq_nic->aq_hw,delta);
  #line 299 
  cif_spin_unlock_irqrestore_ptp_lock_of_aq_ptp_s(& aq_ptp->ptp_lock,flags);
  #line 301 
  return 0;
}

#line 311  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.c"
static int aq_ptp_gettime(struct ptp_clock_info *ptp, struct timespec64 *ts)
{
  #line 313 
  void *__mptr;
  #line 315 
  unsigned long flags;
  #line 316 
  u64 ns;
  #line 313 
  __mptr = (void *)ptp;
  #line 313 
  struct aq_ptp_s *aq_ptp = ((struct aq_ptp_s *)(__mptr + 18446744073709551440U));
  #line 314 
  struct aq_nic_s *aq_nic = aq_ptp->aq_nic;
  #line 318 
  cif___ldv_spin_lock_ptp_lock_of_aq_ptp_s(& aq_ptp->ptp_lock);
  #line 319 
  (*((aq_nic->aq_hw_ops)->hw_get_ptp_ts))(aq_nic->aq_hw,& ns);
  #line 320 
  cif_spin_unlock_irqrestore_ptp_lock_of_aq_ptp_s(& aq_ptp->ptp_lock,flags);
  #line 322 
  *ts = ns_to_timespec64((long long)ns);
  #line 324 
  return 0;
}

#line 334  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.c"
static int aq_ptp_settime(struct ptp_clock_info *ptp, struct timespec64 *ts)
{
  #line 337 
  void *__mptr;
  #line 339 
  unsigned long flags;
  #line 341 
  u64 now;
  #line 337 
  __mptr = (void *)ptp;
  #line 337 
  struct aq_ptp_s *aq_ptp = ((struct aq_ptp_s *)(__mptr + 18446744073709551440U));
  #line 338 
  struct aq_nic_s *aq_nic = aq_ptp->aq_nic;
  #line 340 
  u64 ns = (unsigned long long)timespec64_to_ns(ts);
  #line 343 
  cif___ldv_spin_lock_ptp_lock_of_aq_ptp_s(& aq_ptp->ptp_lock);
  #line 344 
  (*((aq_nic->aq_hw_ops)->hw_get_ptp_ts))(aq_nic->aq_hw,& now);
  #line 345 
  (*((aq_nic->aq_hw_ops)->hw_adj_sys_clock))(aq_nic->aq_hw,(long long)ns - (long long)now);
  #line 347 
  cif_spin_unlock_irqrestore_ptp_lock_of_aq_ptp_s(& aq_ptp->ptp_lock,flags);
  #line 349 
  return 0;
}

#line 352  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.c"
static void aq_ptp_convert_to_hwtstamp(struct aq_ptp_s *aq_ptp, struct skb_shared_hwtstamps *hwtstamp, u64 timestamp)
{
  #line 356 
  memset((void *)hwtstamp,0,8UL);
  #line 357 
  hwtstamp->hwtstamp = ns_to_ktime(timestamp);
  #line 358 
  return;
}

#line 360  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.c"
static int aq_ptp_hw_pin_conf(struct aq_nic_s *aq_nic, u32 pin_index, u64 start, u64 period)
{
  #line 363 
  if (period != 0ULL) {
    #line 364 
    bool branch;
    #line 364 
    struct _ddebug __UNIQUE_ID_ddebug441 = {.modname = (char *)"atlantic", .function = (char *)"aq_ptp_hw_pin_conf", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.c", .format = (char *)"Enable GPIO %d pulsing, start time %llu, period %u\n", .lineno = (unsigned int)364U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
    #line 364 
    branch = arch_static_branch(& __UNIQUE_ID_ddebug441.key.dd_key_false.key,(_Bool)0);
    #line 364 
    if ((long)((long)((int)branch != 0)) != 0L) 
                                                #line 364 
                                                __dynamic_netdev_dbg(& __UNIQUE_ID_ddebug441,aq_nic->ndev,(char *)"Enable GPIO %d pulsing, start time %llu, period %u\n",pin_index,start,(unsigned int)period);
  }
  else {
    #line 368 
    bool branch_0;
    #line 368 
    struct _ddebug __UNIQUE_ID_ddebug442 = {.modname = (char *)"atlantic", .function = (char *)"aq_ptp_hw_pin_conf", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.c", .format = (char *)"Disable GPIO %d pulsing, start time %llu, period %u\n", .lineno = (unsigned int)368U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
    #line 368 
    branch_0 = arch_static_branch(& __UNIQUE_ID_ddebug442.key.dd_key_false.key,(_Bool)0);
    #line 368 
    if ((long)((long)((int)branch_0 != 0)) != 0L) 
                                                  #line 368 
                                                  __dynamic_netdev_dbg(& __UNIQUE_ID_ddebug442,aq_nic->ndev,(char *)"Disable GPIO %d pulsing, start time %llu, period %u\n",pin_index,start,(unsigned int)period);
  }
  #line 375 
  cif_mutex_lock_fwreq_mutex_of_aq_nic_s(& aq_nic->fwreq_mutex);
  #line 376 
  (*((aq_nic->aq_hw_ops)->hw_gpio_pulse))(aq_nic->aq_hw,pin_index,start,(unsigned int)period);
  #line 378 
  cif_mutex_unlock_fwreq_mutex_of_aq_nic_s(& aq_nic->fwreq_mutex);
  #line 380 
  return 0;
}

#line 383  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.c"
static int aq_ptp_perout_pin_configure(struct ptp_clock_info *ptp, struct ptp_clock_request *rq, int on)
{
  #line 386 
  void *__mptr;
  #line 390 
  u64 start;
  #line 390 
  u64 period;
  #line 386 
  __mptr = (void *)ptp;
  #line 386 
  struct aq_ptp_s *aq_ptp = ((struct aq_ptp_s *)(__mptr + 18446744073709551440U));
  #line 387 
  struct ptp_clock_time *t = & rq->__anonCompField_ptp_clock_request_56.perout.period;
  #line 388 
  struct ptp_clock_time *s = & rq->__anonCompField_ptp_clock_request_56.perout.start;
  #line 389 
  struct aq_nic_s *aq_nic = aq_ptp->aq_nic;
  #line 391 
  u32 pin_index = rq->__anonCompField_ptp_clock_request_56.perout.index;
  #line 394 
  if ((unsigned int)ptp->n_per_out <= pin_index) 
                                                 #line 395 
                                                 return -22;
  #line 400 
  if (t->sec > (__s64)4U) 
                          #line 401 
                          return -34;
  #line 406 
  if (on != 0) 
               #line 406 
               period = (unsigned long long)(t->sec * 1000000000LL + (long long)t->nsec); else 
                                                                    #line 406 
                                                                    period = 0ULL;
  #line 409 
  if (period > 4294967295ULL) 
                              #line 410 
                              return -34;
  #line 413 
  if (on != 0) 
               #line 413 
               start = (unsigned long long)(s->sec * 1000000000LL + (long long)s->nsec); else 
                                                                    #line 413 
                                                                    start = 0ULL;
  #line 415 
  aq_ptp_hw_pin_conf(aq_nic,pin_index,start,period);
  #line 417 
  return 0;
}

#line 420  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.c"
static int aq_ptp_pps_pin_configure(struct ptp_clock_info *ptp, struct ptp_clock_request *rq, int on)
{
  #line 423 
  void *__mptr;
  #line 425 
  u64 start;
  #line 425 
  u64 period;
  #line 423 
  __mptr = (void *)ptp;
  #line 423 
  struct aq_ptp_s *aq_ptp = ((struct aq_ptp_s *)(__mptr + 18446744073709551440U));
  #line 424 
  struct aq_nic_s *aq_nic = aq_ptp->aq_nic;
  #line 426 
  u32 pin_index = 0U;
  #line 427 
  u32 rest = 0U;
  #line 430 
  if ((unsigned int)ptp->n_per_out <= pin_index) 
                                                 #line 431 
                                                 return -22;
  #line 433 
  (*((aq_nic->aq_hw_ops)->hw_get_ptp_ts))(aq_nic->aq_hw,& start);
  #line 434 
  div_u64_rem(start,1000000000U,& rest);
  #line 435 
  if (on != 0) 
               #line 435 
               period = 1000000000ULL; else 
                                            #line 435 
                                            period = 0ULL;
  #line 436 
  if (on != 0) {
    #line 436 
    unsigned long long tmp_0;
    #line 436 
    if (rest > 990000000U) 
                           #line 436 
                           tmp_0 = 2000000000ULL; else 
                                                       #line 436 
                                                       tmp_0 = 1000000000ULL;
    #line 436 
    start = (start - (unsigned long long)rest) + tmp_0;
  }
  else 
       #line 436 
       start = 0ULL;
  #line 439 
  aq_ptp_hw_pin_conf(aq_nic,pin_index,start,period);
  #line 441 
  return 0;
}

#line 444  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.c"
static void aq_ptp_extts_pin_ctrl(struct aq_ptp_s *aq_ptp)
{
  #line 446 
  struct aq_nic_s *aq_nic = aq_ptp->aq_nic;
  #line 447 
  u32 enable = (unsigned int)aq_ptp->extts_pin_enabled;
  #line 449 
  if ((aq_nic->aq_hw_ops)->hw_extts_gpio_enable != (int (*)(struct aq_hw_s *, u32 , u32 ))0) 
    #line 450 
    (*((aq_nic->aq_hw_ops)->hw_extts_gpio_enable))(aq_nic->aq_hw,0U,enable);
  #line 451 
  return;
}

#line 454  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.c"
static int aq_ptp_extts_pin_configure(struct ptp_clock_info *ptp, struct ptp_clock_request *rq, int on)
{
  #line 457 
  void *__mptr;
  #line 457 
  __mptr = (void *)ptp;
  #line 457 
  struct aq_ptp_s *aq_ptp = ((struct aq_ptp_s *)(__mptr + 18446744073709551440U));
  #line 459 
  u32 pin_index = rq->__anonCompField_ptp_clock_request_56.extts.index;
  #line 461 
  if ((unsigned int)ptp->n_ext_ts <= pin_index) 
                                                #line 462 
                                                return -22;
  #line 464 
  aq_ptp->extts_pin_enabled = (_Bool)(on != 0);
  #line 465 
  if (on != 0) {
    #line 466 
    aq_ptp->poll_timeout_ms = 15U;
    #line 467 
    cancel_delayed_work_sync(& aq_ptp->poll_sync);
    #line 468 
    ;
    #line 468 
    cif_schedule_delayed_work(& aq_ptp->poll_sync,msecs_to_jiffies(aq_ptp->poll_timeout_ms));
  }
  #line 472 
  aq_ptp_extts_pin_ctrl(aq_ptp);
  #line 473 
  return 0;
}

#line 481  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.c"
static int aq_ptp_gpio_feature_enable(struct ptp_clock_info *ptp, struct ptp_clock_request *rq, int on)
{
  #line 484 
  switch ((unsigned int)rq->type) {
    #line 485 
    case (unsigned int)0: 
                          #line 485 
    ;
    #line 486 
    return aq_ptp_extts_pin_configure(ptp,rq,on);
    #line 487 
    case (unsigned int)1: 
                          #line 487 
    ;
    #line 488 
    return aq_ptp_perout_pin_configure(ptp,rq,on);
    #line 489 
    case (unsigned int)2: 
                          #line 489 
    ;
    #line 490 
    return aq_ptp_pps_pin_configure(ptp,rq,on);
    #line 491 
    default: 
             #line 491 
    ;
    #line 492 
    return -95;
  }
  #line 495 
  return 0;
}

#line 504  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.c"
static int aq_ptp_verify(struct ptp_clock_info *ptp, unsigned int pin, enum ptp_pin_function func, unsigned int chan)
{
  #line 508 
  if (ptp->pin_config == (struct ptp_pin_desc *)0 || (unsigned int)ptp->n_pins <= pin) 
    #line 509 
    return -22;
  #line 512 
  if ((ptp->pin_config + (unsigned long)pin)->chan != chan) 
                                                            #line 513 
                                                            return -22;
  #line 516 
  if ((ptp->pin_config + (unsigned long)pin)->func != (unsigned int)func) 
    #line 517 
    return -22;
  #line 519 
  return 0;
}

#line 529  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.c"
void aq_ptp_tx_hwtstamp(struct aq_nic_s *aq_nic, u64 timestamp)
{
  #line 533 
  struct skb_shared_hwtstamps hwtstamp;
  #line 531 
  struct aq_ptp_s *aq_ptp = aq_nic->aq_ptp;
  #line 532 
  struct sk_buff *skb = aq_ptp_skb_get(& aq_ptp->skb_ring);
  #line 535 
  if (skb == (struct sk_buff *)0) {
    #line 536 
    netdev_err(aq_nic->ndev,(char *)"have timestamp but tx_queues empty\n");
    #line 537 
    return;
  }
  #line 540 
  timestamp = (unsigned long long)atomic_read_3(& aq_ptp->offset_egress) + timestamp;
  #line 541 
  aq_ptp_convert_to_hwtstamp(aq_ptp,& hwtstamp,timestamp);
  #line 542 
  skb_tstamp_tx(skb,& hwtstamp);
  #line 543 
  dev_kfree_skb_any(skb);
  #line 545 
  aq_ptp_tx_timeout_update(aq_ptp);
  #line 546 
  return;
}

#line 556  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.c"
static void aq_ptp_rx_hwtstamp(struct aq_ptp_s *aq_ptp, struct sk_buff *skb, u64 timestamp)
{
  #line 559 
  timestamp -= (unsigned long long)atomic_read_3(& aq_ptp->offset_ingress);
  #line 560 
  ;
  #line 560 
  ;
  #line 560 
  aq_ptp_convert_to_hwtstamp(aq_ptp,skb_hwtstamps(skb),timestamp);
  #line 561 
  return;
}

#line 563  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.c"
void aq_ptp_hwtstamp_config_get(struct aq_ptp_s *aq_ptp, struct hwtstamp_config *config)
{
  #line 566 
  *config = aq_ptp->hwtstamp_config;
  #line 567 
  return;
}

#line 569  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.c"
static void aq_ptp_prepare_filters(struct aq_ptp_s *aq_ptp)
{
  #line 571 
  aq_ptp->udp_filter.cmd = (aq_ptp->ptp_rx.idx << 8U) | 2256601089U;
  #line 578 
  aq_ptp->udp_filter.p_dst = (unsigned short)319U;
  #line 580 
  aq_ptp->eth_type_filter.ethertype = (unsigned short)35063U;
  #line 581 
  aq_ptp->eth_type_filter.queue = (signed char)aq_ptp->ptp_rx.idx;
  #line 582 
  return;
}

#line 584  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.c"
int aq_ptp_hwtstamp_config_set(struct aq_ptp_s *aq_ptp, struct hwtstamp_config *config)
{
  #line 588 
  struct aq_hw_ops *hw_ops;
  #line 587 
  struct aq_nic_s *aq_nic = aq_ptp->aq_nic;
  #line 589 
  int err = 0;
  #line 591 
  hw_ops = aq_nic->aq_hw_ops;
  #line 592 
  if (config->tx_type == 1 || config->rx_filter == 12) {
    #line 594 
    aq_ptp_prepare_filters(aq_ptp);
    #line 595 
    if (hw_ops->hw_filter_l3l4_set != (int (*)(struct aq_hw_s *, struct aq_rx_filter_l3l4 *))0) 
      #line 596 
      err = (*(hw_ops->hw_filter_l3l4_set))(aq_nic->aq_hw,& aq_ptp->udp_filter);
    #line 599 
    if (err == 0 && hw_ops->hw_filter_l2_set != (int (*)(struct aq_hw_s *, struct aq_rx_filter_l2 *))0) 
      #line 600 
      err = (*(hw_ops->hw_filter_l2_set))(aq_nic->aq_hw,& aq_ptp->eth_type_filter);
    #line 603 
    aq_utils_obj_set(& aq_nic->flags,33554432U);
  }
  else {
    #line 605 
    aq_ptp->udp_filter.cmd &= 2147483647U;
    #line 606 
    if (hw_ops->hw_filter_l3l4_set != (int (*)(struct aq_hw_s *, struct aq_rx_filter_l3l4 *))0) 
      #line 607 
      err = (*(hw_ops->hw_filter_l3l4_set))(aq_nic->aq_hw,& aq_ptp->udp_filter);
    #line 610 
    if (err == 0 && hw_ops->hw_filter_l2_clear != (int (*)(struct aq_hw_s *, struct aq_rx_filter_l2 *))0) 
      #line 611 
      err = (*(hw_ops->hw_filter_l2_clear))(aq_nic->aq_hw,& aq_ptp->eth_type_filter);
    #line 614 
    aq_utils_obj_clear(& aq_nic->flags,33554432U);
  }
  #line 617 
  if (err != 0) 
                #line 618 
                return -121;
  #line 620 
  aq_ptp->hwtstamp_config = *config;
  #line 622 
  return 0;
}

#line 625  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.c"
bool aq_ptp_ring(struct aq_nic_s *aq_nic, struct aq_ring_s *ring)
{
  #line 627 
  struct aq_ptp_s *aq_ptp = aq_nic->aq_ptp;
  #line 629 
  if (aq_ptp == (struct aq_ptp_s *)0) 
                                      #line 630 
                                      return (_Bool)0;
  #line 633 
  return (_Bool)(((& aq_ptp->ptp_tx == ring || & aq_ptp->ptp_rx == ring) || & aq_ptp->hwts_rx == ring) != 0);
}

#line 636  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.c"
u16 aq_ptp_extract_ts(struct aq_nic_s *aq_nic, struct sk_buff *skb, u8 *p, unsigned int len)
{
  #line 639 
  struct aq_ptp_s *aq_ptp = aq_nic->aq_ptp;
  #line 640 
  u64 timestamp = 0ULL;
  #line 641 
  u16 ret = (*((aq_nic->aq_hw_ops)->rx_extract_ts))(aq_nic->aq_hw,p,len,
                                              & timestamp);
  #line 644 
  if ((unsigned int)ret != 0U) 
                               #line 645 
                               aq_ptp_rx_hwtstamp(aq_ptp,skb,timestamp);
  #line 647 
  return ret;
}

#line 650  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.c"
static int aq_ptp_poll(struct napi_struct *napi, int budget)
{
  #line 652 
  void *__mptr;
  #line 656 
  int err;
  #line 652 
  __mptr = (void *)napi;
  #line 652 
  struct aq_ptp_s *aq_ptp = ((struct aq_ptp_s *)(__mptr + 18446744073709550168U));
  #line 653 
  struct aq_nic_s *aq_nic = aq_ptp->aq_nic;
  #line 654 
  bool was_cleaned = (_Bool)0;
  #line 655 
  int work_done = 0;
  #line 659 
  err = (*((aq_nic->aq_hw_ops)->hw_ring_tx_head_update))(aq_nic->aq_hw,& aq_ptp->ptp_tx);
  #line 661 
  if (err < 0) 
               #line 662 
               goto err_exit;
  #line 664 
  if (aq_ptp->ptp_tx.sw_head != aq_ptp->ptp_tx.hw_head) {
    #line 665 
    aq_ring_tx_clean(& aq_ptp->ptp_tx);
    #line 667 
    was_cleaned = (_Bool)1;
  }
  #line 671 
  err = (*((aq_nic->aq_hw_ops)->hw_ring_hwts_rx_receive))(aq_nic->aq_hw,& aq_ptp->hwts_rx);
  #line 673 
  if (err < 0) 
               #line 674 
               goto err_exit;
  #line 676 
  if (aq_ptp->hwts_rx.sw_head != aq_ptp->hwts_rx.hw_head) {
    #line 677 
    aq_ring_hwts_rx_clean(& aq_ptp->hwts_rx,aq_nic);
    #line 679 
    err = (*((aq_nic->aq_hw_ops)->hw_ring_hwts_rx_fill))(aq_nic->aq_hw,& aq_ptp->hwts_rx);
    #line 681 
    if (err < 0) 
                 #line 682 
                 goto err_exit;
    #line 684 
    was_cleaned = (_Bool)1;
  }
  #line 688 
  err = (*((aq_nic->aq_hw_ops)->hw_ring_rx_receive))(aq_nic->aq_hw,& aq_ptp->ptp_rx);
  #line 690 
  if (err < 0) 
               #line 691 
               goto err_exit;
  #line 693 
  if (aq_ptp->ptp_rx.sw_head != aq_ptp->ptp_rx.hw_head) {
    #line 694 
    unsigned int sw_tail_old;
    #line 696 
    err = aq_ring_rx_clean(& aq_ptp->ptp_rx,napi,& work_done,budget);
    #line 697 
    if (err < 0) 
                 #line 698 
                 goto err_exit;
    #line 700 
    sw_tail_old = aq_ptp->ptp_rx.sw_tail;
    #line 701 
    err = aq_ring_rx_fill(& aq_ptp->ptp_rx);
    #line 702 
    if (err < 0) 
                 #line 703 
                 goto err_exit;
    #line 705 
    err = (*((aq_nic->aq_hw_ops)->hw_ring_rx_fill))(aq_nic->aq_hw,& aq_ptp->ptp_rx,sw_tail_old);
    #line 708 
    if (err < 0) 
                 #line 709 
                 goto err_exit;
  }
  #line 712 
  if ((int)was_cleaned != 0) 
                             #line 713 
                             work_done = budget;
  #line 715 
  if (work_done < budget) {
    #line 716 
    napi_complete_done(napi,work_done);
    #line 717 
    (*((aq_nic->aq_hw_ops)->hw_irq_enable))(aq_nic->aq_hw,1ULL << aq_ptp->ptp_ring_param.vec_idx);
  }
  #line 721 
  err_exit: 
            #line 721 
  ;
  #line 722 
  return work_done;
}

#line 725  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.c"
static irqreturn_t aq_ptp_isr(int irq, void *private)
{
  #line 727 
  struct aq_ptp_s *aq_ptp = (struct aq_ptp_s *)private;
  #line 728 
  int err = 0;
  #line 730 
  if (aq_ptp == (struct aq_ptp_s *)0) {
    #line 731 
    err = -22;
    #line 732 
    goto err_exit;
  }
  #line 734 
  napi_schedule(& aq_ptp->napi);
  #line 736 
  err_exit: 
            #line 736 
  ;
  #line 737 
  return (enum irqreturn)(err >= 0);
}

#line 740  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.c"
int aq_ptp_xmit(struct aq_nic_s *aq_nic, struct sk_buff *skb)
{
  #line 744 
  unsigned long irq_flags;
  #line 746 
  unsigned int frags;
  #line 742 
  struct aq_ptp_s *aq_ptp = aq_nic->aq_ptp;
  #line 743 
  struct aq_ring_s *ring = & aq_ptp->ptp_tx;
  #line 745 
  int err = 0;
  #line 748 
  if (skb->len == 0U) {
    #line 749 
    dev_kfree_skb_any(skb);
    #line 750 
    goto err_exit;
  }
  #line 753 
  frags = (unsigned int)((int)((struct skb_shared_info *)skb_end_pointer(skb))->nr_frags + 1);
  #line 758 
  if (frags > 32U) 
                   #line 758 
                   goto _LOR;
  else {
    #line 758 
    ;
    #line 758 
    if (aq_ring_avail_dx(ring) < frags) {
      #line 758 
      _LOR: {
              #line 760 
              dev_kfree_skb_any(skb);
              #line 761 
              goto err_exit;
            }
    }
  }
  #line 764 
  err = aq_ptp_skb_put(& aq_ptp->skb_ring,skb);
  #line 765 
  if (err != 0) {
    #line 766 
    netdev_err(aq_nic->ndev,(char *)"SKB Ring is overflow (%u)!\n",ring->size);
    #line 768 
    return 16;
  }
  #line 770 
  ((struct skb_shared_info *)skb_end_pointer(skb))->tx_flags = (unsigned char)((unsigned int)((struct skb_shared_info *)skb_end_pointer(skb))->tx_flags | 4U);
  #line 771 
  aq_ptp_tx_timeout_start(aq_ptp);
  #line 772 
  skb_tx_timestamp(skb);
  #line 774 
  cif___ldv_spin_lock_ptp_ring_lock_of_aq_ptp_s(& (aq_nic->aq_ptp)->ptp_ring_lock);
  #line 775 
  frags = aq_nic_map_skb(aq_nic,skb,ring);
  #line 777 
  if ((long)(frags != 0U) != 0L) {
    #line 778 
    err = (*((aq_nic->aq_hw_ops)->hw_ring_tx_xmit))(aq_nic->aq_hw,ring,frags);
    #line 780 
    if (err >= 0) {
      #line 781 
      (ring->stats.tx.packets) ++;
      #line 782 
      ring->stats.tx.bytes += (unsigned long long)skb->len;
    }
  }
  else 
       #line 785 
       err = 16;
  #line 787 
  cif_spin_unlock_irqrestore_ptp_ring_lock_of_aq_ptp_s(& (aq_nic->aq_ptp)->ptp_ring_lock,irq_flags);
  #line 789 
  err_exit: 
            #line 789 
  ;
  #line 790 
  return err;
}

#line 793  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.c"
void aq_ptp_service_task(struct aq_nic_s *aq_nic)
{
  #line 795 
  struct aq_ptp_s *aq_ptp = aq_nic->aq_ptp;
  #line 797 
  if (aq_ptp == (struct aq_ptp_s *)0) 
                                      #line 798 
                                      return;
  #line 800 
  aq_ptp_tx_timeout_check(aq_ptp);
  #line 801 
  return;
}

#line 803  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.c"
int aq_ptp_irq_alloc(struct aq_nic_s *aq_nic)
{
  #line 805 
  struct pci_dev *pdev = aq_nic->pdev;
  #line 806 
  struct aq_ptp_s *aq_ptp = aq_nic->aq_ptp;
  #line 807 
  int err = 0;
  #line 809 
  if (aq_ptp == (struct aq_ptp_s *)0) 
                                      #line 810 
                                      return 0;
  #line 812 
  if ((unsigned int)pdev->msix_enabled != 0U || (unsigned int)pdev->msi_enabled != 0U) {
    #line 813 
    ;
    #line 813 
    ;
    #line 813 
    err = cif_request_irq_0((unsigned int)pci_irq_vector(pdev,aq_ptp->idx_vector),& aq_ptp_isr,0UL,(char *)(& (aq_nic->ndev)->name),(void *)aq_ptp);
  }
  else {
    #line 816 
    err = -22;
    #line 817 
    goto err_exit;
  }
  #line 820 
  err_exit: 
            #line 820 
  ;
  #line 821 
  return err;
}

#line 824  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.c"
void aq_ptp_irq_free(struct aq_nic_s *aq_nic)
{
  #line 826 
  struct aq_ptp_s *aq_ptp = aq_nic->aq_ptp;
  #line 827 
  struct pci_dev *pdev = aq_nic->pdev;
  #line 829 
  if (aq_ptp == (struct aq_ptp_s *)0) 
                                      #line 830 
                                      return;
  #line 832 
  ;
  #line 832 
  cif_free_irq_0((unsigned int)pci_irq_vector(pdev,aq_ptp->idx_vector),(void *)aq_ptp);
  #line 833 
  return;
}

#line 835  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.c"
int aq_ptp_ring_init(struct aq_nic_s *aq_nic)
{
  #line 837 
  struct aq_ptp_s *aq_ptp = aq_nic->aq_ptp;
  #line 838 
  int err = 0;
  #line 840 
  if (aq_ptp == (struct aq_ptp_s *)0) 
                                      #line 841 
                                      return 0;
  #line 843 
  err = aq_ring_init(& aq_ptp->ptp_tx);
  #line 844 
  if (err < 0) 
               #line 845 
               goto err_exit;
  #line 846 
  err = (*((aq_nic->aq_hw_ops)->hw_ring_tx_init))(aq_nic->aq_hw,& aq_ptp->ptp_tx,& aq_ptp->ptp_ring_param);
  #line 849 
  if (err < 0) 
               #line 850 
               goto err_exit;
  #line 852 
  err = aq_ring_init(& aq_ptp->ptp_rx);
  #line 853 
  if (err < 0) 
               #line 854 
               goto err_exit;
  #line 855 
  err = (*((aq_nic->aq_hw_ops)->hw_ring_rx_init))(aq_nic->aq_hw,& aq_ptp->ptp_rx,& aq_ptp->ptp_ring_param);
  #line 858 
  if (err < 0) 
               #line 859 
               goto err_exit;
  #line 861 
  err = aq_ring_rx_fill(& aq_ptp->ptp_rx);
  #line 862 
  if (err < 0) 
               #line 863 
               goto err_rx_free;
  #line 864 
  err = (*((aq_nic->aq_hw_ops)->hw_ring_rx_fill))(aq_nic->aq_hw,& aq_ptp->ptp_rx,0U);
  #line 867 
  if (err < 0) 
               #line 868 
               goto err_rx_free;
  #line 870 
  err = aq_ring_init(& aq_ptp->hwts_rx);
  #line 871 
  if (err < 0) 
               #line 872 
               goto err_rx_free;
  #line 873 
  err = (*((aq_nic->aq_hw_ops)->hw_ring_rx_init))(aq_nic->aq_hw,& aq_ptp->hwts_rx,& aq_ptp->ptp_ring_param);
  #line 876 
  if (err < 0) 
               #line 877 
               goto err_exit;
  #line 878 
  err = (*((aq_nic->aq_hw_ops)->hw_ring_hwts_rx_fill))(aq_nic->aq_hw,& aq_ptp->hwts_rx);
  #line 880 
  if (err < 0) 
               #line 881 
               goto err_exit;
  #line 883 
  return err;
  #line 885 
  err_rx_free: 
               #line 885 
  ;
  #line 886 
  aq_ring_rx_deinit(& aq_ptp->ptp_rx);
  #line 887 
  err_exit: 
            #line 887 
  ;
  #line 888 
  return err;
}

#line 891  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.c"
int aq_ptp_ring_start(struct aq_nic_s *aq_nic)
{
  #line 893 
  struct aq_ptp_s *aq_ptp = aq_nic->aq_ptp;
  #line 894 
  int err = 0;
  #line 896 
  if (aq_ptp == (struct aq_ptp_s *)0) 
                                      #line 897 
                                      return 0;
  #line 899 
  err = (*((aq_nic->aq_hw_ops)->hw_ring_tx_start))(aq_nic->aq_hw,& aq_ptp->ptp_tx);
  #line 900 
  if (err < 0) 
               #line 901 
               goto err_exit;
  #line 903 
  err = (*((aq_nic->aq_hw_ops)->hw_ring_rx_start))(aq_nic->aq_hw,& aq_ptp->ptp_rx);
  #line 904 
  if (err < 0) 
               #line 905 
               goto err_exit;
  #line 907 
  err = (*((aq_nic->aq_hw_ops)->hw_ring_rx_start))(aq_nic->aq_hw,& aq_ptp->hwts_rx);
  #line 909 
  if (err < 0) 
               #line 910 
               goto err_exit;
  #line 912 
  napi_enable(& aq_ptp->napi);
  #line 914 
  err_exit: 
            #line 914 
  ;
  #line 915 
  return err;
}

#line 918  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.c"
void aq_ptp_ring_stop(struct aq_nic_s *aq_nic)
{
  #line 920 
  struct aq_ptp_s *aq_ptp = aq_nic->aq_ptp;
  #line 922 
  if (aq_ptp == (struct aq_ptp_s *)0) 
                                      #line 923 
                                      return;
  #line 925 
  (*((aq_nic->aq_hw_ops)->hw_ring_tx_stop))(aq_nic->aq_hw,& aq_ptp->ptp_tx);
  #line 926 
  (*((aq_nic->aq_hw_ops)->hw_ring_rx_stop))(aq_nic->aq_hw,& aq_ptp->ptp_rx);
  #line 928 
  (*((aq_nic->aq_hw_ops)->hw_ring_rx_stop))(aq_nic->aq_hw,& aq_ptp->hwts_rx);
  #line 930 
  napi_disable(& aq_ptp->napi);
  #line 931 
  return;
}

#line 933  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.c"
void aq_ptp_ring_deinit(struct aq_nic_s *aq_nic)
{
  #line 935 
  struct aq_ptp_s *aq_ptp = aq_nic->aq_ptp;
  #line 937 
  if ((aq_ptp == (struct aq_ptp_s *)0 || aq_ptp->ptp_tx.aq_nic == (struct aq_nic_s *)0) || aq_ptp->ptp_rx.aq_nic == (struct aq_nic_s *)0) 
    #line 938 
    return;
  #line 940 
  aq_ring_tx_clean(& aq_ptp->ptp_tx);
  #line 941 
  aq_ring_rx_deinit(& aq_ptp->ptp_rx);
  #line 942 
  return;
}

#line 948  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.c"
int aq_ptp_ring_alloc(struct aq_nic_s *aq_nic)
{
  #line 951 
  unsigned int tx_ring_idx;
  #line 951 
  unsigned int rx_ring_idx;
  #line 952 
  struct aq_ring_s *hwts;
  #line 953 
  u32 tx_tc_mode;
  #line 953 
  u32 rx_tc_mode;
  #line 954 
  struct aq_ring_s *ring;
  #line 955 
  int err;
  #line 950 
  struct aq_ptp_s *aq_ptp = aq_nic->aq_ptp;
  #line 957 
  if (aq_ptp == (struct aq_ptp_s *)0) 
                                      #line 958 
                                      return 0;
  #line 963 
  (*((aq_nic->aq_hw_ops)->hw_tx_tc_mode_get))(aq_nic->aq_hw,& tx_tc_mode);
  #line 964 
  if (tx_tc_mode == 0U) 
                        #line 965 
                        tx_ring_idx = 8U; else 
                                               #line 967 
                                               tx_ring_idx = 16U;
  #line 969 
  ring = aq_ring_tx_alloc(& aq_ptp->ptp_tx,aq_nic,tx_ring_idx,& aq_nic->aq_nic_cfg);
  #line 971 
  if (ring == (struct aq_ring_s *)0) {
    #line 972 
    err = -12;
    #line 973 
    goto err_exit;
  }
  #line 976 
  (*((aq_nic->aq_hw_ops)->hw_rx_tc_mode_get))(aq_nic->aq_hw,& rx_tc_mode);
  #line 977 
  if (rx_tc_mode == 0U) 
                        #line 978 
                        rx_ring_idx = 8U; else 
                                               #line 980 
                                               rx_ring_idx = 16U;
  #line 982 
  ring = aq_ring_rx_alloc(& aq_ptp->ptp_rx,aq_nic,rx_ring_idx,& aq_nic->aq_nic_cfg);
  #line 984 
  if (ring == (struct aq_ring_s *)0) {
    #line 985 
    err = -12;
    #line 986 
    goto err_exit_ptp_tx;
  }
  #line 989 
  hwts = aq_ring_hwts_rx_alloc(& aq_ptp->hwts_rx,aq_nic,31U,aq_nic->aq_nic_cfg.rxds,(unsigned int)(aq_nic->aq_nic_cfg.aq_hw_caps)->rxd_size);
  #line 992 
  if (hwts == (struct aq_ring_s *)0) {
    #line 993 
    err = -12;
    #line 994 
    goto err_exit_ptp_rx;
  }
  #line 997 
  err = aq_ptp_skb_ring_init(& aq_ptp->skb_ring,aq_nic->aq_nic_cfg.rxds);
  #line 998 
  if (err != 0) {
    #line 999 
    err = -12;
    #line 1000 
    goto err_exit_hwts_rx;
  }
  #line 1003 
  aq_ptp->ptp_ring_param.vec_idx = aq_ptp->idx_vector;
  #line 1004 
  aq_ptp->ptp_ring_param.cpu = aq_ptp->ptp_ring_param.vec_idx + (unsigned int)aq_nic_get_cfg(aq_nic)->aq_rss.base_cpu_number;
  #line 1006 
  cpumask_set_cpu(aq_ptp->ptp_ring_param.cpu,& aq_ptp->ptp_ring_param.affinity_mask);
  #line 1009 
  return 0;
  #line 1011 
  err_exit_hwts_rx: 
                    #line 1011 
  ;
  #line 1012 
  aq_ring_free(& aq_ptp->hwts_rx);
  #line 1013 
  err_exit_ptp_rx: 
                   #line 1013 
  ;
  #line 1014 
  aq_ring_free(& aq_ptp->ptp_rx);
  #line 1015 
  err_exit_ptp_tx: 
                   #line 1015 
  ;
  #line 1016 
  aq_ring_free(& aq_ptp->ptp_tx);
  #line 1017 
  err_exit: 
            #line 1017 
  ;
  #line 1018 
  return err;
}

#line 1021  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.c"
void aq_ptp_ring_free(struct aq_nic_s *aq_nic)
{
  #line 1023 
  struct aq_ptp_s *aq_ptp = aq_nic->aq_ptp;
  #line 1025 
  if (aq_ptp == (struct aq_ptp_s *)0) 
                                      #line 1026 
                                      return;
  #line 1028 
  aq_ring_free(& aq_ptp->ptp_tx);
  #line 1029 
  aq_ring_free(& aq_ptp->ptp_rx);
  #line 1030 
  aq_ring_free(& aq_ptp->hwts_rx);
  #line 1032 
  aq_ptp_skb_ring_release(& aq_ptp->skb_ring);
  #line 1033 
  return;
}

#line 1037  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.c"
static struct ptp_clock_info aq_ptp_clock = {.owner = & __this_module, .name = {(char)'a', (char)'t', (char)'l', (char)'a', (char)'n', (char)'t', (char)'i', (char)'c', (char)' ', (char)'p', (char)'t', (char)'p'}, .max_adj = 999999999, .adjfine = & aq_ptp_adjfine, .adjtime = & aq_ptp_adjtime, .gettime64 = & aq_ptp_gettime, .settime64 = & aq_ptp_settime, .enable = & aq_ptp_gpio_feature_enable, .verify = & aq_ptp_verify};
#line 1060  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.c"
static void aq_ptp_offset_init_from_fw(struct hw_atl_ptp_offset *offsets)
{
  #line 1062 
  int i;
  #line 1065 
  i = 0;
  #line 1065 
  while ((unsigned int)i <= 5U) {
    #line 1066 
    switch (i) {
      #line 1068 
      case 1: 
              #line 1068 
      ;
      #line 1069 
      ptp_offset[i].mbps = 100U;
      #line 1069 
      ptp_offset[i].egress = (int)offsets->egress_100;
      #line 1069 
      ptp_offset[i].ingress = (int)offsets->ingress_100;
      #line 1072 
      break;
      #line 1074 
      case 2: 
              #line 1074 
      ;
      #line 1075 
      ptp_offset[i].mbps = 1000U;
      #line 1075 
      ptp_offset[i].egress = (int)offsets->egress_1000;
      #line 1075 
      ptp_offset[i].ingress = (int)offsets->ingress_1000;
      #line 1078 
      break;
      #line 1080 
      case 3: 
              #line 1080 
      ;
      #line 1081 
      ptp_offset[i].mbps = 2500U;
      #line 1081 
      ptp_offset[i].egress = (int)offsets->egress_2500;
      #line 1081 
      ptp_offset[i].ingress = (int)offsets->ingress_2500;
      #line 1084 
      break;
      #line 1086 
      case 4: 
              #line 1086 
      ;
      #line 1087 
      ptp_offset[i].mbps = 5000U;
      #line 1087 
      ptp_offset[i].egress = (int)offsets->egress_5000;
      #line 1087 
      ptp_offset[i].ingress = (int)offsets->ingress_5000;
      #line 1090 
      break;
      #line 1092 
      case 5: 
              #line 1092 
      ;
      #line 1093 
      ptp_offset[i].mbps = 10000U;
      #line 1093 
      ptp_offset[i].egress = (int)offsets->egress_10000;
      #line 1093 
      ptp_offset[i].ingress = (int)offsets->ingress_10000;
      #line 1096 
      break;
    }
    #line 1065 
    i ++;
  }
  #line 1098 
  return;
}

#line 1101  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.c"
static void aq_ptp_offset_init(struct hw_atl_ptp_offset *offsets)
{
  #line 1103 
  memset((void *)(& ptp_offset),0,72UL);
  #line 1105 
  aq_ptp_offset_init_from_fw(offsets);
  #line 1106 
  return;
}

#line 1108  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.c"
static void aq_ptp_gpio_init(struct ptp_clock_info *info, struct hw_atl_info *hw_info)
{
  #line 1111 
  struct ptp_pin_desc pin_desc[4U];
  #line 1114 
  u32 i;
  #line 1112 
  u32 extts_pin_cnt = 0U;
  #line 1113 
  u32 out_pin_cnt = 0U;
  #line 1116 
  memset((void *)(& pin_desc),0,384UL);
  #line 1118 
  i = 0U;
  #line 1118 
  while (i <= 2U) {
    #line 1119 
    if (hw_info->gpio_pin[i] == (enum gpio_pin_function)(out_pin_cnt + 8U)) {
      #line 1126 
      u32 tmp;
      #line 1121 
      snprintf((char *)(& pin_desc[out_pin_cnt].name),64UL,(char *)"AQ_GPIO%d",i);
      #line 1124 
      pin_desc[out_pin_cnt].index = out_pin_cnt;
      #line 1125 
      pin_desc[out_pin_cnt].chan = out_pin_cnt;
      #line 1126 
      tmp = out_pin_cnt;
      #line 1126 
      out_pin_cnt ++;
      #line 1126 
      pin_desc[tmp].func = 2U;
    }
    #line 1118 
    i ++;
  }
  #line 1130 
  info->n_per_out = (int)out_pin_cnt;
  #line 1132 
  if (((unsigned long)hw_info->caps_ex & 4194304UL) != 0UL) {
    #line 1133 
    extts_pin_cnt ++;
    #line 1135 
    snprintf((char *)(& pin_desc[out_pin_cnt].name),64UL,(char *)"AQ_GPIO%d",out_pin_cnt);
    #line 1138 
    pin_desc[out_pin_cnt].index = out_pin_cnt;
    #line 1139 
    pin_desc[out_pin_cnt].chan = 0U;
    #line 1140 
    pin_desc[out_pin_cnt].func = 1U;
  }
  #line 1143 
  info->n_pins = (int)(out_pin_cnt + extts_pin_cnt);
  #line 1144 
  info->n_ext_ts = (int)extts_pin_cnt;
  #line 1146 
  if (info->n_pins == 0) 
                         #line 1147 
                         return;
  #line 1149 
  info->pin_config = (struct ptp_pin_desc *)kcalloc_0((unsigned long)info->n_pins,96UL,3264U);
  #line 1152 
  if (info->pin_config == (struct ptp_pin_desc *)0) 
                                                    #line 1153 
                                                    return;
  #line 1155 
  memcpy((void *)info->pin_config,(void *)(& pin_desc),(unsigned long)info->n_pins * 96UL);
  #line 1157 
  return;
}

#line 1159  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.c"
void aq_ptp_clock_init(struct aq_nic_s *aq_nic)
{
  #line 1162 
  struct timespec64 ts;
  #line 1161 
  struct aq_ptp_s *aq_ptp = aq_nic->aq_ptp;
  #line 1164 
  ktime_get_real_ts64(& ts);
  #line 1165 
  aq_ptp_settime(& aq_ptp->ptp_info,& ts);
  #line 1166 
  return;
}

#line 1168 
#line 1380 
static void aq_ptp_poll_sync_work_cb(struct work_struct *w);
#line 1170  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.c"
int aq_ptp_init(struct aq_nic_s *aq_nic, unsigned int idx_vec)
{
  #line 1172 
  struct hw_atl_utils_mbox mbox;
  #line 1173 
  struct ptp_clock *clock;
  #line 1174 
  struct aq_ptp_s *aq_ptp;
  #line 1175 
  int err = 0;
  #line 1177 
  if ((aq_nic->aq_hw_ops)->hw_get_ptp_ts == (void (*)(struct aq_hw_s *, u64 *))0) {
    #line 1178 
    aq_nic->aq_ptp = (struct aq_ptp_s *)0;
    #line 1179 
    return 0;
  }
  #line 1182 
  if ((aq_nic->aq_fw_ops)->enable_ptp == (void (*)(struct aq_hw_s *, int ))0) {
    #line 1183 
    aq_nic->aq_ptp = (struct aq_ptp_s *)0;
    #line 1184 
    return 0;
  }
  #line 1187 
  hw_atl_utils_mpi_read_stats(aq_nic->aq_hw,& mbox);
  #line 1189 
  if (((unsigned long)mbox.info.caps_ex & 65536UL) == 0UL) {
    #line 1190 
    aq_nic->aq_ptp = (struct aq_ptp_s *)0;
    #line 1191 
    return 0;
  }
  #line 1194 
  aq_ptp_offset_init(& mbox.info.ptp_offset);
  #line 1196 
  aq_ptp = (struct aq_ptp_s *)kzalloc_0(2576UL,3264U);
  #line 1197 
  if (aq_ptp == (struct aq_ptp_s *)0) {
    #line 1198 
    err = -12;
    #line 1199 
    goto err_exit;
  }
  #line 1202 
  aq_ptp->aq_nic = aq_nic;
  #line 1204 
  spinlock_check(& aq_ptp->ptp_lock);
  {
    #line 1204 
    struct lock_class_key __key;
    #line 1204 
    __raw_spin_lock_init(& aq_ptp->ptp_lock.__anonCompField_spinlock_25.rlock,(char *)"&(&aq_ptp->ptp_lock)->rlock",& __key);
  }
  #line 1205 
  spinlock_check(& aq_ptp->ptp_ring_lock);
  {
    #line 1205 
    struct lock_class_key __key_0;
    #line 1205 
    __raw_spin_lock_init(& aq_ptp->ptp_ring_lock.__anonCompField_spinlock_25.rlock,(char *)"&(&aq_ptp->ptp_ring_lock)->rlock",& __key_0);
  }
  #line 1207 
  aq_ptp->ptp_info = aq_ptp_clock;
  #line 1208 
  aq_ptp_gpio_init(& aq_ptp->ptp_info,& mbox.info);
  #line 1209 
  clock = ptp_clock_register(& aq_ptp->ptp_info,& (aq_nic->ndev)->dev);
  #line 1210 
  if ((int)IS_ERR_0((void *)clock) != 0) {
    #line 1211 
    netdev_err(aq_nic->ndev,(char *)"ptp_clock_register failed\n");
    #line 1212 
    err = (int)PTR_ERR_0((void *)clock);
    #line 1213 
    goto err_exit;
  }
  #line 1215 
  aq_ptp->ptp_clock = clock;
  #line 1216 
  aq_ptp_tx_timeout_init(& aq_ptp->ptp_tx_timeout);
  #line 1218 
  atomic_set(& aq_ptp->offset_egress,0);
  #line 1219 
  atomic_set(& aq_ptp->offset_ingress,0);
  #line 1221 
  ;
  #line 1221 
  netif_napi_add(aq_nic_get_ndev(aq_nic),& aq_ptp->napi,& aq_ptp_poll,64);
  #line 1224 
  aq_ptp->idx_vector = idx_vec;
  #line 1226 
  aq_nic->aq_ptp = aq_ptp;
  #line 1229 
  aq_utils_obj_set(& (aq_nic->aq_hw)->flags,16777216U);
  #line 1230 
  cif_mutex_lock_fwreq_mutex_of_aq_nic_s(& aq_nic->fwreq_mutex);
  #line 1231 
  (*((aq_nic->aq_fw_ops)->enable_ptp))(aq_nic->aq_hw,1);
  #line 1232 
  aq_ptp_clock_init(aq_nic);
  #line 1233 
  cif_mutex_unlock_fwreq_mutex_of_aq_nic_s(& aq_nic->fwreq_mutex);
  {
    #line 1235 
    struct lock_class_key __key_1;
    #line 1235 
    __init_work(& aq_ptp->poll_sync.work,0);
    #line 1235 
    atomic_long_t __constr_expr_34 = {.counter = 137438953408LL};
    #line 1235 
    aq_ptp->poll_sync.work.data = __constr_expr_34;
    #line 1235 
    lockdep_init_map(& aq_ptp->poll_sync.work.lockdep_map,(char *)"(work_completion)",& __key_1,0);
    #line 1235 
    INIT_LIST_HEAD(& aq_ptp->poll_sync.work.entry);
    #line 1235 
    aq_ptp->poll_sync.work.func = & aq_ptp_poll_sync_work_cb;
  }
  {
    #line 1235 
    struct lock_class_key __key_2;
    #line 1235 
    init_timer_key(& aq_ptp->poll_sync.timer,& delayed_work_timer_fn,2097152U,(char *)"&(&aq_ptp->poll_sync)->timer",& __key_2);
  }
  #line 1236 
  aq_ptp->eth_type_filter.location = aq_nic_reserve_filter(aq_nic,(enum aq_rx_filter_type)aq_rx_filter_ethertype);
  #line 1238 
  aq_ptp->udp_filter.location = aq_nic_reserve_filter(aq_nic,(enum aq_rx_filter_type)aq_rx_filter_l3l4);
  #line 1241 
  return 0;
  #line 1243 
  err_exit: 
            #line 1243 
  ;
  #line 1244 
  if (aq_ptp != (struct aq_ptp_s *)0) 
                                      #line 1245 
                                      kfree((void *)aq_ptp->ptp_info.pin_config);
  #line 1246 
  kfree((void *)aq_ptp);
  #line 1247 
  aq_nic->aq_ptp = (struct aq_ptp_s *)0;
  #line 1248 
  return err;
}

#line 1251  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.c"
void aq_ptp_unregister(struct aq_nic_s *aq_nic)
{
  #line 1253 
  struct aq_ptp_s *aq_ptp = aq_nic->aq_ptp;
  #line 1255 
  if (aq_ptp == (struct aq_ptp_s *)0) 
                                      #line 1256 
                                      return;
  #line 1258 
  ptp_clock_unregister(aq_ptp->ptp_clock);
  #line 1259 
  return;
}

#line 1261  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.c"
void aq_ptp_free(struct aq_nic_s *aq_nic)
{
  #line 1263 
  struct aq_ptp_s *aq_ptp = aq_nic->aq_ptp;
  #line 1265 
  if (aq_ptp == (struct aq_ptp_s *)0) 
                                      #line 1266 
                                      return;
  #line 1268 
  aq_nic_release_filter(aq_nic,(enum aq_rx_filter_type)aq_rx_filter_ethertype,(unsigned int)aq_ptp->eth_type_filter.location);
  #line 1270 
  aq_nic_release_filter(aq_nic,(enum aq_rx_filter_type)aq_rx_filter_l3l4,(unsigned int)aq_ptp->udp_filter.location);
  #line 1272 
  cancel_delayed_work_sync(& aq_ptp->poll_sync);
  #line 1274 
  cif_mutex_lock_fwreq_mutex_of_aq_nic_s(& aq_nic->fwreq_mutex);
  #line 1275 
  (*((aq_nic->aq_fw_ops)->enable_ptp))(aq_nic->aq_hw,0);
  #line 1276 
  cif_mutex_unlock_fwreq_mutex_of_aq_nic_s(& aq_nic->fwreq_mutex);
  #line 1278 
  kfree((void *)aq_ptp->ptp_info.pin_config);
  #line 1280 
  netif_napi_del(& aq_ptp->napi);
  #line 1281 
  kfree((void *)aq_ptp);
  #line 1282 
  aq_nic->aq_ptp = (struct aq_ptp_s *)0;
  #line 1283 
  return;
}

#line 1285  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.c"
struct ptp_clock *aq_ptp_get_ptp_clock(struct aq_ptp_s *aq_ptp)
{
  #line 1287 
  return aq_ptp->ptp_clock;
}

#line 1291  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.c"
static uint64_t aq_ptp_get_sync1588_ts(struct aq_nic_s *aq_nic)
{
  #line 1293 
  u64 ts = 0ULL;
  #line 1295 
  if ((aq_nic->aq_hw_ops)->hw_get_sync_ts != (int (*)(struct aq_hw_s *, u64 *))0) 
    #line 1296 
    (*((aq_nic->aq_hw_ops)->hw_get_sync_ts))(aq_nic->aq_hw,& ts);
  #line 1298 
  return ts;
}

#line 1301  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.c"
static void aq_ptp_start_work(struct aq_ptp_s *aq_ptp)
{
  #line 1303 
  if ((int)aq_ptp->extts_pin_enabled != 0) {
    #line 1304 
    aq_ptp->poll_timeout_ms = 15U;
    #line 1305 
    aq_ptp->last_sync1588_ts = aq_ptp_get_sync1588_ts(aq_ptp->aq_nic);
    #line 1307 
    ;
    #line 1307 
    cif_schedule_delayed_work(& aq_ptp->poll_sync,msecs_to_jiffies(aq_ptp->poll_timeout_ms));
  }
  #line 1310 
  return;
}

#line 1312  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.c"
int aq_ptp_link_change(struct aq_nic_s *aq_nic)
{
  #line 1314 
  struct aq_ptp_s *aq_ptp = aq_nic->aq_ptp;
  #line 1316 
  if (aq_ptp == (struct aq_ptp_s *)0) 
                                      #line 1317 
                                      return 0;
  #line 1319 
  if ((aq_nic->aq_hw)->aq_link_status.mbps != 0U) 
                                                  #line 1320 
                                                  aq_ptp_start_work(aq_ptp); else 
                                                                    #line 1322 
                                                                    cancel_delayed_work_sync(& aq_ptp->poll_sync);
  #line 1324 
  return 0;
}

#line 1327  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.c"
static bool aq_ptp_sync_ts_updated(struct aq_ptp_s *aq_ptp, u64 *new_ts)
{
  #line 1330 
  u64 sync_ts2;
  #line 1331 
  u64 sync_ts;
  #line 1329 
  struct aq_nic_s *aq_nic = aq_ptp->aq_nic;
  #line 1333 
  sync_ts = aq_ptp_get_sync1588_ts(aq_nic);
  #line 1335 
  if (aq_ptp->last_sync1588_ts != sync_ts) {
    #line 1336 
    sync_ts2 = aq_ptp_get_sync1588_ts(aq_nic);
    #line 1337 
    if (sync_ts != sync_ts2) {
      #line 1338 
      sync_ts = sync_ts2;
      #line 1339 
      sync_ts2 = aq_ptp_get_sync1588_ts(aq_nic);
      #line 1340 
      if (sync_ts != sync_ts2) {
        #line 1341 
        netdev_err(aq_nic->ndev,(char *)"%s: Unable to get correct GPIO TS",(char *)"aq_ptp_sync_ts_updated");
        #line 1344 
        sync_ts = 0ULL;
      }
    }
    #line 1348 
    *new_ts = sync_ts;
    #line 1349 
    return (_Bool)1;
  }
  #line 1351 
  return (_Bool)0;
}

#line 1354  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.c"
static int aq_ptp_check_sync1588(struct aq_ptp_s *aq_ptp)
{
  #line 1357 
  u64 sync_ts;
  #line 1356 
  struct aq_nic_s *aq_nic = aq_ptp->aq_nic;
  #line 1360 
  if ((int)aq_ptp_sync_ts_updated(aq_ptp,& sync_ts) != 0) {
    #line 1361 
    if ((int)aq_ptp->extts_pin_enabled != 0) {
      #line 1362 
      struct ptp_clock_event ptp_event;
      #line 1363 
      u64 time = 0ULL;
      #line 1365 
      (*((aq_nic->aq_hw_ops)->hw_ts_to_sys_clock))(aq_nic->aq_hw,sync_ts,& time);
      #line 1367 
      ptp_event.index = aq_ptp->ptp_info.n_pins + -1;
      #line 1368 
      ptp_event.__anonCompField_ptp_clock_event_57.timestamp = time;
      #line 1370 
      ptp_event.type = 1;
      #line 1371 
      ptp_clock_event(aq_ptp->ptp_clock,& ptp_event);
    }
    #line 1374 
    aq_ptp->last_sync1588_ts = sync_ts;
  }
  #line 1377 
  return 0;
}

#line 1380  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ptp.c"
static void aq_ptp_poll_sync_work_cb(struct work_struct *w)
{
  #line 1383 
  void *__mptr;
  #line 1382 
  struct delayed_work *dw = to_delayed_work(w);
  #line 1383 
  __mptr = (void *)dw;
  #line 1383 
  struct aq_ptp_s *aq_ptp = ((struct aq_ptp_s *)(__mptr + 18446744073709549240U));
  #line 1385 
  aq_ptp_check_sync1588(aq_ptp);
  #line 1387 
  if ((int)aq_ptp->extts_pin_enabled != 0) {
    #line 1388 
    unsigned long timeout = msecs_to_jiffies(aq_ptp->poll_timeout_ms);
    #line 1390 
    cif_schedule_delayed_work(& aq_ptp->poll_sync,timeout);
  }
  #line 1392 
  return;
}

#line 104  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_ptp.i.aux"
#line 104 
_Bool emg_schedule_delayed_work(struct delayed_work *arg0, unsigned long arg1);
#line 109  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_ptp.i.aux"
enum irqreturn emg_wrapper_aq_ptp_isr(int arg0, void *arg1)
{
  #line 110 
  return aq_ptp_isr(arg0,arg1);
}

#line 129  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_ptp.i.aux"
static void cif_set_bit_1(long nr, unsigned long *addr)
{
  #line 132 
  ldv_set_bit(nr,addr);
  #line 133 
  return;
}

#line 136  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_ptp.i.aux"
static void cif_clear_bit_1(long nr, unsigned long *addr)
{
  #line 139 
  ldv_clear_bit(nr,addr);
  #line 140 
  return;
}

#line 143  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_ptp.i.aux"
static void INIT_LIST_HEAD(struct list_head *list)
{
  #line 146 
  ldv_init_list_head(list);
  #line 147 
  return;
}

#line 220  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_ptp.i.aux"
static long PTR_ERR_0(void *ptr)
{
  #line 223 
  return ldv_ptr_err(ptr);
}

#line 227  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_ptp.i.aux"
static bool IS_ERR_0(void *ptr)
{
  #line 230 
  return ldv_is_err(ptr);
}

#line 468  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_ptp.i.aux"
static void *kmalloc(size_t size, gfp_t flags)
{
  #line 471 
  return ldv_kmalloc(size,flags);
}

#line 482  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_ptp.i.aux"
static void *kcalloc_0(size_t n, size_t size, gfp_t flags)
{
  #line 485 
  return ldv_kcalloc(n,size,flags);
}

#line 503  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_ptp.i.aux"
static void *kzalloc_0(size_t size, gfp_t flags)
{
  #line 506 
  return ldv_kzalloc(size,flags);
}

#line 682  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_ptp.i.aux"
static void cif___ldv_spin_lock_lock_of_ptp_skb_ring(spinlock_t *lock)
{
  #line 685 
  ldv_spin_model_lock((char *)"lock_of_ptp_skb_ring");
  #line 687 
  __ldv_spin_lock(lock);
  #line 688 
  return;
}

#line 691  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_ptp.i.aux"
static void cif_spin_unlock_irqrestore_lock_of_ptp_skb_ring(spinlock_t *lock, unsigned long flags)
{
  #line 694 
  ldv_spin_model_unlock((char *)"lock_of_ptp_skb_ring");
  #line 696 
  spin_unlock_irqrestore(lock,flags);
  #line 697 
  return;
}

#line 700  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_ptp.i.aux"
static void cif___ldv_spin_lock_lock_of_ptp_tx_timeout(spinlock_t *lock)
{
  #line 703 
  ldv_spin_model_lock((char *)"lock_of_ptp_tx_timeout");
  #line 705 
  __ldv_spin_lock(lock);
  #line 706 
  return;
}

#line 709  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_ptp.i.aux"
static void cif_spin_unlock_irqrestore_lock_of_ptp_tx_timeout(spinlock_t *lock, unsigned long flags)
{
  #line 712 
  ldv_spin_model_unlock((char *)"lock_of_ptp_tx_timeout");
  #line 714 
  spin_unlock_irqrestore(lock,flags);
  #line 715 
  return;
}

#line 718  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_ptp.i.aux"
static void cif_mutex_lock_fwreq_mutex_of_aq_nic_s(struct mutex *lock)
{
  #line 721 
  ldv_mutex_model_lock(lock,(char *)"fwreq_mutex_of_aq_nic_s");
  #line 722 
  return;
}

#line 725  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_ptp.i.aux"
static void cif_mutex_unlock_fwreq_mutex_of_aq_nic_s(struct mutex *lock)
{
  #line 728 
  ldv_mutex_model_unlock(lock,(char *)"fwreq_mutex_of_aq_nic_s");
  #line 729 
  return;
}

#line 732  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_ptp.i.aux"
static void cif___ldv_spin_lock_ptp_lock_of_aq_ptp_s(spinlock_t *lock)
{
  #line 735 
  ldv_spin_model_lock((char *)"ptp_lock_of_aq_ptp_s");
  #line 737 
  __ldv_spin_lock(lock);
  #line 738 
  return;
}

#line 741  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_ptp.i.aux"
static void cif_spin_unlock_irqrestore_ptp_lock_of_aq_ptp_s(spinlock_t *lock, unsigned long flags)
{
  #line 744 
  ldv_spin_model_unlock((char *)"ptp_lock_of_aq_ptp_s");
  #line 746 
  spin_unlock_irqrestore(lock,flags);
  #line 747 
  return;
}

#line 750  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_ptp.i.aux"
static bool cif_schedule_delayed_work(struct delayed_work *dwork, unsigned long delay)
{
  #line 754 
  return emg_schedule_delayed_work(dwork,delay);
}

#line 758  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_ptp.i.aux"
static void cif___ldv_spin_lock_ptp_ring_lock_of_aq_ptp_s(spinlock_t *lock)
{
  #line 761 
  ldv_spin_model_lock((char *)"ptp_ring_lock_of_aq_ptp_s");
  #line 763 
  __ldv_spin_lock(lock);
  #line 764 
  return;
}

#line 767  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_ptp.i.aux"
static void cif_spin_unlock_irqrestore_ptp_ring_lock_of_aq_ptp_s(spinlock_t *lock, unsigned long flags)
{
  #line 770 
  ldv_spin_model_unlock((char *)"ptp_ring_lock_of_aq_ptp_s");
  #line 772 
  spin_unlock_irqrestore(lock,flags);
  #line 773 
  return;
}

#line 776  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_ptp.i.aux"
static int cif_request_irq_0(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char *name, void *dev)
{
  #line 780 
  return emg_request_irq(irq,handler,flags,name,dev);
}

#line 784  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_ptp.i.aux"
static void *cif_free_irq_0(unsigned int ldv_func_arg1, void *ldv_func_arg2)
{
  #line 788 
  return emg_free_irq(ldv_func_arg1,ldv_func_arg2);
}

#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/cmpxchg_64.h"
__inline static int arch_atomic_read_4(atomic_t *v)
{
  #line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/atomic.h"
  union __anonunion___u_5286 __u;
  #line 31 
  __read_once_size((void *)(& v->counter),(void *)(& __u.__c),4);
  #line 31 
  return (__u.__val);
}

#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/atomic-instrumented.h"
__inline static int atomic_read_4(atomic_t *v)
{
  #line 26 
  kasan_check_read((void *)v,4U);
  #line 27 
  return arch_atomic_read_4(v);
}

#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/io.h"
__inline static unsigned int readl(void *addr)
{
  #line 59 
  unsigned int ret;
  #line 60 
  ldv_inline_asm();
  #line 59 
  return ret;
}

#line 67  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/io.h"
__inline static void writel(unsigned int val, void *addr)
{
  #line 69 
  ldv_inline_asm();
  #line 70 
  return;
}

#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_utils.h"
__inline static void aq_utils_obj_set_0(atomic_t *flags, u32 mask)
{
  #line 16 
  unsigned long flags_old;
  #line 16 
  unsigned long flags_new;
  #line 18 
  while (1) {
    {
      #line 19 
      flags_old = (unsigned long)atomic_read_4(flags);
      #line 20 
      flags_new = (unsigned long)mask | flags_old;
    }
    #line 21 
    ;
    #line 21 
    if (! ((unsigned long)atomic_cmpxchg(flags,(int)flags_old,(int)flags_new) != flags_old)) 
      #line 18 
      break;
  }
  #line 22 
  return;
}

#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_utils.h"
__inline static bool aq_utils_obj_test_1(atomic_t *flags, u32 mask)
{
  #line 36 
  ;
  #line 36 
  return (_Bool)(((unsigned int)atomic_read_4(flags) & mask) != 0U);
}

#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_hw_utils.h"
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_hw_utils.c"
void aq_hw_write_reg_bit(struct aq_hw_s *aq_hw, u32 addr, u32 msk, u32 shift, u32 val);
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_hw_utils.h"
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_hw_utils.c"
u32 aq_hw_read_reg_bit(struct aq_hw_s *aq_hw, u32 addr, u32 msk, u32 shift);
#line 35  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_hw_utils.h"
#line 57  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_hw_utils.c"
u64 aq_hw_read_reg64(struct aq_hw_s *hw, u32 reg);
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_hw_utils.c"
void aq_hw_write_reg_bit(struct aq_hw_s *aq_hw, u32 addr, u32 msk, u32 shift, u32 val)
{
  #line 18 
  if (msk != 4294967295U) {
    #line 19 
    u32 reg_old;
    #line 19 
    u32 reg_new;
    #line 21 
    reg_old = aq_hw_read_reg(aq_hw,addr);
    #line 22 
    reg_new = (~ msk & reg_old) | (val << shift);
    #line 24 
    if (reg_old != reg_new) 
                            #line 25 
                            aq_hw_write_reg(aq_hw,addr,reg_new);
  }
  else 
       #line 27 
       aq_hw_write_reg(aq_hw,addr,val);
  #line 28 
  return;
}

#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_hw_utils.c"
u32 aq_hw_read_reg_bit(struct aq_hw_s *aq_hw, u32 addr, u32 msk, u32 shift)
{
  #line 33 
  ;
  #line 33 
  return (aq_hw_read_reg(aq_hw,addr) & msk) >> shift;
}

#line 36  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_hw_utils.c"
u32 aq_hw_read_reg(struct aq_hw_s *hw, u32 reg)
{
  #line 38 
  u32 value = readl(hw->mmio + (unsigned long)reg);
  #line 40 
  if (value == 4294967295U) {
    #line 40 
    if (readl(hw->mmio + (unsigned long)((hw->aq_nic_cfg)->aq_hw_caps)->hw_alive_check_addr) == 4294967295U) 
      #line 43 
      aq_utils_obj_set_0(& hw->flags,1073741824U);
  }
  #line 45 
  return value;
}

#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_hw_utils.c"
void aq_hw_write_reg(struct aq_hw_s *hw, u32 reg, u32 value)
{
  #line 50 
  writel(value,hw->mmio + (unsigned long)reg);
  #line 51 
  return;
}

#line 57  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_hw_utils.c"
u64 aq_hw_read_reg64(struct aq_hw_s *hw, u32 reg)
{
  #line 59 
  u64 value = (unsigned long long)aq_hw_read_reg(hw,reg);
  #line 61 
  value = ((unsigned long long)aq_hw_read_reg(hw,reg + 4U) << 32) | value;
  #line 63 
  return value;
}

#line 66  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_hw_utils.c"
int aq_hw_err_from_flags(struct aq_hw_s *hw)
{
  #line 68 
  int err = 0;
  #line 70 
  if ((int)aq_utils_obj_test_1(& hw->flags,1073741824U) != 0) {
    #line 71 
    err = -6;
    #line 72 
    goto err_exit;
  }
  #line 74 
  if ((int)aq_utils_obj_test_1(& hw->flags,2147483648U) != 0) {
    #line 75 
    err = -5;
    #line 76 
    goto err_exit;
  }
  #line 79 
  err_exit: 
            #line 79 
  ;
  #line 80 
  return err;
}

/* compiler builtin: 
   unsigned short __builtin_bswap16(unsigned short);   */
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/bitops/find.h"
#line 115  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_filters.i.aux"
static unsigned long cif_find_next_bit(unsigned long *addr, unsigned long size, unsigned long offset);
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/arch_hweight.h"
__inline static unsigned long __arch_hweight64(__u64 w)
{
  #line 45 
  unsigned long res;
  #line 46 
  ldv_inline_asm();
  #line 51 
  return res;
}

#line 70  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bitops.h"
__inline static unsigned long hweight_long(unsigned long w)
{
  #line 72 
  unsigned long tmp_0;
  #line 72 
  if (0 != 0) 
              #line 72 
              tmp_0 = (unsigned long)((((unsigned int)((((((((((unsigned long long)w & 1ULL) != 0ULL) + (((unsigned long long)w & 2ULL) != 0ULL)) + (((unsigned long long)w & 4ULL) != 0ULL)) + (((unsigned long long)w & 8ULL) != 0ULL)) + (((unsigned long long)w & 16ULL) != 0ULL)) + (((unsigned long long)w & 32ULL) != 0ULL)) + (((unsigned long long)w & 64ULL) != 0ULL)) + (((unsigned long long)w & 128ULL) != 0ULL)) + (unsigned int)(((((((((w & 256UL) != 0UL) + ((w & 512UL) != 0UL)) + ((w & 1024UL) != 0UL)) + ((w & 2048UL) != 0UL)) + ((w & 4096UL) != 0UL)) + ((w & 8192UL) != 0UL)) + ((w & 16384UL) != 0UL)) + ((w & 32768UL) != 0UL))) + ((unsigned int)(((((((((w & 65536UL) != 0UL) + ((w & 131072UL) != 0UL)) + ((w & 262144UL) != 0UL)) + ((w & 524288UL) != 0UL)) + ((w & 1048576UL) != 0UL)) + ((w & 2097152UL) != 0UL)) + ((w & 4194304UL) != 0UL)) + ((w & 8388608UL) != 0UL)) + (unsigned int)(((((((((w & 16777216UL) != 0UL) + ((w & 33554432UL) != 0UL)) + ((w & 67108864UL) != 0UL)) + ((w & 134217728UL) != 0UL)) + ((w & 268435456UL) != 0UL)) + ((w & 536870912UL) != 0UL)) + ((w & 1073741824UL) != 0UL)) + ((w & 2147483648UL) != 0UL)))) + (((unsigned int)(((((((((w & 4294967296UL) != 0UL) + ((w & 8589934592UL) != 0UL)) + ((w & 17179869184UL) != 0UL)) + ((w & 34359738368UL) != 0UL)) + ((w & 68719476736UL) != 0UL)) + ((w & 137438953472UL) != 0UL)) + ((w & 274877906944UL) != 0UL)) + ((w & 549755813888UL) != 0UL)) + (unsigned int)(((((((((w & 1099511627776UL) != 0UL) + ((w & 2199023255552UL) != 0UL)) + ((w & 4398046511104UL) != 0UL)) + ((w & 8796093022208UL) != 0UL)) + ((w & 17592186044416UL) != 0UL)) + ((w & 35184372088832UL) != 0UL)) + ((w & 70368744177664UL) != 0UL)) + ((w & 140737488355328UL) != 0UL))) + ((unsigned int)(((((((((w & 281474976710656UL) != 0UL) + ((w & 562949953421312UL) != 0UL)) + ((w & 1125899906842624UL) != 0UL)) + ((w & 2251799813685248UL) != 0UL)) + ((w & 4503599627370496UL) != 0UL)) + ((w & 9007199254740992UL) != 0UL)) + ((w & 18014398509481984UL) != 0UL)) + ((w & 36028797018963968UL) != 0UL)) + (unsigned int)(((((((((w & 72057594037927936UL) != 0UL) + ((w & 144115188075855872UL) != 0UL)) + ((w & 288230376151711744UL) != 0UL)) + ((w & 576460752303423488UL) != 0UL)) + ((w & 1152921504606846976UL) != 0UL)) + ((w & 2305843009213693952UL) != 0UL)) + ((w & 4611686018427387904UL) != 0UL)) + ((w & 9223372036854775808UL) != 0UL))))); else 
                                                                    #line 72 
                                                                    tmp_0 = __arch_hweight64((unsigned long long)w);
  #line 72 
  return tmp_0;
}

#line 741  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
__inline static void INIT_HLIST_NODE(struct hlist_node *h)
{
  #line 743 
  h->next = (struct hlist_node *)0;
  #line 744 
  h->pprev = (struct hlist_node **)0;
  #line 745 
  return;
}

#line 757  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
__inline static void __hlist_del(struct hlist_node *n)
{
  #line 759 
  struct hlist_node *next = n->next;
  #line 760 
  struct hlist_node **pprev = n->pprev;
  {
    #line 763 
    union __anonunion___u_5944 __u = {.__val = next};
    #line 762 
    __write_once_size((void *)pprev,(void *)(& __u.__c),8);
    #line 762 
    struct hlist_node *tmp = __u.__val;
  }
  #line 763 
  if (next != (struct hlist_node *)0) 
                                      #line 764 
                                      next->pprev = pprev;
  #line 765 
  return;
}

#line 767  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
__inline static void hlist_del(struct hlist_node *n)
{
  #line 769 
  __hlist_del(n);
  #line 770 
  n->next = (struct hlist_node *)(-2401263026318606080);
  #line 771 
  n->pprev = (struct hlist_node **)(-2401263026318606046);
  #line 772 
  return;
}

#line 782  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
__inline static void hlist_add_head(struct hlist_node *n, struct hlist_head *h)
{
  #line 784 
  struct hlist_node *first = h->first;
  #line 785 
  n->next = first;
  #line 786 
  if (first != (struct hlist_node *)0) 
                                       #line 787 
                                       first->pprev = & n->next;
  {
    #line 789 
    union __anonunion___u_5946 __u = {.__val = n};
    #line 788 
    __write_once_size((void *)(& h->first),(void *)(& __u.__c),8);
    #line 788 
    struct hlist_node *tmp = __u.__val;
  }
  #line 789 
  n->pprev = & h->first;
  #line 790 
  return;
}

#line 802  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
__inline static void hlist_add_behind(struct hlist_node *n, struct hlist_node *prev)
{
  #line 805 
  n->next = prev->next;
  #line 806 
  prev->next = n;
  #line 807 
  n->pprev = & prev->next;
  #line 809 
  if (n->next != (struct hlist_node *)0) 
                                         #line 810 
                                         (n->next)->pprev = & n->next;
  #line 811 
  return;
}

#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/string_64.h"
#line 61 
int memcmp(void *, void *, size_t);
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/find_bit.h"
#line 22 
unsigned long ldv_find_next_bit(unsigned long *addr, unsigned long size, unsigned long offset);
#line 668  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/slab.h"
#line 430  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_filters.i.aux"
static void *kzalloc_1(size_t size, gfp_t flags);
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_filters.h"
#line 664  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_filters.c"
u16 aq_get_rxnfc_count_all_rules(struct aq_nic_s *aq_nic);
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_filters.h"
#line 671  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_filters.c"
struct aq_hw_rx_fltrs_s *aq_get_hw_rx_fltrs(struct aq_nic_s *aq_nic);
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_filters.h"
#line 676  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_filters.c"
int aq_add_rxnfc_rule(struct aq_nic_s *aq_nic, struct ethtool_rxnfc *cmd);
#line 26  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_filters.h"
#line 715  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_filters.c"
int aq_del_rxnfc_rule(struct aq_nic_s *aq_nic, struct ethtool_rxnfc *cmd);
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_filters.h"
#line 737  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_filters.c"
int aq_get_rxnfc_rule(struct aq_nic_s *aq_nic, struct ethtool_rxnfc *cmd);
#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_filters.h"
#line 758  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_filters.c"
int aq_get_rxnfc_all_rules(struct aq_nic_s *aq_nic, struct ethtool_rxnfc *cmd, u32 *rule_locs);
#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_filters.c"
static bool aq_rule_is_approve(struct ethtool_rx_flow_spec *fsp)
{
  #line 11 
  if ((fsp->flow_type & 1073741824U) != 0U) 
                                            #line 12 
                                            return (_Bool)0;
  #line 14 
  switch (fsp->flow_type & 2147483647U) {
    #line 15 
    case (unsigned int)18: 
                           #line 15 
    ;
    #line 16 
    case (unsigned int)1: 
                          #line 16 
    ;
    #line 17 
    case (unsigned int)2: 
                          #line 17 
    ;
    #line 18 
    case (unsigned int)3: 
                          #line 18 
    ;
    #line 19 
    case (unsigned int)5: 
                          #line 19 
    ;
    #line 20 
    case (unsigned int)6: 
                          #line 20 
    ;
    #line 21 
    case (unsigned int)7: 
                          #line 21 
    ;
    #line 22 
    case (unsigned int)16: 
                           #line 22 
    ;
    #line 23 
    case (unsigned int)17: 
                           #line 23 
    ;
    #line 24 
    return (_Bool)1;
    #line 25 
    case (unsigned int)13: 
                           #line 25 
    ;
    #line 26 
    switch ((int)fsp->h_u.usr_ip4_spec.proto) {
      #line 27 
      case 6: 
              #line 27 
      ;
      #line 28 
      case 17: 
               #line 28 
      ;
      #line 29 
      case 132: 
                #line 29 
      ;
      #line 30 
      case 0: 
              #line 30 
      ;
      #line 31 
      return (_Bool)1;
      #line 32 
      default: 
               #line 32 
      ;
      #line 33 
      return (_Bool)0;
    }
    #line 35 
    case (unsigned int)14: 
                           #line 35 
    ;
    #line 36 
    switch ((int)fsp->h_u.usr_ip6_spec.l4_proto) {
      #line 37 
      case 6: 
              #line 37 
      ;
      #line 38 
      case 17: 
               #line 38 
      ;
      #line 39 
      case 132: 
                #line 39 
      ;
      #line 40 
      case 0: 
              #line 40 
      ;
      #line 41 
      return (_Bool)1;
      #line 42 
      default: 
               #line 42 
      ;
      #line 43 
      return (_Bool)0;
    }
    #line 45 
    default: 
             #line 45 
    ;
    #line 46 
    return (_Bool)0;
  }
  #line 49 
  return (_Bool)0;
}

#line 53  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_filters.c"
static bool aq_match_filter(struct ethtool_rx_flow_spec *fsp1, struct ethtool_rx_flow_spec *fsp2)
{
  #line 56 
  if (fsp1->flow_type != fsp2->flow_type) 
                                          #line 61 
                                          return (_Bool)0;
  else {
    #line 56 
    if (memcmp((void *)(& fsp1->h_u),(void *)(& fsp2->h_u),52UL) != 0) 
      #line 61 
      return (_Bool)0;
    else {
      #line 57 
      if (memcmp((void *)(& fsp1->h_ext),(void *)(& fsp2->h_ext),20UL) != 0) 
        #line 61 
        return (_Bool)0;
      else {
        #line 58 
        if (memcmp((void *)(& fsp1->m_u),(void *)(& fsp2->m_u),52UL) != 0) 
          #line 61 
          return (_Bool)0;
        else {
          #line 59 
          if (memcmp((void *)(& fsp1->m_ext),(void *)(& fsp2->m_ext),20UL) != 0) 
            #line 61 
            return (_Bool)0;
        }
      }
    }
  }
  #line 63 
  return (_Bool)1;
}

#line 67  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_filters.c"
static bool aq_rule_already_exists(struct aq_nic_s *aq_nic, struct ethtool_rx_flow_spec *fsp)
{
  #line 74 
  struct aq_rx_filter *tmp_1;
  #line 74 
  void *__mptr;
  #line 70 
  struct aq_rx_filter *rule;
  #line 71 
  struct hlist_node *aq_node2;
  #line 72 
  struct aq_hw_rx_fltrs_s *rx_fltrs = aq_get_hw_rx_fltrs(aq_nic);
  {
    #line 74 
    struct hlist_node *____ptr = rx_fltrs->filter_list.first;
    #line 74 
    if (____ptr != (struct hlist_node *)0) {
      #line 74 
      __mptr = (void *)____ptr;
      #line 74 
      tmp_1 = ((struct aq_rx_filter *)__mptr);
    }
    else 
         #line 74 
         tmp_1 = (struct aq_rx_filter *)0;
    }
  #line 74 
  rule = tmp_1;
  #line 74 
  while (1) {
    #line 74 
    void *__mptr_0;
    #line 74 
    struct aq_rx_filter *tmp_4;
    #line 74 
    if (rule != (struct aq_rx_filter *)0) {
      #line 74 
      aq_node2 = rule->aq_node.next;
      #line 74 
      if (! (1 != 0)) 
                      #line 74 
                      break;
    }
    else 
         #line 74 
         break;
    {
      #line 76 
      if (rule->aq_fsp.location == fsp->location) 
                                                  #line 77 
                                                  goto __Cont;
      #line 78 
      if ((int)aq_match_filter(& rule->aq_fsp,fsp) != 0) {
        #line 79 
        netdev_err(aq_nic->ndev,(char *)"ethtool: This filter is already set\n");
        #line 81 
        return (_Bool)1;
      }
    }
    #line 74 
    __Cont: { /* sequence */
              {
                #line 74 
                struct hlist_node *____ptr_0 = aq_node2;
                #line 74 
                if (____ptr_0 != (struct hlist_node *)0) {
                  #line 74 
                  __mptr_0 = (void *)____ptr_0;
                  #line 74 
                  tmp_4 = ((struct aq_rx_filter *)__mptr_0);
                }
                else 
                     #line 74 
                     tmp_4 = (struct aq_rx_filter *)0;
                }
              #line 74 
              rule = tmp_4;
            }
  }
  #line 85 
  return (_Bool)0;
}

#line 88  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_filters.c"
static int aq_check_approve_fl3l4(struct aq_nic_s *aq_nic, struct aq_hw_rx_fltrs_s *rx_fltrs, struct ethtool_rx_flow_spec *fsp)
{
  #line 92 
  u32 last_location = 39U - (unsigned int)aq_nic->aq_hw_rx_fltrs.fl3l4.reserved_count;
  #line 95 
  if (fsp->location <= 31U || fsp->location > last_location) {
    #line 97 
    netdev_err(aq_nic->ndev,(char *)"ethtool: location must be in range [%d, %d]",32U,last_location);
    #line 100 
    return -22;
  }
  #line 102 
  if ((unsigned int)rx_fltrs->fl3l4.is_ipv6 != 0U && (unsigned int)rx_fltrs->fl3l4.active_ipv4 != 0U) {
    #line 103 
    rx_fltrs->fl3l4.is_ipv6 = (unsigned char)0U;
    #line 104 
    netdev_err(aq_nic->ndev,(char *)"ethtool: mixing ipv4 and ipv6 is not allowed");
    #line 106 
    return -22;
  }
  else 
    #line 107 
    if ((unsigned int)rx_fltrs->fl3l4.is_ipv6 == 0U && (unsigned int)rx_fltrs->fl3l4.active_ipv6 != 0U) {
      #line 108 
      rx_fltrs->fl3l4.is_ipv6 = (unsigned char)1U;
      #line 109 
      netdev_err(aq_nic->ndev,(char *)"ethtool: mixing ipv4 and ipv6 is not allowed");
      #line 111 
      return -22;
    }
    else 
      #line 112 
      if (((unsigned int)rx_fltrs->fl3l4.is_ipv6 != 0U && fsp->location != 36U) && fsp->location != 32U) {
        #line 115 
        netdev_err(aq_nic->ndev,(char *)"ethtool: The specified location for ipv6 must be %d or %d",32U,36U);
        #line 118 
        return -22;
      }
  #line 121 
  return 0;
}

#line 125  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_filters.c"
static int aq_check_approve_fl2(struct aq_nic_s *aq_nic, struct aq_hw_rx_fltrs_s *rx_fltrs, struct ethtool_rx_flow_spec *fsp)
{
  #line 129 
  u32 last_location = 31U - (unsigned int)aq_nic->aq_hw_rx_fltrs.fet_reserved_count;
  #line 132 
  if (fsp->location <= 15U || fsp->location > last_location) {
    #line 134 
    netdev_err(aq_nic->ndev,(char *)"ethtool: location must be in range [%d, %d]",16U,last_location);
    #line 138 
    return -22;
  }
  #line 141 
  if ((unsigned int)__builtin_bswap16((unsigned short)((int)fsp->m_ext.vlan_tci)) == 57344U) 
    #line 141 
    if ((unsigned int)fsp->m_u.ether_spec.h_proto == 0U) {
      #line 143 
      netdev_err(aq_nic->ndev,(char *)"ethtool: proto (ether_type) parameter must be specified");
      #line 145 
      return -22;
    }
  #line 148 
  return 0;
}

#line 152  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_filters.c"
static int aq_check_approve_fvlan(struct aq_nic_s *aq_nic, struct aq_hw_rx_fltrs_s *rx_fltrs, struct ethtool_rx_flow_spec *fsp)
{
  #line 156 
  if (fsp->location > 15U) {
    #line 158 
    netdev_err(aq_nic->ndev,(char *)"ethtool: location must be in range [%d, %d]",0U,15U);
    #line 162 
    return -22;
  }
  #line 165 
  if (((aq_nic->ndev)->features & 512ULL) != 0ULL) {
    #line 166 
    ;
    #line 166 
    if (! test_bit((long)__builtin_bswap16((unsigned short)((int)fsp->h_ext.vlan_tci)),
                 (unsigned long *)(& aq_nic->active_vlans))) {
      #line 168 
      netdev_err(aq_nic->ndev,(char *)"ethtool: unknown vlan-id specified");
      #line 170 
      return -22;
    }
  }
  #line 173 
  if (fsp->ring_cookie > (unsigned long long)aq_nic->aq_nic_cfg.num_rss_queues) {
    #line 174 
    netdev_err(aq_nic->ndev,(char *)"ethtool: queue number must be in range [0, %d]",aq_nic->aq_nic_cfg.num_rss_queues + 4294967295U);
    #line 177 
    return -22;
  }
  #line 179 
  return 0;
}

#line 183  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_filters.c"
static int aq_check_filter(struct aq_nic_s *aq_nic, struct ethtool_rx_flow_spec *fsp)
{
  #line 186 
  int err = 0;
  #line 187 
  struct aq_hw_rx_fltrs_s *rx_fltrs = aq_get_hw_rx_fltrs(aq_nic);
  #line 189 
  if ((fsp->flow_type & 2147483648U) != 0U) {
    #line 190 
    if ((unsigned int)__builtin_bswap16((unsigned short)((int)fsp->m_ext.vlan_tci)) == 4095U) 
      #line 191 
      err = aq_check_approve_fvlan(aq_nic,rx_fltrs,fsp);
    else {
      #line 192 
      if ((unsigned int)__builtin_bswap16((unsigned short)((int)fsp->m_ext.vlan_tci)) == 57344U) 
        #line 193 
        err = aq_check_approve_fl2(aq_nic,rx_fltrs,fsp);
      else {
        #line 195 
        ;
        #line 195 
        netdev_err(aq_nic->ndev,(char *)"ethtool: invalid vlan mask 0x%x specified",(int)__builtin_bswap16((unsigned short)((int)fsp->m_ext.vlan_tci)));
        #line 198 
        err = -22;
      }
    }
  }
  else 
    #line 201 
    switch (fsp->flow_type & 2147483647U) {
      #line 202 
      case (unsigned int)18: 
                             #line 202 
      ;
      #line 203 
      err = aq_check_approve_fl2(aq_nic,rx_fltrs,fsp);
      #line 204 
      break;
      #line 205 
      case (unsigned int)1: 
                            #line 205 
      ;
      #line 206 
      case (unsigned int)2: 
                            #line 206 
      ;
      #line 207 
      case (unsigned int)3: 
                            #line 207 
      ;
      #line 208 
      case (unsigned int)16: 
                             #line 208 
      ;
      #line 209 
      case (unsigned int)13: 
                             #line 209 
      ;
      #line 210 
      rx_fltrs->fl3l4.is_ipv6 = (unsigned char)0U;
      #line 211 
      err = aq_check_approve_fl3l4(aq_nic,rx_fltrs,fsp);
      #line 212 
      break;
      #line 213 
      case (unsigned int)5: 
                            #line 213 
      ;
      #line 214 
      case (unsigned int)6: 
                            #line 214 
      ;
      #line 215 
      case (unsigned int)7: 
                            #line 215 
      ;
      #line 216 
      case (unsigned int)17: 
                             #line 216 
      ;
      #line 217 
      case (unsigned int)14: 
                             #line 217 
      ;
      #line 218 
      rx_fltrs->fl3l4.is_ipv6 = (unsigned char)1U;
      #line 219 
      err = aq_check_approve_fl3l4(aq_nic,rx_fltrs,fsp);
      #line 220 
      break;
      #line 221 
      default: 
               #line 221 
      ;
      #line 222 
      netdev_err(aq_nic->ndev,(char *)"ethtool: unknown flow-type specified");
      #line 224 
      err = -22;
    }
  #line 228 
  return err;
}

#line 232  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_filters.c"
static bool aq_rule_is_not_support(struct aq_nic_s *aq_nic, struct ethtool_rx_flow_spec *fsp)
{
  #line 235 
  bool rule_is_not_support = (_Bool)0;
  #line 237 
  if (((aq_nic->ndev)->features & 137438953472ULL) == 0ULL) {
    #line 238 
    netdev_err(aq_nic->ndev,(char *)"ethtool: Please, to enable the RX flow control:\n",(char *)(& (aq_nic->ndev)->name));
    #line 241 
    rule_is_not_support = (_Bool)1;
  }
  else {
    #line 242 
    if (aq_rule_is_approve(fsp)) {
      #line 246 
      if ((fsp->flow_type & 2147483647U) != 18U && ((unsigned int)fsp->h_u.tcp_ip4_spec.tos != 0U || (unsigned int)fsp->h_u.tcp_ip6_spec.tclass != 0U)) {
        #line 249 
        netdev_err(aq_nic->ndev,(char *)"ethtool: The specified tos tclass are not supported\n");
        #line 251 
        rule_is_not_support = (_Bool)1;
      }
      else 
        #line 252 
        if ((fsp->flow_type & 1073741824U) != 0U) {
          #line 253 
          netdev_err(aq_nic->ndev,(char *)"ethtool: MAC_EXT is not supported");
          #line 255 
          rule_is_not_support = (_Bool)1;
        }
    }
    else {
      #line 243 
      netdev_err(aq_nic->ndev,(char *)"ethtool: The specified flow type is not supported\n");
      #line 245 
      rule_is_not_support = (_Bool)1;
    }
  }
  #line 258 
  return rule_is_not_support;
}

#line 262  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_filters.c"
static bool aq_rule_is_not_correct(struct aq_nic_s *aq_nic, struct ethtool_rx_flow_spec *fsp)
{
  #line 265 
  bool rule_is_not_correct = (_Bool)0;
  #line 267 
  if (aq_nic == (struct aq_nic_s *)0) 
                                      #line 268 
                                      rule_is_not_correct = (_Bool)1;
  else 
    #line 269 
    if (fsp->location > 39U) {
      #line 270 
      netdev_err(aq_nic->ndev,(char *)"ethtool: The specified number %u rule is invalid\n",fsp->location);
      #line 273 
      rule_is_not_correct = (_Bool)1;
    }
    else {
      #line 274 
      if (aq_check_filter(aq_nic,fsp) != 0) 
                                            #line 275 
                                            rule_is_not_correct = (_Bool)1;
      else 
        #line 276 
        if (fsp->ring_cookie != 18446744073709551615ULL) 
          #line 277 
          if (fsp->ring_cookie >= (unsigned long long)aq_nic->aq_nic_cfg.num_rss_queues) {
            #line 278 
            netdev_err(aq_nic->ndev,(char *)"ethtool: The specified action is invalid.\n",aq_nic->aq_nic_cfg.num_rss_queues + 4294967295U);
            #line 282 
            rule_is_not_correct = (_Bool)1;
          }
    }
  #line 286 
  return rule_is_not_correct;
}

#line 290  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_filters.c"
static int aq_check_rule(struct aq_nic_s *aq_nic, struct ethtool_rx_flow_spec *fsp)
{
  #line 293 
  int err = 0;
  #line 295 
  if ((int)aq_rule_is_not_correct(aq_nic,fsp) != 0) 
                                                    #line 296 
                                                    err = -22;
  else {
    #line 297 
    if ((int)aq_rule_is_not_support(aq_nic,fsp) != 0) 
                                                      #line 298 
                                                      err = -95;
    else {
      #line 299 
      if ((int)aq_rule_already_exists(aq_nic,fsp) != 0) 
                                                        #line 300 
                                                        err = -17;
    }
  }
  #line 302 
  return err;
}

#line 305  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_filters.c"
static void aq_set_data_fl2(struct aq_nic_s *aq_nic, struct aq_rx_filter *aq_rx_fltr, struct aq_rx_filter_l2 *data, bool add)
{
  #line 309 
  struct ethtool_rx_flow_spec *fsp = & aq_rx_fltr->aq_fsp;
  #line 311 
  memset((void *)data,0,6UL);
  #line 313 
  data->location = (unsigned char)((unsigned int)((unsigned char)fsp->location) + 240U);
  #line 315 
  if (fsp->ring_cookie != 18446744073709551615ULL) 
                                                   #line 316 
                                                   data->queue = (signed char)fsp->ring_cookie; else 
                                                                    #line 318 
                                                                    data->queue = (signed char)(-1);
  #line 320 
  data->ethertype = __builtin_bswap16((unsigned short)((int)fsp->h_u.ether_spec.h_proto));
  #line 321 
  data->user_priority_en = (unsigned char)((unsigned int)__builtin_bswap16((unsigned short)((int)fsp->m_ext.vlan_tci)) == 57344U);
  #line 323 
  data->user_priority = (unsigned char)((int)__builtin_bswap16((unsigned short)((int)fsp->h_ext.vlan_tci)) >> 13);
  #line 325 
  return;
}

#line 327  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_filters.c"
static int aq_add_del_fether(struct aq_nic_s *aq_nic, struct aq_rx_filter *aq_rx_fltr, bool add)
{
  #line 330 
  struct aq_rx_filter_l2 data;
  #line 331 
  struct aq_hw_s *aq_hw = aq_nic->aq_hw;
  #line 332 
  struct aq_hw_ops *aq_hw_ops = aq_nic->aq_hw_ops;
  #line 334 
  aq_set_data_fl2(aq_nic,aq_rx_fltr,& data,(_Bool)((bool)((int)add) != 0));
  #line 336 
  if ((long)(aq_hw_ops->hw_filter_l2_set == (int (*)(struct aq_hw_s *, struct aq_rx_filter_l2 *))0) != 0L) 
    #line 337 
    return -95;
  #line 338 
  if ((long)(aq_hw_ops->hw_filter_l2_clear == (int (*)(struct aq_hw_s *, struct aq_rx_filter_l2 *))0) != 0L) 
    #line 339 
    return -95;
  #line 341 
  if ((int)add != 0) {
    #line 342 
    return (*(aq_hw_ops->hw_filter_l2_set))(aq_hw,& data);
  }
  else {
    #line 344 
    return (*(aq_hw_ops->hw_filter_l2_clear))(aq_hw,& data);
  }
}

#line 347  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_filters.c"
static bool aq_fvlan_is_busy(struct aq_rx_filter_vlan *aq_vlans, int vlan)
{
  #line 349 
  int i;
  #line 351 
  i = 0;
  #line 351 
  while ((unsigned int)i <= 15U) {
    #line 352 
    if (((unsigned int)(aq_vlans + (unsigned long)i)->enable != 0U && (unsigned int)(aq_vlans + (unsigned long)i)->queue != 255U) && (int)(aq_vlans + (unsigned long)i)->vlan_id == vlan) 
      #line 355 
      return (_Bool)1;
    #line 351 
    i ++;
  }
  #line 359 
  return (_Bool)0;
}

#line 365  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_filters.c"
static void aq_fvlan_rebuild(struct aq_nic_s *aq_nic, unsigned long *active_vlans, struct aq_rx_filter_vlan *aq_vlans)
{
  #line 371 
  int i;
  #line 369 
  bool vlan_busy = (_Bool)0;
  #line 370 
  int vlan = -1;
  #line 373 
  i = 0;
  #line 373 
  while ((unsigned int)i <= 15U) {
    #line 374 
    if ((unsigned int)(aq_vlans + (unsigned long)i)->enable != 0U && (unsigned int)(aq_vlans + (unsigned long)i)->queue != 255U) 
      #line 376 
      goto __Cont;
    #line 377 
    while (1) {
      {
        #line 378 
        vlan = (int)cif_find_next_bit(active_vlans,4096UL,(unsigned long)(vlan + 1));
        #line 381 
        if (vlan == 4096) {
          #line 382 
          (aq_vlans + (unsigned long)i)->enable = (unsigned char)0U;
          #line 383 
          (aq_vlans + (unsigned long)i)->queue = (unsigned char)255U;
          #line 384 
          (aq_vlans + (unsigned long)i)->vlan_id = (unsigned short)0U;
          #line 385 
          goto __Cont_0;
        }
        #line 388 
        vlan_busy = aq_fvlan_is_busy(aq_vlans,vlan);
        #line 389 
        if (! vlan_busy) {
          #line 390 
          (aq_vlans + (unsigned long)i)->enable = (unsigned char)1U;
          #line 391 
          (aq_vlans + (unsigned long)i)->queue = (unsigned char)255U;
          #line 392 
          (aq_vlans + (unsigned long)i)->vlan_id = (unsigned short)vlan;
        }
      }
      #line 377 
      __Cont_0: 
                #line 394 
                if (! ((int)vlan_busy != 0 && vlan != 4096)) 
                                                             #line 377 
                                                             break;
    }
    #line 373 
    __Cont: 
            #line 373 
    i ++;
  }
  #line 396 
  return;
}

#line 398  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_filters.c"
static int aq_set_data_fvlan(struct aq_nic_s *aq_nic, struct aq_rx_filter *aq_rx_fltr, struct aq_rx_filter_vlan *aq_vlans, bool add)
{
  #line 404 
  int i;
  #line 402 
  struct ethtool_rx_flow_spec *fsp = & aq_rx_fltr->aq_fsp;
  #line 403 
  int location = (int)fsp->location;
  #line 406 
  memset((void *)(aq_vlans + (unsigned long)location),0,6UL);
  #line 408 
  if (! add) 
             #line 409 
             return 0;
  #line 412 
  i = 0;
  #line 412 
  while ((unsigned int)i <= 15U) {
    #line 413 
    ;
    #line 413 
    if ((int)(aq_vlans + (unsigned long)i)->vlan_id == ((int)__builtin_bswap16((unsigned short)((int)fsp->h_ext.vlan_tci)) & 4095)) 
      #line 415 
      (aq_vlans + (unsigned long)i)->enable = (unsigned char)0U;
    #line 412 
    i ++;
  }
  #line 419 
  (aq_vlans + (unsigned long)location)->location = (unsigned char)location;
  #line 420 
  (aq_vlans + (unsigned long)location)->vlan_id = (unsigned short)((unsigned int)__builtin_bswap16((unsigned short)((int)fsp->h_ext.vlan_tci)) & 4095U);
  #line 422 
  (aq_vlans + (unsigned long)location)->queue = (unsigned char)((unsigned int)((unsigned char)fsp->ring_cookie) & 31U);
  #line 423 
  (aq_vlans + (unsigned long)location)->enable = (unsigned char)1U;
  #line 425 
  return 0;
}

#line 428  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_filters.c"
int aq_del_fvlan_by_vlan(struct aq_nic_s *aq_nic, u16 vlan_id)
{
  #line 434 
  void *__mptr;
  #line 434 
  struct aq_rx_filter *tmp_1;
  #line 432 
  struct hlist_node *aq_node2;
  #line 430 
  struct aq_hw_rx_fltrs_s *rx_fltrs = aq_get_hw_rx_fltrs(aq_nic);
  #line 431 
  struct aq_rx_filter *rule = (struct aq_rx_filter *)0;
  {
    #line 434 
    struct hlist_node *____ptr = rx_fltrs->filter_list.first;
    #line 434 
    if (____ptr != (struct hlist_node *)0) {
      #line 434 
      __mptr = (void *)____ptr;
      #line 434 
      tmp_1 = ((struct aq_rx_filter *)__mptr);
    }
    else 
         #line 434 
         tmp_1 = (struct aq_rx_filter *)0;
    }
  #line 434 
  rule = tmp_1;
  #line 434 
  while (1) {
    #line 434 
    void *__mptr_0;
    #line 434 
    struct aq_rx_filter *tmp_4;
    #line 434 
    if (rule != (struct aq_rx_filter *)0) {
      #line 434 
      aq_node2 = rule->aq_node.next;
      #line 434 
      if (! (1 != 0)) 
                      #line 434 
                      break;
    }
    else 
         #line 434 
         break;
    #line 436 
    ;
    #line 436 
    if ((int)__builtin_bswap16((unsigned short)((int)rule->aq_fsp.h_ext.vlan_tci)) == (int)vlan_id) 
      #line 437 
      break;
    {
      #line 434 
      struct hlist_node *____ptr_0 = aq_node2;
      #line 434 
      if (____ptr_0 != (struct hlist_node *)0) {
        #line 434 
        __mptr_0 = (void *)____ptr_0;
        #line 434 
        tmp_4 = ((struct aq_rx_filter *)__mptr_0);
      }
      else 
           #line 434 
           tmp_4 = (struct aq_rx_filter *)0;
      }
    #line 434 
    rule = tmp_4;
  }
  #line 439 
  if (rule != (struct aq_rx_filter *)0 && rule->type == (unsigned int)aq_rx_filter_vlan) {
    #line 439 
    ;
    #line 439 
    if ((int)__builtin_bswap16((unsigned short)((int)rule->aq_fsp.h_ext.vlan_tci)) == (int)vlan_id) {
      #line 441 
      struct ethtool_rxnfc cmd;
      #line 443 
      cmd.fs.location = rule->aq_fsp.location;
      #line 444 
      return aq_del_rxnfc_rule(aq_nic,& cmd);
    }
  }
  #line 447 
  return -2;
}

#line 450  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_filters.c"
static int aq_add_del_fvlan(struct aq_nic_s *aq_nic, struct aq_rx_filter *aq_rx_fltr, bool add)
{
  #line 453 
  struct aq_hw_ops *aq_hw_ops = aq_nic->aq_hw_ops;
  #line 455 
  if ((long)(aq_hw_ops->hw_filter_vlan_set == (int (*)(struct aq_hw_s *, struct aq_rx_filter_vlan *))0) != 0L) 
    #line 456 
    return -95;
  #line 458 
  aq_set_data_fvlan(aq_nic,aq_rx_fltr,(struct aq_rx_filter_vlan *)(& aq_nic->aq_hw_rx_fltrs.fl2.aq_vlans),(_Bool)((bool)((int)add) != 0));
  #line 463 
  return aq_filters_vlans_update(aq_nic);
}

#line 466  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_filters.c"
static int aq_set_data_fl3l4(struct aq_nic_s *aq_nic, struct aq_rx_filter *aq_rx_fltr, struct aq_rx_filter_l3l4 *data, bool add)
{
  #line 470 
  struct aq_hw_rx_fltrs_s *rx_fltrs = aq_get_hw_rx_fltrs(aq_nic);
  #line 471 
  struct ethtool_rx_flow_spec *fsp = & aq_rx_fltr->aq_fsp;
  #line 473 
  memset((void *)data,0,48UL);
  #line 475 
  data->is_ipv6 = rx_fltrs->fl3l4.is_ipv6;
  #line 476 
  data->location = (unsigned char)((unsigned int)((unsigned char)fsp->location) + 224U);
  #line 478 
  if (! add) {
    #line 479 
    if ((unsigned int)data->is_ipv6 == 0U) 
                                           #line 480 
                                           rx_fltrs->fl3l4.active_ipv4 = (unsigned char)((int)rx_fltrs->fl3l4.active_ipv4 & ~ ((int)((unsigned char)(1UL << (int)data->location)))); else 
                                                                    #line 482 
                                                                    rx_fltrs->fl3l4.active_ipv6 = (unsigned char)((int)((unsigned char)rx_fltrs->fl3l4.active_ipv6) & ~ ((int)((unsigned char)(1UL << (int)((unsigned int)data->location / 4U)))));
    #line 485 
    return 0;
  }
  #line 488 
  data->cmd |= 2147483648U;
  #line 490 
  switch (fsp->flow_type) {
    #line 491 
    case (__u32)1: 
                   #line 491 
    ;
    #line 492 
    case (__u32)5: 
                   #line 492 
    ;
    #line 493 
    data->cmd |= 33554432U;
    #line 494 
    break;
    #line 495 
    case (__u32)2: 
                   #line 495 
    ;
    #line 496 
    case (__u32)6: 
                   #line 496 
    ;
    #line 497 
    data->cmd |= 1U;
    #line 498 
    data->cmd |= 33554432U;
    #line 499 
    break;
    #line 500 
    case (__u32)3: 
                   #line 500 
    ;
    #line 501 
    case (__u32)7: 
                   #line 501 
    ;
    #line 502 
    data->cmd |= 2U;
    #line 503 
    data->cmd |= 33554432U;
    #line 504 
    break;
    #line 505 
    default: 
             #line 505 
    ;
    #line 506 
    break;
  }
  #line 509 
  if ((unsigned int)data->is_ipv6 == 0U) {
    #line 510 
    data->ip_src[0] = __builtin_bswap32(fsp->h_u.tcp_ip4_spec.ip4src);
    #line 512 
    data->ip_dst[0] = __builtin_bswap32(fsp->h_u.tcp_ip4_spec.ip4dst);
    #line 514 
    rx_fltrs->fl3l4.active_ipv4 = (unsigned char)((int)rx_fltrs->fl3l4.active_ipv4 | (int)((unsigned char)(1UL << (int)data->location)));
  }
  else {
    #line 516 
    int i;
    #line 518 
    rx_fltrs->fl3l4.active_ipv6 = (unsigned char)((int)((unsigned char)rx_fltrs->fl3l4.active_ipv6) | (int)((unsigned char)(1UL << (int)((unsigned int)data->location / 4U))));
    #line 519 
    i = 0;
    #line 519 
    while ((unsigned int)i <= 3U) {
      #line 520 
      data->ip_dst[i] = __builtin_bswap32(fsp->h_u.tcp_ip6_spec.ip6dst[i]);
      #line 522 
      data->ip_src[i] = __builtin_bswap32(fsp->h_u.tcp_ip6_spec.ip6src[i]);
      #line 519 
      i ++;
    }
    #line 525 
    data->cmd |= 1073741824U;
  }
  #line 527 
  if (fsp->flow_type + 4294967283U > 1U) 
    #line 529 
    if ((unsigned int)data->is_ipv6 == 0U) {
      #line 530 
      data->p_dst = __builtin_bswap16((unsigned short)((int)fsp->h_u.tcp_ip4_spec.pdst));
      #line 532 
      data->p_src = __builtin_bswap16((unsigned short)((int)fsp->h_u.tcp_ip4_spec.psrc));
    }
    else {
      #line 535 
      data->p_dst = __builtin_bswap16((unsigned short)((int)fsp->h_u.tcp_ip6_spec.pdst));
      #line 537 
      data->p_src = __builtin_bswap16((unsigned short)((int)fsp->h_u.tcp_ip6_spec.psrc));
    }
  #line 541 
  if (data->ip_src[0] != 0U && (unsigned int)data->is_ipv6 == 0U) 
                                                                  #line 542 
                                                                  data->cmd |= 536870912U;
  #line 543 
  if (data->ip_dst[0] != 0U && (unsigned int)data->is_ipv6 == 0U) 
                                                                  #line 544 
                                                                  data->cmd |= 268435456U;
  #line 545 
  if ((unsigned int)data->p_dst != 0U) 
                                       #line 546 
                                       data->cmd |= 67108864U;
  #line 547 
  if ((unsigned int)data->p_src != 0U) 
                                       #line 548 
                                       data->cmd |= 134217728U;
  #line 549 
  if (fsp->ring_cookie != 18446744073709551615ULL) {
    #line 550 
    data->cmd |= 65536U;
    #line 551 
    data->cmd |= (unsigned int)fsp->ring_cookie << 8U;
    #line 552 
    data->cmd |= 8388608U;
  }
  else 
       #line 554 
       data->cmd = data->cmd;
  #line 557 
  return 0;
}

#line 560  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_filters.c"
static int aq_set_fl3l4(struct aq_hw_s *aq_hw, struct aq_hw_ops *aq_hw_ops, struct aq_rx_filter_l3l4 *data)
{
  #line 564 
  if ((long)(aq_hw_ops->hw_filter_l3l4_set == (int (*)(struct aq_hw_s *, struct aq_rx_filter_l3l4 *))0) != 0L) 
    #line 565 
    return -95;
  #line 567 
  return (*(aq_hw_ops->hw_filter_l3l4_set))(aq_hw,data);
}

#line 570  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_filters.c"
static int aq_add_del_fl3l4(struct aq_nic_s *aq_nic, struct aq_rx_filter *aq_rx_fltr, bool add)
{
  #line 575 
  struct aq_rx_filter_l3l4 data;
  #line 573 
  struct aq_hw_ops *aq_hw_ops = aq_nic->aq_hw_ops;
  #line 574 
  struct aq_hw_s *aq_hw = aq_nic->aq_hw;
  #line 577 
  if ((long)(aq_rx_fltr->aq_fsp.location + 4294967264U > 7U) != 0L) 
                                                                    #line 580 
                                                                    return -22;
  else {
    #line 577 
    if ((long)(aq_set_data_fl3l4(aq_nic,aq_rx_fltr,& data,
                        (_Bool)((bool)((int)add) != 0)) != 0) != 0L) 
      #line 580 
      return -22;
  }
  #line 582 
  return aq_set_fl3l4(aq_hw,aq_hw_ops,& data);
}

#line 585  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_filters.c"
static int aq_add_del_rule(struct aq_nic_s *aq_nic, struct aq_rx_filter *aq_rx_fltr, bool add)
{
  #line 588 
  int err = -22;
  #line 590 
  if ((aq_rx_fltr->aq_fsp.flow_type & 2147483648U) != 0U) {
    #line 591 
    if ((unsigned int)__builtin_bswap16((unsigned short)((int)aq_rx_fltr->aq_fsp.m_ext.vlan_tci)) == 4095U) {
      #line 593 
      aq_rx_fltr->type = aq_rx_filter_vlan;
      #line 594 
      err = aq_add_del_fvlan(aq_nic,aq_rx_fltr,(_Bool)((bool)((int)add) != 0));
    }
    else {
      #line 595 
      if ((unsigned int)__builtin_bswap16((unsigned short)((int)aq_rx_fltr->aq_fsp.m_ext.vlan_tci)) == 57344U) {
        #line 597 
        aq_rx_fltr->type = aq_rx_filter_ethertype;
        #line 598 
        err = aq_add_del_fether(aq_nic,aq_rx_fltr,(_Bool)((bool)((int)add) != 0));
      }
    }
  }
  else 
    #line 601 
    switch (aq_rx_fltr->aq_fsp.flow_type & 2147483647U) {
      #line 602 
      case (unsigned int)18: 
                             #line 602 
      ;
      #line 603 
      aq_rx_fltr->type = aq_rx_filter_ethertype;
      #line 604 
      err = aq_add_del_fether(aq_nic,aq_rx_fltr,(_Bool)((bool)((int)add) != 0));
      #line 605 
      break;
      #line 606 
      case (unsigned int)1: 
                            #line 606 
      ;
      #line 607 
      case (unsigned int)2: 
                            #line 607 
      ;
      #line 608 
      case (unsigned int)3: 
                            #line 608 
      ;
      #line 609 
      case (unsigned int)13: 
                             #line 609 
      ;
      #line 610 
      case (unsigned int)5: 
                            #line 610 
      ;
      #line 611 
      case (unsigned int)6: 
                            #line 611 
      ;
      #line 612 
      case (unsigned int)7: 
                            #line 612 
      ;
      #line 613 
      case (unsigned int)14: 
                             #line 613 
      ;
      #line 614 
      aq_rx_fltr->type = aq_rx_filter_l3l4;
      #line 615 
      err = aq_add_del_fl3l4(aq_nic,aq_rx_fltr,(_Bool)((bool)((int)add) != 0));
      #line 616 
      break;
      #line 617 
      default: 
               #line 617 
      ;
      #line 618 
      err = -22;
      #line 619 
      break;
    }
  #line 623 
  return err;
}

#line 626  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_filters.c"
static int aq_update_table_filters(struct aq_nic_s *aq_nic, struct aq_rx_filter *aq_rx_fltr, u16 index, struct ethtool_rxnfc *cmd)
{
  #line 635 
  struct aq_rx_filter *tmp_1;
  #line 635 
  void *__mptr;
  #line 632 
  struct hlist_node *aq_node2;
  #line 630 
  struct aq_hw_rx_fltrs_s *rx_fltrs = aq_get_hw_rx_fltrs(aq_nic);
  #line 631 
  struct aq_rx_filter *rule = (struct aq_rx_filter *)0;
  #line 631 
  struct aq_rx_filter *parent = (struct aq_rx_filter *)0;
  #line 633 
  int err = -22;
  {
    #line 635 
    struct hlist_node *____ptr = rx_fltrs->filter_list.first;
    #line 635 
    if (____ptr != (struct hlist_node *)0) {
      #line 635 
      __mptr = (void *)____ptr;
      #line 635 
      tmp_1 = ((struct aq_rx_filter *)__mptr);
    }
    else 
         #line 635 
         tmp_1 = (struct aq_rx_filter *)0;
    }
  #line 635 
  rule = tmp_1;
  #line 635 
  while (1) {
    #line 635 
    void *__mptr_0;
    #line 635 
    struct aq_rx_filter *tmp_4;
    #line 635 
    if (rule != (struct aq_rx_filter *)0) {
      #line 635 
      aq_node2 = rule->aq_node.next;
      #line 635 
      if (! (1 != 0)) 
                      #line 635 
                      break;
    }
    else 
         #line 635 
         break;
    #line 637 
    if (rule->aq_fsp.location >= (unsigned int)index) 
                                                      #line 638 
                                                      break;
    #line 639 
    parent = rule;
    {
      #line 635 
      struct hlist_node *____ptr_0 = aq_node2;
      #line 635 
      if (____ptr_0 != (struct hlist_node *)0) {
        #line 635 
        __mptr_0 = (void *)____ptr_0;
        #line 635 
        tmp_4 = ((struct aq_rx_filter *)__mptr_0);
      }
      else 
           #line 635 
           tmp_4 = (struct aq_rx_filter *)0;
      }
    #line 635 
    rule = tmp_4;
  }
  #line 642 
  if (rule != (struct aq_rx_filter *)0 && rule->aq_fsp.location == (unsigned int)index) {
    #line 643 
    err = aq_add_del_rule(aq_nic,rule,(_Bool)0);
    #line 644 
    hlist_del(& rule->aq_node);
    #line 645 
    kfree((void *)rule);
    #line 646 
    rx_fltrs->active_filters = (u16)((int)rx_fltrs->active_filters - 1);
  }
  #line 649 
  if ((long)(aq_rx_fltr == (struct aq_rx_filter *)0) != 0L) 
                                                            #line 650 
                                                            return err;
  #line 652 
  INIT_HLIST_NODE(& aq_rx_fltr->aq_node);
  #line 654 
  if (parent != (struct aq_rx_filter *)0) 
                                          #line 655 
                                          hlist_add_behind(& aq_rx_fltr->aq_node,& parent->aq_node); else 
                                                                    #line 657 
                                                                    hlist_add_head(& aq_rx_fltr->aq_node,& rx_fltrs->filter_list);
  #line 659 
  rx_fltrs->active_filters = (u16)((int)rx_fltrs->active_filters + 1);
  #line 661 
  return 0;
}

#line 664  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_filters.c"
u16 aq_get_rxnfc_count_all_rules(struct aq_nic_s *aq_nic)
{
  #line 666 
  struct aq_hw_rx_fltrs_s *rx_fltrs = aq_get_hw_rx_fltrs(aq_nic);
  #line 668 
  return rx_fltrs->active_filters;
}

#line 671  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_filters.c"
struct aq_hw_rx_fltrs_s *aq_get_hw_rx_fltrs(struct aq_nic_s *aq_nic)
{
  #line 673 
  return & aq_nic->aq_hw_rx_fltrs;
}

#line 676  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_filters.c"
int aq_add_rxnfc_rule(struct aq_nic_s *aq_nic, struct ethtool_rxnfc *cmd)
{
  #line 681 
  struct aq_rx_filter *aq_rx_fltr;
  #line 678 
  struct aq_hw_rx_fltrs_s *rx_fltrs = aq_get_hw_rx_fltrs(aq_nic);
  #line 679 
  struct ethtool_rx_flow_spec *fsp = & cmd->fs;
  #line 682 
  int err = 0;
  #line 684 
  err = aq_check_rule(aq_nic,fsp);
  #line 685 
  if (err != 0) 
                #line 686 
                goto err_exit;
  #line 688 
  aq_rx_fltr = (struct aq_rx_filter *)kzalloc_1(192UL,3264U);
  #line 689 
  if ((long)(aq_rx_fltr == (struct aq_rx_filter *)0) != 0L) {
    #line 690 
    err = -12;
    #line 691 
    goto err_exit;
  }
  #line 694 
  memcpy((void *)(& aq_rx_fltr->aq_fsp),(void *)fsp,168UL);
  #line 696 
  err = aq_update_table_filters(aq_nic,aq_rx_fltr,(unsigned short)((int)((unsigned short)fsp->location)),(struct ethtool_rxnfc *)0);
  #line 697 
  if ((long)(err != 0) != 0L) 
                              #line 698 
                              goto err_free;
  #line 700 
  err = aq_add_del_rule(aq_nic,aq_rx_fltr,(_Bool)1);
  #line 701 
  if ((long)(err != 0) != 0L) {
    #line 702 
    hlist_del(& aq_rx_fltr->aq_node);
    #line 703 
    rx_fltrs->active_filters = (u16)((int)rx_fltrs->active_filters - 1);
    #line 704 
    goto err_free;
  }
  #line 707 
  return 0;
  #line 709 
  err_free: 
            #line 709 
  ;
  #line 710 
  kfree((void *)aq_rx_fltr);
  #line 711 
  err_exit: 
            #line 711 
  ;
  #line 712 
  return err;
}

#line 715  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_filters.c"
int aq_del_rxnfc_rule(struct aq_nic_s *aq_nic, struct ethtool_rxnfc *cmd)
{
  #line 722 
  void *__mptr;
  #line 722 
  struct aq_rx_filter *tmp_1;
  #line 719 
  struct hlist_node *aq_node2;
  #line 717 
  struct aq_hw_rx_fltrs_s *rx_fltrs = aq_get_hw_rx_fltrs(aq_nic);
  #line 718 
  struct aq_rx_filter *rule = (struct aq_rx_filter *)0;
  #line 720 
  int err = -22;
  {
    #line 722 
    struct hlist_node *____ptr = rx_fltrs->filter_list.first;
    #line 722 
    if (____ptr != (struct hlist_node *)0) {
      #line 722 
      __mptr = (void *)____ptr;
      #line 722 
      tmp_1 = ((struct aq_rx_filter *)__mptr);
    }
    else 
         #line 722 
         tmp_1 = (struct aq_rx_filter *)0;
    }
  #line 722 
  rule = tmp_1;
  #line 722 
  while (1) {
    #line 722 
    void *__mptr_0;
    #line 722 
    struct aq_rx_filter *tmp_4;
    #line 722 
    if (rule != (struct aq_rx_filter *)0) {
      #line 722 
      aq_node2 = rule->aq_node.next;
      #line 722 
      if (! (1 != 0)) 
                      #line 722 
                      break;
    }
    else 
         #line 722 
         break;
    #line 724 
    if (rule->aq_fsp.location == cmd->fs.location) 
                                                   #line 725 
                                                   break;
    {
      #line 722 
      struct hlist_node *____ptr_0 = aq_node2;
      #line 722 
      if (____ptr_0 != (struct hlist_node *)0) {
        #line 722 
        __mptr_0 = (void *)____ptr_0;
        #line 722 
        tmp_4 = ((struct aq_rx_filter *)__mptr_0);
      }
      else 
           #line 722 
           tmp_4 = (struct aq_rx_filter *)0;
      }
    #line 722 
    rule = tmp_4;
  }
  #line 728 
  if (rule != (struct aq_rx_filter *)0 && rule->aq_fsp.location == cmd->fs.location) {
    #line 729 
    err = aq_add_del_rule(aq_nic,rule,(_Bool)0);
    #line 730 
    hlist_del(& rule->aq_node);
    #line 731 
    kfree((void *)rule);
    #line 732 
    rx_fltrs->active_filters = (u16)((int)rx_fltrs->active_filters - 1);
  }
  #line 734 
  return err;
}

#line 737  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_filters.c"
int aq_get_rxnfc_rule(struct aq_nic_s *aq_nic, struct ethtool_rxnfc *cmd)
{
  #line 745 
  void *__mptr;
  #line 745 
  struct aq_rx_filter *tmp_1;
  #line 743 
  struct hlist_node *aq_node2;
  #line 739 
  struct aq_hw_rx_fltrs_s *rx_fltrs = aq_get_hw_rx_fltrs(aq_nic);
  #line 740 
  struct ethtool_rx_flow_spec *fsp = & cmd->fs;
  #line 742 
  struct aq_rx_filter *rule = (struct aq_rx_filter *)0;
  {
    #line 745 
    struct hlist_node *____ptr = rx_fltrs->filter_list.first;
    #line 745 
    if (____ptr != (struct hlist_node *)0) {
      #line 745 
      __mptr = (void *)____ptr;
      #line 745 
      tmp_1 = ((struct aq_rx_filter *)__mptr);
    }
    else 
         #line 745 
         tmp_1 = (struct aq_rx_filter *)0;
    }
  #line 745 
  rule = tmp_1;
  #line 745 
  while (1) {
    #line 745 
    void *__mptr_0;
    #line 745 
    struct aq_rx_filter *tmp_4;
    #line 745 
    if (rule != (struct aq_rx_filter *)0) {
      #line 745 
      aq_node2 = rule->aq_node.next;
      #line 745 
      if (! (1 != 0)) 
                      #line 745 
                      break;
    }
    else 
         #line 745 
         break;
    #line 747 
    if (fsp->location <= rule->aq_fsp.location) 
                                                #line 748 
                                                break;
    {
      #line 745 
      struct hlist_node *____ptr_0 = aq_node2;
      #line 745 
      if (____ptr_0 != (struct hlist_node *)0) {
        #line 745 
        __mptr_0 = (void *)____ptr_0;
        #line 745 
        tmp_4 = ((struct aq_rx_filter *)__mptr_0);
      }
      else 
           #line 745 
           tmp_4 = (struct aq_rx_filter *)0;
      }
    #line 745 
    rule = tmp_4;
  }
  #line 750 
  if ((long)(rule == (struct aq_rx_filter *)0) != 0L || (long)(fsp->location != rule->aq_fsp.location) != 0L) 
    #line 751 
    return -22;
  #line 753 
  memcpy((void *)fsp,(void *)(& rule->aq_fsp),168UL);
  #line 755 
  return 0;
}

#line 758  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_filters.c"
int aq_get_rxnfc_all_rules(struct aq_nic_s *aq_nic, struct ethtool_rxnfc *cmd, u32 *rule_locs)
{
  #line 768 
  void *__mptr;
  #line 768 
  struct aq_rx_filter *tmp_2;
  #line 762 
  struct hlist_node *aq_node2;
  #line 763 
  struct aq_rx_filter *rule;
  #line 761 
  struct aq_hw_rx_fltrs_s *rx_fltrs = aq_get_hw_rx_fltrs(aq_nic);
  #line 764 
  int count = 0;
  #line 766 
  cmd->data = (unsigned long long)aq_get_rxnfc_count_all_rules(aq_nic);
  {
    #line 768 
    struct hlist_node *____ptr = rx_fltrs->filter_list.first;
    #line 768 
    if (____ptr != (struct hlist_node *)0) {
      #line 768 
      __mptr = (void *)____ptr;
      #line 768 
      tmp_2 = ((struct aq_rx_filter *)__mptr);
    }
    else 
         #line 768 
         tmp_2 = (struct aq_rx_filter *)0;
    }
  #line 768 
  rule = tmp_2;
  #line 768 
  while (1) {
    #line 768 
    struct aq_rx_filter *tmp_5;
    #line 768 
    void *__mptr_0;
    #line 768 
    if (rule != (struct aq_rx_filter *)0) {
      #line 768 
      aq_node2 = rule->aq_node.next;
      #line 768 
      if (! (1 != 0)) 
                      #line 768 
                      break;
    }
    else 
         #line 768 
         break;
    {
      #line 773 
      int tmp_7;
      #line 770 
      if ((long)(cmd->__anonCompField_ethtool_rxnfc_99.rule_cnt == (unsigned int)count) != 0L) 
        #line 771 
        return -90;
      #line 773 
      tmp_7 = count;
      #line 773 
      count ++;
      #line 773 
      *(rule_locs + (unsigned long)tmp_7) = rule->aq_fsp.location;
    }
    {
      #line 768 
      struct hlist_node *____ptr_0 = aq_node2;
      #line 768 
      if (____ptr_0 != (struct hlist_node *)0) {
        #line 768 
        __mptr_0 = (void *)____ptr_0;
        #line 768 
        tmp_5 = ((struct aq_rx_filter *)__mptr_0);
      }
      else 
           #line 768 
           tmp_5 = (struct aq_rx_filter *)0;
      }
    #line 768 
    rule = tmp_5;
  }
  #line 776 
  cmd->__anonCompField_ethtool_rxnfc_99.rule_cnt = (unsigned int)count;
  #line 778 
  return 0;
}

#line 781  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_filters.c"
int aq_clear_rxnfc_all_rules(struct aq_nic_s *aq_nic)
{
  #line 788 
  void *__mptr;
  #line 788 
  struct aq_rx_filter *tmp_1;
  #line 784 
  struct hlist_node *aq_node2;
  #line 785 
  struct aq_rx_filter *rule;
  #line 783 
  struct aq_hw_rx_fltrs_s *rx_fltrs = aq_get_hw_rx_fltrs(aq_nic);
  #line 786 
  int err = 0;
  {
    #line 788 
    struct hlist_node *____ptr = rx_fltrs->filter_list.first;
    #line 788 
    if (____ptr != (struct hlist_node *)0) {
      #line 788 
      __mptr = (void *)____ptr;
      #line 788 
      tmp_1 = ((struct aq_rx_filter *)__mptr);
    }
    else 
         #line 788 
         tmp_1 = (struct aq_rx_filter *)0;
    }
  #line 788 
  rule = tmp_1;
  #line 788 
  while (1) {
    #line 788 
    void *__mptr_0;
    #line 788 
    struct aq_rx_filter *tmp_4;
    #line 788 
    if (rule != (struct aq_rx_filter *)0) {
      #line 788 
      aq_node2 = rule->aq_node.next;
      #line 788 
      if (! (1 != 0)) 
                      #line 788 
                      break;
    }
    else 
         #line 788 
         break;
    #line 790 
    err = aq_add_del_rule(aq_nic,rule,(_Bool)0);
    #line 791 
    if (err != 0) 
                  #line 792 
                  goto err_exit;
    #line 793 
    hlist_del(& rule->aq_node);
    #line 794 
    kfree((void *)rule);
    #line 795 
    rx_fltrs->active_filters = (u16)((int)rx_fltrs->active_filters - 1);
    {
      #line 788 
      struct hlist_node *____ptr_0 = aq_node2;
      #line 788 
      if (____ptr_0 != (struct hlist_node *)0) {
        #line 788 
        __mptr_0 = (void *)____ptr_0;
        #line 788 
        tmp_4 = ((struct aq_rx_filter *)__mptr_0);
      }
      else 
           #line 788 
           tmp_4 = (struct aq_rx_filter *)0;
      }
    #line 788 
    rule = tmp_4;
  }
  #line 798 
  err_exit: 
            #line 798 
  ;
  #line 799 
  return err;
}

#line 802  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_filters.c"
int aq_reapply_rxnfc_all_rules(struct aq_nic_s *aq_nic)
{
  #line 809 
  void *__mptr;
  #line 809 
  struct aq_rx_filter *tmp_1;
  #line 805 
  struct hlist_node *aq_node2;
  #line 806 
  struct aq_rx_filter *rule;
  #line 804 
  struct aq_hw_rx_fltrs_s *rx_fltrs = aq_get_hw_rx_fltrs(aq_nic);
  #line 807 
  int err = 0;
  {
    #line 809 
    struct hlist_node *____ptr = rx_fltrs->filter_list.first;
    #line 809 
    if (____ptr != (struct hlist_node *)0) {
      #line 809 
      __mptr = (void *)____ptr;
      #line 809 
      tmp_1 = ((struct aq_rx_filter *)__mptr);
    }
    else 
         #line 809 
         tmp_1 = (struct aq_rx_filter *)0;
    }
  #line 809 
  rule = tmp_1;
  #line 809 
  while (1) {
    #line 809 
    void *__mptr_0;
    #line 809 
    struct aq_rx_filter *tmp_4;
    #line 809 
    if (rule != (struct aq_rx_filter *)0) {
      #line 809 
      aq_node2 = rule->aq_node.next;
      #line 809 
      if (! (1 != 0)) 
                      #line 809 
                      break;
    }
    else 
         #line 809 
         break;
    #line 811 
    err = aq_add_del_rule(aq_nic,rule,(_Bool)1);
    #line 812 
    if (err != 0) 
                  #line 813 
                  goto err_exit;
    {
      #line 809 
      struct hlist_node *____ptr_0 = aq_node2;
      #line 809 
      if (____ptr_0 != (struct hlist_node *)0) {
        #line 809 
        __mptr_0 = (void *)____ptr_0;
        #line 809 
        tmp_4 = ((struct aq_rx_filter *)__mptr_0);
      }
      else 
           #line 809 
           tmp_4 = (struct aq_rx_filter *)0;
      }
    #line 809 
    rule = tmp_4;
  }
  #line 816 
  err_exit: 
            #line 816 
  ;
  #line 817 
  return err;
}

#line 820  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_filters.c"
int aq_filters_vlans_update(struct aq_nic_s *aq_nic)
{
  #line 826 
  int i;
  #line 822 
  struct aq_hw_ops *aq_hw_ops = aq_nic->aq_hw_ops;
  #line 823 
  struct aq_hw_s *aq_hw = aq_nic->aq_hw;
  #line 824 
  int hweight = 0;
  #line 825 
  int err = 0;
  #line 828 
  if ((long)(aq_hw_ops->hw_filter_vlan_set == (int (*)(struct aq_hw_s *, struct aq_rx_filter_vlan *))0) != 0L) 
    #line 829 
    return -95;
  #line 830 
  if ((long)(aq_hw_ops->hw_filter_vlan_ctrl == (int (*)(struct aq_hw_s *, bool ))0) != 0L) 
    #line 831 
    return -95;
  #line 833 
  aq_fvlan_rebuild(aq_nic,(unsigned long *)(& aq_nic->active_vlans),(struct aq_rx_filter_vlan *)(& aq_nic->aq_hw_rx_fltrs.fl2.aq_vlans));
  #line 836 
  if (((aq_nic->ndev)->features & 512ULL) != 0ULL) {
    #line 837 
    i = 0;
    #line 837 
    while ((unsigned int)i <= 63U) {
      #line 838 
      hweight = (int)(hweight_long(aq_nic->active_vlans[i]) + (unsigned long)hweight);
      #line 837 
      i ++;
    }
    #line 840 
    err = (*(aq_hw_ops->hw_filter_vlan_ctrl))(aq_hw,(_Bool)0);
    #line 841 
    if (err != 0) 
                  #line 842 
                  return err;
  }
  #line 845 
  err = (*(aq_hw_ops->hw_filter_vlan_set))(aq_hw,(struct aq_rx_filter_vlan *)(& aq_nic->aq_hw_rx_fltrs.fl2.aq_vlans));
  #line 848 
  if (err != 0) 
                #line 849 
                return err;
  #line 851 
  if (((aq_nic->ndev)->features & 512ULL) != 0ULL) 
    #line 852 
    if ((unsigned int)hweight + 4294967295U <= 15U) {
      #line 853 
      err = (*(aq_hw_ops->hw_filter_vlan_ctrl))(aq_hw,(_Bool)((aq_nic->packet_filter & 256U) == 0U));
      #line 855 
      aq_nic->aq_nic_cfg.is_vlan_force_promisc = (_Bool)0;
    }
    else 
         #line 858 
         aq_nic->aq_nic_cfg.is_vlan_force_promisc = (_Bool)1;
  #line 862 
  return err;
}

#line 865  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_filters.c"
int aq_filters_vlan_offload_off(struct aq_nic_s *aq_nic)
{
  #line 867 
  struct aq_hw_ops *aq_hw_ops = aq_nic->aq_hw_ops;
  #line 868 
  struct aq_hw_s *aq_hw = aq_nic->aq_hw;
  #line 869 
  int err = 0;
  #line 871 
  memset((void *)(& aq_nic->active_vlans),0,512UL);
  #line 872 
  aq_fvlan_rebuild(aq_nic,(unsigned long *)(& aq_nic->active_vlans),(struct aq_rx_filter_vlan *)(& aq_nic->aq_hw_rx_fltrs.fl2.aq_vlans));
  #line 875 
  if ((long)(aq_hw_ops->hw_filter_vlan_set == (int (*)(struct aq_hw_s *, struct aq_rx_filter_vlan *))0) != 0L) 
    #line 876 
    return -95;
  #line 877 
  if ((long)(aq_hw_ops->hw_filter_vlan_ctrl == (int (*)(struct aq_hw_s *, bool ))0) != 0L) 
    #line 878 
    return -95;
  #line 880 
  aq_nic->aq_nic_cfg.is_vlan_force_promisc = (_Bool)1;
  #line 881 
  err = (*(aq_hw_ops->hw_filter_vlan_ctrl))(aq_hw,(_Bool)0);
  #line 882 
  if (err != 0) 
                #line 883 
                return err;
  #line 884 
  err = (*(aq_hw_ops->hw_filter_vlan_set))(aq_hw,(struct aq_rx_filter_vlan *)(& aq_nic->aq_hw_rx_fltrs.fl2.aq_vlans));
  #line 887 
  return err;
}

#line 115  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_filters.i.aux"
static unsigned long cif_find_next_bit(unsigned long *addr, unsigned long size, unsigned long offset)
{
  #line 118 
  return ldv_find_next_bit(addr,size,offset);
}

#line 430  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_filters.i.aux"
static void *kzalloc_1(size_t size, gfp_t flags)
{
  #line 433 
  return ldv_kzalloc(size,flags);
}

#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/bitops/instrumented-atomic.h"
#line 122  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_vec.i.aux"
static void cif_set_bit_2(long nr, unsigned long *addr);
#line 44  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/bitops/instrumented-atomic.h"
#line 129  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_vec.i.aux"
static void cif_clear_bit_2(long nr, unsigned long *addr);
#line 325  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cpumask.h"
__inline static void cpumask_set_cpu_0(unsigned int cpu, struct cpumask *dstp)
{
  #line 327 
  ;
  #line 327 
  cif_set_bit_2((long)cpumask_check(cpu),(unsigned long *)(& dstp->bits));
  #line 328 
  return;
}

#line 668  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/slab.h"
#line 430  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_vec.i.aux"
static void *kzalloc_2(size_t size, gfp_t flags);
#line 512  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
__inline static void napi_enable_0(struct napi_struct *n)
{
  #line 514 
  int tmp_0;
  #line 514 
  if (test_bit(0L,& n->state)) 
                               #line 514 
                               tmp_0 = 0; else 
                                               #line 514 
                                               tmp_0 = 1;
  #line 514 
  if ((long)tmp_0 != 0L) {
    #line 515 
    ldv_inline_asm();
    #line 516 
    ldv_inline_asm();
    #line 517 
    ldv_inline_asm();
    #line 514 
    ;
  }
  #line 516 
  cif_clear_bit_2(0L,& n->state);
  #line 517 
  cif_clear_bit_2(3L,& n->state);
  #line 518 
  return;
}

#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_vec.h"
#line 292  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_vec.c"
irqreturn_t aq_vec_isr(int irq, void *private);
#line 26  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_vec.h"
#line 103  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_vec.c"
struct aq_vec_s *aq_vec_alloc(struct aq_nic_s *aq_nic, unsigned int idx, struct aq_nic_cfg_s *aq_nic_cfg);
#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_vec.h"
#line 166  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_vec.c"
int aq_vec_init(struct aq_vec_s *self, struct aq_hw_ops *aq_hw_ops, struct aq_hw_s *aq_hw);
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_vec.h"
#line 254  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_vec.c"
void aq_vec_deinit(struct aq_vec_s *self);
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_vec.h"
#line 271  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_vec.c"
void aq_vec_free(struct aq_vec_s *self);
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_vec.h"
#line 212  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_vec.c"
int aq_vec_start(struct aq_vec_s *self);
#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_vec.h"
#line 237  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_vec.c"
void aq_vec_stop(struct aq_vec_s *self);
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_vec.h"
#line 331  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_vec.c"
cpumask_t *aq_vec_get_affinity_mask(struct aq_vec_s *self);
#line 35  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_vec.h"
#line 364  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_vec.c"
int aq_vec_get_sw_stats(struct aq_vec_s *self, u64 *data, unsigned int *p_count);
#line 37  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_vec.h"
#line 336  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_vec.c"
void aq_vec_add_stats(struct aq_vec_s *self, struct aq_ring_stats_rx_s *stats_rx, struct aq_ring_stats_tx_s *stats_tx);
#line 144  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_nic.h"
#line 144 
void aq_nic_set_tx_ring(struct aq_nic_s *self, unsigned int idx, struct aq_ring_s *ring);
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_vec.c"
static int aq_vec_poll(struct napi_struct *napi, int budget)
{
  #line 34 
  void *__mptr;
  #line 34 
  __mptr = (void *)napi;
  #line 34 
  struct aq_vec_s *self = ((struct aq_vec_s *)(__mptr + 18446744073709550552U));
  #line 35 
  unsigned int sw_tail_old = 0U;
  #line 36 
  struct aq_ring_s *ring = (struct aq_ring_s *)0;
  #line 37 
  bool was_tx_cleaned = (_Bool)1;
  #line 38 
  unsigned int i = 0U;
  #line 39 
  int work_done = 0;
  #line 40 
  int err = 0;
  #line 42 
  if (self == (struct aq_vec_s *)0) 
                                    #line 43 
                                    err = -22;
  else {
    #line 45 
    i = 0U;
    #line 45 
    ring = (struct aq_ring_s *)(& self->ring[0]);
    #line 45 
    while (self->tx_rings > i) {
      #line 47 
      if ((self->aq_hw_ops)->hw_ring_tx_head_update != (int (*)(struct aq_hw_s *, struct aq_ring_s *))0) {
        #line 48 
        err = (*((self->aq_hw_ops)->hw_ring_tx_head_update))(self->aq_hw,ring);
        #line 51 
        if (err < 0) 
                     #line 52 
                     goto err_exit;
      }
      #line 55 
      if (ring->sw_head != ring->hw_head) {
        #line 57 
        was_tx_cleaned = aq_ring_tx_clean(ring);
        #line 58 
        aq_ring_update_queue_state(ring);
      }
      #line 61 
      err = (*((self->aq_hw_ops)->hw_ring_rx_receive))(self->aq_hw,ring + 1U);
      #line 63 
      if (err < 0) 
                   #line 64 
                   goto err_exit;
      #line 66 
      if ((ring + 1U)->sw_head != (ring + 1U)->hw_head) {
        #line 68 
        err = aq_ring_rx_clean(ring + 1U,napi,& work_done,budget - work_done);
        #line 72 
        if (err < 0) 
                     #line 73 
                     goto err_exit;
        #line 75 
        sw_tail_old = (ring + 1U)->sw_tail;
        #line 77 
        err = aq_ring_rx_fill(ring + 1U);
        #line 78 
        if (err < 0) 
                     #line 79 
                     goto err_exit;
        #line 81 
        err = (*((self->aq_hw_ops)->hw_ring_rx_fill))(self->aq_hw,ring + 1U,sw_tail_old);
        #line 84 
        if (err < 0) 
                     #line 85 
                     goto err_exit;
      }
      #line 46 
      i ++;
      #line 46 
      ring = (struct aq_ring_s *)(& self->ring[i]);
    }
    #line 89 
    err_exit: 
              #line 89 
    ;
    #line 90 
    if (! was_tx_cleaned) 
                          #line 91 
                          work_done = budget;
    #line 93 
    if (work_done < budget) {
      #line 94 
      napi_complete_done(napi,work_done);
      #line 95 
      (*((self->aq_hw_ops)->hw_irq_enable))(self->aq_hw,(unsigned long long)(1U << self->aq_ring_param.vec_idx));
    }
  }
  #line 100 
  return work_done;
}

#line 103  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_vec.c"
struct aq_vec_s *aq_vec_alloc(struct aq_nic_s *aq_nic, unsigned int idx, struct aq_nic_cfg_s *aq_nic_cfg)
{
  #line 106 
  struct aq_ring_s *ring = (struct aq_ring_s *)0;
  #line 107 
  struct aq_vec_s *self = (struct aq_vec_s *)0;
  #line 108 
  unsigned int i = 0U;
  #line 109 
  int err = 0;
  #line 111 
  self = (struct aq_vec_s *)kzalloc_2(3504UL,3264U);
  #line 112 
  if (self == (struct aq_vec_s *)0) {
    #line 113 
    err = -12;
    #line 114 
    goto err_exit;
  }
  #line 117 
  self->aq_nic = aq_nic;
  #line 118 
  self->aq_ring_param.vec_idx = idx;
  #line 119 
  self->aq_ring_param.cpu = (unsigned int)aq_nic_cfg->aq_rss.base_cpu_number + idx;
  #line 122 
  cpumask_set_cpu_0(self->aq_ring_param.cpu,& self->aq_ring_param.affinity_mask);
  #line 125 
  self->tx_rings = 0U;
  #line 126 
  self->rx_rings = 0U;
  #line 128 
  ;
  #line 128 
  netif_napi_add(aq_nic_get_ndev(aq_nic),& self->napi,& aq_vec_poll,64);
  #line 131 
  i = 0U;
  #line 131 
  while ((unsigned int)aq_nic_cfg->tcs > i) {
    {
      #line 132 
      unsigned int idx_ring = self->tx_rings * 8U + self->aq_ring_param.vec_idx;
      #line 136 
      ring = aq_ring_tx_alloc(& self->ring[i][0],aq_nic,idx_ring,aq_nic_cfg);
      #line 138 
      if (ring == (struct aq_ring_s *)0) {
        #line 139 
        err = -12;
        #line 140 
        goto err_exit;
      }
      #line 143 
      (self->tx_rings) ++;
      #line 145 
      aq_nic_set_tx_ring(aq_nic,idx_ring,ring);
      #line 147 
      ring = aq_ring_rx_alloc(& self->ring[i][1],aq_nic,idx_ring,aq_nic_cfg);
      #line 149 
      if (ring == (struct aq_ring_s *)0) {
        #line 150 
        err = -12;
        #line 151 
        goto err_exit;
      }
      #line 154 
      (self->rx_rings) ++;
    }
    #line 131 
    i ++;
  }
  #line 157 
  err_exit: 
            #line 157 
  ;
  #line 158 
  if (err < 0) {
    #line 159 
    aq_vec_free(self);
    #line 160 
    self = (struct aq_vec_s *)0;
  }
  #line 163 
  return self;
}

#line 166  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_vec.c"
int aq_vec_init(struct aq_vec_s *self, struct aq_hw_ops *aq_hw_ops, struct aq_hw_s *aq_hw)
{
  #line 169 
  struct aq_ring_s *ring = (struct aq_ring_s *)0;
  #line 170 
  unsigned int i = 0U;
  #line 171 
  int err = 0;
  #line 173 
  self->aq_hw_ops = aq_hw_ops;
  #line 174 
  self->aq_hw = aq_hw;
  #line 176 
  i = 0U;
  #line 176 
  ring = (struct aq_ring_s *)(& self->ring[0]);
  #line 176 
  while (self->tx_rings > i) {
    #line 178 
    err = aq_ring_init(ring);
    #line 179 
    if (err < 0) 
                 #line 180 
                 goto err_exit;
    #line 182 
    err = (*((self->aq_hw_ops)->hw_ring_tx_init))(self->aq_hw,ring,& self->aq_ring_param);
    #line 185 
    if (err < 0) 
                 #line 186 
                 goto err_exit;
    #line 188 
    err = aq_ring_init(ring + 1U);
    #line 189 
    if (err < 0) 
                 #line 190 
                 goto err_exit;
    #line 192 
    err = (*((self->aq_hw_ops)->hw_ring_rx_init))(self->aq_hw,ring + 1U,& self->aq_ring_param);
    #line 195 
    if (err < 0) 
                 #line 196 
                 goto err_exit;
    #line 198 
    err = aq_ring_rx_fill(ring + 1U);
    #line 199 
    if (err < 0) 
                 #line 200 
                 goto err_exit;
    #line 202 
    err = (*((self->aq_hw_ops)->hw_ring_rx_fill))(self->aq_hw,ring + 1U,0U);
    #line 204 
    if (err < 0) 
                 #line 205 
                 goto err_exit;
    #line 177 
    i ++;
    #line 177 
    ring = (struct aq_ring_s *)(& self->ring[i]);
  }
  #line 208 
  err_exit: 
            #line 208 
  ;
  #line 209 
  return err;
}

#line 212  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_vec.c"
int aq_vec_start(struct aq_vec_s *self)
{
  #line 214 
  struct aq_ring_s *ring = (struct aq_ring_s *)0;
  #line 215 
  unsigned int i = 0U;
  #line 216 
  int err = 0;
  #line 218 
  i = 0U;
  #line 218 
  ring = (struct aq_ring_s *)(& self->ring[0]);
  #line 218 
  while (self->tx_rings > i) {
    #line 220 
    err = (*((self->aq_hw_ops)->hw_ring_tx_start))(self->aq_hw,ring);
    #line 222 
    if (err < 0) 
                 #line 223 
                 goto err_exit;
    #line 225 
    err = (*((self->aq_hw_ops)->hw_ring_rx_start))(self->aq_hw,ring + 1U);
    #line 227 
    if (err < 0) 
                 #line 228 
                 goto err_exit;
    #line 219 
    i ++;
    #line 219 
    ring = (struct aq_ring_s *)(& self->ring[i]);
  }
  #line 231 
  napi_enable_0(& self->napi);
  #line 233 
  err_exit: 
            #line 233 
  ;
  #line 234 
  return err;
}

#line 237  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_vec.c"
void aq_vec_stop(struct aq_vec_s *self)
{
  #line 239 
  struct aq_ring_s *ring = (struct aq_ring_s *)0;
  #line 240 
  unsigned int i = 0U;
  #line 242 
  i = 0U;
  #line 242 
  ring = (struct aq_ring_s *)(& self->ring[0]);
  #line 242 
  while (self->tx_rings > i) {
    #line 244 
    (*((self->aq_hw_ops)->hw_ring_tx_stop))(self->aq_hw,ring);
    #line 247 
    (*((self->aq_hw_ops)->hw_ring_rx_stop))(self->aq_hw,ring + 1U);
    #line 243 
    i ++;
    #line 243 
    ring = (struct aq_ring_s *)(& self->ring[i]);
  }
  #line 251 
  napi_disable(& self->napi);
  #line 252 
  return;
}

#line 254  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_vec.c"
void aq_vec_deinit(struct aq_vec_s *self)
{
  #line 256 
  struct aq_ring_s *ring = (struct aq_ring_s *)0;
  #line 257 
  unsigned int i = 0U;
  #line 259 
  if (self == (struct aq_vec_s *)0) 
                                    #line 260 
                                    goto err_exit;
  #line 262 
  i = 0U;
  #line 262 
  ring = (struct aq_ring_s *)(& self->ring[0]);
  #line 262 
  while (self->tx_rings > i) {
    #line 264 
    aq_ring_tx_clean(ring);
    #line 265 
    aq_ring_rx_deinit(ring + 1U);
    #line 263 
    i ++;
    #line 263 
    ring = (struct aq_ring_s *)(& self->ring[i]);
  }
  #line 268 
  err_exit: 
            #line 268 
  ;
  #line 269 
  return;
}

#line 271  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_vec.c"
void aq_vec_free(struct aq_vec_s *self)
{
  #line 273 
  struct aq_ring_s *ring = (struct aq_ring_s *)0;
  #line 274 
  unsigned int i = 0U;
  #line 276 
  if (self == (struct aq_vec_s *)0) 
                                    #line 277 
                                    goto err_exit;
  #line 279 
  i = 0U;
  #line 279 
  ring = (struct aq_ring_s *)(& self->ring[0]);
  #line 279 
  while (self->tx_rings > i) {
    #line 281 
    aq_ring_free(ring);
    #line 282 
    aq_ring_free(ring + 1U);
    #line 280 
    i ++;
    #line 280 
    ring = (struct aq_ring_s *)(& self->ring[i]);
  }
  #line 285 
  netif_napi_del(& self->napi);
  #line 287 
  kfree((void *)self);
  #line 289 
  err_exit: 
            #line 289 
  ;
  #line 290 
  return;
}

#line 292  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_vec.c"
irqreturn_t aq_vec_isr(int irq, void *private)
{
  #line 294 
  struct aq_vec_s *self = (struct aq_vec_s *)private;
  #line 295 
  int err = 0;
  #line 297 
  if (self == (struct aq_vec_s *)0) {
    #line 298 
    err = -22;
    #line 299 
    goto err_exit;
  }
  #line 301 
  napi_schedule(& self->napi);
  #line 303 
  err_exit: 
            #line 303 
  ;
  #line 304 
  return (enum irqreturn)(err >= 0);
}

#line 307  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_vec.c"
irqreturn_t aq_vec_isr_legacy(int irq, void *private)
{
  #line 311 
  int err;
  #line 309 
  struct aq_vec_s *self = (struct aq_vec_s *)private;
  #line 310 
  u64 irq_mask = 0ULL;
  #line 313 
  if (self == (struct aq_vec_s *)0) 
                                    #line 314 
                                    return IRQ_NONE;
  #line 315 
  err = (*((self->aq_hw_ops)->hw_irq_read))(self->aq_hw,& irq_mask);
  #line 316 
  if (err < 0) 
               #line 317 
               return IRQ_NONE;
  #line 319 
  if (irq_mask != 0ULL) {
    #line 320 
    (*((self->aq_hw_ops)->hw_irq_disable))(self->aq_hw,(unsigned long long)(1U << self->aq_ring_param.vec_idx));
    #line 322 
    napi_schedule(& self->napi);
  }
  else {
    #line 324 
    (*((self->aq_hw_ops)->hw_irq_enable))(self->aq_hw,1ULL);
    #line 325 
    return IRQ_NONE;
  }
  #line 328 
  return IRQ_HANDLED;
}

#line 331  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_vec.c"
cpumask_t *aq_vec_get_affinity_mask(struct aq_vec_s *self)
{
  #line 333 
  return & self->aq_ring_param.affinity_mask;
}

#line 336  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_vec.c"
void aq_vec_add_stats(struct aq_vec_s *self, struct aq_ring_stats_rx_s *stats_rx, struct aq_ring_stats_tx_s *stats_tx)
{
  #line 340 
  struct aq_ring_s *ring = (struct aq_ring_s *)0;
  #line 341 
  unsigned int r = 0U;
  #line 343 
  r = 0U;
  #line 343 
  ring = (struct aq_ring_s *)(& self->ring[0]);
  #line 343 
  while (self->tx_rings > r) {
    {
      #line 345 
      struct aq_ring_stats_tx_s *tx = & ring->stats.tx;
      #line 346 
      struct aq_ring_stats_rx_s *rx = & (ring + 1U)->stats.rx;
      #line 348 
      stats_rx->packets += rx->packets;
      #line 349 
      stats_rx->bytes += rx->bytes;
      #line 350 
      stats_rx->errors += rx->errors;
      #line 351 
      stats_rx->jumbo_packets += rx->jumbo_packets;
      #line 352 
      stats_rx->lro_packets += rx->lro_packets;
      #line 353 
      stats_rx->pg_losts += rx->pg_losts;
      #line 354 
      stats_rx->pg_flips += rx->pg_flips;
      #line 355 
      stats_rx->pg_reuses += rx->pg_reuses;
      #line 357 
      stats_tx->packets += tx->packets;
      #line 358 
      stats_tx->bytes += tx->bytes;
      #line 359 
      stats_tx->errors += tx->errors;
      #line 360 
      stats_tx->queue_restarts += tx->queue_restarts;
    }
    #line 344 
    r ++;
    #line 344 
    ring = (struct aq_ring_s *)(& self->ring[r]);
  }
  #line 362 
  return;
}

#line 364  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_vec.c"
int aq_vec_get_sw_stats(struct aq_vec_s *self, u64 *data, unsigned int *p_count)
{
  #line 366 
  struct aq_ring_stats_rx_s stats_rx;
  #line 367 
  struct aq_ring_stats_tx_s stats_tx;
  #line 368 
  unsigned int count = 0U;
  #line 370 
  memset((void *)(& stats_rx),0,64UL);
  #line 371 
  memset((void *)(& stats_tx),0,32UL);
  #line 372 
  aq_vec_add_stats(self,& stats_rx,& stats_tx);
  #line 376 
  *(data + (unsigned long)count) += stats_rx.packets;
  #line 377 
  count ++;
  #line 377 
  *(data + (unsigned long)count) += stats_tx.packets;
  #line 378 
  count ++;
  #line 378 
  *(data + (unsigned long)count) += stats_tx.queue_restarts;
  #line 379 
  count ++;
  #line 379 
  *(data + (unsigned long)count) += stats_rx.jumbo_packets;
  #line 380 
  count ++;
  #line 380 
  *(data + (unsigned long)count) += stats_rx.lro_packets;
  #line 381 
  count ++;
  #line 381 
  *(data + (unsigned long)count) += stats_rx.errors;
  #line 383 
  if (p_count != (unsigned int *)0U) {
    #line 384 
    count ++;
    #line 384 
    *p_count = count;
  }
  #line 386 
  return 0;
}

#line 122  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_vec.i.aux"
static void cif_set_bit_2(long nr, unsigned long *addr)
{
  #line 125 
  ldv_set_bit(nr,addr);
  #line 126 
  return;
}

#line 129  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_vec.i.aux"
static void cif_clear_bit_2(long nr, unsigned long *addr)
{
  #line 132 
  ldv_clear_bit(nr,addr);
  #line 133 
  return;
}

#line 430  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_vec.i.aux"
static void *kzalloc_2(size_t size, gfp_t flags)
{
  #line 433 
  return ldv_kzalloc(size,flags);
}

/* compiler builtin: 
   unsigned long __builtin_bswap64(unsigned long);   */
#line 65  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/math64.h"
__inline static u64 div64_u64(u64 dividend, u64 divisor)
{
  #line 67 
  return dividend / divisor;
}

#line 77  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/math64.h"
__inline static s64 div64_s64(s64 dividend, s64 divisor)
{
  #line 79 
  return dividend / divisor;
}

#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/cmpxchg_64.h"
__inline static int arch_atomic_read_5(atomic_t *v)
{
  #line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/atomic.h"
  union __anonunion___u_7404 __u;
  #line 31 
  __read_once_size((void *)(& v->counter),(void *)(& __u.__c),4);
  #line 31 
  return (__u.__val);
}

#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/atomic-instrumented.h"
__inline static int atomic_read_5(atomic_t *v)
{
  #line 26 
  kasan_check_read((void *)v,4U);
  #line 27 
  return arch_atomic_read_5(v);
}

#line 237 
#line 185  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/hw_atl_b0.i.aux"
static void atomic_inc_1(atomic_t *v);
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_utils.h"
__inline static bool aq_utils_obj_test_2(atomic_t *flags, u32 mask)
{
  #line 36 
  ;
  #line 36 
  return (_Bool)(((unsigned int)atomic_read_5(flags) & mask) != 0U);
}

#line 560  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.h"
#line 560 
int hw_atl_utils_soft_reset(struct aq_hw_s *self);
#line 138  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.h"
#line 138 
void hw_atl_itr_rsc_en_set(struct aq_hw_s *aq_hw, u32 enable);
#line 141 
#line 141 
void hw_atl_itr_rsc_delay_set(struct aq_hw_s *aq_hw, u32 delay);
#line 201 
#line 201 
void hw_atl_rdm_rdm_intr_moder_en_set(struct aq_hw_s *aq_hw, u32 rdm_intr_moder_en);
#line 253 
#line 253 
void hw_atl_reg_rx_intr_moder_ctrl_set(struct aq_hw_s *aq_hw, u32 rx_intr_moderation_ctl, u32 queue);
#line 277 
#line 277 
void hw_atl_reg_tx_intr_moder_ctrl_set(struct aq_hw_s *aq_hw, u32 tx_intr_moderation_ctl, u32 queue);
#line 289 
#line 289 
void hw_atl_rpb_dma_sys_lbk_set(struct aq_hw_s *aq_hw, u32 dma_sys_lbk);
#line 292 
#line 292 
void hw_atl_rpb_dma_net_lbk_set(struct aq_hw_s *aq_hw, u32 dma_net_lbk);
#line 299 
#line 299 
u32 hw_atl_rpb_rpf_rx_traf_class_mode_get(struct aq_hw_s *aq_hw);
#line 324 
#line 324 
void hw_atl_rdm_rx_dma_desc_cache_init_tgl(struct aq_hw_s *aq_hw);
#line 327 
#line 327 
u32 hw_atl_rdm_rx_dma_desc_cache_init_done_get(struct aq_hw_s *aq_hw);
#line 376 
#line 376 
void hw_atl_rpfl2_accept_all_mc_packets_set(struct aq_hw_s *aq_hw, u32 l2_accept_all_mc_packets);
#line 410 
#line 410 
void hw_atl_rpf_tpo_to_rpf_sys_lbk_set(struct aq_hw_s *aq_hw, u32 tpo_to_rpf_sys_lbk);
#line 424 
#line 424 
void hw_atl_rpf_vlan_untagged_act_set(struct aq_hw_s *aq_hw, u32 vlan_untagged_act);
#line 428 
#line 428 
void hw_atl_rpf_vlan_accept_untagged_packets_set(struct aq_hw_s *aq_hw, u32 vlan_acc_untagged_packets);
#line 432 
#line 432 
void hw_atl_rpf_vlan_flr_en_set(struct aq_hw_s *aq_hw, u32 vlan_flr_en, u32 filter);
#line 436 
#line 436 
void hw_atl_rpf_vlan_flr_act_set(struct aq_hw_s *aq_hw, u32 vlan_flr_act, u32 filter);
#line 440 
#line 440 
void hw_atl_rpf_vlan_id_flr_set(struct aq_hw_s *aq_hw, u32 vlan_id_flr, u32 filter);
#line 444 
#line 444 
void hw_atl_rpf_vlan_rxq_en_flr_set(struct aq_hw_s *aq_hw, u32 vlan_rxq_en, u32 filter);
#line 448 
#line 448 
void hw_atl_rpf_vlan_rxq_flr_set(struct aq_hw_s *aq_hw, u32 vlan_rxq, u32 filter);
#line 452 
#line 452 
void hw_atl_rpf_etht_flr_en_set(struct aq_hw_s *aq_hw, u32 etht_flr_en, u32 filter);
#line 456 
#line 456 
void hw_atl_rpf_etht_user_priority_en_set(struct aq_hw_s *aq_hw, u32 etht_user_priority_en, u32 filter);
#line 461 
#line 461 
void hw_atl_rpf_etht_rx_queue_en_set(struct aq_hw_s *aq_hw, u32 etht_rx_queue_en, u32 filter);
#line 466 
#line 466 
void hw_atl_rpf_etht_rx_queue_set(struct aq_hw_s *aq_hw, u32 etht_rx_queue, u32 filter);
#line 470 
#line 470 
void hw_atl_rpf_etht_user_priority_set(struct aq_hw_s *aq_hw, u32 etht_user_priority, u32 filter);
#line 479 
#line 479 
void hw_atl_rpf_etht_flr_act_set(struct aq_hw_s *aq_hw, u32 etht_flr_act, u32 filter);
#line 483 
#line 483 
void hw_atl_rpf_etht_flr_set(struct aq_hw_s *aq_hw, u32 etht_flr, u32 filter);
#line 486 
#line 486 
void hw_atl_rpf_l4_spd_set(struct aq_hw_s *aq_hw, u32 val, u32 filter);
#line 489 
#line 489 
void hw_atl_rpf_l4_dpd_set(struct aq_hw_s *aq_hw, u32 val, u32 filter);
#line 502 
#line 502 
void hw_atl_rpo_outer_vlan_tag_mode_set(void *context, u32 outervlantagmode);
#line 512 
#line 512 
void hw_atl_rpo_lro_patch_optimization_en_set(struct aq_hw_s *aq_hw, u32 lro_patch_optimization_en);
#line 516 
#line 516 
void hw_atl_rpo_lro_en_set(struct aq_hw_s *aq_hw, u32 lro_en);
#line 519 
#line 519 
void hw_atl_rpo_lro_qsessions_lim_set(struct aq_hw_s *aq_hw, u32 lro_qsessions_lim);
#line 523 
#line 523 
void hw_atl_rpo_lro_total_desc_lim_set(struct aq_hw_s *aq_hw, u32 lro_total_desc_lim);
#line 527 
#line 527 
void hw_atl_rpo_lro_min_pay_of_first_pkt_set(struct aq_hw_s *aq_hw, u32 lro_min_pld_of_first_pkt);
#line 531 
#line 531 
void hw_atl_rpo_lro_pkt_lim_set(struct aq_hw_s *aq_hw, u32 lro_pkt_lim);
#line 534 
#line 534 
void hw_atl_rpo_lro_max_num_of_descriptors_set(struct aq_hw_s *aq_hw, u32 lro_max_number_of_descriptors, u32 lro);
#line 538 
#line 538 
void hw_atl_rpo_lro_time_base_divider_set(struct aq_hw_s *aq_hw, u32 lro_time_base_divider);
#line 542 
#line 542 
void hw_atl_rpo_lro_inactive_interval_set(struct aq_hw_s *aq_hw, u32 lro_inactive_interval);
#line 546 
#line 546 
void hw_atl_rpo_lro_max_coalescing_interval_set(struct aq_hw_s *aq_hw, u32 lro_max_coal_interval);
#line 594 
#line 594 
void hw_atl_tdm_tdm_intr_moder_en_set(struct aq_hw_s *aq_hw, u32 tdm_irq_moderation_en);
#line 613 
#line 613 
void hw_atl_rpb_tps_tx_tc_mode_set(struct aq_hw_s *aq_hw, u32 tx_traf_class_mode);
#line 617 
#line 617 
u32 hw_atl_rpb_tps_tx_tc_mode_get(struct aq_hw_s *aq_hw);
#line 633 
#line 633 
void hw_atl_tpb_tx_dma_sys_lbk_en_set(struct aq_hw_s *aq_hw, u32 tx_dma_sys_lbk_en);
#line 636 
#line 636 
void hw_atl_tpb_tx_dma_net_lbk_en_set(struct aq_hw_s *aq_hw, u32 tx_dma_net_lbk_en);
#line 640 
#line 640 
void hw_atl_tpb_tx_tx_clk_gate_en_set(struct aq_hw_s *aq_hw, u32 tx_clk_gate_en);
#line 662 
#line 662 
void hw_atl_tpo_tx_pkt_sys_lbk_en_set(struct aq_hw_s *aq_hw, u32 tx_pkt_sys_lbk_en);
#line 739 
#line 739 
void hw_atl_pcs_ptp_clock_read_enable(struct aq_hw_s *aq_hw, u32 ptp_clock_read_enable);
#line 742 
#line 742 
u32 hw_atl_pcs_ptp_clock_get(struct aq_hw_s *aq_hw, u32 index);
#line 748 
#line 748 
void hw_atl_rpfl3l4_ipv4_dest_addr_clear(struct aq_hw_s *aq_hw, u8 location);
#line 751 
#line 751 
void hw_atl_rpfl3l4_ipv4_src_addr_clear(struct aq_hw_s *aq_hw, u8 location);
#line 754 
#line 754 
void hw_atl_rpfl3l4_cmd_clear(struct aq_hw_s *aq_hw, u8 location);
#line 757 
#line 757 
void hw_atl_rpfl3l4_ipv6_dest_addr_clear(struct aq_hw_s *aq_hw, u8 location);
#line 760 
#line 760 
void hw_atl_rpfl3l4_ipv6_src_addr_clear(struct aq_hw_s *aq_hw, u8 location);
#line 763 
#line 763 
void hw_atl_rpfl3l4_ipv4_dest_addr_set(struct aq_hw_s *aq_hw, u8 location, u32 ipv4_dest);
#line 767 
#line 767 
void hw_atl_rpfl3l4_ipv4_src_addr_set(struct aq_hw_s *aq_hw, u8 location, u32 ipv4_src);
#line 771 
#line 771 
void hw_atl_rpfl3l4_cmd_set(struct aq_hw_s *aq_hw, u8 location, u32 cmd);
#line 774 
#line 774 
void hw_atl_rpfl3l4_ipv6_src_addr_set(struct aq_hw_s *aq_hw, u8 location, u32 *ipv6_src);
#line 778 
#line 778 
void hw_atl_rpfl3l4_ipv6_dest_addr_set(struct aq_hw_s *aq_hw, u8 location, u32 *ipv6_dest);
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_phy.h"
#line 24 
u16 aq_phy_read_reg(struct aq_hw_s *aq_hw, u16 mmd, u16 address);
#line 26 
#line 26 
void aq_phy_write_reg(struct aq_hw_s *aq_hw, u16 mmd, u16 address, u16 data);
#line 57  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_b0.c"
struct aq_hw_caps_s hw_atl_b0_caps_aqc100 = {.hw_features = 970931143561ULL, .link_speed_msk = 59ULL, .hw_priv_flags = 4096U, .media_type = 2U, .rxds_max = 8184U, .txds_max = 8184U, .rxds_min = 40U, .txds_min = 40U, .txhwb_alignment = 4096U, .irq_mask = 4294967295U, .vecs = 8U, .mtu = 16352U, .mac_regs_count = 88U, .hw_alive_check_addr = 16U, .msix_irqs = (unsigned char)8U, .tcs = (unsigned char)1U, .rxd_alignment = (unsigned char)1U, .rxd_size = (unsigned char)16U, .txd_alignment = (unsigned char)1U, .txd_size = (unsigned char)16U, .tx_rings = (unsigned char)4U, .rx_rings = (unsigned char)4U, .flow_control = (_Bool)1, .is_64_dma = (_Bool)1};
#line 67  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_b0.c"
struct aq_hw_caps_s hw_atl_b0_caps_aqc107 = {.hw_features = 970931143561ULL, .link_speed_msk = 59ULL, .hw_priv_flags = 4096U, .media_type = 1U, .rxds_max = 8184U, .txds_max = 8184U, .rxds_min = 40U, .txds_min = 40U, .txhwb_alignment = 4096U, .irq_mask = 4294967295U, .vecs = 8U, .mtu = 16352U, .mac_regs_count = 88U, .hw_alive_check_addr = 16U, .msix_irqs = (unsigned char)8U, .tcs = (unsigned char)1U, .rxd_alignment = (unsigned char)1U, .rxd_size = (unsigned char)16U, .txd_alignment = (unsigned char)1U, .txd_size = (unsigned char)16U, .tx_rings = (unsigned char)4U, .rx_rings = (unsigned char)4U, .flow_control = (_Bool)1, .is_64_dma = (_Bool)1};
#line 77  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_b0.c"
struct aq_hw_caps_s hw_atl_b0_caps_aqc108 = {.hw_features = 970931143561ULL, .link_speed_msk = 58ULL, .hw_priv_flags = 4096U, .media_type = 1U, .rxds_max = 8184U, .txds_max = 8184U, .rxds_min = 40U, .txds_min = 40U, .txhwb_alignment = 4096U, .irq_mask = 4294967295U, .vecs = 8U, .mtu = 16352U, .mac_regs_count = 88U, .hw_alive_check_addr = 16U, .msix_irqs = (unsigned char)8U, .tcs = (unsigned char)1U, .rxd_alignment = (unsigned char)1U, .rxd_size = (unsigned char)16U, .txd_alignment = (unsigned char)1U, .txd_size = (unsigned char)16U, .tx_rings = (unsigned char)4U, .rx_rings = (unsigned char)4U, .flow_control = (_Bool)1, .is_64_dma = (_Bool)1};
#line 86  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_b0.c"
struct aq_hw_caps_s hw_atl_b0_caps_aqc109 = {.hw_features = 970931143561ULL, .link_speed_msk = 56ULL, .hw_priv_flags = 4096U, .media_type = 1U, .rxds_max = 8184U, .txds_max = 8184U, .rxds_min = 40U, .txds_min = 40U, .txhwb_alignment = 4096U, .irq_mask = 4294967295U, .vecs = 8U, .mtu = 16352U, .mac_regs_count = 88U, .hw_alive_check_addr = 16U, .msix_irqs = (unsigned char)8U, .tcs = (unsigned char)1U, .rxd_alignment = (unsigned char)1U, .rxd_size = (unsigned char)16U, .txd_alignment = (unsigned char)1U, .txd_size = (unsigned char)16U, .tx_rings = (unsigned char)4U, .rx_rings = (unsigned char)4U, .flow_control = (_Bool)1, .is_64_dma = (_Bool)1};
#line 94  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_b0.c"
static int hw_atl_b0_hw_reset(struct aq_hw_s *self)
{
  #line 96 
  int err = 0;
  #line 98 
  err = hw_atl_utils_soft_reset(self);
  #line 99 
  if (err != 0) 
                #line 100 
                return err;
  #line 102 
  (*((self->aq_fw_ops)->set_state))(self,(enum hal_atl_utils_fw_state_e)MPI_RESET);
  #line 104 
  err = aq_hw_err_from_flags(self);
  #line 106 
  return err;
}

#line 109  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_b0.c"
static int hw_atl_b0_set_fc(struct aq_hw_s *self, u32 fc, u32 tc)
{
  #line 111 
  hw_atl_rpb_rx_xoff_en_per_tc_set(self,(unsigned int)((fc & 2U) != 0U),tc);
  #line 113 
  return 0;
}

#line 116  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_b0.c"
static int hw_atl_b0_hw_qos_set(struct aq_hw_s *self)
{
  #line 118 
  unsigned int i_priority = 0U;
  #line 119 
  u32 buff_size = 0U;
  #line 120 
  u32 tc = 0U;
  #line 123 
  hw_atl_tps_tx_pkt_shed_desc_rate_curr_time_res_set(self,0U);
  #line 124 
  hw_atl_tps_tx_pkt_shed_desc_rate_lim_set(self,10U);
  #line 127 
  hw_atl_tps_tx_pkt_shed_desc_vm_arb_mode_set(self,0U);
  #line 130 
  hw_atl_tps_tx_pkt_shed_desc_tc_arb_mode_set(self,0U);
  #line 131 
  hw_atl_tps_tx_pkt_shed_data_arb_mode_set(self,0U);
  #line 133 
  tc = 0U;
  #line 136 
  hw_atl_tps_tx_pkt_shed_tc_data_max_credit_set(self,4095U,tc);
  #line 137 
  hw_atl_tps_tx_pkt_shed_tc_data_weight_set(self,100U,tc);
  #line 138 
  hw_atl_tps_tx_pkt_shed_desc_tc_max_credit_set(self,80U,tc);
  #line 139 
  hw_atl_tps_tx_pkt_shed_desc_tc_weight_set(self,30U,tc);
  #line 142 
  buff_size = 152U;
  #line 144 
  hw_atl_tpb_tx_pkt_buff_size_per_tc_set(self,buff_size,tc);
  #line 145 
  hw_atl_tpb_tx_buff_hi_threshold_per_tc_set(self,(buff_size * 2112U) / 100U,tc);
  #line 149 
  hw_atl_tpb_tx_buff_lo_threshold_per_tc_set(self,(buff_size * 1600U) / 100U,tc);
  #line 154 
  tc = 2U;
  #line 156 
  hw_atl_tpb_tx_pkt_buff_size_per_tc_set(self,8U,tc);
  #line 160 
  tc = 0U;
  #line 161 
  buff_size = 304U;
  #line 163 
  hw_atl_rpb_rx_pkt_buff_size_per_tc_set(self,buff_size,tc);
  #line 164 
  hw_atl_rpb_rx_buff_hi_threshold_per_tc_set(self,(buff_size * 2112U) / 100U,tc);
  #line 168 
  hw_atl_rpb_rx_buff_lo_threshold_per_tc_set(self,(buff_size * 1600U) / 100U,tc);
  #line 173 
  hw_atl_b0_set_fc(self,(unsigned int)(self->aq_nic_cfg)->fc.req,tc);
  #line 176 
  tc = 2U;
  #line 178 
  hw_atl_rpb_rx_pkt_buff_size_per_tc_set(self,16U,tc);
  #line 181 
  hw_atl_rpb_rx_xoff_en_per_tc_set(self,0U,tc);
  #line 184 
  i_priority = 8U;
  #line 184 
  while (1) {
    #line 184 
    unsigned int tmp;
    #line 184 
    tmp = i_priority;
    #line 184 
    i_priority --;
    #line 184 
    ;
    #line 184 
    if (! (tmp != 0U)) 
                       #line 184 
                       break;
    #line 185 
    hw_atl_rpf_rpb_user_priority_tc_map_set(self,i_priority,0U);
  }
  #line 187 
  return aq_hw_err_from_flags(self);
}

#line 190  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_b0.c"
static int hw_atl_b0_hw_rss_hash_set(struct aq_hw_s *self, struct aq_rss_parameters *rss_params)
{
  #line 197 
  u32 val;
  #line 193 
  struct aq_nic_cfg_s *cfg = self->aq_nic_cfg;
  #line 194 
  unsigned int addr = 0U;
  #line 195 
  unsigned int i = 0U;
  #line 196 
  int err = 0;
  #line 199 
  i = 10U;
  #line 199 
  addr = 0U;
  #line 199 
  while (1) {
    #line 199 
    unsigned int tmp_7;
    #line 199 
    tmp_7 = i;
    #line 199 
    i --;
    #line 199 
    ;
    #line 199 
    if (! (tmp_7 != 0U)) 
                         #line 199 
                         break;
    {
      #line 205 
      int tmp_5;
      #line 200 
      unsigned int tmp_0;
      #line 200 
      if ((int)cfg->is_rss != 0) 
                                 #line 200 
                                 tmp_0 = __builtin_bswap32(rss_params->hash_secret_key[i]); else 
                                                                    #line 200 
                                                                    tmp_0 = 0U;
      #line 200 
      u32 key_data = tmp_0;
      #line 202 
      hw_atl_rpf_rss_key_wr_data_set(self,key_data);
      #line 203 
      hw_atl_rpf_rss_key_addr_set(self,addr);
      #line 204 
      hw_atl_rpf_rss_key_wr_en_set(self,1U);
      {
        #line 205 
        u64 __timeout_us = 10000ULL;
        #line 205 
        unsigned long __delay_us = 1000UL;
        #line 205 
        ;
        #line 205 
        ktime_t __timeout = ktime_add_us(ktime_get(),__timeout_us);
        #line 205 
        while (1) {
          #line 205 
          val = hw_atl_rpf_rss_key_wr_en_get(self);
          #line 205 
          if (val == 0U) 
                         #line 205 
                         break;
          #line 205 
          if (__timeout_us != 0ULL) {
            #line 205 
            ;
            #line 205 
            if (ktime_compare(ktime_get(),__timeout) > 0) {
              #line 205 
              val = hw_atl_rpf_rss_key_wr_en_get(self);
              #line 205 
              break;
            }
          }
          #line 205 
          if (__delay_us != 0UL) 
            #line 205 
            if (0 != 0) 
              #line 205 
              if (__delay_us > 19999UL) 
                                        #line 205 
                                        __bad_udelay(); else 
                                                             #line 205 
                                                             __const_udelay(__delay_us * 4295UL);
            else 
                 #line 205 
                 __udelay(__delay_us);
        }
        #line 205 
        if (val == 0U) 
                       #line 205 
                       tmp_5 = 0; else 
                                       #line 205 
                                       tmp_5 = -110;
        }
      #line 205 
      err = tmp_5;
      #line 208 
      if (err < 0) 
                   #line 209 
                   goto err_exit;
    }
    #line 199 
    addr ++;
  }
  #line 212 
  err = aq_hw_err_from_flags(self);
  #line 214 
  err_exit: 
            #line 214 
  ;
  #line 215 
  return err;
}

#line 218  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_b0.c"
static int hw_atl_b0_hw_rss_set(struct aq_hw_s *self, struct aq_rss_parameters *rss_params)
{
  #line 221 
  unsigned int __UNIQUE_ID___x441;
  #line 221 
  unsigned int tmp;
  #line 224 
  u16 bitary[13U];
  #line 227 
  u32 val;
  {
    #line 221 
    __UNIQUE_ID___x441 = 1U;
    #line 221 
    u32 __UNIQUE_ID___y442 = (self->aq_nic_cfg)->num_rss_queues;
    #line 221 
    if (__UNIQUE_ID___x441 > __UNIQUE_ID___y442) 
                                                 #line 221 
                                                 tmp = __UNIQUE_ID___x441; else 
                                                                    #line 221 
                                                                    tmp = __UNIQUE_ID___y442;
    }
  #line 221 
  u32 num_rss_queues = tmp;
  #line 222 
  u8 *indirection_table = (u8 *)(& rss_params->indirection_table);
  #line 225 
  int err = 0;
  #line 226 
  u32 i = 0U;
  #line 229 
  memset((void *)(& bitary),0,26UL);
  #line 231 
  i = 64U;
  #line 231 
  while (1) {
    #line 231 
    u32 tmp_1;
    #line 231 
    tmp_1 = i;
    #line 231 
    i --;
    #line 231 
    ;
    #line 231 
    if (! (tmp_1 != 0U)) 
                         #line 231 
                         break;
    #line 232 
    *((u32 *)((u16 *)(& bitary) + (unsigned long)((i * 3U) / 16U))) |= (unsigned int)*(indirection_table + (unsigned long)i) % num_rss_queues << (i * 3U & 15U);
  }
  #line 237 
  i = 13U;
  #line 237 
  while (1) {
    #line 237 
    u32 tmp_8;
    #line 237 
    tmp_8 = i;
    #line 237 
    i --;
    #line 237 
    ;
    #line 237 
    if (! (tmp_8 != 0U)) 
                         #line 237 
                         break;
    {
      #line 241 
      int tmp_6;
      #line 238 
      hw_atl_rpf_rss_redir_tbl_wr_data_set(self,(unsigned int)bitary[i]);
      #line 239 
      hw_atl_rpf_rss_redir_tbl_addr_set(self,i);
      #line 240 
      hw_atl_rpf_rss_redir_wr_en_set(self,1U);
      {
        #line 241 
        u64 __timeout_us = 10000ULL;
        #line 241 
        unsigned long __delay_us = 1000UL;
        #line 241 
        ;
        #line 241 
        ktime_t __timeout = ktime_add_us(ktime_get(),__timeout_us);
        #line 241 
        while (1) {
          #line 241 
          val = hw_atl_rpf_rss_redir_wr_en_get(self);
          #line 241 
          if (val == 0U) 
                         #line 241 
                         break;
          #line 241 
          if (__timeout_us != 0ULL) {
            #line 241 
            ;
            #line 241 
            if (ktime_compare(ktime_get(),__timeout) > 0) {
              #line 241 
              val = hw_atl_rpf_rss_redir_wr_en_get(self);
              #line 241 
              break;
            }
          }
          #line 241 
          if (__delay_us != 0UL) 
            #line 241 
            if (0 != 0) 
              #line 241 
              if (__delay_us > 19999UL) 
                                        #line 241 
                                        __bad_udelay(); else 
                                                             #line 241 
                                                             __const_udelay(__delay_us * 4295UL);
            else 
                 #line 241 
                 __udelay(__delay_us);
        }
        #line 241 
        if (val == 0U) 
                       #line 241 
                       tmp_6 = 0; else 
                                       #line 241 
                                       tmp_6 = -110;
        }
      #line 241 
      err = tmp_6;
      #line 244 
      if (err < 0) 
                   #line 245 
                   goto err_exit;
    }
  }
  #line 248 
  err = aq_hw_err_from_flags(self);
  #line 250 
  err_exit: 
            #line 250 
  ;
  #line 251 
  return err;
}

#line 254  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_b0.c"
static int hw_atl_b0_hw_offload_set(struct aq_hw_s *self, struct aq_nic_cfg_s *aq_nic_cfg)
{
  #line 257 
  unsigned int i;
  #line 260 
  hw_atl_tpo_ipv4header_crc_offload_en_set(self,1U);
  #line 261 
  hw_atl_tpo_tcp_udp_crc_offload_en_set(self,1U);
  #line 264 
  hw_atl_rpo_ipv4header_crc_offload_en_set(self,(unsigned int)((aq_nic_cfg->features & 549755813888ULL) != 0ULL));
  #line 266 
  hw_atl_rpo_tcp_udp_crc_offload_en_set(self,(unsigned int)((aq_nic_cfg->features & 549755813888ULL) != 0ULL));
  #line 270 
  hw_atl_tdm_large_send_offload_en_set(self,4294967295U);
  #line 273 
  hw_atl_rpo_outer_vlan_tag_mode_set((void *)self,1U);
  {
    #line 303 
    unsigned int tmp;
    #line 305 
    unsigned int tmp_0;
    #line 277 
    unsigned int val = 3U;
    #line 281 
    i = 0U;
    #line 281 
    while (i <= 31U) {
      #line 282 
      hw_atl_rpo_lro_max_num_of_descriptors_set(self,val,i);
      #line 281 
      i ++;
    }
    #line 284 
    hw_atl_rpo_lro_time_base_divider_set(self,1562U);
    #line 285 
    hw_atl_rpo_lro_inactive_interval_set(self,0U);
    #line 291 
    hw_atl_rpo_lro_max_coalescing_interval_set(self,50U);
    #line 293 
    hw_atl_rpo_lro_qsessions_lim_set(self,1U);
    #line 295 
    hw_atl_rpo_lro_total_desc_lim_set(self,2U);
    #line 297 
    hw_atl_rpo_lro_patch_optimization_en_set(self,1U);
    #line 299 
    hw_atl_rpo_lro_min_pay_of_first_pkt_set(self,10U);
    #line 301 
    hw_atl_rpo_lro_pkt_lim_set(self,1U);
    #line 303 
    if ((int)aq_nic_cfg->is_lro != 0) 
                                      #line 303 
                                      tmp = 4294967295U; else 
                                                              #line 303 
                                                              tmp = 0U;
    #line 303 
    ;
    #line 303 
    hw_atl_rpo_lro_en_set(self,tmp);
    #line 305 
    if ((int)aq_nic_cfg->is_lro != 0) 
                                      #line 305 
                                      tmp_0 = 4294967295U; else 
                                                                #line 305 
                                                                tmp_0 = 0U;
    #line 305 
    ;
    #line 305 
    hw_atl_itr_rsc_en_set(self,tmp_0);
    #line 308 
    hw_atl_itr_rsc_delay_set(self,1U);
  }
  #line 311 
  return aq_hw_err_from_flags(self);
}

#line 314  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_b0.c"
static int hw_atl_b0_hw_init_tx_path(struct aq_hw_s *self)
{
  #line 317 
  hw_atl_rpb_tps_tx_tc_mode_set(self,1U);
  #line 319 
  hw_atl_thm_lso_tcp_flag_of_first_pkt_set(self,4086U);
  #line 320 
  hw_atl_thm_lso_tcp_flag_of_middle_pkt_set(self,4086U);
  #line 321 
  hw_atl_thm_lso_tcp_flag_of_last_pkt_set(self,3967U);
  #line 324 
  hw_atl_tdm_tx_desc_wr_wb_irq_en_set(self,1U);
  #line 327 
  aq_hw_write_reg(self,28736U,(self->chip_features << 15) & 65536U);
  #line 329 
  hw_atl_tdm_tx_dca_en_set(self,0U);
  #line 330 
  hw_atl_tdm_tx_dca_mode_set(self,0U);
  #line 332 
  hw_atl_tpb_tx_path_scp_ins_en_set(self,1U);
  #line 334 
  return aq_hw_err_from_flags(self);
}

#line 337  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_b0.c"
static int hw_atl_b0_hw_init_rx_path(struct aq_hw_s *self)
{
  #line 340 
  int i;
  #line 349 
  unsigned int tmp;
  #line 375 
  unsigned int tmp_2;
  #line 339 
  struct aq_nic_cfg_s *cfg = self->aq_nic_cfg;
  #line 343 
  hw_atl_rpb_rpf_rx_traf_class_mode_set(self,1U);
  #line 346 
  hw_atl_rpb_rx_flow_ctl_mode_set(self,1U);
  #line 349 
  if ((int)cfg->is_rss != 0) 
                             #line 349 
                             tmp = 3006477107U; else 
                                                     #line 349 
                                                     tmp = 0U;
  #line 349 
  ;
  #line 349 
  hw_atl_reg_rx_flr_rss_control1set(self,tmp);
  #line 353 
  i = 33;
  #line 353 
  while (1) {
    #line 353 
    int tmp_1;
    #line 353 
    tmp_1 = i;
    #line 353 
    i --;
    #line 353 
    ;
    #line 353 
    if (! (tmp_1 != 0)) 
                        #line 353 
                        break;
    {
      #line 354 
      unsigned int tmp_0;
      #line 354 
      ;
      #line 354 
      if (i == 0) 
                  #line 354 
                  tmp_0 = 1U; else 
                                   #line 354 
                                   tmp_0 = 0U;
      #line 354 
      ;
      #line 354 
      hw_atl_rpfl2_uc_flr_en_set(self,tmp_0,(unsigned int)i);
      #line 355 
      hw_atl_rpfl2unicast_flr_act_set(self,1U,(unsigned int)i);
    }
  }
  #line 358 
  hw_atl_reg_rx_flr_mcst_flr_msk_set(self,0U);
  #line 359 
  hw_atl_reg_rx_flr_mcst_flr_set(self,69631U,0U);
  #line 362 
  hw_atl_rpf_vlan_outer_etht_set(self,34984U);
  #line 363 
  hw_atl_rpf_vlan_inner_etht_set(self,33024U);
  #line 365 
  hw_atl_rpf_vlan_prom_mode_en_set(self,1U);
  #line 368 
  hw_atl_rpf_vlan_accept_untagged_packets_set(self,1U);
  #line 369 
  hw_atl_rpf_vlan_untagged_act_set(self,1U);
  #line 372 
  hw_atl_rdm_rx_desc_wr_wb_irq_en_set(self,1U);
  #line 375 
  if ((self->chip_features & 4U) != 0U) 
                                        #line 375 
                                        tmp_2 = 983040U; else 
                                                              #line 375 
                                                              tmp_2 = 0U;
  #line 375 
  ;
  #line 375 
  aq_hw_write_reg(self,20544U,tmp_2);
  #line 378 
  hw_atl_rpfl2broadcast_flr_act_set(self,1U);
  #line 379 
  hw_atl_rpfl2broadcast_count_threshold_set(self,65535U);
  #line 381 
  hw_atl_rdm_rx_dca_en_set(self,0U);
  #line 382 
  hw_atl_rdm_rx_dca_mode_set(self,0U);
  #line 384 
  return aq_hw_err_from_flags(self);
}

#line 387  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_b0.c"
static int hw_atl_b0_hw_mac_addr_set(struct aq_hw_s *self, u8 *mac_addr)
{
  #line 389 
  unsigned int h = 0U;
  #line 390 
  unsigned int l = 0U;
  #line 391 
  int err = 0;
  #line 393 
  if (mac_addr == (u8 *)0U) {
    #line 394 
    err = -22;
    #line 395 
    goto err_exit;
  }
  #line 397 
  h = (unsigned int)(((int)*mac_addr << 8) | (int)*(mac_addr + 1U));
  #line 398 
  l = (unsigned int)(((((int)*(mac_addr + 2U) << 24) | ((int)*(mac_addr + 3U) << 16)) | ((int)*(mac_addr + 4U) << 8)) | (int)*(mac_addr + 5U));
  #line 401 
  hw_atl_rpfl2_uc_flr_en_set(self,0U,0U);
  #line 402 
  hw_atl_rpfl2unicast_dest_addresslsw_set(self,l,0U);
  #line 403 
  hw_atl_rpfl2unicast_dest_addressmsw_set(self,h,0U);
  #line 404 
  hw_atl_rpfl2_uc_flr_en_set(self,1U,0U);
  #line 406 
  err = aq_hw_err_from_flags(self);
  #line 408 
  err_exit: 
            #line 408 
  ;
  #line 409 
  return err;
}

#line 412  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_b0.c"
static int hw_atl_b0_hw_init(struct aq_hw_s *self, u8 *mac_addr)
{
  #line 422 
  u32 val;
  #line 414 
  u32 aq_hw_atl_igcr_table_[4U][2U] = {{536870912U, 536870912U}, {536871040U, 536871040U}, {536870945U, 536870949U}, {536870946U, 536870950U}};
  #line 420 
  struct aq_nic_cfg_s *aq_nic_cfg = self->aq_nic_cfg;
  #line 421 
  int err = 0;
  #line 425 
  hw_atl_b0_hw_init_tx_path(self);
  #line 426 
  hw_atl_b0_hw_init_rx_path(self);
  #line 428 
  hw_atl_b0_hw_mac_addr_set(self,mac_addr);
  #line 430 
  (*((self->aq_fw_ops)->set_link_speed))(self,aq_nic_cfg->link_speed_msk);
  #line 431 
  (*((self->aq_fw_ops)->set_state))(self,(enum hal_atl_utils_fw_state_e)MPI_INIT);
  #line 433 
  hw_atl_b0_hw_qos_set(self);
  #line 434 
  hw_atl_b0_hw_rss_set(self,& aq_nic_cfg->aq_rss);
  #line 435 
  hw_atl_b0_hw_rss_hash_set(self,& aq_nic_cfg->aq_rss);
  #line 438 
  val = aq_hw_read_reg(self,4116U);
  #line 439 
  aq_hw_write_reg(self,4116U,(val & 4294965496U) | 1028U);
  #line 446 
  aq_hw_write_reg(self,31520U,24U);
  #line 449 
  self->aq_link_status.mbps = 0U;
  #line 450 
  (*((self->aq_fw_ops)->update_stats))(self);
  #line 452 
  err = aq_hw_err_from_flags(self);
  #line 453 
  if (err < 0) 
               #line 454 
               goto err_exit;
  #line 457 
  hw_atl_reg_irq_glb_ctl_set(self,aq_hw_atl_igcr_table_[aq_nic_cfg->irq_type][aq_nic_cfg->vecs > 1U]);
  #line 462 
  hw_atl_itr_irq_auto_masklsw_set(self,(aq_nic_cfg->aq_hw_caps)->irq_mask);
  #line 465 
  hw_atl_reg_gen_irq_map_set(self,2290614272U,0U);
  #line 472 
  if (aq_nic_cfg->link_irq_vec != 0U) 
                                      #line 473 
                                      hw_atl_reg_gen_irq_map_set(self,aq_nic_cfg->link_irq_vec | 128U,3U);
  #line 476 
  hw_atl_b0_hw_offload_set(self,aq_nic_cfg);
  #line 478 
  err_exit: 
            #line 478 
  ;
  #line 479 
  return err;
}

#line 482  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_b0.c"
static int hw_atl_b0_hw_ring_tx_start(struct aq_hw_s *self, struct aq_ring_s *ring)
{
  #line 485 
  hw_atl_tdm_tx_desc_en_set(self,1U,ring->idx);
  #line 487 
  return aq_hw_err_from_flags(self);
}

#line 490  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_b0.c"
static int hw_atl_b0_hw_ring_rx_start(struct aq_hw_s *self, struct aq_ring_s *ring)
{
  #line 493 
  hw_atl_rdm_rx_desc_en_set(self,1U,ring->idx);
  #line 495 
  return aq_hw_err_from_flags(self);
}

#line 498  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_b0.c"
static int hw_atl_b0_hw_start(struct aq_hw_s *self)
{
  #line 500 
  hw_atl_tpb_tx_buff_en_set(self,1U);
  #line 501 
  hw_atl_rpb_rx_buff_en_set(self,1U);
  #line 503 
  return aq_hw_err_from_flags(self);
}

#line 506  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_b0.c"
static int hw_atl_b0_hw_tx_ring_tail_update(struct aq_hw_s *self, struct aq_ring_s *ring)
{
  #line 509 
  hw_atl_reg_tx_dma_desc_tail_ptr_set(self,ring->sw_tail,ring->idx);
  #line 511 
  return 0;
}

#line 514  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_b0.c"
static int hw_atl_b0_hw_ring_tx_xmit(struct aq_hw_s *self, struct aq_ring_s *ring, unsigned int frags)
{
  #line 518 
  struct aq_ring_buff_s *buff = (struct aq_ring_buff_s *)0;
  #line 519 
  struct hw_atl_txd_s *txd = (struct hw_atl_txd_s *)0;
  #line 520 
  unsigned int buff_pa_len = 0U;
  #line 521 
  unsigned int frag_count = 0U;
  #line 522 
  unsigned int pkt_len = 0U;
  #line 523 
  bool is_vlan = (_Bool)0;
  #line 524 
  bool is_gso = (_Bool)0;
  #line 526 
  buff = ring->buff_ring + (unsigned long)ring->sw_tail;
  #line 527 
  if ((unsigned int)buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.is_eop != 0U && (unsigned int)buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.is_sop != 0U) 
    #line 527 
    pkt_len = (unsigned int)buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.len; else 
                                                                    #line 527 
                                                                    pkt_len = buff->__anonCompField_aq_ring_buff_s_169.__anonCompField___anonunion_704_168.len_pkt;
  #line 529 
  frag_count = 0U;
  #line 529 
  while (frag_count < frags) {
    #line 530 
    txd = (struct hw_atl_txd_s *)(ring->dx_ring + (unsigned long)(ring->sw_tail * 16U));
    #line 532 
    txd->ctl = 0U;
    #line 533 
    txd->ctl2 = 0U;
    #line 534 
    txd->buf_addr = 0ULL;
    #line 536 
    buff = ring->buff_ring + (unsigned long)ring->sw_tail;
    #line 538 
    if ((unsigned int)buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.is_gso_tcp != 0U || (unsigned int)buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.is_gso_udp != 0U) {
      #line 539 
      if ((unsigned int)buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.is_gso_tcp != 0U) 
        #line 540 
        txd->ctl |= 4194304U;
      #line 541 
      txd->ctl |= 2U;
      #line 542 
      txd->ctl |= (unsigned int)(((int)buff->__anonCompField_aq_ring_buff_s_169.__anonCompField___anonunion_704_168.len_l3 << 31) | ((int)buff->__anonCompField_aq_ring_buff_s_169.__anonCompField___anonunion_704_168.len_l2 << 24));
      #line 544 
      txd->ctl2 |= buff->__anonCompField_aq_ring_buff_s_169.__anonCompField___anonunion_704_168.mss << 16;
      #line 545 
      is_gso = (_Bool)1;
      #line 547 
      pkt_len -= (unsigned int)(((int)buff->__anonCompField_aq_ring_buff_s_169.__anonCompField___anonunion_704_168.len_l4 + (int)buff->__anonCompField_aq_ring_buff_s_169.__anonCompField___anonunion_704_168.len_l3) + (int)buff->__anonCompField_aq_ring_buff_s_169.__anonCompField___anonunion_704_168.len_l2);
      #line 550 
      if ((unsigned int)buff->__anonCompField_aq_ring_buff_s_169.__anonCompField___anonunion_704_168.is_ipv6 != 0U) 
        #line 551 
        txd->ctl |= 2097152U;
      #line 552 
      txd->ctl2 |= (unsigned int)(((int)buff->__anonCompField_aq_ring_buff_s_169.__anonCompField___anonunion_704_168.len_l4 << 8) | ((int)buff->__anonCompField_aq_ring_buff_s_169.__anonCompField___anonunion_704_168.len_l3 >> 1));
    }
    #line 555 
    if ((unsigned int)buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.is_vlan != 0U) {
      #line 556 
      txd->ctl |= 2U;
      #line 557 
      txd->ctl |= (unsigned int)((int)buff->__anonCompField_aq_ring_buff_s_169.__anonCompField___anonunion_704_168.vlan_tx_tag << 4);
      #line 558 
      is_vlan = (_Bool)1;
    }
    #line 560 
    if (((unsigned int)buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.is_gso_tcp == 0U && (unsigned int)buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.is_gso_udp == 0U) && (unsigned int)buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.is_vlan == 0U) {
      #line 561 
      buff_pa_len = (unsigned int)buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.len;
      #line 563 
      txd->buf_addr = buff->__anonCompField_aq_ring_buff_s_169.pa;
      #line 564 
      txd->ctl |= (buff_pa_len << 4) & 1048560U;
      #line 566 
      txd->ctl |= 1U;
      #line 569 
      txd->ctl2 |= pkt_len << 14;
      #line 571 
      if ((int)is_gso != 0 || (int)is_vlan != 0) 
                                                 #line 573 
                                                 txd->ctl2 |= 8192U;
      #line 575 
      if ((int)is_gso != 0) 
                            #line 576 
                            txd->ctl |= 67108864U;
      #line 579 
      if ((unsigned int)buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.is_ip_cso != 0U) 
        #line 580 
        txd->ctl |= 16777216U;
      #line 582 
      if ((unsigned int)buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.is_udp_cso != 0U || (unsigned int)buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.is_tcp_cso != 0U) 
        #line 583 
        txd->ctl |= 33554432U;
      #line 585 
      if ((int)is_vlan != 0) 
                             #line 586 
                             txd->ctl |= 4194304U;
      #line 588 
      if ((long)((unsigned int)buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.is_eop != 0U) != 0L) {
        #line 589 
        txd->ctl |= 2097152U;
        #line 590 
        txd->ctl |= 134217728U;
        #line 591 
        is_gso = (_Bool)0;
        #line 592 
        is_vlan = (_Bool)0;
      }
    }
    #line 595 
    ring->sw_tail = aq_ring_next_dx(ring,ring->sw_tail);
    #line 529 
    frag_count ++;
  }
  #line 598 
  hw_atl_b0_hw_tx_ring_tail_update(self,ring);
  #line 600 
  return aq_hw_err_from_flags(self);
}

#line 603  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_b0.c"
static int hw_atl_b0_hw_ring_rx_init(struct aq_hw_s *self, struct aq_ring_s *aq_ring, struct aq_ring_param_s *aq_ring_param)
{
  #line 607 
  u32 dma_desc_addr_msw = (unsigned int)(aq_ring->dx_ring_pa >> 32);
  #line 608 
  u32 vlan_rx_stripping = (unsigned int)(self->aq_nic_cfg)->is_vlan_rx_strip;
  #line 609 
  u32 dma_desc_addr_lsw = (unsigned int)aq_ring->dx_ring_pa;
  #line 611 
  hw_atl_rdm_rx_desc_en_set(self,0U,aq_ring->idx);
  #line 613 
  hw_atl_rdm_rx_desc_head_splitting_set(self,0U,aq_ring->idx);
  #line 615 
  hw_atl_reg_rx_dma_desc_base_addresslswset(self,dma_desc_addr_lsw,aq_ring->idx);
  #line 618 
  hw_atl_reg_rx_dma_desc_base_addressmswset(self,dma_desc_addr_msw,aq_ring->idx);
  #line 621 
  hw_atl_rdm_rx_desc_len_set(self,aq_ring->size / 8U,aq_ring->idx);
  #line 623 
  hw_atl_rdm_rx_desc_data_buff_size_set(self,2U,aq_ring->idx);
  #line 627 
  hw_atl_rdm_rx_desc_head_buff_size_set(self,0U,aq_ring->idx);
  #line 628 
  hw_atl_rdm_rx_desc_head_splitting_set(self,0U,aq_ring->idx);
  #line 629 
  hw_atl_rpo_rx_desc_vlan_stripping_set(self,(unsigned int)(vlan_rx_stripping != 0U),aq_ring->idx);
  #line 635 
  hw_atl_itr_irq_map_rx_set(self,aq_ring_param->vec_idx,aq_ring->idx);
  #line 636 
  hw_atl_itr_irq_map_en_rx_set(self,1U,aq_ring->idx);
  #line 638 
  hw_atl_rdm_cpu_id_set(self,aq_ring_param->cpu,aq_ring->idx);
  #line 639 
  hw_atl_rdm_rx_desc_dca_en_set(self,0U,aq_ring->idx);
  #line 640 
  hw_atl_rdm_rx_head_dca_en_set(self,0U,aq_ring->idx);
  #line 641 
  hw_atl_rdm_rx_pld_dca_en_set(self,0U,aq_ring->idx);
  #line 643 
  return aq_hw_err_from_flags(self);
}

#line 646  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_b0.c"
static int hw_atl_b0_hw_ring_tx_init(struct aq_hw_s *self, struct aq_ring_s *aq_ring, struct aq_ring_param_s *aq_ring_param)
{
  #line 650 
  u32 dma_desc_msw_addr = (unsigned int)(aq_ring->dx_ring_pa >> 32);
  #line 651 
  u32 dma_desc_lsw_addr = (unsigned int)aq_ring->dx_ring_pa;
  #line 653 
  hw_atl_reg_tx_dma_desc_base_addresslswset(self,dma_desc_lsw_addr,aq_ring->idx);
  #line 656 
  hw_atl_reg_tx_dma_desc_base_addressmswset(self,dma_desc_msw_addr,aq_ring->idx);
  #line 659 
  hw_atl_tdm_tx_desc_len_set(self,aq_ring->size / 8U,aq_ring->idx);
  #line 661 
  hw_atl_b0_hw_tx_ring_tail_update(self,aq_ring);
  #line 664 
  hw_atl_tdm_tx_desc_wr_wb_threshold_set(self,0U,aq_ring->idx);
  #line 667 
  hw_atl_itr_irq_map_tx_set(self,aq_ring_param->vec_idx,aq_ring->idx);
  #line 668 
  hw_atl_itr_irq_map_en_tx_set(self,1U,aq_ring->idx);
  #line 670 
  hw_atl_tdm_cpu_id_set(self,aq_ring_param->cpu,aq_ring->idx);
  #line 671 
  hw_atl_tdm_tx_desc_dca_en_set(self,0U,aq_ring->idx);
  #line 673 
  return aq_hw_err_from_flags(self);
}

#line 676  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_b0.c"
static int hw_atl_b0_hw_ring_rx_fill(struct aq_hw_s *self, struct aq_ring_s *ring, unsigned int sw_tail_old)
{
  #line 680 
  while (ring->sw_tail != sw_tail_old) {
    {
      #line 682 
      struct hw_atl_rxd_s *rxd = (struct hw_atl_rxd_s *)(ring->dx_ring + (unsigned long)(sw_tail_old * 16U));
      #line 686 
      struct aq_ring_buff_s *buff = ring->buff_ring + (unsigned long)sw_tail_old;
      #line 688 
      rxd->buf_addr = buff->__anonCompField_aq_ring_buff_s_169.pa;
      #line 689 
      rxd->hdr_addr = 0ULL;
    }
    #line 681 
    sw_tail_old = aq_ring_next_dx(ring,sw_tail_old);
  }
  #line 692 
  hw_atl_reg_rx_dma_desc_tail_ptr_set(self,sw_tail_old,ring->idx);
  #line 694 
  return aq_hw_err_from_flags(self);
}

#line 697  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_b0.c"
static int hw_atl_b0_hw_ring_hwts_rx_fill(struct aq_hw_s *self, struct aq_ring_s *ring)
{
  #line 700 
  unsigned int i;
  #line 702 
  i = aq_ring_avail_dx(ring);
  #line 702 
  while (1) {
    #line 702 
    unsigned int tmp;
    #line 702 
    tmp = i;
    #line 702 
    i --;
    #line 702 
    ;
    #line 702 
    if (! (tmp != 0U)) 
                       #line 702 
                       break;
    {
      #line 704 
      struct hw_atl_rxd_s *rxd = (struct hw_atl_rxd_s *)(ring->dx_ring + (unsigned long)(ring->sw_tail * 16U));
      #line 708 
      rxd->buf_addr = ring->dx_ring_pa + (unsigned long long)(ring->size * ring->dx_size);
      #line 709 
      rxd->hdr_addr = 0ULL;
    }
    #line 703 
    ring->sw_tail = aq_ring_next_dx(ring,ring->sw_tail);
  }
  #line 711 
  ldv_inline_asm();
  #line 714 
  hw_atl_reg_rx_dma_desc_tail_ptr_set(self,ring->sw_tail,ring->idx);
  #line 716 
  return aq_hw_err_from_flags(self);
}

#line 719  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_b0.c"
static int hw_atl_b0_hw_ring_hwts_rx_receive(struct aq_hw_s *self, struct aq_ring_s *ring)
{
  #line 722 
  while (ring->hw_head != ring->sw_tail) {
    #line 723 
    struct hw_atl_rxd_hwts_wb_s *hwts_wb = (struct hw_atl_rxd_hwts_wb_s *)(ring->dx_ring + (unsigned long)(ring->hw_head * 16U));
    #line 728 
    if ((hwts_wb->sec_lw0 & 1U) == 0U) 
                                       #line 729 
                                       break;
    #line 731 
    ring->hw_head = aq_ring_next_dx(ring,ring->hw_head);
  }
  #line 734 
  return aq_hw_err_from_flags(self);
}

#line 737  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_b0.c"
static int hw_atl_b0_hw_ring_tx_head_update(struct aq_hw_s *self, struct aq_ring_s *ring)
{
  #line 740 
  unsigned int hw_head_;
  #line 741 
  int err = 0;
  #line 743 
  hw_head_ = hw_atl_tdm_tx_desc_head_ptr_get(self,ring->idx);
  #line 745 
  if ((int)aq_utils_obj_test_2(& self->flags,1073741824U) != 0) {
    #line 746 
    err = -6;
    #line 747 
    goto err_exit;
  }
  #line 749 
  ring->hw_head = hw_head_;
  #line 750 
  err = aq_hw_err_from_flags(self);
  #line 752 
  err_exit: 
            #line 752 
  ;
  #line 753 
  return err;
}

#line 756  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_b0.c"
static int hw_atl_b0_hw_ring_rx_receive(struct aq_hw_s *self, struct aq_ring_s *ring)
{
  #line 759 
  while (ring->hw_head != ring->sw_tail) {
    {
      #line 761 
      struct aq_ring_buff_s *buff = (struct aq_ring_buff_s *)0;
      #line 762 
      struct hw_atl_rxd_wb_s *rxd_wb = (struct hw_atl_rxd_wb_s *)(ring->dx_ring + (unsigned long)(ring->hw_head * 16U));
      #line 765 
      unsigned int is_rx_check_sum_enabled = 0U;
      #line 766 
      unsigned int pkt_type = 0U;
      #line 767 
      u8 rx_stat = (unsigned char)0U;
      #line 769 
      if (((unsigned int)rxd_wb->status & 1U) == 0U) 
                                                     #line 770 
                                                     break;
      #line 773 
      buff = ring->buff_ring + (unsigned long)ring->hw_head;
      #line 775 
      buff->__anonCompField_aq_ring_buff_s_171.flags = 0ULL;
      #line 776 
      buff->__anonCompField_aq_ring_buff_s_169.__anonCompField___anonunion_704_166.is_hash_l4 = (unsigned char)0U;
      #line 778 
      rx_stat = (unsigned char)((unsigned int)((unsigned char)((int)rxd_wb->status >> 2)) & 15U);
      #line 780 
      is_rx_check_sum_enabled = (rxd_wb->type >> 19) & 3U;
      #line 782 
      pkt_type = (rxd_wb->type >> 4) & 255U;
      #line 785 
      if (((unsigned long)is_rx_check_sum_enabled & 1UL) != 0UL && (pkt_type & 3U) == 0U) 
        #line 787 
        buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.is_ip_cso = (unsigned int)(((unsigned long)rx_stat & 2UL) == 0UL);
      #line 789 
      if (((unsigned long)is_rx_check_sum_enabled & 2UL) != 0UL) 
        #line 790 
        if ((pkt_type & 28U) == 4U) 
                                    #line 791 
                                    buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.is_udp_cso = (unsigned int)(((int)((unsigned int)(((unsigned long)rx_stat & 4UL) == 0UL)) && (int)((unsigned int)(((unsigned long)rx_stat & 8UL) != 0UL))) != 0);
        else 
          #line 793 
          if ((pkt_type & 28U) == 0U) 
                                      #line 794 
                                      buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.is_tcp_cso = (unsigned int)(((int)((unsigned int)(((unsigned long)rx_stat & 4UL) == 0UL)) && (int)((unsigned int)(((unsigned long)rx_stat & 8UL) != 0UL))) != 0);
      #line 797 
      buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.is_cso_err = (unsigned int)(((int)rx_stat & 6) != 0);
      #line 799 
      if ((long)((unsigned int)rxd_wb->pkt_len <= 60U) != 0L) {
        #line 800 
        buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.is_ip_cso = (unsigned int)0U;
        #line 801 
        buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.is_cso_err = (unsigned int)0U;
      }
      #line 804 
      if ((unsigned int)(self->aq_nic_cfg)->is_vlan_rx_strip != 0U && (((unsigned long)pkt_type & 32UL) != 0UL || ((unsigned long)pkt_type & 64UL) != 0UL)) {
        #line 807 
        buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.is_vlan = (unsigned int)1U;
        #line 808 
        buff->__anonCompField_aq_ring_buff_s_169.__anonCompField___anonunion_704_166.vlan_rx_tag = rxd_wb->vlan;
      }
      #line 811 
      if (((unsigned long)rx_stat & 1UL) != 0UL || (rxd_wb->type & 4096U) != 0U) 
        #line 813 
        buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.is_error = (unsigned int)1U;
      #line 815 
      if ((int)(self->aq_nic_cfg)->is_rss != 0) {
        #line 817 
        u16 rss_type = (unsigned short)((unsigned int)((unsigned short)rxd_wb->type) & 15U);
        #line 819 
        if ((unsigned int)rss_type + 65535U <= 6U) {
          #line 820 
          buff->__anonCompField_aq_ring_buff_s_169.__anonCompField___anonunion_704_166.is_hash_l4 = (unsigned char)((unsigned int)rss_type + 65532U <= 1U);
          #line 822 
          buff->__anonCompField_aq_ring_buff_s_169.__anonCompField___anonunion_704_166.rss_hash = rxd_wb->rss_hash;
        }
      }
      #line 826 
      if (((unsigned int)rxd_wb->status & 2U) != 0U) {
        #line 827 
        buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.len = (unsigned int)((unsigned int)rxd_wb->pkt_len & 2047U);
        #line 829 
        if ((unsigned int)buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.len != 0U) 
          #line 829 
          buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.len = buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.len; else 
                                                                    #line 829 
                                                                    buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.len = (unsigned int)2048U;
        #line 831 
        buff->__anonCompField_aq_ring_buff_s_169.__anonCompField___anonunion_704_166.next = (unsigned short)0U;
        #line 832 
        buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.is_eop = (unsigned int)1U;
      }
      else {
        #line 836 
        unsigned int tmp;
        #line 836 
        if (2048U < (unsigned int)rxd_wb->pkt_len) 
                                                   #line 836 
                                                   tmp = 2048U; else 
                                                                  #line 836 
                                                                  tmp = (unsigned int)rxd_wb->pkt_len;
        #line 834 
        buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.len = (unsigned int)((unsigned short)tmp);
        #line 838 
        if (((unsigned int)rxd_wb->status & 61440U) != 0U) {
          #line 841 
          buff->__anonCompField_aq_ring_buff_s_169.__anonCompField___anonunion_704_166.next = rxd_wb->next_desc_ptr;
          #line 842 
          (ring->stats.rx.lro_packets) ++;
        }
        else {
          #line 845 
          buff->__anonCompField_aq_ring_buff_s_169.__anonCompField___anonunion_704_166.next = (unsigned short)aq_ring_next_dx(ring,ring->hw_head);
          #line 848 
          (ring->stats.rx.jumbo_packets) ++;
        }
      }
    }
    #line 760 
    ring->hw_head = aq_ring_next_dx(ring,ring->hw_head);
  }
  #line 853 
  return aq_hw_err_from_flags(self);
}

#line 856  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_b0.c"
static int hw_atl_b0_hw_irq_enable(struct aq_hw_s *self, u64 mask)
{
  #line 858 
  hw_atl_itr_irq_msk_setlsw_set(self,(unsigned int)mask);
  #line 860 
  return aq_hw_err_from_flags(self);
}

#line 863  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_b0.c"
static int hw_atl_b0_hw_irq_disable(struct aq_hw_s *self, u64 mask)
{
  #line 865 
  hw_atl_itr_irq_msk_clearlsw_set(self,(unsigned int)mask);
  #line 866 
  hw_atl_itr_irq_status_clearlsw_set(self,(unsigned int)mask);
  #line 868 
  atomic_inc_1(& self->dpc);
  #line 870 
  return aq_hw_err_from_flags(self);
}

#line 873  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_b0.c"
static int hw_atl_b0_hw_irq_read(struct aq_hw_s *self, u64 *mask)
{
  #line 875 
  *mask = (unsigned long long)hw_atl_itr_irq_statuslsw_get(self);
  #line 877 
  return aq_hw_err_from_flags(self);
}

#line 882  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_b0.c"
static int hw_atl_b0_hw_packet_filter_set(struct aq_hw_s *self, unsigned int packet_filter)
{
  #line 885 
  struct aq_nic_cfg_s *cfg = self->aq_nic_cfg;
  #line 886 
  unsigned int i = 0U;
  #line 888 
  hw_atl_rpfl2promiscuous_mode_en_set(self,(packet_filter >> 8) & 1U);
  #line 891 
  hw_atl_rpf_vlan_prom_mode_en_set(self,(unsigned int)(((int)(packet_filter >> 8) & 1 || (int)cfg->is_vlan_force_promisc != 0) != 0));
  #line 895 
  hw_atl_rpfl2multicast_flr_en_set(self,(unsigned int)(((int)(packet_filter >> 9) & 1 && (int)(packet_filter >> 12) & 1) != 0),0U);
  #line 899 
  hw_atl_rpfl2_accept_all_mc_packets_set(self,(unsigned int)(((int)(packet_filter >> 9) & 1 && (int)(packet_filter >> 12) & 1) != 0));
  #line 903 
  hw_atl_rpfl2broadcast_en_set(self,(packet_filter >> 1) & 1U);
  #line 906 
  i = 1U;
  #line 906 
  while (i <= 32U) {
    #line 907 
    unsigned int tmp;
    #line 907 
    ;
    #line 907 
    if ((unsigned int)cfg->is_mc_list_enabled != 0U && (unsigned int)cfg->mc_list_count >= i) 
      #line 907 
      tmp = 1U; else 
                     #line 907 
                     tmp = 0U;
    #line 907 
    ;
    #line 907 
    hw_atl_rpfl2_uc_flr_en_set(self,tmp,i);
    #line 906 
    i ++;
  }
  #line 912 
  return aq_hw_err_from_flags(self);
}

#line 917  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_b0.c"
static int hw_atl_b0_hw_multicast_list_set(struct aq_hw_s *self, u8 (*ar_mac)[6U], u32 count)
{
  #line 923 
  int err = 0;
  #line 924 
  struct aq_nic_cfg_s *cfg = self->aq_nic_cfg;
  #line 926 
  if (count > 32U) {
    #line 927 
    err = -56;
    #line 928 
    goto err_exit;
  }
  #line 930 
  cfg->mc_list_count = (unsigned short)0U;
  #line 930 
  while ((unsigned int)cfg->mc_list_count < count) {
    {
      #line 933 
      u32 i = (unsigned int)cfg->mc_list_count;
      #line 934 
      u32 h = (unsigned int)(((int)(*(ar_mac + (unsigned long)i))[0] << 8) | (int)(*(ar_mac + (unsigned long)i))[1]);
      #line 935 
      u32 l = (unsigned int)(((((int)(*(ar_mac + (unsigned long)i))[2] << 24) | ((int)(*(ar_mac + (unsigned long)i))[3] << 16)) | ((int)(*(ar_mac + (unsigned long)i))[4] << 8)) | (int)(*(ar_mac + (unsigned long)i))[5]);
      #line 938 
      hw_atl_rpfl2_uc_flr_en_set(self,0U,i + 1U);
      #line 940 
      hw_atl_rpfl2unicast_dest_addresslsw_set(self,l,i + 1U);
      #line 943 
      hw_atl_rpfl2unicast_dest_addressmsw_set(self,h,i + 1U);
      #line 946 
      hw_atl_rpfl2_uc_flr_en_set(self,(unsigned int)cfg->is_mc_list_enabled,i + 1U);
    }
    #line 932 
    cfg->mc_list_count = (u16)((int)cfg->mc_list_count + 1);
  }
  #line 951 
  err = aq_hw_err_from_flags(self);
  #line 953 
  err_exit: 
            #line 953 
  ;
  #line 954 
  return err;
}

#line 957  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_b0.c"
static int hw_atl_b0_hw_interrupt_moderation_set(struct aq_hw_s *self)
{
  #line 959 
  unsigned int i = 0U;
  #line 960 
  u32 itr_tx = 2U;
  #line 961 
  u32 itr_rx = 2U;
  #line 963 
  switch ((self->aq_nic_cfg)->itr) {
    #line 964 
    case (u32)1: 
                 #line 964 
    ;
    #line 965 
    case (u32)65535: 
                     #line 965 
    ;
    #line 966 
    hw_atl_tdm_tx_desc_wr_wb_irq_en_set(self,0U);
    #line 967 
    hw_atl_tdm_tdm_intr_moder_en_set(self,1U);
    #line 968 
    hw_atl_rdm_rx_desc_wr_wb_irq_en_set(self,0U);
    #line 969 
    hw_atl_rdm_rdm_intr_moder_en_set(self,1U);
    #line 971 
    if ((self->aq_nic_cfg)->itr == 1U) {
      #line 980 
      int tmp_1;
      #line 981 
      int __UNIQUE_ID___x447;
      #line 981 
      int tmp_3;
      #line 982 
      int __UNIQUE_ID___x449;
      #line 982 
      int tmp_5;
      #line 979 
      int __UNIQUE_ID___x443;
      #line 979 
      int tmp;
      #line 980 
      int __UNIQUE_ID___x445;
      #line 973 
      int tx_max_timer = (int)((unsigned int)(self->aq_nic_cfg)->tx_itr / 2U);
      #line 974 
      int tx_min_timer = tx_max_timer / 2;
      #line 976 
      int rx_max_timer = (int)((unsigned int)(self->aq_nic_cfg)->rx_itr / 2U);
      #line 977 
      int rx_min_timer = rx_max_timer / 2;
      {
        #line 979 
        __UNIQUE_ID___x443 = 511;
        #line 979 
        int __UNIQUE_ID___y444 = tx_max_timer;
        #line 979 
        if (__UNIQUE_ID___x443 < __UNIQUE_ID___y444) 
                                                     #line 979 
                                                     tmp = __UNIQUE_ID___x443; else 
                                                                    #line 979 
                                                                    tmp = __UNIQUE_ID___y444;
        }
      #line 979 
      tx_max_timer = tmp;
      {
        #line 980 
        __UNIQUE_ID___x445 = 255;
        #line 980 
        int __UNIQUE_ID___y446 = tx_min_timer;
        #line 980 
        if (__UNIQUE_ID___x445 < __UNIQUE_ID___y446) 
                                                     #line 980 
                                                     tmp_1 = __UNIQUE_ID___x445; else 
                                                                    #line 980 
                                                                    tmp_1 = __UNIQUE_ID___y446;
        }
      #line 980 
      tx_min_timer = tmp_1;
      {
        #line 981 
        __UNIQUE_ID___x447 = 511;
        #line 981 
        int __UNIQUE_ID___y448 = rx_max_timer;
        #line 981 
        if (__UNIQUE_ID___x447 < __UNIQUE_ID___y448) 
                                                     #line 981 
                                                     tmp_3 = __UNIQUE_ID___x447; else 
                                                                    #line 981 
                                                                    tmp_3 = __UNIQUE_ID___y448;
        }
      #line 981 
      rx_max_timer = tmp_3;
      {
        #line 982 
        __UNIQUE_ID___x449 = 255;
        #line 982 
        int __UNIQUE_ID___y450 = rx_min_timer;
        #line 982 
        if (__UNIQUE_ID___x449 < __UNIQUE_ID___y450) 
                                                     #line 982 
                                                     tmp_5 = __UNIQUE_ID___x449; else 
                                                                    #line 982 
                                                                    tmp_5 = __UNIQUE_ID___y450;
        }
      #line 982 
      rx_min_timer = tmp_5;
      #line 984 
      itr_tx = (unsigned int)(tx_min_timer << 8U) | itr_tx;
      #line 985 
      itr_tx = (unsigned int)(tx_max_timer << 16U) | itr_tx;
      #line 986 
      itr_rx = (unsigned int)(rx_min_timer << 8U) | itr_rx;
      #line 987 
      itr_rx = (unsigned int)(rx_max_timer << 16U) | itr_rx;
    }
    else {
      #line 989 
      unsigned int hw_atl_b0_timers_table_tx_[6U][2U] = {{15U, 255U}, {15U, 511U}, {15U, 511U}, {15U, 511U}, {15U, 511U}, {15U, 511U}};
      #line 998 
      unsigned int hw_atl_b0_timers_table_rx_[6U][2U] = {{6U, 56U}, {12U, 112U}, {12U, 112U}, {24U, 224U}, {48U, 128U}, {4U, 80U}};
      #line 1007 
      unsigned int speed_index = hw_atl_utils_mbps_2_speed_index(self->aq_link_status.mbps);
      #line 1012 
      (self->aq_nic_cfg)->tx_itr = (unsigned short)((unsigned int)((unsigned short)hw_atl_b0_timers_table_tx_[speed_index][1]) * 2U);
      #line 1014 
      (self->aq_nic_cfg)->rx_itr = (unsigned short)((unsigned int)((unsigned short)hw_atl_b0_timers_table_rx_[speed_index][1]) * 2U);
      #line 1017 
      itr_tx = (hw_atl_b0_timers_table_tx_[speed_index][0] << 8U) | itr_tx;
      #line 1019 
      itr_tx = (hw_atl_b0_timers_table_tx_[speed_index][1] << 16U) | itr_tx;
      #line 1022 
      itr_rx = (hw_atl_b0_timers_table_rx_[speed_index][0] << 8U) | itr_rx;
      #line 1024 
      itr_rx = (hw_atl_b0_timers_table_rx_[speed_index][1] << 16U) | itr_rx;
    }
    #line 1027 
    break;
    #line 1028 
    case (u32)0: 
                 #line 1028 
    ;
    #line 1029 
    hw_atl_tdm_tx_desc_wr_wb_irq_en_set(self,1U);
    #line 1030 
    hw_atl_tdm_tdm_intr_moder_en_set(self,0U);
    #line 1031 
    hw_atl_rdm_rx_desc_wr_wb_irq_en_set(self,1U);
    #line 1032 
    hw_atl_rdm_rdm_intr_moder_en_set(self,0U);
    #line 1033 
    itr_tx = 0U;
    #line 1034 
    itr_rx = 0U;
    #line 1035 
    break;
  }
  #line 1038 
  i = 32U;
  #line 1038 
  while (1) {
    #line 1038 
    unsigned int tmp_8;
    #line 1038 
    tmp_8 = i;
    #line 1038 
    i --;
    #line 1038 
    ;
    #line 1038 
    if (! (tmp_8 != 0U)) 
                         #line 1038 
                         break;
    #line 1039 
    hw_atl_reg_tx_intr_moder_ctrl_set(self,itr_tx,i);
    #line 1040 
    hw_atl_reg_rx_intr_moder_ctrl_set(self,itr_rx,i);
  }
  #line 1043 
  return aq_hw_err_from_flags(self);
}

#line 1046  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_b0.c"
static int hw_atl_b0_hw_stop(struct aq_hw_s *self)
{
  #line 1048 
  int err;
  #line 1049 
  u32 val;
  #line 1051 
  hw_atl_b0_hw_irq_disable(self,4294967295ULL);
  #line 1056 
  hw_atl_rdm_rx_dma_desc_cache_init_tgl(self);
  #line 1058 
  err = aq_hw_err_from_flags(self);
  #line 1060 
  if (err != 0) 
                #line 1061 
                goto err_exit;
  {
    #line 1063 
    u64 __timeout_us = 10000ULL;
    #line 1063 
    unsigned long __delay_us = 1000UL;
    #line 1063 
    ;
    #line 1063 
    ktime_t __timeout = ktime_add_us(ktime_get(),__timeout_us);
    #line 1063 
    while (1) {
      #line 1063 
      val = hw_atl_rdm_rx_dma_desc_cache_init_done_get(self);
      #line 1063 
      if (val == 1U) 
                     #line 1063 
                     break;
      #line 1063 
      if (__timeout_us != 0ULL) {
        #line 1063 
        ;
        #line 1063 
        if (ktime_compare(ktime_get(),__timeout) > 0) {
          #line 1063 
          val = hw_atl_rdm_rx_dma_desc_cache_init_done_get(self);
          #line 1063 
          break;
        }
      }
      #line 1063 
      if (__delay_us != 0UL) 
        #line 1063 
        if (0 != 0) 
          #line 1063 
          if (__delay_us > 19999UL) 
                                    #line 1063 
                                    __bad_udelay(); else 
                                                         #line 1063 
                                                         __const_udelay(__delay_us * 4295UL);
        else 
             #line 1063 
             __udelay(__delay_us);
    }
    #line 1063 
    int tmp_3 = val == 1U;
    #line 1063 
    ;
  }
  #line 1066 
  err_exit: 
            #line 1066 
  ;
  #line 1067 
  return err;
}

#line 1070  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_b0.c"
static int hw_atl_b0_hw_ring_tx_stop(struct aq_hw_s *self, struct aq_ring_s *ring)
{
  #line 1073 
  hw_atl_tdm_tx_desc_en_set(self,0U,ring->idx);
  #line 1075 
  return aq_hw_err_from_flags(self);
}

#line 1078  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_b0.c"
static int hw_atl_b0_hw_ring_rx_stop(struct aq_hw_s *self, struct aq_ring_s *ring)
{
  #line 1081 
  hw_atl_rdm_rx_desc_en_set(self,0U,ring->idx);
  #line 1083 
  return aq_hw_err_from_flags(self);
}

#line 1086  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_b0.c"
static int hw_atl_b0_tx_tc_mode_get(struct aq_hw_s *self, u32 *tc_mode)
{
  #line 1088 
  *tc_mode = hw_atl_rpb_tps_tx_tc_mode_get(self);
  #line 1089 
  return aq_hw_err_from_flags(self);
}

#line 1092  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_b0.c"
static int hw_atl_b0_rx_tc_mode_get(struct aq_hw_s *self, u32 *tc_mode)
{
  #line 1094 
  *tc_mode = hw_atl_rpb_rpf_rx_traf_class_mode_get(self);
  #line 1095 
  return aq_hw_err_from_flags(self);
}

#line 1101  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_b0.c"
static void hw_atl_b0_get_ptp_ts(struct aq_hw_s *self, u64 *stamp)
{
  #line 1103 
  u64 ns;
  #line 1105 
  hw_atl_pcs_ptp_clock_read_enable(self,1U);
  #line 1106 
  hw_atl_pcs_ptp_clock_read_enable(self,0U);
  #line 1107 
  ns = (((unsigned long long)hw_atl_pcs_ptp_clock_get(self,0U) & 65535ULL) + (((unsigned long long)hw_atl_pcs_ptp_clock_get(self,1U) << 16) & 4294901760ULL)) * 1000000000ULL + (((unsigned long long)hw_atl_pcs_ptp_clock_get(self,3U) & 65535ULL) + (((unsigned long long)hw_atl_pcs_ptp_clock_get(self,4U) << 16) & 4294901760ULL));
  #line 1112 
  *stamp = (unsigned long long)self->ptp_clk_offset + ns;
  #line 1113 
  return;
}

#line 1115  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_b0.c"
static void hw_atl_b0_adj_params_get(u64 freq, s64 adj, u32 *ns, u32 *fns)
{
  #line 1120 
  u64 nsi;
  #line 1118 
  s64 base_ns = (adj + 1000000000LL) * 1000000000LL;
  #line 1119 
  u64 nsi_frac = 0ULL;
  #line 1122 
  base_ns = div64_s64(base_ns,(long long)freq);
  #line 1123 
  nsi = div64_u64((unsigned long long)base_ns,1000000000ULL);
  #line 1125 
  if (nsi * 1000000000ULL != (unsigned long long)base_ns) {
    #line 1126 
    s64 divisor = div64_s64(1000000000000000000LL,(long long)((unsigned long long)base_ns - nsi * 1000000000ULL));
    #line 1128 
    nsi_frac = (unsigned long long)div64_s64(4294967296000000000LL,divisor);
  }
  #line 1131 
  *ns = (unsigned int)nsi;
  #line 1132 
  *fns = (unsigned int)nsi_frac;
  #line 1133 
  return;
}

#line 1136  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_b0.c"
static void hw_atl_b0_mac_adj_param_calc(struct hw_fw_request_ptp_adj_freq *ptp_adj_freq, u64 phyfreq, u64 macfreq)
{
  #line 1139 
  s64 adj_fns_val;
  #line 1140 
  s64 fns_in_sec_phy = (long long)((unsigned long long)((long long)ptp_adj_freq->fns_phy + (long long)ptp_adj_freq->ns_phy * 4294967296LL) * phyfreq);
  #line 1142 
  s64 fns_in_sec_mac = (long long)((unsigned long long)((long long)ptp_adj_freq->fns_mac + (long long)ptp_adj_freq->ns_mac * 4294967296LL) * macfreq);
  #line 1144 
  s64 fault_in_sec_phy = 4294967296000000000LL - fns_in_sec_phy;
  #line 1145 
  s64 fault_in_sec_mac = 4294967296000000000LL - fns_in_sec_mac;
  #line 1147 
  s64 diff_in_mcp_overflow = (fault_in_sec_mac - fault_in_sec_phy) * 17179869184LL;
  #line 1150 
  diff_in_mcp_overflow = div64_s64(diff_in_mcp_overflow,312500000LL);
  #line 1152 
  adj_fns_val = ((long long)ptp_adj_freq->fns_mac + (long long)ptp_adj_freq->ns_mac * 4294967296LL) + diff_in_mcp_overflow;
  #line 1155 
  ptp_adj_freq->mac_ns_adj = (unsigned int)div64_s64(adj_fns_val,4294967296LL);
  #line 1156 
  ptp_adj_freq->mac_fns_adj = (unsigned int)adj_fns_val;
  #line 1157 
  return;
}

#line 1160  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_b0.c"
static int hw_atl_b0_adj_sys_clock(struct aq_hw_s *self, s64 delta)
{
  #line 1162 
  self->ptp_clk_offset += delta;
  #line 1164 
  return 0;
}

#line 1167  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_b0.c"
static int hw_atl_b0_set_sys_clock(struct aq_hw_s *self, u64 time, u64 ts)
{
  #line 1169 
  s64 delta = (long long)(time - ((unsigned long long)self->ptp_clk_offset + ts));
  #line 1171 
  return hw_atl_b0_adj_sys_clock(self,delta);
}

#line 1174  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_b0.c"
static int hw_atl_b0_ts_to_sys_clock(struct aq_hw_s *self, u64 ts, u64 *time)
{
  #line 1176 
  *time = (unsigned long long)self->ptp_clk_offset + ts;
  #line 1177 
  return 0;
}

#line 1180  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_b0.c"
static int hw_atl_b0_adj_clock_freq(struct aq_hw_s *self, s32 ppb)
{
  #line 1182 
  struct hw_fw_request_iface fwreq;
  #line 1183 
  size_t size;
  #line 1185 
  memset((void *)(& fwreq),0,28UL);
  #line 1187 
  fwreq.msg_id = 18U;
  #line 1188 
  hw_atl_b0_adj_params_get(312500000ULL,(long long)ppb,& fwreq.__anonCompField_hw_fw_request_iface_165.ptp_adj_freq.ns_mac,& fwreq.__anonCompField_hw_fw_request_iface_165.ptp_adj_freq.fns_mac);
  #line 1191 
  hw_atl_b0_adj_params_get(160000000ULL,(long long)ppb,& fwreq.__anonCompField_hw_fw_request_iface_165.ptp_adj_freq.ns_phy,& fwreq.__anonCompField_hw_fw_request_iface_165.ptp_adj_freq.fns_phy);
  #line 1194 
  hw_atl_b0_mac_adj_param_calc(& fwreq.__anonCompField_hw_fw_request_iface_165.ptp_adj_freq,160000000ULL,312500000ULL);
  #line 1198 
  size = 28UL;
  #line 1199 
  return (*((self->aq_fw_ops)->send_fw_request))(self,& fwreq,size);
}

#line 1202  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_b0.c"
static int hw_atl_b0_gpio_pulse(struct aq_hw_s *self, u32 index, u64 start, u32 period)
{
  #line 1205 
  struct hw_fw_request_iface fwreq;
  #line 1206 
  size_t size;
  #line 1208 
  memset((void *)(& fwreq),0,28UL);
  #line 1210 
  fwreq.msg_id = 17U;
  #line 1211 
  fwreq.__anonCompField_hw_fw_request_iface_165.ptp_gpio_ctrl.index = index;
  #line 1212 
  fwreq.__anonCompField_hw_fw_request_iface_165.ptp_gpio_ctrl.period = period;
  #line 1214 
  fwreq.__anonCompField_hw_fw_request_iface_165.ptp_gpio_ctrl.start = start - (unsigned long long)self->ptp_clk_offset;
  #line 1216 
  size = 20UL;
  #line 1217 
  return (*((self->aq_fw_ops)->send_fw_request))(self,& fwreq,size);
}

#line 1220  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_b0.c"
static int hw_atl_b0_extts_gpio_enable(struct aq_hw_s *self, u32 index, u32 enable)
{
  #line 1224 
  int tmp;
  #line 1224 
  if (enable != 0U) 
                    #line 1224 
                    tmp = 113; else 
                                    #line 1224 
                                    tmp = 0;
  #line 1224 
  ;
  #line 1224 
  aq_phy_write_reg(self,(unsigned short)3,(unsigned short)50705,(unsigned short)tmp);
  #line 1226 
  return 0;
}

#line 1229  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_b0.c"
static int hw_atl_b0_get_sync_ts(struct aq_hw_s *self, u64 *ts)
{
  #line 1231 
  u64 sec_l;
  #line 1232 
  u64 sec_h;
  #line 1233 
  u64 nsec_l;
  #line 1234 
  u64 nsec_h;
  #line 1236 
  if (ts == (u64 *)0ULL) 
                         #line 1237 
                         return -1;
  #line 1240 
  sec_l = (unsigned long long)aq_phy_read_reg(self,(unsigned short)3,(unsigned short)51476);
  #line 1242 
  sec_h = (unsigned long long)aq_phy_read_reg(self,(unsigned short)3,(unsigned short)51477);
  #line 1244 
  nsec_l = (unsigned long long)aq_phy_read_reg(self,(unsigned short)3,(unsigned short)51478);
  #line 1246 
  nsec_h = (unsigned long long)aq_phy_read_reg(self,(unsigned short)3,(unsigned short)51479);
  #line 1248 
  *ts = ((nsec_h << 16) + nsec_l) + ((sec_h << 16) + sec_l) * 1000000000ULL;
  #line 1250 
  return 0;
}

#line 1253  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_b0.c"
static u16 hw_atl_b0_rx_extract_ts(struct aq_hw_s *self, u8 *p, unsigned int len, u64 *timestamp)
{
  #line 1257 
  struct ethhdr *eth;
  #line 1258 
  __be64 sec;
  #line 1259 
  __be32 ns;
  #line 1260 
  u8 *ptr;
  #line 1283 
  unsigned int tmp_1;
  #line 1256 
  unsigned int offset = 14U;
  #line 1262 
  if (len <= offset || timestamp == (u64 *)0ULL) 
                                                 #line 1263 
                                                 return (unsigned short)0U;
  #line 1273 
  ptr = p + (unsigned long)(len - offset);
  #line 1274 
  memcpy((void *)(& sec),(void *)ptr,8UL);
  #line 1275 
  ptr += 8UL;
  #line 1276 
  memcpy((void *)(& ns),(void *)ptr,4UL);
  #line 1278 
  *timestamp = (((unsigned long long)__builtin_bswap64((unsigned long)sec) & 281474976710655ULL) * 1000000000ULL + (unsigned long long)__builtin_bswap32(ns)) + (unsigned long long)self->ptp_clk_offset;
  #line 1281 
  eth = (struct ethhdr *)p;
  #line 1283 
  if ((unsigned int)eth->h_proto == 63368U) 
                                            #line 1283 
                                            tmp_1 = 12U; else 
                                                              #line 1283 
                                                              tmp_1 = 14U;
  #line 1283 
  return (unsigned short)tmp_1;
}

#line 1286  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_b0.c"
static int hw_atl_b0_extract_hwts(struct aq_hw_s *self, u8 *p, unsigned int len, u64 *timestamp)
{
  #line 1290 
  u64 tmp;
  #line 1290 
  u64 sec;
  #line 1290 
  u64 ns;
  #line 1289 
  struct hw_atl_rxd_hwts_wb_s *hwts_wb = (struct hw_atl_rxd_hwts_wb_s *)p;
  #line 1292 
  sec = 0ULL;
  #line 1293 
  tmp = (unsigned long long)(hwts_wb->sec_lw0 >> 2) & 1023ULL;
  #line 1294 
  sec += tmp;
  #line 1295 
  tmp = ((unsigned long long)(hwts_wb->sec_lw1 >> 16) << 10) & 67107840ULL;
  #line 1296 
  sec += tmp;
  #line 1297 
  tmp = ((unsigned long long)hwts_wb->sec_hw << 26) & 274810798080ULL;
  #line 1298 
  sec += tmp;
  #line 1299 
  tmp = ((unsigned long long)(hwts_wb->sec_hw >> 22) << 38) & 281200098803712ULL;
  #line 1300 
  sec += tmp;
  #line 1301 
  ns = sec * 1000000000ULL + (unsigned long long)hwts_wb->ns;
  #line 1302 
  if (timestamp != (u64 *)0ULL) 
                                #line 1303 
                                *timestamp = (unsigned long long)self->ptp_clk_offset + ns;
  #line 1304 
  return 0;
}

#line 1307  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_b0.c"
static int hw_atl_b0_hw_fl3l4_clear(struct aq_hw_s *self, struct aq_rx_filter_l3l4 *data)
{
  #line 1310 
  u8 location = data->location;
  #line 1312 
  if ((unsigned int)data->is_ipv6 == 0U) {
    #line 1313 
    hw_atl_rpfl3l4_cmd_clear(self,(unsigned char)((int)location));
    #line 1314 
    hw_atl_rpf_l4_spd_set(self,0U,(unsigned int)location);
    #line 1315 
    hw_atl_rpf_l4_dpd_set(self,0U,(unsigned int)location);
    #line 1316 
    hw_atl_rpfl3l4_ipv4_src_addr_clear(self,(unsigned char)((int)location));
    #line 1317 
    hw_atl_rpfl3l4_ipv4_dest_addr_clear(self,(unsigned char)((int)location));
  }
  else {
    #line 1319 
    int i;
    #line 1321 
    i = 0;
    #line 1321 
    while ((unsigned int)i <= 3U) {
      #line 1322 
      hw_atl_rpfl3l4_cmd_clear(self,(unsigned char)((int)((unsigned char)i) + (int)location));
      #line 1323 
      hw_atl_rpf_l4_spd_set(self,0U,(unsigned int)((int)location + i));
      #line 1324 
      hw_atl_rpf_l4_dpd_set(self,0U,(unsigned int)((int)location + i));
      #line 1321 
      i ++;
    }
    #line 1326 
    hw_atl_rpfl3l4_ipv6_src_addr_clear(self,(unsigned char)((int)location));
    #line 1327 
    hw_atl_rpfl3l4_ipv6_dest_addr_clear(self,(unsigned char)((int)location));
  }
  #line 1330 
  return aq_hw_err_from_flags(self);
}

#line 1333  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_b0.c"
static int hw_atl_b0_hw_fl3l4_set(struct aq_hw_s *self, struct aq_rx_filter_l3l4 *data)
{
  #line 1336 
  u8 location = data->location;
  #line 1338 
  hw_atl_b0_hw_fl3l4_clear(self,data);
  #line 1340 
  if ((data->cmd & 805306368U) != 0U) 
    #line 1342 
    if ((unsigned int)data->is_ipv6 == 0U) {
      #line 1343 
      hw_atl_rpfl3l4_ipv4_dest_addr_set(self,(unsigned char)((int)location),data->ip_dst[0]);
      #line 1346 
      hw_atl_rpfl3l4_ipv4_src_addr_set(self,(unsigned char)((int)location),data->ip_src[0]);
    }
    else {
      #line 1350 
      hw_atl_rpfl3l4_ipv6_dest_addr_set(self,(unsigned char)((int)location),(u32 *)(& data->ip_dst));
      #line 1353 
      hw_atl_rpfl3l4_ipv6_src_addr_set(self,(unsigned char)((int)location),(u32 *)(& data->ip_src));
    }
  #line 1359 
  if ((data->cmd & 201326592U) != 0U) {
    #line 1361 
    hw_atl_rpf_l4_dpd_set(self,(unsigned int)data->p_dst,(unsigned int)location);
    #line 1362 
    hw_atl_rpf_l4_spd_set(self,(unsigned int)data->p_src,(unsigned int)location);
  }
  #line 1365 
  hw_atl_rpfl3l4_cmd_set(self,(unsigned char)((int)location),data->cmd);
  #line 1367 
  return aq_hw_err_from_flags(self);
}

#line 1370  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_b0.c"
static int hw_atl_b0_hw_fl2_set(struct aq_hw_s *self, struct aq_rx_filter_l2 *data)
{
  #line 1373 
  hw_atl_rpf_etht_flr_en_set(self,1U,(unsigned int)data->location);
  #line 1374 
  hw_atl_rpf_etht_flr_set(self,(unsigned int)data->ethertype,(unsigned int)data->location);
  #line 1375 
  hw_atl_rpf_etht_user_priority_en_set(self,(unsigned int)((unsigned int)data->user_priority_en != 0U),(unsigned int)data->location);
  #line 1378 
  if ((unsigned int)data->user_priority_en != 0U) 
                                                  #line 1379 
                                                  hw_atl_rpf_etht_user_priority_set(self,(unsigned int)data->user_priority,(unsigned int)data->location);
  #line 1383 
  if ((int)data->queue < 0) {
    #line 1384 
    hw_atl_rpf_etht_flr_act_set(self,0U,(unsigned int)data->location);
    #line 1385 
    hw_atl_rpf_etht_rx_queue_en_set(self,0U,(unsigned int)data->location);
  }
  else {
    #line 1387 
    hw_atl_rpf_etht_flr_act_set(self,1U,(unsigned int)data->location);
    #line 1388 
    hw_atl_rpf_etht_rx_queue_en_set(self,1U,(unsigned int)data->location);
    #line 1389 
    hw_atl_rpf_etht_rx_queue_set(self,(unsigned int)data->queue,(unsigned int)data->location);
  }
  #line 1392 
  return aq_hw_err_from_flags(self);
}

#line 1395  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_b0.c"
static int hw_atl_b0_hw_fl2_clear(struct aq_hw_s *self, struct aq_rx_filter_l2 *data)
{
  #line 1398 
  hw_atl_rpf_etht_flr_en_set(self,0U,(unsigned int)data->location);
  #line 1399 
  hw_atl_rpf_etht_flr_set(self,0U,(unsigned int)data->location);
  #line 1400 
  hw_atl_rpf_etht_user_priority_en_set(self,0U,(unsigned int)data->location);
  #line 1402 
  return aq_hw_err_from_flags(self);
}

#line 1415  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_b0.c"
static int hw_atl_b0_hw_vlan_set(struct aq_hw_s *self, struct aq_rx_filter_vlan *aq_vlans)
{
  #line 1418 
  int i;
  #line 1420 
  i = 0;
  #line 1420 
  while ((unsigned int)i <= 15U) {
    #line 1421 
    hw_atl_rpf_vlan_flr_en_set(self,0U,(unsigned int)i);
    #line 1422 
    hw_atl_rpf_vlan_rxq_en_flr_set(self,0U,(unsigned int)i);
    #line 1423 
    if ((unsigned int)(aq_vlans + (unsigned long)i)->enable != 0U) {
      #line 1424 
      hw_atl_rpf_vlan_id_flr_set(self,(unsigned int)(aq_vlans + (unsigned long)i)->vlan_id,(unsigned int)i);
      #line 1427 
      hw_atl_rpf_vlan_flr_act_set(self,1U,(unsigned int)i);
      #line 1428 
      hw_atl_rpf_vlan_flr_en_set(self,1U,(unsigned int)i);
      #line 1429 
      if ((unsigned int)(aq_vlans + (unsigned long)i)->queue != 255U) {
        #line 1430 
        hw_atl_rpf_vlan_rxq_flr_set(self,(unsigned int)(aq_vlans + (unsigned long)i)->queue,(unsigned int)i);
        #line 1433 
        hw_atl_rpf_vlan_rxq_en_flr_set(self,1U,(unsigned int)i);
      }
    }
    #line 1420 
    i ++;
  }
  #line 1438 
  return aq_hw_err_from_flags(self);
}

#line 1441  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_b0.c"
static int hw_atl_b0_hw_vlan_ctrl(struct aq_hw_s *self, bool enable)
{
  #line 1444 
  hw_atl_rpf_vlan_prom_mode_en_set(self,(unsigned int)(! enable));
  #line 1446 
  return aq_hw_err_from_flags(self);
}

#line 1449  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_b0.c"
static int hw_atl_b0_set_loopback(struct aq_hw_s *self, u32 mode, bool enable)
{
  #line 1451 
  switch (mode) {
    #line 1452 
    case (u32)0: 
                 #line 1452 
    ;
    #line 1453 
    hw_atl_tpb_tx_dma_sys_lbk_en_set(self,(unsigned int)enable);
    #line 1454 
    hw_atl_rpb_dma_sys_lbk_set(self,(unsigned int)enable);
    #line 1455 
    break;
    #line 1456 
    case (u32)1: 
                 #line 1456 
    ;
    #line 1457 
    hw_atl_tpo_tx_pkt_sys_lbk_en_set(self,(unsigned int)enable);
    #line 1458 
    hw_atl_rpf_tpo_to_rpf_sys_lbk_set(self,(unsigned int)enable);
    #line 1459 
    break;
    #line 1460 
    case (u32)2: 
                 #line 1460 
    ;
    #line 1461 
    hw_atl_rpf_vlan_prom_mode_en_set(self,(unsigned int)enable);
    #line 1462 
    hw_atl_rpfl2promiscuous_mode_en_set(self,(unsigned int)enable);
    #line 1463 
    hw_atl_tpb_tx_tx_clk_gate_en_set(self,(unsigned int)(! enable));
    #line 1464 
    hw_atl_tpb_tx_dma_net_lbk_en_set(self,(unsigned int)enable);
    #line 1465 
    hw_atl_rpb_dma_net_lbk_set(self,(unsigned int)enable);
    #line 1466 
    break;
    #line 1467 
    default: 
             #line 1467 
    ;
    #line 1468 
    return -22;
  }
  #line 1471 
  return 0;
}

#line 1474  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_b0.c"
struct aq_hw_ops hw_atl_ops_b0 = {.hw_ring_tx_xmit = & hw_atl_b0_hw_ring_tx_xmit, .hw_ring_rx_receive = & hw_atl_b0_hw_ring_rx_receive, .hw_ring_rx_fill = & hw_atl_b0_hw_ring_rx_fill, .hw_ring_tx_head_update = & hw_atl_b0_hw_ring_tx_head_update, .hw_set_mac_address = & hw_atl_b0_hw_mac_addr_set, .hw_reset = & hw_atl_b0_hw_reset, .hw_init = & hw_atl_b0_hw_init, .hw_start = & hw_atl_b0_hw_start, .hw_stop = & hw_atl_b0_hw_stop, .hw_ring_tx_init = & hw_atl_b0_hw_ring_tx_init, .hw_ring_tx_start = & hw_atl_b0_hw_ring_tx_start, .hw_ring_tx_stop = & hw_atl_b0_hw_ring_tx_stop, .hw_ring_rx_init = & hw_atl_b0_hw_ring_rx_init, .hw_ring_rx_start = & hw_atl_b0_hw_ring_rx_start, .hw_ring_rx_stop = & hw_atl_b0_hw_ring_rx_stop, .hw_irq_enable = & hw_atl_b0_hw_irq_enable, .hw_irq_disable = & hw_atl_b0_hw_irq_disable, .hw_irq_read = & hw_atl_b0_hw_irq_read, .hw_packet_filter_set = & hw_atl_b0_hw_packet_filter_set, .hw_filter_l3l4_set = & hw_atl_b0_hw_fl3l4_set, .hw_filter_l2_set = & hw_atl_b0_hw_fl2_set, .hw_filter_l2_clear = & hw_atl_b0_hw_fl2_clear, .hw_filter_vlan_set = & hw_atl_b0_hw_vlan_set, .hw_filter_vlan_ctrl = & hw_atl_b0_hw_vlan_ctrl, .hw_multicast_list_set = & hw_atl_b0_hw_multicast_list_set, .hw_interrupt_moderation_set = & hw_atl_b0_hw_interrupt_moderation_set, .hw_rss_set = & hw_atl_b0_hw_rss_set, .hw_rss_hash_set = & hw_atl_b0_hw_rss_hash_set, .hw_get_regs = & hw_atl_utils_hw_get_regs, .hw_get_hw_stats = & hw_atl_utils_get_hw_stats, .hw_get_fw_version = & hw_atl_utils_get_fw_version, .hw_set_offload = & hw_atl_b0_hw_offload_set, .hw_tx_tc_mode_get = & hw_atl_b0_tx_tc_mode_get, .hw_rx_tc_mode_get = & hw_atl_b0_rx_tc_mode_get, .hw_ring_hwts_rx_fill = & hw_atl_b0_hw_ring_hwts_rx_fill, .hw_ring_hwts_rx_receive = & hw_atl_b0_hw_ring_hwts_rx_receive, .hw_get_ptp_ts = & hw_atl_b0_get_ptp_ts, .hw_adj_clock_freq = & hw_atl_b0_adj_clock_freq, .hw_adj_sys_clock = & hw_atl_b0_adj_sys_clock, .hw_set_sys_clock = & hw_atl_b0_set_sys_clock, .hw_ts_to_sys_clock = & hw_atl_b0_ts_to_sys_clock, .hw_gpio_pulse = & hw_atl_b0_gpio_pulse, .hw_extts_gpio_enable = & hw_atl_b0_extts_gpio_enable, .hw_get_sync_ts = & hw_atl_b0_get_sync_ts, .rx_extract_ts = & hw_atl_b0_rx_extract_ts, .extract_hwts = & hw_atl_b0_extract_hwts, .hw_set_fc = & hw_atl_b0_set_fc, .hw_set_loopback = & hw_atl_b0_set_loopback};
#line 185  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/hw_atl_b0.i.aux"
static void atomic_inc_1(atomic_t *v)
{
  #line 188 
  ldv_atomic_inc(v);
  #line 189 
  return;
}

#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.h"
#line 21 
void hw_atl_reg_glb_cpu_sem_set(struct aq_hw_s *aq_hw, u32 glb_cpu_sem, u32 semaphore);
#line 788 
#line 788 
void hw_atl_glb_mdio_iface2_set(struct aq_hw_s *aq_hw, u32 value);
#line 794 
#line 794 
void hw_atl_glb_mdio_iface3_set(struct aq_hw_s *aq_hw, u32 value);
#line 800 
#line 800 
void hw_atl_glb_mdio_iface4_set(struct aq_hw_s *aq_hw, u32 value);
#line 809 
#line 809 
u32 hw_atl_glb_mdio_iface5_get(struct aq_hw_s *aq_hw);
#line 811 
#line 811 
u32 hw_atl_mdio_busy_get(struct aq_hw_s *aq_hw);
#line 817 
#line 817 
u32 hw_atl_sem_mdio_get(struct aq_hw_s *self);
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_phy.h"
#line 8  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_phy.c"
bool aq_mdio_busy_wait(struct aq_hw_s *aq_hw);
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_phy.h"
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_phy.c"
u16 aq_mdio_read_word(struct aq_hw_s *aq_hw, u16 mmd, u16 addr);
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_phy.h"
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_phy.c"
void aq_mdio_write_word(struct aq_hw_s *aq_hw, u16 mmd, u16 addr, u16 data);
#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_phy.h"
#line 109  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_phy.c"
bool aq_phy_init_phy_id(struct aq_hw_s *aq_hw);
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_phy.h"
#line 125  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_phy.c"
bool aq_phy_init(struct aq_hw_s *aq_hw);
#line 8  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_phy.c"
bool aq_mdio_busy_wait(struct aq_hw_s *aq_hw)
{
  #line 13 
  int tmp_3;
  #line 11 
  u32 val;
  #line 10 
  int err = 0;
  {
    #line 13 
    u64 __timeout_us = 100000ULL;
    #line 13 
    unsigned long __delay_us = 10UL;
    #line 13 
    ;
    #line 13 
    ktime_t __timeout = ktime_add_us(ktime_get(),__timeout_us);
    #line 13 
    while (1) {
      #line 13 
      val = hw_atl_mdio_busy_get(aq_hw);
      #line 13 
      if (val == 0U) 
                     #line 13 
                     break;
      #line 13 
      if (__timeout_us != 0ULL) {
        #line 13 
        ;
        #line 13 
        if (ktime_compare(ktime_get(),__timeout) > 0) {
          #line 13 
          val = hw_atl_mdio_busy_get(aq_hw);
          #line 13 
          break;
        }
      }
      #line 13 
      if (__delay_us != 0UL) 
        #line 13 
        if (0 != 0) 
          #line 13 
          if (__delay_us > 19999UL) 
                                    #line 13 
                                    __bad_udelay(); else 
                                                         #line 13 
                                                         __const_udelay(__delay_us * 4295UL);
        else 
             #line 13 
             __udelay(__delay_us);
    }
    #line 13 
    if (val == 0U) 
                   #line 13 
                   tmp_3 = 0; else 
                                   #line 13 
                                   tmp_3 = -110;
    }
  #line 13 
  err = tmp_3;
  #line 16 
  if (err < 0) 
               #line 17 
               return (_Bool)0;
  #line 19 
  return (_Bool)1;
}

#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_phy.c"
u16 aq_mdio_read_word(struct aq_hw_s *aq_hw, u16 mmd, u16 addr)
{
  #line 24 
  u16 phy_addr = (unsigned short)(((int)aq_hw->phy_id << 5) | (int)mmd);
  #line 27 
  hw_atl_glb_mdio_iface4_set(aq_hw,(unsigned int)addr);
  #line 30 
  hw_atl_glb_mdio_iface2_set(aq_hw,(unsigned int)(((int)phy_addr & 1023) | 45056));
  #line 35 
  aq_mdio_busy_wait(aq_hw);
  #line 38 
  hw_atl_glb_mdio_iface2_set(aq_hw,(unsigned int)(((int)phy_addr & 1023) | 36864));
  #line 43 
  aq_mdio_busy_wait(aq_hw);
  #line 45 
  return (unsigned short)hw_atl_glb_mdio_iface5_get(aq_hw);
}

#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_phy.c"
void aq_mdio_write_word(struct aq_hw_s *aq_hw, u16 mmd, u16 addr, u16 data)
{
  #line 50 
  u16 phy_addr = (unsigned short)(((int)aq_hw->phy_id << 5) | (int)mmd);
  #line 53 
  hw_atl_glb_mdio_iface4_set(aq_hw,(unsigned int)addr);
  #line 56 
  hw_atl_glb_mdio_iface2_set(aq_hw,(unsigned int)(((int)phy_addr & 1023) | 45056));
  #line 61 
  aq_mdio_busy_wait(aq_hw);
  #line 63 
  hw_atl_glb_mdio_iface3_set(aq_hw,(unsigned int)data);
  #line 66 
  hw_atl_glb_mdio_iface2_set(aq_hw,(unsigned int)(((int)phy_addr & 1023) | 40960));
  #line 71 
  aq_mdio_busy_wait(aq_hw);
  #line 72 
  return;
}

#line 74  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_phy.c"
u16 aq_phy_read_reg(struct aq_hw_s *aq_hw, u16 mmd, u16 address)
{
  #line 79 
  int tmp_3;
  #line 77 
  u32 val;
  #line 76 
  int err = 0;
  {
    #line 79 
    u64 __timeout_us = 100000ULL;
    #line 79 
    unsigned long __delay_us = 10UL;
    #line 79 
    ;
    #line 79 
    ktime_t __timeout = ktime_add_us(ktime_get(),__timeout_us);
    #line 79 
    while (1) {
      #line 79 
      val = hw_atl_sem_mdio_get(aq_hw);
      #line 79 
      if (val == 1U) 
                     #line 79 
                     break;
      #line 79 
      if (__timeout_us != 0ULL) {
        #line 79 
        ;
        #line 79 
        if (ktime_compare(ktime_get(),__timeout) > 0) {
          #line 79 
          val = hw_atl_sem_mdio_get(aq_hw);
          #line 79 
          break;
        }
      }
      #line 79 
      if (__delay_us != 0UL) 
        #line 79 
        if (0 != 0) 
          #line 79 
          if (__delay_us > 19999UL) 
                                    #line 79 
                                    __bad_udelay(); else 
                                                         #line 79 
                                                         __const_udelay(__delay_us * 4295UL);
        else 
             #line 79 
             __udelay(__delay_us);
    }
    #line 79 
    if (val == 1U) 
                   #line 79 
                   tmp_3 = 0; else 
                                   #line 79 
                                   tmp_3 = -110;
    }
  #line 79 
  err = tmp_3;
  #line 82 
  if (err < 0) {
    #line 83 
    err = 65535;
    #line 84 
    goto err_exit;
  }
  #line 87 
  err = (int)aq_mdio_read_word(aq_hw,(unsigned short)((int)mmd),
                          (unsigned short)((int)address));
  #line 89 
  hw_atl_reg_glb_cpu_sem_set(aq_hw,1U,0U);
  #line 91 
  err_exit: 
            #line 91 
  ;
  #line 92 
  return (unsigned short)err;
}

#line 95  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_phy.c"
void aq_phy_write_reg(struct aq_hw_s *aq_hw, u16 mmd, u16 address, u16 data)
{
  #line 100 
  int tmp_3;
  #line 98 
  u32 val;
  #line 97 
  int err = 0;
  {
    #line 100 
    u64 __timeout_us = 100000ULL;
    #line 100 
    unsigned long __delay_us = 10UL;
    #line 100 
    ;
    #line 100 
    ktime_t __timeout = ktime_add_us(ktime_get(),__timeout_us);
    #line 100 
    while (1) {
      #line 100 
      val = hw_atl_sem_mdio_get(aq_hw);
      #line 100 
      if (val == 1U) 
                     #line 100 
                     break;
      #line 100 
      if (__timeout_us != 0ULL) {
        #line 100 
        ;
        #line 100 
        if (ktime_compare(ktime_get(),__timeout) > 0) {
          #line 100 
          val = hw_atl_sem_mdio_get(aq_hw);
          #line 100 
          break;
        }
      }
      #line 100 
      if (__delay_us != 0UL) 
        #line 100 
        if (0 != 0) 
          #line 100 
          if (__delay_us > 19999UL) 
                                    #line 100 
                                    __bad_udelay(); else 
                                                         #line 100 
                                                         __const_udelay(__delay_us * 4295UL);
        else 
             #line 100 
             __udelay(__delay_us);
    }
    #line 100 
    if (val == 1U) 
                   #line 100 
                   tmp_3 = 0; else 
                                   #line 100 
                                   tmp_3 = -110;
    }
  #line 100 
  err = tmp_3;
  #line 102 
  if (err < 0) 
               #line 103 
               return;
  #line 105 
  aq_mdio_write_word(aq_hw,(unsigned short)((int)mmd),(unsigned short)((int)address),(unsigned short)((int)data));
  #line 106 
  hw_atl_reg_glb_cpu_sem_set(aq_hw,1U,0U);
  #line 107 
  return;
}

#line 109  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_phy.c"
bool aq_phy_init_phy_id(struct aq_hw_s *aq_hw)
{
  #line 111 
  u16 val;
  #line 113 
  aq_hw->phy_id = (unsigned short)0U;
  #line 113 
  while ((unsigned int)aq_hw->phy_id <= 31U) {
    #line 116 
    val = aq_phy_read_reg(aq_hw,(unsigned short)1,(unsigned short)3);
    #line 118 
    if ((unsigned int)val != 65535U) 
                                     #line 119 
                                     return (_Bool)1;
    #line 114 
    aq_hw->phy_id = (u16)((int)aq_hw->phy_id + 1);
  }
  #line 122 
  return (_Bool)0;
}

#line 125  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_phy.c"
bool aq_phy_init(struct aq_hw_s *aq_hw)
{
  #line 127 
  u32 dev_id;
  #line 129 
  if ((unsigned int)aq_hw->phy_id == 32U) {
    #line 130 
    if (! aq_phy_init_phy_id(aq_hw)) 
                                     #line 131 
                                     return (_Bool)0;
  }
  #line 137 
  dev_id = (unsigned int)aq_phy_read_reg(aq_hw,(unsigned short)1,(unsigned short)2);
  #line 138 
  dev_id <<= 16;
  #line 139 
  dev_id = (unsigned int)aq_phy_read_reg(aq_hw,(unsigned short)1,(unsigned short)3) | dev_id;
  #line 141 
  if (dev_id == 4294967295U) {
    #line 142 
    aq_hw->phy_id = (unsigned short)32U;
    #line 143 
    return (_Bool)0;
  }
  #line 146 
  return (_Bool)1;
}

#line 66  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/bitops.h"
__inline static void arch___set_bit(long nr, unsigned long *addr)
{
  #line 68 
  ldv_inline_asm();
  #line 69 
  return;
}

#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/bitops/instrumented-atomic.h"
#line 129  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_nic.i.aux"
static void cif_set_bit_3(long nr, unsigned long *addr);
#line 44  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/bitops/instrumented-atomic.h"
#line 136  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_nic.i.aux"
static void cif_clear_bit_3(long nr, unsigned long *addr);
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/bitops/instrumented-non-atomic.h"
__inline static void __set_bit(long nr, unsigned long *addr)
{
  #line 27 
  kasan_check_read((void *)(addr + (unsigned long)(nr / 64L)),8U);
  #line 28 
  arch___set_bit(nr,addr);
  #line 29 
  return;
}

#line 26  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
#line 143  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_nic.i.aux"
static void INIT_LIST_HEAD_0(struct list_head *list);
#line 314  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/percpu-defs.h"
__inline static void __this_cpu_preempt_check(char *op)
{
  #line 316 
  return;
}

#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/page_64.h"
#line 15 
extern unsigned long vmalloc_base;
#line 29 
#line 29 
unsigned long __phys_addr(unsigned long);
#line 230  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bitmap.h"
#line 206  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_nic.i.aux"
static void cif_bitmap_zero(unsigned long *dst, unsigned int nbits);
#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/cmpxchg_64.h"
__inline static int arch_atomic_read_6(atomic_t *v)
{
  #line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/atomic.h"
  union __anonunion___u_8818 __u;
  #line 31 
  __read_once_size((void *)(& v->counter),(void *)(& __u.__c),4);
  #line 31 
  return (__u.__val);
}

#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/atomic-instrumented.h"
__inline static int atomic_read_6(atomic_t *v)
{
  #line 26 
  kasan_check_read((void *)v,4U);
  #line 27 
  return arch_atomic_read_6(v);
}

#line 110  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cpumask.h"
__inline static unsigned int num_online_cpus_0(void)
{
  #line 112 
  return (unsigned int)atomic_read_6(& __num_online_cpus);
}

#line 173  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/cpufeature.h"
__inline static bool _static_cpu_has(u16 bit)
{
  #line 177 
  ldv_inline_asm();
  #line 178 
  ldv_inline_asm();
  #line 211 
  t_yes: 
         #line 211 
  ;
  #line 212 
  return (_Bool)1;
  #line 213 
  t_no: 
        #line 213 
  ;
  #line 214 
  return (_Bool)0;
}

#line 8  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bottom_half.h"
#line 8 
void __local_bh_disable_ip(unsigned long, unsigned int);
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bottom_half.h"
__inline static void local_bh_disable(void)
{
  #line 19 
  __here_0: 
            #line 19 
  ;
  #line 19 
  __local_bh_disable_ip((unsigned long)((void *)0),512U);
  #line 21 
  return;
}

#line 23 
#line 23 
void __local_bh_enable_ip(unsigned long, unsigned int);
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bottom_half.h"
__inline static void local_bh_enable(void)
{
  #line 32 
  __here_0: 
            #line 32 
  ;
  #line 32 
  __local_bh_enable_ip((unsigned long)((void *)0),512U);
  #line 34 
  return;
}

#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_api_smp.h"
#line 22 
void _raw_spin_lock(raw_spinlock_t *);
#line 39 
#line 39 
void _raw_spin_unlock(raw_spinlock_t *);
#line 336  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
static void spin_lock(spinlock_t *lock)
{
  #line 338 
  _raw_spin_lock(& lock->__anonCompField_spinlock_25.rlock);
  #line 339 
  return;
}

#line 340 
#line 563  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_nic.i.aux"
static void cif_spin_lock__xmit_lock_of_netdev_queue(spinlock_t *lock);
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
static void spin_unlock(spinlock_t *lock)
{
  #line 378 
  _raw_spin_unlock(& lock->__anonCompField_spinlock_25.rlock);
  #line 379 
  return;
}

#line 380 
#line 603  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_nic.i.aux"
static void cif_spin_unlock__xmit_lock_of_netdev_queue(spinlock_t *lock);
#line 26 
#line 823 
static void cif_mutex_lock_fwreq_mutex_of_aq_nic_s_0(struct mutex *lock);
#line 27  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/bitmap.h"
#line 27 
void ldv_bitmap_zero(unsigned long *dst, unsigned int nbits);
#line 185  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mutex.h"
#line 830  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_nic.i.aux"
static void cif_mutex_unlock_fwreq_mutex_of_aq_nic_s_0(struct mutex *lock);
#line 173  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
#line 837  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_nic.i.aux"
static int cif_mod_timer(struct timer_list *timer, unsigned long expires);
#line 188  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
#line 853  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_nic.i.aux"
static int cif_del_timer_sync(struct timer_list *timer);
#line 462  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/workqueue.h"
#line 462 
bool cancel_work_sync(struct work_struct *);
#line 628  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm.h"
__inline static bool is_vmalloc_addr(void *x)
{
  #line 633 
  int tmp_1;
  #line 631 
  unsigned long addr = (unsigned long)x;
  #line 633 
  if (addr >= vmalloc_base) {
    #line 633 
    unsigned long tmp_0;
    #line 633 
    if ((int)_static_cpu_has((unsigned short)528) != 0) 
                                                        #line 633 
                                                        tmp_0 = 14073748835532800UL; else 
                                                                    #line 633 
                                                                    tmp_0 = 35184372088832UL;
    #line 633 
    ;
    #line 633 
    if ((tmp_0 + vmalloc_base) + 18446744073709551615UL > addr) 
                                                                #line 633 
                                                                tmp_1 = 1; else 
                                                                    #line 633 
                                                                    tmp_1 = 0;
  }
  else 
       #line 633 
       tmp_1 = 0;
  #line 633 
  return (_Bool)(tmp_1 != 0);
}

#line 89  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kobject.h"
__inline static char *kobject_name(struct kobject *kobj)
{
  #line 91 
  return kobj->name;
}

#line 1370  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
__inline static char *dev_name(struct device *dev)
{
  #line 1373 
  if (dev->init_name != (char *)0) 
                                   #line 1374 
                                   return dev->init_name;
  #line 1376 
  return kobject_name(& dev->kobj);
}

#line 1680 
#line 1680 
char *dev_driver_string(struct device *);
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dma-debug.h"
#line 21 
void debug_dma_map_single(struct device *, void *, unsigned long);
#line 580  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dma-mapping.h"
__inline static dma_addr_t dma_map_single_attrs(struct device *dev, void *ptr, size_t size, enum dma_data_direction dir, unsigned long attrs)
{
  #line 584 
  int __ret_warn_once;
  {
    #line 584 
    bool __warned;
    #line 584 
    __ret_warn_once = (int)is_vmalloc_addr(ptr) != 0;
    #line 584 
    if ((long)(__ret_warn_once != 0) != 0L && (long)(! __warned) != 0L) {
      #line 584 
      __warned = (_Bool)1;
      {
        #line 584 
        int __ret_warn_on = 1;
        #line 584 
        if ((long)(__ret_warn_on != 0) != 0L) {
          #line 584 
          __warn_printk((char *)"%s %s: ",dev_driver_string(dev),dev_name(dev));
          #line 585 
          ldv_inline_asm();
          #line 586 
          ldv_inline_asm();
        }
        #line 584 
        long tmp_2 = (long)(__ret_warn_on != 0);
      }
    }
    }
  #line 584 
  if ((long)((long)(__ret_warn_once != 0)) != 0L) 
                                                  #line 586 
                                                  return 18446744073709551615ULL;
  #line 587 
  debug_dma_map_single(dev,ptr,size);
  #line 588 
  ;
  #line 588 
  ;
  #line 588 
  ;
  #line 588 
  ;
  #line 588 
  ;
  #line 588 
  ;
  #line 588 
  return dma_map_page_attrs(dev,
                           (struct page *)((__phys_addr((unsigned long)ptr) >> 12) + vmemmap_base),
                           (unsigned long)ptr & 4095UL,size,dir,attrs);
}

#line 325  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static unsigned int skb_frag_size(skb_frag_t *frag)
{
  #line 327 
  return frag->bv_len;
}

#line 2070  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static unsigned int skb_headlen(struct sk_buff *skb)
{
  #line 2072 
  return skb->len - skb->data_len;
}

#line 2564  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static u32 skb_network_header_len(struct sk_buff *skb)
{
  #line 2566 
  return (unsigned int)((int)skb->transport_header - (int)skb->network_header);
}

#line 2896  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static unsigned int skb_frag_off(skb_frag_t *frag)
{
  #line 2898 
  return frag->bv_offset;
}

#line 2938  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static struct page *skb_frag_page(skb_frag_t *frag)
{
  #line 2940 
  return frag->bv_page;
}

#line 3067  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static dma_addr_t skb_frag_dma_map(struct device *dev, skb_frag_t *frag, size_t offset, size_t size, enum dma_data_direction dir)
{
  #line 3072 
  ;
  #line 3072 
  ;
  #line 3072 
  ;
  #line 3072 
  ;
  #line 3072 
  return dma_map_page_attrs(dev,skb_frag_page(frag),
                           (unsigned long)skb_frag_off(frag) + offset,size,
                           dir,0UL);
}

#line 4390  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static bool skb_is_gso(struct sk_buff *skb)
{
  #line 4392 
  ;
  #line 4392 
  return (_Bool)((unsigned int)((struct skb_shared_info *)skb_end_pointer(skb))->gso_size != 0U);
}

#line 142  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/interrupt.h"
#line 510  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_nic.i.aux"
static int cif_request_threaded_irq(unsigned int irq, irqreturn_t (*handler)(int , void *), irqreturn_t (*thread_fn)(int , void *), unsigned long flags, char *name, void *dev);
#line 3104  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
__inline static void netif_tx_start_queue_0(struct netdev_queue *dev_queue)
{
  #line 3106 
  cif_clear_bit_3(0L,& dev_queue->state);
  #line 3107 
  return;
}

#line 3120  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
__inline static void netif_tx_start_all_queues_0(struct net_device *dev)
{
  #line 3122 
  unsigned int i;
  #line 3124 
  i = 0U;
  #line 3124 
  while (dev->num_tx_queues > i) {
    {
      #line 3125 
      struct netdev_queue *txq = netdev_get_tx_queue(dev,i);
      #line 3126 
      netif_tx_start_queue_0(txq);
    }
    #line 3124 
    i ++;
  }
  #line 3128 
  return;
}

#line 3144  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
__inline static void netif_tx_wake_all_queues(struct net_device *dev)
{
  #line 3146 
  unsigned int i;
  #line 3148 
  i = 0U;
  #line 3148 
  while (dev->num_tx_queues > i) {
    {
      #line 3149 
      struct netdev_queue *txq = netdev_get_tx_queue(dev,i);
      #line 3150 
      netif_tx_wake_queue(txq);
    }
    #line 3148 
    i ++;
  }
  #line 3152 
  return;
}

#line 3154  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
__inline static void netif_tx_stop_queue_0(struct netdev_queue *dev_queue)
{
  #line 3156 
  cif_set_bit_3(0L,& dev_queue->state);
  #line 3157 
  return;
}

#line 3577 
#line 3577 
int netif_set_real_num_tx_queues(struct net_device *, unsigned int);
#line 3580 
#line 3580 
int netif_set_real_num_rx_queues(struct net_device *, unsigned int);
#line 3803  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
__inline static bool netif_carrier_ok(struct net_device *dev)
{
  #line 3805 
  int tmp_0;
  #line 3805 
  if ((int)test_bit(2L,& dev->state) != 0) 
                                           #line 3805 
                                           tmp_0 = 0; else 
                                                           #line 3805 
                                                           tmp_0 = 1;
  #line 3805 
  return (_Bool)(tmp_0 != 0);
}

#line 3812 
#line 3812 
void netif_carrier_on(struct net_device *);
#line 3814 
#line 3814 
void netif_carrier_off(struct net_device *);
#line 3934  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
__inline static void __netif_tx_lock(struct netdev_queue *txq, int cpu)
{
  #line 3936 
  cif_spin_lock__xmit_lock_of_netdev_queue(& txq->_xmit_lock);
  #line 3937 
  txq->xmit_lock_owner = cpu;
  #line 3938 
  return;
}

#line 3965  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
__inline static void __netif_tx_unlock(struct netdev_queue *txq)
{
  #line 3967 
  txq->xmit_lock_owner = -1;
  #line 3968 
  cif_spin_unlock__xmit_lock_of_netdev_queue(& txq->_xmit_lock);
  #line 3969 
  return;
}

#line 4070  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
__inline static void netif_tx_disable(struct net_device *dev)
{
  #line 4076 
  int pscr_ret__;
  #line 4072 
  unsigned int i;
  #line 4073 
  int cpu;
  #line 4075 
  local_bh_disable();
  #line 4076 
  __this_cpu_preempt_check((char *)"read");
  {
    #line 4076 
    void *__vpp_verify = (void *)0;
    #line 4076 
    void *tmp = __vpp_verify;
  }
  #line 4076 
  switch (4UL) {
    #line 4076 
    int pfo_ret__;
    #line 4076 
    int pfo_ret___0;
    #line 4076 
    int pfo_ret___1;
    #line 4076 
    int pfo_ret___2;
    #line 4076 
    case (unsigned long)1: 
                           #line 4076 
    ;
    #line 4076 
    switch (4UL) {
      #line 4076 
      case (unsigned long)1: 
                             #line 4076 
      ;
      #line 4077 
      ldv_inline_asm();
      #line 4076 
      break;
      #line 4076 
      case (unsigned long)2: 
                             #line 4076 
      ;
      #line 4077 
      ldv_inline_asm();
      #line 4076 
      break;
      #line 4076 
      case (unsigned long)4: 
                             #line 4076 
      ;
      #line 4077 
      ldv_inline_asm();
      #line 4076 
      break;
      #line 4076 
      case (unsigned long)8: 
                             #line 4076 
      ;
      #line 4077 
      ldv_inline_asm();
      #line 4076 
      break;
      #line 4076 
      default: 
               #line 4076 
      ;
      #line 4076 
      __bad_percpu_size();
    }
    #line 4076 
    pscr_ret__ = pfo_ret__;
    #line 4076 
    break;
    #line 4076 
    case (unsigned long)2: 
                           #line 4076 
    ;
    #line 4076 
    switch (4UL) {
      #line 4076 
      case (unsigned long)1: 
                             #line 4076 
      ;
      #line 4077 
      ldv_inline_asm();
      #line 4076 
      break;
      #line 4076 
      case (unsigned long)2: 
                             #line 4076 
      ;
      #line 4077 
      ldv_inline_asm();
      #line 4076 
      break;
      #line 4076 
      case (unsigned long)4: 
                             #line 4076 
      ;
      #line 4077 
      ldv_inline_asm();
      #line 4076 
      break;
      #line 4076 
      case (unsigned long)8: 
                             #line 4076 
      ;
      #line 4077 
      ldv_inline_asm();
      #line 4076 
      break;
      #line 4076 
      default: 
               #line 4076 
      ;
      #line 4076 
      __bad_percpu_size();
    }
    #line 4076 
    pscr_ret__ = pfo_ret___0;
    #line 4076 
    break;
    #line 4076 
    case (unsigned long)4: 
                           #line 4076 
    ;
    #line 4076 
    switch (4UL) {
      #line 4076 
      case (unsigned long)1: 
                             #line 4076 
      ;
      #line 4077 
      ldv_inline_asm();
      #line 4076 
      break;
      #line 4076 
      case (unsigned long)2: 
                             #line 4076 
      ;
      #line 4077 
      ldv_inline_asm();
      #line 4076 
      break;
      #line 4076 
      case (unsigned long)4: 
                             #line 4076 
      ;
      #line 4077 
      ldv_inline_asm();
      #line 4076 
      break;
      #line 4076 
      case (unsigned long)8: 
                             #line 4076 
      ;
      #line 4077 
      ldv_inline_asm();
      #line 4076 
      break;
      #line 4076 
      default: 
               #line 4076 
      ;
      #line 4076 
      __bad_percpu_size();
    }
    #line 4076 
    pscr_ret__ = pfo_ret___1;
    #line 4076 
    break;
    #line 4076 
    case (unsigned long)8: 
                           #line 4076 
    ;
    #line 4076 
    switch (4UL) {
      #line 4076 
      case (unsigned long)1: 
                             #line 4076 
      ;
      #line 4077 
      ldv_inline_asm();
      #line 4076 
      break;
      #line 4076 
      case (unsigned long)2: 
                             #line 4076 
      ;
      #line 4077 
      ldv_inline_asm();
      #line 4076 
      break;
      #line 4076 
      case (unsigned long)4: 
                             #line 4076 
      ;
      #line 4077 
      ldv_inline_asm();
      #line 4076 
      break;
      #line 4076 
      case (unsigned long)8: 
                             #line 4076 
      ;
      #line 4077 
      ldv_inline_asm();
      #line 4076 
      break;
      #line 4076 
      default: 
               #line 4076 
      ;
      #line 4076 
      __bad_percpu_size();
    }
    #line 4076 
    pscr_ret__ = pfo_ret___2;
    #line 4076 
    break;
    #line 4076 
    default: 
             #line 4076 
    ;
    #line 4076 
    __bad_size_call_parameter();
    #line 4076 
    break;
  }
  #line 4076 
  cpu = pscr_ret__;
  #line 4077 
  i = 0U;
  #line 4077 
  while (dev->num_tx_queues > i) {
    {
      #line 4078 
      struct netdev_queue *txq = netdev_get_tx_queue(dev,i);
      #line 4080 
      __netif_tx_lock(txq,cpu);
      #line 4081 
      netif_tx_stop_queue_0(txq);
      #line 4082 
      __netif_tx_unlock(txq);
    }
    #line 4077 
    i ++;
  }
  #line 4084 
  local_bh_enable();
  #line 4085 
  return;
}

#line 4131 
#line 845  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_nic.i.aux"
static int cif_register_netdev(struct net_device *dev);
#line 4756  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
#line 4756 
void netdev_info(struct net_device *, char * , ...);
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_utils.h"
__inline static void aq_utils_obj_set_1(atomic_t *flags, u32 mask)
{
  #line 16 
  unsigned long flags_old;
  #line 16 
  unsigned long flags_new;
  #line 18 
  while (1) {
    {
      #line 19 
      flags_old = (unsigned long)atomic_read_6(flags);
      #line 20 
      flags_new = (unsigned long)mask | flags_old;
    }
    #line 21 
    ;
    #line 21 
    if (! ((unsigned long)atomic_cmpxchg(flags,(int)flags_old,(int)flags_new) != flags_old)) 
      #line 18 
      break;
  }
  #line 22 
  return;
}

#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_utils.h"
__inline static void aq_utils_obj_clear_0(atomic_t *flags, u32 mask)
{
  #line 26 
  unsigned long flags_old;
  #line 26 
  unsigned long flags_new;
  #line 28 
  while (1) {
    {
      #line 29 
      flags_old = (unsigned long)atomic_read_6(flags);
      #line 30 
      flags_new = (unsigned long)(~ mask) & flags_old;
    }
    #line 31 
    ;
    #line 31 
    if (! ((unsigned long)atomic_cmpxchg(flags,(int)flags_old,(int)flags_new) != flags_old)) 
      #line 28 
      break;
  }
  #line 32 
  return;
}

#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_utils.h"
__inline static bool aq_utils_obj_test_3(atomic_t *flags, u32 mask)
{
  #line 36 
  ;
  #line 36 
  return (_Bool)(((unsigned int)atomic_read_6(flags) & mask) != 0U);
}

#line 558  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.h"
#line 558 
int hw_atl_utils_initfw(struct aq_hw_s *self, struct aq_fw_ops **fw_ops);
#line 155  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_nic.h"
#line 748  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_nic.c"
int aq_nic_get_regs(struct aq_nic_s *self, struct ethtool_regs *regs, void *p);
#line 156  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_nic.h"
#line 765  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_nic.c"
int aq_nic_get_regs_count(struct aq_nic_s *self);
#line 157  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_nic.h"
#line 770  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_nic.c"
void aq_nic_get_stats(struct aq_nic_s *self, u64 *data);
#line 165  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_nic.h"
#line 675  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_nic.c"
int aq_nic_set_packet_filter(struct aq_nic_s *self, unsigned int flags);
#line 167  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_nic.h"
#line 743  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_nic.c"
unsigned int aq_nic_get_link_speed(struct aq_nic_s *self);
#line 168  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_nic.h"
#line 838  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_nic.c"
void aq_nic_get_link_ksettings(struct aq_nic_s *self, struct ethtool_link_ksettings *cmd);
#line 170  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_nic.h"
#line 926  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_nic.c"
int aq_nic_set_link_ksettings(struct aq_nic_s *self, struct ethtool_link_ksettings *cmd);
#line 173  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_nic.h"
#line 990  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_nic.c"
u32 aq_nic_get_fw_version(struct aq_nic_s *self);
#line 174  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_nic.h"
#line 999  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_nic.c"
int aq_nic_set_loopback(struct aq_nic_s *self);
#line 175  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_nic.h"
#line 670  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_nic.c"
int aq_nic_update_interrupt_moderation_settings(struct aq_nic_s *self);
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/tcp.h"
__inline static struct tcphdr *tcp_hdr(struct sk_buff *skb)
{
  #line 26 
  return (struct tcphdr *)skb_transport_header(skb);
}

#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/tcp.h"
__inline static unsigned int __tcp_hdrlen(struct tcphdr *th)
{
  #line 31 
  return (unsigned int)((int)th->doff * 4);
}

#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/tcp.h"
__inline static unsigned int tcp_hdrlen(struct sk_buff *skb)
{
  #line 36 
  return __tcp_hdrlen(tcp_hdr(skb));
}

#line 92  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ipv6.h"
__inline static struct ipv6hdr *ipv6_hdr(struct sk_buff *skb)
{
  #line 94 
  return (struct ipv6hdr *)skb_network_header(skb);
}

#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_nic.c"
static unsigned int aq_itr = 65535U;
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_nic.c"
static unsigned int aq_itr_tx;
#line 36  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_nic.c"
static unsigned int aq_itr_rx;
#line 40 
#line 823 
static void aq_nic_update_ndev_stats(struct aq_nic_s *self);
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_nic.c"
static void aq_nic_rss_init(struct aq_nic_s *self, unsigned int num_rss_queues)
{
  #line 52 
  struct aq_rss_parameters *rss_params;
  #line 44 
  u8 rss_key[40U] = {(unsigned char)30U, (unsigned char)173U, (unsigned char)113U, (unsigned char)135U, (unsigned char)101U, (unsigned char)252U, (unsigned char)38U, (unsigned char)125U, (unsigned char)13U, (unsigned char)69U, (unsigned char)103U, (unsigned char)116U, (unsigned char)205U, (unsigned char)6U, (unsigned char)26U, (unsigned char)24U, (unsigned char)182U, (unsigned char)193U, (unsigned char)240U, (unsigned char)199U, (unsigned char)187U, (unsigned char)24U, (unsigned char)190U, (unsigned char)248U, (unsigned char)25U, (unsigned char)19U, (unsigned char)75U, (unsigned char)169U, (unsigned char)208U, (unsigned char)62U, (unsigned char)254U, (unsigned char)112U, (unsigned char)37U, (unsigned char)3U, (unsigned char)171U, (unsigned char)80U, (unsigned char)106U, (unsigned char)139U, (unsigned char)130U, (unsigned char)12U};
  #line 51 
  struct aq_nic_cfg_s *cfg = & self->aq_nic_cfg;
  #line 53 
  int i = 0;
  #line 55 
  rss_params = & cfg->aq_rss;
  #line 57 
  rss_params->hash_secret_key_size = (unsigned short)40U;
  #line 58 
  memcpy((void *)(& rss_params->hash_secret_key),(void *)(& rss_key),40UL);
  #line 59 
  rss_params->indirection_table_size = (unsigned short)64U;
  #line 61 
  i = (int)rss_params->indirection_table_size;
  #line 61 
  while (1) {
    #line 61 
    int tmp;
    #line 61 
    tmp = i;
    #line 61 
    i --;
    #line 61 
    ;
    #line 61 
    if (! (tmp != 0)) 
                      #line 61 
                      break;
    #line 62 
    rss_params->indirection_table[i] = (unsigned char)(((unsigned int)((unsigned char)num_rss_queues) + 255U) & (unsigned int)((unsigned char)i));
  }
  #line 63 
  return;
}

#line 66  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_nic.c"
void aq_nic_cfg_start(struct aq_nic_s *self)
{
  #line 92 
  u32 __UNIQUE_ID___x544;
  #line 92 
  unsigned int tmp;
  #line 93 
  u32 __UNIQUE_ID___x546;
  #line 110 
  u32 __UNIQUE_ID___x554;
  #line 93 
  unsigned int tmp_1;
  #line 110 
  u32 tmp_10;
  #line 96 
  u32 __UNIQUE_ID___x548;
  #line 96 
  unsigned int tmp_3;
  #line 97 
  u32 __UNIQUE_ID___x550;
  #line 97 
  u32 tmp_6;
  #line 68 
  struct aq_nic_cfg_s *cfg = & self->aq_nic_cfg;
  #line 70 
  cfg->tcs = (unsigned char)1U;
  #line 72 
  cfg->is_polling = (_Bool)0;
  #line 74 
  cfg->itr = aq_itr;
  #line 75 
  cfg->tx_itr = (unsigned short)aq_itr_tx;
  #line 76 
  cfg->rx_itr = (unsigned short)aq_itr_rx;
  #line 78 
  cfg->rxpageorder = 0U;
  #line 79 
  cfg->is_rss = (_Bool)1;
  #line 80 
  cfg->num_rss_queues = 8U;
  #line 81 
  cfg->aq_rss.base_cpu_number = (unsigned short)0U;
  #line 82 
  cfg->fc.req = AQ_NIC_FC_FULL;
  #line 83 
  cfg->wol = 32U;
  #line 85 
  cfg->mtu = 1514U;
  #line 86 
  cfg->link_speed_msk = 65535U;
  #line 87 
  cfg->is_autoneg = (_Bool)1;
  #line 89 
  cfg->is_lro = (_Bool)1;
  {
    #line 92 
    __UNIQUE_ID___x544 = (cfg->aq_hw_caps)->rxds_max;
    #line 92 
    unsigned int __UNIQUE_ID___y545 = 2048U;
    #line 92 
    if (__UNIQUE_ID___x544 < __UNIQUE_ID___y545) 
                                                 #line 92 
                                                 tmp = __UNIQUE_ID___x544; else 
                                                                    #line 92 
                                                                    tmp = __UNIQUE_ID___y545;
    }
  #line 92 
  cfg->rxds = tmp;
  {
    #line 93 
    __UNIQUE_ID___x546 = (cfg->aq_hw_caps)->txds_max;
    #line 93 
    unsigned int __UNIQUE_ID___y547 = 4096U;
    #line 93 
    if (__UNIQUE_ID___x546 < __UNIQUE_ID___y547) 
                                                 #line 93 
                                                 tmp_1 = __UNIQUE_ID___x546; else 
                                                                    #line 93 
                                                                    tmp_1 = __UNIQUE_ID___y547;
    }
  #line 93 
  cfg->txds = tmp_1;
  {
    #line 96 
    __UNIQUE_ID___x548 = (cfg->aq_hw_caps)->vecs;
    #line 96 
    unsigned int __UNIQUE_ID___y549 = 8U;
    #line 96 
    if (__UNIQUE_ID___x548 < __UNIQUE_ID___y549) 
                                                 #line 96 
                                                 tmp_3 = __UNIQUE_ID___x548; else 
                                                                    #line 96 
                                                                    tmp_3 = __UNIQUE_ID___y549;
    }
  #line 96 
  cfg->vecs = tmp_3;
  {
    #line 97 
    __UNIQUE_ID___x550 = cfg->vecs;
    #line 97 
    unsigned int __UNIQUE_ID___y551 = num_online_cpus_0();
    #line 97 
    if (__UNIQUE_ID___x550 < __UNIQUE_ID___y551) 
                                                 #line 97 
                                                 tmp_6 = __UNIQUE_ID___x550; else 
                                                                    #line 97 
                                                                    tmp_6 = __UNIQUE_ID___y551;
    }
  #line 97 
  cfg->vecs = tmp_6;
  #line 98 
  if (self->irqvecs > 1U) {
    #line 99 
    u32 __UNIQUE_ID___x552;
    #line 99 
    u32 tmp_8;
    {
      #line 99 
      __UNIQUE_ID___x552 = cfg->vecs;
      #line 99 
      u32 __UNIQUE_ID___y553 = self->irqvecs + 4294967295U;
      #line 99 
      if (__UNIQUE_ID___x552 < __UNIQUE_ID___y553) 
                                                   #line 99 
                                                   tmp_8 = __UNIQUE_ID___x552; else 
                                                                    #line 99 
                                                                    tmp_8 = __UNIQUE_ID___y553;
      }
    #line 99 
    cfg->vecs = tmp_8;
  }
  #line 101 
  if (cfg->vecs > 7U) 
                      #line 102 
                      cfg->vecs = 8U;
  else 
    #line 103 
    if (cfg->vecs > 3U) 
                        #line 104 
                        cfg->vecs = 4U;
    else 
      #line 105 
      if (cfg->vecs > 1U) 
                          #line 106 
                          cfg->vecs = 2U; else 
                                               #line 108 
                                               cfg->vecs = 1U;
  {
    #line 110 
    __UNIQUE_ID___x554 = cfg->vecs;
    #line 110 
    unsigned int __UNIQUE_ID___y555 = 8U;
    #line 110 
    if (__UNIQUE_ID___x554 < __UNIQUE_ID___y555) 
                                                 #line 110 
                                                 tmp_10 = __UNIQUE_ID___x554; else 
                                                                    #line 110 
                                                                    tmp_10 = __UNIQUE_ID___y555;
    }
  #line 110 
  cfg->num_rss_queues = tmp_10;
  #line 112 
  aq_nic_rss_init(self,cfg->num_rss_queues);
  #line 114 
  cfg->irq_type = aq_pci_func_get_irq_type(self);
  #line 116 
  if ((cfg->irq_type == 1U || (cfg->aq_hw_caps)->vecs == 1U) || cfg->vecs == 1U) {
    #line 119 
    cfg->is_rss = (_Bool)0;
    #line 120 
    cfg->vecs = 1U;
  }
  #line 127 
  if (cfg->vecs + 1U <= self->irqvecs) 
                                       #line 128 
                                       cfg->link_irq_vec = cfg->vecs; else 
                                                                    #line 130 
                                                                    cfg->link_irq_vec = 0U;
  #line 132 
  cfg->link_speed_msk &= (unsigned int)(cfg->aq_hw_caps)->link_speed_msk;
  #line 133 
  cfg->features = (cfg->aq_hw_caps)->hw_features;
  #line 134 
  cfg->is_vlan_rx_strip = (unsigned char)((cfg->features & 256ULL) != 0ULL);
  #line 135 
  cfg->is_vlan_tx_insert = (unsigned char)((cfg->features & 128ULL) != 0ULL);
  #line 136 
  cfg->is_vlan_force_promisc = (_Bool)1;
  #line 137 
  return;
}

#line 139  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_nic.c"
static int aq_nic_update_link_status(struct aq_nic_s *self)
{
  #line 141 
  int err = (*((self->aq_fw_ops)->update_link_status))(self->aq_hw);
  #line 142 
  u32 fc = 0U;
  #line 144 
  if (err != 0) 
                #line 145 
                return err;
  #line 147 
  if ((self->aq_fw_ops)->get_flow_control != (u32 (*)(struct aq_hw_s *, u32 *))0) 
    #line 148 
    (*((self->aq_fw_ops)->get_flow_control))(self->aq_hw,& fc);
  #line 149 
  self->aq_nic_cfg.fc.cur = (enum aq_fc_mode)fc;
  #line 151 
  if (self->link_status.mbps != (self->aq_hw)->aq_link_status.mbps) {
    #line 152 
    netdev_info(self->ndev,(char *)"%s: link change old %d new %d\n",(char *)"atlantic",self->link_status.mbps,(self->aq_hw)->aq_link_status.mbps);
    #line 155 
    aq_nic_update_interrupt_moderation_settings(self);
    #line 157 
    if (self->aq_ptp != (struct aq_ptp_s *)0) {
      #line 158 
      aq_ptp_clock_init(self);
      #line 159 
      aq_ptp_tm_offset_set(self,(self->aq_hw)->aq_link_status.mbps);
      #line 161 
      aq_ptp_link_change(self);
    }
    #line 168 
    if ((self->aq_hw_ops)->hw_set_fc != (int (*)(struct aq_hw_s *, u32 , u32 ))0) 
      #line 169 
      (*((self->aq_hw_ops)->hw_set_fc))(self->aq_hw,fc,0U);
  }
  #line 172 
  self->link_status = (self->aq_hw)->aq_link_status;
  #line 173 
  if (! netif_carrier_ok(self->ndev)) 
    #line 173 
    if (self->link_status.mbps != 0U) {
      #line 174 
      aq_utils_obj_set_1(& self->flags,4U);
      #line 176 
      aq_utils_obj_clear_0(& self->flags,67108864U);
      #line 178 
      netif_carrier_on(self->ndev);
      #line 179 
      netif_tx_wake_all_queues(self->ndev);
    }
  #line 181 
  if ((int)netif_carrier_ok(self->ndev) != 0) 
    #line 181 
    if (self->link_status.mbps == 0U) {
      #line 182 
      netif_carrier_off(self->ndev);
      #line 183 
      netif_tx_disable(self->ndev);
      #line 184 
      aq_utils_obj_set_1(& self->flags,67108864U);
    }
  #line 187 
  return 0;
}

#line 190  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_nic.c"
static irqreturn_t aq_linkstate_threaded_isr(int irq, void *private)
{
  #line 192 
  struct aq_nic_s *self = (struct aq_nic_s *)private;
  #line 194 
  if (self == (struct aq_nic_s *)0) 
                                    #line 195 
                                    return IRQ_NONE;
  #line 197 
  aq_nic_update_link_status(self);
  #line 199 
  (*((self->aq_hw_ops)->hw_irq_enable))(self->aq_hw,(unsigned long long)(1UL << self->aq_nic_cfg.link_irq_vec));
  #line 202 
  return IRQ_HANDLED;
}

#line 205  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_nic.c"
static void aq_nic_service_task(struct work_struct *work)
{
  #line 207 
  void *__mptr;
  #line 209 
  int err;
  #line 207 
  __mptr = (void *)work;
  #line 207 
  struct aq_nic_s *self = ((struct aq_nic_s *)(__mptr + 18446744073709550688U));
  #line 211 
  aq_ptp_service_task(self);
  #line 213 
  if ((int)aq_utils_obj_test_3(& self->flags,3221225528U) != 0) 
                                                                #line 214 
                                                                return;
  #line 216 
  err = aq_nic_update_link_status(self);
  #line 217 
  if (err != 0) 
                #line 218 
                return;
  #line 220 
  cif_mutex_lock_fwreq_mutex_of_aq_nic_s_0(& self->fwreq_mutex);
  #line 221 
  if ((self->aq_fw_ops)->update_stats != (int (*)(struct aq_hw_s *))0) 
    #line 222 
    (*((self->aq_fw_ops)->update_stats))(self->aq_hw);
  #line 223 
  cif_mutex_unlock_fwreq_mutex_of_aq_nic_s_0(& self->fwreq_mutex);
  #line 225 
  aq_nic_update_ndev_stats(self);
  #line 226 
  return;
}

#line 228  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_nic.c"
static void aq_nic_service_timer_cb(struct timer_list *t)
{
  #line 230 
  void *__mptr;
  #line 230 
  __mptr = (void *)t;
  #line 230 
  struct aq_nic_s *self = ((struct aq_nic_s *)(__mptr + 18446744073709550776U));
  #line 232 
  cif_mod_timer(& self->service_timer,jiffies + 250UL);
  #line 235 
  aq_ndev_schedule_work(& self->service_task);
  #line 236 
  return;
}

#line 238  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_nic.c"
static void aq_nic_polling_timer_cb(struct timer_list *t)
{
  #line 240 
  void *__mptr;
  #line 240 
  __mptr = (void *)t;
  #line 240 
  struct aq_nic_s *self = ((struct aq_nic_s *)(__mptr + 18446744073709550608U));
  #line 241 
  struct aq_vec_s *aq_vec = (struct aq_vec_s *)0;
  #line 242 
  unsigned int i = 0U;
  #line 244 
  i = 0U;
  #line 244 
  aq_vec = self->aq_vec[0];
  #line 244 
  while (self->aq_vecs > i) {
    #line 246 
    aq_vec_isr((int)i,(void *)aq_vec);
    #line 245 
    i ++;
    #line 245 
    aq_vec = self->aq_vec[i];
  }
  #line 248 
  cif_mod_timer(& self->polling_timer,jiffies + 500UL);
  #line 249 
  return;
}

#line 252  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_nic.c"
int aq_nic_ndev_register(struct aq_nic_s *self)
{
  #line 254 
  int err = 0;
  #line 256 
  if (self->ndev == (struct net_device *)0) {
    #line 257 
    err = -22;
    #line 258 
    goto err_exit;
  }
  #line 261 
  err = hw_atl_utils_initfw(self->aq_hw,& self->aq_fw_ops);
  #line 262 
  if (err != 0) 
                #line 263 
                goto err_exit;
  #line 265 
  cif_mutex_lock_fwreq_mutex_of_aq_nic_s_0(& self->fwreq_mutex);
  #line 266 
  err = (*((self->aq_fw_ops)->get_mac_permanent))(self->aq_hw,(self->ndev)->dev_addr);
  #line 268 
  cif_mutex_unlock_fwreq_mutex_of_aq_nic_s_0(& self->fwreq_mutex);
  #line 269 
  if (err != 0) 
                #line 270 
                goto err_exit;
  #line 280 
  self->aq_vecs = 0U;
  #line 280 
  while (1) {
    #line 280 
    ;
    #line 280 
    if (! (self->aq_vecs < aq_nic_get_cfg(self)->vecs)) 
                                                        #line 280 
                                                        break;
    {
      #line 282 
      ;
      #line 282 
      ;
      #line 282 
      self->aq_vec[self->aq_vecs] = aq_vec_alloc(self,self->aq_vecs,aq_nic_get_cfg(self));
      #line 284 
      if (self->aq_vec[self->aq_vecs] == (struct aq_vec_s *)0) {
        #line 285 
        err = -12;
        #line 286 
        goto err_exit;
      }
    }
    #line 280 
    (self->aq_vecs) ++;
  }
  #line 290 
  netif_carrier_off(self->ndev);
  #line 292 
  netif_tx_disable(self->ndev);
  #line 294 
  err = cif_register_netdev(self->ndev);
  #line 295 
  if (err != 0) 
                #line 296 
                goto err_exit;
  #line 298 
  err_exit: 
            #line 298 
  ;
  #line 299 
  return err;
}

#line 302  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_nic.c"
void aq_nic_ndev_init(struct aq_nic_s *self)
{
  #line 304 
  struct aq_hw_caps_s *aq_hw_caps = self->aq_nic_cfg.aq_hw_caps;
  #line 305 
  struct aq_nic_cfg_s *aq_nic_cfg = & self->aq_nic_cfg;
  #line 307 
  (self->ndev)->hw_features |= aq_hw_caps->hw_features;
  #line 308 
  (self->ndev)->features = aq_hw_caps->hw_features;
  #line 309 
  (self->ndev)->vlan_features |= 824633819145ULL;
  #line 312 
  (self->ndev)->gso_partial_features = 8589934592ULL;
  #line 313 
  (self->ndev)->priv_flags = aq_hw_caps->hw_priv_flags;
  #line 314 
  (self->ndev)->priv_flags |= 32768U;
  #line 316 
  self->msg_enable = 5U;
  #line 317 
  (self->ndev)->mtu = aq_nic_cfg->mtu + 4294967282U;
  #line 318 
  (self->ndev)->max_mtu = aq_hw_caps->mtu + 4294967278U;
  #line 319 
  return;
}

#line 322  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_nic.c"
void aq_nic_set_tx_ring(struct aq_nic_s *self, unsigned int idx, struct aq_ring_s *ring)
{
  #line 325 
  self->aq_ring_tx[idx] = ring;
  #line 326 
  return;
}

#line 328  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_nic.c"
struct net_device *aq_nic_get_ndev(struct aq_nic_s *self)
{
  #line 330 
  return self->ndev;
}

#line 333  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_nic.c"
int aq_nic_init(struct aq_nic_s *self)
{
  #line 335 
  struct aq_vec_s *aq_vec = (struct aq_vec_s *)0;
  #line 336 
  unsigned int i = 0U;
  #line 337 
  int err = 0;
  #line 339 
  self->power_state = 0U;
  #line 340 
  cif_mutex_lock_fwreq_mutex_of_aq_nic_s_0(& self->fwreq_mutex);
  #line 341 
  err = (*((self->aq_hw_ops)->hw_reset))(self->aq_hw);
  #line 342 
  cif_mutex_unlock_fwreq_mutex_of_aq_nic_s_0(& self->fwreq_mutex);
  #line 343 
  if (err < 0) 
               #line 344 
               goto err_exit;
  #line 346 
  ;
  #line 346 
  err = (*((self->aq_hw_ops)->hw_init))(self->aq_hw,aq_nic_get_ndev(self)->dev_addr);
  #line 348 
  if (err < 0) 
               #line 349 
               goto err_exit;
  #line 351 
  if ((self->aq_nic_cfg.aq_hw_caps)->media_type == 1U) {
    #line 352 
    (self->aq_hw)->phy_id = (unsigned short)32U;
    #line 353 
    err = (int)aq_phy_init(self->aq_hw);
  }
  #line 356 
  i = 0U;
  #line 356 
  aq_vec = self->aq_vec[0];
  #line 356 
  while (self->aq_vecs > i) {
    #line 358 
    aq_vec_init(aq_vec,self->aq_hw_ops,self->aq_hw);
    #line 357 
    i ++;
    #line 357 
    aq_vec = self->aq_vec[i];
  }
  #line 360 
  err = aq_ptp_init(self,self->irqvecs + 4294967295U);
  #line 361 
  if (err < 0) 
               #line 362 
               goto err_exit;
  #line 364 
  err = aq_ptp_ring_alloc(self);
  #line 365 
  if (err < 0) 
               #line 366 
               goto err_exit;
  #line 368 
  err = aq_ptp_ring_init(self);
  #line 369 
  if (err < 0) 
               #line 370 
               goto err_exit;
  #line 372 
  netif_carrier_off(self->ndev);
  #line 374 
  err_exit: 
            #line 374 
  ;
  #line 375 
  return err;
}

#line 378  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_nic.c"
int aq_nic_start(struct aq_nic_s *self)
{
  #line 380 
  struct aq_vec_s *aq_vec = (struct aq_vec_s *)0;
  #line 381 
  unsigned int i = 0U;
  #line 382 
  int err = 0;
  #line 384 
  err = (*((self->aq_hw_ops)->hw_multicast_list_set))(self->aq_hw,(u8 (*)[6U])(& self->mc_list.ar),self->mc_list.count);
  #line 387 
  if (err < 0) 
               #line 388 
               goto err_exit;
  #line 390 
  err = (*((self->aq_hw_ops)->hw_packet_filter_set))(self->aq_hw,self->packet_filter);
  #line 392 
  if (err < 0) 
               #line 393 
               goto err_exit;
  #line 395 
  i = 0U;
  #line 395 
  aq_vec = self->aq_vec[0];
  #line 395 
  while (self->aq_vecs > i) {
    #line 397 
    err = aq_vec_start(aq_vec);
    #line 398 
    if (err < 0) 
                 #line 399 
                 goto err_exit;
    #line 396 
    i ++;
    #line 396 
    aq_vec = self->aq_vec[i];
  }
  #line 402 
  err = aq_ptp_ring_start(self);
  #line 403 
  if (err < 0) 
               #line 404 
               goto err_exit;
  #line 406 
  aq_nic_set_loopback(self);
  #line 408 
  err = (*((self->aq_hw_ops)->hw_start))(self->aq_hw);
  #line 409 
  if (err < 0) 
               #line 410 
               goto err_exit;
  #line 412 
  err = aq_nic_update_interrupt_moderation_settings(self);
  #line 413 
  if (err != 0) 
                #line 414 
                goto err_exit;
  {
    #line 416 
    struct lock_class_key __key;
    #line 416 
    __init_work(& self->service_task,0);
    #line 416 
    atomic_long_t __constr_expr_44 = {.counter = 137438953408LL};
    #line 416 
    self->service_task.data = __constr_expr_44;
    #line 416 
    lockdep_init_map(& self->service_task.lockdep_map,(char *)"(work_completion)",& __key,0);
    #line 416 
    INIT_LIST_HEAD_0(& self->service_task.entry);
    #line 416 
    self->service_task.func = & aq_nic_service_task;
  }
  {
    #line 418 
    struct lock_class_key __key_0;
    #line 418 
    init_timer_key(& self->service_timer,& aq_nic_service_timer_cb,0U,(char *)"(&self->service_timer)",& __key_0);
  }
  #line 419 
  aq_nic_service_timer_cb(& self->service_timer);
  #line 421 
  if ((int)self->aq_nic_cfg.is_polling != 0) {
    {
      #line 422 
      struct lock_class_key __key_1;
      #line 422 
      init_timer_key(& self->polling_timer,& aq_nic_polling_timer_cb,0U,(char *)"(&self->polling_timer)",& __key_1);
    }
    #line 423 
    cif_mod_timer(& self->polling_timer,jiffies + 500UL);
  }
  else {
    #line 426 
    i = 0U;
    #line 426 
    aq_vec = self->aq_vec[0];
    #line 426 
    while (self->aq_vecs > i) {
      {
        #line 428 
        ;
        #line 428 
        ;
        #line 428 
        ;
        #line 428 
        ;
        #line 428 
        err = aq_pci_func_alloc_irq(self,i,(char *)(& (self->ndev)->name),& aq_vec_isr,(void *)aq_vec,aq_vec_get_affinity_mask(aq_vec));
        #line 431 
        if (err < 0) 
                     #line 432 
                     goto err_exit;
      }
      #line 427 
      i ++;
      #line 427 
      aq_vec = self->aq_vec[i];
    }
    #line 435 
    err = aq_ptp_irq_alloc(self);
    #line 436 
    if (err < 0) 
                 #line 437 
                 goto err_exit;
    #line 439 
    if (self->aq_nic_cfg.link_irq_vec != 0U) {
      #line 440 
      int irqvec = pci_irq_vector(self->pdev,self->aq_nic_cfg.link_irq_vec);
      #line 442 
      err = cif_request_threaded_irq((unsigned int)irqvec,(irqreturn_t (*)(int , void *))0,& aq_linkstate_threaded_isr,8320UL,(char *)(& (self->ndev)->name),(void *)self);
      #line 446 
      if (err < 0) 
                   #line 447 
                   goto err_exit;
      #line 448 
      self->msix_entry_mask |= (unsigned int)(1 << self->aq_nic_cfg.link_irq_vec);
    }
    #line 451 
    err = (*((self->aq_hw_ops)->hw_irq_enable))(self->aq_hw,1023ULL);
    #line 453 
    if (err < 0) 
                 #line 454 
                 goto err_exit;
  }
  #line 457 
  err = netif_set_real_num_tx_queues(self->ndev,self->aq_vecs);
  #line 458 
  if (err < 0) 
               #line 459 
               goto err_exit;
  #line 461 
  err = netif_set_real_num_rx_queues(self->ndev,self->aq_vecs);
  #line 462 
  if (err < 0) 
               #line 463 
               goto err_exit;
  #line 465 
  netif_tx_start_all_queues_0(self->ndev);
  #line 467 
  err_exit: 
            #line 467 
  ;
  #line 468 
  return err;
}

#line 471  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_nic.c"
unsigned int aq_nic_map_skb(struct aq_nic_s *self, struct sk_buff *skb, struct aq_ring_s *ring)
{
  #line 477 
  struct aq_ring_buff_s *dx_buff;
  #line 481 
  unsigned int dx;
  #line 474 
  unsigned int nr_frags = (unsigned int)((struct skb_shared_info *)skb_end_pointer(skb))->nr_frags;
  #line 475 
  struct aq_ring_buff_s *first = (struct aq_ring_buff_s *)0;
  #line 476 
  u8 ipver = (unsigned char)ip_hdr(skb)->version;
  #line 478 
  bool need_context_tag = (_Bool)0;
  #line 479 
  unsigned int frag_count = 0U;
  #line 480 
  unsigned int ret = 0U;
  #line 482 
  u8 l4proto = (unsigned char)0U;
  #line 484 
  if ((unsigned int)ipver == 4U) {
    #line 485 
    l4proto = ip_hdr(skb)->protocol;
  }
  else 
    #line 486 
    if ((unsigned int)ipver == 6U) {
      #line 487 
      l4proto = ipv6_hdr(skb)->nexthdr;
    }
  #line 489 
  dx = ring->sw_tail;
  #line 490 
  dx_buff = ring->buff_ring + (unsigned long)dx;
  #line 491 
  dx_buff->__anonCompField_aq_ring_buff_s_171.flags = 0ULL;
  #line 493 
  if ((long)((int)skb_is_gso(skb) != 0) != 0L) {
    #line 494 
    dx_buff->__anonCompField_aq_ring_buff_s_169.__anonCompField___anonunion_704_168.mss = (unsigned int)((struct skb_shared_info *)skb_end_pointer(skb))->gso_size;
    #line 495 
    if ((unsigned int)l4proto == 6U) {
      #line 496 
      dx_buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.is_gso_tcp = (unsigned int)1U;
      #line 497 
      dx_buff->__anonCompField_aq_ring_buff_s_169.__anonCompField___anonunion_704_168.len_l4 = (unsigned char)tcp_hdrlen(skb);
    }
    else 
      #line 498 
      if ((unsigned int)l4proto == 17U) {
        #line 499 
        dx_buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.is_gso_udp = (unsigned int)1U;
        #line 500 
        dx_buff->__anonCompField_aq_ring_buff_s_169.__anonCompField___anonunion_704_168.len_l4 = (unsigned char)8U;
        #line 502 
        udp_hdr(skb)->len = __builtin_bswap16((unsigned short)((int)((unsigned short)dx_buff->__anonCompField_aq_ring_buff_s_169.__anonCompField___anonunion_704_168.mss) + (int)((unsigned short)dx_buff->__anonCompField_aq_ring_buff_s_169.__anonCompField___anonunion_704_168.len_l4)));
      }
      else {
        {
          #line 505 
          bool __warned;
          #line 505 
          int __ret_warn_once = 1;
          #line 505 
          if ((long)(__ret_warn_once != 0) != 0L && (long)(! __warned) != 0L) {
            #line 505 
            __warned = (_Bool)1;
            {
              #line 505 
              int __ret_warn_on = 1;
              #line 505 
              if ((long)(__ret_warn_on != 0) != 0L) {
                #line 505 
                __warn_printk((char *)"Bad GSO mode");
                #line 506 
                ldv_inline_asm();
                #line 507 
                ldv_inline_asm();
              }
              #line 505 
              long tmp_6 = (long)(__ret_warn_on != 0);
            }
          }
          #line 505 
          long tmp_8 = (long)(__ret_warn_once != 0);
        }
        #line 506 
        goto exit;
      }
    #line 508 
    dx_buff->__anonCompField_aq_ring_buff_s_169.__anonCompField___anonunion_704_168.len_pkt = skb->len;
    #line 509 
    dx_buff->__anonCompField_aq_ring_buff_s_169.__anonCompField___anonunion_704_168.len_l2 = (unsigned char)14U;
    #line 510 
    dx_buff->__anonCompField_aq_ring_buff_s_169.__anonCompField___anonunion_704_168.len_l3 = (unsigned char)skb_network_header_len(skb);
    #line 511 
    dx_buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.eop_index = (unsigned short)65535U;
    #line 512 
    dx_buff->__anonCompField_aq_ring_buff_s_169.__anonCompField___anonunion_704_168.is_ipv6 = (unsigned char)((unsigned int)ipver == 6U);
    #line 513 
    need_context_tag = (_Bool)1;
  }
  #line 516 
  if ((unsigned int)self->aq_nic_cfg.is_vlan_tx_insert != 0U && (unsigned int)skb->vlan_present != 0U) {
    #line 517 
    dx_buff->__anonCompField_aq_ring_buff_s_169.__anonCompField___anonunion_704_168.vlan_tx_tag = skb->vlan_tci;
    #line 518 
    dx_buff->__anonCompField_aq_ring_buff_s_169.__anonCompField___anonunion_704_168.len_pkt = skb->len;
    #line 519 
    dx_buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.is_vlan = (unsigned int)1U;
    #line 520 
    need_context_tag = (_Bool)1;
  }
  #line 523 
  if ((int)need_context_tag != 0) {
    #line 524 
    dx = aq_ring_next_dx(ring,dx);
    #line 525 
    dx_buff = ring->buff_ring + (unsigned long)dx;
    #line 526 
    dx_buff->__anonCompField_aq_ring_buff_s_171.flags = 0ULL;
    #line 527 
    ret ++;
  }
  #line 530 
  dx_buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.len = (unsigned int)((unsigned short)skb_headlen(skb));
  #line 531 
  ;
  #line 531 
  ;
  #line 531 
  dx_buff->__anonCompField_aq_ring_buff_s_169.pa = dma_map_single_attrs(aq_nic_get_dev(self),(void *)skb->data,(unsigned long)dx_buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.len,(enum dma_data_direction)DMA_TO_DEVICE,0UL);
  #line 536 
  ;
  #line 536 
  if ((long)(dma_mapping_error(aq_nic_get_dev(self),
                           dx_buff->__anonCompField_aq_ring_buff_s_169.pa) != 0) != 0L) 
    #line 537 
    goto exit;
  #line 539 
  first = dx_buff;
  #line 540 
  dx_buff->__anonCompField_aq_ring_buff_s_169.__anonCompField___anonunion_704_168.len_pkt = skb->len;
  #line 541 
  dx_buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.is_sop = (unsigned int)1U;
  #line 542 
  dx_buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.is_mapped = (unsigned int)1U;
  #line 543 
  ret ++;
  #line 545 
  if ((unsigned int)skb->ip_summed == 3U) {
    #line 546 
    dx_buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.is_ip_cso = (unsigned int)((unsigned int)skb->protocol == 8U);
    #line 547 
    dx_buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.is_tcp_cso = (unsigned int)((unsigned int)l4proto == 6U);
    #line 548 
    dx_buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.is_udp_cso = (unsigned int)((unsigned int)l4proto == 17U);
  }
  #line 551 
  while (1) {
    #line 551 
    unsigned int tmp_16;
    #line 551 
    tmp_16 = nr_frags;
    #line 551 
    nr_frags --;
    #line 551 
    ;
    #line 551 
    if (! (tmp_16 != 0U)) 
                          #line 551 
                          break;
    {
      #line 555 
      dma_addr_t frag_pa;
      #line 552 
      unsigned int frag_len = 0U;
      #line 553 
      unsigned int buff_offset = 0U;
      #line 554 
      unsigned int buff_size = 0U;
      #line 556 
      skb_frag_t *frag = & ((struct skb_shared_info *)skb_end_pointer(skb))->frags[frag_count];
      #line 558 
      frag_len = skb_frag_size(frag);
      #line 560 
      while (frag_len != 0U) {
        #line 561 
        if (frag_len > 16384U) 
                               #line 562 
                               buff_size = 16384U; else 
                                                        #line 564 
                                                        buff_size = frag_len;
        #line 566 
        ;
        #line 566 
        ;
        #line 566 
        ;
        #line 566 
        frag_pa = skb_frag_dma_map(aq_nic_get_dev(self),frag,(unsigned long)buff_offset,(unsigned long)buff_size,(enum dma_data_direction)DMA_TO_DEVICE);
        #line 572 
        ;
        #line 572 
        if ((long)(dma_mapping_error(aq_nic_get_dev(self),frag_pa) != 0) != 0L) 
          #line 574 
          goto mapping_error;
        #line 576 
        dx = aq_ring_next_dx(ring,dx);
        #line 577 
        dx_buff = ring->buff_ring + (unsigned long)dx;
        #line 579 
        dx_buff->__anonCompField_aq_ring_buff_s_171.flags = 0ULL;
        #line 580 
        dx_buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.len = (unsigned int)((unsigned short)buff_size);
        #line 581 
        dx_buff->__anonCompField_aq_ring_buff_s_169.pa = frag_pa;
        #line 582 
        dx_buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.is_mapped = (unsigned int)1U;
        #line 583 
        dx_buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.eop_index = (unsigned short)65535U;
        #line 585 
        frag_len -= buff_size;
        #line 586 
        buff_offset += buff_size;
        #line 588 
        ret ++;
      }
    }
    #line 551 
    frag_count ++;
  }
  #line 592 
  first->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.eop_index = (unsigned short)dx;
  #line 593 
  dx_buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.is_eop = (unsigned int)1U;
  #line 594 
  dx_buff->__anonCompField_aq_ring_buff_s_169.__anonCompField___anonunion_704_167.skb = skb;
  #line 595 
  goto exit;
  #line 597 
  mapping_error: 
                 #line 597 
  ;
  #line 598 
  dx = ring->sw_tail;
  #line 598 
  while (ret != 0U) {
    #line 601 
    dx_buff = ring->buff_ring + (unsigned long)dx;
    #line 603 
    if ((((unsigned int)dx_buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.is_gso_tcp == 0U && (unsigned int)dx_buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.is_gso_udp == 0U) && (unsigned int)dx_buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.is_vlan == 0U) && dx_buff->__anonCompField_aq_ring_buff_s_169.pa != 0ULL) 
      #line 605 
      if ((long)((unsigned int)dx_buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.is_sop != 0U) != 0L) {
        #line 606 
        ;
        #line 606 
        ;
        #line 606 
        dma_unmap_single_attrs(aq_nic_get_dev(self),dx_buff->__anonCompField_aq_ring_buff_s_169.pa,(unsigned long)dx_buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.len,(enum dma_data_direction)DMA_TO_DEVICE,0UL);
      }
      else {
        #line 611 
        ;
        #line 611 
        ;
        #line 611 
        dma_unmap_page_attrs(aq_nic_get_dev(self),dx_buff->__anonCompField_aq_ring_buff_s_169.pa,(unsigned long)dx_buff->__anonCompField_aq_ring_buff_s_171.__anonCompField___anonunion_708_170.len,(enum dma_data_direction)DMA_TO_DEVICE,0UL);
      }
    #line 600 
    ret --;
    #line 600 
    dx = aq_ring_next_dx(ring,dx);
  }
  #line 619 
  exit: 
        #line 619 
  ;
  #line 620 
  return ret;
}

#line 623  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_nic.c"
int aq_nic_xmit(struct aq_nic_s *self, struct sk_buff *skb)
{
  #line 625 
  unsigned int vec = (unsigned int)skb->queue_mapping % self->aq_nic_cfg.vecs;
  #line 626 
  struct aq_ring_s *ring = (struct aq_ring_s *)0;
  #line 627 
  unsigned int frags = 0U;
  #line 628 
  int err = 0;
  #line 629 
  unsigned int tc = 0U;
  #line 631 
  frags = (unsigned int)((int)((struct skb_shared_info *)skb_end_pointer(skb))->nr_frags + 1);
  #line 633 
  ring = self->aq_ring_tx[tc * 8U + vec];
  #line 635 
  if (frags > 32U) {
    #line 636 
    dev_kfree_skb_any(skb);
    #line 637 
    goto err_exit;
  }
  #line 640 
  aq_ring_update_queue_state(ring);
  #line 642 
  if (((unsigned long)self->aq_nic_cfg.priv_flags & 4UL) != 0UL) {
    #line 643 
    err = 16;
    #line 644 
    goto err_exit;
  }
  #line 648 
  if ((int)__netif_subqueue_stopped(self->ndev,
                                 (unsigned short)((int)((unsigned short)ring->idx))) != 0) {
    #line 649 
    err = 16;
    #line 650 
    goto err_exit;
  }
  #line 653 
  frags = aq_nic_map_skb(self,skb,ring);
  #line 655 
  if ((long)(frags != 0U) != 0L) {
    #line 656 
    err = (*((self->aq_hw_ops)->hw_ring_tx_xmit))(self->aq_hw,ring,frags);
    #line 658 
    if (err >= 0) {
      #line 659 
      (ring->stats.tx.packets) ++;
      #line 660 
      ring->stats.tx.bytes += (unsigned long long)skb->len;
    }
  }
  else 
       #line 663 
       err = 16;
  #line 666 
  err_exit: 
            #line 666 
  ;
  #line 667 
  return err;
}

#line 670  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_nic.c"
int aq_nic_update_interrupt_moderation_settings(struct aq_nic_s *self)
{
  #line 672 
  return (*((self->aq_hw_ops)->hw_interrupt_moderation_set))(self->aq_hw);
}

#line 675  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_nic.c"
int aq_nic_set_packet_filter(struct aq_nic_s *self, unsigned int flags)
{
  #line 677 
  int err = 0;
  #line 679 
  err = (*((self->aq_hw_ops)->hw_packet_filter_set))(self->aq_hw,flags);
  #line 680 
  if (err < 0) 
               #line 681 
               goto err_exit;
  #line 683 
  self->packet_filter = flags;
  #line 685 
  err_exit: 
            #line 685 
  ;
  #line 686 
  return err;
}

#line 689  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_nic.c"
int aq_nic_set_multicast_list(struct aq_nic_s *self, struct net_device *ndev)
{
  #line 691 
  struct aq_hw_ops *hw_ops = self->aq_hw_ops;
  #line 692 
  struct aq_nic_cfg_s *cfg = & self->aq_nic_cfg;
  #line 693 
  unsigned int packet_filter = ndev->flags;
  #line 694 
  struct netdev_hw_addr *ha = (struct netdev_hw_addr *)0;
  #line 695 
  unsigned int i = 0U;
  #line 696 
  int err = 0;
  #line 698 
  self->mc_list.count = 0U;
  #line 699 
  if ((unsigned int)ndev->uc.count > 32U) 
                                          #line 700 
                                          packet_filter |= 256U;
  else {
    #line 702 
    void *__mptr;
    #line 702 
    __mptr = (void *)ndev->uc.list.next;
    #line 702 
    ha = ((struct netdev_hw_addr *)__mptr);
    #line 702 
    while (& ha->list != & ndev->uc.list) {
      #line 702 
      void *__mptr_0;
      #line 703 
      unsigned int tmp_1;
      #line 703 
      ;
      #line 703 
      tmp_1 = i;
      #line 703 
      i ++;
      #line 703 
      ;
      #line 703 
      ether_addr_copy((u8 *)(& self->mc_list.ar[tmp_1]),(u8 *)(& ha->addr));
      #line 702 
      __mptr_0 = (void *)ha->list.next;
      #line 702 
      ha = ((struct netdev_hw_addr *)__mptr_0);
    }
  }
  #line 707 
  cfg->is_mc_list_enabled = (unsigned short)((packet_filter & 4096U) != 0U);
  #line 708 
  if ((unsigned int)cfg->is_mc_list_enabled != 0U) 
    #line 709 
    if ((unsigned int)ndev->mc.count + i > 32U) 
                                                #line 710 
                                                packet_filter |= 512U;
    else {
      #line 712 
      void *__mptr_1;
      #line 712 
      __mptr_1 = (void *)ndev->mc.list.next;
      #line 712 
      ha = ((struct netdev_hw_addr *)__mptr_1);
      #line 712 
      while (& ha->list != & ndev->mc.list) {
        #line 712 
        void *__mptr_2;
        #line 713 
        unsigned int tmp_4;
        #line 713 
        ;
        #line 713 
        tmp_4 = i;
        #line 713 
        i ++;
        #line 713 
        ;
        #line 713 
        ether_addr_copy((u8 *)(& self->mc_list.ar[tmp_4]),(u8 *)(& ha->addr));
        #line 712 
        __mptr_2 = (void *)ha->list.next;
        #line 712 
        ha = ((struct netdev_hw_addr *)__mptr_2);
      }
    }
  #line 719 
  if (i + 4294967295U <= 31U) {
    #line 720 
    self->mc_list.count = i;
    #line 721 
    err = (*(hw_ops->hw_multicast_list_set))(self->aq_hw,(u8 (*)[6U])(& self->mc_list.ar),self->mc_list.count);
    #line 724 
    if (err < 0) 
                 #line 725 
                 return err;
  }
  #line 728 
  return aq_nic_set_packet_filter(self,packet_filter);
}

#line 731  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_nic.c"
int aq_nic_set_mtu(struct aq_nic_s *self, int new_mtu)
{
  #line 733 
  self->aq_nic_cfg.mtu = (unsigned int)new_mtu;
  #line 735 
  return 0;
}

#line 738  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_nic.c"
int aq_nic_set_mac(struct aq_nic_s *self, struct net_device *ndev)
{
  #line 740 
  return (*((self->aq_hw_ops)->hw_set_mac_address))(self->aq_hw,ndev->dev_addr);
}

#line 743  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_nic.c"
unsigned int aq_nic_get_link_speed(struct aq_nic_s *self)
{
  #line 745 
  return self->link_status.mbps;
}

#line 748  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_nic.c"
int aq_nic_get_regs(struct aq_nic_s *self, struct ethtool_regs *regs, void *p)
{
  #line 750 
  u32 *regs_buff = (u32 *)p;
  #line 751 
  int err = 0;
  #line 753 
  regs->version = 1U;
  #line 755 
  err = (*((self->aq_hw_ops)->hw_get_regs))(self->aq_hw,self->aq_nic_cfg.aq_hw_caps,regs_buff);
  #line 758 
  if (err < 0) 
               #line 759 
               goto err_exit;
  #line 761 
  err_exit: 
            #line 761 
  ;
  #line 762 
  return err;
}

#line 765  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_nic.c"
int aq_nic_get_regs_count(struct aq_nic_s *self)
{
  #line 767 
  return (int)(self->aq_nic_cfg.aq_hw_caps)->mac_regs_count;
}

#line 770  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_nic.c"
void aq_nic_get_stats(struct aq_nic_s *self, u64 *data)
{
  #line 773 
  struct aq_stats_s *stats;
  #line 772 
  struct aq_vec_s *aq_vec = (struct aq_vec_s *)0;
  #line 774 
  unsigned int count = 0U;
  #line 775 
  unsigned int i = 0U;
  #line 777 
  if ((self->aq_fw_ops)->update_stats != (int (*)(struct aq_hw_s *))0) {
    #line 778 
    cif_mutex_lock_fwreq_mutex_of_aq_nic_s_0(& self->fwreq_mutex);
    #line 779 
    (*((self->aq_fw_ops)->update_stats))(self->aq_hw);
    #line 780 
    cif_mutex_unlock_fwreq_mutex_of_aq_nic_s_0(& self->fwreq_mutex);
  }
  #line 782 
  stats = (*((self->aq_hw_ops)->hw_get_hw_stats))(self->aq_hw);
  #line 784 
  if (stats == (struct aq_stats_s *)0) 
                                       #line 785 
                                       goto err_exit;
  #line 787 
  *(data + (unsigned long)i) = (stats->uprc + stats->mprc) + stats->bprc;
  #line 788 
  i ++;
  #line 788 
  *(data + (unsigned long)i) = stats->uprc;
  #line 789 
  i ++;
  #line 789 
  *(data + (unsigned long)i) = stats->mprc;
  #line 790 
  i ++;
  #line 790 
  *(data + (unsigned long)i) = stats->bprc;
  #line 791 
  i ++;
  #line 791 
  *(data + (unsigned long)i) = stats->erpt;
  #line 792 
  i ++;
  #line 792 
  *(data + (unsigned long)i) = (stats->uptc + stats->mptc) + stats->bptc;
  #line 793 
  i ++;
  #line 793 
  *(data + (unsigned long)i) = stats->uptc;
  #line 794 
  i ++;
  #line 794 
  *(data + (unsigned long)i) = stats->mptc;
  #line 795 
  i ++;
  #line 795 
  *(data + (unsigned long)i) = stats->bptc;
  #line 796 
  i ++;
  #line 796 
  *(data + (unsigned long)i) = stats->ubrc;
  #line 797 
  i ++;
  #line 797 
  *(data + (unsigned long)i) = stats->ubtc;
  #line 798 
  i ++;
  #line 798 
  *(data + (unsigned long)i) = stats->mbrc;
  #line 799 
  i ++;
  #line 799 
  *(data + (unsigned long)i) = stats->mbtc;
  #line 800 
  i ++;
  #line 800 
  *(data + (unsigned long)i) = stats->bbrc;
  #line 801 
  i ++;
  #line 801 
  *(data + (unsigned long)i) = stats->bbtc;
  #line 802 
  i ++;
  #line 802 
  *(data + (unsigned long)i) = (stats->ubrc + stats->mbrc) + stats->bbrc;
  #line 803 
  i ++;
  #line 803 
  *(data + (unsigned long)i) = (stats->ubtc + stats->mbtc) + stats->bbtc;
  #line 804 
  i ++;
  #line 804 
  *(data + (unsigned long)i) = stats->dma_pkt_rc;
  #line 805 
  i ++;
  #line 805 
  *(data + (unsigned long)i) = stats->dma_pkt_tc;
  #line 806 
  i ++;
  #line 806 
  *(data + (unsigned long)i) = stats->dma_oct_rc;
  #line 807 
  i ++;
  #line 807 
  *(data + (unsigned long)i) = stats->dma_oct_tc;
  #line 808 
  i ++;
  #line 808 
  *(data + (unsigned long)i) = stats->dpc;
  #line 810 
  i ++;
  #line 812 
  data += (unsigned long)i;
  #line 814 
  i = 0U;
  #line 814 
  aq_vec = self->aq_vec[0];
  #line 814 
  while (aq_vec != (struct aq_vec_s *)0 && self->aq_vecs > i) {
    #line 816 
    data += (unsigned long)count;
    #line 817 
    aq_vec_get_sw_stats(aq_vec,data,& count);
    #line 815 
    i ++;
    #line 815 
    aq_vec = self->aq_vec[i];
  }
  #line 820 
  err_exit: 
            #line 820 
  ;
  #line 821 
  return;
}

#line 823  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_nic.c"
static void aq_nic_update_ndev_stats(struct aq_nic_s *self)
{
  #line 825 
  struct aq_stats_s *stats = (*((self->aq_hw_ops)->hw_get_hw_stats))(self->aq_hw);
  #line 826 
  struct net_device *ndev = self->ndev;
  #line 828 
  ndev->stats.rx_packets = (unsigned long)stats->dma_pkt_rc;
  #line 829 
  ndev->stats.rx_bytes = (unsigned long)stats->dma_oct_rc;
  #line 830 
  ndev->stats.rx_errors = (unsigned long)stats->erpr;
  #line 831 
  ndev->stats.rx_dropped = (unsigned long)stats->dpc;
  #line 832 
  ndev->stats.tx_packets = (unsigned long)stats->dma_pkt_tc;
  #line 833 
  ndev->stats.tx_bytes = (unsigned long)stats->dma_oct_tc;
  #line 834 
  ndev->stats.tx_errors = (unsigned long)stats->erpt;
  #line 835 
  ndev->stats.multicast = (unsigned long)stats->mprc;
  #line 836 
  return;
}

#line 838  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_nic.c"
void aq_nic_get_link_ksettings(struct aq_nic_s *self, struct ethtool_link_ksettings *cmd)
{
  #line 841 
  if ((self->aq_nic_cfg.aq_hw_caps)->media_type == 2U) 
                                                       #line 842 
                                                       cmd->base.port = (unsigned char)3U; else 
                                                                    #line 844 
                                                                    cmd->base.port = (unsigned char)0U;
  #line 846 
  cmd->base.duplex = (unsigned char)1U;
  #line 847 
  cmd->base.autoneg = (unsigned char)self->aq_nic_cfg.is_autoneg;
  #line 849 
  cif_bitmap_zero((unsigned long *)(& cmd->link_modes.supported),74U);
  #line 851 
  if (((self->aq_nic_cfg.aq_hw_caps)->link_speed_msk & 1ULL) != 0ULL) 
    #line 852 
    __set_bit(12L,(unsigned long *)(& cmd->link_modes.supported));
  #line 855 
  if (((self->aq_nic_cfg.aq_hw_caps)->link_speed_msk & 2ULL) != 0ULL) 
    #line 856 
    __set_bit(48L,(unsigned long *)(& cmd->link_modes.supported));
  #line 859 
  if (((self->aq_nic_cfg.aq_hw_caps)->link_speed_msk & 8ULL) != 0ULL) 
    #line 860 
    __set_bit(47L,(unsigned long *)(& cmd->link_modes.supported));
  #line 863 
  if (((self->aq_nic_cfg.aq_hw_caps)->link_speed_msk & 16ULL) != 0ULL) 
    #line 864 
    __set_bit(5L,(unsigned long *)(& cmd->link_modes.supported));
  #line 867 
  if (((self->aq_nic_cfg.aq_hw_caps)->link_speed_msk & 32ULL) != 0ULL) 
    #line 868 
    __set_bit(3L,(unsigned long *)(& cmd->link_modes.supported));
  #line 871 
  if ((int)(self->aq_nic_cfg.aq_hw_caps)->flow_control != 0) {
    #line 872 
    __set_bit(13L,(unsigned long *)(& cmd->link_modes.supported));
    #line 874 
    __set_bit(14L,(unsigned long *)(& cmd->link_modes.supported));
  }
  #line 878 
  __set_bit(6L,(unsigned long *)(& cmd->link_modes.supported));
  #line 880 
  if ((self->aq_nic_cfg.aq_hw_caps)->media_type == 2U) 
                                                       #line 881 
                                                       __set_bit(10L,(unsigned long *)(& cmd->link_modes.supported)); else 
                                                                    #line 883 
                                                                    __set_bit(7L,(unsigned long *)(& cmd->link_modes.supported));
  #line 885 
  cif_bitmap_zero((unsigned long *)(& cmd->link_modes.advertising),74U);
  #line 887 
  if ((int)self->aq_nic_cfg.is_autoneg != 0) 
                                             #line 888 
                                             __set_bit(6L,(unsigned long *)(& cmd->link_modes.advertising));
  #line 890 
  if (((unsigned long)self->aq_nic_cfg.link_speed_msk & 1UL) != 0UL) 
    #line 891 
    __set_bit(12L,(unsigned long *)(& cmd->link_modes.advertising));
  #line 894 
  if (((unsigned long)self->aq_nic_cfg.link_speed_msk & 2UL) != 0UL) 
    #line 895 
    __set_bit(48L,(unsigned long *)(& cmd->link_modes.advertising));
  #line 898 
  if (((unsigned long)self->aq_nic_cfg.link_speed_msk & 8UL) != 0UL) 
    #line 899 
    __set_bit(47L,(unsigned long *)(& cmd->link_modes.advertising));
  #line 902 
  if (((unsigned long)self->aq_nic_cfg.link_speed_msk & 16UL) != 0UL) 
    #line 903 
    __set_bit(5L,(unsigned long *)(& cmd->link_modes.advertising));
  #line 906 
  if (((unsigned long)self->aq_nic_cfg.link_speed_msk & 32UL) != 0UL) 
    #line 907 
    __set_bit(3L,(unsigned long *)(& cmd->link_modes.advertising));
  #line 910 
  if (((unsigned int)self->aq_nic_cfg.fc.cur & 2U) != 0U) 
                                                          #line 911 
                                                          __set_bit(13L,(unsigned long *)(& cmd->link_modes.advertising));
  #line 915 
  if ((((unsigned int)self->aq_nic_cfg.fc.cur & 1U) != 0U) ^ (((unsigned int)self->aq_nic_cfg.fc.cur & 2U) != 0U)) 
    #line 917 
    __set_bit(14L,(unsigned long *)(& cmd->link_modes.advertising));
  #line 920 
  if ((self->aq_nic_cfg.aq_hw_caps)->media_type == 2U) 
                                                       #line 921 
                                                       __set_bit(10L,(unsigned long *)(& cmd->link_modes.advertising)); else 
                                                                    #line 923 
                                                                    __set_bit(7L,(unsigned long *)(& cmd->link_modes.advertising));
  #line 924 
  return;
}

#line 926  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_nic.c"
int aq_nic_set_link_ksettings(struct aq_nic_s *self, struct ethtool_link_ksettings *cmd)
{
  #line 929 
  u32 speed = 0U;
  #line 930 
  u32 rate = 0U;
  #line 931 
  int err = 0;
  #line 933 
  if ((unsigned int)cmd->base.autoneg == 1U) {
    #line 934 
    rate = (unsigned int)(self->aq_nic_cfg.aq_hw_caps)->link_speed_msk;
    #line 935 
    self->aq_nic_cfg.is_autoneg = (_Bool)1;
  }
  else {
    #line 937 
    speed = cmd->base.speed;
    #line 939 
    switch (speed) {
      #line 940 
      case (u32)100: 
                     #line 940 
      ;
      #line 941 
      rate = 32U;
      #line 942 
      break;
      #line 944 
      case (u32)1000: 
                      #line 944 
      ;
      #line 945 
      rate = 16U;
      #line 946 
      break;
      #line 948 
      case (u32)2500: 
                      #line 948 
      ;
      #line 949 
      rate = 8U;
      #line 950 
      break;
      #line 952 
      case (u32)5000: 
                      #line 952 
      ;
      #line 953 
      rate = 2U;
      #line 954 
      break;
      #line 956 
      case (u32)10000: 
                       #line 956 
      ;
      #line 957 
      rate = 1U;
      #line 958 
      break;
      #line 960 
      default: 
               #line 960 
      ;
      #line 961 
      err = -1;
      #line 962 
      goto err_exit;
    }
    #line 965 
    if (((self->aq_nic_cfg.aq_hw_caps)->link_speed_msk & (unsigned long long)rate) == 0ULL) {
      #line 966 
      err = -1;
      #line 967 
      goto err_exit;
    }
    #line 970 
    self->aq_nic_cfg.is_autoneg = (_Bool)0;
  }
  #line 973 
  cif_mutex_lock_fwreq_mutex_of_aq_nic_s_0(& self->fwreq_mutex);
  #line 974 
  err = (*((self->aq_fw_ops)->set_link_speed))(self->aq_hw,rate);
  #line 975 
  cif_mutex_unlock_fwreq_mutex_of_aq_nic_s_0(& self->fwreq_mutex);
  #line 976 
  if (err < 0) 
               #line 977 
               goto err_exit;
  #line 979 
  self->aq_nic_cfg.link_speed_msk = rate;
  #line 981 
  err_exit: 
            #line 981 
  ;
  #line 982 
  return err;
}

#line 985  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_nic.c"
struct aq_nic_cfg_s *aq_nic_get_cfg(struct aq_nic_s *self)
{
  #line 987 
  return & self->aq_nic_cfg;
}

#line 990  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_nic.c"
u32 aq_nic_get_fw_version(struct aq_nic_s *self)
{
  #line 992 
  u32 fw_version = 0U;
  #line 994 
  (*((self->aq_hw_ops)->hw_get_fw_version))(self->aq_hw,& fw_version);
  #line 996 
  return fw_version;
}

#line 999  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_nic.c"
int aq_nic_set_loopback(struct aq_nic_s *self)
{
  #line 1001 
  struct aq_nic_cfg_s *cfg = & self->aq_nic_cfg;
  #line 1003 
  if ((self->aq_hw_ops)->hw_set_loopback == (int (*)(struct aq_hw_s *, u32 , bool ))0 || (self->aq_fw_ops)->set_phyloopback == (int (*)(struct aq_hw_s *, u32 , bool ))0) 
    #line 1005 
    return -524;
  #line 1007 
  cif_mutex_lock_fwreq_mutex_of_aq_nic_s_0(& self->fwreq_mutex);
  #line 1008 
  (*((self->aq_hw_ops)->hw_set_loopback))(self->aq_hw,0U,(_Bool)(((unsigned long)cfg->priv_flags & 1UL) != 0UL));
  #line 1013 
  (*((self->aq_hw_ops)->hw_set_loopback))(self->aq_hw,1U,(_Bool)(((unsigned long)cfg->priv_flags & 2UL) != 0UL));
  #line 1018 
  (*((self->aq_hw_ops)->hw_set_loopback))(self->aq_hw,2U,(_Bool)(((unsigned long)cfg->priv_flags & 4UL) != 0UL));
  #line 1023 
  (*((self->aq_fw_ops)->set_phyloopback))(self->aq_hw,3U,(_Bool)(((unsigned long)cfg->priv_flags & 8UL) != 0UL));
  #line 1028 
  (*((self->aq_fw_ops)->set_phyloopback))(self->aq_hw,4U,(_Bool)(((unsigned long)cfg->priv_flags & 16UL) != 0UL));
  #line 1032 
  cif_mutex_unlock_fwreq_mutex_of_aq_nic_s_0(& self->fwreq_mutex);
  #line 1034 
  return 0;
}

#line 1037  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_nic.c"
int aq_nic_stop(struct aq_nic_s *self)
{
  #line 1039 
  struct aq_vec_s *aq_vec = (struct aq_vec_s *)0;
  #line 1040 
  unsigned int i = 0U;
  #line 1042 
  netif_tx_disable(self->ndev);
  #line 1043 
  netif_carrier_off(self->ndev);
  #line 1045 
  cif_del_timer_sync(& self->service_timer);
  #line 1046 
  cancel_work_sync(& self->service_task);
  #line 1048 
  (*((self->aq_hw_ops)->hw_irq_disable))(self->aq_hw,1023ULL);
  #line 1050 
  if ((int)self->aq_nic_cfg.is_polling != 0) 
                                             #line 1051 
                                             cif_del_timer_sync(& self->polling_timer); else 
                                                                    #line 1053 
                                                                    aq_pci_func_free_irqs(self);
  #line 1055 
  aq_ptp_irq_free(self);
  #line 1057 
  i = 0U;
  #line 1057 
  aq_vec = self->aq_vec[0];
  #line 1057 
  while (self->aq_vecs > i) {
    #line 1059 
    aq_vec_stop(aq_vec);
    #line 1058 
    i ++;
    #line 1058 
    aq_vec = self->aq_vec[i];
  }
  #line 1061 
  aq_ptp_ring_stop(self);
  #line 1063 
  return (*((self->aq_hw_ops)->hw_stop))(self->aq_hw);
}

#line 1066  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_nic.c"
void aq_nic_set_power(struct aq_nic_s *self)
{
  #line 1068 
  if (self->power_state != 0U || ((self->aq_hw)->aq_nic_cfg)->wol != 0U) 
    #line 1070 
    if ((long)((self->aq_fw_ops)->set_power != (int (*)(struct aq_hw_s *, unsigned int , u8 *))0) != 0L) {
      #line 1071 
      cif_mutex_lock_fwreq_mutex_of_aq_nic_s_0(& self->fwreq_mutex);
      #line 1072 
      (*((self->aq_fw_ops)->set_power))(self->aq_hw,self->power_state,(self->ndev)->dev_addr);
      #line 1075 
      cif_mutex_unlock_fwreq_mutex_of_aq_nic_s_0(& self->fwreq_mutex);
    }
  #line 1077 
  return;
}

#line 1079  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_nic.c"
void aq_nic_deinit(struct aq_nic_s *self, bool link_down)
{
  #line 1081 
  struct aq_vec_s *aq_vec = (struct aq_vec_s *)0;
  #line 1082 
  unsigned int i = 0U;
  #line 1084 
  if (self == (struct aq_nic_s *)0) 
                                    #line 1085 
                                    goto err_exit;
  #line 1087 
  i = 0U;
  #line 1087 
  aq_vec = self->aq_vec[0];
  #line 1087 
  while (self->aq_vecs > i) {
    #line 1089 
    aq_vec_deinit(aq_vec);
    #line 1088 
    i ++;
    #line 1088 
    aq_vec = self->aq_vec[i];
  }
  #line 1091 
  aq_ptp_unregister(self);
  #line 1092 
  aq_ptp_ring_deinit(self);
  #line 1093 
  aq_ptp_ring_free(self);
  #line 1094 
  aq_ptp_free(self);
  #line 1096 
  if ((long)((self->aq_fw_ops)->deinit != (int (*)(struct aq_hw_s *))0) != 0L && (int)link_down != 0) {
    #line 1097 
    cif_mutex_lock_fwreq_mutex_of_aq_nic_s_0(& self->fwreq_mutex);
    #line 1098 
    (*((self->aq_fw_ops)->deinit))(self->aq_hw);
    #line 1099 
    cif_mutex_unlock_fwreq_mutex_of_aq_nic_s_0(& self->fwreq_mutex);
  }
  #line 1102 
  err_exit: 
            #line 1102 
  ;
  #line 1103 
  return;
}

#line 1105  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_nic.c"
void aq_nic_free_vectors(struct aq_nic_s *self)
{
  #line 1107 
  unsigned int i = 0U;
  #line 1109 
  if (self == (struct aq_nic_s *)0) 
                                    #line 1110 
                                    goto err_exit;
  #line 1112 
  i = 8U;
  #line 1112 
  while (1) {
    #line 1112 
    unsigned int tmp;
    #line 1112 
    tmp = i;
    #line 1112 
    i --;
    #line 1112 
    ;
    #line 1112 
    if (! (tmp != 0U)) 
                       #line 1112 
                       break;
    #line 1113 
    if (self->aq_vec[i] != (struct aq_vec_s *)0) {
      #line 1114 
      aq_vec_free(self->aq_vec[i]);
      #line 1115 
      self->aq_vec[i] = (struct aq_vec_s *)0;
    }
  }
  #line 1119 
  err_exit: 
            #line 1119 
  ;
  #line 1120 
  return;
}

#line 1122  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_nic.c"
void aq_nic_shutdown(struct aq_nic_s *self)
{
  #line 1124 
  int err = 0;
  #line 1126 
  if (self->ndev == (struct net_device *)0) 
                                            #line 1127 
                                            return;
  #line 1129 
  rtnl_lock();
  #line 1131 
  netif_device_detach(self->ndev);
  #line 1133 
  if ((int)netif_running(self->ndev) != 0) {
    #line 1134 
    err = aq_nic_stop(self);
    #line 1135 
    if (err < 0) 
                 #line 1136 
                 goto err_exit;
  }
  #line 1138 
  aq_nic_deinit(self,(_Bool)(((self->aq_hw)->aq_nic_cfg)->wol == 0U));
  #line 1139 
  aq_nic_set_power(self);
  #line 1141 
  err_exit: 
            #line 1141 
  ;
  #line 1142 
  rtnl_unlock();
  #line 1143 
  return;
}

#line 1145  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_nic.c"
u8 aq_nic_reserve_filter(struct aq_nic_s *self, enum aq_rx_filter_type type)
{
  #line 1148 
  u32 fltr_cnt;
  #line 1149 
  u32 n_bit;
  #line 1147 
  u8 location = (unsigned char)255U;
  #line 1151 
  switch ((unsigned int)type) {
    #line 1152 
    case (unsigned int)0: 
                          #line 1152 
    ;
    #line 1153 
    location = (unsigned char)(15U - (unsigned int)self->aq_hw_rx_fltrs.fet_reserved_count);
    #line 1155 
    self->aq_hw_rx_fltrs.fet_reserved_count = (u8)((int)self->aq_hw_rx_fltrs.fet_reserved_count + 1);
    #line 1156 
    break;
    #line 1157 
    case (unsigned int)2: 
                          #line 1157 
    ;
    #line 1158 
    fltr_cnt = 7U;
    #line 1159 
    n_bit = fltr_cnt - (unsigned int)self->aq_hw_rx_fltrs.fl3l4.reserved_count;
    #line 1161 
    self->aq_hw_rx_fltrs.fl3l4.active_ipv4 = (unsigned char)((int)self->aq_hw_rx_fltrs.fl3l4.active_ipv4 | (int)((unsigned char)(1UL << n_bit)));
    #line 1162 
    self->aq_hw_rx_fltrs.fl3l4.reserved_count = (u8)((int)self->aq_hw_rx_fltrs.fl3l4.reserved_count + 1);
    #line 1163 
    location = (unsigned char)n_bit;
    #line 1164 
    break;
    #line 1165 
    default: 
             #line 1165 
    ;
    #line 1166 
    break;
  }
  #line 1169 
  return location;
}

#line 1172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_nic.c"
void aq_nic_release_filter(struct aq_nic_s *self, enum aq_rx_filter_type type, u32 location)
{
  #line 1175 
  switch ((unsigned int)type) {
    #line 1176 
    case (unsigned int)0: 
                          #line 1176 
    ;
    #line 1177 
    self->aq_hw_rx_fltrs.fet_reserved_count = (u8)((int)self->aq_hw_rx_fltrs.fet_reserved_count - 1);
    #line 1178 
    break;
    #line 1179 
    case (unsigned int)2: 
                          #line 1179 
    ;
    #line 1180 
    self->aq_hw_rx_fltrs.fl3l4.reserved_count = (u8)((int)self->aq_hw_rx_fltrs.fl3l4.reserved_count - 1);
    #line 1181 
    self->aq_hw_rx_fltrs.fl3l4.active_ipv4 = (unsigned char)((int)self->aq_hw_rx_fltrs.fl3l4.active_ipv4 & ~ ((int)((unsigned char)(1UL << location))));
    #line 1182 
    break;
    #line 1183 
    default: 
             #line 1183 
    ;
    #line 1184 
    break;
  }
  #line 1186 
  return;
}

#line 95  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_nic.i.aux"
#line 95 
int emg_del_timer_sync(struct timer_list *arg0);
#line 98 
#line 98 
int emg_mod_timer(struct timer_list *arg0, unsigned long arg1);
#line 101 
#line 101 
int emg_register_netdev(struct net_device *arg0);
#line 103 
#line 103 
int emg_request_threaded_irq(unsigned int arg0, enum irqreturn (*arg1)(int , void *), enum irqreturn (*arg2)(int , void *), unsigned long arg3, char *arg4, void *arg5);
#line 109  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_nic.i.aux"
enum irqreturn emg_wrapper_aq_linkstate_threaded_isr(int arg0, void *arg1)
{
  #line 110 
  return aq_linkstate_threaded_isr(arg0,arg1);
}

#line 129  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_nic.i.aux"
static void cif_set_bit_3(long nr, unsigned long *addr)
{
  #line 132 
  ldv_set_bit(nr,addr);
  #line 133 
  return;
}

#line 136  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_nic.i.aux"
static void cif_clear_bit_3(long nr, unsigned long *addr)
{
  #line 139 
  ldv_clear_bit(nr,addr);
  #line 140 
  return;
}

#line 143  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_nic.i.aux"
static void INIT_LIST_HEAD_0(struct list_head *list)
{
  #line 146 
  ldv_init_list_head(list);
  #line 147 
  return;
}

#line 206  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_nic.i.aux"
static void cif_bitmap_zero(unsigned long *dst, unsigned int nbits)
{
  #line 209 
  ldv_bitmap_zero(dst,nbits);
  #line 210 
  return;
}

#line 510  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_nic.i.aux"
static int cif_request_threaded_irq(unsigned int irq, irqreturn_t (*handler)(int , void *), irqreturn_t (*thread_fn)(int , void *), unsigned long flags, char *name, void *dev)
{
  #line 514 
  return emg_request_threaded_irq(irq,handler,thread_fn,flags,name,dev);
}

#line 563  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_nic.i.aux"
static void cif_spin_lock__xmit_lock_of_netdev_queue(spinlock_t *lock)
{
  #line 566 
  ldv_spin_model_lock((char *)"_xmit_lock_of_netdev_queue");
  #line 568 
  spin_lock(lock);
  #line 569 
  return;
}

#line 603  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_nic.i.aux"
static void cif_spin_unlock__xmit_lock_of_netdev_queue(spinlock_t *lock)
{
  #line 606 
  ldv_spin_model_unlock((char *)"_xmit_lock_of_netdev_queue");
  #line 608 
  spin_unlock(lock);
  #line 609 
  return;
}

#line 823  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_nic.i.aux"
static void cif_mutex_lock_fwreq_mutex_of_aq_nic_s_0(struct mutex *lock)
{
  #line 826 
  ldv_mutex_model_lock(lock,(char *)"fwreq_mutex_of_aq_nic_s");
  #line 827 
  return;
}

#line 830  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_nic.i.aux"
static void cif_mutex_unlock_fwreq_mutex_of_aq_nic_s_0(struct mutex *lock)
{
  #line 833 
  ldv_mutex_model_unlock(lock,(char *)"fwreq_mutex_of_aq_nic_s");
  #line 834 
  return;
}

#line 837  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_nic.i.aux"
static int cif_mod_timer(struct timer_list *timer, unsigned long expires)
{
  #line 841 
  return emg_mod_timer(timer,expires);
}

#line 845  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_nic.i.aux"
static int cif_register_netdev(struct net_device *dev)
{
  #line 849 
  return emg_register_netdev(dev);
}

#line 853  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_nic.i.aux"
static int cif_del_timer_sync(struct timer_list *timer)
{
  #line 857 
  return emg_del_timer_sync(timer);
}

#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/cmpxchg_64.h"
__inline static int arch_atomic_read_7(atomic_t *v)
{
  #line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/atomic.h"
  union __anonunion___u_9823 __u;
  #line 31 
  __read_once_size((void *)(& v->counter),(void *)(& __u.__c),4);
  #line 31 
  return (__u.__val);
}

#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/atomic-instrumented.h"
__inline static int atomic_read_7(atomic_t *v)
{
  #line 26 
  kasan_check_read((void *)v,4U);
  #line 27 
  return arch_atomic_read_7(v);
}

#line 562  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.h"
#line 793  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.c"
void hw_atl_utils_hw_chip_features_init(struct aq_hw_s *self, u32 *p);
#line 564  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.h"
#line 579  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.c"
int hw_atl_utils_mpi_read_mbox(struct aq_hw_s *self, struct hw_atl_utils_mbox_header *pmbox);
#line 574  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.h"
#line 663  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.c"
int hw_atl_utils_mpi_get_link_status(struct aq_hw_s *self);
#line 576  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.h"
#line 705  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.c"
int hw_atl_utils_get_mac_permanent(struct aq_hw_s *self, u8 *mac);
#line 601  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.h"
#line 434  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.c"
int hw_atl_write_fwsettings_dwords(struct aq_hw_s *self, u32 offset, u32 *p, u32 cnt);
#line 611  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.h"
#line 1028  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.c"
struct aq_fw_ops aq_fw_1x_ops;
#line 38  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.h"
#line 38 
u32 hw_atl_rpb_rx_dma_drop_pkt_cnt_get(struct aq_hw_s *aq_hw);
#line 41 
#line 41 
u64 hw_atl_stats_rx_dma_good_octet_counter_get(struct aq_hw_s *aq_hw);
#line 44 
#line 44 
u64 hw_atl_stats_rx_dma_good_pkt_counter_get(struct aq_hw_s *aq_hw);
#line 47 
#line 47 
u64 hw_atl_stats_tx_dma_good_octet_counter_get(struct aq_hw_s *aq_hw);
#line 50 
#line 50 
u64 hw_atl_stats_tx_dma_good_pkt_counter_get(struct aq_hw_s *aq_hw);
#line 92 
#line 92 
u32 hw_atl_reg_glb_mif_id_get(struct aq_hw_s *aq_hw);
#line 282 
#line 282 
void hw_atl_reg_glb_cpu_scratch_scp_set(struct aq_hw_s *aq_hw, u32 glb_cpu_scratch_scp, u32 scratch_scp);
#line 745 
#line 745 
void hw_atl_mcp_up_force_intr_set(struct aq_hw_s *aq_hw, u32 up_force_intr);
#line 814 
#line 814 
u32 hw_atl_sem_ram_get(struct aq_hw_s *self);
#line 823 
#line 823 
u32 hw_atl_scrpad12_get(struct aq_hw_s *self);
#line 826 
#line 826 
u32 hw_atl_scrpad25_get(struct aq_hw_s *self);
#line 55  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.c"
#line 441 
static int hw_atl_utils_ver_match(u32 ver_expected, u32 ver_actual);
#line 57 
#line 624 
static int hw_atl_utils_mpi_set_state(struct aq_hw_s *self, enum hal_atl_utils_fw_state_e state);
#line 60 
#line 999 
static u32 hw_atl_utils_get_mpi_mbox_tid(struct aq_hw_s *self);
#line 61 
#line 1008 
static u32 hw_atl_utils_mpi_get_state(struct aq_hw_s *self);
#line 62 
#line 1013 
static u32 hw_atl_utils_mif_cmd_get(struct aq_hw_s *self);
#line 63 
#line 1018 
static u32 hw_atl_utils_mif_addr_get(struct aq_hw_s *self);
#line 64 
#line 1023 
static u32 hw_atl_utils_rpc_state_get(struct aq_hw_s *self);
#line 66  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.c"
int hw_atl_utils_initfw(struct aq_hw_s *self, struct aq_fw_ops **fw_ops)
{
  #line 68 
  int err = 0;
  #line 70 
  err = hw_atl_utils_soft_reset(self);
  #line 71 
  if (err != 0) 
                #line 72 
                return err;
  #line 74 
  hw_atl_utils_hw_chip_features_init(self,& self->chip_features);
  #line 77 
  hw_atl_utils_get_fw_version(self,& self->fw_ver_actual);
  #line 79 
  if (hw_atl_utils_ver_match(17104902U,self->fw_ver_actual) == 0) 
                                                                  #line 81 
                                                                  *fw_ops = & aq_fw_1x_ops;
  else {
    #line 82 
    if (hw_atl_utils_ver_match(33554432U,self->fw_ver_actual) == 0) 
                                                                    #line 84 
                                                                    *fw_ops = & aq_fw_2x_ops;
    else {
      #line 85 
      if (hw_atl_utils_ver_match(50331648U,self->fw_ver_actual) == 0) 
        #line 87 
        *fw_ops = & aq_fw_2x_ops;
      else {
        #line 89 
        printk((char *)"\001",self->fw_ver_actual);
        #line 91 
        return -95;
      }
    }
  }
  #line 93 
  self->aq_fw_ops = *fw_ops;
  #line 94 
  err = (*((self->aq_fw_ops)->init))(self);
  #line 96 
  return err;
}

#line 99  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.c"
static int hw_atl_utils_soft_reset_flb(struct aq_hw_s *self)
{
  #line 101 
  u32 gsr;
  #line 101 
  u32 val;
  #line 102 
  int k = 0;
  #line 104 
  aq_hw_write_reg(self,1028U,16609U);
  {
    #line 105 
    unsigned long __ms = 50UL;
    #line 105 
    while (1) {
      #line 105 
      unsigned long tmp;
      #line 105 
      tmp = __ms;
      #line 105 
      __ms --;
      #line 105 
      ;
      #line 105 
      if (! (tmp != 0UL)) 
                          #line 105 
                          break;
      #line 105 
      __const_udelay(4295000UL);
    }
  }
  #line 108 
  val = aq_hw_read_reg(self,1340U);
  #line 109 
  aq_hw_write_reg(self,1340U,val | 16U);
  #line 111 
  gsr = aq_hw_read_reg(self,0U);
  #line 112 
  aq_hw_write_reg(self,0U,(gsr & 16383U) | 32768U);
  #line 115 
  aq_hw_write_reg(self,1028U,32992U);
  #line 116 
  aq_hw_write_reg(self,12968U,0U);
  #line 117 
  aq_hw_write_reg(self,1312U,1U);
  #line 120 
  val = aq_hw_read_reg(self,1340U);
  #line 121 
  aq_hw_write_reg(self,1340U,val | 16U);
  {
    #line 122 
    unsigned long __ms_0 = 10UL;
    #line 122 
    while (1) {
      #line 122 
      unsigned long tmp_0;
      #line 122 
      tmp_0 = __ms_0;
      #line 122 
      __ms_0 --;
      #line 122 
      ;
      #line 122 
      if (! (tmp_0 != 0UL)) 
                            #line 122 
                            break;
      #line 122 
      __const_udelay(4295000UL);
    }
  }
  #line 124 
  aq_hw_write_reg(self,1340U,val & 4294967279U);
  #line 126 
  aq_hw_write_reg(self,1028U,98528U);
  #line 128 
  k = 0;
  #line 128 
  while (k <= 999) {
    {
      #line 129 
      u32 flb_status = aq_hw_read_reg(self,1796U);
      #line 132 
      flb_status &= 16U;
      #line 133 
      if (flb_status != 0U) 
                            #line 134 
                            break;
      {
        #line 135 
        unsigned long __ms_1 = 10UL;
        #line 135 
        while (1) {
          #line 135 
          unsigned long tmp_2;
          #line 135 
          tmp_2 = __ms_1;
          #line 135 
          __ms_1 --;
          #line 135 
          ;
          #line 135 
          if (! (tmp_2 != 0UL)) 
                                #line 135 
                                break;
          #line 135 
          __const_udelay(4295000UL);
        }
      }
    }
    #line 128 
    k ++;
  }
  #line 137 
  if (k == 1000) {
    #line 138 
    printk((char *)"\001");
    #line 139 
    return -5;
  }
  #line 143 
  aq_hw_write_reg(self,1028U,32992U);
  {
    #line 144 
    unsigned long __ms_2 = 50UL;
    #line 144 
    while (1) {
      #line 144 
      unsigned long tmp_3;
      #line 144 
      tmp_3 = __ms_2;
      #line 144 
      __ms_2 --;
      #line 144 
      ;
      #line 144 
      if (! (tmp_3 != 0UL)) 
                            #line 144 
                            break;
      #line 144 
      __const_udelay(4295000UL);
    }
  }
  #line 145 
  aq_hw_write_reg(self,928U,1U);
  #line 150 
  hw_atl_rx_rx_reg_res_dis_set(self,0U);
  #line 151 
  hw_atl_tx_tx_reg_res_dis_set(self,0U);
  #line 152 
  aq_hw_write_reg_bit(self,16384U,536870912U,29U,0U);
  #line 155 
  gsr = aq_hw_read_reg(self,0U);
  #line 156 
  aq_hw_write_reg(self,0U,(gsr & 16383U) | 32768U);
  #line 158 
  k = 0;
  #line 158 
  while (k <= 999) {
    {
      #line 159 
      u32 fw_state = aq_hw_read_reg(self,24U);
      #line 161 
      if (fw_state != 0U) 
                          #line 162 
                          break;
      {
        #line 163 
        unsigned long __ms_3 = 10UL;
        #line 163 
        while (1) {
          #line 163 
          unsigned long tmp_5;
          #line 163 
          tmp_5 = __ms_3;
          #line 163 
          __ms_3 --;
          #line 163 
          ;
          #line 163 
          if (! (tmp_5 != 0UL)) 
                                #line 163 
                                break;
          #line 163 
          __const_udelay(4295000UL);
        }
      }
    }
    #line 158 
    k ++;
  }
  #line 165 
  if (k == 1000) {
    #line 166 
    printk((char *)"\001");
    #line 167 
    return -5;
  }
  {
    #line 170 
    unsigned long __ms_4 = 15UL;
    #line 170 
    while (1) {
      #line 170 
      unsigned long tmp_6;
      #line 170 
      tmp_6 = __ms_4;
      #line 170 
      __ms_4 --;
      #line 170 
      ;
      #line 170 
      if (! (tmp_6 != 0UL)) 
                            #line 170 
                            break;
      #line 170 
      __const_udelay(4295000UL);
    }
  }
  #line 172 
  return 0;
}

#line 175  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.c"
static int hw_atl_utils_soft_reset_rbl(struct aq_hw_s *self)
{
  #line 177 
  u32 gsr;
  #line 177 
  u32 val;
  #line 177 
  u32 rbl_status;
  #line 178 
  int k;
  #line 180 
  aq_hw_write_reg(self,1028U,16609U);
  #line 181 
  aq_hw_write_reg(self,928U,1U);
  #line 182 
  aq_hw_write_reg(self,12968U,0U);
  #line 185 
  aq_hw_write_reg(self,904U,57005U);
  #line 188 
  val = aq_hw_read_reg(self,1340U);
  #line 189 
  aq_hw_write_reg(self,1340U,val | 16U);
  #line 192 
  hw_atl_rx_rx_reg_res_dis_set(self,0U);
  #line 193 
  hw_atl_tx_tx_reg_res_dis_set(self,0U);
  #line 194 
  aq_hw_write_reg_bit(self,16384U,536870912U,29U,0U);
  #line 197 
  gsr = aq_hw_read_reg(self,0U);
  #line 198 
  aq_hw_write_reg(self,0U,(gsr & 4294918143U) | 32768U);
  #line 204 
  aq_hw_write_reg(self,1028U,16608U);
  #line 207 
  k = 0;
  #line 207 
  while (k <= 999) {
    {
      #line 208 
      rbl_status = aq_hw_read_reg(self,904U) & 65535U;
      #line 209 
      if (rbl_status != 0U && rbl_status != 57005U) 
                                                    #line 210 
                                                    break;
      {
        #line 211 
        unsigned long __ms = 10UL;
        #line 211 
        while (1) {
          #line 211 
          unsigned long tmp_0;
          #line 211 
          tmp_0 = __ms;
          #line 211 
          __ms --;
          #line 211 
          ;
          #line 211 
          if (! (tmp_0 != 0UL)) 
                                #line 211 
                                break;
          #line 211 
          __const_udelay(4295000UL);
        }
      }
    }
    #line 207 
    k ++;
  }
  #line 213 
  if (rbl_status == 0U || rbl_status == 57005U) {
    #line 214 
    printk((char *)"\001");
    #line 215 
    return -5;
  }
  #line 222 
  if (rbl_status == 61863U) {
    #line 223 
    printk((char *)"\001");
    #line 224 
    return -524;
  }
  #line 227 
  k = 0;
  #line 227 
  while (k <= 999) {
    {
      #line 228 
      u32 fw_state = aq_hw_read_reg(self,24U);
      #line 230 
      if (fw_state != 0U) 
                          #line 231 
                          break;
      {
        #line 232 
        unsigned long __ms_0 = 10UL;
        #line 232 
        while (1) {
          #line 232 
          unsigned long tmp_2;
          #line 232 
          tmp_2 = __ms_0;
          #line 232 
          __ms_0 --;
          #line 232 
          ;
          #line 232 
          if (! (tmp_2 != 0UL)) 
                                #line 232 
                                break;
          #line 232 
          __const_udelay(4295000UL);
        }
      }
    }
    #line 227 
    k ++;
  }
  #line 234 
  if (k == 1000) {
    #line 235 
    printk((char *)"\001");
    #line 236 
    return -5;
  }
  {
    #line 239 
    unsigned long __ms_1 = 15UL;
    #line 239 
    while (1) {
      #line 239 
      unsigned long tmp_3;
      #line 239 
      tmp_3 = __ms_1;
      #line 239 
      __ms_1 --;
      #line 239 
      ;
      #line 239 
      if (! (tmp_3 != 0UL)) 
                            #line 239 
                            break;
      #line 239 
      __const_udelay(4295000UL);
    }
  }
  #line 241 
  return 0;
}

#line 244  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.c"
int hw_atl_utils_soft_reset(struct aq_hw_s *self)
{
  #line 247 
  u32 val;
  #line 248 
  int k;
  #line 246 
  u32 boot_exit_code = 0U;
  #line 250 
  k = 0;
  #line 250 
  while (k <= 999) {
    {
      #line 251 
      u32 flb_status = aq_hw_read_reg(self,1796U);
      #line 253 
      boot_exit_code = aq_hw_read_reg(self,904U);
      #line 255 
      if (flb_status != 100663296U || boot_exit_code != 0U) 
                                                            #line 256 
                                                            break;
    }
    #line 250 
    k ++;
  }
  #line 259 
  if (k == 1000) {
    #line 260 
    printk((char *)"\001");
    #line 261 
    return -95;
  }
  #line 264 
  self->rbl_enabled = (unsigned char)(boot_exit_code != 0U);
  #line 269 
  if (hw_atl_utils_ver_match(17104902U,aq_hw_read_reg(self,24U)) == 0) {
    #line 275 
    int tmp_4;
    #line 272 
    int err = 0;
    #line 274 
    hw_atl_utils_mpi_set_state(self,(enum hal_atl_utils_fw_state_e)MPI_DEINIT);
    {
      #line 275 
      u64 __timeout_us = 10000ULL;
      #line 275 
      unsigned long __delay_us = 10UL;
      #line 275 
      ;
      #line 275 
      ktime_t __timeout = ktime_add_us(ktime_get(),__timeout_us);
      #line 275 
      while (1) {
        #line 275 
        val = hw_atl_utils_mpi_get_state(self);
        #line 275 
        if ((val & 255U) == 0U) 
                                #line 275 
                                break;
        #line 275 
        if (__timeout_us != 0ULL) {
          #line 275 
          ;
          #line 275 
          if (ktime_compare(ktime_get(),__timeout) > 0) {
            #line 275 
            val = hw_atl_utils_mpi_get_state(self);
            #line 275 
            break;
          }
        }
        #line 275 
        if (__delay_us != 0UL) 
          #line 275 
          if (0 != 0) 
            #line 275 
            if (__delay_us > 19999UL) 
                                      #line 275 
                                      __bad_udelay(); else 
                                                           #line 275 
                                                           __const_udelay(__delay_us * 4295UL);
          else 
               #line 275 
               __udelay(__delay_us);
      }
      #line 275 
      if ((val & 255U) == 0U) 
                              #line 275 
                              tmp_4 = 0; else 
                                              #line 275 
                                              tmp_4 = -110;
      }
    #line 275 
    err = tmp_4;
    #line 280 
    if (err != 0) 
                  #line 281 
                  return err;
  }
  #line 284 
  if ((unsigned int)self->rbl_enabled != 0U) {
    #line 285 
    return hw_atl_utils_soft_reset_rbl(self);
  }
  else {
    #line 287 
    return hw_atl_utils_soft_reset_flb(self);
  }
}

#line 290  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.c"
int hw_atl_utils_fw_downld_dwords(struct aq_hw_s *self, u32 a, u32 *p, u32 cnt)
{
  #line 296 
  int tmp_3;
  #line 294 
  u32 val;
  #line 293 
  int err = 0;
  {
    #line 296 
    u64 __timeout_us = 10000ULL;
    #line 296 
    unsigned long __delay_us = 1UL;
    #line 296 
    ;
    #line 296 
    ktime_t __timeout = ktime_add_us(ktime_get(),__timeout_us);
    #line 296 
    while (1) {
      #line 296 
      val = hw_atl_sem_ram_get(self);
      #line 296 
      if (val == 1U) 
                     #line 296 
                     break;
      #line 296 
      if (__timeout_us != 0ULL) {
        #line 296 
        ;
        #line 296 
        if (ktime_compare(ktime_get(),__timeout) > 0) {
          #line 296 
          val = hw_atl_sem_ram_get(self);
          #line 296 
          break;
        }
      }
      #line 296 
      if (__delay_us != 0UL) 
        #line 296 
        if (0 != 0) 
          #line 296 
          if (__delay_us > 19999UL) 
                                    #line 296 
                                    __bad_udelay(); else 
                                                         #line 296 
                                                         __const_udelay(__delay_us * 4295UL);
        else 
             #line 296 
             __udelay(__delay_us);
    }
    #line 296 
    if (val == 1U) 
                   #line 296 
                   tmp_3 = 0; else 
                                   #line 296 
                                   tmp_3 = -110;
    }
  #line 296 
  err = tmp_3;
  #line 300 
  if (err < 0) {
    #line 301 
    bool is_locked;
    #line 303 
    hw_atl_reg_glb_cpu_sem_set(self,1U,2U);
    #line 304 
    is_locked = (_Bool)(hw_atl_sem_ram_get(self) != 0U);
    #line 305 
    if (! is_locked) {
      #line 306 
      err = -62;
      #line 307 
      goto err_exit;
    }
  }
  #line 311 
  aq_hw_write_reg(self,520U,a);
  #line 313 
  cnt ++;
  #line 313 
  while (1) {
    #line 313 
    cnt --;
    #line 313 
    if (cnt != 0U) {
      #line 313 
      if (! (err == 0)) 
                        #line 313 
                        break;
    }
    else 
         #line 313 
         break;
    {
      #line 326 
      u32 *tmp_18;
      #line 314 
      aq_hw_write_reg(self,512U,32768U);
      #line 316 
      if ((self->chip_features & 67108864U) != 0U) {
        #line 317 
        int tmp_10;
        {
          #line 317 
          u64 __timeout_us_0 = 1000ULL;
          #line 317 
          unsigned long __delay_us_0 = 1UL;
          #line 317 
          ;
          #line 317 
          ktime_t __timeout_0 = ktime_add_us(ktime_get(),__timeout_us_0);
          #line 317 
          while (1) {
            #line 317 
            val = hw_atl_utils_mif_addr_get(self);
            #line 317 
            if (val != a) 
                          #line 317 
                          break;
            #line 317 
            if (__timeout_us_0 != 0ULL) {
              #line 317 
              ;
              #line 317 
              if (ktime_compare(ktime_get(),__timeout_0) > 0) {
                #line 317 
                val = hw_atl_utils_mif_addr_get(self);
                #line 317 
                break;
              }
            }
            #line 317 
            if (__delay_us_0 != 0UL) 
              #line 317 
              if (0 != 0) 
                #line 317 
                if (__delay_us_0 > 19999UL) 
                                            #line 317 
                                            __bad_udelay(); else 
                                                                 #line 317 
                                                                 __const_udelay(__delay_us_0 * 4295UL);
              else 
                   #line 317 
                   __udelay(__delay_us_0);
          }
          #line 317 
          if (val != a) 
                        #line 317 
                        tmp_10 = 0; else 
                                         #line 317 
                                         tmp_10 = -110;
          }
        #line 317 
        err = tmp_10;
      }
      else {
        #line 321 
        int tmp_16;
        {
          #line 321 
          u64 __timeout_us_1 = 1000ULL;
          #line 321 
          unsigned long __delay_us_1 = 1UL;
          #line 321 
          ;
          #line 321 
          ktime_t __timeout_1 = ktime_add_us(ktime_get(),__timeout_us_1);
          #line 321 
          while (1) {
            #line 321 
            val = hw_atl_utils_mif_cmd_get(self);
            #line 321 
            if ((val & 256U) == 0U) 
                                    #line 321 
                                    break;
            #line 321 
            if (__timeout_us_1 != 0ULL) {
              #line 321 
              ;
              #line 321 
              if (ktime_compare(ktime_get(),__timeout_1) > 0) {
                #line 321 
                val = hw_atl_utils_mif_cmd_get(self);
                #line 321 
                break;
              }
            }
            #line 321 
            if (__delay_us_1 != 0UL) 
              #line 321 
              if (0 != 0) 
                #line 321 
                if (__delay_us_1 > 19999UL) 
                                            #line 321 
                                            __bad_udelay(); else 
                                                                 #line 321 
                                                                 __const_udelay(__delay_us_1 * 4295UL);
              else 
                   #line 321 
                   __udelay(__delay_us_1);
          }
          #line 321 
          if ((val & 256U) == 0U) 
                                  #line 321 
                                  tmp_16 = 0; else 
                                                   #line 321 
                                                   tmp_16 = -110;
          }
        #line 321 
        err = tmp_16;
      }
      #line 326 
      tmp_18 = p;
      #line 326 
      p ++;
      #line 326 
      *tmp_18 = aq_hw_read_reg(self,524U);
      #line 327 
      a += 4U;
    }
  }
  #line 330 
  hw_atl_reg_glb_cpu_sem_set(self,1U,2U);
  #line 332 
  err_exit: 
            #line 332 
  ;
  #line 333 
  return err;
}

#line 336  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.c"
static int hw_atl_utils_write_b1_mbox(struct aq_hw_s *self, u32 addr, u32 *p, u32 cnt, enum mcp_area area)
{
  #line 342 
  u32 val;
  #line 339 
  u32 data_offset = 0U;
  #line 340 
  u32 offset = addr;
  #line 341 
  int err = 0;
  #line 344 
  switch ((unsigned int)area) {
    #line 345 
    case -2147483648: 
                      #line 345 
    ;
    #line 346 
    offset -= self->rpc_addr;
    #line 347 
    break;
    #line 349 
    case (unsigned int)536870912: 
                                  #line 349 
    ;
    #line 350 
    offset -= self->settings_addr;
    #line 351 
    break;
  }
  #line 354 
  offset /= 4U;
  #line 356 
  while (data_offset < cnt) {
    {
      #line 362 
      int tmp_3;
      #line 357 
      aq_hw_write_reg(self,808U,*(p + (unsigned long)data_offset));
      #line 358 
      aq_hw_write_reg(self,812U,(offset * 4U & 65535U) | (unsigned int)area);
      #line 360 
      hw_atl_mcp_up_force_intr_set(self,1U);
      {
        #line 362 
        u64 __timeout_us = 10000ULL;
        #line 362 
        unsigned long __delay_us = 10UL;
        #line 362 
        ;
        #line 362 
        ktime_t __timeout = ktime_add_us(ktime_get(),__timeout_us);
        #line 362 
        while (1) {
          #line 362 
          val = hw_atl_scrpad12_get(self);
          #line 362 
          if ((val & 4026531840U) != (unsigned int)area) 
                                                         #line 362 
                                                         break;
          #line 362 
          if (__timeout_us != 0ULL) {
            #line 362 
            ;
            #line 362 
            if (ktime_compare(ktime_get(),__timeout) > 0) {
              #line 362 
              val = hw_atl_scrpad12_get(self);
              #line 362 
              break;
            }
          }
          #line 362 
          if (__delay_us != 0UL) 
            #line 362 
            if (0 != 0) 
              #line 362 
              if (__delay_us > 19999UL) 
                                        #line 362 
                                        __bad_udelay(); else 
                                                             #line 362 
                                                             __const_udelay(__delay_us * 4295UL);
            else 
                 #line 362 
                 __udelay(__delay_us);
        }
        #line 362 
        if ((val & 4026531840U) != (unsigned int)area) 
                                                       #line 362 
                                                       tmp_3 = 0; else 
                                                                    #line 362 
                                                                    tmp_3 = -110;
        }
      #line 362 
      err = tmp_3;
      #line 368 
      if (err < 0) 
                   #line 369 
                   break;
    }
    #line 356 
    data_offset ++;
    #line 356 
    offset ++;
  }
  #line 372 
  return err;
}

#line 375  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.c"
static int hw_atl_utils_write_b0_mbox(struct aq_hw_s *self, u32 addr, u32 *p, u32 cnt)
{
  #line 380 
  u32 val;
  #line 378 
  u32 offset = 0U;
  #line 379 
  int err = 0;
  #line 382 
  aq_hw_write_reg(self,520U,addr);
  #line 384 
  while (offset < cnt) {
    {
      #line 388 
      int tmp_3;
      #line 385 
      aq_hw_write_reg(self,524U,*(p + (unsigned long)offset));
      #line 386 
      aq_hw_write_reg(self,512U,49152U);
      {
        #line 388 
        u64 __timeout_us = 10000ULL;
        #line 388 
        unsigned long __delay_us = 10UL;
        #line 388 
        ;
        #line 388 
        ktime_t __timeout = ktime_add_us(ktime_get(),__timeout_us);
        #line 388 
        while (1) {
          #line 388 
          val = hw_atl_utils_mif_cmd_get(self);
          #line 388 
          if ((val & 256U) == 0U) 
                                  #line 388 
                                  break;
          #line 388 
          if (__timeout_us != 0ULL) {
            #line 388 
            ;
            #line 388 
            if (ktime_compare(ktime_get(),__timeout) > 0) {
              #line 388 
              val = hw_atl_utils_mif_cmd_get(self);
              #line 388 
              break;
            }
          }
          #line 388 
          if (__delay_us != 0UL) 
            #line 388 
            if (0 != 0) 
              #line 388 
              if (__delay_us > 19999UL) 
                                        #line 388 
                                        __bad_udelay(); else 
                                                             #line 388 
                                                             __const_udelay(__delay_us * 4295UL);
            else 
                 #line 388 
                 __udelay(__delay_us);
        }
        #line 388 
        if ((val & 256U) == 0U) 
                                #line 388 
                                tmp_3 = 0; else 
                                                #line 388 
                                                tmp_3 = -110;
        }
      #line 388 
      err = tmp_3;
      #line 393 
      if (err < 0) 
                   #line 394 
                   break;
    }
    #line 384 
    offset ++;
  }
  #line 397 
  return err;
}

#line 400  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.c"
static int hw_atl_utils_fw_upload_dwords(struct aq_hw_s *self, u32 addr, u32 *p, u32 cnt, enum mcp_area area)
{
  #line 406 
  int tmp_3;
  #line 404 
  u32 val;
  #line 403 
  int err = 0;
  {
    #line 406 
    u64 __timeout_us = 100000ULL;
    #line 406 
    unsigned long __delay_us = 10UL;
    #line 406 
    ;
    #line 406 
    ktime_t __timeout = ktime_add_us(ktime_get(),__timeout_us);
    #line 406 
    while (1) {
      #line 406 
      val = hw_atl_sem_ram_get(self);
      #line 406 
      if (val == 1U) 
                     #line 406 
                     break;
      #line 406 
      if (__timeout_us != 0ULL) {
        #line 406 
        ;
        #line 406 
        if (ktime_compare(ktime_get(),__timeout) > 0) {
          #line 406 
          val = hw_atl_sem_ram_get(self);
          #line 406 
          break;
        }
      }
      #line 406 
      if (__delay_us != 0UL) 
        #line 406 
        if (0 != 0) 
          #line 406 
          if (__delay_us > 19999UL) 
                                    #line 406 
                                    __bad_udelay(); else 
                                                         #line 406 
                                                         __const_udelay(__delay_us * 4295UL);
        else 
             #line 406 
             __udelay(__delay_us);
    }
    #line 406 
    if (val == 1U) 
                   #line 406 
                   tmp_3 = 0; else 
                                   #line 406 
                                   tmp_3 = -110;
    }
  #line 406 
  err = tmp_3;
  #line 409 
  if (err < 0) 
               #line 410 
               goto err_exit;
  #line 412 
  if ((self->chip_features & 67108864U) != 0U) 
                                               #line 413 
                                               err = hw_atl_utils_write_b1_mbox(self,addr,p,cnt,area); else 
                                                                    #line 415 
                                                                    err = hw_atl_utils_write_b0_mbox(self,addr,p,cnt);
  #line 417 
  hw_atl_reg_glb_cpu_sem_set(self,1U,2U);
  #line 419 
  if (err < 0) 
               #line 420 
               goto err_exit;
  #line 422 
  err = aq_hw_err_from_flags(self);
  #line 424 
  err_exit: 
            #line 424 
  ;
  #line 425 
  return err;
}

#line 428  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.c"
int hw_atl_write_fwcfg_dwords(struct aq_hw_s *self, u32 *p, u32 cnt)
{
  #line 430 
  return hw_atl_utils_fw_upload_dwords(self,self->rpc_addr,p,cnt,
                                    (enum mcp_area)MCP_AREA_CONFIG);
}

#line 434  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.c"
int hw_atl_write_fwsettings_dwords(struct aq_hw_s *self, u32 offset, u32 *p, u32 cnt)
{
  #line 437 
  return hw_atl_utils_fw_upload_dwords(self,self->settings_addr + offset,p,cnt,
                                    (enum mcp_area)MCP_AREA_SETTINGS);
}

#line 441  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.c"
static int hw_atl_utils_ver_match(u32 ver_expected, u32 ver_actual)
{
  #line 443 
  u32 dw_major_mask = 4278190080U;
  #line 444 
  u32 dw_minor_mask = 16777215U;
  #line 445 
  int err = 0;
  #line 447 
  if (((ver_expected ^ ver_actual) & 4278190080U) != 0U) 
                                                         #line 447 
                                                         err = -95; else 
                                                                    #line 447 
                                                                    err = 0;
  #line 448 
  if (err < 0) 
               #line 449 
               goto err_exit;
  #line 450 
  if ((ver_expected & 16777215U) > (ver_actual & 16777215U)) 
                                                             #line 450 
                                                             err = -95; else 
                                                                    #line 450 
                                                                    err = 0;
  #line 453 
  err_exit: 
            #line 453 
  ;
  #line 454 
  return err;
}

#line 457  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.c"
static int hw_atl_utils_init_ucp(struct aq_hw_s *self, struct aq_hw_caps_s *aq_hw_caps)
{
  #line 475 
  int tmp_4;
  #line 460 
  int err = 0;
  #line 462 
  if (aq_hw_read_reg(self,880U) == 0U) {
    #line 463 
    unsigned int rnd = 0U;
    #line 464 
    unsigned int ucp_0x370 = 0U;
    #line 466 
    get_random_bytes((void *)(& rnd),4);
    #line 468 
    ucp_0x370 = (rnd & 4244438268U) | 33686018U;
    #line 469 
    aq_hw_write_reg(self,880U,ucp_0x370);
  }
  #line 472 
  hw_atl_reg_glb_cpu_scratch_scp_set(self,0U,25U);
  {
    #line 475 
    u64 __timeout_us = 10000ULL;
    #line 475 
    unsigned long __delay_us = 1000UL;
    #line 475 
    ;
    #line 475 
    ktime_t __timeout = ktime_add_us(ktime_get(),__timeout_us);
    #line 475 
    while (1) {
      #line 475 
      self->mbox_addr = hw_atl_scrpad25_get(self);
      #line 475 
      if (self->mbox_addr != 0U) 
                                 #line 475 
                                 break;
      #line 475 
      if (__timeout_us != 0ULL) {
        #line 475 
        ;
        #line 475 
        if (ktime_compare(ktime_get(),__timeout) > 0) {
          #line 475 
          self->mbox_addr = hw_atl_scrpad25_get(self);
          #line 475 
          break;
        }
      }
      #line 475 
      if (__delay_us != 0UL) 
        #line 475 
        if (0 != 0) 
          #line 475 
          if (__delay_us > 19999UL) 
                                    #line 475 
                                    __bad_udelay(); else 
                                                         #line 475 
                                                         __const_udelay(__delay_us * 4295UL);
        else 
             #line 475 
             __udelay(__delay_us);
    }
    #line 475 
    if (self->mbox_addr != 0U) 
                               #line 475 
                               tmp_4 = 0; else 
                                               #line 475 
                                               tmp_4 = -110;
    }
  #line 475 
  err = tmp_4;
  #line 480 
  return err;
}

#line 495  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.c"
int hw_atl_utils_fw_rpc_call(struct aq_hw_s *self, unsigned int rpc_size)
{
  #line 497 
  struct aq_hw_atl_utils_fw_rpc_tid_s sw;
  #line 498 
  int err = 0;
  #line 500 
  if ((self->chip_features & 1U) == 0U) {
    #line 501 
    err = -1;
    #line 502 
    goto err_exit;
  }
  #line 504 
  err = hw_atl_write_fwcfg_dwords(self,(u32 *)(& self->rpc),(unsigned int)(((unsigned long)rpc_size + 3UL) / 4UL));
  #line 507 
  if (err < 0) 
               #line 508 
               goto err_exit;
  #line 510 
  (self->rpc_tid) ++;
  #line 510 
  sw.__anonCompField_aq_hw_atl_utils_fw_rpc_tid_s_167.__anonCompField___anonunion_10461_166.tid = (unsigned short)self->rpc_tid;
  #line 511 
  sw.__anonCompField_aq_hw_atl_utils_fw_rpc_tid_s_167.__anonCompField___anonunion_10461_166.len = (unsigned short)rpc_size;
  #line 512 
  aq_hw_write_reg(self,824U,sw.__anonCompField_aq_hw_atl_utils_fw_rpc_tid_s_167.val);
  #line 514 
  err_exit: 
            #line 514 
  ;
  #line 515 
  return err;
}

#line 518  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.c"
int hw_atl_utils_fw_rpc_wait(struct aq_hw_s *self, struct hw_atl_utils_fw_rpc **rpc)
{
  #line 521 
  struct aq_hw_atl_utils_fw_rpc_tid_s sw;
  #line 522 
  struct aq_hw_atl_utils_fw_rpc_tid_s fw;
  #line 523 
  int err = 0;
  #line 525 
  while (1) {
    {
      #line 530 
      int tmp_3;
      #line 526 
      sw.__anonCompField_aq_hw_atl_utils_fw_rpc_tid_s_167.val = aq_hw_read_reg(self,824U);
      #line 528 
      self->rpc_tid = (unsigned int)sw.__anonCompField_aq_hw_atl_utils_fw_rpc_tid_s_167.__anonCompField___anonunion_10461_166.tid;
      {
        #line 530 
        u64 __timeout_us = 100000ULL;
        #line 530 
        unsigned long __delay_us = 1000UL;
        #line 530 
        ;
        #line 530 
        ktime_t __timeout = ktime_add_us(ktime_get(),__timeout_us);
        #line 530 
        while (1) {
          #line 530 
          fw.__anonCompField_aq_hw_atl_utils_fw_rpc_tid_s_167.val = hw_atl_utils_rpc_state_get(self);
          #line 530 
          if ((int)sw.__anonCompField_aq_hw_atl_utils_fw_rpc_tid_s_167.__anonCompField___anonunion_10461_166.tid == (int)fw.__anonCompField_aq_hw_atl_utils_fw_rpc_tid_s_167.__anonCompField___anonunion_10461_166.tid) 
            #line 530 
            break;
          #line 530 
          if (__timeout_us != 0ULL) {
            #line 530 
            ;
            #line 530 
            if (ktime_compare(ktime_get(),__timeout) > 0) {
              #line 530 
              fw.__anonCompField_aq_hw_atl_utils_fw_rpc_tid_s_167.val = hw_atl_utils_rpc_state_get(self);
              #line 530 
              break;
            }
          }
          #line 530 
          if (__delay_us != 0UL) 
            #line 530 
            if (0 != 0) 
              #line 530 
              if (__delay_us > 19999UL) 
                                        #line 530 
                                        __bad_udelay(); else 
                                                             #line 530 
                                                             __const_udelay(__delay_us * 4295UL);
            else 
                 #line 530 
                 __udelay(__delay_us);
        }
        #line 530 
        if ((int)sw.__anonCompField_aq_hw_atl_utils_fw_rpc_tid_s_167.__anonCompField___anonunion_10461_166.tid == (int)fw.__anonCompField_aq_hw_atl_utils_fw_rpc_tid_s_167.__anonCompField___anonunion_10461_166.tid) 
          #line 530 
          tmp_3 = 0; else 
                          #line 530 
                          tmp_3 = -110;
        }
      #line 530 
      err = tmp_3;
      #line 535 
      if ((unsigned int)fw.__anonCompField_aq_hw_atl_utils_fw_rpc_tid_s_167.__anonCompField___anonunion_10461_166.len == 65535U) {
        #line 536 
        err = hw_atl_utils_fw_rpc_call(self,(unsigned int)sw.__anonCompField_aq_hw_atl_utils_fw_rpc_tid_s_167.__anonCompField___anonunion_10461_166.len);
        #line 537 
        if (err < 0) 
                     #line 538 
                     goto err_exit;
      }
    }
    #line 541 
    if (! ((int)sw.__anonCompField_aq_hw_atl_utils_fw_rpc_tid_s_167.__anonCompField___anonunion_10461_166.tid != (int)fw.__anonCompField_aq_hw_atl_utils_fw_rpc_tid_s_167.__anonCompField___anonunion_10461_166.tid || (unsigned int)fw.__anonCompField_aq_hw_atl_utils_fw_rpc_tid_s_167.__anonCompField___anonunion_10461_166.len == 65535U)) 
      #line 525 
      break;
  }
  #line 542 
  if (rpc != (struct hw_atl_utils_fw_rpc **)0) {
    #line 543 
    if ((unsigned int)fw.__anonCompField_aq_hw_atl_utils_fw_rpc_tid_s_167.__anonCompField___anonunion_10461_166.len != 0U) {
      #line 544 
      err = hw_atl_utils_fw_downld_dwords(self,self->rpc_addr,(u32 *)(& self->rpc),(unsigned int)(((unsigned long)fw.__anonCompField_aq_hw_atl_utils_fw_rpc_tid_s_167.__anonCompField___anonunion_10461_166.len + 3UL) / 4UL));
      #line 552 
      if (err < 0) 
                   #line 553 
                   goto err_exit;
    }
    #line 556 
    *rpc = & self->rpc;
  }
  #line 559 
  err_exit: 
            #line 559 
  ;
  #line 560 
  return err;
}

#line 563  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.c"
static int hw_atl_utils_mpi_create(struct aq_hw_s *self)
{
  #line 565 
  int err = 0;
  #line 567 
  err = hw_atl_utils_init_ucp(self,(self->aq_nic_cfg)->aq_hw_caps);
  #line 568 
  if (err < 0) 
               #line 569 
               goto err_exit;
  #line 571 
  err = hw_atl_utils_fw_rpc_wait(self,(struct hw_atl_utils_fw_rpc **)0);
  #line 572 
  if (err < 0) 
               #line 573 
               goto err_exit;
  #line 575 
  err_exit: 
            #line 575 
  ;
  #line 576 
  return err;
}

#line 579  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.c"
int hw_atl_utils_mpi_read_mbox(struct aq_hw_s *self, struct hw_atl_utils_mbox_header *pmbox)
{
  #line 582 
  return hw_atl_utils_fw_downld_dwords(self,self->mbox_addr,(u32 *)pmbox,3U);
}

#line 588  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.c"
void hw_atl_utils_mpi_read_stats(struct aq_hw_s *self, struct hw_atl_utils_mbox *pmbox)
{
  #line 591 
  int err = 0;
  #line 593 
  err = hw_atl_utils_fw_downld_dwords(self,self->mbox_addr,(u32 *)pmbox,93U);
  #line 597 
  if (err < 0) 
               #line 598 
               goto err_exit;
  #line 600 
  if ((self->chip_features & 16777216U) != 0U) {
    #line 601 
    unsigned int tmp;
    #line 601 
    if (self->aq_nic_cfg != (struct aq_nic_cfg_s *)0) 
                                                      #line 601 
                                                      tmp = (self->aq_nic_cfg)->mtu; else 
                                                                    #line 601 
                                                                    tmp = 1514U;
    #line 601 
    unsigned int mtu = tmp;
    #line 603 
    pmbox->stats.ubrc = pmbox->stats.uprc * mtu;
    #line 604 
    pmbox->stats.ubtc = pmbox->stats.uptc * mtu;
    #line 605 
    pmbox->stats.dpc = (unsigned int)atomic_read_7(& self->dpc);
  }
  else 
       #line 607 
       pmbox->stats.dpc = hw_atl_rpb_rx_dma_drop_pkt_cnt_get(self);
  #line 610 
  err_exit: 
            #line 610 
  ;
  #line 611 
  return;
}

#line 613  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.c"
static int hw_atl_utils_mpi_set_speed(struct aq_hw_s *self, u32 speed)
{
  #line 615 
  u32 val = aq_hw_read_reg(self,872U);
  #line 617 
  val &= 4278255615U;
  #line 618 
  val = (speed << 16U) | val;
  #line 619 
  aq_hw_write_reg(self,872U,val);
  #line 621 
  return 0;
}

#line 624  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.c"
static int hw_atl_utils_mpi_set_state(struct aq_hw_s *self, enum hal_atl_utils_fw_state_e state)
{
  #line 628 
  struct hw_atl_utils_mbox_header mbox;
  #line 627 
  u32 val = aq_hw_read_reg(self,872U);
  #line 629 
  u32 transaction_id = 0U;
  #line 630 
  int err = 0;
  #line 632 
  if (state == (unsigned int)MPI_RESET) {
    #line 637 
    int tmp_4;
    #line 633 
    hw_atl_utils_mpi_read_mbox(self,& mbox);
    #line 635 
    transaction_id = mbox.transaction_id;
    {
      #line 637 
      u64 __timeout_us = 100000ULL;
      #line 637 
      unsigned long __delay_us = 1000UL;
      #line 637 
      ;
      #line 637 
      ktime_t __timeout = ktime_add_us(ktime_get(),__timeout_us);
      #line 637 
      while (1) {
        #line 637 
        mbox.transaction_id = hw_atl_utils_get_mpi_mbox_tid(self);
        #line 637 
        if (mbox.transaction_id != transaction_id) 
                                                   #line 637 
                                                   break;
        #line 637 
        if (__timeout_us != 0ULL) {
          #line 637 
          ;
          #line 637 
          if (ktime_compare(ktime_get(),__timeout) > 0) {
            #line 637 
            mbox.transaction_id = hw_atl_utils_get_mpi_mbox_tid(self);
            #line 637 
            break;
          }
        }
        #line 637 
        if (__delay_us != 0UL) 
          #line 637 
          if (0 != 0) 
            #line 637 
            if (__delay_us > 19999UL) 
                                      #line 637 
                                      __bad_udelay(); else 
                                                           #line 637 
                                                           __const_udelay(__delay_us * 4295UL);
          else 
               #line 637 
               __udelay(__delay_us);
      }
      #line 637 
      if (mbox.transaction_id != transaction_id) 
                                                 #line 637 
                                                 tmp_4 = 0; else 
                                                                 #line 637 
                                                                 tmp_4 = -110;
      }
    #line 637 
    err = tmp_4;
    #line 642 
    if (err < 0) 
                 #line 643 
                 goto err_exit;
  }
  #line 648 
  if (state == (unsigned int)MPI_DEINIT || state == (unsigned int)MPI_POWER) 
    #line 649 
    val |= 33554432U; else 
                           #line 651 
                           val &= 4261412863U;
  #line 654 
  val &= 4294967040U;
  #line 655 
  val = ((unsigned int)state & 255U) | val;
  #line 657 
  aq_hw_write_reg(self,872U,val);
  #line 659 
  err_exit: 
            #line 659 
  ;
  #line 660 
  return err;
}

#line 663  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.c"
int hw_atl_utils_mpi_get_link_status(struct aq_hw_s *self)
{
  #line 666 
  u32 mpi_state;
  #line 667 
  u32 speed;
  #line 665 
  struct aq_hw_link_status_s *link_status = & self->aq_link_status;
  #line 669 
  mpi_state = hw_atl_utils_mpi_get_state(self);
  #line 670 
  speed = mpi_state >> 16U;
  #line 672 
  if (speed == 0U) 
                   #line 673 
                   link_status->mbps = 0U;
  else 
    #line 675 
    switch (speed) {
      #line 676 
      case (u32)1: 
                   #line 676 
      ;
      #line 677 
      link_status->mbps = 10000U;
      #line 678 
      break;
      #line 680 
      case (u32)2: 
                   #line 680 
      ;
      #line 681 
      case (u32)4: 
                   #line 681 
      ;
      #line 682 
      link_status->mbps = 5000U;
      #line 683 
      break;
      #line 685 
      case (u32)8: 
                   #line 685 
      ;
      #line 686 
      link_status->mbps = 2500U;
      #line 687 
      break;
      #line 689 
      case (u32)16: 
                    #line 689 
      ;
      #line 690 
      link_status->mbps = 1000U;
      #line 691 
      break;
      #line 693 
      case (u32)32: 
                    #line 693 
      ;
      #line 694 
      link_status->mbps = 100U;
      #line 695 
      break;
      #line 697 
      default: 
               #line 697 
      ;
      #line 698 
      return -16;
    }
  #line 702 
  return 0;
}

#line 705  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.c"
int hw_atl_utils_get_mac_permanent(struct aq_hw_s *self, u8 *mac)
{
  #line 708 
  u32 mac_addr[2U];
  #line 709 
  u32 efuse_addr;
  #line 710 
  int err = 0;
  #line 711 
  u32 h = 0U;
  #line 712 
  u32 l = 0U;
  #line 714 
  if (aq_hw_read_reg(self,880U) == 0U) {
    #line 715 
    unsigned int ucp_0x370 = 0U;
    #line 716 
    unsigned int rnd = 0U;
    #line 718 
    get_random_bytes((void *)(& rnd),4);
    #line 720 
    ucp_0x370 = (rnd & 4244438268U) | 33686018U;
    #line 721 
    aq_hw_write_reg(self,880U,ucp_0x370);
  }
  #line 724 
  efuse_addr = aq_hw_read_reg(self,884U);
  #line 726 
  err = hw_atl_utils_fw_downld_dwords(self,efuse_addr + 160U,(u32 *)(& mac_addr),2U);
  #line 728 
  if (err < 0) {
    #line 729 
    mac_addr[0] = 0U;
    #line 730 
    mac_addr[1] = 0U;
    #line 731 
    err = 0;
  }
  else {
    #line 733 
    mac_addr[0] = __builtin_bswap32(mac_addr[0]);
    #line 734 
    mac_addr[1] = __builtin_bswap32(mac_addr[1]);
  }
  #line 737 
  ether_addr_copy(mac,(u8 *)(& mac_addr));
  #line 739 
  if (((unsigned int)*mac & 1U) != 0U || (unsigned int)(((int)*mac | (int)*(mac + 1U)) | (int)*(mac + 2U)) == 0U) {
    #line 741 
    l = (aq_hw_read_reg(self,880U) & 65535U) | 3808428032U;
    #line 744 
    h = 2147561486U;
    #line 746 
    *(mac + 5U) = (unsigned char)l;
    #line 747 
    l >>= 8;
    #line 748 
    *(mac + 4U) = (unsigned char)l;
    #line 749 
    l >>= 8;
    #line 750 
    *(mac + 3U) = (unsigned char)l;
    #line 751 
    l >>= 8;
    #line 752 
    *(mac + 2U) = (unsigned char)l;
    #line 753 
    *(mac + 1U) = (unsigned char)h;
    #line 754 
    h >>= 8;
    #line 755 
    *mac = (unsigned char)h;
  }
  #line 758 
  return err;
}

#line 761  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.c"
unsigned int hw_atl_utils_mbps_2_speed_index(unsigned int mbps)
{
  #line 763 
  unsigned int ret = 0U;
  #line 765 
  switch (mbps) {
    #line 766 
    case (unsigned int)100: 
                            #line 766 
    ;
    #line 767 
    ret = 5U;
    #line 768 
    break;
    #line 770 
    case (unsigned int)1000: 
                             #line 770 
    ;
    #line 771 
    ret = 4U;
    #line 772 
    break;
    #line 774 
    case (unsigned int)2500: 
                             #line 774 
    ;
    #line 775 
    ret = 3U;
    #line 776 
    break;
    #line 778 
    case (unsigned int)5000: 
                             #line 778 
    ;
    #line 779 
    ret = 1U;
    #line 780 
    break;
    #line 782 
    case (unsigned int)10000: 
                              #line 782 
    ;
    #line 783 
    ret = 0U;
    #line 784 
    break;
    #line 786 
    default: 
             #line 786 
    ;
    #line 787 
    break;
  }
  #line 790 
  return ret;
}

#line 793  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.c"
void hw_atl_utils_hw_chip_features_init(struct aq_hw_s *self, u32 *p)
{
  #line 795 
  u32 val = hw_atl_reg_glb_mif_id_get(self);
  #line 796 
  u32 mif_rev = val & 255U;
  #line 797 
  u32 chip_features = 0U;
  #line 799 
  if ((mif_rev & 15U) == 1U) 
                             #line 800 
                             chip_features |= 16777233U;
  else 
    #line 803 
    if ((mif_rev & 15U) == 2U) 
                               #line 804 
                               chip_features |= 33554455U;
    else 
      #line 809 
      if ((mif_rev & 15U) == 10U) 
                                  #line 810 
                                  chip_features |= 67108887U;
  #line 817 
  *p = chip_features;
  #line 818 
  return;
}

#line 820  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.c"
static int hw_atl_fw1x_deinit(struct aq_hw_s *self)
{
  #line 822 
  hw_atl_utils_mpi_set_speed(self,0U);
  #line 823 
  hw_atl_utils_mpi_set_state(self,(enum hal_atl_utils_fw_state_e)MPI_DEINIT);
  #line 825 
  return 0;
}

#line 828  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.c"
int hw_atl_utils_update_stats(struct aq_hw_s *self)
{
  #line 831 
  struct hw_atl_utils_mbox mbox;
  #line 830 
  struct aq_stats_s *cs = & self->curr_stats;
  #line 833 
  hw_atl_utils_mpi_read_stats(self,& mbox);
  #line 838 
  if (self->aq_link_status.mbps != 0U) {
    #line 839 
    self->curr_stats.uprc += (unsigned long long)(mbox.stats.uprc - self->last_stats.uprc);
    #line 840 
    self->curr_stats.mprc += (unsigned long long)(mbox.stats.mprc - self->last_stats.mprc);
    #line 841 
    self->curr_stats.bprc += (unsigned long long)(mbox.stats.bprc - self->last_stats.bprc);
    #line 842 
    self->curr_stats.erpt += (unsigned long long)(mbox.stats.erpt - self->last_stats.erpt);
    #line 844 
    self->curr_stats.uptc += (unsigned long long)(mbox.stats.uptc - self->last_stats.uptc);
    #line 845 
    self->curr_stats.mptc += (unsigned long long)(mbox.stats.mptc - self->last_stats.mptc);
    #line 846 
    self->curr_stats.bptc += (unsigned long long)(mbox.stats.bptc - self->last_stats.bptc);
    #line 847 
    self->curr_stats.erpr += (unsigned long long)(mbox.stats.erpr - self->last_stats.erpr);
    #line 849 
    self->curr_stats.ubrc += (unsigned long long)(mbox.stats.ubrc - self->last_stats.ubrc);
    #line 850 
    self->curr_stats.ubtc += (unsigned long long)(mbox.stats.ubtc - self->last_stats.ubtc);
    #line 851 
    self->curr_stats.mbrc += (unsigned long long)(mbox.stats.mbrc - self->last_stats.mbrc);
    #line 852 
    self->curr_stats.mbtc += (unsigned long long)(mbox.stats.mbtc - self->last_stats.mbtc);
    #line 853 
    self->curr_stats.bbrc += (unsigned long long)(mbox.stats.bbrc - self->last_stats.bbrc);
    #line 854 
    self->curr_stats.bbtc += (unsigned long long)(mbox.stats.bbtc - self->last_stats.bbtc);
    #line 855 
    self->curr_stats.dpc += (unsigned long long)(mbox.stats.dpc - self->last_stats.dpc);
  }
  #line 859 
  cs->dma_pkt_rc = hw_atl_stats_rx_dma_good_pkt_counter_get(self);
  #line 860 
  cs->dma_pkt_tc = hw_atl_stats_tx_dma_good_pkt_counter_get(self);
  #line 861 
  cs->dma_oct_rc = hw_atl_stats_rx_dma_good_octet_counter_get(self);
  #line 862 
  cs->dma_oct_tc = hw_atl_stats_tx_dma_good_octet_counter_get(self);
  #line 864 
  memcpy((void *)(& self->last_stats),(void *)(& mbox.stats),60UL);
  #line 866 
  return 0;
}

#line 869  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.c"
struct aq_stats_s *hw_atl_utils_get_hw_stats(struct aq_hw_s *self)
{
  #line 871 
  return & self->curr_stats;
}

#line 874  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.c"
static u32 hw_atl_utils_hw_mac_regs[88U] = {21888U, 21904U, 21936U, 21940U, 21952U, 23296U, 23300U, 23304U, 23308U, 23312U, 23316U, 23320U, 23324U, 23328U, 23332U, 23336U, 23340U, 23344U, 23348U, 23352U, 23356U, 23360U, 23364U, 23368U, 23372U, 23376U, 23380U, 23384U, 23388U, 23392U, 23396U, 23400U, 23404U, 23408U, 23412U, 23416U, 23420U, 31744U, 31748U, 31752U, 31756U, 31760U, 31764U, 31768U, 31772U, 31776U, 31808U, 31812U, 31816U, 31820U, 31824U, 31828U, 31832U, 31836U, 31840U, 31872U, 31876U, 31880U, 31884U, 31888U, 31892U, 31896U, 31900U, 31904U, 31936U, 31940U, 31944U, 31948U, 31952U, 31956U, 31960U, 31964U, 31968U, 768U, 772U, 776U, 780U, 784U, 788U, 792U, 796U, 864U, 868U, 872U, 876U, 880U, 884U, 26880U};
#line 899  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.c"
int hw_atl_utils_hw_get_regs(struct aq_hw_s *self, struct aq_hw_caps_s *aq_hw_caps, u32 *regs_buff)
{
  #line 903 
  unsigned int i = 0U;
  #line 905 
  i = 0U;
  #line 905 
  while (aq_hw_caps->mac_regs_count > i) {
    #line 906 
    *(regs_buff + (unsigned long)i) = aq_hw_read_reg(self,hw_atl_utils_hw_mac_regs[i]);
    #line 905 
    i ++;
  }
  #line 909 
  return 0;
}

#line 912  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.c"
int hw_atl_utils_get_fw_version(struct aq_hw_s *self, u32 *fw_version)
{
  #line 914 
  *fw_version = aq_hw_read_reg(self,24U);
  #line 916 
  return 0;
}

#line 919  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.c"
static int aq_fw1x_set_wake_magic(struct aq_hw_s *self, bool wol_enabled, u8 *mac)
{
  #line 922 
  struct hw_atl_utils_fw_rpc *prpc = (struct hw_atl_utils_fw_rpc *)0;
  #line 923 
  unsigned int rpc_size = 0U;
  #line 924 
  int err = 0;
  #line 926 
  err = hw_atl_utils_fw_rpc_wait(self,& prpc);
  #line 927 
  if (err < 0) 
               #line 928 
               goto err_exit;
  #line 930 
  memset((void *)prpc,0,88UL);
  #line 932 
  if ((int)wol_enabled != 0) {
    #line 933 
    rpc_size = 26U;
    #line 937 
    prpc->msg_id = 4U;
    #line 938 
    prpc->__anonCompField_hw_atl_utils_fw_rpc_164.msg_wol_add.priority = 268435456U;
    #line 940 
    prpc->__anonCompField_hw_atl_utils_fw_rpc_164.msg_wol_add.pattern_id = 1U;
    #line 942 
    prpc->__anonCompField_hw_atl_utils_fw_rpc_164.msg_wol_add.packet_type = 2U;
    #line 945 
    ether_addr_copy((u8 *)(& prpc->__anonCompField_hw_atl_utils_fw_rpc_164.msg_wol_add.magic_packet_pattern),mac);
  }
  else {
    #line 948 
    rpc_size = 8U;
    #line 951 
    prpc->msg_id = 5U;
    #line 952 
    prpc->__anonCompField_hw_atl_utils_fw_rpc_164.msg_wol_add.pattern_id = 1U;
  }
  #line 956 
  err = hw_atl_utils_fw_rpc_call(self,rpc_size);
  #line 958 
  err_exit: 
            #line 958 
  ;
  #line 959 
  return err;
}

#line 962  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.c"
static int aq_fw1x_set_power(struct aq_hw_s *self, unsigned int power_state, u8 *mac)
{
  #line 965 
  struct hw_atl_utils_fw_rpc *prpc = (struct hw_atl_utils_fw_rpc *)0;
  #line 966 
  unsigned int rpc_size = 0U;
  #line 967 
  int err = 0;
  #line 969 
  if (((self->aq_nic_cfg)->wol & 32U) != 0U) {
    #line 970 
    err = aq_fw1x_set_wake_magic(self,(_Bool)1,mac);
    #line 972 
    if (err < 0) 
                 #line 973 
                 goto err_exit;
    #line 975 
    rpc_size = 12U;
    #line 978 
    err = hw_atl_utils_fw_rpc_wait(self,& prpc);
    #line 980 
    if (err < 0) 
                 #line 981 
                 goto err_exit;
    #line 983 
    memset((void *)prpc,0,(unsigned long)rpc_size);
    #line 985 
    prpc->msg_id = 6U;
    #line 986 
    prpc->__anonCompField_hw_atl_utils_fw_rpc_164.msg_enable_wakeup.__anonCompField_drv_msg_enable_wakeup_162.pattern_mask = 2U;
    #line 988 
    err = hw_atl_utils_fw_rpc_call(self,rpc_size);
    #line 989 
    if (err < 0) 
                 #line 990 
                 goto err_exit;
  }
  #line 992 
  hw_atl_utils_mpi_set_speed(self,0U);
  #line 993 
  hw_atl_utils_mpi_set_state(self,(enum hal_atl_utils_fw_state_e)MPI_POWER);
  #line 995 
  err_exit: 
            #line 995 
  ;
  #line 996 
  return err;
}

#line 999  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.c"
static u32 hw_atl_utils_get_mpi_mbox_tid(struct aq_hw_s *self)
{
  #line 1001 
  struct hw_atl_utils_mbox_header mbox;
  #line 1003 
  hw_atl_utils_mpi_read_mbox(self,& mbox);
  #line 1005 
  return mbox.transaction_id;
}

#line 1008  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.c"
static u32 hw_atl_utils_mpi_get_state(struct aq_hw_s *self)
{
  #line 1010 
  return aq_hw_read_reg(self,876U);
}

#line 1013  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.c"
static u32 hw_atl_utils_mif_cmd_get(struct aq_hw_s *self)
{
  #line 1015 
  return aq_hw_read_reg(self,512U);
}

#line 1018  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.c"
static u32 hw_atl_utils_mif_addr_get(struct aq_hw_s *self)
{
  #line 1020 
  return aq_hw_read_reg(self,520U);
}

#line 1023  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.c"
static u32 hw_atl_utils_rpc_state_get(struct aq_hw_s *self)
{
  #line 1025 
  return aq_hw_read_reg(self,828U);
}

#line 1028  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_utils.c"
struct aq_fw_ops aq_fw_1x_ops = {.init = & hw_atl_utils_mpi_create, .deinit = & hw_atl_fw1x_deinit, .get_mac_permanent = & hw_atl_utils_get_mac_permanent, .set_link_speed = & hw_atl_utils_mpi_set_speed, .set_state = & hw_atl_utils_mpi_set_state, .update_link_status = & hw_atl_utils_mpi_get_link_status, .update_stats = & hw_atl_utils_update_stats, .set_power = & aq_fw1x_set_power};
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/string.h"
#line 29 
size_t strlcpy(char *, char *, size_t);
#line 45 
#line 45 
size_t strlcat(char *, char *, __kernel_size_t);
#line 26  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_ethtool.i.aux"
#line 830 
static void cif_mutex_lock_fwreq_mutex_of_aq_nic_s_1(struct mutex *lock);
#line 185  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mutex.h"
#line 837  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_ethtool.i.aux"
static void cif_mutex_unlock_fwreq_mutex_of_aq_nic_s_1(struct mutex *lock);
#line 108  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pm_wakeup.h"
#line 108 
int device_set_wakeup_enable(struct device *, bool);
#line 86  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ethtool.h"
#line 86 
u32 ethtool_op_get_link(struct net_device *);
#line 87 
#line 87 
int ethtool_op_get_ts_info(struct net_device *, struct ethtool_ts_info *);
#line 2657  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
#line 2657 
int dev_open(struct net_device *, struct netlink_ext_ack *);
#line 2658 
#line 2658 
void dev_close(struct net_device *);
#line 1843  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pci.h"
__inline static char *pci_name(struct pci_dev *pdev)
{
  #line 1845 
  return dev_name(& pdev->dev);
}

#line 213  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ptp_clock_kernel.h"
#line 213 
int ptp_clock_index(struct ptp_clock *);
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ethtool.c"
static void aq_ethtool_get_regs(struct net_device *ndev, struct ethtool_regs *regs, void *p)
{
  #line 21 
  u32 regs_count;
  #line 20 
  struct aq_nic_s *aq_nic = netdev_priv(ndev);
  #line 23 
  regs_count = (unsigned int)aq_nic_get_regs_count(aq_nic);
  #line 25 
  memset(p,0,(unsigned long)regs_count * 4UL);
  #line 26 
  aq_nic_get_regs(aq_nic,regs,p);
  #line 27 
  return;
}

#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ethtool.c"
static int aq_ethtool_get_regs_len(struct net_device *ndev)
{
  #line 32 
  u32 regs_count;
  #line 31 
  struct aq_nic_s *aq_nic = netdev_priv(ndev);
  #line 34 
  regs_count = (unsigned int)aq_nic_get_regs_count(aq_nic);
  #line 36 
  return (int)(regs_count * 4U);
}

#line 39  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ethtool.c"
static u32 aq_ethtool_get_link(struct net_device *ndev)
{
  #line 41 
  return ethtool_op_get_link(ndev);
}

#line 44  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ethtool.c"
static int aq_ethtool_get_link_ksettings(struct net_device *ndev, struct ethtool_link_ksettings *cmd)
{
  #line 47 
  struct aq_nic_s *aq_nic = netdev_priv(ndev);
  #line 49 
  aq_nic_get_link_ksettings(aq_nic,cmd);
  #line 50 
  if ((int)netif_carrier_ok(ndev) != 0) 
                                        #line 50 
                                        cmd->base.speed = aq_nic_get_link_speed(aq_nic); else 
                                                                    #line 50 
                                                                    cmd->base.speed = 0U;
  #line 53 
  return 0;
}

#line 57  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ethtool.c"
static int aq_ethtool_set_link_ksettings(struct net_device *ndev, struct ethtool_link_ksettings *cmd)
{
  #line 60 
  struct aq_nic_s *aq_nic = netdev_priv(ndev);
  #line 62 
  return aq_nic_set_link_ksettings(aq_nic,cmd);
}

#line 65  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ethtool.c"
static char aq_ethtool_stat_names[22U][32U] = {{(char)'I', (char)'n', (char)'P', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s'}, {(char)'I', (char)'n', (char)'U', (char)'C', (char)'a', (char)'s', (char)'t'}, {(char)'I', (char)'n', (char)'M', (char)'C', (char)'a', (char)'s', (char)'t'}, {(char)'I', (char)'n', (char)'B', (char)'C', (char)'a', (char)'s', (char)'t'}, {(char)'I', (char)'n', (char)'E', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s'}, {(char)'O', (char)'u', (char)'t', (char)'P', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s'}, {(char)'O', (char)'u', (char)'t', (char)'U', (char)'C', (char)'a', (char)'s', (char)'t'}, {(char)'O', (char)'u', (char)'t', (char)'M', (char)'C', (char)'a', (char)'s', (char)'t'}, {(char)'O', (char)'u', (char)'t', (char)'B', (char)'C', (char)'a', (char)'s', (char)'t'}, {(char)'I', (char)'n', (char)'U', (char)'C', (char)'a', (char)'s', (char)'t', (char)'O', (char)'c', (char)'t', (char)'e', (char)'t', (char)'s'}, {(char)'O', (char)'u', (char)'t', (char)'U', (char)'C', (char)'a', (char)'s', (char)'t', (char)'O', (char)'c', (char)'t', (char)'e', (char)'t', (char)'s'}, {(char)'I', (char)'n', (char)'M', (char)'C', (char)'a', (char)'s', (char)'t', (char)'O', (char)'c', (char)'t', (char)'e', (char)'t', (char)'s'}, {(char)'O', (char)'u', (char)'t', (char)'M', (char)'C', (char)'a', (char)'s', (char)'t', (char)'O', (char)'c', (char)'t', (char)'e', (char)'t', (char)'s'}, {(char)'I', (char)'n', (char)'B', (char)'C', (char)'a', (char)'s', (char)'t', (char)'O', (char)'c', (char)'t', (char)'e', (char)'t', (char)'s'}, {(char)'O', (char)'u', (char)'t', (char)'B', (char)'C', (char)'a', (char)'s', (char)'t', (char)'O', (char)'c', (char)'t', (char)'e', (char)'t', (char)'s'}, {(char)'I', (char)'n', (char)'O', (char)'c', (char)'t', (char)'e', (char)'t', (char)'s'}, {(char)'O', (char)'u', (char)'t', (char)'O', (char)'c', (char)'t', (char)'e', (char)'t', (char)'s'}, {(char)'I', (char)'n', (char)'P', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'D', (char)'m', (char)'a'}, {(char)'O', (char)'u', (char)'t', (char)'P', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'D', (char)'m', (char)'a'}, {(char)'I', (char)'n', (char)'O', (char)'c', (char)'t', (char)'e', (char)'t', (char)'s', (char)'D', (char)'m', (char)'a'}, {(char)'O', (char)'u', (char)'t', (char)'O', (char)'c', (char)'t', (char)'e', (char)'t', (char)'s', (char)'D', (char)'m', (char)'a'}, {(char)'I', (char)'n', (char)'D', (char)'r', (char)'o', (char)'p', (char)'p', (char)'e', (char)'d', (char)'D', (char)'m', (char)'a'}};
#line 90  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ethtool.c"
static char aq_ethtool_queue_stat_names[6U][32U] = {{(char)'Q', (char)'u', (char)'e', (char)'u', (char)'e', (char)'[', (char)'%', (char)'d', (char)']', (char)' ', (char)'I', (char)'n', (char)'P', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s'}, {(char)'Q', (char)'u', (char)'e', (char)'u', (char)'e', (char)'[', (char)'%', (char)'d', (char)']', (char)' ', (char)'O', (char)'u', (char)'t', (char)'P', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s'}, {(char)'Q', (char)'u', (char)'e', (char)'u', (char)'e', (char)'[', (char)'%', (char)'d', (char)']', (char)' ', (char)'R', (char)'e', (char)'s', (char)'t', (char)'a', (char)'r', (char)'t', (char)'s'}, {(char)'Q', (char)'u', (char)'e', (char)'u', (char)'e', (char)'[', (char)'%', (char)'d', (char)']', (char)' ', (char)'I', (char)'n', (char)'J', (char)'u', (char)'m', (char)'b', (char)'o', (char)'P', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s'}, {(char)'Q', (char)'u', (char)'e', (char)'u', (char)'e', (char)'[', (char)'%', (char)'d', (char)']', (char)' ', (char)'I', (char)'n', (char)'L', (char)'r', (char)'o', (char)'P', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s'}, {(char)'Q', (char)'u', (char)'e', (char)'u', (char)'e', (char)'[', (char)'%', (char)'d', (char)']', (char)' ', (char)'I', (char)'n', (char)'E', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s'}};
#line 99  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ethtool.c"
static char aq_ethtool_priv_flag_names[5U][32U] = {{(char)'D', (char)'M', (char)'A', (char)'S', (char)'y', (char)'s', (char)'t', (char)'e', (char)'m', (char)'L', (char)'o', (char)'o', (char)'p', (char)'b', (char)'a', (char)'c', (char)'k'}, {(char)'P', (char)'K', (char)'T', (char)'S', (char)'y', (char)'s', (char)'t', (char)'e', (char)'m', (char)'L', (char)'o', (char)'o', (char)'p', (char)'b', (char)'a', (char)'c', (char)'k'}, {(char)'D', (char)'M', (char)'A', (char)'N', (char)'e', (char)'t', (char)'w', (char)'o', (char)'r', (char)'k', (char)'L', (char)'o', (char)'o', (char)'p', (char)'b', (char)'a', (char)'c', (char)'k'}, {(char)'P', (char)'H', (char)'Y', (char)'I', (char)'n', (char)'t', (char)'e', (char)'r', (char)'n', (char)'a', (char)'l', (char)'L', (char)'o', (char)'o', (char)'p', (char)'b', (char)'a', (char)'c', (char)'k'}, {(char)'P', (char)'H', (char)'Y', (char)'E', (char)'x', (char)'t', (char)'e', (char)'r', (char)'n', (char)'a', (char)'l', (char)'L', (char)'o', (char)'o', (char)'p', (char)'b', (char)'a', (char)'c', (char)'k'}};
#line 107  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ethtool.c"
static void aq_ethtool_stats(struct net_device *ndev, struct ethtool_stats *stats, u64 *data)
{
  #line 111 
  struct aq_nic_cfg_s *cfg;
  #line 110 
  struct aq_nic_s *aq_nic = netdev_priv(ndev);
  #line 113 
  cfg = aq_nic_get_cfg(aq_nic);
  #line 115 
  memset((void *)data,0,(unsigned long)cfg->vecs * 48UL + 176UL);
  #line 118 
  aq_nic_get_stats(aq_nic,data);
  #line 119 
  return;
}

#line 121  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ethtool.c"
static void aq_ethtool_get_drvinfo(struct net_device *ndev, struct ethtool_drvinfo *drvinfo)
{
  #line 124 
  void *__mptr;
  #line 126 
  struct aq_nic_cfg_s *cfg;
  #line 127 
  u32 firmware_version;
  #line 128 
  u32 regs_count;
  #line 141 
  char *tmp_3;
  #line 124 
  __mptr = (void *)ndev->dev.parent;
  #line 124 
  struct pci_dev *pdev = ((struct pci_dev *)(__mptr + 18446744073709551440U));
  #line 125 
  struct aq_nic_s *aq_nic = netdev_priv(ndev);
  #line 130 
  cfg = aq_nic_get_cfg(aq_nic);
  #line 131 
  firmware_version = aq_nic_get_fw_version(aq_nic);
  #line 132 
  regs_count = (unsigned int)aq_nic_get_regs_count(aq_nic);
  #line 134 
  strlcat((char *)(& drvinfo->driver),(char *)"atlantic",32UL);
  #line 135 
  strlcat((char *)(& drvinfo->version),(char *)"5.5.0",32UL);
  #line 137 
  snprintf((char *)(& drvinfo->fw_version),32UL,(char *)"%u.%u.%u",firmware_version >> 24,(firmware_version >> 16) & 255U,firmware_version & 65535U);
  #line 141 
  if (pdev != (struct pci_dev *)0) 
                                   #line 141 
                                   tmp_3 = pci_name(pdev); else 
                                                                #line 141 
                                                                tmp_3 = (char *)"";
  #line 141 
  ;
  #line 141 
  strlcpy((char *)(& drvinfo->bus_info),tmp_3,32UL);
  #line 143 
  drvinfo->n_stats = cfg->vecs * 6U + 22U;
  #line 145 
  drvinfo->testinfo_len = 0U;
  #line 146 
  drvinfo->regdump_len = regs_count;
  #line 147 
  drvinfo->eedump_len = 0U;
  #line 148 
  return;
}

#line 150  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ethtool.c"
static void aq_ethtool_get_strings(struct net_device *ndev, u32 stringset, u8 *data)
{
  #line 154 
  struct aq_nic_cfg_s *cfg;
  #line 156 
  int i;
  #line 156 
  int si;
  #line 153 
  struct aq_nic_s *aq_nic = netdev_priv(ndev);
  #line 155 
  u8 *p = data;
  #line 158 
  cfg = aq_nic_get_cfg(aq_nic);
  #line 160 
  switch (stringset) {
    #line 161 
    case (u32)1: 
                 #line 161 
    ;
    #line 162 
    memcpy((void *)p,(void *)(& aq_ethtool_stat_names),704UL);
    #line 164 
    p += 704UL;
    #line 165 
    i = 0;
    #line 165 
    while (cfg->vecs > (unsigned int)i) {
      #line 166 
      si = 0;
      #line 166 
      while ((unsigned int)si <= 5U) {
        #line 169 
        snprintf((char *)p,32UL,(char *)(& aq_ethtool_queue_stat_names[si]),i);
        #line 171 
        p += 32U;
        #line 167 
        si ++;
      }
      #line 165 
      i ++;
    }
    #line 174 
    break;
    #line 175 
    case (u32)2: 
                 #line 175 
    ;
    #line 176 
    memcpy((void *)p,(void *)(& aq_ethtool_priv_flag_names),160UL);
    #line 178 
    break;
  }
  #line 180 
  return;
}

#line 182  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ethtool.c"
static int aq_ethtool_set_phys_id(struct net_device *ndev, enum ethtool_phys_id_state state)
{
  #line 185 
  struct aq_nic_s *aq_nic = netdev_priv(ndev);
  #line 186 
  struct aq_hw_s *hw = aq_nic->aq_hw;
  #line 187 
  int ret = 0;
  #line 189 
  if ((aq_nic->aq_fw_ops)->led_control == (int (*)(struct aq_hw_s *, u32 ))0) 
    #line 190 
    return -95;
  #line 192 
  cif_mutex_lock_fwreq_mutex_of_aq_nic_s_1(& aq_nic->fwreq_mutex);
  #line 194 
  switch ((unsigned int)state) {
    #line 195 
    case (unsigned int)1: 
                          #line 195 
    ;
    #line 196 
    ret = (*((aq_nic->aq_fw_ops)->led_control))(hw,42U);
    #line 198 
    break;
    #line 199 
    case (unsigned int)0: 
                          #line 199 
    ;
    #line 200 
    ret = (*((aq_nic->aq_fw_ops)->led_control))(hw,0U);
    #line 201 
    break;
    #line 202 
    default: 
             #line 202 
    ;
    #line 203 
    break;
  }
  #line 206 
  cif_mutex_unlock_fwreq_mutex_of_aq_nic_s_1(& aq_nic->fwreq_mutex);
  #line 208 
  return ret;
}

#line 211  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ethtool.c"
static int aq_ethtool_get_sset_count(struct net_device *ndev, int stringset)
{
  #line 214 
  struct aq_nic_cfg_s *cfg;
  #line 213 
  struct aq_nic_s *aq_nic = netdev_priv(ndev);
  #line 215 
  int ret = 0;
  #line 217 
  cfg = aq_nic_get_cfg(aq_nic);
  #line 219 
  switch (stringset) {
    #line 220 
    case 1: 
            #line 220 
    ;
    #line 221 
    ret = (int)(cfg->vecs * 6U + 22U);
    #line 223 
    break;
    #line 224 
    case 2: 
            #line 224 
    ;
    #line 225 
    ret = 5;
    #line 226 
    break;
    #line 227 
    default: 
             #line 227 
    ;
    #line 228 
    ret = -95;
  }
  #line 231 
  return ret;
}

#line 234  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ethtool.c"
static u32 aq_ethtool_get_rss_indir_size(struct net_device *ndev)
{
  #line 236 
  return 64U;
}

#line 239  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ethtool.c"
static u32 aq_ethtool_get_rss_key_size(struct net_device *ndev)
{
  #line 242 
  struct aq_nic_cfg_s *cfg;
  #line 241 
  struct aq_nic_s *aq_nic = netdev_priv(ndev);
  #line 244 
  cfg = aq_nic_get_cfg(aq_nic);
  #line 246 
  return 40U;
}

#line 249  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ethtool.c"
static int aq_ethtool_get_rss(struct net_device *ndev, u32 *indir, u8 *key, u8 *hfunc)
{
  #line 253 
  struct aq_nic_cfg_s *cfg;
  #line 252 
  struct aq_nic_s *aq_nic = netdev_priv(ndev);
  #line 254 
  unsigned int i = 0U;
  #line 256 
  cfg = aq_nic_get_cfg(aq_nic);
  #line 258 
  if (hfunc != (u8 *)0U) 
                         #line 259 
                         *hfunc = (unsigned char)1U;
  #line 260 
  if (indir != (u32 *)0U) {
    #line 261 
    i = 0U;
    #line 261 
    while (i <= 63U) {
      #line 262 
      *(indir + (unsigned long)i) = (unsigned int)cfg->aq_rss.indirection_table[i];
      #line 261 
      i ++;
    }
  }
  #line 264 
  if (key != (u8 *)0U) 
                       #line 265 
                       memcpy((void *)key,(void *)(& cfg->aq_rss.hash_secret_key),40UL);
  #line 268 
  return 0;
}

#line 271  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ethtool.c"
static int aq_ethtool_set_rss(struct net_device *netdev, u32 *indir, u8 *key, u8 hfunc)
{
  #line 275 
  struct aq_nic_cfg_s *cfg;
  #line 277 
  u32 rss_entries;
  #line 274 
  struct aq_nic_s *aq_nic = netdev_priv(netdev);
  #line 276 
  unsigned int i = 0U;
  #line 278 
  int err = 0;
  #line 280 
  cfg = aq_nic_get_cfg(aq_nic);
  #line 281 
  rss_entries = (unsigned int)cfg->aq_rss.indirection_table_size;
  #line 284 
  if ((unsigned int)hfunc > 1U) 
                                #line 285 
                                return -95;
  #line 287 
  if (indir != (u32 *)0U) {
    #line 288 
    i = 0U;
    #line 288 
    while (i < rss_entries) {
      #line 289 
      cfg->aq_rss.indirection_table[i] = (unsigned char)*(indir + (unsigned long)i);
      #line 288 
      i ++;
    }
  }
  #line 292 
  if (key != (u8 *)0U) {
    #line 293 
    memcpy((void *)(& cfg->aq_rss.hash_secret_key),(void *)key,40UL);
    #line 295 
    err = (*((aq_nic->aq_hw_ops)->hw_rss_hash_set))(aq_nic->aq_hw,& cfg->aq_rss);
    #line 297 
    if (err != 0) 
                  #line 298 
                  return err;
  }
  #line 301 
  err = (*((aq_nic->aq_hw_ops)->hw_rss_set))(aq_nic->aq_hw,& cfg->aq_rss);
  #line 303 
  return err;
}

#line 306  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ethtool.c"
static int aq_ethtool_get_rxnfc(struct net_device *ndev, struct ethtool_rxnfc *cmd, u32 *rule_locs)
{
  #line 311 
  struct aq_nic_cfg_s *cfg;
  #line 310 
  struct aq_nic_s *aq_nic = netdev_priv(ndev);
  #line 312 
  int err = 0;
  #line 314 
  cfg = aq_nic_get_cfg(aq_nic);
  #line 316 
  switch (cmd->cmd) {
    #line 317 
    case (__u32)45: 
                    #line 317 
    ;
    #line 318 
    cmd->data = (unsigned long long)cfg->vecs;
    #line 319 
    break;
    #line 320 
    case (__u32)46: 
                    #line 320 
    ;
    #line 321 
    cmd->__anonCompField_ethtool_rxnfc_99.rule_cnt = (unsigned int)aq_get_rxnfc_count_all_rules(aq_nic);
    #line 322 
    break;
    #line 323 
    case (__u32)47: 
                    #line 323 
    ;
    #line 324 
    err = aq_get_rxnfc_rule(aq_nic,cmd);
    #line 325 
    break;
    #line 326 
    case (__u32)48: 
                    #line 326 
    ;
    #line 327 
    err = aq_get_rxnfc_all_rules(aq_nic,cmd,rule_locs);
    #line 328 
    break;
    #line 329 
    default: 
             #line 329 
    ;
    #line 330 
    err = -95;
    #line 331 
    break;
  }
  #line 334 
  return err;
}

#line 337  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ethtool.c"
static int aq_ethtool_set_rxnfc(struct net_device *ndev, struct ethtool_rxnfc *cmd)
{
  #line 340 
  struct aq_nic_s *aq_nic = netdev_priv(ndev);
  #line 341 
  int err = 0;
  #line 343 
  switch (cmd->cmd) {
    #line 344 
    case (__u32)50: 
                    #line 344 
    ;
    #line 345 
    err = aq_add_rxnfc_rule(aq_nic,cmd);
    #line 346 
    break;
    #line 347 
    case (__u32)49: 
                    #line 347 
    ;
    #line 348 
    err = aq_del_rxnfc_rule(aq_nic,cmd);
    #line 349 
    break;
    #line 350 
    default: 
             #line 350 
    ;
    #line 351 
    err = -95;
    #line 352 
    break;
  }
  #line 355 
  return err;
}

#line 358  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ethtool.c"
static int aq_ethtool_get_coalesce(struct net_device *ndev, struct ethtool_coalesce *coal)
{
  #line 362 
  struct aq_nic_cfg_s *cfg;
  #line 361 
  struct aq_nic_s *aq_nic = netdev_priv(ndev);
  #line 364 
  cfg = aq_nic_get_cfg(aq_nic);
  #line 366 
  if (cfg->itr == 1U || cfg->itr == 65535U) {
    #line 368 
    coal->rx_coalesce_usecs = (unsigned int)cfg->rx_itr;
    #line 369 
    coal->tx_coalesce_usecs = (unsigned int)cfg->tx_itr;
    #line 370 
    coal->rx_max_coalesced_frames = 0U;
    #line 371 
    coal->tx_max_coalesced_frames = 0U;
  }
  else {
    #line 373 
    coal->rx_coalesce_usecs = 0U;
    #line 374 
    coal->tx_coalesce_usecs = 0U;
    #line 375 
    coal->rx_max_coalesced_frames = 1U;
    #line 376 
    coal->tx_max_coalesced_frames = 1U;
  }
  #line 379 
  return 0;
}

#line 382  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ethtool.c"
static int aq_ethtool_set_coalesce(struct net_device *ndev, struct ethtool_coalesce *coal)
{
  #line 386 
  struct aq_nic_cfg_s *cfg;
  #line 385 
  struct aq_nic_s *aq_nic = netdev_priv(ndev);
  #line 388 
  cfg = aq_nic_get_cfg(aq_nic);
  #line 392 
  if (coal->use_adaptive_rx_coalesce != 0U || coal->use_adaptive_tx_coalesce != 0U) 
    #line 393 
    return -95;
  #line 397 
  if ((coal->rx_max_coalesced_frames > 1U || coal->rx_coalesce_usecs_irq != 0U) || coal->rx_max_coalesced_frames_irq != 0U) 
    #line 400 
    return -95;
  #line 402 
  if ((coal->tx_max_coalesced_frames > 1U || coal->tx_coalesce_usecs_irq != 0U) || coal->tx_max_coalesced_frames_irq != 0U) 
    #line 405 
    return -95;
  #line 409 
  if (coal->rx_max_coalesced_frames != (__u32)(coal->rx_coalesce_usecs == 0U)) 
    #line 410 
    return -95;
  #line 411 
  if (coal->tx_max_coalesced_frames != (__u32)(coal->tx_coalesce_usecs == 0U)) 
    #line 412 
    return -95;
  #line 414 
  if (coal->rx_coalesce_usecs > 1022U || coal->tx_coalesce_usecs > 1022U) 
    #line 416 
    return -22;
  #line 418 
  cfg->itr = 1U;
  #line 420 
  cfg->rx_itr = (unsigned short)coal->rx_coalesce_usecs;
  #line 421 
  cfg->tx_itr = (unsigned short)coal->tx_coalesce_usecs;
  #line 423 
  return aq_nic_update_interrupt_moderation_settings(aq_nic);
}

#line 426  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ethtool.c"
static void aq_ethtool_get_wol(struct net_device *ndev, struct ethtool_wolinfo *wol)
{
  #line 430 
  struct aq_nic_cfg_s *cfg;
  #line 429 
  struct aq_nic_s *aq_nic = netdev_priv(ndev);
  #line 432 
  cfg = aq_nic_get_cfg(aq_nic);
  #line 434 
  wol->supported = 33U;
  #line 435 
  wol->wolopts = cfg->wol;
  #line 436 
  return;
}

#line 438  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ethtool.c"
static int aq_ethtool_set_wol(struct net_device *ndev, struct ethtool_wolinfo *wol)
{
  #line 441 
  void *__mptr;
  #line 443 
  struct aq_nic_cfg_s *cfg;
  #line 441 
  __mptr = (void *)ndev->dev.parent;
  #line 441 
  struct pci_dev *pdev = ((struct pci_dev *)(__mptr + 18446744073709551440U));
  #line 442 
  struct aq_nic_s *aq_nic = netdev_priv(ndev);
  #line 444 
  int err = 0;
  #line 446 
  cfg = aq_nic_get_cfg(aq_nic);
  #line 448 
  if ((wol->wolopts & 4294967262U) != 0U) 
                                          #line 449 
                                          return -95;
  #line 451 
  cfg->wol = wol->wolopts;
  #line 453 
  err = device_set_wakeup_enable(& pdev->dev,(_Bool)(cfg->wol != 0U));
  #line 455 
  return err;
}

#line 458  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ethtool.c"
static int aq_ethtool_get_ts_info(struct net_device *ndev, struct ethtool_ts_info *info)
{
  #line 461 
  struct aq_nic_s *aq_nic = netdev_priv(ndev);
  #line 463 
  ethtool_op_get_ts_info(ndev,info);
  #line 465 
  if (aq_nic->aq_ptp == (struct aq_ptp_s *)0) 
                                              #line 466 
                                              return 0;
  #line 468 
  info->so_timestamping |= 69U;
  #line 473 
  info->tx_types = 3U;
  #line 476 
  info->rx_filters = 1U;
  #line 478 
  info->rx_filters |= 4672U;
  #line 482 
  info->phc_index = ptp_clock_index(aq_ptp_get_ptp_clock(aq_nic->aq_ptp));
  #line 484 
  return 0;
}

#line 487  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ethtool.c"
static enum hw_atl_fw2x_rate eee_mask_to_ethtool_mask(u32 speed)
{
  #line 489 
  u32 rate = 0U;
  #line 491 
  if (((unsigned long)speed & 64UL) != 0UL) 
                                            #line 492 
                                            rate |= 4096U;
  #line 494 
  if (((unsigned long)speed & 256UL) != 0UL) 
                                             #line 495 
                                             rate |= 32768U;
  #line 497 
  if (((unsigned long)speed & 512UL) != 0UL) 
                                             #line 498 
                                             rate |= 32U;
  #line 500 
  return (enum hw_atl_fw2x_rate)rate;
}

#line 503  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ethtool.c"
static int aq_ethtool_get_eee(struct net_device *ndev, struct ethtool_eee *eee)
{
  #line 506 
  u32 rate;
  #line 506 
  u32 supported_rates;
  #line 505 
  struct aq_nic_s *aq_nic = netdev_priv(ndev);
  #line 507 
  int err = 0;
  #line 509 
  if ((aq_nic->aq_fw_ops)->get_eee_rate == (int (*)(struct aq_hw_s *, u32 *, u32 *))0) 
    #line 510 
    return -95;
  #line 512 
  cif_mutex_lock_fwreq_mutex_of_aq_nic_s_1(& aq_nic->fwreq_mutex);
  #line 513 
  err = (*((aq_nic->aq_fw_ops)->get_eee_rate))(aq_nic->aq_hw,& rate,& supported_rates);
  #line 515 
  cif_mutex_unlock_fwreq_mutex_of_aq_nic_s_1(& aq_nic->fwreq_mutex);
  #line 516 
  if (err < 0) 
               #line 517 
               return err;
  #line 519 
  eee->supported = (unsigned int)eee_mask_to_ethtool_mask(supported_rates);
  #line 521 
  if (aq_nic->aq_nic_cfg.eee_speeds != 0U) 
                                           #line 522 
                                           eee->advertised = eee->supported;
  #line 524 
  eee->lp_advertised = (unsigned int)eee_mask_to_ethtool_mask(rate);
  #line 526 
  eee->eee_enabled = (unsigned int)(eee->advertised != 0U);
  #line 528 
  eee->tx_lpi_enabled = eee->eee_enabled;
  #line 529 
  if ((eee->advertised & eee->lp_advertised) != 0U) 
                                                    #line 530 
                                                    eee->eee_active = 1U;
  #line 532 
  return 0;
}

#line 535  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ethtool.c"
static int aq_ethtool_set_eee(struct net_device *ndev, struct ethtool_eee *eee)
{
  #line 538 
  u32 rate;
  #line 538 
  u32 supported_rates;
  #line 539 
  struct aq_nic_cfg_s *cfg;
  #line 537 
  struct aq_nic_s *aq_nic = netdev_priv(ndev);
  #line 540 
  int err = 0;
  #line 542 
  cfg = aq_nic_get_cfg(aq_nic);
  #line 544 
  if ((long)((aq_nic->aq_fw_ops)->get_eee_rate == (int (*)(struct aq_hw_s *, u32 *, u32 *))0) != 0L || (long)((aq_nic->aq_fw_ops)->set_eee_rate == (int (*)(struct aq_hw_s *, u32 ))0) != 0L) 
    #line 546 
    return -95;
  #line 548 
  cif_mutex_lock_fwreq_mutex_of_aq_nic_s_1(& aq_nic->fwreq_mutex);
  #line 549 
  err = (*((aq_nic->aq_fw_ops)->get_eee_rate))(aq_nic->aq_hw,& rate,& supported_rates);
  #line 551 
  cif_mutex_unlock_fwreq_mutex_of_aq_nic_s_1(& aq_nic->fwreq_mutex);
  #line 552 
  if (err < 0) 
               #line 553 
               return err;
  #line 555 
  if (eee->eee_enabled != 0U) {
    #line 556 
    rate = supported_rates;
    #line 557 
    cfg->eee_speeds = rate;
  }
  else {
    #line 559 
    rate = 0U;
    #line 560 
    cfg->eee_speeds = 0U;
  }
  #line 563 
  cif_mutex_lock_fwreq_mutex_of_aq_nic_s_1(& aq_nic->fwreq_mutex);
  #line 564 
  err = (*((aq_nic->aq_fw_ops)->set_eee_rate))(aq_nic->aq_hw,rate);
  #line 565 
  cif_mutex_unlock_fwreq_mutex_of_aq_nic_s_1(& aq_nic->fwreq_mutex);
  #line 567 
  return err;
}

#line 570  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ethtool.c"
static int aq_ethtool_nway_reset(struct net_device *ndev)
{
  #line 572 
  struct aq_nic_s *aq_nic = netdev_priv(ndev);
  #line 573 
  int err = 0;
  #line 575 
  if ((long)((aq_nic->aq_fw_ops)->renegotiate == (int (*)(struct aq_hw_s *))0) != 0L) 
    #line 576 
    return -95;
  #line 578 
  if ((int)netif_running(ndev) != 0) {
    #line 579 
    cif_mutex_lock_fwreq_mutex_of_aq_nic_s_1(& aq_nic->fwreq_mutex);
    #line 580 
    err = (*((aq_nic->aq_fw_ops)->renegotiate))(aq_nic->aq_hw);
    #line 581 
    cif_mutex_unlock_fwreq_mutex_of_aq_nic_s_1(& aq_nic->fwreq_mutex);
  }
  #line 584 
  return err;
}

#line 587  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ethtool.c"
static void aq_ethtool_get_pauseparam(struct net_device *ndev, struct ethtool_pauseparam *pause)
{
  #line 590 
  struct aq_nic_s *aq_nic = netdev_priv(ndev);
  #line 591 
  u32 fc = aq_nic->aq_nic_cfg.fc.req;
  #line 593 
  pause->autoneg = 0U;
  #line 595 
  pause->rx_pause = (unsigned int)((fc & 2U) != 0U);
  #line 596 
  pause->tx_pause = (unsigned int)((fc & 1U) != 0U);
  #line 597 
  return;
}

#line 600  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ethtool.c"
static int aq_ethtool_set_pauseparam(struct net_device *ndev, struct ethtool_pauseparam *pause)
{
  #line 603 
  struct aq_nic_s *aq_nic = netdev_priv(ndev);
  #line 604 
  int err = 0;
  #line 606 
  if ((aq_nic->aq_fw_ops)->set_flow_control == (int (*)(struct aq_hw_s *))0) 
    #line 607 
    return -95;
  #line 609 
  if (pause->autoneg == 1U) 
                            #line 610 
                            return -95;
  #line 612 
  if (pause->rx_pause != 0U) 
                             #line 613 
                             ((aq_nic->aq_hw)->aq_nic_cfg)->fc.req = (enum aq_fc_mode)((unsigned int)((aq_nic->aq_hw)->aq_nic_cfg)->fc.req | 2U); else 
                                                                    #line 615 
                                                                    ((aq_nic->aq_hw)->aq_nic_cfg)->fc.req = (enum aq_fc_mode)((unsigned int)((aq_nic->aq_hw)->aq_nic_cfg)->fc.req & 4294967293U);
  #line 617 
  if (pause->tx_pause != 0U) 
                             #line 618 
                             ((aq_nic->aq_hw)->aq_nic_cfg)->fc.req = (enum aq_fc_mode)((unsigned int)((aq_nic->aq_hw)->aq_nic_cfg)->fc.req | 1U); else 
                                                                    #line 620 
                                                                    ((aq_nic->aq_hw)->aq_nic_cfg)->fc.req = (enum aq_fc_mode)((unsigned int)((aq_nic->aq_hw)->aq_nic_cfg)->fc.req & 4294967294U);
  #line 622 
  cif_mutex_lock_fwreq_mutex_of_aq_nic_s_1(& aq_nic->fwreq_mutex);
  #line 623 
  err = (*((aq_nic->aq_fw_ops)->set_flow_control))(aq_nic->aq_hw);
  #line 624 
  cif_mutex_unlock_fwreq_mutex_of_aq_nic_s_1(& aq_nic->fwreq_mutex);
  #line 626 
  return err;
}

#line 629  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ethtool.c"
static void aq_get_ringparam(struct net_device *ndev, struct ethtool_ringparam *ring)
{
  #line 633 
  struct aq_nic_cfg_s *cfg;
  #line 632 
  struct aq_nic_s *aq_nic = netdev_priv(ndev);
  #line 635 
  cfg = aq_nic_get_cfg(aq_nic);
  #line 637 
  ring->rx_pending = cfg->rxds;
  #line 638 
  ring->tx_pending = cfg->txds;
  #line 640 
  ring->rx_max_pending = (cfg->aq_hw_caps)->rxds_max;
  #line 641 
  ring->tx_max_pending = (cfg->aq_hw_caps)->txds_max;
  #line 642 
  return;
}

#line 644  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ethtool.c"
static int aq_set_ringparam(struct net_device *ndev, struct ethtool_ringparam *ring)
{
  #line 672 
  __u32 tmp_5;
  #line 673 
  u32 __UNIQUE_ID___x447;
  #line 673 
  u32 tmp_7;
  #line 668 
  __u32 __UNIQUE_ID___x441;
  #line 668 
  __u32 tmp_1;
  #line 669 
  u32 __UNIQUE_ID___x443;
  #line 669 
  u32 tmp_3;
  #line 672 
  __u32 __UNIQUE_ID___x445;
  #line 648 
  struct aq_hw_caps_s *hw_caps;
  #line 650 
  struct aq_nic_cfg_s *cfg;
  #line 647 
  struct aq_nic_s *aq_nic = netdev_priv(ndev);
  #line 649 
  bool ndev_running = (_Bool)0;
  #line 651 
  int err = 0;
  #line 653 
  cfg = aq_nic_get_cfg(aq_nic);
  #line 654 
  hw_caps = cfg->aq_hw_caps;
  #line 656 
  if (ring->rx_mini_pending != 0U || ring->rx_jumbo_pending != 0U) {
    #line 657 
    err = -95;
    #line 658 
    goto err_exit;
  }
  #line 661 
  if ((int)netif_running(ndev) != 0) {
    #line 662 
    ndev_running = (_Bool)1;
    #line 663 
    dev_close(ndev);
  }
  #line 666 
  aq_nic_free_vectors(aq_nic);
  {
    #line 668 
    __UNIQUE_ID___x441 = ring->rx_pending;
    #line 668 
    u32 __UNIQUE_ID___y442 = hw_caps->rxds_min;
    #line 668 
    if (__UNIQUE_ID___x441 > __UNIQUE_ID___y442) 
                                                 #line 668 
                                                 tmp_1 = __UNIQUE_ID___x441; else 
                                                                    #line 668 
                                                                    tmp_1 = __UNIQUE_ID___y442;
    }
  #line 668 
  cfg->rxds = tmp_1;
  {
    #line 669 
    __UNIQUE_ID___x443 = cfg->rxds;
    #line 669 
    u32 __UNIQUE_ID___y444 = hw_caps->rxds_max;
    #line 669 
    if (__UNIQUE_ID___x443 < __UNIQUE_ID___y444) 
                                                 #line 669 
                                                 tmp_3 = __UNIQUE_ID___x443; else 
                                                                    #line 669 
                                                                    tmp_3 = __UNIQUE_ID___y444;
    }
  #line 669 
  cfg->rxds = tmp_3;
  #line 670 
  cfg->rxds = (cfg->rxds + 7U) & 4294967288U;
  {
    #line 672 
    __UNIQUE_ID___x445 = ring->tx_pending;
    #line 672 
    u32 __UNIQUE_ID___y446 = hw_caps->txds_min;
    #line 672 
    if (__UNIQUE_ID___x445 > __UNIQUE_ID___y446) 
                                                 #line 672 
                                                 tmp_5 = __UNIQUE_ID___x445; else 
                                                                    #line 672 
                                                                    tmp_5 = __UNIQUE_ID___y446;
    }
  #line 672 
  cfg->txds = tmp_5;
  {
    #line 673 
    __UNIQUE_ID___x447 = cfg->txds;
    #line 673 
    u32 __UNIQUE_ID___y448 = hw_caps->txds_max;
    #line 673 
    if (__UNIQUE_ID___x447 < __UNIQUE_ID___y448) 
                                                 #line 673 
                                                 tmp_7 = __UNIQUE_ID___x447; else 
                                                                    #line 673 
                                                                    tmp_7 = __UNIQUE_ID___y448;
    }
  #line 673 
  cfg->txds = tmp_7;
  #line 674 
  cfg->txds = (cfg->txds + 7U) & 4294967288U;
  #line 676 
  aq_nic->aq_vecs = 0U;
  #line 676 
  while (aq_nic->aq_vecs < cfg->vecs) {
    #line 678 
    aq_nic->aq_vec[aq_nic->aq_vecs] = aq_vec_alloc(aq_nic,aq_nic->aq_vecs,cfg);
    #line 680 
    if ((long)(aq_nic->aq_vec[aq_nic->aq_vecs] == (struct aq_vec_s *)0) != 0L) {
      #line 681 
      err = -12;
      #line 682 
      goto err_exit;
    }
    #line 676 
    (aq_nic->aq_vecs) ++;
  }
  #line 685 
  if ((int)ndev_running != 0) 
                              #line 686 
                              err = dev_open(ndev,(struct netlink_ext_ack *)0);
  #line 688 
  err_exit: 
            #line 688 
  ;
  #line 689 
  return err;
}

#line 692  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ethtool.c"
static u32 aq_get_msg_level(struct net_device *ndev)
{
  #line 694 
  struct aq_nic_s *aq_nic = netdev_priv(ndev);
  #line 696 
  return aq_nic->msg_enable;
}

#line 699  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ethtool.c"
static void aq_set_msg_level(struct net_device *ndev, u32 data)
{
  #line 701 
  struct aq_nic_s *aq_nic = netdev_priv(ndev);
  #line 703 
  aq_nic->msg_enable = data;
  #line 704 
  return;
}

#line 706  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ethtool.c"
static u32 aq_ethtool_get_priv_flags(struct net_device *ndev)
{
  #line 708 
  struct aq_nic_s *aq_nic = netdev_priv(ndev);
  #line 710 
  return aq_nic->aq_nic_cfg.priv_flags;
}

#line 713  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ethtool.c"
static int aq_ethtool_set_priv_flags(struct net_device *ndev, u32 flags)
{
  #line 716 
  struct aq_nic_cfg_s *cfg;
  #line 717 
  u32 priv_flags;
  #line 715 
  struct aq_nic_s *aq_nic = netdev_priv(ndev);
  #line 719 
  cfg = aq_nic_get_cfg(aq_nic);
  #line 720 
  priv_flags = cfg->priv_flags;
  #line 722 
  if (((unsigned long)flags & 18446744073709551584UL) != 0UL) 
                                                              #line 723 
                                                              return -95;
  #line 725 
  cfg->priv_flags = flags;
  #line 727 
  if (((unsigned long)(priv_flags ^ flags) & 4UL) != 0UL) {
    #line 728 
    if ((int)netif_running(ndev) != 0) {
      #line 729 
      dev_close(ndev);
      #line 731 
      dev_open(ndev,(struct netlink_ext_ack *)0);
    }
  }
  else 
    #line 733 
    if (((unsigned long)(priv_flags ^ flags) & 31UL) != 0UL) 
                                                             #line 734 
                                                             aq_nic_set_loopback(aq_nic);
  #line 737 
  return 0;
}

#line 740  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/aq_ethtool.c"
struct ethtool_ops aq_ethtool_ops = {.get_drvinfo = & aq_ethtool_get_drvinfo, .get_regs_len = & aq_ethtool_get_regs_len, .get_regs = & aq_ethtool_get_regs, .get_wol = & aq_ethtool_get_wol, .set_wol = & aq_ethtool_set_wol, .get_msglevel = & aq_get_msg_level, .set_msglevel = & aq_set_msg_level, .nway_reset = & aq_ethtool_nway_reset, .get_link = & aq_ethtool_get_link, .get_coalesce = & aq_ethtool_get_coalesce, .set_coalesce = & aq_ethtool_set_coalesce, .get_ringparam = & aq_get_ringparam, .set_ringparam = & aq_set_ringparam, .get_pauseparam = & aq_ethtool_get_pauseparam, .set_pauseparam = & aq_ethtool_set_pauseparam, .get_strings = & aq_ethtool_get_strings, .set_phys_id = & aq_ethtool_set_phys_id, .get_ethtool_stats = & aq_ethtool_stats, .get_priv_flags = & aq_ethtool_get_priv_flags, .set_priv_flags = & aq_ethtool_set_priv_flags, .get_sset_count = & aq_ethtool_get_sset_count, .get_rxnfc = & aq_ethtool_get_rxnfc, .set_rxnfc = & aq_ethtool_set_rxnfc, .get_rxfh_key_size = & aq_ethtool_get_rss_key_size, .get_rxfh_indir_size = & aq_ethtool_get_rss_indir_size, .get_rxfh = & aq_ethtool_get_rss, .set_rxfh = & aq_ethtool_set_rss, .get_ts_info = & aq_ethtool_get_ts_info, .get_eee = & aq_ethtool_get_eee, .set_eee = & aq_ethtool_set_eee, .get_link_ksettings = & aq_ethtool_get_link_ksettings, .set_link_ksettings = & aq_ethtool_set_link_ksettings};
#line 109  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_ethtool.i.aux"
int emg_wrapper_aq_ethtool_get_coalesce(struct net_device *arg0, struct ethtool_coalesce *arg1)
{
  #line 110 
  return aq_ethtool_get_coalesce(arg0,arg1);
}

#line 114  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_ethtool.i.aux"
void emg_wrapper_aq_ethtool_get_drvinfo(struct net_device *arg0, struct ethtool_drvinfo *arg1)
{
  #line 115 
  aq_ethtool_get_drvinfo(arg0,arg1);
  #line 116 
  return;
}

#line 119  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_ethtool.i.aux"
int emg_wrapper_aq_ethtool_get_eee(struct net_device *arg0, struct ethtool_eee *arg1)
{
  #line 120 
  return aq_ethtool_get_eee(arg0,arg1);
}

#line 124  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_ethtool.i.aux"
unsigned int emg_wrapper_aq_ethtool_get_link(struct net_device *arg0)
{
  #line 125 
  return aq_ethtool_get_link(arg0);
}

#line 129  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_ethtool.i.aux"
int emg_wrapper_aq_ethtool_get_link_ksettings(struct net_device *arg0, struct ethtool_link_ksettings *arg1)
{
  #line 130 
  return aq_ethtool_get_link_ksettings(arg0,arg1);
}

#line 134  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_ethtool.i.aux"
void emg_wrapper_aq_ethtool_get_pauseparam(struct net_device *arg0, struct ethtool_pauseparam *arg1)
{
  #line 135 
  aq_ethtool_get_pauseparam(arg0,arg1);
  #line 136 
  return;
}

#line 139  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_ethtool.i.aux"
unsigned int emg_wrapper_aq_ethtool_get_priv_flags(struct net_device *arg0)
{
  #line 140 
  return aq_ethtool_get_priv_flags(arg0);
}

#line 144  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_ethtool.i.aux"
void emg_wrapper_aq_ethtool_get_regs(struct net_device *arg0, struct ethtool_regs *arg1, void *arg2)
{
  #line 145 
  aq_ethtool_get_regs(arg0,arg1,arg2);
  #line 146 
  return;
}

#line 149  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_ethtool.i.aux"
int emg_wrapper_aq_ethtool_get_regs_len(struct net_device *arg0)
{
  #line 150 
  return aq_ethtool_get_regs_len(arg0);
}

#line 154  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_ethtool.i.aux"
int emg_wrapper_aq_ethtool_get_rss(struct net_device *arg0, unsigned int *arg1, unsigned char *arg2, unsigned char *arg3)
{
  #line 155 
  return aq_ethtool_get_rss(arg0,arg1,arg2,arg3);
}

#line 159  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_ethtool.i.aux"
unsigned int emg_wrapper_aq_ethtool_get_rss_indir_size(struct net_device *arg0)
{
  #line 160 
  return aq_ethtool_get_rss_indir_size(arg0);
}

#line 164  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_ethtool.i.aux"
unsigned int emg_wrapper_aq_ethtool_get_rss_key_size(struct net_device *arg0)
{
  #line 165 
  return aq_ethtool_get_rss_key_size(arg0);
}

#line 169  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_ethtool.i.aux"
int emg_wrapper_aq_ethtool_get_rxnfc(struct net_device *arg0, struct ethtool_rxnfc *arg1, unsigned int *arg2)
{
  #line 170 
  return aq_ethtool_get_rxnfc(arg0,arg1,arg2);
}

#line 174  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_ethtool.i.aux"
int emg_wrapper_aq_ethtool_get_sset_count(struct net_device *arg0, int arg1)
{
  #line 175 
  return aq_ethtool_get_sset_count(arg0,arg1);
}

#line 179  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_ethtool.i.aux"
void emg_wrapper_aq_ethtool_get_strings(struct net_device *arg0, unsigned int arg1, unsigned char *arg2)
{
  #line 180 
  aq_ethtool_get_strings(arg0,arg1,arg2);
  #line 181 
  return;
}

#line 184  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_ethtool.i.aux"
int emg_wrapper_aq_ethtool_get_ts_info(struct net_device *arg0, struct ethtool_ts_info *arg1)
{
  #line 185 
  return aq_ethtool_get_ts_info(arg0,arg1);
}

#line 189  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_ethtool.i.aux"
void emg_wrapper_aq_ethtool_get_wol(struct net_device *arg0, struct ethtool_wolinfo *arg1)
{
  #line 190 
  aq_ethtool_get_wol(arg0,arg1);
  #line 191 
  return;
}

#line 194  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_ethtool.i.aux"
int emg_wrapper_aq_ethtool_nway_reset(struct net_device *arg0)
{
  #line 195 
  return aq_ethtool_nway_reset(arg0);
}

#line 199  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_ethtool.i.aux"
int emg_wrapper_aq_ethtool_set_coalesce(struct net_device *arg0, struct ethtool_coalesce *arg1)
{
  #line 200 
  return aq_ethtool_set_coalesce(arg0,arg1);
}

#line 204  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_ethtool.i.aux"
int emg_wrapper_aq_ethtool_set_eee(struct net_device *arg0, struct ethtool_eee *arg1)
{
  #line 205 
  return aq_ethtool_set_eee(arg0,arg1);
}

#line 209  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_ethtool.i.aux"
int emg_wrapper_aq_ethtool_set_link_ksettings(struct net_device *arg0, struct ethtool_link_ksettings *arg1)
{
  #line 210 
  return aq_ethtool_set_link_ksettings(arg0,arg1);
}

#line 214  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_ethtool.i.aux"
int emg_wrapper_aq_ethtool_set_pauseparam(struct net_device *arg0, struct ethtool_pauseparam *arg1)
{
  #line 215 
  return aq_ethtool_set_pauseparam(arg0,arg1);
}

#line 219  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_ethtool.i.aux"
int emg_wrapper_aq_ethtool_set_phys_id(struct net_device *arg0, enum ethtool_phys_id_state arg1)
{
  #line 220 
  return aq_ethtool_set_phys_id(arg0,arg1);
}

#line 224  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_ethtool.i.aux"
int emg_wrapper_aq_ethtool_set_priv_flags(struct net_device *arg0, unsigned int arg1)
{
  #line 225 
  return aq_ethtool_set_priv_flags(arg0,arg1);
}

#line 229  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_ethtool.i.aux"
int emg_wrapper_aq_ethtool_set_rss(struct net_device *arg0, unsigned int *arg1, unsigned char *arg2, unsigned char arg3)
{
  #line 230 
  return aq_ethtool_set_rss(arg0,arg1,arg2,(unsigned char)((int)arg3));
}

#line 234  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_ethtool.i.aux"
int emg_wrapper_aq_ethtool_set_rxnfc(struct net_device *arg0, struct ethtool_rxnfc *arg1)
{
  #line 235 
  return aq_ethtool_set_rxnfc(arg0,arg1);
}

#line 239  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_ethtool.i.aux"
int emg_wrapper_aq_ethtool_set_wol(struct net_device *arg0, struct ethtool_wolinfo *arg1)
{
  #line 240 
  return aq_ethtool_set_wol(arg0,arg1);
}

#line 244  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_ethtool.i.aux"
void emg_wrapper_aq_ethtool_stats(struct net_device *arg0, struct ethtool_stats *arg1, unsigned long long *arg2)
{
  #line 245 
  aq_ethtool_stats(arg0,arg1,arg2);
  #line 246 
  return;
}

#line 249  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_ethtool.i.aux"
unsigned int emg_wrapper_aq_get_msg_level(struct net_device *arg0)
{
  #line 250 
  return aq_get_msg_level(arg0);
}

#line 254  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_ethtool.i.aux"
void emg_wrapper_aq_get_ringparam(struct net_device *arg0, struct ethtool_ringparam *arg1)
{
  #line 255 
  aq_get_ringparam(arg0,arg1);
  #line 256 
  return;
}

#line 259  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_ethtool.i.aux"
void emg_wrapper_aq_set_msg_level(struct net_device *arg0, unsigned int arg1)
{
  #line 260 
  aq_set_msg_level(arg0,arg1);
  #line 261 
  return;
}

#line 264  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_ethtool.i.aux"
int emg_wrapper_aq_set_ringparam(struct net_device *arg0, struct ethtool_ringparam *arg1)
{
  #line 265 
  return aq_set_ringparam(arg0,arg1);
}

#line 830  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_ethtool.i.aux"
static void cif_mutex_lock_fwreq_mutex_of_aq_nic_s_1(struct mutex *lock)
{
  #line 833 
  ldv_mutex_model_lock(lock,(char *)"fwreq_mutex_of_aq_nic_s");
  #line 834 
  return;
}

#line 837  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/0/concurrency safety/weaver/aq_ethtool.i.aux"
static void cif_mutex_unlock_fwreq_mutex_of_aq_nic_s_1(struct mutex *lock)
{
  #line 840 
  ldv_mutex_model_unlock(lock,(char *)"fwreq_mutex_of_aq_nic_s");
  #line 841 
  return;
}

#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.h"
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
u32 hw_atl_reg_glb_cpu_sem_get(struct aq_hw_s *aq_hw, u32 semaphore);
#line 250  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.h"
#line 506  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_reg_rx_flr_control2_set(struct aq_hw_s *aq_hw, u32 rx_filter_control2);
#line 475  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.h"
#line 976  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_rpf_etht_mgt_queue_set(struct aq_hw_s *aq_hw, u32 etht_mgt_queue, u32 filter);
#line 505  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.h"
#line 1043  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
u32 hw_atl_rpo_outer_vlan_tag_mode_get(void *context);
#line 715  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.h"
#line 1510  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
u32 hw_atl_msm_reg_access_status_get(struct aq_hw_s *aq_hw);
#line 718  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.h"
#line 1517  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_msm_reg_addr_for_indirect_addr_set(struct aq_hw_s *aq_hw, u32 reg_addr_for_indirect_addr);
#line 722  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.h"
#line 1526  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_msm_reg_rd_strobe_set(struct aq_hw_s *aq_hw, u32 reg_rd_strobe);
#line 725  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.h"
#line 1534  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
u32 hw_atl_msm_reg_rd_data_get(struct aq_hw_s *aq_hw);
#line 728  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.h"
#line 1539  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_msm_reg_wr_data_set(struct aq_hw_s *aq_hw, u32 reg_wr_data);
#line 731  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.h"
#line 1544  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_msm_reg_wr_strobe_set(struct aq_hw_s *aq_hw, u32 reg_wr_strobe);
#line 782  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.h"
#line 1694  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_glb_mdio_iface1_set(struct aq_hw_s *aq_hw, u32 value);
#line 785  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.h"
#line 1699  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
u32 hw_atl_glb_mdio_iface1_get(struct aq_hw_s *aq_hw);
#line 791  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.h"
#line 1709  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
u32 hw_atl_glb_mdio_iface2_get(struct aq_hw_s *aq_hw);
#line 797  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.h"
#line 1719  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
u32 hw_atl_glb_mdio_iface3_get(struct aq_hw_s *aq_hw);
#line 803  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.h"
#line 1729  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
u32 hw_atl_glb_mdio_iface4_get(struct aq_hw_s *aq_hw);
#line 806  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.h"
#line 1734  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_glb_mdio_iface5_set(struct aq_hw_s *aq_hw, u32 value);
#line 820  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.h"
#line 1678  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
u32 hw_atl_scrpad_get(struct aq_hw_s *aq_hw, u32 scratch_scp);
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_reg_glb_cpu_sem_set(struct aq_hw_s *aq_hw, u32 glb_cpu_sem, u32 semaphore)
{
  #line 19 
  aq_hw_write_reg(aq_hw,(semaphore + 232U) * 4U,glb_cpu_sem);
  #line 20 
  return;
}

#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
u32 hw_atl_reg_glb_cpu_sem_get(struct aq_hw_s *aq_hw, u32 semaphore)
{
  #line 24 
  return aq_hw_read_reg(aq_hw,(semaphore + 232U) * 4U);
}

#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_glb_glb_reg_res_dis_set(struct aq_hw_s *aq_hw, u32 glb_reg_res_dis)
{
  #line 29 
  aq_hw_write_reg_bit(aq_hw,0U,16384U,14U,glb_reg_res_dis);
  #line 30 
  return;
}

#line 35  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_glb_soft_res_set(struct aq_hw_s *aq_hw, u32 soft_res)
{
  #line 37 
  aq_hw_write_reg_bit(aq_hw,0U,32768U,15U,soft_res);
  #line 38 
  return;
}

#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
u32 hw_atl_glb_soft_res_get(struct aq_hw_s *aq_hw)
{
  #line 44 
  return aq_hw_read_reg_bit(aq_hw,0U,32768U,15U);
}

#line 49  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
u32 hw_atl_reg_glb_mif_id_get(struct aq_hw_s *aq_hw)
{
  #line 51 
  return aq_hw_read_reg(aq_hw,28U);
}

#line 55  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
u32 hw_atl_rpb_rx_dma_drop_pkt_cnt_get(struct aq_hw_s *aq_hw)
{
  #line 57 
  return aq_hw_read_reg(aq_hw,26648U);
}

#line 60  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
u64 hw_atl_stats_rx_dma_good_octet_counter_get(struct aq_hw_s *aq_hw)
{
  #line 62 
  return aq_hw_read_reg64(aq_hw,26632U);
}

#line 65  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
u64 hw_atl_stats_rx_dma_good_pkt_counter_get(struct aq_hw_s *aq_hw)
{
  #line 67 
  return aq_hw_read_reg64(aq_hw,26624U);
}

#line 70  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
u64 hw_atl_stats_tx_dma_good_octet_counter_get(struct aq_hw_s *aq_hw)
{
  #line 72 
  return aq_hw_read_reg64(aq_hw,34824U);
}

#line 75  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
u64 hw_atl_stats_tx_dma_good_pkt_counter_get(struct aq_hw_s *aq_hw)
{
  #line 77 
  return aq_hw_read_reg64(aq_hw,34816U);
}

#line 81  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_itr_irq_auto_masklsw_set(struct aq_hw_s *aq_hw, u32 irq_auto_masklsw)
{
  #line 84 
  aq_hw_write_reg(aq_hw,8336U,irq_auto_masklsw);
  #line 85 
  return;
}

#line 87  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_itr_irq_map_en_rx_set(struct aq_hw_s *aq_hw, u32 irq_map_en_rx, u32 rx)
{
  #line 91 
  u32 itr_imr_rxren_adr[32U] = {8448U, 8448U, 8452U, 8452U, 8456U, 8456U, 8460U, 8460U, 8464U, 8464U, 8468U, 8468U, 8472U, 8472U, 8476U, 8476U, 8480U, 8480U, 8484U, 8484U, 8488U, 8488U, 8492U, 8492U, 8496U, 8496U, 8500U, 8500U, 8504U, 8504U, 8508U, 8508U};
  #line 103 
  u32 itr_imr_rxren_msk[32U] = {32768U, 128U, 32768U, 128U, 32768U, 128U, 32768U, 128U, 32768U, 128U, 32768U, 128U, 32768U, 128U, 32768U, 128U, 32768U, 128U, 32768U, 128U, 32768U, 128U, 32768U, 128U, 32768U, 128U, 32768U, 128U, 32768U, 128U, 32768U, 128U};
  #line 115 
  u32 itr_imr_rxren_shift[32U] = {15U, 7U, 15U, 7U, 15U, 7U, 15U, 7U, 15U, 7U, 15U, 7U, 15U, 7U, 15U, 7U, 15U, 7U, 15U, 7U, 15U, 7U, 15U, 7U, 15U, 7U, 15U, 7U, 15U, 7U, 15U, 7U};
  #line 122 
  aq_hw_write_reg_bit(aq_hw,itr_imr_rxren_adr[rx],itr_imr_rxren_msk[rx],itr_imr_rxren_shift[rx],irq_map_en_rx);
  #line 125 
  return;
}

#line 128  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_itr_irq_map_en_tx_set(struct aq_hw_s *aq_hw, u32 irq_map_en_tx, u32 tx)
{
  #line 132 
  u32 itr_imr_txten_adr[32U] = {8448U, 8448U, 8452U, 8452U, 8456U, 8456U, 8460U, 8460U, 8464U, 8464U, 8468U, 8468U, 8472U, 8472U, 8476U, 8476U, 8480U, 8480U, 8484U, 8484U, 8488U, 8488U, 8492U, 8492U, 8496U, 8496U, 8500U, 8500U, 8504U, 8504U, 8508U, 8508U};
  #line 144 
  u32 itr_imr_txten_msk[32U] = {2147483648U, 8388608U, 2147483648U, 8388608U, 2147483648U, 8388608U, 2147483648U, 8388608U, 2147483648U, 8388608U, 2147483648U, 8388608U, 2147483648U, 8388608U, 2147483648U, 8388608U, 2147483648U, 8388608U, 2147483648U, 8388608U, 2147483648U, 8388608U, 2147483648U, 8388608U, 2147483648U, 8388608U, 2147483648U, 8388608U, 2147483648U, 8388608U, 2147483648U, 8388608U};
  #line 156 
  u32 itr_imr_txten_shift[32U] = {31U, 23U, 31U, 23U, 31U, 23U, 31U, 23U, 31U, 23U, 31U, 23U, 31U, 23U, 31U, 23U, 31U, 23U, 31U, 23U, 31U, 23U, 31U, 23U, 31U, 23U, 31U, 23U, 31U, 23U, 31U, 23U};
  #line 163 
  aq_hw_write_reg_bit(aq_hw,itr_imr_txten_adr[tx],itr_imr_txten_msk[tx],itr_imr_txten_shift[tx],irq_map_en_tx);
  #line 166 
  return;
}

#line 169  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_itr_irq_map_rx_set(struct aq_hw_s *aq_hw, u32 irq_map_rx, u32 rx)
{
  #line 172 
  u32 itr_imr_rxr_adr[32U] = {8448U, 8448U, 8452U, 8452U, 8456U, 8456U, 8460U, 8460U, 8464U, 8464U, 8468U, 8468U, 8472U, 8472U, 8476U, 8476U, 8480U, 8480U, 8484U, 8484U, 8488U, 8488U, 8492U, 8492U, 8496U, 8496U, 8500U, 8500U, 8504U, 8504U, 8508U, 8508U};
  #line 184 
  u32 itr_imr_rxr_msk[32U] = {7936U, 31U, 7936U, 31U, 7936U, 31U, 7936U, 31U, 7936U, 31U, 7936U, 31U, 7936U, 31U, 7936U, 31U, 7936U, 31U, 7936U, 31U, 7936U, 31U, 7936U, 31U, 7936U, 31U, 7936U, 31U, 7936U, 31U, 7936U, 31U};
  #line 196 
  u32 itr_imr_rxr_shift[32U] = {8U, 0U, 8U, 0U, 8U, 0U, 8U, 0U, 8U, 0U, 8U, 0U, 8U, 0U, 8U, 0U, 8U, 0U, 8U, 0U, 8U, 0U, 8U, 0U, 8U, 0U, 8U, 0U, 8U, 0U, 8U, 0U};
  #line 203 
  aq_hw_write_reg_bit(aq_hw,itr_imr_rxr_adr[rx],itr_imr_rxr_msk[rx],itr_imr_rxr_shift[rx],irq_map_rx);
  #line 206 
  return;
}

#line 209  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_itr_irq_map_tx_set(struct aq_hw_s *aq_hw, u32 irq_map_tx, u32 tx)
{
  #line 212 
  u32 itr_imr_txt_adr[32U] = {8448U, 8448U, 8452U, 8452U, 8456U, 8456U, 8460U, 8460U, 8464U, 8464U, 8468U, 8468U, 8472U, 8472U, 8476U, 8476U, 8480U, 8480U, 8484U, 8484U, 8488U, 8488U, 8492U, 8492U, 8496U, 8496U, 8500U, 8500U, 8504U, 8504U, 8508U, 8508U};
  #line 224 
  u32 itr_imr_txt_msk[32U] = {520093696U, 2031616U, 520093696U, 2031616U, 520093696U, 2031616U, 520093696U, 2031616U, 520093696U, 2031616U, 520093696U, 2031616U, 520093696U, 2031616U, 520093696U, 2031616U, 520093696U, 2031616U, 520093696U, 2031616U, 520093696U, 2031616U, 520093696U, 2031616U, 520093696U, 2031616U, 520093696U, 2031616U, 520093696U, 2031616U, 520093696U, 2031616U};
  #line 236 
  u32 itr_imr_txt_shift[32U] = {24U, 16U, 24U, 16U, 24U, 16U, 24U, 16U, 24U, 16U, 24U, 16U, 24U, 16U, 24U, 16U, 24U, 16U, 24U, 16U, 24U, 16U, 24U, 16U, 24U, 16U, 24U, 16U, 24U, 16U, 24U, 16U};
  #line 243 
  aq_hw_write_reg_bit(aq_hw,itr_imr_txt_adr[tx],itr_imr_txt_msk[tx],itr_imr_txt_shift[tx],irq_map_tx);
  #line 246 
  return;
}

#line 249  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_itr_irq_msk_clearlsw_set(struct aq_hw_s *aq_hw, u32 irq_msk_clearlsw)
{
  #line 252 
  aq_hw_write_reg(aq_hw,8304U,irq_msk_clearlsw);
  #line 253 
  return;
}

#line 255  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_itr_irq_msk_setlsw_set(struct aq_hw_s *aq_hw, u32 irq_msk_setlsw)
{
  #line 257 
  aq_hw_write_reg(aq_hw,8288U,irq_msk_setlsw);
  #line 258 
  return;
}

#line 260  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_itr_irq_reg_res_dis_set(struct aq_hw_s *aq_hw, u32 irq_reg_res_dis)
{
  #line 262 
  aq_hw_write_reg_bit(aq_hw,8960U,536870912U,29U,irq_reg_res_dis);
  #line 263 
  return;
}

#line 267  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_itr_irq_status_clearlsw_set(struct aq_hw_s *aq_hw, u32 irq_status_clearlsw)
{
  #line 270 
  aq_hw_write_reg(aq_hw,8272U,irq_status_clearlsw);
  #line 271 
  return;
}

#line 273  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
u32 hw_atl_itr_irq_statuslsw_get(struct aq_hw_s *aq_hw)
{
  #line 275 
  return aq_hw_read_reg(aq_hw,8192U);
}

#line 278  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
u32 hw_atl_itr_res_irq_get(struct aq_hw_s *aq_hw)
{
  #line 280 
  return aq_hw_read_reg_bit(aq_hw,8960U,2147483648U,31U);
}

#line 284  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_itr_res_irq_set(struct aq_hw_s *aq_hw, u32 res_irq)
{
  #line 286 
  aq_hw_write_reg_bit(aq_hw,8960U,2147483648U,31U,res_irq);
  #line 287 
  return;
}

#line 291  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_itr_rsc_en_set(struct aq_hw_s *aq_hw, u32 enable)
{
  #line 293 
  aq_hw_write_reg(aq_hw,8704U,enable);
  #line 294 
  return;
}

#line 297  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_itr_rsc_delay_set(struct aq_hw_s *aq_hw, u32 delay)
{
  #line 299 
  aq_hw_write_reg_bit(aq_hw,8708U,15U,0U,delay);
  #line 300 
  return;
}

#line 306  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_rdm_cpu_id_set(struct aq_hw_s *aq_hw, u32 cpuid, u32 dca)
{
  #line 308 
  aq_hw_write_reg_bit(aq_hw,(dca + 6208U) * 4U,255U,0U,cpuid);
  #line 309 
  return;
}

#line 313  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_rdm_rx_dca_en_set(struct aq_hw_s *aq_hw, u32 rx_dca_en)
{
  #line 315 
  aq_hw_write_reg_bit(aq_hw,24960U,2147483648U,31U,rx_dca_en);
  #line 316 
  return;
}

#line 319  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_rdm_rx_dca_mode_set(struct aq_hw_s *aq_hw, u32 rx_dca_mode)
{
  #line 321 
  aq_hw_write_reg_bit(aq_hw,24960U,15U,0U,rx_dca_mode);
  #line 322 
  return;
}

#line 326  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_rdm_rx_desc_data_buff_size_set(struct aq_hw_s *aq_hw, u32 rx_desc_data_buff_size, u32 descriptor)
{
  #line 330 
  aq_hw_write_reg_bit(aq_hw,descriptor * 32U + 23320U,31U,0U,rx_desc_data_buff_size);
  #line 331 
  return;
}

#line 336  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_rdm_rx_desc_dca_en_set(struct aq_hw_s *aq_hw, u32 rx_desc_dca_en, u32 dca)
{
  #line 339 
  aq_hw_write_reg_bit(aq_hw,(dca + 6208U) * 4U,2147483648U,31U,rx_desc_dca_en);
  #line 340 
  return;
}

#line 345  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_rdm_rx_desc_en_set(struct aq_hw_s *aq_hw, u32 rx_desc_en, u32 descriptor)
{
  #line 348 
  aq_hw_write_reg_bit(aq_hw,descriptor * 32U + 23304U,2147483648U,31U,rx_desc_en);
  #line 349 
  return;
}

#line 354  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_rdm_rx_desc_head_buff_size_set(struct aq_hw_s *aq_hw, u32 rx_desc_head_buff_size, u32 descriptor)
{
  #line 358 
  aq_hw_write_reg_bit(aq_hw,descriptor * 32U + 23320U,7936U,8U,rx_desc_head_buff_size);
  #line 359 
  return;
}

#line 364  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_rdm_rx_desc_head_splitting_set(struct aq_hw_s *aq_hw, u32 rx_desc_head_splitting, u32 descriptor)
{
  #line 368 
  aq_hw_write_reg_bit(aq_hw,descriptor * 32U + 23304U,268435456U,28U,rx_desc_head_splitting);
  #line 369 
  return;
}

#line 374  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
u32 hw_atl_rdm_rx_desc_head_ptr_get(struct aq_hw_s *aq_hw, u32 descriptor)
{
  #line 376 
  return aq_hw_read_reg_bit(aq_hw,descriptor * 32U + 23308U,8191U,0U);
}

#line 381  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_rdm_rx_desc_len_set(struct aq_hw_s *aq_hw, u32 rx_desc_len, u32 descriptor)
{
  #line 384 
  aq_hw_write_reg_bit(aq_hw,descriptor * 32U + 23304U,8184U,3U,rx_desc_len);
  #line 385 
  return;
}

#line 389  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_rdm_rx_desc_res_set(struct aq_hw_s *aq_hw, u32 rx_desc_res, u32 descriptor)
{
  #line 392 
  aq_hw_write_reg_bit(aq_hw,descriptor * 32U + 23304U,33554432U,25U,rx_desc_res);
  #line 393 
  return;
}

#line 398  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_rdm_rx_desc_wr_wb_irq_en_set(struct aq_hw_s *aq_hw, u32 rx_desc_wr_wb_irq_en)
{
  #line 401 
  aq_hw_write_reg_bit(aq_hw,23088U,4U,2U,rx_desc_wr_wb_irq_en);
  #line 402 
  return;
}

#line 407  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_rdm_rx_head_dca_en_set(struct aq_hw_s *aq_hw, u32 rx_head_dca_en, u32 dca)
{
  #line 410 
  aq_hw_write_reg_bit(aq_hw,(dca + 6208U) * 4U,1073741824U,30U,rx_head_dca_en);
  #line 411 
  return;
}

#line 416  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_rdm_rx_pld_dca_en_set(struct aq_hw_s *aq_hw, u32 rx_pld_dca_en, u32 dca)
{
  #line 419 
  aq_hw_write_reg_bit(aq_hw,(dca + 6208U) * 4U,536870912U,29U,rx_pld_dca_en);
  #line 420 
  return;
}

#line 425  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_rdm_rdm_intr_moder_en_set(struct aq_hw_s *aq_hw, u32 rdm_intr_moder_en)
{
  #line 428 
  aq_hw_write_reg_bit(aq_hw,23088U,8U,3U,rdm_intr_moder_en);
  #line 429 
  return;
}

#line 435  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_reg_gen_irq_map_set(struct aq_hw_s *aq_hw, u32 gen_intr_map, u32 regidx)
{
  #line 438 
  aq_hw_write_reg(aq_hw,(regidx + 2144U) * 4U,gen_intr_map);
  #line 439 
  return;
}

#line 441  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
u32 hw_atl_reg_gen_irq_status_get(struct aq_hw_s *aq_hw)
{
  #line 443 
  return aq_hw_read_reg(aq_hw,8612U);
}

#line 446  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_reg_irq_glb_ctl_set(struct aq_hw_s *aq_hw, u32 intr_glb_ctl)
{
  #line 448 
  aq_hw_write_reg(aq_hw,8960U,intr_glb_ctl);
  #line 449 
  return;
}

#line 451  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_reg_irq_thr_set(struct aq_hw_s *aq_hw, u32 intr_thr, u32 throttle)
{
  #line 453 
  aq_hw_write_reg(aq_hw,(throttle + 2560U) * 4U,intr_thr);
  #line 454 
  return;
}

#line 456  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_reg_rx_dma_desc_base_addresslswset(struct aq_hw_s *aq_hw, u32 rx_dma_desc_base_addrlsw, u32 descriptor)
{
  #line 460 
  aq_hw_write_reg(aq_hw,(descriptor + 728U) * 32U,rx_dma_desc_base_addrlsw);
  #line 461 
  return;
}

#line 464  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_reg_rx_dma_desc_base_addressmswset(struct aq_hw_s *aq_hw, u32 rx_dma_desc_base_addrmsw, u32 descriptor)
{
  #line 468 
  aq_hw_write_reg(aq_hw,descriptor * 32U + 23300U,rx_dma_desc_base_addrmsw);
  #line 469 
  return;
}

#line 472  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
u32 hw_atl_reg_rx_dma_desc_status_get(struct aq_hw_s *aq_hw, u32 descriptor)
{
  #line 474 
  return aq_hw_read_reg(aq_hw,descriptor * 32U + 23316U);
}

#line 477  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_reg_rx_dma_desc_tail_ptr_set(struct aq_hw_s *aq_hw, u32 rx_dma_desc_tail_ptr, u32 descriptor)
{
  #line 481 
  aq_hw_write_reg(aq_hw,descriptor * 32U + 23312U,rx_dma_desc_tail_ptr);
  #line 482 
  return;
}

#line 485  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_reg_rx_flr_mcst_flr_msk_set(struct aq_hw_s *aq_hw, u32 rx_flr_mcst_flr_msk)
{
  #line 488 
  aq_hw_write_reg(aq_hw,21104U,rx_flr_mcst_flr_msk);
  #line 489 
  return;
}

#line 492  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_reg_rx_flr_mcst_flr_set(struct aq_hw_s *aq_hw, u32 rx_flr_mcst_flr, u32 filter)
{
  #line 495 
  aq_hw_write_reg(aq_hw,(filter + 5268U) * 4U,rx_flr_mcst_flr);
  #line 496 
  return;
}

#line 499  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_reg_rx_flr_rss_control1set(struct aq_hw_s *aq_hw, u32 rx_flr_rss_control1)
{
  #line 502 
  aq_hw_write_reg(aq_hw,21696U,rx_flr_rss_control1);
  #line 503 
  return;
}

#line 506  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_reg_rx_flr_control2_set(struct aq_hw_s *aq_hw, u32 rx_filter_control2)
{
  #line 509 
  aq_hw_write_reg(aq_hw,20740U,rx_filter_control2);
  #line 510 
  return;
}

#line 512  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_reg_rx_intr_moder_ctrl_set(struct aq_hw_s *aq_hw, u32 rx_intr_moderation_ctl, u32 queue)
{
  #line 516 
  aq_hw_write_reg(aq_hw,(queue + 5776U) * 4U,rx_intr_moderation_ctl);
  #line 517 
  return;
}

#line 520  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_reg_tx_dma_debug_ctl_set(struct aq_hw_s *aq_hw, u32 tx_dma_debug_ctl)
{
  #line 523 
  aq_hw_write_reg(aq_hw,35104U,tx_dma_debug_ctl);
  #line 524 
  return;
}

#line 526  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_reg_tx_dma_desc_base_addresslswset(struct aq_hw_s *aq_hw, u32 tx_dma_desc_base_addrlsw, u32 descriptor)
{
  #line 530 
  aq_hw_write_reg(aq_hw,(descriptor + 496U) * 64U,tx_dma_desc_base_addrlsw);
  #line 531 
  return;
}

#line 534  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_reg_tx_dma_desc_base_addressmswset(struct aq_hw_s *aq_hw, u32 tx_dma_desc_base_addrmsw, u32 descriptor)
{
  #line 538 
  aq_hw_write_reg(aq_hw,descriptor * 64U + 31748U,tx_dma_desc_base_addrmsw);
  #line 539 
  return;
}

#line 542  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_reg_tx_dma_desc_tail_ptr_set(struct aq_hw_s *aq_hw, u32 tx_dma_desc_tail_ptr, u32 descriptor)
{
  #line 546 
  aq_hw_write_reg(aq_hw,descriptor * 64U + 31760U,tx_dma_desc_tail_ptr);
  #line 547 
  return;
}

#line 550  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_reg_tx_intr_moder_ctrl_set(struct aq_hw_s *aq_hw, u32 tx_intr_moderation_ctl, u32 queue)
{
  #line 554 
  aq_hw_write_reg(aq_hw,(queue + 8800U) * 4U,tx_intr_moderation_ctl);
  #line 555 
  return;
}

#line 559  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_rpb_dma_sys_lbk_set(struct aq_hw_s *aq_hw, u32 dma_sys_lbk)
{
  #line 561 
  aq_hw_write_reg_bit(aq_hw,20480U,64U,6U,dma_sys_lbk);
  #line 562 
  return;
}

#line 566  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_rpb_dma_net_lbk_set(struct aq_hw_s *aq_hw, u32 dma_net_lbk)
{
  #line 568 
  aq_hw_write_reg_bit(aq_hw,20480U,16U,4U,dma_net_lbk);
  #line 569 
  return;
}

#line 573  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_rpb_rpf_rx_traf_class_mode_set(struct aq_hw_s *aq_hw, u32 rx_traf_class_mode)
{
  #line 576 
  aq_hw_write_reg_bit(aq_hw,22272U,256U,8U,rx_traf_class_mode);
  #line 577 
  return;
}

#line 582  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
u32 hw_atl_rpb_rpf_rx_traf_class_mode_get(struct aq_hw_s *aq_hw)
{
  #line 584 
  return aq_hw_read_reg_bit(aq_hw,22272U,256U,8U);
}

#line 589  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_rpb_rx_buff_en_set(struct aq_hw_s *aq_hw, u32 rx_buff_en)
{
  #line 591 
  aq_hw_write_reg_bit(aq_hw,22272U,1U,0U,rx_buff_en);
  #line 592 
  return;
}

#line 596  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_rpb_rx_buff_hi_threshold_per_tc_set(struct aq_hw_s *aq_hw, u32 rx_buff_hi_threshold_per_tc, u32 buffer)
{
  #line 600 
  aq_hw_write_reg_bit(aq_hw,buffer * 16U + 22292U,1073676288U,16U,rx_buff_hi_threshold_per_tc);
  #line 601 
  return;
}

#line 606  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_rpb_rx_buff_lo_threshold_per_tc_set(struct aq_hw_s *aq_hw, u32 rx_buff_lo_threshold_per_tc, u32 buffer)
{
  #line 610 
  aq_hw_write_reg_bit(aq_hw,buffer * 16U + 22292U,16383U,0U,rx_buff_lo_threshold_per_tc);
  #line 611 
  return;
}

#line 616  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_rpb_rx_flow_ctl_mode_set(struct aq_hw_s *aq_hw, u32 rx_flow_ctl_mode)
{
  #line 618 
  aq_hw_write_reg_bit(aq_hw,22272U,48U,4U,rx_flow_ctl_mode);
  #line 619 
  return;
}

#line 623  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_rdm_rx_dma_desc_cache_init_tgl(struct aq_hw_s *aq_hw)
{
  #line 625 
  u32 val;
  #line 627 
  val = aq_hw_read_reg_bit(aq_hw,23040U,4294967295U,0U);
  #line 631 
  aq_hw_write_reg_bit(aq_hw,23040U,4294967295U,0U,val ^ 1U);
  #line 635 
  return;
}

#line 637  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
u32 hw_atl_rdm_rx_dma_desc_cache_init_done_get(struct aq_hw_s *aq_hw)
{
  #line 639 
  return aq_hw_read_reg_bit(aq_hw,23056U,1U,0U);
}

#line 644  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_rpb_rx_pkt_buff_size_per_tc_set(struct aq_hw_s *aq_hw, u32 rx_pkt_buff_size_per_tc, u32 buffer)
{
  #line 647 
  aq_hw_write_reg_bit(aq_hw,(buffer + 1393U) * 16U,511U,0U,rx_pkt_buff_size_per_tc);
  #line 648 
  return;
}

#line 653  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_rpb_rx_xoff_en_per_tc_set(struct aq_hw_s *aq_hw, u32 rx_xoff_en_per_tc, u32 buffer)
{
  #line 656 
  aq_hw_write_reg_bit(aq_hw,buffer * 16U + 22292U,2147483648U,31U,rx_xoff_en_per_tc);
  #line 657 
  return;
}

#line 664  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_rpfl2broadcast_count_threshold_set(struct aq_hw_s *aq_hw, u32 l2broadcast_count_threshold)
{
  #line 667 
  aq_hw_write_reg_bit(aq_hw,20736U,4294901760U,16U,l2broadcast_count_threshold);
  #line 668 
  return;
}

#line 673  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_rpfl2broadcast_en_set(struct aq_hw_s *aq_hw, u32 l2broadcast_en)
{
  #line 675 
  aq_hw_write_reg_bit(aq_hw,20736U,1U,0U,l2broadcast_en);
  #line 676 
  return;
}

#line 679  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_rpfl2broadcast_flr_act_set(struct aq_hw_s *aq_hw, u32 l2broadcast_flr_act)
{
  #line 682 
  aq_hw_write_reg_bit(aq_hw,20736U,28672U,12U,l2broadcast_flr_act);
  #line 683 
  return;
}

#line 687  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_rpfl2multicast_flr_en_set(struct aq_hw_s *aq_hw, u32 l2multicast_flr_en, u32 filter)
{
  #line 691 
  aq_hw_write_reg_bit(aq_hw,(filter + 5268U) * 4U,2147483648U,31U,l2multicast_flr_en);
  #line 692 
  return;
}

#line 696  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_rpfl2promiscuous_mode_en_set(struct aq_hw_s *aq_hw, u32 l2promiscuous_mode_en)
{
  #line 699 
  aq_hw_write_reg_bit(aq_hw,20736U,8U,3U,l2promiscuous_mode_en);
  #line 700 
  return;
}

#line 705  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_rpfl2unicast_flr_act_set(struct aq_hw_s *aq_hw, u32 l2unicast_flr_act, u32 filter)
{
  #line 709 
  aq_hw_write_reg_bit(aq_hw,filter * 8U + 20756U,458752U,16U,l2unicast_flr_act);
  #line 710 
  return;
}

#line 714  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_rpfl2_uc_flr_en_set(struct aq_hw_s *aq_hw, u32 l2unicast_flr_en, u32 filter)
{
  #line 717 
  aq_hw_write_reg_bit(aq_hw,filter * 8U + 20756U,2147483648U,31U,l2unicast_flr_en);
  #line 718 
  return;
}

#line 722  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_rpfl2unicast_dest_addresslsw_set(struct aq_hw_s *aq_hw, u32 l2unicast_dest_addresslsw, u32 filter)
{
  #line 726 
  aq_hw_write_reg(aq_hw,(filter + 2594U) * 8U,l2unicast_dest_addresslsw);
  #line 727 
  return;
}

#line 730  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_rpfl2unicast_dest_addressmsw_set(struct aq_hw_s *aq_hw, u32 l2unicast_dest_addressmsw, u32 filter)
{
  #line 734 
  aq_hw_write_reg_bit(aq_hw,filter * 8U + 20756U,65535U,0U,l2unicast_dest_addressmsw);
  #line 735 
  return;
}

#line 740  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_rpfl2_accept_all_mc_packets_set(struct aq_hw_s *aq_hw, u32 l2_accept_all_mc_packets)
{
  #line 743 
  aq_hw_write_reg_bit(aq_hw,21104U,16384U,14U,l2_accept_all_mc_packets);
  #line 744 
  return;
}

#line 749  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_rpf_rpb_user_priority_tc_map_set(struct aq_hw_s *aq_hw, u32 user_priority_tc_map, u32 tc)
{
  #line 753 
  u32 rpf_rpb_rx_tc_upt_adr[8U] = {21700U, 21700U, 21700U, 21700U, 21700U, 21700U, 21700U, 21700U};
  #line 759 
  u32 rpf_rpb_rx_tc_upt_msk[8U] = {7U, 112U, 1792U, 28672U, 458752U, 7340032U, 117440512U, 1879048192U};
  #line 765 
  u32 rpf_rpb_rx_tc_upt_shft[8U] = {0U, 4U, 8U, 12U, 16U, 20U, 24U, 28U};
  #line 769 
  aq_hw_write_reg_bit(aq_hw,rpf_rpb_rx_tc_upt_adr[tc],rpf_rpb_rx_tc_upt_msk[tc],rpf_rpb_rx_tc_upt_shft[tc],user_priority_tc_map);
  #line 772 
  return;
}

#line 775  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_rpf_rss_key_addr_set(struct aq_hw_s *aq_hw, u32 rss_key_addr)
{
  #line 777 
  aq_hw_write_reg_bit(aq_hw,21712U,31U,0U,rss_key_addr);
  #line 778 
  return;
}

#line 783  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_rpf_rss_key_wr_data_set(struct aq_hw_s *aq_hw, u32 rss_key_wr_data)
{
  #line 785 
  aq_hw_write_reg(aq_hw,21716U,rss_key_wr_data);
  #line 786 
  return;
}

#line 789  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
u32 hw_atl_rpf_rss_key_wr_en_get(struct aq_hw_s *aq_hw)
{
  #line 791 
  return aq_hw_read_reg_bit(aq_hw,21712U,32U,5U);
}

#line 796  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_rpf_rss_key_wr_en_set(struct aq_hw_s *aq_hw, u32 rss_key_wr_en)
{
  #line 798 
  aq_hw_write_reg_bit(aq_hw,21712U,32U,5U,rss_key_wr_en);
  #line 799 
  return;
}

#line 804  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_rpf_rss_redir_tbl_addr_set(struct aq_hw_s *aq_hw, u32 rss_redir_tbl_addr)
{
  #line 807 
  aq_hw_write_reg_bit(aq_hw,21728U,15U,0U,rss_redir_tbl_addr);
  #line 808 
  return;
}

#line 813  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_rpf_rss_redir_tbl_wr_data_set(struct aq_hw_s *aq_hw, u32 rss_redir_tbl_wr_data)
{
  #line 816 
  aq_hw_write_reg_bit(aq_hw,21732U,65535U,0U,rss_redir_tbl_wr_data);
  #line 817 
  return;
}

#line 822  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
u32 hw_atl_rpf_rss_redir_wr_en_get(struct aq_hw_s *aq_hw)
{
  #line 824 
  return aq_hw_read_reg_bit(aq_hw,21728U,16U,4U);
}

#line 829  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_rpf_rss_redir_wr_en_set(struct aq_hw_s *aq_hw, u32 rss_redir_wr_en)
{
  #line 831 
  aq_hw_write_reg_bit(aq_hw,21728U,16U,4U,rss_redir_wr_en);
  #line 832 
  return;
}

#line 836  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_rpf_tpo_to_rpf_sys_lbk_set(struct aq_hw_s *aq_hw, u32 tpo_to_rpf_sys_lbk)
{
  #line 839 
  aq_hw_write_reg_bit(aq_hw,20480U,256U,8U,tpo_to_rpf_sys_lbk);
  #line 840 
  return;
}

#line 845  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_rpf_vlan_inner_etht_set(struct aq_hw_s *aq_hw, u32 vlan_inner_etht)
{
  #line 847 
  aq_hw_write_reg_bit(aq_hw,21124U,65535U,0U,vlan_inner_etht);
  #line 848 
  return;
}

#line 853  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_rpf_vlan_outer_etht_set(struct aq_hw_s *aq_hw, u32 vlan_outer_etht)
{
  #line 855 
  aq_hw_write_reg_bit(aq_hw,21124U,4294901760U,16U,vlan_outer_etht);
  #line 856 
  return;
}

#line 861  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_rpf_vlan_prom_mode_en_set(struct aq_hw_s *aq_hw, u32 vlan_prom_mode_en)
{
  #line 864 
  aq_hw_write_reg_bit(aq_hw,21120U,2U,1U,vlan_prom_mode_en);
  #line 865 
  return;
}

#line 870  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_rpf_vlan_accept_untagged_packets_set(struct aq_hw_s *aq_hw, u32 vlan_acc_untagged_packets)
{
  #line 873 
  aq_hw_write_reg_bit(aq_hw,21120U,4U,2U,vlan_acc_untagged_packets);
  #line 874 
  return;
}

#line 879  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_rpf_vlan_untagged_act_set(struct aq_hw_s *aq_hw, u32 vlan_untagged_act)
{
  #line 882 
  aq_hw_write_reg_bit(aq_hw,21120U,56U,3U,vlan_untagged_act);
  #line 883 
  return;
}

#line 888  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_rpf_vlan_flr_en_set(struct aq_hw_s *aq_hw, u32 vlan_flr_en, u32 filter)
{
  #line 891 
  aq_hw_write_reg_bit(aq_hw,(filter + 5284U) * 4U,2147483648U,31U,vlan_flr_en);
  #line 892 
  return;
}

#line 897  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_rpf_vlan_flr_act_set(struct aq_hw_s *aq_hw, u32 vlan_flr_act, u32 filter)
{
  #line 900 
  aq_hw_write_reg_bit(aq_hw,(filter + 5284U) * 4U,458752U,16U,vlan_flr_act);
  #line 901 
  return;
}

#line 906  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_rpf_vlan_id_flr_set(struct aq_hw_s *aq_hw, u32 vlan_id_flr, u32 filter)
{
  #line 909 
  aq_hw_write_reg_bit(aq_hw,(filter + 5284U) * 4U,4095U,0U,vlan_id_flr);
  #line 910 
  return;
}

#line 915  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_rpf_vlan_rxq_en_flr_set(struct aq_hw_s *aq_hw, u32 vlan_rxq_en, u32 filter)
{
  #line 918 
  aq_hw_write_reg_bit(aq_hw,(filter + 5284U) * 4U,268435456U,28U,vlan_rxq_en);
  #line 919 
  return;
}

#line 924  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_rpf_vlan_rxq_flr_set(struct aq_hw_s *aq_hw, u32 vlan_rxq, u32 filter)
{
  #line 927 
  aq_hw_write_reg_bit(aq_hw,(filter + 5284U) * 4U,32505856U,20U,vlan_rxq);
  #line 928 
  return;
}

#line 933  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_rpf_etht_flr_en_set(struct aq_hw_s *aq_hw, u32 etht_flr_en, u32 filter)
{
  #line 936 
  aq_hw_write_reg_bit(aq_hw,(filter + 5312U) * 4U,2147483648U,31U,etht_flr_en);
  #line 937 
  return;
}

#line 941  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_rpf_etht_user_priority_en_set(struct aq_hw_s *aq_hw, u32 etht_user_priority_en, u32 filter)
{
  #line 944 
  aq_hw_write_reg_bit(aq_hw,(filter + 5312U) * 4U,1073741824U,30U,etht_user_priority_en);
  #line 945 
  return;
}

#line 949  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_rpf_etht_rx_queue_en_set(struct aq_hw_s *aq_hw, u32 etht_rx_queue_en, u32 filter)
{
  #line 953 
  aq_hw_write_reg_bit(aq_hw,(filter + 5312U) * 4U,536870912U,29U,etht_rx_queue_en);
  #line 954 
  return;
}

#line 959  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_rpf_etht_user_priority_set(struct aq_hw_s *aq_hw, u32 etht_user_priority, u32 filter)
{
  #line 963 
  aq_hw_write_reg_bit(aq_hw,(filter + 5312U) * 4U,469762048U,26U,etht_user_priority);
  #line 964 
  return;
}

#line 968  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_rpf_etht_rx_queue_set(struct aq_hw_s *aq_hw, u32 etht_rx_queue, u32 filter)
{
  #line 971 
  aq_hw_write_reg_bit(aq_hw,(filter + 5312U) * 4U,32505856U,20U,etht_rx_queue);
  #line 972 
  return;
}

#line 976  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_rpf_etht_mgt_queue_set(struct aq_hw_s *aq_hw, u32 etht_mgt_queue, u32 filter)
{
  #line 979 
  aq_hw_write_reg_bit(aq_hw,(filter + 5312U) * 4U,524288U,19U,etht_mgt_queue);
  #line 980 
  return;
}

#line 985  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_rpf_etht_flr_act_set(struct aq_hw_s *aq_hw, u32 etht_flr_act, u32 filter)
{
  #line 988 
  aq_hw_write_reg_bit(aq_hw,(filter + 5312U) * 4U,458752U,16U,etht_flr_act);
  #line 989 
  return;
}

#line 993  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_rpf_etht_flr_set(struct aq_hw_s *aq_hw, u32 etht_flr, u32 filter)
{
  #line 995 
  aq_hw_write_reg_bit(aq_hw,(filter + 5312U) * 4U,65535U,0U,etht_flr);
  #line 996 
  return;
}

#line 1000  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_rpf_l4_spd_set(struct aq_hw_s *aq_hw, u32 val, u32 filter)
{
  #line 1002 
  aq_hw_write_reg_bit(aq_hw,(filter + 5376U) * 4U,65535U,0U,val);
  #line 1003 
  return;
}

#line 1007  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_rpf_l4_dpd_set(struct aq_hw_s *aq_hw, u32 val, u32 filter)
{
  #line 1009 
  aq_hw_write_reg_bit(aq_hw,(filter + 5384U) * 4U,65535U,0U,val);
  #line 1010 
  return;
}

#line 1015  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_rpo_ipv4header_crc_offload_en_set(struct aq_hw_s *aq_hw, u32 ipv4header_crc_offload_en)
{
  #line 1018 
  aq_hw_write_reg_bit(aq_hw,21888U,2U,1U,ipv4header_crc_offload_en);
  #line 1019 
  return;
}

#line 1024  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_rpo_rx_desc_vlan_stripping_set(struct aq_hw_s *aq_hw, u32 rx_desc_vlan_stripping, u32 descriptor)
{
  #line 1028 
  aq_hw_write_reg_bit(aq_hw,descriptor * 32U + 23304U,536870912U,29U,rx_desc_vlan_stripping);
  #line 1029 
  return;
}

#line 1034  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_rpo_outer_vlan_tag_mode_set(void *context, u32 outervlantagmode)
{
  #line 1037 
  aq_hw_write_reg_bit((struct aq_hw_s *)context,21888U,4U,2U,outervlantagmode);
  #line 1038 
  return;
}

#line 1043  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
u32 hw_atl_rpo_outer_vlan_tag_mode_get(void *context)
{
  #line 1045 
  return aq_hw_read_reg_bit((struct aq_hw_s *)context,21888U,4U,2U);
}

#line 1050  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_rpo_tcp_udp_crc_offload_en_set(struct aq_hw_s *aq_hw, u32 tcp_udp_crc_offload_en)
{
  #line 1053 
  aq_hw_write_reg_bit(aq_hw,21888U,1U,0U,tcp_udp_crc_offload_en);
  #line 1054 
  return;
}

#line 1058  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_rpo_lro_en_set(struct aq_hw_s *aq_hw, u32 lro_en)
{
  #line 1060 
  aq_hw_write_reg(aq_hw,21904U,lro_en);
  #line 1061 
  return;
}

#line 1063  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_rpo_lro_patch_optimization_en_set(struct aq_hw_s *aq_hw, u32 lro_patch_optimization_en)
{
  #line 1066 
  aq_hw_write_reg_bit(aq_hw,21908U,32768U,15U,lro_patch_optimization_en);
  #line 1067 
  return;
}

#line 1072  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_rpo_lro_qsessions_lim_set(struct aq_hw_s *aq_hw, u32 lro_qsessions_lim)
{
  #line 1075 
  aq_hw_write_reg_bit(aq_hw,21908U,12288U,12U,lro_qsessions_lim);
  #line 1076 
  return;
}

#line 1081  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_rpo_lro_total_desc_lim_set(struct aq_hw_s *aq_hw, u32 lro_total_desc_lim)
{
  #line 1084 
  aq_hw_write_reg_bit(aq_hw,21908U,96U,5U,lro_total_desc_lim);
  #line 1085 
  return;
}

#line 1090  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_rpo_lro_min_pay_of_first_pkt_set(struct aq_hw_s *aq_hw, u32 lro_min_pld_of_first_pkt)
{
  #line 1093 
  aq_hw_write_reg_bit(aq_hw,21908U,31U,0U,lro_min_pld_of_first_pkt);
  #line 1094 
  return;
}

#line 1099  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_rpo_lro_pkt_lim_set(struct aq_hw_s *aq_hw, u32 lro_pkt_lim)
{
  #line 1101 
  aq_hw_write_reg(aq_hw,21912U,lro_pkt_lim);
  #line 1102 
  return;
}

#line 1104  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_rpo_lro_max_num_of_descriptors_set(struct aq_hw_s *aq_hw, u32 lro_max_number_of_descriptors, u32 lro)
{
  #line 1109 
  u32 rpo_lro_ldes_max_adr[32U] = {21920U, 21920U, 21920U, 21920U, 21920U, 21920U, 21920U, 21920U, 21924U, 21924U, 21924U, 21924U, 21924U, 21924U, 21924U, 21924U, 21928U, 21928U, 21928U, 21928U, 21928U, 21928U, 21928U, 21928U, 21932U, 21932U, 21932U, 21932U, 21932U, 21932U, 21932U, 21932U};
  #line 1121 
  u32 rpo_lro_ldes_max_msk[32U] = {3U, 48U, 768U, 12288U, 196608U, 3145728U, 50331648U, 805306368U, 3U, 48U, 768U, 12288U, 196608U, 3145728U, 50331648U, 805306368U, 3U, 48U, 768U, 12288U, 196608U, 3145728U, 50331648U, 805306368U, 3U, 48U, 768U, 12288U, 196608U, 3145728U, 50331648U, 805306368U};
  #line 1133 
  u32 rpo_lro_ldes_max_shift[32U] = {0U, 4U, 8U, 12U, 16U, 20U, 24U, 28U, 0U, 4U, 8U, 12U, 16U, 20U, 24U, 28U, 0U, 4U, 8U, 12U, 16U, 20U, 24U, 28U, 0U, 4U, 8U, 12U, 16U, 20U, 24U, 28U};
  #line 1140 
  aq_hw_write_reg_bit(aq_hw,rpo_lro_ldes_max_adr[lro],rpo_lro_ldes_max_msk[lro],rpo_lro_ldes_max_shift[lro],lro_max_number_of_descriptors);
  #line 1143 
  return;
}

#line 1146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_rpo_lro_time_base_divider_set(struct aq_hw_s *aq_hw, u32 lro_time_base_divider)
{
  #line 1149 
  aq_hw_write_reg_bit(aq_hw,22048U,4293918720U,20U,lro_time_base_divider);
  #line 1150 
  return;
}

#line 1155  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_rpo_lro_inactive_interval_set(struct aq_hw_s *aq_hw, u32 lro_inactive_interval)
{
  #line 1158 
  aq_hw_write_reg_bit(aq_hw,22048U,1047552U,10U,lro_inactive_interval);
  #line 1159 
  return;
}

#line 1164  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_rpo_lro_max_coalescing_interval_set(struct aq_hw_s *aq_hw, u32 lro_max_coal_interval)
{
  #line 1167 
  aq_hw_write_reg_bit(aq_hw,22048U,1023U,0U,lro_max_coal_interval);
  #line 1168 
  return;
}

#line 1174  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_rx_rx_reg_res_dis_set(struct aq_hw_s *aq_hw, u32 rx_reg_res_dis)
{
  #line 1176 
  aq_hw_write_reg_bit(aq_hw,20480U,536870912U,29U,rx_reg_res_dis);
  #line 1177 
  return;
}

#line 1183  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_tdm_cpu_id_set(struct aq_hw_s *aq_hw, u32 cpuid, u32 dca)
{
  #line 1185 
  aq_hw_write_reg_bit(aq_hw,(dca + 8448U) * 4U,255U,0U,cpuid);
  #line 1186 
  return;
}

#line 1190  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_tdm_large_send_offload_en_set(struct aq_hw_s *aq_hw, u32 large_send_offload_en)
{
  #line 1193 
  aq_hw_write_reg(aq_hw,30736U,large_send_offload_en);
  #line 1194 
  return;
}

#line 1196  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_tdm_tx_dca_en_set(struct aq_hw_s *aq_hw, u32 tx_dca_en)
{
  #line 1198 
  aq_hw_write_reg_bit(aq_hw,33920U,2147483648U,31U,tx_dca_en);
  #line 1199 
  return;
}

#line 1202  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_tdm_tx_dca_mode_set(struct aq_hw_s *aq_hw, u32 tx_dca_mode)
{
  #line 1204 
  aq_hw_write_reg_bit(aq_hw,33920U,15U,0U,tx_dca_mode);
  #line 1205 
  return;
}

#line 1209  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_tdm_tx_desc_dca_en_set(struct aq_hw_s *aq_hw, u32 tx_desc_dca_en, u32 dca)
{
  #line 1212 
  aq_hw_write_reg_bit(aq_hw,(dca + 8448U) * 4U,2147483648U,31U,tx_desc_dca_en);
  #line 1213 
  return;
}

#line 1218  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_tdm_tx_desc_en_set(struct aq_hw_s *aq_hw, u32 tx_desc_en, u32 descriptor)
{
  #line 1221 
  aq_hw_write_reg_bit(aq_hw,descriptor * 64U + 31752U,2147483648U,31U,tx_desc_en);
  #line 1222 
  return;
}

#line 1227  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
u32 hw_atl_tdm_tx_desc_head_ptr_get(struct aq_hw_s *aq_hw, u32 descriptor)
{
  #line 1229 
  return aq_hw_read_reg_bit(aq_hw,descriptor * 64U + 31756U,8191U,0U);
}

#line 1234  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_tdm_tx_desc_len_set(struct aq_hw_s *aq_hw, u32 tx_desc_len, u32 descriptor)
{
  #line 1237 
  aq_hw_write_reg_bit(aq_hw,descriptor * 64U + 31752U,8184U,3U,tx_desc_len);
  #line 1238 
  return;
}

#line 1243  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_tdm_tx_desc_wr_wb_irq_en_set(struct aq_hw_s *aq_hw, u32 tx_desc_wr_wb_irq_en)
{
  #line 1246 
  aq_hw_write_reg_bit(aq_hw,31552U,2U,1U,tx_desc_wr_wb_irq_en);
  #line 1247 
  return;
}

#line 1252  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_tdm_tx_desc_wr_wb_threshold_set(struct aq_hw_s *aq_hw, u32 tx_desc_wr_wb_threshold, u32 descriptor)
{
  #line 1256 
  aq_hw_write_reg_bit(aq_hw,descriptor * 64U + 31768U,32512U,8U,tx_desc_wr_wb_threshold);
  #line 1257 
  return;
}

#line 1262  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_tdm_tdm_intr_moder_en_set(struct aq_hw_s *aq_hw, u32 tdm_irq_moderation_en)
{
  #line 1265 
  aq_hw_write_reg_bit(aq_hw,31552U,16U,4U,tdm_irq_moderation_en);
  #line 1266 
  return;
}

#line 1272  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_thm_lso_tcp_flag_of_first_pkt_set(struct aq_hw_s *aq_hw, u32 lso_tcp_flag_of_first_pkt)
{
  #line 1275 
  aq_hw_write_reg_bit(aq_hw,30752U,4095U,0U,lso_tcp_flag_of_first_pkt);
  #line 1276 
  return;
}

#line 1281  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_thm_lso_tcp_flag_of_last_pkt_set(struct aq_hw_s *aq_hw, u32 lso_tcp_flag_of_last_pkt)
{
  #line 1284 
  aq_hw_write_reg_bit(aq_hw,30756U,4095U,0U,lso_tcp_flag_of_last_pkt);
  #line 1285 
  return;
}

#line 1290  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_thm_lso_tcp_flag_of_middle_pkt_set(struct aq_hw_s *aq_hw, u32 lso_tcp_flag_of_middle_pkt)
{
  #line 1293 
  aq_hw_write_reg_bit(aq_hw,30752U,268369920U,16U,lso_tcp_flag_of_middle_pkt);
  #line 1294 
  return;
}

#line 1300  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_tpb_tx_buff_en_set(struct aq_hw_s *aq_hw, u32 tx_buff_en)
{
  #line 1302 
  aq_hw_write_reg_bit(aq_hw,30976U,1U,0U,tx_buff_en);
  #line 1303 
  return;
}

#line 1307  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
u32 hw_atl_rpb_tps_tx_tc_mode_get(struct aq_hw_s *aq_hw)
{
  #line 1309 
  return aq_hw_read_reg_bit(aq_hw,30976U,256U,8U);
}

#line 1314  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_rpb_tps_tx_tc_mode_set(struct aq_hw_s *aq_hw, u32 tx_traf_class_mode)
{
  #line 1317 
  aq_hw_write_reg_bit(aq_hw,30976U,256U,8U,tx_traf_class_mode);
  #line 1318 
  return;
}

#line 1323  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_tpb_tx_buff_hi_threshold_per_tc_set(struct aq_hw_s *aq_hw, u32 tx_buff_hi_threshold_per_tc, u32 buffer)
{
  #line 1327 
  aq_hw_write_reg_bit(aq_hw,buffer * 16U + 30996U,536805376U,16U,tx_buff_hi_threshold_per_tc);
  #line 1328 
  return;
}

#line 1333  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_tpb_tx_buff_lo_threshold_per_tc_set(struct aq_hw_s *aq_hw, u32 tx_buff_lo_threshold_per_tc, u32 buffer)
{
  #line 1337 
  aq_hw_write_reg_bit(aq_hw,buffer * 16U + 30996U,8191U,0U,tx_buff_lo_threshold_per_tc);
  #line 1338 
  return;
}

#line 1343  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_tpb_tx_dma_sys_lbk_en_set(struct aq_hw_s *aq_hw, u32 tx_dma_sys_lbk_en)
{
  #line 1345 
  aq_hw_write_reg_bit(aq_hw,28672U,64U,6U,tx_dma_sys_lbk_en);
  #line 1346 
  return;
}

#line 1351  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_tpb_tx_dma_net_lbk_en_set(struct aq_hw_s *aq_hw, u32 tx_dma_net_lbk_en)
{
  #line 1354 
  aq_hw_write_reg_bit(aq_hw,28672U,16U,4U,tx_dma_net_lbk_en);
  #line 1355 
  return;
}

#line 1360  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_tpb_tx_tx_clk_gate_en_set(struct aq_hw_s *aq_hw, u32 tx_clk_gate_en)
{
  #line 1363 
  aq_hw_write_reg_bit(aq_hw,30976U,16U,4U,tx_clk_gate_en);
  #line 1364 
  return;
}

#line 1369  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_tpb_tx_pkt_buff_size_per_tc_set(struct aq_hw_s *aq_hw, u32 tx_pkt_buff_size_per_tc, u32 buffer)
{
  #line 1373 
  aq_hw_write_reg_bit(aq_hw,(buffer + 1937U) * 16U,255U,0U,tx_pkt_buff_size_per_tc);
  #line 1374 
  return;
}

#line 1379  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_tpb_tx_path_scp_ins_en_set(struct aq_hw_s *aq_hw, u32 tx_path_scp_ins_en)
{
  #line 1381 
  aq_hw_write_reg_bit(aq_hw,30976U,4U,2U,tx_path_scp_ins_en);
  #line 1382 
  return;
}

#line 1388  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_tpo_ipv4header_crc_offload_en_set(struct aq_hw_s *aq_hw, u32 ipv4header_crc_offload_en)
{
  #line 1391 
  aq_hw_write_reg_bit(aq_hw,30720U,2U,1U,ipv4header_crc_offload_en);
  #line 1392 
  return;
}

#line 1397  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_tpo_tcp_udp_crc_offload_en_set(struct aq_hw_s *aq_hw, u32 tcp_udp_crc_offload_en)
{
  #line 1400 
  aq_hw_write_reg_bit(aq_hw,30720U,1U,0U,tcp_udp_crc_offload_en);
  #line 1401 
  return;
}

#line 1406  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_tpo_tx_pkt_sys_lbk_en_set(struct aq_hw_s *aq_hw, u32 tx_pkt_sys_lbk_en)
{
  #line 1409 
  aq_hw_write_reg_bit(aq_hw,28672U,128U,7U,tx_pkt_sys_lbk_en);
  #line 1410 
  return;
}

#line 1416  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_tps_tx_pkt_shed_data_arb_mode_set(struct aq_hw_s *aq_hw, u32 tx_pkt_shed_data_arb_mode)
{
  #line 1419 
  aq_hw_write_reg_bit(aq_hw,28928U,1U,0U,tx_pkt_shed_data_arb_mode);
  #line 1420 
  return;
}

#line 1425  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_tps_tx_pkt_shed_desc_rate_curr_time_res_set(struct aq_hw_s *aq_hw, u32 curr_time_res)
{
  #line 1428 
  aq_hw_write_reg_bit(aq_hw,29456U,2147483648U,31U,curr_time_res);
  #line 1429 
  return;
}

#line 1434  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_tps_tx_pkt_shed_desc_rate_lim_set(struct aq_hw_s *aq_hw, u32 tx_pkt_shed_desc_rate_lim)
{
  #line 1437 
  aq_hw_write_reg_bit(aq_hw,29456U,2047U,0U,tx_pkt_shed_desc_rate_lim);
  #line 1438 
  return;
}

#line 1443  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_tps_tx_pkt_shed_desc_tc_arb_mode_set(struct aq_hw_s *aq_hw, u32 arb_mode)
{
  #line 1446 
  aq_hw_write_reg_bit(aq_hw,29184U,3U,0U,arb_mode);
  #line 1447 
  return;
}

#line 1452  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_tps_tx_pkt_shed_desc_tc_max_credit_set(struct aq_hw_s *aq_hw, u32 max_credit, u32 tc)
{
  #line 1456 
  aq_hw_write_reg_bit(aq_hw,(tc + 7300U) * 4U,268369920U,16U,max_credit);
  #line 1457 
  return;
}

#line 1462  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_tps_tx_pkt_shed_desc_tc_weight_set(struct aq_hw_s *aq_hw, u32 tx_pkt_shed_desc_tc_weight, u32 tc)
{
  #line 1466 
  aq_hw_write_reg_bit(aq_hw,(tc + 7300U) * 4U,511U,0U,tx_pkt_shed_desc_tc_weight);
  #line 1467 
  return;
}

#line 1472  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_tps_tx_pkt_shed_desc_vm_arb_mode_set(struct aq_hw_s *aq_hw, u32 arb_mode)
{
  #line 1475 
  aq_hw_write_reg_bit(aq_hw,29440U,1U,0U,arb_mode);
  #line 1476 
  return;
}

#line 1481  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_tps_tx_pkt_shed_tc_data_max_credit_set(struct aq_hw_s *aq_hw, u32 max_credit, u32 tc)
{
  #line 1485 
  aq_hw_write_reg_bit(aq_hw,(tc + 7236U) * 4U,268369920U,16U,max_credit);
  #line 1486 
  return;
}

#line 1491  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_tps_tx_pkt_shed_tc_data_weight_set(struct aq_hw_s *aq_hw, u32 tx_pkt_shed_tc_data_weight, u32 tc)
{
  #line 1495 
  aq_hw_write_reg_bit(aq_hw,(tc + 7236U) * 4U,511U,0U,tx_pkt_shed_tc_data_weight);
  #line 1496 
  return;
}

#line 1502  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_tx_tx_reg_res_dis_set(struct aq_hw_s *aq_hw, u32 tx_reg_res_dis)
{
  #line 1504 
  aq_hw_write_reg_bit(aq_hw,28672U,536870912U,29U,tx_reg_res_dis);
  #line 1505 
  return;
}

#line 1510  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
u32 hw_atl_msm_reg_access_status_get(struct aq_hw_s *aq_hw)
{
  #line 1512 
  return aq_hw_read_reg_bit(aq_hw,17408U,4096U,12U);
}

#line 1517  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_msm_reg_addr_for_indirect_addr_set(struct aq_hw_s *aq_hw, u32 reg_addr_for_indirect_addr)
{
  #line 1520 
  aq_hw_write_reg_bit(aq_hw,17408U,255U,0U,reg_addr_for_indirect_addr);
  #line 1521 
  return;
}

#line 1526  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_msm_reg_rd_strobe_set(struct aq_hw_s *aq_hw, u32 reg_rd_strobe)
{
  #line 1528 
  aq_hw_write_reg_bit(aq_hw,17408U,512U,9U,reg_rd_strobe);
  #line 1529 
  return;
}

#line 1534  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
u32 hw_atl_msm_reg_rd_data_get(struct aq_hw_s *aq_hw)
{
  #line 1536 
  return aq_hw_read_reg(aq_hw,17416U);
}

#line 1539  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_msm_reg_wr_data_set(struct aq_hw_s *aq_hw, u32 reg_wr_data)
{
  #line 1541 
  aq_hw_write_reg(aq_hw,17412U,reg_wr_data);
  #line 1542 
  return;
}

#line 1544  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_msm_reg_wr_strobe_set(struct aq_hw_s *aq_hw, u32 reg_wr_strobe)
{
  #line 1546 
  aq_hw_write_reg_bit(aq_hw,17408U,256U,8U,reg_wr_strobe);
  #line 1547 
  return;
}

#line 1553  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_pci_pci_reg_res_dis_set(struct aq_hw_s *aq_hw, u32 pci_reg_res_dis)
{
  #line 1555 
  aq_hw_write_reg_bit(aq_hw,4096U,536870912U,29U,pci_reg_res_dis);
  #line 1556 
  return;
}

#line 1561  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_reg_glb_cpu_scratch_scp_set(struct aq_hw_s *aq_hw, u32 glb_cpu_scratch_scp, u32 scratch_scp)
{
  #line 1565 
  aq_hw_write_reg(aq_hw,(scratch_scp + 192U) * 4U,glb_cpu_scratch_scp);
  #line 1566 
  return;
}

#line 1569  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_pcs_ptp_clock_read_enable(struct aq_hw_s *aq_hw, u32 ptp_clock_read_enable)
{
  #line 1572 
  aq_hw_write_reg_bit(aq_hw,17960U,16U,4U,ptp_clock_read_enable);
  #line 1573 
  return;
}

#line 1578  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
u32 hw_atl_pcs_ptp_clock_get(struct aq_hw_s *aq_hw, u32 index)
{
  #line 1580 
  return aq_hw_read_reg(aq_hw,(index + 4672U) * 4U);
}

#line 1583  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_mcp_up_force_intr_set(struct aq_hw_s *aq_hw, u32 up_force_intr)
{
  #line 1585 
  aq_hw_write_reg_bit(aq_hw,1028U,2U,1U,up_force_intr);
  #line 1586 
  return;
}

#line 1591  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_rpfl3l4_ipv4_dest_addr_clear(struct aq_hw_s *aq_hw, u8 location)
{
  #line 1593 
  aq_hw_write_reg(aq_hw,(unsigned int)(((int)location + 5356) * 4),0U);
  #line 1594 
  return;
}

#line 1596  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_rpfl3l4_ipv4_src_addr_clear(struct aq_hw_s *aq_hw, u8 location)
{
  #line 1598 
  aq_hw_write_reg(aq_hw,(unsigned int)(((int)location + 5356) * 4),0U);
  #line 1599 
  return;
}

#line 1601  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_rpfl3l4_cmd_clear(struct aq_hw_s *aq_hw, u8 location)
{
  #line 1603 
  aq_hw_write_reg(aq_hw,(unsigned int)(((int)location + 5344) * 4),0U);
  #line 1604 
  return;
}

#line 1606  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_rpfl3l4_ipv6_dest_addr_clear(struct aq_hw_s *aq_hw, u8 location)
{
  #line 1608 
  int i;
  #line 1610 
  i = 0;
  #line 1610 
  while (i <= 3) {
    #line 1611 
    aq_hw_write_reg(aq_hw,(unsigned int)((((int)location + i) + 5356) * 4),0U);
    #line 1610 
    i ++;
  }
  #line 1613 
  return;
}

#line 1616  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_rpfl3l4_ipv6_src_addr_clear(struct aq_hw_s *aq_hw, u8 location)
{
  #line 1618 
  int i;
  #line 1620 
  i = 0;
  #line 1620 
  while (i <= 3) {
    #line 1621 
    aq_hw_write_reg(aq_hw,(unsigned int)((((int)location + i) + 5356) * 4),0U);
    #line 1620 
    i ++;
  }
  #line 1623 
  return;
}

#line 1626  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_rpfl3l4_ipv4_dest_addr_set(struct aq_hw_s *aq_hw, u8 location, u32 ipv4_dest)
{
  #line 1629 
  aq_hw_write_reg(aq_hw,(unsigned int)(((int)location + 5356) * 4),ipv4_dest);
  #line 1630 
  return;
}

#line 1633  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_rpfl3l4_ipv4_src_addr_set(struct aq_hw_s *aq_hw, u8 location, u32 ipv4_src)
{
  #line 1636 
  aq_hw_write_reg(aq_hw,(unsigned int)(((int)location + 5356) * 4),ipv4_src);
  #line 1638 
  return;
}

#line 1641  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_rpfl3l4_cmd_set(struct aq_hw_s *aq_hw, u8 location, u32 cmd)
{
  #line 1643 
  aq_hw_write_reg(aq_hw,(unsigned int)(((int)location + 5344) * 4),cmd);
  #line 1644 
  return;
}

#line 1646  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_rpfl3l4_ipv6_src_addr_set(struct aq_hw_s *aq_hw, u8 location, u32 *ipv6_src)
{
  #line 1649 
  int i;
  #line 1651 
  i = 0;
  #line 1651 
  while (i <= 3) {
    #line 1652 
    aq_hw_write_reg(aq_hw,(unsigned int)((((int)location + i) + 5356) * 4),*(ipv6_src + (unsigned long)i));
    #line 1651 
    i ++;
  }
  #line 1655 
  return;
}

#line 1657  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_rpfl3l4_ipv6_dest_addr_set(struct aq_hw_s *aq_hw, u8 location, u32 *ipv6_dest)
{
  #line 1660 
  int i;
  #line 1662 
  i = 0;
  #line 1662 
  while (i <= 3) {
    #line 1663 
    aq_hw_write_reg(aq_hw,(unsigned int)((((int)location + i) + 5356) * 4),*(ipv6_dest + (unsigned long)i));
    #line 1662 
    i ++;
  }
  #line 1666 
  return;
}

#line 1668  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
u32 hw_atl_sem_ram_get(struct aq_hw_s *self)
{
  #line 1670 
  return hw_atl_reg_glb_cpu_sem_get(self,2U);
}

#line 1673  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
u32 hw_atl_sem_mdio_get(struct aq_hw_s *self)
{
  #line 1675 
  return hw_atl_reg_glb_cpu_sem_get(self,0U);
}

#line 1678  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
u32 hw_atl_scrpad_get(struct aq_hw_s *aq_hw, u32 scratch_scp)
{
  #line 1680 
  return aq_hw_read_reg(aq_hw,(scratch_scp + 192U) * 4U);
}

#line 1684  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
u32 hw_atl_scrpad12_get(struct aq_hw_s *self)
{
  #line 1686 
  return hw_atl_scrpad_get(self,11U);
}

#line 1689  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
u32 hw_atl_scrpad25_get(struct aq_hw_s *self)
{
  #line 1691 
  return hw_atl_scrpad_get(self,24U);
}

#line 1694  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_glb_mdio_iface1_set(struct aq_hw_s *aq_hw, u32 value)
{
  #line 1696 
  aq_hw_write_reg(aq_hw,640U,value);
  #line 1697 
  return;
}

#line 1699  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
u32 hw_atl_glb_mdio_iface1_get(struct aq_hw_s *aq_hw)
{
  #line 1701 
  return aq_hw_read_reg(aq_hw,640U);
}

#line 1704  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_glb_mdio_iface2_set(struct aq_hw_s *aq_hw, u32 value)
{
  #line 1706 
  aq_hw_write_reg(aq_hw,644U,value);
  #line 1707 
  return;
}

#line 1709  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
u32 hw_atl_glb_mdio_iface2_get(struct aq_hw_s *aq_hw)
{
  #line 1711 
  return aq_hw_read_reg(aq_hw,644U);
}

#line 1714  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_glb_mdio_iface3_set(struct aq_hw_s *aq_hw, u32 value)
{
  #line 1716 
  aq_hw_write_reg(aq_hw,648U,value);
  #line 1717 
  return;
}

#line 1719  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
u32 hw_atl_glb_mdio_iface3_get(struct aq_hw_s *aq_hw)
{
  #line 1721 
  return aq_hw_read_reg(aq_hw,648U);
}

#line 1724  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_glb_mdio_iface4_set(struct aq_hw_s *aq_hw, u32 value)
{
  #line 1726 
  aq_hw_write_reg(aq_hw,652U,value);
  #line 1727 
  return;
}

#line 1729  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
u32 hw_atl_glb_mdio_iface4_get(struct aq_hw_s *aq_hw)
{
  #line 1731 
  return aq_hw_read_reg(aq_hw,652U);
}

#line 1734  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
void hw_atl_glb_mdio_iface5_set(struct aq_hw_s *aq_hw, u32 value)
{
  #line 1736 
  aq_hw_write_reg(aq_hw,656U,value);
  #line 1737 
  return;
}

#line 1739  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
u32 hw_atl_glb_mdio_iface5_get(struct aq_hw_s *aq_hw)
{
  #line 1741 
  return aq_hw_read_reg(aq_hw,656U);
}

#line 1744  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/aquantia/atlantic/hw_atl/hw_atl_llh.c"
u32 hw_atl_mdio_busy_get(struct aq_hw_s *aq_hw)
{
  #line 1746 
  return aq_hw_read_reg_bit(aq_hw,644U,2147483648U,31U);
}

#line 20  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/common/inline_asm.c"
void ldv_inline_asm(void)
{
  #line 24 
  return;
}

#line 20  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
void ldv_atomic_add(int i, atomic_t *v)
{
  #line 22 
  v->counter += i;
  #line 23 
  return;
}

#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
void ldv_atomic_sub(int i, atomic_t *v)
{
  #line 27 
  v->counter -= i;
  #line 28 
  return;
}

#line 30  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
int ldv_atomic_sub_and_test(int i, atomic_t *v)
{
  #line 32 
  v->counter -= i;
  #line 33 
  if (v->counter != 0) 
                       #line 34 
                       return 0;
  #line 36 
  return 1;
}

#line 39  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
void ldv_atomic_inc(atomic_t *v)
{
  #line 41 
  (v->counter) ++;
  #line 42 
  return;
}

#line 44  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
void ldv_atomic_dec(atomic_t *v)
{
  #line 46 
  (v->counter) --;
  #line 47 
  return;
}

#line 49  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
int ldv_atomic_dec_and_test(atomic_t *v)
{
  #line 51 
  (v->counter) --;
  #line 52 
  if (v->counter != 0) 
                       #line 53 
                       return 0;
  #line 55 
  return 1;
}

#line 58  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
int ldv_atomic_inc_and_test(atomic_t *v)
{
  #line 60 
  (v->counter) ++;
  #line 61 
  if (v->counter != 0) 
                       #line 62 
                       return 0;
  #line 64 
  return 1;
}

#line 67  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
int ldv_atomic_add_return(int i, atomic_t *v)
{
  #line 69 
  v->counter += i;
  #line 70 
  return v->counter;
}

#line 73  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
int ldv_atomic_add_negative(int i, atomic_t *v)
{
  #line 75 
  v->counter += i;
  #line 76 
  return v->counter < 0;
}

#line 79  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
int ldv_atomic_inc_short(short *v)
{
  #line 81 
  *v = (short)((unsigned int)*v + 1U);
  #line 82 
  return (int)*v;
}

#line 20  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/current.c"
static struct task_struct ldv_current;
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/current.c"
struct task_struct *ldv_get_current(void)
{
  #line 28 
  ldv_current.pid = 1;
  #line 29 
  return & ldv_current;
}

#line 32  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 28  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
void ldv_switch_to_interrupt_context(void);
#line 42  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 34  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
void ldv_switch_to_process_context(void);
#line 50  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 40  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
bool ldv_in_interrupt_context(void);
#line 112  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 55  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
int ldv_post_init(int init_ret_val);
#line 132  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 61  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
int ldv_post_probe(int probe_ret_val);
#line 133  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 133 
void ldv_check_return_value_probe(int);
#line 141 
#line 68  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
int ldv_filter_err_code(int ret_val);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/common.h"
#line 23 
void __VERIFIER_assume(int);
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
static bool __ldv_in_interrupt_context = (_Bool)0;
#line 28  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
void ldv_switch_to_interrupt_context(void)
{
  #line 31 
  __ldv_in_interrupt_context = (_Bool)1;
  #line 32 
  return;
}

#line 34  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
void ldv_switch_to_process_context(void)
{
  #line 37 
  __ldv_in_interrupt_context = (_Bool)0;
  #line 38 
  return;
}

#line 40  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
bool ldv_in_interrupt_context(void)
{
  #line 42 
  return __ldv_in_interrupt_context;
}

#line 45  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
static int ldv_filter_positive_int(int val)
{
  #line 47 
  __VERIFIER_assume(val <= 0);
  #line 48 
  return val;
}

#line 55  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
int ldv_post_init(int init_ret_val)
{
  #line 57 
  return ldv_filter_positive_int(init_ret_val);
}

#line 61  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
int ldv_post_probe(int probe_ret_val)
{
  #line 63 
  ldv_check_return_value_probe(probe_ret_val);
  #line 64 
  return ldv_filter_positive_int(probe_ret_val);
}

#line 68  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
int ldv_filter_err_code(int ret_val)
{
  #line 70 
  return ldv_filter_positive_int(ret_val);
}

#line 28  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/common/list.h"
#line 28 
void ldv_save_allocated_memory_to_list(void *);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/device.h"
#line 29  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
void *ldv_dev_get_drvdata(struct device *dev);
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/device.h"
#line 43  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
int ldv_dev_set_drvdata(struct device *dev, void *data);
#line 57  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 57 
void *ldv_xzalloc(size_t size);
#line 29  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
void *ldv_dev_get_drvdata(struct device *dev)
{
  #line 31 
  if (dev != (struct device *)0 && dev->p != (struct device_private *)0) 
    #line 32 
    return (dev->p)->driver_data;
  #line 34 
  return (void *)0;
}

#line 43  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
int ldv_dev_set_drvdata(struct device *dev, void *data)
{
  #line 45 
  dev->p = (struct device_private *)ldv_xzalloc(8UL);
  #line 46 
  ldv_save_allocated_memory_to_list((void *)dev->p);
  #line 47 
  (dev->p)->driver_data = data;
  #line 49 
  return 0;
}

#line 156  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 156 
void ldv_check_alloc_flags(gfp_t);
#line 48  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 48 
void *ldv_malloc(size_t size);
#line 49 
#line 49 
void *ldv_calloc(size_t nmemb, size_t size);
#line 50 
#line 50 
void *ldv_zalloc(size_t size);
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/devres.c"
void *ldv_devm_kmalloc(size_t size, gfp_t flags)
{
  #line 26 
  void *res;
  #line 28 
  ldv_check_alloc_flags(flags);
  #line 29 
  res = ldv_malloc(size);
  #line 30 
  ldv_save_allocated_memory_to_list(res);
  #line 32 
  return res;
}

#line 35  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/devres.c"
void *ldv_devm_kzalloc(size_t size, gfp_t flags)
{
  #line 37 
  void *res;
  #line 39 
  ldv_check_alloc_flags(flags);
  #line 40 
  res = ldv_zalloc(size);
  #line 41 
  ldv_save_allocated_memory_to_list(res);
  #line 43 
  return res;
}

#line 46  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/devres.c"
void *ldv_devm_kmalloc_array(size_t n, size_t size, gfp_t flags)
{
  #line 48 
  void *res;
  #line 50 
  ldv_check_alloc_flags(flags);
  #line 51 
  res = ldv_malloc(n * size);
  #line 52 
  ldv_save_allocated_memory_to_list(res);
  #line 54 
  return res;
}

#line 57  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/devres.c"
void *ldv_devm_kcalloc(size_t n, size_t size, gfp_t flags)
{
  #line 59 
  void *res;
  #line 61 
  ldv_check_alloc_flags(flags);
  #line 62 
  res = ldv_calloc(n,size);
  #line 63 
  ldv_save_allocated_memory_to_list(res);
  #line 65 
  return res;
}

#line 51  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 51 
void ldv_free(void *s);
#line 59 
#line 59 
void *ldv_malloc_unknown_size(void);
#line 31  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 31 
int ldv_undef_int_positive(void);
#line 40 
#line 40 
int ldv_undef_int_nonpositive(void);
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/firmware_loader.c"
int ldv_request_firmware(struct firmware **fw)
{
  #line 27 
  int retval;
  #line 26 
  struct firmware *_fw = (struct firmware *)0;
  #line 29 
  retval = ldv_undef_int_nonpositive();
  #line 31 
  if (retval == 0) {
    #line 33 
    _fw = (struct firmware *)ldv_xzalloc(32UL);
    #line 34 
    _fw->data = (u8 *)ldv_malloc_unknown_size();
    #line 35 
    __VERIFIER_assume(_fw->data != (u8 *)0U);
    #line 36 
    _fw->size = (unsigned long)ldv_undef_int_positive();
  }
  #line 39 
  *fw = _fw;
  #line 41 
  return retval;
}

#line 44  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/firmware_loader.c"
void ldv_release_firmware(struct firmware *fw)
{
  #line 46 
  if (fw != (struct firmware *)0) {
    #line 48 
    ldv_free((void *)fw->data);
    #line 49 
    ldv_free((void *)fw);
  }
  #line 51 
  return;
}

#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/i2c.h"
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/i2c/i2c-core-smbus.c"
s32 ldv_i2c_smbus_read_block_data(u8 *values);
#line 55  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 55 
void *ldv_xmalloc(size_t size);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 23 
int ldv_undef_int(void);
#line 34 
#line 34 
int ldv_undef_int_negative(void);
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/i2c/i2c-core-smbus.c"
s32 ldv_i2c_smbus_read_block_data(u8 *values)
{
  #line 27 
  __u8 size;
  #line 28 
  char *bytes;
  #line 30 
  if (ldv_undef_int() != 0) {
    #line 33 
    size = (unsigned char)ldv_undef_int_positive();
    #line 35 
    __VERIFIER_assume((unsigned int)size <= 32U);
    #line 37 
    bytes = (char *)ldv_xmalloc((unsigned long)size);
    #line 39 
    memcpy((void *)values,(void *)bytes,(unsigned long)size);
    #line 40 
    ldv_free((void *)bytes);
    #line 42 
    return (int)size;
  }
  else {
    #line 46 
    return ldv_undef_int_negative();
  }
}

#line 988  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
__inline static void v4l2_set_subdevdata(struct v4l2_subdev *sd, void *p)
{
  #line 990 
  sd->dev_priv = p;
  #line 991 
  return;
}

#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/media/v4l2-common.h"
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/media/v4l2-core/v4l2-i2c.c"
void ldv_v4l2_i2c_subdev_init(struct v4l2_subdev *sd, struct i2c_client *client, struct v4l2_subdev_ops *ops);
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/media/v4l2-core/v4l2-i2c.c"
void ldv_v4l2_i2c_subdev_init(struct v4l2_subdev *sd, struct i2c_client *client, struct v4l2_subdev_ops *ops)
{
  #line 26 
  sd->ops = ops;
  #line 27 
  v4l2_set_subdevdata(sd,(void *)client);
  #line 28 
  ldv_dev_set_drvdata(& client->dev,(void *)sd);
  #line 29 
  return;
}

#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/spi.c"
struct spi_controller *ldv_spi_alloc_master(struct device *host, unsigned int size)
{
  #line 25 
  struct spi_controller *master;
  #line 27 
  master = (struct spi_controller *)ldv_zalloc((unsigned long)size + 2936UL);
  #line 29 
  if (master == (struct spi_controller *)0) 
                                            #line 30 
                                            return (struct spi_controller *)0;
  #line 32 
  ldv_dev_set_drvdata(& master->dev,(void *)(master + 1U));
  #line 34 
  return master;
}

#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/fb.h"
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/video/fbdev/core/fbsysfs.c"
struct fb_info *ldv_framebuffer_alloc(size_t size);
#line 26  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/fb.h"
#line 38  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/video/fbdev/core/fbsysfs.c"
void ldv_framebuffer_release(struct fb_info *info);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/video/fbdev/core/fbsysfs.c"
struct fb_info *ldv_framebuffer_alloc(size_t size)
{
  #line 25 
  struct fb_info *info;
  #line 27 
  info = (struct fb_info *)ldv_zalloc(size + 1568UL);
  #line 29 
  if (info == (struct fb_info *)0) 
                                   #line 30 
                                   return (struct fb_info *)0;
  #line 32 
  if (size != 0UL) 
                   #line 33 
                   info->par = (void *)((char *)info + 1568UL);
  #line 35 
  return info;
}

#line 38  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/video/fbdev/core/fbsysfs.c"
void ldv_framebuffer_release(struct fb_info *info)
{
  #line 40 
  if (info == (struct fb_info *)0) 
                                   #line 41 
                                   return;
  #line 44 
  ldv_free((void *)info->apertures);
  #line 46 
  ldv_free((void *)info);
  #line 47 
  return;
}

#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/err.h"
#line 59  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/err.c"
bool ldv_is_err_or_null(void *ptr);
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/err.h"
#line 35  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/err.c"
void *ldv_err_ptr(long error);
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/err.c"
bool ldv_is_err(void *ptr)
{
  #line 29 
  if ((unsigned long)ptr > 18446744073709547520UL) 
                                                   #line 30 
                                                   return (_Bool)1; else 
                                                                    #line 32 
                                                                    return (_Bool)0;
}

#line 35  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/err.c"
void *ldv_err_ptr(long error)
{
  #line 37 
  unsigned long result;
  #line 39 
  __VERIFIER_assume(error < 0L);
  #line 40 
  __VERIFIER_assume(error >= -4095L);
  #line 41 
  result = 18446744073709547520UL - (unsigned long)error;
  #line 42 
  __VERIFIER_assume(result > 18446744073709547520UL);
  #line 44 
  return (void *)result;
}

#line 47  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_ptr_err(void *ptr)
{
  #line 49 
  long result;
  #line 51 
  __VERIFIER_assume((unsigned long)ptr > 18446744073709547520UL);
  #line 52 
  result = (long)(18446744073709547520UL - (unsigned long)ptr);
  #line 53 
  __VERIFIER_assume(result < 0L);
  #line 54 
  __VERIFIER_assume(result >= -4095L);
  #line 56 
  return result;
}

#line 59  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/err.c"
bool ldv_is_err_or_null(void *ptr)
{
  #line 61 
  int tmp_0;
  #line 61 
  if (ptr == (void *)0) 
                        #line 61 
                        tmp_0 = 1;
  else {
    #line 61 
    if ((int)ldv_is_err(ptr) != 0) 
                                   #line 61 
                                   tmp_0 = 1; else 
                                                   #line 61 
                                                   tmp_0 = 0;
  }
  #line 61 
  return (_Bool)(tmp_0 != 0);
}

#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/panic.h"
#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/kernel/panic.c"
void ldv_panic(void);
#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/kernel/panic.c"
void ldv_panic(void)
{
  #line 23 
  __VERIFIER_assume(0);
  #line 24 
  return;
}

#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/bitmap.h"
#line 32  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_bitmap_set(unsigned long *map, unsigned int start, int nbits);
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/bitmap.h"
#line 52  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_bitmap_clear(unsigned long *map, unsigned int start, int nbits);
#line 29  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/bitmap.h"
#line 78  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
unsigned long ldv_bitmap_find_next_zero_area(unsigned long *map, unsigned long size, unsigned long start, unsigned int nr, unsigned long align_mask);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/find_bit.h"
#line 23 
unsigned long ldv_find_next_zero_bit(unsigned long *addr, unsigned long size, unsigned long offset);
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_set_bit(long nr, unsigned long *addr)
{
  #line 24 
  *(addr + (unsigned long)nr / 64UL) |= 1UL << ((unsigned long)nr & 63UL);
  #line 25 
  return;
}

#line 27  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_clear_bit(long nr, unsigned long *addr)
{
  #line 29 
  *(addr + (unsigned long)nr / 64UL) &= ~ (1UL << ((unsigned long)nr & 63UL));
  #line 30 
  return;
}

#line 32  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_bitmap_set(unsigned long *map, unsigned int start, int nbits)
{
  #line 34 
  unsigned long *p = map + (unsigned long)(start / 64U);
  #line 35 
  unsigned int size = start + (unsigned int)nbits;
  #line 36 
  int bits_to_set = (int)(64U - (start & 63U));
  #line 37 
  unsigned long mask_to_set = 18446744073709551615UL << ((unsigned long)start & 63UL);
  #line 39 
  while (nbits - bits_to_set >= 0) {
    #line 40 
    *p |= mask_to_set;
    #line 41 
    nbits -= bits_to_set;
    #line 42 
    bits_to_set = 64;
    #line 43 
    mask_to_set = 18446744073709551615UL;
    #line 44 
    p ++;
  }
  #line 46 
  if (nbits != 0) {
    #line 47 
    mask_to_set = (18446744073709551615UL >> ((unsigned long)(- size) & 63UL)) & mask_to_set;
    #line 48 
    *p |= mask_to_set;
  }
  #line 50 
  return;
}

#line 52  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_bitmap_clear(unsigned long *map, unsigned int start, int nbits)
{
  #line 54 
  unsigned long *p = map + (unsigned long)(start / 64U);
  #line 55 
  unsigned int size = start + (unsigned int)nbits;
  #line 56 
  int bits_to_clear = (int)(64U - (start & 63U));
  #line 57 
  unsigned long mask_to_clear = 18446744073709551615UL << ((unsigned long)start & 63UL);
  #line 59 
  while (nbits - bits_to_clear >= 0) {
    #line 60 
    *p &= ~ mask_to_clear;
    #line 61 
    nbits -= bits_to_clear;
    #line 62 
    bits_to_clear = 64;
    #line 63 
    mask_to_clear = 18446744073709551615UL;
    #line 64 
    p ++;
  }
  #line 66 
  if (nbits != 0) {
    #line 67 
    mask_to_clear = (18446744073709551615UL >> ((unsigned long)(- size) & 63UL)) & mask_to_clear;
    #line 68 
    *p &= ~ mask_to_clear;
  }
  #line 70 
  return;
}

#line 72  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_bitmap_zero(unsigned long *dst, unsigned int nbits)
{
  #line 74 
  unsigned int len = (unsigned int)(((unsigned long)nbits + 63UL) / 64UL) * 8U;
  #line 75 
  memset((void *)dst,0,(unsigned long)len);
  #line 76 
  return;
}

#line 78  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
unsigned long ldv_bitmap_find_next_zero_area(unsigned long *map, unsigned long size, unsigned long start, unsigned int nr, unsigned long align_mask)
{
  #line 80 
  unsigned long index;
  #line 80 
  unsigned long end;
  #line 80 
  unsigned long i;
  #line 82 
  again: 
         #line 82 
  ;
  #line 83 
  index = ldv_find_next_zero_bit(map,size,start);
  #line 84 
  index = (index + align_mask) & ~ align_mask;
  #line 85 
  end = (unsigned long)nr + index;
  #line 87 
  if (end > size) 
                  #line 88 
                  return end;
  #line 90 
  i = ldv_find_next_bit(map,end,index);
  #line 92 
  if (i < end) {
    #line 93 
    start = i + 1UL;
    #line 94 
    goto again;
  }
  #line 97 
  return index;
}

#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/find_bit.h"
#line 68  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/find_bit.common.c"
unsigned long ldv_find_first_bit(unsigned long *addr, unsigned long size);
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/find_bit.h"
#line 25 
void ldv_check_find_bit_offset(unsigned long, unsigned long);
#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/find_bit.common.c"
static unsigned long ldv_ffs(unsigned long word)
{
  #line 23 
  int num = 0;
  #line 25 
  if ((word & 4294967295UL) == 0UL) {
    #line 26 
    num += 32;
    #line 27 
    word >>= 32;
  }
  #line 29 
  if ((word & 65535UL) == 0UL) {
    #line 30 
    num += 16;
    #line 31 
    word >>= 16;
  }
  #line 33 
  if ((word & 255UL) == 0UL) {
    #line 34 
    num += 8;
    #line 35 
    word >>= 8;
  }
  #line 37 
  if ((word & 15UL) == 0UL) {
    #line 38 
    num += 4;
    #line 39 
    word >>= 4;
  }
  #line 41 
  if ((word & 3UL) == 0UL) {
    #line 42 
    num += 2;
    #line 43 
    word >>= 2;
  }
  #line 45 
  if ((word & 1UL) == 0UL) 
                           #line 46 
                           num ++;
  #line 48 
  return (unsigned long)num;
}

#line 51  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/find_bit.common.c"
static unsigned long ldv_min(unsigned long a, unsigned long b)
{
  #line 53 
  if (a < b) 
             #line 54 
             return a;
  #line 56 
  return b;
}

#line 59  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/find_bit.common.c"
static unsigned long ldv_restrict_find_bit_res(unsigned long res, unsigned long size)
{
  #line 62 
  __VERIFIER_assume(1);
  #line 63 
  __VERIFIER_assume(res <= size);
  #line 65 
  return res;
}

#line 68  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/find_bit.common.c"
unsigned long ldv_find_first_bit(unsigned long *addr, unsigned long size)
{
  #line 70 
  unsigned long i;
  #line 72 
  i = 0UL;
  #line 72 
  while (i * 64UL < size) {
    #line 73 
    if (*(addr + i) != 0UL) {
      #line 74 
      ;
      #line 74 
      ;
      #line 74 
      ;
      #line 74 
      return ldv_restrict_find_bit_res(ldv_min(i * 64UL + ldv_ffs(*(addr + i)),size),
                                  size);
    }
    #line 72 
    i ++;
  }
  #line 76 
  return size;
}

#line 79  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/find_bit.common.c"
unsigned long ldv_find_next_bit(unsigned long *addr, unsigned long size, unsigned long offset)
{
  #line 81 
  unsigned long tmp;
  #line 83 
  ldv_check_find_bit_offset(size,offset);
  #line 85 
  tmp = *(addr + offset / 64UL);
  #line 86 
  tmp = (unsigned long)((18446744073709551615ULL << (offset & 63UL)) & (unsigned long long)tmp);
  #line 87 
  offset &= 18446744073709551552UL;
  #line 89 
  while (tmp == 0UL) {
    #line 90 
    offset += 64UL;
    #line 91 
    if (offset >= size) 
                        #line 92 
                        return size;
    #line 94 
    tmp = *(addr + offset / 64UL);
  }
  #line 97 
  ;
  #line 97 
  ;
  #line 97 
  ;
  #line 97 
  return ldv_restrict_find_bit_res(ldv_min(ldv_ffs(tmp) + offset,size),size);
}

#line 100  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/find_bit.common.c"
unsigned long ldv_find_next_zero_bit(unsigned long *addr, unsigned long size, unsigned long offset)
{
  #line 102 
  unsigned long tmp;
  #line 104 
  ldv_check_find_bit_offset(size,offset);
  #line 106 
  tmp = *(addr + offset / 64UL);
  #line 107 
  tmp = ~ tmp;
  #line 108 
  tmp = (unsigned long)((18446744073709551615ULL << (offset & 63UL)) & (unsigned long long)tmp);
  #line 109 
  offset &= 18446744073709551552UL;
  #line 111 
  while (tmp == 0UL) {
    #line 112 
    offset += 64UL;
    #line 113 
    if (offset >= size) 
                        #line 114 
                        return size;
    #line 116 
    tmp = *(addr + offset / 64UL);
    #line 117 
    tmp = ~ tmp;
  }
  #line 120 
  ;
  #line 120 
  ;
  #line 120 
  ;
  #line 120 
  return ldv_restrict_find_bit_res(ldv_min(ldv_ffs(tmp) + offset,size),size);
}

#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/string.h"
#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
size_t ldv_strlen(char *s);
#line 26  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/string.h"
#line 31  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
int ldv_strcmp(char *cs, char *ct);
#line 27  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/string.h"
#line 40  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
int ldv_strncmp(char *cs, char *ct, __kernel_size_t count);
#line 28  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/string.h"
#line 70  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
char *ldv_strstr(char *cs, char *ct);
#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
size_t ldv_strlen(char *s)
{
  #line 23 
  unsigned int len = 0U;
  #line 25 
  while ((int)*s != 0) {
    #line 26 
    len ++;
    #line 25 
    s ++;
  }
  #line 28 
  return (unsigned long)len;
}

#line 31  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
int ldv_strcmp(char *cs, char *ct)
{
  #line 33 
  while ((int)*cs != 0 && (int)*ct != 0) {
    #line 34 
    if ((int)*cs != (int)*ct) 
                              #line 35 
                              break;
    #line 33 
    cs ++;
    #line 33 
    ct ++;
  }
  #line 37 
  return (int)*cs - (int)*ct;
}

#line 40  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
int ldv_strncmp(char *cs, char *ct, __kernel_size_t count)
{
  #line 42 
  if (count == 0UL) 
                    #line 43 
                    return 0;
  #line 45 
  while ((int)*cs != 0 && (int)*ct != 0) {
    #line 46 
    if ((int)*cs != (int)*ct) 
                              #line 47 
                              break;
    #line 49 
    count --;
    #line 51 
    if (count == 0UL) 
                      #line 52 
                      break;
    #line 45 
    cs ++;
    #line 45 
    ct ++;
  }
  #line 55 
  return (int)*cs - (int)*ct;
}

#line 58  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
int ldv_memcmp(void *cs, void *ct, size_t count)
{
  #line 60 
  unsigned char *su1;
  #line 60 
  unsigned char *su2;
  #line 61 
  int res = 0;
  #line 63 
  su1 = (unsigned char *)cs;
  #line 63 
  su2 = (unsigned char *)ct;
  #line 63 
  while (count != 0UL) {
    #line 64 
    res = (int)*su1 - (int)*su2;
    #line 64 
    if (res != 0) 
                  #line 65 
                  break;
    #line 63 
    su1 ++;
    #line 63 
    su2 ++;
    #line 63 
    count --;
  }
  #line 67 
  return res;
}

#line 70  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
char *ldv_strstr(char *cs, char *ct)
{
  #line 72 
  size_t cs_len;
  #line 72 
  size_t ct_len;
  #line 74 
  cs_len = ldv_strlen(cs);
  #line 75 
  ct_len = ldv_strlen(ct);
  #line 77 
  while (cs_len >= ct_len) {
    #line 78 
    if (ldv_memcmp((void *)cs,(void *)ct,ct_len) == 0) 
                                                       #line 79 
                                                       return cs;
    #line 81 
    cs_len --;
    #line 82 
    cs ++;
  }
  #line 85 
  return (char *)0;
}

#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/list.c"
void ldv_init_list_head(struct list_head *list)
{
  #line 23 
  list->next = list;
  #line 24 
  list->prev = list;
  #line 25 
  return;
}

#line 26  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 43  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags);
#line 30  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 69  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
struct kmem_cache *ldv_kmem_cache_create(char *name, unsigned int size);
#line 31  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 85  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmem_cache_alloc(struct kmem_cache *cachep, gfp_t flags);
#line 32  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 90  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmem_cache_zalloc(struct kmem_cache *cachep, gfp_t flags);
#line 33  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 95  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void ldv_kmem_cache_free(struct kmem_cache *cachep, void *objp);
#line 34  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 100  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void ldv_kmem_cache_destroy(struct kmem_cache *cachep);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc(size_t size, gfp_t flags)
{
  #line 25 
  void *res;
  #line 27 
  ldv_check_alloc_flags(flags);
  #line 28 
  res = ldv_malloc(size);
  #line 30 
  return res;
}

#line 33  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kzalloc(size_t size, gfp_t flags)
{
  #line 35 
  void *res;
  #line 37 
  ldv_check_alloc_flags(flags);
  #line 38 
  res = ldv_zalloc(size);
  #line 40 
  return res;
}

#line 43  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags)
{
  #line 45 
  void *res;
  #line 47 
  ldv_check_alloc_flags(flags);
  #line 48 
  res = ldv_malloc(n * size);
  #line 50 
  return res;
}

#line 53  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags)
{
  #line 55 
  void *res;
  #line 57 
  ldv_check_alloc_flags(flags);
  #line 58 
  res = ldv_calloc(n,size);
  #line 60 
  return res;
}

#line 69  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
struct kmem_cache *ldv_kmem_cache_create(char *name, unsigned int size)
{
  #line 71 
  struct kmem_cache *res;
  #line 72 
  struct ldv_kmem_cache *ldv_res;
  #line 74 
  res = (struct kmem_cache *)ldv_zalloc(16UL);
  #line 76 
  if (res != (struct kmem_cache *)0) {
    #line 77 
    ldv_res = (struct ldv_kmem_cache *)res;
    #line 78 
    ldv_res->name = name;
    #line 79 
    ldv_res->size = size;
  }
  #line 82 
  return res;
}

#line 85  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmem_cache_alloc(struct kmem_cache *cachep, gfp_t flags)
{
  #line 87 
  return ldv_kmalloc((unsigned long)((struct ldv_kmem_cache *)cachep)->size,
                  flags);
}

#line 90  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmem_cache_zalloc(struct kmem_cache *cachep, gfp_t flags)
{
  #line 92 
  return ldv_kzalloc((unsigned long)((struct ldv_kmem_cache *)cachep)->size,
                  flags);
}

#line 95  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void ldv_kmem_cache_free(struct kmem_cache *cachep, void *objp)
{
  #line 97 
  ldv_free(objp);
  #line 98 
  return;
}

#line 100  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void ldv_kmem_cache_destroy(struct kmem_cache *cachep)
{
  #line 102 
  ldv_free((void *)cachep);
  #line 103 
  return;
}

#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/string.h"
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/util.c"
void *ldv_kmemdup(void *src, size_t len, gfp_t gfp);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/util.c"
void *ldv_kmemdup(void *src, size_t len, gfp_t gfp)
{
  #line 25 
  void *res;
  #line 27 
  ldv_check_alloc_flags(gfp);
  #line 28 
  res = ldv_malloc(len);
  #line 30 
  if (res != (void *)0) 
                        #line 31 
                        memcpy(res,src,len);
  #line 33 
  return res;
}

#line 162  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 162 
void ldv_check_alloc_nonatomic(void);
#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/vmalloc.h"
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/vmalloc.c"
void *ldv_vmalloc(unsigned long size);
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/vmalloc.h"
#line 33  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/vmalloc.c"
void *ldv_vzalloc(unsigned long size);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/vmalloc.h"
#line 43  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/vmalloc.c"
void ldv_vfree(void *addr);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/vmalloc.c"
void *ldv_vmalloc(unsigned long size)
{
  #line 25 
  void *res;
  #line 27 
  ldv_check_alloc_nonatomic();
  #line 28 
  res = ldv_malloc(size);
  #line 30 
  return res;
}

#line 33  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/vmalloc.c"
void *ldv_vzalloc(unsigned long size)
{
  #line 35 
  void *res;
  #line 37 
  ldv_check_alloc_nonatomic();
  #line 38 
  res = ldv_zalloc(size);
  #line 40 
  return res;
}

#line 43  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/vmalloc.c"
void ldv_vfree(void *addr)
{
  #line 45 
  ldv_free(addr);
  #line 46 
  return;
}

#line 28  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 28 
void *malloc(size_t);
#line 29 
#line 29 
void *calloc(size_t, size_t);
#line 30 
#line 30 
void free(void *);
#line 45 
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
unsigned int ldv_is_memory_alloc_failures;
#line 56  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 63  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xcalloc(size_t nmemb, size_t size);
#line 60  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 88  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc_unknown_size(void);
#line 61  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 97  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc_unknown_size(void);
#line 64  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc(size_t size);
#line 65  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 37  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc(size_t nmemb, size_t size);
#line 66  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 42  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc(size_t size);
#line 67  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 47  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void ldv_reference_free(void *s);
#line 69  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 52  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_realloc(void *ptr, size_t size);
#line 71  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 80  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc(size_t size);
#line 72  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 90  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xcalloc(size_t nmemb, size_t size);
#line 73  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 100  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xzalloc(size_t size);
#line 75  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 110  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc_unknown_size(void);
#line 76  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 124  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc_unknown_size(void);
#line 77  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 139  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc_unknown_size(void);
#line 83  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 106  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc_unknown_size(size_t size);
#line 85  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 144  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size);
#line 87  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 87 
void *external_allocated_data(void);
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
unsigned int ldv_is_memory_alloc_failures = 1U;
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc(size_t size)
{
  #line 26 
  void *res;
  #line 28 
  if (ldv_is_memory_alloc_failures != 0U) {
    #line 28 
    if (ldv_undef_int() != 0) 
                              #line 29 
                              return (void *)0;
  }
  #line 32 
  res = malloc(size);
  #line 33 
  __VERIFIER_assume(res != (void *)0);
  #line 34 
  return res;
}

#line 37  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc(size_t nmemb, size_t size)
{
  #line 39 
  return calloc(nmemb,size);
}

#line 42  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc(size_t size)
{
  #line 44 
  return calloc(1UL,size);
}

#line 47  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void ldv_reference_free(void *s)
{
  #line 49 
  free(s);
  #line 50 
  return;
}

#line 52  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_realloc(void *ptr, size_t size)
{
  #line 54 
  void *res;
  #line 56 
  if (ptr != (void *)0 && size == 0UL) {
    #line 57 
    free(ptr);
    #line 58 
    return (void *)0;
  }
  #line 61 
  if (ptr == (void *)0) {
    #line 62 
    res = malloc(size);
    #line 63 
    return res;
  }
  #line 66 
  if (ldv_undef_int() != 0) {
    #line 68 
    res = malloc(size);
    #line 69 
    __VERIFIER_assume(res != (void *)0);
    #line 71 
    memcpy(res,ptr,size);
    #line 72 
    free(ptr);
    #line 74 
    return res;
  }
  else 
       #line 77 
       return (void *)0;
}

#line 80  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc(size_t size)
{
  #line 82 
  void *res;
  #line 84 
  res = malloc(size);
  #line 85 
  __VERIFIER_assume(res != (void *)0);
  #line 87 
  return res;
}

#line 90  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xcalloc(size_t nmemb, size_t size)
{
  #line 92 
  void *res;
  #line 94 
  res = calloc(nmemb,size);
  #line 95 
  __VERIFIER_assume(res != (void *)0);
  #line 97 
  return res;
}

#line 100  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xzalloc(size_t size)
{
  #line 102 
  void *res;
  #line 104 
  res = calloc(1UL,size);
  #line 105 
  __VERIFIER_assume(res != (void *)0);
  #line 107 
  return res;
}

#line 110  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc_unknown_size(void)
{
  #line 112 
  void *res;
  #line 114 
  if (ldv_undef_int() != 0) {
    #line 116 
    res = external_allocated_data();
    #line 117 
    __VERIFIER_assume(res != (void *)0);
    #line 118 
    return res;
  }
  else 
       #line 121 
       return (void *)0;
}

#line 124  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc_unknown_size(void)
{
  #line 126 
  void *res;
  #line 128 
  if (ldv_undef_int() != 0) {
    #line 130 
    res = external_allocated_data();
    #line 131 
    memset(res,0,8UL);
    #line 132 
    __VERIFIER_assume(res != (void *)0);
    #line 133 
    return res;
  }
  else 
       #line 136 
       return (void *)0;
}

#line 139  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc_unknown_size(void)
{
  #line 141 
  return ldv_reference_calloc_unknown_size();
}

#line 144  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size)
{
  #line 146 
  void *res;
  #line 149 
  res = external_allocated_data();
  #line 150 
  __VERIFIER_assume(res != (void *)0);
  #line 152 
  return res;
}

#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc(size_t size)
{
  #line 25 
  void *res;
  #line 26 
  res = ldv_reference_malloc(size);
  #line 27 
  if (res != (void *)0) {
    #line 28 
    int tmp_0;
    #line 28 
    if (ldv_is_err(res)) 
                         #line 28 
                         tmp_0 = 0; else 
                                         #line 28 
                                         tmp_0 = 1;
    #line 28 
    __VERIFIER_assume(tmp_0);
  }
  #line 29 
  return res;
}

#line 32  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc(size_t nmemb, size_t size)
{
  #line 34 
  void *res;
  #line 35 
  res = ldv_reference_calloc(nmemb,size);
  #line 36 
  if (res != (void *)0) {
    #line 37 
    int tmp_0;
    #line 37 
    if (ldv_is_err(res)) 
                         #line 37 
                         tmp_0 = 0; else 
                                         #line 37 
                                         tmp_0 = 1;
    #line 37 
    __VERIFIER_assume(tmp_0);
  }
  #line 38 
  return res;
}

#line 41  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc(size_t size)
{
  #line 43 
  void *res;
  #line 44 
  res = ldv_reference_zalloc(size);
  #line 45 
  if (res != (void *)0) {
    #line 46 
    int tmp_0;
    #line 46 
    if (ldv_is_err(res)) 
                         #line 46 
                         tmp_0 = 0; else 
                                         #line 46 
                                         tmp_0 = 1;
    #line 46 
    __VERIFIER_assume(tmp_0);
  }
  #line 47 
  return res;
}

#line 50  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void ldv_free(void *s)
{
  #line 52 
  ldv_reference_free(s);
  #line 53 
  return;
}

#line 55  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc(size_t size)
{
  #line 57 
  void *res;
  #line 59 
  int tmp_0;
  #line 58 
  res = ldv_reference_xmalloc(size);
  #line 59 
  if (ldv_is_err(res)) 
                       #line 59 
                       tmp_0 = 0; else 
                                       #line 59 
                                       tmp_0 = 1;
  #line 59 
  __VERIFIER_assume(tmp_0);
  #line 60 
  return res;
}

#line 63  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xcalloc(size_t nmemb, size_t size)
{
  #line 65 
  void *res;
  #line 67 
  int tmp_0;
  #line 66 
  res = ldv_reference_xcalloc(nmemb,size);
  #line 67 
  if (ldv_is_err(res)) 
                       #line 67 
                       tmp_0 = 0; else 
                                       #line 67 
                                       tmp_0 = 1;
  #line 67 
  __VERIFIER_assume(tmp_0);
  #line 68 
  return res;
}

#line 71  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xzalloc(size_t size)
{
  #line 73 
  void *res;
  #line 75 
  int tmp_0;
  #line 74 
  res = ldv_reference_xzalloc(size);
  #line 75 
  if (ldv_is_err(res)) 
                       #line 75 
                       tmp_0 = 0; else 
                                       #line 75 
                                       tmp_0 = 1;
  #line 75 
  __VERIFIER_assume(tmp_0);
  #line 76 
  return res;
}

#line 79  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc_unknown_size(void)
{
  #line 81 
  void *res;
  #line 82 
  res = ldv_reference_malloc_unknown_size();
  #line 83 
  if (res != (void *)0) {
    #line 84 
    int tmp_0;
    #line 84 
    if (ldv_is_err(res)) 
                         #line 84 
                         tmp_0 = 0; else 
                                         #line 84 
                                         tmp_0 = 1;
    #line 84 
    __VERIFIER_assume(tmp_0);
  }
  #line 85 
  return res;
}

#line 88  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc_unknown_size(void)
{
  #line 90 
  void *res;
  #line 91 
  res = ldv_reference_calloc_unknown_size();
  #line 92 
  if (res != (void *)0) {
    #line 93 
    int tmp_0;
    #line 93 
    if (ldv_is_err(res)) 
                         #line 93 
                         tmp_0 = 0; else 
                                         #line 93 
                                         tmp_0 = 1;
    #line 93 
    __VERIFIER_assume(tmp_0);
  }
  #line 94 
  return res;
}

#line 97  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc_unknown_size(void)
{
  #line 99 
  void *res;
  #line 100 
  res = ldv_reference_zalloc_unknown_size();
  #line 101 
  if (res != (void *)0) {
    #line 102 
    int tmp_0;
    #line 102 
    if (ldv_is_err(res)) 
                         #line 102 
                         tmp_0 = 0; else 
                                         #line 102 
                                         tmp_0 = 1;
    #line 102 
    __VERIFIER_assume(tmp_0);
  }
  #line 103 
  return res;
}

#line 106  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc_unknown_size(size_t size)
{
  #line 108 
  void *res;
  #line 110 
  int tmp_0;
  #line 109 
  res = ldv_reference_xmalloc_unknown_size(size);
  #line 110 
  if (ldv_is_err(res)) 
                       #line 110 
                       tmp_0 = 0; else 
                                       #line 110 
                                       tmp_0 = 1;
  #line 110 
  __VERIFIER_assume(tmp_0);
  #line 111 
  return res;
}

/* compiler builtin: 
   long __builtin_expect(long exp, long c);   */
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/common.h"
#line 22 
void __VERIFIER_error(void);
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/common.h"
long __builtin_expect(long exp, long c)
{
  #line 26 
  return exp;
}

#line 35  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/gcc.c"
void __builtin_trap(void)
{
  #line 37 
  __VERIFIER_error();
  #line 38 
  return;
}

#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 53  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
long ldv_undef_long(void);
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 61  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned int ldv_undef_uint(void);
#line 26  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 77  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long ldv_undef_ulong(void);
#line 27  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 85  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long long ldv_undef_ulonglong(void);
#line 28  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 69  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr(void);
#line 37  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 111  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_nonnegative(void);
#line 43  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 129  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr_non_null(void);
#line 54  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 139  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int __ldv_undef_int_range(int begin, int end);
#line 56  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 151  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int __ldv_undef_int_range2(int begin, int end);
#line 29 
#line 29 
int __VERIFIER_nondet_int(void);
#line 31 
#line 31 
long __VERIFIER_nondet_long(void);
#line 38 
#line 38 
unsigned int __VERIFIER_nondet_uint(void);
#line 41 
#line 41 
unsigned long __VERIFIER_nondet_ulong(void);
#line 42 
#line 42 
unsigned long long __VERIFIER_nondet_ulonglong(void);
#line 43 
#line 43 
void *__VERIFIER_nondet_pointer(void);
#line 45  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int(void)
{
  #line 48 
  int undef_int = __VERIFIER_nondet_int();
  #line 50 
  return undef_int;
}

#line 53  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
long ldv_undef_long(void)
{
  #line 56 
  long undef_long = __VERIFIER_nondet_long();
  #line 58 
  return undef_long;
}

#line 61  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned int ldv_undef_uint(void)
{
  #line 64 
  unsigned int undef_uint = __VERIFIER_nondet_uint();
  #line 66 
  return undef_uint;
}

#line 69  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr(void)
{
  #line 72 
  void *undef_ptr = __VERIFIER_nondet_pointer();
  #line 74 
  return undef_ptr;
}

#line 77  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long ldv_undef_ulong(void)
{
  #line 80 
  unsigned long undef_ulong = __VERIFIER_nondet_ulong();
  #line 82 
  return undef_ulong;
}

#line 85  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long long ldv_undef_ulonglong(void)
{
  #line 88 
  unsigned long long undef_ulonglong = __VERIFIER_nondet_ulonglong();
  #line 90 
  return undef_ulonglong;
}

#line 93  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_positive(void)
{
  #line 95 
  int ret = ldv_undef_int();
  #line 97 
  __VERIFIER_assume(ret > 0);
  #line 99 
  return ret;
}

#line 102  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_negative(void)
{
  #line 104 
  int ret = ldv_undef_int();
  #line 106 
  __VERIFIER_assume(ret < 0);
  #line 108 
  return ret;
}

#line 111  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_nonnegative(void)
{
  #line 113 
  int ret = ldv_undef_int();
  #line 115 
  __VERIFIER_assume(ret >= 0);
  #line 117 
  return ret;
}

#line 120  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_nonpositive(void)
{
  #line 122 
  int ret = ldv_undef_int();
  #line 124 
  __VERIFIER_assume(ret <= 0);
  #line 126 
  return ret;
}

#line 129  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr_non_null(void)
{
  #line 131 
  void *ret = ldv_undef_ptr();
  #line 133 
  __VERIFIER_assume(ret != (void *)0);
  #line 135 
  return ret;
}

#line 139  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int __ldv_undef_int_range(int begin, int end)
{
  #line 141 
  int ret;
  #line 143 
  ret = ldv_undef_int();
  #line 144 
  __VERIFIER_assume(ret >= begin);
  #line 145 
  __VERIFIER_assume(ret <= end);
  #line 147 
  return ret;
}

#line 151  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int __ldv_undef_int_range2(int begin, int end)
{
  #line 153 
  int ret;
  #line 155 
  ret = begin;
  #line 155 
  while (ret < end) {
    #line 156 
    if (ldv_undef_int() != 0) 
                              #line 157 
                              break;
    #line 155 
    ret ++;
  }
  #line 159 
  return ret;
}

#line 62  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 62 
void ldv_initialize(void);
#line 97 
#line 97 
void ldv_failed_register_netdev(void);
#line 123 
#line 123 
void ldv_pre_probe(void);
#line 35  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/thread.h"
#line 35 
int pthread_create(pthread_t *, pthread_attr_t *, void *(*)(void *), void *);
#line 39 
#line 39 
int pthread_join(pthread_t, void **);
#line 52  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/emg/0/environment_model.c"
int emg_runtime_enabled = 0;
#line 53  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/emg/0/environment_model.c"
int emg_runtime_lowpower = 1;
#line 110 
#line 267 
void emg_dispatch_deregister_14(struct net_device *arg0);
#line 111 
#line 195 
void emg_dispatch_deregister_8(struct pci_driver *arg0);
#line 112 
#line 159 
void emg_dispatch_instance_deregister_4(struct timer_list *arg0);
#line 113 
#line 184 
void emg_dispatch_instance_register_7(struct timer_list *arg0);
#line 114 
#line 168 
void emg_dispatch_irq_deregister_5(int arg0);
#line 115 
#line 215 
void emg_dispatch_irq_register_11(int arg0, enum irqreturn (*arg1)(int , void *), enum irqreturn (*arg2)(int , void *), void *arg3);
#line 116 
#line 241 
void emg_dispatch_irq_register_12(int arg0, enum irqreturn (*arg1)(int , void *), enum irqreturn (*arg2)(int , void *), void *arg3);
#line 117 
#line 204 
void emg_dispatch_register_10(struct net_device *arg0);
#line 118 
#line 148 
void emg_dispatch_register_2(struct pci_driver *arg0);
#line 119 
#line 2512 
void *emg_entry_point_insmod(void *arg0);
#line 122 
#line 276 
void *emg_interrupt_interrupt_scenario_aq_ptp_isr(void *arg0);
#line 123 
#line 338 
void *emg_interrupt_interrupt_scenario_aq_vec_isr_legacy(void *arg0);
#line 125 
#line 400 
void *emg_net_random_allocationless_scenario_aq_ethtool_get_coalesce(void *arg0);
#line 126 
#line 946 
void *emg_pci_pci_scenario_aq_pci_ops(void *arg0);
#line 128 
#line 1122 
void *emg_pm_pm_ops_scenario_aq_pm_ops(void *arg0);
#line 134 
#line 2117 
void *emg_timer_timer_scenario_5(void *arg0);
#line 136 
#line 2541 
int main(void);
#line 139  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/emg/0/environment_model.c"
pthread_t emg_thread_15;
#line 140  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/emg/0/environment_model.c"
pthread_t emg_thread_16;
#line 141  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/emg/0/environment_model.c"
pthread_t emg_thread_17;
#line 142  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/emg/0/environment_model.c"
pthread_t emg_thread_18;
#line 143  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/emg/0/environment_model.c"
pthread_t emg_thread_19;
#line 144  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/emg/0/environment_model.c"
pthread_t emg_thread_20;
#line 148  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/emg/0/environment_model.c"
void emg_dispatch_register_2(struct pci_driver *arg0)
{
  #line 149 
  int ret;
  #line 150 
  struct emg_struct_pci_scenario_aq_pci_ops_18 *cf_arg_18;
  #line 151 
  cf_arg_18 = (struct emg_struct_pci_scenario_aq_pci_ops_18 *)ldv_xmalloc(16UL);
  #line 152 
  cf_arg_18->arg0 = arg0;
  #line 153 
  ret = pthread_create(& emg_thread_18,(pthread_attr_t *)0,& emg_pci_pci_scenario_aq_pci_ops,(void *)cf_arg_18);
  #line 154 
  __VERIFIER_assume(ret == 0);
  #line 155 
  return;
}

#line 159  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/emg/0/environment_model.c"
void emg_dispatch_instance_deregister_4(struct timer_list *arg0)
{
  #line 160 
  int ret;
  #line 161 
  struct emg_struct_timer_scenario_5_20 *cf_arg_20;
  #line 162 
  ret = pthread_join(emg_thread_20,(void **)0);
  #line 163 
  __VERIFIER_assume(ret == 0);
  #line 164 
  return;
}

#line 168  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/emg/0/environment_model.c"
void emg_dispatch_irq_deregister_5(int arg0)
{
  #line 169 
  int ret;
  #line 170 
  struct emg_struct_free_irq_5 *cf_arg_15;
  #line 171 
  struct emg_struct_free_irq_5 *cf_arg_16;
  #line 172 
  if (ldv_undef_int() != 0) {
    #line 173 
    ret = pthread_join(emg_thread_15,(void **)0);
    #line 174 
    __VERIFIER_assume(ret == 0);
  }
  else {
    #line 177 
    ret = pthread_join(emg_thread_16,(void **)0);
    #line 178 
    __VERIFIER_assume(ret == 0);
  }
  #line 180 
  return;
}

#line 184  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/emg/0/environment_model.c"
void emg_dispatch_instance_register_7(struct timer_list *arg0)
{
  #line 185 
  int ret;
  #line 186 
  struct emg_struct_timer_scenario_5_20 *cf_arg_20;
  #line 187 
  cf_arg_20 = (struct emg_struct_timer_scenario_5_20 *)ldv_xmalloc(16UL);
  #line 188 
  cf_arg_20->arg0 = arg0;
  #line 189 
  ret = pthread_create(& emg_thread_20,(pthread_attr_t *)0,& emg_timer_timer_scenario_5,(void *)cf_arg_20);
  #line 190 
  __VERIFIER_assume(ret == 0);
  #line 191 
  return;
}

#line 195  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/emg/0/environment_model.c"
void emg_dispatch_deregister_8(struct pci_driver *arg0)
{
  #line 196 
  int ret;
  #line 197 
  struct emg_struct_pci_scenario_aq_pci_ops_18 *cf_arg_18;
  #line 198 
  ret = pthread_join(emg_thread_18,(void **)0);
  #line 199 
  __VERIFIER_assume(ret == 0);
  #line 200 
  return;
}

#line 204  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/emg/0/environment_model.c"
void emg_dispatch_register_10(struct net_device *arg0)
{
  #line 205 
  int ret;
  #line 206 
  struct emg_struct_random_allocationless_scenario_aq_ethtool_get_coalesce_17 *cf_arg_17;
  #line 207 
  cf_arg_17 = (struct emg_struct_random_allocationless_scenario_aq_ethtool_get_coalesce_17 *)ldv_xmalloc(16UL);
  #line 208 
  cf_arg_17->arg0 = arg0;
  #line 209 
  ret = pthread_create(& emg_thread_17,(pthread_attr_t *)0,& emg_net_random_allocationless_scenario_aq_ethtool_get_coalesce,(void *)cf_arg_17);
  #line 210 
  __VERIFIER_assume(ret == 0);
  #line 211 
  return;
}

#line 215  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/emg/0/environment_model.c"
void emg_dispatch_irq_register_11(int arg0, enum irqreturn (*arg1)(int , void *), enum irqreturn (*arg2)(int , void *), void *arg3)
{
  #line 216 
  int ret;
  #line 217 
  struct emg_struct_interrupt_scenario_aq_ptp_isr_15 *cf_arg_15;
  #line 218 
  struct emg_struct_interrupt_scenario_aq_ptp_isr_15 *cf_arg_16;
  #line 219 
  if (ldv_undef_int() != 0) {
    #line 220 
    cf_arg_15 = (struct emg_struct_interrupt_scenario_aq_ptp_isr_15 *)ldv_xmalloc(40UL);
    #line 221 
    cf_arg_15->arg0 = arg0;
    #line 222 
    cf_arg_15->arg1 = arg1;
    #line 223 
    cf_arg_15->arg2 = arg2;
    #line 224 
    cf_arg_15->arg3 = arg3;
    #line 225 
    ret = pthread_create(& emg_thread_15,(pthread_attr_t *)0,& emg_interrupt_interrupt_scenario_aq_ptp_isr,(void *)cf_arg_15);
    #line 226 
    __VERIFIER_assume(ret == 0);
  }
  else {
    #line 229 
    cf_arg_16 = (struct emg_struct_interrupt_scenario_aq_ptp_isr_15 *)ldv_xmalloc(40UL);
    #line 230 
    cf_arg_16->arg0 = arg0;
    #line 231 
    cf_arg_16->arg1 = arg1;
    #line 232 
    cf_arg_16->arg2 = arg2;
    #line 233 
    cf_arg_16->arg3 = arg3;
    #line 234 
    ret = pthread_create(& emg_thread_16,(pthread_attr_t *)0,& emg_interrupt_interrupt_scenario_aq_vec_isr_legacy,(void *)cf_arg_16);
    #line 235 
    __VERIFIER_assume(ret == 0);
  }
  #line 237 
  return;
}

#line 241  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/emg/0/environment_model.c"
void emg_dispatch_irq_register_12(int arg0, enum irqreturn (*arg1)(int , void *), enum irqreturn (*arg2)(int , void *), void *arg3)
{
  #line 242 
  int ret;
  #line 243 
  struct emg_struct_interrupt_scenario_aq_ptp_isr_15 *cf_arg_15;
  #line 244 
  struct emg_struct_interrupt_scenario_aq_ptp_isr_15 *cf_arg_16;
  #line 245 
  if (ldv_undef_int() != 0) {
    #line 246 
    cf_arg_15 = (struct emg_struct_interrupt_scenario_aq_ptp_isr_15 *)ldv_xmalloc(40UL);
    #line 247 
    cf_arg_15->arg0 = arg0;
    #line 248 
    cf_arg_15->arg1 = arg1;
    #line 249 
    cf_arg_15->arg2 = arg2;
    #line 250 
    cf_arg_15->arg3 = arg3;
    #line 251 
    ret = pthread_create(& emg_thread_15,(pthread_attr_t *)0,& emg_interrupt_interrupt_scenario_aq_ptp_isr,(void *)cf_arg_15);
    #line 252 
    __VERIFIER_assume(ret == 0);
  }
  else {
    #line 255 
    cf_arg_16 = (struct emg_struct_interrupt_scenario_aq_ptp_isr_15 *)ldv_xmalloc(40UL);
    #line 256 
    cf_arg_16->arg0 = arg0;
    #line 257 
    cf_arg_16->arg1 = arg1;
    #line 258 
    cf_arg_16->arg2 = arg2;
    #line 259 
    cf_arg_16->arg3 = arg3;
    #line 260 
    ret = pthread_create(& emg_thread_16,(pthread_attr_t *)0,& emg_interrupt_interrupt_scenario_aq_vec_isr_legacy,(void *)cf_arg_16);
    #line 261 
    __VERIFIER_assume(ret == 0);
  }
  #line 263 
  return;
}

#line 267  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/emg/0/environment_model.c"
void emg_dispatch_deregister_14(struct net_device *arg0)
{
  #line 268 
  int ret;
  #line 269 
  struct emg_struct_random_allocationless_scenario_aq_ethtool_get_coalesce_17 *cf_arg_17;
  #line 270 
  ret = pthread_join(emg_thread_17,(void **)0);
  #line 271 
  __VERIFIER_assume(ret == 0);
  #line 272 
  return;
}

#line 276  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/emg/0/environment_model.c"
void *emg_interrupt_interrupt_scenario_aq_ptp_isr(void *arg0)
{
  #line 279 
  enum irqreturn (*emg_15_callback)(int , void *);
  #line 280 
  void *emg_15_data;
  #line 281 
  int emg_15_line;
  #line 282 
  enum irqreturn emg_15_ret_val;
  #line 283 
  enum irqreturn (*emg_15_thread)(int , void *);
  #line 285 
  struct emg_struct_interrupt_scenario_aq_ptp_isr_15 *data = (struct emg_struct_interrupt_scenario_aq_ptp_isr_15 *)arg0;
  #line 288 
  emg_15_callback = & emg_wrapper_aq_ptp_isr;
  #line 289 
  emg_15_thread = & emg_wrapper_aq_linkstate_threaded_isr;
  #line 292 
  if (data != (struct emg_struct_interrupt_scenario_aq_ptp_isr_15 *)0) {
    #line 293 
    emg_15_line = data->arg0;
    #line 294 
    emg_15_callback = data->arg1;
    #line 295 
    emg_15_thread = data->arg2;
    #line 296 
    emg_15_data = data->arg3;
    #line 297 
    ldv_free((void *)data);
  }
  #line 303 
  ldv_switch_to_interrupt_context();
  #line 307 
  emg_15_ret_val = emg_wrapper_aq_ptp_isr(emg_15_line,emg_15_data);
  #line 312 
  ldv_switch_to_process_context();
  #line 315 
  if (ldv_undef_int() != 0) {
    #line 317 
    __VERIFIER_assume(emg_15_ret_val == (unsigned int)IRQ_WAKE_THREAD);
    #line 321 
    emg_wrapper_aq_linkstate_threaded_isr(emg_15_line,emg_15_data);
  }
  else 
       #line 325 
       __VERIFIER_assume(emg_15_ret_val != (unsigned int)IRQ_WAKE_THREAD);
  #line 333 
  return (void *)0;
}

#line 338  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/emg/0/environment_model.c"
void *emg_interrupt_interrupt_scenario_aq_vec_isr_legacy(void *arg0)
{
  #line 341 
  enum irqreturn (*emg_16_callback)(int , void *);
  #line 342 
  void *emg_16_data;
  #line 343 
  int emg_16_line;
  #line 344 
  enum irqreturn emg_16_ret_val;
  #line 345 
  enum irqreturn (*emg_16_thread)(int , void *);
  #line 347 
  struct emg_struct_interrupt_scenario_aq_ptp_isr_15 *data = (struct emg_struct_interrupt_scenario_aq_ptp_isr_15 *)arg0;
  #line 350 
  emg_16_callback = & aq_vec_isr_legacy;
  #line 351 
  emg_16_thread = & emg_wrapper_aq_linkstate_threaded_isr;
  #line 354 
  if (data != (struct emg_struct_interrupt_scenario_aq_ptp_isr_15 *)0) {
    #line 355 
    emg_16_line = data->arg0;
    #line 356 
    emg_16_callback = data->arg1;
    #line 357 
    emg_16_thread = data->arg2;
    #line 358 
    emg_16_data = data->arg3;
    #line 359 
    ldv_free((void *)data);
  }
  #line 365 
  ldv_switch_to_interrupt_context();
  #line 369 
  emg_16_ret_val = aq_vec_isr_legacy(emg_16_line,emg_16_data);
  #line 374 
  ldv_switch_to_process_context();
  #line 377 
  if (ldv_undef_int() != 0) {
    #line 379 
    __VERIFIER_assume(emg_16_ret_val == (unsigned int)IRQ_WAKE_THREAD);
    #line 383 
    emg_wrapper_aq_linkstate_threaded_isr(emg_16_line,emg_16_data);
  }
  else 
       #line 387 
       __VERIFIER_assume(emg_16_ret_val != (unsigned int)IRQ_WAKE_THREAD);
  #line 395 
  return (void *)0;
}

#line 400  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/emg/0/environment_model.c"
void *emg_net_random_allocationless_scenario_aq_ethtool_get_coalesce(void *arg0)
{
  #line 403 
  struct net_device *emg_17_container;
  #line 404 
  struct sk_buff *emg_17_emg_param_0_25;
  #line 405 
  struct ethtool_coalesce *emg_17_emg_param_1_0;
  #line 406 
  struct ethtool_drvinfo *emg_17_emg_param_1_1;
  #line 407 
  unsigned int *emg_17_emg_param_1_10;
  #line 408 
  struct ethtool_rxnfc *emg_17_emg_param_1_13;
  #line 409 
  int emg_17_emg_param_1_15;
  #line 410 
  unsigned int emg_17_emg_param_1_16;
  #line 411 
  struct ethtool_ts_info *emg_17_emg_param_1_18;
  #line 412 
  struct ethtool_wolinfo *emg_17_emg_param_1_19;
  #line 413 
  struct ethtool_eee *emg_17_emg_param_1_2;
  #line 414 
  int emg_17_emg_param_1_20;
  #line 415 
  struct ifreq *emg_17_emg_param_1_21;
  #line 416 
  unsigned long long emg_17_emg_param_1_23;
  #line 417 
  void *emg_17_emg_param_1_24;
  #line 418 
  unsigned short emg_17_emg_param_1_26;
  #line 419 
  unsigned short emg_17_emg_param_1_28;
  #line 420 
  struct ethtool_stats *emg_17_emg_param_1_3;
  #line 421 
  struct ethtool_coalesce *emg_17_emg_param_1_30;
  #line 422 
  struct ethtool_eee *emg_17_emg_param_1_31;
  #line 423 
  struct ethtool_link_ksettings *emg_17_emg_param_1_32;
  #line 424 
  unsigned int emg_17_emg_param_1_33;
  #line 425 
  struct ethtool_pauseparam *emg_17_emg_param_1_34;
  #line 426 
  enum ethtool_phys_id_state *emg_17_emg_param_1_35;
  #line 427 
  unsigned int emg_17_emg_param_1_36;
  #line 428 
  struct ethtool_ringparam *emg_17_emg_param_1_37;
  #line 429 
  unsigned int *emg_17_emg_param_1_38;
  #line 430 
  struct ethtool_rxnfc *emg_17_emg_param_1_41;
  #line 431 
  struct ethtool_wolinfo *emg_17_emg_param_1_42;
  #line 432 
  struct ethtool_link_ksettings *emg_17_emg_param_1_5;
  #line 433 
  struct ethtool_pauseparam *emg_17_emg_param_1_6;
  #line 434 
  struct ethtool_regs *emg_17_emg_param_1_7;
  #line 435 
  struct ethtool_ringparam *emg_17_emg_param_1_9;
  #line 436 
  unsigned char *emg_17_emg_param_2_11;
  #line 437 
  unsigned int *emg_17_emg_param_2_14;
  #line 438 
  unsigned char *emg_17_emg_param_2_17;
  #line 439 
  int emg_17_emg_param_2_22;
  #line 440 
  unsigned short emg_17_emg_param_2_27;
  #line 441 
  unsigned short emg_17_emg_param_2_29;
  #line 442 
  unsigned char *emg_17_emg_param_2_39;
  #line 443 
  unsigned long long *emg_17_emg_param_2_4;
  #line 444 
  void *emg_17_emg_param_2_8;
  #line 445 
  unsigned char *emg_17_emg_param_3_12;
  #line 446 
  unsigned char emg_17_emg_param_3_40;
  #line 447 
  int emg_repeat_cnt_call_17 = 1;
  #line 449 
  struct emg_struct_random_allocationless_scenario_aq_ethtool_get_coalesce_17 *data = (struct emg_struct_random_allocationless_scenario_aq_ethtool_get_coalesce_17 *)arg0;
  #line 454 
  if (data != (struct emg_struct_random_allocationless_scenario_aq_ethtool_get_coalesce_17 *)0) {
    #line 455 
    emg_17_container = data->arg0;
    #line 456 
    ldv_free((void *)data);
  }
  #line 461 
  goto emg_call_17;
  #line 465 
  return (void *)0;
  #line 468 
  emg_call_17: 
               #line 468 
  ;
  #line 469 
  switch (ldv_undef_int()) {
    #line 470 
    case 0: 
            #line 470 
    ;
    #line 472 
    emg_17_emg_param_1_42 = (struct ethtool_wolinfo *)ldv_xmalloc_unknown_size(0UL);
    #line 472 
    emg_17_emg_param_1_42 = emg_17_emg_param_1_42;
    #line 476 
    emg_wrapper_aq_ethtool_set_wol(emg_17_container,emg_17_emg_param_1_42);
    #line 480 
    ldv_free((void *)emg_17_emg_param_1_42);
    #line 482 
    break;
    #line 484 
    case 1: 
            #line 484 
    ;
    #line 486 
    emg_17_emg_param_1_41 = (struct ethtool_rxnfc *)ldv_xmalloc_unknown_size(0UL);
    #line 486 
    emg_17_emg_param_1_41 = emg_17_emg_param_1_41;
    #line 490 
    emg_wrapper_aq_ethtool_set_rxnfc(emg_17_container,emg_17_emg_param_1_41);
    #line 494 
    ldv_free((void *)emg_17_emg_param_1_41);
    #line 496 
    break;
    #line 498 
    case 2: 
            #line 498 
    ;
    #line 500 
    emg_17_emg_param_1_38 = (unsigned int *)ldv_xmalloc_unknown_size(0UL);
    #line 500 
    emg_17_emg_param_1_38 = emg_17_emg_param_1_38;
    #line 501 
    emg_17_emg_param_2_39 = (unsigned char *)ldv_xmalloc_unknown_size(0UL);
    #line 501 
    emg_17_emg_param_2_39 = emg_17_emg_param_2_39;
    #line 505 
    emg_wrapper_aq_ethtool_set_rss(emg_17_container,emg_17_emg_param_1_38,emg_17_emg_param_2_39,(unsigned char)((int)emg_17_emg_param_3_40));
    #line 509 
    ldv_free((void *)emg_17_emg_param_1_38);
    #line 510 
    ldv_free((void *)emg_17_emg_param_2_39);
    #line 512 
    break;
    #line 514 
    case 3: 
            #line 514 
    ;
    #line 516 
    emg_17_emg_param_1_37 = (struct ethtool_ringparam *)ldv_xmalloc_unknown_size(0UL);
    #line 516 
    emg_17_emg_param_1_37 = emg_17_emg_param_1_37;
    #line 520 
    emg_wrapper_aq_set_ringparam(emg_17_container,emg_17_emg_param_1_37);
    #line 524 
    ldv_free((void *)emg_17_emg_param_1_37);
    #line 526 
    break;
    #line 528 
    case 4: 
            #line 528 
    ;
    #line 530 
    emg_wrapper_aq_ethtool_set_priv_flags(emg_17_container,emg_17_emg_param_1_36);
    #line 532 
    break;
    #line 534 
    case 5: 
            #line 534 
    ;
    #line 536 
    emg_17_emg_param_1_35 = (enum ethtool_phys_id_state *)ldv_xmalloc_unknown_size(0UL);
    #line 536 
    emg_17_emg_param_1_35 = emg_17_emg_param_1_35;
    #line 540 
    emg_wrapper_aq_ethtool_set_phys_id(emg_17_container,*emg_17_emg_param_1_35);
    #line 544 
    ldv_free((void *)emg_17_emg_param_1_35);
    #line 546 
    break;
    #line 548 
    case 6: 
            #line 548 
    ;
    #line 550 
    emg_17_emg_param_1_34 = (struct ethtool_pauseparam *)ldv_xmalloc_unknown_size(0UL);
    #line 550 
    emg_17_emg_param_1_34 = emg_17_emg_param_1_34;
    #line 554 
    emg_wrapper_aq_ethtool_set_pauseparam(emg_17_container,emg_17_emg_param_1_34);
    #line 558 
    ldv_free((void *)emg_17_emg_param_1_34);
    #line 560 
    break;
    #line 562 
    case 7: 
            #line 562 
    ;
    #line 564 
    emg_wrapper_aq_set_msg_level(emg_17_container,emg_17_emg_param_1_33);
    #line 566 
    break;
    #line 568 
    case 8: 
            #line 568 
    ;
    #line 570 
    emg_17_emg_param_1_32 = (struct ethtool_link_ksettings *)ldv_xmalloc_unknown_size(0UL);
    #line 570 
    emg_17_emg_param_1_32 = emg_17_emg_param_1_32;
    #line 574 
    emg_wrapper_aq_ethtool_set_link_ksettings(emg_17_container,emg_17_emg_param_1_32);
    #line 578 
    ldv_free((void *)emg_17_emg_param_1_32);
    #line 580 
    break;
    #line 582 
    case 9: 
            #line 582 
    ;
    #line 584 
    emg_17_emg_param_1_31 = (struct ethtool_eee *)ldv_xmalloc_unknown_size(0UL);
    #line 584 
    emg_17_emg_param_1_31 = emg_17_emg_param_1_31;
    #line 588 
    emg_wrapper_aq_ethtool_set_eee(emg_17_container,emg_17_emg_param_1_31);
    #line 592 
    ldv_free((void *)emg_17_emg_param_1_31);
    #line 594 
    break;
    #line 596 
    case 10: 
             #line 596 
    ;
    #line 598 
    emg_17_emg_param_1_30 = (struct ethtool_coalesce *)ldv_xmalloc_unknown_size(0UL);
    #line 598 
    emg_17_emg_param_1_30 = emg_17_emg_param_1_30;
    #line 602 
    emg_wrapper_aq_ethtool_set_coalesce(emg_17_container,emg_17_emg_param_1_30);
    #line 606 
    ldv_free((void *)emg_17_emg_param_1_30);
    #line 608 
    break;
    #line 610 
    case 11: 
             #line 610 
    ;
    #line 612 
    emg_wrapper_aq_ethtool_nway_reset(emg_17_container);
    #line 614 
    break;
    #line 616 
    case 12: 
             #line 616 
    ;
    #line 618 
    emg_wrapper_aq_ndo_vlan_rx_kill_vid(emg_17_container,(unsigned short)((int)emg_17_emg_param_1_28),(unsigned short)((int)emg_17_emg_param_2_29));
    #line 620 
    break;
    #line 622 
    case 13: 
             #line 622 
    ;
    #line 624 
    emg_wrapper_aq_ndo_vlan_rx_add_vid(emg_17_container,(unsigned short)((int)emg_17_emg_param_1_26),(unsigned short)((int)emg_17_emg_param_2_27));
    #line 626 
    break;
    #line 628 
    case 14: 
             #line 628 
    ;
    #line 630 
    emg_17_emg_param_0_25 = (struct sk_buff *)ldv_xmalloc_unknown_size(0UL);
    #line 630 
    emg_17_emg_param_0_25 = emg_17_emg_param_0_25;
    #line 634 
    emg_wrapper_aq_ndev_start_xmit(emg_17_emg_param_0_25,emg_17_container);
    #line 638 
    ldv_free((void *)emg_17_emg_param_0_25);
    #line 640 
    break;
    #line 642 
    case 15: 
             #line 642 
    ;
    #line 644 
    emg_wrapper_aq_ndev_set_multicast_settings(emg_17_container);
    #line 646 
    break;
    #line 648 
    case 16: 
             #line 648 
    ;
    #line 650 
    emg_17_emg_param_1_24 = ldv_xmalloc_unknown_size(0UL);
    #line 650 
    emg_17_emg_param_1_24 = emg_17_emg_param_1_24;
    #line 654 
    emg_wrapper_aq_ndev_set_mac_address(emg_17_container,emg_17_emg_param_1_24);
    #line 658 
    ldv_free(emg_17_emg_param_1_24);
    #line 660 
    break;
    #line 662 
    case 17: 
             #line 662 
    ;
    #line 664 
    emg_wrapper_aq_ndev_set_features(emg_17_container,emg_17_emg_param_1_23);
    #line 666 
    break;
    #line 668 
    case 18: 
             #line 668 
    ;
    #line 670 
    emg_17_emg_param_1_21 = (struct ifreq *)ldv_xmalloc_unknown_size(0UL);
    #line 670 
    emg_17_emg_param_1_21 = emg_17_emg_param_1_21;
    #line 674 
    emg_wrapper_aq_ndev_ioctl(emg_17_container,emg_17_emg_param_1_21,emg_17_emg_param_2_22);
    #line 678 
    ldv_free((void *)emg_17_emg_param_1_21);
    #line 680 
    break;
    #line 682 
    case 19: 
             #line 682 
    ;
    #line 684 
    emg_wrapper_aq_ndev_change_mtu(emg_17_container,emg_17_emg_param_1_20);
    #line 686 
    break;
    #line 688 
    case 20: 
             #line 688 
    ;
    #line 690 
    emg_17_emg_param_1_19 = (struct ethtool_wolinfo *)ldv_xmalloc_unknown_size(0UL);
    #line 690 
    emg_17_emg_param_1_19 = emg_17_emg_param_1_19;
    #line 694 
    emg_wrapper_aq_ethtool_get_wol(emg_17_container,emg_17_emg_param_1_19);
    #line 698 
    ldv_free((void *)emg_17_emg_param_1_19);
    #line 700 
    break;
    #line 702 
    case 21: 
             #line 702 
    ;
    #line 704 
    emg_17_emg_param_1_18 = (struct ethtool_ts_info *)ldv_xmalloc_unknown_size(0UL);
    #line 704 
    emg_17_emg_param_1_18 = emg_17_emg_param_1_18;
    #line 708 
    emg_wrapper_aq_ethtool_get_ts_info(emg_17_container,emg_17_emg_param_1_18);
    #line 712 
    ldv_free((void *)emg_17_emg_param_1_18);
    #line 714 
    break;
    #line 716 
    case 22: 
             #line 716 
    ;
    #line 718 
    emg_17_emg_param_2_17 = (unsigned char *)ldv_xmalloc_unknown_size(0UL);
    #line 718 
    emg_17_emg_param_2_17 = emg_17_emg_param_2_17;
    #line 722 
    emg_wrapper_aq_ethtool_get_strings(emg_17_container,emg_17_emg_param_1_16,emg_17_emg_param_2_17);
    #line 726 
    ldv_free((void *)emg_17_emg_param_2_17);
    #line 728 
    break;
    #line 730 
    case 23: 
             #line 730 
    ;
    #line 732 
    emg_wrapper_aq_ethtool_get_sset_count(emg_17_container,emg_17_emg_param_1_15);
    #line 734 
    break;
    #line 736 
    case 24: 
             #line 736 
    ;
    #line 738 
    emg_17_emg_param_1_13 = (struct ethtool_rxnfc *)ldv_xmalloc_unknown_size(0UL);
    #line 738 
    emg_17_emg_param_1_13 = emg_17_emg_param_1_13;
    #line 739 
    emg_17_emg_param_2_14 = (unsigned int *)ldv_xmalloc_unknown_size(0UL);
    #line 739 
    emg_17_emg_param_2_14 = emg_17_emg_param_2_14;
    #line 743 
    emg_wrapper_aq_ethtool_get_rxnfc(emg_17_container,emg_17_emg_param_1_13,emg_17_emg_param_2_14);
    #line 747 
    ldv_free((void *)emg_17_emg_param_1_13);
    #line 748 
    ldv_free((void *)emg_17_emg_param_2_14);
    #line 750 
    break;
    #line 752 
    case 25: 
             #line 752 
    ;
    #line 754 
    emg_wrapper_aq_ethtool_get_rss_key_size(emg_17_container);
    #line 756 
    break;
    #line 758 
    case 26: 
             #line 758 
    ;
    #line 760 
    emg_wrapper_aq_ethtool_get_rss_indir_size(emg_17_container);
    #line 762 
    break;
    #line 764 
    case 27: 
             #line 764 
    ;
    #line 766 
    emg_17_emg_param_1_10 = (unsigned int *)ldv_xmalloc_unknown_size(0UL);
    #line 766 
    emg_17_emg_param_1_10 = emg_17_emg_param_1_10;
    #line 767 
    emg_17_emg_param_2_11 = (unsigned char *)ldv_xmalloc_unknown_size(0UL);
    #line 767 
    emg_17_emg_param_2_11 = emg_17_emg_param_2_11;
    #line 768 
    emg_17_emg_param_3_12 = (unsigned char *)ldv_xmalloc_unknown_size(0UL);
    #line 768 
    emg_17_emg_param_3_12 = emg_17_emg_param_3_12;
    #line 772 
    emg_wrapper_aq_ethtool_get_rss(emg_17_container,emg_17_emg_param_1_10,emg_17_emg_param_2_11,emg_17_emg_param_3_12);
    #line 776 
    ldv_free((void *)emg_17_emg_param_1_10);
    #line 777 
    ldv_free((void *)emg_17_emg_param_2_11);
    #line 778 
    ldv_free((void *)emg_17_emg_param_3_12);
    #line 780 
    break;
    #line 782 
    case 28: 
             #line 782 
    ;
    #line 784 
    emg_17_emg_param_1_9 = (struct ethtool_ringparam *)ldv_xmalloc_unknown_size(0UL);
    #line 784 
    emg_17_emg_param_1_9 = emg_17_emg_param_1_9;
    #line 788 
    emg_wrapper_aq_get_ringparam(emg_17_container,emg_17_emg_param_1_9);
    #line 792 
    ldv_free((void *)emg_17_emg_param_1_9);
    #line 794 
    break;
    #line 796 
    case 29: 
             #line 796 
    ;
    #line 798 
    emg_wrapper_aq_ethtool_get_regs_len(emg_17_container);
    #line 800 
    break;
    #line 802 
    case 30: 
             #line 802 
    ;
    #line 804 
    emg_17_emg_param_1_7 = (struct ethtool_regs *)ldv_xmalloc_unknown_size(0UL);
    #line 804 
    emg_17_emg_param_1_7 = emg_17_emg_param_1_7;
    #line 805 
    emg_17_emg_param_2_8 = ldv_xmalloc_unknown_size(0UL);
    #line 805 
    emg_17_emg_param_2_8 = emg_17_emg_param_2_8;
    #line 809 
    emg_wrapper_aq_ethtool_get_regs(emg_17_container,emg_17_emg_param_1_7,emg_17_emg_param_2_8);
    #line 813 
    ldv_free((void *)emg_17_emg_param_1_7);
    #line 814 
    ldv_free(emg_17_emg_param_2_8);
    #line 816 
    break;
    #line 818 
    case 31: 
             #line 818 
    ;
    #line 820 
    emg_wrapper_aq_ethtool_get_priv_flags(emg_17_container);
    #line 822 
    break;
    #line 824 
    case 32: 
             #line 824 
    ;
    #line 826 
    emg_17_emg_param_1_6 = (struct ethtool_pauseparam *)ldv_xmalloc_unknown_size(0UL);
    #line 826 
    emg_17_emg_param_1_6 = emg_17_emg_param_1_6;
    #line 830 
    emg_wrapper_aq_ethtool_get_pauseparam(emg_17_container,emg_17_emg_param_1_6);
    #line 834 
    ldv_free((void *)emg_17_emg_param_1_6);
    #line 836 
    break;
    #line 838 
    case 33: 
             #line 838 
    ;
    #line 840 
    emg_wrapper_aq_get_msg_level(emg_17_container);
    #line 842 
    break;
    #line 844 
    case 34: 
             #line 844 
    ;
    #line 846 
    emg_17_emg_param_1_5 = (struct ethtool_link_ksettings *)ldv_xmalloc_unknown_size(0UL);
    #line 846 
    emg_17_emg_param_1_5 = emg_17_emg_param_1_5;
    #line 850 
    emg_wrapper_aq_ethtool_get_link_ksettings(emg_17_container,emg_17_emg_param_1_5);
    #line 854 
    ldv_free((void *)emg_17_emg_param_1_5);
    #line 856 
    break;
    #line 858 
    case 35: 
             #line 858 
    ;
    #line 860 
    emg_wrapper_aq_ethtool_get_link(emg_17_container);
    #line 862 
    break;
    #line 864 
    case 36: 
             #line 864 
    ;
    #line 866 
    emg_17_emg_param_1_3 = (struct ethtool_stats *)ldv_xmalloc_unknown_size(0UL);
    #line 866 
    emg_17_emg_param_1_3 = emg_17_emg_param_1_3;
    #line 867 
    emg_17_emg_param_2_4 = (unsigned long long *)ldv_xmalloc_unknown_size(0UL);
    #line 867 
    emg_17_emg_param_2_4 = emg_17_emg_param_2_4;
    #line 871 
    emg_wrapper_aq_ethtool_stats(emg_17_container,emg_17_emg_param_1_3,emg_17_emg_param_2_4);
    #line 875 
    ldv_free((void *)emg_17_emg_param_1_3);
    #line 876 
    ldv_free((void *)emg_17_emg_param_2_4);
    #line 878 
    break;
    #line 880 
    case 37: 
             #line 880 
    ;
    #line 882 
    emg_17_emg_param_1_2 = (struct ethtool_eee *)ldv_xmalloc_unknown_size(0UL);
    #line 882 
    emg_17_emg_param_1_2 = emg_17_emg_param_1_2;
    #line 886 
    emg_wrapper_aq_ethtool_get_eee(emg_17_container,emg_17_emg_param_1_2);
    #line 890 
    ldv_free((void *)emg_17_emg_param_1_2);
    #line 892 
    break;
    #line 894 
    case 38: 
             #line 894 
    ;
    #line 896 
    emg_17_emg_param_1_1 = (struct ethtool_drvinfo *)ldv_xmalloc_unknown_size(0UL);
    #line 896 
    emg_17_emg_param_1_1 = emg_17_emg_param_1_1;
    #line 900 
    emg_wrapper_aq_ethtool_get_drvinfo(emg_17_container,emg_17_emg_param_1_1);
    #line 904 
    ldv_free((void *)emg_17_emg_param_1_1);
    #line 906 
    break;
    #line 908 
    case 39: 
             #line 908 
    ;
    #line 910 
    emg_17_emg_param_1_0 = (struct ethtool_coalesce *)ldv_xmalloc_unknown_size(0UL);
    #line 910 
    emg_17_emg_param_1_0 = emg_17_emg_param_1_0;
    #line 914 
    emg_wrapper_aq_ethtool_get_coalesce(emg_17_container,emg_17_emg_param_1_0);
    #line 918 
    ldv_free((void *)emg_17_emg_param_1_0);
    #line 921 
    if (emg_repeat_cnt_call_17 > 0) {
      #line 922 
      emg_repeat_cnt_call_17 --;
      #line 924 
      goto emg_call_17;
    }
    else 
         #line 926 
         __VERIFIER_assume(0);
    #line 930 
    break;
    #line 932 
    case 40: 
             #line 932 
    ;
    #line 936 
    break;
    #line 938 
    default: 
             #line 938 
    ;
    #line 938 
    __VERIFIER_assume(0);
  }
  #line 941 
  return (void *)0;
}

#line 946  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/emg/0/environment_model.c"
void *emg_pci_pci_scenario_aq_pci_ops(void *arg0)
{
  #line 949 
  int emg_18_choice;
  #line 950 
  struct pci_driver *emg_18_container;
  #line 951 
  struct pci_device_id *emg_18_device_id;
  #line 952 
  struct pci_dev *emg_18_resource_0;
  #line 953 
  struct pm_message emg_18_resource_1;
  #line 954 
  int emg_18_ret;
  #line 955 
  int emg_repeat_cnt_main_18_0 = 1;
  #line 956 
  int emg_repeat_cnt_call_18_0 = 1;
  #line 957 
  int emg_repeat_cnt_main_18_1 = 1;
  #line 958 
  int emg_repeat_cnt_call_18_1 = 1;
  #line 960 
  struct emg_struct_pci_scenario_aq_pci_ops_18 *data = (struct emg_struct_pci_scenario_aq_pci_ops_18 *)arg0;
  #line 964 
  emg_18_choice = 0;
  #line 965 
  emg_18_ret = ldv_undef_int();
  #line 966 
  emg_18_choice = 0;
  #line 967 
  emg_18_container = emg_alias_aq_pci_ops;
  #line 968 
  emg_18_ret = ldv_undef_int();
  #line 970 
  __VERIFIER_assume(data->arg0 == emg_alias_aq_pci_ops);
  #line 972 
  if (data != (struct emg_struct_pci_scenario_aq_pci_ops_18 *)0) {
    #line 973 
    emg_18_container = data->arg0;
    #line 974 
    ldv_free((void *)data);
  }
  #line 979 
  emg_18_resource_0 = (struct pci_dev *)ldv_xmalloc(3312UL);
  #line 980 
  emg_18_choice = __ldv_undef_int_range(0,17);
  #line 981 
  emg_18_device_id = emg_18_container->id_table + (unsigned long)emg_18_choice;
  #line 985 
  goto emg_main_18;
  #line 989 
  return (void *)0;
  #line 992 
  emg_call_18: 
               #line 992 
  ;
  #line 993 
  switch (ldv_undef_int()) {
    #line 994 
    case 0: 
            #line 994 
    ;
    #line 999 
    if (emg_repeat_cnt_call_18_1 > 0) {
      #line 1000 
      emg_repeat_cnt_call_18_1 --;
      #line 1002 
      goto emg_call_18;
    }
    else 
         #line 1004 
         __VERIFIER_assume(0);
    #line 1008 
    break;
    #line 1010 
    case 1: 
            #line 1010 
    ;
    #line 1012 
    if (emg_18_container->suspend != (int (*)(struct pci_dev *, pm_message_t ))0) 
      #line 1013 
      emg_18_ret = (*(emg_18_container->suspend))(emg_18_resource_0,emg_18_resource_1); else 
                                                                    #line 1015 
                                                                    emg_18_ret = ldv_undef_int();
    #line 1021 
    emg_18_ret = ldv_filter_err_code(emg_18_ret);
    #line 1025 
    if (emg_18_container->resume != (int (*)(struct pci_dev *))0) 
                                                                  #line 1026 
                                                                  (*(emg_18_container->resume))(emg_18_resource_0);
    #line 1030 
    if (emg_repeat_cnt_call_18_0 > 0) {
      #line 1031 
      emg_repeat_cnt_call_18_0 --;
      #line 1033 
      goto emg_call_18;
    }
    else 
         #line 1035 
         __VERIFIER_assume(0);
    #line 1039 
    break;
    #line 1041 
    case 2: 
            #line 1041 
    ;
    #line 1043 
    emg_wrapper_aq_pci_shutdown(emg_18_resource_0);
    #line 1047 
    emg_wrapper_aq_pci_remove(emg_18_resource_0);
    #line 1050 
    if (emg_repeat_cnt_main_18_1 > 0) {
      #line 1051 
      emg_repeat_cnt_main_18_1 --;
      #line 1053 
      goto emg_main_18;
    }
    else 
         #line 1055 
         __VERIFIER_assume(0);
    #line 1059 
    break;
    #line 1061 
    default: 
             #line 1061 
    ;
    #line 1061 
    __VERIFIER_assume(0);
  }
  #line 1064 
  return (void *)0;
  #line 1067 
  emg_main_18: 
               #line 1067 
  ;
  #line 1068 
  if (ldv_undef_int() != 0) {
    #line 1071 
    ldv_pre_probe();
    #line 1075 
    emg_18_ret = emg_wrapper_aq_pci_probe(emg_18_resource_0,emg_18_device_id);
    #line 1080 
    emg_18_ret = ldv_post_probe(emg_18_ret);
    #line 1083 
    if (ldv_undef_int() != 0) {
      #line 1085 
      __VERIFIER_assume(emg_18_ret == 0);
      #line 1089 
      goto emg_call_18;
    }
    else 
         #line 1094 
         __VERIFIER_assume(emg_18_ret != 0);
    #line 1098 
    if (emg_repeat_cnt_main_18_0 > 0) {
      #line 1099 
      emg_repeat_cnt_main_18_0 --;
      #line 1101 
      goto emg_main_18;
    }
    else 
         #line 1103 
         __VERIFIER_assume(0);
  }
  else 
       #line 1109 
       ldv_free((void *)emg_18_resource_0);
  #line 1117 
  return (void *)0;
}

#line 1122  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/emg/0/environment_model.c"
void *emg_pm_pm_ops_scenario_aq_pm_ops(void *arg0)
{
  #line 1125 
  struct device *emg_19_device;
  #line 1126 
  struct dev_pm_ops *emg_19_pm_ops;
  #line 1127 
  int emg_19_ret;
  #line 1128 
  int emg_repeat_cnt_sus_19 = 1;
  #line 1129 
  int emg_repeat_cnt_fnoirq_19 = 1;
  #line 1130 
  int emg_repeat_cnt_restnoirq_19 = 1;
  #line 1131 
  int emg_repeat_cnt_th_19 = 1;
  #line 1132 
  int emg_repeat_cnt_slate_19 = 1;
  #line 1133 
  int emg_repeat_cnt_thlate_19 = 1;
  #line 1134 
  int emg_repeat_cnt_flate_19 = 1;
  #line 1135 
  int emg_repeat_cnt_resnoirq_19 = 1;
  #line 1136 
  int emg_repeat_cnt_res_19 = 1;
  #line 1137 
  int emg_repeat_cnt_rest_19 = 1;
  #line 1138 
  int emg_repeat_cnt_poff_19 = 1;
  #line 1139 
  int emg_repeat_cnt_tnoirq_19 = 1;
  #line 1140 
  int emg_repeat_cnt_run_resume_19 = 1;
  #line 1141 
  int emg_repeat_cnt_reslate_19 = 1;
  #line 1142 
  int emg_repeat_cnt_plate_19 = 1;
  #line 1143 
  int emg_repeat_cnt_reste_19 = 1;
  #line 1144 
  int emg_repeat_cnt_pno_irq_19 = 1;
  #line 1145 
  int emg_repeat_cnt_no_irq_19 = 1;
  #line 1146 
  int emg_repeat_cnt_fr_19 = 1;
  #line 1149 
  emg_19_ret = ldv_undef_int();
  #line 1150 
  emg_19_pm_ops = emg_alias_aq_pm_ops;
  #line 1151 
  emg_19_ret = ldv_undef_int();
  #line 1157 
  goto emg_do_19;
  #line 1161 
  return (void *)0;
  #line 1164 
  emg_compl_19: 
                #line 1164 
  ;
  #line 1166 
  if (emg_19_pm_ops->complete != (void (*)(struct device *))0) 
                                                               #line 1167 
                                                               (*(emg_19_pm_ops->complete))(emg_19_device);
  #line 1175 
  return (void *)0;
  #line 1178 
  emg_do_19: 
             #line 1178 
  ;
  #line 1179 
  switch (ldv_undef_int()) {
    #line 1180 
    case 0: 
            #line 1180 
    ;
    #line 1182 
    __VERIFIER_assume((emg_runtime_enabled == 1 && emg_runtime_lowpower == 1) != 0);
    #line 1186 
    goto emg_runt_19;
    #line 1191 
    case 1: 
            #line 1191 
    ;
    #line 1193 
    goto emg_normal_19;
    #line 1198 
    case 2: 
            #line 1198 
    ;
    #line 1202 
    break;
    #line 1204 
    default: 
             #line 1204 
    ;
    #line 1204 
    __VERIFIER_assume(0);
  }
  #line 1207 
  return (void *)0;
  #line 1210 
  emg_flate_19: 
                #line 1210 
  ;
  #line 1212 
  if (emg_19_pm_ops->freeze_late != (int (*)(struct device *))0) 
                                                                 #line 1213 
                                                                 emg_19_ret = (*(emg_19_pm_ops->freeze_late))(emg_19_device); else 
                                                                    #line 1215 
                                                                    emg_19_ret = ldv_undef_int();
  #line 1221 
  emg_19_ret = ldv_post_probe(emg_19_ret);
  #line 1224 
  if (ldv_undef_int() != 0) {
    #line 1226 
    __VERIFIER_assume(emg_19_ret == 0);
    #line 1230 
    goto emg_thlate_19;
  }
  else 
       #line 1235 
       __VERIFIER_assume(emg_19_ret != 0);
  #line 1239 
  if (emg_repeat_cnt_flate_19 > 0) {
    #line 1240 
    emg_repeat_cnt_flate_19 --;
    #line 1242 
    goto emg_flate_19;
  }
  else 
       #line 1244 
       __VERIFIER_assume(0);
  #line 1249 
  return (void *)0;
  #line 1252 
  emg_fnoirq_19: 
                 #line 1252 
  ;
  #line 1254 
  if (emg_19_pm_ops->freeze_noirq != (int (*)(struct device *))0) 
                                                                  #line 1255 
                                                                  emg_19_ret = (*(emg_19_pm_ops->freeze_noirq))(emg_19_device); else 
                                                                    #line 1257 
                                                                    emg_19_ret = ldv_undef_int();
  #line 1263 
  emg_19_ret = ldv_post_probe(emg_19_ret);
  #line 1266 
  if (ldv_undef_int() != 0) {
    #line 1268 
    __VERIFIER_assume(emg_19_ret == 0);
    #line 1272 
    goto emg_tnoirq_19;
  }
  else 
       #line 1277 
       __VERIFIER_assume(emg_19_ret != 0);
  #line 1281 
  if (emg_repeat_cnt_fnoirq_19 > 0) {
    #line 1282 
    emg_repeat_cnt_fnoirq_19 --;
    #line 1284 
    goto emg_fnoirq_19;
  }
  else 
       #line 1286 
       __VERIFIER_assume(0);
  #line 1291 
  return (void *)0;
  #line 1294 
  emg_fr_19: 
             #line 1294 
  ;
  #line 1296 
  emg_19_ret = emg_wrapper_aq_pm_freeze(emg_19_device);
  #line 1301 
  emg_19_ret = ldv_post_probe(emg_19_ret);
  #line 1304 
  if (ldv_undef_int() != 0) {
    #line 1306 
    __VERIFIER_assume(emg_19_ret == 0);
    #line 1309 
    if (ldv_undef_int() != 0) 
                              #line 1311 
                              goto emg_fnoirq_19; else 
                                                       #line 1316 
                                                       goto emg_flate_19;
  }
  else {
    #line 1322 
    __VERIFIER_assume(emg_19_ret != 0);
    #line 1325 
    if (emg_repeat_cnt_fr_19 > 0) {
      #line 1326 
      emg_repeat_cnt_fr_19 --;
      #line 1328 
      goto emg_fr_19;
    }
    else 
         #line 1330 
         __VERIFIER_assume(0);
  }
  #line 1336 
  return (void *)0;
  #line 1339 
  emg_no_irq_19: 
                 #line 1339 
  ;
  #line 1341 
  if (emg_19_pm_ops->suspend_noirq != (int (*)(struct device *))0) 
                                                                   #line 1342 
                                                                   emg_19_ret = (*(emg_19_pm_ops->suspend_noirq))(emg_19_device); else 
                                                                    #line 1344 
                                                                    emg_19_ret = ldv_undef_int();
  #line 1350 
  emg_19_ret = ldv_post_probe(emg_19_ret);
  #line 1353 
  if (ldv_undef_int() != 0) {
    #line 1355 
    __VERIFIER_assume(emg_19_ret == 0);
    #line 1359 
    goto emg_resnoirq_19;
  }
  else 
       #line 1364 
       __VERIFIER_assume(emg_19_ret != 0);
  #line 1368 
  if (emg_repeat_cnt_no_irq_19 > 0) {
    #line 1369 
    emg_repeat_cnt_no_irq_19 --;
    #line 1371 
    goto emg_no_irq_19;
  }
  else 
       #line 1373 
       __VERIFIER_assume(0);
  #line 1378 
  return (void *)0;
  #line 1381 
  emg_normal_19: 
                 #line 1381 
  ;
  #line 1383 
  if (emg_19_pm_ops->prepare != (int (*)(struct device *))0) 
                                                             #line 1384 
                                                             emg_19_ret = (*(emg_19_pm_ops->prepare))(emg_19_device); else 
                                                                    #line 1386 
                                                                    emg_19_ret = ldv_undef_int();
  #line 1392 
  emg_19_ret = ldv_post_probe(emg_19_ret);
  #line 1395 
  if (ldv_undef_int() != 0) {
    #line 1397 
    __VERIFIER_assume(emg_19_ret == 0);
    #line 1400 
    switch (ldv_undef_int()) {
      #line 1401 
      case 0: 
              #line 1401 
      ;
      #line 1403 
      goto emg_sus_19;
      #line 1408 
      case 1: 
              #line 1408 
      ;
      #line 1410 
      goto emg_fr_19;
      #line 1415 
      case 2: 
              #line 1415 
      ;
      #line 1417 
      goto emg_poff_19;
      #line 1422 
      default: 
               #line 1422 
      ;
      #line 1422 
      __VERIFIER_assume(0);
    }
  }
  else 
       #line 1426 
       __VERIFIER_assume(emg_19_ret != 0);
  #line 1434 
  return (void *)0;
  #line 1437 
  emg_plate_19: 
                #line 1437 
  ;
  #line 1439 
  if (emg_19_pm_ops->poweroff_late != (int (*)(struct device *))0) 
                                                                   #line 1440 
                                                                   emg_19_ret = (*(emg_19_pm_ops->poweroff_late))(emg_19_device); else 
                                                                    #line 1442 
                                                                    emg_19_ret = ldv_undef_int();
  #line 1448 
  emg_19_ret = ldv_post_probe(emg_19_ret);
  #line 1451 
  if (ldv_undef_int() != 0) {
    #line 1453 
    __VERIFIER_assume(emg_19_ret == 0);
    #line 1457 
    goto emg_reste_19;
  }
  else 
       #line 1462 
       __VERIFIER_assume(emg_19_ret != 0);
  #line 1466 
  if (emg_repeat_cnt_plate_19 > 0) {
    #line 1467 
    emg_repeat_cnt_plate_19 --;
    #line 1469 
    goto emg_plate_19;
  }
  else 
       #line 1471 
       __VERIFIER_assume(0);
  #line 1476 
  return (void *)0;
  #line 1479 
  emg_pno_irq_19: 
                  #line 1479 
  ;
  #line 1481 
  if (emg_19_pm_ops->poweroff_noirq != (int (*)(struct device *))0) 
                                                                    #line 1482 
                                                                    emg_19_ret = (*(emg_19_pm_ops->poweroff_noirq))(emg_19_device); else 
                                                                    #line 1484 
                                                                    emg_19_ret = ldv_undef_int();
  #line 1490 
  emg_19_ret = ldv_post_probe(emg_19_ret);
  #line 1493 
  if (ldv_undef_int() != 0) {
    #line 1495 
    __VERIFIER_assume(emg_19_ret == 0);
    #line 1499 
    goto emg_restnoirq_19;
  }
  else 
       #line 1504 
       __VERIFIER_assume(emg_19_ret != 0);
  #line 1508 
  if (emg_repeat_cnt_pno_irq_19 > 0) {
    #line 1509 
    emg_repeat_cnt_pno_irq_19 --;
    #line 1511 
    goto emg_pno_irq_19;
  }
  else 
       #line 1513 
       __VERIFIER_assume(0);
  #line 1518 
  return (void *)0;
  #line 1521 
  emg_poff_19: 
               #line 1521 
  ;
  #line 1523 
  emg_19_ret = emg_wrapper_aq_pm_suspend_poweroff(emg_19_device);
  #line 1528 
  emg_19_ret = ldv_post_probe(emg_19_ret);
  #line 1531 
  if (ldv_undef_int() != 0) {
    #line 1533 
    __VERIFIER_assume(emg_19_ret == 0);
    #line 1536 
    if (ldv_undef_int() != 0) 
                              #line 1538 
                              goto emg_pno_irq_19; else 
                                                        #line 1543 
                                                        goto emg_plate_19;
  }
  else {
    #line 1549 
    __VERIFIER_assume(emg_19_ret != 0);
    #line 1552 
    if (emg_repeat_cnt_poff_19 > 0) {
      #line 1553 
      emg_repeat_cnt_poff_19 --;
      #line 1555 
      goto emg_poff_19;
    }
    else 
         #line 1557 
         __VERIFIER_assume(0);
  }
  #line 1563 
  return (void *)0;
  #line 1566 
  emg_res_19: 
              #line 1566 
  ;
  #line 1568 
  emg_19_ret = emg_wrapper_aq_pm_resume_restore(emg_19_device);
  #line 1573 
  emg_19_ret = ldv_post_probe(emg_19_ret);
  #line 1576 
  if (ldv_undef_int() != 0) {
    #line 1578 
    __VERIFIER_assume(emg_19_ret == 0);
    #line 1582 
    goto emg_compl_19;
  }
  else {
    #line 1587 
    __VERIFIER_assume(emg_19_ret != 0);
    #line 1590 
    if (emg_repeat_cnt_res_19 > 0) {
      #line 1591 
      emg_repeat_cnt_res_19 --;
      #line 1593 
      goto emg_res_19;
    }
    else 
         #line 1595 
         __VERIFIER_assume(0);
  }
  #line 1601 
  return (void *)0;
  #line 1604 
  emg_reslate_19: 
                  #line 1604 
  ;
  #line 1606 
  if (emg_19_pm_ops->resume_early != (int (*)(struct device *))0) 
                                                                  #line 1607 
                                                                  emg_19_ret = (*(emg_19_pm_ops->resume_early))(emg_19_device); else 
                                                                    #line 1609 
                                                                    emg_19_ret = ldv_undef_int();
  #line 1615 
  emg_19_ret = ldv_post_probe(emg_19_ret);
  #line 1618 
  if (ldv_undef_int() != 0) {
    #line 1620 
    __VERIFIER_assume(emg_19_ret == 0);
    #line 1624 
    goto emg_res_19;
  }
  else 
       #line 1629 
       __VERIFIER_assume(emg_19_ret != 0);
  #line 1633 
  if (emg_repeat_cnt_reslate_19 > 0) {
    #line 1634 
    emg_repeat_cnt_reslate_19 --;
    #line 1636 
    goto emg_reslate_19;
  }
  else 
       #line 1638 
       __VERIFIER_assume(0);
  #line 1643 
  return (void *)0;
  #line 1646 
  emg_resnoirq_19: 
                   #line 1646 
  ;
  #line 1648 
  if (emg_19_pm_ops->resume_noirq != (int (*)(struct device *))0) 
                                                                  #line 1649 
                                                                  emg_19_ret = (*(emg_19_pm_ops->resume_noirq))(emg_19_device); else 
                                                                    #line 1651 
                                                                    emg_19_ret = ldv_undef_int();
  #line 1657 
  emg_19_ret = ldv_post_probe(emg_19_ret);
  #line 1660 
  if (ldv_undef_int() != 0) {
    #line 1662 
    __VERIFIER_assume(emg_19_ret == 0);
    #line 1666 
    goto emg_res_19;
  }
  else 
       #line 1671 
       __VERIFIER_assume(emg_19_ret != 0);
  #line 1675 
  if (emg_repeat_cnt_resnoirq_19 > 0) {
    #line 1676 
    emg_repeat_cnt_resnoirq_19 --;
    #line 1678 
    goto emg_resnoirq_19;
  }
  else 
       #line 1680 
       __VERIFIER_assume(0);
  #line 1685 
  return (void *)0;
  #line 1688 
  emg_rest_19: 
               #line 1688 
  ;
  #line 1690 
  emg_19_ret = emg_wrapper_aq_pm_resume_restore(emg_19_device);
  #line 1695 
  emg_19_ret = ldv_post_probe(emg_19_ret);
  #line 1698 
  if (ldv_undef_int() != 0) {
    #line 1700 
    __VERIFIER_assume(emg_19_ret == 0);
    #line 1704 
    goto emg_compl_19;
  }
  else {
    #line 1709 
    __VERIFIER_assume(emg_19_ret != 0);
    #line 1712 
    if (emg_repeat_cnt_rest_19 > 0) {
      #line 1713 
      emg_repeat_cnt_rest_19 --;
      #line 1715 
      goto emg_rest_19;
    }
    else 
         #line 1717 
         __VERIFIER_assume(0);
  }
  #line 1723 
  return (void *)0;
  #line 1726 
  emg_reste_19: 
                #line 1726 
  ;
  #line 1728 
  if (emg_19_pm_ops->restore_early != (int (*)(struct device *))0) 
                                                                   #line 1729 
                                                                   emg_19_ret = (*(emg_19_pm_ops->restore_early))(emg_19_device); else 
                                                                    #line 1731 
                                                                    emg_19_ret = ldv_undef_int();
  #line 1737 
  emg_19_ret = ldv_post_probe(emg_19_ret);
  #line 1740 
  if (ldv_undef_int() != 0) {
    #line 1742 
    __VERIFIER_assume(emg_19_ret == 0);
    #line 1746 
    goto emg_rest_19;
  }
  else 
       #line 1751 
       __VERIFIER_assume(emg_19_ret != 0);
  #line 1755 
  if (emg_repeat_cnt_reste_19 > 0) {
    #line 1756 
    emg_repeat_cnt_reste_19 --;
    #line 1758 
    goto emg_reste_19;
  }
  else 
       #line 1760 
       __VERIFIER_assume(0);
  #line 1765 
  return (void *)0;
  #line 1768 
  emg_restnoirq_19: 
                    #line 1768 
  ;
  #line 1770 
  if (emg_19_pm_ops->restore_noirq != (int (*)(struct device *))0) 
                                                                   #line 1771 
                                                                   emg_19_ret = (*(emg_19_pm_ops->restore_noirq))(emg_19_device); else 
                                                                    #line 1773 
                                                                    emg_19_ret = ldv_undef_int();
  #line 1779 
  emg_19_ret = ldv_post_probe(emg_19_ret);
  #line 1782 
  if (ldv_undef_int() != 0) {
    #line 1784 
    __VERIFIER_assume(emg_19_ret == 0);
    #line 1788 
    goto emg_rest_19;
  }
  else 
       #line 1793 
       __VERIFIER_assume(emg_19_ret != 0);
  #line 1797 
  if (emg_repeat_cnt_restnoirq_19 > 0) {
    #line 1798 
    emg_repeat_cnt_restnoirq_19 --;
    #line 1800 
    goto emg_restnoirq_19;
  }
  else 
       #line 1802 
       __VERIFIER_assume(0);
  #line 1807 
  return (void *)0;
  #line 1810 
  emg_run_resume_19: 
                     #line 1810 
  ;
  #line 1812 
  if (emg_19_pm_ops->runtime_resume != (int (*)(struct device *))0) 
                                                                    #line 1813 
                                                                    emg_19_ret = (*(emg_19_pm_ops->runtime_resume))(emg_19_device); else 
                                                                    #line 1815 
                                                                    emg_19_ret = ldv_undef_int();
  #line 1821 
  emg_19_ret = ldv_post_probe(emg_19_ret);
  #line 1822 
  if (emg_19_ret != 0) 
                       #line 1823 
                       emg_runtime_lowpower = 0;
  #line 1826 
  if (ldv_undef_int() != 0) 
                            #line 1828 
                            __VERIFIER_assume(emg_19_ret == 0);
  else {
    #line 1832 
    __VERIFIER_assume(emg_19_ret != 0);
    #line 1835 
    if (emg_repeat_cnt_run_resume_19 > 0) {
      #line 1836 
      emg_repeat_cnt_run_resume_19 --;
      #line 1838 
      goto emg_run_resume_19;
    }
    else 
         #line 1840 
         __VERIFIER_assume(0);
  }
  #line 1850 
  return (void *)0;
  #line 1853 
  emg_runt_19: 
               #line 1853 
  ;
  #line 1854 
  if (ldv_undef_int() != 0) {
    #line 1856 
    if (emg_19_pm_ops->runtime_idle != (int (*)(struct device *))0) 
                                                                    #line 1857 
                                                                    emg_19_ret = (*(emg_19_pm_ops->runtime_idle))(emg_19_device); else 
                                                                    #line 1859 
                                                                    emg_19_ret = ldv_undef_int();
    #line 1865 
    emg_19_ret = ldv_post_probe(emg_19_ret);
  }
  else {
    #line 1869 
    if (emg_19_pm_ops->runtime_suspend != (int (*)(struct device *))0) 
      #line 1870 
      emg_19_ret = (*(emg_19_pm_ops->runtime_suspend))(emg_19_device); else 
                                                                    #line 1872 
                                                                    emg_19_ret = ldv_undef_int();
    #line 1878 
    emg_19_ret = ldv_post_probe(emg_19_ret);
    #line 1879 
    if (emg_19_ret != 0) 
                         #line 1880 
                         emg_runtime_lowpower = 1;
    #line 1883 
    if (ldv_undef_int() != 0) {
      #line 1885 
      __VERIFIER_assume(emg_19_ret == 0);
      #line 1889 
      goto emg_run_resume_19;
    }
    else 
         #line 1894 
         __VERIFIER_assume(emg_19_ret != 0);
  }
  #line 1903 
  return (void *)0;
  #line 1906 
  emg_slate_19: 
                #line 1906 
  ;
  #line 1908 
  if (emg_19_pm_ops->suspend_late != (int (*)(struct device *))0) 
                                                                  #line 1909 
                                                                  emg_19_ret = (*(emg_19_pm_ops->suspend_late))(emg_19_device); else 
                                                                    #line 1911 
                                                                    emg_19_ret = ldv_undef_int();
  #line 1917 
  emg_19_ret = ldv_post_probe(emg_19_ret);
  #line 1920 
  if (ldv_undef_int() != 0) {
    #line 1922 
    __VERIFIER_assume(emg_19_ret == 0);
    #line 1926 
    goto emg_reslate_19;
  }
  else 
       #line 1931 
       __VERIFIER_assume(emg_19_ret != 0);
  #line 1935 
  if (emg_repeat_cnt_slate_19 > 0) {
    #line 1936 
    emg_repeat_cnt_slate_19 --;
    #line 1938 
    goto emg_slate_19;
  }
  else 
       #line 1940 
       __VERIFIER_assume(0);
  #line 1945 
  return (void *)0;
  #line 1948 
  emg_sus_19: 
              #line 1948 
  ;
  #line 1950 
  emg_19_ret = emg_wrapper_aq_pm_suspend_poweroff(emg_19_device);
  #line 1955 
  emg_19_ret = ldv_post_probe(emg_19_ret);
  #line 1958 
  if (ldv_undef_int() != 0) {
    #line 1960 
    __VERIFIER_assume(emg_19_ret == 0);
    #line 1963 
    if (ldv_undef_int() != 0) 
                              #line 1965 
                              goto emg_no_irq_19; else 
                                                       #line 1970 
                                                       goto emg_slate_19;
  }
  else {
    #line 1976 
    __VERIFIER_assume(emg_19_ret != 0);
    #line 1979 
    if (emg_repeat_cnt_sus_19 > 0) {
      #line 1980 
      emg_repeat_cnt_sus_19 --;
      #line 1982 
      goto emg_sus_19;
    }
    else 
         #line 1984 
         __VERIFIER_assume(0);
  }
  #line 1990 
  return (void *)0;
  #line 1993 
  emg_th_19: 
             #line 1993 
  ;
  #line 1995 
  emg_19_ret = emg_wrapper_aq_pm_thaw(emg_19_device);
  #line 2000 
  emg_19_ret = ldv_post_probe(emg_19_ret);
  #line 2003 
  if (ldv_undef_int() != 0) {
    #line 2005 
    __VERIFIER_assume(emg_19_ret == 0);
    #line 2009 
    goto emg_compl_19;
  }
  else {
    #line 2014 
    __VERIFIER_assume(emg_19_ret != 0);
    #line 2017 
    if (emg_repeat_cnt_th_19 > 0) {
      #line 2018 
      emg_repeat_cnt_th_19 --;
      #line 2020 
      goto emg_th_19;
    }
    else 
         #line 2022 
         __VERIFIER_assume(0);
  }
  #line 2028 
  return (void *)0;
  #line 2031 
  emg_thlate_19: 
                 #line 2031 
  ;
  #line 2033 
  if (emg_19_pm_ops->thaw_early != (int (*)(struct device *))0) 
                                                                #line 2034 
                                                                emg_19_ret = (*(emg_19_pm_ops->thaw_early))(emg_19_device); else 
                                                                    #line 2036 
                                                                    emg_19_ret = ldv_undef_int();
  #line 2042 
  emg_19_ret = ldv_post_probe(emg_19_ret);
  #line 2045 
  if (ldv_undef_int() != 0) {
    #line 2047 
    __VERIFIER_assume(emg_19_ret == 0);
    #line 2051 
    goto emg_th_19;
  }
  else 
       #line 2056 
       __VERIFIER_assume(emg_19_ret != 0);
  #line 2060 
  if (emg_repeat_cnt_thlate_19 > 0) {
    #line 2061 
    emg_repeat_cnt_thlate_19 --;
    #line 2063 
    goto emg_thlate_19;
  }
  else 
       #line 2065 
       __VERIFIER_assume(0);
  #line 2070 
  return (void *)0;
  #line 2073 
  emg_tnoirq_19: 
                 #line 2073 
  ;
  #line 2075 
  if (emg_19_pm_ops->thaw_noirq != (int (*)(struct device *))0) 
                                                                #line 2076 
                                                                emg_19_ret = (*(emg_19_pm_ops->thaw_noirq))(emg_19_device); else 
                                                                    #line 2078 
                                                                    emg_19_ret = ldv_undef_int();
  #line 2084 
  emg_19_ret = ldv_post_probe(emg_19_ret);
  #line 2087 
  if (ldv_undef_int() != 0) {
    #line 2089 
    __VERIFIER_assume(emg_19_ret == 0);
    #line 2093 
    goto emg_th_19;
  }
  else 
       #line 2098 
       __VERIFIER_assume(emg_19_ret != 0);
  #line 2102 
  if (emg_repeat_cnt_tnoirq_19 > 0) {
    #line 2103 
    emg_repeat_cnt_tnoirq_19 --;
    #line 2105 
    goto emg_tnoirq_19;
  }
  else 
       #line 2107 
       __VERIFIER_assume(0);
  #line 2112 
  return (void *)0;
}

#line 2117  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/emg/0/environment_model.c"
void *emg_timer_timer_scenario_5(void *arg0)
{
  #line 2120 
  struct timer_list *emg_20_container;
  #line 2121 
  unsigned long emg_20_emg_param_0_0;
  #line 2123 
  struct emg_struct_timer_scenario_5_20 *data = (struct emg_struct_timer_scenario_5_20 *)arg0;
  #line 2128 
  if (data != (struct emg_struct_timer_scenario_5_20 *)0) {
    #line 2129 
    emg_20_container = data->arg0;
    #line 2130 
    ldv_free((void *)data);
  }
  #line 2136 
  ldv_switch_to_interrupt_context();
  #line 2140 
  if (emg_20_container->function != (void (*)(struct timer_list *))0) 
    #line 2141 
    (*(emg_20_container->function))((struct timer_list *)emg_20_emg_param_0_0);
  #line 2147 
  ldv_switch_to_process_context();
  #line 2154 
  return (void *)0;
}

#line 2159  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/emg/0/environment_model.c"
int emg___pci_register_driver(struct pci_driver *arg0, struct module *arg1, char *arg2)
{
  #line 2162 
  struct pci_driver *emg_2_pci_driver;
  #line 2164 
  emg_2_pci_driver = emg_alias_aq_pci_ops;
  #line 2165 
  if (ldv_undef_int() != 0) {
    #line 2167 
    emg_2_pci_driver = arg0;
    #line 2171 
    emg_dispatch_register_2(emg_2_pci_driver);
    #line 2175 
    return 0;
  }
  else {
    #line 2179 
    return ldv_undef_int_negative();
  }
}

#line 2187  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/emg/0/environment_model.c"
struct net_device *emg_alloc_etherdev_mqs(int arg0, unsigned int arg1, unsigned int arg2)
{
  #line 2190 
  struct net_device *emg_3_netdev;
  #line 2192 
  if (ldv_undef_int() != 0) {
    #line 2194 
    emg_3_netdev = (struct net_device *)ldv_xmalloc(3328UL);
    #line 2198 
    return emg_3_netdev;
  }
  else 
       #line 2202 
       return (struct net_device *)0;
}

#line 2210  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/emg/0/environment_model.c"
int emg_del_timer_sync(struct timer_list *arg0)
{
  #line 2213 
  struct timer_list *emg_4_timer_list;
  #line 2216 
  emg_4_timer_list = arg0;
  #line 2220 
  emg_dispatch_instance_deregister_4(emg_4_timer_list);
  #line 2221 
  ;
  #line 2221 
  return 0;
}

#line 2227  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/emg/0/environment_model.c"
void *emg_free_irq(unsigned int arg0, void *arg1)
{
  #line 2230 
  int emg_5_line;
  #line 2233 
  emg_5_line = (int)arg0;
  #line 2237 
  emg_dispatch_irq_deregister_5(emg_5_line);
  #line 2238 
  ;
  #line 2238 
  return (void *)0;
}

#line 2244  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/emg/0/environment_model.c"
void emg_free_netdev(struct net_device *arg0)
{
  #line 2247 
  struct net_device *emg_6_netdev;
  #line 2250 
  emg_6_netdev = arg0;
  #line 2251 
  ldv_free((void *)emg_6_netdev);
  #line 2254 
  return;
}

#line 2259  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/emg/0/environment_model.c"
int emg_mod_timer(struct timer_list *arg0, unsigned long arg1)
{
  #line 2262 
  struct timer_list *emg_7_timer_list;
  #line 2264 
  if (ldv_undef_int() != 0) {
    #line 2266 
    emg_7_timer_list = arg0;
    #line 2270 
    emg_dispatch_instance_register_7(emg_7_timer_list);
    #line 2274 
    return 1;
  }
  else 
       #line 2278 
       return 0;
}

#line 2286  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/emg/0/environment_model.c"
void emg_pci_unregister_driver(struct pci_driver *arg0)
{
  #line 2289 
  struct pci_driver *emg_8_pci_driver;
  #line 2291 
  emg_8_pci_driver = emg_alias_aq_pci_ops;
  #line 2293 
  emg_8_pci_driver = arg0;
  #line 2297 
  emg_dispatch_deregister_8(emg_8_pci_driver);
  #line 2300 
  return;
}

#line 2305  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/emg/0/environment_model.c"
_Bool emg_queue_work(struct workqueue_struct *arg0, struct work_struct *arg1)
{
  #line 2308 
  struct work_struct *emg_9_work_struct;
  #line 2310 
  if (ldv_undef_int() != 0) {
    #line 2312 
    emg_9_work_struct = arg1;
    #line 2316 
    if (emg_9_work_struct->func != (void (*)(struct work_struct *))0) 
      #line 2317 
      (*(emg_9_work_struct->func))(emg_9_work_struct);
    #line 2322 
    return (_Bool)1;
  }
  else 
       #line 2326 
       return (_Bool)0;
}

#line 2334  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/emg/0/environment_model.c"
int emg_register_netdev(struct net_device *arg0)
{
  #line 2337 
  struct net_device *emg_10_netdev;
  #line 2338 
  int emg_10_ret;
  #line 2341 
  emg_10_ret = ldv_undef_int();
  #line 2342 
  emg_10_ret = ldv_undef_int();
  #line 2343 
  if (ldv_undef_int() != 0) {
    #line 2345 
    emg_10_netdev = arg0;
    #line 2349 
    emg_10_ret = emg_wrapper_aq_ndev_open(emg_10_netdev);
    #line 2352 
    if (ldv_undef_int() != 0) {
      #line 2354 
      __VERIFIER_assume(emg_10_ret == 0);
      #line 2358 
      emg_dispatch_register_10(emg_10_netdev);
      #line 2362 
      return 0;
    }
    else {
      #line 2366 
      __VERIFIER_assume(emg_10_ret != 0);
      #line 2367 
      ldv_failed_register_netdev();
      #line 2368 
      return ldv_undef_int_negative();
    }
  }
  else {
    #line 2373 
    ldv_failed_register_netdev();
    #line 2374 
    return ldv_undef_int_negative();
  }
}

#line 2382  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/emg/0/environment_model.c"
int emg_request_irq(unsigned int arg0, enum irqreturn (*arg1)(int , void *), unsigned long arg2, char *arg3, void *arg4)
{
  #line 2385 
  enum irqreturn (*emg_11_callback)(int , void *);
  #line 2386 
  void *emg_11_data;
  #line 2387 
  int emg_11_line;
  #line 2388 
  enum irqreturn (*emg_11_thread)(int , void *);
  #line 2390 
  emg_11_callback = & emg_wrapper_aq_ptp_isr;
  #line 2391 
  emg_11_thread = & emg_wrapper_aq_linkstate_threaded_isr;
  #line 2392 
  if (ldv_undef_int() != 0) {
    #line 2394 
    emg_11_line = (int)arg0;
    #line 2395 
    emg_11_callback = arg1;
    #line 2396 
    emg_11_thread = (enum irqreturn (*)(int , void *))0;
    #line 2397 
    emg_11_data = arg4;
    #line 2401 
    emg_dispatch_irq_register_11(emg_11_line,emg_11_callback,emg_11_thread,emg_11_data);
    #line 2405 
    return 0;
  }
  else {
    #line 2409 
    return ldv_undef_int_negative();
  }
}

#line 2417  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/emg/0/environment_model.c"
int emg_request_threaded_irq(unsigned int arg0, enum irqreturn (*arg1)(int , void *), enum irqreturn (*arg2)(int , void *), unsigned long arg3, char *arg4, void *arg5)
{
  #line 2420 
  enum irqreturn (*emg_12_callback)(int , void *);
  #line 2421 
  void *emg_12_data;
  #line 2422 
  int emg_12_line;
  #line 2423 
  enum irqreturn (*emg_12_thread)(int , void *);
  #line 2425 
  emg_12_callback = & emg_wrapper_aq_ptp_isr;
  #line 2426 
  emg_12_thread = & emg_wrapper_aq_linkstate_threaded_isr;
  #line 2427 
  if (ldv_undef_int() != 0) {
    #line 2429 
    emg_12_line = (int)arg0;
    #line 2430 
    emg_12_callback = arg1;
    #line 2431 
    emg_12_thread = arg2;
    #line 2432 
    emg_12_data = arg5;
    #line 2436 
    emg_dispatch_irq_register_12(emg_12_line,emg_12_callback,emg_12_thread,emg_12_data);
    #line 2440 
    return 0;
  }
  else {
    #line 2444 
    return ldv_undef_int_negative();
  }
}

#line 2452  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/emg/0/environment_model.c"
_Bool emg_schedule_delayed_work(struct delayed_work *arg0, unsigned long arg1)
{
  #line 2455 
  struct delayed_work *emg_13_delayed_work;
  #line 2456 
  struct work_struct *emg_13_emg_param_0_0;
  #line 2458 
  if (ldv_undef_int() != 0) {
    #line 2460 
    emg_13_delayed_work = arg0;
    #line 2464 
    emg_13_emg_param_0_0 = (struct work_struct *)ldv_xmalloc_unknown_size(0UL);
    #line 2464 
    emg_13_emg_param_0_0 = emg_13_emg_param_0_0;
    #line 2468 
    if (emg_13_delayed_work->work.func != (void (*)(struct work_struct *))0) 
      #line 2469 
      (*(emg_13_delayed_work->work.func))(emg_13_emg_param_0_0);
    #line 2474 
    ldv_free((void *)emg_13_emg_param_0_0);
    #line 2478 
    return (_Bool)1;
  }
  else 
       #line 2482 
       return (_Bool)0;
}

#line 2490  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/emg/0/environment_model.c"
void emg_unregister_netdev(struct net_device *arg0)
{
  #line 2493 
  struct net_device *emg_14_netdev;
  #line 2496 
  emg_14_netdev = arg0;
  #line 2500 
  emg_wrapper_aq_ndev_close(emg_14_netdev);
  #line 2504 
  emg_dispatch_deregister_14(emg_14_netdev);
  #line 2507 
  return;
}

#line 2512  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/emg/0/environment_model.c"
void *emg_entry_point_insmod(void *arg0)
{
  #line 2515 
  int emg_1_ret;
  #line 2518 
  emg_1_ret = emg_aq_ndev_init_module();
  #line 2519 
  emg_1_ret = ldv_post_init(emg_1_ret);
  #line 2522 
  if (ldv_undef_int() != 0) {
    #line 2524 
    __VERIFIER_assume(emg_1_ret == 0);
    #line 2528 
    emg_aq_ndev_exit_module();
  }
  else 
       #line 2532 
       __VERIFIER_assume(emg_1_ret != 0);
  #line 2536 
  return (void *)0;
}

#line 2541  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/aquantia/atlantic/atlantic.ko/concurrency safety/emg/0/environment_model.c"
int main(void)
{
  #line 2543 
  ldv_initialize();
  #line 2545 
  emg_entry_point_insmod((void *)0);
  #line 2547 
  return 0;
}

