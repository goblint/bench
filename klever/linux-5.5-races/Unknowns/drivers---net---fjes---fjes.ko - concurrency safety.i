/* Generated by Frama-C */
#line 106  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/compiler_types.h"
typedef signed char __s8;
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/int-ll64.h"
typedef unsigned char __u8;
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/int-ll64.h"
typedef short __s16;
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/int-ll64.h"
typedef unsigned short __u16;
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/int-ll64.h"
typedef int __s32;
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/int-ll64.h"
typedef unsigned int __u32;
#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/int-ll64.h"
typedef long long __s64;
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/int-ll64.h"
typedef unsigned long long __u64;
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/int-ll64.h"
typedef __s8 s8;
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/int-ll64.h"
typedef __u8 u8;
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/int-ll64.h"
typedef __s16 s16;
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/int-ll64.h"
typedef __u16 u16;
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/int-ll64.h"
typedef __s32 s32;
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/int-ll64.h"
typedef __u32 u32;
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/int-ll64.h"
typedef __s64 s64;
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/int-ll64.h"
typedef __u64 u64;
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/uapi/asm/posix_types_64.h"
typedef long __kernel_long_t;
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef unsigned long __kernel_ulong_t;
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_pid_t;
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_uid32_t;
#line 50  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_gid32_t;
#line 51  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef __kernel_ulong_t __kernel_size_t;
#line 73  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_ssize_t;
#line 88  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef long long __kernel_loff_t;
#line 91  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef long long __kernel_time64_t;
#line 92  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_clock_t;
#line 93  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_timer_t;
#line 94  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_clockid_t;
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/types.h"
typedef __u16 __be16;
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/types.h"
typedef __u32 __le32;
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/types.h"
typedef __u32 __be32;
#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/types.h"
typedef __u64 __le64;
#line 37  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/types.h"
typedef __u32 __wsum;
#line 38  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/types.h"
typedef unsigned int __poll_t;
#line 53  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/types.h"
typedef u32 __kernel_dev_t;
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef __kernel_dev_t dev_t;
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef unsigned short umode_t;
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef __kernel_pid_t pid_t;
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef __kernel_clockid_t clockid_t;
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef _Bool bool;
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef __kernel_uid32_t uid_t;
#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef __kernel_gid32_t gid_t;
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef __kernel_loff_t loff_t;
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef __kernel_size_t size_t;
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef __kernel_ssize_t ssize_t;
#line 103  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef s32 int32_t;
#line 109  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef u32 uint32_t;
#line 115  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef u64 sector_t;
#line 131  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef u64 blkcnt_t;
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef u64 dma_addr_t;
#line 149  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef unsigned int gfp_t;
#line 155  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef unsigned int fmode_t;
#line 156  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef u64 phys_addr_t;
#line 159  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef phys_addr_t resource_size_t;
#line 164  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef unsigned long irq_hw_number_t;
#line 170  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
struct __anonstruct_atomic_t_6 {
   int counter ;
};
#line 170  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef struct __anonstruct_atomic_t_6 atomic_t;
#line 174  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
struct __anonstruct_atomic64_t_7 {
   s64 counter ;
};
#line 174  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef struct __anonstruct_atomic64_t_7 atomic64_t;
#line 181  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
struct list_head {
   struct list_head *next ;
   struct list_head *prev ;
};
#line 185 
struct hlist_node;
#line 185  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
struct hlist_head {
   struct hlist_node *first ;
};
#line 189  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
struct hlist_node {
   struct hlist_node *next ;
   struct hlist_node **pprev ;
};
#line 219  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
struct callback_head {
   struct callback_head *next ;
   void (*func)(struct callback_head *) ;
} __attribute__((__aligned__(8)));
#line 14  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_ethtool.i.aux"
struct task_struct;
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/export.h"
struct module;
#line 60  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/export.h"
struct kernel_symbol {
   int value_offset ;
   int name_offset ;
   int namespace_offset ;
};
#line 136  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/init.h"
typedef void (*ctor_fn_t)(void);
#line 139 
struct file_system_type;
#line 83  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/printk.h"
struct ctl_table;
#line 87  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jump_label.h"
struct jump_entry;
#line 87 
struct static_key_mod;
#line 87  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jump_label.h"
union __anonunion_8 {
   unsigned long type ;
   struct jump_entry *entries ;
   struct static_key_mod *next ;
};
#line 87  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jump_label.h"
struct static_key {
   atomic_t enabled ;
   union __anonunion_8 __anonCompField_static_key_4 ;
};
#line 122  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jump_label.h"
struct jump_entry {
   s32 code ;
   s32 target ;
   long key ;
};
#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dynamic_debug.h"
struct device;
#line 65 
struct net_device;
#line 476  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/printk.h"
struct file_operations;
#line 87  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/div64.h"
struct completion;
#line 88 
struct pt_regs;
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/bug.h"
struct bug_entry {
   int bug_addr_disp ;
   int file_disp ;
   unsigned short line ;
   unsigned short flags ;
};
#line 188  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/math64.h"
typedef __s64 time64_t;
#line 7  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/time_types.h"
struct __kernel_timespec {
   __kernel_time64_t tv_sec ;
   long long tv_nsec ;
};
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/time64.h"
struct timespec64 {
   time64_t tv_sec ;
   long tv_nsec ;
};
#line 165 
struct old_timespec32;
#line 167 
enum timespec_type {
    TT_NONE = 0,
    TT_NATIVE = 1,
    TT_COMPAT = 2
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/restart_block.h"
struct __anonstruct_futex_27 {
   u32 *uaddr ;
   u32 val ;
   u32 flags ;
   u32 bitset ;
   u64 time ;
   u32 *uaddr2 ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/restart_block.h"
union __anonunion_29 {
   struct __kernel_timespec *rmtp ;
   struct old_timespec32 *compat_rmtp ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/restart_block.h"
struct __anonstruct_nanosleep_28 {
   clockid_t clockid ;
   enum timespec_type type ;
   union __anonunion_29 __anonCompField___anonstruct_nanosleep_28_5 ;
   u64 expires ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/restart_block.h"
struct __anonstruct_poll_30 {
   struct pollfd *ufds ;
   int nfds ;
   int has_timeout ;
   unsigned long tv_sec ;
   unsigned long tv_nsec ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/restart_block.h"
union __anonunion_26 {
   struct __anonstruct_futex_27 futex ;
   struct __anonstruct_nanosleep_28 nanosleep ;
   struct __anonstruct_poll_30 poll ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/restart_block.h"
struct restart_block {
   long (*fn)(struct restart_block *) ;
   union __anonunion_26 __anonCompField_restart_block_6 ;
};
#line 58  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/page_64.h"
struct page;
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/getorder.h"
struct mm_struct;
#line 49 
struct io_bitmap;
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/ptrace.h"
struct pt_regs {
   unsigned long r15 ;
   unsigned long r14 ;
   unsigned long r13 ;
   unsigned long r12 ;
   unsigned long bp ;
   unsigned long bx ;
   unsigned long r11 ;
   unsigned long r10 ;
   unsigned long r9 ;
   unsigned long r8 ;
   unsigned long ax ;
   unsigned long cx ;
   unsigned long dx ;
   unsigned long si ;
   unsigned long di ;
   unsigned long orig_ax ;
   unsigned long ip ;
   unsigned long cs ;
   unsigned long flags ;
   unsigned long sp ;
   unsigned long ss ;
};
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/desc_defs.h"
struct desc_struct {
   u16 limit0 ;
   u16 base0 ;
   u16 base1 : 8 ;
   u16 type : 4 ;
   u16 s : 1 ;
   u16 dpl : 2 ;
   u16 p : 1 ;
   u16 limit1 : 4 ;
   u16 avl : 1 ;
   u16 l : 1 ;
   u16 d : 1 ;
   u16 g : 1 ;
   u16 base2 : 8 ;
} __attribute__((__packed__));
#line 119  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/desc_defs.h"
typedef unsigned long pteval_t;
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pmdval_t;
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pudval_t;
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgdval_t;
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgprotval_t;
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_64_types.h"
struct __anonstruct_pte_t_53 {
   pteval_t pte ;
};
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_64_types.h"
typedef struct __anonstruct_pte_t_53 pte_t;
#line 265  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
struct pgprot {
   pgprotval_t pgprot ;
};
#line 267  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
typedef struct pgprot pgprot_t;
#line 266  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
struct __anonstruct_pgd_t_54 {
   pgdval_t pgd ;
};
#line 266  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
typedef struct __anonstruct_pgd_t_54 pgd_t;
#line 319  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
struct __anonstruct_pud_t_56 {
   pudval_t pud ;
};
#line 319  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
typedef struct __anonstruct_pud_t_56 pud_t;
#line 345  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
struct __anonstruct_pmd_t_57 {
   pmdval_t pmd ;
};
#line 345  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
typedef struct __anonstruct_pmd_t_57 pmd_t;
#line 505  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
typedef struct page *pgtable_t;
#line 519 
struct file;
#line 530 
struct seq_file;
#line 360  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/nospec-branch.h"
struct thread_struct;
#line 362 
struct cpumask;
#line 365 
struct vm_area_struct;
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qspinlock_types.h"
struct __anonstruct_59 {
   u8 locked ;
   u8 pending ;
};
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qspinlock_types.h"
struct __anonstruct_60 {
   u16 locked_pending ;
   u16 tail ;
};
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qspinlock_types.h"
union __anonunion_58 {
   atomic_t val ;
   struct __anonstruct_59 __anonCompField___anonunion_58_7 ;
   struct __anonstruct_60 __anonCompField___anonunion_58_8 ;
};
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qspinlock_types.h"
struct qspinlock {
   union __anonunion_58 __anonCompField_qspinlock_9 ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qspinlock_types.h"
typedef struct qspinlock arch_spinlock_t;
#line 13  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qrwlock_types.h"
struct __anonstruct_62 {
   u8 wlocked ;
   u8 __lstate[3U] ;
};
#line 13  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qrwlock_types.h"
union __anonunion_61 {
   atomic_t cnts ;
   struct __anonstruct_62 __anonCompField___anonunion_61_10 ;
};
#line 13  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qrwlock_types.h"
struct qrwlock {
   union __anonunion_61 __anonCompField_qrwlock_11 ;
   arch_spinlock_t wait_lock ;
};
#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qrwlock_types.h"
typedef struct qrwlock arch_rwlock_t;
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/math_emu.h"
struct math_emu_info {
   long ___orig_eip ;
   struct pt_regs *regs ;
};
#line 2288  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/atomic-fallback.h"
typedef atomic64_t atomic_long_t;
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cpumask.h"
struct cpumask {
   unsigned long bits[128U] ;
};
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cpumask.h"
typedef struct cpumask cpumask_t;
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/tracepoint-defs.h"
struct tracepoint_func {
   void *func ;
   void *data ;
   int prio ;
};
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/tracepoint-defs.h"
struct tracepoint {
   char *name ;
   struct static_key key ;
   int (*regfunc)(void) ;
   void (*unregfunc)(void) ;
   struct tracepoint_func *funcs ;
};
#line 37  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/tracepoint-defs.h"
typedef int tracepoint_ptr_t;
#line 44  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/tracepoint-defs.h"
struct bpf_raw_event_map {
   struct tracepoint *tp ;
   void *bpf_func ;
   u32 num_args ;
   u32 writable_size ;
} __attribute__((__aligned__(32)));
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
struct fregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u32 status ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_90 {
   u64 rip ;
   u64 rdp ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_91 {
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
union __anonunion_89 {
   struct __anonstruct_90 __anonCompField___anonunion_89_17 ;
   struct __anonstruct_91 __anonCompField___anonunion_89_18 ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
union __anonunion_92 {
   u32 padding1[12U] ;
   u32 sw_reserved[12U] ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
struct fxregs_state {
   u16 cwd ;
   u16 swd ;
   u16 twd ;
   u16 fop ;
   union __anonunion_89 __anonCompField_fxregs_state_19 ;
   u32 mxcsr ;
   u32 mxcsr_mask ;
   u32 st_space[32U] ;
   u32 xmm_space[64U] ;
   u32 padding[12U] ;
   union __anonunion_92 __anonCompField_fxregs_state_20 ;
} __attribute__((__aligned__(16)));
#line 79  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
struct swregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u8 ftop ;
   u8 changed ;
   u8 lookahead ;
   u8 no_update ;
   u8 rm ;
   u8 alimit ;
   struct math_emu_info *info ;
   u32 entry_eip ;
};
#line 232  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
struct xstate_header {
   u64 xfeatures ;
   u64 xcomp_bv ;
   u64 reserved[6U] ;
} __attribute__((__packed__));
#line 253  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
struct xregs_state {
   struct fxregs_state i387 ;
   struct xstate_header header ;
   u8 extended_state_area[0U] ;
} __attribute__((__packed__, __aligned__(64)));
#line 268  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
union fpregs_state {
   struct fregs_state fsave ;
   struct fxregs_state fxsave ;
   struct swregs_state soft ;
   struct xregs_state xsave ;
   u8 __padding[4096U] ;
};
#line 281  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
struct fpu {
   unsigned int last_cpu ;
   unsigned long avx512_timestamp ;
   union fpregs_state state ;
};
#line 73  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/orc_types.h"
struct orc_entry {
   s16 sp_offset ;
   s16 bp_offset ;
   unsigned int sp_reg : 4 ;
   unsigned int bp_reg : 4 ;
   unsigned int type : 2 ;
   unsigned int end : 1 ;
} __attribute__((__packed__));
#line 180  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/processor.h"
struct seq_operations;
#line 478 
struct perf_event;
#line 479  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/processor.h"
struct __anonstruct_mm_segment_t_95 {
   unsigned long seg ;
};
#line 479  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/processor.h"
typedef struct __anonstruct_mm_segment_t_95 mm_segment_t;
#line 485  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/processor.h"
struct thread_struct {
   struct desc_struct tls_array[3U] ;
   unsigned long sp ;
   unsigned short es ;
   unsigned short ds ;
   unsigned short fsindex ;
   unsigned short gsindex ;
   unsigned long fsbase ;
   unsigned long gsbase ;
   struct perf_event *ptrace_bps[4U] ;
   unsigned long debugreg6 ;
   unsigned long ptrace_dr7 ;
   unsigned long cr2 ;
   unsigned long trap_nr ;
   unsigned long error_code ;
   struct io_bitmap *io_bitmap ;
   unsigned long iopl_emul ;
   mm_segment_t addr_limit ;
   unsigned int sig_on_uaccess_err : 1 ;
   unsigned int uaccess_err : 1 ;
   struct fpu fpu ;
};
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/thread_info.h"
struct thread_info {
   unsigned long flags ;
   u32 status ;
};
#line 35  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bottom_half.h"
struct lockdep_map;
#line 55  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockdep.h"
struct lockdep_subclass_key {
   char __one_byte ;
} __attribute__((__packed__));
#line 60  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockdep.h"
union __anonunion_96 {
   struct hlist_node hash_entry ;
   struct lockdep_subclass_key subkeys[8U] ;
};
#line 60  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockdep.h"
struct lock_class_key {
   union __anonunion_96 __anonCompField_lock_class_key_23 ;
};
#line 68 
struct lock_trace;
#line 77  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockdep.h"
struct lock_class {
   struct hlist_node hash_entry ;
   struct list_head lock_entry ;
   struct list_head locks_after ;
   struct list_head locks_before ;
   struct lockdep_subclass_key *key ;
   unsigned int subclass ;
   unsigned int dep_gen_id ;
   unsigned long usage_mask ;
   struct lock_trace *usage_traces[9U] ;
   int name_version ;
   char *name ;
   unsigned long contention_point[4U] ;
   unsigned long contending_point[4U] ;
};
#line 157  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockdep.h"
struct lockdep_map {
   struct lock_class_key *key ;
   struct lock_class *class_cache[2U] ;
   char *name ;
   int cpu ;
   unsigned long ip ;
};
#line 226  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockdep.h"
struct held_lock {
   u64 prev_chain_key ;
   unsigned long acquire_ip ;
   struct lockdep_map *instance ;
   struct lockdep_map *nest_lock ;
   u64 waittime_stamp ;
   u64 holdtime_stamp ;
   unsigned int class_idx : 13 ;
   unsigned int irq_context : 2 ;
   unsigned int trylock : 1 ;
   unsigned int read : 2 ;
   unsigned int check : 1 ;
   unsigned int hardirqs_off : 1 ;
   unsigned int references : 12 ;
   unsigned int pin_count ;
};
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_types.h"
struct raw_spinlock {
   arch_spinlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_types.h"
typedef struct raw_spinlock raw_spinlock_t;
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_types.h"
struct __anonstruct_98 {
   u8 __padding[24U] ;
   struct lockdep_map dep_map ;
};
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_types.h"
union __anonunion_97 {
   struct raw_spinlock rlock ;
   struct __anonstruct_98 __anonCompField___anonunion_97_24 ;
};
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_types.h"
struct spinlock {
   union __anonunion_97 __anonCompField_spinlock_25 ;
};
#line 73  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_types.h"
typedef struct spinlock spinlock_t;
#line 74  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_types.h"
struct __anonstruct_rwlock_t_99 {
   arch_rwlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};
#line 74  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_types.h"
typedef struct __anonstruct_rwlock_t_99 rwlock_t;
#line 57  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
struct mutex;
#line 27  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
struct kmem_cache;
#line 54  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/llist.h"
struct llist_node;
#line 58  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/llist.h"
struct llist_node {
   struct llist_node *next ;
};
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rbtree.h"
struct rb_node {
   unsigned long __rb_parent_color ;
   struct rb_node *rb_right ;
   struct rb_node *rb_left ;
} __attribute__((__aligned__(8)));
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rbtree.h"
struct rb_root {
   struct rb_node *rb_node ;
};
#line 125  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rbtree.h"
struct rb_root_cached {
   struct rb_root rb_root ;
   struct rb_node *rb_leftmost ;
};
#line 302  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/overflow.h"
struct notifier_block;
#line 53  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/vmalloc.h"
struct vm_struct {
   struct vm_struct *next ;
   void *addr ;
   unsigned long size ;
   unsigned long flags ;
   struct page **pages ;
   unsigned int nr_pages ;
   phys_addr_t phys_addr ;
   void *caller ;
};
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/seqlock.h"
struct seqcount {
   unsigned int sequence ;
   struct lockdep_map dep_map ;
};
#line 53  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/seqlock.h"
typedef struct seqcount seqcount_t;
#line 403  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/seqlock.h"
struct __anonstruct_seqlock_t_121 {
   struct seqcount seqcount ;
   spinlock_t lock ;
};
#line 403  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/seqlock.h"
typedef struct __anonstruct_seqlock_t_121 seqlock_t;
#line 161  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timex.h"
typedef s32 old_time32_t;
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/time32.h"
struct old_timespec32 {
   old_time32_t tv_sec ;
   s32 tv_nsec ;
};
#line 461  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jiffies.h"
typedef s64 ktime_t;
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
struct timer_list {
   struct hlist_node entry ;
   unsigned long expires ;
   void (*function)(struct timer_list *) ;
   u32 flags ;
   struct lockdep_map lockdep_map ;
};
#line 196 
struct hrtimer;
#line 197 
enum hrtimer_restart;
#line 153  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mpspec.h"
struct __anonstruct_nodemask_t_168 {
   unsigned long bits[16U] ;
};
#line 153  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mpspec.h"
typedef struct __anonstruct_nodemask_t_168 nodemask_t;
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/osq_lock.h"
struct optimistic_spin_queue {
   atomic_t tail ;
};
#line 35  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rwsem.h"
struct rw_semaphore {
   atomic_long_t count ;
   atomic_long_t owner ;
   struct optimistic_spin_queue osq ;
   raw_spinlock_t wait_lock ;
   struct list_head wait_list ;
   void *magic ;
   struct lockdep_map dep_map ;
};
#line 194 
struct ww_acquire_ctx;
#line 53  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mutex.h"
struct mutex {
   atomic_long_t owner ;
   spinlock_t wait_lock ;
   struct optimistic_spin_queue osq ;
   struct list_head wait_list ;
   void *magic ;
   struct lockdep_map dep_map ;
};
#line 72  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mutex.h"
struct mutex_waiter {
   struct list_head list ;
   struct task_struct *task ;
   struct ww_acquire_ctx *ww_ctx ;
   void *magic ;
};
#line 212 
struct ldt_struct;
#line 212 
struct vdso_image;
#line 212  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mutex.h"
struct __anonstruct_mm_context_t_169 {
   u64 ctx_id ;
   atomic64_t tlb_gen ;
   struct rw_semaphore ldt_usr_sem ;
   struct ldt_struct *ldt ;
   unsigned short ia32_compat ;
   struct mutex lock ;
   void *vdso ;
   struct vdso_image *vdso_image ;
   atomic_t perf_rdpmc_allowed ;
   u16 pkey_allocation_map ;
   s16 execute_only_pkey ;
   void *bd_addr ;
};
#line 212  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mutex.h"
typedef struct __anonstruct_mm_context_t_169 mm_context_t;
#line 440  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/io.h"
struct fwnode_operations;
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fwnode.h"
struct fwnode_handle {
   struct fwnode_handle *secondary ;
   struct fwnode_operations *ops ;
   struct device *dev ;
};
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fwnode.h"
struct fwnode_endpoint {
   unsigned int port ;
   unsigned int id ;
   struct fwnode_handle *local_fwnode ;
};
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fwnode.h"
struct fwnode_reference_args {
   struct fwnode_handle *fwnode ;
   unsigned int nargs ;
   u64 args[8U] ;
};
#line 110  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fwnode.h"
struct fwnode_operations {
   struct fwnode_handle *(*get)(struct fwnode_handle *) ;
   void (*put)(struct fwnode_handle *) ;
   bool (*device_is_available)(struct fwnode_handle *) ;
   void *(*device_get_match_data)(struct fwnode_handle *, struct device *) ;
   bool (*property_present)(struct fwnode_handle *, char *) ;
   int (*property_read_int_array)(struct fwnode_handle *, char *, unsigned int , void *, size_t ) ;
   int (*property_read_string_array)(struct fwnode_handle *, char *, char **, size_t ) ;
   char *(*get_name)(struct fwnode_handle *) ;
   char *(*get_name_prefix)(struct fwnode_handle *) ;
   struct fwnode_handle *(*get_parent)(struct fwnode_handle *) ;
   struct fwnode_handle *(*get_next_child_node)(struct fwnode_handle *, struct fwnode_handle *) ;
   struct fwnode_handle *(*get_named_child_node)(struct fwnode_handle *, char *) ;
   int (*get_reference_args)(struct fwnode_handle *, char *, char *, unsigned int , unsigned int , struct fwnode_reference_args *) ;
   struct fwnode_handle *(*graph_get_next_endpoint)(struct fwnode_handle *, struct fwnode_handle *) ;
   struct fwnode_handle *(*graph_get_remote_endpoint)(struct fwnode_handle *) ;
   struct fwnode_handle *(*graph_get_port_parent)(struct fwnode_handle *) ;
   int (*graph_parse_endpoint)(struct fwnode_handle *, struct fwnode_endpoint *) ;
   int (*add_links)(struct fwnode_handle *, struct device *) ;
};
#line 7  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/tlbbatch.h"
struct arch_tlbflush_unmap_batch {
   struct cpumask cpumask ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types_task.h"
struct vmacache {
   u64 seqnum ;
   struct vm_area_struct *vmas[4U] ;
};
#line 54  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types_task.h"
struct task_rss_stat {
   int events ;
   int count[4U] ;
};
#line 60  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types_task.h"
struct mm_rss_stat {
   atomic_long_t count[4U] ;
};
#line 64  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types_task.h"
struct page_frag {
   struct page *page ;
   __u32 offset ;
   __u32 size ;
};
#line 76  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types_task.h"
struct tlbflush_unmap_batch {
   struct arch_tlbflush_unmap_batch arch ;
   bool flush_required ;
   bool writable ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/wait.h"
struct wait_queue_head {
   spinlock_t lock ;
   struct list_head head ;
};
#line 38  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/wait.h"
typedef struct wait_queue_head wait_queue_head_t;
#line 26  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/completion.h"
struct completion {
   unsigned int done ;
   wait_queue_head_t wait ;
};
#line 120 
struct inode;
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uprobes.h"
struct workqueue_struct;
#line 48 
struct work_struct;
#line 102  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/workqueue.h"
struct work_struct {
   atomic_long_t data ;
   struct list_head entry ;
   void (*func)(struct work_struct *) ;
   struct lockdep_map lockdep_map ;
};
#line 115  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/workqueue.h"
struct delayed_work {
   struct work_struct work ;
   struct timer_list timer ;
   struct workqueue_struct *wq ;
   int cpu ;
};
#line 124  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/workqueue.h"
struct rcu_work {
   struct work_struct work ;
   struct callback_head rcu ;
   struct workqueue_struct *wq ;
};
#line 67  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rcu_segcblist.h"
struct rcu_segcblist {
   struct callback_head *head ;
   struct callback_head **tails[4U] ;
   unsigned long gp_seq[4U] ;
   atomic_long_t len ;
   long len_lazy ;
   u8 enabled ;
   u8 offloaded ;
};
#line 80 
struct srcu_struct;
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/srcu.h"
struct srcu_node;
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/srcutree.h"
struct srcu_data {
   unsigned long srcu_lock_count[2U] ;
   unsigned long srcu_unlock_count[2U] ;
   spinlock_t lock ;
   struct rcu_segcblist srcu_cblist ;
   unsigned long srcu_gp_seq_needed ;
   unsigned long srcu_gp_seq_needed_exp ;
   bool srcu_cblist_invoking ;
   struct timer_list delay_work ;
   struct work_struct work ;
   struct callback_head srcu_barrier_head ;
   struct srcu_node *mynode ;
   unsigned long grpmask ;
   int cpu ;
   struct srcu_struct *ssp ;
};
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/srcutree.h"
struct srcu_node {
   spinlock_t lock ;
   unsigned long srcu_have_cbs[4U] ;
   unsigned long srcu_data_have_cbs[4U] ;
   unsigned long srcu_gp_seq_needed_exp ;
   struct srcu_node *srcu_parent ;
   int grplo ;
   int grphi ;
};
#line 64  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/srcutree.h"
struct srcu_struct {
   struct srcu_node node[521U] ;
   struct srcu_node *level[4U] ;
   struct mutex srcu_cb_mutex ;
   spinlock_t lock ;
   struct mutex srcu_gp_mutex ;
   unsigned int srcu_idx ;
   unsigned long srcu_gp_seq ;
   unsigned long srcu_gp_seq_needed ;
   unsigned long srcu_gp_seq_needed_exp ;
   unsigned long srcu_last_gp_end ;
   struct srcu_data *sda ;
   unsigned long srcu_barrier_seq ;
   struct mutex srcu_barrier_mutex ;
   struct completion srcu_barrier_completion ;
   atomic_t srcu_barrier_cpu_cnt ;
   struct delayed_work work ;
   struct lockdep_map dep_map ;
};
#line 54  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/notifier.h"
struct notifier_block {
   int (*notifier_call)(struct notifier_block *, unsigned long , void *) ;
   struct notifier_block *next ;
   int priority ;
};
#line 70  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/notifier.h"
struct raw_notifier_head {
   struct notifier_block *head ;
};
#line 50  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/uprobes.h"
struct arch_uprobe_task {
   unsigned long saved_scratch_register ;
   unsigned int saved_trap_nr ;
   unsigned int saved_tf ;
};
#line 57 
enum uprobe_task_state {
    UTASK_RUNNING = 0,
    UTASK_SSTEP = 1,
    UTASK_SSTEP_ACK = 2,
    UTASK_SSTEP_TRAPPED = 3
};
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uprobes.h"
struct __anonstruct_184 {
   struct arch_uprobe_task autask ;
   unsigned long vaddr ;
};
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uprobes.h"
struct __anonstruct_185 {
   struct callback_head dup_xol_work ;
   unsigned long dup_xol_addr ;
};
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uprobes.h"
union __anonunion_183 {
   struct __anonstruct_184 __anonCompField___anonunion_183_29 ;
   struct __anonstruct_185 __anonCompField___anonunion_183_30 ;
};
#line 61 
struct uprobe;
#line 61 
struct return_instance;
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uprobes.h"
struct uprobe_task {
   enum uprobe_task_state state ;
   union __anonunion_183 __anonCompField_uprobe_task_31 ;
   struct uprobe *active_uprobe ;
   unsigned long xol_vaddr ;
   struct return_instance *return_instances ;
   unsigned int depth ;
};
#line 83  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uprobes.h"
struct return_instance {
   struct uprobe *uprobe ;
   unsigned long func ;
   unsigned long stack ;
   unsigned long orig_ret_vaddr ;
   bool chained ;
   struct return_instance *next ;
};
#line 98 
struct xol_area;
#line 101  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uprobes.h"
struct uprobes_state {
   struct xol_area *xol_area ;
};
#line 140 
struct address_space;
#line 141 
struct mem_cgroup;
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct __anonstruct_187 {
   struct list_head lru ;
   struct address_space *mapping ;
   unsigned long index ;
   unsigned long private ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct __anonstruct_188 {
   dma_addr_t dma_addr ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct __anonstruct_191 {
   struct page *next ;
   int pages ;
   int pobjects ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
union __anonunion_190 {
   struct list_head slab_list ;
   struct __anonstruct_191 __anonCompField___anonunion_190_34 ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct __anonstruct_193 {
   unsigned int inuse : 16 ;
   unsigned int objects : 15 ;
   unsigned int frozen : 1 ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
union __anonunion_192 {
   void *s_mem ;
   unsigned long counters ;
   struct __anonstruct_193 __anonCompField___anonunion_192_36 ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct __anonstruct_189 {
   union __anonunion_190 __anonCompField___anonstruct_189_35 ;
   struct kmem_cache *slab_cache ;
   void *freelist ;
   union __anonunion_192 __anonCompField___anonstruct_189_37 ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct __anonstruct_194 {
   unsigned long compound_head ;
   unsigned char compound_dtor ;
   unsigned char compound_order ;
   atomic_t compound_mapcount ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct __anonstruct_195 {
   unsigned long _compound_pad_1 ;
   unsigned long _compound_pad_2 ;
   struct list_head deferred_list ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
union __anonunion_197 {
   struct mm_struct *pt_mm ;
   atomic_t pt_frag_refcount ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct __anonstruct_196 {
   unsigned long _pt_pad_1 ;
   pgtable_t pmd_huge_pte ;
   unsigned long _pt_pad_2 ;
   union __anonunion_197 __anonCompField___anonstruct_196_41 ;
   spinlock_t *ptl ;
};
#line 68 
struct dev_pagemap;
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct __anonstruct_198 {
   struct dev_pagemap *pgmap ;
   void *zone_device_data ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
union __anonunion_186 {
   struct __anonstruct_187 __anonCompField___anonunion_186_32 ;
   struct __anonstruct_188 __anonCompField___anonunion_186_33 ;
   struct __anonstruct_189 __anonCompField___anonunion_186_38 ;
   struct __anonstruct_194 __anonCompField___anonunion_186_39 ;
   struct __anonstruct_195 __anonCompField___anonunion_186_40 ;
   struct __anonstruct_196 __anonCompField___anonunion_186_42 ;
   struct __anonstruct_198 __anonCompField___anonunion_186_43 ;
   struct callback_head callback_head ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
union __anonunion_199 {
   atomic_t _mapcount ;
   unsigned int page_type ;
   unsigned int active ;
   int units ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct page {
   unsigned long flags ;
   union __anonunion_186 __anonCompField_page_44 ;
   union __anonunion_199 __anonCompField_page_45 ;
   atomic_t _refcount ;
   struct mem_cgroup *mem_cgroup ;
} __attribute__((__aligned__(16)));
#line 278 
struct userfaultfd_ctx;
#line 278  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct vm_userfaultfd_ctx {
   struct userfaultfd_ctx *ctx ;
};
#line 292  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct __anonstruct_shared_200 {
   struct rb_node rb ;
   unsigned long rb_subtree_last ;
};
#line 292 
struct anon_vma;
#line 292 
struct vm_operations_struct;
#line 292 
struct mempolicy;
#line 292  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct vm_area_struct {
   unsigned long vm_start ;
   unsigned long vm_end ;
   struct vm_area_struct *vm_next ;
   struct vm_area_struct *vm_prev ;
   struct rb_node vm_rb ;
   unsigned long rb_subtree_gap ;
   struct mm_struct *vm_mm ;
   pgprot_t vm_page_prot ;
   unsigned long vm_flags ;
   struct __anonstruct_shared_200 shared ;
   struct list_head anon_vma_chain ;
   struct anon_vma *anon_vma ;
   struct vm_operations_struct *vm_ops ;
   unsigned long vm_pgoff ;
   struct file *vm_file ;
   void *vm_private_data ;
   atomic_long_t swap_readahead_info ;
   struct mempolicy *vm_policy ;
   struct vm_userfaultfd_ctx vm_userfaultfd_ctx ;
} __attribute__((__designated_init__));
#line 358  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct core_thread {
   struct task_struct *task ;
   struct core_thread *next ;
};
#line 363  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct core_state {
   atomic_t nr_threads ;
   struct core_thread dumper ;
   struct completion startup ;
};
#line 368 
struct kioctx_table;
#line 370 
struct linux_binfmt;
#line 370 
struct user_namespace;
#line 370 
struct mmu_notifier_mm;
#line 370  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct __anonstruct_201 {
   struct vm_area_struct *mmap ;
   struct rb_root mm_rb ;
   u64 vmacache_seqnum ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   unsigned long mmap_base ;
   unsigned long mmap_legacy_base ;
   unsigned long mmap_compat_base ;
   unsigned long mmap_compat_legacy_base ;
   unsigned long task_size ;
   unsigned long highest_vm_end ;
   pgd_t *pgd ;
   atomic_t membarrier_state ;
   atomic_t mm_users ;
   atomic_t mm_count ;
   atomic_long_t pgtables_bytes ;
   int map_count ;
   spinlock_t page_table_lock ;
   struct rw_semaphore mmap_sem ;
   struct list_head mmlist ;
   unsigned long hiwater_rss ;
   unsigned long hiwater_vm ;
   unsigned long total_vm ;
   unsigned long locked_vm ;
   atomic64_t pinned_vm ;
   unsigned long data_vm ;
   unsigned long exec_vm ;
   unsigned long stack_vm ;
   unsigned long def_flags ;
   spinlock_t arg_lock ;
   unsigned long start_code ;
   unsigned long end_code ;
   unsigned long start_data ;
   unsigned long end_data ;
   unsigned long start_brk ;
   unsigned long brk ;
   unsigned long start_stack ;
   unsigned long arg_start ;
   unsigned long arg_end ;
   unsigned long env_start ;
   unsigned long env_end ;
   unsigned long saved_auxv[46U] ;
   struct mm_rss_stat rss_stat ;
   struct linux_binfmt *binfmt ;
   mm_context_t context ;
   unsigned long flags ;
   struct core_state *core_state ;
   spinlock_t ioctx_lock ;
   struct kioctx_table *ioctx_table ;
   struct task_struct *owner ;
   struct user_namespace *user_ns ;
   struct file *exe_file ;
   struct mmu_notifier_mm *mmu_notifier_mm ;
   unsigned long numa_next_scan ;
   unsigned long numa_scan_offset ;
   int numa_scan_seq ;
   atomic_t tlb_flush_pending ;
   bool tlb_flush_batched ;
   struct uprobes_state uprobes_state ;
   atomic_long_t hugetlb_usage ;
   struct work_struct async_put_work ;
} __attribute__((__designated_init__));
#line 370  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct mm_struct {
   struct __anonstruct_201 __anonCompField_mm_struct_46 ;
   unsigned long cpu_bitmap[] ;
};
#line 642 
struct vm_fault;
#line 643  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
typedef unsigned int vm_fault_t;
#line 266  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/apic.h"
struct irq_data;
#line 41  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dynamic_queue_limits.h"
struct dql {
   unsigned int num_queued ;
   unsigned int adj_limit ;
   unsigned int last_obj_cnt ;
   unsigned int limit ;
   unsigned int num_completed ;
   unsigned int prev_ovlimit ;
   unsigned int prev_num_queued ;
   unsigned int prev_last_obj_cnt ;
   unsigned int lowest_slack ;
   unsigned long slack_start_time ;
   unsigned int max_limit ;
   unsigned int min_limit ;
   unsigned int slack_hold_time ;
};
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uidgid.h"
struct __anonstruct_kuid_t_252 {
   uid_t val ;
};
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uidgid.h"
typedef struct __anonstruct_kuid_t_252 kuid_t;
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uidgid.h"
struct __anonstruct_kgid_t_253 {
   gid_t val ;
};
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uidgid.h"
typedef struct __anonstruct_kgid_t_253 kgid_t;
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/stat.h"
struct kstat {
   u32 result_mask ;
   umode_t mode ;
   unsigned int nlink ;
   uint32_t blksize ;
   u64 attributes ;
   u64 attributes_mask ;
   u64 ino ;
   dev_t dev ;
   dev_t rdev ;
   kuid_t uid ;
   kgid_t gid ;
   loff_t size ;
   struct timespec64 atime ;
   struct timespec64 mtime ;
   struct timespec64 ctime ;
   struct timespec64 btime ;
   u64 blocks ;
};
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable-types.h"
struct rhash_head {
   struct rhash_head *next ;
};
#line 25 
struct bucket_table;
#line 33 
struct rhashtable;
#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable-types.h"
struct rhashtable_compare_arg {
   struct rhashtable *ht ;
   void *key ;
};
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable-types.h"
struct rhashtable_params {
   u16 nelem_hint ;
   u16 key_len ;
   u16 key_offset ;
   u16 head_offset ;
   unsigned int max_size ;
   u16 min_size ;
   bool automatic_shrinking ;
   u32 (*hashfn)(void *, u32 , u32 ) ;
   u32 (*obj_hashfn)(void *, u32 , u32 ) ;
   int (*obj_cmpfn)(struct rhashtable_compare_arg *, void *) ;
};
#line 81  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable-types.h"
struct rhashtable {
   struct bucket_table *tbl ;
   unsigned int key_len ;
   unsigned int max_elems ;
   struct rhashtable_params p ;
   bool rhlist ;
   struct work_struct run_work ;
   struct mutex mutex ;
   spinlock_t lock ;
   atomic_t nelems ;
};
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/refcount.h"
struct refcount_struct {
   atomic_t refs ;
};
#line 101  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/refcount.h"
typedef struct refcount_struct refcount_t;
#line 67  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/sem.h"
struct sem_undo_list;
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sem.h"
struct sysv_sem {
   struct sem_undo_list *undo_list ;
};
#line 316  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
typedef unsigned int isolate_mode_t;
#line 824 
struct resource;
#line 825 
struct vmem_altmap;
#line 13  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/arch_topology.h"
struct device_node;
#line 623  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/gfp.h"
struct percpu_ref;
#line 624  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/gfp.h"
typedef void percpu_ref_func_t(struct percpu_ref *);
#line 95  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/percpu-refcount.h"
struct percpu_ref {
   atomic_long_t count ;
   unsigned long percpu_count_ptr ;
   percpu_ref_func_t *release ;
   percpu_ref_func_t *confirm_switch ;
   bool force_atomic : 1 ;
   bool allow_reinit : 1 ;
   struct callback_head rcu ;
};
#line 95  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/sched.h"
enum pid_type {
    PIDTYPE_PID = 0,
    PIDTYPE_TGID = 1,
    PIDTYPE_PGID = 2,
    PIDTYPE_SID = 3,
    PIDTYPE_MAX = 4
};
#line 54  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pid.h"
struct pid_namespace;
#line 54  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pid.h"
struct upid {
   int nr ;
   struct pid_namespace *ns ;
};
#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pid.h"
struct pid {
   refcount_t count ;
   unsigned int level ;
   struct hlist_head tasks[4U] ;
   wait_queue_head_t wait_pidfd ;
   struct callback_head rcu ;
   struct upid numbers[1U] ;
};
#line 13  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/shm.h"
struct sysv_shm {
   struct list_head shm_clist ;
};
#line 83  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/plist.h"
struct plist_node {
   int prio ;
   struct list_head prio_list ;
   struct list_head node_list ;
};
#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timerqueue.h"
struct timerqueue_node {
   struct rb_node node ;
   ktime_t expires ;
};
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timerqueue.h"
struct timerqueue_head {
   struct rb_root_cached rb_root ;
};
#line 60 
struct hrtimer_clock_base;
#line 61 
struct hrtimer_cpu_base;
#line 80 
enum hrtimer_restart {
    HRTIMER_NORESTART = 0,
    HRTIMER_RESTART = 1
};
#line 117  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/hrtimer.h"
struct hrtimer {
   struct timerqueue_node node ;
   ktime_t _softexpires ;
   enum hrtimer_restart (*function)(struct hrtimer *) ;
   struct hrtimer_clock_base *base ;
   u8 state ;
   u8 is_rel ;
   u8 is_soft ;
   u8 is_hard ;
};
#line 158  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/hrtimer.h"
struct hrtimer_clock_base {
   struct hrtimer_cpu_base *cpu_base ;
   unsigned int index ;
   clockid_t clockid ;
   seqcount_t seq ;
   struct hrtimer *running ;
   struct timerqueue_head active ;
   ktime_t (*get_time)(void) ;
   ktime_t offset ;
} __attribute__((__aligned__(64)));
#line 213  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/hrtimer.h"
struct hrtimer_cpu_base {
   raw_spinlock_t lock ;
   unsigned int cpu ;
   unsigned int active_bases ;
   unsigned int clock_was_set_seq ;
   unsigned int hres_active : 1 ;
   unsigned int in_hrtirq : 1 ;
   unsigned int hang_detected : 1 ;
   unsigned int softirq_activated : 1 ;
   unsigned int nr_events ;
   unsigned short nr_retries ;
   unsigned short nr_hangs ;
   unsigned int max_hang_time ;
   ktime_t expires_next ;
   struct hrtimer *next_timer ;
   ktime_t softirq_expires_next ;
   struct hrtimer *softirq_next_timer ;
   struct hrtimer_clock_base clock_base[8U] ;
} __attribute__((__aligned__(64)));
#line 40  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/seccomp.h"
struct seccomp_filter;
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/seccomp.h"
struct seccomp {
   int mode ;
   struct seccomp_filter *filter ;
};
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/resource.h"
struct rlimit {
   __kernel_ulong_t rlim_cur ;
   __kernel_ulong_t rlim_max ;
};
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/latencytop.h"
struct latency_record {
   unsigned long backtrace[12U] ;
   unsigned int count ;
   unsigned long time ;
   unsigned long max ;
};
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched/types.h"
struct task_cputime {
   u64 stime ;
   u64 utime ;
   unsigned long long sum_exec_runtime ;
};
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/signal.h"
struct __anonstruct_sigset_t_280 {
   unsigned long sig[1U] ;
};
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/signal.h"
typedef struct __anonstruct_sigset_t_280 sigset_t;
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/signal.h"
typedef void __signalfn_t(int );
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/signal-defs.h"
typedef __signalfn_t *__sighandler_t;
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/signal-defs.h"
typedef void __restorefn_t(void);
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/signal-defs.h"
typedef __restorefn_t *__sigrestore_t;
#line 8  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
union sigval {
   int sival_int ;
   void *sival_ptr ;
};
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
typedef union sigval sigval_t;
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__kill_281 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__timer_282 {
   __kernel_timer_t _tid ;
   int _overrun ;
   sigval_t _sigval ;
   int _sys_private ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__rt_283 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   sigval_t _sigval ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigchld_284 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   int _status ;
   __kernel_clock_t _utime ;
   __kernel_clock_t _stime ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__addr_bnd_287 {
   char _dummy_bnd[8U] ;
   void *_lower ;
   void *_upper ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__addr_pkey_288 {
   char _dummy_pkey[8U] ;
   __u32 _pkey ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
union __anonunion_286 {
   short _addr_lsb ;
   struct __anonstruct__addr_bnd_287 _addr_bnd ;
   struct __anonstruct__addr_pkey_288 _addr_pkey ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigfault_285 {
   void *_addr ;
   union __anonunion_286 __anonCompField___anonstruct__sigfault_285_47 ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigpoll_289 {
   long _band ;
   int _fd ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigsys_290 {
   void *_call_addr ;
   int _syscall ;
   unsigned int _arch ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
union __sifields {
   struct __anonstruct__kill_281 _kill ;
   struct __anonstruct__timer_282 _timer ;
   struct __anonstruct__rt_283 _rt ;
   struct __anonstruct__sigchld_284 _sigchld ;
   struct __anonstruct__sigfault_285 _sigfault ;
   struct __anonstruct__sigpoll_289 _sigpoll ;
   struct __anonstruct__sigsys_290 _sigsys ;
};
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/signal_types.h"
struct __anonstruct_295 {
   int si_signo ;
   int si_errno ;
   int si_code ;
   union __sifields _sifields ;
};
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/signal_types.h"
struct kernel_siginfo {
   struct __anonstruct_295 __anonCompField_kernel_siginfo_50 ;
};
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/signal_types.h"
typedef struct kernel_siginfo kernel_siginfo_t;
#line 20 
struct user_struct;
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/signal_types.h"
struct sigpending {
   struct list_head list ;
   sigset_t signal ;
};
#line 35  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/signal_types.h"
struct sigaction {
   __sighandler_t sa_handler ;
   unsigned long sa_flags ;
   __sigrestore_t sa_restorer ;
   sigset_t sa_mask ;
};
#line 49  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/signal_types.h"
struct k_sigaction {
   struct sigaction sa ;
};
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/task_io_accounting.h"
struct task_io_accounting {
   u64 rchar ;
   u64 wchar ;
   u64 syscr ;
   u64 syscw ;
   u64 read_bytes ;
   u64 write_bytes ;
   u64 cancelled_write_bytes ;
};
#line 107  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/posix-timers.h"
struct posix_cputimer_base {
   u64 nextevt ;
   struct timerqueue_head tqhead ;
};
#line 122  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/posix-timers.h"
struct posix_cputimers {
   struct posix_cputimer_base bases[3U] ;
   unsigned int timers_active ;
   unsigned int expiry_active ;
};
#line 193 
struct signal_struct;
#line 62  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/rseq.h"
union __anonunion_rseq_cs_300 {
   __u64 ptr64 ;
   __u64 ptr ;
};
#line 62  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/rseq.h"
struct rseq {
   __u32 cpu_id_start ;
   __u32 cpu_id ;
   union __anonunion_rseq_cs_300 rseq_cs ;
   __u32 flags ;
} __attribute__((__aligned__(32)));
#line 146 
struct audit_context;
#line 147 
struct backing_dev_info;
#line 148 
struct bio_list;
#line 149 
struct blk_plug;
#line 150 
struct capture_control;
#line 151 
struct cfs_rq;
#line 152 
struct fs_struct;
#line 153 
struct futex_pi_state;
#line 154 
struct io_context;
#line 155 
struct nameidata;
#line 156 
struct nsproxy;
#line 157 
struct perf_event_context;
#line 158 
struct pipe_inode_info;
#line 160 
struct reclaim_state;
#line 161 
struct robust_list_head;
#line 166 
struct sighand_struct;
#line 167 
struct task_delay_info;
#line 168 
struct task_group;
#line 242  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct prev_cputime {
   u64 utime ;
   u64 stime ;
   raw_spinlock_t lock ;
};
#line 290  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct sched_info {
   unsigned long pcount ;
   unsigned long long run_delay ;
   unsigned long long last_arrival ;
   unsigned long long last_queued ;
};
#line 325  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct load_weight {
   unsigned long weight ;
   u32 inv_weight ;
};
#line 352  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct util_est {
   unsigned int enqueued ;
   unsigned int ewma ;
} __attribute__((__aligned__(8)));
#line 401  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct sched_avg {
   u64 last_update_time ;
   u64 load_sum ;
   u64 runnable_load_sum ;
   u32 util_sum ;
   u32 period_contrib ;
   unsigned long load_avg ;
   unsigned long runnable_load_avg ;
   unsigned long util_avg ;
   struct util_est util_est ;
} __attribute__((__aligned__(64)));
#line 413  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct sched_statistics {
   u64 wait_start ;
   u64 wait_max ;
   u64 wait_count ;
   u64 wait_sum ;
   u64 iowait_count ;
   u64 iowait_sum ;
   u64 sleep_start ;
   u64 sleep_max ;
   s64 sum_sleep_runtime ;
   u64 block_start ;
   u64 block_max ;
   u64 exec_max ;
   u64 slice_max ;
   u64 nr_migrations_cold ;
   u64 nr_failed_migrations_affine ;
   u64 nr_failed_migrations_running ;
   u64 nr_failed_migrations_hot ;
   u64 nr_forced_migrations ;
   u64 nr_wakeups ;
   u64 nr_wakeups_sync ;
   u64 nr_wakeups_migrate ;
   u64 nr_wakeups_local ;
   u64 nr_wakeups_remote ;
   u64 nr_wakeups_affine ;
   u64 nr_wakeups_affine_attempts ;
   u64 nr_wakeups_passive ;
   u64 nr_wakeups_idle ;
};
#line 449  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct sched_entity {
   struct load_weight load ;
   unsigned long runnable_weight ;
   struct rb_node run_node ;
   struct list_head group_node ;
   unsigned int on_rq ;
   u64 exec_start ;
   u64 sum_exec_runtime ;
   u64 vruntime ;
   u64 prev_sum_exec_runtime ;
   u64 nr_migrations ;
   struct sched_statistics statistics ;
   int depth ;
   struct sched_entity *parent ;
   struct cfs_rq *cfs_rq ;
   struct cfs_rq *my_q ;
   struct sched_avg avg ;
};
#line 486 
struct rt_rq;
#line 486  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct sched_rt_entity {
   struct list_head run_list ;
   unsigned long timeout ;
   unsigned long watchdog_stamp ;
   unsigned int time_slice ;
   unsigned short on_rq ;
   unsigned short on_list ;
   struct sched_rt_entity *back ;
   struct sched_rt_entity *parent ;
   struct rt_rq *rt_rq ;
   struct rt_rq *my_q ;
} __attribute__((__designated_init__));
#line 504  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct sched_dl_entity {
   struct rb_node rb_node ;
   u64 dl_runtime ;
   u64 dl_deadline ;
   u64 dl_period ;
   u64 dl_bw ;
   u64 dl_density ;
   s64 runtime ;
   u64 deadline ;
   unsigned int flags ;
   unsigned int dl_throttled : 1 ;
   unsigned int dl_boosted : 1 ;
   unsigned int dl_yielded : 1 ;
   unsigned int dl_non_contending : 1 ;
   unsigned int dl_overrun : 1 ;
   struct hrtimer dl_timer ;
   struct hrtimer inactive_timer ;
};
#line 600  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct uclamp_se {
   unsigned int value : 11 ;
   unsigned int bucket_id : 3 ;
   unsigned int active : 1 ;
   unsigned int user_defined : 1 ;
};
#line 625  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct wake_q_node {
   struct wake_q_node *next ;
};
#line 629 
struct sched_class;
#line 629 
struct cred;
#line 629 
struct key;
#line 629 
struct files_struct;
#line 629 
struct rt_mutex_waiter;
#line 629 
struct css_set;
#line 629 
struct compat_robust_list_head;
#line 629 
struct numa_group;
#line 629  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
union __anonunion_302 {
   refcount_t rcu_users ;
   struct callback_head rcu ;
};
#line 629 
struct ftrace_ret_stack;
#line 629 
struct kcov;
#line 629 
struct request_queue;
#line 629  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct task_struct {
   struct thread_info thread_info ;
   long state ;
   void *stack ;
   refcount_t usage ;
   unsigned int flags ;
   unsigned int ptrace ;
   struct llist_node wake_entry ;
   int on_cpu ;
   unsigned int cpu ;
   unsigned int wakee_flips ;
   unsigned long wakee_flip_decay_ts ;
   struct task_struct *last_wakee ;
   int recent_used_cpu ;
   int wake_cpu ;
   int on_rq ;
   int prio ;
   int static_prio ;
   int normal_prio ;
   unsigned int rt_priority ;
   struct sched_class *sched_class ;
   struct sched_entity se ;
   struct sched_rt_entity rt ;
   struct task_group *sched_task_group ;
   struct sched_dl_entity dl ;
   struct uclamp_se uclamp_req[2U] ;
   struct uclamp_se uclamp[2U] ;
   struct hlist_head preempt_notifiers ;
   unsigned int btrace_seq ;
   unsigned int policy ;
   int nr_cpus_allowed ;
   cpumask_t *cpus_ptr ;
   cpumask_t cpus_mask ;
   unsigned long rcu_tasks_nvcsw ;
   u8 rcu_tasks_holdout ;
   u8 rcu_tasks_idx ;
   int rcu_tasks_idle_cpu ;
   struct list_head rcu_tasks_holdout_list ;
   struct sched_info sched_info ;
   struct list_head tasks ;
   struct plist_node pushable_tasks ;
   struct rb_node pushable_dl_tasks ;
   struct mm_struct *mm ;
   struct mm_struct *active_mm ;
   struct vmacache vmacache ;
   struct task_rss_stat rss_stat ;
   int exit_state ;
   int exit_code ;
   int exit_signal ;
   int pdeath_signal ;
   unsigned long jobctl ;
   unsigned int personality ;
   unsigned int sched_reset_on_fork : 1 ;
   unsigned int sched_contributes_to_load : 1 ;
   unsigned int sched_migrated : 1 ;
   unsigned int sched_remote_wakeup : 1 ;
   unsigned int sched_psi_wake_requeue : 1 ;
   unsigned int  ;
   unsigned int in_execve : 1 ;
   unsigned int in_iowait : 1 ;
   unsigned int restore_sigmask : 1 ;
   unsigned int in_user_fault : 1 ;
   unsigned int brk_randomized : 1 ;
   unsigned int no_cgroup_migration : 1 ;
   unsigned int frozen : 1 ;
   unsigned int use_memdelay : 1 ;
   unsigned long atomic_flags ;
   struct restart_block restart_block ;
   pid_t pid ;
   pid_t tgid ;
   unsigned long stack_canary ;
   struct task_struct *real_parent ;
   struct task_struct *parent ;
   struct list_head children ;
   struct list_head sibling ;
   struct task_struct *group_leader ;
   struct list_head ptraced ;
   struct list_head ptrace_entry ;
   struct pid *thread_pid ;
   struct hlist_node pid_links[4U] ;
   struct list_head thread_group ;
   struct list_head thread_node ;
   struct completion *vfork_done ;
   int *set_child_tid ;
   int *clear_child_tid ;
   u64 utime ;
   u64 stime ;
   u64 gtime ;
   struct prev_cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   u64 start_time ;
   u64 start_boottime ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   struct posix_cputimers posix_cputimers ;
   struct cred *ptracer_cred ;
   struct cred *real_cred ;
   struct cred *cred ;
   struct key *cached_requested_key ;
   char comm[16U] ;
   struct nameidata *nameidata ;
   struct sysv_sem sysvsem ;
   struct sysv_shm sysvshm ;
   unsigned long last_switch_count ;
   unsigned long last_switch_time ;
   struct fs_struct *fs ;
   struct files_struct *files ;
   struct nsproxy *nsproxy ;
   struct signal_struct *signal ;
   struct sighand_struct *sighand ;
   sigset_t blocked ;
   sigset_t real_blocked ;
   sigset_t saved_sigmask ;
   struct sigpending pending ;
   unsigned long sas_ss_sp ;
   size_t sas_ss_size ;
   unsigned int sas_ss_flags ;
   struct callback_head *task_works ;
   struct audit_context *audit_context ;
   kuid_t loginuid ;
   unsigned int sessionid ;
   struct seccomp seccomp ;
   u32 parent_exec_id ;
   u32 self_exec_id ;
   spinlock_t alloc_lock ;
   raw_spinlock_t pi_lock ;
   struct wake_q_node wake_q ;
   struct rb_root_cached pi_waiters ;
   struct task_struct *pi_top_task ;
   struct rt_mutex_waiter *pi_blocked_on ;
   struct mutex_waiter *blocked_on ;
   int non_block_count ;
   unsigned int irq_events ;
   unsigned long hardirq_enable_ip ;
   unsigned long hardirq_disable_ip ;
   unsigned int hardirq_enable_event ;
   unsigned int hardirq_disable_event ;
   int hardirqs_enabled ;
   int hardirq_context ;
   unsigned long softirq_disable_ip ;
   unsigned long softirq_enable_ip ;
   unsigned int softirq_disable_event ;
   unsigned int softirq_enable_event ;
   int softirqs_enabled ;
   int softirq_context ;
   u64 curr_chain_key ;
   int lockdep_depth ;
   unsigned int lockdep_recursion ;
   struct held_lock held_locks[48U] ;
   unsigned int in_ubsan ;
   void *journal_info ;
   struct bio_list *bio_list ;
   struct blk_plug *plug ;
   struct reclaim_state *reclaim_state ;
   struct backing_dev_info *backing_dev_info ;
   struct io_context *io_context ;
   struct capture_control *capture_control ;
   unsigned long ptrace_message ;
   kernel_siginfo_t *last_siginfo ;
   struct task_io_accounting ioac ;
   unsigned int psi_flags ;
   u64 acct_rss_mem1 ;
   u64 acct_vm_mem1 ;
   u64 acct_timexpd ;
   nodemask_t mems_allowed ;
   seqcount_t mems_allowed_seq ;
   int cpuset_mem_spread_rotor ;
   int cpuset_slab_spread_rotor ;
   struct css_set *cgroups ;
   struct list_head cg_list ;
   u32 closid ;
   u32 rmid ;
   struct robust_list_head *robust_list ;
   struct compat_robust_list_head *compat_robust_list ;
   struct list_head pi_state_list ;
   struct futex_pi_state *pi_state_cache ;
   struct mutex futex_exit_mutex ;
   unsigned int futex_state ;
   struct perf_event_context *perf_event_ctxp[2U] ;
   struct mutex perf_event_mutex ;
   struct list_head perf_event_list ;
   struct mempolicy *mempolicy ;
   short il_prev ;
   short pref_node_fork ;
   int numa_scan_seq ;
   unsigned int numa_scan_period ;
   unsigned int numa_scan_period_max ;
   int numa_preferred_nid ;
   unsigned long numa_migrate_retry ;
   u64 node_stamp ;
   u64 last_task_numa_placement ;
   u64 last_sum_exec_runtime ;
   struct callback_head numa_work ;
   struct numa_group *numa_group ;
   unsigned long *numa_faults ;
   unsigned long total_numa_faults ;
   unsigned long numa_faults_locality[3U] ;
   unsigned long numa_pages_migrated ;
   struct rseq *rseq ;
   u32 rseq_sig ;
   unsigned long rseq_event_mask ;
   struct tlbflush_unmap_batch tlb_ubc ;
   union __anonunion_302 __anonCompField_task_struct_52 ;
   struct pipe_inode_info *splice_pipe ;
   struct page_frag task_frag ;
   struct task_delay_info *delays ;
   int make_it_fail ;
   unsigned int fail_nth ;
   int nr_dirtied ;
   int nr_dirtied_pause ;
   unsigned long dirty_paused_when ;
   int latency_record_count ;
   struct latency_record latency_record[32U] ;
   u64 timer_slack_ns ;
   u64 default_timer_slack_ns ;
   unsigned int kasan_depth ;
   int curr_ret_stack ;
   int curr_ret_depth ;
   struct ftrace_ret_stack *ret_stack ;
   unsigned long long ftrace_timestamp ;
   atomic_t trace_overrun ;
   atomic_t tracing_graph_pause ;
   unsigned long trace ;
   unsigned long trace_recursion ;
   unsigned int kcov_mode ;
   unsigned int kcov_size ;
   void *kcov_area ;
   struct kcov *kcov ;
   u64 kcov_handle ;
   int kcov_sequence ;
   struct mem_cgroup *memcg_in_oom ;
   gfp_t memcg_oom_gfp_mask ;
   int memcg_oom_order ;
   unsigned int memcg_nr_pages_over_high ;
   struct mem_cgroup *active_memcg ;
   struct request_queue *throttle_queue ;
   struct uprobe_task *utask ;
   unsigned int sequential_io ;
   unsigned int sequential_io_avg ;
   unsigned long task_state_change ;
   int pagefault_disabled ;
   struct task_struct *oom_reaper_list ;
   struct vm_struct *stack_vm_area ;
   refcount_t stack_refcount ;
   int patch_state ;
   void *security ;
   struct thread_struct thread ;
};
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/extable.h"
struct exception_table_entry {
   int insn ;
   int fixup ;
   int handler ;
};
#line 686  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/slab.h"
struct scatterlist;
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/uio.h"
struct iovec {
   void *iov_base ;
   __kernel_size_t iov_len ;
};
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uio.h"
struct kvec {
   void *iov_base ;
   size_t iov_len ;
};
#line 30 
struct bio_vec;
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uio.h"
union __anonunion_381 {
   struct iovec *iov ;
   struct kvec *kvec ;
   struct bio_vec *bvec ;
   struct pipe_inode_info *pipe ;
};
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uio.h"
struct __anonstruct_383 {
   unsigned int head ;
   unsigned int start_head ;
};
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uio.h"
union __anonunion_382 {
   unsigned long nr_segs ;
   struct __anonstruct_383 __anonCompField___anonunion_382_54 ;
};
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uio.h"
struct iov_iter {
   unsigned int type ;
   size_t iov_offset ;
   size_t count ;
   union __anonunion_381 __anonCompField_iov_iter_53 ;
   union __anonunion_382 __anonCompField_iov_iter_55 ;
};
#line 285  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uio.h"
typedef unsigned short __kernel_sa_family_t;
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/socket.h"
typedef __kernel_sa_family_t sa_family_t;
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/socket.h"
struct sockaddr {
   sa_family_t sa_family ;
   char sa_data[14U] ;
};
#line 49 
struct kiocb;
#line 422 
struct ns_common;
#line 423  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/socket.h"
struct __anonstruct_sync_serial_settings_386 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
};
#line 423  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/socket.h"
typedef struct __anonstruct_sync_serial_settings_386 sync_serial_settings;
#line 45  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_te1_settings_387 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
   unsigned int slot_map ;
};
#line 45  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_te1_settings_387 te1_settings;
#line 52  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_raw_hdlc_proto_388 {
   unsigned short encoding ;
   unsigned short parity ;
};
#line 52  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_raw_hdlc_proto_388 raw_hdlc_proto;
#line 57  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_389 {
   unsigned int t391 ;
   unsigned int t392 ;
   unsigned int n391 ;
   unsigned int n392 ;
   unsigned int n393 ;
   unsigned short lmi ;
   unsigned short dce ;
};
#line 57  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_389 fr_proto;
#line 67  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_390 {
   unsigned int dlci ;
};
#line 67  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_390 fr_proto_pvc;
#line 71  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_info_391 {
   unsigned int dlci ;
   char master[16U] ;
};
#line 71  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_info_391 fr_proto_pvc_info;
#line 76  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_cisco_proto_392 {
   unsigned int interval ;
   unsigned int timeout ;
};
#line 76  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_cisco_proto_392 cisco_proto;
#line 195  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if.h"
struct ifmap {
   unsigned long mem_start ;
   unsigned long mem_end ;
   unsigned short base_addr ;
   unsigned char irq ;
   unsigned char dma ;
   unsigned char port ;
};
#line 206  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if.h"
union __anonunion_ifs_ifsu_393 {
   raw_hdlc_proto *raw_hdlc ;
   cisco_proto *cisco ;
   fr_proto *fr ;
   fr_proto_pvc *fr_pvc ;
   fr_proto_pvc_info *fr_pvc_info ;
   sync_serial_settings *sync ;
   te1_settings *te1 ;
};
#line 206  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if.h"
struct if_settings {
   unsigned int type ;
   unsigned int size ;
   union __anonunion_ifs_ifsu_393 ifs_ifsu ;
};
#line 232  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if.h"
union __anonunion_ifr_ifrn_394 {
   char ifrn_name[16U] ;
};
#line 232  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if.h"
union __anonunion_ifr_ifru_395 {
   struct sockaddr ifru_addr ;
   struct sockaddr ifru_dstaddr ;
   struct sockaddr ifru_broadaddr ;
   struct sockaddr ifru_netmask ;
   struct sockaddr ifru_hwaddr ;
   short ifru_flags ;
   int ifru_ivalue ;
   int ifru_mtu ;
   struct ifmap ifru_map ;
   char ifru_slave[16U] ;
   char ifru_newname[16U] ;
   void *ifru_data ;
   struct if_settings ifru_settings ;
};
#line 232  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if.h"
struct ifreq {
   union __anonunion_ifr_ifrn_394 ifr_ifrn ;
   union __anonunion_ifr_ifru_395 ifr_ifru ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_bl.h"
struct hlist_bl_node;
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_bl.h"
struct hlist_bl_head {
   struct hlist_bl_node *first ;
};
#line 38  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_bl.h"
struct hlist_bl_node {
   struct hlist_bl_node *next ;
   struct hlist_bl_node **pprev ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockref.h"
struct __anonstruct_410 {
   spinlock_t lock ;
   int count ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockref.h"
union __anonunion_409 {
   struct __anonstruct_410 __anonCompField___anonunion_409_58 ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockref.h"
struct lockref {
   union __anonunion_409 __anonCompField_lockref_59 ;
};
#line 78  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/stringhash.h"
struct path;
#line 79 
struct vfsmount;
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dcache.h"
struct __anonstruct_412 {
   u32 hash ;
   u32 len ;
};
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dcache.h"
union __anonunion_411 {
   struct __anonstruct_412 __anonCompField___anonunion_411_60 ;
   u64 hash_len ;
};
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dcache.h"
struct qstr {
   union __anonunion_411 __anonCompField_qstr_61 ;
   unsigned char *name ;
};
#line 89 
struct dentry_operations;
#line 89 
struct super_block;
#line 89  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dcache.h"
union __anonunion_413 {
   struct list_head d_lru ;
   wait_queue_head_t *d_wait ;
};
#line 89  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dcache.h"
union __anonunion_d_u_414 {
   struct hlist_node d_alias ;
   struct hlist_bl_node d_in_lookup_hash ;
   struct callback_head d_rcu ;
};
#line 89  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dcache.h"
struct dentry {
   unsigned int d_flags ;
   seqcount_t d_seq ;
   struct hlist_bl_node d_hash ;
   struct dentry *d_parent ;
   struct qstr d_name ;
   struct inode *d_inode ;
   unsigned char d_iname[32U] ;
   struct lockref d_lockref ;
   struct dentry_operations *d_op ;
   struct super_block *d_sb ;
   unsigned long d_time ;
   void *d_fsdata ;
   union __anonunion_413 __anonCompField_dentry_62 ;
   struct list_head d_child ;
   struct list_head d_subdirs ;
   union __anonunion_d_u_414 d_u ;
} __attribute__((__designated_init__));
#line 135  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dcache.h"
struct dentry_operations {
   int (*d_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_weak_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_hash)(struct dentry *, struct qstr *) ;
   int (*d_compare)(struct dentry *, unsigned int , char *, struct qstr *) ;
   int (*d_delete)(struct dentry *) ;
   int (*d_init)(struct dentry *) ;
   void (*d_release)(struct dentry *) ;
   void (*d_prune)(struct dentry *) ;
   void (*d_iput)(struct dentry *, struct inode *) ;
   char *(*d_dname)(struct dentry *, char *, int ) ;
   struct vfsmount *(*d_automount)(struct path *) ;
   int (*d_manage)(struct path *, bool ) ;
   struct dentry *(*d_real)(struct dentry *, struct inode *) ;
} __attribute__((__aligned__(64)));
#line 8  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/path.h"
struct path {
   struct vfsmount *mnt ;
   struct dentry *dentry ;
} __attribute__((__designated_init__));
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/shrinker.h"
struct shrink_control {
   gfp_t gfp_mask ;
   int nid ;
   unsigned long nr_to_scan ;
   unsigned long nr_scanned ;
   struct mem_cgroup *memcg ;
};
#line 60  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/shrinker.h"
struct shrinker {
   unsigned long (*count_objects)(struct shrinker *, struct shrink_control *) ;
   unsigned long (*scan_objects)(struct shrinker *, struct shrink_control *) ;
   long batch ;
   int seeks ;
   unsigned int flags ;
   struct list_head list ;
   int id ;
   atomic_long_t *nr_deferred ;
};
#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_lru.h"
struct list_lru_one {
   struct list_head list ;
   long nr_items ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_lru.h"
struct list_lru_memcg {
   struct callback_head rcu ;
   struct list_lru_one *lru[0U] ;
};
#line 40  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_lru.h"
struct list_lru_node {
   spinlock_t lock ;
   struct list_lru_one lru ;
   struct list_lru_memcg *memcg_lrus ;
   long nr_items ;
} __attribute__((__aligned__(64)));
#line 52  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_lru.h"
struct list_lru {
   struct list_lru_node *node ;
   struct list_head list ;
   int shrinker_id ;
   bool memcg_aware ;
};
#line 292  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/xarray.h"
struct xarray {
   spinlock_t xa_lock ;
   gfp_t xa_flags ;
   void *xa_head ;
};
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/capability.h"
struct kernel_cap_struct {
   __u32 cap[2U] ;
};
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/capability.h"
typedef struct kernel_cap_struct kernel_cap_t;
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fiemap.h"
struct fiemap_extent {
   __u64 fe_logical ;
   __u64 fe_physical ;
   __u64 fe_length ;
   __u64 fe_reserved64[2U] ;
   __u32 fe_flags ;
   __u32 fe_reserved[3U] ;
};
#line 39 
enum migrate_mode {
    MIGRATE_ASYNC = 0,
    MIGRATE_SYNC_LIGHT = 1,
    MIGRATE_SYNC = 2,
    MIGRATE_SYNC_NO_COPY = 3
};
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rcuwait.h"
struct rcuwait {
   struct task_struct *task ;
};
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rcu_sync.h"
struct rcu_sync {
   int gp_state ;
   int gp_count ;
   wait_queue_head_t gp_wait ;
   struct callback_head cb_head ;
};
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/percpu-rwsem.h"
struct percpu_rw_semaphore {
   struct rcu_sync rss ;
   unsigned int *read_count ;
   struct rw_semaphore rw_sem ;
   struct rcuwait writer ;
   int readers_block ;
};
#line 10  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/delayed_call.h"
struct delayed_call {
   void (*fn)(void *) ;
   void *arg ;
};
#line 36  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/uuid.h"
struct __anonstruct_uuid_t_432 {
   __u8 b[16U] ;
};
#line 36  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/uuid.h"
typedef struct __anonstruct_uuid_t_432 uuid_t;
#line 87  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uuid.h"
typedef u32 errseq_t;
#line 72  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/iocontext.h"
union __anonunion_433 {
   struct list_head q_node ;
   struct kmem_cache *__rcu_icq_cache ;
};
#line 72  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/iocontext.h"
union __anonunion_434 {
   struct hlist_node ioc_node ;
   struct callback_head __rcu_head ;
};
#line 72  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/iocontext.h"
struct io_cq {
   struct request_queue *q ;
   struct io_context *ioc ;
   union __anonunion_433 __anonCompField_io_cq_65 ;
   union __anonunion_434 __anonCompField_io_cq_66 ;
   unsigned int flags ;
};
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/iocontext.h"
struct io_context {
   atomic_long_t refcount ;
   atomic_t active_ref ;
   atomic_t nr_tasks ;
   spinlock_t lock ;
   unsigned short ioprio ;
   int nr_batch_requests ;
   unsigned long last_waited ;
   struct xarray icq_tree ;
   struct io_cq *icq_hint ;
   struct hlist_head icq_list ;
   struct work_struct release_work ;
};
#line 286  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fs.h"
struct bdi_writeback;
#line 288 
struct export_operations;
#line 290 
struct kobject;
#line 292 
struct kstatfs;
#line 293 
struct swap_info_struct;
#line 294 
struct fscrypt_info;
#line 295 
struct fscrypt_operations;
#line 296 
struct fsverity_info;
#line 297 
struct fsverity_operations;
#line 298 
struct fs_context;
#line 299 
struct fs_parameter_description;
#line 224  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct iattr {
   unsigned int ia_valid ;
   umode_t ia_mode ;
   kuid_t ia_uid ;
   kgid_t ia_gid ;
   loff_t ia_size ;
   struct timespec64 ia_atime ;
   struct timespec64 ia_mtime ;
   struct timespec64 ia_ctime ;
   struct file *ia_file ;
};
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/percpu_counter.h"
struct percpu_counter {
   raw_spinlock_t lock ;
   s64 count ;
   struct list_head list ;
   s32 *counters ;
};
#line 214  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dqblk_xfs.h"
struct dquot;
#line 215 
struct kqid;
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/projid.h"
typedef __kernel_uid32_t projid_t;
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/projid.h"
struct __anonstruct_kprojid_t_435 {
   projid_t val ;
};
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/projid.h"
typedef struct __anonstruct_kprojid_t_435 kprojid_t;
#line 180  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/quota.h"
enum quota_type {
    USRQUOTA = 0,
    GRPQUOTA = 1,
    PRJQUOTA = 2
};
#line 66  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
typedef long long qsize_t;
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
union __anonunion_436 {
   kuid_t uid ;
   kgid_t gid ;
   kprojid_t projid ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct kqid {
   union __anonunion_436 __anonCompField_kqid_67 ;
   enum quota_type type ;
};
#line 205  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct mem_dqblk {
   qsize_t dqb_bhardlimit ;
   qsize_t dqb_bsoftlimit ;
   qsize_t dqb_curspace ;
   qsize_t dqb_rsvspace ;
   qsize_t dqb_ihardlimit ;
   qsize_t dqb_isoftlimit ;
   qsize_t dqb_curinodes ;
   time64_t dqb_btime ;
   time64_t dqb_itime ;
};
#line 216 
struct quota_format_type;
#line 222  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct mem_dqinfo {
   struct quota_format_type *dqi_format ;
   int dqi_fmt_id ;
   struct list_head dqi_dirty_list ;
   unsigned long dqi_flags ;
   unsigned int dqi_bgrace ;
   unsigned int dqi_igrace ;
   qsize_t dqi_max_spc_limit ;
   qsize_t dqi_max_ino_limit ;
   void *dqi_priv ;
};
#line 294  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct dquot {
   struct hlist_node dq_hash ;
   struct list_head dq_inuse ;
   struct list_head dq_free ;
   struct list_head dq_dirty ;
   struct mutex dq_lock ;
   spinlock_t dq_dqb_lock ;
   atomic_t dq_count ;
   struct super_block *dq_sb ;
   struct kqid dq_id ;
   loff_t dq_off ;
   unsigned long dq_flags ;
   struct mem_dqblk dq_dqb ;
};
#line 310  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct quota_format_ops {
   int (*check_quota_file)(struct super_block *, int ) ;
   int (*read_file_info)(struct super_block *, int ) ;
   int (*write_file_info)(struct super_block *, int ) ;
   int (*free_file_info)(struct super_block *, int ) ;
   int (*read_dqblk)(struct dquot *) ;
   int (*commit_dqblk)(struct dquot *) ;
   int (*release_dqblk)(struct dquot *) ;
   int (*get_next_id)(struct super_block *, struct kqid *) ;
};
#line 322  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct dquot_operations {
   int (*write_dquot)(struct dquot *) ;
   struct dquot *(*alloc_dquot)(struct super_block *, int ) ;
   void (*destroy_dquot)(struct dquot *) ;
   int (*acquire_dquot)(struct dquot *) ;
   int (*release_dquot)(struct dquot *) ;
   int (*mark_dirty)(struct dquot *) ;
   int (*write_info)(struct super_block *, int ) ;
   qsize_t *(*get_reserved_space)(struct inode *) ;
   int (*get_projid)(struct inode *, kprojid_t *) ;
   int (*get_inode_usage)(struct inode *, qsize_t *) ;
   int (*get_next_id)(struct super_block *, struct kqid *) ;
};
#line 343  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct qc_dqblk {
   int d_fieldmask ;
   u64 d_spc_hardlimit ;
   u64 d_spc_softlimit ;
   u64 d_ino_hardlimit ;
   u64 d_ino_softlimit ;
   u64 d_space ;
   u64 d_ino_count ;
   s64 d_ino_timer ;
   s64 d_spc_timer ;
   int d_ino_warns ;
   int d_spc_warns ;
   u64 d_rt_spc_hardlimit ;
   u64 d_rt_spc_softlimit ;
   u64 d_rt_space ;
   s64 d_rt_spc_timer ;
   int d_rt_spc_warns ;
};
#line 395  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct qc_type_state {
   unsigned int flags ;
   unsigned int spc_timelimit ;
   unsigned int ino_timelimit ;
   unsigned int rt_spc_timelimit ;
   unsigned int spc_warnlimit ;
   unsigned int ino_warnlimit ;
   unsigned int rt_spc_warnlimit ;
   unsigned long long ino ;
   blkcnt_t blocks ;
   blkcnt_t nextents ;
};
#line 409  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct qc_state {
   unsigned int s_incoredqs ;
   struct qc_type_state s_state[3U] ;
};
#line 415  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct qc_info {
   int i_fieldmask ;
   unsigned int i_flags ;
   unsigned int i_spc_timelimit ;
   unsigned int i_ino_timelimit ;
   unsigned int i_rt_spc_timelimit ;
   unsigned int i_spc_warnlimit ;
   unsigned int i_ino_warnlimit ;
   unsigned int i_rt_spc_warnlimit ;
};
#line 428  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct quotactl_ops {
   int (*quota_on)(struct super_block *, int , int , struct path *) ;
   int (*quota_off)(struct super_block *, int ) ;
   int (*quota_enable)(struct super_block *, unsigned int ) ;
   int (*quota_disable)(struct super_block *, unsigned int ) ;
   int (*quota_sync)(struct super_block *, int ) ;
   int (*set_info)(struct super_block *, int , struct qc_info *) ;
   int (*get_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*get_nextdqblk)(struct super_block *, struct kqid *, struct qc_dqblk *) ;
   int (*set_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*get_state)(struct super_block *, struct qc_state *) ;
   int (*rm_xquota)(struct super_block *, unsigned int ) ;
};
#line 443  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct quota_format_type {
   int qf_fmt_id ;
   struct quota_format_ops *qf_ops ;
   struct module *qf_owner ;
   struct quota_format_type *qf_next ;
};
#line 518  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct quota_info {
   unsigned int flags ;
   struct rw_semaphore dqio_sem ;
   struct inode *files[3U] ;
   struct mem_dqinfo info[3U] ;
   struct quota_format_ops *ops[3U] ;
};
#line 538 
struct writeback_control;
#line 539 
enum rw_hint {
    WRITE_LIFE_NOT_SET = 0,
    WRITE_LIFE_NONE = 1,
    WRITE_LIFE_SHORT = 2,
    WRITE_LIFE_MEDIUM = 3,
    WRITE_LIFE_LONG = 4,
    WRITE_LIFE_EXTREME = 5
};
#line 318  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct kiocb {
   struct file *ki_filp ;
   loff_t ki_pos ;
   void (*ki_complete)(struct kiocb *, long , long ) ;
   void *private ;
   int ki_flags ;
   u16 ki_hint ;
   u16 ki_ioprio ;
   unsigned int ki_cookie ;
};
#line 362  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct address_space_operations {
   int (*writepage)(struct page *, struct writeback_control *) ;
   int (*readpage)(struct file *, struct page *) ;
   int (*writepages)(struct address_space *, struct writeback_control *) ;
   int (*set_page_dirty)(struct page *) ;
   int (*readpages)(struct file *, struct address_space *, struct list_head *, unsigned int ) ;
   int (*write_begin)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page **, void **) ;
   int (*write_end)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page *, void *) ;
   sector_t (*bmap)(struct address_space *, sector_t ) ;
   void (*invalidatepage)(struct page *, unsigned int , unsigned int ) ;
   int (*releasepage)(struct page *, gfp_t ) ;
   void (*freepage)(struct page *) ;
   ssize_t (*direct_IO)(struct kiocb *, struct iov_iter *) ;
   int (*migratepage)(struct address_space *, struct page *, struct page *, enum migrate_mode ) ;
   bool (*isolate_page)(struct page *, isolate_mode_t ) ;
   void (*putback_page)(struct page *) ;
   int (*launder_page)(struct page *) ;
   int (*is_partially_uptodate)(struct page *, unsigned long , unsigned long ) ;
   void (*is_dirty_writeback)(struct page *, bool *, bool *) ;
   int (*error_remove_page)(struct address_space *, struct page *) ;
   int (*swap_activate)(struct swap_info_struct *, struct file *, sector_t *) ;
   void (*swap_deactivate)(struct file *) ;
};
#line 445  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct address_space {
   struct inode *host ;
   struct xarray i_pages ;
   gfp_t gfp_mask ;
   atomic_t i_mmap_writable ;
   atomic_t nr_thps ;
   struct rb_root_cached i_mmap ;
   struct rw_semaphore i_mmap_rwsem ;
   unsigned long nrpages ;
   unsigned long nrexceptional ;
   unsigned long writeback_index ;
   struct address_space_operations *a_ops ;
   unsigned long flags ;
   errseq_t wb_err ;
   spinlock_t private_lock ;
   struct list_head private_list ;
   void *private_data ;
} __attribute__((__designated_init__, __aligned__(8)));
#line 473 
struct hd_struct;
#line 473 
struct gendisk;
#line 473  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct block_device {
   dev_t bd_dev ;
   int bd_openers ;
   struct inode *bd_inode ;
   struct super_block *bd_super ;
   struct mutex bd_mutex ;
   void *bd_claiming ;
   void *bd_holder ;
   int bd_holders ;
   bool bd_write_holder ;
   struct list_head bd_holder_disks ;
   struct block_device *bd_contains ;
   unsigned int bd_block_size ;
   u8 bd_partno ;
   struct hd_struct *bd_part ;
   unsigned int bd_part_count ;
   int bd_invalidated ;
   struct gendisk *bd_disk ;
   struct request_queue *bd_queue ;
   struct backing_dev_info *bd_bdi ;
   struct list_head bd_list ;
   unsigned long bd_private ;
   int bd_fsfreeze_count ;
   struct mutex bd_fsfreeze_mutex ;
} __attribute__((__designated_init__));
#line 587 
struct posix_acl;
#line 614 
struct fsnotify_mark_connector;
#line 628 
struct inode_operations;
#line 628  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
union __anonunion_441 {
   unsigned int i_nlink ;
   unsigned int __i_nlink ;
};
#line 628  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
union __anonunion_442 {
   struct hlist_head i_dentry ;
   struct callback_head i_rcu ;
};
#line 628  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
union __anonunion_443 {
   struct file_operations *i_fop ;
   void (*free_inode)(struct inode *) ;
};
#line 628 
struct file_lock_context;
#line 628  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
union __anonunion_444 {
   struct pipe_inode_info *i_pipe ;
   struct block_device *i_bdev ;
   struct cdev *i_cdev ;
   char *i_link ;
   unsigned int i_dir_seq ;
};
#line 628  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct inode {
   umode_t i_mode ;
   unsigned short i_opflags ;
   kuid_t i_uid ;
   kgid_t i_gid ;
   unsigned int i_flags ;
   struct posix_acl *i_acl ;
   struct posix_acl *i_default_acl ;
   struct inode_operations *i_op ;
   struct super_block *i_sb ;
   struct address_space *i_mapping ;
   void *i_security ;
   unsigned long i_ino ;
   union __anonunion_441 __anonCompField_inode_68 ;
   dev_t i_rdev ;
   loff_t i_size ;
   struct timespec64 i_atime ;
   struct timespec64 i_mtime ;
   struct timespec64 i_ctime ;
   spinlock_t i_lock ;
   unsigned short i_bytes ;
   u8 i_blkbits ;
   u8 i_write_hint ;
   blkcnt_t i_blocks ;
   unsigned long i_state ;
   struct rw_semaphore i_rwsem ;
   unsigned long dirtied_when ;
   unsigned long dirtied_time_when ;
   struct hlist_node i_hash ;
   struct list_head i_io_list ;
   struct bdi_writeback *i_wb ;
   int i_wb_frn_winner ;
   u16 i_wb_frn_avg_time ;
   u16 i_wb_frn_history ;
   struct list_head i_lru ;
   struct list_head i_sb_list ;
   struct list_head i_wb_list ;
   union __anonunion_442 __anonCompField_inode_69 ;
   atomic64_t i_version ;
   atomic_t i_count ;
   atomic_t i_dio_count ;
   atomic_t i_writecount ;
   atomic_t i_readcount ;
   union __anonunion_443 __anonCompField_inode_70 ;
   struct file_lock_context *i_flctx ;
   struct address_space i_data ;
   struct list_head i_devices ;
   union __anonunion_444 __anonCompField_inode_71 ;
   __u32 i_generation ;
   __u32 i_fsnotify_mask ;
   struct fsnotify_mark_connector *i_fsnotify_marks ;
   struct fscrypt_info *i_crypt_info ;
   struct fsverity_info *i_verity_info ;
   void *i_private ;
} __attribute__((__designated_init__));
#line 904  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct fown_struct {
   rwlock_t lock ;
   struct pid *pid ;
   enum pid_type pid_type ;
   kuid_t uid ;
   kuid_t euid ;
   int signum ;
};
#line 915  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct file_ra_state {
   unsigned long start ;
   unsigned int size ;
   unsigned int async_size ;
   unsigned int ra_pages ;
   unsigned int mmap_miss ;
   loff_t prev_pos ;
};
#line 935  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
union __anonunion_f_u_445 {
   struct llist_node fu_llist ;
   struct callback_head fu_rcuhead ;
};
#line 935  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct file {
   union __anonunion_f_u_445 f_u ;
   struct path f_path ;
   struct inode *f_inode ;
   struct file_operations *f_op ;
   spinlock_t f_lock ;
   enum rw_hint f_write_hint ;
   atomic_long_t f_count ;
   unsigned int f_flags ;
   fmode_t f_mode ;
   struct mutex f_pos_lock ;
   loff_t f_pos ;
   struct fown_struct f_owner ;
   struct cred *f_cred ;
   struct file_ra_state f_ra ;
   u64 f_version ;
   void *f_security ;
   void *private_data ;
   struct list_head f_ep_links ;
   struct list_head f_tfile_llink ;
   struct address_space *f_mapping ;
   errseq_t f_wb_err ;
} __attribute__((__designated_init__, __aligned__(4)));
#line 988  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
typedef void *fl_owner_t;
#line 1026 
struct file_lock;
#line 1029  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct file_lock_operations {
   void (*fl_copy_lock)(struct file_lock *, struct file_lock *) ;
   void (*fl_release_private)(struct file_lock *) ;
};
#line 1034  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct lock_manager_operations {
   fl_owner_t (*lm_get_owner)(fl_owner_t ) ;
   void (*lm_put_owner)(fl_owner_t ) ;
   void (*lm_notify)(struct file_lock *) ;
   int (*lm_grant)(struct file_lock *, int ) ;
   bool (*lm_break)(struct file_lock *) ;
   int (*lm_change)(struct file_lock *, int , struct list_head *) ;
   void (*lm_setup)(struct file_lock *, void **) ;
};
#line 1052 
struct net;
#line 1058 
struct nlm_lockowner;
#line 10  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/nfs_fs_i.h"
struct nfs_lock_info {
   u32 state ;
   struct nlm_lockowner *owner ;
   struct list_head list ;
};
#line 15 
struct nfs4_lock_state;
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/nfs_fs_i.h"
struct nfs4_lock_info {
   struct nfs4_lock_state *owner ;
};
#line 1079  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct fasync_struct;
#line 1079  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct __anonstruct_afs_447 {
   struct list_head link ;
   int state ;
   unsigned int debug_id ;
};
#line 1079  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
union __anonunion_fl_u_446 {
   struct nfs_lock_info nfs_fl ;
   struct nfs4_lock_info nfs4_fl ;
   struct __anonstruct_afs_447 afs ;
};
#line 1079  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct file_lock {
   struct file_lock *fl_blocker ;
   struct list_head fl_list ;
   struct hlist_node fl_link ;
   struct list_head fl_blocked_requests ;
   struct list_head fl_blocked_member ;
   fl_owner_t fl_owner ;
   unsigned int fl_flags ;
   unsigned char fl_type ;
   unsigned int fl_pid ;
   int fl_link_cpu ;
   wait_queue_head_t fl_wait ;
   struct file *fl_file ;
   loff_t fl_start ;
   loff_t fl_end ;
   struct fasync_struct *fl_fasync ;
   unsigned long fl_break_time ;
   unsigned long fl_downgrade_time ;
   struct file_lock_operations *fl_ops ;
   struct lock_manager_operations *fl_lmops ;
   union __anonunion_fl_u_446 fl_u ;
} __attribute__((__designated_init__));
#line 1117  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct file_lock_context {
   spinlock_t flc_lock ;
   struct list_head flc_flock ;
   struct list_head flc_posix ;
   struct list_head flc_lease ;
};
#line 1331  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct fasync_struct {
   rwlock_t fa_lock ;
   int magic ;
   int fa_fd ;
   struct fasync_struct *fa_next ;
   struct file *fa_file ;
   struct callback_head fa_rcu ;
};
#line 1418  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct sb_writers {
   int frozen ;
   wait_queue_head_t wait_unfrozen ;
   struct percpu_rw_semaphore rw_sem[3U] ;
};
#line 1424 
struct super_operations;
#line 1424 
struct xattr_handler;
#line 1424 
struct mtd_info;
#line 1424  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct super_block {
   struct list_head s_list ;
   dev_t s_dev ;
   unsigned char s_blocksize_bits ;
   unsigned long s_blocksize ;
   loff_t s_maxbytes ;
   struct file_system_type *s_type ;
   struct super_operations *s_op ;
   struct dquot_operations *dq_op ;
   struct quotactl_ops *s_qcop ;
   struct export_operations *s_export_op ;
   unsigned long s_flags ;
   unsigned long s_iflags ;
   unsigned long s_magic ;
   struct dentry *s_root ;
   struct rw_semaphore s_umount ;
   int s_count ;
   atomic_t s_active ;
   void *s_security ;
   struct xattr_handler **s_xattr ;
   struct fscrypt_operations *s_cop ;
   struct key *s_master_keys ;
   struct fsverity_operations *s_vop ;
   struct hlist_bl_head s_roots ;
   struct list_head s_mounts ;
   struct block_device *s_bdev ;
   struct backing_dev_info *s_bdi ;
   struct mtd_info *s_mtd ;
   struct hlist_node s_instances ;
   unsigned int s_quota_types ;
   struct quota_info s_dquot ;
   struct sb_writers s_writers ;
   void *s_fs_info ;
   u32 s_time_gran ;
   time64_t s_time_min ;
   time64_t s_time_max ;
   __u32 s_fsnotify_mask ;
   struct fsnotify_mark_connector *s_fsnotify_marks ;
   char s_id[32U] ;
   uuid_t s_uuid ;
   unsigned int s_max_links ;
   fmode_t s_mode ;
   struct mutex s_vfs_rename_mutex ;
   char *s_subtype ;
   struct dentry_operations *s_d_op ;
   int cleancache_poolid ;
   struct shrinker s_shrink ;
   atomic_long_t s_remove_count ;
   atomic_long_t s_fsnotify_inode_refs ;
   int s_readonly_remount ;
   struct workqueue_struct *s_dio_done_wq ;
   struct hlist_head s_pins ;
   struct user_namespace *s_user_ns ;
   struct list_lru s_dentry_lru ;
   struct list_lru s_inode_lru ;
   struct callback_head rcu ;
   struct work_struct destroy_work ;
   struct mutex s_sync_lock ;
   int s_stack_depth ;
   spinlock_t s_inode_list_lock ;
   struct list_head s_inodes ;
   spinlock_t s_inode_wblist_lock ;
   struct list_head s_inodes_wb ;
} __attribute__((__designated_init__));
#line 1746  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct fiemap_extent_info {
   unsigned int fi_flags ;
   unsigned int fi_extents_mapped ;
   unsigned int fi_extents_max ;
   struct fiemap_extent *fi_extents_start ;
};
#line 1756 
struct dir_context;
#line 1767  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct dir_context {
   int (*actor)(struct dir_context *, char *, int , loff_t , u64 , unsigned int ) ;
   loff_t pos ;
};
#line 1821  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct file_operations {
   struct module *owner ;
   loff_t (*llseek)(struct file *, loff_t , int ) ;
   ssize_t (*read)(struct file *, char *, size_t , loff_t *) ;
   ssize_t (*write)(struct file *, char *, size_t , loff_t *) ;
   ssize_t (*read_iter)(struct kiocb *, struct iov_iter *) ;
   ssize_t (*write_iter)(struct kiocb *, struct iov_iter *) ;
   int (*iopoll)(struct kiocb *, bool ) ;
   int (*iterate)(struct file *, struct dir_context *) ;
   int (*iterate_shared)(struct file *, struct dir_context *) ;
   __poll_t (*poll)(struct file *, struct poll_table_struct *) ;
   long (*unlocked_ioctl)(struct file *, unsigned int , unsigned long ) ;
   long (*compat_ioctl)(struct file *, unsigned int , unsigned long ) ;
   int (*mmap)(struct file *, struct vm_area_struct *) ;
   unsigned long mmap_supported_flags ;
   int (*open)(struct inode *, struct file *) ;
   int (*flush)(struct file *, fl_owner_t ) ;
   int (*release)(struct inode *, struct file *) ;
   int (*fsync)(struct file *, loff_t , loff_t , int ) ;
   int (*fasync)(int , struct file *, int ) ;
   int (*lock)(struct file *, int , struct file_lock *) ;
   ssize_t (*sendpage)(struct file *, struct page *, int , size_t , loff_t *, int ) ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   int (*check_flags)(int ) ;
   int (*flock)(struct file *, int , struct file_lock *) ;
   ssize_t (*splice_write)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ) ;
   ssize_t (*splice_read)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ) ;
   int (*setlease)(struct file *, long , struct file_lock **, void **) ;
   long (*fallocate)(struct file *, int , loff_t , loff_t ) ;
   void (*show_fdinfo)(struct seq_file *, struct file *) ;
   ssize_t (*copy_file_range)(struct file *, loff_t , struct file *, loff_t , size_t , unsigned int ) ;
   loff_t (*remap_file_range)(struct file *, loff_t , struct file *, loff_t , loff_t , unsigned int ) ;
   int (*fadvise)(struct file *, loff_t , loff_t , int ) ;
} __attribute__((__designated_init__));
#line 1863  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct inode_operations {
   struct dentry *(*lookup)(struct inode *, struct dentry *, unsigned int ) ;
   char *(*get_link)(struct dentry *, struct inode *, struct delayed_call *) ;
   int (*permission)(struct inode *, int ) ;
   struct posix_acl *(*get_acl)(struct inode *, int ) ;
   int (*readlink)(struct dentry *, char *, int ) ;
   int (*create)(struct inode *, struct dentry *, umode_t , bool ) ;
   int (*link)(struct dentry *, struct inode *, struct dentry *) ;
   int (*unlink)(struct inode *, struct dentry *) ;
   int (*symlink)(struct inode *, struct dentry *, char *) ;
   int (*mkdir)(struct inode *, struct dentry *, umode_t ) ;
   int (*rmdir)(struct inode *, struct dentry *) ;
   int (*mknod)(struct inode *, struct dentry *, umode_t , dev_t ) ;
   int (*rename)(struct inode *, struct dentry *, struct inode *, struct dentry *, unsigned int ) ;
   int (*setattr)(struct dentry *, struct iattr *) ;
   int (*getattr)(struct path *, struct kstat *, u32 , unsigned int ) ;
   ssize_t (*listxattr)(struct dentry *, char *, size_t ) ;
   int (*fiemap)(struct inode *, struct fiemap_extent_info *, u64 , u64 ) ;
   int (*update_time)(struct inode *, struct timespec64 *, int ) ;
   int (*atomic_open)(struct inode *, struct dentry *, struct file *, unsigned int , umode_t ) ;
   int (*tmpfile)(struct inode *, struct dentry *, umode_t ) ;
   int (*set_acl)(struct inode *, struct posix_acl *, int ) ;
} __attribute__((__aligned__(64)));
#line 1942  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct super_operations {
   struct inode *(*alloc_inode)(struct super_block *) ;
   void (*destroy_inode)(struct inode *) ;
   void (*free_inode)(struct inode *) ;
   void (*dirty_inode)(struct inode *, int ) ;
   int (*write_inode)(struct inode *, struct writeback_control *) ;
   int (*drop_inode)(struct inode *) ;
   void (*evict_inode)(struct inode *) ;
   void (*put_super)(struct super_block *) ;
   int (*sync_fs)(struct super_block *, int ) ;
   int (*freeze_super)(struct super_block *) ;
   int (*freeze_fs)(struct super_block *) ;
   int (*thaw_super)(struct super_block *) ;
   int (*unfreeze_fs)(struct super_block *) ;
   int (*statfs)(struct dentry *, struct kstatfs *) ;
   int (*remount_fs)(struct super_block *, int *, char *) ;
   void (*umount_begin)(struct super_block *) ;
   int (*show_options)(struct seq_file *, struct dentry *) ;
   int (*show_devname)(struct seq_file *, struct dentry *) ;
   int (*show_path)(struct seq_file *, struct dentry *) ;
   int (*show_stats)(struct seq_file *, struct dentry *) ;
   ssize_t (*quota_read)(struct super_block *, int , char *, size_t , loff_t ) ;
   ssize_t (*quota_write)(struct super_block *, int , char *, size_t , loff_t ) ;
   struct dquot **(*get_dquots)(struct inode *) ;
   int (*bdev_try_to_free_page)(struct super_block *, struct page *, gfp_t ) ;
   long (*nr_cached_objects)(struct super_block *, struct shrink_control *) ;
   long (*free_cached_objects)(struct super_block *, struct shrink_control *) ;
};
#line 2217  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct file_system_type {
   char *name ;
   int fs_flags ;
   int (*init_fs_context)(struct fs_context *) ;
   struct fs_parameter_description *parameters ;
   struct dentry *(*mount)(struct file_system_type *, int , char *, void *) ;
   void (*kill_sb)(struct super_block *) ;
   struct module *owner ;
   struct file_system_type *next ;
   struct hlist_head fs_supers ;
   struct lock_class_key s_lock_key ;
   struct lock_class_key s_umount_key ;
   struct lock_class_key s_vfs_rename_key ;
   struct lock_class_key s_writers_key[3U] ;
   struct lock_class_key i_lock_key ;
   struct lock_class_key i_mutex_key ;
   struct lock_class_key i_mutex_dir_key ;
};
#line 3599 
struct sock;
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/compat.h"
typedef s32 compat_long_t;
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/compat.h"
typedef u32 compat_uptr_t;
#line 367  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/compat.h"
struct compat_robust_list {
   compat_uptr_t next ;
};
#line 371  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/compat.h"
struct compat_robust_list_head {
   struct compat_robust_list list ;
   compat_long_t futex_offset ;
   compat_uptr_t list_op_pending ;
};
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ioport.h"
struct resource {
   resource_size_t start ;
   resource_size_t end ;
   char *name ;
   unsigned long flags ;
   unsigned long desc ;
   struct resource *parent ;
   struct resource *sibling ;
   struct resource *child ;
};
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memremap.h"
struct vmem_altmap {
   unsigned long base_pfn ;
   unsigned long end_pfn ;
   unsigned long reserve ;
   unsigned long free ;
   unsigned long align ;
   unsigned long alloc ;
};
#line 26 
enum memory_type {
    MEMORY_DEVICE_PRIVATE = 1,
    MEMORY_DEVICE_FS_DAX = 2,
    MEMORY_DEVICE_DEVDAX = 3,
    MEMORY_DEVICE_PCI_P2PDMA = 4
};
#line 67  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memremap.h"
struct dev_pagemap_ops {
   void (*page_free)(struct page *) ;
   void (*kill)(struct dev_pagemap *) ;
   void (*cleanup)(struct dev_pagemap *) ;
   vm_fault_t (*migrate_to_ram)(struct vm_fault *) ;
};
#line 107  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memremap.h"
struct dev_pagemap {
   struct vmem_altmap altmap ;
   struct resource res ;
   struct percpu_ref *ref ;
   struct percpu_ref internal_ref ;
   struct completion done ;
   enum memory_type type ;
   unsigned int flags ;
   struct dev_pagemap_ops *ops ;
};
#line 417  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm.h"
struct vm_fault {
   struct vm_area_struct *vma ;
   unsigned int flags ;
   gfp_t gfp_mask ;
   unsigned long pgoff ;
   unsigned long address ;
   pmd_t *pmd ;
   pud_t *pud ;
   pte_t orig_pte ;
   struct page *cow_page ;
   struct mem_cgroup *memcg ;
   struct page *page ;
   pte_t *pte ;
   spinlock_t *ptl ;
   pgtable_t prealloc_pte ;
};
#line 448 
enum page_entry_size {
    PE_SIZE_PTE = 0,
    PE_SIZE_PMD = 1,
    PE_SIZE_PUD = 2
};
#line 467  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm.h"
struct vm_operations_struct {
   void (*open)(struct vm_area_struct *) ;
   void (*close)(struct vm_area_struct *) ;
   int (*split)(struct vm_area_struct *, unsigned long ) ;
   int (*mremap)(struct vm_area_struct *) ;
   vm_fault_t (*fault)(struct vm_fault *) ;
   vm_fault_t (*huge_fault)(struct vm_fault *, enum page_entry_size ) ;
   void (*map_pages)(struct vm_fault *, unsigned long , unsigned long ) ;
   unsigned long (*pagesize)(struct vm_area_struct *) ;
   vm_fault_t (*page_mkwrite)(struct vm_fault *) ;
   vm_fault_t (*pfn_mkwrite)(struct vm_fault *) ;
   int (*access)(struct vm_area_struct *, unsigned long , void *, int , int ) ;
   char *(*name)(struct vm_area_struct *) ;
   int (*set_policy)(struct vm_area_struct *, struct mempolicy *) ;
   struct mempolicy *(*get_policy)(struct vm_area_struct *, unsigned long ) ;
   struct page *(*find_special_page)(struct vm_area_struct *, unsigned long ) ;
};
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bvec.h"
struct bio_vec {
   struct page *bv_page ;
   unsigned int bv_len ;
   unsigned int bv_offset ;
};
#line 125  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/net.h"
struct sk_buff;
#line 162  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/checksum_64.h"
struct in6_addr;
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/idr.h"
struct idr {
   struct xarray idr_rt ;
   unsigned int idr_base ;
   unsigned int idr_next ;
};
#line 323 
struct kernfs_open_node;
#line 324 
struct kernfs_iattrs;
#line 84  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_root;
#line 84  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_elem_dir {
   unsigned long subdirs ;
   struct rb_root children ;
   struct kernfs_root *root ;
};
#line 96 
struct kernfs_node;
#line 96  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_elem_symlink {
   struct kernfs_node *target_kn ;
};
#line 100 
struct kernfs_ops;
#line 100  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_elem_attr {
   struct kernfs_ops *ops ;
   struct kernfs_open_node *open ;
   loff_t size ;
   struct kernfs_node *notify_next ;
};
#line 116  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
union __anonunion_495 {
   struct kernfs_elem_dir dir ;
   struct kernfs_elem_symlink symlink ;
   struct kernfs_elem_attr attr ;
};
#line 116  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_node {
   atomic_t count ;
   atomic_t active ;
   struct lockdep_map dep_map ;
   struct kernfs_node *parent ;
   char *name ;
   struct rb_node rb ;
   void *ns ;
   unsigned int hash ;
   union __anonunion_495 __anonCompField_kernfs_node_73 ;
   void *priv ;
   u64 id ;
   unsigned short flags ;
   umode_t mode ;
   struct kernfs_iattrs *iattr ;
};
#line 161  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_syscall_ops {
   int (*show_options)(struct seq_file *, struct kernfs_root *) ;
   int (*mkdir)(struct kernfs_node *, char *, umode_t ) ;
   int (*rmdir)(struct kernfs_node *) ;
   int (*rename)(struct kernfs_node *, struct kernfs_node *, char *) ;
   int (*show_path)(struct seq_file *, struct kernfs_node *, struct kernfs_root *) ;
};
#line 173  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_root {
   struct kernfs_node *kn ;
   unsigned int flags ;
   struct idr ino_idr ;
   u32 last_id_lowbits ;
   u32 id_highbits ;
   struct kernfs_syscall_ops *syscall_ops ;
   struct list_head supers ;
   wait_queue_head_t deactivate_waitq ;
};
#line 190  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_open_file {
   struct kernfs_node *kn ;
   struct file *file ;
   struct seq_file *seq_file ;
   void *priv ;
   struct mutex mutex ;
   struct mutex prealloc_mutex ;
   int event ;
   struct list_head list ;
   char *prealloc_buf ;
   size_t atomic_write_len ;
   bool mmapped : 1 ;
   bool released : 1 ;
   struct vm_operations_struct *vm_ops ;
};
#line 210  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_ops {
   int (*open)(struct kernfs_open_file *) ;
   void (*release)(struct kernfs_open_file *) ;
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   ssize_t (*read)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   size_t atomic_write_len ;
   bool prealloc ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   __poll_t (*poll)(struct kernfs_open_file *, struct poll_table_struct *) ;
   int (*mmap)(struct kernfs_open_file *, struct vm_area_struct *) ;
   struct lock_class_key lockdep_key ;
};
#line 595 
enum kobj_ns_type {
    KOBJ_NS_TYPE_NONE = 0,
    KOBJ_NS_TYPE_NET = 1,
    KOBJ_NS_TYPES = 2
};
#line 39  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kobject_ns.h"
struct kobj_ns_type_operations {
   enum kobj_ns_type type ;
   bool (*current_may_mount)(void) ;
   void *(*grab_current_ns)(void) ;
   void *(*netlink_ns)(struct sock *) ;
   void *(*initial_ns)(void) ;
   void (*drop_ns)(void *) ;
};
#line 58 
struct bin_attribute;
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysfs.h"
struct attribute {
   char *name ;
   umode_t mode ;
   bool ignore_lockdep : 1 ;
   struct lock_class_key *key ;
   struct lock_class_key skey ;
};
#line 84  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysfs.h"
struct attribute_group {
   char *name ;
   umode_t (*is_visible)(struct kobject *, struct attribute *, int ) ;
   umode_t (*is_bin_visible)(struct kobject *, struct bin_attribute *, int ) ;
   struct attribute **attrs ;
   struct bin_attribute **bin_attrs ;
};
#line 161  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysfs.h"
struct bin_attribute {
   struct attribute attr ;
   size_t size ;
   void *private ;
   ssize_t (*read)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   ssize_t (*write)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   int (*mmap)(struct file *, struct kobject *, struct bin_attribute *, struct vm_area_struct *) ;
};
#line 223  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysfs.h"
struct sysfs_ops {
   ssize_t (*show)(struct kobject *, struct attribute *, char *) ;
   ssize_t (*store)(struct kobject *, struct attribute *, char *, size_t ) ;
};
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kref.h"
struct kref {
   refcount_t refcount ;
};
#line 65  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kobject.h"
struct kset;
#line 65 
struct kobj_type;
#line 65  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kobject.h"
struct kobject {
   char *name ;
   struct list_head entry ;
   struct kobject *parent ;
   struct kset *kset ;
   struct kobj_type *ktype ;
   struct kernfs_node *sd ;
   struct kref kref ;
   struct delayed_work release ;
   unsigned int state_initialized : 1 ;
   unsigned int state_in_sysfs : 1 ;
   unsigned int state_add_uevent_sent : 1 ;
   unsigned int state_remove_uevent_sent : 1 ;
   unsigned int uevent_suppress : 1 ;
};
#line 139  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kobject.h"
struct kobj_type {
   void (*release)(struct kobject *) ;
   struct sysfs_ops *sysfs_ops ;
   struct attribute **default_attrs ;
   struct attribute_group **default_groups ;
   struct kobj_ns_type_operations *(*child_ns_type)(struct kobject *) ;
   void *(*namespace)(struct kobject *) ;
   void (*get_ownership)(struct kobject *, kuid_t *, kgid_t *) ;
};
#line 149  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kobject.h"
struct kobj_uevent_env {
   char *argv[3U] ;
   char *envp[32U] ;
   int envp_idx ;
   char buf[2048U] ;
   int buflen ;
};
#line 157  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kobject.h"
struct kset_uevent_ops {
   int (*filter)(struct kset *, struct kobject *) ;
   char *(*name)(struct kset *, struct kobject *) ;
   int (*uevent)(struct kset *, struct kobject *, struct kobj_uevent_env *) ;
};
#line 193  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kobject.h"
struct kset {
   struct list_head list ;
   spinlock_t list_lock ;
   struct kobject kobj ;
   struct kset_uevent_ops *uevent_ops ;
} __attribute__((__designated_init__));
#line 50  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pm.h"
struct pm_message {
   int event ;
};
#line 53  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pm.h"
typedef struct pm_message pm_message_t;
#line 278  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pm.h"
struct dev_pm_ops {
   int (*prepare)(struct device *) ;
   void (*complete)(struct device *) ;
   int (*suspend)(struct device *) ;
   int (*resume)(struct device *) ;
   int (*freeze)(struct device *) ;
   int (*thaw)(struct device *) ;
   int (*poweroff)(struct device *) ;
   int (*restore)(struct device *) ;
   int (*suspend_late)(struct device *) ;
   int (*resume_early)(struct device *) ;
   int (*freeze_late)(struct device *) ;
   int (*thaw_early)(struct device *) ;
   int (*poweroff_late)(struct device *) ;
   int (*restore_early)(struct device *) ;
   int (*suspend_noirq)(struct device *) ;
   int (*resume_noirq)(struct device *) ;
   int (*freeze_noirq)(struct device *) ;
   int (*thaw_noirq)(struct device *) ;
   int (*poweroff_noirq)(struct device *) ;
   int (*restore_noirq)(struct device *) ;
   int (*runtime_suspend)(struct device *) ;
   int (*runtime_resume)(struct device *) ;
   int (*runtime_idle)(struct device *) ;
};
#line 303 
enum rpm_status {
    RPM_ACTIVE = 0,
    RPM_RESUMING = 1,
    RPM_SUSPENDED = 2,
    RPM_SUSPENDING = 3
};
#line 310 
enum rpm_request {
    RPM_REQ_NONE = 0,
    RPM_REQ_IDLE = 1,
    RPM_REQ_SUSPEND = 2,
    RPM_REQ_AUTOSUSPEND = 3,
    RPM_REQ_RESUME = 4
};
#line 318 
struct wakeup_source;
#line 319 
struct wake_irq;
#line 320 
struct pm_domain_data;
#line 530  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pm.h"
struct pm_subsys_data {
   spinlock_t lock ;
   unsigned int refcount ;
   struct list_head clock_list ;
   struct pm_domain_data *domain_data ;
};
#line 573 
struct dev_pm_qos;
#line 573  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pm.h"
struct dev_pm_info {
   pm_message_t power_state ;
   unsigned int can_wakeup : 1 ;
   unsigned int async_suspend : 1 ;
   bool in_dpm_list : 1 ;
   bool is_prepared : 1 ;
   bool is_suspended : 1 ;
   bool is_noirq_suspended : 1 ;
   bool is_late_suspended : 1 ;
   bool no_pm : 1 ;
   bool early_init : 1 ;
   bool direct_complete : 1 ;
   u32 driver_flags ;
   spinlock_t lock ;
   struct list_head entry ;
   struct completion completion ;
   struct wakeup_source *wakeup ;
   bool wakeup_path : 1 ;
   bool syscore : 1 ;
   bool no_pm_callbacks : 1 ;
   unsigned int must_resume : 1 ;
   unsigned int may_skip_resume : 1 ;
   struct hrtimer suspend_timer ;
   unsigned long timer_expires ;
   struct work_struct work ;
   wait_queue_head_t wait_queue ;
   struct wake_irq *wakeirq ;
   atomic_t usage_count ;
   atomic_t child_count ;
   unsigned int disable_depth : 3 ;
   unsigned int idle_notification : 1 ;
   unsigned int request_pending : 1 ;
   unsigned int deferred_resume : 1 ;
   unsigned int runtime_auto : 1 ;
   bool ignore_children : 1 ;
   unsigned int no_callbacks : 1 ;
   unsigned int irq_safe : 1 ;
   unsigned int use_autosuspend : 1 ;
   unsigned int timer_autosuspends : 1 ;
   unsigned int memalloc_noio : 1 ;
   unsigned int links_count ;
   enum rpm_request request ;
   enum rpm_status runtime_status ;
   int runtime_error ;
   int autosuspend_delay ;
   u64 last_busy ;
   u64 active_time ;
   u64 suspended_time ;
   u64 accounting_timestamp ;
   struct pm_subsys_data *subsys_data ;
   void (*set_latency_tolerance)(struct device *, s32 ) ;
   struct dev_pm_qos *qos ;
};
#line 650  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pm.h"
struct dev_pm_domain {
   struct dev_pm_ops ops ;
   int (*start)(struct device *) ;
   void (*detach)(struct device *, bool ) ;
   int (*activate)(struct device *) ;
   void (*sync)(struct device *) ;
   void (*dismiss)(struct device *) ;
};
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ratelimit.h"
struct ratelimit_state {
   raw_spinlock_t lock ;
   int interval ;
   int burst ;
   int printed ;
   int missed ;
   unsigned long begin ;
   unsigned long flags ;
};
#line 5  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/device.h"
struct dev_archdata {
   void *iommu ;
};
#line 12 
struct dma_map_ops;
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/device.h"
struct pdev_archdata {
   };
#line 23 
struct device_driver;
#line 24 
struct driver_private;
#line 25 
struct class;
#line 26 
struct subsys_private;
#line 27 
struct bus_type;
#line 28 
struct iommu_ops;
#line 29 
struct iommu_group;
#line 30 
struct iommu_fwspec;
#line 31 
struct dev_pin_info;
#line 32 
struct iommu_param;
#line 122  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
struct bus_type {
   char *name ;
   char *dev_name ;
   struct device *dev_root ;
   struct attribute_group **bus_groups ;
   struct attribute_group **dev_groups ;
   struct attribute_group **drv_groups ;
   int (*match)(struct device *, struct device_driver *) ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   int (*probe)(struct device *) ;
   void (*sync_state)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*online)(struct device *) ;
   int (*offline)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   int (*num_vf)(struct device *) ;
   int (*dma_configure)(struct device *) ;
   struct dev_pm_ops *pm ;
   struct iommu_ops *iommu_ops ;
   struct subsys_private *p ;
   struct lock_class_key lock_key ;
   bool need_parent_lock ;
};
#line 164 
struct device_type;
#line 309 
enum probe_type {
    PROBE_DEFAULT_STRATEGY = 0,
    PROBE_PREFER_ASYNCHRONOUS = 1,
    PROBE_FORCE_SYNCHRONOUS = 2
};
#line 383 
struct of_device_id;
#line 383 
struct acpi_device_id;
#line 383  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
struct device_driver {
   char *name ;
   struct bus_type *bus ;
   struct module *owner ;
   char *mod_name ;
   bool suppress_bind_attrs ;
   enum probe_type probe_type ;
   struct of_device_id *of_match_table ;
   struct acpi_device_id *acpi_match_table ;
   int (*probe)(struct device *) ;
   void (*sync_state)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct attribute_group **groups ;
   struct attribute_group **dev_groups ;
   struct dev_pm_ops *pm ;
   void (*coredump)(struct device *) ;
   struct driver_private *p ;
};
#line 589  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
struct class {
   char *name ;
   struct module *owner ;
   struct attribute_group **class_groups ;
   struct attribute_group **dev_groups ;
   struct kobject *dev_kobj ;
   int (*dev_uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *) ;
   void (*class_release)(struct class *) ;
   void (*dev_release)(struct device *) ;
   int (*shutdown_pre)(struct device *) ;
   struct kobj_ns_type_operations *ns_type ;
   void *(*namespace)(struct device *) ;
   void (*get_ownership)(struct device *, kuid_t *, kgid_t *) ;
   struct dev_pm_ops *pm ;
   struct subsys_private *p ;
};
#line 809  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
struct device_type {
   char *name ;
   struct attribute_group **groups ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *, kuid_t *, kgid_t *) ;
   void (*release)(struct device *) ;
   struct dev_pm_ops *pm ;
};
#line 1008  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
struct device_dma_parameters {
   unsigned int max_segment_size ;
   unsigned long segment_boundary_mask ;
};
#line 1139 
enum dl_dev_state {
    DL_DEV_NO_DRIVER = 0,
    DL_DEV_PROBING = 1,
    DL_DEV_DRIVER_BOUND = 2,
    DL_DEV_UNBINDING = 3
};
#line 1164  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
struct dev_links_info {
   struct list_head suppliers ;
   struct list_head consumers ;
   struct list_head needs_suppliers ;
   struct list_head defer_sync ;
   bool need_for_probe ;
   enum dl_dev_state status ;
};
#line 1259 
struct irq_domain;
#line 1259 
struct dma_coherent_mem;
#line 1259 
struct cma;
#line 1259  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
struct device {
   struct kobject kobj ;
   struct device *parent ;
   struct device_private *p ;
   char *init_name ;
   struct device_type *type ;
   struct bus_type *bus ;
   struct device_driver *driver ;
   void *platform_data ;
   void *driver_data ;
   struct mutex lockdep_mutex ;
   struct mutex mutex ;
   struct dev_links_info links ;
   struct dev_pm_info power ;
   struct dev_pm_domain *pm_domain ;
   struct irq_domain *msi_domain ;
   struct dev_pin_info *pins ;
   struct list_head msi_list ;
   struct dma_map_ops *dma_ops ;
   u64 *dma_mask ;
   u64 coherent_dma_mask ;
   u64 bus_dma_limit ;
   unsigned long dma_pfn_offset ;
   struct device_dma_parameters *dma_parms ;
   struct list_head dma_pools ;
   struct dma_coherent_mem *dma_mem ;
   struct cma *cma_area ;
   struct dev_archdata archdata ;
   struct device_node *of_node ;
   struct fwnode_handle *fwnode ;
   int numa_node ;
   dev_t devt ;
   u32 id ;
   spinlock_t devres_lock ;
   struct list_head devres_head ;
   struct class *class ;
   struct attribute_group **groups ;
   void (*release)(struct device *) ;
   struct iommu_group *iommu_group ;
   struct iommu_fwspec *iommu_fwspec ;
   struct iommu_param *iommu_param ;
   bool offline_disabled : 1 ;
   bool offline : 1 ;
   bool of_node_reused : 1 ;
   bool state_synced : 1 ;
};
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pm_wakeup.h"
struct wakeup_source {
   char *name ;
   int id ;
   struct list_head entry ;
   spinlock_t lock ;
   struct wake_irq *wakeirq ;
   struct timer_list timer ;
   unsigned long timer_expires ;
   ktime_t total_time ;
   ktime_t max_time ;
   ktime_t last_time ;
   ktime_t start_prevent_time ;
   ktime_t prevent_sleep_time ;
   unsigned long event_count ;
   unsigned long active_count ;
   unsigned long relax_count ;
   unsigned long expire_count ;
   unsigned long wakeup_count ;
   struct device *dev ;
   bool active : 1 ;
   bool autosleep_enabled : 1 ;
};
#line 71  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dma-debug.h"
enum dma_data_direction {
    DMA_BIDIRECTIONAL = 0,
    DMA_TO_DEVICE = 1,
    DMA_FROM_DEVICE = 2,
    DMA_NONE = 3
};
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/scatterlist.h"
struct scatterlist {
   unsigned long page_link ;
   unsigned int offset ;
   unsigned int length ;
   dma_addr_t dma_address ;
   unsigned int dma_length ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/scatterlist.h"
struct sg_table {
   struct scatterlist *sgl ;
   unsigned int nents ;
   unsigned int orig_nents ;
};
#line 76  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dma-mapping.h"
struct dma_map_ops {
   void *(*alloc)(struct device *, size_t , dma_addr_t *, gfp_t , unsigned long ) ;
   void (*free)(struct device *, size_t , void *, dma_addr_t , unsigned long ) ;
   int (*mmap)(struct device *, struct vm_area_struct *, void *, dma_addr_t , size_t , unsigned long ) ;
   int (*get_sgtable)(struct device *, struct sg_table *, void *, dma_addr_t , size_t , unsigned long ) ;
   dma_addr_t (*map_page)(struct device *, struct page *, unsigned long , size_t , enum dma_data_direction , unsigned long ) ;
   void (*unmap_page)(struct device *, dma_addr_t , size_t , enum dma_data_direction , unsigned long ) ;
   int (*map_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , unsigned long ) ;
   void (*unmap_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , unsigned long ) ;
   dma_addr_t (*map_resource)(struct device *, phys_addr_t , size_t , enum dma_data_direction , unsigned long ) ;
   void (*unmap_resource)(struct device *, dma_addr_t , size_t , enum dma_data_direction , unsigned long ) ;
   void (*sync_single_for_cpu)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_single_for_device)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_sg_for_cpu)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   void (*sync_sg_for_device)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   void (*cache_sync)(struct device *, void *, size_t , enum dma_data_direction ) ;
   int (*dma_supported)(struct device *, u64 ) ;
   u64 (*get_required_mask)(struct device *) ;
   size_t (*max_mapping_size)(struct device *) ;
   unsigned long (*get_merge_boundary)(struct device *) ;
};
#line 803  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dma-mapping.h"
typedef u64 netdev_features_t;
#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/in6.h"
union __anonunion_in6_u_498 {
   __u8 u6_addr8[16U] ;
   __be16 u6_addr16[8U] ;
   __be32 u6_addr32[4U] ;
};
#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/in6.h"
struct in6_addr {
   union __anonunion_in6_u_498 in6_u ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/in6.h"
struct __anonstruct_siphash_key_t_499 {
   u64 key[2U] ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/in6.h"
typedef struct __anonstruct_siphash_key_t_499 siphash_key_t;
#line 163  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if_ether.h"
struct ethhdr {
   unsigned char h_dest[6U] ;
   unsigned char h_source[6U] ;
   __be16 h_proto ;
} __attribute__((__packed__));
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pipe_fs_i.h"
struct pipe_buf_operations;
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pipe_fs_i.h"
struct pipe_buffer {
   struct page *page ;
   unsigned int offset ;
   unsigned int len ;
   struct pipe_buf_operations *ops ;
   unsigned int flags ;
   unsigned long private ;
};
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pipe_fs_i.h"
struct pipe_inode_info {
   struct mutex mutex ;
   wait_queue_head_t wait ;
   unsigned int head ;
   unsigned int tail ;
   unsigned int max_usage ;
   unsigned int ring_size ;
   unsigned int readers ;
   unsigned int writers ;
   unsigned int files ;
   unsigned int r_counter ;
   unsigned int w_counter ;
   struct page *tmp_page ;
   struct fasync_struct *fasync_readers ;
   struct fasync_struct *fasync_writers ;
   struct pipe_buffer *bufs ;
   struct user_struct *user ;
};
#line 77  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pipe_fs_i.h"
struct pipe_buf_operations {
   int (*confirm)(struct pipe_inode_info *, struct pipe_buffer *) ;
   void (*release)(struct pipe_inode_info *, struct pipe_buffer *) ;
   int (*steal)(struct pipe_inode_info *, struct pipe_buffer *) ;
   bool (*get)(struct pipe_inode_info *, struct pipe_buffer *) ;
};
#line 8  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netfilter/nf_conntrack_common.h"
struct ip_conntrack_stat {
   unsigned int found ;
   unsigned int invalid ;
   unsigned int ignore ;
   unsigned int insert ;
   unsigned int insert_failed ;
   unsigned int drop ;
   unsigned int early_drop ;
   unsigned int error ;
   unsigned int expect_new ;
   unsigned int expect_create ;
   unsigned int expect_delete ;
   unsigned int search_restart ;
};
#line 41 
struct napi_struct;
#line 42 
struct bpf_prog;
#line 43 
union bpf_attr;
#line 44 
struct skb_ext;
#line 289  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
struct sk_buff_head {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   __u32 qlen ;
   spinlock_t lock ;
};
#line 562  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
typedef unsigned int sk_buff_data_t;
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_521 {
   struct net_device *dev ;
   unsigned long dev_scratch ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
struct __anonstruct_520 {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   union __anonunion_521 __anonCompField___anonstruct_520_86 ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_519 {
   struct __anonstruct_520 __anonCompField___anonunion_519_87 ;
   struct rb_node rbnode ;
   struct list_head list ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_522 {
   struct sock *sk ;
   int ip_defrag_offset ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_523 {
   ktime_t tstamp ;
   u64 skb_mstamp_ns ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
struct __anonstruct_525 {
   unsigned long _skb_refdst ;
   void (*destructor)(struct sk_buff *) ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_524 {
   struct __anonstruct_525 __anonCompField___anonunion_524_91 ;
   struct list_head tcp_tsorted_anchor ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
struct __anonstruct_527 {
   __u16 csum_start ;
   __u16 csum_offset ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_526 {
   __wsum csum ;
   struct __anonstruct_527 __anonCompField___anonunion_526_93 ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_528 {
   unsigned int napi_id ;
   unsigned int sender_cpu ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_529 {
   __u32 mark ;
   __u32 reserved_tailroom ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_530 {
   __be16 inner_protocol ;
   __u8 inner_ipproto ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
struct sk_buff {
   union __anonunion_519 __anonCompField_sk_buff_88 ;
   union __anonunion_522 __anonCompField_sk_buff_89 ;
   union __anonunion_523 __anonCompField_sk_buff_90 ;
   char cb[48U] ;
   union __anonunion_524 __anonCompField_sk_buff_92 ;
   unsigned long _nfct ;
   unsigned int len ;
   unsigned int data_len ;
   __u16 mac_len ;
   __u16 hdr_len ;
   __u16 queue_mapping ;
   __u8 __cloned_offset[0U] ;
   __u8 cloned : 1 ;
   __u8 nohdr : 1 ;
   __u8 fclone : 2 ;
   __u8 peeked : 1 ;
   __u8 head_frag : 1 ;
   __u8 pfmemalloc : 1 ;
   __u8 active_extensions ;
   __u32 headers_start[0U] ;
   __u8 __pkt_type_offset[0U] ;
   __u8 pkt_type : 3 ;
   __u8 ignore_df : 1 ;
   __u8 nf_trace : 1 ;
   __u8 ip_summed : 2 ;
   __u8 ooo_okay : 1 ;
   __u8 l4_hash : 1 ;
   __u8 sw_hash : 1 ;
   __u8 wifi_acked_valid : 1 ;
   __u8 wifi_acked : 1 ;
   __u8 no_fcs : 1 ;
   __u8 encapsulation : 1 ;
   __u8 encap_hdr_csum : 1 ;
   __u8 csum_valid : 1 ;
   __u8 __pkt_vlan_present_offset[0U] ;
   __u8 vlan_present : 1 ;
   __u8 csum_complete_sw : 1 ;
   __u8 csum_level : 2 ;
   __u8 csum_not_inet : 1 ;
   __u8 dst_pending_confirm : 1 ;
   __u8 ndisc_nodetype : 2 ;
   __u8 ipvs_property : 1 ;
   __u8 inner_protocol_type : 1 ;
   __u8 remcsum_offload : 1 ;
   __u8 offload_fwd_mark : 1 ;
   __u8 offload_l3_fwd_mark : 1 ;
   __u8 tc_skip_classify : 1 ;
   __u8 tc_at_ingress : 1 ;
   __u8 tc_redirected : 1 ;
   __u8 tc_from_ingress : 1 ;
   __u8 decrypted : 1 ;
   __u16 tc_index ;
   union __anonunion_526 __anonCompField_sk_buff_94 ;
   __u32 priority ;
   int skb_iif ;
   __u32 hash ;
   __be16 vlan_proto ;
   __u16 vlan_tci ;
   union __anonunion_528 __anonCompField_sk_buff_95 ;
   __u32 secmark ;
   union __anonunion_529 __anonCompField_sk_buff_96 ;
   union __anonunion_530 __anonCompField_sk_buff_97 ;
   __u16 inner_transport_header ;
   __u16 inner_network_header ;
   __u16 inner_mac_header ;
   __be16 protocol ;
   __u16 transport_header ;
   __u16 network_header ;
   __u16 mac_header ;
   __u32 headers_end[0U] ;
   sk_buff_data_t tail ;
   sk_buff_data_t end ;
   unsigned char *head ;
   unsigned char *data ;
   unsigned int truesize ;
   refcount_t users ;
   struct skb_ext *extensions ;
};
#line 920 
struct dst_entry;
#line 4108  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
struct skb_ext {
   refcount_t refcnt ;
   u8 offset[3U] ;
   u8 chunks ;
   char data[0U] ;
};
#line 177  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_drvinfo {
   __u32 cmd ;
   char driver[32U] ;
   char version[32U] ;
   char fw_version[32U] ;
   char bus_info[32U] ;
   char erom_version[32U] ;
   char reserved2[12U] ;
   __u32 n_priv_flags ;
   __u32 n_stats ;
   __u32 testinfo_len ;
   __u32 eedump_len ;
   __u32 regdump_len ;
};
#line 203  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_wolinfo {
   __u32 cmd ;
   __u32 supported ;
   __u32 wolopts ;
   __u8 sopass[6U] ;
};
#line 244  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_tunable {
   __u32 cmd ;
   __u32 id ;
   __u32 type_id ;
   __u32 len ;
   void *data[0U] ;
};
#line 310  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_regs {
   __u32 cmd ;
   __u32 version ;
   __u32 len ;
   __u8 data[0U] ;
};
#line 335  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_eeprom {
   __u32 cmd ;
   __u32 magic ;
   __u32 offset ;
   __u32 len ;
   __u8 data[0U] ;
};
#line 360  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_eee {
   __u32 cmd ;
   __u32 supported ;
   __u32 advertised ;
   __u32 lp_advertised ;
   __u32 eee_active ;
   __u32 eee_enabled ;
   __u32 tx_lpi_enabled ;
   __u32 tx_lpi_timer ;
   __u32 reserved[2U] ;
};
#line 382  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_modinfo {
   __u32 cmd ;
   __u32 type ;
   __u32 eeprom_len ;
   __u32 reserved[8U] ;
};
#line 462  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_coalesce {
   __u32 cmd ;
   __u32 rx_coalesce_usecs ;
   __u32 rx_max_coalesced_frames ;
   __u32 rx_coalesce_usecs_irq ;
   __u32 rx_max_coalesced_frames_irq ;
   __u32 tx_coalesce_usecs ;
   __u32 tx_max_coalesced_frames ;
   __u32 tx_coalesce_usecs_irq ;
   __u32 tx_max_coalesced_frames_irq ;
   __u32 stats_block_coalesce_usecs ;
   __u32 use_adaptive_rx_coalesce ;
   __u32 use_adaptive_tx_coalesce ;
   __u32 pkt_rate_low ;
   __u32 rx_coalesce_usecs_low ;
   __u32 rx_max_coalesced_frames_low ;
   __u32 tx_coalesce_usecs_low ;
   __u32 tx_max_coalesced_frames_low ;
   __u32 pkt_rate_high ;
   __u32 rx_coalesce_usecs_high ;
   __u32 rx_max_coalesced_frames_high ;
   __u32 tx_coalesce_usecs_high ;
   __u32 tx_max_coalesced_frames_high ;
   __u32 rate_sample_interval ;
};
#line 513  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_ringparam {
   __u32 cmd ;
   __u32 rx_max_pending ;
   __u32 rx_mini_max_pending ;
   __u32 rx_jumbo_max_pending ;
   __u32 tx_max_pending ;
   __u32 rx_pending ;
   __u32 rx_mini_pending ;
   __u32 rx_jumbo_pending ;
   __u32 tx_pending ;
};
#line 541  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_channels {
   __u32 cmd ;
   __u32 max_rx ;
   __u32 max_tx ;
   __u32 max_other ;
   __u32 max_combined ;
   __u32 rx_count ;
   __u32 tx_count ;
   __u32 other_count ;
   __u32 combined_count ;
};
#line 575  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_pauseparam {
   __u32 cmd ;
   __u32 autoneg ;
   __u32 rx_pause ;
   __u32 tx_pause ;
};
#line 683  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_test {
   __u32 cmd ;
   __u32 flags ;
   __u32 reserved ;
   __u32 len ;
   __u64 data[0U] ;
};
#line 702  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_stats {
   __u32 cmd ;
   __u32 n_stats ;
   __u64 data[0U] ;
};
#line 758  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_tcpip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be16 psrc ;
   __be16 pdst ;
   __u8 tos ;
};
#line 775  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_ah_espip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 spi ;
   __u8 tos ;
};
#line 793  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_usrip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 l4_4_bytes ;
   __u8 tos ;
   __u8 ip_ver ;
   __u8 proto ;
};
#line 812  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_tcpip6_spec {
   __be32 ip6src[4U] ;
   __be32 ip6dst[4U] ;
   __be16 psrc ;
   __be16 pdst ;
   __u8 tclass ;
};
#line 829  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_ah_espip6_spec {
   __be32 ip6src[4U] ;
   __be32 ip6dst[4U] ;
   __be32 spi ;
   __u8 tclass ;
};
#line 844  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_usrip6_spec {
   __be32 ip6src[4U] ;
   __be32 ip6dst[4U] ;
   __be32 l4_4_bytes ;
   __u8 tclass ;
   __u8 l4_proto ;
};
#line 852  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
union ethtool_flow_union {
   struct ethtool_tcpip4_spec tcp_ip4_spec ;
   struct ethtool_tcpip4_spec udp_ip4_spec ;
   struct ethtool_tcpip4_spec sctp_ip4_spec ;
   struct ethtool_ah_espip4_spec ah_ip4_spec ;
   struct ethtool_ah_espip4_spec esp_ip4_spec ;
   struct ethtool_usrip4_spec usr_ip4_spec ;
   struct ethtool_tcpip6_spec tcp_ip6_spec ;
   struct ethtool_tcpip6_spec udp_ip6_spec ;
   struct ethtool_tcpip6_spec sctp_ip6_spec ;
   struct ethtool_ah_espip6_spec ah_ip6_spec ;
   struct ethtool_ah_espip6_spec esp_ip6_spec ;
   struct ethtool_usrip6_spec usr_ip6_spec ;
   struct ethhdr ether_spec ;
   __u8 hdata[52U] ;
};
#line 880  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_flow_ext {
   __u8 padding[2U] ;
   unsigned char h_dest[6U] ;
   __be16 vlan_etype ;
   __be16 vlan_tci ;
   __be32 data[2U] ;
};
#line 905  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_rx_flow_spec {
   __u32 flow_type ;
   union ethtool_flow_union h_u ;
   struct ethtool_flow_ext h_ext ;
   union ethtool_flow_union m_u ;
   struct ethtool_flow_ext m_ext ;
   __u64 ring_cookie ;
   __u32 location ;
};
#line 1001  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
union __anonunion_556 {
   __u32 rule_cnt ;
   __u32 rss_context ;
};
#line 1001  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_rxnfc {
   __u32 cmd ;
   __u32 flow_type ;
   __u64 data ;
   struct ethtool_rx_flow_spec fs ;
   union __anonunion_556 __anonCompField_ethtool_rxnfc_99 ;
   __u32 rule_locs[0U] ;
};
#line 1130  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_flash {
   __u32 cmd ;
   __u32 region ;
   char data[128U] ;
};
#line 1150  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_dump {
   __u32 cmd ;
   __u32 version ;
   __u32 flag ;
   __u32 len ;
   __u8 data[0U] ;
};
#line 1230  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_ts_info {
   __u32 cmd ;
   __u32 so_timestamping ;
   __s32 phc_index ;
   __u32 tx_types ;
   __u32 tx_reserved[3U] ;
   __u32 rx_filters ;
   __u32 rx_reserved[3U] ;
};
#line 1302  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_fecparam {
   __u32 cmd ;
   __u32 active_fec ;
   __u32 fec ;
   __u32 reserved ;
};
#line 1876  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_link_settings {
   __u32 cmd ;
   __u32 speed ;
   __u8 duplex ;
   __u8 port ;
   __u8 phy_address ;
   __u8 autoneg ;
   __u8 mdio_support ;
   __u8 eth_tp_mdix ;
   __u8 eth_tp_mdix_ctrl ;
   __s8 link_mode_masks_nwords ;
   __u8 transceiver ;
   __u8 reserved1[3U] ;
   __u32 reserved[7U] ;
   __u32 link_mode_masks[0U] ;
};
#line 40  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ethtool.h"
enum ethtool_phys_id_state {
    ETHTOOL_ID_INACTIVE = 0,
    ETHTOOL_ID_ACTIVE = 1,
    ETHTOOL_ID_ON = 2,
    ETHTOOL_ID_OFF = 3
};
#line 108  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ethtool.h"
struct __anonstruct_link_modes_559 {
   unsigned long supported[2U] ;
   unsigned long advertising[2U] ;
   unsigned long lp_advertising[2U] ;
};
#line 108  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ethtool.h"
struct ethtool_link_ksettings {
   struct ethtool_link_settings base ;
   struct __anonstruct_link_modes_559 link_modes ;
};
#line 325  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ethtool.h"
struct ethtool_ops {
   void (*get_drvinfo)(struct net_device *, struct ethtool_drvinfo *) ;
   int (*get_regs_len)(struct net_device *) ;
   void (*get_regs)(struct net_device *, struct ethtool_regs *, void *) ;
   void (*get_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   int (*set_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   u32 (*get_msglevel)(struct net_device *) ;
   void (*set_msglevel)(struct net_device *, u32 ) ;
   int (*nway_reset)(struct net_device *) ;
   u32 (*get_link)(struct net_device *) ;
   int (*get_eeprom_len)(struct net_device *) ;
   int (*get_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*set_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   int (*set_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   void (*get_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   int (*set_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   void (*get_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   int (*set_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   void (*self_test)(struct net_device *, struct ethtool_test *, u64 *) ;
   void (*get_strings)(struct net_device *, u32 , u8 *) ;
   int (*set_phys_id)(struct net_device *, enum ethtool_phys_id_state ) ;
   void (*get_ethtool_stats)(struct net_device *, struct ethtool_stats *, u64 *) ;
   int (*begin)(struct net_device *) ;
   void (*complete)(struct net_device *) ;
   u32 (*get_priv_flags)(struct net_device *) ;
   int (*set_priv_flags)(struct net_device *, u32 ) ;
   int (*get_sset_count)(struct net_device *, int ) ;
   int (*get_rxnfc)(struct net_device *, struct ethtool_rxnfc *, u32 *) ;
   int (*set_rxnfc)(struct net_device *, struct ethtool_rxnfc *) ;
   int (*flash_device)(struct net_device *, struct ethtool_flash *) ;
   int (*reset)(struct net_device *, u32 *) ;
   u32 (*get_rxfh_key_size)(struct net_device *) ;
   u32 (*get_rxfh_indir_size)(struct net_device *) ;
   int (*get_rxfh)(struct net_device *, u32 *, u8 *, u8 *) ;
   int (*set_rxfh)(struct net_device *, u32 *, u8 *, u8 ) ;
   int (*get_rxfh_context)(struct net_device *, u32 *, u8 *, u8 *, u32 ) ;
   int (*set_rxfh_context)(struct net_device *, u32 *, u8 *, u8 , u32 *, bool ) ;
   void (*get_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*set_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*get_dump_flag)(struct net_device *, struct ethtool_dump *) ;
   int (*get_dump_data)(struct net_device *, struct ethtool_dump *, void *) ;
   int (*set_dump)(struct net_device *, struct ethtool_dump *) ;
   int (*get_ts_info)(struct net_device *, struct ethtool_ts_info *) ;
   int (*get_module_info)(struct net_device *, struct ethtool_modinfo *) ;
   int (*get_module_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*set_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*get_tunable)(struct net_device *, struct ethtool_tunable *, void *) ;
   int (*set_tunable)(struct net_device *, struct ethtool_tunable *, void *) ;
   int (*get_per_queue_coalesce)(struct net_device *, u32 , struct ethtool_coalesce *) ;
   int (*set_per_queue_coalesce)(struct net_device *, u32 , struct ethtool_coalesce *) ;
   int (*get_link_ksettings)(struct net_device *, struct ethtool_link_ksettings *) ;
   int (*set_link_ksettings)(struct net_device *, struct ethtool_link_ksettings *) ;
   int (*get_fecparam)(struct net_device *, struct ethtool_fecparam *) ;
   int (*set_fecparam)(struct net_device *, struct ethtool_fecparam *) ;
   void (*get_ethtool_phy_stats)(struct net_device *, struct ethtool_stats *, u64 *) ;
};
#line 822  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/sysctl.h"
struct ctl_table_root;
#line 823 
struct ctl_table_header;
#line 824 
struct ctl_dir;
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
typedef int proc_handler(struct ctl_table *, int , void *, size_t *, loff_t *);
#line 105  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
struct ctl_table_poll {
   atomic_t event ;
   wait_queue_head_t wait ;
};
#line 123  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
struct ctl_table {
   char *procname ;
   void *data ;
   int maxlen ;
   umode_t mode ;
   struct ctl_table *child ;
   proc_handler *proc_handler ;
   struct ctl_table_poll *poll ;
   void *extra1 ;
   void *extra2 ;
} __attribute__((__designated_init__));
#line 135  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
struct ctl_node {
   struct rb_node node ;
   struct ctl_table_header *header ;
};
#line 142  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
struct __anonstruct_561 {
   struct ctl_table *ctl_table ;
   int used ;
   int count ;
   int nreg ;
};
#line 142  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
union __anonunion_560 {
   struct __anonstruct_561 __anonCompField___anonunion_560_100 ;
   struct callback_head rcu ;
};
#line 142 
struct ctl_table_set;
#line 142  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
struct ctl_table_header {
   union __anonunion_560 __anonCompField_ctl_table_header_101 ;
   struct completion *unregistering ;
   struct ctl_table *ctl_table_arg ;
   struct ctl_table_root *root ;
   struct ctl_table_set *set ;
   struct ctl_dir *parent ;
   struct ctl_node *node ;
   struct hlist_head inodes ;
};
#line 161  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
struct ctl_dir {
   struct ctl_table_header header ;
   struct rb_root root ;
};
#line 167  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
struct ctl_table_set {
   int (*is_seen)(struct ctl_table_set *) ;
   struct ctl_dir dir ;
};
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
struct ctl_table_root {
   struct ctl_table_set default_set ;
   struct ctl_table_set *(*lookup)(struct ctl_table_root *) ;
   void (*set_ownership)(struct ctl_table_header *, struct ctl_table *, kuid_t *, kgid_t *) ;
   int (*permissions)(struct ctl_table_header *, struct ctl_table *) ;
};
#line 242 
struct prot_inuse;
#line 8  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/core.h"
struct netns_core {
   struct ctl_table_header *sysctl_hdr ;
   int sysctl_somaxconn ;
   int *sock_inuse ;
   struct prot_inuse *prot_inuse ;
};
#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct u64_stats_sync {
   };
#line 36  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct __anonstruct_local_t_562 {
   atomic_long_t a ;
};
#line 36  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
typedef struct __anonstruct_local_t_562 local_t;
#line 119  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/local.h"
struct __anonstruct_local64_t_563 {
   local_t a ;
};
#line 119  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/local.h"
typedef struct __anonstruct_local64_t_563 local64_t;
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/local64.h"
struct __anonstruct_u64_stats_t_564 {
   local64_t v ;
};
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/local64.h"
typedef struct __anonstruct_u64_stats_t_564 u64_stats_t;
#line 51  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct ipstats_mib {
   u64 mibs[37U] ;
   struct u64_stats_sync syncp ;
};
#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct icmp_mib {
   unsigned long mibs[28U] ;
};
#line 64  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct icmpmsg_mib {
   atomic_long_t mibs[512U] ;
};
#line 71  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct icmpv6_mib {
   unsigned long mibs[6U] ;
};
#line 81  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct icmpv6msg_mib {
   atomic_long_t mibs[512U] ;
};
#line 92  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct tcp_mib {
   unsigned long mibs[16U] ;
};
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct udp_mib {
   unsigned long mibs[9U] ;
};
#line 104  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct linux_mib {
   unsigned long mibs[120U] ;
};
#line 110  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct linux_xfrm_mib {
   unsigned long mibs[29U] ;
};
#line 116  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct linux_tls_mib {
   unsigned long mibs[11U] ;
};
#line 7  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/mib.h"
struct proc_dir_entry;
#line 7  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/mib.h"
struct netns_mib {
   struct tcp_mib *tcp_statistics ;
   struct ipstats_mib *ip_statistics ;
   struct linux_mib *net_statistics ;
   struct udp_mib *udp_statistics ;
   struct udp_mib *udplite_statistics ;
   struct icmp_mib *icmp_statistics ;
   struct icmpmsg_mib *icmpmsg_statistics ;
   struct proc_dir_entry *proc_net_devsnmp6 ;
   struct udp_mib *udp_stats_in6 ;
   struct udp_mib *udplite_stats_in6 ;
   struct ipstats_mib *ipv6_statistics ;
   struct icmpv6_mib *icmpv6_statistics ;
   struct icmpv6msg_mib *icmpv6msg_statistics ;
   struct linux_xfrm_mib *xfrm_statistics ;
   struct linux_tls_mib *tls_statistics ;
};
#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/unix.h"
struct netns_unix {
   int sysctl_max_dgram_qlen ;
   struct ctl_table_header *ctl ;
};
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/packet.h"
struct netns_packet {
   struct mutex sklist_lock ;
   struct hlist_head sklist ;
};
#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/inet_frag.h"
struct inet_frags;
#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/inet_frag.h"
struct fqdir {
   long high_thresh ;
   long low_thresh ;
   int timeout ;
   int max_dist ;
   struct inet_frags *f ;
   struct net *net ;
   bool dead ;
   struct rhashtable rhashtable ;
   atomic_long_t mem ;
   struct work_struct destroy_work ;
};
#line 41  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/inet_frag.h"
struct frag_v4_compare_key {
   __be32 saddr ;
   __be32 daddr ;
   u32 user ;
   u32 vif ;
   __be16 id ;
   u16 protocol ;
};
#line 50  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/inet_frag.h"
struct frag_v6_compare_key {
   struct in6_addr saddr ;
   struct in6_addr daddr ;
   u32 user ;
   __be32 id ;
   u32 iif ;
};
#line 77  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/inet_frag.h"
union __anonunion_key_565 {
   struct frag_v4_compare_key v4 ;
   struct frag_v6_compare_key v6 ;
};
#line 77  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/inet_frag.h"
struct inet_frag_queue {
   struct rhash_head node ;
   union __anonunion_key_565 key ;
   struct timer_list timer ;
   spinlock_t lock ;
   refcount_t refcnt ;
   struct rb_root rb_fragments ;
   struct sk_buff *fragments_tail ;
   struct sk_buff *last_run_head ;
   ktime_t stamp ;
   int len ;
   int meat ;
   __u8 flags ;
   u16 max_size ;
   struct fqdir *fqdir ;
   struct callback_head rcu ;
};
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/inet_frag.h"
struct inet_frags {
   unsigned int qsize ;
   void (*constructor)(struct inet_frag_queue *, void *) ;
   void (*destructor)(struct inet_frag_queue *) ;
   void (*frag_expire)(struct timer_list *) ;
   struct kmem_cache *frags_cachep ;
   char *frags_cache_name ;
   struct rhashtable_params rhash_params ;
   refcount_t refcnt ;
   struct completion completion ;
};
#line 177 
struct ipv4_devconf;
#line 178 
struct fib_rules_ops;
#line 179 
struct fib_table;
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ipv4.h"
struct local_ports {
   seqlock_t lock ;
   int range[2U] ;
   bool warned ;
};
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ipv4.h"
struct ping_group_range {
   seqlock_t lock ;
   kgid_t range[2U] ;
};
#line 31 
struct inet_hashinfo;
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ipv4.h"
struct inet_timewait_death_row {
   atomic_t tw_count ;
   struct inet_hashinfo *hashinfo ;
   int sysctl_max_tw_buckets ;
};
#line 40 
struct tcp_fastopen_context;
#line 43 
struct ip_ra_chain;
#line 43 
struct inet_peer_base;
#line 43 
struct xt_table;
#line 43 
struct tcp_congestion_ops;
#line 43 
struct fib_notifier_ops;
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ipv4.h"
struct netns_ipv4 {
   struct ctl_table_header *forw_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *ipv4_hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *xfrm4_hdr ;
   struct ipv4_devconf *devconf_all ;
   struct ipv4_devconf *devconf_dflt ;
   struct ip_ra_chain *ra_chain ;
   struct mutex ra_mutex ;
   struct fib_rules_ops *rules_ops ;
   bool fib_has_custom_rules ;
   unsigned int fib_rules_require_fldissect ;
   struct fib_table *fib_main ;
   struct fib_table *fib_default ;
   bool fib_has_custom_local_routes ;
   int fib_num_tclassid_users ;
   struct hlist_head *fib_table_hash ;
   bool fib_offload_disabled ;
   struct sock *fibnl ;
   struct sock **icmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct inet_peer_base *peers ;
   struct sock **tcp_sk ;
   struct fqdir *fqdir ;
   struct xt_table *iptable_filter ;
   struct xt_table *iptable_mangle ;
   struct xt_table *iptable_raw ;
   struct xt_table *arptable_filter ;
   struct xt_table *iptable_security ;
   struct xt_table *nat_table ;
   int sysctl_icmp_echo_ignore_all ;
   int sysctl_icmp_echo_ignore_broadcasts ;
   int sysctl_icmp_ignore_bogus_error_responses ;
   int sysctl_icmp_ratelimit ;
   int sysctl_icmp_ratemask ;
   int sysctl_icmp_errors_use_inbound_ifaddr ;
   struct local_ports ip_local_ports ;
   int sysctl_tcp_ecn ;
   int sysctl_tcp_ecn_fallback ;
   int sysctl_ip_default_ttl ;
   int sysctl_ip_no_pmtu_disc ;
   int sysctl_ip_fwd_use_pmtu ;
   int sysctl_ip_fwd_update_priority ;
   int sysctl_ip_nonlocal_bind ;
   int sysctl_ip_dynaddr ;
   int sysctl_ip_early_demux ;
   int sysctl_raw_l3mdev_accept ;
   int sysctl_tcp_early_demux ;
   int sysctl_udp_early_demux ;
   int sysctl_fwmark_reflect ;
   int sysctl_tcp_fwmark_accept ;
   int sysctl_tcp_l3mdev_accept ;
   int sysctl_tcp_mtu_probing ;
   int sysctl_tcp_mtu_probe_floor ;
   int sysctl_tcp_base_mss ;
   int sysctl_tcp_min_snd_mss ;
   int sysctl_tcp_probe_threshold ;
   u32 sysctl_tcp_probe_interval ;
   int sysctl_tcp_keepalive_time ;
   int sysctl_tcp_keepalive_probes ;
   int sysctl_tcp_keepalive_intvl ;
   int sysctl_tcp_syn_retries ;
   int sysctl_tcp_synack_retries ;
   int sysctl_tcp_syncookies ;
   int sysctl_tcp_reordering ;
   int sysctl_tcp_retries1 ;
   int sysctl_tcp_retries2 ;
   int sysctl_tcp_orphan_retries ;
   int sysctl_tcp_fin_timeout ;
   unsigned int sysctl_tcp_notsent_lowat ;
   int sysctl_tcp_tw_reuse ;
   int sysctl_tcp_sack ;
   int sysctl_tcp_window_scaling ;
   int sysctl_tcp_timestamps ;
   int sysctl_tcp_early_retrans ;
   int sysctl_tcp_recovery ;
   int sysctl_tcp_thin_linear_timeouts ;
   int sysctl_tcp_slow_start_after_idle ;
   int sysctl_tcp_retrans_collapse ;
   int sysctl_tcp_stdurg ;
   int sysctl_tcp_rfc1337 ;
   int sysctl_tcp_abort_on_overflow ;
   int sysctl_tcp_fack ;
   int sysctl_tcp_max_reordering ;
   int sysctl_tcp_dsack ;
   int sysctl_tcp_app_win ;
   int sysctl_tcp_adv_win_scale ;
   int sysctl_tcp_frto ;
   int sysctl_tcp_nometrics_save ;
   int sysctl_tcp_moderate_rcvbuf ;
   int sysctl_tcp_tso_win_divisor ;
   int sysctl_tcp_workaround_signed_windows ;
   int sysctl_tcp_limit_output_bytes ;
   int sysctl_tcp_challenge_ack_limit ;
   int sysctl_tcp_min_tso_segs ;
   int sysctl_tcp_min_rtt_wlen ;
   int sysctl_tcp_autocorking ;
   int sysctl_tcp_invalid_ratelimit ;
   int sysctl_tcp_pacing_ss_ratio ;
   int sysctl_tcp_pacing_ca_ratio ;
   int sysctl_tcp_wmem[3U] ;
   int sysctl_tcp_rmem[3U] ;
   int sysctl_tcp_comp_sack_nr ;
   unsigned long sysctl_tcp_comp_sack_delay_ns ;
   struct inet_timewait_death_row tcp_death_row ;
   int sysctl_max_syn_backlog ;
   int sysctl_tcp_fastopen ;
   struct tcp_congestion_ops *tcp_congestion_control ;
   struct tcp_fastopen_context *tcp_fastopen_ctx ;
   spinlock_t tcp_fastopen_ctx_lock ;
   unsigned int sysctl_tcp_fastopen_blackhole_timeout ;
   atomic_t tfo_active_disable_times ;
   unsigned long tfo_active_disable_stamp ;
   int sysctl_udp_wmem_min ;
   int sysctl_udp_rmem_min ;
   int sysctl_udp_l3mdev_accept ;
   int sysctl_igmp_max_memberships ;
   int sysctl_igmp_max_msf ;
   int sysctl_igmp_llm_reports ;
   int sysctl_igmp_qrv ;
   struct ping_group_range ping_group_range ;
   atomic_t dev_addr_genid ;
   unsigned long *sysctl_local_reserved_ports ;
   int sysctl_ip_prot_sock ;
   struct list_head mr_tables ;
   struct fib_rules_ops *mr_rules_ops ;
   int sysctl_fib_multipath_use_neigh ;
   int sysctl_fib_multipath_hash_policy ;
   struct fib_notifier_ops *notifier_ops ;
   unsigned int fib_seq ;
   struct fib_notifier_ops *ipmr_notifier_ops ;
   unsigned int ipmr_seq ;
   atomic_t rt_genid ;
   siphash_key_t ip_id_key ;
};
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/dst_ops.h"
struct neighbour;
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/dst_ops.h"
struct dst_ops {
   unsigned short family ;
   unsigned int gc_thresh ;
   int (*gc)(struct dst_ops *) ;
   struct dst_entry *(*check)(struct dst_entry *, __u32 ) ;
   unsigned int (*default_advmss)(struct dst_entry *) ;
   unsigned int (*mtu)(struct dst_entry *) ;
   u32 *(*cow_metrics)(struct dst_entry *, unsigned long ) ;
   void (*destroy)(struct dst_entry *) ;
   void (*ifdown)(struct dst_entry *, struct net_device *, int ) ;
   struct dst_entry *(*negative_advice)(struct dst_entry *) ;
   void (*link_failure)(struct sk_buff *) ;
   void (*update_pmtu)(struct dst_entry *, struct sock *, struct sk_buff *, u32 , bool ) ;
   void (*redirect)(struct dst_entry *, struct sock *, struct sk_buff *) ;
   int (*local_out)(struct net *, struct sock *, struct sk_buff *) ;
   struct neighbour *(*neigh_lookup)(struct dst_entry *, struct sk_buff *, void *) ;
   void (*confirm_neigh)(struct dst_entry *, void *) ;
   struct kmem_cache *kmem_cachep ;
   struct percpu_counter pcpuc_entries ;
};
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ipv6.h"
struct netns_sysctl_ipv6 {
   struct ctl_table_header *hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *icmp_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *xfrm6_hdr ;
   int bindv6only ;
   int flush_delay ;
   int ip6_rt_max_size ;
   int ip6_rt_gc_min_interval ;
   int ip6_rt_gc_timeout ;
   int ip6_rt_gc_interval ;
   int ip6_rt_gc_elasticity ;
   int ip6_rt_mtu_expires ;
   int ip6_rt_min_advmss ;
   int multipath_hash_policy ;
   int flowlabel_consistency ;
   int auto_flowlabels ;
   int icmpv6_time ;
   int icmpv6_echo_ignore_all ;
   int icmpv6_echo_ignore_multicast ;
   int icmpv6_echo_ignore_anycast ;
   unsigned long icmpv6_ratemask[4U] ;
   unsigned long *icmpv6_ratemask_ptr ;
   int anycast_src_echo_reply ;
   int ip_nonlocal_bind ;
   int fwmark_reflect ;
   int idgen_retries ;
   int idgen_delay ;
   int flowlabel_state_ranges ;
   int flowlabel_reflect ;
   int max_dst_opts_cnt ;
   int max_hbh_opts_cnt ;
   int max_dst_opts_len ;
   int max_hbh_opts_len ;
   int seg6_flowlabel ;
   bool skip_notify_on_dev_down ;
};
#line 56 
struct ipv6_devconf;
#line 56 
struct fib6_info;
#line 56 
struct rt6_info;
#line 56 
struct rt6_statistics;
#line 56 
struct fib6_table;
#line 56 
struct seg6_pernet_data;
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ipv6.h"
struct __anonstruct_ip6addrlbl_table_567 {
   struct hlist_head head ;
   spinlock_t lock ;
   u32 seq ;
};
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ipv6.h"
struct netns_ipv6 {
   struct netns_sysctl_ipv6 sysctl ;
   struct ipv6_devconf *devconf_all ;
   struct ipv6_devconf *devconf_dflt ;
   struct inet_peer_base *peers ;
   struct fqdir *fqdir ;
   struct xt_table *ip6table_filter ;
   struct xt_table *ip6table_mangle ;
   struct xt_table *ip6table_raw ;
   struct xt_table *ip6table_security ;
   struct xt_table *ip6table_nat ;
   struct fib6_info *fib6_null_entry ;
   struct rt6_info *ip6_null_entry ;
   struct rt6_statistics *rt6_stats ;
   struct timer_list ip6_fib_timer ;
   struct hlist_head *fib_table_hash ;
   struct fib6_table *fib6_main_tbl ;
   struct list_head fib6_walkers ;
   struct dst_ops ip6_dst_ops ;
   rwlock_t fib6_walker_lock ;
   spinlock_t fib6_gc_lock ;
   unsigned int ip6_rt_gc_expire ;
   unsigned long ip6_rt_last_gc ;
   unsigned int fib6_rules_require_fldissect ;
   bool fib6_has_custom_rules ;
   unsigned int fib6_routes_require_src ;
   struct rt6_info *ip6_prohibit_entry ;
   struct rt6_info *ip6_blk_hole_entry ;
   struct fib6_table *fib6_local_tbl ;
   struct fib_rules_ops *fib6_rules_ops ;
   struct sock **icmp_sk ;
   struct sock *ndisc_sk ;
   struct sock *tcp_sk ;
   struct sock *igmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct list_head mr6_tables ;
   struct fib_rules_ops *mr6_rules_ops ;
   atomic_t dev_addr_genid ;
   atomic_t fib6_sernum ;
   struct seg6_pernet_data *seg6_data ;
   struct fib_notifier_ops *notifier_ops ;
   struct fib_notifier_ops *ip6mr_notifier_ops ;
   unsigned int ipmr_seq ;
   struct __anonstruct_ip6addrlbl_table_567 ip6addrlbl_table ;
};
#line 121  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ipv6.h"
struct netns_nf_frag {
   struct fqdir *fqdir ;
};
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/nexthop.h"
struct netns_nexthop {
   struct rb_root rb_root ;
   struct hlist_head *devhash ;
   unsigned int seq ;
   u32 last_id_allocated ;
};
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ieee802154_6lowpan.h"
struct netns_sysctl_lowpan {
   struct ctl_table_header *frags_hdr ;
};
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ieee802154_6lowpan.h"
struct netns_ieee802154_lowpan {
   struct netns_sysctl_lowpan sysctl ;
   struct fqdir *fqdir ;
};
#line 21 
struct sctp_mib;
#line 10  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/sctp.h"
struct netns_sctp {
   struct sctp_mib *sctp_statistics ;
   struct proc_dir_entry *proc_net_sctp ;
   struct ctl_table_header *sysctl_header ;
   struct sock *ctl_sock ;
   struct list_head local_addr_list ;
   struct list_head addr_waitq ;
   struct timer_list addr_wq_timer ;
   struct list_head auto_asconf_splist ;
   spinlock_t addr_wq_lock ;
   spinlock_t local_addr_lock ;
   unsigned int rto_initial ;
   unsigned int rto_min ;
   unsigned int rto_max ;
   int rto_alpha ;
   int rto_beta ;
   int max_burst ;
   int cookie_preserve_enable ;
   char *sctp_hmac_alg ;
   unsigned int valid_cookie_life ;
   unsigned int sack_timeout ;
   unsigned int hb_interval ;
   int max_retrans_association ;
   int max_retrans_path ;
   int max_retrans_init ;
   int pf_retrans ;
   int ps_retrans ;
   int pf_enable ;
   int pf_expose ;
   int sndbuf_policy ;
   int rcvbuf_policy ;
   int default_auto_asconf ;
   int addip_enable ;
   int addip_noauth ;
   int prsctp_enable ;
   int reconf_enable ;
   int auth_enable ;
   int intl_enable ;
   int ecn_enable ;
   int scope_policy ;
   int rwnd_upd_shift ;
   unsigned long max_autoclose ;
};
#line 7  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/dccp.h"
struct netns_dccp {
   struct sock *v4_ctl_sk ;
   struct sock *v6_ctl_sk ;
};
#line 75  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/netfilter.h"
struct nf_logger;
#line 76 
struct nf_queue_handler;
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/netfilter.h"
struct nf_hook_entries;
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/netfilter.h"
struct netns_nf {
   struct proc_dir_entry *proc_netfilter ;
   struct nf_queue_handler *queue_handler ;
   struct nf_logger *nf_loggers[13U] ;
   struct ctl_table_header *nf_log_dir_header ;
   struct nf_hook_entries *hooks_ipv4[5U] ;
   struct nf_hook_entries *hooks_ipv6[5U] ;
   struct nf_hook_entries *hooks_arp[3U] ;
   struct nf_hook_entries *hooks_bridge[5U] ;
   struct nf_hook_entries *hooks_decnet[7U] ;
   bool defrag_ipv4 ;
   bool defrag_ipv6 ;
};
#line 37 
struct ebt_table;
#line 10  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/x_tables.h"
struct netns_xt {
   struct list_head tables[13U] ;
   bool notrack_deprecated_warning ;
   bool clusterip_deprecated_warning ;
   struct ebt_table *broute_table ;
   struct ebt_table *frame_filter ;
   struct ebt_table *frame_nat ;
};
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_nulls.h"
struct hlist_nulls_node;
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_nulls.h"
struct hlist_nulls_head {
   struct hlist_nulls_node *first ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_nulls.h"
struct hlist_nulls_node {
   struct hlist_nulls_node *next ;
   struct hlist_nulls_node **pprev ;
};
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct nf_generic_net {
   unsigned int timeout ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct nf_tcp_net {
   unsigned int timeouts[14U] ;
   int tcp_loose ;
   int tcp_be_liberal ;
   int tcp_max_retrans ;
};
#line 38  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct nf_udp_net {
   unsigned int timeouts[2U] ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct nf_icmp_net {
   unsigned int timeout ;
};
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct nf_dccp_net {
   int dccp_loose ;
   unsigned int dccp_timeout[10U] ;
};
#line 54  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct nf_sctp_net {
   unsigned int timeouts[10U] ;
};
#line 66  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct nf_gre_net {
   struct list_head keymap_list ;
   unsigned int timeouts[2U] ;
};
#line 72  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct nf_ip_net {
   struct nf_generic_net generic ;
   struct nf_tcp_net tcp ;
   struct nf_udp_net udp ;
   struct nf_icmp_net icmp ;
   struct nf_icmp_net icmpv6 ;
   struct nf_dccp_net dccp ;
   struct nf_sctp_net sctp ;
   struct nf_gre_net gre ;
};
#line 89  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct ct_pcpu {
   spinlock_t lock ;
   struct hlist_nulls_head unconfirmed ;
   struct hlist_nulls_head dying ;
};
#line 95 
struct nf_ct_event_notifier;
#line 95 
struct nf_exp_event_notifier;
#line 95  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct netns_ct {
   atomic_t count ;
   unsigned int expect_count ;
   struct delayed_work ecache_dwork ;
   bool ecache_dwork_pending ;
   bool auto_assign_helper_warned ;
   struct ctl_table_header *sysctl_header ;
   unsigned int sysctl_log_invalid ;
   int sysctl_events ;
   int sysctl_acct ;
   int sysctl_auto_assign_helper ;
   int sysctl_tstamp ;
   int sysctl_checksum ;
   struct ct_pcpu *pcpu_lists ;
   struct ip_conntrack_stat *stat ;
   struct nf_ct_event_notifier *nf_conntrack_event_cb ;
   struct nf_exp_event_notifier *nf_expect_event_cb ;
   struct nf_ip_net nf_ct_proto ;
   unsigned int labels_used ;
};
#line 7  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/nftables.h"
struct netns_nftables {
   struct list_head tables ;
   struct list_head commit_list ;
   struct list_head module_list ;
   struct mutex commit_mutex ;
   unsigned int base_seq ;
   u8 gencursor ;
   u8 validate_state ;
};
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/xfrm.h"
struct xfrm_policy_hash {
   struct hlist_head *table ;
   unsigned int hmask ;
   u8 dbits4 ;
   u8 sbits4 ;
   u8 dbits6 ;
   u8 sbits6 ;
};
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/xfrm.h"
struct xfrm_policy_hthresh {
   struct work_struct work ;
   seqlock_t lock ;
   u8 lbits4 ;
   u8 rbits4 ;
   u8 lbits6 ;
   u8 rbits6 ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/xfrm.h"
struct netns_xfrm {
   struct list_head state_all ;
   struct hlist_head *state_bydst ;
   struct hlist_head *state_bysrc ;
   struct hlist_head *state_byspi ;
   unsigned int state_hmask ;
   unsigned int state_num ;
   struct work_struct state_hash_work ;
   struct list_head policy_all ;
   struct hlist_head *policy_byidx ;
   unsigned int policy_idx_hmask ;
   struct hlist_head policy_inexact[3U] ;
   struct xfrm_policy_hash policy_bydst[3U] ;
   unsigned int policy_count[6U] ;
   struct work_struct policy_hash_work ;
   struct xfrm_policy_hthresh policy_hthresh ;
   struct list_head inexact_bins ;
   struct sock *nlsk ;
   struct sock *nlsk_stash ;
   u32 sysctl_aevent_etime ;
   u32 sysctl_aevent_rseqth ;
   int sysctl_larval_drop ;
   u32 sysctl_acq_expires ;
   struct ctl_table_header *sysctl_hdr ;
   struct dst_ops xfrm4_dst_ops ;
   struct dst_ops xfrm6_dst_ops ;
   spinlock_t xfrm_state_lock ;
   spinlock_t xfrm_policy_lock ;
   struct mutex xfrm_cfg_mutex ;
};
#line 79 
struct mpls_route;
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/mpls.h"
struct netns_mpls {
   int ip_ttl_propagate ;
   int default_ttl ;
   size_t platform_labels ;
   struct mpls_route **platform_label ;
   struct ctl_table_header *ctl ;
};
#line 20 
struct can_dev_rcv_lists;
#line 21 
struct can_pkg_stats;
#line 22 
struct can_rcv_lists_stats;
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/can.h"
struct netns_can {
   struct proc_dir_entry *proc_dir ;
   struct proc_dir_entry *pde_version ;
   struct proc_dir_entry *pde_stats ;
   struct proc_dir_entry *pde_reset_stats ;
   struct proc_dir_entry *pde_rcvlist_all ;
   struct proc_dir_entry *pde_rcvlist_fil ;
   struct proc_dir_entry *pde_rcvlist_inv ;
   struct proc_dir_entry *pde_rcvlist_sff ;
   struct proc_dir_entry *pde_rcvlist_eff ;
   struct proc_dir_entry *pde_rcvlist_err ;
   struct proc_dir_entry *bcmproc_dir ;
   struct can_dev_rcv_lists *rx_alldev_list ;
   spinlock_t rcvlists_lock ;
   struct timer_list stattimer ;
   struct can_pkg_stats *pkg_stats ;
   struct can_rcv_lists_stats *rcv_lists_stats ;
   struct hlist_head cgw_list ;
};
#line 8  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/xdp.h"
struct netns_xdp {
   struct mutex lock ;
   struct hlist_head list ;
};
#line 12 
struct proc_ns_operations;
#line 7  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ns_common.h"
struct ns_common {
   atomic_long_t stashed ;
   struct proc_ns_operations *ops ;
   unsigned int inum ;
};
#line 12 
struct net_generic;
#line 13 
struct uevent_sock;
#line 14 
struct netns_ipvs;
#line 55  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/net_namespace.h"
struct key_tag;
#line 55 
struct ucounts;
#line 55  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/net_namespace.h"
struct net {
   refcount_t passive ;
   refcount_t count ;
   spinlock_t rules_mod_lock ;
   unsigned int dev_unreg_count ;
   unsigned int dev_base_seq ;
   int ifindex ;
   spinlock_t nsid_lock ;
   atomic_t fnhe_genid ;
   struct list_head list ;
   struct list_head exit_list ;
   struct llist_node cleanup_list ;
   struct key_tag *key_domain ;
   struct user_namespace *user_ns ;
   struct ucounts *ucounts ;
   struct idr netns_ids ;
   struct ns_common ns ;
   struct list_head dev_base_head ;
   struct proc_dir_entry *proc_net ;
   struct proc_dir_entry *proc_net_stat ;
   struct ctl_table_set sysctls ;
   struct sock *rtnl ;
   struct sock *genl_sock ;
   struct uevent_sock *uevent_sock ;
   struct hlist_head *dev_name_head ;
   struct hlist_head *dev_index_head ;
   struct raw_notifier_head netdev_chain ;
   u32 hash_mix ;
   struct net_device *loopback_dev ;
   struct list_head rules_ops ;
   struct netns_core core ;
   struct netns_mib mib ;
   struct netns_packet packet ;
   struct netns_unix unx ;
   struct netns_nexthop nexthop ;
   struct netns_ipv4 ipv4 ;
   struct netns_ipv6 ipv6 ;
   struct netns_ieee802154_lowpan ieee802154_lowpan ;
   struct netns_sctp sctp ;
   struct netns_dccp dccp ;
   struct netns_nf nf ;
   struct netns_xt xt ;
   struct netns_ct ct ;
   struct netns_nftables nft ;
   struct netns_nf_frag nf_frag ;
   struct ctl_table_header *nf_frag_frags_hdr ;
   struct sock *nfnl ;
   struct sock *nfnl_stash ;
   struct list_head nfnl_acct_list ;
   struct list_head nfct_timeout_list ;
   struct sk_buff_head wext_nlevents ;
   struct net_generic *gen ;
   struct bpf_prog *flow_dissector_prog ;
   struct netns_xfrm xfrm ;
   struct netns_ipvs *ipvs ;
   struct netns_mpls mpls ;
   struct netns_can can ;
   struct netns_xdp xdp ;
   struct sock *crypto_nlsk ;
   struct sock *diag_nlsk ;
} __attribute__((__designated_init__));
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/assoc_array.h"
struct assoc_array_ptr;
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/assoc_array.h"
struct assoc_array {
   struct assoc_array_ptr *root ;
   unsigned long nr_leaves_on_tree ;
};
#line 83  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/assoc_array.h"
typedef int32_t key_serial_t;
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
typedef uint32_t key_perm_t;
#line 32 
struct key_type;
#line 85  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
struct key_tag {
   struct callback_head rcu ;
   refcount_t usage ;
   bool removed ;
};
#line 91  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
struct __anonstruct_580 {
   u16 desc_len ;
   char desc[6U] ;
};
#line 91  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
union __anonunion_579 {
   struct __anonstruct_580 __anonCompField___anonunion_579_102 ;
   unsigned long x ;
};
#line 91  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
struct keyring_index_key {
   unsigned long hash ;
   union __anonunion_579 __anonCompField_keyring_index_key_103 ;
   struct key_type *type ;
   struct key_tag *domain_tag ;
   char *description ;
};
#line 111  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
union key_payload {
   void *rcu_data0 ;
   void *data[4U] ;
};
#line 153  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
struct key_restriction {
   int (*check)(struct key *, struct key_type *, union key_payload *, struct key *) ;
   struct key *key ;
   struct key_type *keytype ;
};
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
union __anonunion_581 {
   struct list_head graveyard_link ;
   struct rb_node serial_node ;
};
#line 172 
struct key_user;
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
union __anonunion_582 {
   time64_t expiry ;
   time64_t revoked_at ;
};
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
struct __anonstruct_584 {
   unsigned long hash ;
   unsigned long len_desc ;
   struct key_type *type ;
   struct key_tag *domain_tag ;
   char *description ;
};
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
union __anonunion_583 {
   struct keyring_index_key index_key ;
   struct __anonstruct_584 __anonCompField___anonunion_583_106 ;
};
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
struct __anonstruct_586 {
   struct list_head name_link ;
   struct assoc_array keys ;
};
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
union __anonunion_585 {
   union key_payload payload ;
   struct __anonstruct_586 __anonCompField___anonunion_585_108 ;
};
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
struct key {
   refcount_t usage ;
   key_serial_t serial ;
   union __anonunion_581 __anonCompField_key_104 ;
   struct rw_semaphore sem ;
   struct key_user *user ;
   void *security ;
   union __anonunion_582 __anonCompField_key_105 ;
   time64_t last_used_at ;
   kuid_t uid ;
   kgid_t gid ;
   key_perm_t perm ;
   unsigned short quotalen ;
   unsigned short datalen ;
   short state ;
   unsigned long flags ;
   union __anonunion_583 __anonCompField_key_107 ;
   union __anonunion_585 __anonCompField_key_109 ;
   struct key_restriction *restrict_link ;
};
#line 13  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched/user.h"
struct user_struct {
   refcount_t __count ;
   atomic_t processes ;
   atomic_t sigpending ;
   atomic_t fanotify_listeners ;
   atomic_long_t epoll_watches ;
   unsigned long mq_bytes ;
   unsigned long locked_shm ;
   unsigned long unix_inflight ;
   atomic_long_t pipe_bufs ;
   struct hlist_node uidhash_node ;
   kuid_t uid ;
   atomic_long_t locked_vm ;
   struct ratelimit_state ratelimit ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cred.h"
struct group_info {
   atomic_t usage ;
   int ngroups ;
   kgid_t gid[0U] ;
} __attribute__((__designated_init__));
#line 111  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cred.h"
union __anonunion_589 {
   int non_rcu ;
   struct callback_head rcu ;
};
#line 111  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cred.h"
struct cred {
   atomic_t usage ;
   atomic_t subscribers ;
   void *put_addr ;
   unsigned int magic ;
   kuid_t uid ;
   kgid_t gid ;
   kuid_t suid ;
   kgid_t sgid ;
   kuid_t euid ;
   kgid_t egid ;
   kuid_t fsuid ;
   kgid_t fsgid ;
   unsigned int securebits ;
   kernel_cap_t cap_inheritable ;
   kernel_cap_t cap_permitted ;
   kernel_cap_t cap_effective ;
   kernel_cap_t cap_bset ;
   kernel_cap_t cap_ambient ;
   unsigned char jit_keyring ;
   struct key *session_keyring ;
   struct key *process_keyring ;
   struct key *thread_keyring ;
   struct key *request_key_auth ;
   void *security ;
   struct user_struct *user ;
   struct user_namespace *user_ns ;
   struct group_info *group_info ;
   union __anonunion_589 __anonCompField_cred_110 ;
} __attribute__((__designated_init__));
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/seq_file.h"
struct seq_file {
   char *buf ;
   size_t size ;
   size_t from ;
   size_t count ;
   size_t pad_until ;
   loff_t index ;
   loff_t read_pos ;
   u64 version ;
   struct mutex lock ;
   struct seq_operations *op ;
   int poll_event ;
   struct file *file ;
   void *private ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/seq_file.h"
struct seq_operations {
   void *(*start)(struct seq_file *, loff_t *) ;
   void (*stop)(struct seq_file *, void *) ;
   void *(*next)(struct seq_file *, void *, loff_t *) ;
   int (*show)(struct seq_file *, void *) ;
};
#line 275  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/net_namespace.h"
struct __anonstruct_possible_net_t_590 {
   struct net *net ;
};
#line 275  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/net_namespace.h"
typedef struct __anonstruct_possible_net_t_590 possible_net_t;
#line 58  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct ieee_ets {
   __u8 willing ;
   __u8 ets_cap ;
   __u8 cbs ;
   __u8 tc_tx_bw[8U] ;
   __u8 tc_rx_bw[8U] ;
   __u8 tc_tsa[8U] ;
   __u8 prio_tc[8U] ;
   __u8 tc_reco_bw[8U] ;
   __u8 tc_reco_tsa[8U] ;
   __u8 reco_prio_tc[8U] ;
};
#line 78  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct ieee_maxrate {
   __u64 tc_maxrate[8U] ;
};
#line 119  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct ieee_qcn {
   __u8 rpg_enable[8U] ;
   __u32 rppp_max_rps[8U] ;
   __u32 rpg_time_reset[8U] ;
   __u32 rpg_byte_reset[8U] ;
   __u32 rpg_threshold[8U] ;
   __u32 rpg_max_rate[8U] ;
   __u32 rpg_ai_rate[8U] ;
   __u32 rpg_hai_rate[8U] ;
   __u32 rpg_gd[8U] ;
   __u32 rpg_min_dec_fac[8U] ;
   __u32 rpg_min_rate[8U] ;
   __u32 cndd_state_machine[8U] ;
};
#line 141  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct ieee_qcn_stats {
   __u64 rppp_rp_centiseconds[8U] ;
   __u32 rppp_created_rps[8U] ;
};
#line 157  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct ieee_pfc {
   __u8 pfc_cap ;
   __u8 pfc_en ;
   __u8 mbc ;
   __u16 delay ;
   __u64 requests[8U] ;
   __u64 indications[8U] ;
};
#line 168  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct dcbnl_buffer {
   __u8 prio2buffer[8U] ;
   __u32 buffer_size[8U] ;
   __u32 total_size ;
};
#line 190  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct cee_pg {
   __u8 willing ;
   __u8 error ;
   __u8 pg_en ;
   __u8 tcs_supported ;
   __u8 pg_bw[8U] ;
   __u8 prio_pg[8U] ;
};
#line 207  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct cee_pfc {
   __u8 willing ;
   __u8 error ;
   __u8 pfc_en ;
   __u8 tcs_supported ;
};
#line 244  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct dcb_app {
   __u8 selector ;
   __u8 priority ;
   __u16 protocol ;
};
#line 259  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct dcb_peer_app_info {
   __u8 willing ;
   __u8 error ;
};
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/dcbnl.h"
struct dcbnl_rtnl_ops {
   int (*ieee_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_setets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_getmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_setmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_getqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_setqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_getqcnstats)(struct net_device *, struct ieee_qcn_stats *) ;
   int (*ieee_getpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_setpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_getapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_setapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_delapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_peer_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_peer_getpfc)(struct net_device *, struct ieee_pfc *) ;
   u8 (*getstate)(struct net_device *) ;
   u8 (*setstate)(struct net_device *, u8 ) ;
   void (*getpermhwaddr)(struct net_device *, u8 *) ;
   void (*setpgtccfgtx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgtx)(struct net_device *, int , u8 ) ;
   void (*setpgtccfgrx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgrx)(struct net_device *, int , u8 ) ;
   void (*getpgtccfgtx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgtx)(struct net_device *, int , u8 *) ;
   void (*getpgtccfgrx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgrx)(struct net_device *, int , u8 *) ;
   void (*setpfccfg)(struct net_device *, int , u8 ) ;
   void (*getpfccfg)(struct net_device *, int , u8 *) ;
   u8 (*setall)(struct net_device *) ;
   u8 (*getcap)(struct net_device *, int , u8 *) ;
   int (*getnumtcs)(struct net_device *, int , u8 *) ;
   int (*setnumtcs)(struct net_device *, int , u8 ) ;
   u8 (*getpfcstate)(struct net_device *) ;
   void (*setpfcstate)(struct net_device *, u8 ) ;
   void (*getbcncfg)(struct net_device *, int , u32 *) ;
   void (*setbcncfg)(struct net_device *, int , u32 ) ;
   void (*getbcnrp)(struct net_device *, int , u8 *) ;
   void (*setbcnrp)(struct net_device *, int , u8 ) ;
   int (*setapp)(struct net_device *, u8 , u16 , u8 ) ;
   int (*getapp)(struct net_device *, u8 , u16 ) ;
   u8 (*getfeatcfg)(struct net_device *, int , u8 *) ;
   u8 (*setfeatcfg)(struct net_device *, int , u8 ) ;
   u8 (*getdcbx)(struct net_device *) ;
   u8 (*setdcbx)(struct net_device *, u8 ) ;
   int (*peer_getappinfo)(struct net_device *, struct dcb_peer_app_info *, u16 *) ;
   int (*peer_getapptable)(struct net_device *, struct dcb_app *) ;
   int (*cee_peer_getpg)(struct net_device *, struct cee_pg *) ;
   int (*cee_peer_getpfc)(struct net_device *, struct cee_pfc *) ;
   int (*dcbnl_getbuffer)(struct net_device *, struct dcbnl_buffer *) ;
   int (*dcbnl_setbuffer)(struct net_device *, struct dcbnl_buffer *) ;
};
#line 41  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/taskstats.h"
struct taskstats {
   __u16 version ;
   __u32 ac_exitcode ;
   __u8 ac_flag ;
   __u8 ac_nice ;
   __u64 cpu_count ;
   __u64 cpu_delay_total ;
   __u64 blkio_count ;
   __u64 blkio_delay_total ;
   __u64 swapin_count ;
   __u64 swapin_delay_total ;
   __u64 cpu_run_real_total ;
   __u64 cpu_run_virtual_total ;
   char ac_comm[32U] ;
   __u8 ac_sched ;
   __u8 ac_pad[3U] ;
   __u32 ac_uid ;
   __u32 ac_gid ;
   __u32 ac_pid ;
   __u32 ac_ppid ;
   __u32 ac_btime ;
   __u64 ac_etime ;
   __u64 ac_utime ;
   __u64 ac_stime ;
   __u64 ac_minflt ;
   __u64 ac_majflt ;
   __u64 coremem ;
   __u64 virtmem ;
   __u64 hiwater_rss ;
   __u64 hiwater_vm ;
   __u64 read_char ;
   __u64 write_char ;
   __u64 read_syscalls ;
   __u64 write_syscalls ;
   __u64 read_bytes ;
   __u64 write_bytes ;
   __u64 cancelled_write_bytes ;
   __u64 nvcsw ;
   __u64 nivcsw ;
   __u64 ac_utimescaled ;
   __u64 ac_stimescaled ;
   __u64 cpu_scaled_run_real_total ;
   __u64 freepages_count ;
   __u64 freepages_delay_total ;
   __u64 thrashing_count ;
   __u64 thrashing_delay_total ;
};
#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/cgroupstats.h"
struct mnt_namespace;
#line 60 
struct uts_namespace;
#line 61 
struct ipc_namespace;
#line 62 
struct cgroup_namespace;
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/nsproxy.h"
struct nsproxy {
   atomic_t count ;
   struct uts_namespace *uts_ns ;
   struct ipc_namespace *ipc_ns ;
   struct mnt_namespace *mnt_ns ;
   struct pid_namespace *pid_ns_for_children ;
   struct net *net_ns ;
   struct cgroup_namespace *cgroup_ns ;
};
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/user_namespace.h"
struct uid_gid_extent {
   u32 first ;
   u32 lower_first ;
   u32 count ;
};
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/user_namespace.h"
struct __anonstruct_592 {
   struct uid_gid_extent *forward ;
   struct uid_gid_extent *reverse ;
};
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/user_namespace.h"
union __anonunion_591 {
   struct uid_gid_extent extent[5U] ;
   struct __anonstruct_592 __anonCompField___anonunion_591_111 ;
};
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/user_namespace.h"
struct uid_gid_map {
   u32 nr_extents ;
   union __anonunion_591 __anonCompField_uid_gid_map_112 ;
};
#line 55  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/user_namespace.h"
struct user_namespace {
   struct uid_gid_map uid_map ;
   struct uid_gid_map gid_map ;
   struct uid_gid_map projid_map ;
   atomic_t count ;
   struct user_namespace *parent ;
   int level ;
   kuid_t owner ;
   kgid_t group ;
   struct ns_common ns ;
   unsigned long flags ;
   struct list_head keyring_name_list ;
   struct key *user_keyring_register ;
   struct rw_semaphore keyring_sem ;
   struct key *persistent_keyring_register ;
   struct work_struct work ;
   struct ctl_table_set set ;
   struct ctl_table_header *sysctls ;
   struct ucounts *ucounts ;
   int ucount_max[9U] ;
} __attribute__((__designated_init__));
#line 91  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/user_namespace.h"
struct ucounts {
   struct hlist_node node ;
   struct user_namespace *ns ;
   kuid_t uid ;
   int count ;
   atomic_t ucount[9U] ;
};
#line 65  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct bpf_insn {
   __u8 code ;
   __u8 dst_reg : 4 ;
   __u8 src_reg : 4 ;
   __s16 off ;
   __s32 imm ;
};
#line 79  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct bpf_cgroup_storage_key {
   __u64 cgroup_inode_id ;
   __u32 attach_type ;
};
#line 110 
enum bpf_map_type {
    BPF_MAP_TYPE_UNSPEC = 0,
    BPF_MAP_TYPE_HASH = 1,
    BPF_MAP_TYPE_ARRAY = 2,
    BPF_MAP_TYPE_PROG_ARRAY = 3,
    BPF_MAP_TYPE_PERF_EVENT_ARRAY = 4,
    BPF_MAP_TYPE_PERCPU_HASH = 5,
    BPF_MAP_TYPE_PERCPU_ARRAY = 6,
    BPF_MAP_TYPE_STACK_TRACE = 7,
    BPF_MAP_TYPE_CGROUP_ARRAY = 8,
    BPF_MAP_TYPE_LRU_HASH = 9,
    BPF_MAP_TYPE_LRU_PERCPU_HASH = 10,
    BPF_MAP_TYPE_LPM_TRIE = 11,
    BPF_MAP_TYPE_ARRAY_OF_MAPS = 12,
    BPF_MAP_TYPE_HASH_OF_MAPS = 13,
    BPF_MAP_TYPE_DEVMAP = 14,
    BPF_MAP_TYPE_SOCKMAP = 15,
    BPF_MAP_TYPE_CPUMAP = 16,
    BPF_MAP_TYPE_XSKMAP = 17,
    BPF_MAP_TYPE_SOCKHASH = 18,
    BPF_MAP_TYPE_CGROUP_STORAGE = 19,
    BPF_MAP_TYPE_REUSEPORT_SOCKARRAY = 20,
    BPF_MAP_TYPE_PERCPU_CGROUP_STORAGE = 21,
    BPF_MAP_TYPE_QUEUE = 22,
    BPF_MAP_TYPE_STACK = 23,
    BPF_MAP_TYPE_SK_STORAGE = 24,
    BPF_MAP_TYPE_DEVMAP_HASH = 25
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_594 {
   __u32 map_type ;
   __u32 key_size ;
   __u32 value_size ;
   __u32 max_entries ;
   __u32 map_flags ;
   __u32 inner_map_fd ;
   __u32 numa_node ;
   char map_name[16U] ;
   __u32 map_ifindex ;
   __u32 btf_fd ;
   __u32 btf_key_type_id ;
   __u32 btf_value_type_id ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
union __anonunion_596 {
   __u64 value ;
   __u64 next_key ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_595 {
   __u32 map_fd ;
   __u64 key ;
   union __anonunion_596 __anonCompField___anonstruct_595_115 ;
   __u64 flags ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_597 {
   __u32 prog_type ;
   __u32 insn_cnt ;
   __u64 insns ;
   __u64 license ;
   __u32 log_level ;
   __u32 log_size ;
   __u64 log_buf ;
   __u32 kern_version ;
   __u32 prog_flags ;
   char prog_name[16U] ;
   __u32 prog_ifindex ;
   __u32 expected_attach_type ;
   __u32 prog_btf_fd ;
   __u32 func_info_rec_size ;
   __u64 func_info ;
   __u32 func_info_cnt ;
   __u32 line_info_rec_size ;
   __u64 line_info ;
   __u32 line_info_cnt ;
   __u32 attach_btf_id ;
   __u32 attach_prog_fd ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_598 {
   __u64 pathname ;
   __u32 bpf_fd ;
   __u32 file_flags ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_599 {
   __u32 target_fd ;
   __u32 attach_bpf_fd ;
   __u32 attach_type ;
   __u32 attach_flags ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_test_600 {
   __u32 prog_fd ;
   __u32 retval ;
   __u32 data_size_in ;
   __u32 data_size_out ;
   __u64 data_in ;
   __u64 data_out ;
   __u32 repeat ;
   __u32 duration ;
   __u32 ctx_size_in ;
   __u32 ctx_size_out ;
   __u64 ctx_in ;
   __u64 ctx_out ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
union __anonunion_602 {
   __u32 start_id ;
   __u32 prog_id ;
   __u32 map_id ;
   __u32 btf_id ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_601 {
   union __anonunion_602 __anonCompField___anonstruct_601_120 ;
   __u32 next_id ;
   __u32 open_flags ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_info_603 {
   __u32 bpf_fd ;
   __u32 info_len ;
   __u64 info ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_query_604 {
   __u32 target_fd ;
   __u32 attach_type ;
   __u32 query_flags ;
   __u32 attach_flags ;
   __u64 prog_ids ;
   __u32 prog_cnt ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_raw_tracepoint_605 {
   __u64 name ;
   __u32 prog_fd ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_606 {
   __u64 btf ;
   __u64 btf_log_buf ;
   __u32 btf_size ;
   __u32 btf_log_size ;
   __u32 btf_log_level ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_task_fd_query_607 {
   __u32 pid ;
   __u32 fd ;
   __u32 flags ;
   __u32 buf_len ;
   __u64 buf ;
   __u32 prog_id ;
   __u32 fd_type ;
   __u64 probe_offset ;
   __u64 probe_addr ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
union bpf_attr {
   struct __anonstruct_594 __anonCompField_bpf_attr_114 ;
   struct __anonstruct_595 __anonCompField_bpf_attr_116 ;
   struct __anonstruct_597 __anonCompField_bpf_attr_117 ;
   struct __anonstruct_598 __anonCompField_bpf_attr_118 ;
   struct __anonstruct_599 __anonCompField_bpf_attr_119 ;
   struct __anonstruct_test_600 test ;
   struct __anonstruct_601 __anonCompField_bpf_attr_121 ;
   struct __anonstruct_info_603 info ;
   struct __anonstruct_query_604 query ;
   struct __anonstruct_raw_tracepoint_605 raw_tracepoint ;
   struct __anonstruct_606 __anonCompField_bpf_attr_122 ;
   struct __anonstruct_task_fd_query_607 task_fd_query ;
} __attribute__((__aligned__(8)));
#line 3653  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct bpf_func_info {
   __u32 insn_off ;
   __u32 type_id ;
};
#line 3661  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct bpf_line_info {
   __u32 insn_off ;
   __u32 file_name_off ;
   __u32 line_off ;
   __u32 line_col ;
};
#line 40  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rbtree_latch.h"
struct latch_tree_node {
   struct rb_node node[2U] ;
};
#line 215 
struct bpf_prog_aux;
#line 216 
struct bpf_map;
#line 217 
struct btf;
#line 218 
struct btf_type;
#line 37  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_map_ops {
   int (*map_alloc_check)(union bpf_attr *) ;
   struct bpf_map *(*map_alloc)(union bpf_attr *) ;
   void (*map_release)(struct bpf_map *, struct file *) ;
   void (*map_free)(struct bpf_map *) ;
   int (*map_get_next_key)(struct bpf_map *, void *, void *) ;
   void (*map_release_uref)(struct bpf_map *) ;
   void *(*map_lookup_elem_sys_only)(struct bpf_map *, void *) ;
   void *(*map_lookup_elem)(struct bpf_map *, void *) ;
   int (*map_update_elem)(struct bpf_map *, void *, void *, u64 ) ;
   int (*map_delete_elem)(struct bpf_map *, void *) ;
   int (*map_push_elem)(struct bpf_map *, void *, u64 ) ;
   int (*map_pop_elem)(struct bpf_map *, void *) ;
   int (*map_peek_elem)(struct bpf_map *, void *) ;
   void *(*map_fd_get_ptr)(struct bpf_map *, struct file *, int ) ;
   void (*map_fd_put_ptr)(void *) ;
   u32 (*map_gen_lookup)(struct bpf_map *, struct bpf_insn *) ;
   u32 (*map_fd_sys_lookup_elem)(void *) ;
   void (*map_seq_show_elem)(struct bpf_map *, void *, struct seq_file *) ;
   int (*map_check_btf)(struct bpf_map *, struct btf *, struct btf_type *, struct btf_type *) ;
   int (*map_poke_track)(struct bpf_map *, struct bpf_prog_aux *) ;
   void (*map_poke_untrack)(struct bpf_map *, struct bpf_prog_aux *) ;
   void (*map_poke_run)(struct bpf_map *, u32 , struct bpf_prog *, struct bpf_prog *) ;
   int (*map_direct_value_addr)(struct bpf_map *, u64 *, u32 ) ;
   int (*map_direct_value_meta)(struct bpf_map *, u64 , u32 *) ;
   int (*map_mmap)(struct bpf_map *, struct vm_area_struct *) ;
};
#line 82  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_map_memory {
   u32 pages ;
   struct user_struct *user ;
};
#line 87  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_map {
   struct bpf_map_ops *ops ;
   struct bpf_map *inner_map_meta ;
   void *security ;
   enum bpf_map_type map_type ;
   u32 key_size ;
   u32 value_size ;
   u32 max_entries ;
   u32 map_flags ;
   int spin_lock_off ;
   u32 id ;
   int numa_node ;
   u32 btf_key_type_id ;
   u32 btf_value_type_id ;
   struct btf *btf ;
   struct bpf_map_memory memory ;
   char name[16U] ;
   bool unpriv_array ;
   bool frozen ;
   atomic64_t refcnt ;
   atomic64_t usercnt ;
   struct work_struct work ;
   struct mutex freeze_mutex ;
   u64 writecnt ;
};
#line 151 
struct bpf_offload_dev;
#line 152 
struct bpf_offloaded_map;
#line 156  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_map_dev_ops {
   int (*map_get_next_key)(struct bpf_offloaded_map *, void *, void *) ;
   int (*map_lookup_elem)(struct bpf_offloaded_map *, void *, void *) ;
   int (*map_update_elem)(struct bpf_offloaded_map *, void *, void *, u64 ) ;
   int (*map_delete_elem)(struct bpf_offloaded_map *, void *) ;
};
#line 166  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_offloaded_map {
   struct bpf_map map ;
   struct net_device *netdev ;
   struct bpf_map_dev_ops *dev_ops ;
   void *dev_priv ;
   struct list_head offloads ;
};
#line 327  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_prog_ops {
   int (*test_run)(struct bpf_prog *, union bpf_attr *, union bpf_attr *) ;
};
#line 369  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_prog_offload {
   struct bpf_prog *prog ;
   struct net_device *netdev ;
   struct bpf_offload_dev *offdev ;
   void *dev_priv ;
   struct list_head offloads ;
   bool dev_state ;
   bool opt_failed ;
   void *jited_image ;
   u32 jited_len ;
};
#line 394  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_prog_stats {
   u64 cnt ;
   u64 nsecs ;
   struct u64_stats_sync syncp ;
} __attribute__((__aligned__(16)));
#line 400  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct btf_func_model {
   u8 ret_size ;
   u8 nr_args ;
   u8 arg_size[12U] ;
};
#line 447 
enum bpf_tramp_prog_type {
    BPF_TRAMP_FENTRY = 0,
    BPF_TRAMP_FEXIT = 1,
    BPF_TRAMP_MAX = 2
};
#line 454  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct __anonstruct_func_640 {
   struct btf_func_model model ;
   void *addr ;
   bool ftrace_managed ;
};
#line 454  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_trampoline {
   struct hlist_node hlist ;
   struct mutex mutex ;
   refcount_t refcnt ;
   u64 key ;
   struct __anonstruct_func_640 func ;
   struct hlist_head progs_hlist[2U] ;
   int progs_cnt[2U] ;
   void *image ;
   u64 selector ;
};
#line 495  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_func_info_aux {
   bool unreliable ;
};
#line 504  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct __anonstruct_tail_call_642 {
   struct bpf_map *map ;
   u32 key ;
};
#line 504  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
union __anonunion_641 {
   struct __anonstruct_tail_call_642 tail_call ;
};
#line 504  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_jit_poke_descriptor {
   void *ip ;
   union __anonunion_641 __anonCompField_bpf_jit_poke_descriptor_147 ;
   bool ip_stable ;
   u8 adj_off ;
   u16 reason ;
};
#line 517  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
union __anonunion_643 {
   struct work_struct work ;
   struct callback_head rcu ;
};
#line 517  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_prog_aux {
   atomic64_t refcnt ;
   u32 used_map_cnt ;
   u32 max_ctx_offset ;
   u32 max_pkt_offset ;
   u32 max_tp_access ;
   u32 stack_depth ;
   u32 id ;
   u32 func_cnt ;
   u32 func_idx ;
   u32 attach_btf_id ;
   struct bpf_prog *linked_prog ;
   bool verifier_zext ;
   bool offload_requested ;
   bool attach_btf_trace ;
   bool func_proto_unreliable ;
   enum bpf_tramp_prog_type trampoline_prog_type ;
   struct bpf_trampoline *trampoline ;
   struct hlist_node tramp_hlist ;
   struct btf_type *attach_func_proto ;
   char *attach_func_name ;
   struct bpf_prog **func ;
   void *jit_data ;
   struct bpf_jit_poke_descriptor *poke_tab ;
   u32 size_poke_tab ;
   struct latch_tree_node ksym_tnode ;
   struct list_head ksym_lnode ;
   struct bpf_prog_ops *ops ;
   struct bpf_map **used_maps ;
   struct bpf_prog *prog ;
   struct user_struct *user ;
   u64 load_time ;
   struct bpf_map *cgroup_storage[2U] ;
   char name[16U] ;
   void *security ;
   struct bpf_prog_offload *offload ;
   struct btf *btf ;
   struct bpf_func_info *func_info ;
   struct bpf_func_info_aux *func_info_aux ;
   struct bpf_line_info *linfo ;
   void **jited_linfo ;
   u32 func_info_cnt ;
   u32 nr_linfo ;
   u32 linfo_idx ;
   u32 num_exentries ;
   struct exception_table_entry *extable ;
   struct bpf_prog_stats *stats ;
   union __anonunion_643 __anonCompField_bpf_prog_aux_148 ;
};
#line 686 
struct bpf_cgroup_storage;
#line 686  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_prog_array_item {
   struct bpf_prog *prog ;
   struct bpf_cgroup_storage *cgroup_storage[2U] ;
};
#line 691  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_prog_array {
   struct callback_head rcu ;
   struct bpf_prog_array_item items[0U] ;
};
#line 1335 
struct cgroup;
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf-cgroup.h"
struct bpf_cgroup_storage_map;
#line 37  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf-cgroup.h"
struct bpf_storage_buffer {
   struct callback_head rcu ;
   char data[0U] ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf-cgroup.h"
union __anonunion_645 {
   struct bpf_storage_buffer *buf ;
   void *percpu_buf ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf-cgroup.h"
struct bpf_cgroup_storage {
   union __anonunion_645 __anonCompField_bpf_cgroup_storage_150 ;
   struct bpf_cgroup_storage_map *map ;
   struct bpf_cgroup_storage_key key ;
   struct list_head list ;
   struct rb_node node ;
   struct callback_head rcu ;
};
#line 62  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf-cgroup.h"
struct cgroup_bpf {
   struct bpf_prog_array *effective[26U] ;
   struct list_head progs[26U] ;
   u32 flags[26U] ;
   struct bpf_prog_array *inactive ;
   struct percpu_ref refcnt ;
   struct work_struct release_work ;
};
#line 69  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kthread.h"
struct kthread_work;
#line 86  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kthread.h"
struct kthread_worker {
   unsigned int flags ;
   raw_spinlock_t lock ;
   struct list_head work_list ;
   struct list_head delayed_work_list ;
   struct task_struct *task ;
   struct kthread_work *current_work ;
};
#line 95  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kthread.h"
struct kthread_work {
   struct list_head node ;
   void (*func)(struct kthread_work *) ;
   struct kthread_worker *worker ;
   int canceling ;
};
#line 103  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kthread.h"
struct kthread_delayed_work {
   struct kthread_work work ;
   struct timer_list timer ;
};
#line 199 
struct cgroup_subsys_state;
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/psi_types.h"
struct psi_group_cpu {
   seqcount_t seq ;
   unsigned int tasks[3U] ;
   u32 state_mask ;
   u32 times[6U] ;
   u64 state_start ;
   u32 times_prev[2U][6U] ;
};
#line 96 
struct psi_group;
#line 128  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/psi_types.h"
struct psi_group {
   struct mutex avgs_lock ;
   struct psi_group_cpu *pcpu ;
   u64 avg_total[5U] ;
   u64 avg_last_update ;
   u64 avg_next_update ;
   struct delayed_work avgs_work ;
   u64 total[2U][5U] ;
   unsigned long avg[5U][3U] ;
   atomic_t poll_scheduled ;
   struct kthread_worker *poll_kworker ;
   struct kthread_delayed_work poll_work ;
   struct mutex trigger_lock ;
   struct list_head triggers ;
   u32 nr_triggers[5U] ;
   u32 poll_states ;
   u64 poll_min_period ;
   u64 polling_total[5U] ;
   u64 polling_next_update ;
   u64 polling_until ;
};
#line 166 
struct cgroup_root;
#line 167 
struct cgroup_subsys;
#line 168 
struct cgroup_taskset;
#line 119  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cgroup_file {
   struct kernfs_node *kn ;
   unsigned long notified_at ;
   struct timer_list notify_timer ;
};
#line 133  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cgroup_subsys_state {
   struct cgroup *cgroup ;
   struct cgroup_subsys *ss ;
   struct percpu_ref refcnt ;
   struct list_head sibling ;
   struct list_head children ;
   struct list_head rstat_css_node ;
   int id ;
   unsigned int flags ;
   u64 serial_nr ;
   atomic_t online_cnt ;
   struct work_struct destroy_work ;
   struct rcu_work destroy_rwork ;
   struct cgroup_subsys_state *parent ;
};
#line 190  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct css_set {
   struct cgroup_subsys_state *subsys[14U] ;
   refcount_t refcount ;
   struct css_set *dom_cset ;
   struct cgroup *dfl_cgrp ;
   int nr_tasks ;
   struct list_head tasks ;
   struct list_head mg_tasks ;
   struct list_head dying_tasks ;
   struct list_head task_iters ;
   struct list_head e_cset_node[14U] ;
   struct list_head threaded_csets ;
   struct list_head threaded_csets_node ;
   struct hlist_node hlist ;
   struct list_head cgrp_links ;
   struct list_head mg_preload_node ;
   struct list_head mg_node ;
   struct cgroup *mg_src_cgrp ;
   struct cgroup *mg_dst_cgrp ;
   struct css_set *mg_dst_cset ;
   bool dead ;
   struct callback_head callback_head ;
};
#line 279  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cgroup_base_stat {
   struct task_cputime cputime ;
};
#line 303  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cgroup_rstat_cpu {
   struct u64_stats_sync bsync ;
   struct cgroup_base_stat bstat ;
   struct cgroup_base_stat last_bstat ;
   struct cgroup *updated_children ;
   struct cgroup *updated_next ;
};
#line 332  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cgroup_freezer_state {
   bool freeze ;
   int e_freeze ;
   int nr_frozen_descendants ;
   int nr_frozen_tasks ;
};
#line 351  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cgroup {
   struct cgroup_subsys_state self ;
   unsigned long flags ;
   int level ;
   int max_depth ;
   int nr_descendants ;
   int nr_dying_descendants ;
   int max_descendants ;
   int nr_populated_csets ;
   int nr_populated_domain_children ;
   int nr_populated_threaded_children ;
   int nr_threaded_children ;
   struct kernfs_node *kn ;
   struct cgroup_file procs_file ;
   struct cgroup_file events_file ;
   u16 subtree_control ;
   u16 subtree_ss_mask ;
   u16 old_subtree_control ;
   u16 old_subtree_ss_mask ;
   struct cgroup_subsys_state *subsys[14U] ;
   struct cgroup_root *root ;
   struct list_head cset_links ;
   struct list_head e_csets[14U] ;
   struct cgroup *dom_cgrp ;
   struct cgroup *old_dom_cgrp ;
   struct cgroup_rstat_cpu *rstat_cpu ;
   struct list_head rstat_css_list ;
   struct cgroup_base_stat last_bstat ;
   struct cgroup_base_stat bstat ;
   struct prev_cputime prev_cputime ;
   struct list_head pidlists ;
   struct mutex pidlist_mutex ;
   wait_queue_head_t offline_waitq ;
   struct work_struct release_agent_work ;
   struct psi_group psi ;
   struct cgroup_bpf bpf ;
   atomic_t congestion_count ;
   struct cgroup_freezer_state freezer ;
   u64 ancestor_ids[] ;
};
#line 489  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cgroup_root {
   struct kernfs_root *kf_root ;
   unsigned int subsys_mask ;
   int hierarchy_id ;
   struct cgroup cgrp ;
   u64 cgrp_ancestor_id_storage ;
   atomic_t nr_cgrps ;
   struct list_head root_list ;
   unsigned int flags ;
   char release_agent_path[4096U] ;
   char name[64U] ;
};
#line 527  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cftype {
   char name[64U] ;
   unsigned long private ;
   size_t max_write_len ;
   unsigned int flags ;
   unsigned int file_offset ;
   struct cgroup_subsys *ss ;
   struct list_head node ;
   struct kernfs_ops *kf_ops ;
   int (*open)(struct kernfs_open_file *) ;
   void (*release)(struct kernfs_open_file *) ;
   u64 (*read_u64)(struct cgroup_subsys_state *, struct cftype *) ;
   s64 (*read_s64)(struct cgroup_subsys_state *, struct cftype *) ;
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   int (*write_u64)(struct cgroup_subsys_state *, struct cftype *, u64 ) ;
   int (*write_s64)(struct cgroup_subsys_state *, struct cftype *, s64 ) ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   __poll_t (*poll)(struct kernfs_open_file *, struct poll_table_struct *) ;
   struct lock_class_key lockdep_key ;
};
#line 616  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cgroup_subsys {
   struct cgroup_subsys_state *(*css_alloc)(struct cgroup_subsys_state *) ;
   int (*css_online)(struct cgroup_subsys_state *) ;
   void (*css_offline)(struct cgroup_subsys_state *) ;
   void (*css_released)(struct cgroup_subsys_state *) ;
   void (*css_free)(struct cgroup_subsys_state *) ;
   void (*css_reset)(struct cgroup_subsys_state *) ;
   void (*css_rstat_flush)(struct cgroup_subsys_state *, int ) ;
   int (*css_extra_stat_show)(struct seq_file *, struct cgroup_subsys_state *) ;
   int (*can_attach)(struct cgroup_taskset *) ;
   void (*cancel_attach)(struct cgroup_taskset *) ;
   void (*attach)(struct cgroup_taskset *) ;
   void (*post_attach)(void) ;
   int (*can_fork)(struct task_struct *) ;
   void (*cancel_fork)(struct task_struct *) ;
   void (*fork)(struct task_struct *) ;
   void (*exit)(struct task_struct *) ;
   void (*release)(struct task_struct *) ;
   void (*bind)(struct cgroup_subsys_state *) ;
   bool early_init : 1 ;
   bool implicit_on_dfl : 1 ;
   bool threaded : 1 ;
   bool broken_hierarchy : 1 ;
   bool warned_broken_hierarchy : 1 ;
   int id ;
   char *name ;
   char *legacy_name ;
   struct cgroup_root *root ;
   struct idr css_idr ;
   struct list_head cfts ;
   struct cftype *dfl_cftypes ;
   struct cftype *legacy_cftypes ;
   unsigned int depends_on ;
};
#line 848  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup.h"
struct cgroup_namespace {
   refcount_t count ;
   struct ns_common ns ;
   struct user_namespace *user_ns ;
   struct ucounts *ucounts ;
   struct css_set *root_cset ;
};
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netprio_cgroup.h"
struct netprio_map {
   struct callback_head rcu ;
   u32 priomap_len ;
   u32 priomap[] ;
};
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/xdp.h"
struct xdp_mem_info {
   u32 type ;
   u32 id ;
};
#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/xdp.h"
struct xdp_rxq_info {
   struct net_device *dev ;
   u32 queue_index ;
   u32 reg_state ;
   struct xdp_mem_info mem ;
} __attribute__((__aligned__(64)));
#line 75  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/xdp.h"
struct xdp_frame {
   void *data ;
   u16 len ;
   u16 headroom ;
   u16 metasize ;
   struct xdp_mem_info mem ;
   struct net_device *dev_rx ;
};
#line 175 
struct netdev_bpf;
#line 161  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/security.h"
struct xfrm_state;
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched/signal.h"
struct sighand_struct {
   spinlock_t siglock ;
   refcount_t count ;
   wait_queue_head_t signalfd_wqh ;
   struct k_sigaction action[64U] ;
};
#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched/signal.h"
struct pacct_struct {
   int ac_flag ;
   long ac_exitcode ;
   unsigned long ac_mem ;
   u64 ac_utime ;
   u64 ac_stime ;
   unsigned long ac_minflt ;
   unsigned long ac_majflt ;
};
#line 36  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched/signal.h"
struct cpu_itimer {
   u64 expires ;
   u64 incr ;
};
#line 45  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched/signal.h"
struct task_cputime_atomic {
   atomic64_t utime ;
   atomic64_t stime ;
   atomic64_t sum_exec_runtime ;
};
#line 64  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched/signal.h"
struct thread_group_cputimer {
   struct task_cputime_atomic cputime_atomic ;
};
#line 80 
struct tty_struct;
#line 80 
struct autogroup;
#line 80 
struct tty_audit_buf;
#line 80  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched/signal.h"
struct signal_struct {
   refcount_t sigcnt ;
   atomic_t live ;
   int nr_threads ;
   struct list_head thread_head ;
   wait_queue_head_t wait_chldexit ;
   struct task_struct *curr_target ;
   struct sigpending shared_pending ;
   struct hlist_head multiprocess ;
   int group_exit_code ;
   int notify_count ;
   struct task_struct *group_exit_task ;
   int group_stop_count ;
   unsigned int flags ;
   unsigned int is_child_subreaper : 1 ;
   unsigned int has_child_subreaper : 1 ;
   int posix_timer_id ;
   struct list_head posix_timers ;
   struct hrtimer real_timer ;
   ktime_t it_real_incr ;
   struct cpu_itimer it[2U] ;
   struct thread_group_cputimer cputimer ;
   struct posix_cputimers posix_cputimers ;
   struct pid *pids[4U] ;
   struct pid *tty_old_pgrp ;
   int leader ;
   struct tty_struct *tty ;
   struct autogroup *autogroup ;
   seqlock_t stats_lock ;
   u64 utime ;
   u64 stime ;
   u64 cutime ;
   u64 cstime ;
   u64 gtime ;
   u64 cgtime ;
   struct prev_cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   unsigned long cnvcsw ;
   unsigned long cnivcsw ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   unsigned long cmin_flt ;
   unsigned long cmaj_flt ;
   unsigned long inblock ;
   unsigned long oublock ;
   unsigned long cinblock ;
   unsigned long coublock ;
   unsigned long maxrss ;
   unsigned long cmaxrss ;
   struct task_io_accounting ioac ;
   unsigned long long sum_sched_runtime ;
   struct rlimit rlim[16U] ;
   struct pacct_struct pacct ;
   struct taskstats *stats ;
   unsigned int audit_tty ;
   struct tty_audit_buf *tty_audit_buf ;
   bool oom_flag_origin ;
   short oom_score_adj ;
   short oom_score_adj_min ;
   struct mm_struct *oom_mm ;
   struct mutex cred_guard_mutex ;
} __attribute__((__designated_init__));
#line 44  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/netlink.h"
struct nlmsghdr {
   __u32 nlmsg_len ;
   __u16 nlmsg_type ;
   __u16 nlmsg_flags ;
   __u32 nlmsg_seq ;
   __u32 nlmsg_pid ;
};
#line 211  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/netlink.h"
struct nlattr {
   __u16 nla_len ;
   __u16 nla_type ;
};
#line 74  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netlink.h"
struct netlink_ext_ack {
   char *_msg ;
   struct nlattr *bad_attr ;
   u8 cookie[20U] ;
   u8 cookie_len ;
};
#line 180  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netlink.h"
union __anonunion_670 {
   u8 ctx[48U] ;
   long args[6U] ;
};
#line 180  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netlink.h"
struct netlink_callback {
   struct sk_buff *skb ;
   struct nlmsghdr *nlh ;
   int (*dump)(struct sk_buff *, struct netlink_callback *) ;
   int (*done)(struct netlink_callback *) ;
   void *data ;
   struct module *module ;
   struct netlink_ext_ack *extack ;
   u16 family ;
   u16 min_dump_alloc ;
   bool strict_check ;
   u16 answer_flags ;
   unsigned int prev_seq ;
   unsigned int seq ;
   union __anonunion_670 __anonCompField_netlink_callback_153 ;
};
#line 8  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/neighbour.h"
struct ndmsg {
   __u8 ndm_family ;
   __u8 ndm_pad1 ;
   __u16 ndm_pad2 ;
   __s32 ndm_ifindex ;
   __u16 ndm_state ;
   __u8 ndm_flags ;
   __u8 ndm_type ;
};
#line 44  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if_link.h"
struct rtnl_link_stats64 {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 rx_errors ;
   __u64 tx_errors ;
   __u64 rx_dropped ;
   __u64 tx_dropped ;
   __u64 multicast ;
   __u64 collisions ;
   __u64 rx_length_errors ;
   __u64 rx_over_errors ;
   __u64 rx_crc_errors ;
   __u64 rx_frame_errors ;
   __u64 rx_fifo_errors ;
   __u64 rx_missed_errors ;
   __u64 tx_aborted_errors ;
   __u64 tx_carrier_errors ;
   __u64 tx_fifo_errors ;
   __u64 tx_heartbeat_errors ;
   __u64 tx_window_errors ;
   __u64 rx_compressed ;
   __u64 tx_compressed ;
   __u64 rx_nohandler ;
};
#line 753  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if_link.h"
struct ifla_vf_guid {
   __u32 vf ;
   __u64 guid ;
};
#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/if_link.h"
struct ifla_vf_stats {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 broadcast ;
   __u64 multicast ;
   __u64 rx_dropped ;
   __u64 tx_dropped ;
};
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/if_link.h"
struct ifla_vf_info {
   __u32 vf ;
   __u8 mac[32U] ;
   __u32 vlan ;
   __u32 qos ;
   __u32 spoofchk ;
   __u32 linkstate ;
   __u32 min_tx_rate ;
   __u32 max_tx_rate ;
   __u32 rss_query_en ;
   __u32 trusted ;
   __be16 vlan_proto ;
};
#line 118  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/hashtable.h"
struct netpoll_info;
#line 119 
struct phy_device;
#line 120 
struct dsa_port;
#line 121 
struct sfp_bus;
#line 122 
struct wireless_dev;
#line 123 
struct wpan_dev;
#line 124 
struct mpls_dev;
#line 125 
struct udp_tunnel_info;
#line 69  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
enum netdev_tx {
    __NETDEV_TX_MIN = -2147483648,
    NETDEV_TX_OK = 0,
    NETDEV_TX_BUSY = 16
};
#line 75  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
typedef enum netdev_tx netdev_tx_t;
#line 161  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct net_device_stats {
   unsigned long rx_packets ;
   unsigned long tx_packets ;
   unsigned long rx_bytes ;
   unsigned long tx_bytes ;
   unsigned long rx_errors ;
   unsigned long tx_errors ;
   unsigned long rx_dropped ;
   unsigned long tx_dropped ;
   unsigned long multicast ;
   unsigned long collisions ;
   unsigned long rx_length_errors ;
   unsigned long rx_over_errors ;
   unsigned long rx_crc_errors ;
   unsigned long rx_frame_errors ;
   unsigned long rx_fifo_errors ;
   unsigned long rx_missed_errors ;
   unsigned long tx_aborted_errors ;
   unsigned long tx_carrier_errors ;
   unsigned long tx_fifo_errors ;
   unsigned long tx_heartbeat_errors ;
   unsigned long tx_window_errors ;
   unsigned long rx_compressed ;
   unsigned long tx_compressed ;
};
#line 195 
struct neigh_parms;
#line 217  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_hw_addr_list {
   struct list_head list ;
   int count ;
};
#line 237  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct hh_cache {
   unsigned int hh_len ;
   seqlock_t hh_lock ;
   unsigned long hh_data[16U] ;
};
#line 263  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct header_ops {
   int (*create)(struct sk_buff *, struct net_device *, unsigned short , void *, void *, unsigned int ) ;
   int (*parse)(struct sk_buff *, unsigned char *) ;
   int (*cache)(struct neighbour *, struct hh_cache *, __be16 ) ;
   void (*cache_update)(struct hh_cache *, struct net_device *, unsigned char *) ;
   bool (*validate)(char *, unsigned int ) ;
   __be16 (*parse_protocol)(struct sk_buff *) ;
};
#line 302  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct gro_list {
   struct list_head list ;
   int count ;
};
#line 316  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct napi_struct {
   struct list_head poll_list ;
   unsigned long state ;
   int weight ;
   unsigned long gro_bitmask ;
   int (*poll)(struct napi_struct *, int ) ;
   int poll_owner ;
   struct net_device *dev ;
   struct gro_list gro_hash[8U] ;
   struct sk_buff *skb ;
   struct list_head rx_list ;
   int rx_count ;
   struct hrtimer timer ;
   struct list_head dev_list ;
   struct hlist_node napi_hash_node ;
   unsigned int napi_id ;
};
#line 372 
enum rx_handler_result {
    RX_HANDLER_CONSUMED = 0,
    RX_HANDLER_ANOTHER = 1,
    RX_HANDLER_EXACT = 2,
    RX_HANDLER_PASS = 3
};
#line 379  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
typedef enum rx_handler_result rx_handler_result_t;
#line 421  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
typedef rx_handler_result_t rx_handler_func_t(struct sk_buff **);
#line 589 
struct Qdisc;
#line 589 
struct xdp_umem;
#line 589  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_queue {
   struct net_device *dev ;
   struct Qdisc *qdisc ;
   struct Qdisc *qdisc_sleeping ;
   struct kobject kobj ;
   int numa_node ;
   unsigned long tx_maxrate ;
   unsigned long trans_timeout ;
   struct net_device *sb_dev ;
   struct xdp_umem *umem ;
   spinlock_t _xmit_lock ;
   int xmit_lock_owner ;
   unsigned long trans_start ;
   unsigned long state ;
   struct dql dql ;
} __attribute__((__aligned__(64)));
#line 662  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct rps_map {
   unsigned int len ;
   struct callback_head rcu ;
   u16 cpus[0U] ;
};
#line 674  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct rps_dev_flow {
   u16 cpu ;
   u16 filter ;
   unsigned int last_qtail ;
};
#line 684  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct rps_dev_flow_table {
   unsigned int mask ;
   struct callback_head rcu ;
   struct rps_dev_flow flows[0U] ;
};
#line 736  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_rx_queue {
   struct rps_map *rps_map ;
   struct rps_dev_flow_table *rps_flow_table ;
   struct kobject kobj ;
   struct net_device *dev ;
   struct xdp_rxq_info xdp_rxq ;
   struct xdp_umem *umem ;
} __attribute__((__aligned__(64)));
#line 764  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct xps_map {
   unsigned int len ;
   unsigned int alloc_len ;
   struct callback_head rcu ;
   u16 queues[0U] ;
};
#line 777  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct xps_dev_maps {
   struct callback_head rcu ;
   struct xps_map *attr_map[0U] ;
};
#line 793  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_tc_txq {
   u16 count ;
   u16 offset ;
};
#line 803  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_fcoe_hbainfo {
   char manufacturer[64U] ;
   char serial_number[64U] ;
   char hardware_version[64U] ;
   char driver_version[64U] ;
   char optionrom_version[64U] ;
   char firmware_version[64U] ;
   char model[256U] ;
   char model_description[256U] ;
};
#line 820  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_phys_item_id {
   unsigned char id[32U] ;
   unsigned char id_len ;
};
#line 833 
enum tc_setup_type {
    TC_SETUP_QDISC_MQPRIO = 0,
    TC_SETUP_CLSU32 = 1,
    TC_SETUP_CLSFLOWER = 2,
    TC_SETUP_CLSMATCHALL = 3,
    TC_SETUP_CLSBPF = 4,
    TC_SETUP_BLOCK = 5,
    TC_SETUP_QDISC_CBS = 6,
    TC_SETUP_QDISC_RED = 7,
    TC_SETUP_QDISC_PRIO = 8,
    TC_SETUP_QDISC_MQ = 9,
    TC_SETUP_QDISC_ETF = 10,
    TC_SETUP_ROOT_QDISC = 11,
    TC_SETUP_QDISC_GRED = 12,
    TC_SETUP_QDISC_TAPRIO = 13,
    TC_SETUP_FT = 14
};
#line 851 
enum bpf_netdev_command {
    XDP_SETUP_PROG = 0,
    XDP_SETUP_PROG_HW = 1,
    XDP_QUERY_PROG = 2,
    XDP_QUERY_PROG_HW = 3,
    BPF_OFFLOAD_MAP_ALLOC = 4,
    BPF_OFFLOAD_MAP_FREE = 5,
    XDP_SETUP_XSK_UMEM = 6
};
#line 879  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct __anonstruct_675 {
   u32 flags ;
   struct bpf_prog *prog ;
   struct netlink_ext_ack *extack ;
};
#line 879  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct __anonstruct_676 {
   u32 prog_id ;
   u32 prog_flags ;
};
#line 879  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct __anonstruct_677 {
   struct bpf_offloaded_map *offmap ;
};
#line 879  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct __anonstruct_xsk_678 {
   struct xdp_umem *umem ;
   u16 queue_id ;
};
#line 879  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
union __anonunion_674 {
   struct __anonstruct_675 __anonCompField___anonunion_674_155 ;
   struct __anonstruct_676 __anonCompField___anonunion_674_156 ;
   struct __anonstruct_677 __anonCompField___anonunion_674_157 ;
   struct __anonstruct_xsk_678 xsk ;
};
#line 879  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_bpf {
   enum bpf_netdev_command command ;
   union __anonunion_674 __anonCompField_netdev_bpf_158 ;
};
#line 911  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct xfrmdev_ops {
   int (*xdo_dev_state_add)(struct xfrm_state *) ;
   void (*xdo_dev_state_delete)(struct xfrm_state *) ;
   void (*xdo_dev_state_free)(struct xfrm_state *) ;
   bool (*xdo_dev_offload_ok)(struct sk_buff *, struct xfrm_state *) ;
   void (*xdo_dev_state_advance_esn)(struct xfrm_state *) ;
};
#line 921  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct dev_ifalias {
   struct callback_head rcuhead ;
   char ifalias[] ;
};
#line 926 
struct tlsdev_ops;
#line 929  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_name_node {
   struct hlist_node hlist ;
   struct list_head list ;
   struct net_device *dev ;
   char *name ;
};
#line 1257 
struct devlink_port;
#line 1257  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct net_device_ops {
   int (*ndo_init)(struct net_device *) ;
   void (*ndo_uninit)(struct net_device *) ;
   int (*ndo_open)(struct net_device *) ;
   int (*ndo_stop)(struct net_device *) ;
   netdev_tx_t (*ndo_start_xmit)(struct sk_buff *, struct net_device *) ;
   netdev_features_t (*ndo_features_check)(struct sk_buff *, struct net_device *, netdev_features_t ) ;
   u16 (*ndo_select_queue)(struct net_device *, struct sk_buff *, struct net_device *) ;
   void (*ndo_change_rx_flags)(struct net_device *, int ) ;
   void (*ndo_set_rx_mode)(struct net_device *) ;
   int (*ndo_set_mac_address)(struct net_device *, void *) ;
   int (*ndo_validate_addr)(struct net_device *) ;
   int (*ndo_do_ioctl)(struct net_device *, struct ifreq *, int ) ;
   int (*ndo_set_config)(struct net_device *, struct ifmap *) ;
   int (*ndo_change_mtu)(struct net_device *, int ) ;
   int (*ndo_neigh_setup)(struct net_device *, struct neigh_parms *) ;
   void (*ndo_tx_timeout)(struct net_device *) ;
   void (*ndo_get_stats64)(struct net_device *, struct rtnl_link_stats64 *) ;
   bool (*ndo_has_offload_stats)(struct net_device *, int ) ;
   int (*ndo_get_offload_stats)(int , struct net_device *, void *) ;
   struct net_device_stats *(*ndo_get_stats)(struct net_device *) ;
   int (*ndo_vlan_rx_add_vid)(struct net_device *, __be16 , u16 ) ;
   int (*ndo_vlan_rx_kill_vid)(struct net_device *, __be16 , u16 ) ;
   void (*ndo_poll_controller)(struct net_device *) ;
   int (*ndo_netpoll_setup)(struct net_device *, struct netpoll_info *) ;
   void (*ndo_netpoll_cleanup)(struct net_device *) ;
   int (*ndo_set_vf_mac)(struct net_device *, int , u8 *) ;
   int (*ndo_set_vf_vlan)(struct net_device *, int , u16 , u8 , __be16 ) ;
   int (*ndo_set_vf_rate)(struct net_device *, int , int , int ) ;
   int (*ndo_set_vf_spoofchk)(struct net_device *, int , bool ) ;
   int (*ndo_set_vf_trust)(struct net_device *, int , bool ) ;
   int (*ndo_get_vf_config)(struct net_device *, int , struct ifla_vf_info *) ;
   int (*ndo_set_vf_link_state)(struct net_device *, int , int ) ;
   int (*ndo_get_vf_stats)(struct net_device *, int , struct ifla_vf_stats *) ;
   int (*ndo_set_vf_port)(struct net_device *, int , struct nlattr **) ;
   int (*ndo_get_vf_port)(struct net_device *, int , struct sk_buff *) ;
   int (*ndo_get_vf_guid)(struct net_device *, int , struct ifla_vf_guid *, struct ifla_vf_guid *) ;
   int (*ndo_set_vf_guid)(struct net_device *, int , u64 , int ) ;
   int (*ndo_set_vf_rss_query_en)(struct net_device *, int , bool ) ;
   int (*ndo_setup_tc)(struct net_device *, enum tc_setup_type , void *) ;
   int (*ndo_fcoe_enable)(struct net_device *) ;
   int (*ndo_fcoe_disable)(struct net_device *) ;
   int (*ndo_fcoe_ddp_setup)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_ddp_done)(struct net_device *, u16 ) ;
   int (*ndo_fcoe_ddp_target)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_get_hbainfo)(struct net_device *, struct netdev_fcoe_hbainfo *) ;
   int (*ndo_fcoe_get_wwn)(struct net_device *, u64 *, int ) ;
   int (*ndo_rx_flow_steer)(struct net_device *, struct sk_buff *, u16 , u32 ) ;
   int (*ndo_add_slave)(struct net_device *, struct net_device *, struct netlink_ext_ack *) ;
   int (*ndo_del_slave)(struct net_device *, struct net_device *) ;
   netdev_features_t (*ndo_fix_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_set_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_neigh_construct)(struct net_device *, struct neighbour *) ;
   void (*ndo_neigh_destroy)(struct net_device *, struct neighbour *) ;
   int (*ndo_fdb_add)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char *, u16 , u16 , struct netlink_ext_ack *) ;
   int (*ndo_fdb_del)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char *, u16 ) ;
   int (*ndo_fdb_dump)(struct sk_buff *, struct netlink_callback *, struct net_device *, struct net_device *, int *) ;
   int (*ndo_fdb_get)(struct sk_buff *, struct nlattr **, struct net_device *, unsigned char *, u16 , u32 , u32 , struct netlink_ext_ack *) ;
   int (*ndo_bridge_setlink)(struct net_device *, struct nlmsghdr *, u16 , struct netlink_ext_ack *) ;
   int (*ndo_bridge_getlink)(struct sk_buff *, u32 , u32 , struct net_device *, u32 , int ) ;
   int (*ndo_bridge_dellink)(struct net_device *, struct nlmsghdr *, u16 ) ;
   int (*ndo_change_carrier)(struct net_device *, bool ) ;
   int (*ndo_get_phys_port_id)(struct net_device *, struct netdev_phys_item_id *) ;
   int (*ndo_get_port_parent_id)(struct net_device *, struct netdev_phys_item_id *) ;
   int (*ndo_get_phys_port_name)(struct net_device *, char *, size_t ) ;
   void (*ndo_udp_tunnel_add)(struct net_device *, struct udp_tunnel_info *) ;
   void (*ndo_udp_tunnel_del)(struct net_device *, struct udp_tunnel_info *) ;
   void *(*ndo_dfwd_add_station)(struct net_device *, struct net_device *) ;
   void (*ndo_dfwd_del_station)(struct net_device *, void *) ;
   int (*ndo_set_tx_maxrate)(struct net_device *, int , u32 ) ;
   int (*ndo_get_iflink)(struct net_device *) ;
   int (*ndo_change_proto_down)(struct net_device *, bool ) ;
   int (*ndo_fill_metadata_dst)(struct net_device *, struct sk_buff *) ;
   void (*ndo_set_rx_headroom)(struct net_device *, int ) ;
   int (*ndo_bpf)(struct net_device *, struct netdev_bpf *) ;
   int (*ndo_xdp_xmit)(struct net_device *, int , struct xdp_frame **, u32 ) ;
   int (*ndo_xsk_wakeup)(struct net_device *, u32 , u32 ) ;
   struct devlink_port *(*ndo_get_devlink_port)(struct net_device *) ;
};
#line 1492 
enum ldv_14504 {
    NETREG_UNINITIALIZED = 0,
    NETREG_REGISTERED = 1,
    NETREG_UNREGISTERING = 2,
    NETREG_UNREGISTERED = 3,
    NETREG_RELEASED = 4,
    NETREG_DUMMY = 5
};
#line 1501 
enum ldv_14505 {
    RTNL_LINK_INITIALIZED = 0,
    RTNL_LINK_INITIALIZING = 1
};
#line 1795  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct __anonstruct_adj_list_679 {
   struct list_head upper ;
   struct list_head lower ;
};
#line 1795 
struct iw_handler_def;
#line 1795 
struct iw_public_data;
#line 1795 
struct l3mdev_ops;
#line 1795 
struct ndisc_ops;
#line 1795 
struct vlan_info;
#line 1795 
struct tipc_bearer;
#line 1795 
struct in_device;
#line 1795 
struct dn_dev;
#line 1795 
struct inet6_dev;
#line 1795 
struct mini_Qdisc;
#line 1795 
struct cpu_rmap;
#line 1795 
struct pcpu_lstats;
#line 1795 
struct pcpu_sw_netstats;
#line 1795 
struct pcpu_dstats;
#line 1795  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
union __anonunion_680 {
   void *ml_priv ;
   struct pcpu_lstats *lstats ;
   struct pcpu_sw_netstats *tstats ;
   struct pcpu_dstats *dstats ;
};
#line 1795 
struct garp_port;
#line 1795 
struct mrp_port;
#line 1795 
struct rtnl_link_ops;
#line 1795  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct net_device {
   char name[16U] ;
   struct netdev_name_node *name_node ;
   struct dev_ifalias *ifalias ;
   unsigned long mem_end ;
   unsigned long mem_start ;
   unsigned long base_addr ;
   int irq ;
   unsigned long state ;
   struct list_head dev_list ;
   struct list_head napi_list ;
   struct list_head unreg_list ;
   struct list_head close_list ;
   struct list_head ptype_all ;
   struct list_head ptype_specific ;
   struct __anonstruct_adj_list_679 adj_list ;
   netdev_features_t features ;
   netdev_features_t hw_features ;
   netdev_features_t wanted_features ;
   netdev_features_t vlan_features ;
   netdev_features_t hw_enc_features ;
   netdev_features_t mpls_features ;
   netdev_features_t gso_partial_features ;
   int ifindex ;
   int group ;
   struct net_device_stats stats ;
   atomic_long_t rx_dropped ;
   atomic_long_t tx_dropped ;
   atomic_long_t rx_nohandler ;
   atomic_t carrier_up_count ;
   atomic_t carrier_down_count ;
   struct iw_handler_def *wireless_handlers ;
   struct iw_public_data *wireless_data ;
   struct net_device_ops *netdev_ops ;
   struct ethtool_ops *ethtool_ops ;
   struct l3mdev_ops *l3mdev_ops ;
   struct ndisc_ops *ndisc_ops ;
   struct xfrmdev_ops *xfrmdev_ops ;
   struct tlsdev_ops *tlsdev_ops ;
   struct header_ops *header_ops ;
   unsigned int flags ;
   unsigned int priv_flags ;
   unsigned short gflags ;
   unsigned short padded ;
   unsigned char operstate ;
   unsigned char link_mode ;
   unsigned char if_port ;
   unsigned char dma ;
   unsigned int mtu ;
   unsigned int min_mtu ;
   unsigned int max_mtu ;
   unsigned short type ;
   unsigned short hard_header_len ;
   unsigned char min_header_len ;
   unsigned short needed_headroom ;
   unsigned short needed_tailroom ;
   unsigned char perm_addr[32U] ;
   unsigned char addr_assign_type ;
   unsigned char addr_len ;
   unsigned char upper_level ;
   unsigned char lower_level ;
   unsigned short neigh_priv_len ;
   unsigned short dev_id ;
   unsigned short dev_port ;
   spinlock_t addr_list_lock ;
   unsigned char name_assign_type ;
   bool uc_promisc ;
   struct netdev_hw_addr_list uc ;
   struct netdev_hw_addr_list mc ;
   struct netdev_hw_addr_list dev_addrs ;
   struct kset *queues_kset ;
   unsigned int promiscuity ;
   unsigned int allmulti ;
   struct vlan_info *vlan_info ;
   struct dsa_port *dsa_ptr ;
   struct tipc_bearer *tipc_ptr ;
   void *atalk_ptr ;
   struct in_device *ip_ptr ;
   struct dn_dev *dn_ptr ;
   struct inet6_dev *ip6_ptr ;
   void *ax25_ptr ;
   struct wireless_dev *ieee80211_ptr ;
   struct wpan_dev *ieee802154_ptr ;
   struct mpls_dev *mpls_ptr ;
   unsigned char *dev_addr ;
   struct netdev_rx_queue *_rx ;
   unsigned int num_rx_queues ;
   unsigned int real_num_rx_queues ;
   struct bpf_prog *xdp_prog ;
   unsigned long gro_flush_timeout ;
   rx_handler_func_t *rx_handler ;
   void *rx_handler_data ;
   struct mini_Qdisc *miniq_ingress ;
   struct netdev_queue *ingress_queue ;
   struct nf_hook_entries *nf_hooks_ingress ;
   unsigned char broadcast[32U] ;
   struct cpu_rmap *rx_cpu_rmap ;
   struct hlist_node index_hlist ;
   struct netdev_queue *_tx ;
   unsigned int num_tx_queues ;
   unsigned int real_num_tx_queues ;
   struct Qdisc *qdisc ;
   struct hlist_head qdisc_hash[16U] ;
   unsigned int tx_queue_len ;
   spinlock_t tx_global_lock ;
   int watchdog_timeo ;
   struct xps_dev_maps *xps_cpus_map ;
   struct xps_dev_maps *xps_rxqs_map ;
   struct mini_Qdisc *miniq_egress ;
   struct timer_list watchdog_timer ;
   int *pcpu_refcnt ;
   struct list_head todo_list ;
   struct list_head link_watch_list ;
   enum ldv_14504 reg_state : 8 ;
   bool dismantle ;
   enum ldv_14505 rtnl_link_state : 16 ;
   bool needs_free_netdev ;
   void (*priv_destructor)(struct net_device *) ;
   struct netpoll_info *npinfo ;
   possible_net_t nd_net ;
   union __anonunion_680 __anonCompField_net_device_159 ;
   struct garp_port *garp_port ;
   struct mrp_port *mrp_port ;
   struct device dev ;
   struct attribute_group *sysfs_groups[4U] ;
   struct attribute_group *sysfs_rx_queue_group ;
   struct rtnl_link_ops *rtnl_link_ops ;
   unsigned int gso_max_size ;
   u16 gso_max_segs ;
   struct dcbnl_rtnl_ops *dcbnl_ops ;
   s16 num_tc ;
   struct netdev_tc_txq tc_to_txq[16U] ;
   u8 prio_tc_map[16U] ;
   unsigned int fcoe_ddp_xid ;
   struct netprio_map *priomap ;
   struct phy_device *phydev ;
   struct sfp_bus *sfp_bus ;
   struct lock_class_key qdisc_tx_busylock_key ;
   struct lock_class_key qdisc_running_key ;
   struct lock_class_key qdisc_xmit_lock_key ;
   struct lock_class_key addr_list_lock_key ;
   bool proto_down ;
   unsigned int wol_enabled : 1 ;
};
#line 2400  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct pcpu_sw_netstats {
   u64 rx_packets ;
   u64 rx_bytes ;
   u64 tx_packets ;
   u64 tx_bytes ;
   struct u64_stats_sync syncp ;
} __attribute__((__aligned__(32)));
#line 2408  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct pcpu_lstats {
   u64_stats_t packets ;
   u64_stats_t bytes ;
   struct u64_stats_sync syncp ;
} __attribute__((__aligned__(16)));
#line 4917 
struct mfd_cell;
#line 4919 
struct platform_device_id;
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/platform_device.h"
struct platform_device {
   char *name ;
   int id ;
   bool id_auto ;
   struct device dev ;
   u64 dma_mask ;
   u32 num_resources ;
   struct resource *resource ;
   struct platform_device_id *id_entry ;
   char *driver_override ;
   struct mfd_cell *mfd_cell ;
   struct pdev_archdata archdata ;
};
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/irqhandler.h"
typedef unsigned long kernel_ulong_t;
#line 210  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mod_devicetable.h"
struct acpi_device_id {
   __u8 id[9U] ;
   kernel_ulong_t driver_data ;
   __u32 cls ;
   __u32 cls_msk ;
};
#line 260  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mod_devicetable.h"
struct of_device_id {
   char name[32U] ;
   char type[32U] ;
   char compatible[128U] ;
   void *data ;
};
#line 582  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mod_devicetable.h"
struct platform_device_id {
   char name[20U] ;
   kernel_ulong_t driver_data ;
};
#line 439  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/property.h"
typedef u32 phandle;
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/of.h"
struct property {
   char *name ;
   int length ;
   void *value ;
   struct property *next ;
   unsigned long _flags ;
   struct bin_attribute attr ;
};
#line 51  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/of.h"
struct device_node {
   char *name ;
   phandle phandle ;
   char *full_name ;
   struct fwnode_handle fwnode ;
   struct property *properties ;
   struct property *deadprops ;
   struct device_node *parent ;
   struct device_node *child ;
   struct device_node *sibling ;
   struct kobject kobj ;
   unsigned long _flags ;
   void *data ;
};
#line 63  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/irqdomain.h"
struct irq_fwspec {
   struct fwnode_handle *fwnode ;
   int param_count ;
   u32 param[16U] ;
};
#line 68 
enum irq_domain_bus_token {
    DOMAIN_BUS_ANY = 0,
    DOMAIN_BUS_WIRED = 1,
    DOMAIN_BUS_GENERIC_MSI = 2,
    DOMAIN_BUS_PCI_MSI = 3,
    DOMAIN_BUS_PLATFORM_MSI = 4,
    DOMAIN_BUS_NEXUS = 5,
    DOMAIN_BUS_IPI = 6,
    DOMAIN_BUS_FSL_MC_MSI = 7,
    DOMAIN_BUS_TI_SCI_INTA_MSI = 8,
    DOMAIN_BUS_WAKEUP = 9
};
#line 104  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/irqdomain.h"
struct irq_domain_ops {
   int (*match)(struct irq_domain *, struct device_node *, enum irq_domain_bus_token ) ;
   int (*select)(struct irq_domain *, struct irq_fwspec *, enum irq_domain_bus_token ) ;
   int (*map)(struct irq_domain *, unsigned int , irq_hw_number_t ) ;
   void (*unmap)(struct irq_domain *, unsigned int ) ;
   int (*xlate)(struct irq_domain *, struct device_node *, u32 *, unsigned int , unsigned long *, unsigned int *) ;
   int (*alloc)(struct irq_domain *, unsigned int , unsigned int , void *) ;
   void (*free)(struct irq_domain *, unsigned int , unsigned int ) ;
   int (*activate)(struct irq_domain *, struct irq_data *, bool ) ;
   void (*deactivate)(struct irq_domain *, struct irq_data *) ;
   int (*translate)(struct irq_domain *, struct irq_fwspec *, unsigned long *, unsigned int *) ;
   void (*debug_show)(struct seq_file *, struct irq_domain *, struct irq_data *, int ) ;
};
#line 132 
struct irq_domain_chip_generic;
#line 161  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/irqdomain.h"
struct irq_domain {
   struct list_head link ;
   char *name ;
   struct irq_domain_ops *ops ;
   void *host_data ;
   unsigned int flags ;
   unsigned int mapcount ;
   struct fwnode_handle *fwnode ;
   enum irq_domain_bus_token bus_token ;
   struct irq_domain_chip_generic *gc ;
   struct irq_domain *parent ;
   struct dentry *debugfs_file ;
   irq_hw_number_t hwirq_max ;
   unsigned int revmap_direct_max_irq ;
   unsigned int revmap_size ;
   struct xarray revmap_tree ;
   struct mutex revmap_tree_mutex ;
   unsigned int linear_revmap[] ;
};
#line 13  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/vdso.h"
struct vdso_image {
   void *data ;
   unsigned long size ;
   unsigned long alt ;
   unsigned long alt_len ;
   long sym_vvar_start ;
   long sym_vvar_page ;
   long sym_pvclock_page ;
   long sym_hvclock_page ;
   long sym_VDSO32_NOTE_MASK ;
   long sym___kernel_sigreturn ;
   long sym___kernel_rt_sigreturn ;
   long sym___kernel_vsyscall ;
   long sym_int80_landing_pad ;
};
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
typedef __u64 Elf64_Addr;
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
typedef __u16 Elf64_Half;
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
typedef __u64 Elf64_Off;
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
typedef __u32 Elf64_Word;
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
typedef __u64 Elf64_Xword;
#line 192  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
struct elf64_sym {
   Elf64_Word st_name ;
   unsigned char st_info ;
   unsigned char st_other ;
   Elf64_Half st_shndx ;
   Elf64_Addr st_value ;
   Elf64_Xword st_size ;
};
#line 200  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
typedef struct elf64_sym Elf64_Sym;
#line 221  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
struct elf64_hdr {
   unsigned char e_ident[16U] ;
   Elf64_Half e_type ;
   Elf64_Half e_machine ;
   Elf64_Word e_version ;
   Elf64_Addr e_entry ;
   Elf64_Off e_phoff ;
   Elf64_Off e_shoff ;
   Elf64_Word e_flags ;
   Elf64_Half e_ehsize ;
   Elf64_Half e_phentsize ;
   Elf64_Half e_phnum ;
   Elf64_Half e_shentsize ;
   Elf64_Half e_shnum ;
   Elf64_Half e_shstrndx ;
};
#line 237  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
typedef struct elf64_hdr Elf64_Ehdr;
#line 316  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
struct elf64_shdr {
   Elf64_Word sh_name ;
   Elf64_Word sh_type ;
   Elf64_Xword sh_flags ;
   Elf64_Addr sh_addr ;
   Elf64_Off sh_offset ;
   Elf64_Xword sh_size ;
   Elf64_Word sh_link ;
   Elf64_Word sh_info ;
   Elf64_Xword sh_addralign ;
   Elf64_Xword sh_entsize ;
};
#line 328  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
typedef struct elf64_shdr Elf64_Shdr;
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/elf.h"
struct kernel_param;
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/moduleparam.h"
struct kernel_param_ops {
   unsigned int flags ;
   int (*set)(char *, struct kernel_param *) ;
   int (*get)(char *, struct kernel_param *) ;
   void (*free)(void *) ;
};
#line 69 
struct kparam_string;
#line 69 
struct kparam_array;
#line 69  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/moduleparam.h"
union __anonunion_700 {
   void *arg ;
   struct kparam_string *str ;
   struct kparam_array *arr ;
};
#line 69  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/moduleparam.h"
struct kernel_param {
   char *name ;
   struct module *mod ;
   struct kernel_param_ops *ops ;
   u16 perm ;
   s8 level ;
   u8 flags ;
   union __anonunion_700 __anonCompField_kernel_param_161 ;
};
#line 86  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/moduleparam.h"
struct kparam_string {
   unsigned int maxlen ;
   char *string ;
};
#line 92  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/moduleparam.h"
struct kparam_array {
   unsigned int max ;
   unsigned int elemsize ;
   unsigned int *num ;
   struct kernel_param_ops *ops ;
   void *elem ;
};
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/error-injection.h"
struct error_injection_entry {
   unsigned long addr ;
   int etype ;
};
#line 8  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/module.h"
struct mod_arch_specific {
   unsigned int num_orcs ;
   int *orc_unwind_ip ;
   struct orc_entry *orc_unwind ;
};
#line 45  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
struct module_param_attrs;
#line 45  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
struct module_kobject {
   struct kobject kobj ;
   struct module *mod ;
   struct kobject *drivers_dir ;
   struct module_param_attrs *mp ;
   struct completion *kobj_completion ;
} __attribute__((__designated_init__));
#line 53  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
struct module_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct module_attribute *, struct module_kobject *, char *) ;
   ssize_t (*store)(struct module_attribute *, struct module_kobject *, char *, size_t ) ;
   void (*setup)(struct module *, char *) ;
   int (*test)(struct module *) ;
   void (*free)(struct module *) ;
};
#line 297 
enum module_state {
    MODULE_STATE_LIVE = 0,
    MODULE_STATE_COMING = 1,
    MODULE_STATE_GOING = 2,
    MODULE_STATE_UNFORMED = 3
};
#line 305  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
struct mod_tree_node {
   struct module *mod ;
   struct latch_tree_node node ;
};
#line 310  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
struct module_layout {
   void *base ;
   unsigned int size ;
   unsigned int text_size ;
   unsigned int ro_size ;
   unsigned int ro_after_init_size ;
   struct mod_tree_node mtn ;
};
#line 334  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
struct mod_kallsyms {
   Elf64_Sym *symtab ;
   unsigned int num_symtab ;
   char *strtab ;
   char *typetab ;
};
#line 342  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
struct klp_modinfo {
   Elf64_Ehdr hdr ;
   Elf64_Shdr *sechdrs ;
   char *secstrings ;
   unsigned int symndx ;
};
#line 350 
struct module_sect_attrs;
#line 350 
struct module_notes_attrs;
#line 350 
struct trace_event_call;
#line 350  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
struct module {
   enum module_state state ;
   struct list_head list ;
   char name[56U] ;
   struct module_kobject mkobj ;
   struct module_attribute *modinfo_attrs ;
   char *version ;
   char *srcversion ;
   struct kobject *holders_dir ;
   struct kernel_symbol *syms ;
   s32 *crcs ;
   unsigned int num_syms ;
   struct mutex param_lock ;
   struct kernel_param *kp ;
   unsigned int num_kp ;
   unsigned int num_gpl_syms ;
   struct kernel_symbol *gpl_syms ;
   s32 *gpl_crcs ;
   struct kernel_symbol *unused_syms ;
   s32 *unused_crcs ;
   unsigned int num_unused_syms ;
   unsigned int num_unused_gpl_syms ;
   struct kernel_symbol *unused_gpl_syms ;
   s32 *unused_gpl_crcs ;
   bool sig_ok ;
   bool async_probe_requested ;
   struct kernel_symbol *gpl_future_syms ;
   s32 *gpl_future_crcs ;
   unsigned int num_gpl_future_syms ;
   unsigned int num_exentries ;
   struct exception_table_entry *extable ;
   int (*init)(void) ;
   struct module_layout core_layout ;
   struct module_layout init_layout ;
   struct mod_arch_specific arch ;
   unsigned long taints ;
   unsigned int num_bugs ;
   struct list_head bug_list ;
   struct bug_entry *bug_table ;
   struct mod_kallsyms *kallsyms ;
   struct mod_kallsyms core_kallsyms ;
   struct module_sect_attrs *sect_attrs ;
   struct module_notes_attrs *notes_attrs ;
   char *args ;
   void *percpu ;
   unsigned int percpu_size ;
   unsigned int num_tracepoints ;
   tracepoint_ptr_t *tracepoints_ptrs ;
   unsigned int num_srcu_structs ;
   struct srcu_struct **srcu_struct_ptrs ;
   unsigned int num_bpf_raw_events ;
   struct bpf_raw_event_map *bpf_raw_events ;
   struct jump_entry *jump_entries ;
   unsigned int num_jump_entries ;
   unsigned int num_trace_bprintk_fmt ;
   char **trace_bprintk_fmt_start ;
   struct trace_event_call **trace_events ;
   unsigned int num_trace_events ;
   struct trace_eval_map **trace_evals ;
   unsigned int num_trace_evals ;
   unsigned int num_ftrace_callsites ;
   unsigned long *ftrace_callsites ;
   bool klp ;
   bool klp_alive ;
   struct klp_modinfo *klp_info ;
   struct list_head source_list ;
   struct list_head target_list ;
   void (*exit)(void) ;
   atomic_t refcnt ;
   ctor_fn_t *ctors ;
   unsigned int num_ctors ;
   struct error_injection_entry *ei_funcs ;
   unsigned int num_ei_funcs ;
} __attribute__((__designated_init__, __aligned__(64)));
#line 114  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_regs.h"
struct fjes_hw;
#line 107  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_hw.h"
struct fjes_device_shared_info {
   int epnum ;
   u8 ep_status[] ;
};
#line 113  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_hw.h"
struct __anonstruct_info_720 {
   __le32 length ;
};
#line 113  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_hw.h"
struct __anonstruct_share_buffer_721 {
   __le32 length ;
   __le32 epid ;
   __le64 buffer[] ;
};
#line 113  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_hw.h"
struct __anonstruct_unshare_buffer_722 {
   __le32 length ;
   __le32 epid ;
};
#line 113  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_hw.h"
struct __anonstruct_start_trace_723 {
   __le32 length ;
   __le32 mode ;
   __le64 buffer_len ;
   __le64 buffer[] ;
};
#line 113  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_hw.h"
struct __anonstruct_stop_trace_724 {
   __le32 length ;
};
#line 113  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_hw.h"
union fjes_device_command_req {
   struct __anonstruct_info_720 info ;
   struct __anonstruct_share_buffer_721 share_buffer ;
   struct __anonstruct_unshare_buffer_722 unshare_buffer ;
   struct __anonstruct_start_trace_723 start_trace ;
   struct __anonstruct_stop_trace_724 stop_trace ;
};
#line 138  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_hw.h"
struct __anonstruct_info_726 {
   u8 es_status ;
   u8 zone ;
};
#line 138  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_hw.h"
struct __anonstruct_info_725 {
   __le32 length ;
   __le32 code ;
   struct __anonstruct_info_726 info[] ;
};
#line 138  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_hw.h"
struct __anonstruct_share_buffer_727 {
   __le32 length ;
   __le32 code ;
};
#line 138  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_hw.h"
struct __anonstruct_unshare_buffer_728 {
   __le32 length ;
   __le32 code ;
};
#line 138  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_hw.h"
struct __anonstruct_start_trace_729 {
   __le32 length ;
   __le32 code ;
};
#line 138  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_hw.h"
struct __anonstruct_stop_trace_730 {
   __le32 length ;
   __le32 code ;
};
#line 138  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_hw.h"
union fjes_device_command_res {
   struct __anonstruct_info_725 info ;
   struct __anonstruct_share_buffer_727 share_buffer ;
   struct __anonstruct_unshare_buffer_728 unshare_buffer ;
   struct __anonstruct_start_trace_729 start_trace ;
   struct __anonstruct_stop_trace_730 stop_trace ;
};
#line 196  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_hw.h"
struct _ep_buffer_info_common_t {
   u32 version ;
};
#line 200  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_hw.h"
struct _ep_buffer_info_v1_t {
   u32 version ;
   u32 info_size ;
   u32 buffer_size ;
   u16 count_max ;
   u16 _rsv_1 ;
   u32 frame_max ;
   u8 mac_addr[6U] ;
   u16 _rsv_2 ;
   u32 _rsv_3 ;
   u16 tx_status ;
   u16 rx_status ;
   u32 head ;
   u32 tail ;
   u16 vlan_id[4U] ;
};
#line 193  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_hw.h"
union ep_buffer_info {
   u8 raw[4096U] ;
   struct _ep_buffer_info_common_t common ;
   struct _ep_buffer_info_v1_t v1i ;
};
#line 228  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_hw.h"
struct fjes_drv_ep_stats {
   u64 com_regist_buf_exec ;
   u64 com_unregist_buf_exec ;
   u64 send_intr_rx ;
   u64 send_intr_unshare ;
   u64 send_intr_zoneupdate ;
   u64 recv_intr_rx ;
   u64 recv_intr_unshare ;
   u64 recv_intr_stop ;
   u64 recv_intr_zoneupdate ;
   u64 tx_buffer_full ;
   u64 tx_dropped_not_shared ;
   u64 tx_dropped_ver_mismatch ;
   u64 tx_dropped_buf_size_mismatch ;
   u64 tx_dropped_vlanid_mismatch ;
};
#line 247  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_hw.h"
struct epbuf_handler {
   void *buffer ;
   size_t size ;
   union ep_buffer_info *info ;
   u8 *ring ;
};
#line 246  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_hw.h"
struct ep_share_mem_info {
   struct epbuf_handler tx ;
   struct epbuf_handler rx ;
   struct rtnl_link_stats64 net_stats ;
   struct fjes_drv_ep_stats ep_stats ;
   u16 tx_status_work ;
   u8 es_status ;
   u8 zone ;
};
#line 263  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_hw.h"
struct __anonstruct_record_731 {
   u16 epid ;
   u16 dir_offset ;
   u32 data ;
   u64 tsc ;
};
#line 263  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_hw.h"
struct es_device_trace {
   u32 record_num ;
   u32 current_record ;
   u32 status_flag ;
   u32 _rsv ;
   struct __anonstruct_record_731 record[] ;
};
#line 277  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_hw.h"
struct fjes_hw_info {
   struct fjes_device_shared_info *share ;
   union fjes_device_command_req *req_buf ;
   u64 req_buf_size ;
   union fjes_device_command_res *res_buf ;
   u64 res_buf_size ;
   int *my_epid ;
   int *max_epid ;
   struct es_device_trace *trace ;
   u64 trace_size ;
   struct mutex lock ;
   unsigned long buffer_share_bit ;
   unsigned long buffer_unshare_reserve_bit ;
};
#line 309  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_hw.h"
struct fjes_hw_resource {
   u64 start ;
   u64 size ;
   int irq ;
};
#line 296  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_hw.h"
struct fjes_hw {
   void *back ;
   unsigned long txrx_stop_req_bit ;
   unsigned long epstop_req_bit ;
   struct work_struct update_zone_task ;
   struct work_struct epstop_task ;
   int my_epid ;
   int max_epid ;
   struct ep_share_mem_info *ep_shm_info ;
   struct fjes_hw_resource hw_res ;
   u8 *base ;
   struct fjes_hw_info hw_info ;
   spinlock_t rx_status_lock ;
   u32 debug_mode ;
};
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes.h"
struct fjes_adapter {
   struct net_device *netdev ;
   struct platform_device *plat_dev ;
   struct napi_struct napi ;
   struct rtnl_link_stats64 stats64 ;
   unsigned int tx_retry_count ;
   unsigned long tx_start_jiffies ;
   unsigned long rx_last_jiffies ;
   bool unset_rx_last ;
   struct work_struct force_close_task ;
   bool force_reset ;
   bool open_guard ;
   bool irq_registered ;
   struct workqueue_struct *txrx_wq ;
   struct workqueue_struct *control_wq ;
   struct work_struct tx_stall_task ;
   struct work_struct raise_intr_rxdata_task ;
   struct work_struct unshare_watch_task ;
   unsigned long unshare_watch_bitmask ;
   struct delayed_work interrupt_watch_task ;
   bool interrupt_watch_enable ;
   struct fjes_hw hw ;
   struct dentry *dbg_adapter ;
};
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_ethtool.c"
struct fjes_stats {
   char stat_string[32U] ;
   int sizeof_stat ;
   int stat_offset ;
};
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 96  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_hw.h"
enum ep_partner_status {
    EP_PARTNER_UNSHARE = 0,
    EP_PARTNER_SHARED = 1,
    EP_PARTNER_WAITING = 2,
    EP_PARTNER_COMPLETE = 3,
    EP_PARTNER_STATUS_MAX = 4
};
#line 93  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef unsigned long ulong;
#line 69  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/desc_defs.h"
struct idt_bits {
   u16 ist : 3 ;
   u16 zero : 5 ;
   u16 type : 5 ;
   u16 dpl : 2 ;
   u16 p : 1 ;
} __attribute__((__packed__));
#line 77  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/desc_defs.h"
struct gate_struct {
   u16 offset_low ;
   u16 segment ;
   struct idt_bits bits ;
   u16 offset_middle ;
   u32 offset_high ;
   u32 reserved ;
} __attribute__((__packed__));
#line 86  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/desc_defs.h"
typedef struct gate_struct gate_desc;
#line 105  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/desc_defs.h"
struct desc_ptr {
   unsigned short size ;
   unsigned long address ;
} __attribute__((__packed__));
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long p4dval_t;
#line 306  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
struct __anonstruct_p4d_t_1520 {
   p4dval_t p4d ;
};
#line 306  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
typedef struct __anonstruct_p4d_t_1520 p4d_t;
#line 363  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/nospec-branch.h"
struct flush_tlb_info;
#line 364 
struct mmu_gather;
#line 64  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/paravirt_types.h"
struct paravirt_callee_save {
   void *func ;
};
#line 82  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/paravirt_types.h"
struct pv_init_ops {
   unsigned int (*patch)(u8 , void *, unsigned long , unsigned int ) ;
};
#line 96  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/paravirt_types.h"
struct pv_lazy_ops {
   void (*enter)(void) ;
   void (*leave)(void) ;
   void (*flush)(void) ;
};
#line 104  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/paravirt_types.h"
struct pv_time_ops {
   unsigned long long (*sched_clock)(void) ;
   unsigned long long (*steal_clock)(int ) ;
};
#line 109  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/paravirt_types.h"
struct pv_cpu_ops {
   void (*io_delay)(void) ;
   unsigned long (*get_debugreg)(int ) ;
   void (*set_debugreg)(int , unsigned long ) ;
   unsigned long (*read_cr0)(void) ;
   void (*write_cr0)(unsigned long ) ;
   void (*write_cr4)(unsigned long ) ;
   void (*load_tr_desc)(void) ;
   void (*load_gdt)(struct desc_ptr *) ;
   void (*load_idt)(struct desc_ptr *) ;
   void (*set_ldt)(void *, unsigned int ) ;
   unsigned long (*store_tr)(void) ;
   void (*load_tls)(struct thread_struct *, unsigned int ) ;
   void (*load_gs_index)(unsigned int ) ;
   void (*write_ldt_entry)(struct desc_struct *, int , void *) ;
   void (*write_gdt_entry)(struct desc_struct *, int , void *, int ) ;
   void (*write_idt_entry)(gate_desc *, int , gate_desc *) ;
   void (*alloc_ldt)(struct desc_struct *, unsigned int ) ;
   void (*free_ldt)(struct desc_struct *, unsigned int ) ;
   void (*load_sp0)(unsigned long ) ;
   void (*wbinvd)(void) ;
   void (*cpuid)(unsigned int *, unsigned int *, unsigned int *, unsigned int *) ;
   u64 (*read_msr)(unsigned int ) ;
   void (*write_msr)(unsigned int , unsigned int , unsigned int ) ;
   u64 (*read_msr_safe)(unsigned int , int *) ;
   int (*write_msr_safe)(unsigned int , unsigned int , unsigned int ) ;
   u64 (*read_pmc)(int ) ;
   void (*usergs_sysret64)(void) ;
   void (*iret)(void) ;
   void (*swapgs)(void) ;
   void (*start_context_switch)(struct task_struct *) ;
   void (*end_context_switch)(struct task_struct *) ;
};
#line 181  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/paravirt_types.h"
struct pv_irq_ops {
   struct paravirt_callee_save save_fl ;
   struct paravirt_callee_save restore_fl ;
   struct paravirt_callee_save irq_disable ;
   struct paravirt_callee_save irq_enable ;
   void (*safe_halt)(void) ;
   void (*halt)(void) ;
};
#line 202  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/paravirt_types.h"
struct pv_mmu_ops {
   void (*flush_tlb_user)(void) ;
   void (*flush_tlb_kernel)(void) ;
   void (*flush_tlb_one_user)(unsigned long ) ;
   void (*flush_tlb_others)(struct cpumask *, struct flush_tlb_info *) ;
   void (*tlb_remove_table)(struct mmu_gather *, void *) ;
   void (*exit_mmap)(struct mm_struct *) ;
   struct paravirt_callee_save read_cr2 ;
   void (*write_cr2)(unsigned long ) ;
   unsigned long (*read_cr3)(void) ;
   void (*write_cr3)(unsigned long ) ;
   void (*activate_mm)(struct mm_struct *, struct mm_struct *) ;
   void (*dup_mmap)(struct mm_struct *, struct mm_struct *) ;
   int (*pgd_alloc)(struct mm_struct *) ;
   void (*pgd_free)(struct mm_struct *, pgd_t *) ;
   void (*alloc_pte)(struct mm_struct *, unsigned long ) ;
   void (*alloc_pmd)(struct mm_struct *, unsigned long ) ;
   void (*alloc_pud)(struct mm_struct *, unsigned long ) ;
   void (*alloc_p4d)(struct mm_struct *, unsigned long ) ;
   void (*release_pte)(unsigned long ) ;
   void (*release_pmd)(unsigned long ) ;
   void (*release_pud)(unsigned long ) ;
   void (*release_p4d)(unsigned long ) ;
   void (*set_pte)(pte_t *, pte_t ) ;
   void (*set_pte_at)(struct mm_struct *, unsigned long , pte_t *, pte_t ) ;
   void (*set_pmd)(pmd_t *, pmd_t ) ;
   pte_t (*ptep_modify_prot_start)(struct vm_area_struct *, unsigned long , pte_t *) ;
   void (*ptep_modify_prot_commit)(struct vm_area_struct *, unsigned long , pte_t *, pte_t ) ;
   struct paravirt_callee_save pte_val ;
   struct paravirt_callee_save make_pte ;
   struct paravirt_callee_save pgd_val ;
   struct paravirt_callee_save make_pgd ;
   void (*set_pud)(pud_t *, pud_t ) ;
   struct paravirt_callee_save pmd_val ;
   struct paravirt_callee_save make_pmd ;
   struct paravirt_callee_save pud_val ;
   struct paravirt_callee_save make_pud ;
   void (*set_p4d)(p4d_t *, p4d_t ) ;
   struct paravirt_callee_save p4d_val ;
   struct paravirt_callee_save make_p4d ;
   void (*set_pgd)(pgd_t *, pgd_t ) ;
   struct pv_lazy_ops lazy_mode ;
   void (*set_fixmap)(unsigned int , phys_addr_t , pgprot_t ) ;
};
#line 311  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/paravirt_types.h"
struct pv_lock_ops {
   void (*queued_spin_lock_slowpath)(struct qspinlock *, u32 ) ;
   struct paravirt_callee_save queued_spin_unlock ;
   void (*wait)(u8 *, u8 ) ;
   void (*kick)(int ) ;
   struct paravirt_callee_save vcpu_is_preempted ;
};
#line 324  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/paravirt_types.h"
struct paravirt_patch_template {
   struct pv_init_ops init ;
   struct pv_time_ops time ;
   struct pv_cpu_ops cpu ;
   struct pv_irq_ops irq ;
   struct pv_mmu_ops mmu ;
   struct pv_lock_ops lock ;
};
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
typedef u16 wchar_t;
#line 36  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/nls.h"
enum utf16_endian {
    UTF16_HOST_ENDIAN = 0,
    UTF16_LITTLE_ENDIAN = 1,
    UTF16_BIG_ENDIAN = 2
};
#line 248  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
struct acpi_device;
#line 1914 
struct property_entry;
#line 77  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/platform_device.h"
struct platform_device_info {
   struct device *parent ;
   struct fwnode_handle *fwnode ;
   bool of_node_reused ;
   char *name ;
   int id ;
   struct resource *res ;
   unsigned int num_res ;
   void *data ;
   size_t size_data ;
   u64 dma_mask ;
   struct property_entry *properties ;
};
#line 196  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/platform_device.h"
struct platform_driver {
   int (*probe)(struct platform_device *) ;
   int (*remove)(struct platform_device *) ;
   void (*shutdown)(struct platform_device *) ;
   int (*suspend)(struct platform_device *, pm_message_t ) ;
   int (*resume)(struct platform_device *) ;
   struct device_driver driver ;
   struct platform_device_id *id_table ;
   bool prevent_deferred_probe ;
};
#line 139  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/user_namespace.h"
enum irqreturn {
    IRQ_NONE = 0,
    IRQ_HANDLED = 1,
    IRQ_WAKE_THREAD = 2
};
#line 145  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/user_namespace.h"
typedef enum irqreturn irqreturn_t;
#line 823  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mod_devicetable.h"
enum dev_prop_type {
    DEV_PROP_U8 = 0,
    DEV_PROP_U16 = 1,
    DEV_PROP_U32 = 2,
    DEV_PROP_U64 = 3,
    DEV_PROP_STRING = 4
};
#line 235  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/property.h"
union __anonunion_value_2158 {
   u8 u8_data ;
   u16 u16_data ;
   u32 u32_data ;
   u64 u64_data ;
   char *str ;
};
#line 235  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/property.h"
union __anonunion_2157 {
   void *pointer ;
   union __anonunion_value_2158 value ;
};
#line 235  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/property.h"
struct property_entry {
   char *name ;
   size_t length ;
   bool is_array ;
   enum dev_prop_type type ;
   union __anonunion_2157 __anonCompField_property_entry_161 ;
};
#line 126  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/actypes.h"
typedef u64 acpi_size;
#line 128  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/actypes.h"
typedef u64 acpi_io_address;
#line 130  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/actypes.h"
typedef u32 acpi_status;
#line 423  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/actypes.h"
typedef char *acpi_string;
#line 424  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/actypes.h"
typedef void *acpi_handle;
#line 473  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/actypes.h"
typedef u32 acpi_object_type;
#line 897  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/actypes.h"
struct __anonstruct_integer_2159 {
   acpi_object_type type ;
   u64 value ;
};
#line 897  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/actypes.h"
struct __anonstruct_string_2160 {
   acpi_object_type type ;
   u32 length ;
   char *pointer ;
};
#line 897  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/actypes.h"
struct __anonstruct_buffer_2161 {
   acpi_object_type type ;
   u32 length ;
   u8 *pointer ;
};
#line 897  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/actypes.h"
struct __anonstruct_package_2162 {
   acpi_object_type type ;
   u32 count ;
   union acpi_object *elements ;
};
#line 897  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/actypes.h"
struct __anonstruct_reference_2163 {
   acpi_object_type type ;
   acpi_object_type actual_type ;
   acpi_handle handle ;
};
#line 897  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/actypes.h"
struct __anonstruct_processor_2164 {
   acpi_object_type type ;
   u32 proc_id ;
   acpi_io_address pblk_address ;
   u32 pblk_length ;
};
#line 897  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/actypes.h"
struct __anonstruct_power_resource_2165 {
   acpi_object_type type ;
   u32 system_level ;
   u32 resource_order ;
};
#line 897  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/actypes.h"
union acpi_object {
   acpi_object_type type ;
   struct __anonstruct_integer_2159 integer ;
   struct __anonstruct_string_2160 string ;
   struct __anonstruct_buffer_2161 buffer ;
   struct __anonstruct_package_2162 package ;
   struct __anonstruct_reference_2163 reference ;
   struct __anonstruct_processor_2164 processor ;
   struct __anonstruct_power_resource_2165 power_resource ;
};
#line 945  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/actypes.h"
struct acpi_object_list {
   u32 count ;
   union acpi_object *pointer ;
};
#line 967  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/actypes.h"
struct acpi_buffer {
   acpi_size length ;
   void *pointer ;
};
#line 138  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/acrestyp.h"
struct acpi_resource_irq {
   u8 descriptor_length ;
   u8 triggering ;
   u8 polarity ;
   u8 shareable ;
   u8 wake_capable ;
   u8 interrupt_count ;
   u8 interrupts[1U] ;
};
#line 148  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/acrestyp.h"
struct acpi_resource_dma {
   u8 type ;
   u8 bus_master ;
   u8 transfer ;
   u8 channel_count ;
   u8 channels[1U] ;
};
#line 156  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/acrestyp.h"
struct acpi_resource_start_dependent {
   u8 descriptor_length ;
   u8 compatibility_priority ;
   u8 performance_robustness ;
};
#line 167  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/acrestyp.h"
struct acpi_resource_io {
   u8 io_decode ;
   u8 alignment ;
   u8 address_length ;
   u16 minimum ;
   u16 maximum ;
};
#line 175  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/acrestyp.h"
struct acpi_resource_fixed_io {
   u16 address ;
   u8 address_length ;
};
#line 180  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/acrestyp.h"
struct acpi_resource_fixed_dma {
   u16 request_lines ;
   u16 channels ;
   u8 width ;
};
#line 195  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/acrestyp.h"
struct acpi_resource_vendor {
   u16 byte_length ;
   u8 byte_data[1U] ;
};
#line 202  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/acrestyp.h"
struct acpi_resource_vendor_typed {
   u16 byte_length ;
   u8 uuid_subtype ;
   u8 uuid[16U] ;
   u8 byte_data[1U] ;
};
#line 209  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/acrestyp.h"
struct acpi_resource_end_tag {
   u8 checksum ;
};
#line 213  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/acrestyp.h"
struct acpi_resource_memory24 {
   u8 write_protect ;
   u16 minimum ;
   u16 maximum ;
   u16 alignment ;
   u16 address_length ;
};
#line 221  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/acrestyp.h"
struct acpi_resource_memory32 {
   u8 write_protect ;
   u32 minimum ;
   u32 maximum ;
   u32 alignment ;
   u32 address_length ;
};
#line 229  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/acrestyp.h"
struct acpi_resource_fixed_memory32 {
   u8 write_protect ;
   u32 address ;
   u32 address_length ;
};
#line 235  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/acrestyp.h"
struct acpi_memory_attribute {
   u8 write_protect ;
   u8 caching ;
   u8 range_type ;
   u8 translation ;
};
#line 242  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/acrestyp.h"
struct acpi_io_attribute {
   u8 range_type ;
   u8 translation ;
   u8 translation_type ;
   u8 reserved1 ;
};
#line 249  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/acrestyp.h"
union acpi_resource_attribute {
   struct acpi_memory_attribute mem ;
   struct acpi_io_attribute io ;
   u8 type_specific ;
};
#line 258  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/acrestyp.h"
struct acpi_resource_label {
   u16 string_length ;
   char *string_ptr ;
};
#line 263  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/acrestyp.h"
struct acpi_resource_source {
   u8 index ;
   u16 string_length ;
   char *string_ptr ;
};
#line 279  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/acrestyp.h"
struct acpi_address16_attribute {
   u16 granularity ;
   u16 minimum ;
   u16 maximum ;
   u16 translation_offset ;
   u16 address_length ;
};
#line 287  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/acrestyp.h"
struct acpi_address32_attribute {
   u32 granularity ;
   u32 minimum ;
   u32 maximum ;
   u32 translation_offset ;
   u32 address_length ;
};
#line 295  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/acrestyp.h"
struct acpi_address64_attribute {
   u64 granularity ;
   u64 minimum ;
   u64 maximum ;
   u64 translation_offset ;
   u64 address_length ;
};
#line 303  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/acrestyp.h"
struct acpi_resource_address {
   u8 resource_type ;
   u8 producer_consumer ;
   u8 decode ;
   u8 min_address_fixed ;
   u8 max_address_fixed ;
   union acpi_resource_attribute info ;
};
#line 306  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/acrestyp.h"
struct acpi_resource_address16 {
   u8 resource_type ;
   u8 producer_consumer ;
   u8 decode ;
   u8 min_address_fixed ;
   u8 max_address_fixed ;
   union acpi_resource_attribute info ;
   struct acpi_address16_attribute address ;
   struct acpi_resource_source resource_source ;
};
#line 311  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/acrestyp.h"
struct acpi_resource_address32 {
   u8 resource_type ;
   u8 producer_consumer ;
   u8 decode ;
   u8 min_address_fixed ;
   u8 max_address_fixed ;
   union acpi_resource_attribute info ;
   struct acpi_address32_attribute address ;
   struct acpi_resource_source resource_source ;
};
#line 316  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/acrestyp.h"
struct acpi_resource_address64 {
   u8 resource_type ;
   u8 producer_consumer ;
   u8 decode ;
   u8 min_address_fixed ;
   u8 max_address_fixed ;
   union acpi_resource_attribute info ;
   struct acpi_address64_attribute address ;
   struct acpi_resource_source resource_source ;
};
#line 321  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/acrestyp.h"
struct acpi_resource_extended_address64 {
   u8 resource_type ;
   u8 producer_consumer ;
   u8 decode ;
   u8 min_address_fixed ;
   u8 max_address_fixed ;
   union acpi_resource_attribute info ;
   u8 revision_ID ;
   struct acpi_address64_attribute address ;
   u64 type_specific ;
};
#line 327  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/acrestyp.h"
struct acpi_resource_extended_irq {
   u8 producer_consumer ;
   u8 triggering ;
   u8 polarity ;
   u8 shareable ;
   u8 wake_capable ;
   u8 interrupt_count ;
   struct acpi_resource_source resource_source ;
   u32 interrupts[1U] ;
};
#line 338  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/acrestyp.h"
struct acpi_resource_generic_register {
   u8 space_id ;
   u8 bit_width ;
   u8 bit_offset ;
   u8 access_size ;
   u64 address ;
};
#line 346  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/acrestyp.h"
struct acpi_resource_gpio {
   u8 revision_id ;
   u8 connection_type ;
   u8 producer_consumer ;
   u8 pin_config ;
   u8 shareable ;
   u8 wake_capable ;
   u8 io_restriction ;
   u8 triggering ;
   u8 polarity ;
   u16 drive_strength ;
   u16 debounce_timeout ;
   u16 pin_table_length ;
   u16 vendor_length ;
   struct acpi_resource_source resource_source ;
   u16 *pin_table ;
   u8 *vendor_data ;
};
#line 398  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/acrestyp.h"
struct acpi_resource_common_serialbus {
   u8 revision_id ;
   u8 type ;
   u8 producer_consumer ;
   u8 slave_mode ;
   u8 connection_sharing ;
   u8 type_revision_id ;
   u16 type_data_length ;
   u16 vendor_length ;
   struct acpi_resource_source resource_source ;
   u8 *vendor_data ;
};
#line 412  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/acrestyp.h"
struct acpi_resource_i2c_serialbus {
   u8 revision_id ;
   u8 type ;
   u8 producer_consumer ;
   u8 slave_mode ;
   u8 connection_sharing ;
   u8 type_revision_id ;
   u16 type_data_length ;
   u16 vendor_length ;
   struct acpi_resource_source resource_source ;
   u8 *vendor_data ;
   u8 access_mode ;
   u16 slave_address ;
   u32 connection_speed ;
};
#line 423  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/acrestyp.h"
struct acpi_resource_spi_serialbus {
   u8 revision_id ;
   u8 type ;
   u8 producer_consumer ;
   u8 slave_mode ;
   u8 connection_sharing ;
   u8 type_revision_id ;
   u16 type_data_length ;
   u16 vendor_length ;
   struct acpi_resource_source resource_source ;
   u8 *vendor_data ;
   u8 wire_mode ;
   u8 device_polarity ;
   u8 data_bit_length ;
   u8 clock_phase ;
   u8 clock_polarity ;
   u16 device_selection ;
   u32 connection_speed ;
};
#line 453  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/acrestyp.h"
struct acpi_resource_uart_serialbus {
   u8 revision_id ;
   u8 type ;
   u8 producer_consumer ;
   u8 slave_mode ;
   u8 connection_sharing ;
   u8 type_revision_id ;
   u16 type_data_length ;
   u16 vendor_length ;
   struct acpi_resource_source resource_source ;
   u8 *vendor_data ;
   u8 endian ;
   u8 data_bits ;
   u8 stop_bits ;
   u8 flow_control ;
   u8 parity ;
   u8 lines_enabled ;
   u16 rx_fifo_size ;
   u16 tx_fifo_size ;
   u32 default_baud_rate ;
};
#line 508  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/acrestyp.h"
struct acpi_resource_pin_function {
   u8 revision_id ;
   u8 pin_config ;
   u8 shareable ;
   u16 function_number ;
   u16 pin_table_length ;
   u16 vendor_length ;
   struct acpi_resource_source resource_source ;
   u16 *pin_table ;
   u8 *vendor_data ;
};
#line 520  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/acrestyp.h"
struct acpi_resource_pin_config {
   u8 revision_id ;
   u8 producer_consumer ;
   u8 shareable ;
   u8 pin_config_type ;
   u32 pin_config_value ;
   u16 pin_table_length ;
   u16 vendor_length ;
   struct acpi_resource_source resource_source ;
   u16 *pin_table ;
   u8 *vendor_data ;
};
#line 550  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/acrestyp.h"
struct acpi_resource_pin_group {
   u8 revision_id ;
   u8 producer_consumer ;
   u16 pin_table_length ;
   u16 vendor_length ;
   u16 *pin_table ;
   struct acpi_resource_label resource_label ;
   u8 *vendor_data ;
};
#line 560  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/acrestyp.h"
struct acpi_resource_pin_group_function {
   u8 revision_id ;
   u8 producer_consumer ;
   u8 shareable ;
   u16 function_number ;
   u16 vendor_length ;
   struct acpi_resource_source resource_source ;
   struct acpi_resource_label resource_source_label ;
   u8 *vendor_data ;
};
#line 571  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/acrestyp.h"
struct acpi_resource_pin_group_config {
   u8 revision_id ;
   u8 producer_consumer ;
   u8 shareable ;
   u8 pin_config_type ;
   u32 pin_config_value ;
   u16 vendor_length ;
   struct acpi_resource_source resource_source ;
   struct acpi_resource_label resource_source_label ;
   u8 *vendor_data ;
};
#line 614  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/acrestyp.h"
union acpi_resource_data {
   struct acpi_resource_irq irq ;
   struct acpi_resource_dma dma ;
   struct acpi_resource_start_dependent start_dpf ;
   struct acpi_resource_io io ;
   struct acpi_resource_fixed_io fixed_io ;
   struct acpi_resource_fixed_dma fixed_dma ;
   struct acpi_resource_vendor vendor ;
   struct acpi_resource_vendor_typed vendor_typed ;
   struct acpi_resource_end_tag end_tag ;
   struct acpi_resource_memory24 memory24 ;
   struct acpi_resource_memory32 memory32 ;
   struct acpi_resource_fixed_memory32 fixed_memory32 ;
   struct acpi_resource_address16 address16 ;
   struct acpi_resource_address32 address32 ;
   struct acpi_resource_address64 address64 ;
   struct acpi_resource_extended_address64 ext_address64 ;
   struct acpi_resource_extended_irq extended_irq ;
   struct acpi_resource_generic_register generic_reg ;
   struct acpi_resource_gpio gpio ;
   struct acpi_resource_i2c_serialbus i2c_serial_bus ;
   struct acpi_resource_spi_serialbus spi_serial_bus ;
   struct acpi_resource_uart_serialbus uart_serial_bus ;
   struct acpi_resource_common_serialbus common_serial_bus ;
   struct acpi_resource_pin_function pin_function ;
   struct acpi_resource_pin_config pin_config ;
   struct acpi_resource_pin_group pin_group ;
   struct acpi_resource_pin_group_function pin_group_function ;
   struct acpi_resource_pin_group_config pin_group_config ;
   struct acpi_resource_address address ;
};
#line 651  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/acrestyp.h"
struct acpi_resource {
   u32 type ;
   u32 length ;
   union acpi_resource_data data ;
};
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/acpi_bus.h"
struct acpi_driver;
#line 107  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/acpi_bus.h"
struct acpi_hotplug_profile {
   struct kobject kobj ;
   int (*scan_dependent)(struct acpi_device *) ;
   void (*notify_online)(struct acpi_device *) ;
   bool enabled : 1 ;
   bool demand_offline : 1 ;
};
#line 121  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/acpi_bus.h"
struct acpi_scan_handler {
   struct acpi_device_id *ids ;
   struct list_head list_node ;
   bool (*match)(char *, struct acpi_device_id **) ;
   int (*attach)(struct acpi_device *, struct acpi_device_id *) ;
   void (*detach)(struct acpi_device *) ;
   void (*bind)(struct device *) ;
   void (*unbind)(struct device *) ;
   struct acpi_hotplug_profile hotplug ;
};
#line 137  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/acpi_bus.h"
struct acpi_hotplug_context {
   struct acpi_device *self ;
   int (*notify)(struct acpi_device *, u32 ) ;
   void (*uevent)(struct acpi_device *, u32 ) ;
   void (*fixup)(struct acpi_device *) ;
};
#line 153  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/acpi_bus.h"
struct acpi_device_ops {
   int (*add)(struct acpi_device *) ;
   int (*remove)(struct acpi_device *) ;
   void (*notify)(struct acpi_device *, u32 ) ;
};
#line 161  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/acpi_bus.h"
struct acpi_driver {
   char name[80U] ;
   char class[80U] ;
   struct acpi_device_id *ids ;
   unsigned int flags ;
   struct acpi_device_ops ops ;
   struct device_driver drv ;
   struct module *owner ;
};
#line 178  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/acpi_bus.h"
struct acpi_device_status {
   u32 present : 1 ;
   u32 enabled : 1 ;
   u32 show_in_ui : 1 ;
   u32 functional : 1 ;
   u32 battery_present : 1 ;
   u32 reserved : 27 ;
};
#line 189  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/acpi_bus.h"
struct acpi_device_flags {
   u32 dynamic_status : 1 ;
   u32 removable : 1 ;
   u32 ejectable : 1 ;
   u32 power_manageable : 1 ;
   u32 match_driver : 1 ;
   u32 initialized : 1 ;
   u32 visited : 1 ;
   u32 hotplug_notify : 1 ;
   u32 is_dock_station : 1 ;
   u32 of_compatible_ok : 1 ;
   u32 coherent_dma : 1 ;
   u32 cca_seen : 1 ;
   u32 enumeration_by_parent : 1 ;
   u32 reserved : 19 ;
};
#line 208  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/acpi_bus.h"
struct acpi_device_dir {
   struct proc_dir_entry *entry ;
};
#line 211  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/acpi_bus.h"
typedef char acpi_bus_id[8U];
#line 217  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/acpi_bus.h"
typedef u64 acpi_bus_address;
#line 218  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/acpi_bus.h"
typedef char acpi_device_name[40U];
#line 219  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/acpi_bus.h"
typedef char acpi_device_class[20U];
#line 226  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/acpi_bus.h"
struct acpi_pnp_type {
   u32 hardware_id : 1 ;
   u32 bus_address : 1 ;
   u32 platform_id : 1 ;
   u32 reserved : 29 ;
};
#line 233  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/acpi_bus.h"
struct acpi_device_pnp {
   acpi_bus_id bus_id ;
   struct acpi_pnp_type type ;
   acpi_bus_address bus_address ;
   char *unique_id ;
   struct list_head ids ;
   acpi_device_name device_name ;
   acpi_device_class device_class ;
   union acpi_object *str_obj ;
};
#line 253  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/acpi_bus.h"
struct acpi_device_power_flags {
   u32 explicit_get : 1 ;
   u32 power_resources : 1 ;
   u32 inrush_current : 1 ;
   u32 power_removed : 1 ;
   u32 ignore_parent : 1 ;
   u32 dsw_present : 1 ;
   u32 reserved : 26 ;
};
#line 263  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/acpi_bus.h"
struct __anonstruct_flags_2166 {
   u8 valid : 1 ;
   u8 explicit_set : 1 ;
   u8 reserved : 6 ;
};
#line 263  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/acpi_bus.h"
struct acpi_device_power_state {
   struct __anonstruct_flags_2166 flags ;
   int power ;
   int latency ;
   struct list_head resources ;
};
#line 274  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/acpi_bus.h"
struct acpi_device_power {
   int state ;
   struct acpi_device_power_flags flags ;
   struct acpi_device_power_state states[5U] ;
};
#line 282  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/acpi_bus.h"
struct acpi_device_perf_flags {
   u8 reserved : 8 ;
};
#line 286  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/acpi_bus.h"
struct __anonstruct_flags_2167 {
   u8 valid : 1 ;
   u8 reserved : 7 ;
};
#line 286  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/acpi_bus.h"
struct acpi_device_perf_state {
   struct __anonstruct_flags_2167 flags ;
   u8 power ;
   u8 performance ;
   int latency ;
};
#line 296  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/acpi_bus.h"
struct acpi_device_perf {
   int state ;
   struct acpi_device_perf_flags flags ;
   int state_count ;
   struct acpi_device_perf_state *states ;
};
#line 304  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/acpi_bus.h"
struct acpi_device_wakeup_flags {
   u8 valid : 1 ;
   u8 notifier_present : 1 ;
};
#line 309  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/acpi_bus.h"
struct acpi_device_wakeup_context {
   void (*func)(struct acpi_device_wakeup_context *) ;
   struct device *dev ;
};
#line 314  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/acpi_bus.h"
struct acpi_device_wakeup {
   acpi_handle gpe_device ;
   u64 gpe_number ;
   u64 sleep_state ;
   struct list_head resources ;
   struct acpi_device_wakeup_flags flags ;
   struct acpi_device_wakeup_context context ;
   struct wakeup_source *ws ;
   int prepare_count ;
   int enable_count ;
};
#line 340  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/acpi_bus.h"
struct acpi_device_data {
   union acpi_object *pointer ;
   struct list_head properties ;
   union acpi_object *of_compatible ;
   struct list_head subnodes ;
};
#line 346 
struct acpi_gpio_mapping;
#line 350  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/acpi_bus.h"
struct acpi_device {
   int device_type ;
   acpi_handle handle ;
   struct fwnode_handle fwnode ;
   struct acpi_device *parent ;
   struct list_head children ;
   struct list_head node ;
   struct list_head wakeup_list ;
   struct list_head del_list ;
   struct acpi_device_status status ;
   struct acpi_device_flags flags ;
   struct acpi_device_pnp pnp ;
   struct acpi_device_power power ;
   struct acpi_device_wakeup wakeup ;
   struct acpi_device_perf performance ;
   struct acpi_device_dir dir ;
   struct acpi_device_data data ;
   struct acpi_scan_handler *handler ;
   struct acpi_hotplug_context *hp ;
   struct acpi_driver *driver ;
   struct acpi_gpio_mapping *driver_gpios ;
   void *driver_data ;
   struct device dev ;
   unsigned int physical_node_count ;
   unsigned int dep_unmet ;
   struct list_head physical_node_list ;
   struct mutex physical_node_lock ;
   void (*remove)(struct acpi_device *) ;
};
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/if_vlan.h"
struct vlan_ethhdr {
   unsigned char h_dest[6U] ;
   unsigned char h_source[6U] ;
   __be16 h_vlan_proto ;
   __be16 h_vlan_TCI ;
   __be16 h_vlan_encapsulated_proto ;
};
#line 100  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_regs.h"
enum REG_ICTL_MASK {
    REG_ICTL_MASK_INFO_UPDATE = 1048576,
    REG_ICTL_MASK_DEV_STOP_REQ = 524288,
    REG_ICTL_MASK_TXRX_STOP_REQ = 262144,
    REG_ICTL_MASK_TXRX_STOP_DONE = 131072,
    REG_ICTL_MASK_RX_DATA = 65536,
    REG_ICTL_MASK_ALL = 2031616
};
#line 175  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_hw.h"
struct fjes_device_command_param {
   u32 req_len ;
   phys_addr_t req_start ;
   u32 res_len ;
   phys_addr_t res_start ;
   phys_addr_t share_start ;
};
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/tracepoint.h"
struct trace_eval_map {
   char *system ;
   char *eval_string ;
   unsigned long eval_value ;
};
#line 268  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h"
union __anonunion___u_2254 {
   struct tracepoint_func *__val ;
   char __c[1U] ;
};
#line 268  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h"
union __anonunion___u_2256 {
   struct tracepoint_func *__val ;
   char __c[1U] ;
};
#line 292  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h"
union __anonunion___u_2258 {
   struct tracepoint_func *__val ;
   char __c[1U] ;
};
#line 292  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h"
union __anonunion___u_2260 {
   struct tracepoint_func *__val ;
   char __c[1U] ;
};
#line 312  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h"
union __anonunion___u_2262 {
   struct tracepoint_func *__val ;
   char __c[1U] ;
};
#line 312  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h"
union __anonunion___u_2264 {
   struct tracepoint_func *__val ;
   char __c[1U] ;
};
#line 336  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h"
union __anonunion___u_2266 {
   struct tracepoint_func *__val ;
   char __c[1U] ;
};
#line 336  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h"
union __anonunion___u_2268 {
   struct tracepoint_func *__val ;
   char __c[1U] ;
};
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 45  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_regs.h"
struct __anonstruct_bits_2966 {
   __le32 epid : 16 ;
   __le32  ;
};
#line 45  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_regs.h"
union REG_OWNER_EPID {
   struct __anonstruct_bits_2966 bits ;
   __le32 reg ;
};
#line 53  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_regs.h"
struct __anonstruct_bits_2967 {
   __le32 maxep : 16 ;
   __le32  ;
};
#line 53  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_regs.h"
union REG_MAX_EP {
   struct __anonstruct_bits_2967 bits ;
   __le32 reg ;
};
#line 62  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_regs.h"
struct __anonstruct_bits_2968 {
   __le32 reset : 1 ;
   __le32 rsv0 : 15 ;
   __le32 rsv1 : 16 ;
};
#line 62  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_regs.h"
union REG_DCTL {
   struct __anonstruct_bits_2968 bits ;
   __le32 reg ;
};
#line 72  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_regs.h"
struct __anonstruct_bits_2969 {
   __le32 req_code : 16 ;
   __le32 err_info : 14 ;
   __le32 error : 1 ;
   __le32 req_start : 1 ;
};
#line 72  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_regs.h"
union REG_CR {
   struct __anonstruct_bits_2969 bits ;
   __le32 reg ;
};
#line 82  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_regs.h"
struct __anonstruct_bits_2970 {
   __le32 req_code : 16 ;
   __le32 rsv0 : 14 ;
   __le32 busy : 1 ;
   __le32 complete : 1 ;
};
#line 82  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_regs.h"
union REG_CS {
   struct __anonstruct_bits_2970 bits ;
   __le32 reg ;
};
#line 92  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_hw.h"
struct esmem_frame {
   __le32 frame_size ;
   u8 frame_data[] ;
};
#line 164 
enum fjes_dev_command_request_type {
    FJES_CMD_REQ_INFO = 1,
    FJES_CMD_REQ_SHARE_BUFFER = 2,
    FJES_CMD_REQ_UNSHARE_BUFFER = 4,
    FJES_CMD_REQ_START_DEBUG = 256,
    FJES_CMD_REQ_STOP_DEBUG = 512
};
#line 182 
enum fjes_dev_command_response_e {
    FJES_CMD_STATUS_UNKNOWN = 0,
    FJES_CMD_STATUS_NORMAL = 1,
    FJES_CMD_STATUS_TIMEOUT = 2,
    FJES_CMD_STATUS_ERROR_PARAM = 3,
    FJES_CMD_STATUS_ERROR_STATUS = 4
};
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h"
union __anonunion___u_3002 {
   struct tracepoint_func *__val ;
   char __c[1U] ;
};
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h"
union __anonunion___u_3004 {
   struct tracepoint_func *__val ;
   char __c[1U] ;
};
#line 50  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h"
union __anonunion___u_3006 {
   struct tracepoint_func *__val ;
   char __c[1U] ;
};
#line 50  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h"
union __anonunion___u_3008 {
   struct tracepoint_func *__val ;
   char __c[1U] ;
};
#line 81  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h"
union __anonunion___u_3010 {
   struct tracepoint_func *__val ;
   char __c[1U] ;
};
#line 81  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h"
union __anonunion___u_3012 {
   struct tracepoint_func *__val ;
   char __c[1U] ;
};
#line 93  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h"
union __anonunion___u_3014 {
   struct tracepoint_func *__val ;
   char __c[1U] ;
};
#line 93  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h"
union __anonunion___u_3016 {
   struct tracepoint_func *__val ;
   char __c[1U] ;
};
#line 124  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h"
union __anonunion___u_3018 {
   struct tracepoint_func *__val ;
   char __c[1U] ;
};
#line 124  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h"
union __anonunion___u_3020 {
   struct tracepoint_func *__val ;
   char __c[1U] ;
};
#line 141  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h"
union __anonunion___u_3022 {
   struct tracepoint_func *__val ;
   char __c[1U] ;
};
#line 141  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h"
union __anonunion___u_3024 {
   struct tracepoint_func *__val ;
   char __c[1U] ;
};
#line 153  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h"
union __anonunion___u_3026 {
   struct tracepoint_func *__val ;
   char __c[1U] ;
};
#line 153  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h"
union __anonunion___u_3028 {
   struct tracepoint_func *__val ;
   char __c[1U] ;
};
#line 168  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h"
union __anonunion___u_3030 {
   struct tracepoint_func *__val ;
   char __c[1U] ;
};
#line 168  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h"
union __anonunion___u_3032 {
   struct tracepoint_func *__val ;
   char __c[1U] ;
};
#line 185  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h"
union __anonunion___u_3034 {
   struct tracepoint_func *__val ;
   char __c[1U] ;
};
#line 185  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h"
union __anonunion___u_3036 {
   struct tracepoint_func *__val ;
   char __c[1U] ;
};
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h"
union __anonunion___u_3038 {
   struct tracepoint_func *__val ;
   char __c[1U] ;
};
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h"
union __anonunion___u_3040 {
   struct tracepoint_func *__val ;
   char __c[1U] ;
};
#line 214  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h"
union __anonunion___u_3042 {
   struct tracepoint_func *__val ;
   char __c[1U] ;
};
#line 214  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h"
union __anonunion___u_3044 {
   struct tracepoint_func *__val ;
   char __c[1U] ;
};
#line 228  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h"
union __anonunion___u_3046 {
   struct tracepoint_func *__val ;
   char __c[1U] ;
};
#line 228  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h"
union __anonunion___u_3048 {
   struct tracepoint_func *__val ;
   char __c[1U] ;
};
#line 240  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h"
union __anonunion___u_3050 {
   struct tracepoint_func *__val ;
   char __c[1U] ;
};
#line 240  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h"
union __anonunion___u_3052 {
   struct tracepoint_func *__val ;
   char __c[1U] ;
};
#line 254  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h"
union __anonunion___u_3054 {
   struct tracepoint_func *__val ;
   char __c[1U] ;
};
#line 254  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h"
union __anonunion___u_3056 {
   struct tracepoint_func *__val ;
   char __c[1U] ;
};
#line 962  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_hw.c"
struct my_s {
   u8 es_status ;
   u8 zone ;
};
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 197 
enum hrtimer_restart;
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
struct device_private {
   void *driver_data ;
};
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/firmware.h"
struct firmware {
   size_t size ;
   u8 *data ;
   struct page **pages ;
   void *priv ;
};
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 244  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/idr.h"
struct ida {
   struct xarray xa ;
};
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rtmutex.h"
struct rt_mutex {
   raw_spinlock_t wait_lock ;
   struct rb_root_cached waiters ;
   struct task_struct *owner ;
   int save_state ;
   char *name ;
   char *file ;
   int line ;
   void *magic ;
   struct lockdep_map dep_map ;
};
#line 69  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/i2c.h"
struct i2c_msg {
   __u16 addr ;
   __u16 flags ;
   __u16 len ;
   __u8 *buf ;
};
#line 135  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/i2c.h"
union i2c_smbus_data {
   __u8 byte ;
   __u16 word ;
   __u8 block[34U] ;
};
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/i2c.h"
struct i2c_algorithm;
#line 28 
struct i2c_adapter;
#line 29 
struct i2c_client;
#line 33 
enum i2c_slave_event;
#line 33 
enum i2c_slave_event;
#line 314  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/i2c.h"
struct i2c_client {
   unsigned short flags ;
   unsigned short addr ;
   char name[20U] ;
   struct i2c_adapter *adapter ;
   struct device dev ;
   int init_irq ;
   int irq ;
   struct list_head detected ;
   int (*slave_cb)(struct i2c_client *, enum i2c_slave_event , u8 *) ;
};
#line 360 
enum i2c_slave_event {
    I2C_SLAVE_READ_REQUESTED = 0,
    I2C_SLAVE_WRITE_REQUESTED = 1,
    I2C_SLAVE_READ_PROCESSED = 2,
    I2C_SLAVE_WRITE_RECEIVED = 3,
    I2C_SLAVE_STOP = 4
};
#line 527  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/i2c.h"
struct i2c_algorithm {
   int (*master_xfer)(struct i2c_adapter *, struct i2c_msg *, int ) ;
   int (*master_xfer_atomic)(struct i2c_adapter *, struct i2c_msg *, int ) ;
   int (*smbus_xfer)(struct i2c_adapter *, u16 , unsigned short , char , u8 , int , union i2c_smbus_data *) ;
   int (*smbus_xfer_atomic)(struct i2c_adapter *, u16 , unsigned short , char , u8 , int , union i2c_smbus_data *) ;
   u32 (*functionality)(struct i2c_adapter *) ;
   int (*reg_slave)(struct i2c_client *) ;
   int (*unreg_slave)(struct i2c_client *) ;
};
#line 565  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/i2c.h"
struct i2c_lock_operations {
   void (*lock_bus)(struct i2c_adapter *, unsigned int ) ;
   int (*trylock_bus)(struct i2c_adapter *, unsigned int ) ;
   void (*unlock_bus)(struct i2c_adapter *, unsigned int ) ;
};
#line 618 
struct gpio_desc;
#line 618  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/i2c.h"
struct i2c_bus_recovery_info {
   int (*recover_bus)(struct i2c_adapter *) ;
   int (*get_scl)(struct i2c_adapter *) ;
   void (*set_scl)(struct i2c_adapter *, int ) ;
   int (*get_sda)(struct i2c_adapter *) ;
   void (*set_sda)(struct i2c_adapter *, int ) ;
   int (*get_bus_free)(struct i2c_adapter *) ;
   void (*prepare_recovery)(struct i2c_adapter *) ;
   void (*unprepare_recovery)(struct i2c_adapter *) ;
   struct gpio_desc *scl_gpiod ;
   struct gpio_desc *sda_gpiod ;
};
#line 661  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/i2c.h"
struct i2c_adapter_quirks {
   u64 flags ;
   int max_num_msgs ;
   u16 max_write_len ;
   u16 max_read_len ;
   u16 max_comb_1st_msg_len ;
   u16 max_comb_2nd_msg_len ;
};
#line 692  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/i2c.h"
struct i2c_adapter {
   struct module *owner ;
   unsigned int class ;
   struct i2c_algorithm *algo ;
   void *algo_data ;
   struct i2c_lock_operations *lock_ops ;
   struct rt_mutex bus_lock ;
   struct rt_mutex mux_lock ;
   int timeout ;
   int retries ;
   struct device dev ;
   unsigned long locked_flags ;
   int nr ;
   char name[48U] ;
   struct completion dev_released ;
   struct mutex userspace_clients_lock ;
   struct list_head userspace_clients ;
   struct i2c_bus_recovery_info *bus_recovery_info ;
   struct i2c_adapter_quirks *quirks ;
   struct irq_domain *host_notify_domain ;
};
#line 36  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/poll.h"
struct pollfd {
   int fd ;
   short events ;
   short revents ;
};
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/poll.h"
struct poll_table_struct {
   void (*_qproc)(struct file *, wait_queue_head_t *, struct poll_table_struct *) ;
   __poll_t _key ;
};
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cdev.h"
struct cdev {
   struct kobject kobj ;
   struct module *owner ;
   struct file_operations *ops ;
   struct list_head list ;
   dev_t dev ;
   unsigned int count ;
} __attribute__((__designated_init__));
#line 87  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/v4l2-common.h"
struct v4l2_edid {
   __u32 pad ;
   __u32 start_block ;
   __u32 blocks ;
   __u32 reserved[5U] ;
   __u8 *edid ;
};
#line 754 
enum v4l2_priority {
    V4L2_PRIORITY_UNSET = 0,
    V4L2_PRIORITY_BACKGROUND = 1,
    V4L2_PRIORITY_INTERACTIVE = 2,
    V4L2_PRIORITY_RECORD = 3,
    V4L2_PRIORITY_DEFAULT = 2
};
#line 413  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_rect {
   __s32 left ;
   __s32 top ;
   __u32 width ;
   __u32 height ;
};
#line 420  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_fract {
   __u32 numerator ;
   __u32 denominator ;
};
#line 1212  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
typedef __u64 v4l2_std_id;
#line 1394  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_bt_timings {
   __u32 width ;
   __u32 height ;
   __u32 interlaced ;
   __u32 polarities ;
   __u64 pixelclock ;
   __u32 hfrontporch ;
   __u32 hsync ;
   __u32 hbackporch ;
   __u32 vfrontporch ;
   __u32 vsync ;
   __u32 vbackporch ;
   __u32 il_vfrontporch ;
   __u32 il_vsync ;
   __u32 il_vbackporch ;
   __u32 standards ;
   __u32 flags ;
   struct v4l2_fract picture_aspect ;
   __u8 cea861_vic ;
   __u8 hdmi_vic ;
   __u8 reserved[46U] ;
} __attribute__((__packed__));
#line 1517  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
union __anonunion_5683 {
   struct v4l2_bt_timings bt ;
   __u32 reserved[32U] ;
};
#line 1517  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_dv_timings {
   __u32 type ;
   union __anonunion_5683 __anonCompField_v4l2_dv_timings_77 ;
} __attribute__((__packed__));
#line 1536  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_enum_dv_timings {
   __u32 index ;
   __u32 pad ;
   __u32 reserved[2U] ;
   struct v4l2_dv_timings timings ;
};
#line 1554  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_bt_timings_cap {
   __u32 min_width ;
   __u32 max_width ;
   __u32 min_height ;
   __u32 max_height ;
   __u64 min_pixelclock ;
   __u64 max_pixelclock ;
   __u32 standards ;
   __u32 capabilities ;
   __u32 reserved[16U] ;
} __attribute__((__packed__));
#line 1581  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
union __anonunion_5684 {
   struct v4l2_bt_timings_cap bt ;
   __u32 raw_data[32U] ;
};
#line 1581  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_dv_timings_cap {
   __u32 type ;
   __u32 pad ;
   __u32 reserved[2U] ;
   union __anonunion_5684 __anonCompField_v4l2_dv_timings_cap_78 ;
};
#line 1803  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_tuner {
   __u32 index ;
   __u8 name[32U] ;
   __u32 type ;
   __u32 capability ;
   __u32 rangelow ;
   __u32 rangehigh ;
   __u32 rxsubchans ;
   __u32 audmode ;
   __s32 signal ;
   __s32 afc ;
   __u32 reserved[4U] ;
};
#line 1817  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_modulator {
   __u32 index ;
   __u8 name[32U] ;
   __u32 capability ;
   __u32 rangelow ;
   __u32 rangehigh ;
   __u32 txsubchans ;
   __u32 type ;
   __u32 reserved[3U] ;
};
#line 1860  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_frequency {
   __u32 tuner ;
   __u32 type ;
   __u32 frequency ;
   __u32 reserved[8U] ;
};
#line 1871  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_frequency_band {
   __u32 tuner ;
   __u32 type ;
   __u32 index ;
   __u32 capability ;
   __u32 rangelow ;
   __u32 rangehigh ;
   __u32 modulation ;
   __u32 reserved[9U] ;
};
#line 2043  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_vbi_format {
   __u32 sampling_rate ;
   __u32 offset ;
   __u32 samples_per_line ;
   __u32 sample_format ;
   __s32 start[2U] ;
   __u32 count[2U] ;
   __u32 flags ;
   __u32 reserved[2U] ;
};
#line 2071  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_sliced_vbi_format {
   __u16 service_set ;
   __u16 service_lines[2U][24U] ;
   __u32 io_size ;
   __u32 reserved[2U] ;
};
#line 2095  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_sliced_vbi_cap {
   __u16 service_set ;
   __u16 service_lines[2U][24U] ;
   __u32 type ;
   __u32 reserved[3U] ;
};
#line 2106  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_sliced_vbi_data {
   __u32 id ;
   __u32 field ;
   __u32 line ;
   __u32 reserved ;
   __u8 data[48U] ;
};
#line 2350  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_event_subscription {
   __u32 type ;
   __u32 id ;
   __u32 flags ;
   __u32 reserved[5U] ;
};
#line 2375  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
union __anonunion_5700 {
   __u32 addr ;
   char name[32U] ;
};
#line 2375  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_dbg_match {
   __u32 type ;
   union __anonunion_5700 __anonCompField_v4l2_dbg_match_87 ;
} __attribute__((__packed__));
#line 2383  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_dbg_register {
   struct v4l2_dbg_match match ;
   __u32 size ;
   __u64 reg ;
   __u64 val ;
} __attribute__((__packed__));
#line 57  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_device;
#line 57  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_gobj {
   struct media_device *mdev ;
   u32 id ;
   struct list_head list ;
};
#line 72  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_entity_enum {
   unsigned long *bmap ;
   int idx_max ;
};
#line 88 
struct media_entity;
#line 88  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct __anonstruct_stack_5704 {
   struct media_entity *entity ;
   struct list_head *link ;
};
#line 88  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_graph {
   struct __anonstruct_stack_5704 stack[16U] ;
   struct media_entity_enum ent_enum ;
   int top ;
};
#line 104  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_pipeline {
   int streaming_count ;
   struct media_graph graph ;
};
#line 132 
struct media_pad;
#line 132 
struct media_interface;
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
union __anonunion_5705 {
   struct media_gobj *gobj0 ;
   struct media_pad *source ;
   struct media_interface *intf ;
};
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
union __anonunion_5706 {
   struct media_gobj *gobj1 ;
   struct media_pad *sink ;
   struct media_entity *entity ;
};
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_link {
   struct media_gobj graph_obj ;
   struct list_head list ;
   union __anonunion_5705 __anonCompField_media_link_90 ;
   union __anonunion_5706 __anonCompField_media_link_91 ;
   struct media_link *reverse ;
   unsigned long flags ;
   bool is_backlink ;
};
#line 149 
enum media_pad_signal_type {
    PAD_SIGNAL_DEFAULT = 0,
    PAD_SIGNAL_ANALOG = 1,
    PAD_SIGNAL_DV = 2,
    PAD_SIGNAL_AUDIO = 3
};
#line 189  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_pad {
   struct media_gobj graph_obj ;
   struct media_entity *entity ;
   u16 index ;
   enum media_pad_signal_type sig_type ;
   unsigned long flags ;
};
#line 214  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_entity_operations {
   int (*get_fwnode_pad)(struct fwnode_endpoint *) ;
   int (*link_setup)(struct media_entity *, struct media_pad *, struct media_pad *, u32 ) ;
   int (*link_validate)(struct media_link *) ;
};
#line 221 
enum media_entity_type {
    MEDIA_ENTITY_TYPE_BASE = 0,
    MEDIA_ENTITY_TYPE_VIDEO_DEVICE = 1,
    MEDIA_ENTITY_TYPE_V4L2_SUBDEV = 2
};
#line 289  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct __anonstruct_dev_5708 {
   u32 major ;
   u32 minor ;
};
#line 289  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
union __anonunion_info_5707 {
   struct __anonstruct_dev_5708 dev ;
};
#line 289  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_entity {
   struct media_gobj graph_obj ;
   char *name ;
   enum media_entity_type obj_type ;
   u32 function ;
   unsigned long flags ;
   u16 num_pads ;
   u16 num_links ;
   u16 num_backlinks ;
   int internal_idx ;
   struct media_pad *pads ;
   struct list_head links ;
   struct media_entity_operations *ops ;
   int stream_count ;
   int use_count ;
   struct media_pipeline *pipe ;
   union __anonunion_info_5707 info ;
};
#line 335  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_interface {
   struct media_gobj graph_obj ;
   struct list_head links ;
   u32 type ;
   u32 flags ;
};
#line 349  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_intf_devnode {
   struct media_interface intf ;
   u32 major ;
   u32 minor ;
};
#line 1087 
enum vfl_devnode_type {
    VFL_TYPE_GRABBER = 0,
    VFL_TYPE_VBI = 1,
    VFL_TYPE_RADIO = 2,
    VFL_TYPE_SUBDEV = 3,
    VFL_TYPE_SDR = 4,
    VFL_TYPE_TOUCH = 5,
    VFL_TYPE_MAX = 6
};
#line 1097 
enum vfl_devnode_direction {
    VFL_DIR_RX = 0,
    VFL_DIR_TX = 1,
    VFL_DIR_M2M = 2
};
#line 1104 
struct video_device;
#line 1105 
struct v4l2_device;
#line 1106 
struct v4l2_ctrl_handler;
#line 104  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-dev.h"
struct v4l2_prio_state {
   atomic_t prios[4U] ;
};
#line 193  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-dev.h"
struct v4l2_file_operations {
   struct module *owner ;
   ssize_t (*read)(struct file *, char *, size_t , loff_t *) ;
   ssize_t (*write)(struct file *, char *, size_t , loff_t *) ;
   __poll_t (*poll)(struct file *, struct poll_table_struct *) ;
   long (*unlocked_ioctl)(struct file *, unsigned int , unsigned long ) ;
   long (*compat_ioctl32)(struct file *, unsigned int , unsigned long ) ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   int (*mmap)(struct file *, struct vm_area_struct *) ;
   int (*open)(struct file *) ;
   int (*release)(struct file *) ;
};
#line 256 
struct vb2_queue;
#line 256 
struct v4l2_ioctl_ops;
#line 256  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-dev.h"
struct video_device {
   struct media_entity entity ;
   struct media_intf_devnode *intf_devnode ;
   struct media_pipeline pipe ;
   struct v4l2_file_operations *fops ;
   u32 device_caps ;
   struct device dev ;
   struct cdev *cdev ;
   struct v4l2_device *v4l2_dev ;
   struct device *dev_parent ;
   struct v4l2_ctrl_handler *ctrl_handler ;
   struct vb2_queue *queue ;
   struct v4l2_prio_state *prio ;
   char name[32U] ;
   enum vfl_devnode_type vfl_type ;
   enum vfl_devnode_direction vfl_dir ;
   int minor ;
   u16 num ;
   unsigned long flags ;
   int index ;
   spinlock_t fh_lock ;
   struct list_head fh_list ;
   int dev_debug ;
   v4l2_std_id tvnorms ;
   void (*release)(struct video_device *) ;
   struct v4l2_ioctl_ops *ioctl_ops ;
   unsigned long valid_ioctls[3U] ;
   struct mutex *lock ;
};
#line 95  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-common.h"
struct v4l2_subdev;
#line 96 
struct v4l2_subdev_ops;
#line 335  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-common.h"
struct v4l2_priv_tun_config {
   int tuner ;
   void *priv ;
};
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-devnode.h"
struct media_file_operations {
   struct module *owner ;
   ssize_t (*read)(struct file *, char *, size_t , loff_t *) ;
   ssize_t (*write)(struct file *, char *, size_t , loff_t *) ;
   __poll_t (*poll)(struct file *, struct poll_table_struct *) ;
   long (*ioctl)(struct file *, unsigned int , unsigned long ) ;
   long (*compat_ioctl)(struct file *, unsigned int , unsigned long ) ;
   int (*open)(struct file *) ;
   int (*release)(struct file *) ;
};
#line 75  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-devnode.h"
struct media_devnode {
   struct media_device *media_dev ;
   struct media_file_operations *fops ;
   struct device dev ;
   struct cdev cdev ;
   struct device *parent ;
   int minor ;
   unsigned long flags ;
   void (*release)(struct media_devnode *) ;
};
#line 65  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-device.h"
struct media_request;
#line 65  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-device.h"
struct media_device_ops {
   int (*link_notify)(struct media_link *, u32 , unsigned int ) ;
   struct media_request *(*req_alloc)(struct media_device *) ;
   void (*req_free)(struct media_request *) ;
   int (*req_validate)(struct media_request *) ;
   void (*req_queue)(struct media_request *) ;
};
#line 144  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-device.h"
struct media_device {
   struct device *dev ;
   struct media_devnode *devnode ;
   char model[32U] ;
   char driver_name[32U] ;
   char serial[40U] ;
   char bus_info[32U] ;
   u32 hw_revision ;
   u64 topology_version ;
   u32 id ;
   struct ida entity_internal_idx ;
   int entity_internal_idx_max ;
   struct list_head entities ;
   struct list_head interfaces ;
   struct list_head pads ;
   struct list_head links ;
   struct list_head entity_notify ;
   struct mutex graph_mutex ;
   struct media_graph pm_count_walk ;
   void *source_priv ;
   int (*enable_source)(struct media_entity *, struct media_pipeline *) ;
   void (*disable_source)(struct media_entity *) ;
   struct media_device_ops *ops ;
   struct mutex req_queue_mutex ;
   atomic_t request_id ;
};
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/v4l2-mediabus.h"
struct v4l2_mbus_framefmt {
   __u32 width ;
   __u32 height ;
   __u32 code ;
   __u32 field ;
   __u32 colorspace ;
   __u16 ycbcr_enc ;
   __u16 quantization ;
   __u16 xfer_func ;
   __u16 reserved[11U] ;
};
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/v4l2-subdev.h"
struct v4l2_subdev_format {
   __u32 which ;
   __u32 pad ;
   struct v4l2_mbus_framefmt format ;
   __u32 reserved[8U] ;
};
#line 75  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/v4l2-subdev.h"
struct v4l2_subdev_mbus_code_enum {
   __u32 pad ;
   __u32 index ;
   __u32 code ;
   __u32 which ;
   __u32 reserved[8U] ;
};
#line 90  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/v4l2-subdev.h"
struct v4l2_subdev_frame_size_enum {
   __u32 index ;
   __u32 pad ;
   __u32 code ;
   __u32 min_width ;
   __u32 max_width ;
   __u32 min_height ;
   __u32 max_height ;
   __u32 which ;
   __u32 reserved[8U] ;
};
#line 107  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/v4l2-subdev.h"
struct v4l2_subdev_frame_interval {
   __u32 pad ;
   struct v4l2_fract interval ;
   __u32 reserved[9U] ;
};
#line 123  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/v4l2-subdev.h"
struct v4l2_subdev_frame_interval_enum {
   __u32 index ;
   __u32 pad ;
   __u32 code ;
   __u32 width ;
   __u32 height ;
   struct v4l2_fract interval ;
   __u32 which ;
   __u32 reserved[8U] ;
};
#line 149  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/v4l2-subdev.h"
struct v4l2_subdev_selection {
   __u32 which ;
   __u32 pad ;
   __u32 target ;
   __u32 flags ;
   struct v4l2_rect r ;
   __u32 reserved[8U] ;
};
#line 157 
struct v4l2_async_notifier;
#line 158 
enum v4l2_async_match_type {
    V4L2_ASYNC_MATCH_CUSTOM = 0,
    V4L2_ASYNC_MATCH_DEVNAME = 1,
    V4L2_ASYNC_MATCH_I2C = 2,
    V4L2_ASYNC_MATCH_FWNODE = 3
};
#line 79  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-async.h"
struct __anonstruct_i2c_5722 {
   int adapter_id ;
   unsigned short address ;
};
#line 79  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-async.h"
struct __anonstruct_custom_5723 {
   bool (*match)(struct device *, struct v4l2_async_subdev *) ;
   void *priv ;
};
#line 79  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-async.h"
union __anonunion_match_5721 {
   struct fwnode_handle *fwnode ;
   char *device_name ;
   struct __anonstruct_i2c_5722 i2c ;
   struct __anonstruct_custom_5723 custom ;
};
#line 79  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-async.h"
struct v4l2_async_subdev {
   enum v4l2_async_match_type match_type ;
   union __anonunion_match_5721 match ;
   struct list_head list ;
   struct list_head asd_list ;
};
#line 107  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-async.h"
struct v4l2_async_notifier_operations {
   int (*bound)(struct v4l2_async_notifier *, struct v4l2_subdev *, struct v4l2_async_subdev *) ;
   int (*complete)(struct v4l2_async_notifier *) ;
   void (*unbind)(struct v4l2_async_notifier *, struct v4l2_subdev *, struct v4l2_async_subdev *) ;
};
#line 129  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-async.h"
struct v4l2_async_notifier {
   struct v4l2_async_notifier_operations *ops ;
   struct v4l2_device *v4l2_dev ;
   struct v4l2_subdev *sd ;
   struct v4l2_async_notifier *parent ;
   struct list_head asd_list ;
   struct list_head waiting ;
   struct list_head done ;
   struct list_head list ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-fh.h"
struct v4l2_m2m_ctx;
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-fh.h"
struct v4l2_fh {
   struct list_head list ;
   struct video_device *vdev ;
   struct v4l2_ctrl_handler *ctrl_handler ;
   enum v4l2_priority prio ;
   wait_queue_head_t wait ;
   struct mutex subscribe_lock ;
   struct list_head subscribed ;
   struct list_head available ;
   unsigned int navailable ;
   u32 sequence ;
   struct v4l2_m2m_ctx *m2m_ctx ;
};
#line 162 
enum v4l2_mbus_type {
    V4L2_MBUS_UNKNOWN = 0,
    V4L2_MBUS_PARALLEL = 1,
    V4L2_MBUS_BT656 = 2,
    V4L2_MBUS_CSI1 = 3,
    V4L2_MBUS_CCP2 = 4,
    V4L2_MBUS_CSI2_DPHY = 5,
    V4L2_MBUS_CSI2_CPHY = 6
};
#line 97  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-mediabus.h"
struct v4l2_mbus_config {
   enum v4l2_mbus_type type ;
   unsigned int flags ;
};
#line 184 
struct v4l2_subdev_fh;
#line 185 
struct tuner_setup;
#line 186 
struct v4l2_mbus_frame_desc;
#line 52  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_decode_vbi_line {
   u32 is_second_field ;
   u8 *p ;
   u32 line ;
   u32 type ;
};
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_io_pin_config {
   u32 flags ;
   u8 pin ;
   u8 function ;
   u8 value ;
   u8 strength ;
};
#line 188  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_core_ops {
   int (*log_status)(struct v4l2_subdev *) ;
   int (*s_io_pin_config)(struct v4l2_subdev *, size_t , struct v4l2_subdev_io_pin_config *) ;
   int (*init)(struct v4l2_subdev *, u32 ) ;
   int (*load_fw)(struct v4l2_subdev *) ;
   int (*reset)(struct v4l2_subdev *, u32 ) ;
   int (*s_gpio)(struct v4l2_subdev *, u32 ) ;
   long (*ioctl)(struct v4l2_subdev *, unsigned int , void *) ;
   long (*compat_ioctl32)(struct v4l2_subdev *, unsigned int , unsigned long ) ;
   int (*g_register)(struct v4l2_subdev *, struct v4l2_dbg_register *) ;
   int (*s_register)(struct v4l2_subdev *, struct v4l2_dbg_register *) ;
   int (*s_power)(struct v4l2_subdev *, int ) ;
   int (*interrupt_service_routine)(struct v4l2_subdev *, u32 , bool *) ;
   int (*subscribe_event)(struct v4l2_subdev *, struct v4l2_fh *, struct v4l2_event_subscription *) ;
   int (*unsubscribe_event)(struct v4l2_subdev *, struct v4l2_fh *, struct v4l2_event_subscription *) ;
};
#line 264  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_tuner_ops {
   int (*standby)(struct v4l2_subdev *) ;
   int (*s_radio)(struct v4l2_subdev *) ;
   int (*s_frequency)(struct v4l2_subdev *, struct v4l2_frequency *) ;
   int (*g_frequency)(struct v4l2_subdev *, struct v4l2_frequency *) ;
   int (*enum_freq_bands)(struct v4l2_subdev *, struct v4l2_frequency_band *) ;
   int (*g_tuner)(struct v4l2_subdev *, struct v4l2_tuner *) ;
   int (*s_tuner)(struct v4l2_subdev *, struct v4l2_tuner *) ;
   int (*g_modulator)(struct v4l2_subdev *, struct v4l2_modulator *) ;
   int (*s_modulator)(struct v4l2_subdev *, struct v4l2_modulator *) ;
   int (*s_type_addr)(struct v4l2_subdev *, struct tuner_setup *) ;
   int (*s_config)(struct v4l2_subdev *, struct v4l2_priv_tun_config *) ;
};
#line 304  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_audio_ops {
   int (*s_clock_freq)(struct v4l2_subdev *, u32 ) ;
   int (*s_i2s_clock_freq)(struct v4l2_subdev *, u32 ) ;
   int (*s_routing)(struct v4l2_subdev *, u32 , u32 , u32 ) ;
   int (*s_stream)(struct v4l2_subdev *, int ) ;
};
#line 310 
enum v4l2_mbus_frame_desc_flags {
    V4L2_MBUS_FRAME_DESC_FL_LEN_MAX = 1,
    V4L2_MBUS_FRAME_DESC_FL_BLOB = 2
};
#line 335  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_mbus_frame_desc_entry {
   enum v4l2_mbus_frame_desc_flags flags ;
   u32 pixelcode ;
   u32 length ;
};
#line 348  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_mbus_frame_desc {
   struct v4l2_mbus_frame_desc_entry entry[4U] ;
   unsigned short num_entries ;
};
#line 415  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_video_ops {
   int (*s_routing)(struct v4l2_subdev *, u32 , u32 , u32 ) ;
   int (*s_crystal_freq)(struct v4l2_subdev *, u32 , u32 ) ;
   int (*g_std)(struct v4l2_subdev *, v4l2_std_id *) ;
   int (*s_std)(struct v4l2_subdev *, v4l2_std_id ) ;
   int (*s_std_output)(struct v4l2_subdev *, v4l2_std_id ) ;
   int (*g_std_output)(struct v4l2_subdev *, v4l2_std_id *) ;
   int (*querystd)(struct v4l2_subdev *, v4l2_std_id *) ;
   int (*g_tvnorms)(struct v4l2_subdev *, v4l2_std_id *) ;
   int (*g_tvnorms_output)(struct v4l2_subdev *, v4l2_std_id *) ;
   int (*g_input_status)(struct v4l2_subdev *, u32 *) ;
   int (*s_stream)(struct v4l2_subdev *, int ) ;
   int (*g_pixelaspect)(struct v4l2_subdev *, struct v4l2_fract *) ;
   int (*g_frame_interval)(struct v4l2_subdev *, struct v4l2_subdev_frame_interval *) ;
   int (*s_frame_interval)(struct v4l2_subdev *, struct v4l2_subdev_frame_interval *) ;
   int (*s_dv_timings)(struct v4l2_subdev *, struct v4l2_dv_timings *) ;
   int (*g_dv_timings)(struct v4l2_subdev *, struct v4l2_dv_timings *) ;
   int (*query_dv_timings)(struct v4l2_subdev *, struct v4l2_dv_timings *) ;
   int (*g_mbus_config)(struct v4l2_subdev *, struct v4l2_mbus_config *) ;
   int (*s_mbus_config)(struct v4l2_subdev *, struct v4l2_mbus_config *) ;
   int (*s_rx_buffer)(struct v4l2_subdev *, void *, unsigned int *) ;
};
#line 481  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_vbi_ops {
   int (*decode_vbi_line)(struct v4l2_subdev *, struct v4l2_decode_vbi_line *) ;
   int (*s_vbi_data)(struct v4l2_subdev *, struct v4l2_sliced_vbi_data *) ;
   int (*g_vbi_data)(struct v4l2_subdev *, struct v4l2_sliced_vbi_data *) ;
   int (*g_sliced_vbi_cap)(struct v4l2_subdev *, struct v4l2_sliced_vbi_cap *) ;
   int (*s_raw_fmt)(struct v4l2_subdev *, struct v4l2_vbi_format *) ;
   int (*g_sliced_fmt)(struct v4l2_subdev *, struct v4l2_sliced_vbi_format *) ;
   int (*s_sliced_fmt)(struct v4l2_subdev *, struct v4l2_sliced_vbi_format *) ;
};
#line 501  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_sensor_ops {
   int (*g_skip_top_lines)(struct v4l2_subdev *, u32 *) ;
   int (*g_skip_frames)(struct v4l2_subdev *, u32 *) ;
};
#line 505 
enum v4l2_subdev_ir_mode {
    V4L2_SUBDEV_IR_MODE_PULSE_WIDTH = 0
};
#line 540  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_ir_parameters {
   unsigned int bytes_per_data_element ;
   enum v4l2_subdev_ir_mode mode ;
   bool enable ;
   bool interrupt_enable ;
   bool shutdown ;
   bool modulation ;
   u32 max_pulse_width ;
   unsigned int carrier_freq ;
   unsigned int duty_cycle ;
   bool invert_level ;
   bool invert_carrier_sense ;
   u32 noise_filter_min_width ;
   unsigned int carrier_range_lower ;
   unsigned int carrier_range_upper ;
   u32 resolution ;
};
#line 599  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_ir_ops {
   int (*rx_read)(struct v4l2_subdev *, u8 *, size_t , ssize_t *) ;
   int (*rx_g_parameters)(struct v4l2_subdev *, struct v4l2_subdev_ir_parameters *) ;
   int (*rx_s_parameters)(struct v4l2_subdev *, struct v4l2_subdev_ir_parameters *) ;
   int (*tx_write)(struct v4l2_subdev *, u8 *, size_t , ssize_t *) ;
   int (*tx_g_parameters)(struct v4l2_subdev *, struct v4l2_subdev_ir_parameters *) ;
   int (*tx_s_parameters)(struct v4l2_subdev *, struct v4l2_subdev_ir_parameters *) ;
};
#line 630  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_pad_config {
   struct v4l2_mbus_framefmt try_fmt ;
   struct v4l2_rect try_crop ;
   struct v4l2_rect try_compose ;
};
#line 674  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_pad_ops {
   int (*init_cfg)(struct v4l2_subdev *, struct v4l2_subdev_pad_config *) ;
   int (*enum_mbus_code)(struct v4l2_subdev *, struct v4l2_subdev_pad_config *, struct v4l2_subdev_mbus_code_enum *) ;
   int (*enum_frame_size)(struct v4l2_subdev *, struct v4l2_subdev_pad_config *, struct v4l2_subdev_frame_size_enum *) ;
   int (*enum_frame_interval)(struct v4l2_subdev *, struct v4l2_subdev_pad_config *, struct v4l2_subdev_frame_interval_enum *) ;
   int (*get_fmt)(struct v4l2_subdev *, struct v4l2_subdev_pad_config *, struct v4l2_subdev_format *) ;
   int (*set_fmt)(struct v4l2_subdev *, struct v4l2_subdev_pad_config *, struct v4l2_subdev_format *) ;
   int (*get_selection)(struct v4l2_subdev *, struct v4l2_subdev_pad_config *, struct v4l2_subdev_selection *) ;
   int (*set_selection)(struct v4l2_subdev *, struct v4l2_subdev_pad_config *, struct v4l2_subdev_selection *) ;
   int (*get_edid)(struct v4l2_subdev *, struct v4l2_edid *) ;
   int (*set_edid)(struct v4l2_subdev *, struct v4l2_edid *) ;
   int (*dv_timings_cap)(struct v4l2_subdev *, struct v4l2_dv_timings_cap *) ;
   int (*enum_dv_timings)(struct v4l2_subdev *, struct v4l2_enum_dv_timings *) ;
   int (*link_validate)(struct v4l2_subdev *, struct media_link *, struct v4l2_subdev_format *, struct v4l2_subdev_format *) ;
   int (*get_frame_desc)(struct v4l2_subdev *, unsigned int , struct v4l2_mbus_frame_desc *) ;
   int (*set_frame_desc)(struct v4l2_subdev *, unsigned int , struct v4l2_mbus_frame_desc *) ;
};
#line 727  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_ops {
   struct v4l2_subdev_core_ops *core ;
   struct v4l2_subdev_tuner_ops *tuner ;
   struct v4l2_subdev_audio_ops *audio ;
   struct v4l2_subdev_video_ops *video ;
   struct v4l2_subdev_vbi_ops *vbi ;
   struct v4l2_subdev_ir_ops *ir ;
   struct v4l2_subdev_sensor_ops *sensor ;
   struct v4l2_subdev_pad_ops *pad ;
};
#line 765  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_internal_ops {
   int (*registered)(struct v4l2_subdev *) ;
   void (*unregistered)(struct v4l2_subdev *) ;
   int (*open)(struct v4l2_subdev *, struct v4l2_subdev_fh *) ;
   int (*close)(struct v4l2_subdev *, struct v4l2_subdev_fh *) ;
   void (*release)(struct v4l2_subdev *) ;
};
#line 772 
struct regulator_bulk_data;
#line 797  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_platform_data {
   struct regulator_bulk_data *regulators ;
   int num_regulators ;
   void *host_priv ;
};
#line 848  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev {
   struct media_entity entity ;
   struct list_head list ;
   struct module *owner ;
   bool owner_v4l2_dev ;
   u32 flags ;
   struct v4l2_device *v4l2_dev ;
   struct v4l2_subdev_ops *ops ;
   struct v4l2_subdev_internal_ops *internal_ops ;
   struct v4l2_ctrl_handler *ctrl_handler ;
   char name[32U] ;
   u32 grp_id ;
   void *dev_priv ;
   void *host_priv ;
   struct video_device *devnode ;
   struct device *dev ;
   struct fwnode_handle *fwnode ;
   struct list_head async_list ;
   struct v4l2_async_subdev *asd ;
   struct v4l2_async_notifier *notifier ;
   struct v4l2_async_notifier *subdev_notifier ;
   struct v4l2_subdev_platform_data *pdata ;
};
#line 906  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_fh {
   struct v4l2_fh vfh ;
   struct module *owner ;
   struct v4l2_subdev_pad_config *pad ;
};
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-device.h"
struct v4l2_device {
   struct device *dev ;
   struct media_device *mdev ;
   struct list_head subdevs ;
   spinlock_t lock ;
   char name[36U] ;
   void (*notify)(struct v4l2_subdev *, unsigned int , void *) ;
   struct v4l2_ctrl_handler *ctrl_handler ;
   struct v4l2_prio_state prio ;
   struct kref ref ;
   void (*release)(struct v4l2_device *) ;
};
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ptp_clock_kernel.h"
struct ptp_system_timestamp {
   struct timespec64 pre_ts ;
   struct timespec64 post_ts ;
};
#line 277 
struct dma_chan;
#line 279 
struct spi_controller;
#line 280 
struct spi_transfer;
#line 281 
struct spi_controller_mem_ops;
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spi/spi.h"
struct spi_statistics {
   spinlock_t lock ;
   unsigned long messages ;
   unsigned long transfers ;
   unsigned long errors ;
   unsigned long timedout ;
   unsigned long spi_sync ;
   unsigned long spi_sync_immediate ;
   unsigned long spi_async ;
   unsigned long long bytes ;
   unsigned long long bytes_rx ;
   unsigned long long bytes_tx ;
   unsigned long transfer_bytes_histo[17U] ;
   unsigned long transfers_split_maxsize ;
};
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spi/spi.h"
struct spi_delay {
   u16 value ;
   u8 unit ;
};
#line 157  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spi/spi.h"
struct spi_device {
   struct device dev ;
   struct spi_controller *controller ;
   struct spi_controller *master ;
   u32 max_speed_hz ;
   u8 chip_select ;
   u8 bits_per_word ;
   bool rt ;
   u32 mode ;
   int irq ;
   void *controller_state ;
   void *controller_data ;
   char modalias[32U] ;
   char *driver_override ;
   int cs_gpio ;
   struct gpio_desc *cs_gpiod ;
   struct spi_delay word_delay ;
   struct spi_statistics statistics ;
};
#line 247 
struct spi_message;
#line 452  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spi/spi.h"
struct spi_controller {
   struct device dev ;
   struct list_head list ;
   s16 bus_num ;
   u16 num_chipselect ;
   u16 dma_alignment ;
   u32 mode_bits ;
   u32 bits_per_word_mask ;
   u32 min_speed_hz ;
   u32 max_speed_hz ;
   u16 flags ;
   bool slave ;
   size_t (*max_transfer_size)(struct spi_device *) ;
   size_t (*max_message_size)(struct spi_device *) ;
   struct mutex io_mutex ;
   spinlock_t bus_lock_spinlock ;
   struct mutex bus_lock_mutex ;
   bool bus_lock_flag ;
   int (*setup)(struct spi_device *) ;
   int (*set_cs_timing)(struct spi_device *, struct spi_delay *, struct spi_delay *, struct spi_delay *) ;
   int (*transfer)(struct spi_device *, struct spi_message *) ;
   void (*cleanup)(struct spi_device *) ;
   bool (*can_dma)(struct spi_controller *, struct spi_device *, struct spi_transfer *) ;
   bool queued ;
   struct kthread_worker kworker ;
   struct task_struct *kworker_task ;
   struct kthread_work pump_messages ;
   spinlock_t queue_lock ;
   struct list_head queue ;
   struct spi_message *cur_msg ;
   bool idling ;
   bool busy ;
   bool running ;
   bool rt ;
   bool auto_runtime_pm ;
   bool cur_msg_prepared ;
   bool cur_msg_mapped ;
   struct completion xfer_completion ;
   size_t max_dma_len ;
   int (*prepare_transfer_hardware)(struct spi_controller *) ;
   int (*transfer_one_message)(struct spi_controller *, struct spi_message *) ;
   int (*unprepare_transfer_hardware)(struct spi_controller *) ;
   int (*prepare_message)(struct spi_controller *, struct spi_message *) ;
   int (*unprepare_message)(struct spi_controller *, struct spi_message *) ;
   int (*slave_abort)(struct spi_controller *) ;
   void (*set_cs)(struct spi_device *, bool ) ;
   int (*transfer_one)(struct spi_controller *, struct spi_device *, struct spi_transfer *) ;
   void (*handle_err)(struct spi_controller *, struct spi_message *) ;
   struct spi_controller_mem_ops *mem_ops ;
   struct spi_delay cs_setup ;
   struct spi_delay cs_hold ;
   struct spi_delay cs_inactive ;
   int *cs_gpios ;
   struct gpio_desc **cs_gpiods ;
   bool use_gpio_descriptors ;
   struct spi_statistics statistics ;
   struct dma_chan *dma_tx ;
   struct dma_chan *dma_rx ;
   void *dummy_rx ;
   void *dummy_tx ;
   int (*fw_translate_cs)(struct spi_controller *, unsigned int ) ;
   bool ptp_sts_supported ;
   unsigned long irq_flags ;
};
#line 890  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spi/spi.h"
struct spi_transfer {
   void *tx_buf ;
   void *rx_buf ;
   unsigned int len ;
   dma_addr_t tx_dma ;
   dma_addr_t rx_dma ;
   struct sg_table tx_sg ;
   struct sg_table rx_sg ;
   unsigned int cs_change : 1 ;
   unsigned int tx_nbits : 3 ;
   unsigned int rx_nbits : 3 ;
   u8 bits_per_word ;
   u16 delay_usecs ;
   struct spi_delay delay ;
   struct spi_delay cs_change_delay ;
   struct spi_delay word_delay ;
   u32 speed_hz ;
   u32 effective_speed_hz ;
   unsigned int ptp_sts_word_pre ;
   unsigned int ptp_sts_word_post ;
   struct ptp_system_timestamp *ptp_sts ;
   bool timestamped_pre ;
   bool timestamped_post ;
   struct list_head transfer_list ;
};
#line 961  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spi/spi.h"
struct spi_message {
   struct list_head transfers ;
   struct spi_device *spi ;
   unsigned int is_dma_mapped : 1 ;
   void (*complete)(void *) ;
   void *context ;
   unsigned int frame_length ;
   unsigned int actual_length ;
   int status ;
   struct list_head queue ;
   void *state ;
   struct list_head resources ;
};
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 157  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fb_fix_screeninfo {
   char id[16U] ;
   unsigned long smem_start ;
   __u32 smem_len ;
   __u32 type ;
   __u32 type_aux ;
   __u32 visual ;
   __u16 xpanstep ;
   __u16 ypanstep ;
   __u16 ywrapstep ;
   __u32 line_length ;
   unsigned long mmio_start ;
   __u32 mmio_len ;
   __u32 accel ;
   __u16 capabilities ;
   __u16 reserved[2U] ;
};
#line 188  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fb_bitfield {
   __u32 offset ;
   __u32 length ;
   __u32 msb_right ;
};
#line 241  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fb_var_screeninfo {
   __u32 xres ;
   __u32 yres ;
   __u32 xres_virtual ;
   __u32 yres_virtual ;
   __u32 xoffset ;
   __u32 yoffset ;
   __u32 bits_per_pixel ;
   __u32 grayscale ;
   struct fb_bitfield red ;
   struct fb_bitfield green ;
   struct fb_bitfield blue ;
   struct fb_bitfield transp ;
   __u32 nonstd ;
   __u32 activate ;
   __u32 height ;
   __u32 width ;
   __u32 accel_flags ;
   __u32 pixclock ;
   __u32 left_margin ;
   __u32 right_margin ;
   __u32 upper_margin ;
   __u32 lower_margin ;
   __u32 hsync_len ;
   __u32 vsync_len ;
   __u32 sync ;
   __u32 vmode ;
   __u32 rotate ;
   __u32 colorspace ;
   __u32 reserved[4U] ;
};
#line 281  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fb_cmap {
   __u32 start ;
   __u32 len ;
   __u16 *red ;
   __u16 *green ;
   __u16 *blue ;
   __u16 *transp ;
};
#line 341  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fb_copyarea {
   __u32 dx ;
   __u32 dy ;
   __u32 width ;
   __u32 height ;
   __u32 sx ;
   __u32 sy ;
};
#line 350  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fb_fillrect {
   __u32 dx ;
   __u32 dy ;
   __u32 width ;
   __u32 height ;
   __u32 color ;
   __u32 rop ;
};
#line 359  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fb_image {
   __u32 dx ;
   __u32 dy ;
   __u32 width ;
   __u32 height ;
   __u32 fg_color ;
   __u32 bg_color ;
   __u8 depth ;
   char *data ;
   struct fb_cmap cmap ;
};
#line 383  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fbcurpos {
   __u16 x ;
   __u16 y ;
};
#line 387  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fb_cursor {
   __u16 set ;
   __u16 enable ;
   __u16 rop ;
   char *mask ;
   struct fbcurpos hot ;
   struct fb_image image ;
};
#line 400 
enum backlight_type {
    BACKLIGHT_RAW = 1,
    BACKLIGHT_PLATFORM = 2,
    BACKLIGHT_FIRMWARE = 3,
    BACKLIGHT_TYPE_MAX = 4
};
#line 412 
enum backlight_scale {
    BACKLIGHT_SCALE_UNKNOWN = 0,
    BACKLIGHT_SCALE_LINEAR = 1,
    BACKLIGHT_SCALE_NON_LINEAR = 2
};
#line 418 
struct backlight_device;
#line 419 
struct fb_info;
#line 58  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backlight.h"
struct backlight_ops {
   unsigned int options ;
   int (*update_status)(struct backlight_device *) ;
   int (*get_brightness)(struct backlight_device *) ;
   int (*check_fb)(struct backlight_device *, struct fb_info *) ;
};
#line 74  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backlight.h"
struct backlight_properties {
   int brightness ;
   int max_brightness ;
   int power ;
   int fb_blank ;
   enum backlight_type type ;
   unsigned int state ;
   enum backlight_scale scale ;
};
#line 97  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backlight.h"
struct backlight_device {
   struct backlight_properties props ;
   struct mutex update_lock ;
   struct mutex ops_lock ;
   struct backlight_ops *ops ;
   struct notifier_block fb_notif ;
   struct list_head entry ;
   struct device dev ;
   bool fb_bl_on[32U] ;
   int use_count ;
};
#line 52  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_chroma {
   __u32 redx ;
   __u32 greenx ;
   __u32 bluex ;
   __u32 whitex ;
   __u32 redy ;
   __u32 greeny ;
   __u32 bluey ;
   __u32 whitey ;
};
#line 63 
struct fb_videomode;
#line 63  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_monspecs {
   struct fb_chroma chroma ;
   struct fb_videomode *modedb ;
   __u8 manufacturer[4U] ;
   __u8 monitor[14U] ;
   __u8 serial_no[14U] ;
   __u8 ascii[14U] ;
   __u32 modedb_len ;
   __u32 model ;
   __u32 serial ;
   __u32 year ;
   __u32 week ;
   __u32 hfmin ;
   __u32 hfmax ;
   __u32 dclkmin ;
   __u32 dclkmax ;
   __u16 input ;
   __u16 dpms ;
   __u16 signal ;
   __u16 vfmin ;
   __u16 vfmax ;
   __u16 gamma ;
   __u16 gtf : 1 ;
   __u16 misc ;
   __u8 version ;
   __u8 revision ;
   __u8 max_x ;
   __u8 max_y ;
};
#line 144  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_blit_caps {
   u32 x ;
   u32 y ;
   u32 len ;
   u32 flags ;
};
#line 185  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_pixmap {
   u8 *addr ;
   u32 size ;
   u32 offset ;
   u32 buf_align ;
   u32 scan_align ;
   u32 access_align ;
   u32 flags ;
   u32 blit_x ;
   u32 blit_y ;
   void (*writeio)(struct fb_info *, void *, void *, unsigned int ) ;
   void (*readio)(struct fb_info *, void *, void *, unsigned int ) ;
};
#line 203  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_deferred_io {
   unsigned long delay ;
   struct mutex lock ;
   struct list_head pagelist ;
   void (*first_io)(struct fb_info *) ;
   void (*deferred_io)(struct fb_info *, struct list_head *) ;
};
#line 228  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_ops {
   struct module *owner ;
   int (*fb_open)(struct fb_info *, int ) ;
   int (*fb_release)(struct fb_info *, int ) ;
   ssize_t (*fb_read)(struct fb_info *, char *, size_t , loff_t *) ;
   ssize_t (*fb_write)(struct fb_info *, char *, size_t , loff_t *) ;
   int (*fb_check_var)(struct fb_var_screeninfo *, struct fb_info *) ;
   int (*fb_set_par)(struct fb_info *) ;
   int (*fb_setcolreg)(unsigned int , unsigned int , unsigned int , unsigned int , unsigned int , struct fb_info *) ;
   int (*fb_setcmap)(struct fb_cmap *, struct fb_info *) ;
   int (*fb_blank)(int , struct fb_info *) ;
   int (*fb_pan_display)(struct fb_var_screeninfo *, struct fb_info *) ;
   void (*fb_fillrect)(struct fb_info *, struct fb_fillrect *) ;
   void (*fb_copyarea)(struct fb_info *, struct fb_copyarea *) ;
   void (*fb_imageblit)(struct fb_info *, struct fb_image *) ;
   int (*fb_cursor)(struct fb_info *, struct fb_cursor *) ;
   int (*fb_sync)(struct fb_info *) ;
   int (*fb_ioctl)(struct fb_info *, unsigned int , unsigned long ) ;
   int (*fb_compat_ioctl)(struct fb_info *, unsigned int , unsigned long ) ;
   int (*fb_mmap)(struct fb_info *, struct vm_area_struct *) ;
   void (*fb_get_caps)(struct fb_info *, struct fb_blit_caps *, struct fb_var_screeninfo *) ;
   void (*fb_destroy)(struct fb_info *) ;
   int (*fb_debug_enter)(struct fb_info *) ;
   int (*fb_debug_leave)(struct fb_info *) ;
};
#line 306  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_tilemap {
   __u32 width ;
   __u32 height ;
   __u32 depth ;
   __u32 length ;
   __u8 *data ;
};
#line 315  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_tilerect {
   __u32 sx ;
   __u32 sy ;
   __u32 width ;
   __u32 height ;
   __u32 index ;
   __u32 fg ;
   __u32 bg ;
   __u32 rop ;
};
#line 326  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_tilearea {
   __u32 sx ;
   __u32 sy ;
   __u32 dx ;
   __u32 dy ;
   __u32 width ;
   __u32 height ;
};
#line 335  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_tileblit {
   __u32 sx ;
   __u32 sy ;
   __u32 width ;
   __u32 height ;
   __u32 fg ;
   __u32 bg ;
   __u32 length ;
   __u32 *indices ;
};
#line 346  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_tilecursor {
   __u32 sx ;
   __u32 sy ;
   __u32 mode ;
   __u32 shape ;
   __u32 fg ;
   __u32 bg ;
};
#line 355  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_tile_ops {
   void (*fb_settile)(struct fb_info *, struct fb_tilemap *) ;
   void (*fb_tilecopy)(struct fb_info *, struct fb_tilearea *) ;
   void (*fb_tilefill)(struct fb_info *, struct fb_tilerect *) ;
   void (*fb_tileblit)(struct fb_info *, struct fb_tileblit *) ;
   void (*fb_tilecursor)(struct fb_info *, struct fb_tilecursor *) ;
   int (*fb_get_tilemax)(struct fb_info *) ;
};
#line 499  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct aperture {
   resource_size_t base ;
   resource_size_t size ;
};
#line 497  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct apertures_struct {
   unsigned int count ;
   struct aperture ranges[0U] ;
};
#line 439  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
union __anonunion_6624 {
   char *screen_base ;
   char *screen_buffer ;
};
#line 439  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_info {
   atomic_t count ;
   int node ;
   int flags ;
   int fbcon_rotate_hint ;
   struct mutex lock ;
   struct mutex mm_lock ;
   struct fb_var_screeninfo var ;
   struct fb_fix_screeninfo fix ;
   struct fb_monspecs monspecs ;
   struct work_struct queue ;
   struct fb_pixmap pixmap ;
   struct fb_pixmap sprite ;
   struct fb_cmap cmap ;
   struct list_head modelist ;
   struct fb_videomode *mode ;
   struct backlight_device *bl_dev ;
   struct mutex bl_curve_mutex ;
   u8 bl_curve[128U] ;
   struct delayed_work deferred_work ;
   struct fb_deferred_io *fbdefio ;
   struct fb_ops *fbops ;
   struct device *device ;
   struct device *dev ;
   int class_flag ;
   struct fb_tile_ops *tileops ;
   union __anonunion_6624 __anonCompField_fb_info_73 ;
   unsigned long screen_size ;
   void *pseudo_palette ;
   u32 state ;
   void *fbcon_par ;
   void *par ;
   struct apertures_struct *apertures ;
   bool skip_vt_switch ;
};
#line 767  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_videomode {
   char *name ;
   u32 refresh ;
   u32 xres ;
   u32 yres ;
   u32 pixclock ;
   u32 left_margin ;
   u32 right_margin ;
   u32 upper_margin ;
   u32 lower_margin ;
   u32 hsync_len ;
   u32 vsync_len ;
   u32 sync ;
   u32 vmode ;
   u32 flag ;
};
#line 63  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
struct ldv_kmem_cache {
   char *name ;
   unsigned int size ;
};
#line 88  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
typedef unsigned long pthread_t;
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/thread.h"
union pthread_attr_t {
   char __size[56U] ;
   long __align ;
};
#line 30  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/thread.h"
typedef union pthread_attr_t pthread_attr_t;
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 18  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/emg/0/environment_model.c"
struct emg_struct_free_irq_6 {
   int arg0 ;
   int signal_pending ;
};
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/emg/0/environment_model.c"
struct emg_struct_interrupt_scenario_fjes_intr_16 {
   int arg0 ;
   enum irqreturn (*arg1)(int , void *) ;
   enum irqreturn (*arg2)(int , void *) ;
   void *arg3 ;
   int signal_pending ;
};
#line 31  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/emg/0/environment_model.c"
struct emg_struct_character_driver_scenario_fjes_dbg_status_fops_15 {
   struct file_operations *arg0 ;
   int signal_pending ;
};
#line 36  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/emg/0/environment_model.c"
struct emg_struct_random_allocationless_scenario_fjes_get_drvinfo_17 {
   struct net_device *arg0 ;
   int signal_pending ;
};
#line 41  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/emg/0/environment_model.c"
struct emg_struct_platform_instance_fjes_driver_18 {
   struct platform_driver *arg0 ;
   int signal_pending ;
};
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/common/inline_asm.h"
#line 22 
void ldv_inline_asm(void);
#line 469  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernel.h"
#line 469 
int sprintf(char *, char * , ...);
#line 472 
#line 472 
int snprintf(char *, size_t, char * , ...);
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/string_64.h"
#line 14 
void *memcpy(void *, void *, size_t);
#line 18 
#line 18 
void *memset(void *, int, size_t);
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/string.h"
#line 29 
size_t strlcpy(char *, char *, size_t);
#line 230  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bitmap.h"
#line 249  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_ethtool.i.aux"
static void cif_bitmap_zero(unsigned long *dst, unsigned int nbits);
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/irqflags.h"
#line 20 
unsigned long native_save_fl(void);
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/irqflags.h"
unsigned long native_save_fl(void)
{
  #line 22 
  unsigned long flags;
  #line 23 
  ldv_inline_asm();
  #line 35 
  return flags;
}

#line 38 
#line 39 
void native_restore_fl(unsigned long flags);
#line 39  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/irqflags.h"
void native_restore_fl(unsigned long flags)
{
  #line 41 
  ldv_inline_asm();
  #line 42 
  return;
}

#line 26  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_ethtool.i.aux"
#line 725 
static void cif_mutex_lock_lock_of_fjes_hw_info(struct mutex *lock);
#line 29 
#line 29 
void ldv_mutex_model_lock(struct mutex *, char *);
#line 31 
#line 31 
void ldv_mutex_model_unlock(struct mutex *, char *);
#line 27  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/bitmap.h"
#line 27 
void ldv_bitmap_zero(unsigned long *dst, unsigned int nbits);
#line 185  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mutex.h"
#line 732  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_ethtool.i.aux"
static void cif_mutex_unlock_lock_of_fjes_hw_info(struct mutex *lock);
#line 2203  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
__inline static void *netdev_priv(struct net_device *dev)
{
  #line 2205 
  return (void *)((char *)dev + 3328UL);
}

#line 117  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_regs.h"
#line 117 
u32 fjes_hw_rd32(struct fjes_hw *hw, u32 reg);
#line 354  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_hw.h"
#line 354 
int fjes_hw_start_debug(struct fjes_hw *hw);
#line 355 
#line 355 
int fjes_hw_stop_debug(struct fjes_hw *hw);
#line 60  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes.h"
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_main.c"
char fjes_driver_name[5U];
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes.h"
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_main.c"
char fjes_driver_version[4U];
#line 64  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes.h"
#line 295  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_ethtool.c"
void fjes_set_ethtool_ops(struct net_device *netdev);
#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_ethtool.c"
static struct fjes_stats fjes_gstrings_stats[6U] = {{.stat_string = {(char)'r', (char)'x', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s'}, .sizeof_stat = 8, .stat_offset = 408}, {.stat_string = {(char)'t', (char)'x', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s'}, .sizeof_stat = 8, .stat_offset = 416}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'s'}, .sizeof_stat = 8, .stat_offset = 424}, {.stat_string = {(char)'t', (char)'x', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'s'}, .sizeof_stat = 8, .stat_offset = 424}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'d', (char)'r', (char)'o', (char)'p', (char)'p', (char)'e', (char)'d'}, .sizeof_stat = 8, .stat_offset = 456}, {.stat_string = {(char)'t', (char)'x', (char)'_', (char)'d', (char)'r', (char)'o', (char)'p', (char)'p', (char)'e', (char)'d'}, .sizeof_stat = 8, .stat_offset = 464}};
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_ethtool.c"
static void fjes_get_ethtool_stats(struct net_device *netdev, struct ethtool_stats *stats, u64 *data)
{
  #line 48 
  int epidx;
  #line 49 
  char *p;
  #line 50 
  int i;
  #line 46 
  struct fjes_adapter *adapter = netdev_priv(netdev);
  #line 47 
  struct fjes_hw *hw = & adapter->hw;
  #line 52 
  i = 0;
  #line 52 
  while ((unsigned int)i <= 5U) {
    #line 53 
    p = (char *)adapter + (unsigned long)fjes_gstrings_stats[i].stat_offset;
    #line 54 
    if (fjes_gstrings_stats[i].sizeof_stat == 8) 
                                                 #line 54 
                                                 *(data + (unsigned long)i) = *((u64 *)p); else 
                                                                    #line 54 
                                                                    *(data + (unsigned long)i) = (unsigned long long)*((u32 *)p);
    #line 52 
    i ++;
  }
  #line 57 
  epidx = 0;
  #line 57 
  while (hw->max_epid > epidx) {
    {
      #line 60 
      int tmp_0;
      #line 62 
      int tmp_1;
      #line 64 
      int tmp_2;
      #line 65 
      int tmp_3;
      #line 66 
      int tmp_4;
      #line 68 
      int tmp_5;
      #line 69 
      int tmp_6;
      #line 70 
      int tmp_7;
      #line 71 
      int tmp_8;
      #line 73 
      int tmp_9;
      #line 74 
      int tmp_10;
      #line 76 
      int tmp_11;
      #line 78 
      int tmp_12;
      #line 80 
      int tmp_13;
      #line 58 
      if (hw->my_epid == epidx) 
                                #line 59 
                                goto __Cont;
      #line 60 
      tmp_0 = i;
      #line 60 
      i ++;
      #line 60 
      *(data + (unsigned long)tmp_0) = (hw->ep_shm_info + (unsigned long)epidx)->ep_stats.com_regist_buf_exec;
      #line 62 
      tmp_1 = i;
      #line 62 
      i ++;
      #line 62 
      *(data + (unsigned long)tmp_1) = (hw->ep_shm_info + (unsigned long)epidx)->ep_stats.com_unregist_buf_exec;
      #line 64 
      tmp_2 = i;
      #line 64 
      i ++;
      #line 64 
      *(data + (unsigned long)tmp_2) = (hw->ep_shm_info + (unsigned long)epidx)->ep_stats.send_intr_rx;
      #line 65 
      tmp_3 = i;
      #line 65 
      i ++;
      #line 65 
      *(data + (unsigned long)tmp_3) = (hw->ep_shm_info + (unsigned long)epidx)->ep_stats.send_intr_unshare;
      #line 66 
      tmp_4 = i;
      #line 66 
      i ++;
      #line 66 
      *(data + (unsigned long)tmp_4) = (hw->ep_shm_info + (unsigned long)epidx)->ep_stats.send_intr_zoneupdate;
      #line 68 
      tmp_5 = i;
      #line 68 
      i ++;
      #line 68 
      *(data + (unsigned long)tmp_5) = (hw->ep_shm_info + (unsigned long)epidx)->ep_stats.recv_intr_rx;
      #line 69 
      tmp_6 = i;
      #line 69 
      i ++;
      #line 69 
      *(data + (unsigned long)tmp_6) = (hw->ep_shm_info + (unsigned long)epidx)->ep_stats.recv_intr_unshare;
      #line 70 
      tmp_7 = i;
      #line 70 
      i ++;
      #line 70 
      *(data + (unsigned long)tmp_7) = (hw->ep_shm_info + (unsigned long)epidx)->ep_stats.recv_intr_stop;
      #line 71 
      tmp_8 = i;
      #line 71 
      i ++;
      #line 71 
      *(data + (unsigned long)tmp_8) = (hw->ep_shm_info + (unsigned long)epidx)->ep_stats.recv_intr_zoneupdate;
      #line 73 
      tmp_9 = i;
      #line 73 
      i ++;
      #line 73 
      *(data + (unsigned long)tmp_9) = (hw->ep_shm_info + (unsigned long)epidx)->ep_stats.tx_buffer_full;
      #line 74 
      tmp_10 = i;
      #line 74 
      i ++;
      #line 74 
      *(data + (unsigned long)tmp_10) = (hw->ep_shm_info + (unsigned long)epidx)->ep_stats.tx_dropped_not_shared;
      #line 76 
      tmp_11 = i;
      #line 76 
      i ++;
      #line 76 
      *(data + (unsigned long)tmp_11) = (hw->ep_shm_info + (unsigned long)epidx)->ep_stats.tx_dropped_ver_mismatch;
      #line 78 
      tmp_12 = i;
      #line 78 
      i ++;
      #line 78 
      *(data + (unsigned long)tmp_12) = (hw->ep_shm_info + (unsigned long)epidx)->ep_stats.tx_dropped_buf_size_mismatch;
      #line 80 
      tmp_13 = i;
      #line 80 
      i ++;
      #line 80 
      *(data + (unsigned long)tmp_13) = (hw->ep_shm_info + (unsigned long)epidx)->ep_stats.tx_dropped_vlanid_mismatch;
    }
    #line 57 
    __Cont: 
            #line 57 
    epidx ++;
  }
  #line 83 
  return;
}

#line 85  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_ethtool.c"
static void fjes_get_strings(struct net_device *netdev, u32 stringset, u8 *data)
{
  #line 91 
  int i;
  #line 88 
  struct fjes_adapter *adapter = netdev_priv(netdev);
  #line 89 
  struct fjes_hw *hw = & adapter->hw;
  #line 90 
  u8 *p = data;
  #line 93 
  switch (stringset) {
    #line 94 
    case (u32)1: 
                 #line 94 
    ;
    #line 95 
    i = 0;
    #line 95 
    while ((unsigned int)i <= 5U) {
      #line 96 
      memcpy((void *)p,(void *)(& fjes_gstrings_stats[i].stat_string),32UL);
      #line 98 
      p += 32U;
      #line 95 
      i ++;
    }
    #line 100 
    i = 0;
    #line 100 
    while (hw->max_epid > i) {
      #line 101 
      if (hw->my_epid == i) 
                            #line 102 
                            goto __Cont;
      #line 103 
      sprintf((char *)p,(char *)"ep%u_com_regist_buf_exec",i);
      #line 104 
      p += 32U;
      #line 105 
      sprintf((char *)p,(char *)"ep%u_com_unregist_buf_exec",i);
      #line 106 
      p += 32U;
      #line 107 
      sprintf((char *)p,(char *)"ep%u_send_intr_rx",i);
      #line 108 
      p += 32U;
      #line 109 
      sprintf((char *)p,(char *)"ep%u_send_intr_unshare",i);
      #line 110 
      p += 32U;
      #line 111 
      sprintf((char *)p,(char *)"ep%u_send_intr_zoneupdate",i);
      #line 112 
      p += 32U;
      #line 113 
      sprintf((char *)p,(char *)"ep%u_recv_intr_rx",i);
      #line 114 
      p += 32U;
      #line 115 
      sprintf((char *)p,(char *)"ep%u_recv_intr_unshare",i);
      #line 116 
      p += 32U;
      #line 117 
      sprintf((char *)p,(char *)"ep%u_recv_intr_stop",i);
      #line 118 
      p += 32U;
      #line 119 
      sprintf((char *)p,(char *)"ep%u_recv_intr_zoneupdate",i);
      #line 120 
      p += 32U;
      #line 121 
      sprintf((char *)p,(char *)"ep%u_tx_buffer_full",i);
      #line 122 
      p += 32U;
      #line 123 
      sprintf((char *)p,(char *)"ep%u_tx_dropped_not_shared",i);
      #line 124 
      p += 32U;
      #line 125 
      sprintf((char *)p,(char *)"ep%u_tx_dropped_ver_mismatch",i);
      #line 126 
      p += 32U;
      #line 127 
      sprintf((char *)p,(char *)"ep%u_tx_dropped_buf_size_mismatch",i);
      #line 128 
      p += 32U;
      #line 129 
      sprintf((char *)p,(char *)"ep%u_tx_dropped_vlanid_mismatch",i);
      #line 130 
      p += 32U;
      #line 100 
      __Cont: 
              #line 100 
      i ++;
    }
    #line 132 
    break;
  }
  #line 134 
  return;
}

#line 136  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_ethtool.c"
static int fjes_get_sset_count(struct net_device *netdev, int sset)
{
  #line 138 
  switch (sset) {
    #line 139 
    case 1: 
            #line 139 
    ;
    #line 140 
    ;
    #line 140 
    return (int)((unsigned int)((((struct fjes_adapter *)netdev_priv(netdev))->hw.max_epid + -1) * 14) + 6U);
    #line 141 
    default: 
             #line 141 
    ;
    #line 142 
    return -95;
  }
}

#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_ethtool.c"
static void fjes_get_drvinfo(struct net_device *netdev, struct ethtool_drvinfo *drvinfo)
{
  #line 150 
  struct platform_device *plat_dev;
  #line 149 
  struct fjes_adapter *adapter = netdev_priv(netdev);
  #line 152 
  plat_dev = adapter->plat_dev;
  #line 154 
  strlcpy((char *)(& drvinfo->driver),(char *)(& fjes_driver_name),32UL);
  #line 155 
  strlcpy((char *)(& drvinfo->version),(char *)(& fjes_driver_version),32UL);
  #line 158 
  strlcpy((char *)(& drvinfo->fw_version),(char *)"none",32UL);
  #line 159 
  snprintf((char *)(& drvinfo->bus_info),32UL,(char *)"platform:%s",plat_dev->name);
  #line 161 
  return;
}

#line 163  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_ethtool.c"
static int fjes_get_link_ksettings(struct net_device *netdev, struct ethtool_link_ksettings *ecmd)
{
  #line 166 
  cif_bitmap_zero((unsigned long *)(& ecmd->link_modes.supported),74U);
  #line 167 
  cif_bitmap_zero((unsigned long *)(& ecmd->link_modes.advertising),74U);
  #line 168 
  ecmd->base.duplex = (unsigned char)1U;
  #line 169 
  ecmd->base.autoneg = (unsigned char)0U;
  #line 170 
  ecmd->base.port = (unsigned char)239U;
  #line 171 
  ecmd->base.speed = 20000U;
  #line 173 
  return 0;
}

#line 176  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_ethtool.c"
static int fjes_get_regs_len(struct net_device *netdev)
{
  #line 179 
  return 148;
}

#line 182  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_ethtool.c"
static void fjes_get_regs(struct net_device *netdev, struct ethtool_regs *regs, void *p)
{
  #line 185 
  struct fjes_adapter *adapter = netdev_priv(netdev);
  #line 186 
  struct fjes_hw *hw = & adapter->hw;
  #line 187 
  u32 *regs_buff = (u32 *)p;
  #line 189 
  memset(p,0,148UL);
  #line 191 
  regs->version = 1U;
  #line 194 
  *regs_buff = fjes_hw_rd32(hw,0U);
  #line 195 
  *(regs_buff + 1U) = fjes_hw_rd32(hw,4U);
  #line 198 
  *(regs_buff + 4U) = fjes_hw_rd32(hw,16U);
  #line 201 
  *(regs_buff + 8U) = fjes_hw_rd32(hw,32U);
  #line 202 
  *(regs_buff + 9U) = fjes_hw_rd32(hw,36U);
  #line 203 
  *(regs_buff + 10U) = fjes_hw_rd32(hw,40U);
  #line 204 
  *(regs_buff + 11U) = fjes_hw_rd32(hw,44U);
  #line 206 
  *(regs_buff + 13U) = fjes_hw_rd32(hw,52U);
  #line 207 
  *(regs_buff + 14U) = fjes_hw_rd32(hw,56U);
  #line 208 
  *(regs_buff + 15U) = fjes_hw_rd32(hw,60U);
  #line 210 
  *(regs_buff + 17U) = fjes_hw_rd32(hw,68U);
  #line 211 
  *(regs_buff + 18U) = fjes_hw_rd32(hw,72U);
  #line 212 
  *(regs_buff + 19U) = fjes_hw_rd32(hw,76U);
  #line 215 
  *(regs_buff + 32U) = fjes_hw_rd32(hw,128U);
  #line 216 
  *(regs_buff + 33U) = fjes_hw_rd32(hw,132U);
  #line 217 
  *(regs_buff + 34U) = fjes_hw_rd32(hw,136U);
  #line 218 
  *(regs_buff + 35U) = fjes_hw_rd32(hw,140U);
  #line 219 
  *(regs_buff + 36U) = fjes_hw_rd32(hw,144U);
  #line 220 
  return;
}

#line 222  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_ethtool.c"
static int fjes_set_dump(struct net_device *netdev, struct ethtool_dump *dump)
{
  #line 224 
  struct fjes_adapter *adapter = netdev_priv(netdev);
  #line 225 
  struct fjes_hw *hw = & adapter->hw;
  #line 226 
  int ret = 0;
  #line 228 
  if (dump->flag != 0U) {
    #line 229 
    if (hw->debug_mode != 0U) 
                              #line 230 
                              return -1;
    #line 232 
    hw->debug_mode = dump->flag;
    #line 235 
    cif_mutex_lock_lock_of_fjes_hw_info(& hw->hw_info.lock);
    #line 236 
    ret = fjes_hw_start_debug(hw);
    #line 237 
    cif_mutex_unlock_lock_of_fjes_hw_info(& hw->hw_info.lock);
    #line 239 
    if (ret != 0) 
                  #line 240 
                  hw->debug_mode = 0U;
  }
  else {
    #line 242 
    if (hw->debug_mode == 0U) 
                              #line 243 
                              return -1;
    #line 246 
    cif_mutex_lock_lock_of_fjes_hw_info(& hw->hw_info.lock);
    #line 247 
    ret = fjes_hw_stop_debug(hw);
    #line 248 
    cif_mutex_unlock_lock_of_fjes_hw_info(& hw->hw_info.lock);
  }
  #line 251 
  return ret;
}

#line 254  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_ethtool.c"
static int fjes_get_dump_flag(struct net_device *netdev, struct ethtool_dump *dump)
{
  #line 257 
  struct fjes_adapter *adapter = netdev_priv(netdev);
  #line 258 
  struct fjes_hw *hw = & adapter->hw;
  #line 260 
  dump->len = (unsigned int)hw->hw_info.trace_size;
  #line 261 
  dump->version = 1U;
  #line 262 
  dump->flag = hw->debug_mode;
  #line 264 
  return 0;
}

#line 267  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_ethtool.c"
static int fjes_get_dump_data(struct net_device *netdev, struct ethtool_dump *dump, void *buf)
{
  #line 270 
  struct fjes_adapter *adapter = netdev_priv(netdev);
  #line 271 
  struct fjes_hw *hw = & adapter->hw;
  #line 272 
  int ret = 0;
  #line 274 
  if (hw->hw_info.trace != (struct es_device_trace *)0) 
                                                        #line 275 
                                                        memcpy(buf,(void *)hw->hw_info.trace,(unsigned long)hw->hw_info.trace_size); else 
                                                                    #line 277 
                                                                    ret = -1;
  #line 279 
  return ret;
}

#line 282  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_ethtool.c"
static struct ethtool_ops fjes_ethtool_ops = {.get_drvinfo = & fjes_get_drvinfo, .get_regs_len = & fjes_get_regs_len, .get_regs = & fjes_get_regs, .get_strings = & fjes_get_strings, .get_ethtool_stats = & fjes_get_ethtool_stats, .get_sset_count = & fjes_get_sset_count, .get_dump_flag = & fjes_get_dump_flag, .get_dump_data = & fjes_get_dump_data, .set_dump = & fjes_set_dump, .get_link_ksettings = & fjes_get_link_ksettings};
#line 295  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_ethtool.c"
void fjes_set_ethtool_ops(struct net_device *netdev)
{
  #line 297 
  netdev->ethtool_ops = & fjes_ethtool_ops;
  #line 298 
  return;
}

#line 107  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_ethtool.i.aux"
void emg_wrapper_fjes_get_drvinfo(struct net_device *arg0, struct ethtool_drvinfo *arg1)
{
  #line 108 
  fjes_get_drvinfo(arg0,arg1);
  #line 109 
  return;
}

#line 112  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_ethtool.i.aux"
int emg_wrapper_fjes_get_dump_data(struct net_device *arg0, struct ethtool_dump *arg1, void *arg2)
{
  #line 113 
  return fjes_get_dump_data(arg0,arg1,arg2);
}

#line 117  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_ethtool.i.aux"
int emg_wrapper_fjes_get_dump_flag(struct net_device *arg0, struct ethtool_dump *arg1)
{
  #line 118 
  return fjes_get_dump_flag(arg0,arg1);
}

#line 122  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_ethtool.i.aux"
void emg_wrapper_fjes_get_ethtool_stats(struct net_device *arg0, struct ethtool_stats *arg1, unsigned long long *arg2)
{
  #line 123 
  fjes_get_ethtool_stats(arg0,arg1,arg2);
  #line 124 
  return;
}

#line 127  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_ethtool.i.aux"
int emg_wrapper_fjes_get_link_ksettings(struct net_device *arg0, struct ethtool_link_ksettings *arg1)
{
  #line 128 
  return fjes_get_link_ksettings(arg0,arg1);
}

#line 132  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_ethtool.i.aux"
void emg_wrapper_fjes_get_regs(struct net_device *arg0, struct ethtool_regs *arg1, void *arg2)
{
  #line 133 
  fjes_get_regs(arg0,arg1,arg2);
  #line 134 
  return;
}

#line 137  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_ethtool.i.aux"
int emg_wrapper_fjes_get_regs_len(struct net_device *arg0)
{
  #line 138 
  return fjes_get_regs_len(arg0);
}

#line 142  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_ethtool.i.aux"
int emg_wrapper_fjes_get_sset_count(struct net_device *arg0, int arg1)
{
  #line 143 
  return fjes_get_sset_count(arg0,arg1);
}

#line 147  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_ethtool.i.aux"
void emg_wrapper_fjes_get_strings(struct net_device *arg0, unsigned int arg1, unsigned char *arg2)
{
  #line 148 
  fjes_get_strings(arg0,arg1,arg2);
  #line 149 
  return;
}

#line 152  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_ethtool.i.aux"
int emg_wrapper_fjes_set_dump(struct net_device *arg0, struct ethtool_dump *arg1)
{
  #line 153 
  return fjes_set_dump(arg0,arg1);
}

#line 249  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_ethtool.i.aux"
static void cif_bitmap_zero(unsigned long *dst, unsigned int nbits)
{
  #line 252 
  ldv_bitmap_zero(dst,nbits);
  #line 253 
  return;
}

#line 725  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_ethtool.i.aux"
static void cif_mutex_lock_lock_of_fjes_hw_info(struct mutex *lock)
{
  #line 728 
  ldv_mutex_model_lock(lock,(char *)"lock_of_fjes_hw_info");
  #line 729 
  return;
}

#line 732  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_ethtool.i.aux"
static void cif_mutex_unlock_lock_of_fjes_hw_info(struct mutex *lock)
{
  #line 735 
  ldv_mutex_model_unlock(lock,(char *)"lock_of_fjes_hw_info");
  #line 736 
  return;
}

#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/export.h"
#line 16 
extern struct module __this_module;
#line 110  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/seq_file.h"
#line 110 
ssize_t seq_read(struct file *, char *, size_t, loff_t *);
#line 111 
#line 111 
loff_t seq_lseek(struct file *, loff_t, int);
#line 118 
#line 118 
void seq_printf(struct seq_file *, char * , ...);
#line 120 
#line 120 
void seq_puts(struct seq_file *, char *);
#line 142 
#line 142 
int single_open(struct file *, int (*)(struct seq_file *, void *), void *);
#line 144 
#line 144 
int single_release(struct inode *, struct file *);
#line 66  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/debugfs.h"
#line 694  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_debugfs.i.aux"
static struct dentry *cif_debugfs_create_file(char *name, umode_t mode, struct dentry *parent, void *data, struct file_operations *fops);
#line 76  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/debugfs.h"
#line 686  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_debugfs.i.aux"
static struct dentry *cif_debugfs_create_dir(char *name, struct dentry *parent);
#line 85  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/debugfs.h"
#line 85 
void debugfs_remove_recursive(struct dentry *);
#line 89  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kobject.h"
__inline static char *kobject_name(struct kobject *kobj)
{
  #line 91 
  return kobj->name;
}

#line 1370  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
__inline static char *dev_name(struct device *dev)
{
  #line 1373 
  if (dev->init_name != (char *)0) 
                                   #line 1374 
                                   return dev->init_name;
  #line 1376 
  return kobject_name(& dev->kobj);
}

#line 340  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_hw.h"
#line 340 
enum ep_partner_status fjes_hw_get_partner_ep_status(struct fjes_hw *hw, int epid);
#line 342 
#line 342 
bool fjes_hw_epid_is_same_zone(struct fjes_hw *hw, int epid);
#line 343 
#line 343 
int fjes_hw_epid_is_shared(struct fjes_device_shared_info *share, int dest_epid);
#line 67  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes.h"
#line 52  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_debugfs.c"
void fjes_dbg_adapter_init(struct fjes_adapter *adapter);
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes.h"
#line 62  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_debugfs.c"
void fjes_dbg_adapter_exit(struct fjes_adapter *adapter);
#line 69  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes.h"
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_debugfs.c"
void fjes_dbg_init(void);
#line 70  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes.h"
#line 73  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_debugfs.c"
void fjes_dbg_exit(void);
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_debugfs.c"
static struct dentry *fjes_debug_root;
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_debugfs.c"
static char *ep_status_string[4U] = {(char *)"unshared", (char *)"shared", (char *)"waiting", (char *)"complete"};
#line 26  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_debugfs.c"
static int fjes_dbg_status_show(struct seq_file *m, void *v)
{
  #line 32 
  int epidx;
  #line 28 
  struct fjes_adapter *adapter = (struct fjes_adapter *)m->private;
  #line 29 
  struct fjes_hw *hw = & adapter->hw;
  #line 30 
  int max_epid = hw->max_epid;
  #line 31 
  int my_epid = hw->my_epid;
  #line 34 
  seq_puts(m,(char *)"EPID\tSTATUS           SAME_ZONE        CONNECTED\n");
  #line 35 
  epidx = 0;
  #line 35 
  while (epidx < max_epid) {
    #line 36 
    if (epidx == my_epid) 
                          #line 37 
                          seq_printf(m,(char *)"ep%d\t%-16c %-16c %-16c\n",epidx,45,45,45);
    else {
      #line 43 
      int tmp_0;
      #line 42 
      int tmp_2;
      #line 43 
      if (fjes_hw_epid_is_shared(hw->hw_info.share,epidx) != 0) 
                                                                #line 43 
                                                                tmp_0 = 89; else 
                                                                    #line 43 
                                                                    tmp_0 = 78;
      #line 42 
      if ((int)fjes_hw_epid_is_same_zone(hw,epidx) != 0) 
                                                         #line 42 
                                                         tmp_2 = 89; else 
                                                                    #line 42 
                                                                    tmp_2 = 78;
      #line 40 
      ;
      #line 40 
      ;
      #line 40 
      ;
      #line 40 
      seq_printf(m,(char *)"ep%d\t%-16s %-16c %-16c\n",epidx,ep_status_string[(unsigned int)fjes_hw_get_partner_ep_status(hw,epidx)],tmp_2,tmp_0);
    }
    #line 35 
    epidx ++;
  }
  #line 48 
  return 0;
}

#line 50  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_debugfs.c"
static int fjes_dbg_status_open(struct inode *inode, struct file *file)
{
  #line 50 
  return single_open(file,& fjes_dbg_status_show,inode->i_private);
}

#line 50  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_debugfs.c"
static struct file_operations fjes_dbg_status_fops = {.owner = & __this_module, .llseek = & seq_lseek, .read = & seq_read, .open = & fjes_dbg_status_open, .release = & single_release};
#line 52  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_debugfs.c"
void fjes_dbg_adapter_init(struct fjes_adapter *adapter)
{
  #line 54 
  char *name = dev_name(& (adapter->plat_dev)->dev);
  #line 56 
  adapter->dbg_adapter = cif_debugfs_create_dir(name,fjes_debug_root);
  #line 58 
  cif_debugfs_create_file((char *)"status",(unsigned short)292,adapter->dbg_adapter,(void *)adapter,& fjes_dbg_status_fops);
  #line 60 
  return;
}

#line 62  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_debugfs.c"
void fjes_dbg_adapter_exit(struct fjes_adapter *adapter)
{
  #line 64 
  debugfs_remove_recursive(adapter->dbg_adapter);
  #line 65 
  adapter->dbg_adapter = (struct dentry *)0;
  #line 66 
  return;
}

#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_debugfs.c"
void fjes_dbg_init(void)
{
  #line 70 
  fjes_debug_root = cif_debugfs_create_dir((char *)(& fjes_driver_name),(struct dentry *)0);
  #line 71 
  return;
}

#line 73  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_debugfs.c"
void fjes_dbg_exit(void)
{
  #line 75 
  debugfs_remove_recursive(fjes_debug_root);
  #line 76 
  fjes_debug_root = (struct dentry *)0;
  #line 77 
  return;
}

#line 93  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_debugfs.i.aux"
struct file_operations *emg_alias_fjes_dbg_status_fops = & fjes_dbg_status_fops;
#line 94  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_debugfs.i.aux"
int (*emg_alias_single_release)(struct inode *, struct file *) = & single_release;
#line 99 
#line 99 
struct dentry *emg_debugfs_create_dir(char *arg0, struct dentry *arg1);
#line 100 
#line 100 
struct dentry *emg_debugfs_create_file(char *arg0, unsigned short arg1, struct dentry *arg2, void *arg3, struct file_operations *arg4);
#line 113  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_debugfs.i.aux"
int emg_wrapper_fjes_dbg_status_open(struct inode *arg0, struct file *arg1)
{
  #line 114 
  return fjes_dbg_status_open(arg0,arg1);
}

#line 686  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_debugfs.i.aux"
static struct dentry *cif_debugfs_create_dir(char *name, struct dentry *parent)
{
  #line 690 
  return emg_debugfs_create_dir(name,parent);
}

#line 694  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_debugfs.i.aux"
static struct dentry *cif_debugfs_create_file(char *name, umode_t mode, struct dentry *parent, void *data, struct file_operations *fops)
{
  #line 698 
  return emg_debugfs_create_file(name,(unsigned short)((int)mode),parent,data,
                              fops);
}

/* compiler builtin: 
   unsigned short __builtin_bswap16(unsigned short);   */
/* compiler builtin: 
   void *__builtin_memcpy(void *, void const *, unsigned long);   */
/* compiler builtin: 
   void __builtin_prefetch(void const * , ...);   */
/* compiler builtin: 
   void __builtin_unreachable(void);   */
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/compiler.h"
__inline static void __read_once_size(void *p, void *res, int size)
{
  #line 199 
  switch (size) {
    #line 199 
    case 1: 
            #line 199 
    ;
    #line 199 
    *((__u8 *)res) = *((__u8 *)p);
    #line 199 
    break;
    #line 199 
    case 2: 
            #line 199 
    ;
    #line 199 
    *((__u16 *)res) = *((__u16 *)p);
    #line 199 
    break;
    #line 199 
    case 4: 
            #line 199 
    ;
    #line 199 
    *((__u32 *)res) = *((__u32 *)p);
    #line 199 
    break;
    #line 199 
    case 8: 
            #line 199 
    ;
    #line 199 
    *((__u64 *)res) = *((__u64 *)p);
    #line 199 
    break;
    #line 199 
    default: 
             #line 199 
    ;
    #line 200 
    ldv_inline_asm();
    #line 199 
    __builtin_memcpy(res,(void const *)p,(unsigned long)size);
    #line 200 
    ldv_inline_asm();
  }
  #line 203 
  return;
}

#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kasan-checks.h"
__inline static bool kasan_check_read(void *p, unsigned int size)
{
  #line 36 
  return (_Bool)1;
}

#line 204  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/bitops.h"
__inline static bool constant_test_bit(long nr, unsigned long *addr)
{
  #line 207 
  return (_Bool)(((*(addr + (unsigned long)(nr >> 6)) >> (nr & 63L)) & 1UL) != 0UL);
}

#line 210  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/bitops.h"
__inline static bool variable_test_bit(long nr, unsigned long *addr)
{
  #line 212 
  bool oldbit;
  #line 213 
  ldv_inline_asm();
  #line 219 
  return oldbit;
}

#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/bitops/instrumented-atomic.h"
#line 193  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_main.i.aux"
static void cif_set_bit(long nr, unsigned long *addr);
#line 44  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/bitops/instrumented-atomic.h"
#line 200  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_main.i.aux"
static void cif_clear_bit(long nr, unsigned long *addr);
#line 108  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/bitops/instrumented-non-atomic.h"
__inline static bool test_bit(long nr, unsigned long *addr)
{
  #line 111 
  int tmp_1;
  #line 110 
  kasan_check_read((void *)(addr + (unsigned long)(nr / 64L)),8U);
  #line 111 
  if (0 != 0) {
    #line 111 
    tmp_1 = (int)constant_test_bit(nr,addr) != 0;
  }
  else {
    #line 111 
    tmp_1 = (int)variable_test_bit(nr,addr) != 0;
  }
  #line 111 
  return (_Bool)(tmp_1 != 0);
}

#line 171  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/printk.h"
#line 171 
int printk(char * , ...);
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/jump_label.h"
__inline static bool arch_static_branch(struct static_key *key, bool branch)
{
  #line 27 
  ldv_inline_asm();
  #line 28 
  ldv_inline_asm();
  #line 34 
  return (_Bool)0;
  #line 35 
  l_yes: 
         #line 35 
  ;
  #line 36 
  return (_Bool)1;
}

#line 198  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jump_label.h"
__inline static bool static_key_false(struct static_key *key)
{
  #line 200 
  return arch_static_branch(key,(_Bool)0);
}

#line 26  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
#line 207  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_main.i.aux"
static void INIT_LIST_HEAD(struct list_head *list);
#line 88  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/percpu.h"
#line 88 
void __bad_percpu_size(void);
#line 309  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/percpu-defs.h"
#line 309 
void __bad_size_call_parameter(void);
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/page_64.h"
#line 29 
unsigned long __phys_addr(unsigned long);
#line 334  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/paravirt_types.h"
#line 334 
extern struct paravirt_patch_template pv_ops;
#line 49  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/string.h"
#line 739  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_main.i.aux"
static int cif_strcmp(char *cs, char *ct);
#line 52  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/string.h"
#line 214  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_main.i.aux"
static int cif_strncmp(char *cs, char *ct, __kernel_size_t count);
#line 88  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/string.h"
#line 221  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_main.i.aux"
static size_t cif_strlen(char *s);
#line 39  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cpumask.h"
#line 39 
extern unsigned int nr_cpu_ids;
#line 91 
#line 91 
extern struct cpumask __cpu_online_mask;
#line 134  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cpumask.h"
__inline static void cpu_max_bits_warn(unsigned int cpu, unsigned int bits)
{
  #line 137 
  int __ret_warn_on = cpu >= bits;
  #line 137 
  if ((long)(__ret_warn_on != 0) != 0L) {
    #line 138 
    ldv_inline_asm();
    #line 139 
    ldv_inline_asm();
  }
  #line 137 
  long tmp = (long)(__ret_warn_on != 0);
  #line 139 
  return;
}

#line 142  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cpumask.h"
__inline static unsigned int cpumask_check(unsigned int cpu)
{
  #line 144 
  cpu_max_bits_warn(cpu,nr_cpu_ids);
  #line 145 
  return cpu;
}

#line 358  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cpumask.h"
__inline static int cpumask_test_cpu(int cpu, struct cpumask *cpumask)
{
  #line 360 
  ;
  #line 360 
  return (int)test_bit((long)cpumask_check((unsigned int)cpu),
                 (unsigned long *)(& cpumask->bits));
}

#line 755  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/paravirt.h"
__inline static void arch_local_irq_disable(void)
{
  #line 757 
  unsigned long __edi = __edi;
  #line 757 
  unsigned long __esi = __esi;
  #line 757 
  unsigned long __edx = __edx;
  #line 757 
  unsigned long __ecx = __ecx;
  #line 757 
  unsigned long __eax = __eax;
  #line 757 
  if ((long)(pv_ops.irq.irq_disable.func == (void *)0) != 0L) {
    #line 758 
    ldv_inline_asm();
    #line 759 
    ldv_inline_asm();
    #line 760 
    ldv_inline_asm();
    #line 757 
    ;
  }
  #line 761 
  ldv_inline_asm();
  #line 763 
  return;
}

#line 760  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/paravirt.h"
__inline static void arch_local_irq_enable(void)
{
  #line 762 
  unsigned long __edi = __edi;
  #line 762 
  unsigned long __esi = __esi;
  #line 762 
  unsigned long __edx = __edx;
  #line 762 
  unsigned long __ecx = __ecx;
  #line 762 
  unsigned long __eax = __eax;
  #line 762 
  if ((long)(pv_ops.irq.irq_enable.func == (void *)0) != 0L) {
    #line 763 
    ldv_inline_asm();
    #line 764 
    ldv_inline_asm();
    #line 765 
    ldv_inline_asm();
    #line 762 
    ;
  }
  #line 766 
  ldv_inline_asm();
  #line 768 
  return;
}

#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/err.h"
#line 284  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_main.i.aux"
static long PTR_ERR(void *ptr);
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/err.h"
#line 291  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_main.i.aux"
static bool IS_ERR(void *ptr);
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/irqflags.h"
#line 32 
void trace_hardirqs_on(void);
#line 33 
#line 33 
void trace_hardirqs_off(void);
#line 77  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/preempt.h"
__inline static void __preempt_count_add(int val)
{
  #line 79 
  int tmp;
  #line 79 
  if (0 != 0 && (val == 1 || val == -1)) 
                                         #line 79 
                                         tmp = val; else 
                                                         #line 79 
                                                         tmp = 0;
  #line 79 
  int pao_ID__ = tmp;
  #line 79 
  switch (4UL) {
    #line 79 
    case (unsigned long)1: 
                           #line 79 
    ;
    #line 79 
    if (pao_ID__ == 1) 
                       #line 81 
                       ldv_inline_asm();
    else 
      #line 79 
      if (pao_ID__ == -1) 
                          #line 81 
                          ldv_inline_asm(); else 
                                                 #line 84 
                                                 ldv_inline_asm();
    #line 79 
    break;
    #line 79 
    case (unsigned long)2: 
                           #line 79 
    ;
    #line 79 
    if (pao_ID__ == 1) 
                       #line 81 
                       ldv_inline_asm();
    else 
      #line 79 
      if (pao_ID__ == -1) 
                          #line 81 
                          ldv_inline_asm(); else 
                                                 #line 84 
                                                 ldv_inline_asm();
    #line 79 
    break;
    #line 79 
    case (unsigned long)4: 
                           #line 79 
    ;
    #line 79 
    if (pao_ID__ == 1) 
                       #line 81 
                       ldv_inline_asm();
    else 
      #line 79 
      if (pao_ID__ == -1) 
                          #line 81 
                          ldv_inline_asm(); else 
                                                 #line 84 
                                                 ldv_inline_asm();
    #line 79 
    break;
    #line 79 
    case (unsigned long)8: 
                           #line 79 
    ;
    #line 79 
    if (pao_ID__ == 1) 
                       #line 81 
                       ldv_inline_asm();
    else 
      #line 79 
      if (pao_ID__ == -1) 
                          #line 81 
                          ldv_inline_asm(); else 
                                                 #line 84 
                                                 ldv_inline_asm();
    #line 79 
    break;
    #line 79 
    default: 
             #line 79 
    ;
    #line 79 
    __bad_percpu_size();
  }
  #line 82 
  return;
}

#line 82  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/preempt.h"
__inline static void __preempt_count_sub(int val)
{
  #line 84 
  int tmp;
  #line 84 
  if (0 != 0 && (val == -1 || val == 1)) 
                                         #line 84 
                                         tmp = - val; else 
                                                           #line 84 
                                                           tmp = 0;
  #line 84 
  int pao_ID__ = tmp;
  #line 84 
  switch (4UL) {
    #line 84 
    case (unsigned long)1: 
                           #line 84 
    ;
    #line 84 
    if (pao_ID__ == 1) 
                       #line 86 
                       ldv_inline_asm();
    else 
      #line 84 
      if (pao_ID__ == -1) 
                          #line 86 
                          ldv_inline_asm(); else 
                                                 #line 89 
                                                 ldv_inline_asm();
    #line 84 
    break;
    #line 84 
    case (unsigned long)2: 
                           #line 84 
    ;
    #line 84 
    if (pao_ID__ == 1) 
                       #line 86 
                       ldv_inline_asm();
    else 
      #line 84 
      if (pao_ID__ == -1) 
                          #line 86 
                          ldv_inline_asm(); else 
                                                 #line 89 
                                                 ldv_inline_asm();
    #line 84 
    break;
    #line 84 
    case (unsigned long)4: 
                           #line 84 
    ;
    #line 84 
    if (pao_ID__ == 1) 
                       #line 86 
                       ldv_inline_asm();
    else 
      #line 84 
      if (pao_ID__ == -1) 
                          #line 86 
                          ldv_inline_asm(); else 
                                                 #line 89 
                                                 ldv_inline_asm();
    #line 84 
    break;
    #line 84 
    case (unsigned long)8: 
                           #line 84 
    ;
    #line 84 
    if (pao_ID__ == 1) 
                       #line 86 
                       ldv_inline_asm();
    else 
      #line 84 
      if (pao_ID__ == -1) 
                          #line 86 
                          ldv_inline_asm(); else 
                                                 #line 89 
                                                 ldv_inline_asm();
    #line 84 
    break;
    #line 84 
    default: 
             #line 84 
    ;
    #line 84 
    __bad_percpu_size();
  }
  #line 87 
  return;
}

#line 302  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockdep.h"
#line 302 
void lockdep_init_map(struct lockdep_map *, char *, struct lock_class_key *, int);
#line 658 
#line 658 
void lockdep_rcu_suspicious(char *, int, char *);
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_api_smp.h"
#line 22 
void _raw_spin_lock(raw_spinlock_t *);
#line 39 
#line 39 
void _raw_spin_unlock(raw_spinlock_t *);
#line 43 
#line 43 
void _raw_spin_unlock_irqrestore(raw_spinlock_t *, unsigned long);
#line 336  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
static void spin_lock(spinlock_t *lock)
{
  #line 338 
  _raw_spin_lock(& lock->__anonCompField_spinlock_25.rlock);
  #line 339 
  return;
}

#line 340 
#line 794  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_main.i.aux"
static void cif_spin_lock_rx_status_lock_of_fjes_hw(spinlock_t *lock);
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
static void spin_unlock(spinlock_t *lock)
{
  #line 378 
  _raw_spin_unlock(& lock->__anonCompField_spinlock_25.rlock);
  #line 379 
  return;
}

#line 380 
#line 803  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_main.i.aux"
static void cif_spin_unlock_rx_status_lock_of_fjes_hw(spinlock_t *lock);
#line 391  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
static void spin_unlock_irqrestore(spinlock_t *lock, unsigned long flags)
{
  {
    #line 393 
    unsigned long __dummy;
    #line 393 
    unsigned long __dummy2;
    }
  #line 393 
  _raw_spin_unlock_irqrestore(& lock->__anonCompField_spinlock_25.rlock,flags);
  #line 395 
  return;
}

#line 395 
#line 771  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_main.i.aux"
static void cif_spin_unlock_irqrestore_rx_status_lock_of_fjes_hw(spinlock_t *lock, unsigned long flags);
#line 26 
#line 780 
static void cif_mutex_lock_lock_of_fjes_hw_info_0(struct mutex *lock);
#line 33 
#line 33 
void __ldv_spin_lock(spinlock_t *);
#line 35 
#line 762 
static void cif___ldv_spin_lock_rx_status_lock_of_fjes_hw(spinlock_t *lock);
#line 40 
#line 40 
void ldv_spin_model_lock(char *);
#line 41 
#line 41 
void ldv_spin_model_unlock(char *);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/err.h"
#line 23 
bool ldv_is_err(void *ptr);
#line 26 
#line 26 
long ldv_ptr_err(void *ptr);
#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/bitmap.h"
#line 21 
void ldv_set_bit(long nr, unsigned long *addr);
#line 22 
#line 22 
void ldv_clear_bit(long nr, unsigned long *addr);
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/string.h"
#line 25 
size_t ldv_strlen(char *s);
#line 26 
#line 26 
int ldv_strcmp(char *cs, char *ct);
#line 27 
#line 27 
int ldv_strncmp(char *cs, char *ct, __kernel_size_t count);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/list.h"
#line 23 
void ldv_init_list_head(struct list_head *list);
#line 220  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rcupdate.h"
#line 220 
int debug_lockdep_rcu_enabled(void);
#line 223 
#line 223 
int rcu_read_lock_sched_held(void);
#line 731  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rcupdate.h"
__inline static void rcu_read_lock_sched_notrace(void)
{
  #line 733 
  __preempt_count_add(1);
  #line 734 
  ldv_inline_asm();
  #line 735 
  return;
}

#line 752  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rcupdate.h"
__inline static void rcu_read_unlock_sched_notrace(void)
{
  #line 757 
  ldv_inline_asm();
  #line 755 
  __preempt_count_sub(1);
  #line 757 
  return;
}

#line 185  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mutex.h"
#line 787  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_main.i.aux"
static void cif_mutex_unlock_lock_of_fjes_hw_info_0(struct mutex *lock);
#line 81  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jiffies.h"
#line 81 
extern unsigned long jiffies;
#line 90  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
#line 90 
void init_timer_key(struct timer_list *, void (*)(struct timer_list *), unsigned int, char *, struct lock_class_key *);
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/workqueue.h"
#line 22 
void delayed_work_timer_fn(struct timer_list *);
#line 158  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/workqueue.h"
__inline static struct delayed_work *to_delayed_work(struct work_struct *work)
{
  #line 160 
  void *__mptr;
  #line 160 
  __mptr = (void *)work;
  #line 160 
  return ((struct delayed_work *)__mptr);
}

#line 207 
#line 207 
void __init_work(struct work_struct *, int);
#line 407 
#line 407 
struct workqueue_struct *alloc_workqueue(char *, unsigned int, int , ...);
#line 436 
#line 436 
void destroy_workqueue(struct workqueue_struct *);
#line 462 
#line 462 
bool cancel_work_sync(struct work_struct *);
#line 466 
#line 466 
bool cancel_delayed_work_sync(struct delayed_work *);
#line 496 
#line 377  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_main.i.aux"
static bool cif_queue_work(struct workqueue_struct *wq, struct work_struct *work);
#line 511  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/workqueue.h"
#line 385  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_main.i.aux"
static bool cif_queue_delayed_work(struct workqueue_struct *wq, struct delayed_work *dwork, unsigned long delay);
#line 554  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/workqueue.h"
#line 844  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_main.i.aux"
static bool cif_schedule_work(struct work_struct *work);
#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/nls.h"
#line 59 
int utf16s_to_utf8s(wchar_t *, int, enum utf16_endian, u8 *, int);
#line 206  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ioport.h"
__inline static resource_size_t resource_size(struct resource *res)
{
  #line 208 
  return (res->end - res->start) + 1ULL;
}

#line 1417  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
__inline static void *dev_get_drvdata(struct device *dev)
{
  #line 1419 
  return dev->driver_data;
}

#line 1422  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
__inline static void dev_set_drvdata(struct device *dev, void *data)
{
  #line 1424 
  dev->driver_data = data;
  #line 1425 
  return;
}

#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/platform_device.h"
#line 47 
void platform_device_unregister(struct platform_device *);
#line 52 
#line 52 
struct resource *platform_get_resource(struct platform_device *, unsigned int, unsigned int);
#line 66 
#line 66 
int platform_get_irq(struct platform_device *, unsigned int);
#line 94 
#line 94 
struct platform_device *platform_device_register_full(struct platform_device_info *);
#line 111  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/platform_device.h"
__inline static struct platform_device *platform_device_register_resndata(struct device *parent, char *name, int id, struct resource *res, unsigned int num, void *data, size_t size)
{
  #line 116 
  struct platform_device_info pdevinfo = {.parent = parent, .fwnode = (struct fwnode_handle *)0, .of_node_reused = (_Bool)0, .name = name, .id = id, .res = res, .num_res = num, .data = data, .size_data = size, .dma_mask = 0ULL, .properties = (struct property_entry *)0};
  #line 127 
  return platform_device_register_full(& pdevinfo);
}

#line 152  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/platform_device.h"
__inline static struct platform_device *platform_device_register_simple(char *name, int id, struct resource *res, unsigned int num)
{
  #line 156 
  return platform_device_register_resndata((struct device *)0,name,id,res,num,
                                        (void *)0,0UL);
}

#line 217 
#line 852  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_main.i.aux"
static int cif___platform_driver_register(struct platform_driver *ldv_func_arg1, struct module *ldv_func_arg2);
#line 218  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/platform_device.h"
#line 860  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_main.i.aux"
static void cif_platform_driver_unregister(struct platform_driver *ldv_func_arg1);
#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/delay.h"
#line 59 
void msleep(unsigned int);
#line 61 
#line 61 
void usleep_range(unsigned long, unsigned long);
#line 189  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/slab.h"
#line 189 
void kfree(void *);
#line 1023  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
#line 1023 
void consume_skb(struct sk_buff *);
#line 2189 
#line 2189 
void *skb_put(struct sk_buff *, unsigned int);
#line 2230  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static void *skb_put_data(struct sk_buff *skb, void *data, unsigned int len)
{
  #line 2233 
  void *tmp = skb_put(skb,len);
  #line 2235 
  memcpy(tmp,data,(unsigned long)len);
  #line 2237 
  return tmp;
}

#line 2820 
#line 2820 
struct sk_buff *__napi_alloc_skb(struct napi_struct *, unsigned int, gfp_t);
#line 2822  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static struct sk_buff *napi_alloc_skb(struct napi_struct *napi, unsigned int length)
{
  #line 2825 
  return __napi_alloc_skb(napi,length,2592U);
}

#line 162  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/interrupt.h"
#line 746  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_main.i.aux"
static int cif_request_irq(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char *name, void *dev);
#line 189  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/interrupt.h"
#line 754  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_main.i.aux"
static void *cif_free_irq(unsigned int ldv_func_arg1, void *ldv_func_arg2);
#line 423  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
#line 423 
void __napi_schedule(struct napi_struct *);
#line 431 
#line 431 
bool napi_schedule_prep(struct napi_struct *);
#line 440  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
__inline static void napi_schedule(struct napi_struct *n)
{
  #line 442 
  if ((int)napi_schedule_prep(n) != 0) 
                                       #line 443 
                                       __napi_schedule(n);
  #line 444 
  return;
}

#line 459  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
__inline static bool napi_reschedule(struct napi_struct *napi)
{
  #line 461 
  if ((int)napi_schedule_prep(napi) != 0) {
    #line 462 
    __napi_schedule(napi);
    #line 463 
    return (_Bool)1;
  }
  #line 465 
  return (_Bool)0;
}

#line 468 
#line 468 
bool napi_complete_done(struct napi_struct *, int);
#line 503 
#line 503 
void napi_disable(struct napi_struct *);
#line 512  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
__inline static void napi_enable(struct napi_struct *n)
{
  #line 514 
  int tmp_0;
  #line 514 
  if (test_bit(0L,& n->state)) 
                               #line 514 
                               tmp_0 = 0; else 
                                               #line 514 
                                               tmp_0 = 1;
  #line 514 
  if ((long)tmp_0 != 0L) {
    #line 515 
    ldv_inline_asm();
    #line 516 
    ldv_inline_asm();
    #line 517 
    ldv_inline_asm();
    #line 514 
    ;
  }
  #line 516 
  cif_clear_bit(0L,& n->state);
  #line 517 
  cif_clear_bit(3L,& n->state);
  #line 518 
  return;
}

#line 2132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
__inline static struct netdev_queue *netdev_get_tx_queue(struct net_device *dev, unsigned int index)
{
  #line 2135 
  return dev->_tx + (unsigned long)index;
}

#line 2234 
#line 2234 
void netif_napi_add(struct net_device *, struct napi_struct *, int (*)(struct napi_struct *, int ), int);
#line 2263 
#line 2263 
void netif_napi_del(struct napi_struct *);
#line 2658 
#line 2658 
void dev_close(struct net_device *);
#line 2679 
#line 828  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_main.i.aux"
static void cif_free_netdev(struct net_device *dev);
#line 3104  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
__inline static void netif_tx_start_queue(struct netdev_queue *dev_queue)
{
  #line 3106 
  cif_clear_bit(0L,& dev_queue->state);
  #line 3107 
  return;
}

#line 3120  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
__inline static void netif_tx_start_all_queues(struct net_device *dev)
{
  #line 3122 
  unsigned int i;
  #line 3124 
  i = 0U;
  #line 3124 
  while (dev->num_tx_queues > i) {
    {
      #line 3125 
      struct netdev_queue *txq = netdev_get_tx_queue(dev,i);
      #line 3126 
      netif_tx_start_queue(txq);
    }
    #line 3124 
    i ++;
  }
  #line 3128 
  return;
}

#line 3130 
#line 3130 
void netif_tx_wake_queue(struct netdev_queue *);
#line 3139  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
__inline static void netif_wake_queue(struct net_device *dev)
{
  #line 3141 
  netif_tx_wake_queue(netdev_get_tx_queue(dev,0U));
  #line 3142 
  return;
}

#line 3144  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
__inline static void netif_tx_wake_all_queues(struct net_device *dev)
{
  #line 3146 
  unsigned int i;
  #line 3148 
  i = 0U;
  #line 3148 
  while (dev->num_tx_queues > i) {
    {
      #line 3149 
      struct netdev_queue *txq = netdev_get_tx_queue(dev,i);
      #line 3150 
      netif_tx_wake_queue(txq);
    }
    #line 3148 
    i ++;
  }
  #line 3152 
  return;
}

#line 3154  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
__inline static void netif_tx_stop_queue(struct netdev_queue *dev_queue)
{
  #line 3156 
  cif_set_bit(0L,& dev_queue->state);
  #line 3157 
  return;
}

#line 3171 
#line 3171 
void netif_tx_stop_all_queues(struct net_device *);
#line 3387  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
__inline static bool netif_running(struct net_device *dev)
{
  #line 3389 
  return test_bit(0L,& dev->state);
}

#line 3662 
#line 3662 
int netif_receive_skb(struct sk_buff *);
#line 3808 
#line 3808 
unsigned long dev_trans_start(struct net_device *);
#line 3812 
#line 3812 
void netif_carrier_on(struct net_device *);
#line 3814 
#line 3814 
void netif_carrier_off(struct net_device *);
#line 3984  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
__inline static void netif_trans_update(struct net_device *dev)
{
  #line 3986 
  struct netdev_queue *txq = netdev_get_tx_queue(dev,0U);
  #line 3988 
  if (txq->trans_start != jiffies) 
                                   #line 3989 
                                   txq->trans_start = jiffies;
  #line 3990 
  return;
}

#line 4116 
#line 4116 
void ether_setup(struct net_device *);
#line 4123 
#line 812  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_main.i.aux"
static struct net_device *cif_alloc_netdev_mqs(int sizeof_priv, char *name, unsigned char name_assign_type, void (*setup)(struct net_device *), unsigned int txqs, unsigned int rxqs);
#line 4131  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
#line 820  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_main.i.aux"
static int cif_register_netdev(struct net_device *dev);
#line 4132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
#line 836  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_main.i.aux"
static void cif_unregister_netdev(struct net_device *dev);
#line 507  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/acpixf.h"
#line 507 
acpi_status acpi_walk_namespace(acpi_object_type, acpi_handle, u32, acpi_status (*)(acpi_handle , u32 , void *, void **), acpi_status (*)(acpi_handle , u32 , void *, void **), void *, void **);
#line 547 
#line 547 
acpi_status acpi_evaluate_object(acpi_handle, acpi_string, struct acpi_object_list *, struct acpi_buffer *);
#line 802 
#line 802 
acpi_status acpi_walk_resources(acpi_handle, char *, acpi_status (*)(struct acpi_resource *, void *), void *);
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/acpi_bus.h"
#line 27 
acpi_status acpi_evaluate_integer(acpi_handle, acpi_string, struct acpi_object_list *, unsigned long long *);
#line 246 
#line 246 
char *acpi_device_hid(struct acpi_device *);
#line 442  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/acpi_bus.h"
__inline static void *acpi_driver_data(struct acpi_device *d)
{
  #line 444 
  return d->driver_data;
}

#line 497 
#line 497 
int acpi_bus_get_device(acpi_handle, struct acpi_device **);
#line 528 
#line 528 
int acpi_bus_register_driver(struct acpi_driver *);
#line 529 
#line 529 
void acpi_bus_unregister_driver(struct acpi_driver *);
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/etherdevice.h"
#line 32 
__be16 eth_type_trans(struct sk_buff *, struct net_device *);
#line 116  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/etherdevice.h"
__inline static bool is_multicast_ether_addr(u8 *addr)
{
  #line 119 
  u32 a = *((u32 *)addr);
  #line 126 
  return (_Bool)((a & 1U) != 0U);
}

#line 149  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/etherdevice.h"
__inline static bool is_local_ether_addr(u8 *addr)
{
  #line 151 
  return (_Bool)(((int)*addr & 2) != 0);
}

#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rtnetlink.h"
#line 33 
void rtnl_lock(void);
#line 34 
#line 34 
void rtnl_unlock(void);
#line 300  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/if_vlan.h"
__inline static bool eth_type_vlan(__be16 ethertype)
{
  #line 302 
  switch ((int)ethertype) {
    #line 303 
    case 129: 
              #line 303 
    ;
    #line 304 
    case 43144: 
                #line 304 
    ;
    #line 305 
    return (_Bool)1;
    #line 306 
    default: 
             #line 306 
    ;
    #line 307 
    return (_Bool)0;
  }
}

#line 525  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/if_vlan.h"
__inline static int __vlan_get_tag(struct sk_buff *skb, u16 *vlan_tci)
{
  #line 527 
  struct vlan_ethhdr *veth = (struct vlan_ethhdr *)skb->data;
  #line 529 
  if (! eth_type_vlan((unsigned short)((int)veth->h_vlan_proto))) 
                                                                  #line 530 
                                                                  return -22;
  #line 532 
  *vlan_tci = __builtin_bswap16((unsigned short)((int)veth->h_vlan_TCI));
  #line 533 
  return 0;
}

#line 543  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/if_vlan.h"
__inline static int __vlan_hwaccel_get_tag(struct sk_buff *skb, u16 *vlan_tci)
{
  #line 546 
  if ((unsigned int)skb->vlan_present != 0U) {
    #line 547 
    *vlan_tci = skb->vlan_tci;
    #line 548 
    return 0;
  }
  else {
    #line 550 
    *vlan_tci = (unsigned short)0U;
    #line 551 
    return -22;
  }
}

#line 562  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/if_vlan.h"
__inline static int vlan_get_tag(struct sk_buff *skb, u16 *vlan_tci)
{
  #line 564 
  if (((skb->__anonCompField_sk_buff_88.__anonCompField___anonunion_519_87.__anonCompField___anonstruct_520_86.dev)->features & 128ULL) != 0ULL) {
    #line 565 
    return __vlan_hwaccel_get_tag(skb,vlan_tci);
  }
  else {
    #line 567 
    return __vlan_get_tag(skb,vlan_tci);
  }
}

#line 324  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_hw.h"
#line 324 
int fjes_hw_init(struct fjes_hw *hw);
#line 325 
#line 325 
void fjes_hw_exit(struct fjes_hw *hw);
#line 326 
#line 326 
int fjes_hw_reset(struct fjes_hw *hw);
#line 327 
#line 327 
int fjes_hw_request_info(struct fjes_hw *hw);
#line 328 
#line 328 
int fjes_hw_register_buff_addr(struct fjes_hw *hw, int dest_epid, struct ep_share_mem_info *buf_pair);
#line 330 
#line 330 
int fjes_hw_unregister_buff_addr(struct fjes_hw *hw, int dest_epid);
#line 331 
#line 331 
void fjes_hw_init_command_registers(struct fjes_hw *hw, struct fjes_device_command_param *param);
#line 333 
#line 333 
void fjes_hw_setup_epbuf(struct epbuf_handler *epbh, u8 *mac_addr, u32 mtu);
#line 334 
#line 334 
int fjes_hw_raise_interrupt(struct fjes_hw *hw, int dest_epid, enum REG_ICTL_MASK mask);
#line 335 
#line 335 
void fjes_hw_set_irqmask(struct fjes_hw *hw, enum REG_ICTL_MASK intr_mask, bool mask);
#line 336 
#line 336 
u32 fjes_hw_capture_interrupt_status(struct fjes_hw *hw);
#line 337 
#line 337 
void fjes_hw_raise_epstop(struct fjes_hw *hw);
#line 338 
#line 338 
int fjes_hw_wait_epstop(struct fjes_hw *hw);
#line 344 
#line 344 
bool fjes_hw_check_epbuf_version(struct epbuf_handler *epbh, u32 version);
#line 345 
#line 345 
bool fjes_hw_check_mtu(struct epbuf_handler *epbh, u32 mtu);
#line 346 
#line 346 
bool fjes_hw_check_vlan_id(struct epbuf_handler *epbh, u16 vlan_id);
#line 347 
#line 347 
bool fjes_hw_set_vlan_id(struct epbuf_handler *epbh, u16 vlan_id);
#line 348 
#line 348 
void fjes_hw_del_vlan_id(struct epbuf_handler *epbh, u16 vlan_id);
#line 349 
#line 349 
bool fjes_hw_epbuf_rx_is_empty(struct epbuf_handler *epbh);
#line 350 
#line 350 
void *fjes_hw_epbuf_rx_curpkt_get_addr(struct epbuf_handler *epbh, size_t *psize);
#line 351 
#line 351 
void fjes_hw_epbuf_rx_curpkt_drop(struct epbuf_handler *epbh);
#line 352 
#line 352 
int fjes_hw_epbuf_tx_pkt_send(struct epbuf_handler *epbh, void *frame, size_t size);
#line 62  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes.h"
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_hw.c"
u32 fjes_support_mtu[5U];
#line 268  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h"
#line 268 
struct tracepoint __tracepoint_fjes_txrx_stop_req_irq_pre;
#line 268  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h"
__inline static void trace_fjes_txrx_stop_req_irq_pre(struct fjes_hw *hw, int src_epid, enum ep_partner_status status)
{
  #line 268 
  int pscr_ret___0;
  #line 268 
  if ((int)static_key_false(& __tracepoint_fjes_txrx_stop_req_irq_pre.key) != 0) {
    #line 268 
    int pscr_ret__;
    #line 268 
    struct tracepoint_func *________p1;
    #line 268 
    struct tracepoint_func *it_func_ptr;
    #line 268 
    void *it_func;
    #line 268 
    void *__data;
    #line 268 
    int __idx = 0;
    {
      #line 268 
      void *__vpp_verify = (void *)0;
      #line 268 
      void *tmp = __vpp_verify;
    }
    #line 268 
    switch (4UL) {
      #line 268 
      int pfo_ret__;
      #line 268 
      int pfo_ret___0;
      #line 268 
      int pfo_ret___1;
      #line 268 
      int pfo_ret___2;
      #line 268 
      case (unsigned long)1: 
                             #line 268 
      ;
      #line 268 
      switch (4UL) {
        #line 268 
        case (unsigned long)1: 
                               #line 268 
        ;
        #line 269 
        ldv_inline_asm();
        #line 268 
        break;
        #line 268 
        case (unsigned long)2: 
                               #line 268 
        ;
        #line 269 
        ldv_inline_asm();
        #line 268 
        break;
        #line 268 
        case (unsigned long)4: 
                               #line 268 
        ;
        #line 269 
        ldv_inline_asm();
        #line 268 
        break;
        #line 268 
        case (unsigned long)8: 
                               #line 268 
        ;
        #line 269 
        ldv_inline_asm();
        #line 268 
        break;
        #line 268 
        default: 
                 #line 268 
        ;
        #line 268 
        __bad_percpu_size();
      }
      #line 268 
      pscr_ret__ = pfo_ret__;
      #line 268 
      break;
      #line 268 
      case (unsigned long)2: 
                             #line 268 
      ;
      #line 268 
      switch (4UL) {
        #line 268 
        case (unsigned long)1: 
                               #line 268 
        ;
        #line 269 
        ldv_inline_asm();
        #line 268 
        break;
        #line 268 
        case (unsigned long)2: 
                               #line 268 
        ;
        #line 269 
        ldv_inline_asm();
        #line 268 
        break;
        #line 268 
        case (unsigned long)4: 
                               #line 268 
        ;
        #line 269 
        ldv_inline_asm();
        #line 268 
        break;
        #line 268 
        case (unsigned long)8: 
                               #line 268 
        ;
        #line 269 
        ldv_inline_asm();
        #line 268 
        break;
        #line 268 
        default: 
                 #line 268 
        ;
        #line 268 
        __bad_percpu_size();
      }
      #line 268 
      pscr_ret__ = pfo_ret___0;
      #line 268 
      break;
      #line 268 
      case (unsigned long)4: 
                             #line 268 
      ;
      #line 268 
      switch (4UL) {
        #line 268 
        case (unsigned long)1: 
                               #line 268 
        ;
        #line 269 
        ldv_inline_asm();
        #line 268 
        break;
        #line 268 
        case (unsigned long)2: 
                               #line 268 
        ;
        #line 269 
        ldv_inline_asm();
        #line 268 
        break;
        #line 268 
        case (unsigned long)4: 
                               #line 268 
        ;
        #line 269 
        ldv_inline_asm();
        #line 268 
        break;
        #line 268 
        case (unsigned long)8: 
                               #line 268 
        ;
        #line 269 
        ldv_inline_asm();
        #line 268 
        break;
        #line 268 
        default: 
                 #line 268 
        ;
        #line 268 
        __bad_percpu_size();
      }
      #line 268 
      pscr_ret__ = pfo_ret___1;
      #line 268 
      break;
      #line 268 
      case (unsigned long)8: 
                             #line 268 
      ;
      #line 268 
      switch (4UL) {
        #line 268 
        case (unsigned long)1: 
                               #line 268 
        ;
        #line 269 
        ldv_inline_asm();
        #line 268 
        break;
        #line 268 
        case (unsigned long)2: 
                               #line 268 
        ;
        #line 269 
        ldv_inline_asm();
        #line 268 
        break;
        #line 268 
        case (unsigned long)4: 
                               #line 268 
        ;
        #line 269 
        ldv_inline_asm();
        #line 268 
        break;
        #line 268 
        case (unsigned long)8: 
                               #line 268 
        ;
        #line 269 
        ldv_inline_asm();
        #line 268 
        break;
        #line 268 
        default: 
                 #line 268 
        ;
        #line 268 
        __bad_percpu_size();
      }
      #line 268 
      pscr_ret__ = pfo_ret___2;
      #line 268 
      break;
      #line 268 
      default: 
               #line 268 
      ;
      #line 268 
      __bad_size_call_parameter();
      #line 268 
      break;
    }
    #line 268 
    if (cpumask_test_cpu(pscr_ret__,& __cpu_online_mask) == 0) 
                                                               #line 268 
                                                               return;
    {
      #line 268 
      int __ret_warn_on = 0;
      #line 268 
      if ((long)(__ret_warn_on != 0) != 0L) {
        #line 269 
        ldv_inline_asm();
        #line 270 
        ldv_inline_asm();
      }
      #line 268 
      long tmp_5 = (long)(__ret_warn_on != 0);
    }
    #line 268 
    __preempt_count_add(1);
    #line 269 
    ldv_inline_asm();
    {
      #line 269 
      union __anonunion___u_2254 __u;
      #line 268 
      __read_once_size((void *)(& __tracepoint_fjes_txrx_stop_req_irq_pre.funcs),(void *)(& __u.__c),8);
      #line 268 
      ________p1 = (__u.__val);
      }
    #line 268 
    it_func_ptr = ________p1;
    #line 268 
    if (it_func_ptr != (struct tracepoint_func *)0) 
      #line 268 
      while (1) {
        #line 268 
        it_func = it_func_ptr->func;
        #line 268 
        __data = it_func_ptr->data;
        #line 268 
        (*((void (*)(void *, struct fjes_hw *, int , enum ep_partner_status ))it_func))(__data,hw,src_epid,status);
        #line 268 
        it_func_ptr ++;
        #line 269 
        ;
        #line 269 
        if (! (it_func_ptr->func != (void *)0)) 
                                                #line 268 
                                                break;
      }
    #line 270 
    ldv_inline_asm();
    #line 268 
    __preempt_count_sub(1);
  }
  {
    #line 268 
    void *__vpp_verify_0 = (void *)0;
    #line 268 
    void *tmp_13 = __vpp_verify_0;
  }
  #line 268 
  switch (4UL) {
    #line 268 
    int pfo_ret___4;
    #line 268 
    int pfo_ret___5;
    #line 268 
    int pfo_ret___6;
    #line 268 
    int pfo_ret___3;
    #line 268 
    case (unsigned long)1: 
                           #line 268 
    ;
    #line 268 
    switch (4UL) {
      #line 268 
      case (unsigned long)1: 
                             #line 268 
      ;
      #line 269 
      ldv_inline_asm();
      #line 268 
      break;
      #line 268 
      case (unsigned long)2: 
                             #line 268 
      ;
      #line 269 
      ldv_inline_asm();
      #line 268 
      break;
      #line 268 
      case (unsigned long)4: 
                             #line 268 
      ;
      #line 269 
      ldv_inline_asm();
      #line 268 
      break;
      #line 268 
      case (unsigned long)8: 
                             #line 268 
      ;
      #line 269 
      ldv_inline_asm();
      #line 268 
      break;
      #line 268 
      default: 
               #line 268 
      ;
      #line 268 
      __bad_percpu_size();
    }
    #line 268 
    pscr_ret___0 = pfo_ret___3;
    #line 268 
    break;
    #line 268 
    case (unsigned long)2: 
                           #line 268 
    ;
    #line 268 
    switch (4UL) {
      #line 268 
      case (unsigned long)1: 
                             #line 268 
      ;
      #line 269 
      ldv_inline_asm();
      #line 268 
      break;
      #line 268 
      case (unsigned long)2: 
                             #line 268 
      ;
      #line 269 
      ldv_inline_asm();
      #line 268 
      break;
      #line 268 
      case (unsigned long)4: 
                             #line 268 
      ;
      #line 269 
      ldv_inline_asm();
      #line 268 
      break;
      #line 268 
      case (unsigned long)8: 
                             #line 268 
      ;
      #line 269 
      ldv_inline_asm();
      #line 268 
      break;
      #line 268 
      default: 
               #line 268 
      ;
      #line 268 
      __bad_percpu_size();
    }
    #line 268 
    pscr_ret___0 = pfo_ret___4;
    #line 268 
    break;
    #line 268 
    case (unsigned long)4: 
                           #line 268 
    ;
    #line 268 
    switch (4UL) {
      #line 268 
      case (unsigned long)1: 
                             #line 268 
      ;
      #line 269 
      ldv_inline_asm();
      #line 268 
      break;
      #line 268 
      case (unsigned long)2: 
                             #line 268 
      ;
      #line 269 
      ldv_inline_asm();
      #line 268 
      break;
      #line 268 
      case (unsigned long)4: 
                             #line 268 
      ;
      #line 269 
      ldv_inline_asm();
      #line 268 
      break;
      #line 268 
      case (unsigned long)8: 
                             #line 268 
      ;
      #line 269 
      ldv_inline_asm();
      #line 268 
      break;
      #line 268 
      default: 
               #line 268 
      ;
      #line 268 
      __bad_percpu_size();
    }
    #line 268 
    pscr_ret___0 = pfo_ret___5;
    #line 268 
    break;
    #line 268 
    case (unsigned long)8: 
                           #line 268 
    ;
    #line 268 
    switch (4UL) {
      #line 268 
      case (unsigned long)1: 
                             #line 268 
      ;
      #line 269 
      ldv_inline_asm();
      #line 268 
      break;
      #line 268 
      case (unsigned long)2: 
                             #line 268 
      ;
      #line 269 
      ldv_inline_asm();
      #line 268 
      break;
      #line 268 
      case (unsigned long)4: 
                             #line 268 
      ;
      #line 269 
      ldv_inline_asm();
      #line 268 
      break;
      #line 268 
      case (unsigned long)8: 
                             #line 268 
      ;
      #line 269 
      ldv_inline_asm();
      #line 268 
      break;
      #line 268 
      default: 
               #line 268 
      ;
      #line 268 
      __bad_percpu_size();
    }
    #line 268 
    pscr_ret___0 = pfo_ret___6;
    #line 268 
    break;
    #line 268 
    default: 
             #line 268 
    ;
    #line 268 
    __bad_size_call_parameter();
    #line 268 
    break;
  }
  #line 268 
  if (cpumask_test_cpu(pscr_ret___0,& __cpu_online_mask) != 0) {
    #line 268 
    rcu_read_lock_sched_notrace();
    {
      #line 269 
      union __anonunion___u_2256 __u_0;
      #line 268 
      __read_once_size((void *)(& __tracepoint_fjes_txrx_stop_req_irq_pre.funcs),(void *)(& __u_0.__c),8);
      #line 268 
      struct tracepoint_func *________p1_0 = (__u_0.__val);
      {
        #line 268 
        bool __warned;
        #line 268 
        if (debug_lockdep_rcu_enabled() != 0) 
          #line 268 
          if (! __warned) {
            #line 268 
            if (rcu_read_lock_sched_held() == 0) {
              #line 268 
              __warned = (_Bool)1;
              #line 268 
              lockdep_rcu_suspicious((char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h",268,(char *)"suspicious rcu_dereference_check() usage");
            }
          }
      }
      #line 268 
      struct tracepoint_func *tmp_11 = ________p1_0;
    }
    #line 268 
    rcu_read_unlock_sched_notrace();
  }
  #line 270 
  return;
}

#line 292 
#line 292 
struct tracepoint __tracepoint_fjes_txrx_stop_req_irq_post;
#line 292  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h"
__inline static void trace_fjes_txrx_stop_req_irq_post(struct fjes_hw *hw, int src_epid)
{
  #line 292 
  int pscr_ret___0;
  #line 292 
  if ((int)static_key_false(& __tracepoint_fjes_txrx_stop_req_irq_post.key) != 0) {
    #line 292 
    int pscr_ret__;
    #line 292 
    struct tracepoint_func *________p1;
    #line 292 
    struct tracepoint_func *it_func_ptr;
    #line 292 
    void *it_func;
    #line 292 
    void *__data;
    #line 292 
    int __idx = 0;
    {
      #line 292 
      void *__vpp_verify = (void *)0;
      #line 292 
      void *tmp = __vpp_verify;
    }
    #line 292 
    switch (4UL) {
      #line 292 
      int pfo_ret__;
      #line 292 
      int pfo_ret___0;
      #line 292 
      int pfo_ret___1;
      #line 292 
      int pfo_ret___2;
      #line 292 
      case (unsigned long)1: 
                             #line 292 
      ;
      #line 292 
      switch (4UL) {
        #line 292 
        case (unsigned long)1: 
                               #line 292 
        ;
        #line 293 
        ldv_inline_asm();
        #line 292 
        break;
        #line 292 
        case (unsigned long)2: 
                               #line 292 
        ;
        #line 293 
        ldv_inline_asm();
        #line 292 
        break;
        #line 292 
        case (unsigned long)4: 
                               #line 292 
        ;
        #line 293 
        ldv_inline_asm();
        #line 292 
        break;
        #line 292 
        case (unsigned long)8: 
                               #line 292 
        ;
        #line 293 
        ldv_inline_asm();
        #line 292 
        break;
        #line 292 
        default: 
                 #line 292 
        ;
        #line 292 
        __bad_percpu_size();
      }
      #line 292 
      pscr_ret__ = pfo_ret__;
      #line 292 
      break;
      #line 292 
      case (unsigned long)2: 
                             #line 292 
      ;
      #line 292 
      switch (4UL) {
        #line 292 
        case (unsigned long)1: 
                               #line 292 
        ;
        #line 293 
        ldv_inline_asm();
        #line 292 
        break;
        #line 292 
        case (unsigned long)2: 
                               #line 292 
        ;
        #line 293 
        ldv_inline_asm();
        #line 292 
        break;
        #line 292 
        case (unsigned long)4: 
                               #line 292 
        ;
        #line 293 
        ldv_inline_asm();
        #line 292 
        break;
        #line 292 
        case (unsigned long)8: 
                               #line 292 
        ;
        #line 293 
        ldv_inline_asm();
        #line 292 
        break;
        #line 292 
        default: 
                 #line 292 
        ;
        #line 292 
        __bad_percpu_size();
      }
      #line 292 
      pscr_ret__ = pfo_ret___0;
      #line 292 
      break;
      #line 292 
      case (unsigned long)4: 
                             #line 292 
      ;
      #line 292 
      switch (4UL) {
        #line 292 
        case (unsigned long)1: 
                               #line 292 
        ;
        #line 293 
        ldv_inline_asm();
        #line 292 
        break;
        #line 292 
        case (unsigned long)2: 
                               #line 292 
        ;
        #line 293 
        ldv_inline_asm();
        #line 292 
        break;
        #line 292 
        case (unsigned long)4: 
                               #line 292 
        ;
        #line 293 
        ldv_inline_asm();
        #line 292 
        break;
        #line 292 
        case (unsigned long)8: 
                               #line 292 
        ;
        #line 293 
        ldv_inline_asm();
        #line 292 
        break;
        #line 292 
        default: 
                 #line 292 
        ;
        #line 292 
        __bad_percpu_size();
      }
      #line 292 
      pscr_ret__ = pfo_ret___1;
      #line 292 
      break;
      #line 292 
      case (unsigned long)8: 
                             #line 292 
      ;
      #line 292 
      switch (4UL) {
        #line 292 
        case (unsigned long)1: 
                               #line 292 
        ;
        #line 293 
        ldv_inline_asm();
        #line 292 
        break;
        #line 292 
        case (unsigned long)2: 
                               #line 292 
        ;
        #line 293 
        ldv_inline_asm();
        #line 292 
        break;
        #line 292 
        case (unsigned long)4: 
                               #line 292 
        ;
        #line 293 
        ldv_inline_asm();
        #line 292 
        break;
        #line 292 
        case (unsigned long)8: 
                               #line 292 
        ;
        #line 293 
        ldv_inline_asm();
        #line 292 
        break;
        #line 292 
        default: 
                 #line 292 
        ;
        #line 292 
        __bad_percpu_size();
      }
      #line 292 
      pscr_ret__ = pfo_ret___2;
      #line 292 
      break;
      #line 292 
      default: 
               #line 292 
      ;
      #line 292 
      __bad_size_call_parameter();
      #line 292 
      break;
    }
    #line 292 
    if (cpumask_test_cpu(pscr_ret__,& __cpu_online_mask) == 0) 
                                                               #line 292 
                                                               return;
    {
      #line 292 
      int __ret_warn_on = 0;
      #line 292 
      if ((long)(__ret_warn_on != 0) != 0L) {
        #line 293 
        ldv_inline_asm();
        #line 294 
        ldv_inline_asm();
      }
      #line 292 
      long tmp_5 = (long)(__ret_warn_on != 0);
    }
    #line 292 
    __preempt_count_add(1);
    #line 293 
    ldv_inline_asm();
    {
      #line 293 
      union __anonunion___u_2258 __u;
      #line 292 
      __read_once_size((void *)(& __tracepoint_fjes_txrx_stop_req_irq_post.funcs),(void *)(& __u.__c),8);
      #line 292 
      ________p1 = (__u.__val);
      }
    #line 292 
    it_func_ptr = ________p1;
    #line 292 
    if (it_func_ptr != (struct tracepoint_func *)0) 
      #line 292 
      while (1) {
        #line 292 
        it_func = it_func_ptr->func;
        #line 292 
        __data = it_func_ptr->data;
        #line 292 
        (*((void (*)(void *, struct fjes_hw *, int ))it_func))(__data,hw,src_epid);
        #line 292 
        it_func_ptr ++;
        #line 293 
        ;
        #line 293 
        if (! (it_func_ptr->func != (void *)0)) 
                                                #line 292 
                                                break;
      }
    #line 294 
    ldv_inline_asm();
    #line 292 
    __preempt_count_sub(1);
  }
  {
    #line 292 
    void *__vpp_verify_0 = (void *)0;
    #line 292 
    void *tmp_13 = __vpp_verify_0;
  }
  #line 292 
  switch (4UL) {
    #line 292 
    int pfo_ret___5;
    #line 292 
    int pfo_ret___6;
    #line 292 
    int pfo_ret___3;
    #line 292 
    int pfo_ret___4;
    #line 292 
    case (unsigned long)1: 
                           #line 292 
    ;
    #line 292 
    switch (4UL) {
      #line 292 
      case (unsigned long)1: 
                             #line 292 
      ;
      #line 293 
      ldv_inline_asm();
      #line 292 
      break;
      #line 292 
      case (unsigned long)2: 
                             #line 292 
      ;
      #line 293 
      ldv_inline_asm();
      #line 292 
      break;
      #line 292 
      case (unsigned long)4: 
                             #line 292 
      ;
      #line 293 
      ldv_inline_asm();
      #line 292 
      break;
      #line 292 
      case (unsigned long)8: 
                             #line 292 
      ;
      #line 293 
      ldv_inline_asm();
      #line 292 
      break;
      #line 292 
      default: 
               #line 292 
      ;
      #line 292 
      __bad_percpu_size();
    }
    #line 292 
    pscr_ret___0 = pfo_ret___3;
    #line 292 
    break;
    #line 292 
    case (unsigned long)2: 
                           #line 292 
    ;
    #line 292 
    switch (4UL) {
      #line 292 
      case (unsigned long)1: 
                             #line 292 
      ;
      #line 293 
      ldv_inline_asm();
      #line 292 
      break;
      #line 292 
      case (unsigned long)2: 
                             #line 292 
      ;
      #line 293 
      ldv_inline_asm();
      #line 292 
      break;
      #line 292 
      case (unsigned long)4: 
                             #line 292 
      ;
      #line 293 
      ldv_inline_asm();
      #line 292 
      break;
      #line 292 
      case (unsigned long)8: 
                             #line 292 
      ;
      #line 293 
      ldv_inline_asm();
      #line 292 
      break;
      #line 292 
      default: 
               #line 292 
      ;
      #line 292 
      __bad_percpu_size();
    }
    #line 292 
    pscr_ret___0 = pfo_ret___4;
    #line 292 
    break;
    #line 292 
    case (unsigned long)4: 
                           #line 292 
    ;
    #line 292 
    switch (4UL) {
      #line 292 
      case (unsigned long)1: 
                             #line 292 
      ;
      #line 293 
      ldv_inline_asm();
      #line 292 
      break;
      #line 292 
      case (unsigned long)2: 
                             #line 292 
      ;
      #line 293 
      ldv_inline_asm();
      #line 292 
      break;
      #line 292 
      case (unsigned long)4: 
                             #line 292 
      ;
      #line 293 
      ldv_inline_asm();
      #line 292 
      break;
      #line 292 
      case (unsigned long)8: 
                             #line 292 
      ;
      #line 293 
      ldv_inline_asm();
      #line 292 
      break;
      #line 292 
      default: 
               #line 292 
      ;
      #line 292 
      __bad_percpu_size();
    }
    #line 292 
    pscr_ret___0 = pfo_ret___5;
    #line 292 
    break;
    #line 292 
    case (unsigned long)8: 
                           #line 292 
    ;
    #line 292 
    switch (4UL) {
      #line 292 
      case (unsigned long)1: 
                             #line 292 
      ;
      #line 293 
      ldv_inline_asm();
      #line 292 
      break;
      #line 292 
      case (unsigned long)2: 
                             #line 292 
      ;
      #line 293 
      ldv_inline_asm();
      #line 292 
      break;
      #line 292 
      case (unsigned long)4: 
                             #line 292 
      ;
      #line 293 
      ldv_inline_asm();
      #line 292 
      break;
      #line 292 
      case (unsigned long)8: 
                             #line 292 
      ;
      #line 293 
      ldv_inline_asm();
      #line 292 
      break;
      #line 292 
      default: 
               #line 292 
      ;
      #line 292 
      __bad_percpu_size();
    }
    #line 292 
    pscr_ret___0 = pfo_ret___6;
    #line 292 
    break;
    #line 292 
    default: 
             #line 292 
    ;
    #line 292 
    __bad_size_call_parameter();
    #line 292 
    break;
  }
  #line 292 
  if (cpumask_test_cpu(pscr_ret___0,& __cpu_online_mask) != 0) {
    #line 292 
    rcu_read_lock_sched_notrace();
    {
      #line 293 
      union __anonunion___u_2260 __u_0;
      #line 292 
      __read_once_size((void *)(& __tracepoint_fjes_txrx_stop_req_irq_post.funcs),(void *)(& __u_0.__c),8);
      #line 292 
      struct tracepoint_func *________p1_0 = (__u_0.__val);
      {
        #line 292 
        bool __warned;
        #line 292 
        if (debug_lockdep_rcu_enabled() != 0) 
          #line 292 
          if (! __warned) {
            #line 292 
            if (rcu_read_lock_sched_held() == 0) {
              #line 292 
              __warned = (_Bool)1;
              #line 292 
              lockdep_rcu_suspicious((char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h",292,(char *)"suspicious rcu_dereference_check() usage");
            }
          }
      }
      #line 292 
      struct tracepoint_func *tmp_11 = ________p1_0;
    }
    #line 292 
    rcu_read_unlock_sched_notrace();
  }
  #line 294 
  return;
}

#line 312 
#line 312 
struct tracepoint __tracepoint_fjes_stop_req_irq_pre;
#line 312  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h"
__inline static void trace_fjes_stop_req_irq_pre(struct fjes_hw *hw, int src_epid, enum ep_partner_status status)
{
  #line 312 
  int pscr_ret___0;
  #line 312 
  if ((int)static_key_false(& __tracepoint_fjes_stop_req_irq_pre.key) != 0) {
    #line 312 
    int pscr_ret__;
    #line 312 
    struct tracepoint_func *________p1;
    #line 312 
    struct tracepoint_func *it_func_ptr;
    #line 312 
    void *it_func;
    #line 312 
    void *__data;
    #line 312 
    int __idx = 0;
    {
      #line 312 
      void *__vpp_verify = (void *)0;
      #line 312 
      void *tmp = __vpp_verify;
    }
    #line 312 
    switch (4UL) {
      #line 312 
      int pfo_ret___0;
      #line 312 
      int pfo_ret___1;
      #line 312 
      int pfo_ret___2;
      #line 312 
      int pfo_ret__;
      #line 312 
      case (unsigned long)1: 
                             #line 312 
      ;
      #line 312 
      switch (4UL) {
        #line 312 
        case (unsigned long)1: 
                               #line 312 
        ;
        #line 313 
        ldv_inline_asm();
        #line 312 
        break;
        #line 312 
        case (unsigned long)2: 
                               #line 312 
        ;
        #line 313 
        ldv_inline_asm();
        #line 312 
        break;
        #line 312 
        case (unsigned long)4: 
                               #line 312 
        ;
        #line 313 
        ldv_inline_asm();
        #line 312 
        break;
        #line 312 
        case (unsigned long)8: 
                               #line 312 
        ;
        #line 313 
        ldv_inline_asm();
        #line 312 
        break;
        #line 312 
        default: 
                 #line 312 
        ;
        #line 312 
        __bad_percpu_size();
      }
      #line 312 
      pscr_ret__ = pfo_ret__;
      #line 312 
      break;
      #line 312 
      case (unsigned long)2: 
                             #line 312 
      ;
      #line 312 
      switch (4UL) {
        #line 312 
        case (unsigned long)1: 
                               #line 312 
        ;
        #line 313 
        ldv_inline_asm();
        #line 312 
        break;
        #line 312 
        case (unsigned long)2: 
                               #line 312 
        ;
        #line 313 
        ldv_inline_asm();
        #line 312 
        break;
        #line 312 
        case (unsigned long)4: 
                               #line 312 
        ;
        #line 313 
        ldv_inline_asm();
        #line 312 
        break;
        #line 312 
        case (unsigned long)8: 
                               #line 312 
        ;
        #line 313 
        ldv_inline_asm();
        #line 312 
        break;
        #line 312 
        default: 
                 #line 312 
        ;
        #line 312 
        __bad_percpu_size();
      }
      #line 312 
      pscr_ret__ = pfo_ret___0;
      #line 312 
      break;
      #line 312 
      case (unsigned long)4: 
                             #line 312 
      ;
      #line 312 
      switch (4UL) {
        #line 312 
        case (unsigned long)1: 
                               #line 312 
        ;
        #line 313 
        ldv_inline_asm();
        #line 312 
        break;
        #line 312 
        case (unsigned long)2: 
                               #line 312 
        ;
        #line 313 
        ldv_inline_asm();
        #line 312 
        break;
        #line 312 
        case (unsigned long)4: 
                               #line 312 
        ;
        #line 313 
        ldv_inline_asm();
        #line 312 
        break;
        #line 312 
        case (unsigned long)8: 
                               #line 312 
        ;
        #line 313 
        ldv_inline_asm();
        #line 312 
        break;
        #line 312 
        default: 
                 #line 312 
        ;
        #line 312 
        __bad_percpu_size();
      }
      #line 312 
      pscr_ret__ = pfo_ret___1;
      #line 312 
      break;
      #line 312 
      case (unsigned long)8: 
                             #line 312 
      ;
      #line 312 
      switch (4UL) {
        #line 312 
        case (unsigned long)1: 
                               #line 312 
        ;
        #line 313 
        ldv_inline_asm();
        #line 312 
        break;
        #line 312 
        case (unsigned long)2: 
                               #line 312 
        ;
        #line 313 
        ldv_inline_asm();
        #line 312 
        break;
        #line 312 
        case (unsigned long)4: 
                               #line 312 
        ;
        #line 313 
        ldv_inline_asm();
        #line 312 
        break;
        #line 312 
        case (unsigned long)8: 
                               #line 312 
        ;
        #line 313 
        ldv_inline_asm();
        #line 312 
        break;
        #line 312 
        default: 
                 #line 312 
        ;
        #line 312 
        __bad_percpu_size();
      }
      #line 312 
      pscr_ret__ = pfo_ret___2;
      #line 312 
      break;
      #line 312 
      default: 
               #line 312 
      ;
      #line 312 
      __bad_size_call_parameter();
      #line 312 
      break;
    }
    #line 312 
    if (cpumask_test_cpu(pscr_ret__,& __cpu_online_mask) == 0) 
                                                               #line 312 
                                                               return;
    {
      #line 312 
      int __ret_warn_on = 0;
      #line 312 
      if ((long)(__ret_warn_on != 0) != 0L) {
        #line 313 
        ldv_inline_asm();
        #line 314 
        ldv_inline_asm();
      }
      #line 312 
      long tmp_5 = (long)(__ret_warn_on != 0);
    }
    #line 312 
    __preempt_count_add(1);
    #line 313 
    ldv_inline_asm();
    {
      #line 313 
      union __anonunion___u_2262 __u;
      #line 312 
      __read_once_size((void *)(& __tracepoint_fjes_stop_req_irq_pre.funcs),(void *)(& __u.__c),8);
      #line 312 
      ________p1 = (__u.__val);
      }
    #line 312 
    it_func_ptr = ________p1;
    #line 312 
    if (it_func_ptr != (struct tracepoint_func *)0) 
      #line 312 
      while (1) {
        #line 312 
        it_func = it_func_ptr->func;
        #line 312 
        __data = it_func_ptr->data;
        #line 312 
        (*((void (*)(void *, struct fjes_hw *, int , enum ep_partner_status ))it_func))(__data,hw,src_epid,status);
        #line 312 
        it_func_ptr ++;
        #line 313 
        ;
        #line 313 
        if (! (it_func_ptr->func != (void *)0)) 
                                                #line 312 
                                                break;
      }
    #line 314 
    ldv_inline_asm();
    #line 312 
    __preempt_count_sub(1);
  }
  {
    #line 312 
    void *__vpp_verify_0 = (void *)0;
    #line 312 
    void *tmp_13 = __vpp_verify_0;
  }
  #line 312 
  switch (4UL) {
    #line 312 
    int pfo_ret___6;
    #line 312 
    int pfo_ret___3;
    #line 312 
    int pfo_ret___4;
    #line 312 
    int pfo_ret___5;
    #line 312 
    case (unsigned long)1: 
                           #line 312 
    ;
    #line 312 
    switch (4UL) {
      #line 312 
      case (unsigned long)1: 
                             #line 312 
      ;
      #line 313 
      ldv_inline_asm();
      #line 312 
      break;
      #line 312 
      case (unsigned long)2: 
                             #line 312 
      ;
      #line 313 
      ldv_inline_asm();
      #line 312 
      break;
      #line 312 
      case (unsigned long)4: 
                             #line 312 
      ;
      #line 313 
      ldv_inline_asm();
      #line 312 
      break;
      #line 312 
      case (unsigned long)8: 
                             #line 312 
      ;
      #line 313 
      ldv_inline_asm();
      #line 312 
      break;
      #line 312 
      default: 
               #line 312 
      ;
      #line 312 
      __bad_percpu_size();
    }
    #line 312 
    pscr_ret___0 = pfo_ret___3;
    #line 312 
    break;
    #line 312 
    case (unsigned long)2: 
                           #line 312 
    ;
    #line 312 
    switch (4UL) {
      #line 312 
      case (unsigned long)1: 
                             #line 312 
      ;
      #line 313 
      ldv_inline_asm();
      #line 312 
      break;
      #line 312 
      case (unsigned long)2: 
                             #line 312 
      ;
      #line 313 
      ldv_inline_asm();
      #line 312 
      break;
      #line 312 
      case (unsigned long)4: 
                             #line 312 
      ;
      #line 313 
      ldv_inline_asm();
      #line 312 
      break;
      #line 312 
      case (unsigned long)8: 
                             #line 312 
      ;
      #line 313 
      ldv_inline_asm();
      #line 312 
      break;
      #line 312 
      default: 
               #line 312 
      ;
      #line 312 
      __bad_percpu_size();
    }
    #line 312 
    pscr_ret___0 = pfo_ret___4;
    #line 312 
    break;
    #line 312 
    case (unsigned long)4: 
                           #line 312 
    ;
    #line 312 
    switch (4UL) {
      #line 312 
      case (unsigned long)1: 
                             #line 312 
      ;
      #line 313 
      ldv_inline_asm();
      #line 312 
      break;
      #line 312 
      case (unsigned long)2: 
                             #line 312 
      ;
      #line 313 
      ldv_inline_asm();
      #line 312 
      break;
      #line 312 
      case (unsigned long)4: 
                             #line 312 
      ;
      #line 313 
      ldv_inline_asm();
      #line 312 
      break;
      #line 312 
      case (unsigned long)8: 
                             #line 312 
      ;
      #line 313 
      ldv_inline_asm();
      #line 312 
      break;
      #line 312 
      default: 
               #line 312 
      ;
      #line 312 
      __bad_percpu_size();
    }
    #line 312 
    pscr_ret___0 = pfo_ret___5;
    #line 312 
    break;
    #line 312 
    case (unsigned long)8: 
                           #line 312 
    ;
    #line 312 
    switch (4UL) {
      #line 312 
      case (unsigned long)1: 
                             #line 312 
      ;
      #line 313 
      ldv_inline_asm();
      #line 312 
      break;
      #line 312 
      case (unsigned long)2: 
                             #line 312 
      ;
      #line 313 
      ldv_inline_asm();
      #line 312 
      break;
      #line 312 
      case (unsigned long)4: 
                             #line 312 
      ;
      #line 313 
      ldv_inline_asm();
      #line 312 
      break;
      #line 312 
      case (unsigned long)8: 
                             #line 312 
      ;
      #line 313 
      ldv_inline_asm();
      #line 312 
      break;
      #line 312 
      default: 
               #line 312 
      ;
      #line 312 
      __bad_percpu_size();
    }
    #line 312 
    pscr_ret___0 = pfo_ret___6;
    #line 312 
    break;
    #line 312 
    default: 
             #line 312 
    ;
    #line 312 
    __bad_size_call_parameter();
    #line 312 
    break;
  }
  #line 312 
  if (cpumask_test_cpu(pscr_ret___0,& __cpu_online_mask) != 0) {
    #line 312 
    rcu_read_lock_sched_notrace();
    {
      #line 313 
      union __anonunion___u_2264 __u_0;
      #line 312 
      __read_once_size((void *)(& __tracepoint_fjes_stop_req_irq_pre.funcs),(void *)(& __u_0.__c),8);
      #line 312 
      struct tracepoint_func *________p1_0 = (__u_0.__val);
      {
        #line 312 
        bool __warned;
        #line 312 
        if (debug_lockdep_rcu_enabled() != 0) 
          #line 312 
          if (! __warned) {
            #line 312 
            if (rcu_read_lock_sched_held() == 0) {
              #line 312 
              __warned = (_Bool)1;
              #line 312 
              lockdep_rcu_suspicious((char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h",312,(char *)"suspicious rcu_dereference_check() usage");
            }
          }
      }
      #line 312 
      struct tracepoint_func *tmp_11 = ________p1_0;
    }
    #line 312 
    rcu_read_unlock_sched_notrace();
  }
  #line 314 
  return;
}

#line 336 
#line 336 
struct tracepoint __tracepoint_fjes_stop_req_irq_post;
#line 336  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h"
__inline static void trace_fjes_stop_req_irq_post(struct fjes_hw *hw, int src_epid)
{
  #line 336 
  int pscr_ret___0;
  #line 336 
  if ((int)static_key_false(& __tracepoint_fjes_stop_req_irq_post.key) != 0) {
    #line 336 
    int pscr_ret__;
    #line 336 
    struct tracepoint_func *________p1;
    #line 336 
    struct tracepoint_func *it_func_ptr;
    #line 336 
    void *it_func;
    #line 336 
    void *__data;
    #line 336 
    int __idx = 0;
    {
      #line 336 
      void *__vpp_verify = (void *)0;
      #line 336 
      void *tmp = __vpp_verify;
    }
    #line 336 
    switch (4UL) {
      #line 336 
      int pfo_ret___0;
      #line 336 
      int pfo_ret___1;
      #line 336 
      int pfo_ret___2;
      #line 336 
      int pfo_ret__;
      #line 336 
      case (unsigned long)1: 
                             #line 336 
      ;
      #line 336 
      switch (4UL) {
        #line 336 
        case (unsigned long)1: 
                               #line 336 
        ;
        #line 337 
        ldv_inline_asm();
        #line 336 
        break;
        #line 336 
        case (unsigned long)2: 
                               #line 336 
        ;
        #line 337 
        ldv_inline_asm();
        #line 336 
        break;
        #line 336 
        case (unsigned long)4: 
                               #line 336 
        ;
        #line 337 
        ldv_inline_asm();
        #line 336 
        break;
        #line 336 
        case (unsigned long)8: 
                               #line 336 
        ;
        #line 337 
        ldv_inline_asm();
        #line 336 
        break;
        #line 336 
        default: 
                 #line 336 
        ;
        #line 336 
        __bad_percpu_size();
      }
      #line 336 
      pscr_ret__ = pfo_ret__;
      #line 336 
      break;
      #line 336 
      case (unsigned long)2: 
                             #line 336 
      ;
      #line 336 
      switch (4UL) {
        #line 336 
        case (unsigned long)1: 
                               #line 336 
        ;
        #line 337 
        ldv_inline_asm();
        #line 336 
        break;
        #line 336 
        case (unsigned long)2: 
                               #line 336 
        ;
        #line 337 
        ldv_inline_asm();
        #line 336 
        break;
        #line 336 
        case (unsigned long)4: 
                               #line 336 
        ;
        #line 337 
        ldv_inline_asm();
        #line 336 
        break;
        #line 336 
        case (unsigned long)8: 
                               #line 336 
        ;
        #line 337 
        ldv_inline_asm();
        #line 336 
        break;
        #line 336 
        default: 
                 #line 336 
        ;
        #line 336 
        __bad_percpu_size();
      }
      #line 336 
      pscr_ret__ = pfo_ret___0;
      #line 336 
      break;
      #line 336 
      case (unsigned long)4: 
                             #line 336 
      ;
      #line 336 
      switch (4UL) {
        #line 336 
        case (unsigned long)1: 
                               #line 336 
        ;
        #line 337 
        ldv_inline_asm();
        #line 336 
        break;
        #line 336 
        case (unsigned long)2: 
                               #line 336 
        ;
        #line 337 
        ldv_inline_asm();
        #line 336 
        break;
        #line 336 
        case (unsigned long)4: 
                               #line 336 
        ;
        #line 337 
        ldv_inline_asm();
        #line 336 
        break;
        #line 336 
        case (unsigned long)8: 
                               #line 336 
        ;
        #line 337 
        ldv_inline_asm();
        #line 336 
        break;
        #line 336 
        default: 
                 #line 336 
        ;
        #line 336 
        __bad_percpu_size();
      }
      #line 336 
      pscr_ret__ = pfo_ret___1;
      #line 336 
      break;
      #line 336 
      case (unsigned long)8: 
                             #line 336 
      ;
      #line 336 
      switch (4UL) {
        #line 336 
        case (unsigned long)1: 
                               #line 336 
        ;
        #line 337 
        ldv_inline_asm();
        #line 336 
        break;
        #line 336 
        case (unsigned long)2: 
                               #line 336 
        ;
        #line 337 
        ldv_inline_asm();
        #line 336 
        break;
        #line 336 
        case (unsigned long)4: 
                               #line 336 
        ;
        #line 337 
        ldv_inline_asm();
        #line 336 
        break;
        #line 336 
        case (unsigned long)8: 
                               #line 336 
        ;
        #line 337 
        ldv_inline_asm();
        #line 336 
        break;
        #line 336 
        default: 
                 #line 336 
        ;
        #line 336 
        __bad_percpu_size();
      }
      #line 336 
      pscr_ret__ = pfo_ret___2;
      #line 336 
      break;
      #line 336 
      default: 
               #line 336 
      ;
      #line 336 
      __bad_size_call_parameter();
      #line 336 
      break;
    }
    #line 336 
    if (cpumask_test_cpu(pscr_ret__,& __cpu_online_mask) == 0) 
                                                               #line 336 
                                                               return;
    {
      #line 336 
      int __ret_warn_on = 0;
      #line 336 
      if ((long)(__ret_warn_on != 0) != 0L) {
        #line 337 
        ldv_inline_asm();
        #line 338 
        ldv_inline_asm();
      }
      #line 336 
      long tmp_5 = (long)(__ret_warn_on != 0);
    }
    #line 336 
    __preempt_count_add(1);
    #line 337 
    ldv_inline_asm();
    {
      #line 337 
      union __anonunion___u_2266 __u;
      #line 336 
      __read_once_size((void *)(& __tracepoint_fjes_stop_req_irq_post.funcs),(void *)(& __u.__c),8);
      #line 336 
      ________p1 = (__u.__val);
      }
    #line 336 
    it_func_ptr = ________p1;
    #line 336 
    if (it_func_ptr != (struct tracepoint_func *)0) 
      #line 336 
      while (1) {
        #line 336 
        it_func = it_func_ptr->func;
        #line 336 
        __data = it_func_ptr->data;
        #line 336 
        (*((void (*)(void *, struct fjes_hw *, int ))it_func))(__data,hw,src_epid);
        #line 336 
        it_func_ptr ++;
        #line 337 
        ;
        #line 337 
        if (! (it_func_ptr->func != (void *)0)) 
                                                #line 336 
                                                break;
      }
    #line 338 
    ldv_inline_asm();
    #line 336 
    __preempt_count_sub(1);
  }
  {
    #line 336 
    void *__vpp_verify_0 = (void *)0;
    #line 336 
    void *tmp_13 = __vpp_verify_0;
  }
  #line 336 
  switch (4UL) {
    #line 336 
    int pfo_ret___3;
    #line 336 
    int pfo_ret___4;
    #line 336 
    int pfo_ret___5;
    #line 336 
    int pfo_ret___6;
    #line 336 
    case (unsigned long)1: 
                           #line 336 
    ;
    #line 336 
    switch (4UL) {
      #line 336 
      case (unsigned long)1: 
                             #line 336 
      ;
      #line 337 
      ldv_inline_asm();
      #line 336 
      break;
      #line 336 
      case (unsigned long)2: 
                             #line 336 
      ;
      #line 337 
      ldv_inline_asm();
      #line 336 
      break;
      #line 336 
      case (unsigned long)4: 
                             #line 336 
      ;
      #line 337 
      ldv_inline_asm();
      #line 336 
      break;
      #line 336 
      case (unsigned long)8: 
                             #line 336 
      ;
      #line 337 
      ldv_inline_asm();
      #line 336 
      break;
      #line 336 
      default: 
               #line 336 
      ;
      #line 336 
      __bad_percpu_size();
    }
    #line 336 
    pscr_ret___0 = pfo_ret___3;
    #line 336 
    break;
    #line 336 
    case (unsigned long)2: 
                           #line 336 
    ;
    #line 336 
    switch (4UL) {
      #line 336 
      case (unsigned long)1: 
                             #line 336 
      ;
      #line 337 
      ldv_inline_asm();
      #line 336 
      break;
      #line 336 
      case (unsigned long)2: 
                             #line 336 
      ;
      #line 337 
      ldv_inline_asm();
      #line 336 
      break;
      #line 336 
      case (unsigned long)4: 
                             #line 336 
      ;
      #line 337 
      ldv_inline_asm();
      #line 336 
      break;
      #line 336 
      case (unsigned long)8: 
                             #line 336 
      ;
      #line 337 
      ldv_inline_asm();
      #line 336 
      break;
      #line 336 
      default: 
               #line 336 
      ;
      #line 336 
      __bad_percpu_size();
    }
    #line 336 
    pscr_ret___0 = pfo_ret___4;
    #line 336 
    break;
    #line 336 
    case (unsigned long)4: 
                           #line 336 
    ;
    #line 336 
    switch (4UL) {
      #line 336 
      case (unsigned long)1: 
                             #line 336 
      ;
      #line 337 
      ldv_inline_asm();
      #line 336 
      break;
      #line 336 
      case (unsigned long)2: 
                             #line 336 
      ;
      #line 337 
      ldv_inline_asm();
      #line 336 
      break;
      #line 336 
      case (unsigned long)4: 
                             #line 336 
      ;
      #line 337 
      ldv_inline_asm();
      #line 336 
      break;
      #line 336 
      case (unsigned long)8: 
                             #line 336 
      ;
      #line 337 
      ldv_inline_asm();
      #line 336 
      break;
      #line 336 
      default: 
               #line 336 
      ;
      #line 336 
      __bad_percpu_size();
    }
    #line 336 
    pscr_ret___0 = pfo_ret___5;
    #line 336 
    break;
    #line 336 
    case (unsigned long)8: 
                           #line 336 
    ;
    #line 336 
    switch (4UL) {
      #line 336 
      case (unsigned long)1: 
                             #line 336 
      ;
      #line 337 
      ldv_inline_asm();
      #line 336 
      break;
      #line 336 
      case (unsigned long)2: 
                             #line 336 
      ;
      #line 337 
      ldv_inline_asm();
      #line 336 
      break;
      #line 336 
      case (unsigned long)4: 
                             #line 336 
      ;
      #line 337 
      ldv_inline_asm();
      #line 336 
      break;
      #line 336 
      case (unsigned long)8: 
                             #line 336 
      ;
      #line 337 
      ldv_inline_asm();
      #line 336 
      break;
      #line 336 
      default: 
               #line 336 
      ;
      #line 336 
      __bad_percpu_size();
    }
    #line 336 
    pscr_ret___0 = pfo_ret___6;
    #line 336 
    break;
    #line 336 
    default: 
             #line 336 
    ;
    #line 336 
    __bad_size_call_parameter();
    #line 336 
    break;
  }
  #line 336 
  if (cpumask_test_cpu(pscr_ret___0,& __cpu_online_mask) != 0) {
    #line 336 
    rcu_read_lock_sched_notrace();
    {
      #line 337 
      union __anonunion___u_2268 __u_0;
      #line 336 
      __read_once_size((void *)(& __tracepoint_fjes_stop_req_irq_post.funcs),(void *)(& __u_0.__c),8);
      #line 336 
      struct tracepoint_func *________p1_0 = (__u_0.__val);
      {
        #line 336 
        bool __warned;
        #line 336 
        if (debug_lockdep_rcu_enabled() != 0) 
          #line 336 
          if (! __warned) {
            #line 336 
            if (rcu_read_lock_sched_held() == 0) {
              #line 336 
              __warned = (_Bool)1;
              #line 336 
              lockdep_rcu_suspicious((char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h",336,(char *)"suspicious rcu_dereference_check() usage");
            }
          }
      }
      #line 336 
      struct tracepoint_func *tmp_11 = ________p1_0;
    }
    #line 336 
    rcu_read_unlock_sched_notrace();
  }
  #line 338 
  return;
}

#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_main.c"
char fjes_driver_name[5U] = {(char)'f', (char)'j', (char)'e', (char)'s'};
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_main.c"
char fjes_driver_version[4U] = {(char)'1'};
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_main.c"
static char fjes_driver_string[46U] = {(char)'F', (char)'U', (char)'J', (char)'I', (char)'T', (char)'S', (char)'U', (char)' ', (char)'E', (char)'x', (char)'t', (char)'e', (char)'n', (char)'d', (char)'e', (char)'d', (char)' ', (char)'S', (char)'o', (char)'c', (char)'k', (char)'e', (char)'t', (char)' ', (char)'N', (char)'e', (char)'t', (char)'w', (char)'o', (char)'r', (char)'k', (char)' ', (char)'D', (char)'e', (char)'v', (char)'i', (char)'c', (char)'e', (char)' ', (char)'D', (char)'r', (char)'i', (char)'v', (char)'e', (char)'r'};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_main.c"
static char fjes_copyright[35U] = {(char)'C', (char)'o', (char)'p', (char)'y', (char)'r', (char)'i', (char)'g', (char)'h', (char)'t', (char)' ', (char)'(', (char)'c', (char)')', (char)' ', (char)'2', (char)'0', (char)'1', (char)'5', (char)' ', (char)'F', (char)'U', (char)'J', (char)'I', (char)'T', (char)'S', (char)'U', (char)' ', (char)'L', (char)'I', (char)'M', (char)'I', (char)'T', (char)'E', (char)'D'};
#line 35 
#line 217 
static int fjes_request_irq(struct fjes_adapter *adapter);
#line 36 
#line 241 
static void fjes_free_irq(struct fjes_adapter *adapter);
#line 38 
#line 268 
static int fjes_open(struct net_device *netdev);
#line 39 
#line 309 
static int fjes_close(struct net_device *netdev);
#line 40 
#line 354 
static int fjes_setup_resources(struct fjes_adapter *adapter);
#line 41 
#line 432 
static void fjes_free_resources(struct fjes_adapter *adapter);
#line 42 
#line 626 
static netdev_tx_t fjes_xmit_frame(struct sk_buff *skb, struct net_device *netdev);
#line 43 
#line 555 
static void fjes_raise_intr_rxdata_task(struct work_struct *work);
#line 44 
#line 488 
static void fjes_tx_stall_task(struct work_struct *work);
#line 45 
#line 544 
static void fjes_force_close_task(struct work_struct *work);
#line 46 
#line 1005 
static irqreturn_t fjes_intr(int irq, void *data);
#line 47 
#line 806 
static void fjes_get_stats64(struct net_device *netdev, struct rtnl_link_stats64 *stats);
#line 48 
#line 813 
static int fjes_change_mtu(struct net_device *netdev, int new_mtu);
#line 49 
#line 882 
static int fjes_vlan_rx_add_vid(struct net_device *netdev, __be16 proto, u16 vid);
#line 50 
#line 902 
static int fjes_vlan_rx_kill_vid(struct net_device *netdev, __be16 proto, u16 vid);
#line 51 
#line 798 
static void fjes_tx_retry(struct net_device *netdev);
#line 53 
#line 150 
static int fjes_acpi_add(struct acpi_device *device);
#line 54 
#line 177 
static int fjes_acpi_remove(struct acpi_device *device);
#line 55 
#line 188 
static acpi_status fjes_get_acpi_resource(struct acpi_resource *acpi_res, void *data);
#line 57 
#line 1208 
static int fjes_probe(struct platform_device *plat_dev);
#line 58 
#line 1303 
static int fjes_remove(struct platform_device *plat_dev);
#line 60 
#line 1331 
static int fjes_sw_init(struct fjes_adapter *adapter);
#line 61 
#line 1341 
static void fjes_netdev_setup(struct net_device *netdev);
#line 62 
#line 1354 
static void fjes_irq_watch_task(struct work_struct *work);
#line 63 
#line 1374 
static void fjes_watch_unshare_task(struct work_struct *work);
#line 64 
#line 1098 
static void fjes_rx_irq(struct fjes_adapter *adapter, int src_epid);
#line 65 
#line 1108 
static int fjes_poll(struct napi_struct *napi, int budget);
#line 67  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_main.c"
static struct acpi_device_id fjes_acpi_ids[2U] = {{.id = {(unsigned char)'P', (unsigned char)'N', (unsigned char)'P', (unsigned char)'0', (unsigned char)'C', (unsigned char)'0', (unsigned char)'2'}}};
#line 71  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_main.c"
struct acpi_device_id __mod_acpi__fjes_acpi_ids_device_table[2U];
#line 73  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_main.c"
static struct acpi_driver fjes_acpi_driver = {.name = {(char)'f', (char)'j', (char)'e', (char)'s'}, .class = {(char)'f', (char)'j', (char)'e', (char)'s'}, .ids = (struct acpi_device_id *)(& fjes_acpi_ids), .ops = {.add = & fjes_acpi_add, .remove = & fjes_acpi_remove}, .owner = & __this_module};
#line 84  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_main.c"
static struct platform_driver fjes_driver = {.probe = & fjes_probe, .remove = & fjes_remove, .driver = {.name = (char *)"fjes"}};
#line 92  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_main.c"
static struct resource fjes_resource[2U] = {{.flags = 512UL}, {.flags = 1024UL}};
#line 105  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_main.c"
static bool is_extended_socket_device(struct acpi_device *device)
{
  #line 108 
  char str_buf[17U];
  #line 109 
  union acpi_object *str;
  #line 110 
  acpi_status status;
  #line 111 
  int result;
  #line 107 
  struct acpi_buffer buffer = {.length = 18446744073709551615ULL, .pointer = (void *)0};
  #line 113 
  status = acpi_evaluate_object(device->handle,(char *)"_STR",(struct acpi_object_list *)0,& buffer);
  #line 114 
  if (status != 0U) 
                    #line 115 
                    return (_Bool)0;
  #line 117 
  str = (union acpi_object *)buffer.pointer;
  #line 118 
  result = utf16s_to_utf8s((wchar_t *)str->string.pointer,(int)str->string.length,(enum utf16_endian)UTF16_LITTLE_ENDIAN,(u8 *)(& str_buf),16);
  #line 121 
  str_buf[result] = (char)0;
  #line 123 
  if (cif_strncmp((char *)"Extended Socket",(char *)(& str_buf),
                    cif_strlen((char *)"Extended Socket")) != 0) {
    #line 124 
    kfree(buffer.pointer);
    #line 125 
    return (_Bool)0;
  }
  #line 127 
  kfree(buffer.pointer);
  #line 129 
  return (_Bool)1;
}

#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_main.c"
static int acpi_check_extended_socket_status(struct acpi_device *device)
{
  #line 134 
  unsigned long long sta;
  #line 135 
  acpi_status status;
  #line 137 
  status = acpi_evaluate_integer(device->handle,(char *)"_STA",(struct acpi_object_list *)0,& sta);
  #line 138 
  if (status != 0U) 
                    #line 139 
                    return -19;
  #line 141 
  if ((((sta & 1ULL) == 0ULL || (sta & 2ULL) == 0ULL) || (sta & 4ULL) == 0ULL) || (sta & 8ULL) == 0ULL) 
    #line 145 
    return -19;
  #line 147 
  return 0;
}

#line 150  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_main.c"
static int fjes_acpi_add(struct acpi_device *device)
{
  #line 152 
  struct platform_device *plat_dev;
  #line 153 
  acpi_status status;
  #line 155 
  if (! is_extended_socket_device(device)) 
                                           #line 156 
                                           return -19;
  #line 158 
  if (acpi_check_extended_socket_status(device) != 0) 
                                                      #line 159 
                                                      return -19;
  #line 161 
  status = acpi_walk_resources(device->handle,(char *)"_CRS",& fjes_get_acpi_resource,(void *)(& fjes_resource));
  #line 163 
  if (status != 0U) 
                    #line 164 
                    return -19;
  #line 167 
  plat_dev = platform_device_register_simple((char *)"fjes",0,(struct resource *)(& fjes_resource),2U);
  #line 169 
  if ((int)IS_ERR((void *)plat_dev) != 0) {
    #line 170 
    return (int)PTR_ERR((void *)plat_dev);
  }
  #line 172 
  device->driver_data = (void *)plat_dev;
  #line 174 
  return 0;
}

#line 177  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_main.c"
static int fjes_acpi_remove(struct acpi_device *device)
{
  #line 179 
  struct platform_device *plat_dev;
  #line 181 
  plat_dev = (struct platform_device *)acpi_driver_data(device);
  #line 182 
  platform_device_unregister(plat_dev);
  #line 184 
  return 0;
}

#line 188  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_main.c"
static acpi_status fjes_get_acpi_resource(struct acpi_resource *acpi_res, void *data)
{
  #line 190 
  struct acpi_resource_address32 *addr;
  #line 191 
  struct acpi_resource_irq *irq;
  #line 192 
  struct resource *res = (struct resource *)data;
  #line 194 
  switch (acpi_res->type) {
    #line 195 
    case (u32)12: 
                  #line 195 
    ;
    #line 196 
    addr = & acpi_res->data.address32;
    #line 197 
    res->start = (unsigned long long)addr->address.minimum;
    #line 198 
    res->end = (unsigned long long)((addr->address.minimum + addr->address.address_length) + 4294967295U);
    #line 200 
    break;
    #line 202 
    case (u32)0: 
                 #line 202 
    ;
    #line 203 
    irq = & acpi_res->data.irq;
    #line 204 
    if ((unsigned int)irq->interrupt_count != 1U) 
                                                  #line 205 
                                                  return 1U;
    #line 206 
    (res + 1U)->start = (unsigned long long)irq->interrupts[0];
    #line 207 
    (res + 1U)->end = (unsigned long long)irq->interrupts[0];
    #line 208 
    break;
    #line 210 
    default: 
             #line 210 
    ;
    #line 211 
    break;
  }
  #line 214 
  return 0U;
}

#line 217  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_main.c"
static int fjes_request_irq(struct fjes_adapter *adapter)
{
  #line 219 
  struct net_device *netdev = adapter->netdev;
  #line 220 
  int result = -1;
  #line 222 
  adapter->interrupt_watch_enable = (_Bool)1;
  #line 223 
  if (! test_bit(0L,
               (unsigned long *)(& adapter->interrupt_watch_task.work.data))) 
    #line 224 
    cif_queue_delayed_work(adapter->control_wq,& adapter->interrupt_watch_task,250UL);
  #line 229 
  if (! adapter->irq_registered) {
    #line 230 
    result = cif_request_irq((unsigned int)adapter->hw.hw_res.irq,& fjes_intr,128UL,(char *)(& netdev->name),(void *)adapter);
    #line 232 
    if (result != 0) 
                     #line 233 
                     adapter->irq_registered = (_Bool)0; else 
                                                              #line 235 
                                                              adapter->irq_registered = (_Bool)1;
  }
  #line 238 
  return result;
}

#line 241  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_main.c"
static void fjes_free_irq(struct fjes_adapter *adapter)
{
  #line 243 
  struct fjes_hw *hw = & adapter->hw;
  #line 245 
  adapter->interrupt_watch_enable = (_Bool)0;
  #line 246 
  cancel_delayed_work_sync(& adapter->interrupt_watch_task);
  #line 248 
  fjes_hw_set_irqmask(hw,(enum REG_ICTL_MASK)REG_ICTL_MASK_ALL,(_Bool)1);
  #line 250 
  if ((int)adapter->irq_registered != 0) {
    #line 251 
    cif_free_irq((unsigned int)adapter->hw.hw_res.irq,(void *)adapter);
    #line 252 
    adapter->irq_registered = (_Bool)0;
  }
  #line 254 
  return;
}

#line 256  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_main.c"
static struct net_device_ops fjes_netdev_ops = {.ndo_open = & fjes_open, .ndo_stop = & fjes_close, .ndo_start_xmit = & fjes_xmit_frame, .ndo_change_mtu = & fjes_change_mtu, .ndo_tx_timeout = & fjes_tx_retry, .ndo_get_stats64 = & fjes_get_stats64, .ndo_vlan_rx_add_vid = & fjes_vlan_rx_add_vid, .ndo_vlan_rx_kill_vid = & fjes_vlan_rx_kill_vid};
#line 268  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_main.c"
static int fjes_open(struct net_device *netdev)
{
  #line 272 
  int result;
  #line 270 
  struct fjes_adapter *adapter = netdev_priv(netdev);
  #line 271 
  struct fjes_hw *hw = & adapter->hw;
  #line 274 
  if ((int)adapter->open_guard != 0) 
                                     #line 275 
                                     return -6;
  #line 277 
  result = fjes_setup_resources(adapter);
  #line 278 
  if (result != 0) 
                   #line 279 
                   goto err_setup_res;
  #line 281 
  hw->txrx_stop_req_bit = 0UL;
  #line 282 
  hw->epstop_req_bit = 0UL;
  #line 284 
  napi_enable(& adapter->napi);
  #line 286 
  fjes_hw_capture_interrupt_status(hw);
  #line 288 
  result = fjes_request_irq(adapter);
  #line 289 
  if (result != 0) 
                   #line 290 
                   goto err_req_irq;
  #line 292 
  fjes_hw_set_irqmask(hw,(enum REG_ICTL_MASK)REG_ICTL_MASK_ALL,(_Bool)0);
  #line 294 
  netif_tx_start_all_queues(netdev);
  #line 295 
  netif_carrier_on(netdev);
  #line 297 
  return 0;
  #line 299 
  err_req_irq: 
               #line 299 
  ;
  #line 300 
  fjes_free_irq(adapter);
  #line 301 
  napi_disable(& adapter->napi);
  #line 303 
  err_setup_res: 
                 #line 303 
  ;
  #line 304 
  fjes_free_resources(adapter);
  #line 305 
  return result;
}

#line 309  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_main.c"
static int fjes_close(struct net_device *netdev)
{
  #line 313 
  unsigned long flags;
  #line 314 
  int epidx;
  #line 311 
  struct fjes_adapter *adapter = netdev_priv(netdev);
  #line 312 
  struct fjes_hw *hw = & adapter->hw;
  #line 316 
  netif_tx_stop_all_queues(netdev);
  #line 317 
  netif_carrier_off(netdev);
  #line 319 
  fjes_hw_raise_epstop(hw);
  #line 321 
  napi_disable(& adapter->napi);
  #line 323 
  cif___ldv_spin_lock_rx_status_lock_of_fjes_hw(& hw->rx_status_lock);
  #line 324 
  epidx = 0;
  #line 324 
  while (hw->max_epid > epidx) {
    {
      #line 325 
      if (hw->my_epid == epidx) 
                                #line 326 
                                goto __Cont;
      #line 328 
      if (fjes_hw_get_partner_ep_status(hw,epidx) == (unsigned int)EP_PARTNER_SHARED) 
        #line 331 
        ((adapter->hw.ep_shm_info + (unsigned long)epidx)->tx.info)->v1i.rx_status = (unsigned short)((unsigned int)((adapter->hw.ep_shm_info + (unsigned long)epidx)->tx.info)->v1i.rx_status & 65531U);
    }
    #line 324 
    __Cont: 
            #line 324 
    epidx ++;
  }
  #line 334 
  cif_spin_unlock_irqrestore_rx_status_lock_of_fjes_hw(& hw->rx_status_lock,flags);
  #line 336 
  fjes_free_irq(adapter);
  #line 338 
  cancel_delayed_work_sync(& adapter->interrupt_watch_task);
  #line 339 
  cancel_work_sync(& adapter->unshare_watch_task);
  #line 340 
  adapter->unshare_watch_bitmask = 0UL;
  #line 341 
  cancel_work_sync(& adapter->raise_intr_rxdata_task);
  #line 342 
  cancel_work_sync(& adapter->tx_stall_task);
  #line 344 
  cancel_work_sync(& hw->update_zone_task);
  #line 345 
  cancel_work_sync(& hw->epstop_task);
  #line 347 
  fjes_hw_wait_epstop(hw);
  #line 349 
  fjes_free_resources(adapter);
  #line 351 
  return 0;
}

#line 354  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_main.c"
static int fjes_setup_resources(struct fjes_adapter *adapter)
{
  #line 357 
  struct ep_share_mem_info *buf_pair;
  #line 359 
  unsigned long flags;
  #line 360 
  int result;
  #line 361 
  int epidx;
  #line 356 
  struct net_device *netdev = adapter->netdev;
  #line 358 
  struct fjes_hw *hw = & adapter->hw;
  #line 363 
  cif_mutex_lock_lock_of_fjes_hw_info_0(& hw->hw_info.lock);
  #line 364 
  result = fjes_hw_request_info(hw);
  #line 365 
  switch (result) {
    #line 366 
    case 0: 
            #line 366 
    ;
    #line 367 
    epidx = 0;
    #line 367 
    while (hw->max_epid > epidx) {
      #line 368 
      (hw->ep_shm_info + (unsigned long)epidx)->es_status = (hw->hw_info.res_buf)->info.info[epidx].es_status;
      #line 370 
      (hw->ep_shm_info + (unsigned long)epidx)->zone = (hw->hw_info.res_buf)->info.info[epidx].zone;
      #line 367 
      epidx ++;
    }
    #line 373 
    break;
    #line 374 
    default: 
             #line 374 
    ;
    #line 375 
    case -42: 
              #line 375 
    ;
    #line 376 
    case -16: 
              #line 376 
    ;
    #line 377 
    adapter->force_reset = (_Bool)1;
    #line 379 
    cif_mutex_unlock_lock_of_fjes_hw_info_0(& hw->hw_info.lock);
    #line 380 
    return result;
  }
  #line 382 
  cif_mutex_unlock_lock_of_fjes_hw_info_0(& hw->hw_info.lock);
  #line 384 
  epidx = 0;
  #line 384 
  while (hw->max_epid > epidx) {
    #line 385 
    if (hw->my_epid != epidx && (unsigned int)(hw->ep_shm_info + (unsigned long)epidx)->es_status == 1U) {
      #line 388 
      fjes_hw_raise_interrupt(hw,epidx,(enum REG_ICTL_MASK)REG_ICTL_MASK_INFO_UPDATE);
      #line 391 
      ((hw->ep_shm_info + (unsigned long)epidx)->ep_stats.send_intr_zoneupdate) ++;
    }
    #line 384 
    epidx ++;
  }
  #line 395 
  msleep((unsigned int)(hw->max_epid * 300));
  #line 397 
  epidx = 0;
  #line 397 
  while (hw->max_epid > epidx) {
    {
      #line 398 
      if (hw->my_epid == epidx) 
                                #line 399 
                                goto __Cont;
      #line 401 
      buf_pair = hw->ep_shm_info + (unsigned long)epidx;
      #line 403 
      cif___ldv_spin_lock_rx_status_lock_of_fjes_hw(& hw->rx_status_lock);
      #line 404 
      fjes_hw_setup_epbuf(& buf_pair->tx,netdev->dev_addr,netdev->mtu);
      #line 406 
      cif_spin_unlock_irqrestore_rx_status_lock_of_fjes_hw(& hw->rx_status_lock,flags);
      #line 408 
      if ((int)fjes_hw_epid_is_same_zone(hw,epidx) != 0) {
        #line 409 
        cif_mutex_lock_lock_of_fjes_hw_info_0(& hw->hw_info.lock);
        #line 410 
        result = fjes_hw_register_buff_addr(hw,epidx,buf_pair);
        #line 412 
        cif_mutex_unlock_lock_of_fjes_hw_info_0(& hw->hw_info.lock);
        #line 414 
        switch (result) {
          #line 415 
          case 0: 
                  #line 415 
          ;
          #line 416 
          break;
          #line 417 
          case -42: 
                    #line 417 
          ;
          #line 418 
          case -16: 
                    #line 418 
          ;
          #line 419 
          default: 
                   #line 419 
          ;
          #line 420 
          adapter->force_reset = (_Bool)1;
          #line 421 
          return result;
        }
        #line 425 
        ((hw->ep_shm_info + (unsigned long)epidx)->ep_stats.com_regist_buf_exec) ++;
      }
    }
    #line 397 
    __Cont: 
            #line 397 
    epidx ++;
  }
  #line 429 
  return 0;
}

#line 432  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_main.c"
static void fjes_free_resources(struct fjes_adapter *adapter)
{
  #line 435 
  struct fjes_device_command_param param;
  #line 436 
  struct ep_share_mem_info *buf_pair;
  #line 439 
  unsigned long flags;
  #line 440 
  int result;
  #line 441 
  int epidx;
  #line 434 
  struct net_device *netdev = adapter->netdev;
  #line 437 
  struct fjes_hw *hw = & adapter->hw;
  #line 438 
  bool reset_flag = (_Bool)0;
  #line 443 
  epidx = 0;
  #line 443 
  while (hw->max_epid > epidx) {
    #line 444 
    if (hw->my_epid == epidx) 
                              #line 445 
                              goto __Cont;
    #line 447 
    cif_mutex_lock_lock_of_fjes_hw_info_0(& hw->hw_info.lock);
    #line 448 
    result = fjes_hw_unregister_buff_addr(hw,epidx);
    #line 449 
    cif_mutex_unlock_lock_of_fjes_hw_info_0(& hw->hw_info.lock);
    #line 451 
    ((hw->ep_shm_info + (unsigned long)epidx)->ep_stats.com_unregist_buf_exec) ++;
    #line 453 
    if (result != 0) 
                     #line 454 
                     reset_flag = (_Bool)1;
    #line 456 
    buf_pair = hw->ep_shm_info + (unsigned long)epidx;
    #line 458 
    cif___ldv_spin_lock_rx_status_lock_of_fjes_hw(& hw->rx_status_lock);
    #line 459 
    fjes_hw_setup_epbuf(& buf_pair->tx,netdev->dev_addr,netdev->mtu);
    #line 461 
    cif_spin_unlock_irqrestore_rx_status_lock_of_fjes_hw(& hw->rx_status_lock,flags);
    #line 463 
    cif_clear_bit((long)epidx,& hw->txrx_stop_req_bit);
    #line 443 
    __Cont: 
            #line 443 
    epidx ++;
  }
  #line 466 
  if ((int)reset_flag != 0 || (int)adapter->force_reset != 0) {
    #line 467 
    result = fjes_hw_reset(hw);
    #line 469 
    adapter->force_reset = (_Bool)0;
    #line 471 
    if (result != 0) 
                     #line 472 
                     adapter->open_guard = (_Bool)1;
    #line 474 
    hw->hw_info.buffer_share_bit = 0UL;
    #line 476 
    memset((void *)(& param),0,40UL);
    #line 478 
    param.req_len = (unsigned int)hw->hw_info.req_buf_size;
    #line 479 
    param.req_start = (phys_addr_t)__phys_addr((unsigned long)hw->hw_info.req_buf);
    #line 480 
    param.res_len = (unsigned int)hw->hw_info.res_buf_size;
    #line 481 
    param.res_start = (phys_addr_t)__phys_addr((unsigned long)hw->hw_info.res_buf);
    #line 482 
    param.share_start = (phys_addr_t)__phys_addr((unsigned long)(& (hw->hw_info.share)->ep_status));
    #line 484 
    fjes_hw_init_command_registers(hw,& param);
  }
  #line 486 
  return;
}

#line 488  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_main.c"
static void fjes_tx_stall_task(struct work_struct *work)
{
  #line 490 
  void *__mptr;
  #line 494 
  int all_queue_available;
  #line 494 
  int sendable;
  #line 495 
  enum ep_partner_status pstatus;
  #line 496 
  int max_epid;
  #line 496 
  int my_epid;
  #line 496 
  int epid;
  #line 497 
  union ep_buffer_info *info;
  #line 498 
  int i;
  #line 490 
  __mptr = (void *)work;
  #line 490 
  struct fjes_adapter *adapter = ((struct fjes_adapter *)(__mptr + 18446744073709550880U));
  #line 492 
  struct net_device *netdev = adapter->netdev;
  #line 493 
  struct fjes_hw *hw = & adapter->hw;
  #line 500 
  ;
  #line 500 
  if (jiffies - dev_trans_start(netdev) > 2500UL) {
    #line 502 
    netif_wake_queue(netdev);
    #line 503 
    return;
  }
  #line 506 
  my_epid = hw->my_epid;
  #line 507 
  max_epid = hw->max_epid;
  #line 509 
  i = 0;
  #line 509 
  while (i <= 4) {
    #line 510 
    all_queue_available = 1;
    #line 512 
    epid = 0;
    #line 512 
    while (epid < max_epid) {
      #line 513 
      if (my_epid == epid) 
                           #line 514 
                           goto __Cont;
      #line 516 
      pstatus = fjes_hw_get_partner_ep_status(hw,epid);
      #line 517 
      sendable = pstatus == (unsigned int)EP_PARTNER_SHARED;
      #line 518 
      if (sendable == 0) 
                         #line 519 
                         goto __Cont;
      #line 521 
      info = (adapter->hw.ep_shm_info + (unsigned long)epid)->tx.info;
      #line 523 
      if (((int)info->v1i.rx_status & 8) == 0) 
                                               #line 524 
                                               return;
      #line 526 
      if (((info->v1i.tail - info->v1i.head) + (unsigned int)info->v1i.count_max) % (unsigned int)info->v1i.count_max == 0U) {
        #line 528 
        all_queue_available = 0;
        #line 529 
        break;
      }
      #line 512 
      __Cont: 
              #line 512 
      epid ++;
    }
    #line 533 
    if (all_queue_available != 0) {
      #line 534 
      netif_wake_queue(netdev);
      #line 535 
      return;
    }
    #line 509 
    i ++;
  }
  #line 539 
  usleep_range(50UL,100UL);
  #line 541 
  cif_queue_work(adapter->txrx_wq,& adapter->tx_stall_task);
  #line 542 
  return;
}

#line 544  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_main.c"
static void fjes_force_close_task(struct work_struct *work)
{
  #line 546 
  void *__mptr;
  #line 546 
  __mptr = (void *)work;
  #line 546 
  struct fjes_adapter *adapter = ((struct fjes_adapter *)(__mptr + 18446744073709550984U));
  #line 548 
  struct net_device *netdev = adapter->netdev;
  #line 550 
  rtnl_lock();
  #line 551 
  dev_close(netdev);
  #line 552 
  rtnl_unlock();
  #line 553 
  return;
}

#line 555  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_main.c"
static void fjes_raise_intr_rxdata_task(struct work_struct *work)
{
  #line 557 
  void *__mptr;
  #line 560 
  enum ep_partner_status pstatus;
  #line 561 
  int max_epid;
  #line 561 
  int my_epid;
  #line 561 
  int epid;
  #line 557 
  __mptr = (void *)work;
  #line 557 
  struct fjes_adapter *adapter = ((struct fjes_adapter *)(__mptr + 18446744073709550800U));
  #line 559 
  struct fjes_hw *hw = & adapter->hw;
  #line 563 
  my_epid = hw->my_epid;
  #line 564 
  max_epid = hw->max_epid;
  #line 566 
  epid = 0;
  #line 566 
  while (epid < max_epid) {
    #line 567 
    (hw->ep_shm_info + (unsigned long)epid)->tx_status_work = (unsigned short)0U;
    #line 566 
    epid ++;
  }
  #line 569 
  epid = 0;
  #line 569 
  while (epid < max_epid) {
    #line 570 
    if (epid == my_epid) 
                         #line 571 
                         goto __Cont;
    #line 573 
    pstatus = fjes_hw_get_partner_ep_status(hw,epid);
    #line 574 
    if (pstatus == (unsigned int)EP_PARTNER_SHARED) {
      #line 575 
      (hw->ep_shm_info + (unsigned long)epid)->tx_status_work = ((hw->ep_shm_info + (unsigned long)epid)->tx.info)->v1i.tx_status;
      #line 578 
      if ((unsigned int)(hw->ep_shm_info + (unsigned long)epid)->tx_status_work == 1U) 
        #line 580 
        ((hw->ep_shm_info + (unsigned long)epid)->tx.info)->v1i.tx_status = (unsigned short)0U;
    }
    #line 569 
    __Cont: 
            #line 569 
    epid ++;
  }
  #line 586 
  epid = 0;
  #line 586 
  while (epid < max_epid) {
    #line 587 
    if (epid == my_epid) 
                         #line 588 
                         goto __Cont_0;
    #line 590 
    pstatus = fjes_hw_get_partner_ep_status(hw,epid);
    #line 591 
    if (((unsigned int)(hw->ep_shm_info + (unsigned long)epid)->tx_status_work == 1U && pstatus == (unsigned int)EP_PARTNER_SHARED) && ((int)((hw->ep_shm_info + (unsigned long)epid)->rx.info)->v1i.rx_status & 4) == 0) {
      #line 596 
      fjes_hw_raise_interrupt(hw,epid,(enum REG_ICTL_MASK)REG_ICTL_MASK_RX_DATA);
      #line 598 
      ((hw->ep_shm_info + (unsigned long)epid)->ep_stats.send_intr_rx) ++;
    }
    #line 586 
    __Cont_0: 
              #line 586 
    epid ++;
  }
  #line 602 
  usleep_range(500UL,1000UL);
  #line 603 
  return;
}

#line 605  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_main.c"
static int fjes_tx_send(struct fjes_adapter *adapter, int dest, void *data, size_t len)
{
  #line 608 
  int retval;
  #line 610 
  retval = fjes_hw_epbuf_tx_pkt_send(& (adapter->hw.ep_shm_info + (unsigned long)dest)->tx,data,len);
  #line 612 
  if (retval != 0) 
                   #line 613 
                   return retval;
  #line 615 
  ((adapter->hw.ep_shm_info + (unsigned long)dest)->tx.info)->v1i.tx_status = (unsigned short)1U;
  #line 617 
  if (! test_bit(0L,(unsigned long *)(& adapter->raise_intr_rxdata_task.data))) 
    #line 618 
    cif_queue_work(adapter->txrx_wq,& adapter->raise_intr_rxdata_task);
  #line 621 
  retval = 0;
  #line 622 
  return retval;
}

#line 626  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_main.c"
static netdev_tx_t fjes_xmit_frame(struct sk_buff *skb, struct net_device *netdev)
{
  #line 631 
  int max_epid;
  #line 631 
  int my_epid;
  #line 631 
  int dest_epid;
  #line 632 
  enum ep_partner_status pstatus;
  #line 633 
  struct netdev_queue *cur_queue;
  #line 634 
  char shortpkt[18U];
  #line 635 
  bool is_multi;
  #line 635 
  bool vlan;
  #line 636 
  struct ethhdr *eth;
  #line 639 
  netdev_tx_t ret;
  #line 640 
  char *data;
  #line 641 
  int len;
  #line 628 
  struct fjes_adapter *adapter = netdev_priv(netdev);
  #line 629 
  struct fjes_hw *hw = & adapter->hw;
  #line 637 
  u16 queue_no = (unsigned short)0U;
  #line 638 
  u16 vlan_id = (unsigned short)0U;
  #line 643 
  ret = NETDEV_TX_OK;
  #line 644 
  is_multi = (_Bool)0;
  #line 645 
  cur_queue = netdev_get_tx_queue(netdev,(unsigned int)queue_no);
  #line 647 
  eth = (struct ethhdr *)skb->data;
  #line 648 
  my_epid = hw->my_epid;
  #line 650 
  vlan = (_Bool)(vlan_get_tag(skb,& vlan_id) == 0);
  #line 652 
  data = (char *)skb->data;
  #line 653 
  len = (int)skb->len;
  #line 655 
  if ((int)is_multicast_ether_addr((u8 *)(& eth->h_dest)) != 0) {
    #line 656 
    dest_epid = 0;
    #line 657 
    max_epid = hw->max_epid;
    #line 658 
    is_multi = (_Bool)1;
  }
  else {
    #line 659 
    if ((int)is_local_ether_addr((u8 *)(& eth->h_dest)) != 0) {
      #line 660 
      dest_epid = (int)eth->h_dest[5];
      #line 661 
      max_epid = dest_epid + 1;
      #line 663 
      if (! (((unsigned int)eth->h_dest[0] == 2U && (unsigned int)((((int)eth->h_dest[1] | (int)eth->h_dest[2]) | (int)eth->h_dest[3]) | (int)eth->h_dest[4]) == 0U) && hw->max_epid > dest_epid)) {
        #line 669 
        dest_epid = 0;
        #line 670 
        max_epid = 0;
        #line 671 
        ret = NETDEV_TX_OK;
        #line 673 
        (adapter->stats64.tx_packets) ++;
        #line 674 
        ((hw->ep_shm_info + (unsigned long)my_epid)->net_stats.tx_packets) ++;
        #line 675 
        adapter->stats64.tx_bytes += (unsigned long long)len;
        #line 676 
        (hw->ep_shm_info + (unsigned long)my_epid)->net_stats.tx_bytes += (unsigned long long)len;
      }
    }
    else {
      #line 679 
      dest_epid = 0;
      #line 680 
      max_epid = 0;
      #line 681 
      ret = NETDEV_TX_OK;
      #line 683 
      (adapter->stats64.tx_packets) ++;
      #line 684 
      ((hw->ep_shm_info + (unsigned long)my_epid)->net_stats.tx_packets) ++;
      #line 685 
      adapter->stats64.tx_bytes += (unsigned long long)len;
      #line 686 
      (hw->ep_shm_info + (unsigned long)my_epid)->net_stats.tx_bytes += (unsigned long long)len;
    }
  }
  #line 689 
  while (dest_epid < max_epid) {
    #line 690 
    if (my_epid == dest_epid) 
                              #line 691 
                              goto __Cont;
    #line 693 
    pstatus = fjes_hw_get_partner_ep_status(hw,dest_epid);
    #line 694 
    if (pstatus != (unsigned int)EP_PARTNER_SHARED) {
      #line 695 
      if (! is_multi) 
                      #line 697 
                      ((hw->ep_shm_info + (unsigned long)dest_epid)->ep_stats.tx_dropped_not_shared) ++;
      #line 698 
      ret = NETDEV_TX_OK;
    }
    else {
      #line 699 
      if (fjes_hw_check_epbuf_version(& (adapter->hw.ep_shm_info + (unsigned long)dest_epid)->rx,
                                    0U)) {
        #line 709 
        if (fjes_hw_check_mtu(& (adapter->hw.ep_shm_info + (unsigned long)dest_epid)->rx,
                          netdev->mtu)) 
          #line 720 
          if ((int)vlan != 0) {
            #line 721 
            if (fjes_hw_check_vlan_id(& (adapter->hw.ep_shm_info + (unsigned long)dest_epid)->rx,
                              (unsigned short)((int)vlan_id))) 
              #line 720 
              goto _LAND;
            else {
              #line 725 
              ((hw->ep_shm_info + (unsigned long)dest_epid)->ep_stats.tx_dropped_vlanid_mismatch) ++;
              #line 726 
              ret = NETDEV_TX_OK;
            }
          }
          else {
            #line 720 
            _LAND: {
                     #line 728 
                     if (len <= 17) {
                       #line 729 
                       memset((void *)(& shortpkt),0,18UL);
                       #line 730 
                       memcpy((void *)(& shortpkt),(void *)skb->data,(unsigned long)skb->len);
                       #line 731 
                       len = 18;
                       #line 732 
                       data = (char *)(& shortpkt);
                     }
                     #line 735 
                     if (adapter->tx_retry_count == 0U) {
                       #line 736 
                       adapter->tx_start_jiffies = jiffies;
                       #line 737 
                       adapter->tx_retry_count = 1U;
                     }
                     else 
                          #line 739 
                          (adapter->tx_retry_count) ++;
                     #line 742 
                     if (fjes_tx_send(adapter,dest_epid,(void *)data,(unsigned long)len) != 0) 
                       #line 743 
                       if ((int)is_multi != 0) 
                                               #line 744 
                                               ret = NETDEV_TX_OK;
                       else 
                         #line 746 
                         if ((long)jiffies - (long)adapter->tx_start_jiffies > 99L) {
                           #line 749 
                           (adapter->stats64.tx_fifo_errors) ++;
                           #line 751 
                           ((hw->ep_shm_info + (unsigned long)dest_epid)->net_stats.tx_fifo_errors) ++;
                           #line 752 
                           (adapter->stats64.tx_errors) ++;
                           #line 754 
                           ((hw->ep_shm_info + (unsigned long)dest_epid)->net_stats.tx_errors) ++;
                           #line 756 
                           ret = NETDEV_TX_OK;
                         }
                         else {
                           #line 758 
                           netif_trans_update(netdev);
                           #line 760 
                           ((hw->ep_shm_info + (unsigned long)dest_epid)->ep_stats.tx_buffer_full) ++;
                           #line 761 
                           netif_tx_stop_queue(cur_queue);
                           #line 763 
                           if (! test_bit(0L,(unsigned long *)(& adapter->tx_stall_task.data))) 
                             #line 764 
                             cif_queue_work(adapter->txrx_wq,& adapter->tx_stall_task);
                           #line 767 
                           ret = NETDEV_TX_BUSY;
                         }
                     else {
                       #line 770 
                       if (! is_multi) {
                         #line 771 
                         (adapter->stats64.tx_packets) ++;
                         #line 773 
                         ((hw->ep_shm_info + (unsigned long)dest_epid)->net_stats.tx_packets) ++;
                         #line 774 
                         adapter->stats64.tx_bytes += (unsigned long long)len;
                         #line 776 
                         (hw->ep_shm_info + (unsigned long)dest_epid)->net_stats.tx_bytes += (unsigned long long)len;
                       }
                       #line 779 
                       adapter->tx_retry_count = 0U;
                       #line 780 
                       ret = NETDEV_TX_OK;
                     }
                   }
          }
        else {
          #line 712 
          (adapter->stats64.tx_dropped) ++;
          #line 713 
          ((hw->ep_shm_info + (unsigned long)dest_epid)->net_stats.tx_dropped) ++;
          #line 714 
          (adapter->stats64.tx_errors) ++;
          #line 715 
          ((hw->ep_shm_info + (unsigned long)dest_epid)->net_stats.tx_errors) ++;
          #line 717 
          ((hw->ep_shm_info + (unsigned long)dest_epid)->ep_stats.tx_dropped_buf_size_mismatch) ++;
          #line 719 
          ret = NETDEV_TX_OK;
        }
      }
      else {
        #line 702 
        (adapter->stats64.tx_carrier_errors) ++;
        #line 704 
        ((hw->ep_shm_info + (unsigned long)dest_epid)->net_stats.tx_carrier_errors) ++;
        #line 706 
        ((hw->ep_shm_info + (unsigned long)dest_epid)->ep_stats.tx_dropped_ver_mismatch) ++;
        #line 708 
        ret = NETDEV_TX_OK;
      }
    }
    #line 689 
    __Cont: 
            #line 689 
    dest_epid ++;
  }
  #line 785 
  if (ret == (unsigned int)NETDEV_TX_OK) {
    #line 786 
    consume_skb(skb);
    #line 787 
    if ((int)is_multi != 0) {
      #line 788 
      (adapter->stats64.tx_packets) ++;
      #line 789 
      ((hw->ep_shm_info + (unsigned long)my_epid)->net_stats.tx_packets) ++;
      #line 790 
      (adapter->stats64.tx_bytes) ++;
      #line 791 
      (hw->ep_shm_info + (unsigned long)my_epid)->net_stats.tx_bytes += (unsigned long long)len;
    }
  }
  #line 795 
  return ret;
}

#line 798  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_main.c"
static void fjes_tx_retry(struct net_device *netdev)
{
  #line 800 
  struct netdev_queue *queue = netdev_get_tx_queue(netdev,0U);
  #line 802 
  netif_tx_wake_queue(queue);
  #line 803 
  return;
}

#line 806  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_main.c"
static void fjes_get_stats64(struct net_device *netdev, struct rtnl_link_stats64 *stats)
{
  #line 808 
  struct fjes_adapter *adapter = netdev_priv(netdev);
  #line 810 
  memcpy((void *)stats,(void *)(& adapter->stats64),192UL);
  #line 811 
  return;
}

#line 813  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_main.c"
static int fjes_change_mtu(struct net_device *netdev, int new_mtu)
{
  #line 818 
  unsigned long flags;
  #line 820 
  int idx;
  #line 820 
  int epidx;
  #line 815 
  struct fjes_adapter *adapter = netdev_priv(netdev);
  #line 816 
  bool running = netif_running(netdev);
  #line 817 
  struct fjes_hw *hw = & adapter->hw;
  #line 819 
  int ret = -22;
  #line 822 
  idx = 0;
  #line 822 
  while (fjes_support_mtu[idx] != 0U) {
    #line 823 
    if (fjes_support_mtu[idx] >= (unsigned int)new_mtu) {
      #line 824 
      new_mtu = (int)fjes_support_mtu[idx];
      #line 825 
      if (netdev->mtu == (unsigned int)new_mtu) 
                                                #line 826 
                                                return 0;
      #line 828 
      ret = 0;
      #line 829 
      break;
    }
    #line 822 
    idx ++;
  }
  #line 833 
  if (ret != 0) 
                #line 834 
                return ret;
  #line 836 
  if ((int)running != 0) {
    #line 837 
    cif___ldv_spin_lock_rx_status_lock_of_fjes_hw(& hw->rx_status_lock);
    #line 838 
    epidx = 0;
    #line 838 
    while (hw->max_epid > epidx) {
      #line 839 
      if (hw->my_epid == epidx) 
                                #line 840 
                                goto __Cont;
      #line 841 
      ((hw->ep_shm_info + (unsigned long)epidx)->tx.info)->v1i.rx_status = (unsigned short)((unsigned int)((hw->ep_shm_info + (unsigned long)epidx)->tx.info)->v1i.rx_status & 65527U);
      #line 838 
      __Cont: 
              #line 838 
      epidx ++;
    }
    #line 844 
    cif_spin_unlock_irqrestore_rx_status_lock_of_fjes_hw(& hw->rx_status_lock,flags);
    #line 846 
    netif_tx_stop_all_queues(netdev);
    #line 847 
    netif_carrier_off(netdev);
    #line 848 
    cancel_work_sync(& adapter->tx_stall_task);
    #line 849 
    napi_disable(& adapter->napi);
    #line 851 
    msleep(1000U);
    #line 853 
    netif_tx_stop_all_queues(netdev);
  }
  #line 856 
  netdev->mtu = (unsigned int)new_mtu;
  #line 858 
  if ((int)running != 0) {
    #line 859 
    epidx = 0;
    #line 859 
    while (hw->max_epid > epidx) {
      #line 860 
      if (hw->my_epid == epidx) 
                                #line 861 
                                goto __Cont_0;
      #line 863 
      cif___ldv_spin_lock_rx_status_lock_of_fjes_hw(& hw->rx_status_lock);
      #line 864 
      fjes_hw_setup_epbuf(& (hw->ep_shm_info + (unsigned long)epidx)->tx,netdev->dev_addr,netdev->mtu);
      #line 868 
      ((hw->ep_shm_info + (unsigned long)epidx)->tx.info)->v1i.rx_status = (unsigned short)((unsigned int)((hw->ep_shm_info + (unsigned long)epidx)->tx.info)->v1i.rx_status | 8U);
      #line 870 
      cif_spin_unlock_irqrestore_rx_status_lock_of_fjes_hw(& hw->rx_status_lock,flags);
      #line 859 
      __Cont_0: 
                #line 859 
      epidx ++;
    }
    #line 873 
    netif_tx_wake_all_queues(netdev);
    #line 874 
    netif_carrier_on(netdev);
    #line 875 
    napi_enable(& adapter->napi);
    #line 876 
    napi_schedule(& adapter->napi);
  }
  #line 879 
  return ret;
}

#line 882  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_main.c"
static int fjes_vlan_rx_add_vid(struct net_device *netdev, __be16 proto, u16 vid)
{
  #line 887 
  int epid;
  #line 899 
  int tmp_1;
  #line 885 
  struct fjes_adapter *adapter = netdev_priv(netdev);
  #line 886 
  bool ret = (_Bool)1;
  #line 889 
  epid = 0;
  #line 889 
  while (adapter->hw.max_epid > epid) {
    {
      #line 890 
      if (adapter->hw.my_epid == epid) 
                                       #line 891 
                                       goto __Cont;
      #line 893 
      if (! fjes_hw_check_vlan_id(& (adapter->hw.ep_shm_info + (unsigned long)epid)->tx,
                              (unsigned short)((int)vid))) 
        #line 895 
        ret = fjes_hw_set_vlan_id(& (adapter->hw.ep_shm_info + (unsigned long)epid)->tx,(unsigned short)((int)vid));
    }
    #line 889 
    __Cont: 
            #line 889 
    epid ++;
  }
  #line 899 
  if ((int)ret != 0) 
                     #line 899 
                     tmp_1 = 0; else 
                                     #line 899 
                                     tmp_1 = -28;
  #line 899 
  return tmp_1;
}

#line 902  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_main.c"
static int fjes_vlan_rx_kill_vid(struct net_device *netdev, __be16 proto, u16 vid)
{
  #line 906 
  int epid;
  #line 905 
  struct fjes_adapter *adapter = netdev_priv(netdev);
  #line 908 
  epid = 0;
  #line 908 
  while (adapter->hw.max_epid > epid) {
    #line 909 
    if (adapter->hw.my_epid == epid) 
                                     #line 910 
                                     goto __Cont;
    #line 912 
    fjes_hw_del_vlan_id(& (adapter->hw.ep_shm_info + (unsigned long)epid)->tx,(unsigned short)((int)vid));
    #line 908 
    __Cont: 
            #line 908 
    epid ++;
  }
  #line 915 
  return 0;
}

#line 918  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_main.c"
static void fjes_txrx_stop_req_irq(struct fjes_adapter *adapter, int src_epid)
{
  #line 922 
  enum ep_partner_status status;
  #line 923 
  unsigned long flags;
  #line 921 
  struct fjes_hw *hw = & adapter->hw;
  #line 925 
  status = fjes_hw_get_partner_ep_status(hw,src_epid);
  #line 926 
  trace_fjes_txrx_stop_req_irq_pre(hw,src_epid,status);
  #line 927 
  switch ((unsigned int)status) {
    #line 928 
    case (unsigned int)0: 
                          #line 928 
    ;
    #line 929 
    case (unsigned int)3: 
                          #line 929 
    ;
    #line 930 
    default: 
             #line 930 
    ;
    #line 931 
    break;
    #line 932 
    case (unsigned int)2: 
                          #line 932 
    ;
    #line 933 
    if (hw->my_epid > src_epid) {
      #line 934 
      cif___ldv_spin_lock_rx_status_lock_of_fjes_hw(& hw->rx_status_lock);
      #line 935 
      ((hw->ep_shm_info + (unsigned long)src_epid)->tx.info)->v1i.rx_status = (unsigned short)((unsigned int)((hw->ep_shm_info + (unsigned long)src_epid)->tx.info)->v1i.rx_status | 1U);
      #line 937 
      cif_spin_unlock_irqrestore_rx_status_lock_of_fjes_hw(& hw->rx_status_lock,flags);
      #line 939 
      cif_clear_bit((long)src_epid,& hw->txrx_stop_req_bit);
      #line 940 
      cif_set_bit((long)src_epid,& adapter->unshare_watch_bitmask);
      #line 942 
      if (! test_bit(0L,(unsigned long *)(& adapter->unshare_watch_task.data))) 
        #line 943 
        cif_queue_work(adapter->control_wq,& adapter->unshare_watch_task);
    }
    #line 946 
    break;
    #line 947 
    case (unsigned int)1: 
                          #line 947 
    ;
    #line 948 
    if (((int)((hw->ep_shm_info + (unsigned long)src_epid)->rx.info)->v1i.rx_status & 2) != 0) {
      #line 950 
      cif_set_bit((long)src_epid,& hw->epstop_req_bit);
      #line 951 
      if (! test_bit(0L,(unsigned long *)(& hw->epstop_task.data))) 
                                                                    #line 952 
                                                                    cif_queue_work(adapter->control_wq,& hw->epstop_task);
    }
    #line 955 
    break;
  }
  #line 957 
  trace_fjes_txrx_stop_req_irq_post(hw,src_epid);
  #line 958 
  return;
}

#line 960  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_main.c"
static void fjes_stop_req_irq(struct fjes_adapter *adapter, int src_epid)
{
  #line 963 
  enum ep_partner_status status;
  #line 964 
  unsigned long flags;
  #line 962 
  struct fjes_hw *hw = & adapter->hw;
  #line 966 
  cif_set_bit((long)src_epid,& hw->hw_info.buffer_unshare_reserve_bit);
  #line 968 
  status = fjes_hw_get_partner_ep_status(hw,src_epid);
  #line 969 
  trace_fjes_stop_req_irq_pre(hw,src_epid,status);
  #line 970 
  switch ((unsigned int)status) {
    #line 971 
    case (unsigned int)2: 
                          #line 971 
    ;
    #line 972 
    cif___ldv_spin_lock_rx_status_lock_of_fjes_hw(& hw->rx_status_lock);
    #line 973 
    ((hw->ep_shm_info + (unsigned long)src_epid)->tx.info)->v1i.rx_status = (unsigned short)((unsigned int)((hw->ep_shm_info + (unsigned long)src_epid)->tx.info)->v1i.rx_status | 1U);
    #line 975 
    cif_spin_unlock_irqrestore_rx_status_lock_of_fjes_hw(& hw->rx_status_lock,flags);
    #line 976 
    cif_clear_bit((long)src_epid,& hw->txrx_stop_req_bit);
    #line 978 
    case (unsigned int)0: 
                          #line 978 
    ;
    #line 979 
    case (unsigned int)3: 
                          #line 979 
    ;
    #line 980 
    default: 
             #line 980 
    ;
    #line 981 
    cif_set_bit((long)src_epid,& adapter->unshare_watch_bitmask);
    #line 982 
    if (! test_bit(0L,(unsigned long *)(& adapter->unshare_watch_task.data))) 
      #line 983 
      cif_queue_work(adapter->control_wq,& adapter->unshare_watch_task);
    #line 985 
    break;
    #line 986 
    case (unsigned int)1: 
                          #line 986 
    ;
    #line 987 
    cif_set_bit((long)src_epid,& hw->epstop_req_bit);
    #line 989 
    if (! test_bit(0L,(unsigned long *)(& hw->epstop_task.data))) 
                                                                  #line 990 
                                                                  cif_queue_work(adapter->control_wq,& hw->epstop_task);
    #line 991 
    break;
  }
  #line 993 
  trace_fjes_stop_req_irq_post(hw,src_epid);
  #line 994 
  return;
}

#line 996  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_main.c"
static void fjes_update_zone_irq(struct fjes_adapter *adapter, int src_epid)
{
  #line 999 
  struct fjes_hw *hw = & adapter->hw;
  #line 1001 
  if (! test_bit(0L,(unsigned long *)(& hw->update_zone_task.data))) 
    #line 1002 
    cif_queue_work(adapter->control_wq,& hw->update_zone_task);
  #line 1003 
  return;
}

#line 1005  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_main.c"
static irqreturn_t fjes_intr(int irq, void *data)
{
  #line 1009 
  irqreturn_t ret;
  #line 1010 
  u32 icr;
  #line 1007 
  struct fjes_adapter *adapter = (struct fjes_adapter *)data;
  #line 1008 
  struct fjes_hw *hw = & adapter->hw;
  #line 1012 
  icr = fjes_hw_capture_interrupt_status(hw);
  #line 1014 
  if ((icr & 2147483648U) != 0U) {
    #line 1015 
    if ((icr & 65536U) != 0U) {
      #line 1016 
      fjes_rx_irq(adapter,(int)icr & 65535);
      #line 1018 
      ((hw->ep_shm_info + ((unsigned long)icr & (unsigned long)65535U))->ep_stats.recv_intr_rx) ++;
    }
    #line 1021 
    if ((icr & 524288U) != 0U) {
      #line 1022 
      fjes_stop_req_irq(adapter,(int)icr & 65535);
      #line 1024 
      ((hw->ep_shm_info + ((unsigned long)icr & (unsigned long)65535U))->ep_stats.recv_intr_stop) ++;
    }
    #line 1027 
    if ((icr & 262144U) != 0U) {
      #line 1028 
      fjes_txrx_stop_req_irq(adapter,(int)icr & 65535);
      #line 1030 
      ((hw->ep_shm_info + ((unsigned long)icr & (unsigned long)65535U))->ep_stats.recv_intr_unshare) ++;
    }
    #line 1033 
    if ((icr & 131072U) != 0U) 
                               #line 1034 
                               fjes_hw_set_irqmask(hw,(enum REG_ICTL_MASK)REG_ICTL_MASK_TXRX_STOP_DONE,(_Bool)1);
    #line 1037 
    if ((icr & 1048576U) != 0U) {
      #line 1038 
      fjes_update_zone_irq(adapter,(int)icr & 65535);
      #line 1040 
      ((hw->ep_shm_info + ((unsigned long)icr & (unsigned long)65535U))->ep_stats.recv_intr_zoneupdate) ++;
    }
    #line 1043 
    ret = IRQ_HANDLED;
  }
  else 
       #line 1045 
       ret = IRQ_NONE;
  #line 1048 
  return ret;
}

#line 1051  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_main.c"
static int fjes_rxframe_search_exist(struct fjes_adapter *adapter, int start_epid)
{
  #line 1055 
  enum ep_partner_status pstatus;
  #line 1056 
  int max_epid;
  #line 1056 
  int cur_epid;
  #line 1057 
  int i;
  #line 1054 
  struct fjes_hw *hw = & adapter->hw;
  #line 1059 
  max_epid = hw->max_epid;
  #line 1060 
  start_epid = ((start_epid + 1) + max_epid) % max_epid;
  #line 1062 
  i = 0;
  #line 1062 
  while (i < max_epid) {
    #line 1063 
    cur_epid = (start_epid + i) % max_epid;
    #line 1064 
    if (hw->my_epid == cur_epid) 
                                 #line 1065 
                                 goto __Cont;
    #line 1067 
    pstatus = fjes_hw_get_partner_ep_status(hw,cur_epid);
    #line 1068 
    if (pstatus == (unsigned int)EP_PARTNER_SHARED) {
      #line 1069 
      if (! fjes_hw_epbuf_rx_is_empty(& (hw->ep_shm_info + (unsigned long)cur_epid)->rx)) 
        #line 1071 
        return cur_epid;
    }
    #line 1062 
    __Cont: 
            #line 1062 
    i ++;
  }
  #line 1074 
  return -1;
}

#line 1077  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_main.c"
static void *fjes_rxframe_get(struct fjes_adapter *adapter, size_t *psize, int *cur_epid)
{
  #line 1080 
  void *frame;
  #line 1082 
  *cur_epid = fjes_rxframe_search_exist(adapter,*cur_epid);
  #line 1083 
  if (*cur_epid < 0) 
                     #line 1084 
                     return (void *)0;
  #line 1086 
  frame = fjes_hw_epbuf_rx_curpkt_get_addr(& (adapter->hw.ep_shm_info + (unsigned long)*cur_epid)->rx,psize);
  #line 1090 
  return frame;
}

#line 1093  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_main.c"
static void fjes_rxframe_release(struct fjes_adapter *adapter, int cur_epid)
{
  #line 1095 
  fjes_hw_epbuf_rx_curpkt_drop(& (adapter->hw.ep_shm_info + (unsigned long)cur_epid)->rx);
  #line 1096 
  return;
}

#line 1098  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_main.c"
static void fjes_rx_irq(struct fjes_adapter *adapter, int src_epid)
{
  #line 1100 
  struct fjes_hw *hw = & adapter->hw;
  #line 1102 
  fjes_hw_set_irqmask(hw,(enum REG_ICTL_MASK)REG_ICTL_MASK_RX_DATA,(_Bool)1);
  #line 1104 
  adapter->unset_rx_last = (_Bool)1;
  #line 1105 
  napi_schedule(& adapter->napi);
  #line 1106 
  return;
}

#line 1108  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_main.c"
static int fjes_poll(struct napi_struct *napi, int budget)
{
  #line 1111 
  void *__mptr;
  #line 1114 
  struct sk_buff *skb;
  #line 1117 
  int epidx;
  #line 1118 
  size_t frame_len;
  #line 1119 
  void *frame;
  #line 1111 
  __mptr = (void *)napi;
  #line 1110 
  struct fjes_adapter *adapter = ((struct fjes_adapter *)(__mptr + 18446744073709551600U));
  #line 1112 
  struct net_device *netdev = napi->dev;
  #line 1113 
  struct fjes_hw *hw = & adapter->hw;
  #line 1115 
  int work_done = 0;
  #line 1116 
  int cur_epid = 0;
  #line 1121 
  cif_spin_lock_rx_status_lock_of_fjes_hw(& hw->rx_status_lock);
  #line 1122 
  epidx = 0;
  #line 1122 
  while (hw->max_epid > epidx) {
    {
      #line 1123 
      if (hw->my_epid == epidx) 
                                #line 1124 
                                goto __Cont;
      #line 1126 
      if (fjes_hw_get_partner_ep_status(hw,epidx) == (unsigned int)EP_PARTNER_SHARED) 
        #line 1129 
        ((adapter->hw.ep_shm_info + (unsigned long)epidx)->tx.info)->v1i.rx_status = (unsigned short)((unsigned int)((adapter->hw.ep_shm_info + (unsigned long)epidx)->tx.info)->v1i.rx_status | 4U);
    }
    #line 1122 
    __Cont: 
            #line 1122 
    epidx ++;
  }
  #line 1131 
  cif_spin_unlock_rx_status_lock_of_fjes_hw(& hw->rx_status_lock);
  #line 1133 
  while (work_done < budget) {
    #line 1134 
    __builtin_prefetch((void const *)((void *)(& adapter->hw)));
    #line 1135 
    frame = fjes_rxframe_get(adapter,& frame_len,& cur_epid);
    #line 1137 
    if (frame != (void *)0) {
      #line 1138 
      skb = napi_alloc_skb(napi,(unsigned int)frame_len);
      #line 1139 
      if (skb == (struct sk_buff *)0) {
        #line 1140 
        (adapter->stats64.rx_dropped) ++;
        #line 1142 
        ((hw->ep_shm_info + (unsigned long)cur_epid)->net_stats.rx_dropped) ++;
        #line 1143 
        (adapter->stats64.rx_errors) ++;
        #line 1145 
        ((hw->ep_shm_info + (unsigned long)cur_epid)->net_stats.rx_errors) ++;
      }
      else {
        #line 1147 
        skb_put_data(skb,frame,(unsigned int)frame_len);
        #line 1148 
        skb->protocol = eth_type_trans(skb,netdev);
        #line 1149 
        skb->ip_summed = (unsigned char)1U;
        #line 1151 
        netif_receive_skb(skb);
        #line 1153 
        work_done ++;
        #line 1155 
        (adapter->stats64.rx_packets) ++;
        #line 1157 
        ((hw->ep_shm_info + (unsigned long)cur_epid)->net_stats.rx_packets) ++;
        #line 1158 
        adapter->stats64.rx_bytes += (unsigned long long)frame_len;
        #line 1160 
        (hw->ep_shm_info + (unsigned long)cur_epid)->net_stats.rx_bytes += (unsigned long long)frame_len;
        #line 1162 
        if ((int)is_multicast_ether_addr((u8 *)(& ((struct ethhdr *)frame)->h_dest)) != 0) {
          #line 1164 
          (adapter->stats64.multicast) ++;
          #line 1166 
          ((hw->ep_shm_info + (unsigned long)cur_epid)->net_stats.multicast) ++;
        }
      }
      #line 1170 
      fjes_rxframe_release(adapter,cur_epid);
      #line 1171 
      adapter->unset_rx_last = (_Bool)1;
    }
    else 
         #line 1173 
         break;
  }
  #line 1177 
  if (work_done < budget) {
    #line 1178 
    napi_complete_done(napi,work_done);
    #line 1180 
    if ((int)adapter->unset_rx_last != 0) {
      #line 1181 
      adapter->rx_last_jiffies = jiffies;
      #line 1182 
      adapter->unset_rx_last = (_Bool)0;
    }
    #line 1185 
    if ((long)jiffies - (long)adapter->rx_last_jiffies <= 2L) 
                                                              #line 1186 
                                                              napi_reschedule(napi);
    else {
      #line 1188 
      cif_spin_lock_rx_status_lock_of_fjes_hw(& hw->rx_status_lock);
      #line 1189 
      epidx = 0;
      #line 1189 
      while (hw->max_epid > epidx) {
        {
          #line 1190 
          if (hw->my_epid == epidx) 
                                    #line 1191 
                                    goto __Cont_0;
          #line 1192 
          if (fjes_hw_get_partner_ep_status(hw,epidx) == (unsigned int)EP_PARTNER_SHARED) 
            #line 1195 
            ((adapter->hw.ep_shm_info + (unsigned long)epidx)->tx.info)->v1i.rx_status = (unsigned short)((unsigned int)((adapter->hw.ep_shm_info + (unsigned long)epidx)->tx.info)->v1i.rx_status & 65531U);
        }
        #line 1189 
        __Cont_0: 
                  #line 1189 
        epidx ++;
      }
      #line 1198 
      cif_spin_unlock_rx_status_lock_of_fjes_hw(& hw->rx_status_lock);
      #line 1200 
      fjes_hw_set_irqmask(hw,(enum REG_ICTL_MASK)REG_ICTL_MASK_RX_DATA,(_Bool)0);
    }
  }
  #line 1204 
  return work_done;
}

#line 1208  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_main.c"
static int fjes_probe(struct platform_device *plat_dev)
{
  #line 1210 
  struct fjes_adapter *adapter;
  #line 1211 
  struct net_device *netdev;
  #line 1212 
  struct resource *res;
  #line 1213 
  struct fjes_hw *hw;
  #line 1214 
  int err;
  #line 1216 
  err = -12;
  #line 1217 
  netdev = cif_alloc_netdev_mqs(1744,(char *)"es%d",(unsigned char)0,& fjes_netdev_setup,1U,1U);
  #line 1221 
  if (netdev == (struct net_device *)0) 
                                        #line 1222 
                                        goto err_out;
  #line 1224 
  netdev->dev.parent = & plat_dev->dev;
  #line 1226 
  dev_set_drvdata(& plat_dev->dev,(void *)netdev);
  #line 1227 
  adapter = (struct fjes_adapter *)netdev_priv(netdev);
  #line 1228 
  adapter->netdev = netdev;
  #line 1229 
  adapter->plat_dev = plat_dev;
  #line 1230 
  hw = & adapter->hw;
  #line 1231 
  hw->back = (void *)adapter;
  #line 1234 
  err = fjes_sw_init(adapter);
  #line 1235 
  if (err != 0) 
                #line 1236 
                goto err_free_netdev;
  {
    #line 1238 
    struct lock_class_key __key;
    #line 1238 
    __init_work(& adapter->force_close_task,0);
    #line 1238 
    atomic_long_t __constr_expr_34 = {.counter = 137438953408LL};
    #line 1238 
    adapter->force_close_task.data = __constr_expr_34;
    #line 1238 
    lockdep_init_map(& adapter->force_close_task.lockdep_map,(char *)"(work_completion)",& __key,0);
    #line 1238 
    INIT_LIST_HEAD(& adapter->force_close_task.entry);
    #line 1238 
    adapter->force_close_task.func = & fjes_force_close_task;
  }
  #line 1239 
  adapter->force_reset = (_Bool)0;
  #line 1240 
  adapter->open_guard = (_Bool)0;
  #line 1242 
  adapter->txrx_wq = alloc_workqueue((char *)"fjes",8U,0);
  #line 1243 
  if ((long)(adapter->txrx_wq == (struct workqueue_struct *)0) != 0L) {
    #line 1244 
    err = -12;
    #line 1245 
    goto err_free_netdev;
  }
  #line 1248 
  adapter->control_wq = alloc_workqueue((char *)"fjes",8U,0);
  #line 1250 
  if ((long)(adapter->control_wq == (struct workqueue_struct *)0) != 0L) {
    #line 1251 
    err = -12;
    #line 1252 
    goto err_free_txrx_wq;
  }
  {
    #line 1255 
    struct lock_class_key __key_0;
    #line 1255 
    __init_work(& adapter->tx_stall_task,0);
    #line 1255 
    atomic_long_t __constr_expr_35 = {.counter = 137438953408LL};
    #line 1255 
    adapter->tx_stall_task.data = __constr_expr_35;
    #line 1255 
    lockdep_init_map(& adapter->tx_stall_task.lockdep_map,(char *)"(work_completion)",& __key_0,0);
    #line 1255 
    INIT_LIST_HEAD(& adapter->tx_stall_task.entry);
    #line 1255 
    adapter->tx_stall_task.func = & fjes_tx_stall_task;
  }
  {
    #line 1256 
    struct lock_class_key __key_1;
    #line 1256 
    __init_work(& adapter->raise_intr_rxdata_task,0);
    #line 1256 
    atomic_long_t __constr_expr_36 = {.counter = 137438953408LL};
    #line 1256 
    adapter->raise_intr_rxdata_task.data = __constr_expr_36;
    #line 1256 
    lockdep_init_map(& adapter->raise_intr_rxdata_task.lockdep_map,(char *)"(work_completion)",& __key_1,0);
    #line 1256 
    INIT_LIST_HEAD(& adapter->raise_intr_rxdata_task.entry);
    #line 1256 
    adapter->raise_intr_rxdata_task.func = & fjes_raise_intr_rxdata_task;
  }
  {
    #line 1258 
    struct lock_class_key __key_2;
    #line 1258 
    __init_work(& adapter->unshare_watch_task,0);
    #line 1258 
    atomic_long_t __constr_expr_37 = {.counter = 137438953408LL};
    #line 1258 
    adapter->unshare_watch_task.data = __constr_expr_37;
    #line 1258 
    lockdep_init_map(& adapter->unshare_watch_task.lockdep_map,(char *)"(work_completion)",& __key_2,0);
    #line 1258 
    INIT_LIST_HEAD(& adapter->unshare_watch_task.entry);
    #line 1258 
    adapter->unshare_watch_task.func = & fjes_watch_unshare_task;
  }
  #line 1259 
  adapter->unshare_watch_bitmask = 0UL;
  {
    #line 1261 
    struct lock_class_key __key_3;
    #line 1261 
    __init_work(& adapter->interrupt_watch_task.work,0);
    #line 1261 
    atomic_long_t __constr_expr_38 = {.counter = 137438953408LL};
    #line 1261 
    adapter->interrupt_watch_task.work.data = __constr_expr_38;
    #line 1261 
    lockdep_init_map(& adapter->interrupt_watch_task.work.lockdep_map,(char *)"(work_completion)",& __key_3,0);
    #line 1261 
    INIT_LIST_HEAD(& adapter->interrupt_watch_task.work.entry);
    #line 1261 
    adapter->interrupt_watch_task.work.func = & fjes_irq_watch_task;
  }
  {
    #line 1261 
    struct lock_class_key __key_4;
    #line 1261 
    init_timer_key(& adapter->interrupt_watch_task.timer,& delayed_work_timer_fn,2097152U,(char *)"&(&adapter->interrupt_watch_task)->timer",& __key_4);
  }
  #line 1262 
  adapter->interrupt_watch_enable = (_Bool)0;
  #line 1264 
  res = platform_get_resource(plat_dev,512U,0U);
  #line 1265 
  hw->hw_res.start = res->start;
  #line 1266 
  hw->hw_res.size = resource_size(res);
  #line 1267 
  hw->hw_res.irq = platform_get_irq(plat_dev,0U);
  #line 1268 
  err = fjes_hw_init(& adapter->hw);
  #line 1269 
  if (err != 0) 
                #line 1270 
                goto err_free_control_wq;
  #line 1273 
  *(netdev->dev_addr) = (unsigned char)2U;
  #line 1274 
  *(netdev->dev_addr + 1U) = (unsigned char)0U;
  #line 1275 
  *(netdev->dev_addr + 2U) = (unsigned char)0U;
  #line 1276 
  *(netdev->dev_addr + 3U) = (unsigned char)0U;
  #line 1277 
  *(netdev->dev_addr + 4U) = (unsigned char)0U;
  #line 1278 
  *(netdev->dev_addr + 5U) = (unsigned char)hw->my_epid;
  #line 1280 
  err = cif_register_netdev(netdev);
  #line 1281 
  if (err != 0) 
                #line 1282 
                goto err_hw_exit;
  #line 1284 
  netif_carrier_off(netdev);
  #line 1286 
  fjes_dbg_adapter_init(adapter);
  #line 1288 
  return 0;
  #line 1290 
  err_hw_exit: 
               #line 1290 
  ;
  #line 1291 
  fjes_hw_exit(& adapter->hw);
  #line 1292 
  err_free_control_wq: 
                       #line 1292 
  ;
  #line 1293 
  destroy_workqueue(adapter->control_wq);
  #line 1294 
  err_free_txrx_wq: 
                    #line 1294 
  ;
  #line 1295 
  destroy_workqueue(adapter->txrx_wq);
  #line 1296 
  err_free_netdev: 
                   #line 1296 
  ;
  #line 1297 
  cif_free_netdev(netdev);
  #line 1298 
  err_out: 
           #line 1298 
  ;
  #line 1299 
  return err;
}

#line 1303  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_main.c"
static int fjes_remove(struct platform_device *plat_dev)
{
  #line 1305 
  struct net_device *netdev = dev_get_drvdata(& plat_dev->dev);
  #line 1306 
  struct fjes_adapter *adapter = netdev_priv(netdev);
  #line 1307 
  struct fjes_hw *hw = & adapter->hw;
  #line 1309 
  fjes_dbg_adapter_exit(adapter);
  #line 1311 
  cancel_delayed_work_sync(& adapter->interrupt_watch_task);
  #line 1312 
  cancel_work_sync(& adapter->unshare_watch_task);
  #line 1313 
  cancel_work_sync(& adapter->raise_intr_rxdata_task);
  #line 1314 
  cancel_work_sync(& adapter->tx_stall_task);
  #line 1315 
  if (adapter->control_wq != (struct workqueue_struct *)0) 
                                                           #line 1316 
                                                           destroy_workqueue(adapter->control_wq);
  #line 1317 
  if (adapter->txrx_wq != (struct workqueue_struct *)0) 
                                                        #line 1318 
                                                        destroy_workqueue(adapter->txrx_wq);
  #line 1320 
  cif_unregister_netdev(netdev);
  #line 1322 
  fjes_hw_exit(hw);
  #line 1324 
  netif_napi_del(& adapter->napi);
  #line 1326 
  cif_free_netdev(netdev);
  #line 1328 
  return 0;
}

#line 1331  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_main.c"
static int fjes_sw_init(struct fjes_adapter *adapter)
{
  #line 1333 
  struct net_device *netdev = adapter->netdev;
  #line 1335 
  netif_napi_add(netdev,& adapter->napi,& fjes_poll,64);
  #line 1337 
  return 0;
}

#line 1341  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_main.c"
static void fjes_netdev_setup(struct net_device *netdev)
{
  #line 1343 
  ether_setup(netdev);
  #line 1345 
  netdev->watchdog_timeo = 5000;
  #line 1346 
  netdev->netdev_ops = & fjes_netdev_ops;
  #line 1347 
  fjes_set_ethtool_ops(netdev);
  #line 1348 
  netdev->mtu = fjes_support_mtu[3];
  #line 1349 
  netdev->min_mtu = fjes_support_mtu[0];
  #line 1350 
  netdev->max_mtu = fjes_support_mtu[3];
  #line 1351 
  netdev->features |= 512ULL;
  #line 1352 
  return;
}

#line 1354  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_main.c"
static void fjes_irq_watch_task(struct work_struct *work)
{
  #line 1356 
  void *__mptr;
  #line 1356 
  __mptr = (void *)to_delayed_work(work);
  #line 1356 
  struct fjes_adapter *adapter = ((struct fjes_adapter *)(__mptr + 18446744073709550632U));
  #line 1359 
  arch_local_irq_disable();
  #line 1359 
  trace_hardirqs_off();
  #line 1360 
  fjes_intr(adapter->hw.hw_res.irq,(void *)adapter);
  #line 1361 
  trace_hardirqs_on();
  #line 1361 
  arch_local_irq_enable();
  #line 1363 
  if (fjes_rxframe_search_exist(adapter,0) >= 0) 
                                                 #line 1364 
                                                 napi_schedule(& adapter->napi);
  #line 1366 
  if ((int)adapter->interrupt_watch_enable != 0) {
    #line 1367 
    if (! test_bit(0L,
                 (unsigned long *)(& adapter->interrupt_watch_task.work.data))) 
      #line 1368 
      cif_queue_delayed_work(adapter->control_wq,& adapter->interrupt_watch_task,250UL);
  }
  #line 1370 
  return;
}

#line 1374  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_main.c"
static void fjes_watch_unshare_task(struct work_struct *work)
{
  #line 1377 
  void *__mptr;
  #line 1382 
  int unshare_watch;
  #line 1382 
  int unshare_reserve;
  #line 1383 
  int max_epid;
  #line 1383 
  int my_epid;
  #line 1383 
  int epidx;
  #line 1384 
  int stop_req;
  #line 1384 
  int stop_req_done;
  #line 1385 
  ulong unshare_watch_bitmask;
  #line 1386 
  unsigned long flags;
  #line 1388 
  int is_shared;
  #line 1389 
  int ret;
  #line 1377 
  __mptr = (void *)work;
  #line 1376 
  struct fjes_adapter *adapter = ((struct fjes_adapter *)(__mptr + 18446744073709550720U));
  #line 1379 
  struct net_device *netdev = adapter->netdev;
  #line 1380 
  struct fjes_hw *hw = & adapter->hw;
  #line 1387 
  int wait_time = 0;
  #line 1391 
  my_epid = hw->my_epid;
  #line 1392 
  max_epid = hw->max_epid;
  #line 1394 
  unshare_watch_bitmask = adapter->unshare_watch_bitmask;
  #line 1395 
  adapter->unshare_watch_bitmask = 0UL;
  #line 1397 
  while ((unshare_watch_bitmask != 0UL || hw->txrx_stop_req_bit != 0UL) && wait_time <= 2999) {
    #line 1399 
    epidx = 0;
    #line 1399 
    while (epidx < max_epid) {
      {
        #line 1400 
        if (epidx == my_epid) 
                              #line 1401 
                              goto __Cont;
        #line 1403 
        is_shared = fjes_hw_epid_is_shared(hw->hw_info.share,epidx);
        #line 1406 
        stop_req = (int)test_bit((long)epidx,& hw->txrx_stop_req_bit);
        #line 1408 
        stop_req_done = (int)((hw->ep_shm_info + (unsigned long)epidx)->rx.info)->v1i.rx_status & 1;
        #line 1411 
        unshare_watch = (int)test_bit((long)epidx,& unshare_watch_bitmask);
        #line 1413 
        unshare_reserve = (int)test_bit((long)epidx,& hw->hw_info.buffer_unshare_reserve_bit);
        #line 1416 
        if ((stop_req == 0 || is_shared != 0 && (is_shared == 0 || stop_req_done == 0)) && ((is_shared != 0 || unshare_watch == 0) || unshare_reserve == 0)) 
          #line 1419 
          goto __Cont;
        #line 1421 
        cif_mutex_lock_lock_of_fjes_hw_info_0(& hw->hw_info.lock);
        #line 1422 
        ret = fjes_hw_unregister_buff_addr(hw,epidx);
        #line 1423 
        switch (ret) {
          #line 1424 
          case 0: 
                  #line 1424 
          ;
          #line 1425 
          break;
          #line 1426 
          case -42: 
                    #line 1426 
          ;
          #line 1427 
          case -16: 
                    #line 1427 
          ;
          #line 1428 
          default: 
                   #line 1428 
          ;
          #line 1429 
          if (! test_bit(0L,(unsigned long *)(& adapter->force_close_task.data))) {
            #line 1431 
            adapter->force_reset = (_Bool)1;
            #line 1432 
            cif_schedule_work(& adapter->force_close_task);
          }
          #line 1435 
          break;
        }
        #line 1437 
        cif_mutex_unlock_lock_of_fjes_hw_info_0(& hw->hw_info.lock);
        #line 1439 
        ((hw->ep_shm_info + (unsigned long)epidx)->ep_stats.com_unregist_buf_exec) ++;
        #line 1441 
        cif___ldv_spin_lock_rx_status_lock_of_fjes_hw(& hw->rx_status_lock);
        #line 1442 
        fjes_hw_setup_epbuf(& (hw->ep_shm_info + (unsigned long)epidx)->tx,netdev->dev_addr,netdev->mtu);
        #line 1444 
        cif_spin_unlock_irqrestore_rx_status_lock_of_fjes_hw(& hw->rx_status_lock,flags);
        #line 1446 
        cif_clear_bit((long)epidx,& hw->txrx_stop_req_bit);
        #line 1447 
        cif_clear_bit((long)epidx,& unshare_watch_bitmask);
        #line 1448 
        cif_clear_bit((long)epidx,& hw->hw_info.buffer_unshare_reserve_bit);
      }
      #line 1399 
      __Cont: 
              #line 1399 
      epidx ++;
    }
    #line 1452 
    msleep(100U);
    #line 1453 
    wait_time += 100;
  }
  #line 1456 
  if (hw->hw_info.buffer_unshare_reserve_bit != 0UL) {
    #line 1457 
    epidx = 0;
    #line 1457 
    while (epidx < max_epid) {
      {
        #line 1458 
        if (epidx == my_epid) 
                              #line 1459 
                              goto __Cont_0;
        #line 1461 
        if ((int)test_bit((long)epidx,& hw->hw_info.buffer_unshare_reserve_bit) != 0) {
          #line 1463 
          cif_mutex_lock_lock_of_fjes_hw_info_0(& hw->hw_info.lock);
          #line 1465 
          ret = fjes_hw_unregister_buff_addr(hw,epidx);
          #line 1466 
          switch (ret) {
            #line 1467 
            case 0: 
                    #line 1467 
            ;
            #line 1468 
            break;
            #line 1469 
            case -42: 
                      #line 1469 
            ;
            #line 1470 
            case -16: 
                      #line 1470 
            ;
            #line 1471 
            default: 
                     #line 1471 
            ;
            #line 1472 
            if (! test_bit(0L,(unsigned long *)(& adapter->force_close_task.data))) {
              #line 1474 
              adapter->force_reset = (_Bool)1;
              #line 1475 
              cif_schedule_work(& adapter->force_close_task);
            }
            #line 1478 
            break;
          }
          #line 1480 
          cif_mutex_unlock_lock_of_fjes_hw_info_0(& hw->hw_info.lock);
          #line 1483 
          ((hw->ep_shm_info + (unsigned long)epidx)->ep_stats.com_unregist_buf_exec) ++;
          #line 1485 
          cif___ldv_spin_lock_rx_status_lock_of_fjes_hw(& hw->rx_status_lock);
          #line 1486 
          fjes_hw_setup_epbuf(& (hw->ep_shm_info + (unsigned long)epidx)->tx,netdev->dev_addr,netdev->mtu);
          #line 1489 
          cif_spin_unlock_irqrestore_rx_status_lock_of_fjes_hw(& hw->rx_status_lock,flags);
          #line 1492 
          cif_clear_bit((long)epidx,& hw->txrx_stop_req_bit);
          #line 1493 
          cif_clear_bit((long)epidx,& unshare_watch_bitmask);
          #line 1494 
          cif_clear_bit((long)epidx,& hw->hw_info.buffer_unshare_reserve_bit);
        }
        #line 1497 
        if ((int)test_bit((long)epidx,& unshare_watch_bitmask) != 0) {
          #line 1498 
          cif___ldv_spin_lock_rx_status_lock_of_fjes_hw(& hw->rx_status_lock);
          #line 1499 
          ((hw->ep_shm_info + (unsigned long)epidx)->tx.info)->v1i.rx_status = (unsigned short)((unsigned int)((hw->ep_shm_info + (unsigned long)epidx)->tx.info)->v1i.rx_status & 65534U);
          #line 1501 
          cif_spin_unlock_irqrestore_rx_status_lock_of_fjes_hw(& hw->rx_status_lock,flags);
        }
      }
      #line 1457 
      __Cont_0: 
                #line 1457 
      epidx ++;
    }
  }
  #line 1505 
  return;
}

#line 1509  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_main.c"
static acpi_status acpi_find_extended_socket_device(acpi_handle obj_handle, u32 level, void *context, void **return_value)
{
  #line 1512 
  struct acpi_device *device;
  #line 1514 
  int result;
  #line 1513 
  bool *found = (bool *)context;
  #line 1516 
  result = acpi_bus_get_device(obj_handle,& device);
  #line 1517 
  if (result != 0) 
                   #line 1518 
                   return 0U;
  #line 1520 
  if (cif_strcmp(acpi_device_hid(device),(char *)"PNP0C02") != 0) 
                                                                  #line 1521 
                                                                  return 0U;
  #line 1523 
  if (! is_extended_socket_device(device)) 
                                           #line 1524 
                                           return 0U;
  #line 1526 
  if (acpi_check_extended_socket_status(device) != 0) 
                                                      #line 1527 
                                                      return 0U;
  #line 1529 
  *found = (_Bool)1;
  #line 1530 
  return 16387U;
}

#line 1534  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_main.c"
static int fjes_init_module(void)
{
  #line 1537 
  int result;
  #line 1536 
  bool found = (_Bool)0;
  #line 1539 
  acpi_walk_namespace(6U,(void *)(-1),4294967295U,& acpi_find_extended_socket_device,(acpi_status (*)(acpi_handle , u32 , void *, void **))0,(void *)(& found),(void **)0);
  #line 1543 
  if (! found) 
               #line 1544 
               return -19;
  #line 1546 
  printk((char *)"\001",(char *)(& fjes_driver_string),(char *)(& fjes_driver_version),(char *)(& fjes_copyright));
  #line 1549 
  fjes_dbg_init();
  #line 1551 
  result = cif___platform_driver_register(& fjes_driver,& __this_module);
  #line 1552 
  if (result < 0) {
    #line 1553 
    fjes_dbg_exit();
    #line 1554 
    return result;
  }
  #line 1557 
  result = acpi_bus_register_driver(& fjes_acpi_driver);
  #line 1558 
  if (result < 0) 
                  #line 1559 
                  goto fail_acpi_driver;
  #line 1561 
  return 0;
  #line 1563 
  fail_acpi_driver: 
                    #line 1563 
  ;
  #line 1564 
  cif_platform_driver_unregister(& fjes_driver);
  #line 1565 
  fjes_dbg_exit();
  #line 1566 
  return result;
}

#line 1572  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_main.c"
static void fjes_exit_module(void)
{
  #line 1574 
  acpi_bus_unregister_driver(& fjes_acpi_driver);
  #line 1575 
  cif_platform_driver_unregister(& fjes_driver);
  #line 1576 
  fjes_dbg_exit();
  #line 1577 
  return;
}

#line 93  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_main.i.aux"
struct platform_driver *emg_alias_fjes_driver = & fjes_driver;
#line 96 
#line 96 
int emg___platform_driver_register(struct platform_driver *arg0, struct module *arg1);
#line 97 
#line 97 
struct net_device *emg_alloc_netdev_mqs(int arg0, char *arg1, unsigned char arg2, void (*arg3)(struct net_device *), unsigned int arg4, unsigned int arg5);
#line 98 
#line 98 
void *emg_free_irq(unsigned int arg0, void *arg1);
#line 99 
#line 99 
void emg_free_netdev(struct net_device *arg0);
#line 100 
#line 100 
void emg_platform_driver_unregister(struct platform_driver *arg0);
#line 101 
#line 101 
_Bool emg_queue_delayed_work(struct workqueue_struct *arg0, struct delayed_work *arg1, unsigned long arg2);
#line 102 
#line 102 
_Bool emg_queue_work(struct workqueue_struct *arg0, struct work_struct *arg1);
#line 103 
#line 103 
int emg_register_netdev(struct net_device *arg0);
#line 104 
#line 104 
int emg_request_irq(unsigned int arg0, enum irqreturn (*arg1)(int , void *), unsigned long arg2, char *arg3, void *arg4);
#line 105 
#line 105 
_Bool emg_schedule_work(struct work_struct *arg0);
#line 106 
#line 106 
void emg_unregister_netdev(struct net_device *arg0);
#line 110  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_main.i.aux"
int emg_wrapper_fjes_change_mtu(struct net_device *arg0, int arg1)
{
  #line 111 
  return fjes_change_mtu(arg0,arg1);
}

#line 115  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_main.i.aux"
int emg_wrapper_fjes_close(struct net_device *arg0)
{
  #line 116 
  return fjes_close(arg0);
}

#line 120  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_main.i.aux"
void emg_wrapper_fjes_get_stats64(struct net_device *arg0, struct rtnl_link_stats64 *arg1)
{
  #line 121 
  fjes_get_stats64(arg0,arg1);
  #line 122 
  return;
}

#line 125  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_main.i.aux"
enum irqreturn emg_wrapper_fjes_intr(int arg0, void *arg1)
{
  #line 126 
  return fjes_intr(arg0,arg1);
}

#line 130  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_main.i.aux"
void emg_wrapper_fjes_netdev_setup(struct net_device *arg0)
{
  #line 131 
  fjes_netdev_setup(arg0);
  #line 132 
  return;
}

#line 135  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_main.i.aux"
int emg_wrapper_fjes_open(struct net_device *arg0)
{
  #line 136 
  return fjes_open(arg0);
}

#line 140  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_main.i.aux"
int emg_wrapper_fjes_probe(struct platform_device *arg0)
{
  #line 141 
  return fjes_probe(arg0);
}

#line 145  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_main.i.aux"
int emg_wrapper_fjes_remove(struct platform_device *arg0)
{
  #line 146 
  return fjes_remove(arg0);
}

#line 150  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_main.i.aux"
void emg_wrapper_fjes_tx_retry(struct net_device *arg0)
{
  #line 151 
  fjes_tx_retry(arg0);
  #line 152 
  return;
}

#line 155  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_main.i.aux"
int emg_wrapper_fjes_vlan_rx_add_vid(struct net_device *arg0, unsigned short arg1, unsigned short arg2)
{
  #line 156 
  return fjes_vlan_rx_add_vid(arg0,(unsigned short)((int)arg1),
                           (unsigned short)((int)arg2));
}

#line 160  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_main.i.aux"
int emg_wrapper_fjes_vlan_rx_kill_vid(struct net_device *arg0, unsigned short arg1, unsigned short arg2)
{
  #line 161 
  return fjes_vlan_rx_kill_vid(arg0,(unsigned short)((int)arg1),
                            (unsigned short)((int)arg2));
}

#line 165  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_main.i.aux"
enum netdev_tx emg_wrapper_fjes_xmit_frame(struct sk_buff *arg0, struct net_device *arg1)
{
  #line 166 
  return fjes_xmit_frame(arg0,arg1);
}

#line 170  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_main.i.aux"
void emg_fjes_exit_module(void)
{
  #line 171 
  fjes_exit_module();
  #line 172 
  return;
}

#line 174  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_main.i.aux"
int emg_fjes_init_module(void)
{
  #line 175 
  return fjes_init_module();
}

#line 193  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_main.i.aux"
static void cif_set_bit(long nr, unsigned long *addr)
{
  #line 196 
  ldv_set_bit(nr,addr);
  #line 197 
  return;
}

#line 200  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_main.i.aux"
static void cif_clear_bit(long nr, unsigned long *addr)
{
  #line 203 
  ldv_clear_bit(nr,addr);
  #line 204 
  return;
}

#line 207  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_main.i.aux"
static void INIT_LIST_HEAD(struct list_head *list)
{
  #line 210 
  ldv_init_list_head(list);
  #line 211 
  return;
}

#line 214  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_main.i.aux"
static int cif_strncmp(char *cs, char *ct, __kernel_size_t count)
{
  #line 217 
  return ldv_strncmp(cs,ct,count);
}

#line 221  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_main.i.aux"
static size_t cif_strlen(char *s)
{
  #line 224 
  return ldv_strlen(s);
}

#line 284  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_main.i.aux"
static long PTR_ERR(void *ptr)
{
  #line 287 
  return ldv_ptr_err(ptr);
}

#line 291  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_main.i.aux"
static bool IS_ERR(void *ptr)
{
  #line 294 
  return ldv_is_err(ptr);
}

#line 377  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_main.i.aux"
static bool cif_queue_work(struct workqueue_struct *wq, struct work_struct *work)
{
  #line 381 
  return emg_queue_work(wq,work);
}

#line 385  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_main.i.aux"
static bool cif_queue_delayed_work(struct workqueue_struct *wq, struct delayed_work *dwork, unsigned long delay)
{
  #line 389 
  return emg_queue_delayed_work(wq,dwork,delay);
}

#line 739  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_main.i.aux"
static int cif_strcmp(char *cs, char *ct)
{
  #line 742 
  return ldv_strcmp(cs,ct);
}

#line 746  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_main.i.aux"
static int cif_request_irq(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char *name, void *dev)
{
  #line 750 
  return emg_request_irq(irq,handler,flags,name,dev);
}

#line 754  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_main.i.aux"
static void *cif_free_irq(unsigned int ldv_func_arg1, void *ldv_func_arg2)
{
  #line 758 
  return emg_free_irq(ldv_func_arg1,ldv_func_arg2);
}

#line 762  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_main.i.aux"
static void cif___ldv_spin_lock_rx_status_lock_of_fjes_hw(spinlock_t *lock)
{
  #line 765 
  ldv_spin_model_lock((char *)"rx_status_lock_of_fjes_hw");
  #line 767 
  __ldv_spin_lock(lock);
  #line 768 
  return;
}

#line 771  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_main.i.aux"
static void cif_spin_unlock_irqrestore_rx_status_lock_of_fjes_hw(spinlock_t *lock, unsigned long flags)
{
  #line 774 
  ldv_spin_model_unlock((char *)"rx_status_lock_of_fjes_hw");
  #line 776 
  spin_unlock_irqrestore(lock,flags);
  #line 777 
  return;
}

#line 780  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_main.i.aux"
static void cif_mutex_lock_lock_of_fjes_hw_info_0(struct mutex *lock)
{
  #line 783 
  ldv_mutex_model_lock(lock,(char *)"lock_of_fjes_hw_info");
  #line 784 
  return;
}

#line 787  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_main.i.aux"
static void cif_mutex_unlock_lock_of_fjes_hw_info_0(struct mutex *lock)
{
  #line 790 
  ldv_mutex_model_unlock(lock,(char *)"lock_of_fjes_hw_info");
  #line 791 
  return;
}

#line 794  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_main.i.aux"
static void cif_spin_lock_rx_status_lock_of_fjes_hw(spinlock_t *lock)
{
  #line 797 
  ldv_spin_model_lock((char *)"rx_status_lock_of_fjes_hw");
  #line 799 
  spin_lock(lock);
  #line 800 
  return;
}

#line 803  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_main.i.aux"
static void cif_spin_unlock_rx_status_lock_of_fjes_hw(spinlock_t *lock)
{
  #line 806 
  ldv_spin_model_unlock((char *)"rx_status_lock_of_fjes_hw");
  #line 808 
  spin_unlock(lock);
  #line 809 
  return;
}

#line 812  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_main.i.aux"
static struct net_device *cif_alloc_netdev_mqs(int sizeof_priv, char *name, unsigned char name_assign_type, void (*setup)(struct net_device *), unsigned int txqs, unsigned int rxqs)
{
  #line 816 
  return emg_alloc_netdev_mqs(sizeof_priv,name,
                           (unsigned char)((int)name_assign_type),setup,txqs,
                           rxqs);
}

#line 820  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_main.i.aux"
static int cif_register_netdev(struct net_device *dev)
{
  #line 824 
  return emg_register_netdev(dev);
}

#line 828  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_main.i.aux"
static void cif_free_netdev(struct net_device *dev)
{
  #line 832 
  emg_free_netdev(dev);
  #line 833 
  return;
}

#line 836  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_main.i.aux"
static void cif_unregister_netdev(struct net_device *dev)
{
  #line 840 
  emg_unregister_netdev(dev);
  #line 841 
  return;
}

#line 844  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_main.i.aux"
static bool cif_schedule_work(struct work_struct *work)
{
  #line 848 
  return emg_schedule_work(work);
}

#line 852  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_main.i.aux"
static int cif___platform_driver_register(struct platform_driver *ldv_func_arg1, struct module *ldv_func_arg2)
{
  #line 856 
  return emg___platform_driver_register(ldv_func_arg1,ldv_func_arg2);
}

#line 860  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_main.i.aux"
static void cif_platform_driver_unregister(struct platform_driver *ldv_func_arg1)
{
  #line 864 
  emg_platform_driver_unregister(ldv_func_arg1);
  #line 865 
  return;
}

#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/bitops/instrumented-atomic.h"
#line 118  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_hw.i.aux"
static void cif_set_bit_0(long nr, unsigned long *addr);
#line 44  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/bitops/instrumented-atomic.h"
#line 125  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_hw.i.aux"
static void cif_clear_bit_0(long nr, unsigned long *addr);
#line 26  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
#line 132  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_hw.i.aux"
static void INIT_LIST_HEAD_0(struct list_head *list);
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/page_64.h"
#line 16 
extern unsigned long vmemmap_base;
#line 95  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
#line 95 
void __raw_spin_lock_init(raw_spinlock_t *, char *, struct lock_class_key *);
#line 325  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
__inline static raw_spinlock_t *spinlock_check(spinlock_t *lock)
{
  #line 327 
  return & lock->__anonCompField_spinlock_25.rlock;
}

#line 391  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
static void spin_unlock_irqrestore_0(spinlock_t *lock, unsigned long flags)
{
  {
    #line 393 
    unsigned long __dummy;
    #line 393 
    unsigned long __dummy2;
    }
  #line 393 
  _raw_spin_unlock_irqrestore(& lock->__anonCompField_spinlock_25.rlock,flags);
  #line 395 
  return;
}

#line 395 
#line 694  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_hw.i.aux"
static void cif_spin_unlock_irqrestore_rx_status_lock_of_fjes_hw_0(spinlock_t *lock, unsigned long flags);
#line 26 
#line 703 
static void cif_mutex_lock_lock_of_fjes_hw_info_1(struct mutex *lock);
#line 35 
#line 685 
static void cif___ldv_spin_lock_rx_status_lock_of_fjes_hw_0(spinlock_t *lock);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 23 
void *ldv_kzalloc(size_t size, gfp_t flags);
#line 25 
#line 25 
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags);
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/vmalloc.h"
#line 22 
void *ldv_vzalloc(unsigned long size);
#line 23 
#line 23 
void ldv_vfree(void *addr);
#line 128  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mutex.h"
#line 128 
void __mutex_init(struct mutex *, char *, struct lock_class_key *);
#line 185 
#line 710  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_hw.i.aux"
static void cif_mutex_unlock_lock_of_fjes_hw_info_1(struct mutex *lock);
#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/io.h"
__inline static unsigned int readl(void *addr)
{
  #line 59 
  unsigned int ret;
  #line 60 
  ldv_inline_asm();
  #line 59 
  return ret;
}

#line 67  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/io.h"
__inline static void writel(unsigned int val, void *addr)
{
  #line 69 
  ldv_inline_asm();
  #line 70 
  return;
}

#line 206 
#line 206 
void *ioremap(resource_size_t, unsigned long);
#line 209 
#line 209 
void iounmap(void *);
#line 105  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/vmalloc.h"
#line 671  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_hw.i.aux"
static void *cif_vzalloc(unsigned long size);
#line 130  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/vmalloc.h"
#line 678  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_hw.i.aux"
static void cif_vfree(void *addr);
#line 496  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/workqueue.h"
#line 302  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_hw.i.aux"
static bool cif_queue_work_0(struct workqueue_struct *wq, struct work_struct *work);
#line 554  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/workqueue.h"
#line 717  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_hw.i.aux"
static bool cif_schedule_work_0(struct work_struct *work);
#line 607  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/slab.h"
#line 350  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_hw.i.aux"
static void *kcalloc(size_t n, size_t size, gfp_t flags);
#line 668  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/slab.h"
#line 371  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_hw.i.aux"
static void *kzalloc(size_t size, gfp_t flags);
#line 180  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ioport.h"
#line 180 
extern struct resource iomem_resource;
#line 238 
#line 238 
struct resource *__request_region(struct resource *, resource_size_t, resource_size_t, char *, int);
#line 247 
#line 247 
void __release_region(struct resource *, resource_size_t, resource_size_t);
#line 619  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm.h"
#line 619 
struct page *vmalloc_to_page(void *);
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h"
#line 18 
struct tracepoint __tracepoint_fjes_hw_issue_request_command;
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h"
__inline static void trace_fjes_hw_issue_request_command(union REG_CR *cr, union REG_CS *cs, int timeout, enum fjes_dev_command_response_e ret)
{
  #line 18 
  int pscr_ret___0;
  #line 18 
  if ((int)static_key_false(& __tracepoint_fjes_hw_issue_request_command.key) != 0) {
    #line 18 
    int pscr_ret__;
    #line 18 
    struct tracepoint_func *________p1;
    #line 18 
    struct tracepoint_func *it_func_ptr;
    #line 18 
    void *it_func;
    #line 18 
    void *__data;
    #line 18 
    int __idx = 0;
    {
      #line 18 
      void *__vpp_verify = (void *)0;
      #line 18 
      void *tmp = __vpp_verify;
    }
    #line 18 
    switch (4UL) {
      #line 18 
      int pfo_ret___1;
      #line 18 
      int pfo_ret___2;
      #line 18 
      int pfo_ret__;
      #line 18 
      int pfo_ret___0;
      #line 18 
      case (unsigned long)1: 
                             #line 18 
      ;
      #line 18 
      switch (4UL) {
        #line 18 
        case (unsigned long)1: 
                               #line 18 
        ;
        #line 19 
        ldv_inline_asm();
        #line 18 
        break;
        #line 18 
        case (unsigned long)2: 
                               #line 18 
        ;
        #line 19 
        ldv_inline_asm();
        #line 18 
        break;
        #line 18 
        case (unsigned long)4: 
                               #line 18 
        ;
        #line 19 
        ldv_inline_asm();
        #line 18 
        break;
        #line 18 
        case (unsigned long)8: 
                               #line 18 
        ;
        #line 19 
        ldv_inline_asm();
        #line 18 
        break;
        #line 18 
        default: 
                 #line 18 
        ;
        #line 18 
        __bad_percpu_size();
      }
      #line 18 
      pscr_ret__ = pfo_ret__;
      #line 18 
      break;
      #line 18 
      case (unsigned long)2: 
                             #line 18 
      ;
      #line 18 
      switch (4UL) {
        #line 18 
        case (unsigned long)1: 
                               #line 18 
        ;
        #line 19 
        ldv_inline_asm();
        #line 18 
        break;
        #line 18 
        case (unsigned long)2: 
                               #line 18 
        ;
        #line 19 
        ldv_inline_asm();
        #line 18 
        break;
        #line 18 
        case (unsigned long)4: 
                               #line 18 
        ;
        #line 19 
        ldv_inline_asm();
        #line 18 
        break;
        #line 18 
        case (unsigned long)8: 
                               #line 18 
        ;
        #line 19 
        ldv_inline_asm();
        #line 18 
        break;
        #line 18 
        default: 
                 #line 18 
        ;
        #line 18 
        __bad_percpu_size();
      }
      #line 18 
      pscr_ret__ = pfo_ret___0;
      #line 18 
      break;
      #line 18 
      case (unsigned long)4: 
                             #line 18 
      ;
      #line 18 
      switch (4UL) {
        #line 18 
        case (unsigned long)1: 
                               #line 18 
        ;
        #line 19 
        ldv_inline_asm();
        #line 18 
        break;
        #line 18 
        case (unsigned long)2: 
                               #line 18 
        ;
        #line 19 
        ldv_inline_asm();
        #line 18 
        break;
        #line 18 
        case (unsigned long)4: 
                               #line 18 
        ;
        #line 19 
        ldv_inline_asm();
        #line 18 
        break;
        #line 18 
        case (unsigned long)8: 
                               #line 18 
        ;
        #line 19 
        ldv_inline_asm();
        #line 18 
        break;
        #line 18 
        default: 
                 #line 18 
        ;
        #line 18 
        __bad_percpu_size();
      }
      #line 18 
      pscr_ret__ = pfo_ret___1;
      #line 18 
      break;
      #line 18 
      case (unsigned long)8: 
                             #line 18 
      ;
      #line 18 
      switch (4UL) {
        #line 18 
        case (unsigned long)1: 
                               #line 18 
        ;
        #line 19 
        ldv_inline_asm();
        #line 18 
        break;
        #line 18 
        case (unsigned long)2: 
                               #line 18 
        ;
        #line 19 
        ldv_inline_asm();
        #line 18 
        break;
        #line 18 
        case (unsigned long)4: 
                               #line 18 
        ;
        #line 19 
        ldv_inline_asm();
        #line 18 
        break;
        #line 18 
        case (unsigned long)8: 
                               #line 18 
        ;
        #line 19 
        ldv_inline_asm();
        #line 18 
        break;
        #line 18 
        default: 
                 #line 18 
        ;
        #line 18 
        __bad_percpu_size();
      }
      #line 18 
      pscr_ret__ = pfo_ret___2;
      #line 18 
      break;
      #line 18 
      default: 
               #line 18 
      ;
      #line 18 
      __bad_size_call_parameter();
      #line 18 
      break;
    }
    #line 18 
    if (cpumask_test_cpu(pscr_ret__,& __cpu_online_mask) == 0) 
                                                               #line 18 
                                                               return;
    {
      #line 18 
      int __ret_warn_on = 0;
      #line 18 
      if ((long)(__ret_warn_on != 0) != 0L) {
        #line 19 
        ldv_inline_asm();
        #line 20 
        ldv_inline_asm();
      }
      #line 18 
      long tmp_5 = (long)(__ret_warn_on != 0);
    }
    #line 18 
    __preempt_count_add(1);
    #line 19 
    ldv_inline_asm();
    {
      #line 19 
      union __anonunion___u_3002 __u;
      #line 18 
      __read_once_size((void *)(& __tracepoint_fjes_hw_issue_request_command.funcs),(void *)(& __u.__c),8);
      #line 18 
      ________p1 = (__u.__val);
      }
    #line 18 
    it_func_ptr = ________p1;
    #line 18 
    if (it_func_ptr != (struct tracepoint_func *)0) 
      #line 18 
      while (1) {
        #line 18 
        it_func = it_func_ptr->func;
        #line 18 
        __data = it_func_ptr->data;
        #line 18 
        (*((void (*)(void *, union REG_CR *, union REG_CS *, int , enum fjes_dev_command_response_e ))it_func))(__data,cr,cs,timeout,ret);
        #line 18 
        it_func_ptr ++;
        #line 19 
        ;
        #line 19 
        if (! (it_func_ptr->func != (void *)0)) 
                                                #line 18 
                                                break;
      }
    #line 20 
    ldv_inline_asm();
    #line 18 
    __preempt_count_sub(1);
  }
  {
    #line 18 
    void *__vpp_verify_0 = (void *)0;
    #line 18 
    void *tmp_13 = __vpp_verify_0;
  }
  #line 18 
  switch (4UL) {
    #line 18 
    int pfo_ret___6;
    #line 18 
    int pfo_ret___3;
    #line 18 
    int pfo_ret___4;
    #line 18 
    int pfo_ret___5;
    #line 18 
    case (unsigned long)1: 
                           #line 18 
    ;
    #line 18 
    switch (4UL) {
      #line 18 
      case (unsigned long)1: 
                             #line 18 
      ;
      #line 19 
      ldv_inline_asm();
      #line 18 
      break;
      #line 18 
      case (unsigned long)2: 
                             #line 18 
      ;
      #line 19 
      ldv_inline_asm();
      #line 18 
      break;
      #line 18 
      case (unsigned long)4: 
                             #line 18 
      ;
      #line 19 
      ldv_inline_asm();
      #line 18 
      break;
      #line 18 
      case (unsigned long)8: 
                             #line 18 
      ;
      #line 19 
      ldv_inline_asm();
      #line 18 
      break;
      #line 18 
      default: 
               #line 18 
      ;
      #line 18 
      __bad_percpu_size();
    }
    #line 18 
    pscr_ret___0 = pfo_ret___3;
    #line 18 
    break;
    #line 18 
    case (unsigned long)2: 
                           #line 18 
    ;
    #line 18 
    switch (4UL) {
      #line 18 
      case (unsigned long)1: 
                             #line 18 
      ;
      #line 19 
      ldv_inline_asm();
      #line 18 
      break;
      #line 18 
      case (unsigned long)2: 
                             #line 18 
      ;
      #line 19 
      ldv_inline_asm();
      #line 18 
      break;
      #line 18 
      case (unsigned long)4: 
                             #line 18 
      ;
      #line 19 
      ldv_inline_asm();
      #line 18 
      break;
      #line 18 
      case (unsigned long)8: 
                             #line 18 
      ;
      #line 19 
      ldv_inline_asm();
      #line 18 
      break;
      #line 18 
      default: 
               #line 18 
      ;
      #line 18 
      __bad_percpu_size();
    }
    #line 18 
    pscr_ret___0 = pfo_ret___4;
    #line 18 
    break;
    #line 18 
    case (unsigned long)4: 
                           #line 18 
    ;
    #line 18 
    switch (4UL) {
      #line 18 
      case (unsigned long)1: 
                             #line 18 
      ;
      #line 19 
      ldv_inline_asm();
      #line 18 
      break;
      #line 18 
      case (unsigned long)2: 
                             #line 18 
      ;
      #line 19 
      ldv_inline_asm();
      #line 18 
      break;
      #line 18 
      case (unsigned long)4: 
                             #line 18 
      ;
      #line 19 
      ldv_inline_asm();
      #line 18 
      break;
      #line 18 
      case (unsigned long)8: 
                             #line 18 
      ;
      #line 19 
      ldv_inline_asm();
      #line 18 
      break;
      #line 18 
      default: 
               #line 18 
      ;
      #line 18 
      __bad_percpu_size();
    }
    #line 18 
    pscr_ret___0 = pfo_ret___5;
    #line 18 
    break;
    #line 18 
    case (unsigned long)8: 
                           #line 18 
    ;
    #line 18 
    switch (4UL) {
      #line 18 
      case (unsigned long)1: 
                             #line 18 
      ;
      #line 19 
      ldv_inline_asm();
      #line 18 
      break;
      #line 18 
      case (unsigned long)2: 
                             #line 18 
      ;
      #line 19 
      ldv_inline_asm();
      #line 18 
      break;
      #line 18 
      case (unsigned long)4: 
                             #line 18 
      ;
      #line 19 
      ldv_inline_asm();
      #line 18 
      break;
      #line 18 
      case (unsigned long)8: 
                             #line 18 
      ;
      #line 19 
      ldv_inline_asm();
      #line 18 
      break;
      #line 18 
      default: 
               #line 18 
      ;
      #line 18 
      __bad_percpu_size();
    }
    #line 18 
    pscr_ret___0 = pfo_ret___6;
    #line 18 
    break;
    #line 18 
    default: 
             #line 18 
    ;
    #line 18 
    __bad_size_call_parameter();
    #line 18 
    break;
  }
  #line 18 
  if (cpumask_test_cpu(pscr_ret___0,& __cpu_online_mask) != 0) {
    #line 18 
    rcu_read_lock_sched_notrace();
    {
      #line 19 
      union __anonunion___u_3004 __u_0;
      #line 18 
      __read_once_size((void *)(& __tracepoint_fjes_hw_issue_request_command.funcs),(void *)(& __u_0.__c),8);
      #line 18 
      struct tracepoint_func *________p1_0 = (__u_0.__val);
      {
        #line 18 
        bool __warned;
        #line 18 
        if (debug_lockdep_rcu_enabled() != 0) 
          #line 18 
          if (! __warned) {
            #line 18 
            if (rcu_read_lock_sched_held() == 0) {
              #line 18 
              __warned = (_Bool)1;
              #line 18 
              lockdep_rcu_suspicious((char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h",18,(char *)"suspicious rcu_dereference_check() usage");
            }
          }
      }
      #line 18 
      struct tracepoint_func *tmp_11 = ________p1_0;
    }
    #line 18 
    rcu_read_unlock_sched_notrace();
  }
  #line 20 
  return;
}

#line 50 
#line 50 
struct tracepoint __tracepoint_fjes_hw_request_info;
#line 50  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h"
__inline static void trace_fjes_hw_request_info(struct fjes_hw *hw, union fjes_device_command_res *res_buf)
{
  #line 50 
  int pscr_ret___0;
  #line 50 
  if ((int)static_key_false(& __tracepoint_fjes_hw_request_info.key) != 0) {
    #line 50 
    int pscr_ret__;
    #line 50 
    struct tracepoint_func *________p1;
    #line 50 
    struct tracepoint_func *it_func_ptr;
    #line 50 
    void *it_func;
    #line 50 
    void *__data;
    #line 50 
    int __idx = 0;
    {
      #line 50 
      void *__vpp_verify = (void *)0;
      #line 50 
      void *tmp = __vpp_verify;
    }
    #line 50 
    switch (4UL) {
      #line 50 
      int pfo_ret__;
      #line 50 
      int pfo_ret___0;
      #line 50 
      int pfo_ret___1;
      #line 50 
      int pfo_ret___2;
      #line 50 
      case (unsigned long)1: 
                             #line 50 
      ;
      #line 50 
      switch (4UL) {
        #line 50 
        case (unsigned long)1: 
                               #line 50 
        ;
        #line 51 
        ldv_inline_asm();
        #line 50 
        break;
        #line 50 
        case (unsigned long)2: 
                               #line 50 
        ;
        #line 51 
        ldv_inline_asm();
        #line 50 
        break;
        #line 50 
        case (unsigned long)4: 
                               #line 50 
        ;
        #line 51 
        ldv_inline_asm();
        #line 50 
        break;
        #line 50 
        case (unsigned long)8: 
                               #line 50 
        ;
        #line 51 
        ldv_inline_asm();
        #line 50 
        break;
        #line 50 
        default: 
                 #line 50 
        ;
        #line 50 
        __bad_percpu_size();
      }
      #line 50 
      pscr_ret__ = pfo_ret__;
      #line 50 
      break;
      #line 50 
      case (unsigned long)2: 
                             #line 50 
      ;
      #line 50 
      switch (4UL) {
        #line 50 
        case (unsigned long)1: 
                               #line 50 
        ;
        #line 51 
        ldv_inline_asm();
        #line 50 
        break;
        #line 50 
        case (unsigned long)2: 
                               #line 50 
        ;
        #line 51 
        ldv_inline_asm();
        #line 50 
        break;
        #line 50 
        case (unsigned long)4: 
                               #line 50 
        ;
        #line 51 
        ldv_inline_asm();
        #line 50 
        break;
        #line 50 
        case (unsigned long)8: 
                               #line 50 
        ;
        #line 51 
        ldv_inline_asm();
        #line 50 
        break;
        #line 50 
        default: 
                 #line 50 
        ;
        #line 50 
        __bad_percpu_size();
      }
      #line 50 
      pscr_ret__ = pfo_ret___0;
      #line 50 
      break;
      #line 50 
      case (unsigned long)4: 
                             #line 50 
      ;
      #line 50 
      switch (4UL) {
        #line 50 
        case (unsigned long)1: 
                               #line 50 
        ;
        #line 51 
        ldv_inline_asm();
        #line 50 
        break;
        #line 50 
        case (unsigned long)2: 
                               #line 50 
        ;
        #line 51 
        ldv_inline_asm();
        #line 50 
        break;
        #line 50 
        case (unsigned long)4: 
                               #line 50 
        ;
        #line 51 
        ldv_inline_asm();
        #line 50 
        break;
        #line 50 
        case (unsigned long)8: 
                               #line 50 
        ;
        #line 51 
        ldv_inline_asm();
        #line 50 
        break;
        #line 50 
        default: 
                 #line 50 
        ;
        #line 50 
        __bad_percpu_size();
      }
      #line 50 
      pscr_ret__ = pfo_ret___1;
      #line 50 
      break;
      #line 50 
      case (unsigned long)8: 
                             #line 50 
      ;
      #line 50 
      switch (4UL) {
        #line 50 
        case (unsigned long)1: 
                               #line 50 
        ;
        #line 51 
        ldv_inline_asm();
        #line 50 
        break;
        #line 50 
        case (unsigned long)2: 
                               #line 50 
        ;
        #line 51 
        ldv_inline_asm();
        #line 50 
        break;
        #line 50 
        case (unsigned long)4: 
                               #line 50 
        ;
        #line 51 
        ldv_inline_asm();
        #line 50 
        break;
        #line 50 
        case (unsigned long)8: 
                               #line 50 
        ;
        #line 51 
        ldv_inline_asm();
        #line 50 
        break;
        #line 50 
        default: 
                 #line 50 
        ;
        #line 50 
        __bad_percpu_size();
      }
      #line 50 
      pscr_ret__ = pfo_ret___2;
      #line 50 
      break;
      #line 50 
      default: 
               #line 50 
      ;
      #line 50 
      __bad_size_call_parameter();
      #line 50 
      break;
    }
    #line 50 
    if (cpumask_test_cpu(pscr_ret__,& __cpu_online_mask) == 0) 
                                                               #line 50 
                                                               return;
    {
      #line 50 
      int __ret_warn_on = 0;
      #line 50 
      if ((long)(__ret_warn_on != 0) != 0L) {
        #line 51 
        ldv_inline_asm();
        #line 52 
        ldv_inline_asm();
      }
      #line 50 
      long tmp_5 = (long)(__ret_warn_on != 0);
    }
    #line 50 
    __preempt_count_add(1);
    #line 51 
    ldv_inline_asm();
    {
      #line 51 
      union __anonunion___u_3006 __u;
      #line 50 
      __read_once_size((void *)(& __tracepoint_fjes_hw_request_info.funcs),(void *)(& __u.__c),8);
      #line 50 
      ________p1 = (__u.__val);
      }
    #line 50 
    it_func_ptr = ________p1;
    #line 50 
    if (it_func_ptr != (struct tracepoint_func *)0) 
      #line 50 
      while (1) {
        #line 50 
        it_func = it_func_ptr->func;
        #line 50 
        __data = it_func_ptr->data;
        #line 50 
        (*((void (*)(void *, struct fjes_hw *, union fjes_device_command_res *))it_func))(__data,hw,res_buf);
        #line 50 
        it_func_ptr ++;
        #line 51 
        ;
        #line 51 
        if (! (it_func_ptr->func != (void *)0)) 
                                                #line 50 
                                                break;
      }
    #line 52 
    ldv_inline_asm();
    #line 50 
    __preempt_count_sub(1);
  }
  {
    #line 50 
    void *__vpp_verify_0 = (void *)0;
    #line 50 
    void *tmp_13 = __vpp_verify_0;
  }
  #line 50 
  switch (4UL) {
    #line 50 
    int pfo_ret___6;
    #line 50 
    int pfo_ret___3;
    #line 50 
    int pfo_ret___4;
    #line 50 
    int pfo_ret___5;
    #line 50 
    case (unsigned long)1: 
                           #line 50 
    ;
    #line 50 
    switch (4UL) {
      #line 50 
      case (unsigned long)1: 
                             #line 50 
      ;
      #line 51 
      ldv_inline_asm();
      #line 50 
      break;
      #line 50 
      case (unsigned long)2: 
                             #line 50 
      ;
      #line 51 
      ldv_inline_asm();
      #line 50 
      break;
      #line 50 
      case (unsigned long)4: 
                             #line 50 
      ;
      #line 51 
      ldv_inline_asm();
      #line 50 
      break;
      #line 50 
      case (unsigned long)8: 
                             #line 50 
      ;
      #line 51 
      ldv_inline_asm();
      #line 50 
      break;
      #line 50 
      default: 
               #line 50 
      ;
      #line 50 
      __bad_percpu_size();
    }
    #line 50 
    pscr_ret___0 = pfo_ret___3;
    #line 50 
    break;
    #line 50 
    case (unsigned long)2: 
                           #line 50 
    ;
    #line 50 
    switch (4UL) {
      #line 50 
      case (unsigned long)1: 
                             #line 50 
      ;
      #line 51 
      ldv_inline_asm();
      #line 50 
      break;
      #line 50 
      case (unsigned long)2: 
                             #line 50 
      ;
      #line 51 
      ldv_inline_asm();
      #line 50 
      break;
      #line 50 
      case (unsigned long)4: 
                             #line 50 
      ;
      #line 51 
      ldv_inline_asm();
      #line 50 
      break;
      #line 50 
      case (unsigned long)8: 
                             #line 50 
      ;
      #line 51 
      ldv_inline_asm();
      #line 50 
      break;
      #line 50 
      default: 
               #line 50 
      ;
      #line 50 
      __bad_percpu_size();
    }
    #line 50 
    pscr_ret___0 = pfo_ret___4;
    #line 50 
    break;
    #line 50 
    case (unsigned long)4: 
                           #line 50 
    ;
    #line 50 
    switch (4UL) {
      #line 50 
      case (unsigned long)1: 
                             #line 50 
      ;
      #line 51 
      ldv_inline_asm();
      #line 50 
      break;
      #line 50 
      case (unsigned long)2: 
                             #line 50 
      ;
      #line 51 
      ldv_inline_asm();
      #line 50 
      break;
      #line 50 
      case (unsigned long)4: 
                             #line 50 
      ;
      #line 51 
      ldv_inline_asm();
      #line 50 
      break;
      #line 50 
      case (unsigned long)8: 
                             #line 50 
      ;
      #line 51 
      ldv_inline_asm();
      #line 50 
      break;
      #line 50 
      default: 
               #line 50 
      ;
      #line 50 
      __bad_percpu_size();
    }
    #line 50 
    pscr_ret___0 = pfo_ret___5;
    #line 50 
    break;
    #line 50 
    case (unsigned long)8: 
                           #line 50 
    ;
    #line 50 
    switch (4UL) {
      #line 50 
      case (unsigned long)1: 
                             #line 50 
      ;
      #line 51 
      ldv_inline_asm();
      #line 50 
      break;
      #line 50 
      case (unsigned long)2: 
                             #line 50 
      ;
      #line 51 
      ldv_inline_asm();
      #line 50 
      break;
      #line 50 
      case (unsigned long)4: 
                             #line 50 
      ;
      #line 51 
      ldv_inline_asm();
      #line 50 
      break;
      #line 50 
      case (unsigned long)8: 
                             #line 50 
      ;
      #line 51 
      ldv_inline_asm();
      #line 50 
      break;
      #line 50 
      default: 
               #line 50 
      ;
      #line 50 
      __bad_percpu_size();
    }
    #line 50 
    pscr_ret___0 = pfo_ret___6;
    #line 50 
    break;
    #line 50 
    default: 
             #line 50 
    ;
    #line 50 
    __bad_size_call_parameter();
    #line 50 
    break;
  }
  #line 50 
  if (cpumask_test_cpu(pscr_ret___0,& __cpu_online_mask) != 0) {
    #line 50 
    rcu_read_lock_sched_notrace();
    {
      #line 51 
      union __anonunion___u_3008 __u_0;
      #line 50 
      __read_once_size((void *)(& __tracepoint_fjes_hw_request_info.funcs),(void *)(& __u_0.__c),8);
      #line 50 
      struct tracepoint_func *________p1_0 = (__u_0.__val);
      {
        #line 50 
        bool __warned;
        #line 50 
        if (debug_lockdep_rcu_enabled() != 0) 
          #line 50 
          if (! __warned) {
            #line 50 
            if (rcu_read_lock_sched_held() == 0) {
              #line 50 
              __warned = (_Bool)1;
              #line 50 
              lockdep_rcu_suspicious((char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h",50,(char *)"suspicious rcu_dereference_check() usage");
            }
          }
      }
      #line 50 
      struct tracepoint_func *tmp_11 = ________p1_0;
    }
    #line 50 
    rcu_read_unlock_sched_notrace();
  }
  #line 52 
  return;
}

#line 81 
#line 81 
struct tracepoint __tracepoint_fjes_hw_request_info_err;
#line 81  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h"
__inline static void trace_fjes_hw_request_info_err(char *err)
{
  #line 81 
  int pscr_ret___0;
  #line 81 
  if ((int)static_key_false(& __tracepoint_fjes_hw_request_info_err.key) != 0) {
    #line 81 
    int pscr_ret__;
    #line 81 
    struct tracepoint_func *________p1;
    #line 81 
    struct tracepoint_func *it_func_ptr;
    #line 81 
    void *it_func;
    #line 81 
    void *__data;
    #line 81 
    int __idx = 0;
    {
      #line 81 
      void *__vpp_verify = (void *)0;
      #line 81 
      void *tmp = __vpp_verify;
    }
    #line 81 
    switch (4UL) {
      #line 81 
      int pfo_ret___2;
      #line 81 
      int pfo_ret__;
      #line 81 
      int pfo_ret___0;
      #line 81 
      int pfo_ret___1;
      #line 81 
      case (unsigned long)1: 
                             #line 81 
      ;
      #line 81 
      switch (4UL) {
        #line 81 
        case (unsigned long)1: 
                               #line 81 
        ;
        #line 82 
        ldv_inline_asm();
        #line 81 
        break;
        #line 81 
        case (unsigned long)2: 
                               #line 81 
        ;
        #line 82 
        ldv_inline_asm();
        #line 81 
        break;
        #line 81 
        case (unsigned long)4: 
                               #line 81 
        ;
        #line 82 
        ldv_inline_asm();
        #line 81 
        break;
        #line 81 
        case (unsigned long)8: 
                               #line 81 
        ;
        #line 82 
        ldv_inline_asm();
        #line 81 
        break;
        #line 81 
        default: 
                 #line 81 
        ;
        #line 81 
        __bad_percpu_size();
      }
      #line 81 
      pscr_ret__ = pfo_ret__;
      #line 81 
      break;
      #line 81 
      case (unsigned long)2: 
                             #line 81 
      ;
      #line 81 
      switch (4UL) {
        #line 81 
        case (unsigned long)1: 
                               #line 81 
        ;
        #line 82 
        ldv_inline_asm();
        #line 81 
        break;
        #line 81 
        case (unsigned long)2: 
                               #line 81 
        ;
        #line 82 
        ldv_inline_asm();
        #line 81 
        break;
        #line 81 
        case (unsigned long)4: 
                               #line 81 
        ;
        #line 82 
        ldv_inline_asm();
        #line 81 
        break;
        #line 81 
        case (unsigned long)8: 
                               #line 81 
        ;
        #line 82 
        ldv_inline_asm();
        #line 81 
        break;
        #line 81 
        default: 
                 #line 81 
        ;
        #line 81 
        __bad_percpu_size();
      }
      #line 81 
      pscr_ret__ = pfo_ret___0;
      #line 81 
      break;
      #line 81 
      case (unsigned long)4: 
                             #line 81 
      ;
      #line 81 
      switch (4UL) {
        #line 81 
        case (unsigned long)1: 
                               #line 81 
        ;
        #line 82 
        ldv_inline_asm();
        #line 81 
        break;
        #line 81 
        case (unsigned long)2: 
                               #line 81 
        ;
        #line 82 
        ldv_inline_asm();
        #line 81 
        break;
        #line 81 
        case (unsigned long)4: 
                               #line 81 
        ;
        #line 82 
        ldv_inline_asm();
        #line 81 
        break;
        #line 81 
        case (unsigned long)8: 
                               #line 81 
        ;
        #line 82 
        ldv_inline_asm();
        #line 81 
        break;
        #line 81 
        default: 
                 #line 81 
        ;
        #line 81 
        __bad_percpu_size();
      }
      #line 81 
      pscr_ret__ = pfo_ret___1;
      #line 81 
      break;
      #line 81 
      case (unsigned long)8: 
                             #line 81 
      ;
      #line 81 
      switch (4UL) {
        #line 81 
        case (unsigned long)1: 
                               #line 81 
        ;
        #line 82 
        ldv_inline_asm();
        #line 81 
        break;
        #line 81 
        case (unsigned long)2: 
                               #line 81 
        ;
        #line 82 
        ldv_inline_asm();
        #line 81 
        break;
        #line 81 
        case (unsigned long)4: 
                               #line 81 
        ;
        #line 82 
        ldv_inline_asm();
        #line 81 
        break;
        #line 81 
        case (unsigned long)8: 
                               #line 81 
        ;
        #line 82 
        ldv_inline_asm();
        #line 81 
        break;
        #line 81 
        default: 
                 #line 81 
        ;
        #line 81 
        __bad_percpu_size();
      }
      #line 81 
      pscr_ret__ = pfo_ret___2;
      #line 81 
      break;
      #line 81 
      default: 
               #line 81 
      ;
      #line 81 
      __bad_size_call_parameter();
      #line 81 
      break;
    }
    #line 81 
    if (cpumask_test_cpu(pscr_ret__,& __cpu_online_mask) == 0) 
                                                               #line 81 
                                                               return;
    {
      #line 81 
      int __ret_warn_on = 0;
      #line 81 
      if ((long)(__ret_warn_on != 0) != 0L) {
        #line 82 
        ldv_inline_asm();
        #line 83 
        ldv_inline_asm();
      }
      #line 81 
      long tmp_5 = (long)(__ret_warn_on != 0);
    }
    #line 81 
    __preempt_count_add(1);
    #line 82 
    ldv_inline_asm();
    {
      #line 82 
      union __anonunion___u_3010 __u;
      #line 81 
      __read_once_size((void *)(& __tracepoint_fjes_hw_request_info_err.funcs),(void *)(& __u.__c),8);
      #line 81 
      ________p1 = (__u.__val);
      }
    #line 81 
    it_func_ptr = ________p1;
    #line 81 
    if (it_func_ptr != (struct tracepoint_func *)0) 
      #line 81 
      while (1) {
        #line 81 
        it_func = it_func_ptr->func;
        #line 81 
        __data = it_func_ptr->data;
        #line 81 
        (*((void (*)(void *, char *))it_func))(__data,err);
        #line 81 
        it_func_ptr ++;
        #line 82 
        ;
        #line 82 
        if (! (it_func_ptr->func != (void *)0)) 
                                                #line 81 
                                                break;
      }
    #line 83 
    ldv_inline_asm();
    #line 81 
    __preempt_count_sub(1);
  }
  {
    #line 81 
    void *__vpp_verify_0 = (void *)0;
    #line 81 
    void *tmp_13 = __vpp_verify_0;
  }
  #line 81 
  switch (4UL) {
    #line 81 
    int pfo_ret___4;
    #line 81 
    int pfo_ret___5;
    #line 81 
    int pfo_ret___6;
    #line 81 
    int pfo_ret___3;
    #line 81 
    case (unsigned long)1: 
                           #line 81 
    ;
    #line 81 
    switch (4UL) {
      #line 81 
      case (unsigned long)1: 
                             #line 81 
      ;
      #line 82 
      ldv_inline_asm();
      #line 81 
      break;
      #line 81 
      case (unsigned long)2: 
                             #line 81 
      ;
      #line 82 
      ldv_inline_asm();
      #line 81 
      break;
      #line 81 
      case (unsigned long)4: 
                             #line 81 
      ;
      #line 82 
      ldv_inline_asm();
      #line 81 
      break;
      #line 81 
      case (unsigned long)8: 
                             #line 81 
      ;
      #line 82 
      ldv_inline_asm();
      #line 81 
      break;
      #line 81 
      default: 
               #line 81 
      ;
      #line 81 
      __bad_percpu_size();
    }
    #line 81 
    pscr_ret___0 = pfo_ret___3;
    #line 81 
    break;
    #line 81 
    case (unsigned long)2: 
                           #line 81 
    ;
    #line 81 
    switch (4UL) {
      #line 81 
      case (unsigned long)1: 
                             #line 81 
      ;
      #line 82 
      ldv_inline_asm();
      #line 81 
      break;
      #line 81 
      case (unsigned long)2: 
                             #line 81 
      ;
      #line 82 
      ldv_inline_asm();
      #line 81 
      break;
      #line 81 
      case (unsigned long)4: 
                             #line 81 
      ;
      #line 82 
      ldv_inline_asm();
      #line 81 
      break;
      #line 81 
      case (unsigned long)8: 
                             #line 81 
      ;
      #line 82 
      ldv_inline_asm();
      #line 81 
      break;
      #line 81 
      default: 
               #line 81 
      ;
      #line 81 
      __bad_percpu_size();
    }
    #line 81 
    pscr_ret___0 = pfo_ret___4;
    #line 81 
    break;
    #line 81 
    case (unsigned long)4: 
                           #line 81 
    ;
    #line 81 
    switch (4UL) {
      #line 81 
      case (unsigned long)1: 
                             #line 81 
      ;
      #line 82 
      ldv_inline_asm();
      #line 81 
      break;
      #line 81 
      case (unsigned long)2: 
                             #line 81 
      ;
      #line 82 
      ldv_inline_asm();
      #line 81 
      break;
      #line 81 
      case (unsigned long)4: 
                             #line 81 
      ;
      #line 82 
      ldv_inline_asm();
      #line 81 
      break;
      #line 81 
      case (unsigned long)8: 
                             #line 81 
      ;
      #line 82 
      ldv_inline_asm();
      #line 81 
      break;
      #line 81 
      default: 
               #line 81 
      ;
      #line 81 
      __bad_percpu_size();
    }
    #line 81 
    pscr_ret___0 = pfo_ret___5;
    #line 81 
    break;
    #line 81 
    case (unsigned long)8: 
                           #line 81 
    ;
    #line 81 
    switch (4UL) {
      #line 81 
      case (unsigned long)1: 
                             #line 81 
      ;
      #line 82 
      ldv_inline_asm();
      #line 81 
      break;
      #line 81 
      case (unsigned long)2: 
                             #line 81 
      ;
      #line 82 
      ldv_inline_asm();
      #line 81 
      break;
      #line 81 
      case (unsigned long)4: 
                             #line 81 
      ;
      #line 82 
      ldv_inline_asm();
      #line 81 
      break;
      #line 81 
      case (unsigned long)8: 
                             #line 81 
      ;
      #line 82 
      ldv_inline_asm();
      #line 81 
      break;
      #line 81 
      default: 
               #line 81 
      ;
      #line 81 
      __bad_percpu_size();
    }
    #line 81 
    pscr_ret___0 = pfo_ret___6;
    #line 81 
    break;
    #line 81 
    default: 
             #line 81 
    ;
    #line 81 
    __bad_size_call_parameter();
    #line 81 
    break;
  }
  #line 81 
  if (cpumask_test_cpu(pscr_ret___0,& __cpu_online_mask) != 0) {
    #line 81 
    rcu_read_lock_sched_notrace();
    {
      #line 82 
      union __anonunion___u_3012 __u_0;
      #line 81 
      __read_once_size((void *)(& __tracepoint_fjes_hw_request_info_err.funcs),(void *)(& __u_0.__c),8);
      #line 81 
      struct tracepoint_func *________p1_0 = (__u_0.__val);
      {
        #line 81 
        bool __warned;
        #line 81 
        if (debug_lockdep_rcu_enabled() != 0) 
          #line 81 
          if (! __warned) {
            #line 81 
            if (rcu_read_lock_sched_held() == 0) {
              #line 81 
              __warned = (_Bool)1;
              #line 81 
              lockdep_rcu_suspicious((char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h",81,(char *)"suspicious rcu_dereference_check() usage");
            }
          }
      }
      #line 81 
      struct tracepoint_func *tmp_11 = ________p1_0;
    }
    #line 81 
    rcu_read_unlock_sched_notrace();
  }
  #line 83 
  return;
}

#line 93 
#line 93 
struct tracepoint __tracepoint_fjes_hw_register_buff_addr_req;
#line 93  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h"
__inline static void trace_fjes_hw_register_buff_addr_req(union fjes_device_command_req *req_buf, struct ep_share_mem_info *buf_pair)
{
  #line 93 
  int pscr_ret___0;
  #line 93 
  if ((int)static_key_false(& __tracepoint_fjes_hw_register_buff_addr_req.key) != 0) {
    #line 93 
    int pscr_ret__;
    #line 93 
    struct tracepoint_func *________p1;
    #line 93 
    struct tracepoint_func *it_func_ptr;
    #line 93 
    void *it_func;
    #line 93 
    void *__data;
    #line 93 
    int __idx = 0;
    {
      #line 93 
      void *__vpp_verify = (void *)0;
      #line 93 
      void *tmp = __vpp_verify;
    }
    #line 93 
    switch (4UL) {
      #line 93 
      int pfo_ret___1;
      #line 93 
      int pfo_ret___2;
      #line 93 
      int pfo_ret__;
      #line 93 
      int pfo_ret___0;
      #line 93 
      case (unsigned long)1: 
                             #line 93 
      ;
      #line 93 
      switch (4UL) {
        #line 93 
        case (unsigned long)1: 
                               #line 93 
        ;
        #line 94 
        ldv_inline_asm();
        #line 93 
        break;
        #line 93 
        case (unsigned long)2: 
                               #line 93 
        ;
        #line 94 
        ldv_inline_asm();
        #line 93 
        break;
        #line 93 
        case (unsigned long)4: 
                               #line 93 
        ;
        #line 94 
        ldv_inline_asm();
        #line 93 
        break;
        #line 93 
        case (unsigned long)8: 
                               #line 93 
        ;
        #line 94 
        ldv_inline_asm();
        #line 93 
        break;
        #line 93 
        default: 
                 #line 93 
        ;
        #line 93 
        __bad_percpu_size();
      }
      #line 93 
      pscr_ret__ = pfo_ret__;
      #line 93 
      break;
      #line 93 
      case (unsigned long)2: 
                             #line 93 
      ;
      #line 93 
      switch (4UL) {
        #line 93 
        case (unsigned long)1: 
                               #line 93 
        ;
        #line 94 
        ldv_inline_asm();
        #line 93 
        break;
        #line 93 
        case (unsigned long)2: 
                               #line 93 
        ;
        #line 94 
        ldv_inline_asm();
        #line 93 
        break;
        #line 93 
        case (unsigned long)4: 
                               #line 93 
        ;
        #line 94 
        ldv_inline_asm();
        #line 93 
        break;
        #line 93 
        case (unsigned long)8: 
                               #line 93 
        ;
        #line 94 
        ldv_inline_asm();
        #line 93 
        break;
        #line 93 
        default: 
                 #line 93 
        ;
        #line 93 
        __bad_percpu_size();
      }
      #line 93 
      pscr_ret__ = pfo_ret___0;
      #line 93 
      break;
      #line 93 
      case (unsigned long)4: 
                             #line 93 
      ;
      #line 93 
      switch (4UL) {
        #line 93 
        case (unsigned long)1: 
                               #line 93 
        ;
        #line 94 
        ldv_inline_asm();
        #line 93 
        break;
        #line 93 
        case (unsigned long)2: 
                               #line 93 
        ;
        #line 94 
        ldv_inline_asm();
        #line 93 
        break;
        #line 93 
        case (unsigned long)4: 
                               #line 93 
        ;
        #line 94 
        ldv_inline_asm();
        #line 93 
        break;
        #line 93 
        case (unsigned long)8: 
                               #line 93 
        ;
        #line 94 
        ldv_inline_asm();
        #line 93 
        break;
        #line 93 
        default: 
                 #line 93 
        ;
        #line 93 
        __bad_percpu_size();
      }
      #line 93 
      pscr_ret__ = pfo_ret___1;
      #line 93 
      break;
      #line 93 
      case (unsigned long)8: 
                             #line 93 
      ;
      #line 93 
      switch (4UL) {
        #line 93 
        case (unsigned long)1: 
                               #line 93 
        ;
        #line 94 
        ldv_inline_asm();
        #line 93 
        break;
        #line 93 
        case (unsigned long)2: 
                               #line 93 
        ;
        #line 94 
        ldv_inline_asm();
        #line 93 
        break;
        #line 93 
        case (unsigned long)4: 
                               #line 93 
        ;
        #line 94 
        ldv_inline_asm();
        #line 93 
        break;
        #line 93 
        case (unsigned long)8: 
                               #line 93 
        ;
        #line 94 
        ldv_inline_asm();
        #line 93 
        break;
        #line 93 
        default: 
                 #line 93 
        ;
        #line 93 
        __bad_percpu_size();
      }
      #line 93 
      pscr_ret__ = pfo_ret___2;
      #line 93 
      break;
      #line 93 
      default: 
               #line 93 
      ;
      #line 93 
      __bad_size_call_parameter();
      #line 93 
      break;
    }
    #line 93 
    if (cpumask_test_cpu(pscr_ret__,& __cpu_online_mask) == 0) 
                                                               #line 93 
                                                               return;
    {
      #line 93 
      int __ret_warn_on = 0;
      #line 93 
      if ((long)(__ret_warn_on != 0) != 0L) {
        #line 94 
        ldv_inline_asm();
        #line 95 
        ldv_inline_asm();
      }
      #line 93 
      long tmp_5 = (long)(__ret_warn_on != 0);
    }
    #line 93 
    __preempt_count_add(1);
    #line 94 
    ldv_inline_asm();
    {
      #line 94 
      union __anonunion___u_3014 __u;
      #line 93 
      __read_once_size((void *)(& __tracepoint_fjes_hw_register_buff_addr_req.funcs),(void *)(& __u.__c),8);
      #line 93 
      ________p1 = (__u.__val);
      }
    #line 93 
    it_func_ptr = ________p1;
    #line 93 
    if (it_func_ptr != (struct tracepoint_func *)0) 
      #line 93 
      while (1) {
        #line 93 
        it_func = it_func_ptr->func;
        #line 93 
        __data = it_func_ptr->data;
        #line 93 
        (*((void (*)(void *, union fjes_device_command_req *, struct ep_share_mem_info *))it_func))(__data,req_buf,buf_pair);
        #line 93 
        it_func_ptr ++;
        #line 94 
        ;
        #line 94 
        if (! (it_func_ptr->func != (void *)0)) 
                                                #line 93 
                                                break;
      }
    #line 95 
    ldv_inline_asm();
    #line 93 
    __preempt_count_sub(1);
  }
  {
    #line 93 
    void *__vpp_verify_0 = (void *)0;
    #line 93 
    void *tmp_13 = __vpp_verify_0;
  }
  #line 93 
  switch (4UL) {
    #line 93 
    int pfo_ret___3;
    #line 93 
    int pfo_ret___4;
    #line 93 
    int pfo_ret___5;
    #line 93 
    int pfo_ret___6;
    #line 93 
    case (unsigned long)1: 
                           #line 93 
    ;
    #line 93 
    switch (4UL) {
      #line 93 
      case (unsigned long)1: 
                             #line 93 
      ;
      #line 94 
      ldv_inline_asm();
      #line 93 
      break;
      #line 93 
      case (unsigned long)2: 
                             #line 93 
      ;
      #line 94 
      ldv_inline_asm();
      #line 93 
      break;
      #line 93 
      case (unsigned long)4: 
                             #line 93 
      ;
      #line 94 
      ldv_inline_asm();
      #line 93 
      break;
      #line 93 
      case (unsigned long)8: 
                             #line 93 
      ;
      #line 94 
      ldv_inline_asm();
      #line 93 
      break;
      #line 93 
      default: 
               #line 93 
      ;
      #line 93 
      __bad_percpu_size();
    }
    #line 93 
    pscr_ret___0 = pfo_ret___3;
    #line 93 
    break;
    #line 93 
    case (unsigned long)2: 
                           #line 93 
    ;
    #line 93 
    switch (4UL) {
      #line 93 
      case (unsigned long)1: 
                             #line 93 
      ;
      #line 94 
      ldv_inline_asm();
      #line 93 
      break;
      #line 93 
      case (unsigned long)2: 
                             #line 93 
      ;
      #line 94 
      ldv_inline_asm();
      #line 93 
      break;
      #line 93 
      case (unsigned long)4: 
                             #line 93 
      ;
      #line 94 
      ldv_inline_asm();
      #line 93 
      break;
      #line 93 
      case (unsigned long)8: 
                             #line 93 
      ;
      #line 94 
      ldv_inline_asm();
      #line 93 
      break;
      #line 93 
      default: 
               #line 93 
      ;
      #line 93 
      __bad_percpu_size();
    }
    #line 93 
    pscr_ret___0 = pfo_ret___4;
    #line 93 
    break;
    #line 93 
    case (unsigned long)4: 
                           #line 93 
    ;
    #line 93 
    switch (4UL) {
      #line 93 
      case (unsigned long)1: 
                             #line 93 
      ;
      #line 94 
      ldv_inline_asm();
      #line 93 
      break;
      #line 93 
      case (unsigned long)2: 
                             #line 93 
      ;
      #line 94 
      ldv_inline_asm();
      #line 93 
      break;
      #line 93 
      case (unsigned long)4: 
                             #line 93 
      ;
      #line 94 
      ldv_inline_asm();
      #line 93 
      break;
      #line 93 
      case (unsigned long)8: 
                             #line 93 
      ;
      #line 94 
      ldv_inline_asm();
      #line 93 
      break;
      #line 93 
      default: 
               #line 93 
      ;
      #line 93 
      __bad_percpu_size();
    }
    #line 93 
    pscr_ret___0 = pfo_ret___5;
    #line 93 
    break;
    #line 93 
    case (unsigned long)8: 
                           #line 93 
    ;
    #line 93 
    switch (4UL) {
      #line 93 
      case (unsigned long)1: 
                             #line 93 
      ;
      #line 94 
      ldv_inline_asm();
      #line 93 
      break;
      #line 93 
      case (unsigned long)2: 
                             #line 93 
      ;
      #line 94 
      ldv_inline_asm();
      #line 93 
      break;
      #line 93 
      case (unsigned long)4: 
                             #line 93 
      ;
      #line 94 
      ldv_inline_asm();
      #line 93 
      break;
      #line 93 
      case (unsigned long)8: 
                             #line 93 
      ;
      #line 94 
      ldv_inline_asm();
      #line 93 
      break;
      #line 93 
      default: 
               #line 93 
      ;
      #line 93 
      __bad_percpu_size();
    }
    #line 93 
    pscr_ret___0 = pfo_ret___6;
    #line 93 
    break;
    #line 93 
    default: 
             #line 93 
    ;
    #line 93 
    __bad_size_call_parameter();
    #line 93 
    break;
  }
  #line 93 
  if (cpumask_test_cpu(pscr_ret___0,& __cpu_online_mask) != 0) {
    #line 93 
    rcu_read_lock_sched_notrace();
    {
      #line 94 
      union __anonunion___u_3016 __u_0;
      #line 93 
      __read_once_size((void *)(& __tracepoint_fjes_hw_register_buff_addr_req.funcs),(void *)(& __u_0.__c),8);
      #line 93 
      struct tracepoint_func *________p1_0 = (__u_0.__val);
      {
        #line 93 
        bool __warned;
        #line 93 
        if (debug_lockdep_rcu_enabled() != 0) 
          #line 93 
          if (! __warned) {
            #line 93 
            if (rcu_read_lock_sched_held() == 0) {
              #line 93 
              __warned = (_Bool)1;
              #line 93 
              lockdep_rcu_suspicious((char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h",93,(char *)"suspicious rcu_dereference_check() usage");
            }
          }
      }
      #line 93 
      struct tracepoint_func *tmp_11 = ________p1_0;
    }
    #line 93 
    rcu_read_unlock_sched_notrace();
  }
  #line 95 
  return;
}

#line 124 
#line 124 
struct tracepoint __tracepoint_fjes_hw_register_buff_addr;
#line 124  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h"
__inline static void trace_fjes_hw_register_buff_addr(union fjes_device_command_res *res_buf, int timeout)
{
  #line 124 
  int pscr_ret___0;
  #line 124 
  if ((int)static_key_false(& __tracepoint_fjes_hw_register_buff_addr.key) != 0) {
    #line 124 
    int pscr_ret__;
    #line 124 
    struct tracepoint_func *________p1;
    #line 124 
    struct tracepoint_func *it_func_ptr;
    #line 124 
    void *it_func;
    #line 124 
    void *__data;
    #line 124 
    int __idx = 0;
    {
      #line 124 
      void *__vpp_verify = (void *)0;
      #line 124 
      void *tmp = __vpp_verify;
    }
    #line 124 
    switch (4UL) {
      #line 124 
      int pfo_ret__;
      #line 124 
      int pfo_ret___0;
      #line 124 
      int pfo_ret___1;
      #line 124 
      int pfo_ret___2;
      #line 124 
      case (unsigned long)1: 
                             #line 124 
      ;
      #line 124 
      switch (4UL) {
        #line 124 
        case (unsigned long)1: 
                               #line 124 
        ;
        #line 125 
        ldv_inline_asm();
        #line 124 
        break;
        #line 124 
        case (unsigned long)2: 
                               #line 124 
        ;
        #line 125 
        ldv_inline_asm();
        #line 124 
        break;
        #line 124 
        case (unsigned long)4: 
                               #line 124 
        ;
        #line 125 
        ldv_inline_asm();
        #line 124 
        break;
        #line 124 
        case (unsigned long)8: 
                               #line 124 
        ;
        #line 125 
        ldv_inline_asm();
        #line 124 
        break;
        #line 124 
        default: 
                 #line 124 
        ;
        #line 124 
        __bad_percpu_size();
      }
      #line 124 
      pscr_ret__ = pfo_ret__;
      #line 124 
      break;
      #line 124 
      case (unsigned long)2: 
                             #line 124 
      ;
      #line 124 
      switch (4UL) {
        #line 124 
        case (unsigned long)1: 
                               #line 124 
        ;
        #line 125 
        ldv_inline_asm();
        #line 124 
        break;
        #line 124 
        case (unsigned long)2: 
                               #line 124 
        ;
        #line 125 
        ldv_inline_asm();
        #line 124 
        break;
        #line 124 
        case (unsigned long)4: 
                               #line 124 
        ;
        #line 125 
        ldv_inline_asm();
        #line 124 
        break;
        #line 124 
        case (unsigned long)8: 
                               #line 124 
        ;
        #line 125 
        ldv_inline_asm();
        #line 124 
        break;
        #line 124 
        default: 
                 #line 124 
        ;
        #line 124 
        __bad_percpu_size();
      }
      #line 124 
      pscr_ret__ = pfo_ret___0;
      #line 124 
      break;
      #line 124 
      case (unsigned long)4: 
                             #line 124 
      ;
      #line 124 
      switch (4UL) {
        #line 124 
        case (unsigned long)1: 
                               #line 124 
        ;
        #line 125 
        ldv_inline_asm();
        #line 124 
        break;
        #line 124 
        case (unsigned long)2: 
                               #line 124 
        ;
        #line 125 
        ldv_inline_asm();
        #line 124 
        break;
        #line 124 
        case (unsigned long)4: 
                               #line 124 
        ;
        #line 125 
        ldv_inline_asm();
        #line 124 
        break;
        #line 124 
        case (unsigned long)8: 
                               #line 124 
        ;
        #line 125 
        ldv_inline_asm();
        #line 124 
        break;
        #line 124 
        default: 
                 #line 124 
        ;
        #line 124 
        __bad_percpu_size();
      }
      #line 124 
      pscr_ret__ = pfo_ret___1;
      #line 124 
      break;
      #line 124 
      case (unsigned long)8: 
                             #line 124 
      ;
      #line 124 
      switch (4UL) {
        #line 124 
        case (unsigned long)1: 
                               #line 124 
        ;
        #line 125 
        ldv_inline_asm();
        #line 124 
        break;
        #line 124 
        case (unsigned long)2: 
                               #line 124 
        ;
        #line 125 
        ldv_inline_asm();
        #line 124 
        break;
        #line 124 
        case (unsigned long)4: 
                               #line 124 
        ;
        #line 125 
        ldv_inline_asm();
        #line 124 
        break;
        #line 124 
        case (unsigned long)8: 
                               #line 124 
        ;
        #line 125 
        ldv_inline_asm();
        #line 124 
        break;
        #line 124 
        default: 
                 #line 124 
        ;
        #line 124 
        __bad_percpu_size();
      }
      #line 124 
      pscr_ret__ = pfo_ret___2;
      #line 124 
      break;
      #line 124 
      default: 
               #line 124 
      ;
      #line 124 
      __bad_size_call_parameter();
      #line 124 
      break;
    }
    #line 124 
    if (cpumask_test_cpu(pscr_ret__,& __cpu_online_mask) == 0) 
                                                               #line 124 
                                                               return;
    {
      #line 124 
      int __ret_warn_on = 0;
      #line 124 
      if ((long)(__ret_warn_on != 0) != 0L) {
        #line 125 
        ldv_inline_asm();
        #line 126 
        ldv_inline_asm();
      }
      #line 124 
      long tmp_5 = (long)(__ret_warn_on != 0);
    }
    #line 124 
    __preempt_count_add(1);
    #line 125 
    ldv_inline_asm();
    {
      #line 125 
      union __anonunion___u_3018 __u;
      #line 124 
      __read_once_size((void *)(& __tracepoint_fjes_hw_register_buff_addr.funcs),(void *)(& __u.__c),8);
      #line 124 
      ________p1 = (__u.__val);
      }
    #line 124 
    it_func_ptr = ________p1;
    #line 124 
    if (it_func_ptr != (struct tracepoint_func *)0) 
      #line 124 
      while (1) {
        #line 124 
        it_func = it_func_ptr->func;
        #line 124 
        __data = it_func_ptr->data;
        #line 124 
        (*((void (*)(void *, union fjes_device_command_res *, int ))it_func))(__data,res_buf,timeout);
        #line 124 
        it_func_ptr ++;
        #line 125 
        ;
        #line 125 
        if (! (it_func_ptr->func != (void *)0)) 
                                                #line 124 
                                                break;
      }
    #line 126 
    ldv_inline_asm();
    #line 124 
    __preempt_count_sub(1);
  }
  {
    #line 124 
    void *__vpp_verify_0 = (void *)0;
    #line 124 
    void *tmp_13 = __vpp_verify_0;
  }
  #line 124 
  switch (4UL) {
    #line 124 
    int pfo_ret___5;
    #line 124 
    int pfo_ret___6;
    #line 124 
    int pfo_ret___3;
    #line 124 
    int pfo_ret___4;
    #line 124 
    case (unsigned long)1: 
                           #line 124 
    ;
    #line 124 
    switch (4UL) {
      #line 124 
      case (unsigned long)1: 
                             #line 124 
      ;
      #line 125 
      ldv_inline_asm();
      #line 124 
      break;
      #line 124 
      case (unsigned long)2: 
                             #line 124 
      ;
      #line 125 
      ldv_inline_asm();
      #line 124 
      break;
      #line 124 
      case (unsigned long)4: 
                             #line 124 
      ;
      #line 125 
      ldv_inline_asm();
      #line 124 
      break;
      #line 124 
      case (unsigned long)8: 
                             #line 124 
      ;
      #line 125 
      ldv_inline_asm();
      #line 124 
      break;
      #line 124 
      default: 
               #line 124 
      ;
      #line 124 
      __bad_percpu_size();
    }
    #line 124 
    pscr_ret___0 = pfo_ret___3;
    #line 124 
    break;
    #line 124 
    case (unsigned long)2: 
                           #line 124 
    ;
    #line 124 
    switch (4UL) {
      #line 124 
      case (unsigned long)1: 
                             #line 124 
      ;
      #line 125 
      ldv_inline_asm();
      #line 124 
      break;
      #line 124 
      case (unsigned long)2: 
                             #line 124 
      ;
      #line 125 
      ldv_inline_asm();
      #line 124 
      break;
      #line 124 
      case (unsigned long)4: 
                             #line 124 
      ;
      #line 125 
      ldv_inline_asm();
      #line 124 
      break;
      #line 124 
      case (unsigned long)8: 
                             #line 124 
      ;
      #line 125 
      ldv_inline_asm();
      #line 124 
      break;
      #line 124 
      default: 
               #line 124 
      ;
      #line 124 
      __bad_percpu_size();
    }
    #line 124 
    pscr_ret___0 = pfo_ret___4;
    #line 124 
    break;
    #line 124 
    case (unsigned long)4: 
                           #line 124 
    ;
    #line 124 
    switch (4UL) {
      #line 124 
      case (unsigned long)1: 
                             #line 124 
      ;
      #line 125 
      ldv_inline_asm();
      #line 124 
      break;
      #line 124 
      case (unsigned long)2: 
                             #line 124 
      ;
      #line 125 
      ldv_inline_asm();
      #line 124 
      break;
      #line 124 
      case (unsigned long)4: 
                             #line 124 
      ;
      #line 125 
      ldv_inline_asm();
      #line 124 
      break;
      #line 124 
      case (unsigned long)8: 
                             #line 124 
      ;
      #line 125 
      ldv_inline_asm();
      #line 124 
      break;
      #line 124 
      default: 
               #line 124 
      ;
      #line 124 
      __bad_percpu_size();
    }
    #line 124 
    pscr_ret___0 = pfo_ret___5;
    #line 124 
    break;
    #line 124 
    case (unsigned long)8: 
                           #line 124 
    ;
    #line 124 
    switch (4UL) {
      #line 124 
      case (unsigned long)1: 
                             #line 124 
      ;
      #line 125 
      ldv_inline_asm();
      #line 124 
      break;
      #line 124 
      case (unsigned long)2: 
                             #line 124 
      ;
      #line 125 
      ldv_inline_asm();
      #line 124 
      break;
      #line 124 
      case (unsigned long)4: 
                             #line 124 
      ;
      #line 125 
      ldv_inline_asm();
      #line 124 
      break;
      #line 124 
      case (unsigned long)8: 
                             #line 124 
      ;
      #line 125 
      ldv_inline_asm();
      #line 124 
      break;
      #line 124 
      default: 
               #line 124 
      ;
      #line 124 
      __bad_percpu_size();
    }
    #line 124 
    pscr_ret___0 = pfo_ret___6;
    #line 124 
    break;
    #line 124 
    default: 
             #line 124 
    ;
    #line 124 
    __bad_size_call_parameter();
    #line 124 
    break;
  }
  #line 124 
  if (cpumask_test_cpu(pscr_ret___0,& __cpu_online_mask) != 0) {
    #line 124 
    rcu_read_lock_sched_notrace();
    {
      #line 125 
      union __anonunion___u_3020 __u_0;
      #line 124 
      __read_once_size((void *)(& __tracepoint_fjes_hw_register_buff_addr.funcs),(void *)(& __u_0.__c),8);
      #line 124 
      struct tracepoint_func *________p1_0 = (__u_0.__val);
      {
        #line 124 
        bool __warned;
        #line 124 
        if (debug_lockdep_rcu_enabled() != 0) 
          #line 124 
          if (! __warned) {
            #line 124 
            if (rcu_read_lock_sched_held() == 0) {
              #line 124 
              __warned = (_Bool)1;
              #line 124 
              lockdep_rcu_suspicious((char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h",124,(char *)"suspicious rcu_dereference_check() usage");
            }
          }
      }
      #line 124 
      struct tracepoint_func *tmp_11 = ________p1_0;
    }
    #line 124 
    rcu_read_unlock_sched_notrace();
  }
  #line 126 
  return;
}

#line 141 
#line 141 
struct tracepoint __tracepoint_fjes_hw_register_buff_addr_err;
#line 141  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h"
__inline static void trace_fjes_hw_register_buff_addr_err(char *err)
{
  #line 141 
  int pscr_ret___0;
  #line 141 
  if ((int)static_key_false(& __tracepoint_fjes_hw_register_buff_addr_err.key) != 0) {
    #line 141 
    int pscr_ret__;
    #line 141 
    struct tracepoint_func *________p1;
    #line 141 
    struct tracepoint_func *it_func_ptr;
    #line 141 
    void *it_func;
    #line 141 
    void *__data;
    #line 141 
    int __idx = 0;
    {
      #line 141 
      void *__vpp_verify = (void *)0;
      #line 141 
      void *tmp = __vpp_verify;
    }
    #line 141 
    switch (4UL) {
      #line 141 
      int pfo_ret___1;
      #line 141 
      int pfo_ret___2;
      #line 141 
      int pfo_ret__;
      #line 141 
      int pfo_ret___0;
      #line 141 
      case (unsigned long)1: 
                             #line 141 
      ;
      #line 141 
      switch (4UL) {
        #line 141 
        case (unsigned long)1: 
                               #line 141 
        ;
        #line 142 
        ldv_inline_asm();
        #line 141 
        break;
        #line 141 
        case (unsigned long)2: 
                               #line 141 
        ;
        #line 142 
        ldv_inline_asm();
        #line 141 
        break;
        #line 141 
        case (unsigned long)4: 
                               #line 141 
        ;
        #line 142 
        ldv_inline_asm();
        #line 141 
        break;
        #line 141 
        case (unsigned long)8: 
                               #line 141 
        ;
        #line 142 
        ldv_inline_asm();
        #line 141 
        break;
        #line 141 
        default: 
                 #line 141 
        ;
        #line 141 
        __bad_percpu_size();
      }
      #line 141 
      pscr_ret__ = pfo_ret__;
      #line 141 
      break;
      #line 141 
      case (unsigned long)2: 
                             #line 141 
      ;
      #line 141 
      switch (4UL) {
        #line 141 
        case (unsigned long)1: 
                               #line 141 
        ;
        #line 142 
        ldv_inline_asm();
        #line 141 
        break;
        #line 141 
        case (unsigned long)2: 
                               #line 141 
        ;
        #line 142 
        ldv_inline_asm();
        #line 141 
        break;
        #line 141 
        case (unsigned long)4: 
                               #line 141 
        ;
        #line 142 
        ldv_inline_asm();
        #line 141 
        break;
        #line 141 
        case (unsigned long)8: 
                               #line 141 
        ;
        #line 142 
        ldv_inline_asm();
        #line 141 
        break;
        #line 141 
        default: 
                 #line 141 
        ;
        #line 141 
        __bad_percpu_size();
      }
      #line 141 
      pscr_ret__ = pfo_ret___0;
      #line 141 
      break;
      #line 141 
      case (unsigned long)4: 
                             #line 141 
      ;
      #line 141 
      switch (4UL) {
        #line 141 
        case (unsigned long)1: 
                               #line 141 
        ;
        #line 142 
        ldv_inline_asm();
        #line 141 
        break;
        #line 141 
        case (unsigned long)2: 
                               #line 141 
        ;
        #line 142 
        ldv_inline_asm();
        #line 141 
        break;
        #line 141 
        case (unsigned long)4: 
                               #line 141 
        ;
        #line 142 
        ldv_inline_asm();
        #line 141 
        break;
        #line 141 
        case (unsigned long)8: 
                               #line 141 
        ;
        #line 142 
        ldv_inline_asm();
        #line 141 
        break;
        #line 141 
        default: 
                 #line 141 
        ;
        #line 141 
        __bad_percpu_size();
      }
      #line 141 
      pscr_ret__ = pfo_ret___1;
      #line 141 
      break;
      #line 141 
      case (unsigned long)8: 
                             #line 141 
      ;
      #line 141 
      switch (4UL) {
        #line 141 
        case (unsigned long)1: 
                               #line 141 
        ;
        #line 142 
        ldv_inline_asm();
        #line 141 
        break;
        #line 141 
        case (unsigned long)2: 
                               #line 141 
        ;
        #line 142 
        ldv_inline_asm();
        #line 141 
        break;
        #line 141 
        case (unsigned long)4: 
                               #line 141 
        ;
        #line 142 
        ldv_inline_asm();
        #line 141 
        break;
        #line 141 
        case (unsigned long)8: 
                               #line 141 
        ;
        #line 142 
        ldv_inline_asm();
        #line 141 
        break;
        #line 141 
        default: 
                 #line 141 
        ;
        #line 141 
        __bad_percpu_size();
      }
      #line 141 
      pscr_ret__ = pfo_ret___2;
      #line 141 
      break;
      #line 141 
      default: 
               #line 141 
      ;
      #line 141 
      __bad_size_call_parameter();
      #line 141 
      break;
    }
    #line 141 
    if (cpumask_test_cpu(pscr_ret__,& __cpu_online_mask) == 0) 
                                                               #line 141 
                                                               return;
    {
      #line 141 
      int __ret_warn_on = 0;
      #line 141 
      if ((long)(__ret_warn_on != 0) != 0L) {
        #line 142 
        ldv_inline_asm();
        #line 143 
        ldv_inline_asm();
      }
      #line 141 
      long tmp_5 = (long)(__ret_warn_on != 0);
    }
    #line 141 
    __preempt_count_add(1);
    #line 142 
    ldv_inline_asm();
    {
      #line 142 
      union __anonunion___u_3022 __u;
      #line 141 
      __read_once_size((void *)(& __tracepoint_fjes_hw_register_buff_addr_err.funcs),(void *)(& __u.__c),8);
      #line 141 
      ________p1 = (__u.__val);
      }
    #line 141 
    it_func_ptr = ________p1;
    #line 141 
    if (it_func_ptr != (struct tracepoint_func *)0) 
      #line 141 
      while (1) {
        #line 141 
        it_func = it_func_ptr->func;
        #line 141 
        __data = it_func_ptr->data;
        #line 141 
        (*((void (*)(void *, char *))it_func))(__data,err);
        #line 141 
        it_func_ptr ++;
        #line 142 
        ;
        #line 142 
        if (! (it_func_ptr->func != (void *)0)) 
                                                #line 141 
                                                break;
      }
    #line 143 
    ldv_inline_asm();
    #line 141 
    __preempt_count_sub(1);
  }
  {
    #line 141 
    void *__vpp_verify_0 = (void *)0;
    #line 141 
    void *tmp_13 = __vpp_verify_0;
  }
  #line 141 
  switch (4UL) {
    #line 141 
    int pfo_ret___3;
    #line 141 
    int pfo_ret___4;
    #line 141 
    int pfo_ret___5;
    #line 141 
    int pfo_ret___6;
    #line 141 
    case (unsigned long)1: 
                           #line 141 
    ;
    #line 141 
    switch (4UL) {
      #line 141 
      case (unsigned long)1: 
                             #line 141 
      ;
      #line 142 
      ldv_inline_asm();
      #line 141 
      break;
      #line 141 
      case (unsigned long)2: 
                             #line 141 
      ;
      #line 142 
      ldv_inline_asm();
      #line 141 
      break;
      #line 141 
      case (unsigned long)4: 
                             #line 141 
      ;
      #line 142 
      ldv_inline_asm();
      #line 141 
      break;
      #line 141 
      case (unsigned long)8: 
                             #line 141 
      ;
      #line 142 
      ldv_inline_asm();
      #line 141 
      break;
      #line 141 
      default: 
               #line 141 
      ;
      #line 141 
      __bad_percpu_size();
    }
    #line 141 
    pscr_ret___0 = pfo_ret___3;
    #line 141 
    break;
    #line 141 
    case (unsigned long)2: 
                           #line 141 
    ;
    #line 141 
    switch (4UL) {
      #line 141 
      case (unsigned long)1: 
                             #line 141 
      ;
      #line 142 
      ldv_inline_asm();
      #line 141 
      break;
      #line 141 
      case (unsigned long)2: 
                             #line 141 
      ;
      #line 142 
      ldv_inline_asm();
      #line 141 
      break;
      #line 141 
      case (unsigned long)4: 
                             #line 141 
      ;
      #line 142 
      ldv_inline_asm();
      #line 141 
      break;
      #line 141 
      case (unsigned long)8: 
                             #line 141 
      ;
      #line 142 
      ldv_inline_asm();
      #line 141 
      break;
      #line 141 
      default: 
               #line 141 
      ;
      #line 141 
      __bad_percpu_size();
    }
    #line 141 
    pscr_ret___0 = pfo_ret___4;
    #line 141 
    break;
    #line 141 
    case (unsigned long)4: 
                           #line 141 
    ;
    #line 141 
    switch (4UL) {
      #line 141 
      case (unsigned long)1: 
                             #line 141 
      ;
      #line 142 
      ldv_inline_asm();
      #line 141 
      break;
      #line 141 
      case (unsigned long)2: 
                             #line 141 
      ;
      #line 142 
      ldv_inline_asm();
      #line 141 
      break;
      #line 141 
      case (unsigned long)4: 
                             #line 141 
      ;
      #line 142 
      ldv_inline_asm();
      #line 141 
      break;
      #line 141 
      case (unsigned long)8: 
                             #line 141 
      ;
      #line 142 
      ldv_inline_asm();
      #line 141 
      break;
      #line 141 
      default: 
               #line 141 
      ;
      #line 141 
      __bad_percpu_size();
    }
    #line 141 
    pscr_ret___0 = pfo_ret___5;
    #line 141 
    break;
    #line 141 
    case (unsigned long)8: 
                           #line 141 
    ;
    #line 141 
    switch (4UL) {
      #line 141 
      case (unsigned long)1: 
                             #line 141 
      ;
      #line 142 
      ldv_inline_asm();
      #line 141 
      break;
      #line 141 
      case (unsigned long)2: 
                             #line 141 
      ;
      #line 142 
      ldv_inline_asm();
      #line 141 
      break;
      #line 141 
      case (unsigned long)4: 
                             #line 141 
      ;
      #line 142 
      ldv_inline_asm();
      #line 141 
      break;
      #line 141 
      case (unsigned long)8: 
                             #line 141 
      ;
      #line 142 
      ldv_inline_asm();
      #line 141 
      break;
      #line 141 
      default: 
               #line 141 
      ;
      #line 141 
      __bad_percpu_size();
    }
    #line 141 
    pscr_ret___0 = pfo_ret___6;
    #line 141 
    break;
    #line 141 
    default: 
             #line 141 
    ;
    #line 141 
    __bad_size_call_parameter();
    #line 141 
    break;
  }
  #line 141 
  if (cpumask_test_cpu(pscr_ret___0,& __cpu_online_mask) != 0) {
    #line 141 
    rcu_read_lock_sched_notrace();
    {
      #line 142 
      union __anonunion___u_3024 __u_0;
      #line 141 
      __read_once_size((void *)(& __tracepoint_fjes_hw_register_buff_addr_err.funcs),(void *)(& __u_0.__c),8);
      #line 141 
      struct tracepoint_func *________p1_0 = (__u_0.__val);
      {
        #line 141 
        bool __warned;
        #line 141 
        if (debug_lockdep_rcu_enabled() != 0) 
          #line 141 
          if (! __warned) {
            #line 141 
            if (rcu_read_lock_sched_held() == 0) {
              #line 141 
              __warned = (_Bool)1;
              #line 141 
              lockdep_rcu_suspicious((char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h",141,(char *)"suspicious rcu_dereference_check() usage");
            }
          }
      }
      #line 141 
      struct tracepoint_func *tmp_11 = ________p1_0;
    }
    #line 141 
    rcu_read_unlock_sched_notrace();
  }
  #line 143 
  return;
}

#line 153 
#line 153 
struct tracepoint __tracepoint_fjes_hw_unregister_buff_addr_req;
#line 153  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h"
__inline static void trace_fjes_hw_unregister_buff_addr_req(union fjes_device_command_req *req_buf)
{
  #line 153 
  int pscr_ret___0;
  #line 153 
  if ((int)static_key_false(& __tracepoint_fjes_hw_unregister_buff_addr_req.key) != 0) {
    #line 153 
    int pscr_ret__;
    #line 153 
    struct tracepoint_func *________p1;
    #line 153 
    struct tracepoint_func *it_func_ptr;
    #line 153 
    void *it_func;
    #line 153 
    void *__data;
    #line 153 
    int __idx = 0;
    {
      #line 153 
      void *__vpp_verify = (void *)0;
      #line 153 
      void *tmp = __vpp_verify;
    }
    #line 153 
    switch (4UL) {
      #line 153 
      int pfo_ret___1;
      #line 153 
      int pfo_ret___2;
      #line 153 
      int pfo_ret__;
      #line 153 
      int pfo_ret___0;
      #line 153 
      case (unsigned long)1: 
                             #line 153 
      ;
      #line 153 
      switch (4UL) {
        #line 153 
        case (unsigned long)1: 
                               #line 153 
        ;
        #line 154 
        ldv_inline_asm();
        #line 153 
        break;
        #line 153 
        case (unsigned long)2: 
                               #line 153 
        ;
        #line 154 
        ldv_inline_asm();
        #line 153 
        break;
        #line 153 
        case (unsigned long)4: 
                               #line 153 
        ;
        #line 154 
        ldv_inline_asm();
        #line 153 
        break;
        #line 153 
        case (unsigned long)8: 
                               #line 153 
        ;
        #line 154 
        ldv_inline_asm();
        #line 153 
        break;
        #line 153 
        default: 
                 #line 153 
        ;
        #line 153 
        __bad_percpu_size();
      }
      #line 153 
      pscr_ret__ = pfo_ret__;
      #line 153 
      break;
      #line 153 
      case (unsigned long)2: 
                             #line 153 
      ;
      #line 153 
      switch (4UL) {
        #line 153 
        case (unsigned long)1: 
                               #line 153 
        ;
        #line 154 
        ldv_inline_asm();
        #line 153 
        break;
        #line 153 
        case (unsigned long)2: 
                               #line 153 
        ;
        #line 154 
        ldv_inline_asm();
        #line 153 
        break;
        #line 153 
        case (unsigned long)4: 
                               #line 153 
        ;
        #line 154 
        ldv_inline_asm();
        #line 153 
        break;
        #line 153 
        case (unsigned long)8: 
                               #line 153 
        ;
        #line 154 
        ldv_inline_asm();
        #line 153 
        break;
        #line 153 
        default: 
                 #line 153 
        ;
        #line 153 
        __bad_percpu_size();
      }
      #line 153 
      pscr_ret__ = pfo_ret___0;
      #line 153 
      break;
      #line 153 
      case (unsigned long)4: 
                             #line 153 
      ;
      #line 153 
      switch (4UL) {
        #line 153 
        case (unsigned long)1: 
                               #line 153 
        ;
        #line 154 
        ldv_inline_asm();
        #line 153 
        break;
        #line 153 
        case (unsigned long)2: 
                               #line 153 
        ;
        #line 154 
        ldv_inline_asm();
        #line 153 
        break;
        #line 153 
        case (unsigned long)4: 
                               #line 153 
        ;
        #line 154 
        ldv_inline_asm();
        #line 153 
        break;
        #line 153 
        case (unsigned long)8: 
                               #line 153 
        ;
        #line 154 
        ldv_inline_asm();
        #line 153 
        break;
        #line 153 
        default: 
                 #line 153 
        ;
        #line 153 
        __bad_percpu_size();
      }
      #line 153 
      pscr_ret__ = pfo_ret___1;
      #line 153 
      break;
      #line 153 
      case (unsigned long)8: 
                             #line 153 
      ;
      #line 153 
      switch (4UL) {
        #line 153 
        case (unsigned long)1: 
                               #line 153 
        ;
        #line 154 
        ldv_inline_asm();
        #line 153 
        break;
        #line 153 
        case (unsigned long)2: 
                               #line 153 
        ;
        #line 154 
        ldv_inline_asm();
        #line 153 
        break;
        #line 153 
        case (unsigned long)4: 
                               #line 153 
        ;
        #line 154 
        ldv_inline_asm();
        #line 153 
        break;
        #line 153 
        case (unsigned long)8: 
                               #line 153 
        ;
        #line 154 
        ldv_inline_asm();
        #line 153 
        break;
        #line 153 
        default: 
                 #line 153 
        ;
        #line 153 
        __bad_percpu_size();
      }
      #line 153 
      pscr_ret__ = pfo_ret___2;
      #line 153 
      break;
      #line 153 
      default: 
               #line 153 
      ;
      #line 153 
      __bad_size_call_parameter();
      #line 153 
      break;
    }
    #line 153 
    if (cpumask_test_cpu(pscr_ret__,& __cpu_online_mask) == 0) 
                                                               #line 153 
                                                               return;
    {
      #line 153 
      int __ret_warn_on = 0;
      #line 153 
      if ((long)(__ret_warn_on != 0) != 0L) {
        #line 154 
        ldv_inline_asm();
        #line 155 
        ldv_inline_asm();
      }
      #line 153 
      long tmp_5 = (long)(__ret_warn_on != 0);
    }
    #line 153 
    __preempt_count_add(1);
    #line 154 
    ldv_inline_asm();
    {
      #line 154 
      union __anonunion___u_3026 __u;
      #line 153 
      __read_once_size((void *)(& __tracepoint_fjes_hw_unregister_buff_addr_req.funcs),(void *)(& __u.__c),8);
      #line 153 
      ________p1 = (__u.__val);
      }
    #line 153 
    it_func_ptr = ________p1;
    #line 153 
    if (it_func_ptr != (struct tracepoint_func *)0) 
      #line 153 
      while (1) {
        #line 153 
        it_func = it_func_ptr->func;
        #line 153 
        __data = it_func_ptr->data;
        #line 153 
        (*((void (*)(void *, union fjes_device_command_req *))it_func))(__data,req_buf);
        #line 153 
        it_func_ptr ++;
        #line 154 
        ;
        #line 154 
        if (! (it_func_ptr->func != (void *)0)) 
                                                #line 153 
                                                break;
      }
    #line 155 
    ldv_inline_asm();
    #line 153 
    __preempt_count_sub(1);
  }
  {
    #line 153 
    void *__vpp_verify_0 = (void *)0;
    #line 153 
    void *tmp_13 = __vpp_verify_0;
  }
  #line 153 
  switch (4UL) {
    #line 153 
    int pfo_ret___3;
    #line 153 
    int pfo_ret___4;
    #line 153 
    int pfo_ret___5;
    #line 153 
    int pfo_ret___6;
    #line 153 
    case (unsigned long)1: 
                           #line 153 
    ;
    #line 153 
    switch (4UL) {
      #line 153 
      case (unsigned long)1: 
                             #line 153 
      ;
      #line 154 
      ldv_inline_asm();
      #line 153 
      break;
      #line 153 
      case (unsigned long)2: 
                             #line 153 
      ;
      #line 154 
      ldv_inline_asm();
      #line 153 
      break;
      #line 153 
      case (unsigned long)4: 
                             #line 153 
      ;
      #line 154 
      ldv_inline_asm();
      #line 153 
      break;
      #line 153 
      case (unsigned long)8: 
                             #line 153 
      ;
      #line 154 
      ldv_inline_asm();
      #line 153 
      break;
      #line 153 
      default: 
               #line 153 
      ;
      #line 153 
      __bad_percpu_size();
    }
    #line 153 
    pscr_ret___0 = pfo_ret___3;
    #line 153 
    break;
    #line 153 
    case (unsigned long)2: 
                           #line 153 
    ;
    #line 153 
    switch (4UL) {
      #line 153 
      case (unsigned long)1: 
                             #line 153 
      ;
      #line 154 
      ldv_inline_asm();
      #line 153 
      break;
      #line 153 
      case (unsigned long)2: 
                             #line 153 
      ;
      #line 154 
      ldv_inline_asm();
      #line 153 
      break;
      #line 153 
      case (unsigned long)4: 
                             #line 153 
      ;
      #line 154 
      ldv_inline_asm();
      #line 153 
      break;
      #line 153 
      case (unsigned long)8: 
                             #line 153 
      ;
      #line 154 
      ldv_inline_asm();
      #line 153 
      break;
      #line 153 
      default: 
               #line 153 
      ;
      #line 153 
      __bad_percpu_size();
    }
    #line 153 
    pscr_ret___0 = pfo_ret___4;
    #line 153 
    break;
    #line 153 
    case (unsigned long)4: 
                           #line 153 
    ;
    #line 153 
    switch (4UL) {
      #line 153 
      case (unsigned long)1: 
                             #line 153 
      ;
      #line 154 
      ldv_inline_asm();
      #line 153 
      break;
      #line 153 
      case (unsigned long)2: 
                             #line 153 
      ;
      #line 154 
      ldv_inline_asm();
      #line 153 
      break;
      #line 153 
      case (unsigned long)4: 
                             #line 153 
      ;
      #line 154 
      ldv_inline_asm();
      #line 153 
      break;
      #line 153 
      case (unsigned long)8: 
                             #line 153 
      ;
      #line 154 
      ldv_inline_asm();
      #line 153 
      break;
      #line 153 
      default: 
               #line 153 
      ;
      #line 153 
      __bad_percpu_size();
    }
    #line 153 
    pscr_ret___0 = pfo_ret___5;
    #line 153 
    break;
    #line 153 
    case (unsigned long)8: 
                           #line 153 
    ;
    #line 153 
    switch (4UL) {
      #line 153 
      case (unsigned long)1: 
                             #line 153 
      ;
      #line 154 
      ldv_inline_asm();
      #line 153 
      break;
      #line 153 
      case (unsigned long)2: 
                             #line 153 
      ;
      #line 154 
      ldv_inline_asm();
      #line 153 
      break;
      #line 153 
      case (unsigned long)4: 
                             #line 153 
      ;
      #line 154 
      ldv_inline_asm();
      #line 153 
      break;
      #line 153 
      case (unsigned long)8: 
                             #line 153 
      ;
      #line 154 
      ldv_inline_asm();
      #line 153 
      break;
      #line 153 
      default: 
               #line 153 
      ;
      #line 153 
      __bad_percpu_size();
    }
    #line 153 
    pscr_ret___0 = pfo_ret___6;
    #line 153 
    break;
    #line 153 
    default: 
             #line 153 
    ;
    #line 153 
    __bad_size_call_parameter();
    #line 153 
    break;
  }
  #line 153 
  if (cpumask_test_cpu(pscr_ret___0,& __cpu_online_mask) != 0) {
    #line 153 
    rcu_read_lock_sched_notrace();
    {
      #line 154 
      union __anonunion___u_3028 __u_0;
      #line 153 
      __read_once_size((void *)(& __tracepoint_fjes_hw_unregister_buff_addr_req.funcs),(void *)(& __u_0.__c),8);
      #line 153 
      struct tracepoint_func *________p1_0 = (__u_0.__val);
      {
        #line 153 
        bool __warned;
        #line 153 
        if (debug_lockdep_rcu_enabled() != 0) 
          #line 153 
          if (! __warned) {
            #line 153 
            if (rcu_read_lock_sched_held() == 0) {
              #line 153 
              __warned = (_Bool)1;
              #line 153 
              lockdep_rcu_suspicious((char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h",153,(char *)"suspicious rcu_dereference_check() usage");
            }
          }
      }
      #line 153 
      struct tracepoint_func *tmp_11 = ________p1_0;
    }
    #line 153 
    rcu_read_unlock_sched_notrace();
  }
  #line 155 
  return;
}

#line 168 
#line 168 
struct tracepoint __tracepoint_fjes_hw_unregister_buff_addr;
#line 168  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h"
__inline static void trace_fjes_hw_unregister_buff_addr(union fjes_device_command_res *res_buf, int timeout)
{
  #line 168 
  int pscr_ret___0;
  #line 168 
  if ((int)static_key_false(& __tracepoint_fjes_hw_unregister_buff_addr.key) != 0) {
    #line 168 
    int pscr_ret__;
    #line 168 
    struct tracepoint_func *________p1;
    #line 168 
    struct tracepoint_func *it_func_ptr;
    #line 168 
    void *it_func;
    #line 168 
    void *__data;
    #line 168 
    int __idx = 0;
    {
      #line 168 
      void *__vpp_verify = (void *)0;
      #line 168 
      void *tmp = __vpp_verify;
    }
    #line 168 
    switch (4UL) {
      #line 168 
      int pfo_ret___0;
      #line 168 
      int pfo_ret___1;
      #line 168 
      int pfo_ret___2;
      #line 168 
      int pfo_ret__;
      #line 168 
      case (unsigned long)1: 
                             #line 168 
      ;
      #line 168 
      switch (4UL) {
        #line 168 
        case (unsigned long)1: 
                               #line 168 
        ;
        #line 169 
        ldv_inline_asm();
        #line 168 
        break;
        #line 168 
        case (unsigned long)2: 
                               #line 168 
        ;
        #line 169 
        ldv_inline_asm();
        #line 168 
        break;
        #line 168 
        case (unsigned long)4: 
                               #line 168 
        ;
        #line 169 
        ldv_inline_asm();
        #line 168 
        break;
        #line 168 
        case (unsigned long)8: 
                               #line 168 
        ;
        #line 169 
        ldv_inline_asm();
        #line 168 
        break;
        #line 168 
        default: 
                 #line 168 
        ;
        #line 168 
        __bad_percpu_size();
      }
      #line 168 
      pscr_ret__ = pfo_ret__;
      #line 168 
      break;
      #line 168 
      case (unsigned long)2: 
                             #line 168 
      ;
      #line 168 
      switch (4UL) {
        #line 168 
        case (unsigned long)1: 
                               #line 168 
        ;
        #line 169 
        ldv_inline_asm();
        #line 168 
        break;
        #line 168 
        case (unsigned long)2: 
                               #line 168 
        ;
        #line 169 
        ldv_inline_asm();
        #line 168 
        break;
        #line 168 
        case (unsigned long)4: 
                               #line 168 
        ;
        #line 169 
        ldv_inline_asm();
        #line 168 
        break;
        #line 168 
        case (unsigned long)8: 
                               #line 168 
        ;
        #line 169 
        ldv_inline_asm();
        #line 168 
        break;
        #line 168 
        default: 
                 #line 168 
        ;
        #line 168 
        __bad_percpu_size();
      }
      #line 168 
      pscr_ret__ = pfo_ret___0;
      #line 168 
      break;
      #line 168 
      case (unsigned long)4: 
                             #line 168 
      ;
      #line 168 
      switch (4UL) {
        #line 168 
        case (unsigned long)1: 
                               #line 168 
        ;
        #line 169 
        ldv_inline_asm();
        #line 168 
        break;
        #line 168 
        case (unsigned long)2: 
                               #line 168 
        ;
        #line 169 
        ldv_inline_asm();
        #line 168 
        break;
        #line 168 
        case (unsigned long)4: 
                               #line 168 
        ;
        #line 169 
        ldv_inline_asm();
        #line 168 
        break;
        #line 168 
        case (unsigned long)8: 
                               #line 168 
        ;
        #line 169 
        ldv_inline_asm();
        #line 168 
        break;
        #line 168 
        default: 
                 #line 168 
        ;
        #line 168 
        __bad_percpu_size();
      }
      #line 168 
      pscr_ret__ = pfo_ret___1;
      #line 168 
      break;
      #line 168 
      case (unsigned long)8: 
                             #line 168 
      ;
      #line 168 
      switch (4UL) {
        #line 168 
        case (unsigned long)1: 
                               #line 168 
        ;
        #line 169 
        ldv_inline_asm();
        #line 168 
        break;
        #line 168 
        case (unsigned long)2: 
                               #line 168 
        ;
        #line 169 
        ldv_inline_asm();
        #line 168 
        break;
        #line 168 
        case (unsigned long)4: 
                               #line 168 
        ;
        #line 169 
        ldv_inline_asm();
        #line 168 
        break;
        #line 168 
        case (unsigned long)8: 
                               #line 168 
        ;
        #line 169 
        ldv_inline_asm();
        #line 168 
        break;
        #line 168 
        default: 
                 #line 168 
        ;
        #line 168 
        __bad_percpu_size();
      }
      #line 168 
      pscr_ret__ = pfo_ret___2;
      #line 168 
      break;
      #line 168 
      default: 
               #line 168 
      ;
      #line 168 
      __bad_size_call_parameter();
      #line 168 
      break;
    }
    #line 168 
    if (cpumask_test_cpu(pscr_ret__,& __cpu_online_mask) == 0) 
                                                               #line 168 
                                                               return;
    {
      #line 168 
      int __ret_warn_on = 0;
      #line 168 
      if ((long)(__ret_warn_on != 0) != 0L) {
        #line 169 
        ldv_inline_asm();
        #line 170 
        ldv_inline_asm();
      }
      #line 168 
      long tmp_5 = (long)(__ret_warn_on != 0);
    }
    #line 168 
    __preempt_count_add(1);
    #line 169 
    ldv_inline_asm();
    {
      #line 169 
      union __anonunion___u_3030 __u;
      #line 168 
      __read_once_size((void *)(& __tracepoint_fjes_hw_unregister_buff_addr.funcs),(void *)(& __u.__c),8);
      #line 168 
      ________p1 = (__u.__val);
      }
    #line 168 
    it_func_ptr = ________p1;
    #line 168 
    if (it_func_ptr != (struct tracepoint_func *)0) 
      #line 168 
      while (1) {
        #line 168 
        it_func = it_func_ptr->func;
        #line 168 
        __data = it_func_ptr->data;
        #line 168 
        (*((void (*)(void *, union fjes_device_command_res *, int ))it_func))(__data,res_buf,timeout);
        #line 168 
        it_func_ptr ++;
        #line 169 
        ;
        #line 169 
        if (! (it_func_ptr->func != (void *)0)) 
                                                #line 168 
                                                break;
      }
    #line 170 
    ldv_inline_asm();
    #line 168 
    __preempt_count_sub(1);
  }
  {
    #line 168 
    void *__vpp_verify_0 = (void *)0;
    #line 168 
    void *tmp_13 = __vpp_verify_0;
  }
  #line 168 
  switch (4UL) {
    #line 168 
    int pfo_ret___6;
    #line 168 
    int pfo_ret___3;
    #line 168 
    int pfo_ret___4;
    #line 168 
    int pfo_ret___5;
    #line 168 
    case (unsigned long)1: 
                           #line 168 
    ;
    #line 168 
    switch (4UL) {
      #line 168 
      case (unsigned long)1: 
                             #line 168 
      ;
      #line 169 
      ldv_inline_asm();
      #line 168 
      break;
      #line 168 
      case (unsigned long)2: 
                             #line 168 
      ;
      #line 169 
      ldv_inline_asm();
      #line 168 
      break;
      #line 168 
      case (unsigned long)4: 
                             #line 168 
      ;
      #line 169 
      ldv_inline_asm();
      #line 168 
      break;
      #line 168 
      case (unsigned long)8: 
                             #line 168 
      ;
      #line 169 
      ldv_inline_asm();
      #line 168 
      break;
      #line 168 
      default: 
               #line 168 
      ;
      #line 168 
      __bad_percpu_size();
    }
    #line 168 
    pscr_ret___0 = pfo_ret___3;
    #line 168 
    break;
    #line 168 
    case (unsigned long)2: 
                           #line 168 
    ;
    #line 168 
    switch (4UL) {
      #line 168 
      case (unsigned long)1: 
                             #line 168 
      ;
      #line 169 
      ldv_inline_asm();
      #line 168 
      break;
      #line 168 
      case (unsigned long)2: 
                             #line 168 
      ;
      #line 169 
      ldv_inline_asm();
      #line 168 
      break;
      #line 168 
      case (unsigned long)4: 
                             #line 168 
      ;
      #line 169 
      ldv_inline_asm();
      #line 168 
      break;
      #line 168 
      case (unsigned long)8: 
                             #line 168 
      ;
      #line 169 
      ldv_inline_asm();
      #line 168 
      break;
      #line 168 
      default: 
               #line 168 
      ;
      #line 168 
      __bad_percpu_size();
    }
    #line 168 
    pscr_ret___0 = pfo_ret___4;
    #line 168 
    break;
    #line 168 
    case (unsigned long)4: 
                           #line 168 
    ;
    #line 168 
    switch (4UL) {
      #line 168 
      case (unsigned long)1: 
                             #line 168 
      ;
      #line 169 
      ldv_inline_asm();
      #line 168 
      break;
      #line 168 
      case (unsigned long)2: 
                             #line 168 
      ;
      #line 169 
      ldv_inline_asm();
      #line 168 
      break;
      #line 168 
      case (unsigned long)4: 
                             #line 168 
      ;
      #line 169 
      ldv_inline_asm();
      #line 168 
      break;
      #line 168 
      case (unsigned long)8: 
                             #line 168 
      ;
      #line 169 
      ldv_inline_asm();
      #line 168 
      break;
      #line 168 
      default: 
               #line 168 
      ;
      #line 168 
      __bad_percpu_size();
    }
    #line 168 
    pscr_ret___0 = pfo_ret___5;
    #line 168 
    break;
    #line 168 
    case (unsigned long)8: 
                           #line 168 
    ;
    #line 168 
    switch (4UL) {
      #line 168 
      case (unsigned long)1: 
                             #line 168 
      ;
      #line 169 
      ldv_inline_asm();
      #line 168 
      break;
      #line 168 
      case (unsigned long)2: 
                             #line 168 
      ;
      #line 169 
      ldv_inline_asm();
      #line 168 
      break;
      #line 168 
      case (unsigned long)4: 
                             #line 168 
      ;
      #line 169 
      ldv_inline_asm();
      #line 168 
      break;
      #line 168 
      case (unsigned long)8: 
                             #line 168 
      ;
      #line 169 
      ldv_inline_asm();
      #line 168 
      break;
      #line 168 
      default: 
               #line 168 
      ;
      #line 168 
      __bad_percpu_size();
    }
    #line 168 
    pscr_ret___0 = pfo_ret___6;
    #line 168 
    break;
    #line 168 
    default: 
             #line 168 
    ;
    #line 168 
    __bad_size_call_parameter();
    #line 168 
    break;
  }
  #line 168 
  if (cpumask_test_cpu(pscr_ret___0,& __cpu_online_mask) != 0) {
    #line 168 
    rcu_read_lock_sched_notrace();
    {
      #line 169 
      union __anonunion___u_3032 __u_0;
      #line 168 
      __read_once_size((void *)(& __tracepoint_fjes_hw_unregister_buff_addr.funcs),(void *)(& __u_0.__c),8);
      #line 168 
      struct tracepoint_func *________p1_0 = (__u_0.__val);
      {
        #line 168 
        bool __warned;
        #line 168 
        if (debug_lockdep_rcu_enabled() != 0) 
          #line 168 
          if (! __warned) {
            #line 168 
            if (rcu_read_lock_sched_held() == 0) {
              #line 168 
              __warned = (_Bool)1;
              #line 168 
              lockdep_rcu_suspicious((char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h",168,(char *)"suspicious rcu_dereference_check() usage");
            }
          }
      }
      #line 168 
      struct tracepoint_func *tmp_11 = ________p1_0;
    }
    #line 168 
    rcu_read_unlock_sched_notrace();
  }
  #line 170 
  return;
}

#line 185 
#line 185 
struct tracepoint __tracepoint_fjes_hw_unregister_buff_addr_err;
#line 185  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h"
__inline static void trace_fjes_hw_unregister_buff_addr_err(char *err)
{
  #line 185 
  int pscr_ret___0;
  #line 185 
  if ((int)static_key_false(& __tracepoint_fjes_hw_unregister_buff_addr_err.key) != 0) {
    #line 185 
    int pscr_ret__;
    #line 185 
    struct tracepoint_func *________p1;
    #line 185 
    struct tracepoint_func *it_func_ptr;
    #line 185 
    void *it_func;
    #line 185 
    void *__data;
    #line 185 
    int __idx = 0;
    {
      #line 185 
      void *__vpp_verify = (void *)0;
      #line 185 
      void *tmp = __vpp_verify;
    }
    #line 185 
    switch (4UL) {
      #line 185 
      int pfo_ret__;
      #line 185 
      int pfo_ret___0;
      #line 185 
      int pfo_ret___1;
      #line 185 
      int pfo_ret___2;
      #line 185 
      case (unsigned long)1: 
                             #line 185 
      ;
      #line 185 
      switch (4UL) {
        #line 185 
        case (unsigned long)1: 
                               #line 185 
        ;
        #line 186 
        ldv_inline_asm();
        #line 185 
        break;
        #line 185 
        case (unsigned long)2: 
                               #line 185 
        ;
        #line 186 
        ldv_inline_asm();
        #line 185 
        break;
        #line 185 
        case (unsigned long)4: 
                               #line 185 
        ;
        #line 186 
        ldv_inline_asm();
        #line 185 
        break;
        #line 185 
        case (unsigned long)8: 
                               #line 185 
        ;
        #line 186 
        ldv_inline_asm();
        #line 185 
        break;
        #line 185 
        default: 
                 #line 185 
        ;
        #line 185 
        __bad_percpu_size();
      }
      #line 185 
      pscr_ret__ = pfo_ret__;
      #line 185 
      break;
      #line 185 
      case (unsigned long)2: 
                             #line 185 
      ;
      #line 185 
      switch (4UL) {
        #line 185 
        case (unsigned long)1: 
                               #line 185 
        ;
        #line 186 
        ldv_inline_asm();
        #line 185 
        break;
        #line 185 
        case (unsigned long)2: 
                               #line 185 
        ;
        #line 186 
        ldv_inline_asm();
        #line 185 
        break;
        #line 185 
        case (unsigned long)4: 
                               #line 185 
        ;
        #line 186 
        ldv_inline_asm();
        #line 185 
        break;
        #line 185 
        case (unsigned long)8: 
                               #line 185 
        ;
        #line 186 
        ldv_inline_asm();
        #line 185 
        break;
        #line 185 
        default: 
                 #line 185 
        ;
        #line 185 
        __bad_percpu_size();
      }
      #line 185 
      pscr_ret__ = pfo_ret___0;
      #line 185 
      break;
      #line 185 
      case (unsigned long)4: 
                             #line 185 
      ;
      #line 185 
      switch (4UL) {
        #line 185 
        case (unsigned long)1: 
                               #line 185 
        ;
        #line 186 
        ldv_inline_asm();
        #line 185 
        break;
        #line 185 
        case (unsigned long)2: 
                               #line 185 
        ;
        #line 186 
        ldv_inline_asm();
        #line 185 
        break;
        #line 185 
        case (unsigned long)4: 
                               #line 185 
        ;
        #line 186 
        ldv_inline_asm();
        #line 185 
        break;
        #line 185 
        case (unsigned long)8: 
                               #line 185 
        ;
        #line 186 
        ldv_inline_asm();
        #line 185 
        break;
        #line 185 
        default: 
                 #line 185 
        ;
        #line 185 
        __bad_percpu_size();
      }
      #line 185 
      pscr_ret__ = pfo_ret___1;
      #line 185 
      break;
      #line 185 
      case (unsigned long)8: 
                             #line 185 
      ;
      #line 185 
      switch (4UL) {
        #line 185 
        case (unsigned long)1: 
                               #line 185 
        ;
        #line 186 
        ldv_inline_asm();
        #line 185 
        break;
        #line 185 
        case (unsigned long)2: 
                               #line 185 
        ;
        #line 186 
        ldv_inline_asm();
        #line 185 
        break;
        #line 185 
        case (unsigned long)4: 
                               #line 185 
        ;
        #line 186 
        ldv_inline_asm();
        #line 185 
        break;
        #line 185 
        case (unsigned long)8: 
                               #line 185 
        ;
        #line 186 
        ldv_inline_asm();
        #line 185 
        break;
        #line 185 
        default: 
                 #line 185 
        ;
        #line 185 
        __bad_percpu_size();
      }
      #line 185 
      pscr_ret__ = pfo_ret___2;
      #line 185 
      break;
      #line 185 
      default: 
               #line 185 
      ;
      #line 185 
      __bad_size_call_parameter();
      #line 185 
      break;
    }
    #line 185 
    if (cpumask_test_cpu(pscr_ret__,& __cpu_online_mask) == 0) 
                                                               #line 185 
                                                               return;
    {
      #line 185 
      int __ret_warn_on = 0;
      #line 185 
      if ((long)(__ret_warn_on != 0) != 0L) {
        #line 186 
        ldv_inline_asm();
        #line 187 
        ldv_inline_asm();
      }
      #line 185 
      long tmp_5 = (long)(__ret_warn_on != 0);
    }
    #line 185 
    __preempt_count_add(1);
    #line 186 
    ldv_inline_asm();
    {
      #line 186 
      union __anonunion___u_3034 __u;
      #line 185 
      __read_once_size((void *)(& __tracepoint_fjes_hw_unregister_buff_addr_err.funcs),(void *)(& __u.__c),8);
      #line 185 
      ________p1 = (__u.__val);
      }
    #line 185 
    it_func_ptr = ________p1;
    #line 185 
    if (it_func_ptr != (struct tracepoint_func *)0) 
      #line 185 
      while (1) {
        #line 185 
        it_func = it_func_ptr->func;
        #line 185 
        __data = it_func_ptr->data;
        #line 185 
        (*((void (*)(void *, char *))it_func))(__data,err);
        #line 185 
        it_func_ptr ++;
        #line 186 
        ;
        #line 186 
        if (! (it_func_ptr->func != (void *)0)) 
                                                #line 185 
                                                break;
      }
    #line 187 
    ldv_inline_asm();
    #line 185 
    __preempt_count_sub(1);
  }
  {
    #line 185 
    void *__vpp_verify_0 = (void *)0;
    #line 185 
    void *tmp_13 = __vpp_verify_0;
  }
  #line 185 
  switch (4UL) {
    #line 185 
    int pfo_ret___5;
    #line 185 
    int pfo_ret___6;
    #line 185 
    int pfo_ret___3;
    #line 185 
    int pfo_ret___4;
    #line 185 
    case (unsigned long)1: 
                           #line 185 
    ;
    #line 185 
    switch (4UL) {
      #line 185 
      case (unsigned long)1: 
                             #line 185 
      ;
      #line 186 
      ldv_inline_asm();
      #line 185 
      break;
      #line 185 
      case (unsigned long)2: 
                             #line 185 
      ;
      #line 186 
      ldv_inline_asm();
      #line 185 
      break;
      #line 185 
      case (unsigned long)4: 
                             #line 185 
      ;
      #line 186 
      ldv_inline_asm();
      #line 185 
      break;
      #line 185 
      case (unsigned long)8: 
                             #line 185 
      ;
      #line 186 
      ldv_inline_asm();
      #line 185 
      break;
      #line 185 
      default: 
               #line 185 
      ;
      #line 185 
      __bad_percpu_size();
    }
    #line 185 
    pscr_ret___0 = pfo_ret___3;
    #line 185 
    break;
    #line 185 
    case (unsigned long)2: 
                           #line 185 
    ;
    #line 185 
    switch (4UL) {
      #line 185 
      case (unsigned long)1: 
                             #line 185 
      ;
      #line 186 
      ldv_inline_asm();
      #line 185 
      break;
      #line 185 
      case (unsigned long)2: 
                             #line 185 
      ;
      #line 186 
      ldv_inline_asm();
      #line 185 
      break;
      #line 185 
      case (unsigned long)4: 
                             #line 185 
      ;
      #line 186 
      ldv_inline_asm();
      #line 185 
      break;
      #line 185 
      case (unsigned long)8: 
                             #line 185 
      ;
      #line 186 
      ldv_inline_asm();
      #line 185 
      break;
      #line 185 
      default: 
               #line 185 
      ;
      #line 185 
      __bad_percpu_size();
    }
    #line 185 
    pscr_ret___0 = pfo_ret___4;
    #line 185 
    break;
    #line 185 
    case (unsigned long)4: 
                           #line 185 
    ;
    #line 185 
    switch (4UL) {
      #line 185 
      case (unsigned long)1: 
                             #line 185 
      ;
      #line 186 
      ldv_inline_asm();
      #line 185 
      break;
      #line 185 
      case (unsigned long)2: 
                             #line 185 
      ;
      #line 186 
      ldv_inline_asm();
      #line 185 
      break;
      #line 185 
      case (unsigned long)4: 
                             #line 185 
      ;
      #line 186 
      ldv_inline_asm();
      #line 185 
      break;
      #line 185 
      case (unsigned long)8: 
                             #line 185 
      ;
      #line 186 
      ldv_inline_asm();
      #line 185 
      break;
      #line 185 
      default: 
               #line 185 
      ;
      #line 185 
      __bad_percpu_size();
    }
    #line 185 
    pscr_ret___0 = pfo_ret___5;
    #line 185 
    break;
    #line 185 
    case (unsigned long)8: 
                           #line 185 
    ;
    #line 185 
    switch (4UL) {
      #line 185 
      case (unsigned long)1: 
                             #line 185 
      ;
      #line 186 
      ldv_inline_asm();
      #line 185 
      break;
      #line 185 
      case (unsigned long)2: 
                             #line 185 
      ;
      #line 186 
      ldv_inline_asm();
      #line 185 
      break;
      #line 185 
      case (unsigned long)4: 
                             #line 185 
      ;
      #line 186 
      ldv_inline_asm();
      #line 185 
      break;
      #line 185 
      case (unsigned long)8: 
                             #line 185 
      ;
      #line 186 
      ldv_inline_asm();
      #line 185 
      break;
      #line 185 
      default: 
               #line 185 
      ;
      #line 185 
      __bad_percpu_size();
    }
    #line 185 
    pscr_ret___0 = pfo_ret___6;
    #line 185 
    break;
    #line 185 
    default: 
             #line 185 
    ;
    #line 185 
    __bad_size_call_parameter();
    #line 185 
    break;
  }
  #line 185 
  if (cpumask_test_cpu(pscr_ret___0,& __cpu_online_mask) != 0) {
    #line 185 
    rcu_read_lock_sched_notrace();
    {
      #line 186 
      union __anonunion___u_3036 __u_0;
      #line 185 
      __read_once_size((void *)(& __tracepoint_fjes_hw_unregister_buff_addr_err.funcs),(void *)(& __u_0.__c),8);
      #line 185 
      struct tracepoint_func *________p1_0 = (__u_0.__val);
      {
        #line 185 
        bool __warned;
        #line 185 
        if (debug_lockdep_rcu_enabled() != 0) 
          #line 185 
          if (! __warned) {
            #line 185 
            if (rcu_read_lock_sched_held() == 0) {
              #line 185 
              __warned = (_Bool)1;
              #line 185 
              lockdep_rcu_suspicious((char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h",185,(char *)"suspicious rcu_dereference_check() usage");
            }
          }
      }
      #line 185 
      struct tracepoint_func *tmp_11 = ________p1_0;
    }
    #line 185 
    rcu_read_unlock_sched_notrace();
  }
  #line 187 
  return;
}

#line 197 
#line 197 
struct tracepoint __tracepoint_fjes_hw_start_debug_req;
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h"
__inline static void trace_fjes_hw_start_debug_req(union fjes_device_command_req *req_buf)
{
  #line 197 
  int pscr_ret___0;
  #line 197 
  if ((int)static_key_false(& __tracepoint_fjes_hw_start_debug_req.key) != 0) {
    #line 197 
    int pscr_ret__;
    #line 197 
    struct tracepoint_func *________p1;
    #line 197 
    struct tracepoint_func *it_func_ptr;
    #line 197 
    void *it_func;
    #line 197 
    void *__data;
    #line 197 
    int __idx = 0;
    {
      #line 197 
      void *__vpp_verify = (void *)0;
      #line 197 
      void *tmp = __vpp_verify;
    }
    #line 197 
    switch (4UL) {
      #line 197 
      int pfo_ret__;
      #line 197 
      int pfo_ret___0;
      #line 197 
      int pfo_ret___1;
      #line 197 
      int pfo_ret___2;
      #line 197 
      case (unsigned long)1: 
                             #line 197 
      ;
      #line 197 
      switch (4UL) {
        #line 197 
        case (unsigned long)1: 
                               #line 197 
        ;
        #line 198 
        ldv_inline_asm();
        #line 197 
        break;
        #line 197 
        case (unsigned long)2: 
                               #line 197 
        ;
        #line 198 
        ldv_inline_asm();
        #line 197 
        break;
        #line 197 
        case (unsigned long)4: 
                               #line 197 
        ;
        #line 198 
        ldv_inline_asm();
        #line 197 
        break;
        #line 197 
        case (unsigned long)8: 
                               #line 197 
        ;
        #line 198 
        ldv_inline_asm();
        #line 197 
        break;
        #line 197 
        default: 
                 #line 197 
        ;
        #line 197 
        __bad_percpu_size();
      }
      #line 197 
      pscr_ret__ = pfo_ret__;
      #line 197 
      break;
      #line 197 
      case (unsigned long)2: 
                             #line 197 
      ;
      #line 197 
      switch (4UL) {
        #line 197 
        case (unsigned long)1: 
                               #line 197 
        ;
        #line 198 
        ldv_inline_asm();
        #line 197 
        break;
        #line 197 
        case (unsigned long)2: 
                               #line 197 
        ;
        #line 198 
        ldv_inline_asm();
        #line 197 
        break;
        #line 197 
        case (unsigned long)4: 
                               #line 197 
        ;
        #line 198 
        ldv_inline_asm();
        #line 197 
        break;
        #line 197 
        case (unsigned long)8: 
                               #line 197 
        ;
        #line 198 
        ldv_inline_asm();
        #line 197 
        break;
        #line 197 
        default: 
                 #line 197 
        ;
        #line 197 
        __bad_percpu_size();
      }
      #line 197 
      pscr_ret__ = pfo_ret___0;
      #line 197 
      break;
      #line 197 
      case (unsigned long)4: 
                             #line 197 
      ;
      #line 197 
      switch (4UL) {
        #line 197 
        case (unsigned long)1: 
                               #line 197 
        ;
        #line 198 
        ldv_inline_asm();
        #line 197 
        break;
        #line 197 
        case (unsigned long)2: 
                               #line 197 
        ;
        #line 198 
        ldv_inline_asm();
        #line 197 
        break;
        #line 197 
        case (unsigned long)4: 
                               #line 197 
        ;
        #line 198 
        ldv_inline_asm();
        #line 197 
        break;
        #line 197 
        case (unsigned long)8: 
                               #line 197 
        ;
        #line 198 
        ldv_inline_asm();
        #line 197 
        break;
        #line 197 
        default: 
                 #line 197 
        ;
        #line 197 
        __bad_percpu_size();
      }
      #line 197 
      pscr_ret__ = pfo_ret___1;
      #line 197 
      break;
      #line 197 
      case (unsigned long)8: 
                             #line 197 
      ;
      #line 197 
      switch (4UL) {
        #line 197 
        case (unsigned long)1: 
                               #line 197 
        ;
        #line 198 
        ldv_inline_asm();
        #line 197 
        break;
        #line 197 
        case (unsigned long)2: 
                               #line 197 
        ;
        #line 198 
        ldv_inline_asm();
        #line 197 
        break;
        #line 197 
        case (unsigned long)4: 
                               #line 197 
        ;
        #line 198 
        ldv_inline_asm();
        #line 197 
        break;
        #line 197 
        case (unsigned long)8: 
                               #line 197 
        ;
        #line 198 
        ldv_inline_asm();
        #line 197 
        break;
        #line 197 
        default: 
                 #line 197 
        ;
        #line 197 
        __bad_percpu_size();
      }
      #line 197 
      pscr_ret__ = pfo_ret___2;
      #line 197 
      break;
      #line 197 
      default: 
               #line 197 
      ;
      #line 197 
      __bad_size_call_parameter();
      #line 197 
      break;
    }
    #line 197 
    if (cpumask_test_cpu(pscr_ret__,& __cpu_online_mask) == 0) 
                                                               #line 197 
                                                               return;
    {
      #line 197 
      int __ret_warn_on = 0;
      #line 197 
      if ((long)(__ret_warn_on != 0) != 0L) {
        #line 198 
        ldv_inline_asm();
        #line 199 
        ldv_inline_asm();
      }
      #line 197 
      long tmp_5 = (long)(__ret_warn_on != 0);
    }
    #line 197 
    __preempt_count_add(1);
    #line 198 
    ldv_inline_asm();
    {
      #line 198 
      union __anonunion___u_3038 __u;
      #line 197 
      __read_once_size((void *)(& __tracepoint_fjes_hw_start_debug_req.funcs),(void *)(& __u.__c),8);
      #line 197 
      ________p1 = (__u.__val);
      }
    #line 197 
    it_func_ptr = ________p1;
    #line 197 
    if (it_func_ptr != (struct tracepoint_func *)0) 
      #line 197 
      while (1) {
        #line 197 
        it_func = it_func_ptr->func;
        #line 197 
        __data = it_func_ptr->data;
        #line 197 
        (*((void (*)(void *, union fjes_device_command_req *))it_func))(__data,req_buf);
        #line 197 
        it_func_ptr ++;
        #line 198 
        ;
        #line 198 
        if (! (it_func_ptr->func != (void *)0)) 
                                                #line 197 
                                                break;
      }
    #line 199 
    ldv_inline_asm();
    #line 197 
    __preempt_count_sub(1);
  }
  {
    #line 197 
    void *__vpp_verify_0 = (void *)0;
    #line 197 
    void *tmp_13 = __vpp_verify_0;
  }
  #line 197 
  switch (4UL) {
    #line 197 
    int pfo_ret___4;
    #line 197 
    int pfo_ret___5;
    #line 197 
    int pfo_ret___6;
    #line 197 
    int pfo_ret___3;
    #line 197 
    case (unsigned long)1: 
                           #line 197 
    ;
    #line 197 
    switch (4UL) {
      #line 197 
      case (unsigned long)1: 
                             #line 197 
      ;
      #line 198 
      ldv_inline_asm();
      #line 197 
      break;
      #line 197 
      case (unsigned long)2: 
                             #line 197 
      ;
      #line 198 
      ldv_inline_asm();
      #line 197 
      break;
      #line 197 
      case (unsigned long)4: 
                             #line 197 
      ;
      #line 198 
      ldv_inline_asm();
      #line 197 
      break;
      #line 197 
      case (unsigned long)8: 
                             #line 197 
      ;
      #line 198 
      ldv_inline_asm();
      #line 197 
      break;
      #line 197 
      default: 
               #line 197 
      ;
      #line 197 
      __bad_percpu_size();
    }
    #line 197 
    pscr_ret___0 = pfo_ret___3;
    #line 197 
    break;
    #line 197 
    case (unsigned long)2: 
                           #line 197 
    ;
    #line 197 
    switch (4UL) {
      #line 197 
      case (unsigned long)1: 
                             #line 197 
      ;
      #line 198 
      ldv_inline_asm();
      #line 197 
      break;
      #line 197 
      case (unsigned long)2: 
                             #line 197 
      ;
      #line 198 
      ldv_inline_asm();
      #line 197 
      break;
      #line 197 
      case (unsigned long)4: 
                             #line 197 
      ;
      #line 198 
      ldv_inline_asm();
      #line 197 
      break;
      #line 197 
      case (unsigned long)8: 
                             #line 197 
      ;
      #line 198 
      ldv_inline_asm();
      #line 197 
      break;
      #line 197 
      default: 
               #line 197 
      ;
      #line 197 
      __bad_percpu_size();
    }
    #line 197 
    pscr_ret___0 = pfo_ret___4;
    #line 197 
    break;
    #line 197 
    case (unsigned long)4: 
                           #line 197 
    ;
    #line 197 
    switch (4UL) {
      #line 197 
      case (unsigned long)1: 
                             #line 197 
      ;
      #line 198 
      ldv_inline_asm();
      #line 197 
      break;
      #line 197 
      case (unsigned long)2: 
                             #line 197 
      ;
      #line 198 
      ldv_inline_asm();
      #line 197 
      break;
      #line 197 
      case (unsigned long)4: 
                             #line 197 
      ;
      #line 198 
      ldv_inline_asm();
      #line 197 
      break;
      #line 197 
      case (unsigned long)8: 
                             #line 197 
      ;
      #line 198 
      ldv_inline_asm();
      #line 197 
      break;
      #line 197 
      default: 
               #line 197 
      ;
      #line 197 
      __bad_percpu_size();
    }
    #line 197 
    pscr_ret___0 = pfo_ret___5;
    #line 197 
    break;
    #line 197 
    case (unsigned long)8: 
                           #line 197 
    ;
    #line 197 
    switch (4UL) {
      #line 197 
      case (unsigned long)1: 
                             #line 197 
      ;
      #line 198 
      ldv_inline_asm();
      #line 197 
      break;
      #line 197 
      case (unsigned long)2: 
                             #line 197 
      ;
      #line 198 
      ldv_inline_asm();
      #line 197 
      break;
      #line 197 
      case (unsigned long)4: 
                             #line 197 
      ;
      #line 198 
      ldv_inline_asm();
      #line 197 
      break;
      #line 197 
      case (unsigned long)8: 
                             #line 197 
      ;
      #line 198 
      ldv_inline_asm();
      #line 197 
      break;
      #line 197 
      default: 
               #line 197 
      ;
      #line 197 
      __bad_percpu_size();
    }
    #line 197 
    pscr_ret___0 = pfo_ret___6;
    #line 197 
    break;
    #line 197 
    default: 
             #line 197 
    ;
    #line 197 
    __bad_size_call_parameter();
    #line 197 
    break;
  }
  #line 197 
  if (cpumask_test_cpu(pscr_ret___0,& __cpu_online_mask) != 0) {
    #line 197 
    rcu_read_lock_sched_notrace();
    {
      #line 198 
      union __anonunion___u_3040 __u_0;
      #line 197 
      __read_once_size((void *)(& __tracepoint_fjes_hw_start_debug_req.funcs),(void *)(& __u_0.__c),8);
      #line 197 
      struct tracepoint_func *________p1_0 = (__u_0.__val);
      {
        #line 197 
        bool __warned;
        #line 197 
        if (debug_lockdep_rcu_enabled() != 0) 
          #line 197 
          if (! __warned) {
            #line 197 
            if (rcu_read_lock_sched_held() == 0) {
              #line 197 
              __warned = (_Bool)1;
              #line 197 
              lockdep_rcu_suspicious((char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h",197,(char *)"suspicious rcu_dereference_check() usage");
            }
          }
      }
      #line 197 
      struct tracepoint_func *tmp_11 = ________p1_0;
    }
    #line 197 
    rcu_read_unlock_sched_notrace();
  }
  #line 199 
  return;
}

#line 214 
#line 214 
struct tracepoint __tracepoint_fjes_hw_start_debug;
#line 214  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h"
__inline static void trace_fjes_hw_start_debug(union fjes_device_command_res *res_buf)
{
  #line 214 
  int pscr_ret___0;
  #line 214 
  if ((int)static_key_false(& __tracepoint_fjes_hw_start_debug.key) != 0) {
    #line 214 
    int pscr_ret__;
    #line 214 
    struct tracepoint_func *________p1;
    #line 214 
    struct tracepoint_func *it_func_ptr;
    #line 214 
    void *it_func;
    #line 214 
    void *__data;
    #line 214 
    int __idx = 0;
    {
      #line 214 
      void *__vpp_verify = (void *)0;
      #line 214 
      void *tmp = __vpp_verify;
    }
    #line 214 
    switch (4UL) {
      #line 214 
      int pfo_ret___2;
      #line 214 
      int pfo_ret__;
      #line 214 
      int pfo_ret___0;
      #line 214 
      int pfo_ret___1;
      #line 214 
      case (unsigned long)1: 
                             #line 214 
      ;
      #line 214 
      switch (4UL) {
        #line 214 
        case (unsigned long)1: 
                               #line 214 
        ;
        #line 215 
        ldv_inline_asm();
        #line 214 
        break;
        #line 214 
        case (unsigned long)2: 
                               #line 214 
        ;
        #line 215 
        ldv_inline_asm();
        #line 214 
        break;
        #line 214 
        case (unsigned long)4: 
                               #line 214 
        ;
        #line 215 
        ldv_inline_asm();
        #line 214 
        break;
        #line 214 
        case (unsigned long)8: 
                               #line 214 
        ;
        #line 215 
        ldv_inline_asm();
        #line 214 
        break;
        #line 214 
        default: 
                 #line 214 
        ;
        #line 214 
        __bad_percpu_size();
      }
      #line 214 
      pscr_ret__ = pfo_ret__;
      #line 214 
      break;
      #line 214 
      case (unsigned long)2: 
                             #line 214 
      ;
      #line 214 
      switch (4UL) {
        #line 214 
        case (unsigned long)1: 
                               #line 214 
        ;
        #line 215 
        ldv_inline_asm();
        #line 214 
        break;
        #line 214 
        case (unsigned long)2: 
                               #line 214 
        ;
        #line 215 
        ldv_inline_asm();
        #line 214 
        break;
        #line 214 
        case (unsigned long)4: 
                               #line 214 
        ;
        #line 215 
        ldv_inline_asm();
        #line 214 
        break;
        #line 214 
        case (unsigned long)8: 
                               #line 214 
        ;
        #line 215 
        ldv_inline_asm();
        #line 214 
        break;
        #line 214 
        default: 
                 #line 214 
        ;
        #line 214 
        __bad_percpu_size();
      }
      #line 214 
      pscr_ret__ = pfo_ret___0;
      #line 214 
      break;
      #line 214 
      case (unsigned long)4: 
                             #line 214 
      ;
      #line 214 
      switch (4UL) {
        #line 214 
        case (unsigned long)1: 
                               #line 214 
        ;
        #line 215 
        ldv_inline_asm();
        #line 214 
        break;
        #line 214 
        case (unsigned long)2: 
                               #line 214 
        ;
        #line 215 
        ldv_inline_asm();
        #line 214 
        break;
        #line 214 
        case (unsigned long)4: 
                               #line 214 
        ;
        #line 215 
        ldv_inline_asm();
        #line 214 
        break;
        #line 214 
        case (unsigned long)8: 
                               #line 214 
        ;
        #line 215 
        ldv_inline_asm();
        #line 214 
        break;
        #line 214 
        default: 
                 #line 214 
        ;
        #line 214 
        __bad_percpu_size();
      }
      #line 214 
      pscr_ret__ = pfo_ret___1;
      #line 214 
      break;
      #line 214 
      case (unsigned long)8: 
                             #line 214 
      ;
      #line 214 
      switch (4UL) {
        #line 214 
        case (unsigned long)1: 
                               #line 214 
        ;
        #line 215 
        ldv_inline_asm();
        #line 214 
        break;
        #line 214 
        case (unsigned long)2: 
                               #line 214 
        ;
        #line 215 
        ldv_inline_asm();
        #line 214 
        break;
        #line 214 
        case (unsigned long)4: 
                               #line 214 
        ;
        #line 215 
        ldv_inline_asm();
        #line 214 
        break;
        #line 214 
        case (unsigned long)8: 
                               #line 214 
        ;
        #line 215 
        ldv_inline_asm();
        #line 214 
        break;
        #line 214 
        default: 
                 #line 214 
        ;
        #line 214 
        __bad_percpu_size();
      }
      #line 214 
      pscr_ret__ = pfo_ret___2;
      #line 214 
      break;
      #line 214 
      default: 
               #line 214 
      ;
      #line 214 
      __bad_size_call_parameter();
      #line 214 
      break;
    }
    #line 214 
    if (cpumask_test_cpu(pscr_ret__,& __cpu_online_mask) == 0) 
                                                               #line 214 
                                                               return;
    {
      #line 214 
      int __ret_warn_on = 0;
      #line 214 
      if ((long)(__ret_warn_on != 0) != 0L) {
        #line 215 
        ldv_inline_asm();
        #line 216 
        ldv_inline_asm();
      }
      #line 214 
      long tmp_5 = (long)(__ret_warn_on != 0);
    }
    #line 214 
    __preempt_count_add(1);
    #line 215 
    ldv_inline_asm();
    {
      #line 215 
      union __anonunion___u_3042 __u;
      #line 214 
      __read_once_size((void *)(& __tracepoint_fjes_hw_start_debug.funcs),(void *)(& __u.__c),8);
      #line 214 
      ________p1 = (__u.__val);
      }
    #line 214 
    it_func_ptr = ________p1;
    #line 214 
    if (it_func_ptr != (struct tracepoint_func *)0) 
      #line 214 
      while (1) {
        #line 214 
        it_func = it_func_ptr->func;
        #line 214 
        __data = it_func_ptr->data;
        #line 214 
        (*((void (*)(void *, union fjes_device_command_res *))it_func))(__data,res_buf);
        #line 214 
        it_func_ptr ++;
        #line 215 
        ;
        #line 215 
        if (! (it_func_ptr->func != (void *)0)) 
                                                #line 214 
                                                break;
      }
    #line 216 
    ldv_inline_asm();
    #line 214 
    __preempt_count_sub(1);
  }
  {
    #line 214 
    void *__vpp_verify_0 = (void *)0;
    #line 214 
    void *tmp_13 = __vpp_verify_0;
  }
  #line 214 
  switch (4UL) {
    #line 214 
    int pfo_ret___4;
    #line 214 
    int pfo_ret___5;
    #line 214 
    int pfo_ret___6;
    #line 214 
    int pfo_ret___3;
    #line 214 
    case (unsigned long)1: 
                           #line 214 
    ;
    #line 214 
    switch (4UL) {
      #line 214 
      case (unsigned long)1: 
                             #line 214 
      ;
      #line 215 
      ldv_inline_asm();
      #line 214 
      break;
      #line 214 
      case (unsigned long)2: 
                             #line 214 
      ;
      #line 215 
      ldv_inline_asm();
      #line 214 
      break;
      #line 214 
      case (unsigned long)4: 
                             #line 214 
      ;
      #line 215 
      ldv_inline_asm();
      #line 214 
      break;
      #line 214 
      case (unsigned long)8: 
                             #line 214 
      ;
      #line 215 
      ldv_inline_asm();
      #line 214 
      break;
      #line 214 
      default: 
               #line 214 
      ;
      #line 214 
      __bad_percpu_size();
    }
    #line 214 
    pscr_ret___0 = pfo_ret___3;
    #line 214 
    break;
    #line 214 
    case (unsigned long)2: 
                           #line 214 
    ;
    #line 214 
    switch (4UL) {
      #line 214 
      case (unsigned long)1: 
                             #line 214 
      ;
      #line 215 
      ldv_inline_asm();
      #line 214 
      break;
      #line 214 
      case (unsigned long)2: 
                             #line 214 
      ;
      #line 215 
      ldv_inline_asm();
      #line 214 
      break;
      #line 214 
      case (unsigned long)4: 
                             #line 214 
      ;
      #line 215 
      ldv_inline_asm();
      #line 214 
      break;
      #line 214 
      case (unsigned long)8: 
                             #line 214 
      ;
      #line 215 
      ldv_inline_asm();
      #line 214 
      break;
      #line 214 
      default: 
               #line 214 
      ;
      #line 214 
      __bad_percpu_size();
    }
    #line 214 
    pscr_ret___0 = pfo_ret___4;
    #line 214 
    break;
    #line 214 
    case (unsigned long)4: 
                           #line 214 
    ;
    #line 214 
    switch (4UL) {
      #line 214 
      case (unsigned long)1: 
                             #line 214 
      ;
      #line 215 
      ldv_inline_asm();
      #line 214 
      break;
      #line 214 
      case (unsigned long)2: 
                             #line 214 
      ;
      #line 215 
      ldv_inline_asm();
      #line 214 
      break;
      #line 214 
      case (unsigned long)4: 
                             #line 214 
      ;
      #line 215 
      ldv_inline_asm();
      #line 214 
      break;
      #line 214 
      case (unsigned long)8: 
                             #line 214 
      ;
      #line 215 
      ldv_inline_asm();
      #line 214 
      break;
      #line 214 
      default: 
               #line 214 
      ;
      #line 214 
      __bad_percpu_size();
    }
    #line 214 
    pscr_ret___0 = pfo_ret___5;
    #line 214 
    break;
    #line 214 
    case (unsigned long)8: 
                           #line 214 
    ;
    #line 214 
    switch (4UL) {
      #line 214 
      case (unsigned long)1: 
                             #line 214 
      ;
      #line 215 
      ldv_inline_asm();
      #line 214 
      break;
      #line 214 
      case (unsigned long)2: 
                             #line 214 
      ;
      #line 215 
      ldv_inline_asm();
      #line 214 
      break;
      #line 214 
      case (unsigned long)4: 
                             #line 214 
      ;
      #line 215 
      ldv_inline_asm();
      #line 214 
      break;
      #line 214 
      case (unsigned long)8: 
                             #line 214 
      ;
      #line 215 
      ldv_inline_asm();
      #line 214 
      break;
      #line 214 
      default: 
               #line 214 
      ;
      #line 214 
      __bad_percpu_size();
    }
    #line 214 
    pscr_ret___0 = pfo_ret___6;
    #line 214 
    break;
    #line 214 
    default: 
             #line 214 
    ;
    #line 214 
    __bad_size_call_parameter();
    #line 214 
    break;
  }
  #line 214 
  if (cpumask_test_cpu(pscr_ret___0,& __cpu_online_mask) != 0) {
    #line 214 
    rcu_read_lock_sched_notrace();
    {
      #line 215 
      union __anonunion___u_3044 __u_0;
      #line 214 
      __read_once_size((void *)(& __tracepoint_fjes_hw_start_debug.funcs),(void *)(& __u_0.__c),8);
      #line 214 
      struct tracepoint_func *________p1_0 = (__u_0.__val);
      {
        #line 214 
        bool __warned;
        #line 214 
        if (debug_lockdep_rcu_enabled() != 0) 
          #line 214 
          if (! __warned) {
            #line 214 
            if (rcu_read_lock_sched_held() == 0) {
              #line 214 
              __warned = (_Bool)1;
              #line 214 
              lockdep_rcu_suspicious((char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h",214,(char *)"suspicious rcu_dereference_check() usage");
            }
          }
      }
      #line 214 
      struct tracepoint_func *tmp_11 = ________p1_0;
    }
    #line 214 
    rcu_read_unlock_sched_notrace();
  }
  #line 216 
  return;
}

#line 228 
#line 228 
struct tracepoint __tracepoint_fjes_hw_start_debug_err;
#line 228  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h"
__inline static void trace_fjes_hw_start_debug_err(char *err)
{
  #line 228 
  int pscr_ret___0;
  #line 228 
  if ((int)static_key_false(& __tracepoint_fjes_hw_start_debug_err.key) != 0) {
    #line 228 
    int pscr_ret__;
    #line 228 
    struct tracepoint_func *________p1;
    #line 228 
    struct tracepoint_func *it_func_ptr;
    #line 228 
    void *it_func;
    #line 228 
    void *__data;
    #line 228 
    int __idx = 0;
    {
      #line 228 
      void *__vpp_verify = (void *)0;
      #line 228 
      void *tmp = __vpp_verify;
    }
    #line 228 
    switch (4UL) {
      #line 228 
      int pfo_ret___2;
      #line 228 
      int pfo_ret__;
      #line 228 
      int pfo_ret___0;
      #line 228 
      int pfo_ret___1;
      #line 228 
      case (unsigned long)1: 
                             #line 228 
      ;
      #line 228 
      switch (4UL) {
        #line 228 
        case (unsigned long)1: 
                               #line 228 
        ;
        #line 229 
        ldv_inline_asm();
        #line 228 
        break;
        #line 228 
        case (unsigned long)2: 
                               #line 228 
        ;
        #line 229 
        ldv_inline_asm();
        #line 228 
        break;
        #line 228 
        case (unsigned long)4: 
                               #line 228 
        ;
        #line 229 
        ldv_inline_asm();
        #line 228 
        break;
        #line 228 
        case (unsigned long)8: 
                               #line 228 
        ;
        #line 229 
        ldv_inline_asm();
        #line 228 
        break;
        #line 228 
        default: 
                 #line 228 
        ;
        #line 228 
        __bad_percpu_size();
      }
      #line 228 
      pscr_ret__ = pfo_ret__;
      #line 228 
      break;
      #line 228 
      case (unsigned long)2: 
                             #line 228 
      ;
      #line 228 
      switch (4UL) {
        #line 228 
        case (unsigned long)1: 
                               #line 228 
        ;
        #line 229 
        ldv_inline_asm();
        #line 228 
        break;
        #line 228 
        case (unsigned long)2: 
                               #line 228 
        ;
        #line 229 
        ldv_inline_asm();
        #line 228 
        break;
        #line 228 
        case (unsigned long)4: 
                               #line 228 
        ;
        #line 229 
        ldv_inline_asm();
        #line 228 
        break;
        #line 228 
        case (unsigned long)8: 
                               #line 228 
        ;
        #line 229 
        ldv_inline_asm();
        #line 228 
        break;
        #line 228 
        default: 
                 #line 228 
        ;
        #line 228 
        __bad_percpu_size();
      }
      #line 228 
      pscr_ret__ = pfo_ret___0;
      #line 228 
      break;
      #line 228 
      case (unsigned long)4: 
                             #line 228 
      ;
      #line 228 
      switch (4UL) {
        #line 228 
        case (unsigned long)1: 
                               #line 228 
        ;
        #line 229 
        ldv_inline_asm();
        #line 228 
        break;
        #line 228 
        case (unsigned long)2: 
                               #line 228 
        ;
        #line 229 
        ldv_inline_asm();
        #line 228 
        break;
        #line 228 
        case (unsigned long)4: 
                               #line 228 
        ;
        #line 229 
        ldv_inline_asm();
        #line 228 
        break;
        #line 228 
        case (unsigned long)8: 
                               #line 228 
        ;
        #line 229 
        ldv_inline_asm();
        #line 228 
        break;
        #line 228 
        default: 
                 #line 228 
        ;
        #line 228 
        __bad_percpu_size();
      }
      #line 228 
      pscr_ret__ = pfo_ret___1;
      #line 228 
      break;
      #line 228 
      case (unsigned long)8: 
                             #line 228 
      ;
      #line 228 
      switch (4UL) {
        #line 228 
        case (unsigned long)1: 
                               #line 228 
        ;
        #line 229 
        ldv_inline_asm();
        #line 228 
        break;
        #line 228 
        case (unsigned long)2: 
                               #line 228 
        ;
        #line 229 
        ldv_inline_asm();
        #line 228 
        break;
        #line 228 
        case (unsigned long)4: 
                               #line 228 
        ;
        #line 229 
        ldv_inline_asm();
        #line 228 
        break;
        #line 228 
        case (unsigned long)8: 
                               #line 228 
        ;
        #line 229 
        ldv_inline_asm();
        #line 228 
        break;
        #line 228 
        default: 
                 #line 228 
        ;
        #line 228 
        __bad_percpu_size();
      }
      #line 228 
      pscr_ret__ = pfo_ret___2;
      #line 228 
      break;
      #line 228 
      default: 
               #line 228 
      ;
      #line 228 
      __bad_size_call_parameter();
      #line 228 
      break;
    }
    #line 228 
    if (cpumask_test_cpu(pscr_ret__,& __cpu_online_mask) == 0) 
                                                               #line 228 
                                                               return;
    {
      #line 228 
      int __ret_warn_on = 0;
      #line 228 
      if ((long)(__ret_warn_on != 0) != 0L) {
        #line 229 
        ldv_inline_asm();
        #line 230 
        ldv_inline_asm();
      }
      #line 228 
      long tmp_5 = (long)(__ret_warn_on != 0);
    }
    #line 228 
    __preempt_count_add(1);
    #line 229 
    ldv_inline_asm();
    {
      #line 229 
      union __anonunion___u_3046 __u;
      #line 228 
      __read_once_size((void *)(& __tracepoint_fjes_hw_start_debug_err.funcs),(void *)(& __u.__c),8);
      #line 228 
      ________p1 = (__u.__val);
      }
    #line 228 
    it_func_ptr = ________p1;
    #line 228 
    if (it_func_ptr != (struct tracepoint_func *)0) 
      #line 228 
      while (1) {
        #line 228 
        it_func = it_func_ptr->func;
        #line 228 
        __data = it_func_ptr->data;
        #line 228 
        (*((void (*)(void *, char *))it_func))(__data,err);
        #line 228 
        it_func_ptr ++;
        #line 229 
        ;
        #line 229 
        if (! (it_func_ptr->func != (void *)0)) 
                                                #line 228 
                                                break;
      }
    #line 230 
    ldv_inline_asm();
    #line 228 
    __preempt_count_sub(1);
  }
  {
    #line 228 
    void *__vpp_verify_0 = (void *)0;
    #line 228 
    void *tmp_13 = __vpp_verify_0;
  }
  #line 228 
  switch (4UL) {
    #line 228 
    int pfo_ret___4;
    #line 228 
    int pfo_ret___5;
    #line 228 
    int pfo_ret___6;
    #line 228 
    int pfo_ret___3;
    #line 228 
    case (unsigned long)1: 
                           #line 228 
    ;
    #line 228 
    switch (4UL) {
      #line 228 
      case (unsigned long)1: 
                             #line 228 
      ;
      #line 229 
      ldv_inline_asm();
      #line 228 
      break;
      #line 228 
      case (unsigned long)2: 
                             #line 228 
      ;
      #line 229 
      ldv_inline_asm();
      #line 228 
      break;
      #line 228 
      case (unsigned long)4: 
                             #line 228 
      ;
      #line 229 
      ldv_inline_asm();
      #line 228 
      break;
      #line 228 
      case (unsigned long)8: 
                             #line 228 
      ;
      #line 229 
      ldv_inline_asm();
      #line 228 
      break;
      #line 228 
      default: 
               #line 228 
      ;
      #line 228 
      __bad_percpu_size();
    }
    #line 228 
    pscr_ret___0 = pfo_ret___3;
    #line 228 
    break;
    #line 228 
    case (unsigned long)2: 
                           #line 228 
    ;
    #line 228 
    switch (4UL) {
      #line 228 
      case (unsigned long)1: 
                             #line 228 
      ;
      #line 229 
      ldv_inline_asm();
      #line 228 
      break;
      #line 228 
      case (unsigned long)2: 
                             #line 228 
      ;
      #line 229 
      ldv_inline_asm();
      #line 228 
      break;
      #line 228 
      case (unsigned long)4: 
                             #line 228 
      ;
      #line 229 
      ldv_inline_asm();
      #line 228 
      break;
      #line 228 
      case (unsigned long)8: 
                             #line 228 
      ;
      #line 229 
      ldv_inline_asm();
      #line 228 
      break;
      #line 228 
      default: 
               #line 228 
      ;
      #line 228 
      __bad_percpu_size();
    }
    #line 228 
    pscr_ret___0 = pfo_ret___4;
    #line 228 
    break;
    #line 228 
    case (unsigned long)4: 
                           #line 228 
    ;
    #line 228 
    switch (4UL) {
      #line 228 
      case (unsigned long)1: 
                             #line 228 
      ;
      #line 229 
      ldv_inline_asm();
      #line 228 
      break;
      #line 228 
      case (unsigned long)2: 
                             #line 228 
      ;
      #line 229 
      ldv_inline_asm();
      #line 228 
      break;
      #line 228 
      case (unsigned long)4: 
                             #line 228 
      ;
      #line 229 
      ldv_inline_asm();
      #line 228 
      break;
      #line 228 
      case (unsigned long)8: 
                             #line 228 
      ;
      #line 229 
      ldv_inline_asm();
      #line 228 
      break;
      #line 228 
      default: 
               #line 228 
      ;
      #line 228 
      __bad_percpu_size();
    }
    #line 228 
    pscr_ret___0 = pfo_ret___5;
    #line 228 
    break;
    #line 228 
    case (unsigned long)8: 
                           #line 228 
    ;
    #line 228 
    switch (4UL) {
      #line 228 
      case (unsigned long)1: 
                             #line 228 
      ;
      #line 229 
      ldv_inline_asm();
      #line 228 
      break;
      #line 228 
      case (unsigned long)2: 
                             #line 228 
      ;
      #line 229 
      ldv_inline_asm();
      #line 228 
      break;
      #line 228 
      case (unsigned long)4: 
                             #line 228 
      ;
      #line 229 
      ldv_inline_asm();
      #line 228 
      break;
      #line 228 
      case (unsigned long)8: 
                             #line 228 
      ;
      #line 229 
      ldv_inline_asm();
      #line 228 
      break;
      #line 228 
      default: 
               #line 228 
      ;
      #line 228 
      __bad_percpu_size();
    }
    #line 228 
    pscr_ret___0 = pfo_ret___6;
    #line 228 
    break;
    #line 228 
    default: 
             #line 228 
    ;
    #line 228 
    __bad_size_call_parameter();
    #line 228 
    break;
  }
  #line 228 
  if (cpumask_test_cpu(pscr_ret___0,& __cpu_online_mask) != 0) {
    #line 228 
    rcu_read_lock_sched_notrace();
    {
      #line 229 
      union __anonunion___u_3048 __u_0;
      #line 228 
      __read_once_size((void *)(& __tracepoint_fjes_hw_start_debug_err.funcs),(void *)(& __u_0.__c),8);
      #line 228 
      struct tracepoint_func *________p1_0 = (__u_0.__val);
      {
        #line 228 
        bool __warned;
        #line 228 
        if (debug_lockdep_rcu_enabled() != 0) 
          #line 228 
          if (! __warned) {
            #line 228 
            if (rcu_read_lock_sched_held() == 0) {
              #line 228 
              __warned = (_Bool)1;
              #line 228 
              lockdep_rcu_suspicious((char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h",228,(char *)"suspicious rcu_dereference_check() usage");
            }
          }
      }
      #line 228 
      struct tracepoint_func *tmp_11 = ________p1_0;
    }
    #line 228 
    rcu_read_unlock_sched_notrace();
  }
  #line 230 
  return;
}

#line 240 
#line 240 
struct tracepoint __tracepoint_fjes_hw_stop_debug;
#line 240  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h"
__inline static void trace_fjes_hw_stop_debug(union fjes_device_command_res *res_buf)
{
  #line 240 
  int pscr_ret___0;
  #line 240 
  if ((int)static_key_false(& __tracepoint_fjes_hw_stop_debug.key) != 0) {
    #line 240 
    int pscr_ret__;
    #line 240 
    struct tracepoint_func *________p1;
    #line 240 
    struct tracepoint_func *it_func_ptr;
    #line 240 
    void *it_func;
    #line 240 
    void *__data;
    #line 240 
    int __idx = 0;
    {
      #line 240 
      void *__vpp_verify = (void *)0;
      #line 240 
      void *tmp = __vpp_verify;
    }
    #line 240 
    switch (4UL) {
      #line 240 
      int pfo_ret___2;
      #line 240 
      int pfo_ret__;
      #line 240 
      int pfo_ret___0;
      #line 240 
      int pfo_ret___1;
      #line 240 
      case (unsigned long)1: 
                             #line 240 
      ;
      #line 240 
      switch (4UL) {
        #line 240 
        case (unsigned long)1: 
                               #line 240 
        ;
        #line 241 
        ldv_inline_asm();
        #line 240 
        break;
        #line 240 
        case (unsigned long)2: 
                               #line 240 
        ;
        #line 241 
        ldv_inline_asm();
        #line 240 
        break;
        #line 240 
        case (unsigned long)4: 
                               #line 240 
        ;
        #line 241 
        ldv_inline_asm();
        #line 240 
        break;
        #line 240 
        case (unsigned long)8: 
                               #line 240 
        ;
        #line 241 
        ldv_inline_asm();
        #line 240 
        break;
        #line 240 
        default: 
                 #line 240 
        ;
        #line 240 
        __bad_percpu_size();
      }
      #line 240 
      pscr_ret__ = pfo_ret__;
      #line 240 
      break;
      #line 240 
      case (unsigned long)2: 
                             #line 240 
      ;
      #line 240 
      switch (4UL) {
        #line 240 
        case (unsigned long)1: 
                               #line 240 
        ;
        #line 241 
        ldv_inline_asm();
        #line 240 
        break;
        #line 240 
        case (unsigned long)2: 
                               #line 240 
        ;
        #line 241 
        ldv_inline_asm();
        #line 240 
        break;
        #line 240 
        case (unsigned long)4: 
                               #line 240 
        ;
        #line 241 
        ldv_inline_asm();
        #line 240 
        break;
        #line 240 
        case (unsigned long)8: 
                               #line 240 
        ;
        #line 241 
        ldv_inline_asm();
        #line 240 
        break;
        #line 240 
        default: 
                 #line 240 
        ;
        #line 240 
        __bad_percpu_size();
      }
      #line 240 
      pscr_ret__ = pfo_ret___0;
      #line 240 
      break;
      #line 240 
      case (unsigned long)4: 
                             #line 240 
      ;
      #line 240 
      switch (4UL) {
        #line 240 
        case (unsigned long)1: 
                               #line 240 
        ;
        #line 241 
        ldv_inline_asm();
        #line 240 
        break;
        #line 240 
        case (unsigned long)2: 
                               #line 240 
        ;
        #line 241 
        ldv_inline_asm();
        #line 240 
        break;
        #line 240 
        case (unsigned long)4: 
                               #line 240 
        ;
        #line 241 
        ldv_inline_asm();
        #line 240 
        break;
        #line 240 
        case (unsigned long)8: 
                               #line 240 
        ;
        #line 241 
        ldv_inline_asm();
        #line 240 
        break;
        #line 240 
        default: 
                 #line 240 
        ;
        #line 240 
        __bad_percpu_size();
      }
      #line 240 
      pscr_ret__ = pfo_ret___1;
      #line 240 
      break;
      #line 240 
      case (unsigned long)8: 
                             #line 240 
      ;
      #line 240 
      switch (4UL) {
        #line 240 
        case (unsigned long)1: 
                               #line 240 
        ;
        #line 241 
        ldv_inline_asm();
        #line 240 
        break;
        #line 240 
        case (unsigned long)2: 
                               #line 240 
        ;
        #line 241 
        ldv_inline_asm();
        #line 240 
        break;
        #line 240 
        case (unsigned long)4: 
                               #line 240 
        ;
        #line 241 
        ldv_inline_asm();
        #line 240 
        break;
        #line 240 
        case (unsigned long)8: 
                               #line 240 
        ;
        #line 241 
        ldv_inline_asm();
        #line 240 
        break;
        #line 240 
        default: 
                 #line 240 
        ;
        #line 240 
        __bad_percpu_size();
      }
      #line 240 
      pscr_ret__ = pfo_ret___2;
      #line 240 
      break;
      #line 240 
      default: 
               #line 240 
      ;
      #line 240 
      __bad_size_call_parameter();
      #line 240 
      break;
    }
    #line 240 
    if (cpumask_test_cpu(pscr_ret__,& __cpu_online_mask) == 0) 
                                                               #line 240 
                                                               return;
    {
      #line 240 
      int __ret_warn_on = 0;
      #line 240 
      if ((long)(__ret_warn_on != 0) != 0L) {
        #line 241 
        ldv_inline_asm();
        #line 242 
        ldv_inline_asm();
      }
      #line 240 
      long tmp_5 = (long)(__ret_warn_on != 0);
    }
    #line 240 
    __preempt_count_add(1);
    #line 241 
    ldv_inline_asm();
    {
      #line 241 
      union __anonunion___u_3050 __u;
      #line 240 
      __read_once_size((void *)(& __tracepoint_fjes_hw_stop_debug.funcs),(void *)(& __u.__c),8);
      #line 240 
      ________p1 = (__u.__val);
      }
    #line 240 
    it_func_ptr = ________p1;
    #line 240 
    if (it_func_ptr != (struct tracepoint_func *)0) 
      #line 240 
      while (1) {
        #line 240 
        it_func = it_func_ptr->func;
        #line 240 
        __data = it_func_ptr->data;
        #line 240 
        (*((void (*)(void *, union fjes_device_command_res *))it_func))(__data,res_buf);
        #line 240 
        it_func_ptr ++;
        #line 241 
        ;
        #line 241 
        if (! (it_func_ptr->func != (void *)0)) 
                                                #line 240 
                                                break;
      }
    #line 242 
    ldv_inline_asm();
    #line 240 
    __preempt_count_sub(1);
  }
  {
    #line 240 
    void *__vpp_verify_0 = (void *)0;
    #line 240 
    void *tmp_13 = __vpp_verify_0;
  }
  #line 240 
  switch (4UL) {
    #line 240 
    int pfo_ret___3;
    #line 240 
    int pfo_ret___4;
    #line 240 
    int pfo_ret___5;
    #line 240 
    int pfo_ret___6;
    #line 240 
    case (unsigned long)1: 
                           #line 240 
    ;
    #line 240 
    switch (4UL) {
      #line 240 
      case (unsigned long)1: 
                             #line 240 
      ;
      #line 241 
      ldv_inline_asm();
      #line 240 
      break;
      #line 240 
      case (unsigned long)2: 
                             #line 240 
      ;
      #line 241 
      ldv_inline_asm();
      #line 240 
      break;
      #line 240 
      case (unsigned long)4: 
                             #line 240 
      ;
      #line 241 
      ldv_inline_asm();
      #line 240 
      break;
      #line 240 
      case (unsigned long)8: 
                             #line 240 
      ;
      #line 241 
      ldv_inline_asm();
      #line 240 
      break;
      #line 240 
      default: 
               #line 240 
      ;
      #line 240 
      __bad_percpu_size();
    }
    #line 240 
    pscr_ret___0 = pfo_ret___3;
    #line 240 
    break;
    #line 240 
    case (unsigned long)2: 
                           #line 240 
    ;
    #line 240 
    switch (4UL) {
      #line 240 
      case (unsigned long)1: 
                             #line 240 
      ;
      #line 241 
      ldv_inline_asm();
      #line 240 
      break;
      #line 240 
      case (unsigned long)2: 
                             #line 240 
      ;
      #line 241 
      ldv_inline_asm();
      #line 240 
      break;
      #line 240 
      case (unsigned long)4: 
                             #line 240 
      ;
      #line 241 
      ldv_inline_asm();
      #line 240 
      break;
      #line 240 
      case (unsigned long)8: 
                             #line 240 
      ;
      #line 241 
      ldv_inline_asm();
      #line 240 
      break;
      #line 240 
      default: 
               #line 240 
      ;
      #line 240 
      __bad_percpu_size();
    }
    #line 240 
    pscr_ret___0 = pfo_ret___4;
    #line 240 
    break;
    #line 240 
    case (unsigned long)4: 
                           #line 240 
    ;
    #line 240 
    switch (4UL) {
      #line 240 
      case (unsigned long)1: 
                             #line 240 
      ;
      #line 241 
      ldv_inline_asm();
      #line 240 
      break;
      #line 240 
      case (unsigned long)2: 
                             #line 240 
      ;
      #line 241 
      ldv_inline_asm();
      #line 240 
      break;
      #line 240 
      case (unsigned long)4: 
                             #line 240 
      ;
      #line 241 
      ldv_inline_asm();
      #line 240 
      break;
      #line 240 
      case (unsigned long)8: 
                             #line 240 
      ;
      #line 241 
      ldv_inline_asm();
      #line 240 
      break;
      #line 240 
      default: 
               #line 240 
      ;
      #line 240 
      __bad_percpu_size();
    }
    #line 240 
    pscr_ret___0 = pfo_ret___5;
    #line 240 
    break;
    #line 240 
    case (unsigned long)8: 
                           #line 240 
    ;
    #line 240 
    switch (4UL) {
      #line 240 
      case (unsigned long)1: 
                             #line 240 
      ;
      #line 241 
      ldv_inline_asm();
      #line 240 
      break;
      #line 240 
      case (unsigned long)2: 
                             #line 240 
      ;
      #line 241 
      ldv_inline_asm();
      #line 240 
      break;
      #line 240 
      case (unsigned long)4: 
                             #line 240 
      ;
      #line 241 
      ldv_inline_asm();
      #line 240 
      break;
      #line 240 
      case (unsigned long)8: 
                             #line 240 
      ;
      #line 241 
      ldv_inline_asm();
      #line 240 
      break;
      #line 240 
      default: 
               #line 240 
      ;
      #line 240 
      __bad_percpu_size();
    }
    #line 240 
    pscr_ret___0 = pfo_ret___6;
    #line 240 
    break;
    #line 240 
    default: 
             #line 240 
    ;
    #line 240 
    __bad_size_call_parameter();
    #line 240 
    break;
  }
  #line 240 
  if (cpumask_test_cpu(pscr_ret___0,& __cpu_online_mask) != 0) {
    #line 240 
    rcu_read_lock_sched_notrace();
    {
      #line 241 
      union __anonunion___u_3052 __u_0;
      #line 240 
      __read_once_size((void *)(& __tracepoint_fjes_hw_stop_debug.funcs),(void *)(& __u_0.__c),8);
      #line 240 
      struct tracepoint_func *________p1_0 = (__u_0.__val);
      {
        #line 240 
        bool __warned;
        #line 240 
        if (debug_lockdep_rcu_enabled() != 0) 
          #line 240 
          if (! __warned) {
            #line 240 
            if (rcu_read_lock_sched_held() == 0) {
              #line 240 
              __warned = (_Bool)1;
              #line 240 
              lockdep_rcu_suspicious((char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h",240,(char *)"suspicious rcu_dereference_check() usage");
            }
          }
      }
      #line 240 
      struct tracepoint_func *tmp_11 = ________p1_0;
    }
    #line 240 
    rcu_read_unlock_sched_notrace();
  }
  #line 242 
  return;
}

#line 254 
#line 254 
struct tracepoint __tracepoint_fjes_hw_stop_debug_err;
#line 254  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h"
__inline static void trace_fjes_hw_stop_debug_err(char *err)
{
  #line 254 
  int pscr_ret___0;
  #line 254 
  if ((int)static_key_false(& __tracepoint_fjes_hw_stop_debug_err.key) != 0) {
    #line 254 
    int pscr_ret__;
    #line 254 
    struct tracepoint_func *________p1;
    #line 254 
    struct tracepoint_func *it_func_ptr;
    #line 254 
    void *it_func;
    #line 254 
    void *__data;
    #line 254 
    int __idx = 0;
    {
      #line 254 
      void *__vpp_verify = (void *)0;
      #line 254 
      void *tmp = __vpp_verify;
    }
    #line 254 
    switch (4UL) {
      #line 254 
      int pfo_ret___1;
      #line 254 
      int pfo_ret___2;
      #line 254 
      int pfo_ret__;
      #line 254 
      int pfo_ret___0;
      #line 254 
      case (unsigned long)1: 
                             #line 254 
      ;
      #line 254 
      switch (4UL) {
        #line 254 
        case (unsigned long)1: 
                               #line 254 
        ;
        #line 255 
        ldv_inline_asm();
        #line 254 
        break;
        #line 254 
        case (unsigned long)2: 
                               #line 254 
        ;
        #line 255 
        ldv_inline_asm();
        #line 254 
        break;
        #line 254 
        case (unsigned long)4: 
                               #line 254 
        ;
        #line 255 
        ldv_inline_asm();
        #line 254 
        break;
        #line 254 
        case (unsigned long)8: 
                               #line 254 
        ;
        #line 255 
        ldv_inline_asm();
        #line 254 
        break;
        #line 254 
        default: 
                 #line 254 
        ;
        #line 254 
        __bad_percpu_size();
      }
      #line 254 
      pscr_ret__ = pfo_ret__;
      #line 254 
      break;
      #line 254 
      case (unsigned long)2: 
                             #line 254 
      ;
      #line 254 
      switch (4UL) {
        #line 254 
        case (unsigned long)1: 
                               #line 254 
        ;
        #line 255 
        ldv_inline_asm();
        #line 254 
        break;
        #line 254 
        case (unsigned long)2: 
                               #line 254 
        ;
        #line 255 
        ldv_inline_asm();
        #line 254 
        break;
        #line 254 
        case (unsigned long)4: 
                               #line 254 
        ;
        #line 255 
        ldv_inline_asm();
        #line 254 
        break;
        #line 254 
        case (unsigned long)8: 
                               #line 254 
        ;
        #line 255 
        ldv_inline_asm();
        #line 254 
        break;
        #line 254 
        default: 
                 #line 254 
        ;
        #line 254 
        __bad_percpu_size();
      }
      #line 254 
      pscr_ret__ = pfo_ret___0;
      #line 254 
      break;
      #line 254 
      case (unsigned long)4: 
                             #line 254 
      ;
      #line 254 
      switch (4UL) {
        #line 254 
        case (unsigned long)1: 
                               #line 254 
        ;
        #line 255 
        ldv_inline_asm();
        #line 254 
        break;
        #line 254 
        case (unsigned long)2: 
                               #line 254 
        ;
        #line 255 
        ldv_inline_asm();
        #line 254 
        break;
        #line 254 
        case (unsigned long)4: 
                               #line 254 
        ;
        #line 255 
        ldv_inline_asm();
        #line 254 
        break;
        #line 254 
        case (unsigned long)8: 
                               #line 254 
        ;
        #line 255 
        ldv_inline_asm();
        #line 254 
        break;
        #line 254 
        default: 
                 #line 254 
        ;
        #line 254 
        __bad_percpu_size();
      }
      #line 254 
      pscr_ret__ = pfo_ret___1;
      #line 254 
      break;
      #line 254 
      case (unsigned long)8: 
                             #line 254 
      ;
      #line 254 
      switch (4UL) {
        #line 254 
        case (unsigned long)1: 
                               #line 254 
        ;
        #line 255 
        ldv_inline_asm();
        #line 254 
        break;
        #line 254 
        case (unsigned long)2: 
                               #line 254 
        ;
        #line 255 
        ldv_inline_asm();
        #line 254 
        break;
        #line 254 
        case (unsigned long)4: 
                               #line 254 
        ;
        #line 255 
        ldv_inline_asm();
        #line 254 
        break;
        #line 254 
        case (unsigned long)8: 
                               #line 254 
        ;
        #line 255 
        ldv_inline_asm();
        #line 254 
        break;
        #line 254 
        default: 
                 #line 254 
        ;
        #line 254 
        __bad_percpu_size();
      }
      #line 254 
      pscr_ret__ = pfo_ret___2;
      #line 254 
      break;
      #line 254 
      default: 
               #line 254 
      ;
      #line 254 
      __bad_size_call_parameter();
      #line 254 
      break;
    }
    #line 254 
    if (cpumask_test_cpu(pscr_ret__,& __cpu_online_mask) == 0) 
                                                               #line 254 
                                                               return;
    {
      #line 254 
      int __ret_warn_on = 0;
      #line 254 
      if ((long)(__ret_warn_on != 0) != 0L) {
        #line 255 
        ldv_inline_asm();
        #line 256 
        ldv_inline_asm();
      }
      #line 254 
      long tmp_5 = (long)(__ret_warn_on != 0);
    }
    #line 254 
    __preempt_count_add(1);
    #line 255 
    ldv_inline_asm();
    {
      #line 255 
      union __anonunion___u_3054 __u;
      #line 254 
      __read_once_size((void *)(& __tracepoint_fjes_hw_stop_debug_err.funcs),(void *)(& __u.__c),8);
      #line 254 
      ________p1 = (__u.__val);
      }
    #line 254 
    it_func_ptr = ________p1;
    #line 254 
    if (it_func_ptr != (struct tracepoint_func *)0) 
      #line 254 
      while (1) {
        #line 254 
        it_func = it_func_ptr->func;
        #line 254 
        __data = it_func_ptr->data;
        #line 254 
        (*((void (*)(void *, char *))it_func))(__data,err);
        #line 254 
        it_func_ptr ++;
        #line 255 
        ;
        #line 255 
        if (! (it_func_ptr->func != (void *)0)) 
                                                #line 254 
                                                break;
      }
    #line 256 
    ldv_inline_asm();
    #line 254 
    __preempt_count_sub(1);
  }
  {
    #line 254 
    void *__vpp_verify_0 = (void *)0;
    #line 254 
    void *tmp_13 = __vpp_verify_0;
  }
  #line 254 
  switch (4UL) {
    #line 254 
    int pfo_ret___3;
    #line 254 
    int pfo_ret___4;
    #line 254 
    int pfo_ret___5;
    #line 254 
    int pfo_ret___6;
    #line 254 
    case (unsigned long)1: 
                           #line 254 
    ;
    #line 254 
    switch (4UL) {
      #line 254 
      case (unsigned long)1: 
                             #line 254 
      ;
      #line 255 
      ldv_inline_asm();
      #line 254 
      break;
      #line 254 
      case (unsigned long)2: 
                             #line 254 
      ;
      #line 255 
      ldv_inline_asm();
      #line 254 
      break;
      #line 254 
      case (unsigned long)4: 
                             #line 254 
      ;
      #line 255 
      ldv_inline_asm();
      #line 254 
      break;
      #line 254 
      case (unsigned long)8: 
                             #line 254 
      ;
      #line 255 
      ldv_inline_asm();
      #line 254 
      break;
      #line 254 
      default: 
               #line 254 
      ;
      #line 254 
      __bad_percpu_size();
    }
    #line 254 
    pscr_ret___0 = pfo_ret___3;
    #line 254 
    break;
    #line 254 
    case (unsigned long)2: 
                           #line 254 
    ;
    #line 254 
    switch (4UL) {
      #line 254 
      case (unsigned long)1: 
                             #line 254 
      ;
      #line 255 
      ldv_inline_asm();
      #line 254 
      break;
      #line 254 
      case (unsigned long)2: 
                             #line 254 
      ;
      #line 255 
      ldv_inline_asm();
      #line 254 
      break;
      #line 254 
      case (unsigned long)4: 
                             #line 254 
      ;
      #line 255 
      ldv_inline_asm();
      #line 254 
      break;
      #line 254 
      case (unsigned long)8: 
                             #line 254 
      ;
      #line 255 
      ldv_inline_asm();
      #line 254 
      break;
      #line 254 
      default: 
               #line 254 
      ;
      #line 254 
      __bad_percpu_size();
    }
    #line 254 
    pscr_ret___0 = pfo_ret___4;
    #line 254 
    break;
    #line 254 
    case (unsigned long)4: 
                           #line 254 
    ;
    #line 254 
    switch (4UL) {
      #line 254 
      case (unsigned long)1: 
                             #line 254 
      ;
      #line 255 
      ldv_inline_asm();
      #line 254 
      break;
      #line 254 
      case (unsigned long)2: 
                             #line 254 
      ;
      #line 255 
      ldv_inline_asm();
      #line 254 
      break;
      #line 254 
      case (unsigned long)4: 
                             #line 254 
      ;
      #line 255 
      ldv_inline_asm();
      #line 254 
      break;
      #line 254 
      case (unsigned long)8: 
                             #line 254 
      ;
      #line 255 
      ldv_inline_asm();
      #line 254 
      break;
      #line 254 
      default: 
               #line 254 
      ;
      #line 254 
      __bad_percpu_size();
    }
    #line 254 
    pscr_ret___0 = pfo_ret___5;
    #line 254 
    break;
    #line 254 
    case (unsigned long)8: 
                           #line 254 
    ;
    #line 254 
    switch (4UL) {
      #line 254 
      case (unsigned long)1: 
                             #line 254 
      ;
      #line 255 
      ldv_inline_asm();
      #line 254 
      break;
      #line 254 
      case (unsigned long)2: 
                             #line 254 
      ;
      #line 255 
      ldv_inline_asm();
      #line 254 
      break;
      #line 254 
      case (unsigned long)4: 
                             #line 254 
      ;
      #line 255 
      ldv_inline_asm();
      #line 254 
      break;
      #line 254 
      case (unsigned long)8: 
                             #line 254 
      ;
      #line 255 
      ldv_inline_asm();
      #line 254 
      break;
      #line 254 
      default: 
               #line 254 
      ;
      #line 254 
      __bad_percpu_size();
    }
    #line 254 
    pscr_ret___0 = pfo_ret___6;
    #line 254 
    break;
    #line 254 
    default: 
             #line 254 
    ;
    #line 254 
    __bad_size_call_parameter();
    #line 254 
    break;
  }
  #line 254 
  if (cpumask_test_cpu(pscr_ret___0,& __cpu_online_mask) != 0) {
    #line 254 
    rcu_read_lock_sched_notrace();
    {
      #line 255 
      union __anonunion___u_3056 __u_0;
      #line 254 
      __read_once_size((void *)(& __tracepoint_fjes_hw_stop_debug_err.funcs),(void *)(& __u_0.__c),8);
      #line 254 
      struct tracepoint_func *________p1_0 = (__u_0.__val);
      {
        #line 254 
        bool __warned;
        #line 254 
        if (debug_lockdep_rcu_enabled() != 0) 
          #line 254 
          if (! __warned) {
            #line 254 
            if (rcu_read_lock_sched_held() == 0) {
              #line 254 
              __warned = (_Bool)1;
              #line 254 
              lockdep_rcu_suspicious((char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h",254,(char *)"suspicious rcu_dereference_check() usage");
            }
          }
      }
      #line 254 
      struct tracepoint_func *tmp_11 = ________p1_0;
    }
    #line 254 
    rcu_read_unlock_sched_notrace();
  }
  #line 256 
  return;
}

#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_hw.c"
#line 957 
static void fjes_hw_update_zone_task(struct work_struct *work);
#line 12 
#line 1147 
static void fjes_hw_epstop_task(struct work_struct *work);
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_hw.c"
u32 fjes_support_mtu[5U] = {8166U, 16358U, 32742U, 65510U};
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_hw.c"
u32 fjes_hw_rd32(struct fjes_hw *hw, u32 reg)
{
  #line 25 
  u8 *base = hw->base;
  #line 26 
  u32 value = 0U;
  #line 28 
  value = readl((void *)(base + (unsigned long)reg));
  #line 30 
  return value;
}

#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_hw.c"
static u8 *fjes_hw_iomap(struct fjes_hw *hw)
{
  #line 35 
  u8 *base;
  #line 37 
  if (__request_region(& iomem_resource,hw->hw_res.start,hw->hw_res.size,
                       (char *)(& fjes_driver_name),0) == (struct resource *)0) {
    #line 39 
    printk((char *)"\001");
    #line 40 
    return (u8 *)0U;
  }
  #line 43 
  base = (u8 *)ioremap(hw->hw_res.start,(unsigned long)hw->hw_res.size);
  #line 45 
  return base;
}

#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_hw.c"
static void fjes_hw_iounmap(struct fjes_hw *hw)
{
  #line 50 
  iounmap((void *)hw->base);
  #line 51 
  __release_region(& iomem_resource,hw->hw_res.start,hw->hw_res.size);
  #line 52 
  return;
}

#line 54  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_hw.c"
int fjes_hw_reset(struct fjes_hw *hw)
{
  #line 56 
  union REG_DCTL dctl;
  #line 57 
  int timeout;
  #line 71 
  int tmp;
  #line 59 
  dctl.reg = 0U;
  #line 60 
  dctl.bits.reset = (unsigned int)1U;
  {
    #line 61 
    u8 *base = hw->base;
    #line 61 
    writel(dctl.reg,(void *)(base + 16U));
  }
  #line 63 
  timeout = 432000;
  #line 64 
  dctl.reg = fjes_hw_rd32(hw,16U);
  #line 65 
  while ((unsigned int)dctl.bits.reset == 1U && timeout > 0) {
    #line 66 
    msleep(1000U);
    #line 67 
    dctl.reg = fjes_hw_rd32(hw,16U);
    #line 68 
    timeout += -1000;
  }
  #line 71 
  if (timeout > 0) 
                   #line 71 
                   tmp = 0; else 
                                 #line 71 
                                 tmp = -5;
  #line 71 
  return tmp;
}

#line 74  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_hw.c"
static int fjes_hw_get_max_epid(struct fjes_hw *hw)
{
  #line 76 
  union REG_MAX_EP info;
  #line 78 
  info.reg = fjes_hw_rd32(hw,4U);
  #line 80 
  return (int)info.bits.maxep;
}

#line 83  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_hw.c"
static int fjes_hw_get_my_epid(struct fjes_hw *hw)
{
  #line 85 
  union REG_OWNER_EPID info;
  #line 87 
  info.reg = fjes_hw_rd32(hw,0U);
  #line 89 
  return (int)info.bits.epid;
}

#line 92  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_hw.c"
static int fjes_hw_alloc_shared_status_region(struct fjes_hw *hw)
{
  #line 94 
  size_t size;
  #line 96 
  size = (unsigned long)hw->max_epid + 4UL;
  #line 98 
  hw->hw_info.share = (struct fjes_device_shared_info *)kzalloc(size,3264U);
  #line 99 
  if (hw->hw_info.share == (struct fjes_device_shared_info *)0) 
                                                                #line 100 
                                                                return -12;
  #line 102 
  (hw->hw_info.share)->epnum = hw->max_epid;
  #line 104 
  return 0;
}

#line 107  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_hw.c"
static void fjes_hw_free_shared_status_region(struct fjes_hw *hw)
{
  #line 109 
  kfree((void *)hw->hw_info.share);
  #line 110 
  hw->hw_info.share = (struct fjes_device_shared_info *)0;
  #line 111 
  return;
}

#line 113  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_hw.c"
static int fjes_hw_alloc_epbuf(struct epbuf_handler *epbh)
{
  #line 115 
  void *mem;
  #line 117 
  mem = cif_vzalloc(8392704UL);
  #line 118 
  if (mem == (void *)0) 
                        #line 119 
                        return -12;
  #line 121 
  epbh->buffer = mem;
  #line 122 
  epbh->size = 8392704UL;
  #line 124 
  epbh->info = (union ep_buffer_info *)mem;
  #line 125 
  epbh->ring = (u8 *)(mem + 4096UL);
  #line 127 
  return 0;
}

#line 130  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_hw.c"
static void fjes_hw_free_epbuf(struct epbuf_handler *epbh)
{
  #line 132 
  cif_vfree(epbh->buffer);
  #line 133 
  epbh->buffer = (void *)0;
  #line 134 
  epbh->size = 0UL;
  #line 136 
  epbh->info = (union ep_buffer_info *)0;
  #line 137 
  epbh->ring = (u8 *)0U;
  #line 138 
  return;
}

#line 140  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_hw.c"
void fjes_hw_setup_epbuf(struct epbuf_handler *epbh, u8 *mac_addr, u32 mtu)
{
  #line 143 
  u16 vlan_id[4U];
  #line 144 
  int i;
  #line 142 
  union ep_buffer_info *info = epbh->info;
  #line 146 
  i = 0;
  #line 146 
  while (i <= 3) {
    #line 147 
    vlan_id[i] = info->v1i.vlan_id[i];
    #line 146 
    i ++;
  }
  #line 149 
  memset((void *)info,0,4096UL);
  #line 151 
  info->v1i.version = 0U;
  #line 153 
  i = 0;
  #line 153 
  while (i <= 5) {
    #line 154 
    info->v1i.mac_addr[i] = *(mac_addr + (unsigned long)i);
    #line 153 
    i ++;
  }
  #line 156 
  info->v1i.head = 0U;
  #line 157 
  info->v1i.tail = 1U;
  #line 159 
  info->v1i.info_size = 4096U;
  #line 160 
  info->v1i.buffer_size = (unsigned int)epbh->size - info->v1i.info_size;
  #line 162 
  info->v1i.frame_max = mtu + 26U;
  #line 163 
  info->v1i.count_max = (unsigned short)(info->v1i.buffer_size / info->v1i.frame_max);
  #line 166 
  i = 0;
  #line 166 
  while (i <= 3) {
    #line 167 
    info->v1i.vlan_id[i] = vlan_id[i];
    #line 166 
    i ++;
  }
  #line 169 
  info->v1i.rx_status = (unsigned short)((unsigned int)info->v1i.rx_status | 8U);
  #line 170 
  return;
}

#line 173  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_hw.c"
void fjes_hw_init_command_registers(struct fjes_hw *hw, struct fjes_device_command_param *param)
{
  {
    #line 177 
    u8 *base = hw->base;
    #line 177 
    writel(param->req_len,(void *)(base + 52U));
  }
  {
    #line 179 
    u8 *base_0 = hw->base;
    #line 179 
    writel(param->res_len,(void *)(base_0 + 68U));
  }
  {
    #line 182 
    u8 *base_1 = hw->base;
    #line 182 
    writel((unsigned int)param->req_start,(void *)(base_1 + 56U));
  }
  {
    #line 184 
    u8 *base_2 = hw->base;
    #line 184 
    writel((unsigned int)(param->req_start >> 32),(void *)(base_2 + 60U));
  }
  {
    #line 188 
    u8 *base_3 = hw->base;
    #line 188 
    writel((unsigned int)param->res_start,(void *)(base_3 + 72U));
  }
  {
    #line 190 
    u8 *base_4 = hw->base;
    #line 190 
    writel((unsigned int)(param->res_start >> 32),(void *)(base_4 + 76U));
  }
  {
    #line 194 
    u8 *base_5 = hw->base;
    #line 194 
    writel((unsigned int)param->share_start,(void *)(base_5 + 40U));
  }
  {
    #line 196 
    u8 *base_6 = hw->base;
    #line 196 
    writel((unsigned int)(param->share_start >> 32),(void *)(base_6 + 44U));
  }
  #line 198 
  return;
}

#line 200  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_hw.c"
static int fjes_hw_setup(struct fjes_hw *hw)
{
  #line 203 
  struct fjes_device_command_param param;
  #line 204 
  struct ep_share_mem_info *buf_pair;
  #line 205 
  unsigned long flags;
  #line 206 
  size_t mem_size;
  #line 207 
  int result;
  #line 208 
  int epidx;
  #line 209 
  void *buf;
  #line 202 
  u8 mac[6U] = {(unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U};
  #line 211 
  hw->hw_info.max_epid = & hw->max_epid;
  #line 212 
  hw->hw_info.my_epid = & hw->my_epid;
  #line 214 
  buf = kcalloc((unsigned long)hw->max_epid,376UL,3264U);
  #line 216 
  if (buf == (void *)0) 
                        #line 217 
                        return -12;
  #line 219 
  hw->ep_shm_info = (struct ep_share_mem_info *)buf;
  #line 221 
  mem_size = 32808UL;
  #line 222 
  hw->hw_info.req_buf = (union fjes_device_command_req *)kzalloc(mem_size,3264U);
  #line 223 
  if (hw->hw_info.req_buf == (union fjes_device_command_req *)0) 
                                                                 #line 224 
                                                                 return -12;
  #line 226 
  hw->hw_info.req_buf_size = (unsigned long long)mem_size;
  #line 228 
  mem_size = (unsigned long)((hw->max_epid + 4) * 2);
  #line 229 
  hw->hw_info.res_buf = (union fjes_device_command_res *)kzalloc(mem_size,3264U);
  #line 230 
  if (hw->hw_info.res_buf == (union fjes_device_command_res *)0) 
                                                                 #line 231 
                                                                 return -12;
  #line 233 
  hw->hw_info.res_buf_size = (unsigned long long)mem_size;
  #line 235 
  result = fjes_hw_alloc_shared_status_region(hw);
  #line 236 
  if (result != 0) 
                   #line 237 
                   return result;
  #line 239 
  hw->hw_info.buffer_share_bit = 0UL;
  #line 240 
  hw->hw_info.buffer_unshare_reserve_bit = 0UL;
  #line 242 
  epidx = 0;
  #line 242 
  while (hw->max_epid > epidx) {
    #line 243 
    if (hw->my_epid != epidx) {
      #line 244 
      buf_pair = hw->ep_shm_info + (unsigned long)epidx;
      #line 246 
      result = fjes_hw_alloc_epbuf(& buf_pair->tx);
      #line 247 
      if (result != 0) 
                       #line 248 
                       return result;
      #line 250 
      result = fjes_hw_alloc_epbuf(& buf_pair->rx);
      #line 251 
      if (result != 0) 
                       #line 252 
                       return result;
      #line 254 
      cif___ldv_spin_lock_rx_status_lock_of_fjes_hw_0(& hw->rx_status_lock);
      #line 255 
      fjes_hw_setup_epbuf(& buf_pair->tx,(u8 *)(& mac),fjes_support_mtu[0]);
      #line 257 
      fjes_hw_setup_epbuf(& buf_pair->rx,(u8 *)(& mac),fjes_support_mtu[0]);
      #line 259 
      cif_spin_unlock_irqrestore_rx_status_lock_of_fjes_hw_0(& hw->rx_status_lock,flags);
    }
    #line 242 
    epidx ++;
  }
  #line 263 
  memset((void *)(& param),0,40UL);
  #line 265 
  param.req_len = (unsigned int)hw->hw_info.req_buf_size;
  #line 266 
  param.req_start = (phys_addr_t)__phys_addr((unsigned long)hw->hw_info.req_buf);
  #line 267 
  param.res_len = (unsigned int)hw->hw_info.res_buf_size;
  #line 268 
  param.res_start = (phys_addr_t)__phys_addr((unsigned long)hw->hw_info.res_buf);
  #line 270 
  param.share_start = (phys_addr_t)__phys_addr((unsigned long)(& (hw->hw_info.share)->ep_status));
  #line 272 
  fjes_hw_init_command_registers(hw,& param);
  #line 274 
  return 0;
}

#line 277  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_hw.c"
static void fjes_hw_cleanup(struct fjes_hw *hw)
{
  #line 279 
  int epidx;
  #line 281 
  if (hw->ep_shm_info == (struct ep_share_mem_info *)0) 
                                                        #line 282 
                                                        return;
  #line 284 
  fjes_hw_free_shared_status_region(hw);
  #line 286 
  kfree((void *)hw->hw_info.req_buf);
  #line 287 
  hw->hw_info.req_buf = (union fjes_device_command_req *)0;
  #line 289 
  kfree((void *)hw->hw_info.res_buf);
  #line 290 
  hw->hw_info.res_buf = (union fjes_device_command_res *)0;
  #line 292 
  epidx = 0;
  #line 292 
  while (hw->max_epid > epidx) {
    #line 293 
    if (hw->my_epid == epidx) 
                              #line 294 
                              goto __Cont;
    #line 295 
    fjes_hw_free_epbuf(& (hw->ep_shm_info + (unsigned long)epidx)->tx);
    #line 296 
    fjes_hw_free_epbuf(& (hw->ep_shm_info + (unsigned long)epidx)->rx);
    #line 292 
    __Cont: 
            #line 292 
    epidx ++;
  }
  #line 299 
  kfree((void *)hw->ep_shm_info);
  #line 300 
  hw->ep_shm_info = (struct ep_share_mem_info *)0;
  #line 301 
  return;
}

#line 303  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_hw.c"
int fjes_hw_init(struct fjes_hw *hw)
{
  #line 305 
  int ret;
  #line 307 
  hw->base = fjes_hw_iomap(hw);
  #line 308 
  if (hw->base == (u8 *)0U) 
                            #line 309 
                            return -5;
  #line 311 
  ret = fjes_hw_reset(hw);
  #line 312 
  if (ret != 0) 
                #line 313 
                return ret;
  #line 315 
  fjes_hw_set_irqmask(hw,(enum REG_ICTL_MASK)REG_ICTL_MASK_ALL,(_Bool)1);
  {
    #line 317 
    struct lock_class_key __key;
    #line 317 
    __init_work(& hw->update_zone_task,0);
    #line 317 
    atomic_long_t __constr_expr_34 = {.counter = 137438953408LL};
    #line 317 
    hw->update_zone_task.data = __constr_expr_34;
    #line 317 
    lockdep_init_map(& hw->update_zone_task.lockdep_map,(char *)"(work_completion)",& __key,0);
    #line 317 
    INIT_LIST_HEAD_0(& hw->update_zone_task.entry);
    #line 317 
    hw->update_zone_task.func = & fjes_hw_update_zone_task;
  }
  {
    #line 318 
    struct lock_class_key __key_0;
    #line 318 
    __init_work(& hw->epstop_task,0);
    #line 318 
    atomic_long_t __constr_expr_35 = {.counter = 137438953408LL};
    #line 318 
    hw->epstop_task.data = __constr_expr_35;
    #line 318 
    lockdep_init_map(& hw->epstop_task.lockdep_map,(char *)"(work_completion)",& __key_0,0);
    #line 318 
    INIT_LIST_HEAD_0(& hw->epstop_task.entry);
    #line 318 
    hw->epstop_task.func = & fjes_hw_epstop_task;
  }
  {
    #line 320 
    struct lock_class_key __key_1;
    #line 320 
    __mutex_init(& hw->hw_info.lock,(char *)"&hw->hw_info.lock",& __key_1);
  }
  #line 321 
  spinlock_check(& hw->rx_status_lock);
  {
    #line 321 
    struct lock_class_key __key_2;
    #line 321 
    __raw_spin_lock_init(& hw->rx_status_lock.__anonCompField_spinlock_25.rlock,(char *)"&(&hw->rx_status_lock)->rlock",& __key_2);
  }
  #line 323 
  hw->max_epid = fjes_hw_get_max_epid(hw);
  #line 324 
  hw->my_epid = fjes_hw_get_my_epid(hw);
  #line 326 
  if (hw->max_epid == 0 || hw->my_epid >= hw->max_epid) 
                                                        #line 327 
                                                        return -6;
  #line 329 
  ret = fjes_hw_setup(hw);
  #line 331 
  hw->hw_info.trace = (struct es_device_trace *)cif_vzalloc(65536UL);
  #line 332 
  hw->hw_info.trace_size = 65536ULL;
  #line 334 
  return ret;
}

#line 337  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_hw.c"
void fjes_hw_exit(struct fjes_hw *hw)
{
  #line 339 
  int ret;
  #line 341 
  if (hw->base != (u8 *)0U) {
    #line 343 
    if (hw->debug_mode != 0U) {
      #line 345 
      cif_mutex_lock_lock_of_fjes_hw_info_1(& hw->hw_info.lock);
      #line 346 
      fjes_hw_stop_debug(hw);
      #line 347 
      cif_mutex_unlock_lock_of_fjes_hw_info_1(& hw->hw_info.lock);
    }
    #line 349 
    cif_vfree((void *)hw->hw_info.trace);
    #line 350 
    hw->hw_info.trace = (struct es_device_trace *)0;
    #line 351 
    hw->hw_info.trace_size = 0ULL;
    #line 352 
    hw->debug_mode = 0U;
    #line 354 
    ret = fjes_hw_reset(hw);
    #line 355 
    if (ret != 0) 
                  #line 356 
                  printk((char *)"\001",(char *)"fjes_hw_exit");
    #line 358 
    fjes_hw_iounmap(hw);
    #line 359 
    hw->base = (u8 *)0U;
  }
  #line 362 
  fjes_hw_cleanup(hw);
  #line 364 
  cancel_work_sync(& hw->update_zone_task);
  #line 365 
  cancel_work_sync(& hw->epstop_task);
  #line 366 
  return;
}

#line 369  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_hw.c"
static enum fjes_dev_command_response_e fjes_hw_issue_request_command(struct fjes_hw *hw, enum fjes_dev_command_request_type type)
{
  #line 373 
  union REG_CR cr;
  #line 374 
  union REG_CS cs;
  #line 372 
  enum fjes_dev_command_response_e ret = FJES_CMD_STATUS_UNKNOWN;
  #line 375 
  int timeout = 144000;
  #line 377 
  cr.reg = 0U;
  #line 378 
  cr.bits.req_start = (unsigned int)1U;
  #line 379 
  cr.bits.req_code = (unsigned int)((unsigned short)type);
  {
    #line 380 
    u8 *base = hw->base;
    #line 380 
    writel(cr.reg,(void *)(base + 32U));
  }
  #line 381 
  cr.reg = fjes_hw_rd32(hw,32U);
  #line 383 
  if ((unsigned int)cr.bits.error == 0U) {
    #line 384 
    timeout = 144000;
    #line 385 
    cs.reg = fjes_hw_rd32(hw,36U);
    #line 387 
    while ((unsigned int)cs.bits.complete != 1U && timeout > 0) {
      #line 388 
      msleep(1000U);
      #line 389 
      cs.reg = fjes_hw_rd32(hw,36U);
      #line 390 
      timeout += -1000;
    }
    #line 393 
    if ((unsigned int)cs.bits.complete == 1U) 
                                              #line 394 
                                              ret = FJES_CMD_STATUS_NORMAL;
    else 
      #line 395 
      if (timeout <= 0) 
                        #line 396 
                        ret = FJES_CMD_STATUS_TIMEOUT;
  }
  else 
    #line 399 
    switch ((int)cr.bits.err_info) {
      #line 400 
      case 1: 
              #line 400 
      ;
      #line 401 
      ret = FJES_CMD_STATUS_ERROR_PARAM;
      #line 402 
      break;
      #line 403 
      case 2: 
              #line 403 
      ;
      #line 404 
      ret = FJES_CMD_STATUS_ERROR_STATUS;
      #line 405 
      break;
      #line 406 
      default: 
               #line 406 
      ;
      #line 407 
      ret = FJES_CMD_STATUS_UNKNOWN;
      #line 408 
      break;
    }
  #line 412 
  trace_fjes_hw_issue_request_command(& cr,& cs,timeout,ret);
  #line 414 
  return ret;
}

#line 417  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_hw.c"
int fjes_hw_request_info(struct fjes_hw *hw)
{
  #line 421 
  enum fjes_dev_command_response_e ret;
  #line 422 
  int result;
  #line 419 
  union fjes_device_command_req *req_buf = hw->hw_info.req_buf;
  #line 420 
  union fjes_device_command_res *res_buf = hw->hw_info.res_buf;
  #line 424 
  memset((void *)req_buf,0,(unsigned long)hw->hw_info.req_buf_size);
  #line 425 
  memset((void *)res_buf,0,(unsigned long)hw->hw_info.res_buf_size);
  #line 427 
  req_buf->info.length = 4U;
  #line 429 
  res_buf->info.length = 0U;
  #line 430 
  res_buf->info.code = 0U;
  #line 432 
  ret = fjes_hw_issue_request_command(hw,(enum fjes_dev_command_request_type)FJES_CMD_REQ_INFO);
  #line 433 
  trace_fjes_hw_request_info(hw,res_buf);
  #line 435 
  result = 0;
  #line 437 
  if ((unsigned int)((*(hw->hw_info.max_epid) + 4) * 2) != res_buf->info.length) {
    #line 439 
    trace_fjes_hw_request_info_err((char *)"Invalid res_buf");
    #line 440 
    result = -42;
  }
  else 
    #line 441 
    if (ret == (unsigned int)FJES_CMD_STATUS_NORMAL) 
      #line 442 
      switch (res_buf->info.code) {
        #line 443 
        case (__le32)0: 
                        #line 443 
        ;
        #line 444 
        result = 0;
        #line 445 
        break;
        #line 446 
        default: 
                 #line 446 
        ;
        #line 447 
        result = -1;
        #line 448 
        break;
      }
    else 
      #line 451 
      switch ((unsigned int)ret) {
        #line 452 
        case (unsigned int)0: 
                              #line 452 
        ;
        #line 453 
        result = -1;
        #line 454 
        break;
        #line 455 
        case (unsigned int)2: 
                              #line 455 
        ;
        #line 456 
        trace_fjes_hw_request_info_err((char *)"Timeout");
        #line 457 
        result = -16;
        #line 458 
        break;
        #line 459 
        case (unsigned int)3: 
                              #line 459 
        ;
        #line 460 
        result = -1;
        #line 461 
        break;
        #line 462 
        case (unsigned int)4: 
                              #line 462 
        ;
        #line 463 
        result = -1;
        #line 464 
        break;
        #line 465 
        default: 
                 #line 465 
        ;
        #line 466 
        result = -1;
        #line 467 
        break;
      }
  #line 471 
  return result;
}

#line 474  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_hw.c"
int fjes_hw_register_buff_addr(struct fjes_hw *hw, int dest_epid, struct ep_share_mem_info *buf_pair)
{
  #line 479 
  enum fjes_dev_command_response_e ret;
  #line 480 
  int page_count;
  #line 481 
  int timeout;
  #line 482 
  int i;
  #line 482 
  int idx;
  #line 483 
  void *addr;
  #line 484 
  int result;
  #line 498 
  int tmp_0;
  #line 508 
  int tmp_3;
  #line 477 
  union fjes_device_command_req *req_buf = hw->hw_info.req_buf;
  #line 478 
  union fjes_device_command_res *res_buf = hw->hw_info.res_buf;
  #line 486 
  if ((int)test_bit((long)dest_epid,& hw->hw_info.buffer_share_bit) != 0) 
    #line 487 
    return 0;
  #line 489 
  memset((void *)req_buf,0,(unsigned long)hw->hw_info.req_buf_size);
  #line 490 
  memset((void *)res_buf,0,(unsigned long)hw->hw_info.res_buf_size);
  #line 492 
  req_buf->share_buffer.length = (unsigned int)((buf_pair->tx.size / 4096UL + buf_pair->rx.size / 4096UL) + 3UL) * 8U;
  #line 495 
  req_buf->share_buffer.epid = (unsigned int)dest_epid;
  #line 497 
  idx = 0;
  #line 498 
  tmp_0 = idx;
  #line 498 
  idx ++;
  #line 498 
  req_buf->share_buffer.buffer[tmp_0] = (unsigned long long)buf_pair->tx.size;
  #line 499 
  page_count = (int)(buf_pair->tx.size / 4096UL);
  #line 500 
  i = 0;
  #line 500 
  while (i < page_count) {
    {
      #line 503 
      int tmp_1;
      #line 501 
      addr = (void *)((u8 *)buf_pair->tx.buffer + (unsigned long)(i * 4096));
      #line 503 
      tmp_1 = idx;
      #line 503 
      idx ++;
      #line 503 
      req_buf->share_buffer.buffer[tmp_1] = ((unsigned long long)((vmalloc_to_page(addr) - (struct page *)vmemmap_base) / 64L) << 12) + ((unsigned long long)addr & 4095ULL);
    }
    #line 500 
    i ++;
  }
  #line 508 
  tmp_3 = idx;
  #line 508 
  idx ++;
  #line 508 
  req_buf->share_buffer.buffer[tmp_3] = (unsigned long long)buf_pair->rx.size;
  #line 509 
  page_count = (int)(buf_pair->rx.size / 4096UL);
  #line 510 
  i = 0;
  #line 510 
  while (i < page_count) {
    {
      #line 513 
      int tmp_4;
      #line 511 
      addr = (void *)((u8 *)buf_pair->rx.buffer + (unsigned long)(i * 4096));
      #line 513 
      tmp_4 = idx;
      #line 513 
      idx ++;
      #line 513 
      req_buf->share_buffer.buffer[tmp_4] = ((unsigned long long)((vmalloc_to_page(addr) - (struct page *)vmemmap_base) / 64L) << 12) + ((unsigned long long)addr & 4095ULL);
    }
    #line 510 
    i ++;
  }
  #line 518 
  res_buf->share_buffer.length = 0U;
  #line 519 
  res_buf->share_buffer.code = 0U;
  #line 521 
  trace_fjes_hw_register_buff_addr_req(req_buf,buf_pair);
  #line 523 
  ret = fjes_hw_issue_request_command(hw,(enum fjes_dev_command_request_type)FJES_CMD_REQ_SHARE_BUFFER);
  #line 525 
  timeout = 180000;
  #line 526 
  while (((ret == (unsigned int)FJES_CMD_STATUS_NORMAL && res_buf->share_buffer.length == 8U) && res_buf->share_buffer.code == 1U) && timeout > 0) {
    #line 531 
    msleep((unsigned int)(hw->my_epid * 20 + 200));
    #line 532 
    timeout -= hw->my_epid * 20 + 200;
    #line 534 
    res_buf->share_buffer.length = 0U;
    #line 535 
    res_buf->share_buffer.code = 0U;
    #line 537 
    ret = fjes_hw_issue_request_command(hw,(enum fjes_dev_command_request_type)FJES_CMD_REQ_SHARE_BUFFER);
  }
  #line 541 
  result = 0;
  #line 543 
  trace_fjes_hw_register_buff_addr(res_buf,timeout);
  #line 545 
  if (res_buf->share_buffer.length != 8U) {
    #line 547 
    trace_fjes_hw_register_buff_addr_err((char *)"Invalid res_buf");
    #line 548 
    result = -42;
  }
  else 
    #line 549 
    if (ret == (unsigned int)FJES_CMD_STATUS_NORMAL) 
      #line 550 
      switch (res_buf->share_buffer.code) {
        #line 551 
        case (__le32)0: 
                        #line 551 
        ;
        #line 552 
        result = 0;
        #line 553 
        cif_set_bit_0((long)dest_epid,& hw->hw_info.buffer_share_bit);
        #line 554 
        break;
        #line 555 
        case (__le32)1: 
                        #line 555 
        ;
        #line 556 
        trace_fjes_hw_register_buff_addr_err((char *)"Busy Timeout");
        #line 557 
        result = -16;
        #line 558 
        break;
        #line 559 
        default: 
                 #line 559 
        ;
        #line 560 
        result = -1;
        #line 561 
        break;
      }
    else 
      #line 564 
      switch ((unsigned int)ret) {
        #line 565 
        case (unsigned int)0: 
                              #line 565 
        ;
        #line 566 
        result = -1;
        #line 567 
        break;
        #line 568 
        case (unsigned int)2: 
                              #line 568 
        ;
        #line 569 
        trace_fjes_hw_register_buff_addr_err((char *)"Timeout");
        #line 570 
        result = -16;
        #line 571 
        break;
        #line 572 
        case (unsigned int)3: 
                              #line 572 
        ;
        #line 573 
        case (unsigned int)4: 
                              #line 573 
        ;
        #line 574 
        default: 
                 #line 574 
        ;
        #line 575 
        result = -1;
        #line 576 
        break;
      }
  #line 580 
  return result;
}

#line 583  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_hw.c"
int fjes_hw_unregister_buff_addr(struct fjes_hw *hw, int dest_epid)
{
  #line 588 
  enum fjes_dev_command_response_e ret;
  #line 589 
  int timeout;
  #line 590 
  int result;
  #line 585 
  union fjes_device_command_req *req_buf = hw->hw_info.req_buf;
  #line 586 
  union fjes_device_command_res *res_buf = hw->hw_info.res_buf;
  #line 587 
  struct fjes_device_shared_info *share = hw->hw_info.share;
  #line 592 
  if (hw->base == (u8 *)0U) 
                            #line 593 
                            return -1;
  #line 595 
  if ((req_buf == (union fjes_device_command_req *)0 || res_buf == (union fjes_device_command_res *)0) || share == (struct fjes_device_shared_info *)0) 
    #line 596 
    return -1;
  #line 598 
  if (! test_bit((long)dest_epid,& hw->hw_info.buffer_share_bit)) 
                                                                  #line 599 
                                                                  return 0;
  #line 601 
  memset((void *)req_buf,0,(unsigned long)hw->hw_info.req_buf_size);
  #line 602 
  memset((void *)res_buf,0,(unsigned long)hw->hw_info.res_buf_size);
  #line 604 
  req_buf->unshare_buffer.length = 8U;
  #line 606 
  req_buf->unshare_buffer.epid = (unsigned int)dest_epid;
  #line 608 
  res_buf->unshare_buffer.length = 0U;
  #line 609 
  res_buf->unshare_buffer.code = 0U;
  #line 611 
  trace_fjes_hw_unregister_buff_addr_req(req_buf);
  #line 612 
  ret = fjes_hw_issue_request_command(hw,(enum fjes_dev_command_request_type)FJES_CMD_REQ_UNSHARE_BUFFER);
  #line 614 
  timeout = 180000;
  #line 615 
  while (((ret == (unsigned int)FJES_CMD_STATUS_NORMAL && res_buf->unshare_buffer.length == 8U) && res_buf->unshare_buffer.code == 1U) && timeout > 0) {
    #line 621 
    msleep((unsigned int)(hw->my_epid * 20 + 200));
    #line 622 
    timeout -= hw->my_epid * 20 + 200;
    #line 624 
    res_buf->unshare_buffer.length = 0U;
    #line 625 
    res_buf->unshare_buffer.code = 0U;
    #line 627 
    ret = fjes_hw_issue_request_command(hw,(enum fjes_dev_command_request_type)FJES_CMD_REQ_UNSHARE_BUFFER);
  }
  #line 631 
  result = 0;
  #line 633 
  trace_fjes_hw_unregister_buff_addr(res_buf,timeout);
  #line 635 
  if (res_buf->unshare_buffer.length != 8U) {
    #line 637 
    trace_fjes_hw_unregister_buff_addr_err((char *)"Invalid res_buf");
    #line 638 
    result = -42;
  }
  else 
    #line 639 
    if (ret == (unsigned int)FJES_CMD_STATUS_NORMAL) 
      #line 640 
      switch (res_buf->unshare_buffer.code) {
        #line 641 
        case (__le32)0: 
                        #line 641 
        ;
        #line 642 
        result = 0;
        #line 643 
        cif_clear_bit_0((long)dest_epid,& hw->hw_info.buffer_share_bit);
        #line 644 
        break;
        #line 645 
        case (__le32)1: 
                        #line 645 
        ;
        #line 646 
        trace_fjes_hw_unregister_buff_addr_err((char *)"Busy Timeout");
        #line 647 
        result = -16;
        #line 648 
        break;
        #line 649 
        default: 
                 #line 649 
        ;
        #line 650 
        result = -1;
        #line 651 
        break;
      }
    else 
      #line 654 
      switch ((unsigned int)ret) {
        #line 655 
        case (unsigned int)0: 
                              #line 655 
        ;
        #line 656 
        result = -1;
        #line 657 
        break;
        #line 658 
        case (unsigned int)2: 
                              #line 658 
        ;
        #line 659 
        trace_fjes_hw_unregister_buff_addr_err((char *)"Timeout");
        #line 660 
        result = -16;
        #line 661 
        break;
        #line 662 
        case (unsigned int)3: 
                              #line 662 
        ;
        #line 663 
        case (unsigned int)4: 
                              #line 663 
        ;
        #line 664 
        default: 
                 #line 664 
        ;
        #line 665 
        result = -1;
        #line 666 
        break;
      }
  #line 670 
  return result;
}

#line 673  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_hw.c"
int fjes_hw_raise_interrupt(struct fjes_hw *hw, int dest_epid, enum REG_ICTL_MASK mask)
{
  #line 676 
  u32 ig = (unsigned int)mask | (unsigned int)dest_epid;
  {
    #line 678 
    u8 *base = hw->base;
    #line 678 
    writel(ig,(void *)(base + 140U));
  }
  #line 680 
  return 0;
}

#line 683  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_hw.c"
u32 fjes_hw_capture_interrupt_status(struct fjes_hw *hw)
{
  #line 685 
  u32 cur_is;
  #line 687 
  cur_is = fjes_hw_rd32(hw,128U);
  #line 689 
  return cur_is;
}

#line 692  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_hw.c"
void fjes_hw_set_irqmask(struct fjes_hw *hw, enum REG_ICTL_MASK intr_mask, bool mask)
{
  #line 695 
  if ((int)mask != 0) {
    #line 696 
    u8 *base = hw->base;
    #line 696 
    writel((unsigned int)intr_mask,(void *)(base + 132U));
  }
  else {
    #line 698 
    u8 *base_0 = hw->base;
    #line 698 
    writel((unsigned int)intr_mask,(void *)(base_0 + 136U));
  }
  #line 700 
  return;
}

#line 701  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_hw.c"
bool fjes_hw_epid_is_same_zone(struct fjes_hw *hw, int epid)
{
  #line 703 
  if (hw->max_epid <= epid) 
                            #line 704 
                            return (_Bool)0;
  #line 706 
  if ((unsigned int)(hw->ep_shm_info + (unsigned long)epid)->es_status != 1U || (unsigned int)(hw->ep_shm_info + (unsigned long)hw->my_epid)->zone == 255U) 
    #line 710 
    return (_Bool)0; else 
                          #line 712 
                          return (_Bool)((int)(hw->ep_shm_info + (unsigned long)epid)->zone == (int)(hw->ep_shm_info + (unsigned long)hw->my_epid)->zone);
}

#line 716  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_hw.c"
int fjes_hw_epid_is_shared(struct fjes_device_shared_info *share, int dest_epid)
{
  #line 719 
  int value = 0;
  #line 721 
  if (share->epnum > dest_epid) 
                                #line 722 
                                value = (int)share->ep_status[dest_epid];
  #line 724 
  return value;
}

#line 727  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_hw.c"
static bool fjes_hw_epid_is_stop_requested(struct fjes_hw *hw, int src_epid)
{
  #line 729 
  return test_bit((long)src_epid,& hw->txrx_stop_req_bit);
}

#line 732  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_hw.c"
static bool fjes_hw_epid_is_stop_process_done(struct fjes_hw *hw, int src_epid)
{
  #line 734 
  return (_Bool)(((int)((hw->ep_shm_info + (unsigned long)src_epid)->tx.info)->v1i.rx_status & 1) != 0);
}

#line 739  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_hw.c"
enum ep_partner_status fjes_hw_get_partner_ep_status(struct fjes_hw *hw, int epid)
{
  #line 741 
  enum ep_partner_status status;
  #line 743 
  if (fjes_hw_epid_is_shared(hw->hw_info.share,epid) != 0) {
    #line 744 
    if ((int)fjes_hw_epid_is_stop_requested(hw,epid) != 0) 
                                                           #line 745 
                                                           status = EP_PARTNER_WAITING;
    else {
      #line 747 
      if ((int)fjes_hw_epid_is_stop_process_done(hw,epid) != 0) 
                                                                #line 748 
                                                                status = EP_PARTNER_COMPLETE; else 
                                                                    #line 750 
                                                                    status = EP_PARTNER_SHARED;
    }
  }
  else 
       #line 753 
       status = EP_PARTNER_UNSHARE;
  #line 756 
  return status;
}

#line 759  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_hw.c"
void fjes_hw_raise_epstop(struct fjes_hw *hw)
{
  #line 761 
  enum ep_partner_status status;
  #line 762 
  unsigned long flags;
  #line 763 
  int epidx;
  #line 765 
  epidx = 0;
  #line 765 
  while (hw->max_epid > epidx) {
    #line 766 
    if (hw->my_epid == epidx) 
                              #line 767 
                              goto __Cont;
    #line 769 
    status = fjes_hw_get_partner_ep_status(hw,epidx);
    #line 770 
    switch ((unsigned int)status) {
      #line 771 
      case (unsigned int)1: 
                            #line 771 
      ;
      #line 772 
      fjes_hw_raise_interrupt(hw,epidx,(enum REG_ICTL_MASK)REG_ICTL_MASK_TXRX_STOP_REQ);
      #line 774 
      ((hw->ep_shm_info + (unsigned long)epidx)->ep_stats.send_intr_unshare) ++;
      #line 775 
      break;
      #line 776 
      default: 
               #line 776 
      ;
      #line 777 
      break;
    }
    #line 780 
    cif_set_bit_0((long)epidx,& hw->hw_info.buffer_unshare_reserve_bit);
    #line 781 
    cif_set_bit_0((long)epidx,& hw->txrx_stop_req_bit);
    #line 783 
    cif___ldv_spin_lock_rx_status_lock_of_fjes_hw_0(& hw->rx_status_lock);
    #line 784 
    ((hw->ep_shm_info + (unsigned long)epidx)->tx.info)->v1i.rx_status = (unsigned short)((unsigned int)((hw->ep_shm_info + (unsigned long)epidx)->tx.info)->v1i.rx_status | 2U);
    #line 786 
    cif_spin_unlock_irqrestore_rx_status_lock_of_fjes_hw_0(& hw->rx_status_lock,flags);
    #line 765 
    __Cont: 
            #line 765 
    epidx ++;
  }
  #line 788 
  return;
}

#line 790  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_hw.c"
int fjes_hw_wait_epstop(struct fjes_hw *hw)
{
  #line 792 
  enum ep_partner_status status;
  #line 793 
  union ep_buffer_info *info;
  #line 795 
  int epidx;
  #line 828 
  int tmp_2;
  #line 794 
  int wait_time = 0;
  #line 797 
  while (hw->hw_info.buffer_unshare_reserve_bit != 0UL && wait_time <= 999) {
    #line 799 
    epidx = 0;
    #line 799 
    while (hw->max_epid > epidx) {
      {
        #line 800 
        if (hw->my_epid == epidx) 
                                  #line 801 
                                  goto __Cont;
        #line 802 
        status = (enum ep_partner_status)fjes_hw_epid_is_shared(hw->hw_info.share,epidx);
        #line 804 
        info = (hw->ep_shm_info + (unsigned long)epidx)->rx.info;
        #line 805 
        if (status == (unsigned int)EP_PARTNER_UNSHARE || ((int)info->v1i.rx_status & 1) != 0) {
          #line 807 
          if ((int)test_bit((long)epidx,& hw->hw_info.buffer_unshare_reserve_bit) != 0) 
            #line 810 
            cif_clear_bit_0((long)epidx,& hw->hw_info.buffer_unshare_reserve_bit);
        }
      }
      #line 799 
      __Cont: 
              #line 799 
      epidx ++;
    }
    #line 815 
    msleep(100U);
    #line 816 
    wait_time += 100;
  }
  #line 819 
  epidx = 0;
  #line 819 
  while (hw->max_epid > epidx) {
    {
      #line 820 
      if (hw->my_epid == epidx) 
                                #line 821 
                                goto __Cont_0;
      #line 822 
      if ((int)test_bit((long)epidx,& hw->hw_info.buffer_unshare_reserve_bit) != 0) 
        #line 823 
        cif_clear_bit_0((long)epidx,& hw->hw_info.buffer_unshare_reserve_bit);
    }
    #line 819 
    __Cont_0: 
              #line 819 
    epidx ++;
  }
  #line 828 
  if (wait_time <= 999) 
                        #line 828 
                        tmp_2 = 0; else 
                                        #line 828 
                                        tmp_2 = -16;
  #line 828 
  return tmp_2;
}

#line 831  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_hw.c"
bool fjes_hw_check_epbuf_version(struct epbuf_handler *epbh, u32 version)
{
  #line 833 
  union ep_buffer_info *info = epbh->info;
  #line 835 
  return (_Bool)(info->common.version == version);
}

#line 838  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_hw.c"
bool fjes_hw_check_mtu(struct epbuf_handler *epbh, u32 mtu)
{
  #line 840 
  union ep_buffer_info *info = epbh->info;
  #line 842 
  return (_Bool)(((unsigned long)info->v1i.frame_max == (unsigned long)(mtu + 22U) + 4UL && ((int)info->v1i.rx_status & 8) != 0) != 0);
}

#line 846  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_hw.c"
bool fjes_hw_check_vlan_id(struct epbuf_handler *epbh, u16 vlan_id)
{
  #line 850 
  int i;
  #line 848 
  union ep_buffer_info *info = epbh->info;
  #line 849 
  bool ret = (_Bool)0;
  #line 852 
  if ((unsigned int)vlan_id == 0U) 
                                   #line 853 
                                   ret = (_Bool)1;
  else {
    #line 855 
    i = 0;
    #line 855 
    while (i <= 3) {
      #line 856 
      if ((int)info->v1i.vlan_id[i] == (int)vlan_id) {
        #line 857 
        ret = (_Bool)1;
        #line 858 
        break;
      }
      #line 855 
      i ++;
    }
  }
  #line 862 
  return ret;
}

#line 865  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_hw.c"
bool fjes_hw_set_vlan_id(struct epbuf_handler *epbh, u16 vlan_id)
{
  #line 868 
  int i;
  #line 867 
  union ep_buffer_info *info = epbh->info;
  #line 870 
  i = 0;
  #line 870 
  while (i <= 3) {
    #line 871 
    if ((unsigned int)info->v1i.vlan_id[i] == 0U) {
      #line 872 
      info->v1i.vlan_id[i] = vlan_id;
      #line 873 
      return (_Bool)1;
    }
    #line 870 
    i ++;
  }
  #line 876 
  return (_Bool)0;
}

#line 879  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_hw.c"
void fjes_hw_del_vlan_id(struct epbuf_handler *epbh, u16 vlan_id)
{
  #line 882 
  int i;
  #line 881 
  union ep_buffer_info *info = epbh->info;
  #line 884 
  if ((unsigned int)vlan_id != 0U) {
    #line 885 
    i = 0;
    #line 885 
    while (i <= 3) {
      #line 886 
      if ((int)info->v1i.vlan_id[i] == (int)vlan_id) 
                                                     #line 887 
                                                     info->v1i.vlan_id[i] = (unsigned short)0U;
      #line 885 
      i ++;
    }
  }
  #line 889 
  return;
}

#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_hw.c"
bool fjes_hw_epbuf_rx_is_empty(struct epbuf_handler *epbh)
{
  #line 894 
  union ep_buffer_info *info = epbh->info;
  #line 896 
  if (((int)info->v1i.rx_status & 8) == 0) 
                                           #line 897 
                                           return (_Bool)1;
  #line 899 
  if ((unsigned int)info->v1i.count_max == 0U) 
                                               #line 900 
                                               return (_Bool)1;
  #line 902 
  return (_Bool)(((info->v1i.tail - info->v1i.head) + (unsigned int)info->v1i.count_max) % (unsigned int)info->v1i.count_max == 1U);
}

#line 906  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_hw.c"
void *fjes_hw_epbuf_rx_curpkt_get_addr(struct epbuf_handler *epbh, size_t *psize)
{
  #line 910 
  struct esmem_frame *ring_frame;
  #line 911 
  void *frame;
  #line 909 
  union ep_buffer_info *info = epbh->info;
  #line 913 
  ring_frame = (struct esmem_frame *)(epbh->ring + (unsigned long)(((info->v1i.head + (unsigned int)info->v1i.count_max) % (unsigned int)info->v1i.count_max) * info->v1i.frame_max));
  #line 918 
  *psize = (unsigned long)ring_frame->frame_size;
  #line 920 
  frame = (void *)(& ring_frame->frame_data);
  #line 922 
  return frame;
}

#line 925  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_hw.c"
void fjes_hw_epbuf_rx_curpkt_drop(struct epbuf_handler *epbh)
{
  #line 927 
  union ep_buffer_info *info = epbh->info;
  #line 929 
  if ((int)fjes_hw_epbuf_rx_is_empty(epbh) != 0) 
                                                 #line 930 
                                                 return;
  #line 932 
  (epbh->info)->v1i.head = (((epbh->info)->v1i.head + (unsigned int)info->v1i.count_max) + 1U) % (unsigned int)info->v1i.count_max;
  #line 933 
  return;
}

#line 935  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_hw.c"
int fjes_hw_epbuf_tx_pkt_send(struct epbuf_handler *epbh, void *frame, size_t size)
{
  #line 939 
  struct esmem_frame *ring_frame;
  #line 938 
  union ep_buffer_info *info = epbh->info;
  #line 941 
  if (((info->v1i.tail - info->v1i.head) + (unsigned int)info->v1i.count_max) % (unsigned int)info->v1i.count_max == 0U) 
    #line 942 
    return -105;
  #line 944 
  ring_frame = (struct esmem_frame *)(epbh->ring + (unsigned long)((((info->v1i.tail + (unsigned int)info->v1i.count_max) + 4294967295U) % (unsigned int)info->v1i.count_max) * info->v1i.frame_max));
  #line 949 
  ring_frame->frame_size = (unsigned int)size;
  #line 950 
  memcpy((void *)(& ring_frame->frame_data),frame,size);
  #line 952 
  (epbh->info)->v1i.tail = (((epbh->info)->v1i.tail + (unsigned int)info->v1i.count_max) + 1U) % (unsigned int)info->v1i.count_max;
  #line 954 
  return 0;
}

#line 957  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_hw.c"
static void fjes_hw_update_zone_task(struct work_struct *work)
{
  #line 959 
  void *__mptr;
  #line 962 
  struct my_s *info;
  #line 963 
  union fjes_device_command_res *res_buf;
  #line 964 
  enum ep_partner_status pstatus;
  #line 966 
  struct fjes_adapter *adapter;
  #line 967 
  struct net_device *netdev;
  #line 968 
  unsigned long flags;
  #line 974 
  int epidx;
  #line 975 
  int ret;
  #line 959 
  __mptr = (void *)work;
  #line 959 
  struct fjes_hw *hw = ((struct fjes_hw *)(__mptr + 18446744073709551592U));
  #line 970 
  ulong unshare_bit = 0UL;
  #line 971 
  ulong share_bit = 0UL;
  #line 972 
  ulong irq_bit = 0UL;
  #line 977 
  adapter = (struct fjes_adapter *)hw->back;
  #line 978 
  netdev = adapter->netdev;
  #line 979 
  res_buf = hw->hw_info.res_buf;
  #line 980 
  info = (struct my_s *)(& res_buf->info.info);
  #line 982 
  cif_mutex_lock_lock_of_fjes_hw_info_1(& hw->hw_info.lock);
  #line 984 
  ret = fjes_hw_request_info(hw);
  #line 985 
  switch (ret) {
    #line 986 
    case -42: 
              #line 986 
    ;
    #line 987 
    case -16: 
              #line 987 
    ;
    #line 988 
    default: 
             #line 988 
    ;
    #line 989 
    if (! test_bit(0L,(unsigned long *)(& adapter->force_close_task.data))) {
      #line 990 
      adapter->force_reset = (_Bool)1;
      #line 991 
      cif_schedule_work_0(& adapter->force_close_task);
    }
    #line 993 
    break;
    #line 995 
    case 0: 
            #line 995 
    ;
    #line 997 
    epidx = 0;
    #line 997 
    while (hw->max_epid > epidx) {
      #line 998 
      if (hw->my_epid == epidx) {
        #line 999 
        (hw->ep_shm_info + (unsigned long)epidx)->es_status = (info + (unsigned long)epidx)->es_status;
        #line 1001 
        (hw->ep_shm_info + (unsigned long)epidx)->zone = (info + (unsigned long)epidx)->zone;
        #line 1003 
        goto __Cont;
      }
      #line 1006 
      pstatus = fjes_hw_get_partner_ep_status(hw,epidx);
      #line 1007 
      switch ((unsigned int)pstatus) {
        #line 1008 
        case (unsigned int)0: 
                              #line 1008 
        ;
        #line 1009 
        default: 
                 #line 1009 
        ;
        #line 1010 
        if (((unsigned int)(info + (unsigned long)epidx)->zone != 255U && (unsigned int)(info + (unsigned long)epidx)->es_status == 1U) && (int)(info + (unsigned long)epidx)->zone == (int)(info + (unsigned long)hw->my_epid)->zone) 
          #line 1016 
          cif_set_bit_0((long)epidx,& share_bit); else 
                                                       #line 1018 
                                                       cif_set_bit_0((long)epidx,& unshare_bit);
        #line 1019 
        break;
        #line 1021 
        case (unsigned int)3: 
                              #line 1021 
        ;
        #line 1022 
        case (unsigned int)2: 
                              #line 1022 
        ;
        #line 1023 
        if (((unsigned int)(info + (unsigned long)epidx)->zone == 255U || (unsigned int)(info + (unsigned long)epidx)->es_status != 1U) || (int)(info + (unsigned long)epidx)->zone != (int)(info + (unsigned long)hw->my_epid)->zone) {
          #line 1029 
          cif_set_bit_0((long)epidx,& adapter->unshare_watch_bitmask);
          #line 1031 
          cif_set_bit_0((long)epidx,& hw->hw_info.buffer_unshare_reserve_bit);
        }
        #line 1034 
        break;
        #line 1036 
        case (unsigned int)1: 
                              #line 1036 
        ;
        #line 1037 
        if (((unsigned int)(info + (unsigned long)epidx)->zone == 255U || (unsigned int)(info + (unsigned long)epidx)->es_status != 1U) || (int)(info + (unsigned long)epidx)->zone != (int)(info + (unsigned long)hw->my_epid)->zone) 
          #line 1043 
          cif_set_bit_0((long)epidx,& irq_bit);
        #line 1044 
        break;
      }
      #line 1047 
      (hw->ep_shm_info + (unsigned long)epidx)->es_status = (info + (unsigned long)epidx)->es_status;
      #line 1049 
      (hw->ep_shm_info + (unsigned long)epidx)->zone = (info + (unsigned long)epidx)->zone;
      #line 997 
      __Cont: 
              #line 997 
      epidx ++;
    }
    #line 1051 
    break;
  }
  #line 1054 
  cif_mutex_unlock_lock_of_fjes_hw_info_1(& hw->hw_info.lock);
  #line 1056 
  epidx = 0;
  #line 1056 
  while (hw->max_epid > epidx) {
    {
      #line 1057 
      if (hw->my_epid == epidx) 
                                #line 1058 
                                goto __Cont_0;
      #line 1060 
      if ((int)test_bit((long)epidx,& share_bit) != 0) {
        #line 1061 
        cif___ldv_spin_lock_rx_status_lock_of_fjes_hw_0(& hw->rx_status_lock);
        #line 1062 
        fjes_hw_setup_epbuf(& (hw->ep_shm_info + (unsigned long)epidx)->tx,netdev->dev_addr,netdev->mtu);
        #line 1064 
        cif_spin_unlock_irqrestore_rx_status_lock_of_fjes_hw_0(& hw->rx_status_lock,flags);
        #line 1066 
        cif_mutex_lock_lock_of_fjes_hw_info_1(& hw->hw_info.lock);
        #line 1068 
        ret = fjes_hw_register_buff_addr(hw,epidx,hw->ep_shm_info + (unsigned long)epidx);
        #line 1071 
        switch (ret) {
          #line 1072 
          case 0: 
                  #line 1072 
          ;
          #line 1073 
          break;
          #line 1074 
          case -42: 
                    #line 1074 
          ;
          #line 1075 
          case -16: 
                    #line 1075 
          ;
          #line 1076 
          default: 
                   #line 1076 
          ;
          #line 1077 
          if (! test_bit(0L,(unsigned long *)(& adapter->force_close_task.data))) {
            #line 1078 
            adapter->force_reset = (_Bool)1;
            #line 1079 
            cif_schedule_work_0(& adapter->force_close_task);
          }
          #line 1082 
          break;
        }
        #line 1084 
        cif_mutex_unlock_lock_of_fjes_hw_info_1(& hw->hw_info.lock);
        #line 1087 
        ((hw->ep_shm_info + (unsigned long)epidx)->ep_stats.com_regist_buf_exec) ++;
      }
      #line 1090 
      if ((int)test_bit((long)epidx,& unshare_bit) != 0) {
        #line 1091 
        cif_mutex_lock_lock_of_fjes_hw_info_1(& hw->hw_info.lock);
        #line 1093 
        ret = fjes_hw_unregister_buff_addr(hw,epidx);
        #line 1095 
        switch (ret) {
          #line 1096 
          case 0: 
                  #line 1096 
          ;
          #line 1097 
          break;
          #line 1098 
          case -42: 
                    #line 1098 
          ;
          #line 1099 
          case -16: 
                    #line 1099 
          ;
          #line 1100 
          default: 
                   #line 1100 
          ;
          #line 1101 
          if (! test_bit(0L,(unsigned long *)(& adapter->force_close_task.data))) {
            #line 1102 
            adapter->force_reset = (_Bool)1;
            #line 1103 
            cif_schedule_work_0(& adapter->force_close_task);
          }
          #line 1106 
          break;
        }
        #line 1109 
        cif_mutex_unlock_lock_of_fjes_hw_info_1(& hw->hw_info.lock);
        #line 1112 
        ((hw->ep_shm_info + (unsigned long)epidx)->ep_stats.com_unregist_buf_exec) ++;
        #line 1114 
        if (ret == 0) {
          #line 1115 
          cif___ldv_spin_lock_rx_status_lock_of_fjes_hw_0(& hw->rx_status_lock);
          #line 1116 
          fjes_hw_setup_epbuf(& (hw->ep_shm_info + (unsigned long)epidx)->tx,netdev->dev_addr,netdev->mtu);
          #line 1119 
          cif_spin_unlock_irqrestore_rx_status_lock_of_fjes_hw_0(& hw->rx_status_lock,flags);
        }
      }
      #line 1124 
      if ((int)test_bit((long)epidx,& irq_bit) != 0) {
        #line 1125 
        fjes_hw_raise_interrupt(hw,epidx,(enum REG_ICTL_MASK)REG_ICTL_MASK_TXRX_STOP_REQ);
        #line 1128 
        ((hw->ep_shm_info + (unsigned long)epidx)->ep_stats.send_intr_unshare) ++;
        #line 1130 
        cif_set_bit_0((long)epidx,& hw->txrx_stop_req_bit);
        #line 1131 
        cif___ldv_spin_lock_rx_status_lock_of_fjes_hw_0(& hw->rx_status_lock);
        #line 1133 
        ((hw->ep_shm_info + (unsigned long)epidx)->tx.info)->v1i.rx_status = (unsigned short)((unsigned int)((hw->ep_shm_info + (unsigned long)epidx)->tx.info)->v1i.rx_status | 2U);
        #line 1135 
        cif_spin_unlock_irqrestore_rx_status_lock_of_fjes_hw_0(& hw->rx_status_lock,flags);
        #line 1136 
        cif_set_bit_0((long)epidx,& hw->hw_info.buffer_unshare_reserve_bit);
      }
    }
    #line 1056 
    __Cont_0: 
              #line 1056 
    epidx ++;
  }
  #line 1140 
  if (irq_bit != 0UL || adapter->unshare_watch_bitmask != 0UL) {
    #line 1141 
    if (! test_bit(0L,(unsigned long *)(& adapter->unshare_watch_task.data))) 
      #line 1142 
      cif_queue_work_0(adapter->control_wq,& adapter->unshare_watch_task);
  }
  #line 1144 
  return;
}

#line 1147  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_hw.c"
static void fjes_hw_epstop_task(struct work_struct *work)
{
  #line 1149 
  void *__mptr;
  #line 1151 
  unsigned long flags;
  #line 1153 
  ulong remain_bit;
  #line 1154 
  int epid_bit;
  #line 1149 
  __mptr = (void *)work;
  #line 1149 
  struct fjes_hw *hw = ((struct fjes_hw *)(__mptr + 18446744073709551512U));
  #line 1150 
  struct fjes_adapter *adapter = (struct fjes_adapter *)hw->back;
  #line 1156 
  while (1) {
    #line 1156 
    remain_bit = hw->epstop_req_bit;
    #line 1156 
    if (! (remain_bit != 0UL)) 
                               #line 1156 
                               break;
    #line 1157 
    epid_bit = 0;
    #line 1157 
    while (remain_bit != 0UL) {
      #line 1158 
      if ((remain_bit & 1UL) != 0UL) {
        #line 1159 
        cif___ldv_spin_lock_rx_status_lock_of_fjes_hw_0(& hw->rx_status_lock);
        #line 1161 
        ((hw->ep_shm_info + (unsigned long)epid_bit)->tx.info)->v1i.rx_status = (unsigned short)((unsigned int)((hw->ep_shm_info + (unsigned long)epid_bit)->tx.info)->v1i.rx_status | 1U);
        #line 1163 
        cif_spin_unlock_irqrestore_rx_status_lock_of_fjes_hw_0(& hw->rx_status_lock,flags);
        #line 1166 
        cif_clear_bit_0((long)epid_bit,& hw->epstop_req_bit);
        #line 1167 
        cif_set_bit_0((long)epid_bit,& adapter->unshare_watch_bitmask);
        #line 1170 
        if (! test_bit(0L,(unsigned long *)(& adapter->unshare_watch_task.data))) 
          #line 1171 
          cif_queue_work_0(adapter->control_wq,& adapter->unshare_watch_task);
      }
      #line 1157 
      remain_bit >>= 1;
      #line 1157 
      epid_bit ++;
    }
  }
  #line 1176 
  return;
}

#line 1179  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_hw.c"
int fjes_hw_start_debug(struct fjes_hw *hw)
{
  #line 1183 
  enum fjes_dev_command_response_e ret;
  #line 1184 
  int page_count;
  #line 1186 
  void *addr;
  #line 1187 
  int i;
  #line 1181 
  union fjes_device_command_req *req_buf = hw->hw_info.req_buf;
  #line 1182 
  union fjes_device_command_res *res_buf = hw->hw_info.res_buf;
  #line 1185 
  int result = 0;
  #line 1189 
  if (hw->hw_info.trace == (struct es_device_trace *)0) 
                                                        #line 1190 
                                                        return -1;
  #line 1191 
  memset((void *)hw->hw_info.trace,0,65536UL);
  #line 1193 
  memset((void *)req_buf,0,(unsigned long)hw->hw_info.req_buf_size);
  #line 1194 
  memset((void *)res_buf,0,(unsigned long)hw->hw_info.res_buf_size);
  #line 1196 
  req_buf->start_trace.length = (unsigned int)((hw->hw_info.trace_size * 8ULL) / 4096ULL) + 16U;
  #line 1198 
  req_buf->start_trace.mode = hw->debug_mode;
  #line 1199 
  req_buf->start_trace.buffer_len = hw->hw_info.trace_size;
  #line 1200 
  page_count = (int)(hw->hw_info.trace_size / 4096ULL);
  #line 1201 
  i = 0;
  #line 1201 
  while (i < page_count) {
    {
      #line 1202 
      addr = (void *)((u8 *)hw->hw_info.trace + (unsigned long)(i * 4096));
      #line 1203 
      req_buf->start_trace.buffer[i] = ((unsigned long long)((vmalloc_to_page(addr) - (struct page *)vmemmap_base) / 64L) << 12) + ((unsigned long long)addr & 4095ULL);
    }
    #line 1201 
    i ++;
  }
  #line 1208 
  res_buf->start_trace.length = 0U;
  #line 1209 
  res_buf->start_trace.code = 0U;
  #line 1211 
  trace_fjes_hw_start_debug_req(req_buf);
  #line 1212 
  ret = fjes_hw_issue_request_command(hw,(enum fjes_dev_command_request_type)FJES_CMD_REQ_START_DEBUG);
  #line 1213 
  trace_fjes_hw_start_debug(res_buf);
  #line 1215 
  if (res_buf->start_trace.length != 8U) {
    #line 1217 
    result = -42;
    #line 1218 
    trace_fjes_hw_start_debug_err((char *)"Invalid res_buf");
  }
  else 
    #line 1219 
    if (ret == (unsigned int)FJES_CMD_STATUS_NORMAL) 
      #line 1220 
      switch (res_buf->start_trace.code) {
        #line 1221 
        case (__le32)0: 
                        #line 1221 
        ;
        #line 1222 
        result = 0;
        #line 1223 
        break;
        #line 1224 
        default: 
                 #line 1224 
        ;
        #line 1225 
        result = -1;
        #line 1226 
        break;
      }
    else 
      #line 1229 
      switch ((unsigned int)ret) {
        #line 1230 
        case (unsigned int)0: 
                              #line 1230 
        ;
        #line 1231 
        result = -1;
        #line 1232 
        break;
        #line 1233 
        case (unsigned int)2: 
                              #line 1233 
        ;
        #line 1234 
        trace_fjes_hw_start_debug_err((char *)"Busy Timeout");
        #line 1235 
        result = -16;
        #line 1236 
        break;
        #line 1237 
        case (unsigned int)3: 
                              #line 1237 
        ;
        #line 1238 
        case (unsigned int)4: 
                              #line 1238 
        ;
        #line 1239 
        default: 
                 #line 1239 
        ;
        #line 1240 
        result = -1;
        #line 1241 
        break;
      }
  #line 1245 
  return result;
}

#line 1248  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_hw.c"
int fjes_hw_stop_debug(struct fjes_hw *hw)
{
  #line 1252 
  enum fjes_dev_command_response_e ret;
  #line 1250 
  union fjes_device_command_req *req_buf = hw->hw_info.req_buf;
  #line 1251 
  union fjes_device_command_res *res_buf = hw->hw_info.res_buf;
  #line 1253 
  int result = 0;
  #line 1255 
  if (hw->hw_info.trace == (struct es_device_trace *)0) 
                                                        #line 1256 
                                                        return -1;
  #line 1258 
  memset((void *)req_buf,0,(unsigned long)hw->hw_info.req_buf_size);
  #line 1259 
  memset((void *)res_buf,0,(unsigned long)hw->hw_info.res_buf_size);
  #line 1260 
  req_buf->stop_trace.length = 4U;
  #line 1262 
  res_buf->stop_trace.length = 0U;
  #line 1263 
  res_buf->stop_trace.code = 0U;
  #line 1265 
  ret = fjes_hw_issue_request_command(hw,(enum fjes_dev_command_request_type)FJES_CMD_REQ_STOP_DEBUG);
  #line 1266 
  trace_fjes_hw_stop_debug(res_buf);
  #line 1268 
  if (res_buf->stop_trace.length != 8U) {
    #line 1269 
    trace_fjes_hw_stop_debug_err((char *)"Invalid res_buf");
    #line 1270 
    result = -42;
  }
  else 
    #line 1271 
    if (ret == (unsigned int)FJES_CMD_STATUS_NORMAL) 
      #line 1272 
      switch (res_buf->stop_trace.code) {
        #line 1273 
        case (__le32)0: 
                        #line 1273 
        ;
        #line 1274 
        result = 0;
        #line 1275 
        hw->debug_mode = 0U;
        #line 1276 
        break;
        #line 1277 
        default: 
                 #line 1277 
        ;
        #line 1278 
        result = -1;
        #line 1279 
        break;
      }
    else 
      #line 1282 
      switch ((unsigned int)ret) {
        #line 1283 
        case (unsigned int)0: 
                              #line 1283 
        ;
        #line 1284 
        result = -1;
        #line 1285 
        break;
        #line 1286 
        case (unsigned int)2: 
                              #line 1286 
        ;
        #line 1287 
        result = -16;
        #line 1288 
        trace_fjes_hw_stop_debug_err((char *)"Busy Timeout");
        #line 1289 
        break;
        #line 1290 
        case (unsigned int)3: 
                              #line 1290 
        ;
        #line 1291 
        case (unsigned int)4: 
                              #line 1291 
        ;
        #line 1292 
        default: 
                 #line 1292 
        ;
        #line 1293 
        result = -1;
        #line 1294 
        break;
      }
  #line 1298 
  return result;
}

#line 118  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_hw.i.aux"
static void cif_set_bit_0(long nr, unsigned long *addr)
{
  #line 121 
  ldv_set_bit(nr,addr);
  #line 122 
  return;
}

#line 125  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_hw.i.aux"
static void cif_clear_bit_0(long nr, unsigned long *addr)
{
  #line 128 
  ldv_clear_bit(nr,addr);
  #line 129 
  return;
}

#line 132  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_hw.i.aux"
static void INIT_LIST_HEAD_0(struct list_head *list)
{
  #line 135 
  ldv_init_list_head(list);
  #line 136 
  return;
}

#line 302  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_hw.i.aux"
static bool cif_queue_work_0(struct workqueue_struct *wq, struct work_struct *work)
{
  #line 306 
  return emg_queue_work(wq,work);
}

#line 350  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_hw.i.aux"
static void *kcalloc(size_t n, size_t size, gfp_t flags)
{
  #line 353 
  return ldv_kcalloc(n,size,flags);
}

#line 371  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_hw.i.aux"
static void *kzalloc(size_t size, gfp_t flags)
{
  #line 374 
  return ldv_kzalloc(size,flags);
}

#line 671  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_hw.i.aux"
static void *cif_vzalloc(unsigned long size)
{
  #line 674 
  return ldv_vzalloc(size);
}

#line 678  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_hw.i.aux"
static void cif_vfree(void *addr)
{
  #line 681 
  ldv_vfree(addr);
  #line 682 
  return;
}

#line 685  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_hw.i.aux"
static void cif___ldv_spin_lock_rx_status_lock_of_fjes_hw_0(spinlock_t *lock)
{
  #line 688 
  ldv_spin_model_lock((char *)"rx_status_lock_of_fjes_hw");
  #line 690 
  __ldv_spin_lock(lock);
  #line 691 
  return;
}

#line 694  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_hw.i.aux"
static void cif_spin_unlock_irqrestore_rx_status_lock_of_fjes_hw_0(spinlock_t *lock, unsigned long flags)
{
  #line 697 
  ldv_spin_model_unlock((char *)"rx_status_lock_of_fjes_hw");
  #line 699 
  spin_unlock_irqrestore_0(lock,flags);
  #line 700 
  return;
}

#line 703  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_hw.i.aux"
static void cif_mutex_lock_lock_of_fjes_hw_info_1(struct mutex *lock)
{
  #line 706 
  ldv_mutex_model_lock(lock,(char *)"lock_of_fjes_hw_info");
  #line 707 
  return;
}

#line 710  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_hw.i.aux"
static void cif_mutex_unlock_lock_of_fjes_hw_info_1(struct mutex *lock)
{
  #line 713 
  ldv_mutex_model_unlock(lock,(char *)"lock_of_fjes_hw_info");
  #line 714 
  return;
}

#line 717  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/0/concurrency safety/weaver/fjes_hw.i.aux"
static bool cif_schedule_work_0(struct work_struct *work)
{
  #line 721 
  return emg_schedule_work(work);
}

#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h"
static char __tpstrtab_fjes_hw_issue_request_command[30U] = {(char)'f', (char)'j', (char)'e', (char)'s', (char)'_', (char)'h', (char)'w', (char)'_', (char)'i', (char)'s', (char)'s', (char)'u', (char)'e', (char)'_', (char)'r', (char)'e', (char)'q', (char)'u', (char)'e', (char)'s', (char)'t', (char)'_', (char)'c', (char)'o', (char)'m', (char)'m', (char)'a', (char)'n', (char)'d'};
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h"
struct tracepoint __tracepoint_fjes_hw_issue_request_command = {.name = (char *)(& __tpstrtab_fjes_hw_issue_request_command)};
#line 50  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h"
static char __tpstrtab_fjes_hw_request_info[21U] = {(char)'f', (char)'j', (char)'e', (char)'s', (char)'_', (char)'h', (char)'w', (char)'_', (char)'r', (char)'e', (char)'q', (char)'u', (char)'e', (char)'s', (char)'t', (char)'_', (char)'i', (char)'n', (char)'f', (char)'o'};
#line 50  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h"
struct tracepoint __tracepoint_fjes_hw_request_info = {.name = (char *)(& __tpstrtab_fjes_hw_request_info)};
#line 81  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h"
static char __tpstrtab_fjes_hw_request_info_err[25U] = {(char)'f', (char)'j', (char)'e', (char)'s', (char)'_', (char)'h', (char)'w', (char)'_', (char)'r', (char)'e', (char)'q', (char)'u', (char)'e', (char)'s', (char)'t', (char)'_', (char)'i', (char)'n', (char)'f', (char)'o', (char)'_', (char)'e', (char)'r', (char)'r'};
#line 81  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h"
struct tracepoint __tracepoint_fjes_hw_request_info_err = {.name = (char *)(& __tpstrtab_fjes_hw_request_info_err)};
#line 93  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h"
static char __tpstrtab_fjes_hw_register_buff_addr_req[31U] = {(char)'f', (char)'j', (char)'e', (char)'s', (char)'_', (char)'h', (char)'w', (char)'_', (char)'r', (char)'e', (char)'g', (char)'i', (char)'s', (char)'t', (char)'e', (char)'r', (char)'_', (char)'b', (char)'u', (char)'f', (char)'f', (char)'_', (char)'a', (char)'d', (char)'d', (char)'r', (char)'_', (char)'r', (char)'e', (char)'q'};
#line 93  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h"
struct tracepoint __tracepoint_fjes_hw_register_buff_addr_req = {.name = (char *)(& __tpstrtab_fjes_hw_register_buff_addr_req)};
#line 124  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h"
static char __tpstrtab_fjes_hw_register_buff_addr[27U] = {(char)'f', (char)'j', (char)'e', (char)'s', (char)'_', (char)'h', (char)'w', (char)'_', (char)'r', (char)'e', (char)'g', (char)'i', (char)'s', (char)'t', (char)'e', (char)'r', (char)'_', (char)'b', (char)'u', (char)'f', (char)'f', (char)'_', (char)'a', (char)'d', (char)'d', (char)'r'};
#line 124  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h"
struct tracepoint __tracepoint_fjes_hw_register_buff_addr = {.name = (char *)(& __tpstrtab_fjes_hw_register_buff_addr)};
#line 141  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h"
static char __tpstrtab_fjes_hw_register_buff_addr_err[31U] = {(char)'f', (char)'j', (char)'e', (char)'s', (char)'_', (char)'h', (char)'w', (char)'_', (char)'r', (char)'e', (char)'g', (char)'i', (char)'s', (char)'t', (char)'e', (char)'r', (char)'_', (char)'b', (char)'u', (char)'f', (char)'f', (char)'_', (char)'a', (char)'d', (char)'d', (char)'r', (char)'_', (char)'e', (char)'r', (char)'r'};
#line 141  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h"
struct tracepoint __tracepoint_fjes_hw_register_buff_addr_err = {.name = (char *)(& __tpstrtab_fjes_hw_register_buff_addr_err)};
#line 153  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h"
static char __tpstrtab_fjes_hw_unregister_buff_addr_req[33U] = {(char)'f', (char)'j', (char)'e', (char)'s', (char)'_', (char)'h', (char)'w', (char)'_', (char)'u', (char)'n', (char)'r', (char)'e', (char)'g', (char)'i', (char)'s', (char)'t', (char)'e', (char)'r', (char)'_', (char)'b', (char)'u', (char)'f', (char)'f', (char)'_', (char)'a', (char)'d', (char)'d', (char)'r', (char)'_', (char)'r', (char)'e', (char)'q'};
#line 153  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h"
struct tracepoint __tracepoint_fjes_hw_unregister_buff_addr_req = {.name = (char *)(& __tpstrtab_fjes_hw_unregister_buff_addr_req)};
#line 168  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h"
static char __tpstrtab_fjes_hw_unregister_buff_addr[29U] = {(char)'f', (char)'j', (char)'e', (char)'s', (char)'_', (char)'h', (char)'w', (char)'_', (char)'u', (char)'n', (char)'r', (char)'e', (char)'g', (char)'i', (char)'s', (char)'t', (char)'e', (char)'r', (char)'_', (char)'b', (char)'u', (char)'f', (char)'f', (char)'_', (char)'a', (char)'d', (char)'d', (char)'r'};
#line 168  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h"
struct tracepoint __tracepoint_fjes_hw_unregister_buff_addr = {.name = (char *)(& __tpstrtab_fjes_hw_unregister_buff_addr)};
#line 185  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h"
static char __tpstrtab_fjes_hw_unregister_buff_addr_err[33U] = {(char)'f', (char)'j', (char)'e', (char)'s', (char)'_', (char)'h', (char)'w', (char)'_', (char)'u', (char)'n', (char)'r', (char)'e', (char)'g', (char)'i', (char)'s', (char)'t', (char)'e', (char)'r', (char)'_', (char)'b', (char)'u', (char)'f', (char)'f', (char)'_', (char)'a', (char)'d', (char)'d', (char)'r', (char)'_', (char)'e', (char)'r', (char)'r'};
#line 185  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h"
struct tracepoint __tracepoint_fjes_hw_unregister_buff_addr_err = {.name = (char *)(& __tpstrtab_fjes_hw_unregister_buff_addr_err)};
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h"
static char __tpstrtab_fjes_hw_start_debug_req[24U] = {(char)'f', (char)'j', (char)'e', (char)'s', (char)'_', (char)'h', (char)'w', (char)'_', (char)'s', (char)'t', (char)'a', (char)'r', (char)'t', (char)'_', (char)'d', (char)'e', (char)'b', (char)'u', (char)'g', (char)'_', (char)'r', (char)'e', (char)'q'};
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h"
struct tracepoint __tracepoint_fjes_hw_start_debug_req = {.name = (char *)(& __tpstrtab_fjes_hw_start_debug_req)};
#line 214  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h"
static char __tpstrtab_fjes_hw_start_debug[20U] = {(char)'f', (char)'j', (char)'e', (char)'s', (char)'_', (char)'h', (char)'w', (char)'_', (char)'s', (char)'t', (char)'a', (char)'r', (char)'t', (char)'_', (char)'d', (char)'e', (char)'b', (char)'u', (char)'g'};
#line 214  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h"
struct tracepoint __tracepoint_fjes_hw_start_debug = {.name = (char *)(& __tpstrtab_fjes_hw_start_debug)};
#line 228  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h"
static char __tpstrtab_fjes_hw_start_debug_err[24U] = {(char)'f', (char)'j', (char)'e', (char)'s', (char)'_', (char)'h', (char)'w', (char)'_', (char)'s', (char)'t', (char)'a', (char)'r', (char)'t', (char)'_', (char)'d', (char)'e', (char)'b', (char)'u', (char)'g', (char)'_', (char)'e', (char)'r', (char)'r'};
#line 228  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h"
struct tracepoint __tracepoint_fjes_hw_start_debug_err = {.name = (char *)(& __tpstrtab_fjes_hw_start_debug_err)};
#line 240  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h"
static char __tpstrtab_fjes_hw_stop_debug[19U] = {(char)'f', (char)'j', (char)'e', (char)'s', (char)'_', (char)'h', (char)'w', (char)'_', (char)'s', (char)'t', (char)'o', (char)'p', (char)'_', (char)'d', (char)'e', (char)'b', (char)'u', (char)'g'};
#line 240  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h"
struct tracepoint __tracepoint_fjes_hw_stop_debug = {.name = (char *)(& __tpstrtab_fjes_hw_stop_debug)};
#line 254  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h"
static char __tpstrtab_fjes_hw_stop_debug_err[23U] = {(char)'f', (char)'j', (char)'e', (char)'s', (char)'_', (char)'h', (char)'w', (char)'_', (char)'s', (char)'t', (char)'o', (char)'p', (char)'_', (char)'d', (char)'e', (char)'b', (char)'u', (char)'g', (char)'_', (char)'e', (char)'r', (char)'r'};
#line 254  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h"
struct tracepoint __tracepoint_fjes_hw_stop_debug_err = {.name = (char *)(& __tpstrtab_fjes_hw_stop_debug_err)};
#line 268  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h"
static char __tpstrtab_fjes_txrx_stop_req_irq_pre[27U] = {(char)'f', (char)'j', (char)'e', (char)'s', (char)'_', (char)'t', (char)'x', (char)'r', (char)'x', (char)'_', (char)'s', (char)'t', (char)'o', (char)'p', (char)'_', (char)'r', (char)'e', (char)'q', (char)'_', (char)'i', (char)'r', (char)'q', (char)'_', (char)'p', (char)'r', (char)'e'};
#line 268  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h"
struct tracepoint __tracepoint_fjes_txrx_stop_req_irq_pre = {.name = (char *)(& __tpstrtab_fjes_txrx_stop_req_irq_pre)};
#line 292  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h"
static char __tpstrtab_fjes_txrx_stop_req_irq_post[28U] = {(char)'f', (char)'j', (char)'e', (char)'s', (char)'_', (char)'t', (char)'x', (char)'r', (char)'x', (char)'_', (char)'s', (char)'t', (char)'o', (char)'p', (char)'_', (char)'r', (char)'e', (char)'q', (char)'_', (char)'i', (char)'r', (char)'q', (char)'_', (char)'p', (char)'o', (char)'s', (char)'t'};
#line 292  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h"
struct tracepoint __tracepoint_fjes_txrx_stop_req_irq_post = {.name = (char *)(& __tpstrtab_fjes_txrx_stop_req_irq_post)};
#line 312  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h"
static char __tpstrtab_fjes_stop_req_irq_pre[22U] = {(char)'f', (char)'j', (char)'e', (char)'s', (char)'_', (char)'s', (char)'t', (char)'o', (char)'p', (char)'_', (char)'r', (char)'e', (char)'q', (char)'_', (char)'i', (char)'r', (char)'q', (char)'_', (char)'p', (char)'r', (char)'e'};
#line 312  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h"
struct tracepoint __tracepoint_fjes_stop_req_irq_pre = {.name = (char *)(& __tpstrtab_fjes_stop_req_irq_pre)};
#line 336  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h"
static char __tpstrtab_fjes_stop_req_irq_post[23U] = {(char)'f', (char)'j', (char)'e', (char)'s', (char)'_', (char)'s', (char)'t', (char)'o', (char)'p', (char)'_', (char)'r', (char)'e', (char)'q', (char)'_', (char)'i', (char)'r', (char)'q', (char)'_', (char)'p', (char)'o', (char)'s', (char)'t'};
#line 336  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/fjes/fjes_trace.h"
struct tracepoint __tracepoint_fjes_stop_req_irq_post = {.name = (char *)(& __tpstrtab_fjes_stop_req_irq_post)};
#line 20  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/common/inline_asm.c"
void ldv_inline_asm(void)
{
  #line 24 
  return;
}

#line 20  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
void ldv_atomic_add(int i, atomic_t *v)
{
  #line 22 
  v->counter += i;
  #line 23 
  return;
}

#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
void ldv_atomic_sub(int i, atomic_t *v)
{
  #line 27 
  v->counter -= i;
  #line 28 
  return;
}

#line 30  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
int ldv_atomic_sub_and_test(int i, atomic_t *v)
{
  #line 32 
  v->counter -= i;
  #line 33 
  if (v->counter != 0) 
                       #line 34 
                       return 0;
  #line 36 
  return 1;
}

#line 39  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
void ldv_atomic_inc(atomic_t *v)
{
  #line 41 
  (v->counter) ++;
  #line 42 
  return;
}

#line 44  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
void ldv_atomic_dec(atomic_t *v)
{
  #line 46 
  (v->counter) --;
  #line 47 
  return;
}

#line 49  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
int ldv_atomic_dec_and_test(atomic_t *v)
{
  #line 51 
  (v->counter) --;
  #line 52 
  if (v->counter != 0) 
                       #line 53 
                       return 0;
  #line 55 
  return 1;
}

#line 58  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
int ldv_atomic_inc_and_test(atomic_t *v)
{
  #line 60 
  (v->counter) ++;
  #line 61 
  if (v->counter != 0) 
                       #line 62 
                       return 0;
  #line 64 
  return 1;
}

#line 67  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
int ldv_atomic_add_return(int i, atomic_t *v)
{
  #line 69 
  v->counter += i;
  #line 70 
  return v->counter;
}

#line 73  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
int ldv_atomic_add_negative(int i, atomic_t *v)
{
  #line 75 
  v->counter += i;
  #line 76 
  return v->counter < 0;
}

#line 79  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
int ldv_atomic_inc_short(short *v)
{
  #line 81 
  *v = (short)((unsigned int)*v + 1U);
  #line 82 
  return (int)*v;
}

#line 20  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/current.c"
static struct task_struct ldv_current;
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/current.c"
struct task_struct *ldv_get_current(void)
{
  #line 28 
  ldv_current.pid = 1;
  #line 29 
  return & ldv_current;
}

#line 32  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 28  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
void ldv_switch_to_interrupt_context(void);
#line 42  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 34  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
void ldv_switch_to_process_context(void);
#line 50  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 40  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
bool ldv_in_interrupt_context(void);
#line 112  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 55  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
int ldv_post_init(int init_ret_val);
#line 132  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 61  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
int ldv_post_probe(int probe_ret_val);
#line 133  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 133 
void ldv_check_return_value_probe(int);
#line 141 
#line 68  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
int ldv_filter_err_code(int ret_val);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/common.h"
#line 23 
void __VERIFIER_assume(int);
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
static bool __ldv_in_interrupt_context = (_Bool)0;
#line 28  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
void ldv_switch_to_interrupt_context(void)
{
  #line 31 
  __ldv_in_interrupt_context = (_Bool)1;
  #line 32 
  return;
}

#line 34  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
void ldv_switch_to_process_context(void)
{
  #line 37 
  __ldv_in_interrupt_context = (_Bool)0;
  #line 38 
  return;
}

#line 40  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
bool ldv_in_interrupt_context(void)
{
  #line 42 
  return __ldv_in_interrupt_context;
}

#line 45  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
static int ldv_filter_positive_int(int val)
{
  #line 47 
  __VERIFIER_assume(val <= 0);
  #line 48 
  return val;
}

#line 55  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
int ldv_post_init(int init_ret_val)
{
  #line 57 
  return ldv_filter_positive_int(init_ret_val);
}

#line 61  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
int ldv_post_probe(int probe_ret_val)
{
  #line 63 
  ldv_check_return_value_probe(probe_ret_val);
  #line 64 
  return ldv_filter_positive_int(probe_ret_val);
}

#line 68  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
int ldv_filter_err_code(int ret_val)
{
  #line 70 
  return ldv_filter_positive_int(ret_val);
}

#line 28  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/common/list.h"
#line 28 
void ldv_save_allocated_memory_to_list(void *);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/device.h"
#line 29  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
void *ldv_dev_get_drvdata(struct device *dev);
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/device.h"
#line 43  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
int ldv_dev_set_drvdata(struct device *dev, void *data);
#line 57  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 57 
void *ldv_xzalloc(size_t size);
#line 29  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
void *ldv_dev_get_drvdata(struct device *dev)
{
  #line 31 
  if (dev != (struct device *)0 && dev->p != (struct device_private *)0) 
    #line 32 
    return (dev->p)->driver_data;
  #line 34 
  return (void *)0;
}

#line 43  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
int ldv_dev_set_drvdata(struct device *dev, void *data)
{
  #line 45 
  dev->p = (struct device_private *)ldv_xzalloc(8UL);
  #line 46 
  ldv_save_allocated_memory_to_list((void *)dev->p);
  #line 47 
  (dev->p)->driver_data = data;
  #line 49 
  return 0;
}

#line 156  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 156 
void ldv_check_alloc_flags(gfp_t);
#line 48  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 48 
void *ldv_malloc(size_t size);
#line 49 
#line 49 
void *ldv_calloc(size_t nmemb, size_t size);
#line 50 
#line 50 
void *ldv_zalloc(size_t size);
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/devres.c"
void *ldv_devm_kmalloc(size_t size, gfp_t flags)
{
  #line 26 
  void *res;
  #line 28 
  ldv_check_alloc_flags(flags);
  #line 29 
  res = ldv_malloc(size);
  #line 30 
  ldv_save_allocated_memory_to_list(res);
  #line 32 
  return res;
}

#line 35  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/devres.c"
void *ldv_devm_kzalloc(size_t size, gfp_t flags)
{
  #line 37 
  void *res;
  #line 39 
  ldv_check_alloc_flags(flags);
  #line 40 
  res = ldv_zalloc(size);
  #line 41 
  ldv_save_allocated_memory_to_list(res);
  #line 43 
  return res;
}

#line 46  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/devres.c"
void *ldv_devm_kmalloc_array(size_t n, size_t size, gfp_t flags)
{
  #line 48 
  void *res;
  #line 50 
  ldv_check_alloc_flags(flags);
  #line 51 
  res = ldv_malloc(n * size);
  #line 52 
  ldv_save_allocated_memory_to_list(res);
  #line 54 
  return res;
}

#line 57  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/devres.c"
void *ldv_devm_kcalloc(size_t n, size_t size, gfp_t flags)
{
  #line 59 
  void *res;
  #line 61 
  ldv_check_alloc_flags(flags);
  #line 62 
  res = ldv_calloc(n,size);
  #line 63 
  ldv_save_allocated_memory_to_list(res);
  #line 65 
  return res;
}

#line 51  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 51 
void ldv_free(void *s);
#line 59 
#line 59 
void *ldv_malloc_unknown_size(void);
#line 31  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 31 
int ldv_undef_int_positive(void);
#line 40 
#line 40 
int ldv_undef_int_nonpositive(void);
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/firmware_loader.c"
int ldv_request_firmware(struct firmware **fw)
{
  #line 27 
  int retval;
  #line 26 
  struct firmware *_fw = (struct firmware *)0;
  #line 29 
  retval = ldv_undef_int_nonpositive();
  #line 31 
  if (retval == 0) {
    #line 33 
    _fw = (struct firmware *)ldv_xzalloc(32UL);
    #line 34 
    _fw->data = (u8 *)ldv_malloc_unknown_size();
    #line 35 
    __VERIFIER_assume(_fw->data != (u8 *)0U);
    #line 36 
    _fw->size = (unsigned long)ldv_undef_int_positive();
  }
  #line 39 
  *fw = _fw;
  #line 41 
  return retval;
}

#line 44  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/firmware_loader.c"
void ldv_release_firmware(struct firmware *fw)
{
  #line 46 
  if (fw != (struct firmware *)0) {
    #line 48 
    ldv_free((void *)fw->data);
    #line 49 
    ldv_free((void *)fw);
  }
  #line 51 
  return;
}

#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/i2c.h"
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/i2c/i2c-core-smbus.c"
s32 ldv_i2c_smbus_read_block_data(u8 *values);
#line 55  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 55 
void *ldv_xmalloc(size_t size);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 23 
int ldv_undef_int(void);
#line 34 
#line 34 
int ldv_undef_int_negative(void);
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/i2c/i2c-core-smbus.c"
s32 ldv_i2c_smbus_read_block_data(u8 *values)
{
  #line 27 
  __u8 size;
  #line 28 
  char *bytes;
  #line 30 
  if (ldv_undef_int() != 0) {
    #line 33 
    size = (unsigned char)ldv_undef_int_positive();
    #line 35 
    __VERIFIER_assume((unsigned int)size <= 32U);
    #line 37 
    bytes = (char *)ldv_xmalloc((unsigned long)size);
    #line 39 
    memcpy((void *)values,(void *)bytes,(unsigned long)size);
    #line 40 
    ldv_free((void *)bytes);
    #line 42 
    return (int)size;
  }
  else {
    #line 46 
    return ldv_undef_int_negative();
  }
}

#line 988  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
__inline static void v4l2_set_subdevdata(struct v4l2_subdev *sd, void *p)
{
  #line 990 
  sd->dev_priv = p;
  #line 991 
  return;
}

#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/media/v4l2-common.h"
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/media/v4l2-core/v4l2-i2c.c"
void ldv_v4l2_i2c_subdev_init(struct v4l2_subdev *sd, struct i2c_client *client, struct v4l2_subdev_ops *ops);
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/media/v4l2-core/v4l2-i2c.c"
void ldv_v4l2_i2c_subdev_init(struct v4l2_subdev *sd, struct i2c_client *client, struct v4l2_subdev_ops *ops)
{
  #line 26 
  sd->ops = ops;
  #line 27 
  v4l2_set_subdevdata(sd,(void *)client);
  #line 28 
  ldv_dev_set_drvdata(& client->dev,(void *)sd);
  #line 29 
  return;
}

#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/spi.c"
struct spi_controller *ldv_spi_alloc_master(struct device *host, unsigned int size)
{
  #line 25 
  struct spi_controller *master;
  #line 27 
  master = (struct spi_controller *)ldv_zalloc((unsigned long)size + 2936UL);
  #line 29 
  if (master == (struct spi_controller *)0) 
                                            #line 30 
                                            return (struct spi_controller *)0;
  #line 32 
  ldv_dev_set_drvdata(& master->dev,(void *)(master + 1U));
  #line 34 
  return master;
}

#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/fb.h"
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/video/fbdev/core/fbsysfs.c"
struct fb_info *ldv_framebuffer_alloc(size_t size);
#line 26  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/fb.h"
#line 38  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/video/fbdev/core/fbsysfs.c"
void ldv_framebuffer_release(struct fb_info *info);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/video/fbdev/core/fbsysfs.c"
struct fb_info *ldv_framebuffer_alloc(size_t size)
{
  #line 25 
  struct fb_info *info;
  #line 27 
  info = (struct fb_info *)ldv_zalloc(size + 1568UL);
  #line 29 
  if (info == (struct fb_info *)0) 
                                   #line 30 
                                   return (struct fb_info *)0;
  #line 32 
  if (size != 0UL) 
                   #line 33 
                   info->par = (void *)((char *)info + 1568UL);
  #line 35 
  return info;
}

#line 38  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/video/fbdev/core/fbsysfs.c"
void ldv_framebuffer_release(struct fb_info *info)
{
  #line 40 
  if (info == (struct fb_info *)0) 
                                   #line 41 
                                   return;
  #line 44 
  ldv_free((void *)info->apertures);
  #line 46 
  ldv_free((void *)info);
  #line 47 
  return;
}

#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/err.h"
#line 59  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/err.c"
bool ldv_is_err_or_null(void *ptr);
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/err.h"
#line 35  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/err.c"
void *ldv_err_ptr(long error);
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/err.c"
bool ldv_is_err(void *ptr)
{
  #line 29 
  if ((unsigned long)ptr > 18446744073709547520UL) 
                                                   #line 30 
                                                   return (_Bool)1; else 
                                                                    #line 32 
                                                                    return (_Bool)0;
}

#line 35  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/err.c"
void *ldv_err_ptr(long error)
{
  #line 37 
  unsigned long result;
  #line 39 
  __VERIFIER_assume(error < 0L);
  #line 40 
  __VERIFIER_assume(error >= -4095L);
  #line 41 
  result = 18446744073709547520UL - (unsigned long)error;
  #line 42 
  __VERIFIER_assume(result > 18446744073709547520UL);
  #line 44 
  return (void *)result;
}

#line 47  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_ptr_err(void *ptr)
{
  #line 49 
  long result;
  #line 51 
  __VERIFIER_assume((unsigned long)ptr > 18446744073709547520UL);
  #line 52 
  result = (long)(18446744073709547520UL - (unsigned long)ptr);
  #line 53 
  __VERIFIER_assume(result < 0L);
  #line 54 
  __VERIFIER_assume(result >= -4095L);
  #line 56 
  return result;
}

#line 59  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/err.c"
bool ldv_is_err_or_null(void *ptr)
{
  #line 61 
  int tmp_0;
  #line 61 
  if (ptr == (void *)0) 
                        #line 61 
                        tmp_0 = 1;
  else {
    #line 61 
    if ((int)ldv_is_err(ptr) != 0) 
                                   #line 61 
                                   tmp_0 = 1; else 
                                                   #line 61 
                                                   tmp_0 = 0;
  }
  #line 61 
  return (_Bool)(tmp_0 != 0);
}

#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/panic.h"
#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/kernel/panic.c"
void ldv_panic(void);
#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/kernel/panic.c"
void ldv_panic(void)
{
  #line 23 
  __VERIFIER_assume(0);
  #line 24 
  return;
}

#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/bitmap.h"
#line 32  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_bitmap_set(unsigned long *map, unsigned int start, int nbits);
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/bitmap.h"
#line 52  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_bitmap_clear(unsigned long *map, unsigned int start, int nbits);
#line 29  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/bitmap.h"
#line 78  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
unsigned long ldv_bitmap_find_next_zero_area(unsigned long *map, unsigned long size, unsigned long start, unsigned int nr, unsigned long align_mask);
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/find_bit.h"
#line 22 
unsigned long ldv_find_next_bit(unsigned long *addr, unsigned long size, unsigned long offset);
#line 23 
#line 23 
unsigned long ldv_find_next_zero_bit(unsigned long *addr, unsigned long size, unsigned long offset);
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_set_bit(long nr, unsigned long *addr)
{
  #line 24 
  *(addr + (unsigned long)nr / 64UL) |= 1UL << ((unsigned long)nr & 63UL);
  #line 25 
  return;
}

#line 27  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_clear_bit(long nr, unsigned long *addr)
{
  #line 29 
  *(addr + (unsigned long)nr / 64UL) &= ~ (1UL << ((unsigned long)nr & 63UL));
  #line 30 
  return;
}

#line 32  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_bitmap_set(unsigned long *map, unsigned int start, int nbits)
{
  #line 34 
  unsigned long *p = map + (unsigned long)(start / 64U);
  #line 35 
  unsigned int size = start + (unsigned int)nbits;
  #line 36 
  int bits_to_set = (int)(64U - (start & 63U));
  #line 37 
  unsigned long mask_to_set = 18446744073709551615UL << ((unsigned long)start & 63UL);
  #line 39 
  while (nbits - bits_to_set >= 0) {
    #line 40 
    *p |= mask_to_set;
    #line 41 
    nbits -= bits_to_set;
    #line 42 
    bits_to_set = 64;
    #line 43 
    mask_to_set = 18446744073709551615UL;
    #line 44 
    p ++;
  }
  #line 46 
  if (nbits != 0) {
    #line 47 
    mask_to_set = (18446744073709551615UL >> ((unsigned long)(- size) & 63UL)) & mask_to_set;
    #line 48 
    *p |= mask_to_set;
  }
  #line 50 
  return;
}

#line 52  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_bitmap_clear(unsigned long *map, unsigned int start, int nbits)
{
  #line 54 
  unsigned long *p = map + (unsigned long)(start / 64U);
  #line 55 
  unsigned int size = start + (unsigned int)nbits;
  #line 56 
  int bits_to_clear = (int)(64U - (start & 63U));
  #line 57 
  unsigned long mask_to_clear = 18446744073709551615UL << ((unsigned long)start & 63UL);
  #line 59 
  while (nbits - bits_to_clear >= 0) {
    #line 60 
    *p &= ~ mask_to_clear;
    #line 61 
    nbits -= bits_to_clear;
    #line 62 
    bits_to_clear = 64;
    #line 63 
    mask_to_clear = 18446744073709551615UL;
    #line 64 
    p ++;
  }
  #line 66 
  if (nbits != 0) {
    #line 67 
    mask_to_clear = (18446744073709551615UL >> ((unsigned long)(- size) & 63UL)) & mask_to_clear;
    #line 68 
    *p &= ~ mask_to_clear;
  }
  #line 70 
  return;
}

#line 72  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_bitmap_zero(unsigned long *dst, unsigned int nbits)
{
  #line 74 
  unsigned int len = (unsigned int)(((unsigned long)nbits + 63UL) / 64UL) * 8U;
  #line 75 
  memset((void *)dst,0,(unsigned long)len);
  #line 76 
  return;
}

#line 78  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
unsigned long ldv_bitmap_find_next_zero_area(unsigned long *map, unsigned long size, unsigned long start, unsigned int nr, unsigned long align_mask)
{
  #line 80 
  unsigned long index;
  #line 80 
  unsigned long end;
  #line 80 
  unsigned long i;
  #line 82 
  again: 
         #line 82 
  ;
  #line 83 
  index = ldv_find_next_zero_bit(map,size,start);
  #line 84 
  index = (index + align_mask) & ~ align_mask;
  #line 85 
  end = (unsigned long)nr + index;
  #line 87 
  if (end > size) 
                  #line 88 
                  return end;
  #line 90 
  i = ldv_find_next_bit(map,end,index);
  #line 92 
  if (i < end) {
    #line 93 
    start = i + 1UL;
    #line 94 
    goto again;
  }
  #line 97 
  return index;
}

#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/find_bit.h"
#line 68  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/find_bit.common.c"
unsigned long ldv_find_first_bit(unsigned long *addr, unsigned long size);
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/find_bit.h"
#line 25 
void ldv_check_find_bit_offset(unsigned long, unsigned long);
#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/find_bit.common.c"
static unsigned long ldv_ffs(unsigned long word)
{
  #line 23 
  int num = 0;
  #line 25 
  if ((word & 4294967295UL) == 0UL) {
    #line 26 
    num += 32;
    #line 27 
    word >>= 32;
  }
  #line 29 
  if ((word & 65535UL) == 0UL) {
    #line 30 
    num += 16;
    #line 31 
    word >>= 16;
  }
  #line 33 
  if ((word & 255UL) == 0UL) {
    #line 34 
    num += 8;
    #line 35 
    word >>= 8;
  }
  #line 37 
  if ((word & 15UL) == 0UL) {
    #line 38 
    num += 4;
    #line 39 
    word >>= 4;
  }
  #line 41 
  if ((word & 3UL) == 0UL) {
    #line 42 
    num += 2;
    #line 43 
    word >>= 2;
  }
  #line 45 
  if ((word & 1UL) == 0UL) 
                           #line 46 
                           num ++;
  #line 48 
  return (unsigned long)num;
}

#line 51  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/find_bit.common.c"
static unsigned long ldv_min(unsigned long a, unsigned long b)
{
  #line 53 
  if (a < b) 
             #line 54 
             return a;
  #line 56 
  return b;
}

#line 59  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/find_bit.common.c"
static unsigned long ldv_restrict_find_bit_res(unsigned long res, unsigned long size)
{
  #line 62 
  __VERIFIER_assume(1);
  #line 63 
  __VERIFIER_assume(res <= size);
  #line 65 
  return res;
}

#line 68  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/find_bit.common.c"
unsigned long ldv_find_first_bit(unsigned long *addr, unsigned long size)
{
  #line 70 
  unsigned long i;
  #line 72 
  i = 0UL;
  #line 72 
  while (i * 64UL < size) {
    #line 73 
    if (*(addr + i) != 0UL) {
      #line 74 
      ;
      #line 74 
      ;
      #line 74 
      ;
      #line 74 
      return ldv_restrict_find_bit_res(ldv_min(i * 64UL + ldv_ffs(*(addr + i)),size),
                                  size);
    }
    #line 72 
    i ++;
  }
  #line 76 
  return size;
}

#line 79  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/find_bit.common.c"
unsigned long ldv_find_next_bit(unsigned long *addr, unsigned long size, unsigned long offset)
{
  #line 81 
  unsigned long tmp;
  #line 83 
  ldv_check_find_bit_offset(size,offset);
  #line 85 
  tmp = *(addr + offset / 64UL);
  #line 86 
  tmp = (unsigned long)((18446744073709551615ULL << (offset & 63UL)) & (unsigned long long)tmp);
  #line 87 
  offset &= 18446744073709551552UL;
  #line 89 
  while (tmp == 0UL) {
    #line 90 
    offset += 64UL;
    #line 91 
    if (offset >= size) 
                        #line 92 
                        return size;
    #line 94 
    tmp = *(addr + offset / 64UL);
  }
  #line 97 
  ;
  #line 97 
  ;
  #line 97 
  ;
  #line 97 
  return ldv_restrict_find_bit_res(ldv_min(ldv_ffs(tmp) + offset,size),size);
}

#line 100  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/find_bit.common.c"
unsigned long ldv_find_next_zero_bit(unsigned long *addr, unsigned long size, unsigned long offset)
{
  #line 102 
  unsigned long tmp;
  #line 104 
  ldv_check_find_bit_offset(size,offset);
  #line 106 
  tmp = *(addr + offset / 64UL);
  #line 107 
  tmp = ~ tmp;
  #line 108 
  tmp = (unsigned long)((18446744073709551615ULL << (offset & 63UL)) & (unsigned long long)tmp);
  #line 109 
  offset &= 18446744073709551552UL;
  #line 111 
  while (tmp == 0UL) {
    #line 112 
    offset += 64UL;
    #line 113 
    if (offset >= size) 
                        #line 114 
                        return size;
    #line 116 
    tmp = *(addr + offset / 64UL);
    #line 117 
    tmp = ~ tmp;
  }
  #line 120 
  ;
  #line 120 
  ;
  #line 120 
  ;
  #line 120 
  return ldv_restrict_find_bit_res(ldv_min(ldv_ffs(tmp) + offset,size),size);
}

#line 28  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/string.h"
#line 70  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
char *ldv_strstr(char *cs, char *ct);
#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
size_t ldv_strlen(char *s)
{
  #line 23 
  unsigned int len = 0U;
  #line 25 
  while ((int)*s != 0) {
    #line 26 
    len ++;
    #line 25 
    s ++;
  }
  #line 28 
  return (unsigned long)len;
}

#line 31  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
int ldv_strcmp(char *cs, char *ct)
{
  #line 33 
  while ((int)*cs != 0 && (int)*ct != 0) {
    #line 34 
    if ((int)*cs != (int)*ct) 
                              #line 35 
                              break;
    #line 33 
    cs ++;
    #line 33 
    ct ++;
  }
  #line 37 
  return (int)*cs - (int)*ct;
}

#line 40  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
int ldv_strncmp(char *cs, char *ct, __kernel_size_t count)
{
  #line 42 
  if (count == 0UL) 
                    #line 43 
                    return 0;
  #line 45 
  while ((int)*cs != 0 && (int)*ct != 0) {
    #line 46 
    if ((int)*cs != (int)*ct) 
                              #line 47 
                              break;
    #line 49 
    count --;
    #line 51 
    if (count == 0UL) 
                      #line 52 
                      break;
    #line 45 
    cs ++;
    #line 45 
    ct ++;
  }
  #line 55 
  return (int)*cs - (int)*ct;
}

#line 58  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
int ldv_memcmp(void *cs, void *ct, size_t count)
{
  #line 60 
  unsigned char *su1;
  #line 60 
  unsigned char *su2;
  #line 61 
  int res = 0;
  #line 63 
  su1 = (unsigned char *)cs;
  #line 63 
  su2 = (unsigned char *)ct;
  #line 63 
  while (count != 0UL) {
    #line 64 
    res = (int)*su1 - (int)*su2;
    #line 64 
    if (res != 0) 
                  #line 65 
                  break;
    #line 63 
    su1 ++;
    #line 63 
    su2 ++;
    #line 63 
    count --;
  }
  #line 67 
  return res;
}

#line 70  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
char *ldv_strstr(char *cs, char *ct)
{
  #line 72 
  size_t cs_len;
  #line 72 
  size_t ct_len;
  #line 74 
  cs_len = ldv_strlen(cs);
  #line 75 
  ct_len = ldv_strlen(ct);
  #line 77 
  while (cs_len >= ct_len) {
    #line 78 
    if (ldv_memcmp((void *)cs,(void *)ct,ct_len) == 0) 
                                                       #line 79 
                                                       return cs;
    #line 81 
    cs_len --;
    #line 82 
    cs ++;
  }
  #line 85 
  return (char *)0;
}

#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/list.c"
void ldv_init_list_head(struct list_head *list)
{
  #line 23 
  list->next = list;
  #line 24 
  list->prev = list;
  #line 25 
  return;
}

#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc(size_t size, gfp_t flags);
#line 26  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 43  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags);
#line 30  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 69  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
struct kmem_cache *ldv_kmem_cache_create(char *name, unsigned int size);
#line 31  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 85  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmem_cache_alloc(struct kmem_cache *cachep, gfp_t flags);
#line 32  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 90  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmem_cache_zalloc(struct kmem_cache *cachep, gfp_t flags);
#line 33  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 95  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void ldv_kmem_cache_free(struct kmem_cache *cachep, void *objp);
#line 34  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 100  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void ldv_kmem_cache_destroy(struct kmem_cache *cachep);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc(size_t size, gfp_t flags)
{
  #line 25 
  void *res;
  #line 27 
  ldv_check_alloc_flags(flags);
  #line 28 
  res = ldv_malloc(size);
  #line 30 
  return res;
}

#line 33  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kzalloc(size_t size, gfp_t flags)
{
  #line 35 
  void *res;
  #line 37 
  ldv_check_alloc_flags(flags);
  #line 38 
  res = ldv_zalloc(size);
  #line 40 
  return res;
}

#line 43  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags)
{
  #line 45 
  void *res;
  #line 47 
  ldv_check_alloc_flags(flags);
  #line 48 
  res = ldv_malloc(n * size);
  #line 50 
  return res;
}

#line 53  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags)
{
  #line 55 
  void *res;
  #line 57 
  ldv_check_alloc_flags(flags);
  #line 58 
  res = ldv_calloc(n,size);
  #line 60 
  return res;
}

#line 69  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
struct kmem_cache *ldv_kmem_cache_create(char *name, unsigned int size)
{
  #line 71 
  struct kmem_cache *res;
  #line 72 
  struct ldv_kmem_cache *ldv_res;
  #line 74 
  res = (struct kmem_cache *)ldv_zalloc(16UL);
  #line 76 
  if (res != (struct kmem_cache *)0) {
    #line 77 
    ldv_res = (struct ldv_kmem_cache *)res;
    #line 78 
    ldv_res->name = name;
    #line 79 
    ldv_res->size = size;
  }
  #line 82 
  return res;
}

#line 85  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmem_cache_alloc(struct kmem_cache *cachep, gfp_t flags)
{
  #line 87 
  return ldv_kmalloc((unsigned long)((struct ldv_kmem_cache *)cachep)->size,
                  flags);
}

#line 90  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmem_cache_zalloc(struct kmem_cache *cachep, gfp_t flags)
{
  #line 92 
  return ldv_kzalloc((unsigned long)((struct ldv_kmem_cache *)cachep)->size,
                  flags);
}

#line 95  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void ldv_kmem_cache_free(struct kmem_cache *cachep, void *objp)
{
  #line 97 
  ldv_free(objp);
  #line 98 
  return;
}

#line 100  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void ldv_kmem_cache_destroy(struct kmem_cache *cachep)
{
  #line 102 
  ldv_free((void *)cachep);
  #line 103 
  return;
}

#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/string.h"
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/util.c"
void *ldv_kmemdup(void *src, size_t len, gfp_t gfp);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/util.c"
void *ldv_kmemdup(void *src, size_t len, gfp_t gfp)
{
  #line 25 
  void *res;
  #line 27 
  ldv_check_alloc_flags(gfp);
  #line 28 
  res = ldv_malloc(len);
  #line 30 
  if (res != (void *)0) 
                        #line 31 
                        memcpy(res,src,len);
  #line 33 
  return res;
}

#line 162  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 162 
void ldv_check_alloc_nonatomic(void);
#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/vmalloc.h"
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/vmalloc.c"
void *ldv_vmalloc(unsigned long size);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/vmalloc.c"
void *ldv_vmalloc(unsigned long size)
{
  #line 25 
  void *res;
  #line 27 
  ldv_check_alloc_nonatomic();
  #line 28 
  res = ldv_malloc(size);
  #line 30 
  return res;
}

#line 33  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/vmalloc.c"
void *ldv_vzalloc(unsigned long size)
{
  #line 35 
  void *res;
  #line 37 
  ldv_check_alloc_nonatomic();
  #line 38 
  res = ldv_zalloc(size);
  #line 40 
  return res;
}

#line 43  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/vmalloc.c"
void ldv_vfree(void *addr)
{
  #line 45 
  ldv_free(addr);
  #line 46 
  return;
}

#line 28  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 28 
void *malloc(size_t);
#line 29 
#line 29 
void *calloc(size_t, size_t);
#line 30 
#line 30 
void free(void *);
#line 45 
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
unsigned int ldv_is_memory_alloc_failures;
#line 56  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 63  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xcalloc(size_t nmemb, size_t size);
#line 60  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 88  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc_unknown_size(void);
#line 61  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 97  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc_unknown_size(void);
#line 64  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc(size_t size);
#line 65  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 37  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc(size_t nmemb, size_t size);
#line 66  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 42  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc(size_t size);
#line 67  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 47  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void ldv_reference_free(void *s);
#line 69  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 52  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_realloc(void *ptr, size_t size);
#line 71  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 80  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc(size_t size);
#line 72  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 90  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xcalloc(size_t nmemb, size_t size);
#line 73  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 100  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xzalloc(size_t size);
#line 75  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 110  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc_unknown_size(void);
#line 76  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 124  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc_unknown_size(void);
#line 77  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 139  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc_unknown_size(void);
#line 83  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 106  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc_unknown_size(size_t size);
#line 85  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 144  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size);
#line 87  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 87 
void *external_allocated_data(void);
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
unsigned int ldv_is_memory_alloc_failures = 1U;
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc(size_t size)
{
  #line 26 
  void *res;
  #line 28 
  if (ldv_is_memory_alloc_failures != 0U) {
    #line 28 
    if (ldv_undef_int() != 0) 
                              #line 29 
                              return (void *)0;
  }
  #line 32 
  res = malloc(size);
  #line 33 
  __VERIFIER_assume(res != (void *)0);
  #line 34 
  return res;
}

#line 37  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc(size_t nmemb, size_t size)
{
  #line 39 
  return calloc(nmemb,size);
}

#line 42  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc(size_t size)
{
  #line 44 
  return calloc(1UL,size);
}

#line 47  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void ldv_reference_free(void *s)
{
  #line 49 
  free(s);
  #line 50 
  return;
}

#line 52  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_realloc(void *ptr, size_t size)
{
  #line 54 
  void *res;
  #line 56 
  if (ptr != (void *)0 && size == 0UL) {
    #line 57 
    free(ptr);
    #line 58 
    return (void *)0;
  }
  #line 61 
  if (ptr == (void *)0) {
    #line 62 
    res = malloc(size);
    #line 63 
    return res;
  }
  #line 66 
  if (ldv_undef_int() != 0) {
    #line 68 
    res = malloc(size);
    #line 69 
    __VERIFIER_assume(res != (void *)0);
    #line 71 
    memcpy(res,ptr,size);
    #line 72 
    free(ptr);
    #line 74 
    return res;
  }
  else 
       #line 77 
       return (void *)0;
}

#line 80  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc(size_t size)
{
  #line 82 
  void *res;
  #line 84 
  res = malloc(size);
  #line 85 
  __VERIFIER_assume(res != (void *)0);
  #line 87 
  return res;
}

#line 90  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xcalloc(size_t nmemb, size_t size)
{
  #line 92 
  void *res;
  #line 94 
  res = calloc(nmemb,size);
  #line 95 
  __VERIFIER_assume(res != (void *)0);
  #line 97 
  return res;
}

#line 100  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xzalloc(size_t size)
{
  #line 102 
  void *res;
  #line 104 
  res = calloc(1UL,size);
  #line 105 
  __VERIFIER_assume(res != (void *)0);
  #line 107 
  return res;
}

#line 110  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc_unknown_size(void)
{
  #line 112 
  void *res;
  #line 114 
  if (ldv_undef_int() != 0) {
    #line 116 
    res = external_allocated_data();
    #line 117 
    __VERIFIER_assume(res != (void *)0);
    #line 118 
    return res;
  }
  else 
       #line 121 
       return (void *)0;
}

#line 124  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc_unknown_size(void)
{
  #line 126 
  void *res;
  #line 128 
  if (ldv_undef_int() != 0) {
    #line 130 
    res = external_allocated_data();
    #line 131 
    memset(res,0,8UL);
    #line 132 
    __VERIFIER_assume(res != (void *)0);
    #line 133 
    return res;
  }
  else 
       #line 136 
       return (void *)0;
}

#line 139  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc_unknown_size(void)
{
  #line 141 
  return ldv_reference_calloc_unknown_size();
}

#line 144  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size)
{
  #line 146 
  void *res;
  #line 149 
  res = external_allocated_data();
  #line 150 
  __VERIFIER_assume(res != (void *)0);
  #line 152 
  return res;
}

#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc(size_t size)
{
  #line 25 
  void *res;
  #line 26 
  res = ldv_reference_malloc(size);
  #line 27 
  if (res != (void *)0) {
    #line 28 
    int tmp_0;
    #line 28 
    if (ldv_is_err(res)) 
                         #line 28 
                         tmp_0 = 0; else 
                                         #line 28 
                                         tmp_0 = 1;
    #line 28 
    __VERIFIER_assume(tmp_0);
  }
  #line 29 
  return res;
}

#line 32  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc(size_t nmemb, size_t size)
{
  #line 34 
  void *res;
  #line 35 
  res = ldv_reference_calloc(nmemb,size);
  #line 36 
  if (res != (void *)0) {
    #line 37 
    int tmp_0;
    #line 37 
    if (ldv_is_err(res)) 
                         #line 37 
                         tmp_0 = 0; else 
                                         #line 37 
                                         tmp_0 = 1;
    #line 37 
    __VERIFIER_assume(tmp_0);
  }
  #line 38 
  return res;
}

#line 41  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc(size_t size)
{
  #line 43 
  void *res;
  #line 44 
  res = ldv_reference_zalloc(size);
  #line 45 
  if (res != (void *)0) {
    #line 46 
    int tmp_0;
    #line 46 
    if (ldv_is_err(res)) 
                         #line 46 
                         tmp_0 = 0; else 
                                         #line 46 
                                         tmp_0 = 1;
    #line 46 
    __VERIFIER_assume(tmp_0);
  }
  #line 47 
  return res;
}

#line 50  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void ldv_free(void *s)
{
  #line 52 
  ldv_reference_free(s);
  #line 53 
  return;
}

#line 55  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc(size_t size)
{
  #line 57 
  void *res;
  #line 59 
  int tmp_0;
  #line 58 
  res = ldv_reference_xmalloc(size);
  #line 59 
  if (ldv_is_err(res)) 
                       #line 59 
                       tmp_0 = 0; else 
                                       #line 59 
                                       tmp_0 = 1;
  #line 59 
  __VERIFIER_assume(tmp_0);
  #line 60 
  return res;
}

#line 63  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xcalloc(size_t nmemb, size_t size)
{
  #line 65 
  void *res;
  #line 67 
  int tmp_0;
  #line 66 
  res = ldv_reference_xcalloc(nmemb,size);
  #line 67 
  if (ldv_is_err(res)) 
                       #line 67 
                       tmp_0 = 0; else 
                                       #line 67 
                                       tmp_0 = 1;
  #line 67 
  __VERIFIER_assume(tmp_0);
  #line 68 
  return res;
}

#line 71  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xzalloc(size_t size)
{
  #line 73 
  void *res;
  #line 75 
  int tmp_0;
  #line 74 
  res = ldv_reference_xzalloc(size);
  #line 75 
  if (ldv_is_err(res)) 
                       #line 75 
                       tmp_0 = 0; else 
                                       #line 75 
                                       tmp_0 = 1;
  #line 75 
  __VERIFIER_assume(tmp_0);
  #line 76 
  return res;
}

#line 79  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc_unknown_size(void)
{
  #line 81 
  void *res;
  #line 82 
  res = ldv_reference_malloc_unknown_size();
  #line 83 
  if (res != (void *)0) {
    #line 84 
    int tmp_0;
    #line 84 
    if (ldv_is_err(res)) 
                         #line 84 
                         tmp_0 = 0; else 
                                         #line 84 
                                         tmp_0 = 1;
    #line 84 
    __VERIFIER_assume(tmp_0);
  }
  #line 85 
  return res;
}

#line 88  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc_unknown_size(void)
{
  #line 90 
  void *res;
  #line 91 
  res = ldv_reference_calloc_unknown_size();
  #line 92 
  if (res != (void *)0) {
    #line 93 
    int tmp_0;
    #line 93 
    if (ldv_is_err(res)) 
                         #line 93 
                         tmp_0 = 0; else 
                                         #line 93 
                                         tmp_0 = 1;
    #line 93 
    __VERIFIER_assume(tmp_0);
  }
  #line 94 
  return res;
}

#line 97  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc_unknown_size(void)
{
  #line 99 
  void *res;
  #line 100 
  res = ldv_reference_zalloc_unknown_size();
  #line 101 
  if (res != (void *)0) {
    #line 102 
    int tmp_0;
    #line 102 
    if (ldv_is_err(res)) 
                         #line 102 
                         tmp_0 = 0; else 
                                         #line 102 
                                         tmp_0 = 1;
    #line 102 
    __VERIFIER_assume(tmp_0);
  }
  #line 103 
  return res;
}

#line 106  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc_unknown_size(size_t size)
{
  #line 108 
  void *res;
  #line 110 
  int tmp_0;
  #line 109 
  res = ldv_reference_xmalloc_unknown_size(size);
  #line 110 
  if (ldv_is_err(res)) 
                       #line 110 
                       tmp_0 = 0; else 
                                       #line 110 
                                       tmp_0 = 1;
  #line 110 
  __VERIFIER_assume(tmp_0);
  #line 111 
  return res;
}

/* compiler builtin: 
   long __builtin_expect(long exp, long c);   */
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/common.h"
#line 22 
void __VERIFIER_error(void);
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/common.h"
long __builtin_expect(long exp, long c)
{
  #line 26 
  return exp;
}

#line 35  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/gcc.c"
void __builtin_trap(void)
{
  #line 37 
  __VERIFIER_error();
  #line 38 
  return;
}

#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 53  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
long ldv_undef_long(void);
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 61  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned int ldv_undef_uint(void);
#line 26  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 77  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long ldv_undef_ulong(void);
#line 27  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 85  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long long ldv_undef_ulonglong(void);
#line 28  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 69  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr(void);
#line 37  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 111  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_nonnegative(void);
#line 43  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 129  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr_non_null(void);
#line 54  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 139  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int __ldv_undef_int_range(int begin, int end);
#line 56  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 151  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int __ldv_undef_int_range2(int begin, int end);
#line 29 
#line 29 
int __VERIFIER_nondet_int(void);
#line 31 
#line 31 
long __VERIFIER_nondet_long(void);
#line 38 
#line 38 
unsigned int __VERIFIER_nondet_uint(void);
#line 41 
#line 41 
unsigned long __VERIFIER_nondet_ulong(void);
#line 42 
#line 42 
unsigned long long __VERIFIER_nondet_ulonglong(void);
#line 43 
#line 43 
void *__VERIFIER_nondet_pointer(void);
#line 45  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int(void)
{
  #line 48 
  int undef_int = __VERIFIER_nondet_int();
  #line 50 
  return undef_int;
}

#line 53  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
long ldv_undef_long(void)
{
  #line 56 
  long undef_long = __VERIFIER_nondet_long();
  #line 58 
  return undef_long;
}

#line 61  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned int ldv_undef_uint(void)
{
  #line 64 
  unsigned int undef_uint = __VERIFIER_nondet_uint();
  #line 66 
  return undef_uint;
}

#line 69  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr(void)
{
  #line 72 
  void *undef_ptr = __VERIFIER_nondet_pointer();
  #line 74 
  return undef_ptr;
}

#line 77  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long ldv_undef_ulong(void)
{
  #line 80 
  unsigned long undef_ulong = __VERIFIER_nondet_ulong();
  #line 82 
  return undef_ulong;
}

#line 85  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long long ldv_undef_ulonglong(void)
{
  #line 88 
  unsigned long long undef_ulonglong = __VERIFIER_nondet_ulonglong();
  #line 90 
  return undef_ulonglong;
}

#line 93  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_positive(void)
{
  #line 95 
  int ret = ldv_undef_int();
  #line 97 
  __VERIFIER_assume(ret > 0);
  #line 99 
  return ret;
}

#line 102  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_negative(void)
{
  #line 104 
  int ret = ldv_undef_int();
  #line 106 
  __VERIFIER_assume(ret < 0);
  #line 108 
  return ret;
}

#line 111  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_nonnegative(void)
{
  #line 113 
  int ret = ldv_undef_int();
  #line 115 
  __VERIFIER_assume(ret >= 0);
  #line 117 
  return ret;
}

#line 120  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_nonpositive(void)
{
  #line 122 
  int ret = ldv_undef_int();
  #line 124 
  __VERIFIER_assume(ret <= 0);
  #line 126 
  return ret;
}

#line 129  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr_non_null(void)
{
  #line 131 
  void *ret = ldv_undef_ptr();
  #line 133 
  __VERIFIER_assume(ret != (void *)0);
  #line 135 
  return ret;
}

#line 139  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int __ldv_undef_int_range(int begin, int end)
{
  #line 141 
  int ret;
  #line 143 
  ret = ldv_undef_int();
  #line 144 
  __VERIFIER_assume(ret >= begin);
  #line 145 
  __VERIFIER_assume(ret <= end);
  #line 147 
  return ret;
}

#line 151  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int __ldv_undef_int_range2(int begin, int end)
{
  #line 153 
  int ret;
  #line 155 
  ret = begin;
  #line 155 
  while (ret < end) {
    #line 156 
    if (ldv_undef_int() != 0) 
                              #line 157 
                              break;
    #line 155 
    ret ++;
  }
  #line 159 
  return ret;
}

#line 62  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 62 
void ldv_initialize(void);
#line 97 
#line 97 
void ldv_failed_register_netdev(void);
#line 123 
#line 123 
void ldv_pre_probe(void);
#line 35  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/thread.h"
#line 35 
int pthread_create(pthread_t *, pthread_attr_t *, void *(*)(void *), void *);
#line 39 
#line 39 
int pthread_join(pthread_t, void **);
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/err.h"
__inline static void *ERR_PTR(long error)
{
  #line 26 
  return (void *)error;
}

#line 84  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/emg/0/environment_model.c"
#line 180 
void emg_dispatch_deregister_14(struct net_device *arg0);
#line 85 
#line 146 
void emg_dispatch_deregister_8(struct platform_driver *arg0);
#line 86 
#line 137 
void emg_dispatch_irq_deregister_6(int arg0);
#line 87 
#line 166 
void emg_dispatch_irq_register_12(int arg0, enum irqreturn (*arg1)(int , void *), enum irqreturn (*arg2)(int , void *), void *arg3);
#line 88 
#line 155 
void emg_dispatch_register_11(struct net_device *arg0);
#line 89 
#line 115 
void emg_dispatch_register_2(struct platform_driver *arg0);
#line 90 
#line 126 
void emg_dispatch_register_5(struct file_operations *arg0);
#line 91 
#line 1230 
void *emg_entry_point_insmod(void *arg0);
#line 92 
#line 189 
void *emg_file_operations_character_driver_scenario_fjes_dbg_status_fops(void *arg0);
#line 95 
#line 366 
void *emg_interrupt_interrupt_scenario_fjes_intr(void *arg0);
#line 96 
#line 429 
void *emg_net_random_allocationless_scenario_fjes_get_drvinfo(void *arg0);
#line 98 
#line 682 
void *emg_platform_platform_instance_fjes_driver(void *arg0);
#line 105 
#line 1259 
int main(void);
#line 108  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/emg/0/environment_model.c"
pthread_t emg_thread_15;
#line 109  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/emg/0/environment_model.c"
pthread_t emg_thread_16;
#line 110  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/emg/0/environment_model.c"
pthread_t emg_thread_17;
#line 111  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/emg/0/environment_model.c"
pthread_t emg_thread_18;
#line 115  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/emg/0/environment_model.c"
void emg_dispatch_register_2(struct platform_driver *arg0)
{
  #line 116 
  int ret;
  #line 117 
  struct emg_struct_platform_instance_fjes_driver_18 *cf_arg_18;
  #line 118 
  cf_arg_18 = (struct emg_struct_platform_instance_fjes_driver_18 *)ldv_xmalloc(16UL);
  #line 119 
  cf_arg_18->arg0 = arg0;
  #line 120 
  ret = pthread_create(& emg_thread_18,(pthread_attr_t *)0,& emg_platform_platform_instance_fjes_driver,(void *)cf_arg_18);
  #line 121 
  __VERIFIER_assume(ret == 0);
  #line 122 
  return;
}

#line 126  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/emg/0/environment_model.c"
void emg_dispatch_register_5(struct file_operations *arg0)
{
  #line 127 
  int ret;
  #line 128 
  struct emg_struct_character_driver_scenario_fjes_dbg_status_fops_15 *cf_arg_15;
  #line 129 
  cf_arg_15 = (struct emg_struct_character_driver_scenario_fjes_dbg_status_fops_15 *)ldv_xmalloc(16UL);
  #line 130 
  cf_arg_15->arg0 = arg0;
  #line 131 
  ret = pthread_create(& emg_thread_15,(pthread_attr_t *)0,& emg_file_operations_character_driver_scenario_fjes_dbg_status_fops,(void *)cf_arg_15);
  #line 132 
  __VERIFIER_assume(ret == 0);
  #line 133 
  return;
}

#line 137  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/emg/0/environment_model.c"
void emg_dispatch_irq_deregister_6(int arg0)
{
  #line 138 
  int ret;
  #line 139 
  struct emg_struct_free_irq_6 *cf_arg_16;
  #line 140 
  ret = pthread_join(emg_thread_16,(void **)0);
  #line 141 
  __VERIFIER_assume(ret == 0);
  #line 142 
  return;
}

#line 146  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/emg/0/environment_model.c"
void emg_dispatch_deregister_8(struct platform_driver *arg0)
{
  #line 147 
  int ret;
  #line 148 
  struct emg_struct_platform_instance_fjes_driver_18 *cf_arg_18;
  #line 149 
  ret = pthread_join(emg_thread_18,(void **)0);
  #line 150 
  __VERIFIER_assume(ret == 0);
  #line 151 
  return;
}

#line 155  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/emg/0/environment_model.c"
void emg_dispatch_register_11(struct net_device *arg0)
{
  #line 156 
  int ret;
  #line 157 
  struct emg_struct_random_allocationless_scenario_fjes_get_drvinfo_17 *cf_arg_17;
  #line 158 
  cf_arg_17 = (struct emg_struct_random_allocationless_scenario_fjes_get_drvinfo_17 *)ldv_xmalloc(16UL);
  #line 159 
  cf_arg_17->arg0 = arg0;
  #line 160 
  ret = pthread_create(& emg_thread_17,(pthread_attr_t *)0,& emg_net_random_allocationless_scenario_fjes_get_drvinfo,(void *)cf_arg_17);
  #line 161 
  __VERIFIER_assume(ret == 0);
  #line 162 
  return;
}

#line 166  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/emg/0/environment_model.c"
void emg_dispatch_irq_register_12(int arg0, enum irqreturn (*arg1)(int , void *), enum irqreturn (*arg2)(int , void *), void *arg3)
{
  #line 167 
  int ret;
  #line 168 
  struct emg_struct_interrupt_scenario_fjes_intr_16 *cf_arg_16;
  #line 169 
  cf_arg_16 = (struct emg_struct_interrupt_scenario_fjes_intr_16 *)ldv_xmalloc(40UL);
  #line 170 
  cf_arg_16->arg0 = arg0;
  #line 171 
  cf_arg_16->arg1 = arg1;
  #line 172 
  cf_arg_16->arg2 = arg2;
  #line 173 
  cf_arg_16->arg3 = arg3;
  #line 174 
  ret = pthread_create(& emg_thread_16,(pthread_attr_t *)0,& emg_interrupt_interrupt_scenario_fjes_intr,(void *)cf_arg_16);
  #line 175 
  __VERIFIER_assume(ret == 0);
  #line 176 
  return;
}

#line 180  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/emg/0/environment_model.c"
void emg_dispatch_deregister_14(struct net_device *arg0)
{
  #line 181 
  int ret;
  #line 182 
  struct emg_struct_random_allocationless_scenario_fjes_get_drvinfo_17 *cf_arg_17;
  #line 183 
  ret = pthread_join(emg_thread_17,(void **)0);
  #line 184 
  __VERIFIER_assume(ret == 0);
  #line 185 
  return;
}

#line 189  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/emg/0/environment_model.c"
void *emg_file_operations_character_driver_scenario_fjes_dbg_status_fops(void *arg0)
{
  #line 192 
  struct file_operations *emg_15_container;
  #line 193 
  long long emg_15_emg_param_1_0;
  #line 194 
  char *emg_15_emg_param_1_2;
  #line 195 
  char *emg_15_emg_param_1_4;
  #line 196 
  int emg_15_emg_param_2_1;
  #line 197 
  long long *emg_15_emg_param_3_3;
  #line 198 
  long long *emg_15_emg_param_3_5;
  #line 199 
  struct file *emg_15_resource_0;
  #line 200 
  struct inode *emg_15_resource_1;
  #line 201 
  int emg_15_ret;
  #line 202 
  unsigned long emg_15_size_cnt;
  #line 203 
  int emg_repeat_cnt_main_15_1 = 1;
  #line 204 
  int emg_repeat_cnt_call_15 = 1;
  #line 205 
  int emg_repeat_cnt_main_15_0 = 1;
  #line 207 
  struct emg_struct_character_driver_scenario_fjes_dbg_status_fops_15 *data = (struct emg_struct_character_driver_scenario_fjes_dbg_status_fops_15 *)arg0;
  #line 211 
  emg_15_ret = ldv_undef_int();
  #line 212 
  emg_15_container = emg_alias_fjes_dbg_status_fops;
  #line 213 
  emg_15_ret = ldv_undef_int();
  #line 215 
  __VERIFIER_assume(data->arg0 == emg_alias_fjes_dbg_status_fops);
  #line 217 
  if (data != (struct emg_struct_character_driver_scenario_fjes_dbg_status_fops_15 *)0) {
    #line 218 
    emg_15_container = data->arg0;
    #line 219 
    ldv_free((void *)data);
  }
  #line 224 
  emg_15_resource_0 = (struct file *)ldv_xmalloc(520UL);
  #line 225 
  emg_15_size_cnt = (unsigned long)ldv_undef_int();
  #line 229 
  goto emg_main_15;
  #line 233 
  return (void *)0;
  #line 236 
  emg_call_15: 
               #line 236 
  ;
  #line 237 
  if (ldv_undef_int() != 0) {
    #line 238 
    switch (ldv_undef_int()) {
      #line 239 
      case 0: 
              #line 239 
      ;
      #line 241 
      emg_15_emg_param_1_2 = (char *)ldv_xmalloc_unknown_size(0UL);
      #line 241 
      emg_15_emg_param_1_2 = emg_15_emg_param_1_2;
      #line 242 
      emg_15_emg_param_3_3 = (long long *)ldv_xmalloc_unknown_size(0UL);
      #line 242 
      emg_15_emg_param_3_3 = emg_15_emg_param_3_3;
      #line 246 
      seq_read(emg_15_resource_0,emg_15_emg_param_1_2,emg_15_size_cnt,emg_15_emg_param_3_3);
      #line 250 
      ldv_free((void *)emg_15_emg_param_1_2);
      #line 251 
      ldv_free((void *)emg_15_emg_param_3_3);
      #line 253 
      break;
      #line 255 
      case 1: 
              #line 255 
      ;
      #line 257 
      seq_lseek(emg_15_resource_0,emg_15_emg_param_1_0,emg_15_emg_param_2_1);
      #line 259 
      break;
      #line 261 
      case 2: 
              #line 261 
      ;
      #line 268 
      __VERIFIER_assume(emg_15_size_cnt <= 2147479552UL);
      #line 269 
      emg_15_emg_param_1_4 = (char *)ldv_xmalloc_unknown_size(0UL);
      #line 269 
      emg_15_emg_param_1_4 = emg_15_emg_param_1_4;
      #line 270 
      emg_15_emg_param_3_5 = (long long *)ldv_xmalloc_unknown_size(0UL);
      #line 270 
      emg_15_emg_param_3_5 = emg_15_emg_param_3_5;
      #line 274 
      if (emg_15_container->write != (ssize_t (*)(struct file *, char *, size_t , loff_t *))0) 
        #line 275 
        (*(emg_15_container->write))(emg_15_resource_0,emg_15_emg_param_1_4,emg_15_size_cnt,emg_15_emg_param_3_5);
      #line 280 
      ldv_free((void *)emg_15_emg_param_1_4);
      #line 281 
      ldv_free((void *)emg_15_emg_param_3_5);
      #line 283 
      break;
      #line 285 
      default: 
               #line 285 
      ;
      #line 285 
      __VERIFIER_assume(0);
    }
    #line 288 
    if (emg_repeat_cnt_call_15 > 0) {
      #line 289 
      emg_repeat_cnt_call_15 --;
      #line 291 
      goto emg_call_15;
    }
    else 
         #line 293 
         __VERIFIER_assume(0);
  }
  else {
    #line 299 
    (*emg_alias_single_release)(emg_15_resource_1,emg_15_resource_0);
    #line 302 
    if (emg_repeat_cnt_main_15_0 > 0) {
      #line 303 
      emg_repeat_cnt_main_15_0 --;
      #line 305 
      goto emg_main_15;
    }
    else 
         #line 307 
         __VERIFIER_assume(0);
  }
  #line 313 
  return (void *)0;
  #line 316 
  emg_main_15: 
               #line 316 
  ;
  #line 317 
  if (ldv_undef_int() != 0) {
    #line 319 
    emg_15_ret = emg_wrapper_fjes_dbg_status_open(emg_15_resource_1,emg_15_resource_0);
    #line 324 
    emg_15_ret = ldv_filter_err_code(emg_15_ret);
    #line 327 
    if (ldv_undef_int() != 0) {
      #line 329 
      __VERIFIER_assume(emg_15_ret == 0);
      #line 333 
      goto emg_call_15;
    }
    else {
      #line 338 
      __VERIFIER_assume(emg_15_ret != 0);
      #line 341 
      if (emg_repeat_cnt_main_15_1 > 0) {
        #line 342 
        emg_repeat_cnt_main_15_1 --;
        #line 344 
        goto emg_main_15;
      }
      else 
           #line 346 
           __VERIFIER_assume(0);
    }
  }
  else 
       #line 353 
       ldv_free((void *)emg_15_resource_0);
  #line 361 
  return (void *)0;
}

#line 366  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/emg/0/environment_model.c"
void *emg_interrupt_interrupt_scenario_fjes_intr(void *arg0)
{
  #line 369 
  enum irqreturn (*emg_16_callback)(int , void *);
  #line 370 
  void *emg_16_data;
  #line 371 
  int emg_16_line;
  #line 372 
  enum irqreturn emg_16_ret_val;
  #line 373 
  enum irqreturn (*emg_16_thread)(int , void *);
  #line 375 
  struct emg_struct_interrupt_scenario_fjes_intr_16 *data = (struct emg_struct_interrupt_scenario_fjes_intr_16 *)arg0;
  #line 378 
  emg_16_callback = & emg_wrapper_fjes_intr;
  #line 381 
  if (data != (struct emg_struct_interrupt_scenario_fjes_intr_16 *)0) {
    #line 382 
    emg_16_line = data->arg0;
    #line 383 
    emg_16_callback = data->arg1;
    #line 384 
    emg_16_thread = data->arg2;
    #line 385 
    emg_16_data = data->arg3;
    #line 386 
    ldv_free((void *)data);
  }
  #line 392 
  ldv_switch_to_interrupt_context();
  #line 396 
  emg_16_ret_val = emg_wrapper_fjes_intr(emg_16_line,emg_16_data);
  #line 401 
  ldv_switch_to_process_context();
  #line 404 
  if (ldv_undef_int() != 0) {
    #line 406 
    __VERIFIER_assume(emg_16_ret_val == (unsigned int)IRQ_WAKE_THREAD);
    #line 410 
    if (emg_16_thread != (enum irqreturn (*)(int , void *))0) 
                                                              #line 411 
                                                              (*emg_16_thread)(emg_16_line,emg_16_data);
  }
  else 
       #line 416 
       __VERIFIER_assume(emg_16_ret_val != (unsigned int)IRQ_WAKE_THREAD);
  #line 424 
  return (void *)0;
}

#line 429  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/emg/0/environment_model.c"
void *emg_net_random_allocationless_scenario_fjes_get_drvinfo(void *arg0)
{
  #line 432 
  struct net_device *emg_17_container;
  #line 433 
  struct sk_buff *emg_17_emg_param_0_14;
  #line 434 
  struct ethtool_drvinfo *emg_17_emg_param_1_0;
  #line 435 
  struct ethtool_dump *emg_17_emg_param_1_1;
  #line 436 
  unsigned int emg_17_emg_param_1_10;
  #line 437 
  int emg_17_emg_param_1_12;
  #line 438 
  struct rtnl_link_stats64 *emg_17_emg_param_1_13;
  #line 439 
  unsigned short emg_17_emg_param_1_15;
  #line 440 
  unsigned short emg_17_emg_param_1_17;
  #line 441 
  struct ethtool_dump *emg_17_emg_param_1_19;
  #line 442 
  struct ethtool_dump *emg_17_emg_param_1_3;
  #line 443 
  struct ethtool_stats *emg_17_emg_param_1_4;
  #line 444 
  struct ethtool_link_ksettings *emg_17_emg_param_1_6;
  #line 445 
  struct ethtool_regs *emg_17_emg_param_1_7;
  #line 446 
  int emg_17_emg_param_1_9;
  #line 447 
  unsigned char *emg_17_emg_param_2_11;
  #line 448 
  unsigned short emg_17_emg_param_2_16;
  #line 449 
  unsigned short emg_17_emg_param_2_18;
  #line 450 
  void *emg_17_emg_param_2_2;
  #line 451 
  unsigned long long *emg_17_emg_param_2_5;
  #line 452 
  void *emg_17_emg_param_2_8;
  #line 453 
  int emg_repeat_cnt_call_17 = 1;
  #line 455 
  struct emg_struct_random_allocationless_scenario_fjes_get_drvinfo_17 *data = (struct emg_struct_random_allocationless_scenario_fjes_get_drvinfo_17 *)arg0;
  #line 460 
  if (data != (struct emg_struct_random_allocationless_scenario_fjes_get_drvinfo_17 *)0) {
    #line 461 
    emg_17_container = data->arg0;
    #line 462 
    ldv_free((void *)data);
  }
  #line 467 
  goto emg_call_17;
  #line 471 
  return (void *)0;
  #line 474 
  emg_call_17: 
               #line 474 
  ;
  #line 475 
  switch (ldv_undef_int()) {
    #line 476 
    case 0: 
            #line 476 
    ;
    #line 478 
    emg_17_emg_param_1_19 = (struct ethtool_dump *)ldv_xmalloc_unknown_size(0UL);
    #line 478 
    emg_17_emg_param_1_19 = emg_17_emg_param_1_19;
    #line 482 
    emg_wrapper_fjes_set_dump(emg_17_container,emg_17_emg_param_1_19);
    #line 486 
    ldv_free((void *)emg_17_emg_param_1_19);
    #line 488 
    break;
    #line 490 
    case 1: 
            #line 490 
    ;
    #line 492 
    emg_wrapper_fjes_vlan_rx_kill_vid(emg_17_container,(unsigned short)((int)emg_17_emg_param_1_17),(unsigned short)((int)emg_17_emg_param_2_18));
    #line 494 
    break;
    #line 496 
    case 2: 
            #line 496 
    ;
    #line 498 
    emg_wrapper_fjes_vlan_rx_add_vid(emg_17_container,(unsigned short)((int)emg_17_emg_param_1_15),(unsigned short)((int)emg_17_emg_param_2_16));
    #line 500 
    break;
    #line 502 
    case 3: 
            #line 502 
    ;
    #line 504 
    emg_wrapper_fjes_tx_retry(emg_17_container);
    #line 506 
    break;
    #line 508 
    case 4: 
            #line 508 
    ;
    #line 510 
    emg_17_emg_param_0_14 = (struct sk_buff *)ldv_xmalloc_unknown_size(0UL);
    #line 510 
    emg_17_emg_param_0_14 = emg_17_emg_param_0_14;
    #line 514 
    emg_wrapper_fjes_xmit_frame(emg_17_emg_param_0_14,emg_17_container);
    #line 518 
    ldv_free((void *)emg_17_emg_param_0_14);
    #line 520 
    break;
    #line 522 
    case 5: 
            #line 522 
    ;
    #line 524 
    emg_17_emg_param_1_13 = (struct rtnl_link_stats64 *)ldv_xmalloc_unknown_size(0UL);
    #line 524 
    emg_17_emg_param_1_13 = emg_17_emg_param_1_13;
    #line 528 
    emg_wrapper_fjes_get_stats64(emg_17_container,emg_17_emg_param_1_13);
    #line 532 
    ldv_free((void *)emg_17_emg_param_1_13);
    #line 534 
    break;
    #line 536 
    case 6: 
            #line 536 
    ;
    #line 538 
    emg_wrapper_fjes_change_mtu(emg_17_container,emg_17_emg_param_1_12);
    #line 540 
    break;
    #line 542 
    case 7: 
            #line 542 
    ;
    #line 544 
    emg_17_emg_param_2_11 = (unsigned char *)ldv_xmalloc_unknown_size(0UL);
    #line 544 
    emg_17_emg_param_2_11 = emg_17_emg_param_2_11;
    #line 548 
    emg_wrapper_fjes_get_strings(emg_17_container,emg_17_emg_param_1_10,emg_17_emg_param_2_11);
    #line 552 
    ldv_free((void *)emg_17_emg_param_2_11);
    #line 554 
    break;
    #line 556 
    case 8: 
            #line 556 
    ;
    #line 558 
    emg_wrapper_fjes_get_sset_count(emg_17_container,emg_17_emg_param_1_9);
    #line 560 
    break;
    #line 562 
    case 9: 
            #line 562 
    ;
    #line 564 
    emg_wrapper_fjes_get_regs_len(emg_17_container);
    #line 566 
    break;
    #line 568 
    case 10: 
             #line 568 
    ;
    #line 570 
    emg_17_emg_param_1_7 = (struct ethtool_regs *)ldv_xmalloc_unknown_size(0UL);
    #line 570 
    emg_17_emg_param_1_7 = emg_17_emg_param_1_7;
    #line 571 
    emg_17_emg_param_2_8 = ldv_xmalloc_unknown_size(0UL);
    #line 571 
    emg_17_emg_param_2_8 = emg_17_emg_param_2_8;
    #line 575 
    emg_wrapper_fjes_get_regs(emg_17_container,emg_17_emg_param_1_7,emg_17_emg_param_2_8);
    #line 579 
    ldv_free((void *)emg_17_emg_param_1_7);
    #line 580 
    ldv_free(emg_17_emg_param_2_8);
    #line 582 
    break;
    #line 584 
    case 11: 
             #line 584 
    ;
    #line 586 
    emg_17_emg_param_1_6 = (struct ethtool_link_ksettings *)ldv_xmalloc_unknown_size(0UL);
    #line 586 
    emg_17_emg_param_1_6 = emg_17_emg_param_1_6;
    #line 590 
    emg_wrapper_fjes_get_link_ksettings(emg_17_container,emg_17_emg_param_1_6);
    #line 594 
    ldv_free((void *)emg_17_emg_param_1_6);
    #line 596 
    break;
    #line 598 
    case 12: 
             #line 598 
    ;
    #line 600 
    emg_17_emg_param_1_4 = (struct ethtool_stats *)ldv_xmalloc_unknown_size(0UL);
    #line 600 
    emg_17_emg_param_1_4 = emg_17_emg_param_1_4;
    #line 601 
    emg_17_emg_param_2_5 = (unsigned long long *)ldv_xmalloc_unknown_size(0UL);
    #line 601 
    emg_17_emg_param_2_5 = emg_17_emg_param_2_5;
    #line 605 
    emg_wrapper_fjes_get_ethtool_stats(emg_17_container,emg_17_emg_param_1_4,emg_17_emg_param_2_5);
    #line 609 
    ldv_free((void *)emg_17_emg_param_1_4);
    #line 610 
    ldv_free((void *)emg_17_emg_param_2_5);
    #line 612 
    break;
    #line 614 
    case 13: 
             #line 614 
    ;
    #line 616 
    emg_17_emg_param_1_3 = (struct ethtool_dump *)ldv_xmalloc_unknown_size(0UL);
    #line 616 
    emg_17_emg_param_1_3 = emg_17_emg_param_1_3;
    #line 620 
    emg_wrapper_fjes_get_dump_flag(emg_17_container,emg_17_emg_param_1_3);
    #line 624 
    ldv_free((void *)emg_17_emg_param_1_3);
    #line 626 
    break;
    #line 628 
    case 14: 
             #line 628 
    ;
    #line 630 
    emg_17_emg_param_1_1 = (struct ethtool_dump *)ldv_xmalloc_unknown_size(0UL);
    #line 630 
    emg_17_emg_param_1_1 = emg_17_emg_param_1_1;
    #line 631 
    emg_17_emg_param_2_2 = ldv_xmalloc_unknown_size(0UL);
    #line 631 
    emg_17_emg_param_2_2 = emg_17_emg_param_2_2;
    #line 635 
    emg_wrapper_fjes_get_dump_data(emg_17_container,emg_17_emg_param_1_1,emg_17_emg_param_2_2);
    #line 639 
    ldv_free((void *)emg_17_emg_param_1_1);
    #line 640 
    ldv_free(emg_17_emg_param_2_2);
    #line 642 
    break;
    #line 644 
    case 15: 
             #line 644 
    ;
    #line 646 
    emg_17_emg_param_1_0 = (struct ethtool_drvinfo *)ldv_xmalloc_unknown_size(0UL);
    #line 646 
    emg_17_emg_param_1_0 = emg_17_emg_param_1_0;
    #line 650 
    emg_wrapper_fjes_get_drvinfo(emg_17_container,emg_17_emg_param_1_0);
    #line 654 
    ldv_free((void *)emg_17_emg_param_1_0);
    #line 657 
    if (emg_repeat_cnt_call_17 > 0) {
      #line 658 
      emg_repeat_cnt_call_17 --;
      #line 660 
      goto emg_call_17;
    }
    else 
         #line 662 
         __VERIFIER_assume(0);
    #line 666 
    break;
    #line 668 
    case 16: 
             #line 668 
    ;
    #line 672 
    break;
    #line 674 
    default: 
             #line 674 
    ;
    #line 674 
    __VERIFIER_assume(0);
  }
  #line 677 
  return (void *)0;
}

#line 682  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/emg/0/environment_model.c"
void *emg_platform_platform_instance_fjes_driver(void *arg0)
{
  #line 685 
  struct platform_driver *emg_18_container;
  #line 686 
  struct pm_message *emg_18_emg_param_1_0;
  #line 687 
  int emg_18_probed;
  #line 688 
  struct platform_device *emg_18_resource;
  #line 689 
  int emg_repeat_cnt_main_18_1 = 1;
  #line 690 
  int emg_repeat_cnt_main_18_0 = 1;
  #line 691 
  int emg_repeat_cnt_call_18 = 1;
  #line 693 
  struct emg_struct_platform_instance_fjes_driver_18 *data = (struct emg_struct_platform_instance_fjes_driver_18 *)arg0;
  #line 697 
  emg_18_probed = 1;
  #line 698 
  emg_18_container = emg_alias_fjes_driver;
  #line 699 
  emg_18_probed = 1;
  #line 701 
  __VERIFIER_assume(data->arg0 == emg_alias_fjes_driver);
  #line 703 
  if (data != (struct emg_struct_platform_instance_fjes_driver_18 *)0) {
    #line 704 
    emg_18_container = data->arg0;
    #line 705 
    ldv_free((void *)data);
  }
  #line 710 
  emg_18_resource = (struct platform_device *)ldv_xmalloc(1632UL);
  #line 711 
  emg_18_resource->id_entry = emg_18_container->id_table;
  #line 712 
  emg_18_resource->dev.platform_data = ldv_xmalloc_unknown_size(0UL);
  #line 716 
  goto emg_main_18;
  #line 720 
  return (void *)0;
  #line 723 
  emg_call_18: 
               #line 723 
  ;
  #line 724 
  if (ldv_undef_int() != 0) {
    #line 725 
    switch (ldv_undef_int()) {
      #line 726 
      case 0: 
              #line 726 
      ;
      #line 728 
      emg_18_emg_param_1_0 = (struct pm_message *)ldv_xmalloc_unknown_size(0UL);
      #line 728 
      emg_18_emg_param_1_0 = emg_18_emg_param_1_0;
      #line 732 
      if (emg_18_container->suspend != (int (*)(struct platform_device *, pm_message_t ))0) 
        #line 733 
        (*(emg_18_container->suspend))(emg_18_resource,*emg_18_emg_param_1_0);
      #line 738 
      ldv_free((void *)emg_18_emg_param_1_0);
      #line 742 
      if (emg_18_container->resume != (int (*)(struct platform_device *))0) 
        #line 743 
        (*(emg_18_container->resume))(emg_18_resource);
      #line 746 
      break;
      #line 748 
      case 1: 
              #line 748 
      ;
      #line 756 
      break;
      #line 758 
      case 2: 
              #line 758 
      ;
      #line 761 
      break;
      #line 763 
      default: 
               #line 763 
      ;
      #line 763 
      __VERIFIER_assume(0);
    }
    #line 766 
    if (emg_repeat_cnt_call_18 > 0) {
      #line 767 
      emg_repeat_cnt_call_18 --;
      #line 769 
      goto emg_call_18;
    }
    else 
         #line 771 
         __VERIFIER_assume(0);
  }
  else {
    #line 777 
    if (emg_18_container->shutdown != (void (*)(struct platform_device *))0) 
      #line 778 
      (*(emg_18_container->shutdown))(emg_18_resource);
    #line 783 
    emg_wrapper_fjes_remove(emg_18_resource);
    #line 787 
    emg_18_probed = 1;
    #line 790 
    if (emg_repeat_cnt_main_18_1 > 0) {
      #line 791 
      emg_repeat_cnt_main_18_1 --;
      #line 793 
      goto emg_main_18;
    }
    else 
         #line 795 
         __VERIFIER_assume(0);
  }
  #line 801 
  return (void *)0;
  #line 804 
  emg_main_18: 
               #line 804 
  ;
  #line 805 
  if (ldv_undef_int() != 0) {
    #line 808 
    ldv_pre_probe();
    #line 812 
    emg_18_probed = emg_wrapper_fjes_probe(emg_18_resource);
    #line 817 
    emg_18_probed = ldv_post_probe(emg_18_probed);
    #line 820 
    if (ldv_undef_int() != 0) {
      #line 822 
      __VERIFIER_assume(emg_18_probed == 0);
      #line 826 
      goto emg_call_18;
    }
    else {
      #line 831 
      __VERIFIER_assume(emg_18_probed != 0);
      #line 834 
      if (emg_repeat_cnt_main_18_0 > 0) {
        #line 835 
        emg_repeat_cnt_main_18_0 --;
        #line 837 
        goto emg_main_18;
      }
      else 
           #line 839 
           __VERIFIER_assume(0);
    }
  }
  else 
       #line 846 
       ldv_free((void *)emg_18_resource);
  #line 854 
  return (void *)0;
}

#line 859  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/emg/0/environment_model.c"
int emg___platform_driver_register(struct platform_driver *arg0, struct module *arg1)
{
  #line 862 
  struct platform_driver *emg_2_platform_driver;
  #line 864 
  emg_2_platform_driver = emg_alias_fjes_driver;
  #line 865 
  if (ldv_undef_int() != 0) {
    #line 867 
    emg_2_platform_driver = arg0;
    #line 871 
    emg_dispatch_register_2(emg_2_platform_driver);
    #line 875 
    return 0;
  }
  else {
    #line 879 
    return ldv_undef_int_negative();
  }
}

#line 887  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/emg/0/environment_model.c"
struct net_device *emg_alloc_netdev_mqs(int arg0, char *arg1, unsigned char arg2, void (*arg3)(struct net_device *), unsigned int arg4, unsigned int arg5)
{
  #line 890 
  struct net_device *emg_3_netdev;
  #line 891 
  void (*emg_3_setup)(struct net_device *);
  #line 893 
  emg_3_setup = & emg_wrapper_fjes_netdev_setup;
  #line 894 
  if (ldv_undef_int() != 0) {
    #line 896 
    emg_3_netdev = (struct net_device *)ldv_xmalloc(3328UL);
    #line 897 
    emg_3_setup = arg3;
    #line 901 
    emg_wrapper_fjes_netdev_setup(emg_3_netdev);
    #line 905 
    return emg_3_netdev;
  }
  else 
       #line 909 
       return (struct net_device *)0;
}

#line 917  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/emg/0/environment_model.c"
struct dentry *emg_debugfs_create_dir(char *arg0, struct dentry *arg1)
{
  #line 920 
  struct dentry *emg_4_dentry;
  #line 921 
  struct inode *emg_4_inode;
  #line 923 
  if (ldv_undef_int() != 0) {
    #line 925 
    emg_4_dentry = (struct dentry *)ldv_xmalloc(320UL);
    #line 926 
    emg_4_inode = (struct inode *)ldv_xmalloc(1072UL);
    #line 927 
    emg_4_inode->i_mode = (unsigned short)16877U;
    #line 928 
    emg_4_dentry->d_parent = arg1;
    #line 929 
    emg_4_dentry->d_inode = emg_4_inode;
    #line 930 
    return emg_4_dentry;
  }
  else {
    #line 934 
    return (struct dentry *)ERR_PTR(-19L);
  }
}

#line 942  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/emg/0/environment_model.c"
struct dentry *emg_debugfs_create_file(char *arg0, unsigned short arg1, struct dentry *arg2, void *arg3, struct file_operations *arg4)
{
  #line 945 
  struct dentry *emg_5_dentry;
  #line 946 
  struct file_operations *emg_5_file_operations;
  #line 947 
  struct inode *emg_5_inode;
  #line 949 
  emg_5_file_operations = emg_alias_fjes_dbg_status_fops;
  #line 950 
  if (ldv_undef_int() != 0) {
    #line 952 
    emg_5_dentry = (struct dentry *)ldv_xmalloc(320UL);
    #line 953 
    emg_5_inode = (struct inode *)ldv_xmalloc(1072UL);
    #line 954 
    emg_5_inode->i_mode = arg1;
    #line 955 
    emg_5_dentry->d_parent = arg2;
    #line 956 
    emg_5_inode->i_private = arg3;
    #line 957 
    emg_5_file_operations = arg4;
    #line 958 
    emg_5_dentry->d_inode = emg_5_inode;
    #line 959 
    ldv_save_allocated_memory_to_list((void *)emg_5_dentry);
    #line 963 
    emg_dispatch_register_5(emg_5_file_operations);
    #line 967 
    return emg_5_dentry;
  }
  else {
    #line 971 
    return (struct dentry *)ERR_PTR(-19L);
  }
}

#line 979  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/emg/0/environment_model.c"
void *emg_free_irq(unsigned int arg0, void *arg1)
{
  #line 982 
  int emg_6_line;
  #line 985 
  emg_6_line = (int)arg0;
  #line 989 
  emg_dispatch_irq_deregister_6(emg_6_line);
  #line 990 
  ;
  #line 990 
  return (void *)0;
}

#line 996  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/emg/0/environment_model.c"
void emg_free_netdev(struct net_device *arg0)
{
  #line 999 
  struct net_device *emg_7_netdev;
  #line 1002 
  emg_7_netdev = arg0;
  #line 1003 
  ldv_free((void *)emg_7_netdev);
  #line 1006 
  return;
}

#line 1011  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/emg/0/environment_model.c"
void emg_platform_driver_unregister(struct platform_driver *arg0)
{
  #line 1014 
  struct platform_driver *emg_8_platform_driver;
  #line 1016 
  emg_8_platform_driver = emg_alias_fjes_driver;
  #line 1018 
  emg_8_platform_driver = arg0;
  #line 1022 
  emg_dispatch_deregister_8(emg_8_platform_driver);
  #line 1025 
  return;
}

#line 1030  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/emg/0/environment_model.c"
_Bool emg_queue_delayed_work(struct workqueue_struct *arg0, struct delayed_work *arg1, unsigned long arg2)
{
  #line 1033 
  struct delayed_work *emg_9_delayed_work;
  #line 1034 
  struct work_struct *emg_9_emg_param_0_0;
  #line 1036 
  if (ldv_undef_int() != 0) {
    #line 1038 
    emg_9_delayed_work = arg1;
    #line 1042 
    emg_9_emg_param_0_0 = (struct work_struct *)ldv_xmalloc_unknown_size(0UL);
    #line 1042 
    emg_9_emg_param_0_0 = emg_9_emg_param_0_0;
    #line 1046 
    if (emg_9_delayed_work->work.func != (void (*)(struct work_struct *))0) 
      #line 1047 
      (*(emg_9_delayed_work->work.func))(emg_9_emg_param_0_0);
    #line 1052 
    ldv_free((void *)emg_9_emg_param_0_0);
    #line 1056 
    return (_Bool)1;
  }
  else 
       #line 1060 
       return (_Bool)0;
}

#line 1068  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/emg/0/environment_model.c"
_Bool emg_queue_work(struct workqueue_struct *arg0, struct work_struct *arg1)
{
  #line 1071 
  struct work_struct *emg_10_work_struct;
  #line 1073 
  if (ldv_undef_int() != 0) {
    #line 1075 
    emg_10_work_struct = arg1;
    #line 1079 
    if (emg_10_work_struct->func != (void (*)(struct work_struct *))0) 
      #line 1080 
      (*(emg_10_work_struct->func))(emg_10_work_struct);
    #line 1085 
    return (_Bool)1;
  }
  else 
       #line 1089 
       return (_Bool)0;
}

#line 1097  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/emg/0/environment_model.c"
int emg_register_netdev(struct net_device *arg0)
{
  #line 1100 
  struct net_device *emg_11_netdev;
  #line 1101 
  int emg_11_ret;
  #line 1104 
  emg_11_ret = ldv_undef_int();
  #line 1105 
  emg_11_ret = ldv_undef_int();
  #line 1106 
  if (ldv_undef_int() != 0) {
    #line 1108 
    emg_11_netdev = arg0;
    #line 1112 
    emg_11_ret = emg_wrapper_fjes_open(emg_11_netdev);
    #line 1115 
    if (ldv_undef_int() != 0) {
      #line 1117 
      __VERIFIER_assume(emg_11_ret == 0);
      #line 1121 
      emg_dispatch_register_11(emg_11_netdev);
      #line 1125 
      return 0;
    }
    else {
      #line 1129 
      __VERIFIER_assume(emg_11_ret != 0);
      #line 1130 
      ldv_failed_register_netdev();
      #line 1131 
      return ldv_undef_int_negative();
    }
  }
  else {
    #line 1136 
    ldv_failed_register_netdev();
    #line 1137 
    return ldv_undef_int_negative();
  }
}

#line 1145  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/emg/0/environment_model.c"
int emg_request_irq(unsigned int arg0, enum irqreturn (*arg1)(int , void *), unsigned long arg2, char *arg3, void *arg4)
{
  #line 1148 
  enum irqreturn (*emg_12_callback)(int , void *);
  #line 1149 
  void *emg_12_data;
  #line 1150 
  int emg_12_line;
  #line 1151 
  enum irqreturn (*emg_12_thread)(int , void *);
  #line 1153 
  emg_12_callback = & emg_wrapper_fjes_intr;
  #line 1154 
  if (ldv_undef_int() != 0) {
    #line 1156 
    emg_12_line = (int)arg0;
    #line 1157 
    emg_12_callback = arg1;
    #line 1158 
    emg_12_thread = (enum irqreturn (*)(int , void *))0;
    #line 1159 
    emg_12_data = arg4;
    #line 1163 
    emg_dispatch_irq_register_12(emg_12_line,emg_12_callback,emg_12_thread,emg_12_data);
    #line 1167 
    return 0;
  }
  else {
    #line 1171 
    return ldv_undef_int_negative();
  }
}

#line 1179  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/emg/0/environment_model.c"
_Bool emg_schedule_work(struct work_struct *arg0)
{
  #line 1182 
  struct work_struct *emg_13_work_struct;
  #line 1184 
  if (ldv_undef_int() != 0) {
    #line 1186 
    emg_13_work_struct = arg0;
    #line 1190 
    if (emg_13_work_struct->func != (void (*)(struct work_struct *))0) 
      #line 1191 
      (*(emg_13_work_struct->func))(emg_13_work_struct);
    #line 1196 
    return (_Bool)1;
  }
  else 
       #line 1200 
       return (_Bool)0;
}

#line 1208  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/emg/0/environment_model.c"
void emg_unregister_netdev(struct net_device *arg0)
{
  #line 1211 
  struct net_device *emg_14_netdev;
  #line 1214 
  emg_14_netdev = arg0;
  #line 1218 
  emg_wrapper_fjes_close(emg_14_netdev);
  #line 1222 
  emg_dispatch_deregister_14(emg_14_netdev);
  #line 1225 
  return;
}

#line 1230  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/emg/0/environment_model.c"
void *emg_entry_point_insmod(void *arg0)
{
  #line 1233 
  int emg_1_ret;
  #line 1236 
  emg_1_ret = emg_fjes_init_module();
  #line 1237 
  emg_1_ret = ldv_post_init(emg_1_ret);
  #line 1240 
  if (ldv_undef_int() != 0) {
    #line 1242 
    __VERIFIER_assume(emg_1_ret == 0);
    #line 1246 
    emg_fjes_exit_module();
  }
  else 
       #line 1250 
       __VERIFIER_assume(emg_1_ret != 0);
  #line 1254 
  return (void *)0;
}

#line 1259  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/fjes/fjes.ko/concurrency safety/emg/0/environment_model.c"
int main(void)
{
  #line 1261 
  ldv_initialize();
  #line 1263 
  emg_entry_point_insmod((void *)0);
  #line 1265 
  return 0;
}

