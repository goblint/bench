/* Generated by Frama-C */
#line 106  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/compiler_types.h"
typedef signed char __s8;
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/int-ll64.h"
typedef unsigned char __u8;
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/int-ll64.h"
typedef short __s16;
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/int-ll64.h"
typedef unsigned short __u16;
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/int-ll64.h"
typedef int __s32;
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/int-ll64.h"
typedef unsigned int __u32;
#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/int-ll64.h"
typedef long long __s64;
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/int-ll64.h"
typedef unsigned long long __u64;
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/int-ll64.h"
typedef __s8 s8;
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/int-ll64.h"
typedef __u8 u8;
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/int-ll64.h"
typedef __s16 s16;
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/int-ll64.h"
typedef __u16 u16;
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/int-ll64.h"
typedef __s32 s32;
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/int-ll64.h"
typedef __u32 u32;
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/int-ll64.h"
typedef __s64 s64;
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/int-ll64.h"
typedef __u64 u64;
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/uapi/asm/posix_types_64.h"
typedef long __kernel_long_t;
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef unsigned long __kernel_ulong_t;
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_pid_t;
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_uid32_t;
#line 50  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_gid32_t;
#line 51  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef __kernel_ulong_t __kernel_size_t;
#line 73  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_ssize_t;
#line 88  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef long long __kernel_loff_t;
#line 91  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef long long __kernel_time64_t;
#line 92  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_clock_t;
#line 93  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_timer_t;
#line 94  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_clockid_t;
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef __u16 __le16;
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/types.h"
typedef __u16 __be16;
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/types.h"
typedef __u32 __le32;
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/types.h"
typedef __u32 __be32;
#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/types.h"
typedef __u64 __le64;
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/types.h"
typedef __u64 __be64;
#line 35  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/types.h"
typedef __u16 __sum16;
#line 37  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/types.h"
typedef __u32 __wsum;
#line 38  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/types.h"
typedef unsigned int __poll_t;
#line 53  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/types.h"
typedef u32 __kernel_dev_t;
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef __kernel_dev_t dev_t;
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef unsigned short umode_t;
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef __kernel_pid_t pid_t;
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef __kernel_clockid_t clockid_t;
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef _Bool bool;
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef __kernel_uid32_t uid_t;
#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef __kernel_gid32_t gid_t;
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef __kernel_loff_t loff_t;
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef __kernel_size_t size_t;
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef __kernel_ssize_t ssize_t;
#line 103  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef s32 int32_t;
#line 109  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef u32 uint32_t;
#line 115  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef u64 sector_t;
#line 131  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef u64 blkcnt_t;
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef u64 dma_addr_t;
#line 149  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef unsigned int gfp_t;
#line 154  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef unsigned int slab_flags_t;
#line 155  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef unsigned int fmode_t;
#line 156  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef u64 phys_addr_t;
#line 159  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef phys_addr_t resource_size_t;
#line 164  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef unsigned long irq_hw_number_t;
#line 170  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
struct __anonstruct_atomic_t_6 {
   int counter ;
};
#line 170  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef struct __anonstruct_atomic_t_6 atomic_t;
#line 174  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
struct __anonstruct_atomic64_t_7 {
   s64 counter ;
};
#line 174  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef struct __anonstruct_atomic64_t_7 atomic64_t;
#line 181  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
struct list_head {
   struct list_head *next ;
   struct list_head *prev ;
};
#line 185 
struct hlist_node;
#line 185  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
struct hlist_head {
   struct hlist_node *first ;
};
#line 189  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
struct hlist_node {
   struct hlist_node *next ;
   struct hlist_node **pprev ;
};
#line 219  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
struct callback_head {
   struct callback_head *next ;
   void (*func)(struct callback_head *) ;
} __attribute__((__aligned__(8)));
#line 14  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
struct task_struct;
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/export.h"
struct module;
#line 60  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/export.h"
struct kernel_symbol {
   int value_offset ;
   int name_offset ;
   int namespace_offset ;
};
#line 136  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/init.h"
typedef void (*ctor_fn_t)(void);
#line 139 
struct file_system_type;
#line 83  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/printk.h"
struct ctl_table;
#line 87  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jump_label.h"
struct jump_entry;
#line 87 
struct static_key_mod;
#line 87  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jump_label.h"
union __anonunion_8 {
   unsigned long type ;
   struct jump_entry *entries ;
   struct static_key_mod *next ;
};
#line 87  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jump_label.h"
struct static_key {
   atomic_t enabled ;
   union __anonunion_8 __anonCompField_static_key_4 ;
};
#line 122  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jump_label.h"
struct jump_entry {
   s32 code ;
   s32 target ;
   long key ;
};
#line 346  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jump_label.h"
struct static_key_true {
   struct static_key key ;
};
#line 350  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jump_label.h"
struct static_key_false {
   struct static_key key ;
};
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dynamic_debug.h"
union __anonunion_key_9 {
   struct static_key_true dd_key_true ;
   struct static_key_false dd_key_false ;
};
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dynamic_debug.h"
struct _ddebug {
   char *modname ;
   char *function ;
   char *filename ;
   char *format ;
   unsigned int lineno : 18 ;
   unsigned int flags : 8 ;
   union __anonunion_key_9 key ;
} __attribute__((__aligned__(8)));
#line 59 
struct device;
#line 65 
struct net_device;
#line 476  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/printk.h"
struct file_operations;
#line 87  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/div64.h"
struct completion;
#line 88 
struct pt_regs;
#line 66  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
union __anonunion___u_13 {
   struct list_head *__val ;
   char __c[1U] ;
};
#line 106  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
union __anonunion___u_15 {
   struct list_head *__val ;
   char __c[1U] ;
};
#line 268  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
union __anonunion___u_17 {
   struct list_head *__val ;
   char __c[1U] ;
};
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/bug.h"
struct bug_entry {
   int bug_addr_disp ;
   int file_disp ;
   unsigned short line ;
   unsigned short flags ;
};
#line 188  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/math64.h"
typedef __s64 time64_t;
#line 7  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/time_types.h"
struct __kernel_timespec {
   __kernel_time64_t tv_sec ;
   long long tv_nsec ;
};
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/time64.h"
struct timespec64 {
   time64_t tv_sec ;
   long tv_nsec ;
};
#line 165 
struct old_timespec32;
#line 166 
struct pollfd;
#line 167 
enum timespec_type {
    TT_NONE = 0,
    TT_NATIVE = 1,
    TT_COMPAT = 2
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/restart_block.h"
struct __anonstruct_futex_27 {
   u32 *uaddr ;
   u32 val ;
   u32 flags ;
   u32 bitset ;
   u64 time ;
   u32 *uaddr2 ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/restart_block.h"
union __anonunion_29 {
   struct __kernel_timespec *rmtp ;
   struct old_timespec32 *compat_rmtp ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/restart_block.h"
struct __anonstruct_nanosleep_28 {
   clockid_t clockid ;
   enum timespec_type type ;
   union __anonunion_29 __anonCompField___anonstruct_nanosleep_28_5 ;
   u64 expires ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/restart_block.h"
struct __anonstruct_poll_30 {
   struct pollfd *ufds ;
   int nfds ;
   int has_timeout ;
   unsigned long tv_sec ;
   unsigned long tv_nsec ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/restart_block.h"
union __anonunion_26 {
   struct __anonstruct_futex_27 futex ;
   struct __anonstruct_nanosleep_28 nanosleep ;
   struct __anonstruct_poll_30 poll ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/restart_block.h"
struct restart_block {
   long (*fn)(struct restart_block *) ;
   union __anonunion_26 __anonCompField_restart_block_6 ;
};
#line 58  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/page_64.h"
struct page;
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/getorder.h"
struct mm_struct;
#line 49 
struct io_bitmap;
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/ptrace.h"
struct pt_regs {
   unsigned long r15 ;
   unsigned long r14 ;
   unsigned long r13 ;
   unsigned long r12 ;
   unsigned long bp ;
   unsigned long bx ;
   unsigned long r11 ;
   unsigned long r10 ;
   unsigned long r9 ;
   unsigned long r8 ;
   unsigned long ax ;
   unsigned long cx ;
   unsigned long dx ;
   unsigned long si ;
   unsigned long di ;
   unsigned long orig_ax ;
   unsigned long ip ;
   unsigned long cs ;
   unsigned long flags ;
   unsigned long sp ;
   unsigned long ss ;
};
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/desc_defs.h"
struct desc_struct {
   u16 limit0 ;
   u16 base0 ;
   u16 base1 : 8 ;
   u16 type : 4 ;
   u16 s : 1 ;
   u16 dpl : 2 ;
   u16 p : 1 ;
   u16 limit1 : 4 ;
   u16 avl : 1 ;
   u16 l : 1 ;
   u16 d : 1 ;
   u16 g : 1 ;
   u16 base2 : 8 ;
} __attribute__((__packed__));
#line 119  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/desc_defs.h"
typedef unsigned long pteval_t;
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pmdval_t;
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pudval_t;
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgdval_t;
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgprotval_t;
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_64_types.h"
struct __anonstruct_pte_t_53 {
   pteval_t pte ;
};
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_64_types.h"
typedef struct __anonstruct_pte_t_53 pte_t;
#line 265  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
struct pgprot {
   pgprotval_t pgprot ;
};
#line 267  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
typedef struct pgprot pgprot_t;
#line 266  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
struct __anonstruct_pgd_t_54 {
   pgdval_t pgd ;
};
#line 266  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
typedef struct __anonstruct_pgd_t_54 pgd_t;
#line 319  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
struct __anonstruct_pud_t_56 {
   pudval_t pud ;
};
#line 319  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
typedef struct __anonstruct_pud_t_56 pud_t;
#line 345  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
struct __anonstruct_pmd_t_57 {
   pmdval_t pmd ;
};
#line 345  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
typedef struct __anonstruct_pmd_t_57 pmd_t;
#line 505  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
typedef struct page *pgtable_t;
#line 519 
struct file;
#line 530 
struct seq_file;
#line 360  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/nospec-branch.h"
struct thread_struct;
#line 362 
struct cpumask;
#line 365 
struct vm_area_struct;
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qspinlock_types.h"
struct __anonstruct_59 {
   u8 locked ;
   u8 pending ;
};
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qspinlock_types.h"
struct __anonstruct_60 {
   u16 locked_pending ;
   u16 tail ;
};
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qspinlock_types.h"
union __anonunion_58 {
   atomic_t val ;
   struct __anonstruct_59 __anonCompField___anonunion_58_7 ;
   struct __anonstruct_60 __anonCompField___anonunion_58_8 ;
};
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qspinlock_types.h"
struct qspinlock {
   union __anonunion_58 __anonCompField_qspinlock_9 ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qspinlock_types.h"
typedef struct qspinlock arch_spinlock_t;
#line 13  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qrwlock_types.h"
struct __anonstruct_62 {
   u8 wlocked ;
   u8 __lstate[3U] ;
};
#line 13  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qrwlock_types.h"
union __anonunion_61 {
   atomic_t cnts ;
   struct __anonstruct_62 __anonCompField___anonunion_61_10 ;
};
#line 13  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qrwlock_types.h"
struct qrwlock {
   union __anonunion_61 __anonCompField_qrwlock_11 ;
   arch_spinlock_t wait_lock ;
};
#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qrwlock_types.h"
typedef struct qrwlock arch_rwlock_t;
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/math_emu.h"
struct math_emu_info {
   long ___orig_eip ;
   struct pt_regs *regs ;
};
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/atomic.h"
union __anonunion___u_67 {
   int __val ;
   char __c[1U] ;
};
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/atomic.h"
union __anonunion___u_69 {
   int __val ;
   char __c[1U] ;
};
#line 2288  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/atomic-fallback.h"
typedef atomic64_t atomic_long_t;
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cpumask.h"
struct cpumask {
   unsigned long bits[128U] ;
};
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cpumask.h"
typedef struct cpumask cpumask_t;
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/tracepoint-defs.h"
struct tracepoint_func {
   void *func ;
   void *data ;
   int prio ;
};
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/tracepoint-defs.h"
struct tracepoint {
   char *name ;
   struct static_key key ;
   int (*regfunc)(void) ;
   void (*unregfunc)(void) ;
   struct tracepoint_func *funcs ;
};
#line 37  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/tracepoint-defs.h"
typedef int tracepoint_ptr_t;
#line 44  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/tracepoint-defs.h"
struct bpf_raw_event_map {
   struct tracepoint *tp ;
   void *bpf_func ;
   u32 num_args ;
   u32 writable_size ;
} __attribute__((__aligned__(32)));
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
struct fregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u32 status ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_90 {
   u64 rip ;
   u64 rdp ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_91 {
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
union __anonunion_89 {
   struct __anonstruct_90 __anonCompField___anonunion_89_17 ;
   struct __anonstruct_91 __anonCompField___anonunion_89_18 ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
union __anonunion_92 {
   u32 padding1[12U] ;
   u32 sw_reserved[12U] ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
struct fxregs_state {
   u16 cwd ;
   u16 swd ;
   u16 twd ;
   u16 fop ;
   union __anonunion_89 __anonCompField_fxregs_state_19 ;
   u32 mxcsr ;
   u32 mxcsr_mask ;
   u32 st_space[32U] ;
   u32 xmm_space[64U] ;
   u32 padding[12U] ;
   union __anonunion_92 __anonCompField_fxregs_state_20 ;
} __attribute__((__aligned__(16)));
#line 79  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
struct swregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u8 ftop ;
   u8 changed ;
   u8 lookahead ;
   u8 no_update ;
   u8 rm ;
   u8 alimit ;
   struct math_emu_info *info ;
   u32 entry_eip ;
};
#line 232  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
struct xstate_header {
   u64 xfeatures ;
   u64 xcomp_bv ;
   u64 reserved[6U] ;
} __attribute__((__packed__));
#line 253  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
struct xregs_state {
   struct fxregs_state i387 ;
   struct xstate_header header ;
   u8 extended_state_area[0U] ;
} __attribute__((__packed__, __aligned__(64)));
#line 268  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
union fpregs_state {
   struct fregs_state fsave ;
   struct fxregs_state fxsave ;
   struct swregs_state soft ;
   struct xregs_state xsave ;
   u8 __padding[4096U] ;
};
#line 281  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
struct fpu {
   unsigned int last_cpu ;
   unsigned long avx512_timestamp ;
   union fpregs_state state ;
};
#line 73  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/orc_types.h"
struct orc_entry {
   s16 sp_offset ;
   s16 bp_offset ;
   unsigned int sp_reg : 4 ;
   unsigned int bp_reg : 4 ;
   unsigned int type : 2 ;
   unsigned int end : 1 ;
} __attribute__((__packed__));
#line 180  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/processor.h"
struct seq_operations;
#line 478 
struct perf_event;
#line 479  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/processor.h"
struct __anonstruct_mm_segment_t_95 {
   unsigned long seg ;
};
#line 479  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/processor.h"
typedef struct __anonstruct_mm_segment_t_95 mm_segment_t;
#line 485  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/processor.h"
struct thread_struct {
   struct desc_struct tls_array[3U] ;
   unsigned long sp ;
   unsigned short es ;
   unsigned short ds ;
   unsigned short fsindex ;
   unsigned short gsindex ;
   unsigned long fsbase ;
   unsigned long gsbase ;
   struct perf_event *ptrace_bps[4U] ;
   unsigned long debugreg6 ;
   unsigned long ptrace_dr7 ;
   unsigned long cr2 ;
   unsigned long trap_nr ;
   unsigned long error_code ;
   struct io_bitmap *io_bitmap ;
   unsigned long iopl_emul ;
   mm_segment_t addr_limit ;
   unsigned int sig_on_uaccess_err : 1 ;
   unsigned int uaccess_err : 1 ;
   struct fpu fpu ;
};
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/thread_info.h"
struct thread_info {
   unsigned long flags ;
   u32 status ;
};
#line 35  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bottom_half.h"
struct lockdep_map;
#line 55  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockdep.h"
struct lockdep_subclass_key {
   char __one_byte ;
} __attribute__((__packed__));
#line 60  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockdep.h"
union __anonunion_96 {
   struct hlist_node hash_entry ;
   struct lockdep_subclass_key subkeys[8U] ;
};
#line 60  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockdep.h"
struct lock_class_key {
   union __anonunion_96 __anonCompField_lock_class_key_23 ;
};
#line 68 
struct lock_trace;
#line 77  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockdep.h"
struct lock_class {
   struct hlist_node hash_entry ;
   struct list_head lock_entry ;
   struct list_head locks_after ;
   struct list_head locks_before ;
   struct lockdep_subclass_key *key ;
   unsigned int subclass ;
   unsigned int dep_gen_id ;
   unsigned long usage_mask ;
   struct lock_trace *usage_traces[9U] ;
   int name_version ;
   char *name ;
   unsigned long contention_point[4U] ;
   unsigned long contending_point[4U] ;
};
#line 157  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockdep.h"
struct lockdep_map {
   struct lock_class_key *key ;
   struct lock_class *class_cache[2U] ;
   char *name ;
   int cpu ;
   unsigned long ip ;
};
#line 226  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockdep.h"
struct held_lock {
   u64 prev_chain_key ;
   unsigned long acquire_ip ;
   struct lockdep_map *instance ;
   struct lockdep_map *nest_lock ;
   u64 waittime_stamp ;
   u64 holdtime_stamp ;
   unsigned int class_idx : 13 ;
   unsigned int irq_context : 2 ;
   unsigned int trylock : 1 ;
   unsigned int read : 2 ;
   unsigned int check : 1 ;
   unsigned int hardirqs_off : 1 ;
   unsigned int references : 12 ;
   unsigned int pin_count ;
};
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_types.h"
struct raw_spinlock {
   arch_spinlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_types.h"
typedef struct raw_spinlock raw_spinlock_t;
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_types.h"
struct __anonstruct_98 {
   u8 __padding[24U] ;
   struct lockdep_map dep_map ;
};
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_types.h"
union __anonunion_97 {
   struct raw_spinlock rlock ;
   struct __anonstruct_98 __anonCompField___anonunion_97_24 ;
};
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_types.h"
struct spinlock {
   union __anonunion_97 __anonCompField_spinlock_25 ;
};
#line 73  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_types.h"
typedef struct spinlock spinlock_t;
#line 74  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_types.h"
struct __anonstruct_rwlock_t_99 {
   arch_rwlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};
#line 74  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_types.h"
typedef struct __anonstruct_rwlock_t_99 rwlock_t;
#line 57  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
struct mutex;
#line 31  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/device.h"
struct firmware;
#line 27  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
struct kmem_cache;
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/signal.h"
struct __anonstruct_sigset_t_104 {
   unsigned long sig[1U] ;
};
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/signal.h"
typedef struct __anonstruct_sigset_t_104 sigset_t;
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/seqlock.h"
struct seqcount {
   unsigned int sequence ;
   struct lockdep_map dep_map ;
};
#line 53  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/seqlock.h"
typedef struct seqcount seqcount_t;
#line 403  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/seqlock.h"
struct __anonstruct_seqlock_t_113 {
   struct seqcount seqcount ;
   spinlock_t lock ;
};
#line 403  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/seqlock.h"
typedef struct __anonstruct_seqlock_t_113 seqlock_t;
#line 161  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timex.h"
typedef s32 old_time32_t;
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/time32.h"
struct old_timespec32 {
   old_time32_t tv_sec ;
   s32 tv_nsec ;
};
#line 85  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/time.h"
typedef void __signalfn_t(int );
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/signal-defs.h"
typedef __signalfn_t *__sighandler_t;
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/signal-defs.h"
typedef void __restorefn_t(void);
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/signal-defs.h"
typedef __restorefn_t *__sigrestore_t;
#line 8  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
union sigval {
   int sival_int ;
   void *sival_ptr ;
};
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
typedef union sigval sigval_t;
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__kill_114 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__timer_115 {
   __kernel_timer_t _tid ;
   int _overrun ;
   sigval_t _sigval ;
   int _sys_private ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__rt_116 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   sigval_t _sigval ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigchld_117 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   int _status ;
   __kernel_clock_t _utime ;
   __kernel_clock_t _stime ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__addr_bnd_120 {
   char _dummy_bnd[8U] ;
   void *_lower ;
   void *_upper ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__addr_pkey_121 {
   char _dummy_pkey[8U] ;
   __u32 _pkey ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
union __anonunion_119 {
   short _addr_lsb ;
   struct __anonstruct__addr_bnd_120 _addr_bnd ;
   struct __anonstruct__addr_pkey_121 _addr_pkey ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigfault_118 {
   void *_addr ;
   union __anonunion_119 __anonCompField___anonstruct__sigfault_118_26 ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigpoll_122 {
   long _band ;
   int _fd ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigsys_123 {
   void *_call_addr ;
   int _syscall ;
   unsigned int _arch ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
union __sifields {
   struct __anonstruct__kill_114 _kill ;
   struct __anonstruct__timer_115 _timer ;
   struct __anonstruct__rt_116 _rt ;
   struct __anonstruct__sigchld_117 _sigchld ;
   struct __anonstruct__sigfault_118 _sigfault ;
   struct __anonstruct__sigpoll_122 _sigpoll ;
   struct __anonstruct__sigsys_123 _sigsys ;
};
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/signal_types.h"
struct __anonstruct_128 {
   int si_signo ;
   int si_errno ;
   int si_code ;
   union __sifields _sifields ;
};
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/signal_types.h"
struct kernel_siginfo {
   struct __anonstruct_128 __anonCompField_kernel_siginfo_29 ;
};
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/signal_types.h"
typedef struct kernel_siginfo kernel_siginfo_t;
#line 20 
struct user_struct;
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/signal_types.h"
struct sigpending {
   struct list_head list ;
   sigset_t signal ;
};
#line 35  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/signal_types.h"
struct sigaction {
   __sighandler_t sa_handler ;
   unsigned long sa_flags ;
   __sigrestore_t sa_restorer ;
   sigset_t sa_mask ;
};
#line 49  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/signal_types.h"
struct k_sigaction {
   struct sigaction sa ;
};
#line 264  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/signal.h"
enum pid_type;
#line 264 
enum pid_type;
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/wait.h"
struct wait_queue_head {
   spinlock_t lock ;
   struct list_head head ;
};
#line 38  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/wait.h"
typedef struct wait_queue_head wait_queue_head_t;
#line 1133  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/wait.h"
struct __anonstruct_nodemask_t_129 {
   unsigned long bits[16U] ;
};
#line 1133  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/wait.h"
typedef struct __anonstruct_nodemask_t_129 nodemask_t;
#line 7  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/tlbbatch.h"
struct arch_tlbflush_unmap_batch {
   struct cpumask cpumask ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types_task.h"
struct vmacache {
   u64 seqnum ;
   struct vm_area_struct *vmas[4U] ;
};
#line 54  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types_task.h"
struct task_rss_stat {
   int events ;
   int count[4U] ;
};
#line 60  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types_task.h"
struct mm_rss_stat {
   atomic_long_t count[4U] ;
};
#line 64  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types_task.h"
struct page_frag {
   struct page *page ;
   __u32 offset ;
   __u32 size ;
};
#line 76  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types_task.h"
struct tlbflush_unmap_batch {
   struct arch_tlbflush_unmap_batch arch ;
   bool flush_required ;
   bool writable ;
};
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rbtree.h"
struct rb_node {
   unsigned long __rb_parent_color ;
   struct rb_node *rb_right ;
   struct rb_node *rb_left ;
} __attribute__((__aligned__(8)));
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rbtree.h"
struct rb_root {
   struct rb_node *rb_node ;
};
#line 125  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rbtree.h"
struct rb_root_cached {
   struct rb_root rb_root ;
   struct rb_node *rb_leftmost ;
};
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/osq_lock.h"
struct optimistic_spin_queue {
   atomic_t tail ;
};
#line 35  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rwsem.h"
struct rw_semaphore {
   atomic_long_t count ;
   atomic_long_t owner ;
   struct optimistic_spin_queue osq ;
   raw_spinlock_t wait_lock ;
   struct list_head wait_list ;
   void *magic ;
   struct lockdep_map dep_map ;
};
#line 26  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/completion.h"
struct completion {
   unsigned int done ;
   wait_queue_head_t wait ;
};
#line 120 
struct inode;
#line 121 
struct notifier_block;
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uprobes.h"
struct ww_acquire_ctx;
#line 53  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mutex.h"
struct mutex {
   atomic_long_t owner ;
   spinlock_t wait_lock ;
   struct optimistic_spin_queue osq ;
   struct list_head wait_list ;
   void *magic ;
   struct lockdep_map dep_map ;
};
#line 72  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mutex.h"
struct mutex_waiter {
   struct list_head list ;
   struct task_struct *task ;
   struct ww_acquire_ctx *ww_ctx ;
   void *magic ;
};
#line 461  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jiffies.h"
typedef s64 ktime_t;
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
struct timer_list {
   struct hlist_node entry ;
   unsigned long expires ;
   void (*function)(struct timer_list *) ;
   u32 flags ;
   struct lockdep_map lockdep_map ;
};
#line 196 
struct hrtimer;
#line 197 
enum hrtimer_restart;
#line 221 
struct workqueue_struct;
#line 222 
struct work_struct;
#line 102  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/workqueue.h"
struct work_struct {
   atomic_long_t data ;
   struct list_head entry ;
   void (*func)(struct work_struct *) ;
   struct lockdep_map lockdep_map ;
};
#line 115  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/workqueue.h"
struct delayed_work {
   struct work_struct work ;
   struct timer_list timer ;
   struct workqueue_struct *wq ;
   int cpu ;
};
#line 124  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/workqueue.h"
struct rcu_work {
   struct work_struct work ;
   struct callback_head rcu ;
   struct workqueue_struct *wq ;
};
#line 67  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rcu_segcblist.h"
struct rcu_segcblist {
   struct callback_head *head ;
   struct callback_head **tails[4U] ;
   unsigned long gp_seq[4U] ;
   atomic_long_t len ;
   long len_lazy ;
   u8 enabled ;
   u8 offloaded ;
};
#line 80 
struct srcu_struct;
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/srcu.h"
struct srcu_node;
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/srcutree.h"
struct srcu_data {
   unsigned long srcu_lock_count[2U] ;
   unsigned long srcu_unlock_count[2U] ;
   spinlock_t lock ;
   struct rcu_segcblist srcu_cblist ;
   unsigned long srcu_gp_seq_needed ;
   unsigned long srcu_gp_seq_needed_exp ;
   bool srcu_cblist_invoking ;
   struct timer_list delay_work ;
   struct work_struct work ;
   struct callback_head srcu_barrier_head ;
   struct srcu_node *mynode ;
   unsigned long grpmask ;
   int cpu ;
   struct srcu_struct *ssp ;
};
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/srcutree.h"
struct srcu_node {
   spinlock_t lock ;
   unsigned long srcu_have_cbs[4U] ;
   unsigned long srcu_data_have_cbs[4U] ;
   unsigned long srcu_gp_seq_needed_exp ;
   struct srcu_node *srcu_parent ;
   int grplo ;
   int grphi ;
};
#line 64  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/srcutree.h"
struct srcu_struct {
   struct srcu_node node[521U] ;
   struct srcu_node *level[4U] ;
   struct mutex srcu_cb_mutex ;
   spinlock_t lock ;
   struct mutex srcu_gp_mutex ;
   unsigned int srcu_idx ;
   unsigned long srcu_gp_seq ;
   unsigned long srcu_gp_seq_needed ;
   unsigned long srcu_gp_seq_needed_exp ;
   unsigned long srcu_last_gp_end ;
   struct srcu_data *sda ;
   unsigned long srcu_barrier_seq ;
   struct mutex srcu_barrier_mutex ;
   struct completion srcu_barrier_completion ;
   atomic_t srcu_barrier_cpu_cnt ;
   struct delayed_work work ;
   struct lockdep_map dep_map ;
};
#line 54  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/notifier.h"
struct notifier_block {
   int (*notifier_call)(struct notifier_block *, unsigned long , void *) ;
   struct notifier_block *next ;
   int priority ;
};
#line 70  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/notifier.h"
struct raw_notifier_head {
   struct notifier_block *head ;
};
#line 50  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/uprobes.h"
struct arch_uprobe_task {
   unsigned long saved_scratch_register ;
   unsigned int saved_trap_nr ;
   unsigned int saved_tf ;
};
#line 57 
enum uprobe_task_state {
    UTASK_RUNNING = 0,
    UTASK_SSTEP = 1,
    UTASK_SSTEP_ACK = 2,
    UTASK_SSTEP_TRAPPED = 3
};
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uprobes.h"
struct __anonstruct_142 {
   struct arch_uprobe_task autask ;
   unsigned long vaddr ;
};
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uprobes.h"
struct __anonstruct_143 {
   struct callback_head dup_xol_work ;
   unsigned long dup_xol_addr ;
};
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uprobes.h"
union __anonunion_141 {
   struct __anonstruct_142 __anonCompField___anonunion_141_32 ;
   struct __anonstruct_143 __anonCompField___anonunion_141_33 ;
};
#line 61 
struct uprobe;
#line 61 
struct return_instance;
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uprobes.h"
struct uprobe_task {
   enum uprobe_task_state state ;
   union __anonunion_141 __anonCompField_uprobe_task_34 ;
   struct uprobe *active_uprobe ;
   unsigned long xol_vaddr ;
   struct return_instance *return_instances ;
   unsigned int depth ;
};
#line 83  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uprobes.h"
struct return_instance {
   struct uprobe *uprobe ;
   unsigned long func ;
   unsigned long stack ;
   unsigned long orig_ret_vaddr ;
   bool chained ;
   struct return_instance *next ;
};
#line 98 
struct xol_area;
#line 101  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uprobes.h"
struct uprobes_state {
   struct xol_area *xol_area ;
};
#line 140 
struct ldt_struct;
#line 140 
struct vdso_image;
#line 140  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uprobes.h"
struct __anonstruct_mm_context_t_144 {
   u64 ctx_id ;
   atomic64_t tlb_gen ;
   struct rw_semaphore ldt_usr_sem ;
   struct ldt_struct *ldt ;
   unsigned short ia32_compat ;
   struct mutex lock ;
   void *vdso ;
   struct vdso_image *vdso_image ;
   atomic_t perf_rdpmc_allowed ;
   u16 pkey_allocation_map ;
   s16 execute_only_pkey ;
   void *bd_addr ;
};
#line 140  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uprobes.h"
typedef struct __anonstruct_mm_context_t_144 mm_context_t;
#line 66  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
struct address_space;
#line 67 
struct mem_cgroup;
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
struct __anonstruct_146 {
   struct list_head lru ;
   struct address_space *mapping ;
   unsigned long index ;
   unsigned long private ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
struct __anonstruct_147 {
   dma_addr_t dma_addr ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
struct __anonstruct_150 {
   struct page *next ;
   int pages ;
   int pobjects ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
union __anonunion_149 {
   struct list_head slab_list ;
   struct __anonstruct_150 __anonCompField___anonunion_149_37 ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
struct __anonstruct_152 {
   unsigned int inuse : 16 ;
   unsigned int objects : 15 ;
   unsigned int frozen : 1 ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
union __anonunion_151 {
   void *s_mem ;
   unsigned long counters ;
   struct __anonstruct_152 __anonCompField___anonunion_151_39 ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
struct __anonstruct_148 {
   union __anonunion_149 __anonCompField___anonstruct_148_38 ;
   struct kmem_cache *slab_cache ;
   void *freelist ;
   union __anonunion_151 __anonCompField___anonstruct_148_40 ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
struct __anonstruct_153 {
   unsigned long compound_head ;
   unsigned char compound_dtor ;
   unsigned char compound_order ;
   atomic_t compound_mapcount ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
struct __anonstruct_154 {
   unsigned long _compound_pad_1 ;
   unsigned long _compound_pad_2 ;
   struct list_head deferred_list ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
union __anonunion_156 {
   struct mm_struct *pt_mm ;
   atomic_t pt_frag_refcount ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
struct __anonstruct_155 {
   unsigned long _pt_pad_1 ;
   pgtable_t pmd_huge_pte ;
   unsigned long _pt_pad_2 ;
   union __anonunion_156 __anonCompField___anonstruct_155_44 ;
   spinlock_t *ptl ;
};
#line 68 
struct dev_pagemap;
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
struct __anonstruct_157 {
   struct dev_pagemap *pgmap ;
   void *zone_device_data ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
union __anonunion_145 {
   struct __anonstruct_146 __anonCompField___anonunion_145_35 ;
   struct __anonstruct_147 __anonCompField___anonunion_145_36 ;
   struct __anonstruct_148 __anonCompField___anonunion_145_41 ;
   struct __anonstruct_153 __anonCompField___anonunion_145_42 ;
   struct __anonstruct_154 __anonCompField___anonunion_145_43 ;
   struct __anonstruct_155 __anonCompField___anonunion_145_45 ;
   struct __anonstruct_157 __anonCompField___anonunion_145_46 ;
   struct callback_head callback_head ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
union __anonunion_158 {
   atomic_t _mapcount ;
   unsigned int page_type ;
   unsigned int active ;
   int units ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
struct page {
   unsigned long flags ;
   union __anonunion_145 __anonCompField_page_47 ;
   union __anonunion_158 __anonCompField_page_48 ;
   atomic_t _refcount ;
   struct mem_cgroup *mem_cgroup ;
} __attribute__((__aligned__(16)));
#line 278  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct userfaultfd_ctx;
#line 278  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct vm_userfaultfd_ctx {
   struct userfaultfd_ctx *ctx ;
};
#line 292  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct __anonstruct_shared_159 {
   struct rb_node rb ;
   unsigned long rb_subtree_last ;
};
#line 292 
struct anon_vma;
#line 292 
struct vm_operations_struct;
#line 292 
struct mempolicy;
#line 292  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct vm_area_struct {
   unsigned long vm_start ;
   unsigned long vm_end ;
   struct vm_area_struct *vm_next ;
   struct vm_area_struct *vm_prev ;
   struct rb_node vm_rb ;
   unsigned long rb_subtree_gap ;
   struct mm_struct *vm_mm ;
   pgprot_t vm_page_prot ;
   unsigned long vm_flags ;
   struct __anonstruct_shared_159 shared ;
   struct list_head anon_vma_chain ;
   struct anon_vma *anon_vma ;
   struct vm_operations_struct *vm_ops ;
   unsigned long vm_pgoff ;
   struct file *vm_file ;
   void *vm_private_data ;
   atomic_long_t swap_readahead_info ;
   struct mempolicy *vm_policy ;
   struct vm_userfaultfd_ctx vm_userfaultfd_ctx ;
} __attribute__((__designated_init__));
#line 358  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct core_thread {
   struct task_struct *task ;
   struct core_thread *next ;
};
#line 363  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct core_state {
   atomic_t nr_threads ;
   struct core_thread dumper ;
   struct completion startup ;
};
#line 368 
struct kioctx_table;
#line 370 
struct linux_binfmt;
#line 370 
struct user_namespace;
#line 370 
struct mmu_notifier_mm;
#line 370  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct __anonstruct_160 {
   struct vm_area_struct *mmap ;
   struct rb_root mm_rb ;
   u64 vmacache_seqnum ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   unsigned long mmap_base ;
   unsigned long mmap_legacy_base ;
   unsigned long mmap_compat_base ;
   unsigned long mmap_compat_legacy_base ;
   unsigned long task_size ;
   unsigned long highest_vm_end ;
   pgd_t *pgd ;
   atomic_t membarrier_state ;
   atomic_t mm_users ;
   atomic_t mm_count ;
   atomic_long_t pgtables_bytes ;
   int map_count ;
   spinlock_t page_table_lock ;
   struct rw_semaphore mmap_sem ;
   struct list_head mmlist ;
   unsigned long hiwater_rss ;
   unsigned long hiwater_vm ;
   unsigned long total_vm ;
   unsigned long locked_vm ;
   atomic64_t pinned_vm ;
   unsigned long data_vm ;
   unsigned long exec_vm ;
   unsigned long stack_vm ;
   unsigned long def_flags ;
   spinlock_t arg_lock ;
   unsigned long start_code ;
   unsigned long end_code ;
   unsigned long start_data ;
   unsigned long end_data ;
   unsigned long start_brk ;
   unsigned long brk ;
   unsigned long start_stack ;
   unsigned long arg_start ;
   unsigned long arg_end ;
   unsigned long env_start ;
   unsigned long env_end ;
   unsigned long saved_auxv[46U] ;
   struct mm_rss_stat rss_stat ;
   struct linux_binfmt *binfmt ;
   mm_context_t context ;
   unsigned long flags ;
   struct core_state *core_state ;
   spinlock_t ioctx_lock ;
   struct kioctx_table *ioctx_table ;
   struct task_struct *owner ;
   struct user_namespace *user_ns ;
   struct file *exe_file ;
   struct mmu_notifier_mm *mmu_notifier_mm ;
   unsigned long numa_next_scan ;
   unsigned long numa_scan_offset ;
   int numa_scan_seq ;
   atomic_t tlb_flush_pending ;
   bool tlb_flush_batched ;
   struct uprobes_state uprobes_state ;
   atomic_long_t hugetlb_usage ;
   struct work_struct async_put_work ;
} __attribute__((__designated_init__));
#line 370  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct mm_struct {
   struct __anonstruct_160 __anonCompField_mm_struct_49 ;
   unsigned long cpu_bitmap[] ;
};
#line 642 
struct vm_fault;
#line 643  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
typedef unsigned int vm_fault_t;
#line 174  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/page-flags.h"
union __anonunion___u_163 {
   unsigned long __val ;
   char __c[1U] ;
};
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct free_area {
   struct list_head free_list[6U] ;
   unsigned long nr_free ;
};
#line 158 
struct pglist_data;
#line 168  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct zone_padding {
   char x[0U] ;
} __attribute__((__aligned__(4096)));
#line 285  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct zone_reclaim_stat {
   unsigned long recent_rotated[2U] ;
   unsigned long recent_scanned[2U] ;
};
#line 304  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct lruvec {
   struct list_head lists[5U] ;
   struct zone_reclaim_stat reclaim_stat ;
   atomic_long_t inactive_age ;
   unsigned long refaults ;
   unsigned long flags ;
   struct pglist_data *pgdat ;
};
#line 316  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
typedef unsigned int isolate_mode_t;
#line 340  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct per_cpu_pages {
   int count ;
   int high ;
   int batch ;
   struct list_head lists[3U] ;
};
#line 349  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct per_cpu_pageset {
   struct per_cpu_pages pcp ;
   s8 expire ;
   u16 vm_numa_stat_diff[6U] ;
   s8 stat_threshold ;
   s8 vm_stat_diff[13U] ;
};
#line 361  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct per_cpu_nodestat {
   s8 stat_threshold ;
   s8 vm_node_stat_diff[32U] ;
};
#line 365 
enum zone_type {
    ZONE_DMA = 0,
    ZONE_DMA32 = 1,
    ZONE_NORMAL = 2,
    ZONE_MOVABLE = 3,
    ZONE_DEVICE = 4,
    __MAX_NR_ZONES = 5
};
#line 432  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct zone {
   unsigned long _watermark[3U] ;
   unsigned long watermark_boost ;
   unsigned long nr_reserved_highatomic ;
   long lowmem_reserve[5U] ;
   int node ;
   struct pglist_data *zone_pgdat ;
   struct per_cpu_pageset *pageset ;
   unsigned long zone_start_pfn ;
   atomic_long_t managed_pages ;
   unsigned long spanned_pages ;
   unsigned long present_pages ;
   char *name ;
   unsigned long nr_isolate_pageblock ;
   seqlock_t span_seqlock ;
   int initialized ;
   struct zone_padding _pad1_ ;
   struct free_area free_area[11U] ;
   unsigned long flags ;
   spinlock_t lock ;
   struct zone_padding _pad2_ ;
   unsigned long percpu_drift_mark ;
   unsigned long compact_cached_free_pfn ;
   unsigned long compact_cached_migrate_pfn[2U] ;
   unsigned long compact_init_migrate_pfn ;
   unsigned long compact_init_free_pfn ;
   unsigned int compact_considered ;
   unsigned int compact_defer_shift ;
   int compact_order_failed ;
   bool compact_blockskip_flush ;
   bool contiguous ;
   struct zone_padding _pad3_ ;
   atomic_long_t vm_stat[13U] ;
   atomic_long_t vm_numa_stat[6U] ;
} __attribute__((__aligned__(4096)));
#line 665  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct zoneref {
   struct zone *zone ;
   int zone_idx ;
};
#line 684  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct zonelist {
   struct zoneref _zonerefs[5121U] ;
};
#line 694  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct deferred_split {
   spinlock_t split_queue_lock ;
   struct list_head split_queue ;
   unsigned long split_queue_len ;
};
#line 710  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct pglist_data {
   struct zone node_zones[5U] ;
   struct zonelist node_zonelists[2U] ;
   int nr_zones ;
   spinlock_t node_size_lock ;
   unsigned long node_start_pfn ;
   unsigned long node_present_pages ;
   unsigned long node_spanned_pages ;
   int node_id ;
   wait_queue_head_t kswapd_wait ;
   wait_queue_head_t pfmemalloc_wait ;
   struct task_struct *kswapd ;
   int kswapd_order ;
   enum zone_type kswapd_classzone_idx ;
   int kswapd_failures ;
   int kcompactd_max_order ;
   enum zone_type kcompactd_classzone_idx ;
   wait_queue_head_t kcompactd_wait ;
   struct task_struct *kcompactd ;
   unsigned long totalreserve_pages ;
   unsigned long min_unmapped_pages ;
   unsigned long min_slab_pages ;
   struct zone_padding _pad1_ ;
   spinlock_t lru_lock ;
   unsigned long first_deferred_pfn ;
   struct deferred_split deferred_split_queue ;
   struct lruvec __lruvec ;
   unsigned long flags ;
   struct zone_padding _pad2_ ;
   struct per_cpu_nodestat *per_cpu_nodestats ;
   atomic_long_t vm_stat[32U] ;
};
#line 824 
struct resource;
#line 825 
struct vmem_altmap;
#line 440  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/io.h"
struct fwnode_operations;
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fwnode.h"
struct fwnode_handle {
   struct fwnode_handle *secondary ;
   struct fwnode_operations *ops ;
   struct device *dev ;
};
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fwnode.h"
struct fwnode_endpoint {
   unsigned int port ;
   unsigned int id ;
   struct fwnode_handle *local_fwnode ;
};
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fwnode.h"
struct fwnode_reference_args {
   struct fwnode_handle *fwnode ;
   unsigned int nargs ;
   u64 args[8U] ;
};
#line 110  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fwnode.h"
struct fwnode_operations {
   struct fwnode_handle *(*get)(struct fwnode_handle *) ;
   void (*put)(struct fwnode_handle *) ;
   bool (*device_is_available)(struct fwnode_handle *) ;
   void *(*device_get_match_data)(struct fwnode_handle *, struct device *) ;
   bool (*property_present)(struct fwnode_handle *, char *) ;
   int (*property_read_int_array)(struct fwnode_handle *, char *, unsigned int , void *, size_t ) ;
   int (*property_read_string_array)(struct fwnode_handle *, char *, char **, size_t ) ;
   char *(*get_name)(struct fwnode_handle *) ;
   char *(*get_name_prefix)(struct fwnode_handle *) ;
   struct fwnode_handle *(*get_parent)(struct fwnode_handle *) ;
   struct fwnode_handle *(*get_next_child_node)(struct fwnode_handle *, struct fwnode_handle *) ;
   struct fwnode_handle *(*get_named_child_node)(struct fwnode_handle *, char *) ;
   int (*get_reference_args)(struct fwnode_handle *, char *, char *, unsigned int , unsigned int , struct fwnode_reference_args *) ;
   struct fwnode_handle *(*graph_get_next_endpoint)(struct fwnode_handle *, struct fwnode_handle *) ;
   struct fwnode_handle *(*graph_get_remote_endpoint)(struct fwnode_handle *) ;
   struct fwnode_handle *(*graph_get_port_parent)(struct fwnode_handle *) ;
   int (*graph_parse_endpoint)(struct fwnode_handle *, struct fwnode_endpoint *) ;
   int (*add_links)(struct fwnode_handle *, struct device *) ;
};
#line 54  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/llist.h"
struct llist_node;
#line 58  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/llist.h"
struct llist_node {
   struct llist_node *next ;
};
#line 53  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/vmalloc.h"
struct vm_struct {
   struct vm_struct *next ;
   void *addr ;
   unsigned long size ;
   unsigned long flags ;
   struct page **pages ;
   unsigned int nr_pages ;
   phys_addr_t phys_addr ;
   void *caller ;
};
#line 266  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/apic.h"
struct irq_data;
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/smp.h"
struct __call_single_data {
   struct llist_node llist ;
   void (*func)(void *) ;
   void *info ;
   unsigned int flags ;
};
#line 13  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/arch_topology.h"
struct device_node;
#line 623  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/gfp.h"
struct percpu_ref;
#line 624  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/gfp.h"
typedef void percpu_ref_func_t(struct percpu_ref *);
#line 95  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/percpu-refcount.h"
struct percpu_ref {
   atomic_long_t count ;
   unsigned long percpu_count_ptr ;
   percpu_ref_func_t *release ;
   percpu_ref_func_t *confirm_switch ;
   bool force_atomic : 1 ;
   bool allow_reinit : 1 ;
   struct callback_head rcu ;
};
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/refcount.h"
struct refcount_struct {
   atomic_t refs ;
};
#line 101  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/refcount.h"
typedef struct refcount_struct refcount_t;
#line 305 
enum pid_type {
    PIDTYPE_PID = 0,
    PIDTYPE_TGID = 1,
    PIDTYPE_PGID = 2,
    PIDTYPE_SID = 3,
    PIDTYPE_MAX = 4
};
#line 54  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pid.h"
struct pid_namespace;
#line 54  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pid.h"
struct upid {
   int nr ;
   struct pid_namespace *ns ;
};
#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pid.h"
struct pid {
   refcount_t count ;
   unsigned int level ;
   struct hlist_head tasks[4U] ;
   wait_queue_head_t wait_pidfd ;
   struct callback_head rcu ;
   struct upid numbers[1U] ;
};
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uidgid.h"
struct __anonstruct_kuid_t_288 {
   uid_t val ;
};
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uidgid.h"
typedef struct __anonstruct_kuid_t_288 kuid_t;
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uidgid.h"
struct __anonstruct_kgid_t_289 {
   gid_t val ;
};
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uidgid.h"
typedef struct __anonstruct_kgid_t_289 kgid_t;
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable-types.h"
struct rhash_head {
   struct rhash_head *next ;
};
#line 25 
struct bucket_table;
#line 33 
struct rhashtable;
#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable-types.h"
struct rhashtable_compare_arg {
   struct rhashtable *ht ;
   void *key ;
};
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable-types.h"
struct rhashtable_params {
   u16 nelem_hint ;
   u16 key_len ;
   u16 key_offset ;
   u16 head_offset ;
   unsigned int max_size ;
   u16 min_size ;
   bool automatic_shrinking ;
   u32 (*hashfn)(void *, u32 , u32 ) ;
   u32 (*obj_hashfn)(void *, u32 , u32 ) ;
   int (*obj_cmpfn)(struct rhashtable_compare_arg *, void *) ;
};
#line 81  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable-types.h"
struct rhashtable {
   struct bucket_table *tbl ;
   unsigned int key_len ;
   unsigned int max_elems ;
   struct rhashtable_params p ;
   bool rhlist ;
   struct work_struct run_work ;
   struct mutex mutex ;
   spinlock_t lock ;
   atomic_t nelems ;
};
#line 67  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/sem.h"
struct sem_undo_list;
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sem.h"
struct sysv_sem {
   struct sem_undo_list *undo_list ;
};
#line 13  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/shm.h"
struct sysv_shm {
   struct list_head shm_clist ;
};
#line 83  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/plist.h"
struct plist_node {
   int prio ;
   struct list_head prio_list ;
   struct list_head node_list ;
};
#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timerqueue.h"
struct timerqueue_node {
   struct rb_node node ;
   ktime_t expires ;
};
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timerqueue.h"
struct timerqueue_head {
   struct rb_root_cached rb_root ;
};
#line 60 
struct hrtimer_clock_base;
#line 61 
struct hrtimer_cpu_base;
#line 80 
enum hrtimer_restart {
    HRTIMER_NORESTART = 0,
    HRTIMER_RESTART = 1
};
#line 117  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/hrtimer.h"
struct hrtimer {
   struct timerqueue_node node ;
   ktime_t _softexpires ;
   enum hrtimer_restart (*function)(struct hrtimer *) ;
   struct hrtimer_clock_base *base ;
   u8 state ;
   u8 is_rel ;
   u8 is_soft ;
   u8 is_hard ;
};
#line 158  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/hrtimer.h"
struct hrtimer_clock_base {
   struct hrtimer_cpu_base *cpu_base ;
   unsigned int index ;
   clockid_t clockid ;
   seqcount_t seq ;
   struct hrtimer *running ;
   struct timerqueue_head active ;
   ktime_t (*get_time)(void) ;
   ktime_t offset ;
} __attribute__((__aligned__(64)));
#line 213  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/hrtimer.h"
struct hrtimer_cpu_base {
   raw_spinlock_t lock ;
   unsigned int cpu ;
   unsigned int active_bases ;
   unsigned int clock_was_set_seq ;
   unsigned int hres_active : 1 ;
   unsigned int in_hrtirq : 1 ;
   unsigned int hang_detected : 1 ;
   unsigned int softirq_activated : 1 ;
   unsigned int nr_events ;
   unsigned short nr_retries ;
   unsigned short nr_hangs ;
   unsigned int max_hang_time ;
   ktime_t expires_next ;
   struct hrtimer *next_timer ;
   ktime_t softirq_expires_next ;
   struct hrtimer *softirq_next_timer ;
   struct hrtimer_clock_base clock_base[8U] ;
} __attribute__((__aligned__(64)));
#line 40  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/seccomp.h"
struct seccomp_filter;
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/seccomp.h"
struct seccomp {
   int mode ;
   struct seccomp_filter *filter ;
};
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/resource.h"
struct rlimit {
   __kernel_ulong_t rlim_cur ;
   __kernel_ulong_t rlim_max ;
};
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/latencytop.h"
struct latency_record {
   unsigned long backtrace[12U] ;
   unsigned int count ;
   unsigned long time ;
   unsigned long max ;
};
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched/types.h"
struct task_cputime {
   u64 stime ;
   u64 utime ;
   unsigned long long sum_exec_runtime ;
};
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/task_io_accounting.h"
struct task_io_accounting {
   u64 rchar ;
   u64 wchar ;
   u64 syscr ;
   u64 syscw ;
   u64 read_bytes ;
   u64 write_bytes ;
   u64 cancelled_write_bytes ;
};
#line 107  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/posix-timers.h"
struct posix_cputimer_base {
   u64 nextevt ;
   struct timerqueue_head tqhead ;
};
#line 122  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/posix-timers.h"
struct posix_cputimers {
   struct posix_cputimer_base bases[3U] ;
   unsigned int timers_active ;
   unsigned int expiry_active ;
};
#line 193 
struct signal_struct;
#line 62  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/rseq.h"
union __anonunion_rseq_cs_296 {
   __u64 ptr64 ;
   __u64 ptr ;
};
#line 62  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/rseq.h"
struct rseq {
   __u32 cpu_id_start ;
   __u32 cpu_id ;
   union __anonunion_rseq_cs_296 rseq_cs ;
   __u32 flags ;
} __attribute__((__aligned__(32)));
#line 146 
struct audit_context;
#line 147 
struct backing_dev_info;
#line 148 
struct bio_list;
#line 149 
struct blk_plug;
#line 150 
struct capture_control;
#line 151 
struct cfs_rq;
#line 152 
struct fs_struct;
#line 153 
struct futex_pi_state;
#line 154 
struct io_context;
#line 155 
struct nameidata;
#line 156 
struct nsproxy;
#line 157 
struct perf_event_context;
#line 158 
struct pipe_inode_info;
#line 160 
struct reclaim_state;
#line 161 
struct robust_list_head;
#line 166 
struct sighand_struct;
#line 167 
struct task_delay_info;
#line 168 
struct task_group;
#line 242  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct prev_cputime {
   u64 utime ;
   u64 stime ;
   raw_spinlock_t lock ;
};
#line 290  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct sched_info {
   unsigned long pcount ;
   unsigned long long run_delay ;
   unsigned long long last_arrival ;
   unsigned long long last_queued ;
};
#line 325  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct load_weight {
   unsigned long weight ;
   u32 inv_weight ;
};
#line 352  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct util_est {
   unsigned int enqueued ;
   unsigned int ewma ;
} __attribute__((__aligned__(8)));
#line 401  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct sched_avg {
   u64 last_update_time ;
   u64 load_sum ;
   u64 runnable_load_sum ;
   u32 util_sum ;
   u32 period_contrib ;
   unsigned long load_avg ;
   unsigned long runnable_load_avg ;
   unsigned long util_avg ;
   struct util_est util_est ;
} __attribute__((__aligned__(64)));
#line 413  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct sched_statistics {
   u64 wait_start ;
   u64 wait_max ;
   u64 wait_count ;
   u64 wait_sum ;
   u64 iowait_count ;
   u64 iowait_sum ;
   u64 sleep_start ;
   u64 sleep_max ;
   s64 sum_sleep_runtime ;
   u64 block_start ;
   u64 block_max ;
   u64 exec_max ;
   u64 slice_max ;
   u64 nr_migrations_cold ;
   u64 nr_failed_migrations_affine ;
   u64 nr_failed_migrations_running ;
   u64 nr_failed_migrations_hot ;
   u64 nr_forced_migrations ;
   u64 nr_wakeups ;
   u64 nr_wakeups_sync ;
   u64 nr_wakeups_migrate ;
   u64 nr_wakeups_local ;
   u64 nr_wakeups_remote ;
   u64 nr_wakeups_affine ;
   u64 nr_wakeups_affine_attempts ;
   u64 nr_wakeups_passive ;
   u64 nr_wakeups_idle ;
};
#line 449  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct sched_entity {
   struct load_weight load ;
   unsigned long runnable_weight ;
   struct rb_node run_node ;
   struct list_head group_node ;
   unsigned int on_rq ;
   u64 exec_start ;
   u64 sum_exec_runtime ;
   u64 vruntime ;
   u64 prev_sum_exec_runtime ;
   u64 nr_migrations ;
   struct sched_statistics statistics ;
   int depth ;
   struct sched_entity *parent ;
   struct cfs_rq *cfs_rq ;
   struct cfs_rq *my_q ;
   struct sched_avg avg ;
};
#line 486 
struct rt_rq;
#line 486  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct sched_rt_entity {
   struct list_head run_list ;
   unsigned long timeout ;
   unsigned long watchdog_stamp ;
   unsigned int time_slice ;
   unsigned short on_rq ;
   unsigned short on_list ;
   struct sched_rt_entity *back ;
   struct sched_rt_entity *parent ;
   struct rt_rq *rt_rq ;
   struct rt_rq *my_q ;
} __attribute__((__designated_init__));
#line 504  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct sched_dl_entity {
   struct rb_node rb_node ;
   u64 dl_runtime ;
   u64 dl_deadline ;
   u64 dl_period ;
   u64 dl_bw ;
   u64 dl_density ;
   s64 runtime ;
   u64 deadline ;
   unsigned int flags ;
   unsigned int dl_throttled : 1 ;
   unsigned int dl_boosted : 1 ;
   unsigned int dl_yielded : 1 ;
   unsigned int dl_non_contending : 1 ;
   unsigned int dl_overrun : 1 ;
   struct hrtimer dl_timer ;
   struct hrtimer inactive_timer ;
};
#line 600  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct uclamp_se {
   unsigned int value : 11 ;
   unsigned int bucket_id : 3 ;
   unsigned int active : 1 ;
   unsigned int user_defined : 1 ;
};
#line 625  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct wake_q_node {
   struct wake_q_node *next ;
};
#line 629 
struct sched_class;
#line 629 
struct cred;
#line 629 
struct key;
#line 629 
struct files_struct;
#line 629 
struct rt_mutex_waiter;
#line 629 
struct css_set;
#line 629 
struct compat_robust_list_head;
#line 629 
struct numa_group;
#line 629  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
union __anonunion_298 {
   refcount_t rcu_users ;
   struct callback_head rcu ;
};
#line 629 
struct ftrace_ret_stack;
#line 629 
struct kcov;
#line 629 
struct request_queue;
#line 629  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct task_struct {
   struct thread_info thread_info ;
   long state ;
   void *stack ;
   refcount_t usage ;
   unsigned int flags ;
   unsigned int ptrace ;
   struct llist_node wake_entry ;
   int on_cpu ;
   unsigned int cpu ;
   unsigned int wakee_flips ;
   unsigned long wakee_flip_decay_ts ;
   struct task_struct *last_wakee ;
   int recent_used_cpu ;
   int wake_cpu ;
   int on_rq ;
   int prio ;
   int static_prio ;
   int normal_prio ;
   unsigned int rt_priority ;
   struct sched_class *sched_class ;
   struct sched_entity se ;
   struct sched_rt_entity rt ;
   struct task_group *sched_task_group ;
   struct sched_dl_entity dl ;
   struct uclamp_se uclamp_req[2U] ;
   struct uclamp_se uclamp[2U] ;
   struct hlist_head preempt_notifiers ;
   unsigned int btrace_seq ;
   unsigned int policy ;
   int nr_cpus_allowed ;
   cpumask_t *cpus_ptr ;
   cpumask_t cpus_mask ;
   unsigned long rcu_tasks_nvcsw ;
   u8 rcu_tasks_holdout ;
   u8 rcu_tasks_idx ;
   int rcu_tasks_idle_cpu ;
   struct list_head rcu_tasks_holdout_list ;
   struct sched_info sched_info ;
   struct list_head tasks ;
   struct plist_node pushable_tasks ;
   struct rb_node pushable_dl_tasks ;
   struct mm_struct *mm ;
   struct mm_struct *active_mm ;
   struct vmacache vmacache ;
   struct task_rss_stat rss_stat ;
   int exit_state ;
   int exit_code ;
   int exit_signal ;
   int pdeath_signal ;
   unsigned long jobctl ;
   unsigned int personality ;
   unsigned int sched_reset_on_fork : 1 ;
   unsigned int sched_contributes_to_load : 1 ;
   unsigned int sched_migrated : 1 ;
   unsigned int sched_remote_wakeup : 1 ;
   unsigned int sched_psi_wake_requeue : 1 ;
   unsigned int  ;
   unsigned int in_execve : 1 ;
   unsigned int in_iowait : 1 ;
   unsigned int restore_sigmask : 1 ;
   unsigned int in_user_fault : 1 ;
   unsigned int brk_randomized : 1 ;
   unsigned int no_cgroup_migration : 1 ;
   unsigned int frozen : 1 ;
   unsigned int use_memdelay : 1 ;
   unsigned long atomic_flags ;
   struct restart_block restart_block ;
   pid_t pid ;
   pid_t tgid ;
   unsigned long stack_canary ;
   struct task_struct *real_parent ;
   struct task_struct *parent ;
   struct list_head children ;
   struct list_head sibling ;
   struct task_struct *group_leader ;
   struct list_head ptraced ;
   struct list_head ptrace_entry ;
   struct pid *thread_pid ;
   struct hlist_node pid_links[4U] ;
   struct list_head thread_group ;
   struct list_head thread_node ;
   struct completion *vfork_done ;
   int *set_child_tid ;
   int *clear_child_tid ;
   u64 utime ;
   u64 stime ;
   u64 gtime ;
   struct prev_cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   u64 start_time ;
   u64 start_boottime ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   struct posix_cputimers posix_cputimers ;
   struct cred *ptracer_cred ;
   struct cred *real_cred ;
   struct cred *cred ;
   struct key *cached_requested_key ;
   char comm[16U] ;
   struct nameidata *nameidata ;
   struct sysv_sem sysvsem ;
   struct sysv_shm sysvshm ;
   unsigned long last_switch_count ;
   unsigned long last_switch_time ;
   struct fs_struct *fs ;
   struct files_struct *files ;
   struct nsproxy *nsproxy ;
   struct signal_struct *signal ;
   struct sighand_struct *sighand ;
   sigset_t blocked ;
   sigset_t real_blocked ;
   sigset_t saved_sigmask ;
   struct sigpending pending ;
   unsigned long sas_ss_sp ;
   size_t sas_ss_size ;
   unsigned int sas_ss_flags ;
   struct callback_head *task_works ;
   struct audit_context *audit_context ;
   kuid_t loginuid ;
   unsigned int sessionid ;
   struct seccomp seccomp ;
   u32 parent_exec_id ;
   u32 self_exec_id ;
   spinlock_t alloc_lock ;
   raw_spinlock_t pi_lock ;
   struct wake_q_node wake_q ;
   struct rb_root_cached pi_waiters ;
   struct task_struct *pi_top_task ;
   struct rt_mutex_waiter *pi_blocked_on ;
   struct mutex_waiter *blocked_on ;
   int non_block_count ;
   unsigned int irq_events ;
   unsigned long hardirq_enable_ip ;
   unsigned long hardirq_disable_ip ;
   unsigned int hardirq_enable_event ;
   unsigned int hardirq_disable_event ;
   int hardirqs_enabled ;
   int hardirq_context ;
   unsigned long softirq_disable_ip ;
   unsigned long softirq_enable_ip ;
   unsigned int softirq_disable_event ;
   unsigned int softirq_enable_event ;
   int softirqs_enabled ;
   int softirq_context ;
   u64 curr_chain_key ;
   int lockdep_depth ;
   unsigned int lockdep_recursion ;
   struct held_lock held_locks[48U] ;
   unsigned int in_ubsan ;
   void *journal_info ;
   struct bio_list *bio_list ;
   struct blk_plug *plug ;
   struct reclaim_state *reclaim_state ;
   struct backing_dev_info *backing_dev_info ;
   struct io_context *io_context ;
   struct capture_control *capture_control ;
   unsigned long ptrace_message ;
   kernel_siginfo_t *last_siginfo ;
   struct task_io_accounting ioac ;
   unsigned int psi_flags ;
   u64 acct_rss_mem1 ;
   u64 acct_vm_mem1 ;
   u64 acct_timexpd ;
   nodemask_t mems_allowed ;
   seqcount_t mems_allowed_seq ;
   int cpuset_mem_spread_rotor ;
   int cpuset_slab_spread_rotor ;
   struct css_set *cgroups ;
   struct list_head cg_list ;
   u32 closid ;
   u32 rmid ;
   struct robust_list_head *robust_list ;
   struct compat_robust_list_head *compat_robust_list ;
   struct list_head pi_state_list ;
   struct futex_pi_state *pi_state_cache ;
   struct mutex futex_exit_mutex ;
   unsigned int futex_state ;
   struct perf_event_context *perf_event_ctxp[2U] ;
   struct mutex perf_event_mutex ;
   struct list_head perf_event_list ;
   struct mempolicy *mempolicy ;
   short il_prev ;
   short pref_node_fork ;
   int numa_scan_seq ;
   unsigned int numa_scan_period ;
   unsigned int numa_scan_period_max ;
   int numa_preferred_nid ;
   unsigned long numa_migrate_retry ;
   u64 node_stamp ;
   u64 last_task_numa_placement ;
   u64 last_sum_exec_runtime ;
   struct callback_head numa_work ;
   struct numa_group *numa_group ;
   unsigned long *numa_faults ;
   unsigned long total_numa_faults ;
   unsigned long numa_faults_locality[3U] ;
   unsigned long numa_pages_migrated ;
   struct rseq *rseq ;
   u32 rseq_sig ;
   unsigned long rseq_event_mask ;
   struct tlbflush_unmap_batch tlb_ubc ;
   union __anonunion_298 __anonCompField_task_struct_52 ;
   struct pipe_inode_info *splice_pipe ;
   struct page_frag task_frag ;
   struct task_delay_info *delays ;
   int make_it_fail ;
   unsigned int fail_nth ;
   int nr_dirtied ;
   int nr_dirtied_pause ;
   unsigned long dirty_paused_when ;
   int latency_record_count ;
   struct latency_record latency_record[32U] ;
   u64 timer_slack_ns ;
   u64 default_timer_slack_ns ;
   unsigned int kasan_depth ;
   int curr_ret_stack ;
   int curr_ret_depth ;
   struct ftrace_ret_stack *ret_stack ;
   unsigned long long ftrace_timestamp ;
   atomic_t trace_overrun ;
   atomic_t tracing_graph_pause ;
   unsigned long trace ;
   unsigned long trace_recursion ;
   unsigned int kcov_mode ;
   unsigned int kcov_size ;
   void *kcov_area ;
   struct kcov *kcov ;
   u64 kcov_handle ;
   int kcov_sequence ;
   struct mem_cgroup *memcg_in_oom ;
   gfp_t memcg_oom_gfp_mask ;
   int memcg_oom_order ;
   unsigned int memcg_nr_pages_over_high ;
   struct mem_cgroup *active_memcg ;
   struct request_queue *throttle_queue ;
   struct uprobe_task *utask ;
   unsigned int sequential_io ;
   unsigned int sequential_io_avg ;
   unsigned long task_state_change ;
   int pagefault_disabled ;
   struct task_struct *oom_reaper_list ;
   struct vm_struct *stack_vm_area ;
   refcount_t stack_refcount ;
   int patch_state ;
   void *security ;
   struct thread_struct thread ;
};
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/extable.h"
struct exception_table_entry {
   int insn ;
   int fixup ;
   int handler ;
};
#line 196  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/slab.h"
enum kmalloc_cache_type {
    KMALLOC_NORMAL = 0,
    KMALLOC_RECLAIM = 1,
    KMALLOC_DMA = 2,
    NR_KMALLOC_TYPES = 3
};
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/stat.h"
struct kstat {
   u32 result_mask ;
   umode_t mode ;
   unsigned int nlink ;
   uint32_t blksize ;
   u64 attributes ;
   u64 attributes_mask ;
   u64 ino ;
   dev_t dev ;
   dev_t rdev ;
   kuid_t uid ;
   kgid_t gid ;
   loff_t size ;
   struct timespec64 atime ;
   struct timespec64 mtime ;
   struct timespec64 ctime ;
   struct timespec64 btime ;
   u64 blocks ;
};
#line 822  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/sysctl.h"
struct ctl_table_root;
#line 823 
struct ctl_table_header;
#line 824 
struct ctl_dir;
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
typedef int proc_handler(struct ctl_table *, int , void *, size_t *, loff_t *);
#line 105  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
struct ctl_table_poll {
   atomic_t event ;
   wait_queue_head_t wait ;
};
#line 123  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
struct ctl_table {
   char *procname ;
   void *data ;
   int maxlen ;
   umode_t mode ;
   struct ctl_table *child ;
   proc_handler *proc_handler ;
   struct ctl_table_poll *poll ;
   void *extra1 ;
   void *extra2 ;
} __attribute__((__designated_init__));
#line 135  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
struct ctl_node {
   struct rb_node node ;
   struct ctl_table_header *header ;
};
#line 142  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
struct __anonstruct_375 {
   struct ctl_table *ctl_table ;
   int used ;
   int count ;
   int nreg ;
};
#line 142  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
union __anonunion_374 {
   struct __anonstruct_375 __anonCompField___anonunion_374_53 ;
   struct callback_head rcu ;
};
#line 142 
struct ctl_table_set;
#line 142  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
struct ctl_table_header {
   union __anonunion_374 __anonCompField_ctl_table_header_54 ;
   struct completion *unregistering ;
   struct ctl_table *ctl_table_arg ;
   struct ctl_table_root *root ;
   struct ctl_table_set *set ;
   struct ctl_dir *parent ;
   struct ctl_node *node ;
   struct hlist_head inodes ;
};
#line 161  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
struct ctl_dir {
   struct ctl_table_header header ;
   struct rb_root root ;
};
#line 167  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
struct ctl_table_set {
   int (*is_seen)(struct ctl_table_set *) ;
   struct ctl_dir dir ;
};
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
struct ctl_table_root {
   struct ctl_table_set default_set ;
   struct ctl_table_set *(*lookup)(struct ctl_table_root *) ;
   void (*set_ownership)(struct ctl_table_header *, struct ctl_table *, kuid_t *, kgid_t *) ;
   int (*permissions)(struct ctl_table_header *, struct ctl_table *) ;
};
#line 13  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/vdso.h"
struct vdso_image {
   void *data ;
   unsigned long size ;
   unsigned long alt ;
   unsigned long alt_len ;
   long sym_vvar_start ;
   long sym_vvar_page ;
   long sym_pvclock_page ;
   long sym_hvclock_page ;
   long sym_VDSO32_NOTE_MASK ;
   long sym___kernel_sigreturn ;
   long sym___kernel_rt_sigreturn ;
   long sym___kernel_vsyscall ;
   long sym_int80_landing_pad ;
};
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
typedef __u64 Elf64_Addr;
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
typedef __u16 Elf64_Half;
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
typedef __u64 Elf64_Off;
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
typedef __u32 Elf64_Word;
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
typedef __u64 Elf64_Xword;
#line 192  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
struct elf64_sym {
   Elf64_Word st_name ;
   unsigned char st_info ;
   unsigned char st_other ;
   Elf64_Half st_shndx ;
   Elf64_Addr st_value ;
   Elf64_Xword st_size ;
};
#line 200  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
typedef struct elf64_sym Elf64_Sym;
#line 221  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
struct elf64_hdr {
   unsigned char e_ident[16U] ;
   Elf64_Half e_type ;
   Elf64_Half e_machine ;
   Elf64_Word e_version ;
   Elf64_Addr e_entry ;
   Elf64_Off e_phoff ;
   Elf64_Off e_shoff ;
   Elf64_Word e_flags ;
   Elf64_Half e_ehsize ;
   Elf64_Half e_phentsize ;
   Elf64_Half e_phnum ;
   Elf64_Half e_shentsize ;
   Elf64_Half e_shnum ;
   Elf64_Half e_shstrndx ;
};
#line 237  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
typedef struct elf64_hdr Elf64_Ehdr;
#line 316  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
struct elf64_shdr {
   Elf64_Word sh_name ;
   Elf64_Word sh_type ;
   Elf64_Xword sh_flags ;
   Elf64_Addr sh_addr ;
   Elf64_Off sh_offset ;
   Elf64_Xword sh_size ;
   Elf64_Word sh_link ;
   Elf64_Word sh_info ;
   Elf64_Xword sh_addralign ;
   Elf64_Xword sh_entsize ;
};
#line 328  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
typedef struct elf64_shdr Elf64_Shdr;
#line 292  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/xarray.h"
struct xarray {
   spinlock_t xa_lock ;
   gfp_t xa_flags ;
   void *xa_head ;
};
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/idr.h"
struct idr {
   struct xarray idr_rt ;
   unsigned int idr_base ;
   unsigned int idr_next ;
};
#line 322 
struct dentry;
#line 323 
struct iattr;
#line 324 
struct super_block;
#line 325 
struct poll_table_struct;
#line 326 
struct fs_context;
#line 328 
struct kernfs_open_node;
#line 329 
struct kernfs_iattrs;
#line 84  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_root;
#line 84  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_elem_dir {
   unsigned long subdirs ;
   struct rb_root children ;
   struct kernfs_root *root ;
};
#line 96 
struct kernfs_node;
#line 96  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_elem_symlink {
   struct kernfs_node *target_kn ;
};
#line 100 
struct kernfs_ops;
#line 100  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_elem_attr {
   struct kernfs_ops *ops ;
   struct kernfs_open_node *open ;
   loff_t size ;
   struct kernfs_node *notify_next ;
};
#line 116  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
union __anonunion_393 {
   struct kernfs_elem_dir dir ;
   struct kernfs_elem_symlink symlink ;
   struct kernfs_elem_attr attr ;
};
#line 116  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_node {
   atomic_t count ;
   atomic_t active ;
   struct lockdep_map dep_map ;
   struct kernfs_node *parent ;
   char *name ;
   struct rb_node rb ;
   void *ns ;
   unsigned int hash ;
   union __anonunion_393 __anonCompField_kernfs_node_57 ;
   void *priv ;
   u64 id ;
   unsigned short flags ;
   umode_t mode ;
   struct kernfs_iattrs *iattr ;
};
#line 161  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_syscall_ops {
   int (*show_options)(struct seq_file *, struct kernfs_root *) ;
   int (*mkdir)(struct kernfs_node *, char *, umode_t ) ;
   int (*rmdir)(struct kernfs_node *) ;
   int (*rename)(struct kernfs_node *, struct kernfs_node *, char *) ;
   int (*show_path)(struct seq_file *, struct kernfs_node *, struct kernfs_root *) ;
};
#line 173  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_root {
   struct kernfs_node *kn ;
   unsigned int flags ;
   struct idr ino_idr ;
   u32 last_id_lowbits ;
   u32 id_highbits ;
   struct kernfs_syscall_ops *syscall_ops ;
   struct list_head supers ;
   wait_queue_head_t deactivate_waitq ;
};
#line 190  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_open_file {
   struct kernfs_node *kn ;
   struct file *file ;
   struct seq_file *seq_file ;
   void *priv ;
   struct mutex mutex ;
   struct mutex prealloc_mutex ;
   int event ;
   struct list_head list ;
   char *prealloc_buf ;
   size_t atomic_write_len ;
   bool mmapped : 1 ;
   bool released : 1 ;
   struct vm_operations_struct *vm_ops ;
};
#line 210  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_ops {
   int (*open)(struct kernfs_open_file *) ;
   void (*release)(struct kernfs_open_file *) ;
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   ssize_t (*read)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   size_t atomic_write_len ;
   bool prealloc ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   __poll_t (*poll)(struct kernfs_open_file *, struct poll_table_struct *) ;
   int (*mmap)(struct kernfs_open_file *, struct vm_area_struct *) ;
   struct lock_class_key lockdep_key ;
};
#line 595 
struct sock;
#line 596 
struct kobject;
#line 597 
enum kobj_ns_type {
    KOBJ_NS_TYPE_NONE = 0,
    KOBJ_NS_TYPE_NET = 1,
    KOBJ_NS_TYPES = 2
};
#line 39  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kobject_ns.h"
struct kobj_ns_type_operations {
   enum kobj_ns_type type ;
   bool (*current_may_mount)(void) ;
   void *(*grab_current_ns)(void) ;
   void *(*netlink_ns)(struct sock *) ;
   void *(*initial_ns)(void) ;
   void (*drop_ns)(void *) ;
};
#line 58 
struct bin_attribute;
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysfs.h"
struct attribute {
   char *name ;
   umode_t mode ;
   bool ignore_lockdep : 1 ;
   struct lock_class_key *key ;
   struct lock_class_key skey ;
};
#line 84  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysfs.h"
struct attribute_group {
   char *name ;
   umode_t (*is_visible)(struct kobject *, struct attribute *, int ) ;
   umode_t (*is_bin_visible)(struct kobject *, struct bin_attribute *, int ) ;
   struct attribute **attrs ;
   struct bin_attribute **bin_attrs ;
};
#line 161  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysfs.h"
struct bin_attribute {
   struct attribute attr ;
   size_t size ;
   void *private ;
   ssize_t (*read)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   ssize_t (*write)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   int (*mmap)(struct file *, struct kobject *, struct bin_attribute *, struct vm_area_struct *) ;
};
#line 223  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysfs.h"
struct sysfs_ops {
   ssize_t (*show)(struct kobject *, struct attribute *, char *) ;
   ssize_t (*store)(struct kobject *, struct attribute *, char *, size_t ) ;
};
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kref.h"
struct kref {
   refcount_t refcount ;
};
#line 65  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kobject.h"
struct kset;
#line 65 
struct kobj_type;
#line 65  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kobject.h"
struct kobject {
   char *name ;
   struct list_head entry ;
   struct kobject *parent ;
   struct kset *kset ;
   struct kobj_type *ktype ;
   struct kernfs_node *sd ;
   struct kref kref ;
   struct delayed_work release ;
   unsigned int state_initialized : 1 ;
   unsigned int state_in_sysfs : 1 ;
   unsigned int state_add_uevent_sent : 1 ;
   unsigned int state_remove_uevent_sent : 1 ;
   unsigned int uevent_suppress : 1 ;
};
#line 139  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kobject.h"
struct kobj_type {
   void (*release)(struct kobject *) ;
   struct sysfs_ops *sysfs_ops ;
   struct attribute **default_attrs ;
   struct attribute_group **default_groups ;
   struct kobj_ns_type_operations *(*child_ns_type)(struct kobject *) ;
   void *(*namespace)(struct kobject *) ;
   void (*get_ownership)(struct kobject *, kuid_t *, kgid_t *) ;
};
#line 149  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kobject.h"
struct kobj_uevent_env {
   char *argv[3U] ;
   char *envp[32U] ;
   int envp_idx ;
   char buf[2048U] ;
   int buflen ;
};
#line 157  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kobject.h"
struct kset_uevent_ops {
   int (*filter)(struct kset *, struct kobject *) ;
   char *(*name)(struct kset *, struct kobject *) ;
   int (*uevent)(struct kset *, struct kobject *, struct kobj_uevent_env *) ;
};
#line 193  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kobject.h"
struct kset {
   struct list_head list ;
   spinlock_t list_lock ;
   struct kobject kobj ;
   struct kset_uevent_ops *uevent_ops ;
} __attribute__((__designated_init__));
#line 247 
struct kernel_param;
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/moduleparam.h"
struct kernel_param_ops {
   unsigned int flags ;
   int (*set)(char *, struct kernel_param *) ;
   int (*get)(char *, struct kernel_param *) ;
   void (*free)(void *) ;
};
#line 69 
struct kparam_string;
#line 69 
struct kparam_array;
#line 69  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/moduleparam.h"
union __anonunion_396 {
   void *arg ;
   struct kparam_string *str ;
   struct kparam_array *arr ;
};
#line 69  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/moduleparam.h"
struct kernel_param {
   char *name ;
   struct module *mod ;
   struct kernel_param_ops *ops ;
   u16 perm ;
   s8 level ;
   u8 flags ;
   union __anonunion_396 __anonCompField_kernel_param_58 ;
};
#line 86  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/moduleparam.h"
struct kparam_string {
   unsigned int maxlen ;
   char *string ;
};
#line 92  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/moduleparam.h"
struct kparam_array {
   unsigned int max ;
   unsigned int elemsize ;
   unsigned int *num ;
   struct kernel_param_ops *ops ;
   void *elem ;
};
#line 40  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rbtree_latch.h"
struct latch_tree_node {
   struct rb_node node[2U] ;
};
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/error-injection.h"
struct error_injection_entry {
   unsigned long addr ;
   int etype ;
};
#line 8  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/module.h"
struct mod_arch_specific {
   unsigned int num_orcs ;
   int *orc_unwind_ip ;
   struct orc_entry *orc_unwind ;
};
#line 45  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
struct module_param_attrs;
#line 45  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
struct module_kobject {
   struct kobject kobj ;
   struct module *mod ;
   struct kobject *drivers_dir ;
   struct module_param_attrs *mp ;
   struct completion *kobj_completion ;
} __attribute__((__designated_init__));
#line 53  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
struct module_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct module_attribute *, struct module_kobject *, char *) ;
   ssize_t (*store)(struct module_attribute *, struct module_kobject *, char *, size_t ) ;
   void (*setup)(struct module *, char *) ;
   int (*test)(struct module *) ;
   void (*free)(struct module *) ;
};
#line 297 
enum module_state {
    MODULE_STATE_LIVE = 0,
    MODULE_STATE_COMING = 1,
    MODULE_STATE_GOING = 2,
    MODULE_STATE_UNFORMED = 3
};
#line 305  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
struct mod_tree_node {
   struct module *mod ;
   struct latch_tree_node node ;
};
#line 310  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
struct module_layout {
   void *base ;
   unsigned int size ;
   unsigned int text_size ;
   unsigned int ro_size ;
   unsigned int ro_after_init_size ;
   struct mod_tree_node mtn ;
};
#line 334  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
struct mod_kallsyms {
   Elf64_Sym *symtab ;
   unsigned int num_symtab ;
   char *strtab ;
   char *typetab ;
};
#line 342  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
struct klp_modinfo {
   Elf64_Ehdr hdr ;
   Elf64_Shdr *sechdrs ;
   char *secstrings ;
   unsigned int symndx ;
};
#line 350 
struct module_sect_attrs;
#line 350 
struct module_notes_attrs;
#line 350 
struct trace_event_call;
#line 350 
struct trace_eval_map;
#line 350  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
struct module {
   enum module_state state ;
   struct list_head list ;
   char name[56U] ;
   struct module_kobject mkobj ;
   struct module_attribute *modinfo_attrs ;
   char *version ;
   char *srcversion ;
   struct kobject *holders_dir ;
   struct kernel_symbol *syms ;
   s32 *crcs ;
   unsigned int num_syms ;
   struct mutex param_lock ;
   struct kernel_param *kp ;
   unsigned int num_kp ;
   unsigned int num_gpl_syms ;
   struct kernel_symbol *gpl_syms ;
   s32 *gpl_crcs ;
   struct kernel_symbol *unused_syms ;
   s32 *unused_crcs ;
   unsigned int num_unused_syms ;
   unsigned int num_unused_gpl_syms ;
   struct kernel_symbol *unused_gpl_syms ;
   s32 *unused_gpl_crcs ;
   bool sig_ok ;
   bool async_probe_requested ;
   struct kernel_symbol *gpl_future_syms ;
   s32 *gpl_future_crcs ;
   unsigned int num_gpl_future_syms ;
   unsigned int num_exentries ;
   struct exception_table_entry *extable ;
   int (*init)(void) ;
   struct module_layout core_layout ;
   struct module_layout init_layout ;
   struct mod_arch_specific arch ;
   unsigned long taints ;
   unsigned int num_bugs ;
   struct list_head bug_list ;
   struct bug_entry *bug_table ;
   struct mod_kallsyms *kallsyms ;
   struct mod_kallsyms core_kallsyms ;
   struct module_sect_attrs *sect_attrs ;
   struct module_notes_attrs *notes_attrs ;
   char *args ;
   void *percpu ;
   unsigned int percpu_size ;
   unsigned int num_tracepoints ;
   tracepoint_ptr_t *tracepoints_ptrs ;
   unsigned int num_srcu_structs ;
   struct srcu_struct **srcu_struct_ptrs ;
   unsigned int num_bpf_raw_events ;
   struct bpf_raw_event_map *bpf_raw_events ;
   struct jump_entry *jump_entries ;
   unsigned int num_jump_entries ;
   unsigned int num_trace_bprintk_fmt ;
   char **trace_bprintk_fmt_start ;
   struct trace_event_call **trace_events ;
   unsigned int num_trace_events ;
   struct trace_eval_map **trace_evals ;
   unsigned int num_trace_evals ;
   unsigned int num_ftrace_callsites ;
   unsigned long *ftrace_callsites ;
   bool klp ;
   bool klp_alive ;
   struct klp_modinfo *klp_info ;
   struct list_head source_list ;
   struct list_head target_list ;
   void (*exit)(void) ;
   atomic_t refcnt ;
   ctor_fn_t *ctors ;
   unsigned int num_ctors ;
   struct error_injection_entry *ei_funcs ;
   unsigned int num_ei_funcs ;
} __attribute__((__designated_init__, __aligned__(64)));
#line 41  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dynamic_queue_limits.h"
struct dql {
   unsigned int num_queued ;
   unsigned int adj_limit ;
   unsigned int last_obj_cnt ;
   unsigned int limit ;
   unsigned int num_completed ;
   unsigned int prev_ovlimit ;
   unsigned int prev_num_queued ;
   unsigned int prev_last_obj_cnt ;
   unsigned int lowest_slack ;
   unsigned long slack_start_time ;
   unsigned int max_limit ;
   unsigned int min_limit ;
   unsigned int slack_hold_time ;
};
#line 103 
struct scatterlist;
#line 105 
struct crypto_tfm;
#line 106 
struct crypto_type;
#line 215  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/crypto.h"
struct cipher_alg {
   unsigned int cia_min_keysize ;
   unsigned int cia_max_keysize ;
   int (*cia_setkey)(struct crypto_tfm *, u8 *, unsigned int ) ;
   void (*cia_encrypt)(struct crypto_tfm *, u8 *, u8 *) ;
   void (*cia_decrypt)(struct crypto_tfm *, u8 *, u8 *) ;
};
#line 235  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/crypto.h"
struct compress_alg {
   int (*coa_compress)(struct crypto_tfm *, u8 *, unsigned int , u8 *, unsigned int *) ;
   int (*coa_decompress)(struct crypto_tfm *, u8 *, unsigned int , u8 *, unsigned int *) ;
};
#line 251  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/crypto.h"
struct crypto_istat_aead {
   atomic64_t encrypt_cnt ;
   atomic64_t encrypt_tlen ;
   atomic64_t decrypt_cnt ;
   atomic64_t decrypt_tlen ;
   atomic64_t err_cnt ;
};
#line 269  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/crypto.h"
struct crypto_istat_akcipher {
   atomic64_t encrypt_cnt ;
   atomic64_t encrypt_tlen ;
   atomic64_t decrypt_cnt ;
   atomic64_t decrypt_tlen ;
   atomic64_t verify_cnt ;
   atomic64_t sign_cnt ;
   atomic64_t err_cnt ;
};
#line 287  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/crypto.h"
struct crypto_istat_cipher {
   atomic64_t encrypt_cnt ;
   atomic64_t encrypt_tlen ;
   atomic64_t decrypt_cnt ;
   atomic64_t decrypt_tlen ;
   atomic64_t err_cnt ;
};
#line 303  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/crypto.h"
struct crypto_istat_compress {
   atomic64_t compress_cnt ;
   atomic64_t compress_tlen ;
   atomic64_t decompress_cnt ;
   atomic64_t decompress_tlen ;
   atomic64_t err_cnt ;
};
#line 317  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/crypto.h"
struct crypto_istat_hash {
   atomic64_t hash_cnt ;
   atomic64_t hash_tlen ;
   atomic64_t err_cnt ;
};
#line 330  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/crypto.h"
struct crypto_istat_kpp {
   atomic64_t setsecret_cnt ;
   atomic64_t generate_public_key_cnt ;
   atomic64_t compute_shared_secret_cnt ;
   atomic64_t err_cnt ;
};
#line 344  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/crypto.h"
struct crypto_istat_rng {
   atomic64_t generate_cnt ;
   atomic64_t generate_tlen ;
   atomic64_t seed_cnt ;
   atomic64_t err_cnt ;
};
#line 442  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/crypto.h"
union __anonunion_cra_u_407 {
   struct cipher_alg cipher ;
   struct compress_alg compress ;
};
#line 442  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/crypto.h"
union __anonunion_stats_408 {
   struct crypto_istat_aead aead ;
   struct crypto_istat_akcipher akcipher ;
   struct crypto_istat_cipher cipher ;
   struct crypto_istat_compress compress ;
   struct crypto_istat_hash hash ;
   struct crypto_istat_rng rng ;
   struct crypto_istat_kpp kpp ;
};
#line 442  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/crypto.h"
struct crypto_alg {
   struct list_head cra_list ;
   struct list_head cra_users ;
   u32 cra_flags ;
   unsigned int cra_blocksize ;
   unsigned int cra_ctxsize ;
   unsigned int cra_alignmask ;
   int cra_priority ;
   refcount_t cra_refcnt ;
   char cra_name[128U] ;
   char cra_driver_name[128U] ;
   struct crypto_type *cra_type ;
   union __anonunion_cra_u_407 cra_u ;
   int (*cra_init)(struct crypto_tfm *) ;
   void (*cra_exit)(struct crypto_tfm *) ;
   void (*cra_destroy)(struct crypto_alg *) ;
   struct module *cra_module ;
   union __anonunion_stats_408 stats ;
} __attribute__((__aligned__(8)));
#line 602  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/crypto.h"
struct cipher_tfm {
   int (*cit_setkey)(struct crypto_tfm *, u8 *, unsigned int ) ;
   void (*cit_encrypt_one)(struct crypto_tfm *, u8 *, u8 *) ;
   void (*cit_decrypt_one)(struct crypto_tfm *, u8 *, u8 *) ;
};
#line 609  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/crypto.h"
struct compress_tfm {
   int (*cot_compress)(struct crypto_tfm *, u8 *, unsigned int , u8 *, unsigned int *) ;
   int (*cot_decompress)(struct crypto_tfm *, u8 *, unsigned int , u8 *, unsigned int *) ;
};
#line 621  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/crypto.h"
union __anonunion_crt_u_409 {
   struct cipher_tfm cipher ;
   struct compress_tfm compress ;
};
#line 621  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/crypto.h"
struct crypto_tfm {
   u32 crt_flags ;
   union __anonunion_crt_u_409 crt_u ;
   void (*exit)(struct crypto_tfm *) ;
   struct crypto_alg *__crt_alg ;
   void *__crt_ctx[] ;
};
#line 142  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/crypto/hash.h"
struct crypto_shash;
#line 142  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/crypto/hash.h"
struct shash_desc {
   struct crypto_shash *tfm ;
   void *__ctx[] ;
};
#line 179  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/crypto/hash.h"
struct shash_alg {
   int (*init)(struct shash_desc *) ;
   int (*update)(struct shash_desc *, u8 *, unsigned int ) ;
   int (*final)(struct shash_desc *, u8 *) ;
   int (*finup)(struct shash_desc *, u8 *, unsigned int , u8 *) ;
   int (*digest)(struct shash_desc *, u8 *, unsigned int , u8 *) ;
   int (*export)(struct shash_desc *, void *) ;
   int (*import)(struct shash_desc *, void *) ;
   int (*setkey)(struct crypto_shash *, u8 *, unsigned int ) ;
   unsigned int descsize ;
   unsigned int digestsize ;
   unsigned int statesize ;
   struct crypto_alg base ;
};
#line 218  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/crypto/hash.h"
struct crypto_shash {
   unsigned int descsize ;
   struct crypto_tfm base ;
};
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/uio.h"
struct iovec {
   void *iov_base ;
   __kernel_size_t iov_len ;
};
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uio.h"
struct kvec {
   void *iov_base ;
   size_t iov_len ;
};
#line 30 
struct bio_vec;
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uio.h"
union __anonunion_410 {
   struct iovec *iov ;
   struct kvec *kvec ;
   struct bio_vec *bvec ;
   struct pipe_inode_info *pipe ;
};
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uio.h"
struct __anonstruct_412 {
   unsigned int head ;
   unsigned int start_head ;
};
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uio.h"
union __anonunion_411 {
   unsigned long nr_segs ;
   struct __anonstruct_412 __anonCompField___anonunion_411_60 ;
};
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uio.h"
struct iov_iter {
   unsigned int type ;
   size_t iov_offset ;
   size_t count ;
   union __anonunion_410 __anonCompField_iov_iter_59 ;
   union __anonunion_411 __anonCompField_iov_iter_61 ;
};
#line 285  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uio.h"
typedef unsigned short __kernel_sa_family_t;
#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/socket.h"
struct socket;
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/socket.h"
typedef __kernel_sa_family_t sa_family_t;
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/socket.h"
struct sockaddr {
   sa_family_t sa_family ;
   char sa_data[14U] ;
};
#line 49 
struct kiocb;
#line 49  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/socket.h"
struct msghdr {
   void *msg_name ;
   int msg_namelen ;
   struct iov_iter msg_iter ;
   void *msg_control ;
   __kernel_size_t msg_controllen ;
   unsigned int msg_flags ;
   struct kiocb *msg_iocb ;
};
#line 422 
struct ns_common;
#line 423  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/socket.h"
struct __anonstruct_sync_serial_settings_415 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
};
#line 423  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/socket.h"
typedef struct __anonstruct_sync_serial_settings_415 sync_serial_settings;
#line 45  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_te1_settings_416 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
   unsigned int slot_map ;
};
#line 45  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_te1_settings_416 te1_settings;
#line 52  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_raw_hdlc_proto_417 {
   unsigned short encoding ;
   unsigned short parity ;
};
#line 52  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_raw_hdlc_proto_417 raw_hdlc_proto;
#line 57  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_418 {
   unsigned int t391 ;
   unsigned int t392 ;
   unsigned int n391 ;
   unsigned int n392 ;
   unsigned int n393 ;
   unsigned short lmi ;
   unsigned short dce ;
};
#line 57  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_418 fr_proto;
#line 67  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_419 {
   unsigned int dlci ;
};
#line 67  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_419 fr_proto_pvc;
#line 71  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_info_420 {
   unsigned int dlci ;
   char master[16U] ;
};
#line 71  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_info_420 fr_proto_pvc_info;
#line 76  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_cisco_proto_421 {
   unsigned int interval ;
   unsigned int timeout ;
};
#line 76  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_cisco_proto_421 cisco_proto;
#line 195  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if.h"
struct ifmap {
   unsigned long mem_start ;
   unsigned long mem_end ;
   unsigned short base_addr ;
   unsigned char irq ;
   unsigned char dma ;
   unsigned char port ;
};
#line 206  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if.h"
union __anonunion_ifs_ifsu_422 {
   raw_hdlc_proto *raw_hdlc ;
   cisco_proto *cisco ;
   fr_proto *fr ;
   fr_proto_pvc *fr_pvc ;
   fr_proto_pvc_info *fr_pvc_info ;
   sync_serial_settings *sync ;
   te1_settings *te1 ;
};
#line 206  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if.h"
struct if_settings {
   unsigned int type ;
   unsigned int size ;
   union __anonunion_ifs_ifsu_422 ifs_ifsu ;
};
#line 232  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if.h"
union __anonunion_ifr_ifrn_423 {
   char ifrn_name[16U] ;
};
#line 232  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if.h"
union __anonunion_ifr_ifru_424 {
   struct sockaddr ifru_addr ;
   struct sockaddr ifru_dstaddr ;
   struct sockaddr ifru_broadaddr ;
   struct sockaddr ifru_netmask ;
   struct sockaddr ifru_hwaddr ;
   short ifru_flags ;
   int ifru_ivalue ;
   int ifru_mtu ;
   struct ifmap ifru_map ;
   char ifru_slave[16U] ;
   char ifru_newname[16U] ;
   void *ifru_data ;
   struct if_settings ifru_settings ;
};
#line 232  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if.h"
struct ifreq {
   union __anonunion_ifr_ifrn_423 ifr_ifrn ;
   union __anonunion_ifr_ifru_424 ifr_ifru ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_bl.h"
struct hlist_bl_node;
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_bl.h"
struct hlist_bl_head {
   struct hlist_bl_node *first ;
};
#line 38  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_bl.h"
struct hlist_bl_node {
   struct hlist_bl_node *next ;
   struct hlist_bl_node **pprev ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockref.h"
struct __anonstruct_439 {
   spinlock_t lock ;
   int count ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockref.h"
union __anonunion_438 {
   struct __anonstruct_439 __anonCompField___anonunion_438_64 ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockref.h"
struct lockref {
   union __anonunion_438 __anonCompField_lockref_65 ;
};
#line 78  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/stringhash.h"
struct path;
#line 79 
struct vfsmount;
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dcache.h"
struct __anonstruct_441 {
   u32 hash ;
   u32 len ;
};
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dcache.h"
union __anonunion_440 {
   struct __anonstruct_441 __anonCompField___anonunion_440_66 ;
   u64 hash_len ;
};
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dcache.h"
struct qstr {
   union __anonunion_440 __anonCompField_qstr_67 ;
   unsigned char *name ;
};
#line 89 
struct dentry_operations;
#line 89  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dcache.h"
union __anonunion_442 {
   struct list_head d_lru ;
   wait_queue_head_t *d_wait ;
};
#line 89  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dcache.h"
union __anonunion_d_u_443 {
   struct hlist_node d_alias ;
   struct hlist_bl_node d_in_lookup_hash ;
   struct callback_head d_rcu ;
};
#line 89  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dcache.h"
struct dentry {
   unsigned int d_flags ;
   seqcount_t d_seq ;
   struct hlist_bl_node d_hash ;
   struct dentry *d_parent ;
   struct qstr d_name ;
   struct inode *d_inode ;
   unsigned char d_iname[32U] ;
   struct lockref d_lockref ;
   struct dentry_operations *d_op ;
   struct super_block *d_sb ;
   unsigned long d_time ;
   void *d_fsdata ;
   union __anonunion_442 __anonCompField_dentry_68 ;
   struct list_head d_child ;
   struct list_head d_subdirs ;
   union __anonunion_d_u_443 d_u ;
} __attribute__((__designated_init__));
#line 135  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dcache.h"
struct dentry_operations {
   int (*d_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_weak_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_hash)(struct dentry *, struct qstr *) ;
   int (*d_compare)(struct dentry *, unsigned int , char *, struct qstr *) ;
   int (*d_delete)(struct dentry *) ;
   int (*d_init)(struct dentry *) ;
   void (*d_release)(struct dentry *) ;
   void (*d_prune)(struct dentry *) ;
   void (*d_iput)(struct dentry *, struct inode *) ;
   char *(*d_dname)(struct dentry *, char *, int ) ;
   struct vfsmount *(*d_automount)(struct path *) ;
   int (*d_manage)(struct path *, bool ) ;
   struct dentry *(*d_real)(struct dentry *, struct inode *) ;
} __attribute__((__aligned__(64)));
#line 8  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/path.h"
struct path {
   struct vfsmount *mnt ;
   struct dentry *dentry ;
} __attribute__((__designated_init__));
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/shrinker.h"
struct shrink_control {
   gfp_t gfp_mask ;
   int nid ;
   unsigned long nr_to_scan ;
   unsigned long nr_scanned ;
   struct mem_cgroup *memcg ;
};
#line 60  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/shrinker.h"
struct shrinker {
   unsigned long (*count_objects)(struct shrinker *, struct shrink_control *) ;
   unsigned long (*scan_objects)(struct shrinker *, struct shrink_control *) ;
   long batch ;
   int seeks ;
   unsigned int flags ;
   struct list_head list ;
   int id ;
   atomic_long_t *nr_deferred ;
};
#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_lru.h"
struct list_lru_one {
   struct list_head list ;
   long nr_items ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_lru.h"
struct list_lru_memcg {
   struct callback_head rcu ;
   struct list_lru_one *lru[0U] ;
};
#line 40  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_lru.h"
struct list_lru_node {
   spinlock_t lock ;
   struct list_lru_one lru ;
   struct list_lru_memcg *memcg_lrus ;
   long nr_items ;
} __attribute__((__aligned__(64)));
#line 52  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_lru.h"
struct list_lru {
   struct list_lru_node *node ;
   struct list_head list ;
   int shrinker_id ;
   bool memcg_aware ;
};
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/capability.h"
struct kernel_cap_struct {
   __u32 cap[2U] ;
};
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/capability.h"
typedef struct kernel_cap_struct kernel_cap_t;
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fiemap.h"
struct fiemap_extent {
   __u64 fe_logical ;
   __u64 fe_physical ;
   __u64 fe_length ;
   __u64 fe_reserved64[2U] ;
   __u32 fe_flags ;
   __u32 fe_reserved[3U] ;
};
#line 39 
enum migrate_mode {
    MIGRATE_ASYNC = 0,
    MIGRATE_SYNC_LIGHT = 1,
    MIGRATE_SYNC = 2,
    MIGRATE_SYNC_NO_COPY = 3
};
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rcuwait.h"
struct rcuwait {
   struct task_struct *task ;
};
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rcu_sync.h"
struct rcu_sync {
   int gp_state ;
   int gp_count ;
   wait_queue_head_t gp_wait ;
   struct callback_head cb_head ;
};
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/percpu-rwsem.h"
struct percpu_rw_semaphore {
   struct rcu_sync rss ;
   unsigned int *read_count ;
   struct rw_semaphore rw_sem ;
   struct rcuwait writer ;
   int readers_block ;
};
#line 10  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/delayed_call.h"
struct delayed_call {
   void (*fn)(void *) ;
   void *arg ;
};
#line 36  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/uuid.h"
struct __anonstruct_uuid_t_451 {
   __u8 b[16U] ;
};
#line 36  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/uuid.h"
typedef struct __anonstruct_uuid_t_451 uuid_t;
#line 87  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uuid.h"
typedef u32 errseq_t;
#line 72  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/iocontext.h"
union __anonunion_452 {
   struct list_head q_node ;
   struct kmem_cache *__rcu_icq_cache ;
};
#line 72  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/iocontext.h"
union __anonunion_453 {
   struct hlist_node ioc_node ;
   struct callback_head __rcu_head ;
};
#line 72  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/iocontext.h"
struct io_cq {
   struct request_queue *q ;
   struct io_context *ioc ;
   union __anonunion_452 __anonCompField_io_cq_69 ;
   union __anonunion_453 __anonCompField_io_cq_70 ;
   unsigned int flags ;
};
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/iocontext.h"
struct io_context {
   atomic_long_t refcount ;
   atomic_t active_ref ;
   atomic_t nr_tasks ;
   spinlock_t lock ;
   unsigned short ioprio ;
   int nr_batch_requests ;
   unsigned long last_waited ;
   struct xarray icq_tree ;
   struct io_cq *icq_hint ;
   struct hlist_head icq_list ;
   struct work_struct release_work ;
};
#line 286  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fs.h"
struct bdi_writeback;
#line 287 
struct bio;
#line 288 
struct export_operations;
#line 289 
struct hd_geometry;
#line 290 
struct kstatfs;
#line 291 
struct swap_info_struct;
#line 292 
struct fscrypt_info;
#line 293 
struct fscrypt_operations;
#line 294 
struct fsverity_info;
#line 295 
struct fsverity_operations;
#line 296 
struct fs_parameter_description;
#line 224  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct iattr {
   unsigned int ia_valid ;
   umode_t ia_mode ;
   kuid_t ia_uid ;
   kgid_t ia_gid ;
   loff_t ia_size ;
   struct timespec64 ia_atime ;
   struct timespec64 ia_mtime ;
   struct timespec64 ia_ctime ;
   struct file *ia_file ;
};
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/percpu_counter.h"
struct percpu_counter {
   raw_spinlock_t lock ;
   s64 count ;
   struct list_head list ;
   s32 *counters ;
};
#line 214  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dqblk_xfs.h"
struct dquot;
#line 215 
struct kqid;
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/projid.h"
typedef __kernel_uid32_t projid_t;
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/projid.h"
struct __anonstruct_kprojid_t_454 {
   projid_t val ;
};
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/projid.h"
typedef struct __anonstruct_kprojid_t_454 kprojid_t;
#line 180  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/quota.h"
enum quota_type {
    USRQUOTA = 0,
    GRPQUOTA = 1,
    PRJQUOTA = 2
};
#line 66  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
typedef long long qsize_t;
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
union __anonunion_455 {
   kuid_t uid ;
   kgid_t gid ;
   kprojid_t projid ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct kqid {
   union __anonunion_455 __anonCompField_kqid_71 ;
   enum quota_type type ;
};
#line 205  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct mem_dqblk {
   qsize_t dqb_bhardlimit ;
   qsize_t dqb_bsoftlimit ;
   qsize_t dqb_curspace ;
   qsize_t dqb_rsvspace ;
   qsize_t dqb_ihardlimit ;
   qsize_t dqb_isoftlimit ;
   qsize_t dqb_curinodes ;
   time64_t dqb_btime ;
   time64_t dqb_itime ;
};
#line 216 
struct quota_format_type;
#line 222  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct mem_dqinfo {
   struct quota_format_type *dqi_format ;
   int dqi_fmt_id ;
   struct list_head dqi_dirty_list ;
   unsigned long dqi_flags ;
   unsigned int dqi_bgrace ;
   unsigned int dqi_igrace ;
   qsize_t dqi_max_spc_limit ;
   qsize_t dqi_max_ino_limit ;
   void *dqi_priv ;
};
#line 294  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct dquot {
   struct hlist_node dq_hash ;
   struct list_head dq_inuse ;
   struct list_head dq_free ;
   struct list_head dq_dirty ;
   struct mutex dq_lock ;
   spinlock_t dq_dqb_lock ;
   atomic_t dq_count ;
   struct super_block *dq_sb ;
   struct kqid dq_id ;
   loff_t dq_off ;
   unsigned long dq_flags ;
   struct mem_dqblk dq_dqb ;
};
#line 310  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct quota_format_ops {
   int (*check_quota_file)(struct super_block *, int ) ;
   int (*read_file_info)(struct super_block *, int ) ;
   int (*write_file_info)(struct super_block *, int ) ;
   int (*free_file_info)(struct super_block *, int ) ;
   int (*read_dqblk)(struct dquot *) ;
   int (*commit_dqblk)(struct dquot *) ;
   int (*release_dqblk)(struct dquot *) ;
   int (*get_next_id)(struct super_block *, struct kqid *) ;
};
#line 322  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct dquot_operations {
   int (*write_dquot)(struct dquot *) ;
   struct dquot *(*alloc_dquot)(struct super_block *, int ) ;
   void (*destroy_dquot)(struct dquot *) ;
   int (*acquire_dquot)(struct dquot *) ;
   int (*release_dquot)(struct dquot *) ;
   int (*mark_dirty)(struct dquot *) ;
   int (*write_info)(struct super_block *, int ) ;
   qsize_t *(*get_reserved_space)(struct inode *) ;
   int (*get_projid)(struct inode *, kprojid_t *) ;
   int (*get_inode_usage)(struct inode *, qsize_t *) ;
   int (*get_next_id)(struct super_block *, struct kqid *) ;
};
#line 343  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct qc_dqblk {
   int d_fieldmask ;
   u64 d_spc_hardlimit ;
   u64 d_spc_softlimit ;
   u64 d_ino_hardlimit ;
   u64 d_ino_softlimit ;
   u64 d_space ;
   u64 d_ino_count ;
   s64 d_ino_timer ;
   s64 d_spc_timer ;
   int d_ino_warns ;
   int d_spc_warns ;
   u64 d_rt_spc_hardlimit ;
   u64 d_rt_spc_softlimit ;
   u64 d_rt_space ;
   s64 d_rt_spc_timer ;
   int d_rt_spc_warns ;
};
#line 395  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct qc_type_state {
   unsigned int flags ;
   unsigned int spc_timelimit ;
   unsigned int ino_timelimit ;
   unsigned int rt_spc_timelimit ;
   unsigned int spc_warnlimit ;
   unsigned int ino_warnlimit ;
   unsigned int rt_spc_warnlimit ;
   unsigned long long ino ;
   blkcnt_t blocks ;
   blkcnt_t nextents ;
};
#line 409  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct qc_state {
   unsigned int s_incoredqs ;
   struct qc_type_state s_state[3U] ;
};
#line 415  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct qc_info {
   int i_fieldmask ;
   unsigned int i_flags ;
   unsigned int i_spc_timelimit ;
   unsigned int i_ino_timelimit ;
   unsigned int i_rt_spc_timelimit ;
   unsigned int i_spc_warnlimit ;
   unsigned int i_ino_warnlimit ;
   unsigned int i_rt_spc_warnlimit ;
};
#line 428  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct quotactl_ops {
   int (*quota_on)(struct super_block *, int , int , struct path *) ;
   int (*quota_off)(struct super_block *, int ) ;
   int (*quota_enable)(struct super_block *, unsigned int ) ;
   int (*quota_disable)(struct super_block *, unsigned int ) ;
   int (*quota_sync)(struct super_block *, int ) ;
   int (*set_info)(struct super_block *, int , struct qc_info *) ;
   int (*get_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*get_nextdqblk)(struct super_block *, struct kqid *, struct qc_dqblk *) ;
   int (*set_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*get_state)(struct super_block *, struct qc_state *) ;
   int (*rm_xquota)(struct super_block *, unsigned int ) ;
};
#line 443  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct quota_format_type {
   int qf_fmt_id ;
   struct quota_format_ops *qf_ops ;
   struct module *qf_owner ;
   struct quota_format_type *qf_next ;
};
#line 518  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct quota_info {
   unsigned int flags ;
   struct rw_semaphore dqio_sem ;
   struct inode *files[3U] ;
   struct mem_dqinfo info[3U] ;
   struct quota_format_ops *ops[3U] ;
};
#line 538 
struct writeback_control;
#line 539 
enum rw_hint {
    WRITE_LIFE_NOT_SET = 0,
    WRITE_LIFE_NONE = 1,
    WRITE_LIFE_SHORT = 2,
    WRITE_LIFE_MEDIUM = 3,
    WRITE_LIFE_LONG = 4,
    WRITE_LIFE_EXTREME = 5
};
#line 318  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct kiocb {
   struct file *ki_filp ;
   loff_t ki_pos ;
   void (*ki_complete)(struct kiocb *, long , long ) ;
   void *private ;
   int ki_flags ;
   u16 ki_hint ;
   u16 ki_ioprio ;
   unsigned int ki_cookie ;
};
#line 339  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
union __anonunion_arg_457 {
   char *buf ;
   void *data ;
};
#line 339  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct __anonstruct_read_descriptor_t_456 {
   size_t written ;
   size_t count ;
   union __anonunion_arg_457 arg ;
   int error ;
};
#line 339  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
typedef struct __anonstruct_read_descriptor_t_456 read_descriptor_t;
#line 362  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct address_space_operations {
   int (*writepage)(struct page *, struct writeback_control *) ;
   int (*readpage)(struct file *, struct page *) ;
   int (*writepages)(struct address_space *, struct writeback_control *) ;
   int (*set_page_dirty)(struct page *) ;
   int (*readpages)(struct file *, struct address_space *, struct list_head *, unsigned int ) ;
   int (*write_begin)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page **, void **) ;
   int (*write_end)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page *, void *) ;
   sector_t (*bmap)(struct address_space *, sector_t ) ;
   void (*invalidatepage)(struct page *, unsigned int , unsigned int ) ;
   int (*releasepage)(struct page *, gfp_t ) ;
   void (*freepage)(struct page *) ;
   ssize_t (*direct_IO)(struct kiocb *, struct iov_iter *) ;
   int (*migratepage)(struct address_space *, struct page *, struct page *, enum migrate_mode ) ;
   bool (*isolate_page)(struct page *, isolate_mode_t ) ;
   void (*putback_page)(struct page *) ;
   int (*launder_page)(struct page *) ;
   int (*is_partially_uptodate)(struct page *, unsigned long , unsigned long ) ;
   void (*is_dirty_writeback)(struct page *, bool *, bool *) ;
   int (*error_remove_page)(struct address_space *, struct page *) ;
   int (*swap_activate)(struct swap_info_struct *, struct file *, sector_t *) ;
   void (*swap_deactivate)(struct file *) ;
};
#line 445  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct address_space {
   struct inode *host ;
   struct xarray i_pages ;
   gfp_t gfp_mask ;
   atomic_t i_mmap_writable ;
   atomic_t nr_thps ;
   struct rb_root_cached i_mmap ;
   struct rw_semaphore i_mmap_rwsem ;
   unsigned long nrpages ;
   unsigned long nrexceptional ;
   unsigned long writeback_index ;
   struct address_space_operations *a_ops ;
   unsigned long flags ;
   errseq_t wb_err ;
   spinlock_t private_lock ;
   struct list_head private_list ;
   void *private_data ;
} __attribute__((__designated_init__, __aligned__(8)));
#line 473 
struct hd_struct;
#line 473 
struct gendisk;
#line 473  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct block_device {
   dev_t bd_dev ;
   int bd_openers ;
   struct inode *bd_inode ;
   struct super_block *bd_super ;
   struct mutex bd_mutex ;
   void *bd_claiming ;
   void *bd_holder ;
   int bd_holders ;
   bool bd_write_holder ;
   struct list_head bd_holder_disks ;
   struct block_device *bd_contains ;
   unsigned int bd_block_size ;
   u8 bd_partno ;
   struct hd_struct *bd_part ;
   unsigned int bd_part_count ;
   int bd_invalidated ;
   struct gendisk *bd_disk ;
   struct request_queue *bd_queue ;
   struct backing_dev_info *bd_bdi ;
   struct list_head bd_list ;
   unsigned long bd_private ;
   int bd_fsfreeze_count ;
   struct mutex bd_fsfreeze_mutex ;
} __attribute__((__designated_init__));
#line 587 
struct posix_acl;
#line 614 
struct fsnotify_mark_connector;
#line 628 
struct inode_operations;
#line 628  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
union __anonunion_460 {
   unsigned int i_nlink ;
   unsigned int __i_nlink ;
};
#line 628  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
union __anonunion_461 {
   struct hlist_head i_dentry ;
   struct callback_head i_rcu ;
};
#line 628  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
union __anonunion_462 {
   struct file_operations *i_fop ;
   void (*free_inode)(struct inode *) ;
};
#line 628 
struct file_lock_context;
#line 628  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
union __anonunion_463 {
   struct pipe_inode_info *i_pipe ;
   struct block_device *i_bdev ;
   struct cdev *i_cdev ;
   char *i_link ;
   unsigned int i_dir_seq ;
};
#line 628  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct inode {
   umode_t i_mode ;
   unsigned short i_opflags ;
   kuid_t i_uid ;
   kgid_t i_gid ;
   unsigned int i_flags ;
   struct posix_acl *i_acl ;
   struct posix_acl *i_default_acl ;
   struct inode_operations *i_op ;
   struct super_block *i_sb ;
   struct address_space *i_mapping ;
   void *i_security ;
   unsigned long i_ino ;
   union __anonunion_460 __anonCompField_inode_72 ;
   dev_t i_rdev ;
   loff_t i_size ;
   struct timespec64 i_atime ;
   struct timespec64 i_mtime ;
   struct timespec64 i_ctime ;
   spinlock_t i_lock ;
   unsigned short i_bytes ;
   u8 i_blkbits ;
   u8 i_write_hint ;
   blkcnt_t i_blocks ;
   unsigned long i_state ;
   struct rw_semaphore i_rwsem ;
   unsigned long dirtied_when ;
   unsigned long dirtied_time_when ;
   struct hlist_node i_hash ;
   struct list_head i_io_list ;
   struct bdi_writeback *i_wb ;
   int i_wb_frn_winner ;
   u16 i_wb_frn_avg_time ;
   u16 i_wb_frn_history ;
   struct list_head i_lru ;
   struct list_head i_sb_list ;
   struct list_head i_wb_list ;
   union __anonunion_461 __anonCompField_inode_73 ;
   atomic64_t i_version ;
   atomic_t i_count ;
   atomic_t i_dio_count ;
   atomic_t i_writecount ;
   atomic_t i_readcount ;
   union __anonunion_462 __anonCompField_inode_74 ;
   struct file_lock_context *i_flctx ;
   struct address_space i_data ;
   struct list_head i_devices ;
   union __anonunion_463 __anonCompField_inode_75 ;
   __u32 i_generation ;
   __u32 i_fsnotify_mask ;
   struct fsnotify_mark_connector *i_fsnotify_marks ;
   struct fscrypt_info *i_crypt_info ;
   struct fsverity_info *i_verity_info ;
   void *i_private ;
} __attribute__((__designated_init__));
#line 904  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct fown_struct {
   rwlock_t lock ;
   struct pid *pid ;
   enum pid_type pid_type ;
   kuid_t uid ;
   kuid_t euid ;
   int signum ;
};
#line 915  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct file_ra_state {
   unsigned long start ;
   unsigned int size ;
   unsigned int async_size ;
   unsigned int ra_pages ;
   unsigned int mmap_miss ;
   loff_t prev_pos ;
};
#line 935  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
union __anonunion_f_u_464 {
   struct llist_node fu_llist ;
   struct callback_head fu_rcuhead ;
};
#line 935  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct file {
   union __anonunion_f_u_464 f_u ;
   struct path f_path ;
   struct inode *f_inode ;
   struct file_operations *f_op ;
   spinlock_t f_lock ;
   enum rw_hint f_write_hint ;
   atomic_long_t f_count ;
   unsigned int f_flags ;
   fmode_t f_mode ;
   struct mutex f_pos_lock ;
   loff_t f_pos ;
   struct fown_struct f_owner ;
   struct cred *f_cred ;
   struct file_ra_state f_ra ;
   u64 f_version ;
   void *f_security ;
   void *private_data ;
   struct list_head f_ep_links ;
   struct list_head f_tfile_llink ;
   struct address_space *f_mapping ;
   errseq_t f_wb_err ;
} __attribute__((__designated_init__, __aligned__(4)));
#line 988  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
typedef void *fl_owner_t;
#line 1026 
struct file_lock;
#line 1029  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct file_lock_operations {
   void (*fl_copy_lock)(struct file_lock *, struct file_lock *) ;
   void (*fl_release_private)(struct file_lock *) ;
};
#line 1034  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct lock_manager_operations {
   fl_owner_t (*lm_get_owner)(fl_owner_t ) ;
   void (*lm_put_owner)(fl_owner_t ) ;
   void (*lm_notify)(struct file_lock *) ;
   int (*lm_grant)(struct file_lock *, int ) ;
   bool (*lm_break)(struct file_lock *) ;
   int (*lm_change)(struct file_lock *, int , struct list_head *) ;
   void (*lm_setup)(struct file_lock *, void **) ;
};
#line 1052 
struct net;
#line 1058 
struct nlm_lockowner;
#line 10  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/nfs_fs_i.h"
struct nfs_lock_info {
   u32 state ;
   struct nlm_lockowner *owner ;
   struct list_head list ;
};
#line 15 
struct nfs4_lock_state;
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/nfs_fs_i.h"
struct nfs4_lock_info {
   struct nfs4_lock_state *owner ;
};
#line 1079  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct fasync_struct;
#line 1079  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct __anonstruct_afs_466 {
   struct list_head link ;
   int state ;
   unsigned int debug_id ;
};
#line 1079  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
union __anonunion_fl_u_465 {
   struct nfs_lock_info nfs_fl ;
   struct nfs4_lock_info nfs4_fl ;
   struct __anonstruct_afs_466 afs ;
};
#line 1079  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct file_lock {
   struct file_lock *fl_blocker ;
   struct list_head fl_list ;
   struct hlist_node fl_link ;
   struct list_head fl_blocked_requests ;
   struct list_head fl_blocked_member ;
   fl_owner_t fl_owner ;
   unsigned int fl_flags ;
   unsigned char fl_type ;
   unsigned int fl_pid ;
   int fl_link_cpu ;
   wait_queue_head_t fl_wait ;
   struct file *fl_file ;
   loff_t fl_start ;
   loff_t fl_end ;
   struct fasync_struct *fl_fasync ;
   unsigned long fl_break_time ;
   unsigned long fl_downgrade_time ;
   struct file_lock_operations *fl_ops ;
   struct lock_manager_operations *fl_lmops ;
   union __anonunion_fl_u_465 fl_u ;
} __attribute__((__designated_init__));
#line 1117  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct file_lock_context {
   spinlock_t flc_lock ;
   struct list_head flc_flock ;
   struct list_head flc_posix ;
   struct list_head flc_lease ;
};
#line 1331  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct fasync_struct {
   rwlock_t fa_lock ;
   int magic ;
   int fa_fd ;
   struct fasync_struct *fa_next ;
   struct file *fa_file ;
   struct callback_head fa_rcu ;
};
#line 1418  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct sb_writers {
   int frozen ;
   wait_queue_head_t wait_unfrozen ;
   struct percpu_rw_semaphore rw_sem[3U] ;
};
#line 1424 
struct super_operations;
#line 1424 
struct xattr_handler;
#line 1424 
struct mtd_info;
#line 1424  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct super_block {
   struct list_head s_list ;
   dev_t s_dev ;
   unsigned char s_blocksize_bits ;
   unsigned long s_blocksize ;
   loff_t s_maxbytes ;
   struct file_system_type *s_type ;
   struct super_operations *s_op ;
   struct dquot_operations *dq_op ;
   struct quotactl_ops *s_qcop ;
   struct export_operations *s_export_op ;
   unsigned long s_flags ;
   unsigned long s_iflags ;
   unsigned long s_magic ;
   struct dentry *s_root ;
   struct rw_semaphore s_umount ;
   int s_count ;
   atomic_t s_active ;
   void *s_security ;
   struct xattr_handler **s_xattr ;
   struct fscrypt_operations *s_cop ;
   struct key *s_master_keys ;
   struct fsverity_operations *s_vop ;
   struct hlist_bl_head s_roots ;
   struct list_head s_mounts ;
   struct block_device *s_bdev ;
   struct backing_dev_info *s_bdi ;
   struct mtd_info *s_mtd ;
   struct hlist_node s_instances ;
   unsigned int s_quota_types ;
   struct quota_info s_dquot ;
   struct sb_writers s_writers ;
   void *s_fs_info ;
   u32 s_time_gran ;
   time64_t s_time_min ;
   time64_t s_time_max ;
   __u32 s_fsnotify_mask ;
   struct fsnotify_mark_connector *s_fsnotify_marks ;
   char s_id[32U] ;
   uuid_t s_uuid ;
   unsigned int s_max_links ;
   fmode_t s_mode ;
   struct mutex s_vfs_rename_mutex ;
   char *s_subtype ;
   struct dentry_operations *s_d_op ;
   int cleancache_poolid ;
   struct shrinker s_shrink ;
   atomic_long_t s_remove_count ;
   atomic_long_t s_fsnotify_inode_refs ;
   int s_readonly_remount ;
   struct workqueue_struct *s_dio_done_wq ;
   struct hlist_head s_pins ;
   struct user_namespace *s_user_ns ;
   struct list_lru s_dentry_lru ;
   struct list_lru s_inode_lru ;
   struct callback_head rcu ;
   struct work_struct destroy_work ;
   struct mutex s_sync_lock ;
   int s_stack_depth ;
   spinlock_t s_inode_list_lock ;
   struct list_head s_inodes ;
   spinlock_t s_inode_wblist_lock ;
   struct list_head s_inodes_wb ;
} __attribute__((__designated_init__));
#line 1746  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct fiemap_extent_info {
   unsigned int fi_flags ;
   unsigned int fi_extents_mapped ;
   unsigned int fi_extents_max ;
   struct fiemap_extent *fi_extents_start ;
};
#line 1756 
struct dir_context;
#line 1767  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct dir_context {
   int (*actor)(struct dir_context *, char *, int , loff_t , u64 , unsigned int ) ;
   loff_t pos ;
};
#line 1771 
struct block_device_operations;
#line 1821  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct file_operations {
   struct module *owner ;
   loff_t (*llseek)(struct file *, loff_t , int ) ;
   ssize_t (*read)(struct file *, char *, size_t , loff_t *) ;
   ssize_t (*write)(struct file *, char *, size_t , loff_t *) ;
   ssize_t (*read_iter)(struct kiocb *, struct iov_iter *) ;
   ssize_t (*write_iter)(struct kiocb *, struct iov_iter *) ;
   int (*iopoll)(struct kiocb *, bool ) ;
   int (*iterate)(struct file *, struct dir_context *) ;
   int (*iterate_shared)(struct file *, struct dir_context *) ;
   __poll_t (*poll)(struct file *, struct poll_table_struct *) ;
   long (*unlocked_ioctl)(struct file *, unsigned int , unsigned long ) ;
   long (*compat_ioctl)(struct file *, unsigned int , unsigned long ) ;
   int (*mmap)(struct file *, struct vm_area_struct *) ;
   unsigned long mmap_supported_flags ;
   int (*open)(struct inode *, struct file *) ;
   int (*flush)(struct file *, fl_owner_t ) ;
   int (*release)(struct inode *, struct file *) ;
   int (*fsync)(struct file *, loff_t , loff_t , int ) ;
   int (*fasync)(int , struct file *, int ) ;
   int (*lock)(struct file *, int , struct file_lock *) ;
   ssize_t (*sendpage)(struct file *, struct page *, int , size_t , loff_t *, int ) ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   int (*check_flags)(int ) ;
   int (*flock)(struct file *, int , struct file_lock *) ;
   ssize_t (*splice_write)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ) ;
   ssize_t (*splice_read)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ) ;
   int (*setlease)(struct file *, long , struct file_lock **, void **) ;
   long (*fallocate)(struct file *, int , loff_t , loff_t ) ;
   void (*show_fdinfo)(struct seq_file *, struct file *) ;
   ssize_t (*copy_file_range)(struct file *, loff_t , struct file *, loff_t , size_t , unsigned int ) ;
   loff_t (*remap_file_range)(struct file *, loff_t , struct file *, loff_t , loff_t , unsigned int ) ;
   int (*fadvise)(struct file *, loff_t , loff_t , int ) ;
} __attribute__((__designated_init__));
#line 1863  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct inode_operations {
   struct dentry *(*lookup)(struct inode *, struct dentry *, unsigned int ) ;
   char *(*get_link)(struct dentry *, struct inode *, struct delayed_call *) ;
   int (*permission)(struct inode *, int ) ;
   struct posix_acl *(*get_acl)(struct inode *, int ) ;
   int (*readlink)(struct dentry *, char *, int ) ;
   int (*create)(struct inode *, struct dentry *, umode_t , bool ) ;
   int (*link)(struct dentry *, struct inode *, struct dentry *) ;
   int (*unlink)(struct inode *, struct dentry *) ;
   int (*symlink)(struct inode *, struct dentry *, char *) ;
   int (*mkdir)(struct inode *, struct dentry *, umode_t ) ;
   int (*rmdir)(struct inode *, struct dentry *) ;
   int (*mknod)(struct inode *, struct dentry *, umode_t , dev_t ) ;
   int (*rename)(struct inode *, struct dentry *, struct inode *, struct dentry *, unsigned int ) ;
   int (*setattr)(struct dentry *, struct iattr *) ;
   int (*getattr)(struct path *, struct kstat *, u32 , unsigned int ) ;
   ssize_t (*listxattr)(struct dentry *, char *, size_t ) ;
   int (*fiemap)(struct inode *, struct fiemap_extent_info *, u64 , u64 ) ;
   int (*update_time)(struct inode *, struct timespec64 *, int ) ;
   int (*atomic_open)(struct inode *, struct dentry *, struct file *, unsigned int , umode_t ) ;
   int (*tmpfile)(struct inode *, struct dentry *, umode_t ) ;
   int (*set_acl)(struct inode *, struct posix_acl *, int ) ;
} __attribute__((__aligned__(64)));
#line 1942  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct super_operations {
   struct inode *(*alloc_inode)(struct super_block *) ;
   void (*destroy_inode)(struct inode *) ;
   void (*free_inode)(struct inode *) ;
   void (*dirty_inode)(struct inode *, int ) ;
   int (*write_inode)(struct inode *, struct writeback_control *) ;
   int (*drop_inode)(struct inode *) ;
   void (*evict_inode)(struct inode *) ;
   void (*put_super)(struct super_block *) ;
   int (*sync_fs)(struct super_block *, int ) ;
   int (*freeze_super)(struct super_block *) ;
   int (*freeze_fs)(struct super_block *) ;
   int (*thaw_super)(struct super_block *) ;
   int (*unfreeze_fs)(struct super_block *) ;
   int (*statfs)(struct dentry *, struct kstatfs *) ;
   int (*remount_fs)(struct super_block *, int *, char *) ;
   void (*umount_begin)(struct super_block *) ;
   int (*show_options)(struct seq_file *, struct dentry *) ;
   int (*show_devname)(struct seq_file *, struct dentry *) ;
   int (*show_path)(struct seq_file *, struct dentry *) ;
   int (*show_stats)(struct seq_file *, struct dentry *) ;
   ssize_t (*quota_read)(struct super_block *, int , char *, size_t , loff_t ) ;
   ssize_t (*quota_write)(struct super_block *, int , char *, size_t , loff_t ) ;
   struct dquot **(*get_dquots)(struct inode *) ;
   int (*bdev_try_to_free_page)(struct super_block *, struct page *, gfp_t ) ;
   long (*nr_cached_objects)(struct super_block *, struct shrink_control *) ;
   long (*free_cached_objects)(struct super_block *, struct shrink_control *) ;
};
#line 2217  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct file_system_type {
   char *name ;
   int fs_flags ;
   int (*init_fs_context)(struct fs_context *) ;
   struct fs_parameter_description *parameters ;
   struct dentry *(*mount)(struct file_system_type *, int , char *, void *) ;
   void (*kill_sb)(struct super_block *) ;
   struct module *owner ;
   struct file_system_type *next ;
   struct hlist_head fs_supers ;
   struct lock_class_key s_lock_key ;
   struct lock_class_key s_umount_key ;
   struct lock_class_key s_vfs_rename_key ;
   struct lock_class_key s_writers_key[3U] ;
   struct lock_class_key i_lock_key ;
   struct lock_class_key i_mutex_key ;
   struct lock_class_key i_mutex_dir_key ;
};
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/compat.h"
typedef s32 compat_long_t;
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/compat.h"
typedef u32 compat_uptr_t;
#line 367  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/compat.h"
struct compat_robust_list {
   compat_uptr_t next ;
};
#line 371  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/compat.h"
struct compat_robust_list_head {
   struct compat_robust_list list ;
   compat_long_t futex_offset ;
   compat_uptr_t list_op_pending ;
};
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ioport.h"
struct resource {
   resource_size_t start ;
   resource_size_t end ;
   char *name ;
   unsigned long flags ;
   unsigned long desc ;
   struct resource *parent ;
   struct resource *sibling ;
   struct resource *child ;
};
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memremap.h"
struct vmem_altmap {
   unsigned long base_pfn ;
   unsigned long end_pfn ;
   unsigned long reserve ;
   unsigned long free ;
   unsigned long align ;
   unsigned long alloc ;
};
#line 26 
enum memory_type {
    MEMORY_DEVICE_PRIVATE = 1,
    MEMORY_DEVICE_FS_DAX = 2,
    MEMORY_DEVICE_DEVDAX = 3,
    MEMORY_DEVICE_PCI_P2PDMA = 4
};
#line 67  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memremap.h"
struct dev_pagemap_ops {
   void (*page_free)(struct page *) ;
   void (*kill)(struct dev_pagemap *) ;
   void (*cleanup)(struct dev_pagemap *) ;
   vm_fault_t (*migrate_to_ram)(struct vm_fault *) ;
};
#line 107  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memremap.h"
struct dev_pagemap {
   struct vmem_altmap altmap ;
   struct resource res ;
   struct percpu_ref *ref ;
   struct percpu_ref internal_ref ;
   struct completion done ;
   enum memory_type type ;
   unsigned int flags ;
   struct dev_pagemap_ops *ops ;
};
#line 417  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm.h"
struct vm_fault {
   struct vm_area_struct *vma ;
   unsigned int flags ;
   gfp_t gfp_mask ;
   unsigned long pgoff ;
   unsigned long address ;
   pmd_t *pmd ;
   pud_t *pud ;
   pte_t orig_pte ;
   struct page *cow_page ;
   struct mem_cgroup *memcg ;
   struct page *page ;
   pte_t *pte ;
   spinlock_t *ptl ;
   pgtable_t prealloc_pte ;
};
#line 448 
enum page_entry_size {
    PE_SIZE_PTE = 0,
    PE_SIZE_PMD = 1,
    PE_SIZE_PUD = 2
};
#line 467  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm.h"
struct vm_operations_struct {
   void (*open)(struct vm_area_struct *) ;
   void (*close)(struct vm_area_struct *) ;
   int (*split)(struct vm_area_struct *, unsigned long ) ;
   int (*mremap)(struct vm_area_struct *) ;
   vm_fault_t (*fault)(struct vm_fault *) ;
   vm_fault_t (*huge_fault)(struct vm_fault *, enum page_entry_size ) ;
   void (*map_pages)(struct vm_fault *, unsigned long , unsigned long ) ;
   unsigned long (*pagesize)(struct vm_area_struct *) ;
   vm_fault_t (*page_mkwrite)(struct vm_fault *) ;
   vm_fault_t (*pfn_mkwrite)(struct vm_fault *) ;
   int (*access)(struct vm_area_struct *, unsigned long , void *, int , int ) ;
   char *(*name)(struct vm_area_struct *) ;
   int (*set_policy)(struct vm_area_struct *, struct mempolicy *) ;
   struct mempolicy *(*get_policy)(struct vm_area_struct *, unsigned long ) ;
   struct page *(*find_special_page)(struct vm_area_struct *, unsigned long ) ;
};
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bvec.h"
struct bio_vec {
   struct page *bv_page ;
   unsigned int bv_len ;
   unsigned int bv_offset ;
};
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bvec.h"
struct bvec_iter {
   sector_t bi_sector ;
   unsigned int bi_size ;
   unsigned int bi_idx ;
   unsigned int bi_bvec_done ;
};
#line 201  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/random.h"
enum ldv_9936 {
    SS_FREE = 0,
    SS_UNCONNECTED = 1,
    SS_CONNECTING = 2,
    SS_CONNECTED = 3,
    SS_DISCONNECTING = 4
};
#line 209  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/random.h"
typedef enum ldv_9936 socket_state;
#line 94  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/net.h"
struct socket_wq {
   wait_queue_head_t wait ;
   struct fasync_struct *fasync_list ;
   unsigned long flags ;
   struct callback_head rcu ;
} __attribute__((__aligned__(64)));
#line 112 
struct proto_ops;
#line 112  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/net.h"
struct socket {
   socket_state state ;
   short type ;
   unsigned long flags ;
   struct file *file ;
   struct sock *sk ;
   struct proto_ops *ops ;
   struct socket_wq wq ;
};
#line 125 
struct sk_buff;
#line 135  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/net.h"
struct proto_ops {
   int family ;
   struct module *owner ;
   int (*release)(struct socket *) ;
   int (*bind)(struct socket *, struct sockaddr *, int ) ;
   int (*connect)(struct socket *, struct sockaddr *, int , int ) ;
   int (*socketpair)(struct socket *, struct socket *) ;
   int (*accept)(struct socket *, struct socket *, int , bool ) ;
   int (*getname)(struct socket *, struct sockaddr *, int ) ;
   __poll_t (*poll)(struct file *, struct socket *, struct poll_table_struct *) ;
   int (*ioctl)(struct socket *, unsigned int , unsigned long ) ;
   int (*compat_ioctl)(struct socket *, unsigned int , unsigned long ) ;
   int (*gettstamp)(struct socket *, void *, bool , bool ) ;
   int (*listen)(struct socket *, int ) ;
   int (*shutdown)(struct socket *, int ) ;
   int (*setsockopt)(struct socket *, int , int , char *, unsigned int ) ;
   int (*getsockopt)(struct socket *, int , int , char *, int *) ;
   int (*compat_setsockopt)(struct socket *, int , int , char *, unsigned int ) ;
   int (*compat_getsockopt)(struct socket *, int , int , char *, int *) ;
   int (*sendmsg)(struct socket *, struct msghdr *, size_t ) ;
   int (*recvmsg)(struct socket *, struct msghdr *, size_t , int ) ;
   int (*mmap)(struct file *, struct socket *, struct vm_area_struct *) ;
   ssize_t (*sendpage)(struct socket *, struct page *, int , size_t , int ) ;
   ssize_t (*splice_read)(struct socket *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ) ;
   int (*set_peek_off)(struct sock *, int ) ;
   int (*peek_len)(struct socket *) ;
   int (*read_sock)(struct sock *, read_descriptor_t *, int (*)(read_descriptor_t *, struct sk_buff *, unsigned int , size_t )) ;
   int (*sendpage_locked)(struct sock *, struct page *, int , size_t , int ) ;
   int (*sendmsg_locked)(struct sock *, struct msghdr *, size_t ) ;
   int (*set_rcvlowat)(struct sock *, int ) ;
};
#line 162  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/checksum_64.h"
struct in6_addr;
#line 50  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pm.h"
struct pm_message {
   int event ;
};
#line 53  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pm.h"
typedef struct pm_message pm_message_t;
#line 278  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pm.h"
struct dev_pm_ops {
   int (*prepare)(struct device *) ;
   void (*complete)(struct device *) ;
   int (*suspend)(struct device *) ;
   int (*resume)(struct device *) ;
   int (*freeze)(struct device *) ;
   int (*thaw)(struct device *) ;
   int (*poweroff)(struct device *) ;
   int (*restore)(struct device *) ;
   int (*suspend_late)(struct device *) ;
   int (*resume_early)(struct device *) ;
   int (*freeze_late)(struct device *) ;
   int (*thaw_early)(struct device *) ;
   int (*poweroff_late)(struct device *) ;
   int (*restore_early)(struct device *) ;
   int (*suspend_noirq)(struct device *) ;
   int (*resume_noirq)(struct device *) ;
   int (*freeze_noirq)(struct device *) ;
   int (*thaw_noirq)(struct device *) ;
   int (*poweroff_noirq)(struct device *) ;
   int (*restore_noirq)(struct device *) ;
   int (*runtime_suspend)(struct device *) ;
   int (*runtime_resume)(struct device *) ;
   int (*runtime_idle)(struct device *) ;
};
#line 303 
enum rpm_status {
    RPM_ACTIVE = 0,
    RPM_RESUMING = 1,
    RPM_SUSPENDED = 2,
    RPM_SUSPENDING = 3
};
#line 310 
enum rpm_request {
    RPM_REQ_NONE = 0,
    RPM_REQ_IDLE = 1,
    RPM_REQ_SUSPEND = 2,
    RPM_REQ_AUTOSUSPEND = 3,
    RPM_REQ_RESUME = 4
};
#line 318 
struct wakeup_source;
#line 319 
struct wake_irq;
#line 320 
struct pm_domain_data;
#line 530  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pm.h"
struct pm_subsys_data {
   spinlock_t lock ;
   unsigned int refcount ;
   struct list_head clock_list ;
   struct pm_domain_data *domain_data ;
};
#line 573 
struct dev_pm_qos;
#line 573  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pm.h"
struct dev_pm_info {
   pm_message_t power_state ;
   unsigned int can_wakeup : 1 ;
   unsigned int async_suspend : 1 ;
   bool in_dpm_list : 1 ;
   bool is_prepared : 1 ;
   bool is_suspended : 1 ;
   bool is_noirq_suspended : 1 ;
   bool is_late_suspended : 1 ;
   bool no_pm : 1 ;
   bool early_init : 1 ;
   bool direct_complete : 1 ;
   u32 driver_flags ;
   spinlock_t lock ;
   struct list_head entry ;
   struct completion completion ;
   struct wakeup_source *wakeup ;
   bool wakeup_path : 1 ;
   bool syscore : 1 ;
   bool no_pm_callbacks : 1 ;
   unsigned int must_resume : 1 ;
   unsigned int may_skip_resume : 1 ;
   struct hrtimer suspend_timer ;
   unsigned long timer_expires ;
   struct work_struct work ;
   wait_queue_head_t wait_queue ;
   struct wake_irq *wakeirq ;
   atomic_t usage_count ;
   atomic_t child_count ;
   unsigned int disable_depth : 3 ;
   unsigned int idle_notification : 1 ;
   unsigned int request_pending : 1 ;
   unsigned int deferred_resume : 1 ;
   unsigned int runtime_auto : 1 ;
   bool ignore_children : 1 ;
   unsigned int no_callbacks : 1 ;
   unsigned int irq_safe : 1 ;
   unsigned int use_autosuspend : 1 ;
   unsigned int timer_autosuspends : 1 ;
   unsigned int memalloc_noio : 1 ;
   unsigned int links_count ;
   enum rpm_request request ;
   enum rpm_status runtime_status ;
   int runtime_error ;
   int autosuspend_delay ;
   u64 last_busy ;
   u64 active_time ;
   u64 suspended_time ;
   u64 accounting_timestamp ;
   struct pm_subsys_data *subsys_data ;
   void (*set_latency_tolerance)(struct device *, s32 ) ;
   struct dev_pm_qos *qos ;
};
#line 650  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pm.h"
struct dev_pm_domain {
   struct dev_pm_ops ops ;
   int (*start)(struct device *) ;
   void (*detach)(struct device *, bool ) ;
   int (*activate)(struct device *) ;
   void (*sync)(struct device *) ;
   void (*dismiss)(struct device *) ;
};
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ratelimit.h"
struct ratelimit_state {
   raw_spinlock_t lock ;
   int interval ;
   int burst ;
   int printed ;
   int missed ;
   unsigned long begin ;
   unsigned long flags ;
};
#line 5  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/device.h"
struct dev_archdata {
   void *iommu ;
};
#line 12 
struct dma_map_ops;
#line 23 
struct device_driver;
#line 24 
struct driver_private;
#line 25 
struct class;
#line 26 
struct subsys_private;
#line 27 
struct bus_type;
#line 28 
struct iommu_ops;
#line 29 
struct iommu_group;
#line 30 
struct iommu_fwspec;
#line 31 
struct dev_pin_info;
#line 32 
struct iommu_param;
#line 122  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
struct bus_type {
   char *name ;
   char *dev_name ;
   struct device *dev_root ;
   struct attribute_group **bus_groups ;
   struct attribute_group **dev_groups ;
   struct attribute_group **drv_groups ;
   int (*match)(struct device *, struct device_driver *) ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   int (*probe)(struct device *) ;
   void (*sync_state)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*online)(struct device *) ;
   int (*offline)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   int (*num_vf)(struct device *) ;
   int (*dma_configure)(struct device *) ;
   struct dev_pm_ops *pm ;
   struct iommu_ops *iommu_ops ;
   struct subsys_private *p ;
   struct lock_class_key lock_key ;
   bool need_parent_lock ;
};
#line 164 
struct device_type;
#line 309 
enum probe_type {
    PROBE_DEFAULT_STRATEGY = 0,
    PROBE_PREFER_ASYNCHRONOUS = 1,
    PROBE_FORCE_SYNCHRONOUS = 2
};
#line 383 
struct of_device_id;
#line 383 
struct acpi_device_id;
#line 383  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
struct device_driver {
   char *name ;
   struct bus_type *bus ;
   struct module *owner ;
   char *mod_name ;
   bool suppress_bind_attrs ;
   enum probe_type probe_type ;
   struct of_device_id *of_match_table ;
   struct acpi_device_id *acpi_match_table ;
   int (*probe)(struct device *) ;
   void (*sync_state)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct attribute_group **groups ;
   struct attribute_group **dev_groups ;
   struct dev_pm_ops *pm ;
   void (*coredump)(struct device *) ;
   struct driver_private *p ;
};
#line 589  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
struct class {
   char *name ;
   struct module *owner ;
   struct attribute_group **class_groups ;
   struct attribute_group **dev_groups ;
   struct kobject *dev_kobj ;
   int (*dev_uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *) ;
   void (*class_release)(struct class *) ;
   void (*dev_release)(struct device *) ;
   int (*shutdown_pre)(struct device *) ;
   struct kobj_ns_type_operations *ns_type ;
   void *(*namespace)(struct device *) ;
   void (*get_ownership)(struct device *, kuid_t *, kgid_t *) ;
   struct dev_pm_ops *pm ;
   struct subsys_private *p ;
};
#line 809  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
struct device_type {
   char *name ;
   struct attribute_group **groups ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *, kuid_t *, kgid_t *) ;
   void (*release)(struct device *) ;
   struct dev_pm_ops *pm ;
};
#line 1008  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
struct device_dma_parameters {
   unsigned int max_segment_size ;
   unsigned long segment_boundary_mask ;
};
#line 1139 
enum dl_dev_state {
    DL_DEV_NO_DRIVER = 0,
    DL_DEV_PROBING = 1,
    DL_DEV_DRIVER_BOUND = 2,
    DL_DEV_UNBINDING = 3
};
#line 1164  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
struct dev_links_info {
   struct list_head suppliers ;
   struct list_head consumers ;
   struct list_head needs_suppliers ;
   struct list_head defer_sync ;
   bool need_for_probe ;
   enum dl_dev_state status ;
};
#line 1259 
struct irq_domain;
#line 1259 
struct dma_coherent_mem;
#line 1259 
struct cma;
#line 1259  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
struct device {
   struct kobject kobj ;
   struct device *parent ;
   struct device_private *p ;
   char *init_name ;
   struct device_type *type ;
   struct bus_type *bus ;
   struct device_driver *driver ;
   void *platform_data ;
   void *driver_data ;
   struct mutex lockdep_mutex ;
   struct mutex mutex ;
   struct dev_links_info links ;
   struct dev_pm_info power ;
   struct dev_pm_domain *pm_domain ;
   struct irq_domain *msi_domain ;
   struct dev_pin_info *pins ;
   struct list_head msi_list ;
   struct dma_map_ops *dma_ops ;
   u64 *dma_mask ;
   u64 coherent_dma_mask ;
   u64 bus_dma_limit ;
   unsigned long dma_pfn_offset ;
   struct device_dma_parameters *dma_parms ;
   struct list_head dma_pools ;
   struct dma_coherent_mem *dma_mem ;
   struct cma *cma_area ;
   struct dev_archdata archdata ;
   struct device_node *of_node ;
   struct fwnode_handle *fwnode ;
   int numa_node ;
   dev_t devt ;
   u32 id ;
   spinlock_t devres_lock ;
   struct list_head devres_head ;
   struct class *class ;
   struct attribute_group **groups ;
   void (*release)(struct device *) ;
   struct iommu_group *iommu_group ;
   struct iommu_fwspec *iommu_fwspec ;
   struct iommu_param *iommu_param ;
   bool offline_disabled : 1 ;
   bool offline : 1 ;
   bool of_node_reused : 1 ;
   bool state_synced : 1 ;
};
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pm_wakeup.h"
struct wakeup_source {
   char *name ;
   int id ;
   struct list_head entry ;
   spinlock_t lock ;
   struct wake_irq *wakeirq ;
   struct timer_list timer ;
   unsigned long timer_expires ;
   ktime_t total_time ;
   ktime_t max_time ;
   ktime_t last_time ;
   ktime_t start_prevent_time ;
   ktime_t prevent_sleep_time ;
   unsigned long event_count ;
   unsigned long active_count ;
   unsigned long relax_count ;
   unsigned long expire_count ;
   unsigned long wakeup_count ;
   struct device *dev ;
   bool active : 1 ;
   bool autosleep_enabled : 1 ;
};
#line 71  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dma-debug.h"
enum dma_data_direction {
    DMA_BIDIRECTIONAL = 0,
    DMA_TO_DEVICE = 1,
    DMA_FROM_DEVICE = 2,
    DMA_NONE = 3
};
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/scatterlist.h"
struct scatterlist {
   unsigned long page_link ;
   unsigned int offset ;
   unsigned int length ;
   dma_addr_t dma_address ;
   unsigned int dma_length ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/scatterlist.h"
struct sg_table {
   struct scatterlist *sgl ;
   unsigned int nents ;
   unsigned int orig_nents ;
};
#line 76  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dma-mapping.h"
struct dma_map_ops {
   void *(*alloc)(struct device *, size_t , dma_addr_t *, gfp_t , unsigned long ) ;
   void (*free)(struct device *, size_t , void *, dma_addr_t , unsigned long ) ;
   int (*mmap)(struct device *, struct vm_area_struct *, void *, dma_addr_t , size_t , unsigned long ) ;
   int (*get_sgtable)(struct device *, struct sg_table *, void *, dma_addr_t , size_t , unsigned long ) ;
   dma_addr_t (*map_page)(struct device *, struct page *, unsigned long , size_t , enum dma_data_direction , unsigned long ) ;
   void (*unmap_page)(struct device *, dma_addr_t , size_t , enum dma_data_direction , unsigned long ) ;
   int (*map_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , unsigned long ) ;
   void (*unmap_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , unsigned long ) ;
   dma_addr_t (*map_resource)(struct device *, phys_addr_t , size_t , enum dma_data_direction , unsigned long ) ;
   void (*unmap_resource)(struct device *, dma_addr_t , size_t , enum dma_data_direction , unsigned long ) ;
   void (*sync_single_for_cpu)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_single_for_device)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_sg_for_cpu)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   void (*sync_sg_for_device)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   void (*cache_sync)(struct device *, void *, size_t , enum dma_data_direction ) ;
   int (*dma_supported)(struct device *, u64 ) ;
   u64 (*get_required_mask)(struct device *) ;
   size_t (*max_mapping_size)(struct device *) ;
   unsigned long (*get_merge_boundary)(struct device *) ;
};
#line 803  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dma-mapping.h"
typedef u64 netdev_features_t;
#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/in6.h"
union __anonunion_in6_u_510 {
   __u8 u6_addr8[16U] ;
   __be16 u6_addr16[8U] ;
   __be32 u6_addr32[4U] ;
};
#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/in6.h"
struct in6_addr {
   union __anonunion_in6_u_510 in6_u ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/in6.h"
struct __anonstruct_siphash_key_t_511 {
   u64 key[2U] ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/in6.h"
typedef struct __anonstruct_siphash_key_t_511 siphash_key_t;
#line 163  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if_ether.h"
struct ethhdr {
   unsigned char h_dest[6U] ;
   unsigned char h_source[6U] ;
   __be16 h_proto ;
} __attribute__((__packed__));
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pipe_fs_i.h"
struct pipe_buf_operations;
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pipe_fs_i.h"
struct pipe_buffer {
   struct page *page ;
   unsigned int offset ;
   unsigned int len ;
   struct pipe_buf_operations *ops ;
   unsigned int flags ;
   unsigned long private ;
};
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pipe_fs_i.h"
struct pipe_inode_info {
   struct mutex mutex ;
   wait_queue_head_t wait ;
   unsigned int head ;
   unsigned int tail ;
   unsigned int max_usage ;
   unsigned int ring_size ;
   unsigned int readers ;
   unsigned int writers ;
   unsigned int files ;
   unsigned int r_counter ;
   unsigned int w_counter ;
   struct page *tmp_page ;
   struct fasync_struct *fasync_readers ;
   struct fasync_struct *fasync_writers ;
   struct pipe_buffer *bufs ;
   struct user_struct *user ;
};
#line 77  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pipe_fs_i.h"
struct pipe_buf_operations {
   int (*confirm)(struct pipe_inode_info *, struct pipe_buffer *) ;
   void (*release)(struct pipe_inode_info *, struct pipe_buffer *) ;
   int (*steal)(struct pipe_inode_info *, struct pipe_buffer *) ;
   bool (*get)(struct pipe_inode_info *, struct pipe_buffer *) ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct flowi_tunnel {
   __be64 tun_id ;
};
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct flowi_common {
   int flowic_oif ;
   int flowic_iif ;
   __u32 flowic_mark ;
   __u8 flowic_tos ;
   __u8 flowic_scope ;
   __u8 flowic_proto ;
   __u8 flowic_flags ;
   __u32 flowic_secid ;
   kuid_t flowic_uid ;
   struct flowi_tunnel flowic_tun_key ;
   __u32 flowic_multipath_hash ;
};
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct __anonstruct_ports_522 {
   __be16 dport ;
   __be16 sport ;
};
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct __anonstruct_icmpt_523 {
   __u8 type ;
   __u8 code ;
};
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct __anonstruct_dnports_524 {
   __le16 dport ;
   __le16 sport ;
};
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct __anonstruct_mht_525 {
   __u8 type ;
};
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
union flowi_uli {
   struct __anonstruct_ports_522 ports ;
   struct __anonstruct_icmpt_523 icmpt ;
   struct __anonstruct_dnports_524 dnports ;
   __be32 spi ;
   __be32 gre_key ;
   struct __anonstruct_mht_525 mht ;
};
#line 70  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct flowi4 {
   struct flowi_common __fl_common ;
   __be32 saddr ;
   __be32 daddr ;
   union flowi_uli uli ;
} __attribute__((__aligned__(8)));
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct flowi6 {
   struct flowi_common __fl_common ;
   struct in6_addr daddr ;
   struct in6_addr saddr ;
   __be32 flowlabel ;
   union flowi_uli uli ;
   __u32 mp_hash ;
} __attribute__((__aligned__(8)));
#line 158  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct flowidn {
   struct flowi_common __fl_common ;
   __le16 daddr ;
   __le16 saddr ;
   union flowi_uli uli ;
} __attribute__((__aligned__(8)));
#line 173  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
union __anonunion_u_526 {
   struct flowi_common __fl_common ;
   struct flowi4 ip4 ;
   struct flowi6 ip6 ;
   struct flowidn dn ;
};
#line 173  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct flowi {
   union __anonunion_u_526 u ;
} __attribute__((__aligned__(8)));
#line 8  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netfilter/nf_conntrack_common.h"
struct ip_conntrack_stat {
   unsigned int found ;
   unsigned int invalid ;
   unsigned int ignore ;
   unsigned int insert ;
   unsigned int insert_failed ;
   unsigned int drop ;
   unsigned int early_drop ;
   unsigned int error ;
   unsigned int expect_new ;
   unsigned int expect_create ;
   unsigned int expect_delete ;
   unsigned int search_restart ;
};
#line 41 
struct napi_struct;
#line 42 
struct bpf_prog;
#line 43 
union bpf_attr;
#line 44 
struct skb_ext;
#line 289  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
struct sk_buff_head {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   __u32 qlen ;
   spinlock_t lock ;
};
#line 313  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
typedef struct bio_vec skb_frag_t;
#line 416  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
struct skb_shared_hwtstamps {
   ktime_t hwtstamp ;
};
#line 510  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
struct skb_shared_info {
   __u8 __unused ;
   __u8 meta_len ;
   __u8 nr_frags ;
   __u8 tx_flags ;
   unsigned short gso_size ;
   unsigned short gso_segs ;
   struct sk_buff *frag_list ;
   struct skb_shared_hwtstamps hwtstamps ;
   unsigned int gso_type ;
   u32 tskey ;
   atomic_t dataref ;
   void *destructor_arg ;
   skb_frag_t frags[17U] ;
};
#line 562  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
typedef unsigned int sk_buff_data_t;
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_533 {
   struct net_device *dev ;
   unsigned long dev_scratch ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
struct __anonstruct_532 {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   union __anonunion_533 __anonCompField___anonstruct_532_89 ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_531 {
   struct __anonstruct_532 __anonCompField___anonunion_531_90 ;
   struct rb_node rbnode ;
   struct list_head list ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_534 {
   struct sock *sk ;
   int ip_defrag_offset ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_535 {
   ktime_t tstamp ;
   u64 skb_mstamp_ns ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
struct __anonstruct_537 {
   unsigned long _skb_refdst ;
   void (*destructor)(struct sk_buff *) ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_536 {
   struct __anonstruct_537 __anonCompField___anonunion_536_94 ;
   struct list_head tcp_tsorted_anchor ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
struct __anonstruct_539 {
   __u16 csum_start ;
   __u16 csum_offset ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_538 {
   __wsum csum ;
   struct __anonstruct_539 __anonCompField___anonunion_538_96 ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_540 {
   unsigned int napi_id ;
   unsigned int sender_cpu ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_541 {
   __u32 mark ;
   __u32 reserved_tailroom ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_542 {
   __be16 inner_protocol ;
   __u8 inner_ipproto ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
struct sk_buff {
   union __anonunion_531 __anonCompField_sk_buff_91 ;
   union __anonunion_534 __anonCompField_sk_buff_92 ;
   union __anonunion_535 __anonCompField_sk_buff_93 ;
   char cb[48U] ;
   union __anonunion_536 __anonCompField_sk_buff_95 ;
   unsigned long _nfct ;
   unsigned int len ;
   unsigned int data_len ;
   __u16 mac_len ;
   __u16 hdr_len ;
   __u16 queue_mapping ;
   __u8 __cloned_offset[0U] ;
   __u8 cloned : 1 ;
   __u8 nohdr : 1 ;
   __u8 fclone : 2 ;
   __u8 peeked : 1 ;
   __u8 head_frag : 1 ;
   __u8 pfmemalloc : 1 ;
   __u8 active_extensions ;
   __u32 headers_start[0U] ;
   __u8 __pkt_type_offset[0U] ;
   __u8 pkt_type : 3 ;
   __u8 ignore_df : 1 ;
   __u8 nf_trace : 1 ;
   __u8 ip_summed : 2 ;
   __u8 ooo_okay : 1 ;
   __u8 l4_hash : 1 ;
   __u8 sw_hash : 1 ;
   __u8 wifi_acked_valid : 1 ;
   __u8 wifi_acked : 1 ;
   __u8 no_fcs : 1 ;
   __u8 encapsulation : 1 ;
   __u8 encap_hdr_csum : 1 ;
   __u8 csum_valid : 1 ;
   __u8 __pkt_vlan_present_offset[0U] ;
   __u8 vlan_present : 1 ;
   __u8 csum_complete_sw : 1 ;
   __u8 csum_level : 2 ;
   __u8 csum_not_inet : 1 ;
   __u8 dst_pending_confirm : 1 ;
   __u8 ndisc_nodetype : 2 ;
   __u8 ipvs_property : 1 ;
   __u8 inner_protocol_type : 1 ;
   __u8 remcsum_offload : 1 ;
   __u8 offload_fwd_mark : 1 ;
   __u8 offload_l3_fwd_mark : 1 ;
   __u8 tc_skip_classify : 1 ;
   __u8 tc_at_ingress : 1 ;
   __u8 tc_redirected : 1 ;
   __u8 tc_from_ingress : 1 ;
   __u8 decrypted : 1 ;
   __u16 tc_index ;
   union __anonunion_538 __anonCompField_sk_buff_97 ;
   __u32 priority ;
   int skb_iif ;
   __u32 hash ;
   __be16 vlan_proto ;
   __u16 vlan_tci ;
   union __anonunion_540 __anonCompField_sk_buff_98 ;
   __u32 secmark ;
   union __anonunion_541 __anonCompField_sk_buff_99 ;
   union __anonunion_542 __anonCompField_sk_buff_100 ;
   __u16 inner_transport_header ;
   __u16 inner_network_header ;
   __u16 inner_mac_header ;
   __be16 protocol ;
   __u16 transport_header ;
   __u16 network_header ;
   __u16 mac_header ;
   __u32 headers_end[0U] ;
   sk_buff_data_t tail ;
   sk_buff_data_t end ;
   unsigned char *head ;
   unsigned char *data ;
   unsigned int truesize ;
   refcount_t users ;
   struct skb_ext *extensions ;
};
#line 920 
struct dst_entry;
#line 1867  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion___u_548 {
   struct sk_buff *__val ;
   char __c[1U] ;
};
#line 1868  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion___u_550 {
   struct sk_buff *__val ;
   char __c[1U] ;
};
#line 1869  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion___u_552 {
   struct sk_buff *__val ;
   char __c[1U] ;
};
#line 1870  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion___u_554 {
   struct sk_buff *__val ;
   char __c[1U] ;
};
#line 1881  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion___u_556 {
   struct sk_buff *__val ;
   char __c[1U] ;
};
#line 1882  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion___u_558 {
   struct sk_buff *__val ;
   char __c[1U] ;
};
#line 1884  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion___u_560 {
   struct sk_buff *__val ;
   char __c[1U] ;
};
#line 1885  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion___u_562 {
   struct sk_buff *__val ;
   char __c[1U] ;
};
#line 2026  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion___u_564 {
   struct sk_buff *__val ;
   char __c[1U] ;
};
#line 2027  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion___u_566 {
   struct sk_buff *__val ;
   char __c[1U] ;
};
#line 4108  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
struct skb_ext {
   refcount_t refcnt ;
   u8 offset[3U] ;
   u8 chunks ;
   char data[0U] ;
};
#line 177  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_drvinfo {
   __u32 cmd ;
   char driver[32U] ;
   char version[32U] ;
   char fw_version[32U] ;
   char bus_info[32U] ;
   char erom_version[32U] ;
   char reserved2[12U] ;
   __u32 n_priv_flags ;
   __u32 n_stats ;
   __u32 testinfo_len ;
   __u32 eedump_len ;
   __u32 regdump_len ;
};
#line 203  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_wolinfo {
   __u32 cmd ;
   __u32 supported ;
   __u32 wolopts ;
   __u8 sopass[6U] ;
};
#line 244  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_tunable {
   __u32 cmd ;
   __u32 id ;
   __u32 type_id ;
   __u32 len ;
   void *data[0U] ;
};
#line 310  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_regs {
   __u32 cmd ;
   __u32 version ;
   __u32 len ;
   __u8 data[0U] ;
};
#line 335  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_eeprom {
   __u32 cmd ;
   __u32 magic ;
   __u32 offset ;
   __u32 len ;
   __u8 data[0U] ;
};
#line 360  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_eee {
   __u32 cmd ;
   __u32 supported ;
   __u32 advertised ;
   __u32 lp_advertised ;
   __u32 eee_active ;
   __u32 eee_enabled ;
   __u32 tx_lpi_enabled ;
   __u32 tx_lpi_timer ;
   __u32 reserved[2U] ;
};
#line 382  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_modinfo {
   __u32 cmd ;
   __u32 type ;
   __u32 eeprom_len ;
   __u32 reserved[8U] ;
};
#line 462  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_coalesce {
   __u32 cmd ;
   __u32 rx_coalesce_usecs ;
   __u32 rx_max_coalesced_frames ;
   __u32 rx_coalesce_usecs_irq ;
   __u32 rx_max_coalesced_frames_irq ;
   __u32 tx_coalesce_usecs ;
   __u32 tx_max_coalesced_frames ;
   __u32 tx_coalesce_usecs_irq ;
   __u32 tx_max_coalesced_frames_irq ;
   __u32 stats_block_coalesce_usecs ;
   __u32 use_adaptive_rx_coalesce ;
   __u32 use_adaptive_tx_coalesce ;
   __u32 pkt_rate_low ;
   __u32 rx_coalesce_usecs_low ;
   __u32 rx_max_coalesced_frames_low ;
   __u32 tx_coalesce_usecs_low ;
   __u32 tx_max_coalesced_frames_low ;
   __u32 pkt_rate_high ;
   __u32 rx_coalesce_usecs_high ;
   __u32 rx_max_coalesced_frames_high ;
   __u32 tx_coalesce_usecs_high ;
   __u32 tx_max_coalesced_frames_high ;
   __u32 rate_sample_interval ;
};
#line 513  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_ringparam {
   __u32 cmd ;
   __u32 rx_max_pending ;
   __u32 rx_mini_max_pending ;
   __u32 rx_jumbo_max_pending ;
   __u32 tx_max_pending ;
   __u32 rx_pending ;
   __u32 rx_mini_pending ;
   __u32 rx_jumbo_pending ;
   __u32 tx_pending ;
};
#line 541  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_channels {
   __u32 cmd ;
   __u32 max_rx ;
   __u32 max_tx ;
   __u32 max_other ;
   __u32 max_combined ;
   __u32 rx_count ;
   __u32 tx_count ;
   __u32 other_count ;
   __u32 combined_count ;
};
#line 575  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_pauseparam {
   __u32 cmd ;
   __u32 autoneg ;
   __u32 rx_pause ;
   __u32 tx_pause ;
};
#line 683  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_test {
   __u32 cmd ;
   __u32 flags ;
   __u32 reserved ;
   __u32 len ;
   __u64 data[0U] ;
};
#line 702  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_stats {
   __u32 cmd ;
   __u32 n_stats ;
   __u64 data[0U] ;
};
#line 758  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_tcpip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be16 psrc ;
   __be16 pdst ;
   __u8 tos ;
};
#line 775  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_ah_espip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 spi ;
   __u8 tos ;
};
#line 793  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_usrip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 l4_4_bytes ;
   __u8 tos ;
   __u8 ip_ver ;
   __u8 proto ;
};
#line 812  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_tcpip6_spec {
   __be32 ip6src[4U] ;
   __be32 ip6dst[4U] ;
   __be16 psrc ;
   __be16 pdst ;
   __u8 tclass ;
};
#line 829  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_ah_espip6_spec {
   __be32 ip6src[4U] ;
   __be32 ip6dst[4U] ;
   __be32 spi ;
   __u8 tclass ;
};
#line 844  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_usrip6_spec {
   __be32 ip6src[4U] ;
   __be32 ip6dst[4U] ;
   __be32 l4_4_bytes ;
   __u8 tclass ;
   __u8 l4_proto ;
};
#line 852  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
union ethtool_flow_union {
   struct ethtool_tcpip4_spec tcp_ip4_spec ;
   struct ethtool_tcpip4_spec udp_ip4_spec ;
   struct ethtool_tcpip4_spec sctp_ip4_spec ;
   struct ethtool_ah_espip4_spec ah_ip4_spec ;
   struct ethtool_ah_espip4_spec esp_ip4_spec ;
   struct ethtool_usrip4_spec usr_ip4_spec ;
   struct ethtool_tcpip6_spec tcp_ip6_spec ;
   struct ethtool_tcpip6_spec udp_ip6_spec ;
   struct ethtool_tcpip6_spec sctp_ip6_spec ;
   struct ethtool_ah_espip6_spec ah_ip6_spec ;
   struct ethtool_ah_espip6_spec esp_ip6_spec ;
   struct ethtool_usrip6_spec usr_ip6_spec ;
   struct ethhdr ether_spec ;
   __u8 hdata[52U] ;
};
#line 880  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_flow_ext {
   __u8 padding[2U] ;
   unsigned char h_dest[6U] ;
   __be16 vlan_etype ;
   __be16 vlan_tci ;
   __be32 data[2U] ;
};
#line 905  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_rx_flow_spec {
   __u32 flow_type ;
   union ethtool_flow_union h_u ;
   struct ethtool_flow_ext h_ext ;
   union ethtool_flow_union m_u ;
   struct ethtool_flow_ext m_ext ;
   __u64 ring_cookie ;
   __u32 location ;
};
#line 1001  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
union __anonunion_568 {
   __u32 rule_cnt ;
   __u32 rss_context ;
};
#line 1001  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_rxnfc {
   __u32 cmd ;
   __u32 flow_type ;
   __u64 data ;
   struct ethtool_rx_flow_spec fs ;
   union __anonunion_568 __anonCompField_ethtool_rxnfc_102 ;
   __u32 rule_locs[0U] ;
};
#line 1130  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_flash {
   __u32 cmd ;
   __u32 region ;
   char data[128U] ;
};
#line 1150  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_dump {
   __u32 cmd ;
   __u32 version ;
   __u32 flag ;
   __u32 len ;
   __u8 data[0U] ;
};
#line 1230  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_ts_info {
   __u32 cmd ;
   __u32 so_timestamping ;
   __s32 phc_index ;
   __u32 tx_types ;
   __u32 tx_reserved[3U] ;
   __u32 rx_filters ;
   __u32 rx_reserved[3U] ;
};
#line 1302  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_fecparam {
   __u32 cmd ;
   __u32 active_fec ;
   __u32 fec ;
   __u32 reserved ;
};
#line 1876  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_link_settings {
   __u32 cmd ;
   __u32 speed ;
   __u8 duplex ;
   __u8 port ;
   __u8 phy_address ;
   __u8 autoneg ;
   __u8 mdio_support ;
   __u8 eth_tp_mdix ;
   __u8 eth_tp_mdix_ctrl ;
   __s8 link_mode_masks_nwords ;
   __u8 transceiver ;
   __u8 reserved1[3U] ;
   __u32 reserved[7U] ;
   __u32 link_mode_masks[0U] ;
};
#line 40  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ethtool.h"
enum ethtool_phys_id_state {
    ETHTOOL_ID_INACTIVE = 0,
    ETHTOOL_ID_ACTIVE = 1,
    ETHTOOL_ID_ON = 2,
    ETHTOOL_ID_OFF = 3
};
#line 108  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ethtool.h"
struct __anonstruct_link_modes_571 {
   unsigned long supported[2U] ;
   unsigned long advertising[2U] ;
   unsigned long lp_advertising[2U] ;
};
#line 108  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ethtool.h"
struct ethtool_link_ksettings {
   struct ethtool_link_settings base ;
   struct __anonstruct_link_modes_571 link_modes ;
};
#line 325  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ethtool.h"
struct ethtool_ops {
   void (*get_drvinfo)(struct net_device *, struct ethtool_drvinfo *) ;
   int (*get_regs_len)(struct net_device *) ;
   void (*get_regs)(struct net_device *, struct ethtool_regs *, void *) ;
   void (*get_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   int (*set_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   u32 (*get_msglevel)(struct net_device *) ;
   void (*set_msglevel)(struct net_device *, u32 ) ;
   int (*nway_reset)(struct net_device *) ;
   u32 (*get_link)(struct net_device *) ;
   int (*get_eeprom_len)(struct net_device *) ;
   int (*get_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*set_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   int (*set_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   void (*get_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   int (*set_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   void (*get_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   int (*set_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   void (*self_test)(struct net_device *, struct ethtool_test *, u64 *) ;
   void (*get_strings)(struct net_device *, u32 , u8 *) ;
   int (*set_phys_id)(struct net_device *, enum ethtool_phys_id_state ) ;
   void (*get_ethtool_stats)(struct net_device *, struct ethtool_stats *, u64 *) ;
   int (*begin)(struct net_device *) ;
   void (*complete)(struct net_device *) ;
   u32 (*get_priv_flags)(struct net_device *) ;
   int (*set_priv_flags)(struct net_device *, u32 ) ;
   int (*get_sset_count)(struct net_device *, int ) ;
   int (*get_rxnfc)(struct net_device *, struct ethtool_rxnfc *, u32 *) ;
   int (*set_rxnfc)(struct net_device *, struct ethtool_rxnfc *) ;
   int (*flash_device)(struct net_device *, struct ethtool_flash *) ;
   int (*reset)(struct net_device *, u32 *) ;
   u32 (*get_rxfh_key_size)(struct net_device *) ;
   u32 (*get_rxfh_indir_size)(struct net_device *) ;
   int (*get_rxfh)(struct net_device *, u32 *, u8 *, u8 *) ;
   int (*set_rxfh)(struct net_device *, u32 *, u8 *, u8 ) ;
   int (*get_rxfh_context)(struct net_device *, u32 *, u8 *, u8 *, u32 ) ;
   int (*set_rxfh_context)(struct net_device *, u32 *, u8 *, u8 , u32 *, bool ) ;
   void (*get_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*set_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*get_dump_flag)(struct net_device *, struct ethtool_dump *) ;
   int (*get_dump_data)(struct net_device *, struct ethtool_dump *, void *) ;
   int (*set_dump)(struct net_device *, struct ethtool_dump *) ;
   int (*get_ts_info)(struct net_device *, struct ethtool_ts_info *) ;
   int (*get_module_info)(struct net_device *, struct ethtool_modinfo *) ;
   int (*get_module_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*set_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*get_tunable)(struct net_device *, struct ethtool_tunable *, void *) ;
   int (*set_tunable)(struct net_device *, struct ethtool_tunable *, void *) ;
   int (*get_per_queue_coalesce)(struct net_device *, u32 , struct ethtool_coalesce *) ;
   int (*set_per_queue_coalesce)(struct net_device *, u32 , struct ethtool_coalesce *) ;
   int (*get_link_ksettings)(struct net_device *, struct ethtool_link_ksettings *) ;
   int (*set_link_ksettings)(struct net_device *, struct ethtool_link_ksettings *) ;
   int (*get_fecparam)(struct net_device *, struct ethtool_fecparam *) ;
   int (*set_fecparam)(struct net_device *, struct ethtool_fecparam *) ;
   void (*get_ethtool_phy_stats)(struct net_device *, struct ethtool_stats *, u64 *) ;
};
#line 422 
struct prot_inuse;
#line 8  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/core.h"
struct netns_core {
   struct ctl_table_header *sysctl_hdr ;
   int sysctl_somaxconn ;
   int *sock_inuse ;
   struct prot_inuse *prot_inuse ;
};
#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct u64_stats_sync {
   };
#line 36  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct __anonstruct_local_t_572 {
   atomic_long_t a ;
};
#line 36  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
typedef struct __anonstruct_local_t_572 local_t;
#line 119  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/local.h"
struct __anonstruct_local64_t_573 {
   local_t a ;
};
#line 119  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/local.h"
typedef struct __anonstruct_local64_t_573 local64_t;
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/local64.h"
struct __anonstruct_u64_stats_t_574 {
   local64_t v ;
};
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/local64.h"
typedef struct __anonstruct_u64_stats_t_574 u64_stats_t;
#line 51  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct ipstats_mib {
   u64 mibs[37U] ;
   struct u64_stats_sync syncp ;
};
#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct icmp_mib {
   unsigned long mibs[28U] ;
};
#line 64  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct icmpmsg_mib {
   atomic_long_t mibs[512U] ;
};
#line 71  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct icmpv6_mib {
   unsigned long mibs[6U] ;
};
#line 75  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct icmpv6_mib_device {
   atomic_long_t mibs[6U] ;
};
#line 81  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct icmpv6msg_mib {
   atomic_long_t mibs[512U] ;
};
#line 85  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct icmpv6msg_mib_device {
   atomic_long_t mibs[512U] ;
};
#line 92  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct tcp_mib {
   unsigned long mibs[16U] ;
};
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct udp_mib {
   unsigned long mibs[9U] ;
};
#line 104  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct linux_mib {
   unsigned long mibs[120U] ;
};
#line 110  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct linux_xfrm_mib {
   unsigned long mibs[29U] ;
};
#line 116  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct linux_tls_mib {
   unsigned long mibs[11U] ;
};
#line 7  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/mib.h"
struct proc_dir_entry;
#line 7  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/mib.h"
struct netns_mib {
   struct tcp_mib *tcp_statistics ;
   struct ipstats_mib *ip_statistics ;
   struct linux_mib *net_statistics ;
   struct udp_mib *udp_statistics ;
   struct udp_mib *udplite_statistics ;
   struct icmp_mib *icmp_statistics ;
   struct icmpmsg_mib *icmpmsg_statistics ;
   struct proc_dir_entry *proc_net_devsnmp6 ;
   struct udp_mib *udp_stats_in6 ;
   struct udp_mib *udplite_stats_in6 ;
   struct ipstats_mib *ipv6_statistics ;
   struct icmpv6_mib *icmpv6_statistics ;
   struct icmpv6msg_mib *icmpv6msg_statistics ;
   struct linux_xfrm_mib *xfrm_statistics ;
   struct linux_tls_mib *tls_statistics ;
};
#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/unix.h"
struct netns_unix {
   int sysctl_max_dgram_qlen ;
   struct ctl_table_header *ctl ;
};
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/packet.h"
struct netns_packet {
   struct mutex sklist_lock ;
   struct hlist_head sklist ;
};
#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/inet_frag.h"
struct inet_frags;
#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/inet_frag.h"
struct fqdir {
   long high_thresh ;
   long low_thresh ;
   int timeout ;
   int max_dist ;
   struct inet_frags *f ;
   struct net *net ;
   bool dead ;
   struct rhashtable rhashtable ;
   atomic_long_t mem ;
   struct work_struct destroy_work ;
};
#line 41  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/inet_frag.h"
struct frag_v4_compare_key {
   __be32 saddr ;
   __be32 daddr ;
   u32 user ;
   u32 vif ;
   __be16 id ;
   u16 protocol ;
};
#line 50  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/inet_frag.h"
struct frag_v6_compare_key {
   struct in6_addr saddr ;
   struct in6_addr daddr ;
   u32 user ;
   __be32 id ;
   u32 iif ;
};
#line 77  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/inet_frag.h"
union __anonunion_key_575 {
   struct frag_v4_compare_key v4 ;
   struct frag_v6_compare_key v6 ;
};
#line 77  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/inet_frag.h"
struct inet_frag_queue {
   struct rhash_head node ;
   union __anonunion_key_575 key ;
   struct timer_list timer ;
   spinlock_t lock ;
   refcount_t refcnt ;
   struct rb_root rb_fragments ;
   struct sk_buff *fragments_tail ;
   struct sk_buff *last_run_head ;
   ktime_t stamp ;
   int len ;
   int meat ;
   __u8 flags ;
   u16 max_size ;
   struct fqdir *fqdir ;
   struct callback_head rcu ;
};
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/inet_frag.h"
struct inet_frags {
   unsigned int qsize ;
   void (*constructor)(struct inet_frag_queue *, void *) ;
   void (*destructor)(struct inet_frag_queue *) ;
   void (*frag_expire)(struct timer_list *) ;
   struct kmem_cache *frags_cachep ;
   char *frags_cache_name ;
   struct rhashtable_params rhash_params ;
   refcount_t refcnt ;
   struct completion completion ;
};
#line 177 
struct ipv4_devconf;
#line 178 
struct fib_rules_ops;
#line 179 
struct fib_table;
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ipv4.h"
struct local_ports {
   seqlock_t lock ;
   int range[2U] ;
   bool warned ;
};
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ipv4.h"
struct ping_group_range {
   seqlock_t lock ;
   kgid_t range[2U] ;
};
#line 31 
struct inet_hashinfo;
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ipv4.h"
struct inet_timewait_death_row {
   atomic_t tw_count ;
   struct inet_hashinfo *hashinfo ;
   int sysctl_max_tw_buckets ;
};
#line 40 
struct tcp_fastopen_context;
#line 43 
struct ip_ra_chain;
#line 43 
struct inet_peer_base;
#line 43 
struct xt_table;
#line 43 
struct tcp_congestion_ops;
#line 43 
struct fib_notifier_ops;
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ipv4.h"
struct netns_ipv4 {
   struct ctl_table_header *forw_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *ipv4_hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *xfrm4_hdr ;
   struct ipv4_devconf *devconf_all ;
   struct ipv4_devconf *devconf_dflt ;
   struct ip_ra_chain *ra_chain ;
   struct mutex ra_mutex ;
   struct fib_rules_ops *rules_ops ;
   bool fib_has_custom_rules ;
   unsigned int fib_rules_require_fldissect ;
   struct fib_table *fib_main ;
   struct fib_table *fib_default ;
   bool fib_has_custom_local_routes ;
   int fib_num_tclassid_users ;
   struct hlist_head *fib_table_hash ;
   bool fib_offload_disabled ;
   struct sock *fibnl ;
   struct sock **icmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct inet_peer_base *peers ;
   struct sock **tcp_sk ;
   struct fqdir *fqdir ;
   struct xt_table *iptable_filter ;
   struct xt_table *iptable_mangle ;
   struct xt_table *iptable_raw ;
   struct xt_table *arptable_filter ;
   struct xt_table *iptable_security ;
   struct xt_table *nat_table ;
   int sysctl_icmp_echo_ignore_all ;
   int sysctl_icmp_echo_ignore_broadcasts ;
   int sysctl_icmp_ignore_bogus_error_responses ;
   int sysctl_icmp_ratelimit ;
   int sysctl_icmp_ratemask ;
   int sysctl_icmp_errors_use_inbound_ifaddr ;
   struct local_ports ip_local_ports ;
   int sysctl_tcp_ecn ;
   int sysctl_tcp_ecn_fallback ;
   int sysctl_ip_default_ttl ;
   int sysctl_ip_no_pmtu_disc ;
   int sysctl_ip_fwd_use_pmtu ;
   int sysctl_ip_fwd_update_priority ;
   int sysctl_ip_nonlocal_bind ;
   int sysctl_ip_dynaddr ;
   int sysctl_ip_early_demux ;
   int sysctl_raw_l3mdev_accept ;
   int sysctl_tcp_early_demux ;
   int sysctl_udp_early_demux ;
   int sysctl_fwmark_reflect ;
   int sysctl_tcp_fwmark_accept ;
   int sysctl_tcp_l3mdev_accept ;
   int sysctl_tcp_mtu_probing ;
   int sysctl_tcp_mtu_probe_floor ;
   int sysctl_tcp_base_mss ;
   int sysctl_tcp_min_snd_mss ;
   int sysctl_tcp_probe_threshold ;
   u32 sysctl_tcp_probe_interval ;
   int sysctl_tcp_keepalive_time ;
   int sysctl_tcp_keepalive_probes ;
   int sysctl_tcp_keepalive_intvl ;
   int sysctl_tcp_syn_retries ;
   int sysctl_tcp_synack_retries ;
   int sysctl_tcp_syncookies ;
   int sysctl_tcp_reordering ;
   int sysctl_tcp_retries1 ;
   int sysctl_tcp_retries2 ;
   int sysctl_tcp_orphan_retries ;
   int sysctl_tcp_fin_timeout ;
   unsigned int sysctl_tcp_notsent_lowat ;
   int sysctl_tcp_tw_reuse ;
   int sysctl_tcp_sack ;
   int sysctl_tcp_window_scaling ;
   int sysctl_tcp_timestamps ;
   int sysctl_tcp_early_retrans ;
   int sysctl_tcp_recovery ;
   int sysctl_tcp_thin_linear_timeouts ;
   int sysctl_tcp_slow_start_after_idle ;
   int sysctl_tcp_retrans_collapse ;
   int sysctl_tcp_stdurg ;
   int sysctl_tcp_rfc1337 ;
   int sysctl_tcp_abort_on_overflow ;
   int sysctl_tcp_fack ;
   int sysctl_tcp_max_reordering ;
   int sysctl_tcp_dsack ;
   int sysctl_tcp_app_win ;
   int sysctl_tcp_adv_win_scale ;
   int sysctl_tcp_frto ;
   int sysctl_tcp_nometrics_save ;
   int sysctl_tcp_moderate_rcvbuf ;
   int sysctl_tcp_tso_win_divisor ;
   int sysctl_tcp_workaround_signed_windows ;
   int sysctl_tcp_limit_output_bytes ;
   int sysctl_tcp_challenge_ack_limit ;
   int sysctl_tcp_min_tso_segs ;
   int sysctl_tcp_min_rtt_wlen ;
   int sysctl_tcp_autocorking ;
   int sysctl_tcp_invalid_ratelimit ;
   int sysctl_tcp_pacing_ss_ratio ;
   int sysctl_tcp_pacing_ca_ratio ;
   int sysctl_tcp_wmem[3U] ;
   int sysctl_tcp_rmem[3U] ;
   int sysctl_tcp_comp_sack_nr ;
   unsigned long sysctl_tcp_comp_sack_delay_ns ;
   struct inet_timewait_death_row tcp_death_row ;
   int sysctl_max_syn_backlog ;
   int sysctl_tcp_fastopen ;
   struct tcp_congestion_ops *tcp_congestion_control ;
   struct tcp_fastopen_context *tcp_fastopen_ctx ;
   spinlock_t tcp_fastopen_ctx_lock ;
   unsigned int sysctl_tcp_fastopen_blackhole_timeout ;
   atomic_t tfo_active_disable_times ;
   unsigned long tfo_active_disable_stamp ;
   int sysctl_udp_wmem_min ;
   int sysctl_udp_rmem_min ;
   int sysctl_udp_l3mdev_accept ;
   int sysctl_igmp_max_memberships ;
   int sysctl_igmp_max_msf ;
   int sysctl_igmp_llm_reports ;
   int sysctl_igmp_qrv ;
   struct ping_group_range ping_group_range ;
   atomic_t dev_addr_genid ;
   unsigned long *sysctl_local_reserved_ports ;
   int sysctl_ip_prot_sock ;
   struct list_head mr_tables ;
   struct fib_rules_ops *mr_rules_ops ;
   int sysctl_fib_multipath_use_neigh ;
   int sysctl_fib_multipath_hash_policy ;
   struct fib_notifier_ops *notifier_ops ;
   unsigned int fib_seq ;
   struct fib_notifier_ops *ipmr_notifier_ops ;
   unsigned int ipmr_seq ;
   atomic_t rt_genid ;
   siphash_key_t ip_id_key ;
};
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/dst_ops.h"
struct neighbour;
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/dst_ops.h"
struct dst_ops {
   unsigned short family ;
   unsigned int gc_thresh ;
   int (*gc)(struct dst_ops *) ;
   struct dst_entry *(*check)(struct dst_entry *, __u32 ) ;
   unsigned int (*default_advmss)(struct dst_entry *) ;
   unsigned int (*mtu)(struct dst_entry *) ;
   u32 *(*cow_metrics)(struct dst_entry *, unsigned long ) ;
   void (*destroy)(struct dst_entry *) ;
   void (*ifdown)(struct dst_entry *, struct net_device *, int ) ;
   struct dst_entry *(*negative_advice)(struct dst_entry *) ;
   void (*link_failure)(struct sk_buff *) ;
   void (*update_pmtu)(struct dst_entry *, struct sock *, struct sk_buff *, u32 , bool ) ;
   void (*redirect)(struct dst_entry *, struct sock *, struct sk_buff *) ;
   int (*local_out)(struct net *, struct sock *, struct sk_buff *) ;
   struct neighbour *(*neigh_lookup)(struct dst_entry *, struct sk_buff *, void *) ;
   void (*confirm_neigh)(struct dst_entry *, void *) ;
   struct kmem_cache *kmem_cachep ;
   struct percpu_counter pcpuc_entries ;
};
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ipv6.h"
struct netns_sysctl_ipv6 {
   struct ctl_table_header *hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *icmp_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *xfrm6_hdr ;
   int bindv6only ;
   int flush_delay ;
   int ip6_rt_max_size ;
   int ip6_rt_gc_min_interval ;
   int ip6_rt_gc_timeout ;
   int ip6_rt_gc_interval ;
   int ip6_rt_gc_elasticity ;
   int ip6_rt_mtu_expires ;
   int ip6_rt_min_advmss ;
   int multipath_hash_policy ;
   int flowlabel_consistency ;
   int auto_flowlabels ;
   int icmpv6_time ;
   int icmpv6_echo_ignore_all ;
   int icmpv6_echo_ignore_multicast ;
   int icmpv6_echo_ignore_anycast ;
   unsigned long icmpv6_ratemask[4U] ;
   unsigned long *icmpv6_ratemask_ptr ;
   int anycast_src_echo_reply ;
   int ip_nonlocal_bind ;
   int fwmark_reflect ;
   int idgen_retries ;
   int idgen_delay ;
   int flowlabel_state_ranges ;
   int flowlabel_reflect ;
   int max_dst_opts_cnt ;
   int max_hbh_opts_cnt ;
   int max_dst_opts_len ;
   int max_hbh_opts_len ;
   int seg6_flowlabel ;
   bool skip_notify_on_dev_down ;
};
#line 56 
struct ipv6_devconf;
#line 56 
struct fib6_info;
#line 56 
struct rt6_info;
#line 56 
struct rt6_statistics;
#line 56 
struct fib6_table;
#line 56 
struct seg6_pernet_data;
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ipv6.h"
struct __anonstruct_ip6addrlbl_table_577 {
   struct hlist_head head ;
   spinlock_t lock ;
   u32 seq ;
};
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ipv6.h"
struct netns_ipv6 {
   struct netns_sysctl_ipv6 sysctl ;
   struct ipv6_devconf *devconf_all ;
   struct ipv6_devconf *devconf_dflt ;
   struct inet_peer_base *peers ;
   struct fqdir *fqdir ;
   struct xt_table *ip6table_filter ;
   struct xt_table *ip6table_mangle ;
   struct xt_table *ip6table_raw ;
   struct xt_table *ip6table_security ;
   struct xt_table *ip6table_nat ;
   struct fib6_info *fib6_null_entry ;
   struct rt6_info *ip6_null_entry ;
   struct rt6_statistics *rt6_stats ;
   struct timer_list ip6_fib_timer ;
   struct hlist_head *fib_table_hash ;
   struct fib6_table *fib6_main_tbl ;
   struct list_head fib6_walkers ;
   struct dst_ops ip6_dst_ops ;
   rwlock_t fib6_walker_lock ;
   spinlock_t fib6_gc_lock ;
   unsigned int ip6_rt_gc_expire ;
   unsigned long ip6_rt_last_gc ;
   unsigned int fib6_rules_require_fldissect ;
   bool fib6_has_custom_rules ;
   unsigned int fib6_routes_require_src ;
   struct rt6_info *ip6_prohibit_entry ;
   struct rt6_info *ip6_blk_hole_entry ;
   struct fib6_table *fib6_local_tbl ;
   struct fib_rules_ops *fib6_rules_ops ;
   struct sock **icmp_sk ;
   struct sock *ndisc_sk ;
   struct sock *tcp_sk ;
   struct sock *igmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct list_head mr6_tables ;
   struct fib_rules_ops *mr6_rules_ops ;
   atomic_t dev_addr_genid ;
   atomic_t fib6_sernum ;
   struct seg6_pernet_data *seg6_data ;
   struct fib_notifier_ops *notifier_ops ;
   struct fib_notifier_ops *ip6mr_notifier_ops ;
   unsigned int ipmr_seq ;
   struct __anonstruct_ip6addrlbl_table_577 ip6addrlbl_table ;
};
#line 121  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ipv6.h"
struct netns_nf_frag {
   struct fqdir *fqdir ;
};
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/nexthop.h"
struct netns_nexthop {
   struct rb_root rb_root ;
   struct hlist_head *devhash ;
   unsigned int seq ;
   u32 last_id_allocated ;
};
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ieee802154_6lowpan.h"
struct netns_sysctl_lowpan {
   struct ctl_table_header *frags_hdr ;
};
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ieee802154_6lowpan.h"
struct netns_ieee802154_lowpan {
   struct netns_sysctl_lowpan sysctl ;
   struct fqdir *fqdir ;
};
#line 21 
struct sctp_mib;
#line 10  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/sctp.h"
struct netns_sctp {
   struct sctp_mib *sctp_statistics ;
   struct proc_dir_entry *proc_net_sctp ;
   struct ctl_table_header *sysctl_header ;
   struct sock *ctl_sock ;
   struct list_head local_addr_list ;
   struct list_head addr_waitq ;
   struct timer_list addr_wq_timer ;
   struct list_head auto_asconf_splist ;
   spinlock_t addr_wq_lock ;
   spinlock_t local_addr_lock ;
   unsigned int rto_initial ;
   unsigned int rto_min ;
   unsigned int rto_max ;
   int rto_alpha ;
   int rto_beta ;
   int max_burst ;
   int cookie_preserve_enable ;
   char *sctp_hmac_alg ;
   unsigned int valid_cookie_life ;
   unsigned int sack_timeout ;
   unsigned int hb_interval ;
   int max_retrans_association ;
   int max_retrans_path ;
   int max_retrans_init ;
   int pf_retrans ;
   int ps_retrans ;
   int pf_enable ;
   int pf_expose ;
   int sndbuf_policy ;
   int rcvbuf_policy ;
   int default_auto_asconf ;
   int addip_enable ;
   int addip_noauth ;
   int prsctp_enable ;
   int reconf_enable ;
   int auth_enable ;
   int intl_enable ;
   int ecn_enable ;
   int scope_policy ;
   int rwnd_upd_shift ;
   unsigned long max_autoclose ;
};
#line 7  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/dccp.h"
struct netns_dccp {
   struct sock *v4_ctl_sk ;
   struct sock *v6_ctl_sk ;
};
#line 75  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/netfilter.h"
struct nf_logger;
#line 76 
struct nf_queue_handler;
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/netfilter.h"
struct nf_hook_entries;
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/netfilter.h"
struct netns_nf {
   struct proc_dir_entry *proc_netfilter ;
   struct nf_queue_handler *queue_handler ;
   struct nf_logger *nf_loggers[13U] ;
   struct ctl_table_header *nf_log_dir_header ;
   struct nf_hook_entries *hooks_ipv4[5U] ;
   struct nf_hook_entries *hooks_ipv6[5U] ;
   struct nf_hook_entries *hooks_arp[3U] ;
   struct nf_hook_entries *hooks_bridge[5U] ;
   struct nf_hook_entries *hooks_decnet[7U] ;
   bool defrag_ipv4 ;
   bool defrag_ipv6 ;
};
#line 37 
struct ebt_table;
#line 10  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/x_tables.h"
struct netns_xt {
   struct list_head tables[13U] ;
   bool notrack_deprecated_warning ;
   bool clusterip_deprecated_warning ;
   struct ebt_table *broute_table ;
   struct ebt_table *frame_filter ;
   struct ebt_table *frame_nat ;
};
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_nulls.h"
struct hlist_nulls_node;
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_nulls.h"
struct hlist_nulls_head {
   struct hlist_nulls_node *first ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_nulls.h"
struct hlist_nulls_node {
   struct hlist_nulls_node *next ;
   struct hlist_nulls_node **pprev ;
};
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct nf_generic_net {
   unsigned int timeout ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct nf_tcp_net {
   unsigned int timeouts[14U] ;
   int tcp_loose ;
   int tcp_be_liberal ;
   int tcp_max_retrans ;
};
#line 38  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct nf_udp_net {
   unsigned int timeouts[2U] ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct nf_icmp_net {
   unsigned int timeout ;
};
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct nf_dccp_net {
   int dccp_loose ;
   unsigned int dccp_timeout[10U] ;
};
#line 54  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct nf_sctp_net {
   unsigned int timeouts[10U] ;
};
#line 66  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct nf_gre_net {
   struct list_head keymap_list ;
   unsigned int timeouts[2U] ;
};
#line 72  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct nf_ip_net {
   struct nf_generic_net generic ;
   struct nf_tcp_net tcp ;
   struct nf_udp_net udp ;
   struct nf_icmp_net icmp ;
   struct nf_icmp_net icmpv6 ;
   struct nf_dccp_net dccp ;
   struct nf_sctp_net sctp ;
   struct nf_gre_net gre ;
};
#line 89  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct ct_pcpu {
   spinlock_t lock ;
   struct hlist_nulls_head unconfirmed ;
   struct hlist_nulls_head dying ;
};
#line 95 
struct nf_ct_event_notifier;
#line 95 
struct nf_exp_event_notifier;
#line 95  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct netns_ct {
   atomic_t count ;
   unsigned int expect_count ;
   struct delayed_work ecache_dwork ;
   bool ecache_dwork_pending ;
   bool auto_assign_helper_warned ;
   struct ctl_table_header *sysctl_header ;
   unsigned int sysctl_log_invalid ;
   int sysctl_events ;
   int sysctl_acct ;
   int sysctl_auto_assign_helper ;
   int sysctl_tstamp ;
   int sysctl_checksum ;
   struct ct_pcpu *pcpu_lists ;
   struct ip_conntrack_stat *stat ;
   struct nf_ct_event_notifier *nf_conntrack_event_cb ;
   struct nf_exp_event_notifier *nf_expect_event_cb ;
   struct nf_ip_net nf_ct_proto ;
   unsigned int labels_used ;
};
#line 7  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/nftables.h"
struct netns_nftables {
   struct list_head tables ;
   struct list_head commit_list ;
   struct list_head module_list ;
   struct mutex commit_mutex ;
   unsigned int base_seq ;
   u8 gencursor ;
   u8 validate_state ;
};
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/xfrm.h"
struct xfrm_policy_hash {
   struct hlist_head *table ;
   unsigned int hmask ;
   u8 dbits4 ;
   u8 sbits4 ;
   u8 dbits6 ;
   u8 sbits6 ;
};
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/xfrm.h"
struct xfrm_policy_hthresh {
   struct work_struct work ;
   seqlock_t lock ;
   u8 lbits4 ;
   u8 rbits4 ;
   u8 lbits6 ;
   u8 rbits6 ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/xfrm.h"
struct netns_xfrm {
   struct list_head state_all ;
   struct hlist_head *state_bydst ;
   struct hlist_head *state_bysrc ;
   struct hlist_head *state_byspi ;
   unsigned int state_hmask ;
   unsigned int state_num ;
   struct work_struct state_hash_work ;
   struct list_head policy_all ;
   struct hlist_head *policy_byidx ;
   unsigned int policy_idx_hmask ;
   struct hlist_head policy_inexact[3U] ;
   struct xfrm_policy_hash policy_bydst[3U] ;
   unsigned int policy_count[6U] ;
   struct work_struct policy_hash_work ;
   struct xfrm_policy_hthresh policy_hthresh ;
   struct list_head inexact_bins ;
   struct sock *nlsk ;
   struct sock *nlsk_stash ;
   u32 sysctl_aevent_etime ;
   u32 sysctl_aevent_rseqth ;
   int sysctl_larval_drop ;
   u32 sysctl_acq_expires ;
   struct ctl_table_header *sysctl_hdr ;
   struct dst_ops xfrm4_dst_ops ;
   struct dst_ops xfrm6_dst_ops ;
   spinlock_t xfrm_state_lock ;
   spinlock_t xfrm_policy_lock ;
   struct mutex xfrm_cfg_mutex ;
};
#line 79 
struct mpls_route;
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/mpls.h"
struct netns_mpls {
   int ip_ttl_propagate ;
   int default_ttl ;
   size_t platform_labels ;
   struct mpls_route **platform_label ;
   struct ctl_table_header *ctl ;
};
#line 20 
struct can_dev_rcv_lists;
#line 21 
struct can_pkg_stats;
#line 22 
struct can_rcv_lists_stats;
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/can.h"
struct netns_can {
   struct proc_dir_entry *proc_dir ;
   struct proc_dir_entry *pde_version ;
   struct proc_dir_entry *pde_stats ;
   struct proc_dir_entry *pde_reset_stats ;
   struct proc_dir_entry *pde_rcvlist_all ;
   struct proc_dir_entry *pde_rcvlist_fil ;
   struct proc_dir_entry *pde_rcvlist_inv ;
   struct proc_dir_entry *pde_rcvlist_sff ;
   struct proc_dir_entry *pde_rcvlist_eff ;
   struct proc_dir_entry *pde_rcvlist_err ;
   struct proc_dir_entry *bcmproc_dir ;
   struct can_dev_rcv_lists *rx_alldev_list ;
   spinlock_t rcvlists_lock ;
   struct timer_list stattimer ;
   struct can_pkg_stats *pkg_stats ;
   struct can_rcv_lists_stats *rcv_lists_stats ;
   struct hlist_head cgw_list ;
};
#line 8  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/xdp.h"
struct netns_xdp {
   struct mutex lock ;
   struct hlist_head list ;
};
#line 12 
struct proc_ns_operations;
#line 7  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ns_common.h"
struct ns_common {
   atomic_long_t stashed ;
   struct proc_ns_operations *ops ;
   unsigned int inum ;
};
#line 12 
struct net_generic;
#line 13 
struct uevent_sock;
#line 14 
struct netns_ipvs;
#line 55  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/net_namespace.h"
struct key_tag;
#line 55 
struct ucounts;
#line 55  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/net_namespace.h"
struct net {
   refcount_t passive ;
   refcount_t count ;
   spinlock_t rules_mod_lock ;
   unsigned int dev_unreg_count ;
   unsigned int dev_base_seq ;
   int ifindex ;
   spinlock_t nsid_lock ;
   atomic_t fnhe_genid ;
   struct list_head list ;
   struct list_head exit_list ;
   struct llist_node cleanup_list ;
   struct key_tag *key_domain ;
   struct user_namespace *user_ns ;
   struct ucounts *ucounts ;
   struct idr netns_ids ;
   struct ns_common ns ;
   struct list_head dev_base_head ;
   struct proc_dir_entry *proc_net ;
   struct proc_dir_entry *proc_net_stat ;
   struct ctl_table_set sysctls ;
   struct sock *rtnl ;
   struct sock *genl_sock ;
   struct uevent_sock *uevent_sock ;
   struct hlist_head *dev_name_head ;
   struct hlist_head *dev_index_head ;
   struct raw_notifier_head netdev_chain ;
   u32 hash_mix ;
   struct net_device *loopback_dev ;
   struct list_head rules_ops ;
   struct netns_core core ;
   struct netns_mib mib ;
   struct netns_packet packet ;
   struct netns_unix unx ;
   struct netns_nexthop nexthop ;
   struct netns_ipv4 ipv4 ;
   struct netns_ipv6 ipv6 ;
   struct netns_ieee802154_lowpan ieee802154_lowpan ;
   struct netns_sctp sctp ;
   struct netns_dccp dccp ;
   struct netns_nf nf ;
   struct netns_xt xt ;
   struct netns_ct ct ;
   struct netns_nftables nft ;
   struct netns_nf_frag nf_frag ;
   struct ctl_table_header *nf_frag_frags_hdr ;
   struct sock *nfnl ;
   struct sock *nfnl_stash ;
   struct list_head nfnl_acct_list ;
   struct list_head nfct_timeout_list ;
   struct sk_buff_head wext_nlevents ;
   struct net_generic *gen ;
   struct bpf_prog *flow_dissector_prog ;
   struct netns_xfrm xfrm ;
   struct netns_ipvs *ipvs ;
   struct netns_mpls mpls ;
   struct netns_can can ;
   struct netns_xdp xdp ;
   struct sock *crypto_nlsk ;
   struct sock *diag_nlsk ;
} __attribute__((__designated_init__));
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/assoc_array.h"
struct assoc_array_ptr;
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/assoc_array.h"
struct assoc_array {
   struct assoc_array_ptr *root ;
   unsigned long nr_leaves_on_tree ;
};
#line 83  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/assoc_array.h"
typedef int32_t key_serial_t;
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
typedef uint32_t key_perm_t;
#line 32 
struct key_type;
#line 85  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
struct key_tag {
   struct callback_head rcu ;
   refcount_t usage ;
   bool removed ;
};
#line 91  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
struct __anonstruct_590 {
   u16 desc_len ;
   char desc[6U] ;
};
#line 91  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
union __anonunion_589 {
   struct __anonstruct_590 __anonCompField___anonunion_589_103 ;
   unsigned long x ;
};
#line 91  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
struct keyring_index_key {
   unsigned long hash ;
   union __anonunion_589 __anonCompField_keyring_index_key_104 ;
   struct key_type *type ;
   struct key_tag *domain_tag ;
   char *description ;
};
#line 111  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
union key_payload {
   void *rcu_data0 ;
   void *data[4U] ;
};
#line 153  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
struct key_restriction {
   int (*check)(struct key *, struct key_type *, union key_payload *, struct key *) ;
   struct key *key ;
   struct key_type *keytype ;
};
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
union __anonunion_591 {
   struct list_head graveyard_link ;
   struct rb_node serial_node ;
};
#line 172 
struct key_user;
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
union __anonunion_592 {
   time64_t expiry ;
   time64_t revoked_at ;
};
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
struct __anonstruct_594 {
   unsigned long hash ;
   unsigned long len_desc ;
   struct key_type *type ;
   struct key_tag *domain_tag ;
   char *description ;
};
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
union __anonunion_593 {
   struct keyring_index_key index_key ;
   struct __anonstruct_594 __anonCompField___anonunion_593_107 ;
};
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
struct __anonstruct_596 {
   struct list_head name_link ;
   struct assoc_array keys ;
};
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
union __anonunion_595 {
   union key_payload payload ;
   struct __anonstruct_596 __anonCompField___anonunion_595_109 ;
};
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
struct key {
   refcount_t usage ;
   key_serial_t serial ;
   union __anonunion_591 __anonCompField_key_105 ;
   struct rw_semaphore sem ;
   struct key_user *user ;
   void *security ;
   union __anonunion_592 __anonCompField_key_106 ;
   time64_t last_used_at ;
   kuid_t uid ;
   kgid_t gid ;
   key_perm_t perm ;
   unsigned short quotalen ;
   unsigned short datalen ;
   short state ;
   unsigned long flags ;
   union __anonunion_593 __anonCompField_key_108 ;
   union __anonunion_595 __anonCompField_key_110 ;
   struct key_restriction *restrict_link ;
};
#line 13  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched/user.h"
struct user_struct {
   refcount_t __count ;
   atomic_t processes ;
   atomic_t sigpending ;
   atomic_t fanotify_listeners ;
   atomic_long_t epoll_watches ;
   unsigned long mq_bytes ;
   unsigned long locked_shm ;
   unsigned long unix_inflight ;
   atomic_long_t pipe_bufs ;
   struct hlist_node uidhash_node ;
   kuid_t uid ;
   atomic_long_t locked_vm ;
   struct ratelimit_state ratelimit ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cred.h"
struct group_info {
   atomic_t usage ;
   int ngroups ;
   kgid_t gid[0U] ;
} __attribute__((__designated_init__));
#line 111  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cred.h"
union __anonunion_599 {
   int non_rcu ;
   struct callback_head rcu ;
};
#line 111  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cred.h"
struct cred {
   atomic_t usage ;
   atomic_t subscribers ;
   void *put_addr ;
   unsigned int magic ;
   kuid_t uid ;
   kgid_t gid ;
   kuid_t suid ;
   kgid_t sgid ;
   kuid_t euid ;
   kgid_t egid ;
   kuid_t fsuid ;
   kgid_t fsgid ;
   unsigned int securebits ;
   kernel_cap_t cap_inheritable ;
   kernel_cap_t cap_permitted ;
   kernel_cap_t cap_effective ;
   kernel_cap_t cap_bset ;
   kernel_cap_t cap_ambient ;
   unsigned char jit_keyring ;
   struct key *session_keyring ;
   struct key *process_keyring ;
   struct key *thread_keyring ;
   struct key *request_key_auth ;
   void *security ;
   struct user_struct *user ;
   struct user_namespace *user_ns ;
   struct group_info *group_info ;
   union __anonunion_599 __anonCompField_cred_111 ;
} __attribute__((__designated_init__));
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/seq_file.h"
struct seq_file {
   char *buf ;
   size_t size ;
   size_t from ;
   size_t count ;
   size_t pad_until ;
   loff_t index ;
   loff_t read_pos ;
   u64 version ;
   struct mutex lock ;
   struct seq_operations *op ;
   int poll_event ;
   struct file *file ;
   void *private ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/seq_file.h"
struct seq_operations {
   void *(*start)(struct seq_file *, loff_t *) ;
   void (*stop)(struct seq_file *, void *) ;
   void *(*next)(struct seq_file *, void *, loff_t *) ;
   int (*show)(struct seq_file *, void *) ;
};
#line 275  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/net_namespace.h"
struct __anonstruct_possible_net_t_600 {
   struct net *net ;
};
#line 275  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/net_namespace.h"
typedef struct __anonstruct_possible_net_t_600 possible_net_t;
#line 58  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct ieee_ets {
   __u8 willing ;
   __u8 ets_cap ;
   __u8 cbs ;
   __u8 tc_tx_bw[8U] ;
   __u8 tc_rx_bw[8U] ;
   __u8 tc_tsa[8U] ;
   __u8 prio_tc[8U] ;
   __u8 tc_reco_bw[8U] ;
   __u8 tc_reco_tsa[8U] ;
   __u8 reco_prio_tc[8U] ;
};
#line 78  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct ieee_maxrate {
   __u64 tc_maxrate[8U] ;
};
#line 119  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct ieee_qcn {
   __u8 rpg_enable[8U] ;
   __u32 rppp_max_rps[8U] ;
   __u32 rpg_time_reset[8U] ;
   __u32 rpg_byte_reset[8U] ;
   __u32 rpg_threshold[8U] ;
   __u32 rpg_max_rate[8U] ;
   __u32 rpg_ai_rate[8U] ;
   __u32 rpg_hai_rate[8U] ;
   __u32 rpg_gd[8U] ;
   __u32 rpg_min_dec_fac[8U] ;
   __u32 rpg_min_rate[8U] ;
   __u32 cndd_state_machine[8U] ;
};
#line 141  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct ieee_qcn_stats {
   __u64 rppp_rp_centiseconds[8U] ;
   __u32 rppp_created_rps[8U] ;
};
#line 157  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct ieee_pfc {
   __u8 pfc_cap ;
   __u8 pfc_en ;
   __u8 mbc ;
   __u16 delay ;
   __u64 requests[8U] ;
   __u64 indications[8U] ;
};
#line 168  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct dcbnl_buffer {
   __u8 prio2buffer[8U] ;
   __u32 buffer_size[8U] ;
   __u32 total_size ;
};
#line 190  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct cee_pg {
   __u8 willing ;
   __u8 error ;
   __u8 pg_en ;
   __u8 tcs_supported ;
   __u8 pg_bw[8U] ;
   __u8 prio_pg[8U] ;
};
#line 207  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct cee_pfc {
   __u8 willing ;
   __u8 error ;
   __u8 pfc_en ;
   __u8 tcs_supported ;
};
#line 244  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct dcb_app {
   __u8 selector ;
   __u8 priority ;
   __u16 protocol ;
};
#line 259  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct dcb_peer_app_info {
   __u8 willing ;
   __u8 error ;
};
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/dcbnl.h"
struct dcbnl_rtnl_ops {
   int (*ieee_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_setets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_getmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_setmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_getqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_setqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_getqcnstats)(struct net_device *, struct ieee_qcn_stats *) ;
   int (*ieee_getpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_setpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_getapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_setapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_delapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_peer_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_peer_getpfc)(struct net_device *, struct ieee_pfc *) ;
   u8 (*getstate)(struct net_device *) ;
   u8 (*setstate)(struct net_device *, u8 ) ;
   void (*getpermhwaddr)(struct net_device *, u8 *) ;
   void (*setpgtccfgtx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgtx)(struct net_device *, int , u8 ) ;
   void (*setpgtccfgrx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgrx)(struct net_device *, int , u8 ) ;
   void (*getpgtccfgtx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgtx)(struct net_device *, int , u8 *) ;
   void (*getpgtccfgrx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgrx)(struct net_device *, int , u8 *) ;
   void (*setpfccfg)(struct net_device *, int , u8 ) ;
   void (*getpfccfg)(struct net_device *, int , u8 *) ;
   u8 (*setall)(struct net_device *) ;
   u8 (*getcap)(struct net_device *, int , u8 *) ;
   int (*getnumtcs)(struct net_device *, int , u8 *) ;
   int (*setnumtcs)(struct net_device *, int , u8 ) ;
   u8 (*getpfcstate)(struct net_device *) ;
   void (*setpfcstate)(struct net_device *, u8 ) ;
   void (*getbcncfg)(struct net_device *, int , u32 *) ;
   void (*setbcncfg)(struct net_device *, int , u32 ) ;
   void (*getbcnrp)(struct net_device *, int , u8 *) ;
   void (*setbcnrp)(struct net_device *, int , u8 ) ;
   int (*setapp)(struct net_device *, u8 , u16 , u8 ) ;
   int (*getapp)(struct net_device *, u8 , u16 ) ;
   u8 (*getfeatcfg)(struct net_device *, int , u8 *) ;
   u8 (*setfeatcfg)(struct net_device *, int , u8 ) ;
   u8 (*getdcbx)(struct net_device *) ;
   u8 (*setdcbx)(struct net_device *, u8 ) ;
   int (*peer_getappinfo)(struct net_device *, struct dcb_peer_app_info *, u16 *) ;
   int (*peer_getapptable)(struct net_device *, struct dcb_app *) ;
   int (*cee_peer_getpg)(struct net_device *, struct cee_pg *) ;
   int (*cee_peer_getpfc)(struct net_device *, struct cee_pfc *) ;
   int (*dcbnl_getbuffer)(struct net_device *, struct dcbnl_buffer *) ;
   int (*dcbnl_setbuffer)(struct net_device *, struct dcbnl_buffer *) ;
};
#line 41  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/taskstats.h"
struct taskstats {
   __u16 version ;
   __u32 ac_exitcode ;
   __u8 ac_flag ;
   __u8 ac_nice ;
   __u64 cpu_count ;
   __u64 cpu_delay_total ;
   __u64 blkio_count ;
   __u64 blkio_delay_total ;
   __u64 swapin_count ;
   __u64 swapin_delay_total ;
   __u64 cpu_run_real_total ;
   __u64 cpu_run_virtual_total ;
   char ac_comm[32U] ;
   __u8 ac_sched ;
   __u8 ac_pad[3U] ;
   __u32 ac_uid ;
   __u32 ac_gid ;
   __u32 ac_pid ;
   __u32 ac_ppid ;
   __u32 ac_btime ;
   __u64 ac_etime ;
   __u64 ac_utime ;
   __u64 ac_stime ;
   __u64 ac_minflt ;
   __u64 ac_majflt ;
   __u64 coremem ;
   __u64 virtmem ;
   __u64 hiwater_rss ;
   __u64 hiwater_vm ;
   __u64 read_char ;
   __u64 write_char ;
   __u64 read_syscalls ;
   __u64 write_syscalls ;
   __u64 read_bytes ;
   __u64 write_bytes ;
   __u64 cancelled_write_bytes ;
   __u64 nvcsw ;
   __u64 nivcsw ;
   __u64 ac_utimescaled ;
   __u64 ac_stimescaled ;
   __u64 cpu_scaled_run_real_total ;
   __u64 freepages_count ;
   __u64 freepages_delay_total ;
   __u64 thrashing_count ;
   __u64 thrashing_delay_total ;
};
#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/cgroupstats.h"
struct mnt_namespace;
#line 60 
struct uts_namespace;
#line 61 
struct ipc_namespace;
#line 62 
struct cgroup_namespace;
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/nsproxy.h"
struct nsproxy {
   atomic_t count ;
   struct uts_namespace *uts_ns ;
   struct ipc_namespace *ipc_ns ;
   struct mnt_namespace *mnt_ns ;
   struct pid_namespace *pid_ns_for_children ;
   struct net *net_ns ;
   struct cgroup_namespace *cgroup_ns ;
};
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/user_namespace.h"
struct uid_gid_extent {
   u32 first ;
   u32 lower_first ;
   u32 count ;
};
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/user_namespace.h"
struct __anonstruct_602 {
   struct uid_gid_extent *forward ;
   struct uid_gid_extent *reverse ;
};
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/user_namespace.h"
union __anonunion_601 {
   struct uid_gid_extent extent[5U] ;
   struct __anonstruct_602 __anonCompField___anonunion_601_112 ;
};
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/user_namespace.h"
struct uid_gid_map {
   u32 nr_extents ;
   union __anonunion_601 __anonCompField_uid_gid_map_113 ;
};
#line 55  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/user_namespace.h"
struct user_namespace {
   struct uid_gid_map uid_map ;
   struct uid_gid_map gid_map ;
   struct uid_gid_map projid_map ;
   atomic_t count ;
   struct user_namespace *parent ;
   int level ;
   kuid_t owner ;
   kgid_t group ;
   struct ns_common ns ;
   unsigned long flags ;
   struct list_head keyring_name_list ;
   struct key *user_keyring_register ;
   struct rw_semaphore keyring_sem ;
   struct key *persistent_keyring_register ;
   struct work_struct work ;
   struct ctl_table_set set ;
   struct ctl_table_header *sysctls ;
   struct ucounts *ucounts ;
   int ucount_max[9U] ;
} __attribute__((__designated_init__));
#line 91  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/user_namespace.h"
struct ucounts {
   struct hlist_node node ;
   struct user_namespace *ns ;
   kuid_t uid ;
   int count ;
   atomic_t ucount[9U] ;
};
#line 604  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/interrupt.h"
struct tasklet_struct {
   struct tasklet_struct *next ;
   unsigned long state ;
   atomic_t count ;
   void (*func)(unsigned long ) ;
   unsigned long data ;
};
#line 65  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct bpf_insn {
   __u8 code ;
   __u8 dst_reg : 4 ;
   __u8 src_reg : 4 ;
   __s16 off ;
   __s32 imm ;
};
#line 79  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct bpf_cgroup_storage_key {
   __u64 cgroup_inode_id ;
   __u32 attach_type ;
};
#line 110 
enum bpf_map_type {
    BPF_MAP_TYPE_UNSPEC = 0,
    BPF_MAP_TYPE_HASH = 1,
    BPF_MAP_TYPE_ARRAY = 2,
    BPF_MAP_TYPE_PROG_ARRAY = 3,
    BPF_MAP_TYPE_PERF_EVENT_ARRAY = 4,
    BPF_MAP_TYPE_PERCPU_HASH = 5,
    BPF_MAP_TYPE_PERCPU_ARRAY = 6,
    BPF_MAP_TYPE_STACK_TRACE = 7,
    BPF_MAP_TYPE_CGROUP_ARRAY = 8,
    BPF_MAP_TYPE_LRU_HASH = 9,
    BPF_MAP_TYPE_LRU_PERCPU_HASH = 10,
    BPF_MAP_TYPE_LPM_TRIE = 11,
    BPF_MAP_TYPE_ARRAY_OF_MAPS = 12,
    BPF_MAP_TYPE_HASH_OF_MAPS = 13,
    BPF_MAP_TYPE_DEVMAP = 14,
    BPF_MAP_TYPE_SOCKMAP = 15,
    BPF_MAP_TYPE_CPUMAP = 16,
    BPF_MAP_TYPE_XSKMAP = 17,
    BPF_MAP_TYPE_SOCKHASH = 18,
    BPF_MAP_TYPE_CGROUP_STORAGE = 19,
    BPF_MAP_TYPE_REUSEPORT_SOCKARRAY = 20,
    BPF_MAP_TYPE_PERCPU_CGROUP_STORAGE = 21,
    BPF_MAP_TYPE_QUEUE = 22,
    BPF_MAP_TYPE_STACK = 23,
    BPF_MAP_TYPE_SK_STORAGE = 24,
    BPF_MAP_TYPE_DEVMAP_HASH = 25
};
#line 139 
enum bpf_prog_type {
    BPF_PROG_TYPE_UNSPEC = 0,
    BPF_PROG_TYPE_SOCKET_FILTER = 1,
    BPF_PROG_TYPE_KPROBE = 2,
    BPF_PROG_TYPE_SCHED_CLS = 3,
    BPF_PROG_TYPE_SCHED_ACT = 4,
    BPF_PROG_TYPE_TRACEPOINT = 5,
    BPF_PROG_TYPE_XDP = 6,
    BPF_PROG_TYPE_PERF_EVENT = 7,
    BPF_PROG_TYPE_CGROUP_SKB = 8,
    BPF_PROG_TYPE_CGROUP_SOCK = 9,
    BPF_PROG_TYPE_LWT_IN = 10,
    BPF_PROG_TYPE_LWT_OUT = 11,
    BPF_PROG_TYPE_LWT_XMIT = 12,
    BPF_PROG_TYPE_SOCK_OPS = 13,
    BPF_PROG_TYPE_SK_SKB = 14,
    BPF_PROG_TYPE_CGROUP_DEVICE = 15,
    BPF_PROG_TYPE_SK_MSG = 16,
    BPF_PROG_TYPE_RAW_TRACEPOINT = 17,
    BPF_PROG_TYPE_CGROUP_SOCK_ADDR = 18,
    BPF_PROG_TYPE_LWT_SEG6LOCAL = 19,
    BPF_PROG_TYPE_LIRC_MODE2 = 20,
    BPF_PROG_TYPE_SK_REUSEPORT = 21,
    BPF_PROG_TYPE_FLOW_DISSECTOR = 22,
    BPF_PROG_TYPE_CGROUP_SYSCTL = 23,
    BPF_PROG_TYPE_RAW_TRACEPOINT_WRITABLE = 24,
    BPF_PROG_TYPE_CGROUP_SOCKOPT = 25,
    BPF_PROG_TYPE_TRACING = 26
};
#line 169 
enum bpf_attach_type {
    BPF_CGROUP_INET_INGRESS = 0,
    BPF_CGROUP_INET_EGRESS = 1,
    BPF_CGROUP_INET_SOCK_CREATE = 2,
    BPF_CGROUP_SOCK_OPS = 3,
    BPF_SK_SKB_STREAM_PARSER = 4,
    BPF_SK_SKB_STREAM_VERDICT = 5,
    BPF_CGROUP_DEVICE = 6,
    BPF_SK_MSG_VERDICT = 7,
    BPF_CGROUP_INET4_BIND = 8,
    BPF_CGROUP_INET6_BIND = 9,
    BPF_CGROUP_INET4_CONNECT = 10,
    BPF_CGROUP_INET6_CONNECT = 11,
    BPF_CGROUP_INET4_POST_BIND = 12,
    BPF_CGROUP_INET6_POST_BIND = 13,
    BPF_CGROUP_UDP4_SENDMSG = 14,
    BPF_CGROUP_UDP6_SENDMSG = 15,
    BPF_LIRC_MODE2 = 16,
    BPF_FLOW_DISSECTOR = 17,
    BPF_CGROUP_SYSCTL = 18,
    BPF_CGROUP_UDP4_RECVMSG = 19,
    BPF_CGROUP_UDP6_RECVMSG = 20,
    BPF_CGROUP_GETSOCKOPT = 21,
    BPF_CGROUP_SETSOCKOPT = 22,
    BPF_TRACE_RAW_TP = 23,
    BPF_TRACE_FENTRY = 24,
    BPF_TRACE_FEXIT = 25,
    __MAX_BPF_ATTACH_TYPE = 26
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_604 {
   __u32 map_type ;
   __u32 key_size ;
   __u32 value_size ;
   __u32 max_entries ;
   __u32 map_flags ;
   __u32 inner_map_fd ;
   __u32 numa_node ;
   char map_name[16U] ;
   __u32 map_ifindex ;
   __u32 btf_fd ;
   __u32 btf_key_type_id ;
   __u32 btf_value_type_id ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
union __anonunion_606 {
   __u64 value ;
   __u64 next_key ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_605 {
   __u32 map_fd ;
   __u64 key ;
   union __anonunion_606 __anonCompField___anonstruct_605_116 ;
   __u64 flags ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_607 {
   __u32 prog_type ;
   __u32 insn_cnt ;
   __u64 insns ;
   __u64 license ;
   __u32 log_level ;
   __u32 log_size ;
   __u64 log_buf ;
   __u32 kern_version ;
   __u32 prog_flags ;
   char prog_name[16U] ;
   __u32 prog_ifindex ;
   __u32 expected_attach_type ;
   __u32 prog_btf_fd ;
   __u32 func_info_rec_size ;
   __u64 func_info ;
   __u32 func_info_cnt ;
   __u32 line_info_rec_size ;
   __u64 line_info ;
   __u32 line_info_cnt ;
   __u32 attach_btf_id ;
   __u32 attach_prog_fd ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_608 {
   __u64 pathname ;
   __u32 bpf_fd ;
   __u32 file_flags ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_609 {
   __u32 target_fd ;
   __u32 attach_bpf_fd ;
   __u32 attach_type ;
   __u32 attach_flags ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_test_610 {
   __u32 prog_fd ;
   __u32 retval ;
   __u32 data_size_in ;
   __u32 data_size_out ;
   __u64 data_in ;
   __u64 data_out ;
   __u32 repeat ;
   __u32 duration ;
   __u32 ctx_size_in ;
   __u32 ctx_size_out ;
   __u64 ctx_in ;
   __u64 ctx_out ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
union __anonunion_612 {
   __u32 start_id ;
   __u32 prog_id ;
   __u32 map_id ;
   __u32 btf_id ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_611 {
   union __anonunion_612 __anonCompField___anonstruct_611_121 ;
   __u32 next_id ;
   __u32 open_flags ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_info_613 {
   __u32 bpf_fd ;
   __u32 info_len ;
   __u64 info ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_query_614 {
   __u32 target_fd ;
   __u32 attach_type ;
   __u32 query_flags ;
   __u32 attach_flags ;
   __u64 prog_ids ;
   __u32 prog_cnt ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_raw_tracepoint_615 {
   __u64 name ;
   __u32 prog_fd ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_616 {
   __u64 btf ;
   __u64 btf_log_buf ;
   __u32 btf_size ;
   __u32 btf_log_size ;
   __u32 btf_log_level ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_task_fd_query_617 {
   __u32 pid ;
   __u32 fd ;
   __u32 flags ;
   __u32 buf_len ;
   __u64 buf ;
   __u32 prog_id ;
   __u32 fd_type ;
   __u64 probe_offset ;
   __u64 probe_addr ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
union bpf_attr {
   struct __anonstruct_604 __anonCompField_bpf_attr_115 ;
   struct __anonstruct_605 __anonCompField_bpf_attr_117 ;
   struct __anonstruct_607 __anonCompField_bpf_attr_118 ;
   struct __anonstruct_608 __anonCompField_bpf_attr_119 ;
   struct __anonstruct_609 __anonCompField_bpf_attr_120 ;
   struct __anonstruct_test_610 test ;
   struct __anonstruct_611 __anonCompField_bpf_attr_122 ;
   struct __anonstruct_info_613 info ;
   struct __anonstruct_query_614 query ;
   struct __anonstruct_raw_tracepoint_615 raw_tracepoint ;
   struct __anonstruct_616 __anonCompField_bpf_attr_123 ;
   struct __anonstruct_task_fd_query_617 task_fd_query ;
} __attribute__((__aligned__(8)));
#line 3653  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct bpf_func_info {
   __u32 insn_off ;
   __u32 type_id ;
};
#line 3661  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct bpf_line_info {
   __u32 insn_off ;
   __u32 file_name_off ;
   __u32 line_off ;
   __u32 line_col ;
};
#line 95  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/file.h"
struct bpf_prog_aux;
#line 96 
struct bpf_map;
#line 97 
struct btf;
#line 98 
struct btf_type;
#line 37  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_map_ops {
   int (*map_alloc_check)(union bpf_attr *) ;
   struct bpf_map *(*map_alloc)(union bpf_attr *) ;
   void (*map_release)(struct bpf_map *, struct file *) ;
   void (*map_free)(struct bpf_map *) ;
   int (*map_get_next_key)(struct bpf_map *, void *, void *) ;
   void (*map_release_uref)(struct bpf_map *) ;
   void *(*map_lookup_elem_sys_only)(struct bpf_map *, void *) ;
   void *(*map_lookup_elem)(struct bpf_map *, void *) ;
   int (*map_update_elem)(struct bpf_map *, void *, void *, u64 ) ;
   int (*map_delete_elem)(struct bpf_map *, void *) ;
   int (*map_push_elem)(struct bpf_map *, void *, u64 ) ;
   int (*map_pop_elem)(struct bpf_map *, void *) ;
   int (*map_peek_elem)(struct bpf_map *, void *) ;
   void *(*map_fd_get_ptr)(struct bpf_map *, struct file *, int ) ;
   void (*map_fd_put_ptr)(void *) ;
   u32 (*map_gen_lookup)(struct bpf_map *, struct bpf_insn *) ;
   u32 (*map_fd_sys_lookup_elem)(void *) ;
   void (*map_seq_show_elem)(struct bpf_map *, void *, struct seq_file *) ;
   int (*map_check_btf)(struct bpf_map *, struct btf *, struct btf_type *, struct btf_type *) ;
   int (*map_poke_track)(struct bpf_map *, struct bpf_prog_aux *) ;
   void (*map_poke_untrack)(struct bpf_map *, struct bpf_prog_aux *) ;
   void (*map_poke_run)(struct bpf_map *, u32 , struct bpf_prog *, struct bpf_prog *) ;
   int (*map_direct_value_addr)(struct bpf_map *, u64 *, u32 ) ;
   int (*map_direct_value_meta)(struct bpf_map *, u64 , u32 *) ;
   int (*map_mmap)(struct bpf_map *, struct vm_area_struct *) ;
};
#line 82  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_map_memory {
   u32 pages ;
   struct user_struct *user ;
};
#line 87  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_map {
   struct bpf_map_ops *ops ;
   struct bpf_map *inner_map_meta ;
   void *security ;
   enum bpf_map_type map_type ;
   u32 key_size ;
   u32 value_size ;
   u32 max_entries ;
   u32 map_flags ;
   int spin_lock_off ;
   u32 id ;
   int numa_node ;
   u32 btf_key_type_id ;
   u32 btf_value_type_id ;
   struct btf *btf ;
   struct bpf_map_memory memory ;
   char name[16U] ;
   bool unpriv_array ;
   bool frozen ;
   atomic64_t refcnt ;
   atomic64_t usercnt ;
   struct work_struct work ;
   struct mutex freeze_mutex ;
   u64 writecnt ;
};
#line 151 
struct bpf_offload_dev;
#line 152 
struct bpf_offloaded_map;
#line 156  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_map_dev_ops {
   int (*map_get_next_key)(struct bpf_offloaded_map *, void *, void *) ;
   int (*map_lookup_elem)(struct bpf_offloaded_map *, void *, void *) ;
   int (*map_update_elem)(struct bpf_offloaded_map *, void *, void *, u64 ) ;
   int (*map_delete_elem)(struct bpf_offloaded_map *, void *) ;
};
#line 166  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_offloaded_map {
   struct bpf_map map ;
   struct net_device *netdev ;
   struct bpf_map_dev_ops *dev_ops ;
   void *dev_priv ;
   struct list_head offloads ;
};
#line 327  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_prog_ops {
   int (*test_run)(struct bpf_prog *, union bpf_attr *, union bpf_attr *) ;
};
#line 369  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_prog_offload {
   struct bpf_prog *prog ;
   struct net_device *netdev ;
   struct bpf_offload_dev *offdev ;
   void *dev_priv ;
   struct list_head offloads ;
   bool dev_state ;
   bool opt_failed ;
   void *jited_image ;
   u32 jited_len ;
};
#line 394  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_prog_stats {
   u64 cnt ;
   u64 nsecs ;
   struct u64_stats_sync syncp ;
} __attribute__((__aligned__(16)));
#line 400  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct btf_func_model {
   u8 ret_size ;
   u8 nr_args ;
   u8 arg_size[12U] ;
};
#line 447 
enum bpf_tramp_prog_type {
    BPF_TRAMP_FENTRY = 0,
    BPF_TRAMP_FEXIT = 1,
    BPF_TRAMP_MAX = 2
};
#line 454  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct __anonstruct_func_644 {
   struct btf_func_model model ;
   void *addr ;
   bool ftrace_managed ;
};
#line 454  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_trampoline {
   struct hlist_node hlist ;
   struct mutex mutex ;
   refcount_t refcnt ;
   u64 key ;
   struct __anonstruct_func_644 func ;
   struct hlist_head progs_hlist[2U] ;
   int progs_cnt[2U] ;
   void *image ;
   u64 selector ;
};
#line 495  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_func_info_aux {
   bool unreliable ;
};
#line 504  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct __anonstruct_tail_call_646 {
   struct bpf_map *map ;
   u32 key ;
};
#line 504  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
union __anonunion_645 {
   struct __anonstruct_tail_call_646 tail_call ;
};
#line 504  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_jit_poke_descriptor {
   void *ip ;
   union __anonunion_645 __anonCompField_bpf_jit_poke_descriptor_148 ;
   bool ip_stable ;
   u8 adj_off ;
   u16 reason ;
};
#line 517  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
union __anonunion_647 {
   struct work_struct work ;
   struct callback_head rcu ;
};
#line 517  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_prog_aux {
   atomic64_t refcnt ;
   u32 used_map_cnt ;
   u32 max_ctx_offset ;
   u32 max_pkt_offset ;
   u32 max_tp_access ;
   u32 stack_depth ;
   u32 id ;
   u32 func_cnt ;
   u32 func_idx ;
   u32 attach_btf_id ;
   struct bpf_prog *linked_prog ;
   bool verifier_zext ;
   bool offload_requested ;
   bool attach_btf_trace ;
   bool func_proto_unreliable ;
   enum bpf_tramp_prog_type trampoline_prog_type ;
   struct bpf_trampoline *trampoline ;
   struct hlist_node tramp_hlist ;
   struct btf_type *attach_func_proto ;
   char *attach_func_name ;
   struct bpf_prog **func ;
   void *jit_data ;
   struct bpf_jit_poke_descriptor *poke_tab ;
   u32 size_poke_tab ;
   struct latch_tree_node ksym_tnode ;
   struct list_head ksym_lnode ;
   struct bpf_prog_ops *ops ;
   struct bpf_map **used_maps ;
   struct bpf_prog *prog ;
   struct user_struct *user ;
   u64 load_time ;
   struct bpf_map *cgroup_storage[2U] ;
   char name[16U] ;
   void *security ;
   struct bpf_prog_offload *offload ;
   struct btf *btf ;
   struct bpf_func_info *func_info ;
   struct bpf_func_info_aux *func_info_aux ;
   struct bpf_line_info *linfo ;
   void **jited_linfo ;
   u32 func_info_cnt ;
   u32 nr_linfo ;
   u32 linfo_idx ;
   u32 num_exentries ;
   struct exception_table_entry *extable ;
   struct bpf_prog_stats *stats ;
   union __anonunion_647 __anonCompField_bpf_prog_aux_149 ;
};
#line 686 
struct bpf_cgroup_storage;
#line 686  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_prog_array_item {
   struct bpf_prog *prog ;
   struct bpf_cgroup_storage *cgroup_storage[2U] ;
};
#line 691  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_prog_array {
   struct callback_head rcu ;
   struct bpf_prog_array_item items[0U] ;
};
#line 1335 
struct cgroup;
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf-cgroup.h"
struct bpf_cgroup_storage_map;
#line 37  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf-cgroup.h"
struct bpf_storage_buffer {
   struct callback_head rcu ;
   char data[0U] ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf-cgroup.h"
union __anonunion_649 {
   struct bpf_storage_buffer *buf ;
   void *percpu_buf ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf-cgroup.h"
struct bpf_cgroup_storage {
   union __anonunion_649 __anonCompField_bpf_cgroup_storage_151 ;
   struct bpf_cgroup_storage_map *map ;
   struct bpf_cgroup_storage_key key ;
   struct list_head list ;
   struct rb_node node ;
   struct callback_head rcu ;
};
#line 62  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf-cgroup.h"
struct cgroup_bpf {
   struct bpf_prog_array *effective[26U] ;
   struct list_head progs[26U] ;
   u32 flags[26U] ;
   struct bpf_prog_array *inactive ;
   struct percpu_ref refcnt ;
   struct work_struct release_work ;
};
#line 69  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kthread.h"
struct kthread_work;
#line 86  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kthread.h"
struct kthread_worker {
   unsigned int flags ;
   raw_spinlock_t lock ;
   struct list_head work_list ;
   struct list_head delayed_work_list ;
   struct task_struct *task ;
   struct kthread_work *current_work ;
};
#line 95  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kthread.h"
struct kthread_work {
   struct list_head node ;
   void (*func)(struct kthread_work *) ;
   struct kthread_worker *worker ;
   int canceling ;
};
#line 103  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kthread.h"
struct kthread_delayed_work {
   struct kthread_work work ;
   struct timer_list timer ;
};
#line 199 
struct cgroup_subsys_state;
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/psi_types.h"
struct psi_group_cpu {
   seqcount_t seq ;
   unsigned int tasks[3U] ;
   u32 state_mask ;
   u32 times[6U] ;
   u64 state_start ;
   u32 times_prev[2U][6U] ;
};
#line 96 
struct psi_group;
#line 128  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/psi_types.h"
struct psi_group {
   struct mutex avgs_lock ;
   struct psi_group_cpu *pcpu ;
   u64 avg_total[5U] ;
   u64 avg_last_update ;
   u64 avg_next_update ;
   struct delayed_work avgs_work ;
   u64 total[2U][5U] ;
   unsigned long avg[5U][3U] ;
   atomic_t poll_scheduled ;
   struct kthread_worker *poll_kworker ;
   struct kthread_delayed_work poll_work ;
   struct mutex trigger_lock ;
   struct list_head triggers ;
   u32 nr_triggers[5U] ;
   u32 poll_states ;
   u64 poll_min_period ;
   u64 polling_total[5U] ;
   u64 polling_next_update ;
   u64 polling_until ;
};
#line 166 
struct cgroup_root;
#line 167 
struct cgroup_subsys;
#line 168 
struct cgroup_taskset;
#line 119  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cgroup_file {
   struct kernfs_node *kn ;
   unsigned long notified_at ;
   struct timer_list notify_timer ;
};
#line 133  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cgroup_subsys_state {
   struct cgroup *cgroup ;
   struct cgroup_subsys *ss ;
   struct percpu_ref refcnt ;
   struct list_head sibling ;
   struct list_head children ;
   struct list_head rstat_css_node ;
   int id ;
   unsigned int flags ;
   u64 serial_nr ;
   atomic_t online_cnt ;
   struct work_struct destroy_work ;
   struct rcu_work destroy_rwork ;
   struct cgroup_subsys_state *parent ;
};
#line 190  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct css_set {
   struct cgroup_subsys_state *subsys[14U] ;
   refcount_t refcount ;
   struct css_set *dom_cset ;
   struct cgroup *dfl_cgrp ;
   int nr_tasks ;
   struct list_head tasks ;
   struct list_head mg_tasks ;
   struct list_head dying_tasks ;
   struct list_head task_iters ;
   struct list_head e_cset_node[14U] ;
   struct list_head threaded_csets ;
   struct list_head threaded_csets_node ;
   struct hlist_node hlist ;
   struct list_head cgrp_links ;
   struct list_head mg_preload_node ;
   struct list_head mg_node ;
   struct cgroup *mg_src_cgrp ;
   struct cgroup *mg_dst_cgrp ;
   struct css_set *mg_dst_cset ;
   bool dead ;
   struct callback_head callback_head ;
};
#line 279  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cgroup_base_stat {
   struct task_cputime cputime ;
};
#line 303  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cgroup_rstat_cpu {
   struct u64_stats_sync bsync ;
   struct cgroup_base_stat bstat ;
   struct cgroup_base_stat last_bstat ;
   struct cgroup *updated_children ;
   struct cgroup *updated_next ;
};
#line 332  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cgroup_freezer_state {
   bool freeze ;
   int e_freeze ;
   int nr_frozen_descendants ;
   int nr_frozen_tasks ;
};
#line 351  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cgroup {
   struct cgroup_subsys_state self ;
   unsigned long flags ;
   int level ;
   int max_depth ;
   int nr_descendants ;
   int nr_dying_descendants ;
   int max_descendants ;
   int nr_populated_csets ;
   int nr_populated_domain_children ;
   int nr_populated_threaded_children ;
   int nr_threaded_children ;
   struct kernfs_node *kn ;
   struct cgroup_file procs_file ;
   struct cgroup_file events_file ;
   u16 subtree_control ;
   u16 subtree_ss_mask ;
   u16 old_subtree_control ;
   u16 old_subtree_ss_mask ;
   struct cgroup_subsys_state *subsys[14U] ;
   struct cgroup_root *root ;
   struct list_head cset_links ;
   struct list_head e_csets[14U] ;
   struct cgroup *dom_cgrp ;
   struct cgroup *old_dom_cgrp ;
   struct cgroup_rstat_cpu *rstat_cpu ;
   struct list_head rstat_css_list ;
   struct cgroup_base_stat last_bstat ;
   struct cgroup_base_stat bstat ;
   struct prev_cputime prev_cputime ;
   struct list_head pidlists ;
   struct mutex pidlist_mutex ;
   wait_queue_head_t offline_waitq ;
   struct work_struct release_agent_work ;
   struct psi_group psi ;
   struct cgroup_bpf bpf ;
   atomic_t congestion_count ;
   struct cgroup_freezer_state freezer ;
   u64 ancestor_ids[] ;
};
#line 489  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cgroup_root {
   struct kernfs_root *kf_root ;
   unsigned int subsys_mask ;
   int hierarchy_id ;
   struct cgroup cgrp ;
   u64 cgrp_ancestor_id_storage ;
   atomic_t nr_cgrps ;
   struct list_head root_list ;
   unsigned int flags ;
   char release_agent_path[4096U] ;
   char name[64U] ;
};
#line 527  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cftype {
   char name[64U] ;
   unsigned long private ;
   size_t max_write_len ;
   unsigned int flags ;
   unsigned int file_offset ;
   struct cgroup_subsys *ss ;
   struct list_head node ;
   struct kernfs_ops *kf_ops ;
   int (*open)(struct kernfs_open_file *) ;
   void (*release)(struct kernfs_open_file *) ;
   u64 (*read_u64)(struct cgroup_subsys_state *, struct cftype *) ;
   s64 (*read_s64)(struct cgroup_subsys_state *, struct cftype *) ;
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   int (*write_u64)(struct cgroup_subsys_state *, struct cftype *, u64 ) ;
   int (*write_s64)(struct cgroup_subsys_state *, struct cftype *, s64 ) ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   __poll_t (*poll)(struct kernfs_open_file *, struct poll_table_struct *) ;
   struct lock_class_key lockdep_key ;
};
#line 616  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cgroup_subsys {
   struct cgroup_subsys_state *(*css_alloc)(struct cgroup_subsys_state *) ;
   int (*css_online)(struct cgroup_subsys_state *) ;
   void (*css_offline)(struct cgroup_subsys_state *) ;
   void (*css_released)(struct cgroup_subsys_state *) ;
   void (*css_free)(struct cgroup_subsys_state *) ;
   void (*css_reset)(struct cgroup_subsys_state *) ;
   void (*css_rstat_flush)(struct cgroup_subsys_state *, int ) ;
   int (*css_extra_stat_show)(struct seq_file *, struct cgroup_subsys_state *) ;
   int (*can_attach)(struct cgroup_taskset *) ;
   void (*cancel_attach)(struct cgroup_taskset *) ;
   void (*attach)(struct cgroup_taskset *) ;
   void (*post_attach)(void) ;
   int (*can_fork)(struct task_struct *) ;
   void (*cancel_fork)(struct task_struct *) ;
   void (*fork)(struct task_struct *) ;
   void (*exit)(struct task_struct *) ;
   void (*release)(struct task_struct *) ;
   void (*bind)(struct cgroup_subsys_state *) ;
   bool early_init : 1 ;
   bool implicit_on_dfl : 1 ;
   bool threaded : 1 ;
   bool broken_hierarchy : 1 ;
   bool warned_broken_hierarchy : 1 ;
   int id ;
   char *name ;
   char *legacy_name ;
   struct cgroup_root *root ;
   struct idr css_idr ;
   struct list_head cfts ;
   struct cftype *dfl_cftypes ;
   struct cftype *legacy_cftypes ;
   unsigned int depends_on ;
};
#line 783  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct __anonstruct_651 {
   u8 is_data ;
   u8 padding ;
   u16 prioidx ;
   u32 classid ;
} __attribute__((__packed__));
#line 783  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
union __anonunion_650 {
   struct __anonstruct_651 __anonCompField___anonunion_650_152 ;
   u64 val ;
};
#line 783  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct sock_cgroup_data {
   union __anonunion_650 __anonCompField_sock_cgroup_data_153 ;
};
#line 848  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup.h"
struct cgroup_namespace {
   refcount_t count ;
   struct ns_common ns ;
   struct user_namespace *user_ns ;
   struct ucounts *ucounts ;
   struct css_set *root_cset ;
};
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netprio_cgroup.h"
struct netprio_map {
   struct callback_head rcu ;
   u32 priomap_len ;
   u32 priomap[] ;
};
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/xdp.h"
struct xdp_mem_info {
   u32 type ;
   u32 id ;
};
#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/xdp.h"
struct xdp_rxq_info {
   struct net_device *dev ;
   u32 queue_index ;
   u32 reg_state ;
   struct xdp_mem_info mem ;
} __attribute__((__aligned__(64)));
#line 75  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/xdp.h"
struct xdp_frame {
   void *data ;
   u16 len ;
   u16 headroom ;
   u16 metasize ;
   struct xdp_mem_info mem ;
   struct net_device *dev_rx ;
};
#line 175 
struct netdev_bpf;
#line 160  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/security.h"
struct xfrm_policy;
#line 161 
struct xfrm_state;
#line 178 
struct request_sock;
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched/signal.h"
struct sighand_struct {
   spinlock_t siglock ;
   refcount_t count ;
   wait_queue_head_t signalfd_wqh ;
   struct k_sigaction action[64U] ;
};
#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched/signal.h"
struct pacct_struct {
   int ac_flag ;
   long ac_exitcode ;
   unsigned long ac_mem ;
   u64 ac_utime ;
   u64 ac_stime ;
   unsigned long ac_minflt ;
   unsigned long ac_majflt ;
};
#line 36  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched/signal.h"
struct cpu_itimer {
   u64 expires ;
   u64 incr ;
};
#line 45  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched/signal.h"
struct task_cputime_atomic {
   atomic64_t utime ;
   atomic64_t stime ;
   atomic64_t sum_exec_runtime ;
};
#line 64  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched/signal.h"
struct thread_group_cputimer {
   struct task_cputime_atomic cputime_atomic ;
};
#line 80 
struct tty_struct;
#line 80 
struct autogroup;
#line 80 
struct tty_audit_buf;
#line 80  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched/signal.h"
struct signal_struct {
   refcount_t sigcnt ;
   atomic_t live ;
   int nr_threads ;
   struct list_head thread_head ;
   wait_queue_head_t wait_chldexit ;
   struct task_struct *curr_target ;
   struct sigpending shared_pending ;
   struct hlist_head multiprocess ;
   int group_exit_code ;
   int notify_count ;
   struct task_struct *group_exit_task ;
   int group_stop_count ;
   unsigned int flags ;
   unsigned int is_child_subreaper : 1 ;
   unsigned int has_child_subreaper : 1 ;
   int posix_timer_id ;
   struct list_head posix_timers ;
   struct hrtimer real_timer ;
   ktime_t it_real_incr ;
   struct cpu_itimer it[2U] ;
   struct thread_group_cputimer cputimer ;
   struct posix_cputimers posix_cputimers ;
   struct pid *pids[4U] ;
   struct pid *tty_old_pgrp ;
   int leader ;
   struct tty_struct *tty ;
   struct autogroup *autogroup ;
   seqlock_t stats_lock ;
   u64 utime ;
   u64 stime ;
   u64 cutime ;
   u64 cstime ;
   u64 gtime ;
   u64 cgtime ;
   struct prev_cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   unsigned long cnvcsw ;
   unsigned long cnivcsw ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   unsigned long cmin_flt ;
   unsigned long cmaj_flt ;
   unsigned long inblock ;
   unsigned long oublock ;
   unsigned long cinblock ;
   unsigned long coublock ;
   unsigned long maxrss ;
   unsigned long cmaxrss ;
   struct task_io_accounting ioac ;
   unsigned long long sum_sched_runtime ;
   struct rlimit rlim[16U] ;
   struct pacct_struct pacct ;
   struct taskstats *stats ;
   unsigned int audit_tty ;
   struct tty_audit_buf *tty_audit_buf ;
   bool oom_flag_origin ;
   short oom_score_adj ;
   short oom_score_adj_min ;
   struct mm_struct *oom_mm ;
   struct mutex cred_guard_mutex ;
} __attribute__((__designated_init__));
#line 44  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/netlink.h"
struct nlmsghdr {
   __u32 nlmsg_len ;
   __u16 nlmsg_type ;
   __u16 nlmsg_flags ;
   __u32 nlmsg_seq ;
   __u32 nlmsg_pid ;
};
#line 211  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/netlink.h"
struct nlattr {
   __u16 nla_len ;
   __u16 nla_type ;
};
#line 74  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netlink.h"
struct netlink_ext_ack {
   char *_msg ;
   struct nlattr *bad_attr ;
   u8 cookie[20U] ;
   u8 cookie_len ;
};
#line 180  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netlink.h"
union __anonunion_674 {
   u8 ctx[48U] ;
   long args[6U] ;
};
#line 180  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netlink.h"
struct netlink_callback {
   struct sk_buff *skb ;
   struct nlmsghdr *nlh ;
   int (*dump)(struct sk_buff *, struct netlink_callback *) ;
   int (*done)(struct netlink_callback *) ;
   void *data ;
   struct module *module ;
   struct netlink_ext_ack *extack ;
   u16 family ;
   u16 min_dump_alloc ;
   bool strict_check ;
   u16 answer_flags ;
   unsigned int prev_seq ;
   unsigned int seq ;
   union __anonunion_674 __anonCompField_netlink_callback_154 ;
};
#line 8  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/neighbour.h"
struct ndmsg {
   __u8 ndm_family ;
   __u8 ndm_pad1 ;
   __u16 ndm_pad2 ;
   __s32 ndm_ifindex ;
   __u16 ndm_state ;
   __u8 ndm_flags ;
   __u8 ndm_type ;
};
#line 44  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if_link.h"
struct rtnl_link_stats64 {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 rx_errors ;
   __u64 tx_errors ;
   __u64 rx_dropped ;
   __u64 tx_dropped ;
   __u64 multicast ;
   __u64 collisions ;
   __u64 rx_length_errors ;
   __u64 rx_over_errors ;
   __u64 rx_crc_errors ;
   __u64 rx_frame_errors ;
   __u64 rx_fifo_errors ;
   __u64 rx_missed_errors ;
   __u64 tx_aborted_errors ;
   __u64 tx_carrier_errors ;
   __u64 tx_fifo_errors ;
   __u64 tx_heartbeat_errors ;
   __u64 tx_window_errors ;
   __u64 rx_compressed ;
   __u64 tx_compressed ;
   __u64 rx_nohandler ;
};
#line 753  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if_link.h"
struct ifla_vf_guid {
   __u32 vf ;
   __u64 guid ;
};
#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/if_link.h"
struct ifla_vf_stats {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 broadcast ;
   __u64 multicast ;
   __u64 rx_dropped ;
   __u64 tx_dropped ;
};
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/if_link.h"
struct ifla_vf_info {
   __u32 vf ;
   __u8 mac[32U] ;
   __u32 vlan ;
   __u32 qos ;
   __u32 spoofchk ;
   __u32 linkstate ;
   __u32 min_tx_rate ;
   __u32 max_tx_rate ;
   __u32 rss_query_en ;
   __u32 trusted ;
   __be16 vlan_proto ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/pkt_sched.h"
struct tc_stats {
   __u64 bytes ;
   __u32 packets ;
   __u32 drops ;
   __u32 overlimits ;
   __u32 bps ;
   __u32 pps ;
   __u32 qlen ;
   __u32 backlog ;
};
#line 102  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/pkt_sched.h"
struct tc_sizespec {
   unsigned char cell_log ;
   unsigned char size_log ;
   short cell_align ;
   int overhead ;
   unsigned int linklayer ;
   unsigned int mpu ;
   unsigned int mtu ;
   unsigned int tsize ;
};
#line 118  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/hashtable.h"
struct netpoll_info;
#line 119 
struct phy_device;
#line 120 
struct dsa_port;
#line 121 
struct sfp_bus;
#line 122 
struct wireless_dev;
#line 123 
struct wpan_dev;
#line 124 
struct mpls_dev;
#line 125 
struct udp_tunnel_info;
#line 69  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
enum netdev_tx {
    __NETDEV_TX_MIN = -2147483648,
    NETDEV_TX_OK = 0,
    NETDEV_TX_BUSY = 16
};
#line 75  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
typedef enum netdev_tx netdev_tx_t;
#line 161  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct net_device_stats {
   unsigned long rx_packets ;
   unsigned long tx_packets ;
   unsigned long rx_bytes ;
   unsigned long tx_bytes ;
   unsigned long rx_errors ;
   unsigned long tx_errors ;
   unsigned long rx_dropped ;
   unsigned long tx_dropped ;
   unsigned long multicast ;
   unsigned long collisions ;
   unsigned long rx_length_errors ;
   unsigned long rx_over_errors ;
   unsigned long rx_crc_errors ;
   unsigned long rx_frame_errors ;
   unsigned long rx_fifo_errors ;
   unsigned long rx_missed_errors ;
   unsigned long tx_aborted_errors ;
   unsigned long tx_carrier_errors ;
   unsigned long tx_fifo_errors ;
   unsigned long tx_heartbeat_errors ;
   unsigned long tx_window_errors ;
   unsigned long rx_compressed ;
   unsigned long tx_compressed ;
};
#line 195 
struct neigh_parms;
#line 201  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_hw_addr {
   struct list_head list ;
   unsigned char addr[32U] ;
   unsigned char type ;
   bool global_use ;
   int sync_cnt ;
   int refcount ;
   int synced ;
   struct callback_head callback_head ;
};
#line 217  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_hw_addr_list {
   struct list_head list ;
   int count ;
};
#line 237  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct hh_cache {
   unsigned int hh_len ;
   seqlock_t hh_lock ;
   unsigned long hh_data[16U] ;
};
#line 263  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct header_ops {
   int (*create)(struct sk_buff *, struct net_device *, unsigned short , void *, void *, unsigned int ) ;
   int (*parse)(struct sk_buff *, unsigned char *) ;
   int (*cache)(struct neighbour *, struct hh_cache *, __be16 ) ;
   void (*cache_update)(struct hh_cache *, struct net_device *, unsigned char *) ;
   bool (*validate)(char *, unsigned int ) ;
   __be16 (*parse_protocol)(struct sk_buff *) ;
};
#line 302  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct gro_list {
   struct list_head list ;
   int count ;
};
#line 316  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct napi_struct {
   struct list_head poll_list ;
   unsigned long state ;
   int weight ;
   unsigned long gro_bitmask ;
   int (*poll)(struct napi_struct *, int ) ;
   int poll_owner ;
   struct net_device *dev ;
   struct gro_list gro_hash[8U] ;
   struct sk_buff *skb ;
   struct list_head rx_list ;
   int rx_count ;
   struct hrtimer timer ;
   struct list_head dev_list ;
   struct hlist_node napi_hash_node ;
   unsigned int napi_id ;
};
#line 362 
enum gro_result {
    GRO_MERGED = 0,
    GRO_MERGED_FREE = 1,
    GRO_HELD = 2,
    GRO_NORMAL = 3,
    GRO_DROP = 4,
    GRO_CONSUMED = 5
};
#line 371  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
typedef enum gro_result gro_result_t;
#line 372 
enum rx_handler_result {
    RX_HANDLER_CONSUMED = 0,
    RX_HANDLER_ANOTHER = 1,
    RX_HANDLER_EXACT = 2,
    RX_HANDLER_PASS = 3
};
#line 379  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
typedef enum rx_handler_result rx_handler_result_t;
#line 421  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
typedef rx_handler_result_t rx_handler_func_t(struct sk_buff **);
#line 589 
struct Qdisc;
#line 589 
struct xdp_umem;
#line 589  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_queue {
   struct net_device *dev ;
   struct Qdisc *qdisc ;
   struct Qdisc *qdisc_sleeping ;
   struct kobject kobj ;
   int numa_node ;
   unsigned long tx_maxrate ;
   unsigned long trans_timeout ;
   struct net_device *sb_dev ;
   struct xdp_umem *umem ;
   spinlock_t _xmit_lock ;
   int xmit_lock_owner ;
   unsigned long trans_start ;
   unsigned long state ;
   struct dql dql ;
} __attribute__((__aligned__(64)));
#line 662  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct rps_map {
   unsigned int len ;
   struct callback_head rcu ;
   u16 cpus[0U] ;
};
#line 674  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct rps_dev_flow {
   u16 cpu ;
   u16 filter ;
   unsigned int last_qtail ;
};
#line 684  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct rps_dev_flow_table {
   unsigned int mask ;
   struct callback_head rcu ;
   struct rps_dev_flow flows[0U] ;
};
#line 736  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_rx_queue {
   struct rps_map *rps_map ;
   struct rps_dev_flow_table *rps_flow_table ;
   struct kobject kobj ;
   struct net_device *dev ;
   struct xdp_rxq_info xdp_rxq ;
   struct xdp_umem *umem ;
} __attribute__((__aligned__(64)));
#line 764  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct xps_map {
   unsigned int len ;
   unsigned int alloc_len ;
   struct callback_head rcu ;
   u16 queues[0U] ;
};
#line 777  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct xps_dev_maps {
   struct callback_head rcu ;
   struct xps_map *attr_map[0U] ;
};
#line 793  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_tc_txq {
   u16 count ;
   u16 offset ;
};
#line 803  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_fcoe_hbainfo {
   char manufacturer[64U] ;
   char serial_number[64U] ;
   char hardware_version[64U] ;
   char driver_version[64U] ;
   char optionrom_version[64U] ;
   char firmware_version[64U] ;
   char model[256U] ;
   char model_description[256U] ;
};
#line 820  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_phys_item_id {
   unsigned char id[32U] ;
   unsigned char id_len ;
};
#line 833 
enum tc_setup_type {
    TC_SETUP_QDISC_MQPRIO = 0,
    TC_SETUP_CLSU32 = 1,
    TC_SETUP_CLSFLOWER = 2,
    TC_SETUP_CLSMATCHALL = 3,
    TC_SETUP_CLSBPF = 4,
    TC_SETUP_BLOCK = 5,
    TC_SETUP_QDISC_CBS = 6,
    TC_SETUP_QDISC_RED = 7,
    TC_SETUP_QDISC_PRIO = 8,
    TC_SETUP_QDISC_MQ = 9,
    TC_SETUP_QDISC_ETF = 10,
    TC_SETUP_ROOT_QDISC = 11,
    TC_SETUP_QDISC_GRED = 12,
    TC_SETUP_QDISC_TAPRIO = 13,
    TC_SETUP_FT = 14
};
#line 851 
enum bpf_netdev_command {
    XDP_SETUP_PROG = 0,
    XDP_SETUP_PROG_HW = 1,
    XDP_QUERY_PROG = 2,
    XDP_QUERY_PROG_HW = 3,
    BPF_OFFLOAD_MAP_ALLOC = 4,
    BPF_OFFLOAD_MAP_FREE = 5,
    XDP_SETUP_XSK_UMEM = 6
};
#line 879  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct __anonstruct_679 {
   u32 flags ;
   struct bpf_prog *prog ;
   struct netlink_ext_ack *extack ;
};
#line 879  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct __anonstruct_680 {
   u32 prog_id ;
   u32 prog_flags ;
};
#line 879  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct __anonstruct_681 {
   struct bpf_offloaded_map *offmap ;
};
#line 879  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct __anonstruct_xsk_682 {
   struct xdp_umem *umem ;
   u16 queue_id ;
};
#line 879  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
union __anonunion_678 {
   struct __anonstruct_679 __anonCompField___anonunion_678_156 ;
   struct __anonstruct_680 __anonCompField___anonunion_678_157 ;
   struct __anonstruct_681 __anonCompField___anonunion_678_158 ;
   struct __anonstruct_xsk_682 xsk ;
};
#line 879  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_bpf {
   enum bpf_netdev_command command ;
   union __anonunion_678 __anonCompField_netdev_bpf_159 ;
};
#line 911  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct xfrmdev_ops {
   int (*xdo_dev_state_add)(struct xfrm_state *) ;
   void (*xdo_dev_state_delete)(struct xfrm_state *) ;
   void (*xdo_dev_state_free)(struct xfrm_state *) ;
   bool (*xdo_dev_offload_ok)(struct sk_buff *, struct xfrm_state *) ;
   void (*xdo_dev_state_advance_esn)(struct xfrm_state *) ;
};
#line 921  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct dev_ifalias {
   struct callback_head rcuhead ;
   char ifalias[] ;
};
#line 926 
struct tlsdev_ops;
#line 929  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_name_node {
   struct hlist_node hlist ;
   struct list_head list ;
   struct net_device *dev ;
   char *name ;
};
#line 1257 
struct devlink_port;
#line 1257  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct net_device_ops {
   int (*ndo_init)(struct net_device *) ;
   void (*ndo_uninit)(struct net_device *) ;
   int (*ndo_open)(struct net_device *) ;
   int (*ndo_stop)(struct net_device *) ;
   netdev_tx_t (*ndo_start_xmit)(struct sk_buff *, struct net_device *) ;
   netdev_features_t (*ndo_features_check)(struct sk_buff *, struct net_device *, netdev_features_t ) ;
   u16 (*ndo_select_queue)(struct net_device *, struct sk_buff *, struct net_device *) ;
   void (*ndo_change_rx_flags)(struct net_device *, int ) ;
   void (*ndo_set_rx_mode)(struct net_device *) ;
   int (*ndo_set_mac_address)(struct net_device *, void *) ;
   int (*ndo_validate_addr)(struct net_device *) ;
   int (*ndo_do_ioctl)(struct net_device *, struct ifreq *, int ) ;
   int (*ndo_set_config)(struct net_device *, struct ifmap *) ;
   int (*ndo_change_mtu)(struct net_device *, int ) ;
   int (*ndo_neigh_setup)(struct net_device *, struct neigh_parms *) ;
   void (*ndo_tx_timeout)(struct net_device *) ;
   void (*ndo_get_stats64)(struct net_device *, struct rtnl_link_stats64 *) ;
   bool (*ndo_has_offload_stats)(struct net_device *, int ) ;
   int (*ndo_get_offload_stats)(int , struct net_device *, void *) ;
   struct net_device_stats *(*ndo_get_stats)(struct net_device *) ;
   int (*ndo_vlan_rx_add_vid)(struct net_device *, __be16 , u16 ) ;
   int (*ndo_vlan_rx_kill_vid)(struct net_device *, __be16 , u16 ) ;
   void (*ndo_poll_controller)(struct net_device *) ;
   int (*ndo_netpoll_setup)(struct net_device *, struct netpoll_info *) ;
   void (*ndo_netpoll_cleanup)(struct net_device *) ;
   int (*ndo_set_vf_mac)(struct net_device *, int , u8 *) ;
   int (*ndo_set_vf_vlan)(struct net_device *, int , u16 , u8 , __be16 ) ;
   int (*ndo_set_vf_rate)(struct net_device *, int , int , int ) ;
   int (*ndo_set_vf_spoofchk)(struct net_device *, int , bool ) ;
   int (*ndo_set_vf_trust)(struct net_device *, int , bool ) ;
   int (*ndo_get_vf_config)(struct net_device *, int , struct ifla_vf_info *) ;
   int (*ndo_set_vf_link_state)(struct net_device *, int , int ) ;
   int (*ndo_get_vf_stats)(struct net_device *, int , struct ifla_vf_stats *) ;
   int (*ndo_set_vf_port)(struct net_device *, int , struct nlattr **) ;
   int (*ndo_get_vf_port)(struct net_device *, int , struct sk_buff *) ;
   int (*ndo_get_vf_guid)(struct net_device *, int , struct ifla_vf_guid *, struct ifla_vf_guid *) ;
   int (*ndo_set_vf_guid)(struct net_device *, int , u64 , int ) ;
   int (*ndo_set_vf_rss_query_en)(struct net_device *, int , bool ) ;
   int (*ndo_setup_tc)(struct net_device *, enum tc_setup_type , void *) ;
   int (*ndo_fcoe_enable)(struct net_device *) ;
   int (*ndo_fcoe_disable)(struct net_device *) ;
   int (*ndo_fcoe_ddp_setup)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_ddp_done)(struct net_device *, u16 ) ;
   int (*ndo_fcoe_ddp_target)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_get_hbainfo)(struct net_device *, struct netdev_fcoe_hbainfo *) ;
   int (*ndo_fcoe_get_wwn)(struct net_device *, u64 *, int ) ;
   int (*ndo_rx_flow_steer)(struct net_device *, struct sk_buff *, u16 , u32 ) ;
   int (*ndo_add_slave)(struct net_device *, struct net_device *, struct netlink_ext_ack *) ;
   int (*ndo_del_slave)(struct net_device *, struct net_device *) ;
   netdev_features_t (*ndo_fix_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_set_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_neigh_construct)(struct net_device *, struct neighbour *) ;
   void (*ndo_neigh_destroy)(struct net_device *, struct neighbour *) ;
   int (*ndo_fdb_add)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char *, u16 , u16 , struct netlink_ext_ack *) ;
   int (*ndo_fdb_del)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char *, u16 ) ;
   int (*ndo_fdb_dump)(struct sk_buff *, struct netlink_callback *, struct net_device *, struct net_device *, int *) ;
   int (*ndo_fdb_get)(struct sk_buff *, struct nlattr **, struct net_device *, unsigned char *, u16 , u32 , u32 , struct netlink_ext_ack *) ;
   int (*ndo_bridge_setlink)(struct net_device *, struct nlmsghdr *, u16 , struct netlink_ext_ack *) ;
   int (*ndo_bridge_getlink)(struct sk_buff *, u32 , u32 , struct net_device *, u32 , int ) ;
   int (*ndo_bridge_dellink)(struct net_device *, struct nlmsghdr *, u16 ) ;
   int (*ndo_change_carrier)(struct net_device *, bool ) ;
   int (*ndo_get_phys_port_id)(struct net_device *, struct netdev_phys_item_id *) ;
   int (*ndo_get_port_parent_id)(struct net_device *, struct netdev_phys_item_id *) ;
   int (*ndo_get_phys_port_name)(struct net_device *, char *, size_t ) ;
   void (*ndo_udp_tunnel_add)(struct net_device *, struct udp_tunnel_info *) ;
   void (*ndo_udp_tunnel_del)(struct net_device *, struct udp_tunnel_info *) ;
   void *(*ndo_dfwd_add_station)(struct net_device *, struct net_device *) ;
   void (*ndo_dfwd_del_station)(struct net_device *, void *) ;
   int (*ndo_set_tx_maxrate)(struct net_device *, int , u32 ) ;
   int (*ndo_get_iflink)(struct net_device *) ;
   int (*ndo_change_proto_down)(struct net_device *, bool ) ;
   int (*ndo_fill_metadata_dst)(struct net_device *, struct sk_buff *) ;
   void (*ndo_set_rx_headroom)(struct net_device *, int ) ;
   int (*ndo_bpf)(struct net_device *, struct netdev_bpf *) ;
   int (*ndo_xdp_xmit)(struct net_device *, int , struct xdp_frame **, u32 ) ;
   int (*ndo_xsk_wakeup)(struct net_device *, u32 , u32 ) ;
   struct devlink_port *(*ndo_get_devlink_port)(struct net_device *) ;
};
#line 1492 
enum ldv_14737 {
    NETREG_UNINITIALIZED = 0,
    NETREG_REGISTERED = 1,
    NETREG_UNREGISTERING = 2,
    NETREG_UNREGISTERED = 3,
    NETREG_RELEASED = 4,
    NETREG_DUMMY = 5
};
#line 1501 
enum ldv_14738 {
    RTNL_LINK_INITIALIZED = 0,
    RTNL_LINK_INITIALIZING = 1
};
#line 1795  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct __anonstruct_adj_list_683 {
   struct list_head upper ;
   struct list_head lower ;
};
#line 1795 
struct iw_handler_def;
#line 1795 
struct iw_public_data;
#line 1795 
struct l3mdev_ops;
#line 1795 
struct ndisc_ops;
#line 1795 
struct vlan_info;
#line 1795 
struct tipc_bearer;
#line 1795 
struct in_device;
#line 1795 
struct dn_dev;
#line 1795 
struct inet6_dev;
#line 1795 
struct mini_Qdisc;
#line 1795 
struct cpu_rmap;
#line 1795 
struct pcpu_lstats;
#line 1795 
struct pcpu_sw_netstats;
#line 1795 
struct pcpu_dstats;
#line 1795  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
union __anonunion_684 {
   void *ml_priv ;
   struct pcpu_lstats *lstats ;
   struct pcpu_sw_netstats *tstats ;
   struct pcpu_dstats *dstats ;
};
#line 1795 
struct garp_port;
#line 1795 
struct mrp_port;
#line 1795 
struct rtnl_link_ops;
#line 1795  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct net_device {
   char name[16U] ;
   struct netdev_name_node *name_node ;
   struct dev_ifalias *ifalias ;
   unsigned long mem_end ;
   unsigned long mem_start ;
   unsigned long base_addr ;
   int irq ;
   unsigned long state ;
   struct list_head dev_list ;
   struct list_head napi_list ;
   struct list_head unreg_list ;
   struct list_head close_list ;
   struct list_head ptype_all ;
   struct list_head ptype_specific ;
   struct __anonstruct_adj_list_683 adj_list ;
   netdev_features_t features ;
   netdev_features_t hw_features ;
   netdev_features_t wanted_features ;
   netdev_features_t vlan_features ;
   netdev_features_t hw_enc_features ;
   netdev_features_t mpls_features ;
   netdev_features_t gso_partial_features ;
   int ifindex ;
   int group ;
   struct net_device_stats stats ;
   atomic_long_t rx_dropped ;
   atomic_long_t tx_dropped ;
   atomic_long_t rx_nohandler ;
   atomic_t carrier_up_count ;
   atomic_t carrier_down_count ;
   struct iw_handler_def *wireless_handlers ;
   struct iw_public_data *wireless_data ;
   struct net_device_ops *netdev_ops ;
   struct ethtool_ops *ethtool_ops ;
   struct l3mdev_ops *l3mdev_ops ;
   struct ndisc_ops *ndisc_ops ;
   struct xfrmdev_ops *xfrmdev_ops ;
   struct tlsdev_ops *tlsdev_ops ;
   struct header_ops *header_ops ;
   unsigned int flags ;
   unsigned int priv_flags ;
   unsigned short gflags ;
   unsigned short padded ;
   unsigned char operstate ;
   unsigned char link_mode ;
   unsigned char if_port ;
   unsigned char dma ;
   unsigned int mtu ;
   unsigned int min_mtu ;
   unsigned int max_mtu ;
   unsigned short type ;
   unsigned short hard_header_len ;
   unsigned char min_header_len ;
   unsigned short needed_headroom ;
   unsigned short needed_tailroom ;
   unsigned char perm_addr[32U] ;
   unsigned char addr_assign_type ;
   unsigned char addr_len ;
   unsigned char upper_level ;
   unsigned char lower_level ;
   unsigned short neigh_priv_len ;
   unsigned short dev_id ;
   unsigned short dev_port ;
   spinlock_t addr_list_lock ;
   unsigned char name_assign_type ;
   bool uc_promisc ;
   struct netdev_hw_addr_list uc ;
   struct netdev_hw_addr_list mc ;
   struct netdev_hw_addr_list dev_addrs ;
   struct kset *queues_kset ;
   unsigned int promiscuity ;
   unsigned int allmulti ;
   struct vlan_info *vlan_info ;
   struct dsa_port *dsa_ptr ;
   struct tipc_bearer *tipc_ptr ;
   void *atalk_ptr ;
   struct in_device *ip_ptr ;
   struct dn_dev *dn_ptr ;
   struct inet6_dev *ip6_ptr ;
   void *ax25_ptr ;
   struct wireless_dev *ieee80211_ptr ;
   struct wpan_dev *ieee802154_ptr ;
   struct mpls_dev *mpls_ptr ;
   unsigned char *dev_addr ;
   struct netdev_rx_queue *_rx ;
   unsigned int num_rx_queues ;
   unsigned int real_num_rx_queues ;
   struct bpf_prog *xdp_prog ;
   unsigned long gro_flush_timeout ;
   rx_handler_func_t *rx_handler ;
   void *rx_handler_data ;
   struct mini_Qdisc *miniq_ingress ;
   struct netdev_queue *ingress_queue ;
   struct nf_hook_entries *nf_hooks_ingress ;
   unsigned char broadcast[32U] ;
   struct cpu_rmap *rx_cpu_rmap ;
   struct hlist_node index_hlist ;
   struct netdev_queue *_tx ;
   unsigned int num_tx_queues ;
   unsigned int real_num_tx_queues ;
   struct Qdisc *qdisc ;
   struct hlist_head qdisc_hash[16U] ;
   unsigned int tx_queue_len ;
   spinlock_t tx_global_lock ;
   int watchdog_timeo ;
   struct xps_dev_maps *xps_cpus_map ;
   struct xps_dev_maps *xps_rxqs_map ;
   struct mini_Qdisc *miniq_egress ;
   struct timer_list watchdog_timer ;
   int *pcpu_refcnt ;
   struct list_head todo_list ;
   struct list_head link_watch_list ;
   enum ldv_14737 reg_state : 8 ;
   bool dismantle ;
   enum ldv_14738 rtnl_link_state : 16 ;
   bool needs_free_netdev ;
   void (*priv_destructor)(struct net_device *) ;
   struct netpoll_info *npinfo ;
   possible_net_t nd_net ;
   union __anonunion_684 __anonCompField_net_device_160 ;
   struct garp_port *garp_port ;
   struct mrp_port *mrp_port ;
   struct device dev ;
   struct attribute_group *sysfs_groups[4U] ;
   struct attribute_group *sysfs_rx_queue_group ;
   struct rtnl_link_ops *rtnl_link_ops ;
   unsigned int gso_max_size ;
   u16 gso_max_segs ;
   struct dcbnl_rtnl_ops *dcbnl_ops ;
   s16 num_tc ;
   struct netdev_tc_txq tc_to_txq[16U] ;
   u8 prio_tc_map[16U] ;
   unsigned int fcoe_ddp_xid ;
   struct netprio_map *priomap ;
   struct phy_device *phydev ;
   struct sfp_bus *sfp_bus ;
   struct lock_class_key qdisc_tx_busylock_key ;
   struct lock_class_key qdisc_running_key ;
   struct lock_class_key qdisc_xmit_lock_key ;
   struct lock_class_key addr_list_lock_key ;
   bool proto_down ;
   unsigned int wol_enabled : 1 ;
};
#line 2400  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct pcpu_sw_netstats {
   u64 rx_packets ;
   u64 rx_bytes ;
   u64 tx_packets ;
   u64 tx_bytes ;
   struct u64_stats_sync syncp ;
} __attribute__((__aligned__(32)));
#line 2408  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct pcpu_lstats {
   u64_stats_t packets ;
   u64_stats_t bytes ;
   struct u64_stats_sync syncp ;
} __attribute__((__aligned__(16)));
#line 3610 
enum skb_free_reason {
    SKB_REASON_CONSUMED = 0,
    SKB_REASON_DROPPED = 1
};
#line 159  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/mii.h"
struct mii_ioctl_data {
   __u16 phy_id ;
   __u16 reg_num ;
   __u16 val_in ;
   __u16 val_out ;
};
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mii.h"
struct mii_if_info {
   int phy_id ;
   int advertising ;
   int phy_id_mask ;
   int reg_num_mask ;
   unsigned int full_duplex : 1 ;
   unsigned int force_media : 1 ;
   unsigned int supports_gmii : 1 ;
   struct net_device *dev ;
   int (*mdio_read)(struct net_device *, int , int ) ;
   void (*mdio_write)(struct net_device *, int , int , int ) ;
};
#line 526  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mii.h"
typedef unsigned long kernel_ulong_t;
#line 121  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mod_devicetable.h"
struct usb_device_id {
   __u16 match_flags ;
   __u16 idVendor ;
   __u16 idProduct ;
   __u16 bcdDevice_lo ;
   __u16 bcdDevice_hi ;
   __u8 bDeviceClass ;
   __u8 bDeviceSubClass ;
   __u8 bDeviceProtocol ;
   __u8 bInterfaceClass ;
   __u8 bInterfaceSubClass ;
   __u8 bInterfaceProtocol ;
   __u8 bInterfaceNumber ;
   kernel_ulong_t driver_info ;
};
#line 210  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mod_devicetable.h"
struct acpi_device_id {
   __u8 id[9U] ;
   kernel_ulong_t driver_data ;
   __u32 cls ;
   __u32 cls_msk ;
};
#line 260  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mod_devicetable.h"
struct of_device_id {
   char name[32U] ;
   char type[32U] ;
   char compatible[128U] ;
   void *data ;
};
#line 289  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
struct usb_device_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __le16 bcdUSB ;
   __u8 bDeviceClass ;
   __u8 bDeviceSubClass ;
   __u8 bDeviceProtocol ;
   __u8 bMaxPacketSize0 ;
   __le16 idVendor ;
   __le16 idProduct ;
   __le16 bcdDevice ;
   __u8 iManufacturer ;
   __u8 iProduct ;
   __u8 iSerialNumber ;
   __u8 bNumConfigurations ;
} __attribute__((__packed__));
#line 345  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
struct usb_config_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __le16 wTotalLength ;
   __u8 bNumInterfaces ;
   __u8 bConfigurationValue ;
   __u8 iConfiguration ;
   __u8 bmAttributes ;
   __u8 bMaxPower ;
} __attribute__((__packed__));
#line 382  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
struct usb_interface_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __u8 bInterfaceNumber ;
   __u8 bAlternateSetting ;
   __u8 bNumEndpoints ;
   __u8 bInterfaceClass ;
   __u8 bInterfaceSubClass ;
   __u8 bInterfaceProtocol ;
   __u8 iInterface ;
} __attribute__((__packed__));
#line 400  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
struct usb_endpoint_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __u8 bEndpointAddress ;
   __u8 bmAttributes ;
   __le16 wMaxPacketSize ;
   __u8 bInterval ;
   __u8 bRefresh ;
   __u8 bSynchAddress ;
} __attribute__((__packed__));
#line 670  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
struct usb_ssp_isoc_ep_comp_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __le16 wReseved ;
   __le32 dwBytesPerInterval ;
} __attribute__((__packed__));
#line 682  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
struct usb_ss_ep_comp_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __u8 bMaxBurst ;
   __u8 bmAttributes ;
   __le16 wBytesPerInterval ;
} __attribute__((__packed__));
#line 776  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
struct usb_interface_assoc_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __u8 bFirstInterface ;
   __u8 bInterfaceCount ;
   __u8 bFunctionClass ;
   __u8 bFunctionSubClass ;
   __u8 bFunctionProtocol ;
   __u8 iFunction ;
} __attribute__((__packed__));
#line 837  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
struct usb_bos_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __le16 wTotalLength ;
   __u8 bNumDeviceCaps ;
} __attribute__((__packed__));
#line 888  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
struct usb_ext_cap_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __u8 bDevCapabilityType ;
   __le32 bmAttributes ;
} __attribute__((__packed__));
#line 910  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
struct usb_ss_cap_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __u8 bDevCapabilityType ;
   __u8 bmAttributes ;
   __le16 wSpeedSupported ;
   __u8 bFunctionalitySupport ;
   __u8 bU1devExitLat ;
   __le16 bU2DevExitLat ;
} __attribute__((__packed__));
#line 933  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
struct usb_ss_container_id_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __u8 bDevCapabilityType ;
   __u8 bReserved ;
   __u8 ContainerID[16U] ;
} __attribute__((__packed__));
#line 948  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
struct usb_ssp_cap_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __u8 bDevCapabilityType ;
   __u8 bReserved ;
   __le32 bmAttributes ;
   __le16 wFunctionalitySupport ;
   __le16 wReserved ;
   __le32 bmSublinkSpeedAttr[1U] ;
} __attribute__((__packed__));
#line 1073  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
struct usb_ptm_cap_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __u8 bDevCapabilityType ;
} __attribute__((__packed__));
#line 1134 
enum usb_device_speed {
    USB_SPEED_UNKNOWN = 0,
    USB_SPEED_LOW = 1,
    USB_SPEED_FULL = 2,
    USB_SPEED_HIGH = 3,
    USB_SPEED_WIRELESS = 4,
    USB_SPEED_SUPER = 5,
    USB_SPEED_SUPER_PLUS = 6
};
#line 1144 
enum usb_device_state {
    USB_STATE_NOTATTACHED = 0,
    USB_STATE_ATTACHED = 1,
    USB_STATE_POWERED = 2,
    USB_STATE_RECONNECTING = 3,
    USB_STATE_UNAUTHENTICATED = 4,
    USB_STATE_DEFAULT = 5,
    USB_STATE_ADDRESS = 6,
    USB_STATE_CONFIGURED = 7,
    USB_STATE_SUSPENDED = 8
};
#line 107  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pm_runtime.h"
union __anonunion___u_697 {
   u64 __val ;
   char __c[1U] ;
};
#line 279 
struct usb_device;
#line 280 
struct usb_driver;
#line 281 
struct wusb_dev;
#line 282 
struct ep_device;
#line 67  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb_host_endpoint {
   struct usb_endpoint_descriptor desc ;
   struct usb_ss_ep_comp_descriptor ss_ep_comp ;
   struct usb_ssp_isoc_ep_comp_descriptor ssp_isoc_ep_comp ;
   struct list_head urb_list ;
   void *hcpriv ;
   struct ep_device *ep_dev ;
   unsigned char *extra ;
   int extralen ;
   int enabled ;
   int streams ;
};
#line 82  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb_host_interface {
   struct usb_interface_descriptor desc ;
   int extralen ;
   unsigned char *extra ;
   struct usb_host_endpoint *endpoint ;
   char *string ;
};
#line 95 
enum usb_interface_condition {
    USB_INTERFACE_UNBOUND = 0,
    USB_INTERFACE_BINDING = 1,
    USB_INTERFACE_BOUND = 2,
    USB_INTERFACE_UNBINDING = 3
};
#line 232  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb_interface {
   struct usb_host_interface *altsetting ;
   struct usb_host_interface *cur_altsetting ;
   unsigned int num_altsetting ;
   struct usb_interface_assoc_descriptor *intf_assoc ;
   int minor ;
   enum usb_interface_condition condition ;
   unsigned int sysfs_files_created : 1 ;
   unsigned int ep_devs_created : 1 ;
   unsigned int unregistering : 1 ;
   unsigned int needs_remote_wakeup : 1 ;
   unsigned int needs_altsetting0 : 1 ;
   unsigned int needs_binding : 1 ;
   unsigned int resetting_device : 1 ;
   unsigned int authorized : 1 ;
   struct device dev ;
   struct device *usb_dev ;
   struct work_struct reset_ws ;
};
#line 322  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb_interface_cache {
   unsigned int num_altsetting ;
   struct kref ref ;
   struct usb_host_interface altsetting[0U] ;
};
#line 374  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb_host_config {
   struct usb_config_descriptor desc ;
   char *string ;
   struct usb_interface_assoc_descriptor *intf_assoc[16U] ;
   struct usb_interface *interface[32U] ;
   struct usb_interface_cache *intf_cache[32U] ;
   unsigned char *extra ;
   int extralen ;
};
#line 396  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb_host_bos {
   struct usb_bos_descriptor *desc ;
   struct usb_ext_cap_descriptor *ext_cap ;
   struct usb_ss_cap_descriptor *ss_cap ;
   struct usb_ssp_cap_descriptor *ssp_cap ;
   struct usb_ss_container_id_descriptor *ss_id ;
   struct usb_ptm_cap_descriptor *ptm_cap ;
};
#line 417  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb_devmap {
   unsigned long devicemap[2U] ;
};
#line 424 
struct mon_bus;
#line 424  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb_bus {
   struct device *controller ;
   struct device *sysdev ;
   int busnum ;
   char *bus_name ;
   u8 uses_pio_for_control ;
   u8 otg_port ;
   unsigned int is_b_host : 1 ;
   unsigned int b_hnp_enable : 1 ;
   unsigned int no_stop_on_short : 1 ;
   unsigned int no_sg_constraint : 1 ;
   unsigned int sg_tablesize ;
   int devnum_next ;
   struct mutex devnum_next_mutex ;
   struct usb_devmap devmap ;
   struct usb_device *root_hub ;
   struct usb_bus *hs_companion ;
   int bandwidth_allocated ;
   int bandwidth_int_reqs ;
   int bandwidth_isoc_reqs ;
   unsigned int resuming_ports ;
   struct mon_bus *mon_bus ;
   int monitored ;
};
#line 469 
struct usb_tt;
#line 470 
enum usb_device_removable {
    USB_DEVICE_REMOVABLE_UNKNOWN = 0,
    USB_DEVICE_REMOVABLE = 1,
    USB_DEVICE_FIXED = 2
};
#line 502  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb2_lpm_parameters {
   unsigned int besl ;
   int timeout ;
};
#line 522  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb3_lpm_parameters {
   unsigned int mel ;
   unsigned int pel ;
   unsigned int sel ;
   int timeout ;
};
#line 631  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb_device {
   int devnum ;
   char devpath[16U] ;
   u32 route ;
   enum usb_device_state state ;
   enum usb_device_speed speed ;
   unsigned int rx_lanes ;
   unsigned int tx_lanes ;
   struct usb_tt *tt ;
   int ttport ;
   unsigned int toggle[2U] ;
   struct usb_device *parent ;
   struct usb_bus *bus ;
   struct usb_host_endpoint ep0 ;
   struct device dev ;
   struct usb_device_descriptor descriptor ;
   struct usb_host_bos *bos ;
   struct usb_host_config *config ;
   struct usb_host_config *actconfig ;
   struct usb_host_endpoint *ep_in[16U] ;
   struct usb_host_endpoint *ep_out[16U] ;
   char **rawdescriptors ;
   unsigned short bus_mA ;
   u8 portnum ;
   u8 level ;
   u8 devaddr ;
   unsigned int can_submit : 1 ;
   unsigned int persist_enabled : 1 ;
   unsigned int have_langid : 1 ;
   unsigned int authorized : 1 ;
   unsigned int authenticated : 1 ;
   unsigned int wusb : 1 ;
   unsigned int lpm_capable : 1 ;
   unsigned int usb2_hw_lpm_capable : 1 ;
   unsigned int usb2_hw_lpm_besl_capable : 1 ;
   unsigned int usb2_hw_lpm_enabled : 1 ;
   unsigned int usb2_hw_lpm_allowed : 1 ;
   unsigned int usb3_lpm_u1_enabled : 1 ;
   unsigned int usb3_lpm_u2_enabled : 1 ;
   int string_langid ;
   char *product ;
   char *manufacturer ;
   char *serial ;
   struct list_head filelist ;
   int maxchild ;
   u32 quirks ;
   atomic_t urbnum ;
   unsigned long active_duration ;
   unsigned long connect_time ;
   unsigned int do_remote_wakeup : 1 ;
   unsigned int reset_resume : 1 ;
   unsigned int port_is_suspended : 1 ;
   struct wusb_dev *wusb_dev ;
   int slot_id ;
   enum usb_device_removable removable ;
   struct usb2_lpm_parameters l1_params ;
   struct usb3_lpm_parameters u1_params ;
   struct usb3_lpm_parameters u2_params ;
   unsigned int lpm_disable_count ;
   u16 hub_delay ;
};
#line 1090  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb_dynids {
   spinlock_t lock ;
   struct list_head list ;
};
#line 1112  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usbdrv_wrap {
   struct device_driver driver ;
   int for_devices ;
};
#line 1183  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb_driver {
   char *name ;
   int (*probe)(struct usb_interface *, struct usb_device_id *) ;
   void (*disconnect)(struct usb_interface *) ;
   int (*unlocked_ioctl)(struct usb_interface *, unsigned int , void *) ;
   int (*suspend)(struct usb_interface *, pm_message_t ) ;
   int (*resume)(struct usb_interface *) ;
   int (*reset_resume)(struct usb_interface *) ;
   int (*pre_reset)(struct usb_interface *) ;
   int (*post_reset)(struct usb_interface *) ;
   struct usb_device_id *id_table ;
   struct attribute_group **dev_groups ;
   struct usb_dynids dynids ;
   struct usbdrv_wrap drvwrap ;
   unsigned int no_dynamic_id : 1 ;
   unsigned int supports_autosuspend : 1 ;
   unsigned int disable_hub_initiated_lpm : 1 ;
   unsigned int soft_unbind : 1 ;
};
#line 1340  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb_iso_packet_descriptor {
   unsigned int offset ;
   unsigned int length ;
   unsigned int actual_length ;
   int status ;
};
#line 1346 
struct urb;
#line 1349  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb_anchor {
   struct list_head urb_list ;
   wait_queue_head_t wait ;
   spinlock_t lock ;
   atomic_t suspend_wakeups ;
   unsigned int poisoned : 1 ;
};
#line 1550  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct urb {
   struct kref kref ;
   int unlinked ;
   void *hcpriv ;
   atomic_t use_count ;
   atomic_t reject ;
   struct list_head urb_list ;
   struct list_head anchor_list ;
   struct usb_anchor *anchor ;
   struct usb_device *dev ;
   struct usb_host_endpoint *ep ;
   unsigned int pipe ;
   unsigned int stream_id ;
   int status ;
   unsigned int transfer_flags ;
   void *transfer_buffer ;
   dma_addr_t transfer_dma ;
   struct scatterlist *sg ;
   int num_mapped_sgs ;
   int num_sgs ;
   u32 transfer_buffer_length ;
   u32 actual_length ;
   unsigned char *setup_packet ;
   dma_addr_t setup_dma ;
   int start_frame ;
   int number_of_packets ;
   int interval ;
   int error_count ;
   void *context ;
   void (*complete)(struct urb *) ;
   struct usb_iso_packet_descriptor iso_frame_desc[0U] ;
};
#line 567  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/rtnetlink.h"
struct tcmsg {
   unsigned char tcm_family ;
   unsigned char tcm__pad1 ;
   unsigned short tcm__pad2 ;
   int tcm_ifindex ;
   __u32 tcm_handle ;
   __u32 tcm_parent ;
   __u32 tcm_info ;
};
#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/if_vlan.h"
struct vlan_hdr {
   __be16 h_vlan_TCI ;
   __be16 h_vlan_encapsulated_proto ;
};
#line 86  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ip.h"
struct iphdr {
   __u8 ihl : 4 ;
   __u8 version : 4 ;
   __u8 tos ;
   __be16 tot_len ;
   __be16 id ;
   __be16 frag_off ;
   __u8 ttl ;
   __u8 protocol ;
   __sum16 check ;
   __be32 saddr ;
   __be32 daddr ;
};
#line 116  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ipv6.h"
struct ipv6hdr {
   __u8 priority : 4 ;
   __u8 version : 4 ;
   __u8 flow_lbl[3U] ;
   __be16 payload_len ;
   __u8 nexthdr ;
   __u8 hop_limit ;
   struct in6_addr saddr ;
   struct in6_addr daddr ;
};
#line 63  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ipv6.h"
struct ipv6_stable_secret {
   bool initialized ;
   struct in6_addr secret ;
};
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ipv6.h"
struct ipv6_devconf {
   __s32 forwarding ;
   __s32 hop_limit ;
   __s32 mtu6 ;
   __s32 accept_ra ;
   __s32 accept_redirects ;
   __s32 autoconf ;
   __s32 dad_transmits ;
   __s32 rtr_solicits ;
   __s32 rtr_solicit_interval ;
   __s32 rtr_solicit_max_interval ;
   __s32 rtr_solicit_delay ;
   __s32 force_mld_version ;
   __s32 mldv1_unsolicited_report_interval ;
   __s32 mldv2_unsolicited_report_interval ;
   __s32 use_tempaddr ;
   __s32 temp_valid_lft ;
   __s32 temp_prefered_lft ;
   __s32 regen_max_retry ;
   __s32 max_desync_factor ;
   __s32 max_addresses ;
   __s32 accept_ra_defrtr ;
   __s32 accept_ra_min_hop_limit ;
   __s32 accept_ra_pinfo ;
   __s32 ignore_routes_with_linkdown ;
   __s32 accept_ra_rtr_pref ;
   __s32 rtr_probe_interval ;
   __s32 accept_ra_rt_info_min_plen ;
   __s32 accept_ra_rt_info_max_plen ;
   __s32 proxy_ndp ;
   __s32 accept_source_route ;
   __s32 accept_ra_from_local ;
   __s32 optimistic_dad ;
   __s32 use_optimistic ;
   __s32 mc_forwarding ;
   __s32 disable_ipv6 ;
   __s32 drop_unicast_in_l2_multicast ;
   __s32 accept_dad ;
   __s32 force_tllao ;
   __s32 ndisc_notify ;
   __s32 suppress_frag_ndisc ;
   __s32 accept_ra_mtu ;
   __s32 drop_unsolicited_na ;
   struct ipv6_stable_secret stable_secret ;
   __s32 use_oif_addrs_only ;
   __s32 keep_addr_on_down ;
   __s32 seg6_enabled ;
   __s32 seg6_require_hmac ;
   __u32 enhanced_dad ;
   __u32 addr_gen_mode ;
   __s32 disable_policy ;
   __s32 ndisc_tclass ;
   struct ctl_table_header *sysctl_header ;
};
#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/page_counter.h"
struct page_counter {
   atomic_long_t usage ;
   unsigned long min ;
   unsigned long low ;
   unsigned long max ;
   struct page_counter *parent ;
   unsigned long emin ;
   atomic_long_t min_usage ;
   atomic_long_t children_min_usage ;
   unsigned long elow ;
   atomic_long_t low_usage ;
   atomic_long_t children_low_usage ;
   unsigned long watermark ;
   unsigned long failcnt ;
};
#line 66 
struct eventfd_ctx;
#line 13  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/vmpressure.h"
struct vmpressure {
   unsigned long scanned ;
   unsigned long reclaimed ;
   unsigned long tree_scanned ;
   unsigned long tree_reclaimed ;
   spinlock_t sr_lock ;
   struct list_head events ;
   struct mutex events_lock ;
   struct work_struct work ;
};
#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/flex_proportions.h"
struct fprop_global {
   struct percpu_counter events ;
   unsigned int period ;
   seqcount_t sequence ;
};
#line 76  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/flex_proportions.h"
struct fprop_local_percpu {
   struct percpu_counter events ;
   unsigned int period ;
   raw_spinlock_t lock ;
};
#line 116  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/flex_proportions.h"
typedef int congested_fn(void *, int );
#line 45  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backing-dev-defs.h"
enum wb_reason {
    WB_REASON_BACKGROUND = 0,
    WB_REASON_VMSCAN = 1,
    WB_REASON_SYNC = 2,
    WB_REASON_PERIODIC = 3,
    WB_REASON_LAPTOP_TIMER = 4,
    WB_REASON_FREE_MORE_MEM = 5,
    WB_REASON_FS_FREE_SPACE = 6,
    WB_REASON_FORKER_THREAD = 7,
    WB_REASON_FOREIGN_FLUSH = 8,
    WB_REASON_MAX = 9
};
#line 71  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backing-dev-defs.h"
struct wb_completion {
   atomic_t cnt ;
   wait_queue_head_t *waitq ;
};
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backing-dev-defs.h"
struct bdi_writeback_congested {
   unsigned long state ;
   refcount_t refcnt ;
   struct backing_dev_info *__bdi ;
   int blkcg_id ;
   struct rb_node rb_node ;
};
#line 130  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backing-dev-defs.h"
union __anonunion_704 {
   struct work_struct release_work ;
   struct callback_head rcu ;
};
#line 130  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backing-dev-defs.h"
struct bdi_writeback {
   struct backing_dev_info *bdi ;
   unsigned long state ;
   unsigned long last_old_flush ;
   struct list_head b_dirty ;
   struct list_head b_io ;
   struct list_head b_more_io ;
   struct list_head b_dirty_time ;
   spinlock_t list_lock ;
   struct percpu_counter stat[4U] ;
   struct bdi_writeback_congested *congested ;
   unsigned long bw_time_stamp ;
   unsigned long dirtied_stamp ;
   unsigned long written_stamp ;
   unsigned long write_bandwidth ;
   unsigned long avg_write_bandwidth ;
   unsigned long dirty_ratelimit ;
   unsigned long balanced_dirty_ratelimit ;
   struct fprop_local_percpu completions ;
   int dirty_exceeded ;
   enum wb_reason start_all_reason ;
   spinlock_t work_lock ;
   struct list_head work_list ;
   struct delayed_work dwork ;
   unsigned long dirty_sleep ;
   struct list_head bdi_node ;
   struct percpu_ref refcnt ;
   struct fprop_local_percpu memcg_completions ;
   struct cgroup_subsys_state *memcg_css ;
   struct cgroup_subsys_state *blkcg_css ;
   struct list_head memcg_node ;
   struct list_head blkcg_node ;
   union __anonunion_704 __anonCompField_bdi_writeback_161 ;
};
#line 188  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backing-dev-defs.h"
struct backing_dev_info {
   u64 id ;
   struct rb_node rb_node ;
   struct list_head bdi_list ;
   unsigned long ra_pages ;
   unsigned long io_pages ;
   congested_fn *congested_fn ;
   void *congested_data ;
   char *name ;
   struct kref refcnt ;
   unsigned int capabilities ;
   unsigned int min_ratio ;
   unsigned int max_ratio ;
   unsigned int max_prop_frac ;
   atomic_long_t tot_write_bandwidth ;
   struct bdi_writeback wb ;
   struct list_head wb_list ;
   struct xarray cgwb_tree ;
   struct rb_root cgwb_congested_tree ;
   struct mutex cgwb_release_mutex ;
   struct rw_semaphore wb_switch_rwsem ;
   wait_queue_head_t wb_waitq ;
   struct device *dev ;
   struct device *owner ;
   struct timer_list laptop_mode_wb_timer ;
   struct dentry *debug_dir ;
};
#line 306 
struct bio_set;
#line 307 
struct bio_integrity_payload;
#line 308  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backing-dev-defs.h"
typedef void bio_end_io_t(struct bio *);
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk_types.h"
typedef u8 blk_status_t;
#line 112  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk_types.h"
struct bio_issue {
   u64 value ;
};
#line 144 
struct blkcg_gq;
#line 144  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk_types.h"
union __anonunion_705 {
   struct bio_integrity_payload *bi_integrity ;
};
#line 144  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk_types.h"
struct bio {
   struct bio *bi_next ;
   struct gendisk *bi_disk ;
   unsigned int bi_opf ;
   unsigned short bi_flags ;
   unsigned short bi_ioprio ;
   unsigned short bi_write_hint ;
   blk_status_t bi_status ;
   u8 bi_partno ;
   atomic_t __bi_remaining ;
   struct bvec_iter bi_iter ;
   bio_end_io_t *bi_end_io ;
   void *bi_private ;
   struct blkcg_gq *bi_blkg ;
   struct bio_issue bi_issue ;
   u64 bi_iocost_cost ;
   union __anonunion_705 __anonCompField_bio_162 ;
   unsigned short bi_vcnt ;
   unsigned short bi_max_vecs ;
   atomic_t __bi_cnt ;
   struct bio_vec *bi_io_vec ;
   struct bio_set *bi_pool ;
   struct bio_vec bi_inline_vecs[0U] ;
};
#line 452  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk_types.h"
typedef unsigned int blk_qc_t;
#line 479  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk_types.h"
struct blk_rq_stat {
   u64 mean ;
   u64 min ;
   u64 max ;
   u32 nr_samples ;
   u64 batch ;
};
#line 86  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/genhd.h"
struct disk_stats {
   u64 nsecs[4U] ;
   unsigned long sectors[4U] ;
   unsigned long ios[4U] ;
   unsigned long merges[4U] ;
   unsigned long io_ticks ;
   unsigned long time_in_queue ;
   local_t in_flight[2U] ;
};
#line 103  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/genhd.h"
struct partition_meta_info {
   char uuid[37U] ;
   u8 volname[64U] ;
};
#line 108  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/genhd.h"
struct hd_struct {
   sector_t start_sect ;
   sector_t nr_sects ;
   seqcount_t nr_sects_seq ;
   sector_t alignment_offset ;
   unsigned int discard_alignment ;
   struct device __dev ;
   struct kobject *holder_dir ;
   int policy ;
   int partno ;
   struct partition_meta_info *info ;
   int make_it_fail ;
   unsigned long stamp ;
   struct disk_stats *dkstats ;
   struct percpu_ref ref ;
   struct rcu_work rcu_work ;
};
#line 160  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/genhd.h"
struct disk_part_tbl {
   struct callback_head callback_head ;
   int len ;
   struct hd_struct *last_lookup ;
   struct hd_struct *part[] ;
};
#line 166 
struct disk_events;
#line 167 
struct badblocks;
#line 172 
struct blk_integrity_profile;
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/genhd.h"
struct blk_integrity {
   struct blk_integrity_profile *profile ;
   unsigned char flags ;
   unsigned char tuple_size ;
   unsigned char interval_exp ;
   unsigned char tag_size ;
};
#line 182 
struct timer_rand_state;
#line 182  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/genhd.h"
struct gendisk {
   int major ;
   int first_minor ;
   int minors ;
   char disk_name[32U] ;
   char *(*devnode)(struct gendisk *, umode_t *) ;
   unsigned short events ;
   unsigned short event_flags ;
   struct disk_part_tbl *part_tbl ;
   struct hd_struct part0 ;
   struct block_device_operations *fops ;
   struct request_queue *queue ;
   void *private_data ;
   int flags ;
   struct rw_semaphore lookup_sem ;
   struct kobject *slave_dir ;
   struct timer_rand_state *random ;
   atomic_t sync_io ;
   struct disk_events *ev ;
   struct kobject integrity_kobj ;
   int node_id ;
   struct badblocks *bb ;
   struct lockdep_map lockdep_map ;
};
#line 637  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pagemap.h"
typedef void *mempool_alloc_t(gfp_t , void *);
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mempool.h"
typedef void mempool_free_t(void *, void *);
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mempool.h"
struct mempool_s {
   spinlock_t lock ;
   int min_nr ;
   int curr_nr ;
   void **elements ;
   void *pool_data ;
   mempool_alloc_t *alloc ;
   mempool_free_t *free ;
   wait_queue_head_t wait ;
};
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mempool.h"
typedef struct mempool_s mempool_t;
#line 307  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bio.h"
struct bio_integrity_payload {
   struct bio *bip_bio ;
   struct bvec_iter bip_iter ;
   unsigned short bip_slab ;
   unsigned short bip_vcnt ;
   unsigned short bip_max_vcnt ;
   unsigned short bip_flags ;
   struct bvec_iter bio_iter ;
   struct work_struct bip_work ;
   struct bio_vec *bip_vec ;
   struct bio_vec bip_inline_vecs[0U] ;
};
#line 575  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bio.h"
struct bio_list {
   struct bio *head ;
   struct bio *tail ;
};
#line 703  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bio.h"
struct bio_set {
   struct kmem_cache *bio_slab ;
   unsigned int front_pad ;
   mempool_t bio_pool ;
   mempool_t bvec_pool ;
   mempool_t bio_integrity_pool ;
   mempool_t bvec_integrity_pool ;
   spinlock_t rescue_lock ;
   struct bio_list rescue_list ;
   struct work_struct rescue_work ;
   struct workqueue_struct *rescue_workqueue ;
};
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bsg.h"
struct sg_io_v4 {
   __s32 guard ;
   __u32 protocol ;
   __u32 subprotocol ;
   __u32 request_len ;
   __u64 request ;
   __u64 request_tag ;
   __u32 request_attr ;
   __u32 request_priority ;
   __u32 request_extra ;
   __u32 max_response_len ;
   __u64 response ;
   __u32 dout_iovec_count ;
   __u32 dout_xfer_len ;
   __u32 din_iovec_count ;
   __u32 din_xfer_len ;
   __u64 dout_xferp ;
   __u64 din_xferp ;
   __u32 timeout ;
   __u32 flags ;
   __u64 usr_ptr ;
   __u32 spare_in ;
   __u32 driver_status ;
   __u32 transport_status ;
   __u32 device_status ;
   __u32 retry_delay ;
   __u32 info ;
   __u32 duration ;
   __u32 response_len ;
   __s32 din_resid ;
   __s32 dout_resid ;
   __u64 generated_tag ;
   __u32 spare_out ;
   __u32 padding ;
};
#line 65 
struct request;
#line 10  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bsg.h"
struct bsg_ops {
   int (*check_proto)(struct sg_io_v4 *) ;
   int (*fill_hdr)(struct request *, struct sg_io_v4 *, fmode_t ) ;
   int (*complete_rq)(struct request *, struct sg_io_v4 *) ;
   void (*free_rq)(struct request *) ;
};
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bsg.h"
struct bsg_class_device {
   struct device *class_dev ;
   int minor ;
   struct request_queue *queue ;
   struct bsg_ops *ops ;
};
#line 94  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/blkzoned.h"
struct blk_zone {
   __u64 start ;
   __u64 len ;
   __u64 wp ;
   __u8 type ;
   __u8 cond ;
   __u8 non_seq ;
   __u8 reset ;
   __u8 reserved[36U] ;
};
#line 134 
struct elevator_queue;
#line 135 
struct blk_trace;
#line 138 
struct blk_flush_queue;
#line 139 
struct pr_ops;
#line 140 
struct rq_qos;
#line 141 
struct blk_queue_stats;
#line 142 
struct blk_stat_callback;
#line 143  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/blkzoned.h"
typedef void rq_end_io_fn(struct request *, blk_status_t );
#line 63  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
typedef __u32 req_flags_t;
#line 67 
enum mq_rq_state {
    MQ_RQ_IDLE = 0,
    MQ_RQ_IN_FLIGHT = 1,
    MQ_RQ_COMPLETE = 2
};
#line 132 
struct blk_mq_ctx;
#line 132 
struct blk_mq_hw_ctx;
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
union __anonunion_708 {
   struct hlist_node hash ;
   struct list_head ipi_list ;
};
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
union __anonunion_709 {
   struct rb_node rb_node ;
   struct bio_vec special_vec ;
   void *completion_data ;
   int error_count ;
};
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
struct __anonstruct_elv_711 {
   struct io_cq *icq ;
   void *priv[2U] ;
};
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
struct __anonstruct_flush_712 {
   unsigned int seq ;
   struct list_head list ;
   rq_end_io_fn *saved_end_io ;
};
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
union __anonunion_710 {
   struct __anonstruct_elv_711 elv ;
   struct __anonstruct_flush_712 flush ;
};
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
union __anonunion_713 {
   struct __call_single_data csd ;
   u64 fifo_time ;
};
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
struct request {
   struct request_queue *q ;
   struct blk_mq_ctx *mq_ctx ;
   struct blk_mq_hw_ctx *mq_hctx ;
   unsigned int cmd_flags ;
   req_flags_t rq_flags ;
   int tag ;
   int internal_tag ;
   unsigned int __data_len ;
   sector_t __sector ;
   struct bio *bio ;
   struct bio *biotail ;
   struct list_head queuelist ;
   union __anonunion_708 __anonCompField_request_163 ;
   union __anonunion_709 __anonCompField_request_164 ;
   union __anonunion_710 __anonCompField_request_165 ;
   struct gendisk *rq_disk ;
   struct hd_struct *part ;
   u64 alloc_time_ns ;
   u64 start_time_ns ;
   u64 io_start_time_ns ;
   unsigned short wbt_flags ;
   unsigned short stats_sectors ;
   unsigned short nr_phys_segments ;
   unsigned short nr_integrity_segments ;
   unsigned short write_hint ;
   unsigned short ioprio ;
   unsigned int extra_len ;
   enum mq_rq_state state ;
   refcount_t ref ;
   unsigned int timeout ;
   unsigned long deadline ;
   union __anonunion_713 __anonCompField_request_166 ;
   rq_end_io_fn *end_io ;
   void *end_io_data ;
};
#line 285 
struct elevator_type;
#line 286 
struct blk_mq_debugfs_attr;
#line 287 
enum elv_merge {
    ELEVATOR_NO_MERGE = 0,
    ELEVATOR_FRONT_MERGE = 1,
    ELEVATOR_BACK_MERGE = 2,
    ELEVATOR_DISCARD_MERGE = 3
};
#line 294 
struct blk_mq_alloc_data;
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/elevator.h"
struct elevator_mq_ops {
   int (*init_sched)(struct request_queue *, struct elevator_type *) ;
   void (*exit_sched)(struct elevator_queue *) ;
   int (*init_hctx)(struct blk_mq_hw_ctx *, unsigned int ) ;
   void (*exit_hctx)(struct blk_mq_hw_ctx *, unsigned int ) ;
   void (*depth_updated)(struct blk_mq_hw_ctx *) ;
   bool (*allow_merge)(struct request_queue *, struct request *, struct bio *) ;
   bool (*bio_merge)(struct blk_mq_hw_ctx *, struct bio *, unsigned int ) ;
   int (*request_merge)(struct request_queue *, struct request **, struct bio *) ;
   void (*request_merged)(struct request_queue *, struct request *, enum elv_merge ) ;
   void (*requests_merged)(struct request_queue *, struct request *, struct request *) ;
   void (*limit_depth)(unsigned int , struct blk_mq_alloc_data *) ;
   void (*prepare_request)(struct request *, struct bio *) ;
   void (*finish_request)(struct request *) ;
   void (*insert_requests)(struct blk_mq_hw_ctx *, struct list_head *, bool ) ;
   struct request *(*dispatch_request)(struct blk_mq_hw_ctx *) ;
   bool (*has_work)(struct blk_mq_hw_ctx *) ;
   void (*completed_request)(struct request *, u64 ) ;
   void (*requeue_request)(struct request *) ;
   struct request *(*former_request)(struct request_queue *, struct request *) ;
   struct request *(*next_request)(struct request_queue *, struct request *) ;
   void (*init_icq)(struct io_cq *) ;
   void (*exit_icq)(struct io_cq *) ;
};
#line 57  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/elevator.h"
struct elv_fs_entry {
   struct attribute attr ;
   ssize_t (*show)(struct elevator_queue *, char *) ;
   ssize_t (*store)(struct elevator_queue *, char *, size_t ) ;
};
#line 66  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/elevator.h"
struct elevator_type {
   struct kmem_cache *icq_cache ;
   struct elevator_mq_ops ops ;
   size_t icq_size ;
   size_t icq_align ;
   struct elv_fs_entry *elevator_attrs ;
   char *elevator_name ;
   char *elevator_alias ;
   unsigned int elevator_features ;
   struct module *elevator_owner ;
   struct blk_mq_debugfs_attr *queue_debugfs_attrs ;
   struct blk_mq_debugfs_attr *hctx_debugfs_attrs ;
   char icq_cache_name[22U] ;
   struct list_head list ;
};
#line 101  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/elevator.h"
struct elevator_queue {
   struct elevator_type *type ;
   void *elevator_data ;
   struct kobject kobj ;
   struct mutex sysfs_lock ;
   unsigned int registered : 1 ;
   struct hlist_head hash[64U] ;
};
#line 153  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/elevator.h"
typedef blk_qc_t make_request_fn(struct request_queue *, struct bio *);
#line 291  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
typedef int dma_drain_needed_fn(struct request *);
#line 304 
enum blk_zoned_model {
    BLK_ZONED_NONE = 0,
    BLK_ZONED_HA = 1,
    BLK_ZONED_HM = 2
};
#line 320  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
struct queue_limits {
   unsigned long bounce_pfn ;
   unsigned long seg_boundary_mask ;
   unsigned long virt_boundary_mask ;
   unsigned int max_hw_sectors ;
   unsigned int max_dev_sectors ;
   unsigned int chunk_sectors ;
   unsigned int max_sectors ;
   unsigned int max_segment_size ;
   unsigned int physical_block_size ;
   unsigned int logical_block_size ;
   unsigned int alignment_offset ;
   unsigned int io_min ;
   unsigned int io_opt ;
   unsigned int max_discard_sectors ;
   unsigned int max_hw_discard_sectors ;
   unsigned int max_write_same_sectors ;
   unsigned int max_write_zeroes_sectors ;
   unsigned int discard_granularity ;
   unsigned int discard_alignment ;
   unsigned short max_segments ;
   unsigned short max_integrity_segments ;
   unsigned short max_discard_segments ;
   unsigned char misaligned ;
   unsigned char discard_misaligned ;
   unsigned char raid_partial_stripes_expensive ;
   enum blk_zoned_model zoned ;
};
#line 394 
struct blk_mq_ops;
#line 394 
struct throtl_data;
#line 394 
struct blk_mq_tag_set;
#line 394  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
struct request_queue {
   struct request *last_merge ;
   struct elevator_queue *elevator ;
   struct blk_queue_stats *stats ;
   struct rq_qos *rq_qos ;
   make_request_fn *make_request_fn ;
   dma_drain_needed_fn *dma_drain_needed ;
   struct blk_mq_ops *mq_ops ;
   struct blk_mq_ctx *queue_ctx ;
   unsigned int queue_depth ;
   struct blk_mq_hw_ctx **queue_hw_ctx ;
   unsigned int nr_hw_queues ;
   struct backing_dev_info *backing_dev_info ;
   void *queuedata ;
   unsigned long queue_flags ;
   atomic_t pm_only ;
   int id ;
   gfp_t bounce_gfp ;
   spinlock_t queue_lock ;
   struct kobject kobj ;
   struct kobject *mq_kobj ;
   struct blk_integrity integrity ;
   struct device *dev ;
   int rpm_status ;
   unsigned int nr_pending ;
   unsigned long nr_requests ;
   unsigned int dma_drain_size ;
   void *dma_drain_buffer ;
   unsigned int dma_pad_mask ;
   unsigned int dma_alignment ;
   unsigned int rq_timeout ;
   int poll_nsec ;
   struct blk_stat_callback *poll_cb ;
   struct blk_rq_stat poll_stat[16U] ;
   struct timer_list timeout ;
   struct work_struct timeout_work ;
   struct list_head icq_list ;
   unsigned long blkcg_pols[1U] ;
   struct blkcg_gq *root_blkg ;
   struct list_head blkg_list ;
   struct queue_limits limits ;
   unsigned int required_elevator_features ;
   unsigned int nr_zones ;
   unsigned long *conv_zones_bitmap ;
   unsigned long *seq_zones_wlock ;
   unsigned int sg_timeout ;
   unsigned int sg_reserved_size ;
   int node ;
   struct blk_trace *blk_trace ;
   struct mutex blk_trace_mutex ;
   struct blk_flush_queue *fq ;
   struct list_head requeue_list ;
   spinlock_t requeue_lock ;
   struct delayed_work requeue_work ;
   struct mutex sysfs_lock ;
   struct mutex sysfs_dir_lock ;
   struct list_head unused_hctx_list ;
   spinlock_t unused_hctx_lock ;
   int mq_freeze_depth ;
   struct bsg_class_device bsg_dev ;
   struct throtl_data *td ;
   struct callback_head callback_head ;
   wait_queue_head_t mq_freeze_wq ;
   struct mutex mq_freeze_lock ;
   struct percpu_ref q_usage_counter ;
   struct blk_mq_tag_set *tag_set ;
   struct list_head tag_set_list ;
   struct bio_set bio_split ;
   struct dentry *debugfs_dir ;
   struct dentry *sched_debugfs_dir ;
   struct dentry *rqos_debugfs_dir ;
   bool mq_sysfs_init_done ;
   size_t cmd_size ;
   struct work_struct release_work ;
   u64 write_hints[5U] ;
};
#line 1160  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
struct blk_plug {
   struct list_head mq_list ;
   struct list_head cb_list ;
   unsigned short rq_count ;
   bool multiple_queues ;
};
#line 1514  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
struct blk_integrity_iter {
   void *prot_buf ;
   void *data_buf ;
   sector_t seed ;
   unsigned int data_size ;
   unsigned short interval ;
   char *disk_name ;
};
#line 1522  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
typedef blk_status_t integrity_processing_fn(struct blk_integrity_iter *);
#line 1524  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
typedef void integrity_prepare_fn(struct request *);
#line 1525  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
typedef void integrity_complete_fn(struct request *, unsigned int );
#line 1527  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
struct blk_integrity_profile {
   integrity_processing_fn *generate_fn ;
   integrity_processing_fn *verify_fn ;
   integrity_prepare_fn *prepare_fn ;
   integrity_complete_fn *complete_fn ;
   char *name ;
};
#line 1693  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
struct block_device_operations {
   int (*open)(struct block_device *, fmode_t ) ;
   void (*release)(struct gendisk *, fmode_t ) ;
   int (*rw_page)(struct block_device *, sector_t , struct page *, unsigned int ) ;
   int (*ioctl)(struct block_device *, fmode_t , unsigned int , unsigned long ) ;
   int (*compat_ioctl)(struct block_device *, fmode_t , unsigned int , unsigned long ) ;
   unsigned int (*check_events)(struct gendisk *, unsigned int ) ;
   int (*media_changed)(struct gendisk *) ;
   void (*unlock_native_capacity)(struct gendisk *) ;
   int (*revalidate_disk)(struct gendisk *) ;
   int (*getgeo)(struct block_device *, struct hd_geometry *) ;
   void (*swap_slot_free_notify)(struct block_device *, unsigned long ) ;
   int (*report_zones)(struct gendisk *, sector_t , unsigned int , int (*)(struct blk_zone *, unsigned int , void *), void *) ;
   struct module *owner ;
   struct pr_ops *pr_ops ;
};
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk-cgroup.h"
struct blkcg_policy_data;
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk-cgroup.h"
struct blkcg {
   struct cgroup_subsys_state css ;
   spinlock_t lock ;
   struct xarray blkg_tree ;
   struct blkcg_gq *blkg_hint ;
   struct hlist_head blkg_list ;
   struct blkcg_policy_data *cpd[5U] ;
   struct list_head all_blkcgs_node ;
   struct list_head cgwb_list ;
   refcount_t cgwb_refcnt ;
};
#line 63  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk-cgroup.h"
struct blkg_iostat {
   u64 bytes[3U] ;
   u64 ios[3U] ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk-cgroup.h"
struct blkg_iostat_set {
   struct u64_stats_sync sync ;
   struct blkg_iostat cur ;
   struct blkg_iostat last ;
};
#line 85  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk-cgroup.h"
struct blkg_policy_data {
   struct blkcg_gq *blkg ;
   int plid ;
};
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk-cgroup.h"
struct blkcg_policy_data {
   struct blkcg *blkcg ;
   int plid ;
};
#line 105  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk-cgroup.h"
struct blkcg_gq {
   struct request_queue *q ;
   struct list_head q_node ;
   struct hlist_node blkcg_node ;
   struct blkcg *blkcg ;
   struct bdi_writeback_congested *wb_congested ;
   struct blkcg_gq *parent ;
   struct percpu_ref refcnt ;
   bool online ;
   struct blkg_iostat_set *iostat_cpu ;
   struct blkg_iostat_set iostat ;
   struct blkg_policy_data *pd[5U] ;
   spinlock_t async_bio_lock ;
   struct bio_list async_bios ;
   struct work_struct async_bio_work ;
   atomic_t use_delay ;
   atomic64_t delay_nsec ;
   atomic64_t delay_start ;
   u64 last_delay ;
   int last_use ;
   struct callback_head callback_head ;
};
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/writeback.h"
enum writeback_sync_modes {
    WB_SYNC_NONE = 0,
    WB_SYNC_ALL = 1
};
#line 51  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/writeback.h"
struct writeback_control {
   long nr_to_write ;
   long pages_skipped ;
   loff_t range_start ;
   loff_t range_end ;
   enum writeback_sync_modes sync_mode ;
   unsigned int for_kupdate : 1 ;
   unsigned int for_background : 1 ;
   unsigned int tagged_writepages : 1 ;
   unsigned int for_reclaim : 1 ;
   unsigned int range_cyclic : 1 ;
   unsigned int for_sync : 1 ;
   unsigned int no_cgroup_owner : 1 ;
   unsigned int punt_to_cgroup : 1 ;
   struct bdi_writeback *wb ;
   struct inode *inode ;
   int wb_id ;
   int wb_lcand_id ;
   int wb_tcand_id ;
   size_t wb_bytes ;
   size_t wb_lcand_bytes ;
   size_t wb_tcand_bytes ;
};
#line 129  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/writeback.h"
struct wb_domain {
   spinlock_t lock ;
   struct fprop_global completions ;
   struct timer_list period_timer ;
   unsigned long period_time ;
   unsigned long dirty_limit_tstamp ;
   unsigned long dirty_limit ;
};
#line 69  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct mem_cgroup_id {
   int id ;
   refcount_t ref ;
};
#line 86  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct memcg_vmstats_percpu {
   long stat[38U] ;
   unsigned long events[91U] ;
   unsigned long nr_page_events ;
   unsigned long targets[2U] ;
};
#line 93  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct mem_cgroup_reclaim_iter {
   struct mem_cgroup *position ;
   unsigned int generation ;
};
#line 99  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct lruvec_stat {
   long count[32U] ;
};
#line 107  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct memcg_shrinker_map {
   struct callback_head rcu ;
   unsigned long map[0U] ;
};
#line 115  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct mem_cgroup_per_node {
   struct lruvec lruvec ;
   struct lruvec_stat *lruvec_stat_local ;
   struct lruvec_stat *lruvec_stat_cpu ;
   atomic_long_t lruvec_stat[32U] ;
   unsigned long lru_zone_size[5U][5U] ;
   struct mem_cgroup_reclaim_iter iter ;
   struct memcg_shrinker_map *shrinker_map ;
   struct rb_node tree_node ;
   unsigned long usage_in_excess ;
   bool on_tree ;
   struct mem_cgroup *memcg ;
};
#line 139  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct mem_cgroup_threshold {
   struct eventfd_ctx *eventfd ;
   unsigned long threshold ;
};
#line 145  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct mem_cgroup_threshold_ary {
   int current_threshold ;
   unsigned int size ;
   struct mem_cgroup_threshold entries[0U] ;
};
#line 154  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct mem_cgroup_thresholds {
   struct mem_cgroup_threshold_ary *primary ;
   struct mem_cgroup_threshold_ary *spare ;
};
#line 164 
enum memcg_kmem_state {
    KMEM_NONE = 0,
    KMEM_ALLOCATED = 1,
    KMEM_ONLINE = 2
};
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct memcg_padding {
   char x[0U] ;
} __attribute__((__aligned__(4096)));
#line 190  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct memcg_cgwb_frn {
   u64 bdi_id ;
   int memcg_id ;
   u64 at ;
   struct wb_completion done ;
};
#line 203  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct mem_cgroup {
   struct cgroup_subsys_state css ;
   struct mem_cgroup_id id ;
   struct page_counter memory ;
   struct page_counter swap ;
   struct page_counter memsw ;
   struct page_counter kmem ;
   struct page_counter tcpmem ;
   unsigned long high ;
   struct work_struct high_work ;
   unsigned long soft_limit ;
   struct vmpressure vmpressure ;
   bool use_hierarchy ;
   bool oom_group ;
   bool oom_lock ;
   int under_oom ;
   int swappiness ;
   int oom_kill_disable ;
   struct cgroup_file events_file ;
   struct cgroup_file events_local_file ;
   struct cgroup_file swap_events_file ;
   struct mutex thresholds_lock ;
   struct mem_cgroup_thresholds thresholds ;
   struct mem_cgroup_thresholds memsw_thresholds ;
   struct list_head oom_notify ;
   unsigned long move_charge_at_immigrate ;
   spinlock_t move_lock ;
   unsigned long move_lock_flags ;
   struct memcg_padding _pad1_ ;
   atomic_t moving_account ;
   struct task_struct *move_lock_task ;
   struct memcg_vmstats_percpu *vmstats_local ;
   struct memcg_vmstats_percpu *vmstats_percpu ;
   struct memcg_padding _pad2_ ;
   atomic_long_t vmstats[38U] ;
   atomic_long_t vmevents[91U] ;
   atomic_long_t memory_events[7U] ;
   atomic_long_t memory_events_local[7U] ;
   unsigned long socket_pressure ;
   bool tcpmem_active ;
   int tcpmem_pressure ;
   int kmemcg_id ;
   enum memcg_kmem_state kmem_state ;
   struct list_head kmem_caches ;
   struct list_head cgwb_list ;
   struct wb_domain cgwb_domain ;
   struct memcg_cgwb_frn cgwb_frn[4U] ;
   struct list_head event_list ;
   spinlock_t event_list_lock ;
   struct deferred_split deferred_split_queue ;
   struct mem_cgroup_per_node *nodeinfo[0U] ;
};
#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/gen_stats.h"
struct gnet_stats_queue {
   __u32 qlen ;
   __u32 backlog ;
   __u32 drops ;
   __u32 requeues ;
   __u32 overlimits ;
};
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/gen_stats.h"
struct gnet_stats_basic_packed {
   __u64 bytes ;
   __u64 packets ;
};
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/gen_stats.h"
struct gnet_stats_basic_cpu {
   struct gnet_stats_basic_packed bstats ;
   struct u64_stats_sync syncp ;
} __attribute__((__aligned__(16)));
#line 20 
struct net_rate_estimator;
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/gen_stats.h"
struct gnet_dump {
   spinlock_t *lock ;
   struct sk_buff *skb ;
   struct nlattr *tail ;
   int compat_tc_stats ;
   int compat_xstats ;
   int padattr ;
   void *xstats ;
   int xstats_len ;
   struct tc_stats tc_stats ;
};
#line 291  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netlink.h"
struct __anonstruct_730 {
   s16 min ;
   s16 max ;
};
#line 291  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netlink.h"
union __anonunion_729 {
   void *validation_data ;
   struct __anonstruct_730 __anonCompField___anonunion_729_167 ;
   int (*validate)(struct nlattr *, struct netlink_ext_ack *) ;
   u16 strict_start_type ;
};
#line 291  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netlink.h"
struct nla_policy {
   u8 type ;
   u8 validation_type ;
   u16 len ;
   union __anonunion_729 __anonCompField_nla_policy_168 ;
};
#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/rtnetlink.h"
struct rtnl_link_ops {
   struct list_head list ;
   char *kind ;
   size_t priv_size ;
   void (*setup)(struct net_device *) ;
   unsigned int maxtype ;
   struct nla_policy *policy ;
   int (*validate)(struct nlattr **, struct nlattr **, struct netlink_ext_ack *) ;
   int (*newlink)(struct net *, struct net_device *, struct nlattr **, struct nlattr **, struct netlink_ext_ack *) ;
   int (*changelink)(struct net_device *, struct nlattr **, struct nlattr **, struct netlink_ext_ack *) ;
   void (*dellink)(struct net_device *, struct list_head *) ;
   size_t (*get_size)(struct net_device *) ;
   int (*fill_info)(struct sk_buff *, struct net_device *) ;
   size_t (*get_xstats_size)(struct net_device *) ;
   int (*fill_xstats)(struct sk_buff *, struct net_device *) ;
   unsigned int (*get_num_tx_queues)(void) ;
   unsigned int (*get_num_rx_queues)(void) ;
   unsigned int slave_maxtype ;
   struct nla_policy *slave_policy ;
   int (*slave_changelink)(struct net_device *, struct net_device *, struct nlattr **, struct nlattr **, struct netlink_ext_ack *) ;
   size_t (*get_slave_size)(struct net_device *, struct net_device *) ;
   int (*fill_slave_info)(struct sk_buff *, struct net_device *, struct net_device *) ;
   struct net *(*get_link_net)(struct net_device *) ;
   size_t (*get_linkxstats_size)(struct net_device *, int ) ;
   int (*fill_linkxstats)(struct sk_buff *, struct net_device *, int *, int ) ;
};
#line 173  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jhash.h"
struct rhash_lock_head {
   };
#line 76  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable.h"
struct bucket_table {
   unsigned int size ;
   unsigned int nest ;
   u32 hash_rnd ;
   struct list_head walkers ;
   struct callback_head rcu ;
   struct bucket_table *future_tbl ;
   struct lockdep_map dep_map ;
   struct rhash_lock_head *buckets[] ;
};
#line 281  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow_offload.h"
struct flow_block {
   struct list_head cb_list ;
};
#line 298  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow_offload.h"
typedef int flow_setup_cb_t(enum tc_setup_type , void *, void *);
#line 412 
struct Qdisc_ops;
#line 413 
struct qdisc_walker;
#line 414 
struct tcf_walker;
#line 41  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct qdisc_size_table {
   struct callback_head rcu ;
   struct list_head list ;
   struct tc_sizespec szopts ;
   int refcnt ;
   u16 data[] ;
};
#line 50  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct qdisc_skb_head {
   struct sk_buff *head ;
   struct sk_buff *tail ;
   __u32 qlen ;
   spinlock_t lock ;
};
#line 57  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct Qdisc {
   int (*enqueue)(struct sk_buff *, struct Qdisc *, struct sk_buff **) ;
   struct sk_buff *(*dequeue)(struct Qdisc *) ;
   unsigned int flags ;
   u32 limit ;
   struct Qdisc_ops *ops ;
   struct qdisc_size_table *stab ;
   struct hlist_node hash ;
   u32 handle ;
   u32 parent ;
   struct netdev_queue *dev_queue ;
   struct net_rate_estimator *rate_est ;
   struct gnet_stats_basic_cpu *cpu_bstats ;
   struct gnet_stats_queue *cpu_qstats ;
   int padded ;
   refcount_t refcnt ;
   struct sk_buff_head gso_skb ;
   struct qdisc_skb_head q ;
   struct gnet_stats_basic_packed bstats ;
   seqcount_t running ;
   struct gnet_stats_queue qstats ;
   unsigned long state ;
   struct Qdisc *next_sched ;
   struct sk_buff_head skb_bad_txq ;
   spinlock_t busylock ;
   spinlock_t seqlock ;
   bool empty ;
   struct callback_head rcu ;
};
#line 195 
struct tcf_block;
#line 195  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct Qdisc_class_ops {
   unsigned int flags ;
   struct netdev_queue *(*select_queue)(struct Qdisc *, struct tcmsg *) ;
   int (*graft)(struct Qdisc *, unsigned long , struct Qdisc *, struct Qdisc **, struct netlink_ext_ack *) ;
   struct Qdisc *(*leaf)(struct Qdisc *, unsigned long ) ;
   void (*qlen_notify)(struct Qdisc *, unsigned long ) ;
   unsigned long (*find)(struct Qdisc *, u32 ) ;
   int (*change)(struct Qdisc *, u32 , u32 , struct nlattr **, unsigned long *, struct netlink_ext_ack *) ;
   int (*delete)(struct Qdisc *, unsigned long ) ;
   void (*walk)(struct Qdisc *, struct qdisc_walker *) ;
   struct tcf_block *(*tcf_block)(struct Qdisc *, unsigned long , struct netlink_ext_ack *) ;
   unsigned long (*bind_tcf)(struct Qdisc *, unsigned long , u32 ) ;
   void (*unbind_tcf)(struct Qdisc *, unsigned long ) ;
   int (*dump)(struct Qdisc *, unsigned long , struct sk_buff *, struct tcmsg *) ;
   int (*dump_stats)(struct Qdisc *, unsigned long , struct gnet_dump *) ;
};
#line 235  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct Qdisc_ops {
   struct Qdisc_ops *next ;
   struct Qdisc_class_ops *cl_ops ;
   char id[16U] ;
   int priv_size ;
   unsigned int static_flags ;
   int (*enqueue)(struct sk_buff *, struct Qdisc *, struct sk_buff **) ;
   struct sk_buff *(*dequeue)(struct Qdisc *) ;
   struct sk_buff *(*peek)(struct Qdisc *) ;
   int (*init)(struct Qdisc *, struct nlattr *, struct netlink_ext_ack *) ;
   void (*reset)(struct Qdisc *) ;
   void (*destroy)(struct Qdisc *) ;
   int (*change)(struct Qdisc *, struct nlattr *, struct netlink_ext_ack *) ;
   void (*attach)(struct Qdisc *) ;
   int (*change_tx_queue_len)(struct Qdisc *, unsigned int ) ;
   int (*dump)(struct Qdisc *, struct sk_buff *) ;
   int (*dump_stats)(struct Qdisc *, struct gnet_dump *) ;
   void (*ingress_block_set)(struct Qdisc *, u32 ) ;
   void (*egress_block_set)(struct Qdisc *, u32 ) ;
   u32 (*ingress_block_get)(struct Qdisc *) ;
   u32 (*egress_block_get)(struct Qdisc *) ;
   struct module *owner ;
};
#line 272  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct __anonstruct_804 {
   unsigned long class ;
   u32 classid ;
};
#line 272 
struct tcf_proto;
#line 272  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct __anonstruct_805 {
   bool ingress ;
   struct gnet_stats_queue *qstats ;
};
#line 272  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
union __anonunion_803 {
   struct __anonstruct_804 __anonCompField___anonunion_803_170 ;
   struct tcf_proto *goto_tp ;
   struct __anonstruct_805 __anonCompField___anonunion_803_171 ;
};
#line 272  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct tcf_result {
   union __anonunion_803 __anonCompField_tcf_result_172 ;
};
#line 287 
struct tcf_chain;
#line 290  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct tcf_proto_ops {
   struct list_head head ;
   char kind[16U] ;
   int (*classify)(struct sk_buff *, struct tcf_proto *, struct tcf_result *) ;
   int (*init)(struct tcf_proto *) ;
   void (*destroy)(struct tcf_proto *, bool , struct netlink_ext_ack *) ;
   void *(*get)(struct tcf_proto *, u32 ) ;
   void (*put)(struct tcf_proto *, void *) ;
   int (*change)(struct net *, struct sk_buff *, struct tcf_proto *, unsigned long , u32 , struct nlattr **, void **, bool , bool , struct netlink_ext_ack *) ;
   int (*delete)(struct tcf_proto *, void *, bool *, bool , struct netlink_ext_ack *) ;
   bool (*delete_empty)(struct tcf_proto *) ;
   void (*walk)(struct tcf_proto *, struct tcf_walker *, bool ) ;
   int (*reoffload)(struct tcf_proto *, bool , flow_setup_cb_t *, void *, struct netlink_ext_ack *) ;
   void (*hw_add)(struct tcf_proto *, void *) ;
   void (*hw_del)(struct tcf_proto *, void *) ;
   void (*bind_class)(void *, u32 , unsigned long ) ;
   void *(*tmplt_create)(struct net *, struct tcf_chain *, struct nlattr **, struct netlink_ext_ack *) ;
   void (*tmplt_destroy)(void *) ;
   int (*dump)(struct net *, struct tcf_proto *, void *, struct sk_buff *, struct tcmsg *, bool ) ;
   int (*tmplt_dump)(struct sk_buff *, struct net *, void *) ;
   struct module *owner ;
   int flags ;
};
#line 348  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct tcf_proto {
   struct tcf_proto *next ;
   void *root ;
   int (*classify)(struct sk_buff *, struct tcf_proto *, struct tcf_result *) ;
   __be16 protocol ;
   u32 prio ;
   void *data ;
   struct tcf_proto_ops *ops ;
   struct tcf_chain *chain ;
   spinlock_t lock ;
   bool deleting ;
   refcount_t refcnt ;
   struct callback_head rcu ;
   struct hlist_node destroy_ht_node ;
};
#line 386  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct tcf_chain {
   struct mutex filter_chain_lock ;
   struct tcf_proto *filter_chain ;
   struct list_head list ;
   struct tcf_block *block ;
   u32 index ;
   unsigned int refcnt ;
   unsigned int action_refcnt ;
   bool explicitly_created ;
   bool flushing ;
   struct tcf_proto_ops *tmplt_ops ;
   void *tmplt_priv ;
   struct callback_head rcu ;
};
#line 402  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct __anonstruct_chain0_807 {
   struct tcf_chain *chain ;
   struct list_head filter_chain_list ;
};
#line 402  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct tcf_block {
   struct mutex lock ;
   struct list_head chain_list ;
   u32 index ;
   refcount_t refcnt ;
   struct net *net ;
   struct Qdisc *q ;
   struct rw_semaphore cb_lock ;
   struct flow_block flow_block ;
   struct list_head owner_list ;
   bool keep_dst ;
   atomic_t offloadcnt ;
   unsigned int nooffloaddevcnt ;
   unsigned int lockeddevcnt ;
   struct __anonstruct_chain0_807 chain0 ;
   struct callback_head rcu ;
   struct hlist_head proto_destroy_ht[128U] ;
   struct mutex proto_destroy_lock ;
};
#line 1269  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct mini_Qdisc {
   struct tcf_proto *filter_list ;
   struct gnet_stats_basic_cpu *cpu_bstats ;
   struct gnet_stats_queue *cpu_qstats ;
   struct callback_head rcu ;
};
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/filter.h"
struct sock_filter {
   __u16 code ;
   __u8 jt ;
   __u8 jf ;
   __u32 k ;
};
#line 35 
struct sock_reuseport;
#line 513  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/filter.h"
struct sock_fprog_kern {
   u16 len ;
   struct sock_filter *filter ;
};
#line 526  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/filter.h"
union __anonunion_820 {
   struct sock_filter insns[0U] ;
   struct bpf_insn insnsi[0U] ;
};
#line 526  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/filter.h"
struct bpf_prog {
   u16 pages ;
   u16 jited : 1 ;
   u16 jit_requested : 1 ;
   u16 gpl_compatible : 1 ;
   u16 cb_access : 1 ;
   u16 dst_needed : 1 ;
   u16 blinded : 1 ;
   u16 is_func : 1 ;
   u16 kprobe_override : 1 ;
   u16 has_callchain_buf : 1 ;
   u16 enforce_expected_attach_type : 1 ;
   enum bpf_prog_type type ;
   enum bpf_attach_type expected_attach_type ;
   u32 len ;
   u32 jited_len ;
   u8 tag[8U] ;
   struct bpf_prog_aux *aux ;
   struct sock_fprog_kern *orig_prog ;
   unsigned int (*bpf_func)(void *, struct bpf_insn *) ;
   union __anonunion_820 __anonCompField_bpf_prog_174 ;
};
#line 554  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/filter.h"
struct sk_filter {
   refcount_t refcnt ;
   struct callback_head rcu ;
   struct bpf_prog *prog ;
};
#line 36  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/poll.h"
struct pollfd {
   int fd ;
   short events ;
   short revents ;
};
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/poll.h"
struct poll_table_struct {
   void (*_qproc)(struct file *, wait_queue_head_t *, struct poll_table_struct *) ;
   __poll_t _key ;
};
#line 70  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/neighbour.h"
struct neigh_table;
#line 70  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/neighbour.h"
struct neigh_parms {
   possible_net_t net ;
   struct net_device *dev ;
   struct list_head list ;
   int (*neigh_setup)(struct neighbour *) ;
   struct neigh_table *tbl ;
   void *sysctl_table ;
   int dead ;
   refcount_t refcnt ;
   struct callback_head callback_head ;
   int reachable_time ;
   int data[13U] ;
   unsigned long data_state[1U] ;
};
#line 112  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/neighbour.h"
struct neigh_statistics {
   unsigned long allocs ;
   unsigned long destroys ;
   unsigned long hash_grows ;
   unsigned long res_failed ;
   unsigned long lookups ;
   unsigned long hits ;
   unsigned long rcv_probes_mcast ;
   unsigned long rcv_probes_ucast ;
   unsigned long periodic_gc_runs ;
   unsigned long forced_gc_runs ;
   unsigned long unres_discards ;
   unsigned long table_fulls ;
};
#line 134 
struct neigh_ops;
#line 134  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/neighbour.h"
struct neighbour {
   struct neighbour *next ;
   struct neigh_table *tbl ;
   struct neigh_parms *parms ;
   unsigned long confirmed ;
   unsigned long updated ;
   rwlock_t lock ;
   refcount_t refcnt ;
   unsigned int arp_queue_len_bytes ;
   struct sk_buff_head arp_queue ;
   struct timer_list timer ;
   unsigned long used ;
   atomic_t probes ;
   __u8 flags ;
   __u8 nud_state ;
   __u8 type ;
   __u8 dead ;
   u8 protocol ;
   seqlock_t ha_lock ;
   unsigned char ha[32U] ;
   struct hh_cache hh ;
   int (*output)(struct neighbour *, struct sk_buff *) ;
   struct neigh_ops *ops ;
   struct list_head gc_list ;
   struct callback_head rcu ;
   struct net_device *dev ;
   u8 primary_key[0U] ;
} __attribute__((__designated_init__));
#line 163  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/neighbour.h"
struct neigh_ops {
   int family ;
   void (*solicit)(struct neighbour *, struct sk_buff *) ;
   void (*error_report)(struct neighbour *, struct sk_buff *) ;
   int (*output)(struct neighbour *, struct sk_buff *) ;
   int (*connected_output)(struct neighbour *, struct sk_buff *) ;
};
#line 171  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/neighbour.h"
struct pneigh_entry {
   struct pneigh_entry *next ;
   possible_net_t net ;
   struct net_device *dev ;
   u8 flags ;
   u8 protocol ;
   u8 key[0U] ;
};
#line 186  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/neighbour.h"
struct neigh_hash_table {
   struct neighbour **hash_buckets ;
   unsigned int hash_shift ;
   __u32 hash_rnd[4U] ;
   struct callback_head rcu ;
};
#line 194  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/neighbour.h"
struct neigh_table {
   int family ;
   unsigned int entry_size ;
   unsigned int key_len ;
   __be16 protocol ;
   __u32 (*hash)(void *, struct net_device *, __u32 *) ;
   bool (*key_eq)(struct neighbour *, void *) ;
   int (*constructor)(struct neighbour *) ;
   int (*pconstructor)(struct pneigh_entry *) ;
   void (*pdestructor)(struct pneigh_entry *) ;
   void (*proxy_redo)(struct sk_buff *) ;
   bool (*allow_add)(struct net_device *, struct netlink_ext_ack *) ;
   char *id ;
   struct neigh_parms parms ;
   struct list_head parms_list ;
   int gc_interval ;
   int gc_thresh1 ;
   int gc_thresh2 ;
   int gc_thresh3 ;
   unsigned long last_flush ;
   struct delayed_work gc_work ;
   struct timer_list proxy_timer ;
   struct sk_buff_head proxy_queue ;
   atomic_t entries ;
   atomic_t gc_entries ;
   struct list_head gc_list ;
   rwlock_t lock ;
   unsigned long last_rand ;
   struct neigh_statistics *stats ;
   struct neigh_hash_table *nht ;
   struct pneigh_entry **phash_buckets ;
};
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/dst.h"
struct lwtunnel_state;
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/dst.h"
struct dst_entry {
   struct net_device *dev ;
   struct dst_ops *ops ;
   unsigned long _metrics ;
   unsigned long expires ;
   struct xfrm_state *xfrm ;
   int (*input)(struct sk_buff *) ;
   int (*output)(struct net *, struct sock *, struct sk_buff *) ;
   unsigned short flags ;
   short obsolete ;
   unsigned short header_len ;
   unsigned short trailer_len ;
   atomic_t __refcnt ;
   int __use ;
   unsigned long lastuse ;
   struct lwtunnel_state *lwtstate ;
   struct callback_head callback_head ;
   short error ;
   short __pad ;
   __u32 tclassid ;
};
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fib_rules.h"
struct fib_rule_hdr {
   __u8 family ;
   __u8 dst_len ;
   __u8 src_len ;
   __u8 tos ;
   __u8 table ;
   __u8 res1 ;
   __u8 res2 ;
   __u8 action ;
   __u32 flags ;
};
#line 38  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fib_rules.h"
struct fib_rule_port_range {
   __u16 start ;
   __u16 end ;
};
#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/fib_notifier.h"
struct fib_notifier_ops {
   int family ;
   struct list_head list ;
   unsigned int (*fib_seq_read)(struct net *) ;
   int (*fib_dump)(struct net *, struct notifier_block *, struct netlink_ext_ack *) ;
   struct module *owner ;
   struct callback_head rcu ;
};
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/fib_rules.h"
struct fib_kuid_range {
   kuid_t start ;
   kuid_t end ;
};
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/fib_rules.h"
struct fib_rule {
   struct list_head list ;
   int iifindex ;
   int oifindex ;
   u32 mark ;
   u32 mark_mask ;
   u32 flags ;
   u32 table ;
   u8 action ;
   u8 l3mdev ;
   u8 proto ;
   u8 ip_proto ;
   u32 target ;
   __be64 tun_id ;
   struct fib_rule *ctarget ;
   struct net *fr_net ;
   refcount_t refcnt ;
   u32 pref ;
   int suppress_ifgroup ;
   int suppress_prefixlen ;
   char iifname[16U] ;
   char oifname[16U] ;
   struct fib_kuid_range uid_range ;
   struct fib_rule_port_range sport_range ;
   struct fib_rule_port_range dport_range ;
   struct callback_head rcu ;
};
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/fib_rules.h"
struct fib_lookup_arg {
   void *lookup_ptr ;
   void *lookup_data ;
   void *result ;
   struct fib_rule *rule ;
   u32 table ;
   int flags ;
};
#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/fib_rules.h"
struct fib_rules_ops {
   int family ;
   struct list_head list ;
   int rule_size ;
   int addr_size ;
   int unresolved_rules ;
   int nr_goto_rules ;
   unsigned int fib_rules_seq ;
   int (*action)(struct fib_rule *, struct flowi *, int , struct fib_lookup_arg *) ;
   bool (*suppress)(struct fib_rule *, struct fib_lookup_arg *) ;
   int (*match)(struct fib_rule *, struct flowi *, int ) ;
   int (*configure)(struct fib_rule *, struct sk_buff *, struct fib_rule_hdr *, struct nlattr **, struct netlink_ext_ack *) ;
   int (*delete)(struct fib_rule *) ;
   int (*compare)(struct fib_rule *, struct fib_rule_hdr *, struct nlattr **) ;
   int (*fill)(struct fib_rule *, struct sk_buff *, struct fib_rule_hdr *) ;
   size_t (*nlmsg_payload)(struct fib_rule *) ;
   void (*flush_cache)(struct fib_rules_ops *) ;
   int nlgroup ;
   struct nla_policy *policy ;
   struct list_head rules_list ;
   struct module *owner ;
   struct net *fro_net ;
   struct callback_head rcu ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/l3mdev.h"
struct l3mdev_ops {
   u32 (*l3mdev_fib_table)(struct net_device *) ;
   struct sk_buff *(*l3mdev_l3_rcv)(struct net_device *, struct sk_buff *, u16 ) ;
   struct sk_buff *(*l3mdev_l3_out)(struct net_device *, struct sock *, struct sk_buff *, u16 ) ;
   struct dst_entry *(*l3mdev_link_scope_lookup)(struct net_device *, struct flowi6 *) ;
};
#line 202  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/l3mdev.h"
struct __anonstruct_socket_lock_t_842 {
   spinlock_t slock ;
   int owned ;
   wait_queue_head_t wq ;
   struct lockdep_map dep_map ;
};
#line 202  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/l3mdev.h"
typedef struct __anonstruct_socket_lock_t_842 socket_lock_t;
#line 108  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
struct proto;
#line 109  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
typedef __u32 __portpair;
#line 114  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
typedef __u64 __addrpair;
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
struct __anonstruct_844 {
   __be32 skc_daddr ;
   __be32 skc_rcv_saddr ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_843 {
   __addrpair skc_addrpair ;
   struct __anonstruct_844 __anonCompField___anonunion_843_176 ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_845 {
   unsigned int skc_hash ;
   __u16 skc_u16hashes[2U] ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
struct __anonstruct_847 {
   __be16 skc_dport ;
   __u16 skc_num ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_846 {
   __portpair skc_portpair ;
   struct __anonstruct_847 __anonCompField___anonunion_846_179 ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_848 {
   struct hlist_node skc_bind_node ;
   struct hlist_node skc_portaddr_node ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_849 {
   unsigned long skc_flags ;
   struct sock *skc_listener ;
   struct inet_timewait_death_row *skc_tw_dr ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_850 {
   struct hlist_node skc_node ;
   struct hlist_nulls_node skc_nulls_node ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_851 {
   int skc_incoming_cpu ;
   u32 skc_rcv_wnd ;
   u32 skc_tw_rcv_nxt ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_852 {
   u32 skc_rxhash ;
   u32 skc_window_clamp ;
   u32 skc_tw_snd_nxt ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
struct sock_common {
   union __anonunion_843 __anonCompField_sock_common_177 ;
   union __anonunion_845 __anonCompField_sock_common_178 ;
   union __anonunion_846 __anonCompField_sock_common_180 ;
   unsigned short skc_family ;
   unsigned char skc_state ;
   unsigned char skc_reuse : 4 ;
   unsigned char skc_reuseport : 1 ;
   unsigned char skc_ipv6only : 1 ;
   unsigned char skc_net_refcnt : 1 ;
   int skc_bound_dev_if ;
   union __anonunion_848 __anonCompField_sock_common_181 ;
   struct proto *skc_prot ;
   possible_net_t skc_net ;
   struct in6_addr skc_v6_daddr ;
   struct in6_addr skc_v6_rcv_saddr ;
   atomic64_t skc_cookie ;
   union __anonunion_849 __anonCompField_sock_common_182 ;
   int skc_dontcopy_begin[0U] ;
   union __anonunion_850 __anonCompField_sock_common_183 ;
   unsigned short skc_tx_queue_mapping ;
   unsigned short skc_rx_queue_mapping ;
   union __anonunion_851 __anonCompField_sock_common_184 ;
   refcount_t skc_refcnt ;
   int skc_dontcopy_end[0U] ;
   union __anonunion_852 __anonCompField_sock_common_185 ;
};
#line 231 
struct bpf_sk_storage;
#line 323  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
struct __anonstruct_sk_backlog_853 {
   atomic_t rmem_alloc ;
   int len ;
   struct sk_buff *head ;
   struct sk_buff *tail ;
};
#line 323  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_854 {
   struct socket_wq *sk_wq ;
   struct socket_wq *sk_wq_raw ;
};
#line 323  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_855 {
   struct sk_buff *sk_send_head ;
   struct rb_root tcp_rtx_queue ;
};
#line 323  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
struct sock {
   struct sock_common __sk_common ;
   socket_lock_t sk_lock ;
   atomic_t sk_drops ;
   int sk_rcvlowat ;
   struct sk_buff_head sk_error_queue ;
   struct sk_buff *sk_rx_skb_cache ;
   struct sk_buff_head sk_receive_queue ;
   struct __anonstruct_sk_backlog_853 sk_backlog ;
   int sk_forward_alloc ;
   unsigned int sk_ll_usec ;
   unsigned int sk_napi_id ;
   int sk_rcvbuf ;
   struct sk_filter *sk_filter ;
   union __anonunion_854 __anonCompField_sock_186 ;
   struct xfrm_policy *sk_policy[2U] ;
   struct dst_entry *sk_rx_dst ;
   struct dst_entry *sk_dst_cache ;
   atomic_t sk_omem_alloc ;
   int sk_sndbuf ;
   int sk_wmem_queued ;
   refcount_t sk_wmem_alloc ;
   unsigned long sk_tsq_flags ;
   union __anonunion_855 __anonCompField_sock_187 ;
   struct sk_buff *sk_tx_skb_cache ;
   struct sk_buff_head sk_write_queue ;
   __s32 sk_peek_off ;
   int sk_write_pending ;
   __u32 sk_dst_pending_confirm ;
   u32 sk_pacing_status ;
   long sk_sndtimeo ;
   struct timer_list sk_timer ;
   __u32 sk_priority ;
   __u32 sk_mark ;
   unsigned long sk_pacing_rate ;
   unsigned long sk_max_pacing_rate ;
   struct page_frag sk_frag ;
   netdev_features_t sk_route_caps ;
   netdev_features_t sk_route_nocaps ;
   netdev_features_t sk_route_forced_caps ;
   int sk_gso_type ;
   unsigned int sk_gso_max_size ;
   gfp_t sk_allocation ;
   __u32 sk_txhash ;
   unsigned int __sk_flags_offset[0U] ;
   unsigned int sk_padding : 1 ;
   unsigned int sk_kern_sock : 1 ;
   unsigned int sk_no_check_tx : 1 ;
   unsigned int sk_no_check_rx : 1 ;
   unsigned int sk_userlocks : 4 ;
   unsigned int sk_protocol : 8 ;
   unsigned int sk_type : 16 ;
   u16 sk_gso_max_segs ;
   u8 sk_pacing_shift ;
   unsigned long sk_lingertime ;
   struct proto *sk_prot_creator ;
   rwlock_t sk_callback_lock ;
   int sk_err ;
   int sk_err_soft ;
   u32 sk_ack_backlog ;
   u32 sk_max_ack_backlog ;
   kuid_t sk_uid ;
   struct pid *sk_peer_pid ;
   struct cred *sk_peer_cred ;
   long sk_rcvtimeo ;
   ktime_t sk_stamp ;
   u16 sk_tsflags ;
   u8 sk_shutdown ;
   u32 sk_tskey ;
   atomic_t sk_zckey ;
   u8 sk_clockid ;
   u8 sk_txtime_deadline_mode : 1 ;
   u8 sk_txtime_report_errors : 1 ;
   u8 sk_txtime_unused : 6 ;
   struct socket *sk_socket ;
   void *sk_user_data ;
   void *sk_security ;
   struct sock_cgroup_data sk_cgrp_data ;
   struct mem_cgroup *sk_memcg ;
   void (*sk_state_change)(struct sock *) ;
   void (*sk_data_ready)(struct sock *) ;
   void (*sk_write_space)(struct sock *) ;
   void (*sk_error_report)(struct sock *) ;
   int (*sk_backlog_rcv)(struct sock *, struct sk_buff *) ;
   struct sk_buff *(*sk_validate_xmit_skb)(struct sock *, struct net_device *, struct sk_buff *) ;
   void (*sk_destruct)(struct sock *) ;
   struct sock_reuseport *sk_reuseport_cb ;
   struct bpf_sk_storage *sk_bpf_storage ;
   struct callback_head sk_rcu ;
};
#line 1048 
struct request_sock_ops;
#line 1049 
struct timewait_sock_ops;
#line 1050 
struct raw_hashinfo;
#line 1051 
struct smc_hashinfo;
#line 1071 
struct udp_table;
#line 1071  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_h_890 {
   struct inet_hashinfo *hashinfo ;
   struct udp_table *udp_table ;
   struct raw_hashinfo *raw_hash ;
   struct smc_hashinfo *smc_hash ;
};
#line 1071  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
struct proto {
   void (*close)(struct sock *, long ) ;
   int (*pre_connect)(struct sock *, struct sockaddr *, int ) ;
   int (*connect)(struct sock *, struct sockaddr *, int ) ;
   int (*disconnect)(struct sock *, int ) ;
   struct sock *(*accept)(struct sock *, int , int *, bool ) ;
   int (*ioctl)(struct sock *, int , unsigned long ) ;
   int (*init)(struct sock *) ;
   void (*destroy)(struct sock *) ;
   void (*shutdown)(struct sock *, int ) ;
   int (*setsockopt)(struct sock *, int , int , char *, unsigned int ) ;
   int (*getsockopt)(struct sock *, int , int , char *, int *) ;
   void (*keepalive)(struct sock *, int ) ;
   int (*compat_setsockopt)(struct sock *, int , int , char *, unsigned int ) ;
   int (*compat_getsockopt)(struct sock *, int , int , char *, int *) ;
   int (*compat_ioctl)(struct sock *, unsigned int , unsigned long ) ;
   int (*sendmsg)(struct sock *, struct msghdr *, size_t ) ;
   int (*recvmsg)(struct sock *, struct msghdr *, size_t , int , int , int *) ;
   int (*sendpage)(struct sock *, struct page *, int , size_t , int ) ;
   int (*bind)(struct sock *, struct sockaddr *, int ) ;
   int (*backlog_rcv)(struct sock *, struct sk_buff *) ;
   void (*release_cb)(struct sock *) ;
   int (*hash)(struct sock *) ;
   void (*unhash)(struct sock *) ;
   void (*rehash)(struct sock *) ;
   int (*get_port)(struct sock *, unsigned short ) ;
   unsigned int inuse_idx ;
   bool (*stream_memory_free)(struct sock *, int ) ;
   bool (*stream_memory_read)(struct sock *) ;
   void (*enter_memory_pressure)(struct sock *) ;
   void (*leave_memory_pressure)(struct sock *) ;
   atomic_long_t *memory_allocated ;
   struct percpu_counter *sockets_allocated ;
   unsigned long *memory_pressure ;
   long *sysctl_mem ;
   int *sysctl_wmem ;
   int *sysctl_rmem ;
   u32 sysctl_wmem_offset ;
   u32 sysctl_rmem_offset ;
   int max_header ;
   bool no_autobind ;
   struct kmem_cache *slab ;
   unsigned int obj_size ;
   slab_flags_t slab_flags ;
   unsigned int useroffset ;
   unsigned int usersize ;
   struct percpu_counter *orphan_count ;
   struct request_sock_ops *rsk_prot ;
   struct timewait_sock_ops *twsk_prot ;
   union __anonunion_h_890 h ;
   struct module *owner ;
   char name[32U] ;
   struct list_head node ;
   int (*diag_destroy)(struct sock *, int ) ;
} __attribute__((__designated_init__));
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/request_sock.h"
struct request_sock_ops {
   int family ;
   unsigned int obj_size ;
   struct kmem_cache *slab ;
   char *slab_name ;
   int (*rtx_syn_ack)(struct sock *, struct request_sock *) ;
   void (*send_ack)(struct sock *, struct sk_buff *, struct request_sock *) ;
   void (*send_reset)(struct sock *, struct sk_buff *) ;
   void (*destructor)(struct request_sock *) ;
   void (*syn_ack_timeout)(struct request_sock *) ;
};
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/request_sock.h"
struct request_sock {
   struct sock_common __req_common ;
   struct request_sock *dl_next ;
   u16 mss ;
   u8 num_retrans ;
   u8 cookie_ts : 1 ;
   u8 num_timeout : 7 ;
   u32 ts_recent ;
   struct timer_list rsk_timer ;
   struct request_sock_ops *rsk_ops ;
   struct sock *sk ;
   u32 *saved_syn ;
   u32 secid ;
   u32 peer_secid ;
};
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/timewait_sock.h"
struct timewait_sock_ops {
   struct kmem_cache *twsk_slab ;
   char *twsk_slab_name ;
   unsigned int twsk_obj_size ;
   int (*twsk_unique)(struct sock *, struct sock *, void *) ;
   void (*twsk_destructor)(struct sock *) ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/tcp.h"
struct tcphdr {
   __be16 source ;
   __be16 dest ;
   __be32 seq ;
   __be32 ack_seq ;
   __u16 res1 : 4 ;
   __u16 doff : 4 ;
   __u16 fin : 1 ;
   __u16 syn : 1 ;
   __u16 rst : 1 ;
   __u16 psh : 1 ;
   __u16 ack : 1 ;
   __u16 urg : 1 ;
   __u16 ece : 1 ;
   __u16 cwr : 1 ;
   __be16 window ;
   __sum16 check ;
   __be16 urg_ptr ;
};
#line 99  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/if_inet6.h"
struct ip6_sf_list {
   struct ip6_sf_list *sf_next ;
   struct in6_addr sf_addr ;
   unsigned long sf_count[2U] ;
   unsigned char sf_gsresp ;
   unsigned char sf_oldin ;
   unsigned char sf_crcount ;
};
#line 114  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/if_inet6.h"
struct ifmcaddr6 {
   struct in6_addr mca_addr ;
   struct inet6_dev *idev ;
   struct ifmcaddr6 *next ;
   struct ip6_sf_list *mca_sources ;
   struct ip6_sf_list *mca_tomb ;
   unsigned int mca_sfmode ;
   unsigned char mca_crcount ;
   unsigned long mca_sfcount[2U] ;
   struct timer_list mca_timer ;
   unsigned int mca_flags ;
   int mca_users ;
   refcount_t mca_refcnt ;
   spinlock_t mca_lock ;
   unsigned long mca_cstamp ;
   unsigned long mca_tstamp ;
};
#line 140  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/if_inet6.h"
struct ifacaddr6 {
   struct in6_addr aca_addr ;
   struct fib6_info *aca_rt ;
   struct ifacaddr6 *aca_next ;
   struct hlist_node aca_addr_lst ;
   int aca_users ;
   refcount_t aca_refcnt ;
   unsigned long aca_cstamp ;
   unsigned long aca_tstamp ;
   struct callback_head rcu ;
};
#line 156  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/if_inet6.h"
struct ipv6_devstat {
   struct proc_dir_entry *proc_dir_entry ;
   struct ipstats_mib *ipv6 ;
   struct icmpv6_mib_device *icmpv6dev ;
   struct icmpv6msg_mib_device *icmpv6msgdev ;
};
#line 163  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/if_inet6.h"
struct inet6_dev {
   struct net_device *dev ;
   struct list_head addr_list ;
   struct ifmcaddr6 *mc_list ;
   struct ifmcaddr6 *mc_tomb ;
   spinlock_t mc_lock ;
   unsigned char mc_qrv ;
   unsigned char mc_gq_running ;
   unsigned char mc_ifc_count ;
   unsigned char mc_dad_count ;
   unsigned long mc_v1_seen ;
   unsigned long mc_qi ;
   unsigned long mc_qri ;
   unsigned long mc_maxdelay ;
   struct timer_list mc_gq_timer ;
   struct timer_list mc_ifc_timer ;
   struct timer_list mc_dad_timer ;
   struct ifacaddr6 *ac_list ;
   rwlock_t lock ;
   refcount_t refcnt ;
   __u32 if_flags ;
   int dead ;
   u32 desync_factor ;
   u8 rndid[8U] ;
   struct list_head tempaddr_list ;
   struct in6_addr token ;
   struct neigh_parms *nd_parms ;
   struct ipv6_devconf cnf ;
   struct ipv6_devstat stats ;
   struct timer_list rs_timer ;
   __s32 rs_interval ;
   __u8 rs_probes ;
   unsigned long tstamp ;
   struct callback_head rcu ;
};
#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/if_arp.h"
struct prefix_info;
#line 104  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/ndisc.h"
struct nd_opt_hdr {
   __u8 nd_opt_type ;
   __u8 nd_opt_len ;
} __attribute__((__packed__));
#line 110  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/ndisc.h"
struct ndisc_options {
   struct nd_opt_hdr *nd_opt_array[15U] ;
   struct nd_opt_hdr *nd_opts_ri ;
   struct nd_opt_hdr *nd_opts_ri_end ;
   struct nd_opt_hdr *nd_useropts ;
   struct nd_opt_hdr *nd_useropts_end ;
   struct nd_opt_hdr *nd_802154_opt_array[3U] ;
};
#line 201  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/ndisc.h"
struct ndisc_ops {
   int (*is_useropt)(u8 ) ;
   int (*parse_options)(struct net_device *, struct nd_opt_hdr *, struct ndisc_options *) ;
   void (*update)(struct net_device *, struct neighbour *, u32 , u8 , struct ndisc_options *) ;
   int (*opt_addr_space)(struct net_device *, u8 , struct neighbour *, u8 *, u8 **) ;
   void (*fill_addr_option)(struct net_device *, struct sk_buff *, u8 , u8 *) ;
   void (*prefix_rcv_add_addr)(struct net *, struct net_device *, struct prefix_info *, struct inet6_dev *, struct in6_addr *, int , u32 , bool , bool , __u32 , u32 , bool ) ;
};
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/inetpeer.h"
struct inet_peer_base {
   struct rb_root rb_root ;
   seqlock_t lock ;
   int total ;
};
#line 235  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/ip_fib.h"
struct fib_table {
   struct hlist_node tb_hlist ;
   u32 tb_id ;
   int tb_num_default ;
   struct callback_head rcu ;
   unsigned long *tb_data ;
   unsigned long __data[0U] ;
};
#line 121  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/ip.h"
union __anonunion_987 {
   void (*destructor)(struct sock *) ;
   struct sock *saved_sk ;
};
#line 121  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/ip.h"
struct ip_ra_chain {
   struct ip_ra_chain *next ;
   struct sock *sk ;
   union __anonunion_987 __anonCompField_ip_ra_chain_195 ;
   struct callback_head rcu ;
};
#line 131  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/swap.h"
struct reclaim_state {
   unsigned long reclaimed_slab ;
};
#line 203  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/swap.h"
struct swap_cluster_info {
   spinlock_t lock ;
   unsigned int data : 24 ;
   unsigned int flags : 8 ;
};
#line 222  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/swap.h"
struct percpu_cluster {
   struct swap_cluster_info index ;
   unsigned int next ;
};
#line 227  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/swap.h"
struct swap_cluster_list {
   struct swap_cluster_info head ;
   struct swap_cluster_info tail ;
};
#line 235  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/swap.h"
struct swap_info_struct {
   unsigned long flags ;
   short prio ;
   struct plist_node list ;
   signed char type ;
   unsigned int max ;
   unsigned char *swap_map ;
   struct swap_cluster_info *cluster_info ;
   struct swap_cluster_list free_clusters ;
   unsigned int lowest_bit ;
   unsigned int highest_bit ;
   unsigned int pages ;
   unsigned int inuse_pages ;
   unsigned int cluster_next ;
   unsigned int cluster_nr ;
   struct percpu_cluster *percpu_cluster ;
   struct rb_root swap_extent_root ;
   struct block_device *bdev ;
   struct file *swap_file ;
   unsigned int old_block_size ;
   unsigned long *frontswap_map ;
   atomic_t frontswap_pages ;
   spinlock_t lock ;
   spinlock_t cont_lock ;
   struct work_struct discard_work ;
   struct swap_cluster_list discard_clusters ;
   struct plist_node avail_lists[0U] ;
};
#line 439  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/property.h"
typedef u32 phandle;
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/of.h"
struct property {
   char *name ;
   int length ;
   void *value ;
   struct property *next ;
   unsigned long _flags ;
   struct bin_attribute attr ;
};
#line 51  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/of.h"
struct device_node {
   char *name ;
   phandle phandle ;
   char *full_name ;
   struct fwnode_handle fwnode ;
   struct property *properties ;
   struct property *deadprops ;
   struct device_node *parent ;
   struct device_node *child ;
   struct device_node *sibling ;
   struct kobject kobj ;
   unsigned long _flags ;
   void *data ;
};
#line 63  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/irqdomain.h"
struct irq_fwspec {
   struct fwnode_handle *fwnode ;
   int param_count ;
   u32 param[16U] ;
};
#line 68 
enum irq_domain_bus_token {
    DOMAIN_BUS_ANY = 0,
    DOMAIN_BUS_WIRED = 1,
    DOMAIN_BUS_GENERIC_MSI = 2,
    DOMAIN_BUS_PCI_MSI = 3,
    DOMAIN_BUS_PLATFORM_MSI = 4,
    DOMAIN_BUS_NEXUS = 5,
    DOMAIN_BUS_IPI = 6,
    DOMAIN_BUS_FSL_MC_MSI = 7,
    DOMAIN_BUS_TI_SCI_INTA_MSI = 8,
    DOMAIN_BUS_WAKEUP = 9
};
#line 104  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/irqdomain.h"
struct irq_domain_ops {
   int (*match)(struct irq_domain *, struct device_node *, enum irq_domain_bus_token ) ;
   int (*select)(struct irq_domain *, struct irq_fwspec *, enum irq_domain_bus_token ) ;
   int (*map)(struct irq_domain *, unsigned int , irq_hw_number_t ) ;
   void (*unmap)(struct irq_domain *, unsigned int ) ;
   int (*xlate)(struct irq_domain *, struct device_node *, u32 *, unsigned int , unsigned long *, unsigned int *) ;
   int (*alloc)(struct irq_domain *, unsigned int , unsigned int , void *) ;
   void (*free)(struct irq_domain *, unsigned int , unsigned int ) ;
   int (*activate)(struct irq_domain *, struct irq_data *, bool ) ;
   void (*deactivate)(struct irq_domain *, struct irq_data *) ;
   int (*translate)(struct irq_domain *, struct irq_fwspec *, unsigned long *, unsigned int *) ;
   void (*debug_show)(struct seq_file *, struct irq_domain *, struct irq_data *, int ) ;
};
#line 132 
struct irq_domain_chip_generic;
#line 161  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/irqdomain.h"
struct irq_domain {
   struct list_head link ;
   char *name ;
   struct irq_domain_ops *ops ;
   void *host_data ;
   unsigned int flags ;
   unsigned int mapcount ;
   struct fwnode_handle *fwnode ;
   enum irq_domain_bus_token bus_token ;
   struct irq_domain_chip_generic *gc ;
   struct irq_domain *parent ;
   struct dentry *debugfs_file ;
   irq_hw_number_t hwirq_max ;
   unsigned int revmap_direct_max_irq ;
   unsigned int revmap_size ;
   struct xarray revmap_tree ;
   struct mutex revmap_tree_mutex ;
   unsigned int linear_revmap[] ;
};
#line 126  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/actypes.h"
typedef u64 acpi_size;
#line 128  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/actypes.h"
typedef u64 acpi_io_address;
#line 130  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/actypes.h"
typedef u32 acpi_status;
#line 423  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/actypes.h"
typedef char *acpi_string;
#line 424  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/actypes.h"
typedef void *acpi_handle;
#line 473  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/actypes.h"
typedef u32 acpi_object_type;
#line 897  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/actypes.h"
struct __anonstruct_integer_998 {
   acpi_object_type type ;
   u64 value ;
};
#line 897  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/actypes.h"
struct __anonstruct_string_999 {
   acpi_object_type type ;
   u32 length ;
   char *pointer ;
};
#line 897  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/actypes.h"
struct __anonstruct_buffer_1000 {
   acpi_object_type type ;
   u32 length ;
   u8 *pointer ;
};
#line 897  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/actypes.h"
struct __anonstruct_package_1001 {
   acpi_object_type type ;
   u32 count ;
   union acpi_object *elements ;
};
#line 897  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/actypes.h"
struct __anonstruct_reference_1002 {
   acpi_object_type type ;
   acpi_object_type actual_type ;
   acpi_handle handle ;
};
#line 897  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/actypes.h"
struct __anonstruct_processor_1003 {
   acpi_object_type type ;
   u32 proc_id ;
   acpi_io_address pblk_address ;
   u32 pblk_length ;
};
#line 897  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/actypes.h"
struct __anonstruct_power_resource_1004 {
   acpi_object_type type ;
   u32 system_level ;
   u32 resource_order ;
};
#line 897  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/actypes.h"
union acpi_object {
   acpi_object_type type ;
   struct __anonstruct_integer_998 integer ;
   struct __anonstruct_string_999 string ;
   struct __anonstruct_buffer_1000 buffer ;
   struct __anonstruct_package_1001 package ;
   struct __anonstruct_reference_1002 reference ;
   struct __anonstruct_processor_1003 processor ;
   struct __anonstruct_power_resource_1004 power_resource ;
};
#line 945  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/actypes.h"
struct acpi_object_list {
   u32 count ;
   union acpi_object *pointer ;
};
#line 967  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/actypes.h"
struct acpi_buffer {
   acpi_size length ;
   void *pointer ;
};
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/firmware.h"
struct firmware {
   size_t size ;
   u8 *data ;
   struct page **pages ;
   void *priv ;
};
#line 704  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
struct tally_counter {
   __le64 tx_packets ;
   __le64 rx_packets ;
   __le64 tx_errors ;
   __le32 rx_errors ;
   __le16 rx_missed ;
   __le16 align_errors ;
   __le32 tx_one_collision ;
   __le32 tx_multi_collision ;
   __le64 rx_unicast ;
   __le64 rx_broadcast ;
   __le32 rx_multicast ;
   __le16 tx_aborted ;
   __le16 tx_underrun ;
};
#line 720  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
struct rx_desc {
   __le32 opts1 ;
   __le32 opts2 ;
   __le32 opts3 ;
   __le32 opts4 ;
   __le32 opts5 ;
   __le32 opts6 ;
};
#line 741  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
struct tx_desc {
   __le32 opts1 ;
   __le32 opts2 ;
};
#line 753 
struct r8152;
#line 765  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
struct rx_agg {
   struct list_head list ;
   struct list_head info_list ;
   struct urb *urb ;
   struct r8152 *context ;
   struct page *page ;
   void *buffer ;
};
#line 773  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
struct tx_agg {
   struct list_head list ;
   struct urb *urb ;
   struct r8152 *context ;
   void *buffer ;
   void *head ;
   u32 skb_num ;
   u32 skb_len ;
};
#line 803  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
struct rtl_ops {
   void (*init)(struct r8152 *) ;
   int (*enable)(struct r8152 *) ;
   void (*disable)(struct r8152 *) ;
   void (*up)(struct r8152 *) ;
   void (*down)(struct r8152 *) ;
   void (*unload)(struct r8152 *) ;
   int (*eee_get)(struct r8152 *, struct ethtool_eee *) ;
   int (*eee_set)(struct r8152 *, struct ethtool_eee *) ;
   bool (*in_nway)(struct r8152 *) ;
   void (*hw_phy_cfg)(struct r8152 *) ;
   void (*autosuspend_en)(struct r8152 *, bool ) ;
};
#line 817  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
struct ups_info {
   u32 _10m_ckdiv : 1 ;
   u32 _250m_ckdiv : 1 ;
   u32 aldps : 1 ;
   u32 lite_mode : 2 ;
   u32 speed_duplex : 4 ;
   u32 eee : 1 ;
   u32 eee_lite : 1 ;
   u32 eee_ckdiv : 1 ;
   u32 eee_plloff_100 : 1 ;
   u32 eee_plloff_giga : 1 ;
   u32 eee_cmod_lv : 1 ;
   u32 green : 1 ;
   u32 flow_control : 1 ;
   u32 ctap_short_off : 1 ;
};
#line 836  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
struct rtl_fw {
   char *fw_name ;
   struct firmware *fw ;
   char version[32U] ;
   int (*pre_fw)(struct r8152 *) ;
   int (*post_fw)(struct r8152 *) ;
   bool retry ;
};
#line 783  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
struct r8152 {
   unsigned long flags ;
   struct usb_device *udev ;
   struct napi_struct napi ;
   struct usb_interface *intf ;
   struct net_device *netdev ;
   struct urb *intr_urb ;
   struct tx_agg tx_info[4U] ;
   struct list_head rx_info ;
   struct list_head rx_used ;
   struct list_head rx_done ;
   struct list_head tx_free ;
   struct sk_buff_head tx_queue ;
   struct sk_buff_head rx_queue ;
   spinlock_t rx_lock ;
   spinlock_t tx_lock ;
   struct delayed_work schedule ;
   struct delayed_work hw_phy_work ;
   struct mii_if_info mii ;
   struct mutex control ;
   struct notifier_block pm_notifier ;
   struct tasklet_struct tx_tl ;
   struct rtl_ops rtl_ops ;
   struct ups_info ups_info ;
   struct rtl_fw rtl_fw ;
   atomic_t rx_count ;
   bool eee_en ;
   int intr_interval ;
   u32 saved_wolopts ;
   u32 msg_enable ;
   u32 tx_qlen ;
   u32 coalesce ;
   u32 advertising ;
   u32 rx_buf_sz ;
   u32 rx_copybreak ;
   u32 rx_pending ;
   u16 ocp_base ;
   u16 speed ;
   u16 eee_adv ;
   u8 *intr_buff ;
   u8 version ;
   u8 duplex ;
   u8 autoneg ;
};
#line 875  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
struct fw_block {
   __le32 type ;
   __le32 length ;
} __attribute__((__packed__));
#line 888  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
struct fw_header {
   u8 checksum[32U] ;
   char version[32U] ;
   struct fw_block blocks[0U] ;
} __attribute__((__packed__));
#line 916  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
struct fw_mac {
   struct fw_block blk_hdr ;
   __le16 fw_offset ;
   __le16 fw_reg ;
   __le16 bp_ba_addr ;
   __le16 bp_ba_value ;
   __le16 bp_en_addr ;
   __le16 bp_en_value ;
   __le16 bp_start ;
   __le16 bp_num ;
   __le16 bp[16U] ;
   __le32 reserved ;
   __le16 fw_ver_reg ;
   u8 fw_ver_data ;
   char info[0U] ;
} __attribute__((__packed__));
#line 939  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
struct fw_phy_patch_key {
   struct fw_block blk_hdr ;
   __le16 key_reg ;
   __le16 key_data ;
   __le32 reserved ;
} __attribute__((__packed__));
#line 967  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
struct fw_phy_nc {
   struct fw_block blk_hdr ;
   __le16 fw_offset ;
   __le16 fw_reg ;
   __le16 ba_reg ;
   __le16 ba_data ;
   __le16 patch_en_addr ;
   __le16 patch_en_value ;
   __le16 mode_reg ;
   __le16 mode_pre ;
   __le16 mode_post ;
   __le16 reserved ;
   __le16 bp_start ;
   __le16 bp_num ;
   __le16 bp[4U] ;
   char info[0U] ;
} __attribute__((__packed__));
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 197 
enum hrtimer_restart;
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
struct device_private {
   void *driver_data ;
};
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 244  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/idr.h"
struct ida {
   struct xarray xa ;
};
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rtmutex.h"
struct rt_mutex {
   raw_spinlock_t wait_lock ;
   struct rb_root_cached waiters ;
   struct task_struct *owner ;
   int save_state ;
   char *name ;
   char *file ;
   int line ;
   void *magic ;
   struct lockdep_map dep_map ;
};
#line 69  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/i2c.h"
struct i2c_msg {
   __u16 addr ;
   __u16 flags ;
   __u16 len ;
   __u8 *buf ;
};
#line 135  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/i2c.h"
union i2c_smbus_data {
   __u8 byte ;
   __u16 word ;
   __u8 block[34U] ;
};
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/i2c.h"
struct i2c_algorithm;
#line 28 
struct i2c_adapter;
#line 29 
struct i2c_client;
#line 33 
enum i2c_slave_event;
#line 33 
enum i2c_slave_event;
#line 314  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/i2c.h"
struct i2c_client {
   unsigned short flags ;
   unsigned short addr ;
   char name[20U] ;
   struct i2c_adapter *adapter ;
   struct device dev ;
   int init_irq ;
   int irq ;
   struct list_head detected ;
   int (*slave_cb)(struct i2c_client *, enum i2c_slave_event , u8 *) ;
};
#line 360 
enum i2c_slave_event {
    I2C_SLAVE_READ_REQUESTED = 0,
    I2C_SLAVE_WRITE_REQUESTED = 1,
    I2C_SLAVE_READ_PROCESSED = 2,
    I2C_SLAVE_WRITE_RECEIVED = 3,
    I2C_SLAVE_STOP = 4
};
#line 527  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/i2c.h"
struct i2c_algorithm {
   int (*master_xfer)(struct i2c_adapter *, struct i2c_msg *, int ) ;
   int (*master_xfer_atomic)(struct i2c_adapter *, struct i2c_msg *, int ) ;
   int (*smbus_xfer)(struct i2c_adapter *, u16 , unsigned short , char , u8 , int , union i2c_smbus_data *) ;
   int (*smbus_xfer_atomic)(struct i2c_adapter *, u16 , unsigned short , char , u8 , int , union i2c_smbus_data *) ;
   u32 (*functionality)(struct i2c_adapter *) ;
   int (*reg_slave)(struct i2c_client *) ;
   int (*unreg_slave)(struct i2c_client *) ;
};
#line 565  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/i2c.h"
struct i2c_lock_operations {
   void (*lock_bus)(struct i2c_adapter *, unsigned int ) ;
   int (*trylock_bus)(struct i2c_adapter *, unsigned int ) ;
   void (*unlock_bus)(struct i2c_adapter *, unsigned int ) ;
};
#line 618 
struct gpio_desc;
#line 618  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/i2c.h"
struct i2c_bus_recovery_info {
   int (*recover_bus)(struct i2c_adapter *) ;
   int (*get_scl)(struct i2c_adapter *) ;
   void (*set_scl)(struct i2c_adapter *, int ) ;
   int (*get_sda)(struct i2c_adapter *) ;
   void (*set_sda)(struct i2c_adapter *, int ) ;
   int (*get_bus_free)(struct i2c_adapter *) ;
   void (*prepare_recovery)(struct i2c_adapter *) ;
   void (*unprepare_recovery)(struct i2c_adapter *) ;
   struct gpio_desc *scl_gpiod ;
   struct gpio_desc *sda_gpiod ;
};
#line 661  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/i2c.h"
struct i2c_adapter_quirks {
   u64 flags ;
   int max_num_msgs ;
   u16 max_write_len ;
   u16 max_read_len ;
   u16 max_comb_1st_msg_len ;
   u16 max_comb_2nd_msg_len ;
};
#line 692  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/i2c.h"
struct i2c_adapter {
   struct module *owner ;
   unsigned int class ;
   struct i2c_algorithm *algo ;
   void *algo_data ;
   struct i2c_lock_operations *lock_ops ;
   struct rt_mutex bus_lock ;
   struct rt_mutex mux_lock ;
   int timeout ;
   int retries ;
   struct device dev ;
   unsigned long locked_flags ;
   int nr ;
   char name[48U] ;
   struct completion dev_released ;
   struct mutex userspace_clients_lock ;
   struct list_head userspace_clients ;
   struct i2c_bus_recovery_info *bus_recovery_info ;
   struct i2c_adapter_quirks *quirks ;
   struct irq_domain *host_notify_domain ;
};
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cdev.h"
struct cdev {
   struct kobject kobj ;
   struct module *owner ;
   struct file_operations *ops ;
   struct list_head list ;
   dev_t dev ;
   unsigned int count ;
} __attribute__((__designated_init__));
#line 87  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/v4l2-common.h"
struct v4l2_edid {
   __u32 pad ;
   __u32 start_block ;
   __u32 blocks ;
   __u32 reserved[5U] ;
   __u8 *edid ;
};
#line 754 
enum v4l2_priority {
    V4L2_PRIORITY_UNSET = 0,
    V4L2_PRIORITY_BACKGROUND = 1,
    V4L2_PRIORITY_INTERACTIVE = 2,
    V4L2_PRIORITY_RECORD = 3,
    V4L2_PRIORITY_DEFAULT = 2
};
#line 413  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_rect {
   __s32 left ;
   __s32 top ;
   __u32 width ;
   __u32 height ;
};
#line 420  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_fract {
   __u32 numerator ;
   __u32 denominator ;
};
#line 1212  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
typedef __u64 v4l2_std_id;
#line 1394  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_bt_timings {
   __u32 width ;
   __u32 height ;
   __u32 interlaced ;
   __u32 polarities ;
   __u64 pixelclock ;
   __u32 hfrontporch ;
   __u32 hsync ;
   __u32 hbackporch ;
   __u32 vfrontporch ;
   __u32 vsync ;
   __u32 vbackporch ;
   __u32 il_vfrontporch ;
   __u32 il_vsync ;
   __u32 il_vbackporch ;
   __u32 standards ;
   __u32 flags ;
   struct v4l2_fract picture_aspect ;
   __u8 cea861_vic ;
   __u8 hdmi_vic ;
   __u8 reserved[46U] ;
} __attribute__((__packed__));
#line 1517  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
union __anonunion_2787 {
   struct v4l2_bt_timings bt ;
   __u32 reserved[32U] ;
};
#line 1517  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_dv_timings {
   __u32 type ;
   union __anonunion_2787 __anonCompField_v4l2_dv_timings_77 ;
} __attribute__((__packed__));
#line 1536  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_enum_dv_timings {
   __u32 index ;
   __u32 pad ;
   __u32 reserved[2U] ;
   struct v4l2_dv_timings timings ;
};
#line 1554  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_bt_timings_cap {
   __u32 min_width ;
   __u32 max_width ;
   __u32 min_height ;
   __u32 max_height ;
   __u64 min_pixelclock ;
   __u64 max_pixelclock ;
   __u32 standards ;
   __u32 capabilities ;
   __u32 reserved[16U] ;
} __attribute__((__packed__));
#line 1581  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
union __anonunion_2788 {
   struct v4l2_bt_timings_cap bt ;
   __u32 raw_data[32U] ;
};
#line 1581  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_dv_timings_cap {
   __u32 type ;
   __u32 pad ;
   __u32 reserved[2U] ;
   union __anonunion_2788 __anonCompField_v4l2_dv_timings_cap_78 ;
};
#line 1803  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_tuner {
   __u32 index ;
   __u8 name[32U] ;
   __u32 type ;
   __u32 capability ;
   __u32 rangelow ;
   __u32 rangehigh ;
   __u32 rxsubchans ;
   __u32 audmode ;
   __s32 signal ;
   __s32 afc ;
   __u32 reserved[4U] ;
};
#line 1817  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_modulator {
   __u32 index ;
   __u8 name[32U] ;
   __u32 capability ;
   __u32 rangelow ;
   __u32 rangehigh ;
   __u32 txsubchans ;
   __u32 type ;
   __u32 reserved[3U] ;
};
#line 1860  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_frequency {
   __u32 tuner ;
   __u32 type ;
   __u32 frequency ;
   __u32 reserved[8U] ;
};
#line 1871  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_frequency_band {
   __u32 tuner ;
   __u32 type ;
   __u32 index ;
   __u32 capability ;
   __u32 rangelow ;
   __u32 rangehigh ;
   __u32 modulation ;
   __u32 reserved[9U] ;
};
#line 2043  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_vbi_format {
   __u32 sampling_rate ;
   __u32 offset ;
   __u32 samples_per_line ;
   __u32 sample_format ;
   __s32 start[2U] ;
   __u32 count[2U] ;
   __u32 flags ;
   __u32 reserved[2U] ;
};
#line 2071  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_sliced_vbi_format {
   __u16 service_set ;
   __u16 service_lines[2U][24U] ;
   __u32 io_size ;
   __u32 reserved[2U] ;
};
#line 2095  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_sliced_vbi_cap {
   __u16 service_set ;
   __u16 service_lines[2U][24U] ;
   __u32 type ;
   __u32 reserved[3U] ;
};
#line 2106  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_sliced_vbi_data {
   __u32 id ;
   __u32 field ;
   __u32 line ;
   __u32 reserved ;
   __u8 data[48U] ;
};
#line 2350  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_event_subscription {
   __u32 type ;
   __u32 id ;
   __u32 flags ;
   __u32 reserved[5U] ;
};
#line 2375  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
union __anonunion_2804 {
   __u32 addr ;
   char name[32U] ;
};
#line 2375  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_dbg_match {
   __u32 type ;
   union __anonunion_2804 __anonCompField_v4l2_dbg_match_87 ;
} __attribute__((__packed__));
#line 2383  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_dbg_register {
   struct v4l2_dbg_match match ;
   __u32 size ;
   __u64 reg ;
   __u64 val ;
} __attribute__((__packed__));
#line 57  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_device;
#line 57  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_gobj {
   struct media_device *mdev ;
   u32 id ;
   struct list_head list ;
};
#line 72  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_entity_enum {
   unsigned long *bmap ;
   int idx_max ;
};
#line 88 
struct media_entity;
#line 88  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct __anonstruct_stack_2808 {
   struct media_entity *entity ;
   struct list_head *link ;
};
#line 88  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_graph {
   struct __anonstruct_stack_2808 stack[16U] ;
   struct media_entity_enum ent_enum ;
   int top ;
};
#line 104  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_pipeline {
   int streaming_count ;
   struct media_graph graph ;
};
#line 132 
struct media_pad;
#line 132 
struct media_interface;
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
union __anonunion_2809 {
   struct media_gobj *gobj0 ;
   struct media_pad *source ;
   struct media_interface *intf ;
};
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
union __anonunion_2810 {
   struct media_gobj *gobj1 ;
   struct media_pad *sink ;
   struct media_entity *entity ;
};
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_link {
   struct media_gobj graph_obj ;
   struct list_head list ;
   union __anonunion_2809 __anonCompField_media_link_90 ;
   union __anonunion_2810 __anonCompField_media_link_91 ;
   struct media_link *reverse ;
   unsigned long flags ;
   bool is_backlink ;
};
#line 149 
enum media_pad_signal_type {
    PAD_SIGNAL_DEFAULT = 0,
    PAD_SIGNAL_ANALOG = 1,
    PAD_SIGNAL_DV = 2,
    PAD_SIGNAL_AUDIO = 3
};
#line 189  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_pad {
   struct media_gobj graph_obj ;
   struct media_entity *entity ;
   u16 index ;
   enum media_pad_signal_type sig_type ;
   unsigned long flags ;
};
#line 214  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_entity_operations {
   int (*get_fwnode_pad)(struct fwnode_endpoint *) ;
   int (*link_setup)(struct media_entity *, struct media_pad *, struct media_pad *, u32 ) ;
   int (*link_validate)(struct media_link *) ;
};
#line 221 
enum media_entity_type {
    MEDIA_ENTITY_TYPE_BASE = 0,
    MEDIA_ENTITY_TYPE_VIDEO_DEVICE = 1,
    MEDIA_ENTITY_TYPE_V4L2_SUBDEV = 2
};
#line 289  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct __anonstruct_dev_2812 {
   u32 major ;
   u32 minor ;
};
#line 289  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
union __anonunion_info_2811 {
   struct __anonstruct_dev_2812 dev ;
};
#line 289  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_entity {
   struct media_gobj graph_obj ;
   char *name ;
   enum media_entity_type obj_type ;
   u32 function ;
   unsigned long flags ;
   u16 num_pads ;
   u16 num_links ;
   u16 num_backlinks ;
   int internal_idx ;
   struct media_pad *pads ;
   struct list_head links ;
   struct media_entity_operations *ops ;
   int stream_count ;
   int use_count ;
   struct media_pipeline *pipe ;
   union __anonunion_info_2811 info ;
};
#line 335  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_interface {
   struct media_gobj graph_obj ;
   struct list_head links ;
   u32 type ;
   u32 flags ;
};
#line 349  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_intf_devnode {
   struct media_interface intf ;
   u32 major ;
   u32 minor ;
};
#line 1087 
enum vfl_devnode_type {
    VFL_TYPE_GRABBER = 0,
    VFL_TYPE_VBI = 1,
    VFL_TYPE_RADIO = 2,
    VFL_TYPE_SUBDEV = 3,
    VFL_TYPE_SDR = 4,
    VFL_TYPE_TOUCH = 5,
    VFL_TYPE_MAX = 6
};
#line 1097 
enum vfl_devnode_direction {
    VFL_DIR_RX = 0,
    VFL_DIR_TX = 1,
    VFL_DIR_M2M = 2
};
#line 1104 
struct video_device;
#line 1105 
struct v4l2_device;
#line 1106 
struct v4l2_ctrl_handler;
#line 104  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-dev.h"
struct v4l2_prio_state {
   atomic_t prios[4U] ;
};
#line 193  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-dev.h"
struct v4l2_file_operations {
   struct module *owner ;
   ssize_t (*read)(struct file *, char *, size_t , loff_t *) ;
   ssize_t (*write)(struct file *, char *, size_t , loff_t *) ;
   __poll_t (*poll)(struct file *, struct poll_table_struct *) ;
   long (*unlocked_ioctl)(struct file *, unsigned int , unsigned long ) ;
   long (*compat_ioctl32)(struct file *, unsigned int , unsigned long ) ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   int (*mmap)(struct file *, struct vm_area_struct *) ;
   int (*open)(struct file *) ;
   int (*release)(struct file *) ;
};
#line 256 
struct vb2_queue;
#line 256 
struct v4l2_ioctl_ops;
#line 256  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-dev.h"
struct video_device {
   struct media_entity entity ;
   struct media_intf_devnode *intf_devnode ;
   struct media_pipeline pipe ;
   struct v4l2_file_operations *fops ;
   u32 device_caps ;
   struct device dev ;
   struct cdev *cdev ;
   struct v4l2_device *v4l2_dev ;
   struct device *dev_parent ;
   struct v4l2_ctrl_handler *ctrl_handler ;
   struct vb2_queue *queue ;
   struct v4l2_prio_state *prio ;
   char name[32U] ;
   enum vfl_devnode_type vfl_type ;
   enum vfl_devnode_direction vfl_dir ;
   int minor ;
   u16 num ;
   unsigned long flags ;
   int index ;
   spinlock_t fh_lock ;
   struct list_head fh_list ;
   int dev_debug ;
   v4l2_std_id tvnorms ;
   void (*release)(struct video_device *) ;
   struct v4l2_ioctl_ops *ioctl_ops ;
   unsigned long valid_ioctls[3U] ;
   struct mutex *lock ;
};
#line 95  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-common.h"
struct v4l2_subdev;
#line 96 
struct v4l2_subdev_ops;
#line 335  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-common.h"
struct v4l2_priv_tun_config {
   int tuner ;
   void *priv ;
};
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-devnode.h"
struct media_file_operations {
   struct module *owner ;
   ssize_t (*read)(struct file *, char *, size_t , loff_t *) ;
   ssize_t (*write)(struct file *, char *, size_t , loff_t *) ;
   __poll_t (*poll)(struct file *, struct poll_table_struct *) ;
   long (*ioctl)(struct file *, unsigned int , unsigned long ) ;
   long (*compat_ioctl)(struct file *, unsigned int , unsigned long ) ;
   int (*open)(struct file *) ;
   int (*release)(struct file *) ;
};
#line 75  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-devnode.h"
struct media_devnode {
   struct media_device *media_dev ;
   struct media_file_operations *fops ;
   struct device dev ;
   struct cdev cdev ;
   struct device *parent ;
   int minor ;
   unsigned long flags ;
   void (*release)(struct media_devnode *) ;
};
#line 65  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-device.h"
struct media_request;
#line 65  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-device.h"
struct media_device_ops {
   int (*link_notify)(struct media_link *, u32 , unsigned int ) ;
   struct media_request *(*req_alloc)(struct media_device *) ;
   void (*req_free)(struct media_request *) ;
   int (*req_validate)(struct media_request *) ;
   void (*req_queue)(struct media_request *) ;
};
#line 144  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-device.h"
struct media_device {
   struct device *dev ;
   struct media_devnode *devnode ;
   char model[32U] ;
   char driver_name[32U] ;
   char serial[40U] ;
   char bus_info[32U] ;
   u32 hw_revision ;
   u64 topology_version ;
   u32 id ;
   struct ida entity_internal_idx ;
   int entity_internal_idx_max ;
   struct list_head entities ;
   struct list_head interfaces ;
   struct list_head pads ;
   struct list_head links ;
   struct list_head entity_notify ;
   struct mutex graph_mutex ;
   struct media_graph pm_count_walk ;
   void *source_priv ;
   int (*enable_source)(struct media_entity *, struct media_pipeline *) ;
   void (*disable_source)(struct media_entity *) ;
   struct media_device_ops *ops ;
   struct mutex req_queue_mutex ;
   atomic_t request_id ;
};
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/v4l2-mediabus.h"
struct v4l2_mbus_framefmt {
   __u32 width ;
   __u32 height ;
   __u32 code ;
   __u32 field ;
   __u32 colorspace ;
   __u16 ycbcr_enc ;
   __u16 quantization ;
   __u16 xfer_func ;
   __u16 reserved[11U] ;
};
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/v4l2-subdev.h"
struct v4l2_subdev_format {
   __u32 which ;
   __u32 pad ;
   struct v4l2_mbus_framefmt format ;
   __u32 reserved[8U] ;
};
#line 75  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/v4l2-subdev.h"
struct v4l2_subdev_mbus_code_enum {
   __u32 pad ;
   __u32 index ;
   __u32 code ;
   __u32 which ;
   __u32 reserved[8U] ;
};
#line 90  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/v4l2-subdev.h"
struct v4l2_subdev_frame_size_enum {
   __u32 index ;
   __u32 pad ;
   __u32 code ;
   __u32 min_width ;
   __u32 max_width ;
   __u32 min_height ;
   __u32 max_height ;
   __u32 which ;
   __u32 reserved[8U] ;
};
#line 107  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/v4l2-subdev.h"
struct v4l2_subdev_frame_interval {
   __u32 pad ;
   struct v4l2_fract interval ;
   __u32 reserved[9U] ;
};
#line 123  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/v4l2-subdev.h"
struct v4l2_subdev_frame_interval_enum {
   __u32 index ;
   __u32 pad ;
   __u32 code ;
   __u32 width ;
   __u32 height ;
   struct v4l2_fract interval ;
   __u32 which ;
   __u32 reserved[8U] ;
};
#line 149  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/v4l2-subdev.h"
struct v4l2_subdev_selection {
   __u32 which ;
   __u32 pad ;
   __u32 target ;
   __u32 flags ;
   struct v4l2_rect r ;
   __u32 reserved[8U] ;
};
#line 157 
struct v4l2_async_notifier;
#line 158 
enum v4l2_async_match_type {
    V4L2_ASYNC_MATCH_CUSTOM = 0,
    V4L2_ASYNC_MATCH_DEVNAME = 1,
    V4L2_ASYNC_MATCH_I2C = 2,
    V4L2_ASYNC_MATCH_FWNODE = 3
};
#line 79  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-async.h"
struct __anonstruct_i2c_2826 {
   int adapter_id ;
   unsigned short address ;
};
#line 79  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-async.h"
struct __anonstruct_custom_2827 {
   bool (*match)(struct device *, struct v4l2_async_subdev *) ;
   void *priv ;
};
#line 79  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-async.h"
union __anonunion_match_2825 {
   struct fwnode_handle *fwnode ;
   char *device_name ;
   struct __anonstruct_i2c_2826 i2c ;
   struct __anonstruct_custom_2827 custom ;
};
#line 79  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-async.h"
struct v4l2_async_subdev {
   enum v4l2_async_match_type match_type ;
   union __anonunion_match_2825 match ;
   struct list_head list ;
   struct list_head asd_list ;
};
#line 107  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-async.h"
struct v4l2_async_notifier_operations {
   int (*bound)(struct v4l2_async_notifier *, struct v4l2_subdev *, struct v4l2_async_subdev *) ;
   int (*complete)(struct v4l2_async_notifier *) ;
   void (*unbind)(struct v4l2_async_notifier *, struct v4l2_subdev *, struct v4l2_async_subdev *) ;
};
#line 129  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-async.h"
struct v4l2_async_notifier {
   struct v4l2_async_notifier_operations *ops ;
   struct v4l2_device *v4l2_dev ;
   struct v4l2_subdev *sd ;
   struct v4l2_async_notifier *parent ;
   struct list_head asd_list ;
   struct list_head waiting ;
   struct list_head done ;
   struct list_head list ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-fh.h"
struct v4l2_m2m_ctx;
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-fh.h"
struct v4l2_fh {
   struct list_head list ;
   struct video_device *vdev ;
   struct v4l2_ctrl_handler *ctrl_handler ;
   enum v4l2_priority prio ;
   wait_queue_head_t wait ;
   struct mutex subscribe_lock ;
   struct list_head subscribed ;
   struct list_head available ;
   unsigned int navailable ;
   u32 sequence ;
   struct v4l2_m2m_ctx *m2m_ctx ;
};
#line 162 
enum v4l2_mbus_type {
    V4L2_MBUS_UNKNOWN = 0,
    V4L2_MBUS_PARALLEL = 1,
    V4L2_MBUS_BT656 = 2,
    V4L2_MBUS_CSI1 = 3,
    V4L2_MBUS_CCP2 = 4,
    V4L2_MBUS_CSI2_DPHY = 5,
    V4L2_MBUS_CSI2_CPHY = 6
};
#line 97  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-mediabus.h"
struct v4l2_mbus_config {
   enum v4l2_mbus_type type ;
   unsigned int flags ;
};
#line 184 
struct v4l2_subdev_fh;
#line 185 
struct tuner_setup;
#line 186 
struct v4l2_mbus_frame_desc;
#line 52  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_decode_vbi_line {
   u32 is_second_field ;
   u8 *p ;
   u32 line ;
   u32 type ;
};
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_io_pin_config {
   u32 flags ;
   u8 pin ;
   u8 function ;
   u8 value ;
   u8 strength ;
};
#line 188  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_core_ops {
   int (*log_status)(struct v4l2_subdev *) ;
   int (*s_io_pin_config)(struct v4l2_subdev *, size_t , struct v4l2_subdev_io_pin_config *) ;
   int (*init)(struct v4l2_subdev *, u32 ) ;
   int (*load_fw)(struct v4l2_subdev *) ;
   int (*reset)(struct v4l2_subdev *, u32 ) ;
   int (*s_gpio)(struct v4l2_subdev *, u32 ) ;
   long (*ioctl)(struct v4l2_subdev *, unsigned int , void *) ;
   long (*compat_ioctl32)(struct v4l2_subdev *, unsigned int , unsigned long ) ;
   int (*g_register)(struct v4l2_subdev *, struct v4l2_dbg_register *) ;
   int (*s_register)(struct v4l2_subdev *, struct v4l2_dbg_register *) ;
   int (*s_power)(struct v4l2_subdev *, int ) ;
   int (*interrupt_service_routine)(struct v4l2_subdev *, u32 , bool *) ;
   int (*subscribe_event)(struct v4l2_subdev *, struct v4l2_fh *, struct v4l2_event_subscription *) ;
   int (*unsubscribe_event)(struct v4l2_subdev *, struct v4l2_fh *, struct v4l2_event_subscription *) ;
};
#line 264  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_tuner_ops {
   int (*standby)(struct v4l2_subdev *) ;
   int (*s_radio)(struct v4l2_subdev *) ;
   int (*s_frequency)(struct v4l2_subdev *, struct v4l2_frequency *) ;
   int (*g_frequency)(struct v4l2_subdev *, struct v4l2_frequency *) ;
   int (*enum_freq_bands)(struct v4l2_subdev *, struct v4l2_frequency_band *) ;
   int (*g_tuner)(struct v4l2_subdev *, struct v4l2_tuner *) ;
   int (*s_tuner)(struct v4l2_subdev *, struct v4l2_tuner *) ;
   int (*g_modulator)(struct v4l2_subdev *, struct v4l2_modulator *) ;
   int (*s_modulator)(struct v4l2_subdev *, struct v4l2_modulator *) ;
   int (*s_type_addr)(struct v4l2_subdev *, struct tuner_setup *) ;
   int (*s_config)(struct v4l2_subdev *, struct v4l2_priv_tun_config *) ;
};
#line 304  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_audio_ops {
   int (*s_clock_freq)(struct v4l2_subdev *, u32 ) ;
   int (*s_i2s_clock_freq)(struct v4l2_subdev *, u32 ) ;
   int (*s_routing)(struct v4l2_subdev *, u32 , u32 , u32 ) ;
   int (*s_stream)(struct v4l2_subdev *, int ) ;
};
#line 310 
enum v4l2_mbus_frame_desc_flags {
    V4L2_MBUS_FRAME_DESC_FL_LEN_MAX = 1,
    V4L2_MBUS_FRAME_DESC_FL_BLOB = 2
};
#line 335  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_mbus_frame_desc_entry {
   enum v4l2_mbus_frame_desc_flags flags ;
   u32 pixelcode ;
   u32 length ;
};
#line 348  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_mbus_frame_desc {
   struct v4l2_mbus_frame_desc_entry entry[4U] ;
   unsigned short num_entries ;
};
#line 415  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_video_ops {
   int (*s_routing)(struct v4l2_subdev *, u32 , u32 , u32 ) ;
   int (*s_crystal_freq)(struct v4l2_subdev *, u32 , u32 ) ;
   int (*g_std)(struct v4l2_subdev *, v4l2_std_id *) ;
   int (*s_std)(struct v4l2_subdev *, v4l2_std_id ) ;
   int (*s_std_output)(struct v4l2_subdev *, v4l2_std_id ) ;
   int (*g_std_output)(struct v4l2_subdev *, v4l2_std_id *) ;
   int (*querystd)(struct v4l2_subdev *, v4l2_std_id *) ;
   int (*g_tvnorms)(struct v4l2_subdev *, v4l2_std_id *) ;
   int (*g_tvnorms_output)(struct v4l2_subdev *, v4l2_std_id *) ;
   int (*g_input_status)(struct v4l2_subdev *, u32 *) ;
   int (*s_stream)(struct v4l2_subdev *, int ) ;
   int (*g_pixelaspect)(struct v4l2_subdev *, struct v4l2_fract *) ;
   int (*g_frame_interval)(struct v4l2_subdev *, struct v4l2_subdev_frame_interval *) ;
   int (*s_frame_interval)(struct v4l2_subdev *, struct v4l2_subdev_frame_interval *) ;
   int (*s_dv_timings)(struct v4l2_subdev *, struct v4l2_dv_timings *) ;
   int (*g_dv_timings)(struct v4l2_subdev *, struct v4l2_dv_timings *) ;
   int (*query_dv_timings)(struct v4l2_subdev *, struct v4l2_dv_timings *) ;
   int (*g_mbus_config)(struct v4l2_subdev *, struct v4l2_mbus_config *) ;
   int (*s_mbus_config)(struct v4l2_subdev *, struct v4l2_mbus_config *) ;
   int (*s_rx_buffer)(struct v4l2_subdev *, void *, unsigned int *) ;
};
#line 481  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_vbi_ops {
   int (*decode_vbi_line)(struct v4l2_subdev *, struct v4l2_decode_vbi_line *) ;
   int (*s_vbi_data)(struct v4l2_subdev *, struct v4l2_sliced_vbi_data *) ;
   int (*g_vbi_data)(struct v4l2_subdev *, struct v4l2_sliced_vbi_data *) ;
   int (*g_sliced_vbi_cap)(struct v4l2_subdev *, struct v4l2_sliced_vbi_cap *) ;
   int (*s_raw_fmt)(struct v4l2_subdev *, struct v4l2_vbi_format *) ;
   int (*g_sliced_fmt)(struct v4l2_subdev *, struct v4l2_sliced_vbi_format *) ;
   int (*s_sliced_fmt)(struct v4l2_subdev *, struct v4l2_sliced_vbi_format *) ;
};
#line 501  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_sensor_ops {
   int (*g_skip_top_lines)(struct v4l2_subdev *, u32 *) ;
   int (*g_skip_frames)(struct v4l2_subdev *, u32 *) ;
};
#line 505 
enum v4l2_subdev_ir_mode {
    V4L2_SUBDEV_IR_MODE_PULSE_WIDTH = 0
};
#line 540  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_ir_parameters {
   unsigned int bytes_per_data_element ;
   enum v4l2_subdev_ir_mode mode ;
   bool enable ;
   bool interrupt_enable ;
   bool shutdown ;
   bool modulation ;
   u32 max_pulse_width ;
   unsigned int carrier_freq ;
   unsigned int duty_cycle ;
   bool invert_level ;
   bool invert_carrier_sense ;
   u32 noise_filter_min_width ;
   unsigned int carrier_range_lower ;
   unsigned int carrier_range_upper ;
   u32 resolution ;
};
#line 599  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_ir_ops {
   int (*rx_read)(struct v4l2_subdev *, u8 *, size_t , ssize_t *) ;
   int (*rx_g_parameters)(struct v4l2_subdev *, struct v4l2_subdev_ir_parameters *) ;
   int (*rx_s_parameters)(struct v4l2_subdev *, struct v4l2_subdev_ir_parameters *) ;
   int (*tx_write)(struct v4l2_subdev *, u8 *, size_t , ssize_t *) ;
   int (*tx_g_parameters)(struct v4l2_subdev *, struct v4l2_subdev_ir_parameters *) ;
   int (*tx_s_parameters)(struct v4l2_subdev *, struct v4l2_subdev_ir_parameters *) ;
};
#line 630  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_pad_config {
   struct v4l2_mbus_framefmt try_fmt ;
   struct v4l2_rect try_crop ;
   struct v4l2_rect try_compose ;
};
#line 674  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_pad_ops {
   int (*init_cfg)(struct v4l2_subdev *, struct v4l2_subdev_pad_config *) ;
   int (*enum_mbus_code)(struct v4l2_subdev *, struct v4l2_subdev_pad_config *, struct v4l2_subdev_mbus_code_enum *) ;
   int (*enum_frame_size)(struct v4l2_subdev *, struct v4l2_subdev_pad_config *, struct v4l2_subdev_frame_size_enum *) ;
   int (*enum_frame_interval)(struct v4l2_subdev *, struct v4l2_subdev_pad_config *, struct v4l2_subdev_frame_interval_enum *) ;
   int (*get_fmt)(struct v4l2_subdev *, struct v4l2_subdev_pad_config *, struct v4l2_subdev_format *) ;
   int (*set_fmt)(struct v4l2_subdev *, struct v4l2_subdev_pad_config *, struct v4l2_subdev_format *) ;
   int (*get_selection)(struct v4l2_subdev *, struct v4l2_subdev_pad_config *, struct v4l2_subdev_selection *) ;
   int (*set_selection)(struct v4l2_subdev *, struct v4l2_subdev_pad_config *, struct v4l2_subdev_selection *) ;
   int (*get_edid)(struct v4l2_subdev *, struct v4l2_edid *) ;
   int (*set_edid)(struct v4l2_subdev *, struct v4l2_edid *) ;
   int (*dv_timings_cap)(struct v4l2_subdev *, struct v4l2_dv_timings_cap *) ;
   int (*enum_dv_timings)(struct v4l2_subdev *, struct v4l2_enum_dv_timings *) ;
   int (*link_validate)(struct v4l2_subdev *, struct media_link *, struct v4l2_subdev_format *, struct v4l2_subdev_format *) ;
   int (*get_frame_desc)(struct v4l2_subdev *, unsigned int , struct v4l2_mbus_frame_desc *) ;
   int (*set_frame_desc)(struct v4l2_subdev *, unsigned int , struct v4l2_mbus_frame_desc *) ;
};
#line 727  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_ops {
   struct v4l2_subdev_core_ops *core ;
   struct v4l2_subdev_tuner_ops *tuner ;
   struct v4l2_subdev_audio_ops *audio ;
   struct v4l2_subdev_video_ops *video ;
   struct v4l2_subdev_vbi_ops *vbi ;
   struct v4l2_subdev_ir_ops *ir ;
   struct v4l2_subdev_sensor_ops *sensor ;
   struct v4l2_subdev_pad_ops *pad ;
};
#line 765  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_internal_ops {
   int (*registered)(struct v4l2_subdev *) ;
   void (*unregistered)(struct v4l2_subdev *) ;
   int (*open)(struct v4l2_subdev *, struct v4l2_subdev_fh *) ;
   int (*close)(struct v4l2_subdev *, struct v4l2_subdev_fh *) ;
   void (*release)(struct v4l2_subdev *) ;
};
#line 772 
struct regulator_bulk_data;
#line 797  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_platform_data {
   struct regulator_bulk_data *regulators ;
   int num_regulators ;
   void *host_priv ;
};
#line 848  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev {
   struct media_entity entity ;
   struct list_head list ;
   struct module *owner ;
   bool owner_v4l2_dev ;
   u32 flags ;
   struct v4l2_device *v4l2_dev ;
   struct v4l2_subdev_ops *ops ;
   struct v4l2_subdev_internal_ops *internal_ops ;
   struct v4l2_ctrl_handler *ctrl_handler ;
   char name[32U] ;
   u32 grp_id ;
   void *dev_priv ;
   void *host_priv ;
   struct video_device *devnode ;
   struct device *dev ;
   struct fwnode_handle *fwnode ;
   struct list_head async_list ;
   struct v4l2_async_subdev *asd ;
   struct v4l2_async_notifier *notifier ;
   struct v4l2_async_notifier *subdev_notifier ;
   struct v4l2_subdev_platform_data *pdata ;
};
#line 906  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_fh {
   struct v4l2_fh vfh ;
   struct module *owner ;
   struct v4l2_subdev_pad_config *pad ;
};
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-device.h"
struct v4l2_device {
   struct device *dev ;
   struct media_device *mdev ;
   struct list_head subdevs ;
   spinlock_t lock ;
   char name[36U] ;
   void (*notify)(struct v4l2_subdev *, unsigned int , void *) ;
   struct v4l2_ctrl_handler *ctrl_handler ;
   struct v4l2_prio_state prio ;
   struct kref ref ;
   void (*release)(struct v4l2_device *) ;
};
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ptp_clock_kernel.h"
struct ptp_system_timestamp {
   struct timespec64 pre_ts ;
   struct timespec64 post_ts ;
};
#line 277 
struct dma_chan;
#line 279 
struct spi_controller;
#line 280 
struct spi_transfer;
#line 281 
struct spi_controller_mem_ops;
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spi/spi.h"
struct spi_statistics {
   spinlock_t lock ;
   unsigned long messages ;
   unsigned long transfers ;
   unsigned long errors ;
   unsigned long timedout ;
   unsigned long spi_sync ;
   unsigned long spi_sync_immediate ;
   unsigned long spi_async ;
   unsigned long long bytes ;
   unsigned long long bytes_rx ;
   unsigned long long bytes_tx ;
   unsigned long transfer_bytes_histo[17U] ;
   unsigned long transfers_split_maxsize ;
};
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spi/spi.h"
struct spi_delay {
   u16 value ;
   u8 unit ;
};
#line 157  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spi/spi.h"
struct spi_device {
   struct device dev ;
   struct spi_controller *controller ;
   struct spi_controller *master ;
   u32 max_speed_hz ;
   u8 chip_select ;
   u8 bits_per_word ;
   bool rt ;
   u32 mode ;
   int irq ;
   void *controller_state ;
   void *controller_data ;
   char modalias[32U] ;
   char *driver_override ;
   int cs_gpio ;
   struct gpio_desc *cs_gpiod ;
   struct spi_delay word_delay ;
   struct spi_statistics statistics ;
};
#line 247 
struct spi_message;
#line 452  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spi/spi.h"
struct spi_controller {
   struct device dev ;
   struct list_head list ;
   s16 bus_num ;
   u16 num_chipselect ;
   u16 dma_alignment ;
   u32 mode_bits ;
   u32 bits_per_word_mask ;
   u32 min_speed_hz ;
   u32 max_speed_hz ;
   u16 flags ;
   bool slave ;
   size_t (*max_transfer_size)(struct spi_device *) ;
   size_t (*max_message_size)(struct spi_device *) ;
   struct mutex io_mutex ;
   spinlock_t bus_lock_spinlock ;
   struct mutex bus_lock_mutex ;
   bool bus_lock_flag ;
   int (*setup)(struct spi_device *) ;
   int (*set_cs_timing)(struct spi_device *, struct spi_delay *, struct spi_delay *, struct spi_delay *) ;
   int (*transfer)(struct spi_device *, struct spi_message *) ;
   void (*cleanup)(struct spi_device *) ;
   bool (*can_dma)(struct spi_controller *, struct spi_device *, struct spi_transfer *) ;
   bool queued ;
   struct kthread_worker kworker ;
   struct task_struct *kworker_task ;
   struct kthread_work pump_messages ;
   spinlock_t queue_lock ;
   struct list_head queue ;
   struct spi_message *cur_msg ;
   bool idling ;
   bool busy ;
   bool running ;
   bool rt ;
   bool auto_runtime_pm ;
   bool cur_msg_prepared ;
   bool cur_msg_mapped ;
   struct completion xfer_completion ;
   size_t max_dma_len ;
   int (*prepare_transfer_hardware)(struct spi_controller *) ;
   int (*transfer_one_message)(struct spi_controller *, struct spi_message *) ;
   int (*unprepare_transfer_hardware)(struct spi_controller *) ;
   int (*prepare_message)(struct spi_controller *, struct spi_message *) ;
   int (*unprepare_message)(struct spi_controller *, struct spi_message *) ;
   int (*slave_abort)(struct spi_controller *) ;
   void (*set_cs)(struct spi_device *, bool ) ;
   int (*transfer_one)(struct spi_controller *, struct spi_device *, struct spi_transfer *) ;
   void (*handle_err)(struct spi_controller *, struct spi_message *) ;
   struct spi_controller_mem_ops *mem_ops ;
   struct spi_delay cs_setup ;
   struct spi_delay cs_hold ;
   struct spi_delay cs_inactive ;
   int *cs_gpios ;
   struct gpio_desc **cs_gpiods ;
   bool use_gpio_descriptors ;
   struct spi_statistics statistics ;
   struct dma_chan *dma_tx ;
   struct dma_chan *dma_rx ;
   void *dummy_rx ;
   void *dummy_tx ;
   int (*fw_translate_cs)(struct spi_controller *, unsigned int ) ;
   bool ptp_sts_supported ;
   unsigned long irq_flags ;
};
#line 890  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spi/spi.h"
struct spi_transfer {
   void *tx_buf ;
   void *rx_buf ;
   unsigned int len ;
   dma_addr_t tx_dma ;
   dma_addr_t rx_dma ;
   struct sg_table tx_sg ;
   struct sg_table rx_sg ;
   unsigned int cs_change : 1 ;
   unsigned int tx_nbits : 3 ;
   unsigned int rx_nbits : 3 ;
   u8 bits_per_word ;
   u16 delay_usecs ;
   struct spi_delay delay ;
   struct spi_delay cs_change_delay ;
   struct spi_delay word_delay ;
   u32 speed_hz ;
   u32 effective_speed_hz ;
   unsigned int ptp_sts_word_pre ;
   unsigned int ptp_sts_word_post ;
   struct ptp_system_timestamp *ptp_sts ;
   bool timestamped_pre ;
   bool timestamped_post ;
   struct list_head transfer_list ;
};
#line 961  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spi/spi.h"
struct spi_message {
   struct list_head transfers ;
   struct spi_device *spi ;
   unsigned int is_dma_mapped : 1 ;
   void (*complete)(void *) ;
   void *context ;
   unsigned int frame_length ;
   unsigned int actual_length ;
   int status ;
   struct list_head queue ;
   void *state ;
   struct list_head resources ;
};
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 157  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fb_fix_screeninfo {
   char id[16U] ;
   unsigned long smem_start ;
   __u32 smem_len ;
   __u32 type ;
   __u32 type_aux ;
   __u32 visual ;
   __u16 xpanstep ;
   __u16 ypanstep ;
   __u16 ywrapstep ;
   __u32 line_length ;
   unsigned long mmio_start ;
   __u32 mmio_len ;
   __u32 accel ;
   __u16 capabilities ;
   __u16 reserved[2U] ;
};
#line 188  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fb_bitfield {
   __u32 offset ;
   __u32 length ;
   __u32 msb_right ;
};
#line 241  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fb_var_screeninfo {
   __u32 xres ;
   __u32 yres ;
   __u32 xres_virtual ;
   __u32 yres_virtual ;
   __u32 xoffset ;
   __u32 yoffset ;
   __u32 bits_per_pixel ;
   __u32 grayscale ;
   struct fb_bitfield red ;
   struct fb_bitfield green ;
   struct fb_bitfield blue ;
   struct fb_bitfield transp ;
   __u32 nonstd ;
   __u32 activate ;
   __u32 height ;
   __u32 width ;
   __u32 accel_flags ;
   __u32 pixclock ;
   __u32 left_margin ;
   __u32 right_margin ;
   __u32 upper_margin ;
   __u32 lower_margin ;
   __u32 hsync_len ;
   __u32 vsync_len ;
   __u32 sync ;
   __u32 vmode ;
   __u32 rotate ;
   __u32 colorspace ;
   __u32 reserved[4U] ;
};
#line 281  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fb_cmap {
   __u32 start ;
   __u32 len ;
   __u16 *red ;
   __u16 *green ;
   __u16 *blue ;
   __u16 *transp ;
};
#line 341  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fb_copyarea {
   __u32 dx ;
   __u32 dy ;
   __u32 width ;
   __u32 height ;
   __u32 sx ;
   __u32 sy ;
};
#line 350  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fb_fillrect {
   __u32 dx ;
   __u32 dy ;
   __u32 width ;
   __u32 height ;
   __u32 color ;
   __u32 rop ;
};
#line 359  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fb_image {
   __u32 dx ;
   __u32 dy ;
   __u32 width ;
   __u32 height ;
   __u32 fg_color ;
   __u32 bg_color ;
   __u8 depth ;
   char *data ;
   struct fb_cmap cmap ;
};
#line 383  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fbcurpos {
   __u16 x ;
   __u16 y ;
};
#line 387  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fb_cursor {
   __u16 set ;
   __u16 enable ;
   __u16 rop ;
   char *mask ;
   struct fbcurpos hot ;
   struct fb_image image ;
};
#line 400 
enum backlight_type {
    BACKLIGHT_RAW = 1,
    BACKLIGHT_PLATFORM = 2,
    BACKLIGHT_FIRMWARE = 3,
    BACKLIGHT_TYPE_MAX = 4
};
#line 412 
enum backlight_scale {
    BACKLIGHT_SCALE_UNKNOWN = 0,
    BACKLIGHT_SCALE_LINEAR = 1,
    BACKLIGHT_SCALE_NON_LINEAR = 2
};
#line 418 
struct backlight_device;
#line 419 
struct fb_info;
#line 58  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backlight.h"
struct backlight_ops {
   unsigned int options ;
   int (*update_status)(struct backlight_device *) ;
   int (*get_brightness)(struct backlight_device *) ;
   int (*check_fb)(struct backlight_device *, struct fb_info *) ;
};
#line 74  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backlight.h"
struct backlight_properties {
   int brightness ;
   int max_brightness ;
   int power ;
   int fb_blank ;
   enum backlight_type type ;
   unsigned int state ;
   enum backlight_scale scale ;
};
#line 97  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backlight.h"
struct backlight_device {
   struct backlight_properties props ;
   struct mutex update_lock ;
   struct mutex ops_lock ;
   struct backlight_ops *ops ;
   struct notifier_block fb_notif ;
   struct list_head entry ;
   struct device dev ;
   bool fb_bl_on[32U] ;
   int use_count ;
};
#line 52  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_chroma {
   __u32 redx ;
   __u32 greenx ;
   __u32 bluex ;
   __u32 whitex ;
   __u32 redy ;
   __u32 greeny ;
   __u32 bluey ;
   __u32 whitey ;
};
#line 63 
struct fb_videomode;
#line 63  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_monspecs {
   struct fb_chroma chroma ;
   struct fb_videomode *modedb ;
   __u8 manufacturer[4U] ;
   __u8 monitor[14U] ;
   __u8 serial_no[14U] ;
   __u8 ascii[14U] ;
   __u32 modedb_len ;
   __u32 model ;
   __u32 serial ;
   __u32 year ;
   __u32 week ;
   __u32 hfmin ;
   __u32 hfmax ;
   __u32 dclkmin ;
   __u32 dclkmax ;
   __u16 input ;
   __u16 dpms ;
   __u16 signal ;
   __u16 vfmin ;
   __u16 vfmax ;
   __u16 gamma ;
   __u16 gtf : 1 ;
   __u16 misc ;
   __u8 version ;
   __u8 revision ;
   __u8 max_x ;
   __u8 max_y ;
};
#line 144  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_blit_caps {
   u32 x ;
   u32 y ;
   u32 len ;
   u32 flags ;
};
#line 185  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_pixmap {
   u8 *addr ;
   u32 size ;
   u32 offset ;
   u32 buf_align ;
   u32 scan_align ;
   u32 access_align ;
   u32 flags ;
   u32 blit_x ;
   u32 blit_y ;
   void (*writeio)(struct fb_info *, void *, void *, unsigned int ) ;
   void (*readio)(struct fb_info *, void *, void *, unsigned int ) ;
};
#line 203  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_deferred_io {
   unsigned long delay ;
   struct mutex lock ;
   struct list_head pagelist ;
   void (*first_io)(struct fb_info *) ;
   void (*deferred_io)(struct fb_info *, struct list_head *) ;
};
#line 228  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_ops {
   struct module *owner ;
   int (*fb_open)(struct fb_info *, int ) ;
   int (*fb_release)(struct fb_info *, int ) ;
   ssize_t (*fb_read)(struct fb_info *, char *, size_t , loff_t *) ;
   ssize_t (*fb_write)(struct fb_info *, char *, size_t , loff_t *) ;
   int (*fb_check_var)(struct fb_var_screeninfo *, struct fb_info *) ;
   int (*fb_set_par)(struct fb_info *) ;
   int (*fb_setcolreg)(unsigned int , unsigned int , unsigned int , unsigned int , unsigned int , struct fb_info *) ;
   int (*fb_setcmap)(struct fb_cmap *, struct fb_info *) ;
   int (*fb_blank)(int , struct fb_info *) ;
   int (*fb_pan_display)(struct fb_var_screeninfo *, struct fb_info *) ;
   void (*fb_fillrect)(struct fb_info *, struct fb_fillrect *) ;
   void (*fb_copyarea)(struct fb_info *, struct fb_copyarea *) ;
   void (*fb_imageblit)(struct fb_info *, struct fb_image *) ;
   int (*fb_cursor)(struct fb_info *, struct fb_cursor *) ;
   int (*fb_sync)(struct fb_info *) ;
   int (*fb_ioctl)(struct fb_info *, unsigned int , unsigned long ) ;
   int (*fb_compat_ioctl)(struct fb_info *, unsigned int , unsigned long ) ;
   int (*fb_mmap)(struct fb_info *, struct vm_area_struct *) ;
   void (*fb_get_caps)(struct fb_info *, struct fb_blit_caps *, struct fb_var_screeninfo *) ;
   void (*fb_destroy)(struct fb_info *) ;
   int (*fb_debug_enter)(struct fb_info *) ;
   int (*fb_debug_leave)(struct fb_info *) ;
};
#line 306  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_tilemap {
   __u32 width ;
   __u32 height ;
   __u32 depth ;
   __u32 length ;
   __u8 *data ;
};
#line 315  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_tilerect {
   __u32 sx ;
   __u32 sy ;
   __u32 width ;
   __u32 height ;
   __u32 index ;
   __u32 fg ;
   __u32 bg ;
   __u32 rop ;
};
#line 326  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_tilearea {
   __u32 sx ;
   __u32 sy ;
   __u32 dx ;
   __u32 dy ;
   __u32 width ;
   __u32 height ;
};
#line 335  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_tileblit {
   __u32 sx ;
   __u32 sy ;
   __u32 width ;
   __u32 height ;
   __u32 fg ;
   __u32 bg ;
   __u32 length ;
   __u32 *indices ;
};
#line 346  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_tilecursor {
   __u32 sx ;
   __u32 sy ;
   __u32 mode ;
   __u32 shape ;
   __u32 fg ;
   __u32 bg ;
};
#line 355  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_tile_ops {
   void (*fb_settile)(struct fb_info *, struct fb_tilemap *) ;
   void (*fb_tilecopy)(struct fb_info *, struct fb_tilearea *) ;
   void (*fb_tilefill)(struct fb_info *, struct fb_tilerect *) ;
   void (*fb_tileblit)(struct fb_info *, struct fb_tileblit *) ;
   void (*fb_tilecursor)(struct fb_info *, struct fb_tilecursor *) ;
   int (*fb_get_tilemax)(struct fb_info *) ;
};
#line 499  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct aperture {
   resource_size_t base ;
   resource_size_t size ;
};
#line 497  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct apertures_struct {
   unsigned int count ;
   struct aperture ranges[0U] ;
};
#line 439  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
union __anonunion_3728 {
   char *screen_base ;
   char *screen_buffer ;
};
#line 439  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_info {
   atomic_t count ;
   int node ;
   int flags ;
   int fbcon_rotate_hint ;
   struct mutex lock ;
   struct mutex mm_lock ;
   struct fb_var_screeninfo var ;
   struct fb_fix_screeninfo fix ;
   struct fb_monspecs monspecs ;
   struct work_struct queue ;
   struct fb_pixmap pixmap ;
   struct fb_pixmap sprite ;
   struct fb_cmap cmap ;
   struct list_head modelist ;
   struct fb_videomode *mode ;
   struct backlight_device *bl_dev ;
   struct mutex bl_curve_mutex ;
   u8 bl_curve[128U] ;
   struct delayed_work deferred_work ;
   struct fb_deferred_io *fbdefio ;
   struct fb_ops *fbops ;
   struct device *device ;
   struct device *dev ;
   int class_flag ;
   struct fb_tile_ops *tileops ;
   union __anonunion_3728 __anonCompField_fb_info_73 ;
   unsigned long screen_size ;
   void *pseudo_palette ;
   u32 state ;
   void *fbcon_par ;
   void *par ;
   struct apertures_struct *apertures ;
   bool skip_vt_switch ;
};
#line 767  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_videomode {
   char *name ;
   u32 refresh ;
   u32 xres ;
   u32 yres ;
   u32 pixclock ;
   u32 left_margin ;
   u32 right_margin ;
   u32 upper_margin ;
   u32 lower_margin ;
   u32 hsync_len ;
   u32 vsync_len ;
   u32 sync ;
   u32 vmode ;
   u32 flag ;
};
#line 63  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
struct ldv_kmem_cache {
   char *name ;
   unsigned int size ;
};
#line 88  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
typedef unsigned long pthread_t;
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/thread.h"
union pthread_attr_t {
   char __size[56U] ;
   long __align ;
};
#line 30  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/thread.h"
typedef union pthread_attr_t pthread_attr_t;
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 17  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/emg/0/environment_model.c"
struct emg_struct_random_allocationless_scenario_rtl8152_get_coalesce_15 {
   struct net_device *arg0 ;
   int signal_pending ;
};
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/emg/0/environment_model.c"
struct emg_struct_usb_scenario_rtl8152_driver_16 {
   struct usb_driver *arg0 ;
   int signal_pending ;
};
/* compiler builtin: 
   unsigned short __builtin_bswap16(unsigned short);   */
/* compiler builtin: 
   unsigned int __builtin_bswap32(unsigned int);   */
/* compiler builtin: 
   void *__builtin_memcpy(void *, void const *, unsigned long);   */
/* compiler builtin: 
   void __builtin_unreachable(void);   */
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/common/inline_asm.h"
#line 22 
void ldv_inline_asm(void);
#line 7  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
#line 7 
void ldv_atomic_inc(atomic_t *v);
#line 8 
#line 8 
void ldv_atomic_dec(atomic_t *v);
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/export.h"
#line 16 
extern struct module __this_module;
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/compiler.h"
__inline static void __read_once_size(void *p, void *res, int size)
{
  #line 199 
  switch (size) {
    #line 199 
    case 1: 
            #line 199 
    ;
    #line 199 
    *((__u8 *)res) = *((__u8 *)p);
    #line 199 
    break;
    #line 199 
    case 2: 
            #line 199 
    ;
    #line 199 
    *((__u16 *)res) = *((__u16 *)p);
    #line 199 
    break;
    #line 199 
    case 4: 
            #line 199 
    ;
    #line 199 
    *((__u32 *)res) = *((__u32 *)p);
    #line 199 
    break;
    #line 199 
    case 8: 
            #line 199 
    ;
    #line 199 
    *((__u64 *)res) = *((__u64 *)p);
    #line 199 
    break;
    #line 199 
    default: 
             #line 199 
    ;
    #line 200 
    ldv_inline_asm();
    #line 199 
    __builtin_memcpy(res,(void const *)p,(unsigned long)size);
    #line 200 
    ldv_inline_asm();
  }
  #line 203 
  return;
}

#line 220  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/compiler.h"
__inline static void __write_once_size(void *p, void *res, int size)
{
  #line 222 
  switch (size) {
    #line 223 
    case 1: 
            #line 223 
    ;
    #line 223 
    *((__u8 *)p) = *((__u8 *)res);
    #line 223 
    break;
    #line 224 
    case 2: 
            #line 224 
    ;
    #line 224 
    *((__u16 *)p) = *((__u16 *)res);
    #line 224 
    break;
    #line 225 
    case 4: 
            #line 225 
    ;
    #line 225 
    *((__u32 *)p) = *((__u32 *)res);
    #line 225 
    break;
    #line 226 
    case 8: 
            #line 226 
    ;
    #line 226 
    *((__u64 *)p) = *((__u64 *)res);
    #line 226 
    break;
    #line 227 
    default: 
             #line 227 
    ;
    #line 228 
    ldv_inline_asm();
    #line 229 
    __builtin_memcpy(p,(void const *)res,(unsigned long)size);
    #line 230 
    ldv_inline_asm();
  }
  #line 232 
  return;
}

#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kasan-checks.h"
__inline static bool kasan_check_read(void *p, unsigned int size)
{
  #line 36 
  return (_Bool)1;
}

#line 160  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/bitops.h"
__inline static bool arch_test_and_clear_bit(long nr, unsigned long *addr)
{
  #line 162 
  bool c;
  #line 163 
  ldv_inline_asm();
  #line 162 
  return c;
}

#line 204  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/bitops.h"
__inline static bool constant_test_bit(long nr, unsigned long *addr)
{
  #line 207 
  return (_Bool)(((*(addr + (unsigned long)(nr >> 6)) >> (nr & 63L)) & 1UL) != 0UL);
}

#line 210  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/bitops.h"
__inline static bool variable_test_bit(long nr, unsigned long *addr)
{
  #line 212 
  bool oldbit;
  #line 213 
  ldv_inline_asm();
  #line 219 
  return oldbit;
}

#line 366  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/bitops.h"
__inline static int fls64(__u64 x)
{
  #line 368 
  int bitpos = -1;
  #line 369 
  ldv_inline_asm();
  #line 377 
  return bitpos + 1;
}

#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/bitops/instrumented-atomic.h"
#line 316  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
static void cif_set_bit(long nr, unsigned long *addr);
#line 44  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/bitops/instrumented-atomic.h"
#line 323  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
static void cif_clear_bit(long nr, unsigned long *addr);
#line 81  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/bitops/instrumented-atomic.h"
__inline static bool test_and_clear_bit(long nr, unsigned long *addr)
{
  #line 83 
  kasan_check_read((void *)(addr + (unsigned long)(nr / 64L)),8U);
  #line 84 
  return arch_test_and_clear_bit(nr,addr);
}

#line 108  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/bitops/instrumented-non-atomic.h"
__inline static bool test_bit(long nr, unsigned long *addr)
{
  #line 111 
  int tmp_1;
  #line 110 
  kasan_check_read((void *)(addr + (unsigned long)(nr / 64L)),8U);
  #line 111 
  if (0 != 0) {
    #line 111 
    tmp_1 = (int)constant_test_bit(nr,addr) != 0;
  }
  else {
    #line 111 
    tmp_1 = (int)variable_test_bit(nr,addr) != 0;
  }
  #line 111 
  return (_Bool)(tmp_1 != 0);
}

#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/log2.h"
__inline static int __ilog2_u64(u64 n)
{
  #line 32 
  return fls64(n) + -1;
}

#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/jump_label.h"
__inline static bool arch_static_branch(struct static_key *key, bool branch)
{
  #line 27 
  ldv_inline_asm();
  #line 28 
  ldv_inline_asm();
  #line 34 
  return (_Bool)0;
  #line 35 
  l_yes: 
         #line 35 
  ;
  #line 36 
  return (_Bool)1;
}

#line 198  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jump_label.h"
__inline static bool static_key_false(struct static_key *key)
{
  #line 200 
  return arch_static_branch(key,(_Bool)0);
}

#line 64  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dynamic_debug.h"
#line 64 
void __dynamic_dev_dbg(struct _ddebug *, struct device *, char * , ...);
#line 70 
#line 70 
void __dynamic_netdev_dbg(struct _ddebug *, struct net_device *, char * , ...);
#line 472  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernel.h"
#line 472 
int snprintf(char *, size_t, char * , ...);
#line 624 
#line 624 
int hex2bin(u8 *, char *, size_t);
#line 26  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
#line 330  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
static void INIT_LIST_HEAD(struct list_head *list);
#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
#line 33 
bool __list_add_valid(struct list_head *, struct list_head *, struct list_head *);
#line 36 
#line 36 
bool __list_del_entry_valid(struct list_head *);
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
__inline static void __list_add(struct list_head *new, struct list_head *prev, struct list_head *next)
{
  #line 60 
  if (! __list_add_valid(new,prev,next)) 
                                         #line 61 
                                         return;
  #line 63 
  next->prev = new;
  #line 64 
  new->next = next;
  #line 65 
  new->prev = prev;
  {
    #line 67 
    union __anonunion___u_13 __u = {.__val = new};
    #line 66 
    __write_once_size((void *)(& prev->next),(void *)(& __u.__c),8);
    #line 66 
    struct list_head *tmp_2 = __u.__val;
  }
  #line 68 
  return;
}

#line 77  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
__inline static void list_add(struct list_head *new, struct list_head *head)
{
  #line 79 
  __list_add(new,head,head->next);
  #line 80 
  return;
}

#line 91  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
__inline static void list_add_tail(struct list_head *new, struct list_head *head)
{
  #line 93 
  __list_add(new,head->prev,head);
  #line 94 
  return;
}

#line 95  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
__inline static void __list_del(struct list_head *prev, struct list_head *next)
{
  #line 97 
  next->prev = prev;
  {
    #line 107 
    union __anonunion___u_15 __u = {.__val = next};
    #line 106 
    __write_once_size((void *)(& prev->next),(void *)(& __u.__c),8);
    #line 106 
    struct list_head *tmp = __u.__val;
  }
  #line 108 
  return;
}

#line 129  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
__inline static void __list_del_entry(struct list_head *entry)
{
  #line 131 
  if (! __list_del_entry_valid(entry)) 
                                       #line 132 
                                       return;
  #line 134 
  __list_del(entry->prev,entry->next);
  #line 135 
  return;
}

#line 137  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
__inline static void list_del(struct list_head *entry)
{
  #line 139 
  __list_del_entry(entry);
  #line 140 
  entry->next = (struct list_head *)(-2401263026318606080);
  #line 141 
  entry->prev = (struct list_head *)(-2401263026318606046);
  #line 142 
  return;
}

#line 188  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
__inline static void list_del_init(struct list_head *entry)
{
  #line 190 
  __list_del_entry(entry);
  #line 191 
  INIT_LIST_HEAD(entry);
  #line 192 
  return;
}

#line 266  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
__inline static int list_empty(struct list_head *head)
{
  #line 269 
  union __anonunion___u_17 __u;
  #line 268 
  __read_once_size((void *)(& head->next),(void *)(& __u.__c),8);
  #line 268 
  ;
  #line 268 
  return (__u.__val) == head;
}

#line 401  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
__inline static void __list_splice(struct list_head *list, struct list_head *prev, struct list_head *next)
{
  #line 405 
  struct list_head *first = list->next;
  #line 406 
  struct list_head *last = list->prev;
  #line 408 
  first->prev = prev;
  #line 409 
  prev->next = first;
  #line 411 
  last->next = next;
  #line 412 
  next->prev = last;
  #line 413 
  return;
}

#line 420  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
__inline static void list_splice(struct list_head *list, struct list_head *head)
{
  #line 423 
  if (list_empty(list) == 0) 
                             #line 424 
                             __list_splice(list,head,head->next);
  #line 425 
  return;
}

#line 432  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
__inline static void list_splice_tail(struct list_head *list, struct list_head *head)
{
  #line 435 
  if (list_empty(list) == 0) 
                             #line 436 
                             __list_splice(list,head->prev,head);
  #line 437 
  return;
}

#line 446  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
__inline static void list_splice_init(struct list_head *list, struct list_head *head)
{
  #line 449 
  if (list_empty(list) == 0) {
    #line 450 
    __list_splice(list,head,head->next);
    #line 451 
    INIT_LIST_HEAD(list);
  }
  #line 453 
  return;
}

#line 88  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/percpu.h"
#line 88 
void __bad_percpu_size(void);
#line 309  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/percpu-defs.h"
#line 309 
void __bad_size_call_parameter(void);
#line 314  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/percpu-defs.h"
__inline static void __this_cpu_preempt_check(char *op)
{
  #line 316 
  return;
}

#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/page_64.h"
#line 14 
extern unsigned long page_offset_base;
#line 16 
#line 16 
extern unsigned long vmemmap_base;
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/getorder.h"
__inline static int get_order(unsigned long size)
{
  #line 31 
  if (0 != 0) {
    #line 38 
    int tmp_0;
    #line 38 
    int tmp_32;
    #line 38 
    int tmp_33;
    #line 38 
    int tmp_1;
    #line 38 
    int tmp_2;
    #line 38 
    int tmp_34;
    #line 38 
    int tmp_35;
    #line 38 
    int tmp_3;
    #line 38 
    int tmp_4;
    #line 38 
    int tmp_36;
    #line 38 
    int tmp_37;
    #line 38 
    int tmp_5;
    #line 38 
    int tmp_6;
    #line 38 
    int tmp_38;
    #line 38 
    int tmp_39;
    #line 38 
    int tmp_7;
    #line 38 
    int tmp_8;
    #line 38 
    int tmp_40;
    #line 38 
    int tmp_41;
    #line 38 
    int tmp_9;
    #line 38 
    int tmp_10;
    #line 38 
    int tmp_42;
    #line 38 
    int tmp_43;
    #line 38 
    int tmp_11;
    #line 38 
    int tmp_12;
    #line 38 
    int tmp_44;
    #line 38 
    int tmp_45;
    #line 38 
    int tmp_13;
    #line 38 
    int tmp_14;
    #line 38 
    int tmp_46;
    #line 38 
    int tmp_47;
    #line 38 
    int tmp_15;
    #line 38 
    int tmp_16;
    #line 38 
    int tmp_48;
    #line 38 
    int tmp_49;
    #line 38 
    int tmp_17;
    #line 38 
    int tmp_18;
    #line 38 
    int tmp_50;
    #line 38 
    int tmp_51;
    #line 38 
    int tmp_19;
    #line 38 
    int tmp_20;
    #line 38 
    int tmp_52;
    #line 38 
    int tmp_53;
    #line 38 
    int tmp_21;
    #line 38 
    int tmp_22;
    #line 38 
    int tmp_54;
    #line 38 
    int tmp_55;
    #line 38 
    int tmp_23;
    #line 38 
    int tmp_24;
    #line 38 
    int tmp_56;
    #line 38 
    int tmp_57;
    #line 38 
    int tmp_25;
    #line 38 
    int tmp_26;
    #line 38 
    int tmp_58;
    #line 38 
    int tmp_59;
    #line 38 
    int tmp_27;
    #line 38 
    int tmp_28;
    #line 38 
    int tmp_60;
    #line 38 
    int tmp_61;
    #line 38 
    int tmp_29;
    #line 38 
    int tmp_30;
    #line 38 
    int tmp_31;
    #line 38 
    int tmp;
    #line 38 
    int tmp_63;
    #line 32 
    if (size == 0UL) 
                     #line 33 
                     return 52;
    #line 35 
    if (size <= 4095UL) 
                        #line 36 
                        return 0;
    #line 38 
    if (0 != 0) {
      #line 38 
      if (size + 18446744073709551615UL > 1UL) {
        #line 38 
        if (((unsigned long long)(size + 18446744073709551615UL) & 9223372036854775808ULL) == 0ULL) {
          #line 38 
          if (((unsigned long long)(size + 18446744073709551615UL) & 4611686018427387904ULL) == 0ULL) {
            #line 38 
            if (((unsigned long long)(size + 18446744073709551615UL) & 2305843009213693952ULL) == 0ULL) {
              #line 38 
              if (((unsigned long long)(size + 18446744073709551615UL) & 1152921504606846976ULL) == 0ULL) {
                #line 38 
                if (((unsigned long long)(size + 18446744073709551615UL) & 576460752303423488ULL) == 0ULL) {
                  #line 38 
                  if (((unsigned long long)(size + 18446744073709551615UL) & 288230376151711744ULL) == 0ULL) {
                    #line 38 
                    if (((unsigned long long)(size + 18446744073709551615UL) & 144115188075855872ULL) == 0ULL) {
                      #line 38 
                      if (((unsigned long long)(size + 18446744073709551615UL) & 72057594037927936ULL) == 0ULL) {
                        #line 38 
                        if (((unsigned long long)(size + 18446744073709551615UL) & 36028797018963968ULL) == 0ULL) {
                          #line 38 
                          if (((unsigned long long)(size + 18446744073709551615UL) & 18014398509481984ULL) == 0ULL) {
                            #line 38 
                            if (((unsigned long long)(size + 18446744073709551615UL) & 9007199254740992ULL) == 0ULL) {
                              #line 38 
                              if (((unsigned long long)(size + 18446744073709551615UL) & 4503599627370496ULL) == 0ULL) {
                                #line 38 
                                if (((unsigned long long)(size + 18446744073709551615UL) & 2251799813685248ULL) == 0ULL) {
                                  #line 38 
                                  if (((unsigned long long)(size + 18446744073709551615UL) & 1125899906842624ULL) == 0ULL) {
                                    #line 38 
                                    if (((unsigned long long)(size + 18446744073709551615UL) & 562949953421312ULL) == 0ULL) {
                                      #line 38 
                                      if (((unsigned long long)(size + 18446744073709551615UL) & 281474976710656ULL) == 0ULL) {
                                        #line 38 
                                        if (((unsigned long long)(size + 18446744073709551615UL) & 140737488355328ULL) == 0ULL) {
                                          #line 38 
                                          if (((unsigned long long)(size + 18446744073709551615UL) & 70368744177664ULL) == 0ULL) {
                                            #line 38 
                                            if (((unsigned long long)(size + 18446744073709551615UL) & 35184372088832ULL) == 0ULL) {
                                              #line 38 
                                              if (((unsigned long long)(size + 18446744073709551615UL) & 17592186044416ULL) == 0ULL) {
                                                #line 38 
                                                if (((unsigned long long)(size + 18446744073709551615UL) & 8796093022208ULL) == 0ULL) {
                                                  #line 38 
                                                  if (((unsigned long long)(size + 18446744073709551615UL) & 4398046511104ULL) == 0ULL) {
                                                    #line 38 
                                                    if (((unsigned long long)(size + 18446744073709551615UL) & 2199023255552ULL) == 0ULL) {
                                                      #line 38 
                                                      if (((unsigned long long)(size + 18446744073709551615UL) & 1099511627776ULL) == 0ULL) {
                                                        #line 38 
                                                        if (((unsigned long long)(size + 18446744073709551615UL) & 549755813888ULL) == 0ULL) {
                                                          #line 38 
                                                          if (((unsigned long long)(size + 18446744073709551615UL) & 274877906944ULL) == 0ULL) {
                                                            #line 38 
                                                            if (((unsigned long long)(size + 18446744073709551615UL) & 137438953472ULL) == 0ULL) {
                                                              #line 38 
                                                              if (((unsigned long long)(size + 18446744073709551615UL) & 68719476736ULL) == 0ULL) {
                                                                #line 38 
                                                                if (((unsigned long long)(size + 18446744073709551615UL) & 34359738368ULL) == 0ULL) {
                                                                  #line 38 
                                                                  if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 17179869184ULL) == 0ULL) {
                                                                    #line 38 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 8589934592ULL) == 0ULL) {
                                                                    #line 38 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 4294967296ULL) == 0ULL) {
                                                                    #line 38 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 2147483648ULL) == 0ULL) {
                                                                    #line 38 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 1073741824ULL) == 0ULL) {
                                                                    #line 38 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 536870912ULL) == 0ULL) {
                                                                    #line 38 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 268435456ULL) == 0ULL) {
                                                                    #line 38 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 134217728ULL) == 0ULL) {
                                                                    #line 38 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 67108864ULL) == 0ULL) {
                                                                    #line 38 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 33554432ULL) == 0ULL) {
                                                                    #line 38 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 16777216ULL) == 0ULL) {
                                                                    #line 38 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 8388608ULL) == 0ULL) {
                                                                    #line 38 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 4194304ULL) == 0ULL) {
                                                                    #line 38 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 2097152ULL) == 0ULL) {
                                                                    #line 38 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 1048576ULL) == 0ULL) {
                                                                    #line 38 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 524288ULL) == 0ULL) {
                                                                    #line 38 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 262144ULL) == 0ULL) {
                                                                    #line 38 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 131072ULL) == 0ULL) {
                                                                    #line 38 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 65536ULL) == 0ULL) {
                                                                    #line 38 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 32768ULL) == 0ULL) {
                                                                    #line 38 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 16384ULL) == 0ULL) {
                                                                    #line 38 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 8192ULL) == 0ULL) {
                                                                    #line 38 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 4096ULL) == 0ULL) {
                                                                    #line 38 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 2048ULL) == 0ULL) {
                                                                    #line 38 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 1024ULL) == 0ULL) {
                                                                    #line 38 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 512ULL) == 0ULL) {
                                                                    #line 38 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 256ULL) == 0ULL) {
                                                                    #line 38 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 128ULL) == 0ULL) {
                                                                    #line 38 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 64ULL) == 0ULL) {
                                                                    #line 38 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 32ULL) == 0ULL) {
                                                                    #line 38 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 16ULL) == 0ULL) {
                                                                    #line 38 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 8ULL) == 0ULL) {
                                                                    #line 38 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 4ULL) != 0ULL) 
                                                                    #line 38 
                                                                    tmp = -9; else 
                                                                    #line 38 
                                                                    tmp = -10;
                                                                    #line 38 
                                                                    tmp_0 = tmp;
                                                                    }
                                                                    else 
                                                                    #line 38 
                                                                    tmp_0 = -8;
                                                                    #line 38 
                                                                    tmp_1 = tmp_0;
                                                                    }
                                                                    else 
                                                                    #line 38 
                                                                    tmp_1 = -7;
                                                                    #line 38 
                                                                    tmp_2 = tmp_1;
                                                                    }
                                                                    else 
                                                                    #line 38 
                                                                    tmp_2 = -6;
                                                                    #line 38 
                                                                    tmp_3 = tmp_2;
                                                                    }
                                                                    else 
                                                                    #line 38 
                                                                    tmp_3 = -5;
                                                                    #line 38 
                                                                    tmp_4 = tmp_3;
                                                                    }
                                                                    else 
                                                                    #line 38 
                                                                    tmp_4 = -4;
                                                                    #line 38 
                                                                    tmp_5 = tmp_4;
                                                                    }
                                                                    else 
                                                                    #line 38 
                                                                    tmp_5 = -3;
                                                                    #line 38 
                                                                    tmp_6 = tmp_5;
                                                                    }
                                                                    else 
                                                                    #line 38 
                                                                    tmp_6 = -2;
                                                                    #line 38 
                                                                    tmp_7 = tmp_6;
                                                                    }
                                                                    else 
                                                                    #line 38 
                                                                    tmp_7 = -1;
                                                                    #line 38 
                                                                    tmp_8 = tmp_7;
                                                                    }
                                                                    else 
                                                                    #line 38 
                                                                    tmp_8 = 0;
                                                                    #line 38 
                                                                    tmp_9 = tmp_8;
                                                                    }
                                                                    else 
                                                                    #line 38 
                                                                    tmp_9 = 1;
                                                                    #line 38 
                                                                    tmp_10 = tmp_9;
                                                                    }
                                                                    else 
                                                                    #line 38 
                                                                    tmp_10 = 2;
                                                                    #line 38 
                                                                    tmp_11 = tmp_10;
                                                                    }
                                                                    else 
                                                                    #line 38 
                                                                    tmp_11 = 3;
                                                                    #line 38 
                                                                    tmp_12 = tmp_11;
                                                                    }
                                                                    else 
                                                                    #line 38 
                                                                    tmp_12 = 4;
                                                                    #line 38 
                                                                    tmp_13 = tmp_12;
                                                                    }
                                                                    else 
                                                                    #line 38 
                                                                    tmp_13 = 5;
                                                                    #line 38 
                                                                    tmp_14 = tmp_13;
                                                                    }
                                                                    else 
                                                                    #line 38 
                                                                    tmp_14 = 6;
                                                                    #line 38 
                                                                    tmp_15 = tmp_14;
                                                                    }
                                                                    else 
                                                                    #line 38 
                                                                    tmp_15 = 7;
                                                                    #line 38 
                                                                    tmp_16 = tmp_15;
                                                                    }
                                                                    else 
                                                                    #line 38 
                                                                    tmp_16 = 8;
                                                                    #line 38 
                                                                    tmp_17 = tmp_16;
                                                                    }
                                                                    else 
                                                                    #line 38 
                                                                    tmp_17 = 9;
                                                                    #line 38 
                                                                    tmp_18 = tmp_17;
                                                                    }
                                                                    else 
                                                                    #line 38 
                                                                    tmp_18 = 10;
                                                                    #line 38 
                                                                    tmp_19 = tmp_18;
                                                                    }
                                                                    else 
                                                                    #line 38 
                                                                    tmp_19 = 11;
                                                                    #line 38 
                                                                    tmp_20 = tmp_19;
                                                                    }
                                                                    else 
                                                                    #line 38 
                                                                    tmp_20 = 12;
                                                                    #line 38 
                                                                    tmp_21 = tmp_20;
                                                                    }
                                                                    else 
                                                                    #line 38 
                                                                    tmp_21 = 13;
                                                                    #line 38 
                                                                    tmp_22 = tmp_21;
                                                                    }
                                                                    else 
                                                                    #line 38 
                                                                    tmp_22 = 14;
                                                                    #line 38 
                                                                    tmp_23 = tmp_22;
                                                                    }
                                                                    else 
                                                                    #line 38 
                                                                    tmp_23 = 15;
                                                                    #line 38 
                                                                    tmp_24 = tmp_23;
                                                                    }
                                                                    else 
                                                                    #line 38 
                                                                    tmp_24 = 16;
                                                                    #line 38 
                                                                    tmp_25 = tmp_24;
                                                                    }
                                                                    else 
                                                                    #line 38 
                                                                    tmp_25 = 17;
                                                                    #line 38 
                                                                    tmp_26 = tmp_25;
                                                                    }
                                                                    else 
                                                                    #line 38 
                                                                    tmp_26 = 18;
                                                                    #line 38 
                                                                    tmp_27 = tmp_26;
                                                                    }
                                                                    else 
                                                                    #line 38 
                                                                    tmp_27 = 19;
                                                                    #line 38 
                                                                    tmp_28 = tmp_27;
                                                                    }
                                                                    else 
                                                                    #line 38 
                                                                    tmp_28 = 20;
                                                                    #line 38 
                                                                    tmp_29 = tmp_28;
                                                                    }
                                                                    else 
                                                                    #line 38 
                                                                    tmp_29 = 21;
                                                                    #line 38 
                                                                    tmp_30 = tmp_29;
                                                                    }
                                                                    else 
                                                                    #line 38 
                                                                    tmp_30 = 22;
                                                                    #line 38 
                                                                    tmp_31 = tmp_30;
                                                                  }
                                                                  else 
                                                                    #line 38 
                                                                    tmp_31 = 23;
                                                                  #line 38 
                                                                  tmp_32 = tmp_31;
                                                                }
                                                                else 
                                                                  #line 38 
                                                                  tmp_32 = 24;
                                                                #line 38 
                                                                tmp_33 = tmp_32;
                                                              }
                                                              else 
                                                                   #line 38 
                                                                   tmp_33 = 25;
                                                              #line 38 
                                                              tmp_34 = tmp_33;
                                                            }
                                                            else 
                                                                 #line 38 
                                                                 tmp_34 = 26;
                                                            #line 38 
                                                            tmp_35 = tmp_34;
                                                          }
                                                          else 
                                                               #line 38 
                                                               tmp_35 = 27;
                                                          #line 38 
                                                          tmp_36 = tmp_35;
                                                        }
                                                        else 
                                                             #line 38 
                                                             tmp_36 = 28;
                                                        #line 38 
                                                        tmp_37 = tmp_36;
                                                      }
                                                      else 
                                                           #line 38 
                                                           tmp_37 = 29;
                                                      #line 38 
                                                      tmp_38 = tmp_37;
                                                    }
                                                    else 
                                                         #line 38 
                                                         tmp_38 = 30;
                                                    #line 38 
                                                    tmp_39 = tmp_38;
                                                  }
                                                  else 
                                                       #line 38 
                                                       tmp_39 = 31;
                                                  #line 38 
                                                  tmp_40 = tmp_39;
                                                }
                                                else 
                                                     #line 38 
                                                     tmp_40 = 32;
                                                #line 38 
                                                tmp_41 = tmp_40;
                                              }
                                              else 
                                                   #line 38 
                                                   tmp_41 = 33;
                                              #line 38 
                                              tmp_42 = tmp_41;
                                            }
                                            else 
                                                 #line 38 
                                                 tmp_42 = 34;
                                            #line 38 
                                            tmp_43 = tmp_42;
                                          }
                                          else 
                                               #line 38 
                                               tmp_43 = 35;
                                          #line 38 
                                          tmp_44 = tmp_43;
                                        }
                                        else 
                                             #line 38 
                                             tmp_44 = 36;
                                        #line 38 
                                        tmp_45 = tmp_44;
                                      }
                                      else 
                                           #line 38 
                                           tmp_45 = 37;
                                      #line 38 
                                      tmp_46 = tmp_45;
                                    }
                                    else 
                                         #line 38 
                                         tmp_46 = 38;
                                    #line 38 
                                    tmp_47 = tmp_46;
                                  }
                                  else 
                                       #line 38 
                                       tmp_47 = 39;
                                  #line 38 
                                  tmp_48 = tmp_47;
                                }
                                else 
                                     #line 38 
                                     tmp_48 = 40;
                                #line 38 
                                tmp_49 = tmp_48;
                              }
                              else 
                                   #line 38 
                                   tmp_49 = 41;
                              #line 38 
                              tmp_50 = tmp_49;
                            }
                            else 
                                 #line 38 
                                 tmp_50 = 42;
                            #line 38 
                            tmp_51 = tmp_50;
                          }
                          else 
                               #line 38 
                               tmp_51 = 43;
                          #line 38 
                          tmp_52 = tmp_51;
                        }
                        else 
                             #line 38 
                             tmp_52 = 44;
                        #line 38 
                        tmp_53 = tmp_52;
                      }
                      else 
                           #line 38 
                           tmp_53 = 45;
                      #line 38 
                      tmp_54 = tmp_53;
                    }
                    else 
                         #line 38 
                         tmp_54 = 46;
                    #line 38 
                    tmp_55 = tmp_54;
                  }
                  else 
                       #line 38 
                       tmp_55 = 47;
                  #line 38 
                  tmp_56 = tmp_55;
                }
                else 
                     #line 38 
                     tmp_56 = 48;
                #line 38 
                tmp_57 = tmp_56;
              }
              else 
                   #line 38 
                   tmp_57 = 49;
              #line 38 
              tmp_58 = tmp_57;
            }
            else 
                 #line 38 
                 tmp_58 = 50;
            #line 38 
            tmp_59 = tmp_58;
          }
          else 
               #line 38 
               tmp_59 = 51;
          #line 38 
          tmp_60 = tmp_59;
        }
        else 
             #line 38 
             tmp_60 = 52;
        #line 38 
        tmp_61 = tmp_60;
      }
      else 
           #line 38 
           tmp_61 = -11;
      #line 38 
      tmp_63 = tmp_61;
    }
    else {
      #line 38 
      tmp_63 = __ilog2_u64((unsigned long long)(size + 18446744073709551615UL)) + -11;
    }
    #line 38 
    return tmp_63;
  }
  #line 41 
  size --;
  #line 42 
  size >>= 12;
  #line 46 
  return fls64((unsigned long long)size);
}

#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/string_64.h"
#line 14 
void *memcpy(void *, void *, size_t);
#line 18 
#line 18 
void *memset(void *, int, size_t);
#line 61 
#line 61 
int memcmp(void *, void *, size_t);
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/string.h"
#line 29 
size_t strlcpy(char *, char *, size_t);
#line 32 
#line 32 
ssize_t strscpy(char *, char *, size_t);
#line 49 
#line 995  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
static int cif_strcmp(char *cs, char *ct);
#line 52  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/string.h"
#line 337  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
static int cif_strncmp(char *cs, char *ct, __kernel_size_t count);
#line 186  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/string.h"
#line 881  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
static void *cif_kmemdup(void *src, size_t len, gfp_t gfp);
#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/cmpxchg_64.h"
__inline static int arch_atomic_read(atomic_t *v)
{
  #line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/atomic.h"
  union __anonunion___u_67 __u;
  #line 31 
  __read_once_size((void *)(& v->counter),(void *)(& __u.__c),4);
  #line 31 
  return (__u.__val);
}

#line 41  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/atomic.h"
__inline static void arch_atomic_set(atomic_t *v, int i)
{
  #line 44 
  union __anonunion___u_69 __u = {.__val = i};
  #line 43 
  __write_once_size((void *)(& v->counter),(void *)(& __u.__c),4);
  #line 43 
  int tmp = __u.__val;
  #line 45 
  return;
}

#line 123  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/atomic.h"
__inline static bool arch_atomic_dec_and_test(atomic_t *v)
{
  #line 125 
  bool c;
  #line 126 
  ldv_inline_asm();
  #line 125 
  return c;
}

#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/atomic-instrumented.h"
__inline static int atomic_read(atomic_t *v)
{
  #line 26 
  kasan_check_read((void *)v,4U);
  #line 27 
  return arch_atomic_read(v);
}

#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/atomic-instrumented.h"
__inline static void atomic_set(atomic_t *v, int i)
{
  #line 44 
  kasan_check_read((void *)v,4U);
  #line 45 
  arch_atomic_set(v,i);
  #line 46 
  return;
}

#line 237 
#line 379  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
static void atomic_inc(atomic_t *v);
#line 327  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/atomic-instrumented.h"
#line 386  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
static void atomic_dec(atomic_t *v);
#line 745  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/atomic-instrumented.h"
__inline static bool atomic_dec_and_test(atomic_t *v)
{
  #line 747 
  kasan_check_read((void *)v,4U);
  #line 748 
  return arch_atomic_dec_and_test(v);
}

#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/err.h"
#line 400  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
static void *ERR_PTR(long error);
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/err.h"
#line 407  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
static long PTR_ERR(void *ptr);
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/err.h"
#line 414  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
static bool IS_ERR(void *ptr);
#line 39  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/err.h"
#line 421  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
static bool IS_ERR_OR_NULL(void *ptr);
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/irqflags.h"
#line 20 
unsigned long native_save_fl(void);
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/irqflags.h"
unsigned long native_save_fl(void)
{
  #line 22 
  unsigned long flags;
  #line 23 
  ldv_inline_asm();
  #line 35 
  return flags;
}

#line 38 
#line 39 
void native_restore_fl(unsigned long flags);
#line 39  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/irqflags.h"
void native_restore_fl(unsigned long flags)
{
  #line 41 
  ldv_inline_asm();
  #line 42 
  return;
}

#line 302  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockdep.h"
#line 302 
void lockdep_init_map(struct lockdep_map *, char *, struct lock_class_key *, int);
#line 95  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
#line 95 
void __raw_spin_lock_init(raw_spinlock_t *, char *, struct lock_class_key *);
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_api_smp.h"
#line 22 
void _raw_spin_lock(raw_spinlock_t *);
#line 28 
#line 28 
void _raw_spin_lock_bh(raw_spinlock_t *);
#line 39 
#line 39 
void _raw_spin_unlock(raw_spinlock_t *);
#line 40 
#line 40 
void _raw_spin_unlock_bh(raw_spinlock_t *);
#line 43 
#line 43 
void _raw_spin_unlock_irqrestore(raw_spinlock_t *, unsigned long);
#line 325  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
__inline static raw_spinlock_t *spinlock_check(spinlock_t *lock)
{
  #line 327 
  return & lock->__anonCompField_spinlock_25.rlock;
}

#line 336  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
static void spin_lock(spinlock_t *lock)
{
  #line 338 
  _raw_spin_lock(& lock->__anonCompField_spinlock_25.rlock);
  #line 339 
  return;
}

#line 340 
#line 742  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
static void cif_spin_lock__xmit_lock_of_netdev_queue(spinlock_t *lock);
#line 340  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
#line 800  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
static void cif_spin_lock_tx_global_lock_of_net_device(spinlock_t *lock);
#line 340  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
#line 1076  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
static void cif_spin_lock_lock_of_sk_buff_head(spinlock_t *lock);
#line 341  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
static void spin_lock_bh(spinlock_t *lock)
{
  #line 343 
  _raw_spin_lock_bh(& lock->__anonCompField_spinlock_25.rlock);
  #line 344 
  return;
}

#line 345 
#line 1094  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
static void cif_spin_lock_bh_lock_of_sk_buff_head(spinlock_t *lock);
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
static void spin_unlock(spinlock_t *lock)
{
  #line 378 
  _raw_spin_unlock(& lock->__anonCompField_spinlock_25.rlock);
  #line 379 
  return;
}

#line 380 
#line 782  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
static void cif_spin_unlock__xmit_lock_of_netdev_queue(spinlock_t *lock);
#line 380  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
#line 809  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
static void cif_spin_unlock_tx_global_lock_of_net_device(spinlock_t *lock);
#line 380  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
#line 1085  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
static void cif_spin_unlock_lock_of_sk_buff_head(spinlock_t *lock);
#line 381  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
static void spin_unlock_bh(spinlock_t *lock)
{
  #line 383 
  _raw_spin_unlock_bh(& lock->__anonCompField_spinlock_25.rlock);
  #line 384 
  return;
}

#line 385 
#line 1103  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
static void cif_spin_unlock_bh_lock_of_sk_buff_head(spinlock_t *lock);
#line 391  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
static void spin_unlock_irqrestore(spinlock_t *lock, unsigned long flags)
{
  {
    #line 393 
    unsigned long __dummy;
    #line 393 
    unsigned long __dummy2;
    }
  #line 393 
  _raw_spin_unlock_irqrestore(& lock->__anonCompField_spinlock_25.rlock,flags);
  #line 395 
  return;
}

#line 395 
#line 1025  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
static void cif_spin_unlock_irqrestore_rx_lock_of_r8152(spinlock_t *lock, unsigned long flags);
#line 395  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
#line 1043  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
static void cif_spin_unlock_irqrestore_tx_lock_of_r8152(spinlock_t *lock, unsigned long flags);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 23 
int ldv_undef_int(void);
#line 26  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
#line 1002 
static void cif_mutex_lock_control_of_r8152(struct mutex *lock);
#line 29 
#line 29 
void ldv_mutex_model_lock(struct mutex *, char *);
#line 31 
#line 31 
void ldv_mutex_model_unlock(struct mutex *, char *);
#line 33 
#line 33 
void __ldv_spin_lock(spinlock_t *);
#line 35 
#line 1016 
static void cif___ldv_spin_lock_rx_lock_of_r8152(spinlock_t *lock);
#line 35 
#line 1034 
static void cif___ldv_spin_lock_tx_lock_of_r8152(spinlock_t *lock);
#line 40 
#line 40 
void ldv_spin_model_lock(char *);
#line 41 
#line 41 
void ldv_spin_model_unlock(char *);
#line 51 
#line 51 
int ldv_request_firmware(struct firmware **fw);
#line 52 
#line 52 
void ldv_release_firmware(struct firmware *fw);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/err.h"
#line 23 
bool ldv_is_err(void *ptr);
#line 24 
#line 24 
bool ldv_is_err_or_null(void *ptr);
#line 25 
#line 25 
void *ldv_err_ptr(long error);
#line 26 
#line 26 
long ldv_ptr_err(void *ptr);
#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/bitmap.h"
#line 21 
void ldv_set_bit(long nr, unsigned long *addr);
#line 22 
#line 22 
void ldv_clear_bit(long nr, unsigned long *addr);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/string.h"
#line 23 
void *ldv_kmemdup(void *src, size_t len, gfp_t gfp);
#line 26 
#line 26 
int ldv_strcmp(char *cs, char *ct);
#line 27 
#line 27 
int ldv_strncmp(char *cs, char *ct, __kernel_size_t count);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/list.h"
#line 23 
void ldv_init_list_head(struct list_head *list);
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 24 
void *ldv_kmalloc(size_t size, gfp_t flags);
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmdebug.h"
#line 12 
void dump_page(struct page *, char *);
#line 128  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mutex.h"
#line 128 
void __mutex_init(struct mutex *, char *, struct lock_class_key *);
#line 184 
#line 1134  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
static int cif_mutex_trylock_control_of_r8152(struct mutex *lock);
#line 185  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mutex.h"
#line 1009  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
static void cif_mutex_unlock_control_of_r8152(struct mutex *lock);
#line 177  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timekeeping.h"
#line 177 
u64 ktime_get_mono_fast_ns(void);
#line 90  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
#line 90 
void init_timer_key(struct timer_list *, void (*)(struct timer_list *), unsigned int, char *, struct lock_class_key *);
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/workqueue.h"
#line 22 
void delayed_work_timer_fn(struct timer_list *);
#line 207 
#line 207 
void __init_work(struct work_struct *, int);
#line 387 
#line 387 
extern struct workqueue_struct *system_long_wq;
#line 466 
#line 466 
bool cancel_delayed_work_sync(struct delayed_work *);
#line 475 
#line 475 
unsigned int work_busy(struct work_struct *);
#line 511 
#line 500  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
static bool cif_queue_delayed_work(struct workqueue_struct *wq, struct delayed_work *dwork, unsigned long delay);
#line 612  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/workqueue.h"
#line 1060  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
static bool cif_schedule_delayed_work(struct delayed_work *dwork, unsigned long delay);
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/page-flags.h"
__inline static struct page *compound_head(struct page *page)
{
  #line 175 
  union __anonunion___u_163 __u;
  #line 174 
  __read_once_size((void *)(& page->__anonCompField_page_47.__anonCompField___anonunion_145_42.compound_head),(void *)(& __u.__c),8);
  #line 174 
  unsigned long head = (__u.__val);
  #line 176 
  if ((long)((head & 1UL) != 0UL) != 0L) 
                                         #line 177 
                                         return (struct page *)(head + 18446744073709551615UL);
  #line 178 
  return page;
}

#line 527  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/gfp.h"
#line 527 
struct page *alloc_pages_current(gfp_t, unsigned int);
#line 530  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/gfp.h"
__inline static struct page *alloc_pages(gfp_t gfp_mask, unsigned int order)
{
  #line 532 
  return alloc_pages_current(gfp_mask,order);
}

#line 566 
#line 566 
void __free_pages(struct page *, unsigned int);
#line 189  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/slab.h"
#line 189 
void kfree(void *);
#line 320 
#line 320 
extern struct kmem_cache *kmalloc_caches[3U][14U];
#line 322  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/slab.h"
__inline static enum kmalloc_cache_type kmalloc_type(gfp_t flags)
{
  #line 336 
  int tmp;
  #line 329 
  if ((long)((flags & 17U) == 0U) != 0L) 
                                         #line 330 
                                         return KMALLOC_NORMAL;
  #line 336 
  if ((flags & 1U) != 0U) 
                          #line 336 
                          tmp = KMALLOC_DMA; else 
                                                  #line 336 
                                                  tmp = KMALLOC_RECLAIM;
  #line 336 
  return (enum kmalloc_cache_type)tmp;
}

#line 350  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/slab.h"
__inline static unsigned int kmalloc_index(size_t size)
{
  #line 352 
  if (size == 0UL) 
                   #line 353 
                   return 0U;
  #line 355 
  if (size <= 8UL) 
                   #line 356 
                   return 3U;
  #line 358 
  if (size + 18446744073709551551UL <= 31UL) 
                                             #line 359 
                                             return 1U;
  #line 360 
  if (size + 18446744073709551487UL <= 63UL) 
                                             #line 361 
                                             return 2U;
  #line 362 
  if (size <= 8UL) 
                   #line 362 
                   return 3U;
  #line 363 
  if (size <= 16UL) 
                    #line 363 
                    return 4U;
  #line 364 
  if (size <= 32UL) 
                    #line 364 
                    return 5U;
  #line 365 
  if (size <= 64UL) 
                    #line 365 
                    return 6U;
  #line 366 
  if (size <= 128UL) 
                     #line 366 
                     return 7U;
  #line 367 
  if (size <= 256UL) 
                     #line 367 
                     return 8U;
  #line 368 
  if (size <= 512UL) 
                     #line 368 
                     return 9U;
  #line 369 
  if (size <= 1024UL) 
                      #line 369 
                      return 10U;
  #line 370 
  if (size <= 2048UL) 
                      #line 370 
                      return 11U;
  #line 371 
  if (size <= 4096UL) 
                      #line 371 
                      return 12U;
  #line 372 
  if (size <= 8192UL) 
                      #line 372 
                      return 13U;
  #line 373 
  if (size <= 16384UL) 
                       #line 373 
                       return 14U;
  #line 374 
  if (size <= 32768UL) 
                       #line 374 
                       return 15U;
  #line 375 
  if (size <= 65536UL) 
                       #line 375 
                       return 16U;
  #line 376 
  if (size <= 131072UL) 
                        #line 376 
                        return 17U;
  #line 377 
  if (size <= 262144UL) 
                        #line 377 
                        return 18U;
  #line 378 
  if (size <= 524288UL) 
                        #line 378 
                        return 19U;
  #line 379 
  if (size <= 1048576UL) 
                         #line 379 
                         return 20U;
  #line 380 
  if (size <= 2097152UL) 
                         #line 380 
                         return 21U;
  #line 381 
  if (size <= 4194304UL) 
                         #line 381 
                         return 22U;
  #line 382 
  if (size <= 8388608UL) 
                         #line 382 
                         return 23U;
  #line 383 
  if (size <= 16777216UL) 
                          #line 383 
                          return 24U;
  #line 384 
  if (size <= 33554432UL) 
                          #line 384 
                          return 25U;
  #line 385 
  if (size <= 67108864UL) 
                          #line 385 
                          return 26U;
  #line 387 
  ldv_inline_asm();
  #line 388 
  ldv_inline_asm();
  #line 389 
  ldv_inline_asm();
  #line 386 
  ;
  #line 389 
  return 4294967295U;
}

#line 417 
#line 417 
void *__kmalloc_node(size_t, gfp_t, int);
#line 435 
#line 435 
void *kmem_cache_alloc_node_trace(struct kmem_cache *, gfp_t, int, size_t);
#line 542 
#line 526  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
static void *kmalloc(size_t size, gfp_t flags);
#line 564  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/slab.h"
__inline static void *kmalloc_node(size_t size, gfp_t flags, int node)
{
  #line 567 
  if (0 != 0 && size <= 8192UL) {
    #line 569 
    unsigned int i = kmalloc_index(size);
    #line 571 
    if (i == 0U) 
                 #line 572 
                 return (void *)16;
    #line 574 
    ;
    #line 574 
    ;
    #line 574 
    ;
    #line 574 
    ;
    #line 574 
    return kmem_cache_alloc_node_trace(kmalloc_caches[(unsigned int)kmalloc_type(flags)][i],
                                    flags,node,size);
  }
  #line 579 
  return __kmalloc_node(size,flags,node);
}

#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/delay.h"
#line 59 
void msleep(unsigned int);
#line 61 
#line 61 
void usleep_range(unsigned long, unsigned long);
#line 676  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/crypto.h"
#line 676 
void crypto_destroy_tfm(void *, struct crypto_tfm *);
#line 695  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/crypto/hash.h"
#line 695 
struct crypto_shash *crypto_alloc_shash(char *, u32, u32);
#line 698  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/crypto/hash.h"
__inline static struct crypto_tfm *crypto_shash_tfm(struct crypto_shash *tfm)
{
  #line 700 
  return & tfm->base;
}

#line 707  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/crypto/hash.h"
__inline static void crypto_free_shash(struct crypto_shash *tfm)
{
  #line 709 
  ;
  #line 709 
  crypto_destroy_tfm((void *)tfm,crypto_shash_tfm(tfm));
  #line 710 
  return;
}

#line 742  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/crypto/hash.h"
__inline static struct shash_alg *__crypto_shash_alg(struct crypto_alg *alg)
{
  #line 744 
  void *__mptr;
  #line 744 
  __mptr = (void *)alg;
  #line 744 
  return ((struct shash_alg *)(__mptr + 18446744073709551536U));
}

#line 747  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/crypto/hash.h"
__inline static struct shash_alg *crypto_shash_alg(struct crypto_shash *tfm)
{
  #line 749 
  return __crypto_shash_alg(crypto_shash_tfm(tfm)->__crt_alg);
}

#line 761  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/crypto/hash.h"
__inline static unsigned int crypto_shash_digestsize(struct crypto_shash *tfm)
{
  #line 763 
  return crypto_shash_alg(tfm)->digestsize;
}

#line 801  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/crypto/hash.h"
__inline static unsigned int crypto_shash_descsize(struct crypto_shash *tfm)
{
  #line 803 
  return tfm->descsize;
}

#line 842 
#line 842 
int crypto_shash_digest(struct shash_desc *, u8 *, unsigned int, u8 *);
#line 210  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/capability.h"
#line 210 
bool capable(int);
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/page_ref.h"
#line 11 
extern struct tracepoint __tracepoint_page_ref_mod;
#line 12 
#line 12 
extern struct tracepoint __tracepoint_page_ref_mod_and_test;
#line 30 
#line 30 
void __page_ref_mod(struct page *, int);
#line 31 
#line 31 
void __page_ref_mod_and_test(struct page *, int, int);
#line 65  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/page_ref.h"
__inline static int page_ref_count(struct page *page)
{
  #line 67 
  return atomic_read(& page->_refcount);
}

#line 70  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/page_ref.h"
__inline static int page_count(struct page *page)
{
  #line 72 
  return atomic_read(& compound_head(page)->_refcount);
}

#line 105  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/page_ref.h"
__inline static void page_ref_inc(struct page *page)
{
  #line 107 
  atomic_inc(& page->_refcount);
  #line 108 
  if ((int)static_key_false(& __tracepoint_page_ref_mod.key) != 0) 
                                                                   #line 109 
                                                                   __page_ref_mod(page,1);
  #line 110 
  return;
}

#line 137  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/page_ref.h"
__inline static int page_ref_dec_and_test(struct page *page)
{
  #line 139 
  int ret = (int)atomic_dec_and_test(& page->_refcount);
  #line 141 
  if ((int)static_key_false(& __tracepoint_page_ref_mod_and_test.key) != 0) 
    #line 142 
    __page_ref_mod_and_test(page,-1,ret);
  #line 143 
  return ret;
}

#line 590  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm.h"
__inline static int put_page_testzero(struct page *page)
{
  #line 592 
  if ((long)(page_ref_count(page) == 0) != 0L) {
    #line 592 
    dump_page(page,(char *)"VM_BUG_ON_PAGE(");
    #line 593 
    ldv_inline_asm();
    #line 594 
    ldv_inline_asm();
    #line 595 
    ldv_inline_asm();
    #line 592 
    ;
  }
  #line 593 
  return page_ref_dec_and_test(page);
}

#line 736 
#line 736 
void __put_page(struct page *);
#line 935  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm.h"
__inline static enum zone_type page_zonenum(struct page *page)
{
  #line 937 
  return (enum zone_type)((unsigned int)(page->flags >> 51UL) & 7U);
}

#line 941  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm.h"
__inline static bool is_zone_device_page(struct page *page)
{
  #line 943 
  return (_Bool)(page_zonenum(page) == (unsigned int)ZONE_DEVICE);
}

#line 955 
#line 955 
void __put_devmap_managed_page(struct page *);
#line 956 
#line 956 
extern struct static_key_false devmap_managed_key;
#line 957  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm.h"
__inline static bool put_devmap_managed_page(struct page *page)
{
  #line 959 
  bool branch;
  #line 959 
  branch = arch_static_branch(& devmap_managed_key.key,(_Bool)0);
  #line 959 
  if ((long)((long)((int)branch != 0)) == 0L) 
                                              #line 960 
                                              return (_Bool)0;
  #line 961 
  if (! is_zone_device_page(page)) 
                                   #line 962 
                                   return (_Bool)0;
  #line 963 
  switch ((unsigned int)(page->__anonCompField_page_47.__anonCompField___anonunion_145_46.pgmap)->type) {
    #line 964 
    case (unsigned int)1: 
                          #line 964 
    ;
    #line 965 
    case (unsigned int)2: 
                          #line 965 
    ;
    #line 966 
    __put_devmap_managed_page(page);
    #line 967 
    return (_Bool)1;
    #line 968 
    default: 
             #line 968 
    ;
    #line 969 
    break;
  }
  #line 971 
  return (_Bool)0;
}

#line 1001  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm.h"
__inline static void get_page(struct page *page)
{
  #line 1003 
  page = compound_head(page);
  #line 1008 
  if ((long)((unsigned int)page_ref_count(page) + 127U <= 127U) != 0L) {
    #line 1008 
    dump_page(page,(char *)"VM_BUG_ON_PAGE(");
    #line 1009 
    ldv_inline_asm();
    #line 1010 
    ldv_inline_asm();
    #line 1011 
    ldv_inline_asm();
    #line 1008 
    ;
  }
  #line 1009 
  page_ref_inc(page);
  #line 1010 
  return;
}

#line 1021  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm.h"
__inline static void put_page(struct page *page)
{
  #line 1023 
  page = compound_head(page);
  #line 1031 
  if ((int)put_devmap_managed_page(page) != 0) 
                                               #line 1032 
                                               return;
  #line 1034 
  if (put_page_testzero(page) != 0) 
                                    #line 1035 
                                    __put_page(page);
  #line 1036 
  return;
}

#line 1299  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm.h"
__inline static void *lowmem_page_address(struct page *page)
{
  #line 1301 
  return (void *)((unsigned long)((unsigned long long)((page - (struct page *)vmemmap_base) / 64L) << 12) + page_offset_base);
}

#line 38  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/random.h"
#line 38 
void get_random_bytes(void *, int);
#line 244  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/net.h"
#line 244 
int net_ratelimit(void);
#line 180  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/checksum_64.h"
#line 180 
__sum16 csum_ipv6_magic(struct in6_addr *, struct in6_addr *, __u32, __u8, __wsum);
#line 108  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pm_wakeup.h"
#line 108 
int device_set_wakeup_enable(struct device *, bool);
#line 1383  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
__inline static int dev_to_node(struct device *dev)
{
  #line 1385 
  return dev->numa_node;
}

#line 1417  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
__inline static void *dev_get_drvdata(struct device *dev)
{
  #line 1419 
  return dev->driver_data;
}

#line 1422  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
__inline static void dev_set_drvdata(struct device *dev, void *data)
{
  #line 1424 
  dev->driver_data = data;
  #line 1425 
  return;
}

#line 1712 
#line 1712 
void _dev_err(struct device *, char * , ...);
#line 1714 
#line 1714 
void _dev_warn(struct device *, char * , ...);
#line 1718 
#line 1718 
void _dev_info(struct device *, char * , ...);
#line 1023  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
#line 1023 
void consume_skb(struct sk_buff *);
#line 1116 
#line 1116 
int pskb_expand_head(struct sk_buff *, int, int, gfp_t);
#line 1381  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static unsigned char *skb_end_pointer(struct sk_buff *skb)
{
  #line 1383 
  return skb->head + (unsigned long)skb->end;
}

#line 1493  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static int skb_queue_empty(struct sk_buff_head *list)
{
  #line 1495 
  return list->next == (struct sk_buff *)list;
}

#line 1621  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static int skb_header_cloned(struct sk_buff *skb)
{
  #line 1623 
  int dataref;
  #line 1625 
  if ((unsigned int)skb->cloned == 0U) 
                                       #line 1626 
                                       return 0;
  #line 1628 
  dataref = atomic_read(& ((struct skb_shared_info *)skb_end_pointer(skb))->dataref);
  #line 1629 
  dataref = (dataref & 65535) - (dataref >> 16);
  #line 1630 
  return dataref != 1;
}

#line 1744  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static struct sk_buff *skb_peek(struct sk_buff_head *list_)
{
  #line 1746 
  struct sk_buff *skb = list_->next;
  #line 1748 
  if (skb == (struct sk_buff *)list_) 
                                      #line 1749 
                                      skb = (struct sk_buff *)0;
  #line 1750 
  return skb;
}

#line 1812  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static __u32 skb_queue_len(struct sk_buff_head *list_)
{
  #line 1814 
  return list_->qlen;
}

#line 1827  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static void __skb_queue_head_init(struct sk_buff_head *list)
{
  #line 1829 
  list->next = ((struct sk_buff *)list);
  #line 1829 
  list->prev = ((struct sk_buff *)list);
  #line 1830 
  list->qlen = 0U;
  #line 1831 
  return;
}

#line 1841  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static void skb_queue_head_init(struct sk_buff_head *list)
{
  #line 1843 
  spinlock_check(& list->lock);
  {
    #line 1843 
    struct lock_class_key __key;
    #line 1843 
    __raw_spin_lock_init(& list->lock.__anonCompField_spinlock_25.rlock,(char *)"&(&list->lock)->rlock",& __key);
  }
  #line 1844 
  __skb_queue_head_init(list);
  #line 1845 
  return;
}

#line 1860  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static void __skb_insert(struct sk_buff *newsk, struct sk_buff *prev, struct sk_buff *next, struct sk_buff_head *list)
{
  {
    #line 1868 
    union __anonunion___u_548 __u = {.__val = next};
    #line 1867 
    __write_once_size((void *)(& newsk->__anonCompField_sk_buff_91.__anonCompField___anonunion_531_90.next),(void *)(& __u.__c),8);
    #line 1867 
    struct sk_buff *tmp = __u.__val;
  }
  {
    #line 1869 
    union __anonunion___u_550 __u_0 = {.__val = prev};
    #line 1868 
    __write_once_size((void *)(& newsk->__anonCompField_sk_buff_91.__anonCompField___anonunion_531_90.prev),(void *)(& __u_0.__c),8);
    #line 1868 
    struct sk_buff *tmp_3 = __u_0.__val;
  }
  {
    #line 1870 
    union __anonunion___u_552 __u_1 = {.__val = newsk};
    #line 1869 
    __write_once_size((void *)(& next->__anonCompField_sk_buff_91.__anonCompField___anonunion_531_90.prev),(void *)(& __u_1.__c),8);
    #line 1869 
    struct sk_buff *tmp_5 = __u_1.__val;
  }
  {
    #line 1871 
    union __anonunion___u_554 __u_2 = {.__val = newsk};
    #line 1870 
    __write_once_size((void *)(& prev->__anonCompField_sk_buff_91.__anonCompField___anonunion_531_90.next),(void *)(& __u_2.__c),8);
    #line 1870 
    struct sk_buff *tmp_7 = __u_2.__val;
  }
  #line 1871 
  (list->qlen) ++;
  #line 1872 
  return;
}

#line 1874  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static void __skb_queue_splice(struct sk_buff_head *list, struct sk_buff *prev, struct sk_buff *next)
{
  #line 1878 
  struct sk_buff *first = list->next;
  #line 1879 
  struct sk_buff *last = list->prev;
  {
    #line 1882 
    union __anonunion___u_556 __u = {.__val = prev};
    #line 1881 
    __write_once_size((void *)(& first->__anonCompField_sk_buff_91.__anonCompField___anonunion_531_90.prev),(void *)(& __u.__c),8);
    #line 1881 
    struct sk_buff *tmp = __u.__val;
  }
  {
    #line 1883 
    union __anonunion___u_558 __u_0 = {.__val = first};
    #line 1882 
    __write_once_size((void *)(& prev->__anonCompField_sk_buff_91.__anonCompField___anonunion_531_90.next),(void *)(& __u_0.__c),8);
    #line 1882 
    struct sk_buff *tmp_3 = __u_0.__val;
  }
  {
    #line 1885 
    union __anonunion___u_560 __u_1 = {.__val = next};
    #line 1884 
    __write_once_size((void *)(& last->__anonCompField_sk_buff_91.__anonCompField___anonunion_531_90.next),(void *)(& __u_1.__c),8);
    #line 1884 
    struct sk_buff *tmp_5 = __u_1.__val;
  }
  {
    #line 1886 
    union __anonunion___u_562 __u_2 = {.__val = last};
    #line 1885 
    __write_once_size((void *)(& next->__anonCompField_sk_buff_91.__anonCompField___anonunion_531_90.prev),(void *)(& __u_2.__c),8);
    #line 1885 
    struct sk_buff *tmp_7 = __u_2.__val;
  }
  #line 1887 
  return;
}

#line 1893  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static void skb_queue_splice(struct sk_buff_head *list, struct sk_buff_head *head)
{
  #line 1896 
  if (skb_queue_empty(list) == 0) {
    #line 1897 
    __skb_queue_splice(list,(struct sk_buff *)head,head->next);
    #line 1898 
    head->qlen += list->qlen;
  }
  #line 1900 
  return;
}

#line 1909  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static void skb_queue_splice_init(struct sk_buff_head *list, struct sk_buff_head *head)
{
  #line 1912 
  if (skb_queue_empty(list) == 0) {
    #line 1913 
    __skb_queue_splice(list,(struct sk_buff *)head,head->next);
    #line 1914 
    head->qlen += list->qlen;
    #line 1915 
    __skb_queue_head_init(list);
  }
  #line 1917 
  return;
}

#line 1962  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static void __skb_queue_after(struct sk_buff_head *list, struct sk_buff *prev, struct sk_buff *newsk)
{
  #line 1966 
  __skb_insert(newsk,prev,prev->__anonCompField_sk_buff_91.__anonCompField___anonunion_531_90.next,list);
  #line 1967 
  return;
}

#line 1972  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static void __skb_queue_before(struct sk_buff_head *list, struct sk_buff *next, struct sk_buff *newsk)
{
  #line 1976 
  __skb_insert(newsk,next->__anonCompField_sk_buff_91.__anonCompField___anonunion_531_90.prev,next,list);
  #line 1977 
  return;
}

#line 1989  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static void __skb_queue_head(struct sk_buff_head *list, struct sk_buff *newsk)
{
  #line 1992 
  __skb_queue_after(list,(struct sk_buff *)list,newsk);
  #line 1993 
  return;
}

#line 2006  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static void __skb_queue_tail(struct sk_buff_head *list, struct sk_buff *newsk)
{
  #line 2009 
  __skb_queue_before(list,(struct sk_buff *)list,newsk);
  #line 2010 
  return;
}

#line 2011 
#line 2011 
void skb_queue_tail(struct sk_buff_head *, struct sk_buff *);
#line 2018  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static void __skb_unlink(struct sk_buff *skb, struct sk_buff_head *list)
{
  #line 2020 
  struct sk_buff *next;
  #line 2020 
  struct sk_buff *prev;
  #line 2022 
  (list->qlen) --;
  #line 2023 
  next = skb->__anonCompField_sk_buff_91.__anonCompField___anonunion_531_90.next;
  #line 2024 
  prev = skb->__anonCompField_sk_buff_91.__anonCompField___anonunion_531_90.prev;
  #line 2025 
  skb->__anonCompField_sk_buff_91.__anonCompField___anonunion_531_90.prev = ((struct sk_buff *)0);
  #line 2025 
  skb->__anonCompField_sk_buff_91.__anonCompField___anonunion_531_90.next = ((struct sk_buff *)0);
  {
    #line 2027 
    union __anonunion___u_564 __u = {.__val = prev};
    #line 2026 
    __write_once_size((void *)(& next->__anonCompField_sk_buff_91.__anonCompField___anonunion_531_90.prev),(void *)(& __u.__c),8);
    #line 2026 
    struct sk_buff *tmp_2 = __u.__val;
  }
  {
    #line 2028 
    union __anonunion___u_566 __u_0 = {.__val = next};
    #line 2027 
    __write_once_size((void *)(& prev->__anonCompField_sk_buff_91.__anonCompField___anonunion_531_90.next),(void *)(& __u_0.__c),8);
    #line 2027 
    struct sk_buff *tmp_4 = __u_0.__val;
  }
  #line 2029 
  return;
}

#line 2038  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static struct sk_buff *__skb_dequeue(struct sk_buff_head *list)
{
  #line 2040 
  struct sk_buff *skb = skb_peek(list);
  #line 2041 
  if (skb != (struct sk_buff *)0) 
                                  #line 2042 
                                  __skb_unlink(skb,list);
  #line 2043 
  return skb;
}

#line 2070  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static unsigned int skb_headlen(struct sk_buff *skb)
{
  #line 2072 
  return skb->len - skb->data_len;
}

#line 2142 
#line 2142 
void skb_add_rx_frag(struct sk_buff *, int, struct page *, int, int, unsigned int);
#line 2189 
#line 2189 
void *skb_put(struct sk_buff *, unsigned int);
#line 2266 
#line 2266 
void *__pskb_pull_tail(struct sk_buff *, int);
#line 2282  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static bool pskb_may_pull(struct sk_buff *skb, unsigned int len)
{
  #line 2284 
  ;
  #line 2284 
  if ((long)(skb_headlen(skb) >= len) != 0L) 
                                             #line 2285 
                                             return (_Bool)1;
  #line 2286 
  if ((long)(skb->len < len) != 0L) 
                                    #line 2287 
                                    return (_Bool)0;
  #line 2288 
  ;
  #line 2288 
  ;
  #line 2288 
  return (_Bool)(__pskb_pull_tail(skb,(int)(len - skb_headlen(skb))) != (void *)0);
}

#line 2299  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static unsigned int skb_headroom(struct sk_buff *skb)
{
  #line 2301 
  return (unsigned int)(skb->data - skb->head);
}

#line 2458  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static unsigned char *skb_transport_header(struct sk_buff *skb)
{
  #line 2460 
  return skb->head + (unsigned long)skb->transport_header;
}

#line 2475  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static unsigned char *skb_network_header(struct sk_buff *skb)
{
  #line 2477 
  return skb->head + (unsigned long)skb->network_header;
}

#line 2559  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static int skb_transport_offset(struct sk_buff *skb)
{
  #line 2561 
  ;
  #line 2561 
  return (int)(skb_transport_header(skb) - skb->data);
}

#line 2820 
#line 2820 
struct sk_buff *__napi_alloc_skb(struct napi_struct *, unsigned int, gfp_t);
#line 2822  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static struct sk_buff *napi_alloc_skb(struct napi_struct *napi, unsigned int length)
{
  #line 2825 
  return __napi_alloc_skb(napi,length,2592U);
}

#line 3111  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static int __skb_cow(struct sk_buff *skb, unsigned int headroom, int cloned)
{
  #line 3114 
  int delta = 0;
  #line 3116 
  ;
  #line 3116 
  if (skb_headroom(skb) < headroom) {
    #line 3117 
    delta = (int)(headroom - skb_headroom(skb));
  }
  #line 3119 
  if (delta != 0 || cloned != 0) {
    #line 3120 
    return pskb_expand_head(skb,(delta + 63) & -64,0,2592U);
  }
  #line 3122 
  return 0;
}

#line 3152  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static int skb_cow_head(struct sk_buff *skb, unsigned int headroom)
{
  #line 3154 
  ;
  #line 3154 
  ;
  #line 3154 
  return __skb_cow(skb,headroom,skb_header_cloned(skb));
}

#line 3507 
#line 3507 
int skb_copy_bits(struct sk_buff *, int, void *, int);
#line 3767 
#line 3767 
void skb_clone_tx_timestamp(struct sk_buff *);
#line 3813 
#line 3813 
void skb_tstamp_tx(struct sk_buff *, struct skb_shared_hwtstamps *);
#line 3828  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static void skb_tx_timestamp(struct sk_buff *skb)
{
  #line 3830 
  skb_clone_tx_timestamp(skb);
  #line 3831 
  ;
  #line 3831 
  if (((int)((struct skb_shared_info *)skb_end_pointer(skb))->tx_flags & 2) != 0) 
    #line 3832 
    skb_tstamp_tx(skb,(struct skb_shared_hwtstamps *)0);
  #line 3833 
  return;
}

#line 86  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ethtool.h"
#line 86 
u32 ethtool_op_get_link(struct net_device *);
#line 638  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/interrupt.h"
__inline static void tasklet_unlock_wait(struct tasklet_struct *t)
{
  #line 640 
  while (1) {
    #line 640 
    if (! ((int)test_bit(1L,& t->state) != 0)) 
                                               #line 640 
                                               break;
    #line 641 
    ldv_inline_asm();
  }
  #line 642 
  return;
}

#line 655 
#line 1052  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
static void cif_tasklet_schedule(struct tasklet_struct *t);
#line 664  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/interrupt.h"
__inline static void tasklet_disable_nosync(struct tasklet_struct *t)
{
  #line 666 
  atomic_inc(& t->count);
  #line 670 
  return;
}

#line 670  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/interrupt.h"
__inline static void tasklet_disable(struct tasklet_struct *t)
{
  #line 672 
  tasklet_disable_nosync(t);
  #line 673 
  tasklet_unlock_wait(t);
  #line 674 
  ldv_inline_asm();
  #line 675 
  return;
}

#line 677  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/interrupt.h"
__inline static void tasklet_enable(struct tasklet_struct *t)
{
  #line 680 
  atomic_dec(& t->count);
  #line 681 
  return;
}

#line 683 
#line 683 
void tasklet_kill(struct tasklet_struct *);
#line 687 
#line 1169  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
static void cif_tasklet_init(struct tasklet_struct *t, void (*func)(unsigned long ), unsigned long data);
#line 423  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
#line 423 
void __napi_schedule(struct napi_struct *);
#line 431 
#line 431 
bool napi_schedule_prep(struct napi_struct *);
#line 440  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
__inline static void napi_schedule(struct napi_struct *n)
{
  #line 442 
  if ((int)napi_schedule_prep(n) != 0) 
                                       #line 443 
                                       __napi_schedule(n);
  #line 444 
  return;
}

#line 468 
#line 468 
bool napi_complete_done(struct napi_struct *, int);
#line 503 
#line 503 
void napi_disable(struct napi_struct *);
#line 512  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
__inline static void napi_enable(struct napi_struct *n)
{
  #line 514 
  int tmp_0;
  #line 514 
  if (test_bit(0L,& n->state)) 
                               #line 514 
                               tmp_0 = 0; else 
                                               #line 514 
                                               tmp_0 = 1;
  #line 514 
  if ((long)tmp_0 != 0L) {
    #line 515 
    ldv_inline_asm();
    #line 516 
    ldv_inline_asm();
    #line 517 
    ldv_inline_asm();
    #line 514 
    ;
  }
  #line 516 
  cif_clear_bit(0L,& n->state);
  #line 517 
  cif_clear_bit(3L,& n->state);
  #line 518 
  return;
}

#line 2132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
__inline static struct netdev_queue *netdev_get_tx_queue(struct net_device *dev, unsigned int index)
{
  #line 2135 
  return dev->_tx + (unsigned long)index;
}

#line 2203  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
__inline static void *netdev_priv(struct net_device *dev)
{
  #line 2205 
  return (void *)((char *)dev + 3328UL);
}

#line 2234 
#line 2234 
void netif_napi_add(struct net_device *, struct napi_struct *, int (*)(struct napi_struct *, int ), int);
#line 2679 
#line 1185  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
static void cif_free_netdev(struct net_device *dev);
#line 3094  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
#line 3094 
void netif_schedule_queue(struct netdev_queue *);
#line 3104  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
__inline static void netif_tx_start_queue(struct netdev_queue *dev_queue)
{
  #line 3106 
  cif_clear_bit(0L,& dev_queue->state);
  #line 3107 
  return;
}

#line 3115  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
__inline static void netif_start_queue(struct net_device *dev)
{
  #line 3117 
  netif_tx_start_queue(netdev_get_tx_queue(dev,0U));
  #line 3118 
  return;
}

#line 3130 
#line 3130 
void netif_tx_wake_queue(struct netdev_queue *);
#line 3139  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
__inline static void netif_wake_queue(struct net_device *dev)
{
  #line 3141 
  netif_tx_wake_queue(netdev_get_tx_queue(dev,0U));
  #line 3142 
  return;
}

#line 3154  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
__inline static void netif_tx_stop_queue(struct netdev_queue *dev_queue)
{
  #line 3156 
  cif_set_bit(0L,& dev_queue->state);
  #line 3157 
  return;
}

#line 3166  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
__inline static void netif_stop_queue(struct net_device *dev)
{
  #line 3168 
  netif_tx_stop_queue(netdev_get_tx_queue(dev,0U));
  #line 3169 
  return;
}

#line 3174  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
__inline static bool netif_tx_queue_stopped(struct netdev_queue *dev_queue)
{
  #line 3176 
  return test_bit(0L,& dev_queue->state);
}

#line 3185  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
__inline static bool netif_queue_stopped(struct net_device *dev)
{
  #line 3187 
  return netif_tx_queue_stopped(netdev_get_tx_queue(dev,0U));
}

#line 3387  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
__inline static bool netif_running(struct net_device *dev)
{
  #line 3389 
  return test_bit(0L,& dev->state);
}

#line 3617 
#line 3617 
void __dev_kfree_skb_any(struct sk_buff *, enum skb_free_reason);
#line 3648  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
__inline static void dev_kfree_skb_any(struct sk_buff *skb)
{
  #line 3650 
  __dev_kfree_skb_any(skb,(enum skb_free_reason)SKB_REASON_DROPPED);
  #line 3651 
  return;
}

#line 3665 
#line 3665 
gro_result_t napi_gro_receive(struct napi_struct *, struct sk_buff *);
#line 3710 
#line 3710 
int dev_set_mac_address(struct net_device *, struct sockaddr *, struct netlink_ext_ack *);
#line 3803  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
__inline static bool netif_carrier_ok(struct net_device *dev)
{
  #line 3805 
  int tmp_0;
  #line 3805 
  if ((int)test_bit(2L,& dev->state) != 0) 
                                           #line 3805 
                                           tmp_0 = 0; else 
                                                           #line 3805 
                                                           tmp_0 = 1;
  #line 3805 
  return (_Bool)(tmp_0 != 0);
}

#line 3812 
#line 3812 
void netif_carrier_on(struct net_device *);
#line 3814 
#line 3814 
void netif_carrier_off(struct net_device *);
#line 3881 
#line 3881 
void netif_device_detach(struct net_device *);
#line 3883 
#line 3883 
void netif_device_attach(struct net_device *);
#line 3934  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
__inline static void __netif_tx_lock(struct netdev_queue *txq, int cpu)
{
  #line 3936 
  cif_spin_lock__xmit_lock_of_netdev_queue(& txq->_xmit_lock);
  #line 3937 
  txq->xmit_lock_owner = cpu;
  #line 3938 
  return;
}

#line 3965  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
__inline static void __netif_tx_unlock(struct netdev_queue *txq)
{
  #line 3967 
  txq->xmit_lock_owner = -1;
  #line 3968 
  cif_spin_unlock__xmit_lock_of_netdev_queue(& txq->_xmit_lock);
  #line 3969 
  return;
}

#line 3998  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
__inline static void netif_tx_lock(struct net_device *dev)
{
  #line 4004 
  int pscr_ret__;
  #line 4000 
  unsigned int i;
  #line 4001 
  int cpu;
  #line 4003 
  cif_spin_lock_tx_global_lock_of_net_device(& dev->tx_global_lock);
  #line 4004 
  __this_cpu_preempt_check((char *)"read");
  {
    #line 4004 
    void *__vpp_verify = (void *)0;
    #line 4004 
    void *tmp = __vpp_verify;
  }
  #line 4004 
  switch (4UL) {
    #line 4004 
    int pfo_ret__;
    #line 4004 
    int pfo_ret___0;
    #line 4004 
    int pfo_ret___1;
    #line 4004 
    int pfo_ret___2;
    #line 4004 
    case (unsigned long)1: 
                           #line 4004 
    ;
    #line 4004 
    switch (4UL) {
      #line 4004 
      case (unsigned long)1: 
                             #line 4004 
      ;
      #line 4005 
      ldv_inline_asm();
      #line 4004 
      break;
      #line 4004 
      case (unsigned long)2: 
                             #line 4004 
      ;
      #line 4005 
      ldv_inline_asm();
      #line 4004 
      break;
      #line 4004 
      case (unsigned long)4: 
                             #line 4004 
      ;
      #line 4005 
      ldv_inline_asm();
      #line 4004 
      break;
      #line 4004 
      case (unsigned long)8: 
                             #line 4004 
      ;
      #line 4005 
      ldv_inline_asm();
      #line 4004 
      break;
      #line 4004 
      default: 
               #line 4004 
      ;
      #line 4004 
      __bad_percpu_size();
    }
    #line 4004 
    pscr_ret__ = pfo_ret__;
    #line 4004 
    break;
    #line 4004 
    case (unsigned long)2: 
                           #line 4004 
    ;
    #line 4004 
    switch (4UL) {
      #line 4004 
      case (unsigned long)1: 
                             #line 4004 
      ;
      #line 4005 
      ldv_inline_asm();
      #line 4004 
      break;
      #line 4004 
      case (unsigned long)2: 
                             #line 4004 
      ;
      #line 4005 
      ldv_inline_asm();
      #line 4004 
      break;
      #line 4004 
      case (unsigned long)4: 
                             #line 4004 
      ;
      #line 4005 
      ldv_inline_asm();
      #line 4004 
      break;
      #line 4004 
      case (unsigned long)8: 
                             #line 4004 
      ;
      #line 4005 
      ldv_inline_asm();
      #line 4004 
      break;
      #line 4004 
      default: 
               #line 4004 
      ;
      #line 4004 
      __bad_percpu_size();
    }
    #line 4004 
    pscr_ret__ = pfo_ret___0;
    #line 4004 
    break;
    #line 4004 
    case (unsigned long)4: 
                           #line 4004 
    ;
    #line 4004 
    switch (4UL) {
      #line 4004 
      case (unsigned long)1: 
                             #line 4004 
      ;
      #line 4005 
      ldv_inline_asm();
      #line 4004 
      break;
      #line 4004 
      case (unsigned long)2: 
                             #line 4004 
      ;
      #line 4005 
      ldv_inline_asm();
      #line 4004 
      break;
      #line 4004 
      case (unsigned long)4: 
                             #line 4004 
      ;
      #line 4005 
      ldv_inline_asm();
      #line 4004 
      break;
      #line 4004 
      case (unsigned long)8: 
                             #line 4004 
      ;
      #line 4005 
      ldv_inline_asm();
      #line 4004 
      break;
      #line 4004 
      default: 
               #line 4004 
      ;
      #line 4004 
      __bad_percpu_size();
    }
    #line 4004 
    pscr_ret__ = pfo_ret___1;
    #line 4004 
    break;
    #line 4004 
    case (unsigned long)8: 
                           #line 4004 
    ;
    #line 4004 
    switch (4UL) {
      #line 4004 
      case (unsigned long)1: 
                             #line 4004 
      ;
      #line 4005 
      ldv_inline_asm();
      #line 4004 
      break;
      #line 4004 
      case (unsigned long)2: 
                             #line 4004 
      ;
      #line 4005 
      ldv_inline_asm();
      #line 4004 
      break;
      #line 4004 
      case (unsigned long)4: 
                             #line 4004 
      ;
      #line 4005 
      ldv_inline_asm();
      #line 4004 
      break;
      #line 4004 
      case (unsigned long)8: 
                             #line 4004 
      ;
      #line 4005 
      ldv_inline_asm();
      #line 4004 
      break;
      #line 4004 
      default: 
               #line 4004 
      ;
      #line 4004 
      __bad_percpu_size();
    }
    #line 4004 
    pscr_ret__ = pfo_ret___2;
    #line 4004 
    break;
    #line 4004 
    default: 
             #line 4004 
    ;
    #line 4004 
    __bad_size_call_parameter();
    #line 4004 
    break;
  }
  #line 4004 
  cpu = pscr_ret__;
  #line 4005 
  i = 0U;
  #line 4005 
  while (dev->num_tx_queues > i) {
    {
      #line 4006 
      struct netdev_queue *txq = netdev_get_tx_queue(dev,i);
      #line 4014 
      __netif_tx_lock(txq,cpu);
      #line 4015 
      cif_set_bit(2L,& txq->state);
      #line 4016 
      __netif_tx_unlock(txq);
    }
    #line 4005 
    i ++;
  }
  #line 4018 
  return;
}

#line 4026  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
__inline static void netif_tx_unlock(struct net_device *dev)
{
  #line 4028 
  unsigned int i;
  #line 4030 
  i = 0U;
  #line 4030 
  while (dev->num_tx_queues > i) {
    {
      #line 4031 
      struct netdev_queue *txq = netdev_get_tx_queue(dev,i);
      #line 4037 
      cif_clear_bit(2L,& txq->state);
      #line 4038 
      netif_schedule_queue(txq);
    }
    #line 4030 
    i ++;
  }
  #line 4040 
  cif_spin_unlock_tx_global_lock_of_net_device(& dev->tx_global_lock);
  #line 4041 
  return;
}

#line 4131 
#line 1177  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
static int cif_register_netdev(struct net_device *dev);
#line 4132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
#line 1193  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
static void cif_unregister_netdev(struct net_device *dev);
#line 4373  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
#line 4373 
int skb_checksum_help(struct sk_buff *);
#line 4378 
#line 4378 
struct sk_buff *__skb_gso_segment(struct sk_buff *, netdev_features_t, bool);
#line 4397  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
__inline static struct sk_buff *skb_gso_segment(struct sk_buff *skb, netdev_features_t features)
{
  #line 4399 
  return __skb_gso_segment(skb,features,(_Bool)1);
}

#line 4575  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
__inline static void netif_set_gso_max_size(struct net_device *dev, unsigned int size)
{
  #line 4578 
  dev->gso_max_size = size;
  #line 4579 
  return;
}

#line 4750 
#line 4750 
void netdev_err(struct net_device *, char * , ...);
#line 4752 
#line 4752 
void netdev_warn(struct net_device *, char * , ...);
#line 4754 
#line 4754 
void netdev_notice(struct net_device *, char * , ...);
#line 4756 
#line 4756 
void netdev_info(struct net_device *, char * , ...);
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/etherdevice.h"
#line 32 
__be16 eth_type_trans(struct sk_buff *, struct net_device *);
#line 47 
#line 47 
int eth_validate_addr(struct net_device *);
#line 51 
#line 1161  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
static struct net_device *cif_alloc_etherdev_mqs(int sizeof_priv, unsigned int txqs, unsigned int rxqs);
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/etherdevice.h"
__inline static bool is_zero_ether_addr(u8 *addr)
{
  #line 101 
  return (_Bool)((*((u32 *)addr) | (unsigned int)*((u16 *)(addr + 4U))) == 0U);
}

#line 116  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/etherdevice.h"
__inline static bool is_multicast_ether_addr(u8 *addr)
{
  #line 119 
  u32 a = *((u32 *)addr);
  #line 126 
  return (_Bool)((a & 1U) != 0U);
}

#line 191  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/etherdevice.h"
__inline static bool is_valid_ether_addr(u8 *addr)
{
  #line 195 
  int tmp_1;
  #line 195 
  if (is_multicast_ether_addr(addr)) 
                                     #line 195 
                                     tmp_1 = 0;
  else {
    #line 195 
    if (is_zero_ether_addr(addr)) 
                                  #line 195 
                                  tmp_1 = 0; else 
                                                  #line 195 
                                                  tmp_1 = 1;
  }
  #line 195 
  return (_Bool)(tmp_1 != 0);
}

#line 223  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/etherdevice.h"
__inline static void eth_random_addr(u8 *addr)
{
  #line 225 
  get_random_bytes((void *)addr,6);
  #line 226 
  *addr = (unsigned char)((unsigned int)*addr & 254U);
  #line 227 
  *addr = (unsigned char)((unsigned int)*addr | 2U);
  #line 228 
  return;
}

#line 263  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/etherdevice.h"
__inline static void eth_hw_addr_random(struct net_device *dev)
{
  #line 265 
  dev->addr_assign_type = (unsigned char)1U;
  #line 266 
  eth_random_addr(dev->dev_addr);
  #line 267 
  return;
}

#line 276  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/etherdevice.h"
__inline static void ether_addr_copy(u8 *dst, u8 *src)
{
  #line 279 
  *((u32 *)dst) = *((u32 *)src);
  #line 280 
  *((u16 *)(dst + 4U)) = *((u16 *)(src + 4U));
  #line 281 
  return;
}

#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mii.h"
#line 34 
int mii_nway_restart(struct mii_if_info *);
#line 36 
#line 36 
void mii_ethtool_get_link_ksettings(struct mii_if_info *, struct ethtool_link_ksettings *);
#line 51  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mii.h"
__inline static struct mii_ioctl_data *if_mii(struct ifreq *rq)
{
  #line 53 
  return (struct mii_ioctl_data *)(& rq->ifr_ifru);
}

#line 105  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pm_runtime.h"
__inline static void pm_runtime_mark_last_busy(struct device *dev)
{
  #line 108 
  union __anonunion___u_697 __u = {.__val = ktime_get_mono_fast_ns()};
  #line 107 
  __write_once_size((void *)(& dev->power.last_busy),(void *)(& __u.__c),8);
  #line 107 
  u64 tmp_2 = __u.__val;
  #line 109 
  return;
}

#line 263  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
__inline static void *usb_get_intfdata(struct usb_interface *intf)
{
  #line 265 
  return dev_get_drvdata(& intf->dev);
}

#line 268  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
__inline static void usb_set_intfdata(struct usb_interface *intf, void *data)
{
  #line 270 
  dev_set_drvdata(& intf->dev,data);
  #line 271 
  return;
}

#line 714  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
__inline static struct usb_device *interface_to_usbdev(struct usb_interface *intf)
{
  #line 716 
  void *__mptr;
  #line 716 
  __mptr = (void *)intf->dev.parent;
  #line 716 
  return ((struct usb_device *)(__mptr + 18446744073709551456U));
}

#line 746 
#line 1153  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
static int cif_usb_reset_device(struct usb_device *dev);
#line 745  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
#line 745 
void usb_queue_reset_device(struct usb_interface *);
#line 764 
#line 764 
int usb_autopm_get_interface(struct usb_interface *);
#line 765 
#line 765 
void usb_autopm_put_interface(struct usb_interface *);
#line 766 
#line 766 
int usb_autopm_get_interface_async(struct usb_interface *);
#line 767 
#line 767 
void usb_autopm_put_interface_async(struct usb_interface *);
#line 771  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
__inline static void usb_mark_last_busy(struct usb_device *udev)
{
  #line 773 
  pm_runtime_mark_last_busy(& udev->dev);
  #line 774 
  return;
}

#line 803 
#line 803 
void usb_enable_lpm(struct usb_device *);
#line 911  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
__inline static int usb_make_path(struct usb_device *dev, char *buf, size_t size)
{
  #line 913 
  int actual;
  #line 916 
  int tmp;
  #line 914 
  actual = snprintf(buf,size,(char *)"usb-%s-%s",(dev->bus)->bus_name,(char *)(& dev->devpath));
  #line 916 
  if ((int)size > actual) 
                          #line 916 
                          tmp = actual; else 
                                             #line 916 
                                             tmp = -1;
  #line 916 
  return tmp;
}

#line 1276 
#line 1201  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
static int cif_usb_register_driver(struct usb_driver *ldv_func_arg1, struct module *ldv_func_arg2, char *ldv_func_arg3);
#line 1282  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
#line 1209  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
static void cif_usb_deregister(struct usb_driver *ldv_func_arg1);
#line 1636  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
__inline static void usb_fill_bulk_urb(struct urb *urb, struct usb_device *dev, unsigned int pipe, void *transfer_buffer, int buffer_length, void (*complete_fn)(struct urb *), void *context)
{
  #line 1644 
  urb->dev = dev;
  #line 1645 
  urb->pipe = pipe;
  #line 1646 
  urb->transfer_buffer = transfer_buffer;
  #line 1647 
  urb->transfer_buffer_length = (unsigned int)buffer_length;
  #line 1648 
  urb->complete = complete_fn;
  #line 1649 
  urb->context = context;
  #line 1650 
  return;
}

#line 1677  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
__inline static void usb_fill_int_urb(struct urb *urb, struct usb_device *dev, unsigned int pipe, void *transfer_buffer, int buffer_length, void (*complete_fn)(struct urb *), void *context, int interval)
{
  #line 1686 
  urb->dev = dev;
  #line 1687 
  urb->pipe = pipe;
  #line 1688 
  urb->transfer_buffer = transfer_buffer;
  #line 1689 
  urb->transfer_buffer_length = (unsigned int)buffer_length;
  #line 1690 
  urb->complete = complete_fn;
  #line 1691 
  urb->context = context;
  #line 1693 
  if (dev->speed == (unsigned int)USB_SPEED_HIGH || dev->speed > (unsigned int)USB_SPEED_WIRELESS) {
    #line 1695 
    int __UNIQUE_ID___x438;
    #line 1695 
    int tmp_1;
    {
      #line 1695 
      int __UNIQUE_ID___x436;
      #line 1695 
      int tmp;
      {
        #line 1695 
        __UNIQUE_ID___x436 = interval;
        #line 1695 
        int __UNIQUE_ID___y437 = 1;
        #line 1695 
        if (__UNIQUE_ID___x436 > __UNIQUE_ID___y437) 
                                                     #line 1695 
                                                     tmp = __UNIQUE_ID___x436; else 
                                                                    #line 1695 
                                                                    tmp = __UNIQUE_ID___y437;
        }
      #line 1695 
      __UNIQUE_ID___x438 = tmp;
      #line 1695 
      int __UNIQUE_ID___y439 = 16;
      #line 1695 
      if (__UNIQUE_ID___x438 < __UNIQUE_ID___y439) 
                                                   #line 1695 
                                                   tmp_1 = __UNIQUE_ID___x438; else 
                                                                    #line 1695 
                                                                    tmp_1 = __UNIQUE_ID___y439;
      }
    #line 1695 
    interval = tmp_1;
    #line 1697 
    urb->interval = 1 << (interval + -1);
  }
  else 
       #line 1699 
       urb->interval = interval;
  #line 1702 
  urb->start_frame = -1;
  #line 1703 
  return;
}

#line 1706 
#line 1706 
struct urb *usb_alloc_urb(int, gfp_t);
#line 1707 
#line 1707 
void usb_free_urb(struct urb *);
#line 1711 
#line 1068  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
static int cif_usb_submit_urb(struct urb *urb, gfp_t mem_flags);
#line 1713  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
#line 1112  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
static void cif_usb_kill_urb(struct urb *urb);
#line 1783  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
#line 1783 
int usb_control_msg(struct usb_device *, unsigned int, __u8, __u8, __u16, __u16, void *, __u16, int);
#line 1821 
#line 1821 
int usb_driver_set_configuration(struct usb_device *, int);
#line 1925  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
__inline static unsigned int __create_pipe(struct usb_device *dev, unsigned int endpoint)
{
  #line 1928 
  return (unsigned int)(dev->devnum << 8) | (endpoint << 15);
}

#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bitrev.h"
#line 15 
extern u8 byte_rev_table[256U];
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bitrev.h"
__inline static u8 __bitrev8(u8 byte)
{
  #line 18 
  return byte_rev_table[(int)byte];
}

#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bitrev.h"
__inline static u16 __bitrev16(u16 x)
{
  #line 23 
  return (unsigned short)(((int)__bitrev8((unsigned char)((int)((unsigned char)x))) << 8) | (int)__bitrev8((unsigned char)((int)((unsigned char)((int)x >> 8)))));
}

#line 26  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bitrev.h"
__inline static u32 __bitrev32(u32 x)
{
  #line 28 
  return (unsigned int)(((int)__bitrev16((unsigned short)((int)((unsigned short)x))) << 16) | (int)__bitrev16((unsigned short)((int)((unsigned short)(x >> 16)))));
}

#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/crc32.h"
#line 11 
u32 crc32_le(u32, unsigned char *, size_t);
#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rtnetlink.h"
#line 33 
void rtnl_lock(void);
#line 34 
#line 34 
void rtnl_unlock(void);
#line 300  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/if_vlan.h"
__inline static bool eth_type_vlan(__be16 ethertype)
{
  #line 302 
  switch ((int)ethertype) {
    #line 303 
    case 129: 
              #line 303 
    ;
    #line 304 
    case 43144: 
                #line 304 
    ;
    #line 305 
    return (_Bool)1;
    #line 306 
    default: 
             #line 306 
    ;
    #line 307 
    return (_Bool)0;
  }
}

#line 510  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/if_vlan.h"
__inline static void __vlan_hwaccel_put_tag(struct sk_buff *skb, __be16 vlan_proto, u16 vlan_tci)
{
  #line 513 
  skb->vlan_proto = vlan_proto;
  #line 514 
  skb->vlan_tci = vlan_tci;
  #line 515 
  skb->vlan_present = (unsigned char)1U;
  #line 516 
  return;
}

#line 580  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/if_vlan.h"
__inline static __be16 __vlan_get_protocol(struct sk_buff *skb, __be16 type, int *depth)
{
  #line 583 
  unsigned int vlan_depth = (unsigned int)skb->mac_len;
  #line 589 
  if ((int)eth_type_vlan((unsigned short)((int)type)) != 0) {
    #line 590 
    if (vlan_depth != 0U) {
      #line 591 
      int __ret_warn_on;
      #line 591 
      __ret_warn_on = vlan_depth <= 3U;
      #line 591 
      if ((long)(__ret_warn_on != 0) != 0L) {
        #line 592 
        ldv_inline_asm();
        #line 593 
        ldv_inline_asm();
      }
      #line 591 
      if ((long)((long)(__ret_warn_on != 0)) != 0L) 
                                                    #line 592 
                                                    return (unsigned short)0U;
      #line 593 
      vlan_depth += 4294967292U;
    }
    else 
         #line 595 
         vlan_depth = 14U;
    #line 597 
    while (1) {
      {
        #line 598 
        struct vlan_hdr *vh;
        #line 600 
        int tmp_1;
        #line 600 
        if (pskb_may_pull(skb,vlan_depth + 4U)) 
                                                #line 600 
                                                tmp_1 = 0; else 
                                                                #line 600 
                                                                tmp_1 = 1;
        #line 600 
        if ((long)tmp_1 != 0L) 
                               #line 602 
                               return (unsigned short)0U;
        #line 604 
        vh = (struct vlan_hdr *)(skb->data + (unsigned long)vlan_depth);
        #line 605 
        type = vh->h_vlan_encapsulated_proto;
        #line 606 
        vlan_depth += 4U;
      }
      #line 607 
      if (! ((int)eth_type_vlan((unsigned short)((int)type)) != 0)) 
                                                                    #line 597 
                                                                    break;
    }
  }
  #line 610 
  if (depth != (int *)0) 
                         #line 611 
                         *depth = (int)vlan_depth;
  #line 613 
  return type;
}

#line 623  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/if_vlan.h"
__inline static __be16 vlan_get_protocol(struct sk_buff *skb)
{
  #line 625 
  return __vlan_get_protocol(skb,(unsigned short)((int)skb->protocol),(int *)0);
}

#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ip.h"
__inline static struct iphdr *ip_hdr(struct sk_buff *skb)
{
  #line 21 
  return (struct iphdr *)skb_network_header(skb);
}

#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/tcp.h"
__inline static struct tcphdr *tcp_hdr(struct sk_buff *skb)
{
  #line 26 
  return (struct tcphdr *)skb_transport_header(skb);
}

#line 92  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ipv6.h"
__inline static struct ipv6hdr *ipv6_hdr(struct sk_buff *skb)
{
  #line 94 
  return (struct ipv6hdr *)skb_network_header(skb);
}

#line 54  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/ip6_checksum.h"
__inline static __sum16 tcp_v6_check(int len, struct in6_addr *saddr, struct in6_addr *daddr, __wsum base)
{
  #line 59 
  return csum_ipv6_magic(saddr,daddr,(unsigned int)len,(unsigned char)6,base);
}

#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mdio.h"
__inline static u32 mmd_eee_cap_to_ethtool_sup_t(u16 eee_cap)
{
  #line 199 
  u32 supported = 0U;
  #line 201 
  if (((int)eee_cap & 2) != 0) 
                               #line 202 
                               supported |= 8U;
  #line 203 
  if (((int)eee_cap & 4) != 0) 
                               #line 204 
                               supported |= 32U;
  #line 205 
  if (((int)eee_cap & 8) != 0) 
                               #line 206 
                               supported |= 4096U;
  #line 207 
  if (((int)eee_cap & 16) != 0) 
                                #line 208 
                                supported |= 131072U;
  #line 209 
  if (((int)eee_cap & 32) != 0) 
                                #line 210 
                                supported |= 262144U;
  #line 211 
  if (((int)eee_cap & 64) != 0) 
                                #line 212 
                                supported |= 524288U;
  #line 214 
  return supported;
}

#line 253  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mdio.h"
__inline static u16 ethtool_adv_to_mmd_eee_adv_t(u32 adv)
{
  #line 255 
  u16 reg = (unsigned short)0U;
  #line 257 
  if (((unsigned long)adv & 8UL) != 0UL) 
                                         #line 258 
                                         reg = (unsigned short)((unsigned int)reg | 2U);
  #line 259 
  if (((unsigned long)adv & 32UL) != 0UL) 
                                          #line 260 
                                          reg = (unsigned short)((unsigned int)reg | 4U);
  #line 261 
  if (((unsigned long)adv & 4096UL) != 0UL) 
                                            #line 262 
                                            reg = (unsigned short)((unsigned int)reg | 8U);
  #line 263 
  if (((unsigned long)adv & 131072UL) != 0UL) 
                                              #line 264 
                                              reg = (unsigned short)((unsigned int)reg | 16U);
  #line 265 
  if (((unsigned long)adv & 262144UL) != 0UL) 
                                              #line 266 
                                              reg = (unsigned short)((unsigned int)reg | 32U);
  #line 267 
  if (((unsigned long)adv & 524288UL) != 0UL) 
                                              #line 268 
                                              reg = (unsigned short)((unsigned int)reg | 64U);
  #line 270 
  return reg;
}

#line 482  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/suspend.h"
#line 482 
int register_pm_notifier(struct notifier_block *);
#line 483 
#line 483 
int unregister_pm_notifier(struct notifier_block *);
#line 547  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/acpi/acpixf.h"
#line 547 
acpi_status acpi_evaluate_object(acpi_handle, acpi_string, struct acpi_object_list *, struct acpi_buffer *);
#line 45  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/firmware.h"
#line 1127  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
static int cif_request_firmware(struct firmware **fw, char *name, struct device *device);
#line 57  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/firmware.h"
#line 1120  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
static void cif_release_firmware(struct firmware *fw);
#line 1025  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static unsigned int agg_buf_sz = 16384U;
#line 1031  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static int get_registers(struct r8152 *tp, u16 value, u16 index, u16 size, void *data)
{
  #line 1033 
  int ret;
  #line 1034 
  void *tmp;
  #line 1036 
  tmp = kmalloc((unsigned long)size,3264U);
  #line 1037 
  if (tmp == (void *)0) 
                        #line 1038 
                        return -12;
  #line 1040 
  ;
  #line 1040 
  ;
  #line 1040 
  ;
  #line 1040 
  ;
  #line 1040 
  ;
  #line 1040 
  ret = usb_control_msg(tp->udev,__create_pipe(tp->udev,0U) | 2147483776U,(unsigned char)5,(unsigned char)192,(unsigned short)((int)value),(unsigned short)((int)index),tmp,(unsigned short)((int)size),500);
  #line 1043 
  if (ret < 0) 
               #line 1044 
               memset(data,255,(unsigned long)size); else 
                                                          #line 1046 
                                                          memcpy(data,tmp,(unsigned long)size);
  #line 1048 
  kfree(tmp);
  #line 1050 
  return ret;
}

#line 1054  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static int set_registers(struct r8152 *tp, u16 value, u16 index, u16 size, void *data)
{
  #line 1056 
  int ret;
  #line 1057 
  void *tmp;
  #line 1059 
  tmp = cif_kmemdup(data,(unsigned long)size,3264U);
  #line 1060 
  if (tmp == (void *)0) 
                        #line 1061 
                        return -12;
  #line 1063 
  ;
  #line 1063 
  ;
  #line 1063 
  ;
  #line 1063 
  ;
  #line 1063 
  ;
  #line 1063 
  ret = usb_control_msg(tp->udev,__create_pipe(tp->udev,0U) | 2147483648U,(unsigned char)5,(unsigned char)64,(unsigned short)((int)value),(unsigned short)((int)index),tmp,(unsigned short)((int)size),500);
  #line 1067 
  kfree(tmp);
  #line 1069 
  return ret;
}

#line 1072  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static void rtl_set_unplug(struct r8152 *tp)
{
  #line 1074 
  if ((tp->udev)->state == (unsigned int)USB_STATE_NOTATTACHED) 
                                                                #line 1075 
                                                                cif_set_bit(0L,& tp->flags);
  #line 1080 
  return;
}

#line 1080  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static int generic_ocp_read(struct r8152 *tp, u16 index, u16 size, void *data, u16 type)
{
  #line 1083 
  u16 limit = (unsigned short)64U;
  #line 1084 
  int ret = 0;
  #line 1086 
  if ((int)test_bit(0L,& tp->flags) != 0) 
                                          #line 1087 
                                          return -19;
  #line 1090 
  if (((((int)size & 3) != 0 || (unsigned int)size == 0U) || ((int)index & 3) != 0) || data == (void *)0) 
    #line 1091 
    return -1;
  #line 1093 
  if ((unsigned int)index + (unsigned int)size > 65535U) 
                                                         #line 1094 
                                                         return -1;
  #line 1096 
  while ((unsigned int)size != 0U) 
    #line 1097 
    if ((int)size > (int)limit) {
      #line 1098 
      ret = get_registers(tp,(unsigned short)((int)index),(unsigned short)((int)type),(unsigned short)((int)limit),data);
      #line 1099 
      if (ret < 0) 
                   #line 1100 
                   break;
      #line 1102 
      index = (unsigned short)((int)index + (int)limit);
      #line 1103 
      data += (unsigned long)limit;
      #line 1104 
      size = (unsigned short)((int)size - (int)limit);
    }
    else {
      #line 1106 
      ret = get_registers(tp,(unsigned short)((int)index),(unsigned short)((int)type),(unsigned short)((int)size),data);
      #line 1107 
      if (ret < 0) 
                   #line 1108 
                   break;
      #line 1110 
      index = (unsigned short)((int)index + (int)size);
      #line 1111 
      data += (unsigned long)size;
      #line 1112 
      size = (unsigned short)0U;
      #line 1113 
      break;
    }
  #line 1117 
  if (ret == -19) 
                  #line 1118 
                  rtl_set_unplug(tp);
  #line 1120 
  return ret;
}

#line 1123  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static int generic_ocp_write(struct r8152 *tp, u16 index, u16 byteen, u16 size, void *data, u16 type)
{
  #line 1126 
  int ret;
  #line 1127 
  u16 byteen_start;
  #line 1127 
  u16 byteen_end;
  #line 1127 
  u16 byen;
  #line 1128 
  u16 limit = (unsigned short)512U;
  #line 1130 
  if ((int)test_bit(0L,& tp->flags) != 0) 
                                          #line 1131 
                                          return -19;
  #line 1134 
  if (((((int)size & 3) != 0 || (unsigned int)size == 0U) || ((int)index & 3) != 0) || data == (void *)0) 
    #line 1135 
    return -1;
  #line 1137 
  if ((unsigned int)index + (unsigned int)size > 65535U) 
                                                         #line 1138 
                                                         return -1;
  #line 1140 
  byteen_start = (unsigned short)((unsigned int)byteen & 15U);
  #line 1141 
  byteen_end = (unsigned short)((unsigned int)byteen & 240U);
  #line 1143 
  byen = (unsigned short)(((int)byteen_start << 4) | (int)byteen_start);
  #line 1144 
  ret = set_registers(tp,(unsigned short)((int)index),(unsigned short)((int)type | (int)byen),(unsigned short)4,data);
  #line 1145 
  if (ret < 0) 
               #line 1146 
               goto error1;
  #line 1148 
  index = (unsigned short)((unsigned int)index + 4U);
  #line 1149 
  data += 4U;
  #line 1150 
  size = (unsigned short)((unsigned int)size + 65532U);
  #line 1152 
  if ((unsigned int)size != 0U) {
    #line 1153 
    size = (unsigned short)((unsigned int)size + 65532U);
    #line 1155 
    while ((unsigned int)size != 0U) 
      #line 1156 
      if ((int)size > (int)limit) {
        #line 1157 
        ret = set_registers(tp,(unsigned short)((int)index),(unsigned short)((int)((unsigned int)type | 255U)),(unsigned short)((int)limit),data);
        #line 1160 
        if (ret < 0) 
                     #line 1161 
                     goto error1;
        #line 1163 
        index = (unsigned short)((int)index + (int)limit);
        #line 1164 
        data += (unsigned long)limit;
        #line 1165 
        size = (unsigned short)((int)size - (int)limit);
      }
      else {
        #line 1167 
        ret = set_registers(tp,(unsigned short)((int)index),(unsigned short)((int)((unsigned int)type | 255U)),(unsigned short)((int)size),data);
        #line 1170 
        if (ret < 0) 
                     #line 1171 
                     goto error1;
        #line 1173 
        index = (unsigned short)((int)index + (int)size);
        #line 1174 
        data += (unsigned long)size;
        #line 1175 
        size = (unsigned short)0U;
        #line 1176 
        break;
      }
    #line 1180 
    byen = (unsigned short)(((int)byteen_end >> 4) | (int)byteen_end);
    #line 1181 
    ret = set_registers(tp,(unsigned short)((int)index),(unsigned short)((int)type | (int)byen),(unsigned short)4,data);
    #line 1182 
    if (ret < 0) 
                 #line 1183 
                 goto error1;
  }
  #line 1186 
  error1: 
          #line 1186 
  ;
  #line 1187 
  if (ret == -19) 
                  #line 1188 
                  rtl_set_unplug(tp);
  #line 1190 
  return ret;
}

#line 1194  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
__inline static int pla_ocp_read(struct r8152 *tp, u16 index, u16 size, void *data)
{
  #line 1196 
  return generic_ocp_read(tp,(unsigned short)((int)index),
                       (unsigned short)((int)size),data,(unsigned short)256);
}

#line 1200  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
__inline static int pla_ocp_write(struct r8152 *tp, u16 index, u16 byteen, u16 size, void *data)
{
  #line 1202 
  return generic_ocp_write(tp,(unsigned short)((int)index),
                        (unsigned short)((int)byteen),
                        (unsigned short)((int)size),data,(unsigned short)256);
}

#line 1206  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
__inline static int usb_ocp_write(struct r8152 *tp, u16 index, u16 byteen, u16 size, void *data)
{
  #line 1208 
  return generic_ocp_write(tp,(unsigned short)((int)index),
                        (unsigned short)((int)byteen),
                        (unsigned short)((int)size),data,(unsigned short)0);
}

#line 1211  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static u32 ocp_read_dword(struct r8152 *tp, u16 type, u16 index)
{
  #line 1213 
  __le32 data;
  #line 1215 
  generic_ocp_read(tp,(unsigned short)((int)index),(unsigned short)4,(void *)(& data),(unsigned short)((int)type));
  #line 1217 
  return data;
}

#line 1220  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static void ocp_write_dword(struct r8152 *tp, u16 type, u16 index, u32 data)
{
  #line 1222 
  __le32 tmp = data;
  #line 1224 
  generic_ocp_write(tp,(unsigned short)((int)index),(unsigned short)255,(unsigned short)4,(void *)(& tmp),(unsigned short)((int)type));
  #line 1225 
  return;
}

#line 1227  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static u16 ocp_read_word(struct r8152 *tp, u16 type, u16 index)
{
  #line 1229 
  u32 data;
  #line 1230 
  __le32 tmp;
  #line 1231 
  u16 byen = (unsigned short)51U;
  #line 1232 
  u8 shift = (unsigned char)((unsigned int)((unsigned char)index) & 2U);
  #line 1234 
  index = (unsigned short)((unsigned int)index & 65532U);
  #line 1235 
  byen = (unsigned short)((int)byen << (int)shift);
  #line 1237 
  generic_ocp_read(tp,(unsigned short)((int)index),(unsigned short)4,(void *)(& tmp),(unsigned short)((int)type | (int)byen));
  #line 1239 
  data = tmp;
  #line 1240 
  data >>= (int)shift * 8;
  #line 1241 
  data &= 65535U;
  #line 1243 
  return (unsigned short)data;
}

#line 1246  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static void ocp_write_word(struct r8152 *tp, u16 type, u16 index, u32 data)
{
  #line 1249 
  __le32 tmp;
  #line 1248 
  u32 mask = 65535U;
  #line 1250 
  u16 byen = (unsigned short)51U;
  #line 1251 
  u8 shift = (unsigned char)((unsigned int)((unsigned char)index) & 2U);
  #line 1253 
  data &= mask;
  #line 1255 
  if (((int)index & 2) != 0) {
    #line 1256 
    byen = (unsigned short)((int)byen << (int)shift);
    #line 1257 
    mask <<= (int)shift * 8;
    #line 1258 
    data <<= (int)shift * 8;
    #line 1259 
    index = (unsigned short)((unsigned int)index & 65532U);
  }
  #line 1262 
  tmp = data;
  #line 1264 
  generic_ocp_write(tp,(unsigned short)((int)index),(unsigned short)((int)byen),(unsigned short)4,(void *)(& tmp),(unsigned short)((int)type));
  #line 1265 
  return;
}

#line 1267  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static u8 ocp_read_byte(struct r8152 *tp, u16 type, u16 index)
{
  #line 1269 
  u32 data;
  #line 1270 
  __le32 tmp;
  #line 1271 
  u8 shift = (unsigned char)((unsigned int)((unsigned char)index) & 3U);
  #line 1273 
  index = (unsigned short)((unsigned int)index & 65532U);
  #line 1275 
  generic_ocp_read(tp,(unsigned short)((int)index),(unsigned short)4,(void *)(& tmp),(unsigned short)((int)type));
  #line 1277 
  data = tmp;
  #line 1278 
  data >>= (int)shift * 8;
  #line 1279 
  data &= 255U;
  #line 1281 
  return (unsigned char)data;
}

#line 1284  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static void ocp_write_byte(struct r8152 *tp, u16 type, u16 index, u32 data)
{
  #line 1287 
  __le32 tmp;
  #line 1286 
  u32 mask = 255U;
  #line 1288 
  u16 byen = (unsigned short)17U;
  #line 1289 
  u8 shift = (unsigned char)((unsigned int)((unsigned char)index) & 3U);
  #line 1291 
  data &= mask;
  #line 1293 
  if (((int)index & 3) != 0) {
    #line 1294 
    byen = (unsigned short)((int)byen << (int)shift);
    #line 1295 
    mask <<= (int)shift * 8;
    #line 1296 
    data <<= (int)shift * 8;
    #line 1297 
    index = (unsigned short)((unsigned int)index & 65532U);
  }
  #line 1300 
  tmp = data;
  #line 1302 
  generic_ocp_write(tp,(unsigned short)((int)index),(unsigned short)((int)byen),(unsigned short)4,(void *)(& tmp),(unsigned short)((int)type));
  #line 1303 
  return;
}

#line 1305  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static u16 ocp_reg_read(struct r8152 *tp, u16 addr)
{
  #line 1307 
  u16 ocp_base;
  #line 1307 
  u16 ocp_index;
  #line 1309 
  ocp_base = (unsigned short)((unsigned int)addr & 61440U);
  #line 1310 
  if ((int)tp->ocp_base != (int)ocp_base) {
    #line 1311 
    ocp_write_word(tp,(unsigned short)256,(unsigned short)59500,(unsigned int)ocp_base);
    #line 1312 
    tp->ocp_base = ocp_base;
  }
  #line 1315 
  ocp_index = (unsigned short)(((int)addr & 4095) | -20480);
  #line 1316 
  return ocp_read_word(tp,(unsigned short)256,(unsigned short)((int)ocp_index));
}

#line 1319  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static void ocp_reg_write(struct r8152 *tp, u16 addr, u16 data)
{
  #line 1321 
  u16 ocp_base;
  #line 1321 
  u16 ocp_index;
  #line 1323 
  ocp_base = (unsigned short)((unsigned int)addr & 61440U);
  #line 1324 
  if ((int)tp->ocp_base != (int)ocp_base) {
    #line 1325 
    ocp_write_word(tp,(unsigned short)256,(unsigned short)59500,(unsigned int)ocp_base);
    #line 1326 
    tp->ocp_base = ocp_base;
  }
  #line 1329 
  ocp_index = (unsigned short)(((int)addr & 4095) | -20480);
  #line 1330 
  ocp_write_word(tp,(unsigned short)256,(unsigned short)((int)ocp_index),(unsigned int)data);
  #line 1331 
  return;
}

#line 1333  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
__inline static void r8152_mdio_write(struct r8152 *tp, u32 reg_addr, u32 value)
{
  #line 1335 
  ocp_reg_write(tp,(unsigned short)((int)((unsigned int)((unsigned short)(reg_addr + 20992U)) * 2U)),(unsigned short)((int)((unsigned short)value)));
  #line 1336 
  return;
}

#line 1338  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
__inline static int r8152_mdio_read(struct r8152 *tp, u32 reg_addr)
{
  #line 1340 
  return (int)ocp_reg_read(tp,
                   (unsigned short)((int)((unsigned int)((unsigned short)(
                                          reg_addr + 20992U)) * 2U)));
}

#line 1343  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static void sram_write(struct r8152 *tp, u16 addr, u16 data)
{
  #line 1345 
  ocp_reg_write(tp,(unsigned short)42038,(unsigned short)((int)addr));
  #line 1346 
  ocp_reg_write(tp,(unsigned short)42040,(unsigned short)((int)data));
  #line 1347 
  return;
}

#line 1349  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static u16 sram_read(struct r8152 *tp, u16 addr)
{
  #line 1351 
  ocp_reg_write(tp,(unsigned short)42038,(unsigned short)((int)addr));
  #line 1352 
  return ocp_reg_read(tp,(unsigned short)42040);
}

#line 1355  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static int read_mii_word(struct net_device *netdev, int phy_id, int reg)
{
  #line 1358 
  int ret;
  #line 1357 
  struct r8152 *tp = netdev_priv(netdev);
  #line 1360 
  if ((int)test_bit(0L,& tp->flags) != 0) 
                                          #line 1361 
                                          return -19;
  #line 1363 
  if (phy_id != 32) 
                    #line 1364 
                    return -22;
  #line 1366 
  ret = r8152_mdio_read(tp,(unsigned int)reg);
  #line 1368 
  return ret;
}

#line 1372  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static void write_mii_word(struct net_device *netdev, int phy_id, int reg, int val)
{
  #line 1374 
  struct r8152 *tp = netdev_priv(netdev);
  #line 1376 
  if ((int)test_bit(0L,& tp->flags) != 0) 
                                          #line 1377 
                                          return;
  #line 1379 
  if (phy_id != 32) 
                    #line 1380 
                    return;
  #line 1382 
  r8152_mdio_write(tp,(unsigned int)reg,(unsigned int)val);
  #line 1383 
  return;
}

#line 1386 
#line 2471 
static int r8152_submit_rx(struct r8152 *tp, struct rx_agg *agg, gfp_t mem_flags);
#line 1388  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static int rtl8152_set_mac_address(struct net_device *netdev, void *p)
{
  #line 1390 
  struct r8152 *tp = netdev_priv(netdev);
  #line 1391 
  struct sockaddr *addr = (struct sockaddr *)p;
  #line 1392 
  int ret = -99;
  #line 1394 
  if (! is_valid_ether_addr((u8 *)(& addr->sa_data))) 
                                                      #line 1395 
                                                      goto out1;
  #line 1397 
  ret = usb_autopm_get_interface(tp->intf);
  #line 1398 
  if (ret < 0) 
               #line 1399 
               goto out1;
  #line 1401 
  cif_mutex_lock_control_of_r8152(& tp->control);
  #line 1403 
  memcpy((void *)netdev->dev_addr,(void *)(& addr->sa_data),(unsigned long)netdev->addr_len);
  #line 1405 
  ocp_write_byte(tp,(unsigned short)256,(unsigned short)59420,192U);
  #line 1406 
  pla_ocp_write(tp,(unsigned short)49152,(unsigned short)63,(unsigned short)8,(void *)(& addr->sa_data));
  #line 1407 
  ocp_write_byte(tp,(unsigned short)256,(unsigned short)59420,0U);
  #line 1409 
  cif_mutex_unlock_control_of_r8152(& tp->control);
  #line 1411 
  usb_autopm_put_interface(tp->intf);
  #line 1412 
  out1: 
        #line 1412 
  ;
  #line 1413 
  return ret;
}

#line 1420  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static int vendor_mac_passthru_addr_read(struct r8152 *tp, struct sockaddr *sa)
{
  #line 1422 
  acpi_status status;
  #line 1424 
  union acpi_object *obj;
  #line 1426 
  u32 ocp_data;
  #line 1427 
  unsigned char buf[6U];
  #line 1428 
  char *mac_obj_name;
  #line 1429 
  acpi_object_type mac_obj_type;
  #line 1430 
  int mac_strlen;
  #line 1423 
  struct acpi_buffer buffer = {.length = 18446744073709551615ULL, .pointer = (void *)0};
  #line 1425 
  int ret = -22;
  #line 1432 
  if ((int)test_bit(9L,& tp->flags) != 0) {
    #line 1433 
    mac_obj_name = (char *)"\\MACA";
    #line 1434 
    mac_obj_type = 2U;
    #line 1435 
    mac_strlen = 22;
  }
  else {
    #line 1438 
    ocp_data = (unsigned int)ocp_read_word(tp,(unsigned short)0,(unsigned short)55322);
    #line 1439 
    if ((ocp_data & 65248U) == 4096U) {
      #line 1441 
      ocp_data = (unsigned int)ocp_read_byte(tp,(unsigned short)0,(unsigned short)53211);
      #line 1442 
      if ((ocp_data & 1U) == 0U) {
        #line 1443 
        if ((tp->msg_enable & 2U) != 0U) {
          #line 1443 
          bool branch;
          #line 1443 
          struct _ddebug __UNIQUE_ID_ddebug545 = {.modname = (char *)"r8152", .function = (char *)"vendor_mac_passthru_addr_read", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c", .format = (char *)"No efuse for RTL8153-AD MAC pass through\n", .lineno = (unsigned int)1443U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
          #line 1443 
          branch = arch_static_branch(& __UNIQUE_ID_ddebug545.key.dd_key_false.key,(_Bool)0);
          #line 1443 
          if ((long)((long)((int)branch != 0)) != 0L) 
                                                      #line 1443 
                                                      __dynamic_netdev_dbg(& __UNIQUE_ID_ddebug545,tp->netdev,(char *)"No efuse for RTL8153-AD MAC pass through\n");
        }
        #line 1445 
        return -19;
      }
    }
    else {
      #line 1449 
      ocp_data = (unsigned int)ocp_read_byte(tp,(unsigned short)0,(unsigned short)55327);
      #line 1450 
      if ((ocp_data & 4U) == 0U && (ocp_data & 1U) == 0U) {
        #line 1451 
        if ((tp->msg_enable & 2U) != 0U) {
          #line 1451 
          bool branch_0;
          #line 1451 
          struct _ddebug __UNIQUE_ID_ddebug546 = {.modname = (char *)"r8152", .function = (char *)"vendor_mac_passthru_addr_read", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c", .format = (char *)"Invalid variant for MAC pass through\n", .lineno = (unsigned int)1451U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
          #line 1451 
          branch_0 = arch_static_branch(& __UNIQUE_ID_ddebug546.key.dd_key_false.key,(_Bool)0);
          #line 1451 
          if ((long)((long)((int)branch_0 != 0)) != 0L) 
                                                        #line 1451 
                                                        __dynamic_netdev_dbg(& __UNIQUE_ID_ddebug546,tp->netdev,(char *)"Invalid variant for MAC pass through\n");
        }
        #line 1453 
        return -19;
      }
    }
    #line 1457 
    mac_obj_name = (char *)"\\_SB.AMAC";
    #line 1458 
    mac_obj_type = 3U;
    #line 1459 
    mac_strlen = 23;
  }
  #line 1463 
  status = acpi_evaluate_object((void *)0,mac_obj_name,(struct acpi_object_list *)0,& buffer);
  #line 1464 
  obj = (union acpi_object *)buffer.pointer;
  #line 1465 
  if (status != 0U) 
                    #line 1466 
                    return -19;
  #line 1467 
  if (obj->type != mac_obj_type || obj->string.length != (unsigned int)mac_strlen) {
    #line 1468 
    if ((tp->msg_enable & 2U) != 0U) 
                                     #line 1468 
                                     netdev_warn(tp->netdev,(char *)"Invalid buffer for pass-thru MAC addr: (%d, %d)\n",obj->type,obj->string.length);
    #line 1471 
    goto amacout;
  }
  #line 1474 
  if (cif_strncmp(obj->string.pointer,(char *)"_AUXMAC_#",9UL) != 0) 
    #line 1474 
    goto _LOR;
  else {
    #line 1474 
    if (cif_strncmp(obj->string.pointer + 21U,(char *)"#",1UL) != 0) {
      #line 1474 
      _LOR: {
              #line 1476 
              if ((tp->msg_enable & 2U) != 0U) 
                                               #line 1476 
                                               netdev_warn(tp->netdev,(char *)"Invalid header when reading pass-thru MAC addr\n");
              #line 1478 
              goto amacout;
            }
    }
  }
  #line 1480 
  ret = hex2bin((u8 *)(& buf),obj->string.pointer + 9U,6UL);
  #line 1481 
  if (ret != 0) 
                #line 1481 
                goto _LOR_0;
  else {
    #line 1481 
    if (! is_valid_ether_addr((u8 *)(& buf))) {
      #line 1481 
      _LOR_0: {
                #line 1482 
                if ((tp->msg_enable & 2U) != 0U) 
                                                 #line 1482 
                                                 netdev_warn(tp->netdev,(char *)"Invalid MAC for pass-thru MAC addr: %d, %pM\n",ret,(unsigned char *)(& buf));
                #line 1485 
                ret = -22;
                #line 1486 
                goto amacout;
              }
    }
  }
  #line 1488 
  memcpy((void *)(& sa->sa_data),(void *)(& buf),6UL);
  #line 1489 
  if ((tp->msg_enable & 2U) != 0U) 
                                   #line 1489 
                                   netdev_info(tp->netdev,(char *)"Using pass-thru MAC addr %pM\n",(char *)(& sa->sa_data));
  #line 1492 
  amacout: 
           #line 1492 
  ;
  #line 1493 
  kfree((void *)obj);
  #line 1494 
  return ret;
}

#line 1497  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static int determine_ethernet_addr(struct r8152 *tp, struct sockaddr *sa)
{
  #line 1500 
  int ret;
  #line 1499 
  struct net_device *dev = tp->netdev;
  #line 1502 
  sa->sa_family = dev->type;
  #line 1504 
  if ((unsigned int)tp->version == 1U) 
                                       #line 1505 
                                       ret = pla_ocp_read(tp,(unsigned short)49152,(unsigned short)8,(void *)(& sa->sa_data));
  else {
    #line 1510 
    ret = vendor_mac_passthru_addr_read(tp,sa);
    #line 1511 
    if (ret < 0) 
                 #line 1512 
                 ret = pla_ocp_read(tp,(unsigned short)53248,(unsigned short)8,(void *)(& sa->sa_data));
  }
  #line 1515 
  if (ret < 0) {
    #line 1516 
    if ((tp->msg_enable & 2U) != 0U) 
                                     #line 1516 
                                     netdev_err(dev,(char *)"Get ether addr fail\n");
  }
  else {
    #line 1517 
    if (! is_valid_ether_addr((u8 *)(& sa->sa_data))) {
      #line 1518 
      if ((tp->msg_enable & 2U) != 0U) 
                                       #line 1518 
                                       netdev_err(dev,(char *)"Invalid ether addr %pM\n",(char *)(& sa->sa_data));
      #line 1520 
      eth_hw_addr_random(dev);
      #line 1521 
      ether_addr_copy((u8 *)(& sa->sa_data),dev->dev_addr);
      #line 1522 
      if ((tp->msg_enable & 2U) != 0U) 
                                       #line 1522 
                                       netdev_info(dev,(char *)"Random ether addr %pM\n",(char *)(& sa->sa_data));
      #line 1524 
      return 0;
    }
  }
  #line 1527 
  return ret;
}

#line 1530  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static int set_ethernet_addr(struct r8152 *tp)
{
  #line 1533 
  struct sockaddr sa;
  #line 1534 
  int ret;
  #line 1532 
  struct net_device *dev = tp->netdev;
  #line 1536 
  ret = determine_ethernet_addr(tp,& sa);
  #line 1537 
  if (ret < 0) 
               #line 1538 
               return ret;
  #line 1540 
  if ((unsigned int)tp->version == 1U) 
                                       #line 1541 
                                       ether_addr_copy(dev->dev_addr,(u8 *)(& sa.sa_data)); else 
                                                                    #line 1543 
                                                                    ret = rtl8152_set_mac_address(dev,(void *)(& sa));
  #line 1545 
  return ret;
}

#line 1548  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static void read_bulk_callback(struct urb *urb)
{
  #line 1550 
  struct net_device *netdev;
  #line 1552 
  struct rx_agg *agg;
  #line 1553 
  struct r8152 *tp;
  #line 1554 
  unsigned long flags;
  #line 1551 
  int status = urb->status;
  #line 1556 
  agg = (struct rx_agg *)urb->context;
  #line 1557 
  if (agg == (struct rx_agg *)0) 
                                 #line 1558 
                                 return;
  #line 1560 
  tp = agg->context;
  #line 1561 
  if (tp == (struct r8152 *)0) 
                               #line 1562 
                               return;
  #line 1564 
  if ((int)test_bit(0L,& tp->flags) != 0) 
                                          #line 1565 
                                          return;
  #line 1567 
  if (! test_bit(2L,& tp->flags)) 
                                  #line 1568 
                                  return;
  #line 1570 
  netdev = tp->netdev;
  #line 1574 
  if (! netif_carrier_ok(netdev)) 
                                  #line 1575 
                                  return;
  #line 1577 
  usb_mark_last_busy(tp->udev);
  #line 1579 
  switch (status) {
    #line 1580 
    case 0: 
            #line 1580 
    ;
    #line 1581 
    if (urb->actual_length <= 59U) 
                                   #line 1582 
                                   break;
    #line 1584 
    cif___ldv_spin_lock_rx_lock_of_r8152(& tp->rx_lock);
    #line 1585 
    list_add_tail(& agg->list,& tp->rx_done);
    #line 1586 
    cif_spin_unlock_irqrestore_rx_lock_of_r8152(& tp->rx_lock,flags);
    #line 1587 
    napi_schedule(& tp->napi);
    #line 1588 
    return;
    #line 1589 
    case -108: 
               #line 1589 
    ;
    #line 1590 
    rtl_set_unplug(tp);
    #line 1591 
    netif_device_detach(tp->netdev);
    #line 1592 
    return;
    #line 1593 
    case -2: 
             #line 1593 
    ;
    #line 1594 
    return;
    #line 1595 
    case -62: 
              #line 1595 
    ;
    #line 1596 
    if (net_ratelimit() != 0) 
                              #line 1597 
                              netdev_warn(netdev,(char *)"maybe reset is needed?\n");
    #line 1598 
    break;
    #line 1599 
    default: 
             #line 1599 
    ;
    #line 1600 
    if (net_ratelimit() != 0) 
                              #line 1601 
                              netdev_warn(netdev,(char *)"Rx status %d\n",status);
    #line 1602 
    break;
  }
  #line 1605 
  r8152_submit_rx(tp,agg,2592U);
  #line 1606 
  return;
}

#line 1608  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static void write_bulk_callback(struct urb *urb)
{
  #line 1610 
  struct net_device_stats *stats;
  #line 1611 
  struct net_device *netdev;
  #line 1612 
  struct tx_agg *agg;
  #line 1613 
  struct r8152 *tp;
  #line 1614 
  unsigned long flags;
  #line 1615 
  int status = urb->status;
  #line 1617 
  agg = (struct tx_agg *)urb->context;
  #line 1618 
  if (agg == (struct tx_agg *)0) 
                                 #line 1619 
                                 return;
  #line 1621 
  tp = agg->context;
  #line 1622 
  if (tp == (struct r8152 *)0) 
                               #line 1623 
                               return;
  #line 1625 
  netdev = tp->netdev;
  #line 1626 
  stats = & netdev->stats;
  #line 1627 
  if (status != 0) {
    #line 1628 
    if (net_ratelimit() != 0) 
                              #line 1629 
                              netdev_warn(netdev,(char *)"Tx status %d\n",status);
    #line 1630 
    stats->tx_errors += (unsigned long)agg->skb_num;
  }
  else {
    #line 1632 
    stats->tx_packets += (unsigned long)agg->skb_num;
    #line 1633 
    stats->tx_bytes += (unsigned long)agg->skb_len;
  }
  #line 1636 
  cif___ldv_spin_lock_tx_lock_of_r8152(& tp->tx_lock);
  #line 1637 
  list_add_tail(& agg->list,& tp->tx_free);
  #line 1638 
  cif_spin_unlock_irqrestore_tx_lock_of_r8152(& tp->tx_lock,flags);
  #line 1640 
  usb_autopm_put_interface_async(tp->intf);
  #line 1642 
  if (! netif_carrier_ok(netdev)) 
                                  #line 1643 
                                  return;
  #line 1645 
  if (! test_bit(2L,& tp->flags)) 
                                  #line 1646 
                                  return;
  #line 1648 
  if ((int)test_bit(0L,& tp->flags) != 0) 
                                          #line 1649 
                                          return;
  #line 1651 
  if (skb_queue_empty(& tp->tx_queue) == 0) 
                                            #line 1652 
                                            cif_tasklet_schedule(& tp->tx_tl);
  #line 1653 
  return;
}

#line 1655  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static void intr_callback(struct urb *urb)
{
  #line 1657 
  struct r8152 *tp;
  #line 1658 
  __le16 *d;
  #line 1660 
  int res;
  #line 1659 
  int status = urb->status;
  #line 1662 
  tp = (struct r8152 *)urb->context;
  #line 1663 
  if (tp == (struct r8152 *)0) 
                               #line 1664 
                               return;
  #line 1666 
  if (! test_bit(2L,& tp->flags)) 
                                  #line 1667 
                                  return;
  #line 1669 
  if ((int)test_bit(0L,& tp->flags) != 0) 
                                          #line 1670 
                                          return;
  #line 1672 
  switch (status) {
    #line 1673 
    case 0: 
            #line 1673 
    ;
    #line 1674 
    break;
    #line 1675 
    case -104: 
               #line 1675 
    ;
    #line 1676 
    case -108: 
               #line 1676 
    ;
    #line 1677 
    netif_device_detach(tp->netdev);
    #line 1679 
    case -2: 
             #line 1679 
    ;
    #line 1680 
    case -71: 
              #line 1680 
    ;
    #line 1681 
    if ((tp->msg_enable & 512U) != 0U) 
                                       #line 1681 
                                       netdev_info(tp->netdev,(char *)"Stop submitting intr, status %d\n",status);
    #line 1683 
    return;
    #line 1684 
    case -75: 
              #line 1684 
    ;
    #line 1685 
    if ((tp->msg_enable & 512U) != 0U) 
                                       #line 1685 
                                       netdev_info(tp->netdev,(char *)"intr status -EOVERFLOW\n");
    #line 1686 
    goto resubmit;
    #line 1688 
    default: 
             #line 1688 
    ;
    #line 1689 
    if ((tp->msg_enable & 512U) != 0U) 
                                       #line 1689 
                                       netdev_info(tp->netdev,(char *)"intr status %d\n",status);
    #line 1690 
    goto resubmit;
  }
  #line 1693 
  d = (__le16 *)urb->transfer_buffer;
  #line 1694 
  if (((unsigned int)*d & 4U) != 0U) {
    #line 1695 
    if (! netif_carrier_ok(tp->netdev)) {
      #line 1696 
      cif_set_bit(3L,& tp->flags);
      #line 1697 
      cif_schedule_delayed_work(& tp->schedule,0UL);
    }
  }
  else {
    #line 1700 
    if ((int)netif_carrier_ok(tp->netdev) != 0) {
      #line 1701 
      netif_stop_queue(tp->netdev);
      #line 1702 
      cif_set_bit(3L,& tp->flags);
      #line 1703 
      cif_schedule_delayed_work(& tp->schedule,0UL);
    }
  }
  #line 1707 
  resubmit: 
            #line 1707 
  ;
  #line 1708 
  res = cif_usb_submit_urb(urb,2592U);
  #line 1709 
  if (res == -19) {
    #line 1710 
    rtl_set_unplug(tp);
    #line 1711 
    netif_device_detach(tp->netdev);
  }
  else 
    #line 1712 
    if (res != 0) 
      #line 1713 
      if ((tp->msg_enable & 512U) != 0U) 
                                         #line 1713 
                                         netdev_err(tp->netdev,(char *)"can\'t resubmit intr, status %d\n",res);
  #line 1714 
  return;
}

#line 1718  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
__inline static void *rx_agg_align(void *data)
{
  #line 1720 
  return (void *)(((unsigned long)data + 7UL) & 18446744073709551608UL);
}

#line 1723  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
__inline static void *tx_agg_align(void *data)
{
  #line 1725 
  return (void *)(((unsigned long)data + 3UL) & 18446744073709551612UL);
}

#line 1728  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static void free_rx_agg(struct r8152 *tp, struct rx_agg *agg)
{
  #line 1730 
  list_del(& agg->info_list);
  #line 1732 
  usb_free_urb(agg->urb);
  #line 1733 
  put_page(agg->page);
  #line 1734 
  kfree((void *)agg);
  #line 1736 
  atomic_dec(& tp->rx_count);
  #line 1737 
  return;
}

#line 1739  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static struct rx_agg *alloc_rx_agg(struct r8152 *tp, gfp_t mflags)
{
  #line 1742 
  int tmp_0;
  #line 1744 
  struct rx_agg *rx_agg;
  #line 1745 
  unsigned long flags;
  #line 1741 
  struct net_device *netdev = tp->netdev;
  #line 1742 
  if (netdev->dev.parent != (struct device *)0) 
                                                #line 1742 
                                                tmp_0 = dev_to_node(netdev->dev.parent); else 
                                                                    #line 1742 
                                                                    tmp_0 = -1;
  #line 1742 
  int node = tmp_0;
  #line 1743 
  unsigned int order = (unsigned int)get_order((unsigned long)tp->rx_buf_sz);
  #line 1747 
  rx_agg = (struct rx_agg *)kmalloc_node(64UL,mflags,node);
  #line 1748 
  if (rx_agg == (struct rx_agg *)0) 
                                    #line 1749 
                                    return (struct rx_agg *)0;
  #line 1751 
  rx_agg->page = alloc_pages(mflags | 262144U,order);
  #line 1752 
  if (rx_agg->page == (struct page *)0) 
                                        #line 1753 
                                        goto free_rx;
  #line 1755 
  rx_agg->buffer = lowmem_page_address(rx_agg->page);
  #line 1757 
  rx_agg->urb = usb_alloc_urb(0,mflags);
  #line 1758 
  if (rx_agg->urb == (struct urb *)0) 
                                      #line 1759 
                                      goto free_buf;
  #line 1761 
  rx_agg->context = tp;
  #line 1763 
  INIT_LIST_HEAD(& rx_agg->list);
  #line 1764 
  INIT_LIST_HEAD(& rx_agg->info_list);
  #line 1765 
  cif___ldv_spin_lock_rx_lock_of_r8152(& tp->rx_lock);
  #line 1766 
  list_add_tail(& rx_agg->info_list,& tp->rx_info);
  #line 1767 
  cif_spin_unlock_irqrestore_rx_lock_of_r8152(& tp->rx_lock,flags);
  #line 1769 
  atomic_inc(& tp->rx_count);
  #line 1771 
  return rx_agg;
  #line 1773 
  free_buf: 
            #line 1773 
  ;
  #line 1774 
  __free_pages(rx_agg->page,order);
  #line 1775 
  free_rx: 
           #line 1775 
  ;
  #line 1776 
  kfree((void *)rx_agg);
  #line 1777 
  return (struct rx_agg *)0;
}

#line 1780  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static void free_all_mem(struct r8152 *tp)
{
  #line 1788 
  void *__mptr;
  #line 1788 
  void *__mptr_0;
  #line 1782 
  struct rx_agg *agg;
  #line 1782 
  struct rx_agg *agg_next;
  #line 1783 
  unsigned long flags;
  #line 1784 
  int i;
  #line 1786 
  cif___ldv_spin_lock_rx_lock_of_r8152(& tp->rx_lock);
  #line 1788 
  __mptr = (void *)tp->rx_info.next;
  #line 1788 
  agg = ((struct rx_agg *)(__mptr + 18446744073709551600U));
  #line 1788 
  __mptr_0 = (void *)agg->info_list.next;
  #line 1789 
  agg_next = ((struct rx_agg *)(__mptr_0 + 18446744073709551600U));
  #line 1788 
  while (& agg->info_list != & tp->rx_info) {
    #line 1788 
    void *__mptr_1;
    #line 1789 
    free_rx_agg(tp,agg);
    #line 1788 
    agg = agg_next;
    #line 1788 
    __mptr_1 = (void *)agg_next->info_list.next;
    #line 1788 
    agg_next = ((struct rx_agg *)(__mptr_1 + 18446744073709551600U));
  }
  #line 1791 
  cif_spin_unlock_irqrestore_rx_lock_of_r8152(& tp->rx_lock,flags);
  {
    #line 1793 
    int __ret_warn_on = atomic_read(& tp->rx_count) != 0;
    #line 1793 
    if ((long)(__ret_warn_on != 0) != 0L) {
      #line 1794 
      ldv_inline_asm();
      #line 1795 
      ldv_inline_asm();
    }
    #line 1793 
    long tmp_3 = (long)(__ret_warn_on != 0);
  }
  #line 1795 
  i = 0;
  #line 1795 
  while (i <= 3) {
    #line 1796 
    usb_free_urb(tp->tx_info[i].urb);
    #line 1797 
    tp->tx_info[i].urb = (struct urb *)0;
    #line 1799 
    kfree(tp->tx_info[i].buffer);
    #line 1800 
    tp->tx_info[i].buffer = (void *)0;
    #line 1801 
    tp->tx_info[i].head = (void *)0;
    #line 1795 
    i ++;
  }
  #line 1804 
  usb_free_urb(tp->intr_urb);
  #line 1805 
  tp->intr_urb = (struct urb *)0;
  #line 1807 
  kfree((void *)tp->intr_buff);
  #line 1808 
  tp->intr_buff = (u8 *)0U;
  #line 1809 
  return;
}

#line 1811  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static int alloc_all_mem(struct r8152 *tp)
{
  #line 1817 
  int node;
  #line 1817 
  int i;
  #line 1813 
  struct net_device *netdev = tp->netdev;
  #line 1814 
  struct usb_interface *intf = tp->intf;
  #line 1815 
  struct usb_host_interface *alt = intf->cur_altsetting;
  #line 1816 
  struct usb_host_endpoint *ep_intr = alt->endpoint + 2U;
  #line 1819 
  if (netdev->dev.parent != (struct device *)0) 
                                                #line 1819 
                                                node = dev_to_node(netdev->dev.parent); else 
                                                                    #line 1819 
                                                                    node = -1;
  #line 1821 
  spinlock_check(& tp->rx_lock);
  {
    #line 1821 
    struct lock_class_key __key;
    #line 1821 
    __raw_spin_lock_init(& tp->rx_lock.__anonCompField_spinlock_25.rlock,(char *)"&(&tp->rx_lock)->rlock",& __key);
  }
  #line 1822 
  spinlock_check(& tp->tx_lock);
  {
    #line 1822 
    struct lock_class_key __key_0;
    #line 1822 
    __raw_spin_lock_init(& tp->tx_lock.__anonCompField_spinlock_25.rlock,(char *)"&(&tp->tx_lock)->rlock",& __key_0);
  }
  #line 1823 
  INIT_LIST_HEAD(& tp->rx_info);
  #line 1824 
  INIT_LIST_HEAD(& tp->tx_free);
  #line 1825 
  INIT_LIST_HEAD(& tp->rx_done);
  #line 1826 
  skb_queue_head_init(& tp->tx_queue);
  #line 1827 
  skb_queue_head_init(& tp->rx_queue);
  #line 1828 
  atomic_set(& tp->rx_count,0);
  #line 1830 
  i = 0;
  #line 1830 
  while (i <= 9) {
    #line 1831 
    if (alloc_rx_agg(tp,3264U) == (struct rx_agg *)0) 
                                                      #line 1832 
                                                      goto err1;
    #line 1830 
    i ++;
  }
  #line 1835 
  i = 0;
  #line 1835 
  while (i <= 3) {
    {
      #line 1836 
      struct urb *urb;
      #line 1837 
      u8 *buf;
      #line 1839 
      buf = (u8 *)kmalloc_node((unsigned long)agg_buf_sz,3264U,node);
      #line 1840 
      if (buf == (u8 *)0U) 
                           #line 1841 
                           goto err1;
      #line 1843 
      ;
      #line 1843 
      if (tx_agg_align((void *)buf) != (void *)buf) {
        #line 1844 
        kfree((void *)buf);
        #line 1845 
        buf = (u8 *)kmalloc_node((unsigned long)(agg_buf_sz + 4U),3264U,node);
        #line 1847 
        if (buf == (u8 *)0U) 
                             #line 1848 
                             goto err1;
      }
      #line 1851 
      urb = usb_alloc_urb(0,3264U);
      #line 1852 
      if (urb == (struct urb *)0) {
        #line 1853 
        kfree((void *)buf);
        #line 1854 
        goto err1;
      }
      #line 1857 
      INIT_LIST_HEAD(& tp->tx_info[i].list);
      #line 1858 
      tp->tx_info[i].context = tp;
      #line 1859 
      tp->tx_info[i].urb = urb;
      #line 1860 
      tp->tx_info[i].buffer = (void *)buf;
      #line 1861 
      tp->tx_info[i].head = tx_agg_align((void *)buf);
      #line 1863 
      list_add_tail(& tp->tx_info[i].list,& tp->tx_free);
    }
    #line 1835 
    i ++;
  }
  #line 1866 
  tp->intr_urb = usb_alloc_urb(0,3264U);
  #line 1867 
  if (tp->intr_urb == (struct urb *)0) 
                                       #line 1868 
                                       goto err1;
  #line 1870 
  tp->intr_buff = (u8 *)kmalloc(2UL,3264U);
  #line 1871 
  if (tp->intr_buff == (u8 *)0U) 
                                 #line 1872 
                                 goto err1;
  #line 1874 
  tp->intr_interval = (int)ep_intr->desc.bInterval;
  #line 1875 
  ;
  #line 1875 
  ;
  #line 1875 
  ;
  #line 1875 
  ;
  #line 1875 
  ;
  #line 1875 
  usb_fill_int_urb(tp->intr_urb,tp->udev,__create_pipe(tp->udev,3U) | 1073741952U,(void *)tp->intr_buff,2,& intr_callback,(void *)tp,tp->intr_interval);
  #line 1879 
  return 0;
  #line 1881 
  err1: 
        #line 1881 
  ;
  #line 1882 
  free_all_mem(tp);
  #line 1883 
  return -12;
}

#line 1886  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static struct tx_agg *r8152_get_tx_agg(struct r8152 *tp)
{
  #line 1889 
  unsigned long flags;
  #line 1888 
  struct tx_agg *agg = (struct tx_agg *)0;
  #line 1891 
  if (list_empty(& tp->tx_free) != 0) 
                                      #line 1892 
                                      return (struct tx_agg *)0;
  #line 1894 
  cif___ldv_spin_lock_tx_lock_of_r8152(& tp->tx_lock);
  #line 1895 
  if (list_empty(& tp->tx_free) == 0) {
    #line 1900 
    void *__mptr;
    #line 1896 
    struct list_head *cursor;
    #line 1898 
    cursor = tp->tx_free.next;
    #line 1899 
    list_del_init(cursor);
    #line 1900 
    __mptr = (void *)cursor;
    #line 1900 
    agg = ((struct tx_agg *)__mptr);
  }
  #line 1902 
  cif_spin_unlock_irqrestore_tx_lock_of_r8152(& tp->tx_lock,flags);
  #line 1904 
  return agg;
}

#line 1911  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static void r8152_csum_workaround(struct r8152 *tp, struct sk_buff *skb, struct sk_buff_head *list)
{
  #line 1914 
  ;
  #line 1914 
  if ((unsigned int)((struct skb_shared_info *)skb_end_pointer(skb))->gso_size != 0U) {
    #line 1916 
    struct sk_buff_head seg_list;
    #line 1917 
    struct sk_buff *segs;
    #line 1917 
    struct sk_buff *nskb;
    #line 1915 
    netdev_features_t features = (tp->netdev)->features;
    #line 1919 
    features &= 18446744073708503022ULL;
    #line 1920 
    segs = skb_gso_segment(skb,features);
    #line 1921 
    if ((int)IS_ERR((void *)segs) != 0) 
                                        #line 1921 
                                        goto _LOR;
    else 
      #line 1921 
      if (segs == (struct sk_buff *)0) 
                                       #line 1921 
                                       _LOR: 
                                             #line 1922 
                                             goto drop;
    #line 1924 
    __skb_queue_head_init(& seg_list);
    #line 1926 
    while (1) {
      #line 1927 
      nskb = segs;
      #line 1928 
      segs = segs->__anonCompField_sk_buff_91.__anonCompField___anonunion_531_90.next;
      #line 1929 
      nskb->__anonCompField_sk_buff_91.__anonCompField___anonunion_531_90.next = (struct sk_buff *)0;
      #line 1930 
      __skb_queue_tail(& seg_list,nskb);
      #line 1931 
      if (! (segs != (struct sk_buff *)0)) 
                                           #line 1926 
                                           break;
    }
    #line 1933 
    skb_queue_splice(& seg_list,list);
    #line 1934 
    consume_skb(skb);
  }
  else 
    #line 1935 
    if ((unsigned int)skb->ip_summed == 3U) {
      #line 1936 
      if (skb_checksum_help(skb) < 0) 
                                      #line 1937 
                                      goto drop;
      #line 1939 
      __skb_queue_head(list,skb);
    }
    else {
      #line 1941 
      struct net_device_stats *stats;
      #line 1943 
      drop: 
            #line 1943 
      ;
      #line 1944 
      stats = & (tp->netdev)->stats;
      #line 1945 
      (stats->tx_dropped) ++;
      #line 1946 
      consume_skb(skb);
    }
  #line 1948 
  return;
}

#line 1954  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static int msdn_giant_send_check(struct sk_buff *skb)
{
  #line 1956 
  struct ipv6hdr *ipv6h;
  #line 1957 
  struct tcphdr *th;
  #line 1958 
  int ret;
  #line 1960 
  ret = skb_cow_head(skb,0U);
  #line 1961 
  if (ret != 0) 
                #line 1962 
                return ret;
  #line 1964 
  ipv6h = ipv6_hdr(skb);
  #line 1965 
  th = tcp_hdr(skb);
  #line 1967 
  th->check = (unsigned short)0U;
  #line 1968 
  th->check = (unsigned short)(~ ((int)tcp_v6_check(0,& ipv6h->saddr,& ipv6h->daddr,0U)));
  #line 1970 
  return ret;
}

#line 1973  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
__inline static void rtl_tx_vlan_tag(struct tx_desc *desc, struct sk_buff *skb)
{
  #line 1975 
  if ((unsigned int)skb->vlan_present != 0U) {
    #line 1976 
    u32 opts2;
    #line 1978 
    opts2 = (unsigned int)__builtin_bswap16((unsigned short)((int)skb->vlan_tci)) | 65536U;
    #line 1979 
    desc->opts2 |= opts2;
  }
  #line 1981 
  return;
}

#line 1983  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
__inline static void rtl_rx_vlan_tag(struct rx_desc *desc, struct sk_buff *skb)
{
  #line 1985 
  u32 opts2 = desc->opts2;
  #line 1987 
  if (((unsigned long)opts2 & 65536UL) != 0UL) {
    #line 1988 
    ;
    #line 1988 
    __vlan_hwaccel_put_tag(skb,(unsigned short)129,(unsigned short)((int)__builtin_bswap16((unsigned short)((int)((unsigned short)opts2)))));
  }
  #line 1990 
  return;
}

#line 1992  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static int r8152_tx_csum(struct r8152 *tp, struct tx_desc *desc, struct sk_buff *skb, u32 len, u32 transport_offset)
{
  #line 1996 
  u32 opts1;
  #line 1995 
  u32 mss = (unsigned int)((struct skb_shared_info *)skb_end_pointer(skb))->gso_size;
  #line 1996 
  u32 opts2 = 0U;
  #line 1997 
  int ret = 0;
  {
    #line 1999 
    int __ret_warn_on = len > 262143U;
    #line 1999 
    if ((long)(__ret_warn_on != 0) != 0L) {
      #line 2000 
      ldv_inline_asm();
      #line 2001 
      ldv_inline_asm();
    }
    #line 1999 
    long tmp_2 = (long)(__ret_warn_on != 0);
  }
  #line 2001 
  opts1 = len | 3221225472U;
  #line 2003 
  if (mss != 0U) {
    #line 2031 
    u32 __UNIQUE_ID___x550;
    #line 2031 
    u32 tmp_2_0;
    #line 2004 
    if (transport_offset > 127U) {
      #line 2005 
      if ((tp->msg_enable & 128U) != 0U) 
                                         #line 2005 
                                         netdev_warn(tp->netdev,(char *)"Invalid transport offset 0x%x for TSO\n",transport_offset);
      #line 2008 
      ret = 1;
      #line 2009 
      goto unavailable;
    }
    #line 2012 
    switch ((int)vlan_get_protocol(skb)) {
      #line 2013 
      case 8: 
              #line 2013 
      ;
      #line 2014 
      opts1 |= 268435456U;
      #line 2015 
      break;
      #line 2017 
      case 56710: 
                  #line 2017 
      ;
      #line 2018 
      if (msdn_giant_send_check(skb) != 0) {
        #line 2019 
        ret = 1;
        #line 2020 
        goto unavailable;
      }
      #line 2022 
      opts1 |= 134217728U;
      #line 2023 
      break;
      #line 2025 
      default: 
               #line 2025 
      ;
      {
        #line 2026 
        int __ret_warn_on_0 = 1;
        #line 2026 
        if ((long)(__ret_warn_on_0 != 0) != 0L) {
          #line 2027 
          ldv_inline_asm();
          #line 2028 
          ldv_inline_asm();
        }
        #line 2026 
        long tmp_4 = (long)(__ret_warn_on_0 != 0);
      }
      #line 2027 
      break;
    }
    #line 2030 
    opts1 = (transport_offset << 18) | opts1;
    {
      #line 2031 
      __UNIQUE_ID___x550 = mss;
      #line 2031 
      unsigned int __UNIQUE_ID___y551 = 2047U;
      #line 2031 
      if (__UNIQUE_ID___x550 < __UNIQUE_ID___y551) 
                                                   #line 2031 
                                                   tmp_2_0 = __UNIQUE_ID___x550; else 
                                                                    #line 2031 
                                                                    tmp_2_0 = __UNIQUE_ID___y551;
      }
    #line 2031 
    opts2 = (tmp_2_0 << 17) | opts2;
  }
  else 
    #line 2032 
    if ((unsigned int)skb->ip_summed == 3U) {
      #line 2033 
      u8 ip_protocol;
      #line 2035 
      if (transport_offset > 2047U) {
        #line 2036 
        if ((tp->msg_enable & 128U) != 0U) 
                                           #line 2036 
                                           netdev_warn(tp->netdev,(char *)"Invalid transport offset 0x%x\n",transport_offset);
        #line 2039 
        ret = 2;
        #line 2040 
        goto unavailable;
      }
      #line 2043 
      switch ((int)vlan_get_protocol(skb)) {
        #line 2044 
        case 8: 
                #line 2044 
        ;
        #line 2045 
        opts2 |= 536870912U;
        #line 2046 
        ip_protocol = ip_hdr(skb)->protocol;
        #line 2047 
        break;
        #line 2049 
        case 56710: 
                    #line 2049 
        ;
        #line 2050 
        opts2 |= 268435456U;
        #line 2051 
        ip_protocol = ipv6_hdr(skb)->nexthdr;
        #line 2052 
        break;
        #line 2054 
        default: 
                 #line 2054 
        ;
        #line 2055 
        ip_protocol = (unsigned char)255U;
        #line 2056 
        break;
      }
      #line 2059 
      if ((unsigned int)ip_protocol == 6U) 
                                           #line 2060 
                                           opts2 |= 1073741824U;
      else 
        #line 2061 
        if ((unsigned int)ip_protocol == 17U) 
                                              #line 2062 
                                              opts2 |= 2147483648U;
        else {
          #line 2064 
          int __ret_warn_on_1 = 1;
          #line 2064 
          if ((long)(__ret_warn_on_1 != 0) != 0L) {
            #line 2065 
            ldv_inline_asm();
            #line 2066 
            ldv_inline_asm();
          }
          #line 2064 
          long tmp_7 = (long)(__ret_warn_on_1 != 0);
        }
      #line 2066 
      opts2 = (transport_offset << 17) | opts2;
    }
  #line 2069 
  desc->opts2 = opts2;
  #line 2070 
  desc->opts1 = opts1;
  #line 2072 
  unavailable: 
               #line 2072 
  ;
  #line 2073 
  return ret;
}

#line 2076  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static int r8152_tx_agg_fill(struct r8152 *tp, struct tx_agg *agg)
{
  #line 2078 
  struct sk_buff_head skb_head;
  #line 2079 
  int remain;
  #line 2079 
  int ret;
  #line 2080 
  u8 *tx_data;
  #line 2078 
  struct sk_buff_head *tx_queue = & tp->tx_queue;
  #line 2082 
  __skb_queue_head_init(& skb_head);
  #line 2083 
  cif_spin_lock_lock_of_sk_buff_head(& tx_queue->lock);
  #line 2084 
  skb_queue_splice_init(tx_queue,& skb_head);
  #line 2085 
  cif_spin_unlock_lock_of_sk_buff_head(& tx_queue->lock);
  #line 2087 
  tx_data = (u8 *)agg->head;
  #line 2088 
  agg->skb_num = 0U;
  #line 2089 
  agg->skb_len = 0U;
  #line 2090 
  remain = (int)agg_buf_sz;
  #line 2092 
  while ((unsigned int)remain > 67U) {
    #line 2093 
    struct tx_desc *tx_desc;
    #line 2094 
    struct sk_buff *skb;
    #line 2095 
    unsigned int len;
    #line 2096 
    u32 offset;
    #line 2135 
    int tmp_4;
    #line 2098 
    skb = __skb_dequeue(& skb_head);
    #line 2099 
    if (skb == (struct sk_buff *)0) 
                                    #line 2100 
                                    break;
    #line 2102 
    len = skb->len + 8U;
    #line 2104 
    if (len > (unsigned int)remain) {
      #line 2105 
      __skb_queue_head(& skb_head,skb);
      #line 2106 
      break;
    }
    #line 2109 
    tx_data = (u8 *)tx_agg_align((void *)tx_data);
    #line 2110 
    tx_desc = (struct tx_desc *)tx_data;
    #line 2112 
    offset = (unsigned int)skb_transport_offset(skb);
    #line 2114 
    if (r8152_tx_csum(tp,tx_desc,skb,skb->len,offset) != 0) {
      #line 2115 
      r8152_csum_workaround(tp,skb,& skb_head);
      #line 2116 
      continue;
    }
    #line 2119 
    rtl_tx_vlan_tag(tx_desc,skb);
    #line 2121 
    tx_data += 8UL;
    #line 2123 
    len = skb->len;
    #line 2124 
    if (skb_copy_bits(skb,0,(void *)tx_data,(int)len) < 0) {
      #line 2125 
      struct net_device_stats *stats = & (tp->netdev)->stats;
      #line 2127 
      (stats->tx_dropped) ++;
      #line 2128 
      dev_kfree_skb_any(skb);
      #line 2129 
      tx_data += 18446744073709551608U;
      #line 2130 
      continue;
    }
    #line 2133 
    tx_data += (unsigned long)len;
    #line 2134 
    agg->skb_len += len;
    #line 2135 
    tmp_4 = (int)((struct skb_shared_info *)skb_end_pointer(skb))->gso_segs != 0;
    #line 2135 
    if (! tmp_4) 
                 #line 2135 
                 tmp_4 = 1;
    #line 2135 
    agg->skb_num += (unsigned int)tmp_4;
    #line 2137 
    dev_kfree_skb_any(skb);
    #line 2139 
    remain = (int)(agg_buf_sz - (unsigned int)(tx_agg_align((void *)tx_data) - agg->head));
    #line 2141 
    if ((int)test_bit(8L,& tp->flags) != 0) 
                                            #line 2142 
                                            break;
  }
  #line 2145 
  if (skb_queue_empty(& skb_head) == 0) {
    #line 2146 
    cif_spin_lock_lock_of_sk_buff_head(& tx_queue->lock);
    #line 2147 
    skb_queue_splice(& skb_head,tx_queue);
    #line 2148 
    cif_spin_unlock_lock_of_sk_buff_head(& tx_queue->lock);
  }
  #line 2151 
  netif_tx_lock(tp->netdev);
  #line 2153 
  if ((int)netif_queue_stopped(tp->netdev) != 0) {
    #line 2153 
    ;
    #line 2153 
    if (skb_queue_len(& tp->tx_queue) < tp->tx_qlen) 
                                                     #line 2155 
                                                     netif_wake_queue(tp->netdev);
  }
  #line 2157 
  netif_tx_unlock(tp->netdev);
  #line 2159 
  ret = usb_autopm_get_interface_async(tp->intf);
  #line 2160 
  if (ret < 0) 
               #line 2161 
               goto out_tx_fill;
  #line 2163 
  ;
  #line 2163 
  ;
  #line 2163 
  ;
  #line 2163 
  ;
  #line 2163 
  ;
  #line 2163 
  usb_fill_bulk_urb(agg->urb,tp->udev,__create_pipe(tp->udev,2U) | 3221225472U,agg->head,(int)(tx_data - (u8 *)agg->head),& write_bulk_callback,(void *)agg);
  #line 2167 
  ret = cif_usb_submit_urb(agg->urb,2592U);
  #line 2168 
  if (ret < 0) 
               #line 2169 
               usb_autopm_put_interface_async(tp->intf);
  #line 2171 
  out_tx_fill: 
               #line 2171 
  ;
  #line 2172 
  return ret;
}

#line 2175  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static u8 r8152_rx_csum(struct r8152 *tp, struct rx_desc *rx_desc)
{
  #line 2178 
  u32 opts2;
  #line 2178 
  u32 opts3;
  #line 2177 
  u8 checksum = (unsigned char)0U;
  #line 2180 
  if (((tp->netdev)->features & 549755813888ULL) == 0ULL) 
                                                          #line 2181 
                                                          goto return_result;
  #line 2183 
  opts2 = rx_desc->opts2;
  #line 2184 
  opts3 = rx_desc->opts3;
  #line 2186 
  if (((unsigned long)opts2 & 524288UL) != 0UL) {
    #line 2187 
    if (((unsigned long)opts3 & 8388608UL) != 0UL) 
                                                   #line 2188 
                                                   checksum = (unsigned char)0U;
    else 
      #line 2189 
      if (((unsigned long)opts2 & 8388608UL) != 0UL && ((unsigned long)opts3 & 4194304UL) == 0UL) 
        #line 2190 
        checksum = (unsigned char)1U;
      else 
        #line 2191 
        if (((unsigned long)opts2 & 4194304UL) != 0UL && ((unsigned long)opts3 & 2097152UL) == 0UL) 
          #line 2192 
          checksum = (unsigned char)1U;
  }
  else 
    #line 2193 
    if (((unsigned long)opts2 & 1048576UL) != 0UL) 
      #line 2194 
      if (((unsigned long)opts2 & 8388608UL) != 0UL && ((unsigned long)opts3 & 4194304UL) == 0UL) 
        #line 2195 
        checksum = (unsigned char)1U;
      else 
        #line 2196 
        if (((unsigned long)opts2 & 4194304UL) != 0UL && ((unsigned long)opts3 & 2097152UL) == 0UL) 
          #line 2197 
          checksum = (unsigned char)1U;
  #line 2200 
  return_result: 
                 #line 2200 
  ;
  #line 2201 
  return checksum;
}

#line 2204  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
__inline static bool rx_count_exceed(struct r8152 *tp)
{
  #line 2206 
  return (_Bool)(atomic_read(& tp->rx_count) > 10);
}

#line 2209  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
__inline static int agg_offset(struct rx_agg *agg, void *addr)
{
  #line 2211 
  return (int)(addr - agg->buffer);
}

#line 2214  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static struct rx_agg *rtl_get_free_rx(struct r8152 *tp, gfp_t mflags)
{
  #line 2221 
  void *__mptr_0;
  #line 2221 
  void *__mptr;
  #line 2216 
  struct rx_agg *agg;
  #line 2216 
  struct rx_agg *agg_next;
  #line 2217 
  unsigned long flags;
  #line 2216 
  struct rx_agg *agg_free = (struct rx_agg *)0;
  #line 2219 
  cif___ldv_spin_lock_rx_lock_of_r8152(& tp->rx_lock);
  #line 2221 
  __mptr = (void *)tp->rx_used.next;
  #line 2221 
  agg = ((struct rx_agg *)__mptr);
  #line 2221 
  __mptr_0 = (void *)agg->list.next;
  #line 2222 
  agg_next = ((struct rx_agg *)__mptr_0);
  #line 2221 
  while (& agg->list != & tp->rx_used) {
    #line 2221 
    void *__mptr_1;
    #line 2222 
    if (page_count(agg->page) == 1) {
      #line 2223 
      if (agg_free == (struct rx_agg *)0) {
        #line 2224 
        list_del_init(& agg->list);
        #line 2225 
        agg_free = agg;
        #line 2226 
        goto __Cont;
      }
      #line 2228 
      if ((int)rx_count_exceed(tp) != 0) {
        #line 2229 
        list_del_init(& agg->list);
        #line 2230 
        free_rx_agg(tp,agg);
      }
      #line 2232 
      break;
    }
    #line 2221 
    __Cont: 
            #line 2221 
    agg = agg_next;
    #line 2221 
    __mptr_1 = (void *)agg_next->list.next;
    #line 2221 
    agg_next = ((struct rx_agg *)__mptr_1);
  }
  #line 2236 
  cif_spin_unlock_irqrestore_rx_lock_of_r8152(& tp->rx_lock,flags);
  #line 2238 
  if (agg_free == (struct rx_agg *)0) {
    #line 2238 
    ;
    #line 2238 
    if ((unsigned int)atomic_read(& tp->rx_count) < tp->rx_pending) 
                                                                    #line 2239 
                                                                    agg_free = alloc_rx_agg(tp,mflags);
  }
  #line 2241 
  return agg_free;
}

#line 2244  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static int rx_bottom(struct r8152 *tp, int budget)
{
  #line 2246 
  unsigned long flags;
  #line 2247 
  struct list_head *cursor;
  #line 2247 
  struct list_head *next;
  #line 2247 
  struct list_head rx_queue;
  #line 2248 
  int ret = 0;
  #line 2248 
  int work_done = 0;
  #line 2249 
  struct napi_struct *napi = & tp->napi;
  #line 2251 
  if (skb_queue_empty(& tp->rx_queue) == 0) 
    #line 2252 
    while (work_done < budget) {
      #line 2256 
      unsigned int pkt_len;
      #line 2253 
      struct sk_buff *skb = __skb_dequeue(& tp->rx_queue);
      #line 2254 
      struct net_device *netdev = tp->netdev;
      #line 2255 
      struct net_device_stats *stats = & netdev->stats;
      #line 2258 
      if (skb == (struct sk_buff *)0) 
                                      #line 2259 
                                      break;
      #line 2261 
      pkt_len = skb->len;
      #line 2262 
      napi_gro_receive(napi,skb);
      #line 2263 
      work_done ++;
      #line 2264 
      (stats->rx_packets) ++;
      #line 2265 
      stats->rx_bytes += (unsigned long)pkt_len;
    }
  #line 2269 
  if (list_empty(& tp->rx_done) != 0) 
                                      #line 2270 
                                      goto out1;
  #line 2272 
  INIT_LIST_HEAD(& rx_queue);
  #line 2273 
  cif___ldv_spin_lock_rx_lock_of_r8152(& tp->rx_lock);
  #line 2274 
  list_splice_init(& tp->rx_done,& rx_queue);
  #line 2275 
  cif_spin_unlock_irqrestore_rx_lock_of_r8152(& tp->rx_lock,flags);
  #line 2277 
  cursor = rx_queue.next;
  #line 2277 
  next = cursor->next;
  #line 2277 
  while (& rx_queue != cursor) {
    {
      #line 2286 
      void *__mptr;
      #line 2278 
      struct rx_desc *rx_desc;
      #line 2279 
      struct rx_agg *agg;
      #line 2279 
      struct rx_agg *agg_free;
      #line 2281 
      struct urb *urb;
      #line 2282 
      u8 *rx_data;
      #line 2280 
      int len_used = 0;
      #line 2284 
      list_del_init(cursor);
      #line 2286 
      __mptr = (void *)cursor;
      #line 2286 
      agg = ((struct rx_agg *)__mptr);
      #line 2287 
      urb = agg->urb;
      #line 2288 
      if (urb->actual_length <= 59U) 
                                     #line 2289 
                                     goto submit;
      #line 2291 
      agg_free = rtl_get_free_rx(tp,2592U);
      #line 2293 
      rx_desc = (struct rx_desc *)agg->buffer;
      #line 2294 
      rx_data = (u8 *)agg->buffer;
      #line 2295 
      len_used = (int)((unsigned int)len_used + 24U);
      #line 2297 
      while (urb->actual_length > (unsigned int)len_used) {
        #line 2300 
        unsigned int pkt_len_0;
        #line 2300 
        unsigned int rx_frag_head_sz;
        #line 2301 
        struct sk_buff *skb_0;
        #line 2298 
        struct net_device *netdev_0 = tp->netdev;
        #line 2299 
        struct net_device_stats *stats_0 = & netdev_0->stats;
        #line 2304 
        if ((long)(skb_queue_len(& tp->rx_queue) > 999U) != 0L) 
                                                                #line 2305 
                                                                break;
        #line 2307 
        pkt_len_0 = rx_desc->opts1 & 32767U;
        #line 2308 
        if (pkt_len_0 <= 59U) 
                              #line 2309 
                              break;
        #line 2311 
        len_used = (int)((unsigned int)len_used + pkt_len_0);
        #line 2312 
        if (urb->actual_length < (unsigned int)len_used) 
                                                         #line 2313 
                                                         break;
        #line 2315 
        pkt_len_0 += 4294967292U;
        #line 2316 
        rx_data += 24UL;
        #line 2318 
        if (agg_free == (struct rx_agg *)0 || tp->rx_copybreak > pkt_len_0) 
          #line 2319 
          rx_frag_head_sz = pkt_len_0; else 
                                            #line 2321 
                                            rx_frag_head_sz = tp->rx_copybreak;
        #line 2323 
        skb_0 = napi_alloc_skb(napi,rx_frag_head_sz);
        #line 2324 
        if (skb_0 == (struct sk_buff *)0) {
          #line 2325 
          (stats_0->rx_dropped) ++;
          #line 2326 
          goto find_next_rx;
        }
        #line 2329 
        skb_0->ip_summed = (unsigned char)r8152_rx_csum(tp,rx_desc);
        #line 2330 
        memcpy((void *)skb_0->data,(void *)rx_data,(unsigned long)rx_frag_head_sz);
        #line 2331 
        skb_put(skb_0,rx_frag_head_sz);
        #line 2332 
        pkt_len_0 -= rx_frag_head_sz;
        #line 2333 
        rx_data += (unsigned long)rx_frag_head_sz;
        #line 2334 
        if (pkt_len_0 != 0U) {
          #line 2335 
          ;
          #line 2335 
          ;
          #line 2335 
          ;
          #line 2335 
          ;
          #line 2335 
          skb_add_rx_frag(skb_0,0,agg->page,agg_offset(agg,(void *)rx_data),(int)pkt_len_0,(pkt_len_0 + 63U) & 4294967232U);
          #line 2339 
          get_page(agg->page);
        }
        #line 2342 
        skb_0->protocol = eth_type_trans(skb_0,netdev_0);
        #line 2343 
        rtl_rx_vlan_tag(rx_desc,skb_0);
        #line 2344 
        if (work_done < budget) {
          #line 2345 
          work_done ++;
          #line 2346 
          (stats_0->rx_packets) ++;
          #line 2347 
          stats_0->rx_bytes += (unsigned long)skb_0->len;
          #line 2348 
          napi_gro_receive(napi,skb_0);
        }
        else 
             #line 2350 
             __skb_queue_tail(& tp->rx_queue,skb_0);
        #line 2353 
        find_next_rx: 
                      #line 2353 
        ;
        #line 2354 
        rx_data = (u8 *)rx_agg_align((void *)(rx_data + ((unsigned long)pkt_len_0 + (unsigned long)4U)));
        #line 2355 
        rx_desc = (struct rx_desc *)rx_data;
        #line 2356 
        len_used = agg_offset(agg,(void *)rx_data);
        #line 2357 
        len_used = (int)((unsigned int)len_used + 24U);
      }
      {
        #line 2360 
        int tmp_8;
        #line 2360 
        if (agg_free == (struct rx_agg *)0) {
          #line 2360 
          if (page_count(agg->page) > 1) 
                                         #line 2360 
                                         tmp_8 = 1; else 
                                                         #line 2360 
                                                         tmp_8 = 0;
        }
        else 
             #line 2360 
             tmp_8 = 0;
        #line 2360 
        int __ret_warn_on = tmp_8;
        #line 2360 
        if ((long)(__ret_warn_on != 0) != 0L) {
          #line 2361 
          ldv_inline_asm();
          #line 2362 
          ldv_inline_asm();
        }
        #line 2360 
        long tmp_9 = (long)(__ret_warn_on != 0);
      }
      #line 2362 
      if (agg_free != (struct rx_agg *)0) {
        #line 2363 
        cif___ldv_spin_lock_rx_lock_of_r8152(& tp->rx_lock);
        #line 2364 
        if (page_count(agg->page) == 1) 
                                        #line 2365 
                                        list_add(& agg_free->list,& tp->rx_used);
        else {
          #line 2367 
          list_add_tail(& agg->list,& tp->rx_used);
          #line 2368 
          agg = agg_free;
          #line 2369 
          urb = agg->urb;
        }
        #line 2371 
        cif_spin_unlock_irqrestore_rx_lock_of_r8152(& tp->rx_lock,flags);
      }
      #line 2374 
      submit: 
              #line 2374 
      ;
      #line 2375 
      if (ret == 0) 
                    #line 2376 
                    ret = r8152_submit_rx(tp,agg,2592U);
      else {
        #line 2378 
        urb->actual_length = 0U;
        #line 2379 
        list_add_tail(& agg->list,next);
      }
    }
    #line 2277 
    cursor = next;
    #line 2277 
    next = cursor->next;
  }
  #line 2383 
  if (list_empty(& rx_queue) == 0) {
    #line 2384 
    cif___ldv_spin_lock_rx_lock_of_r8152(& tp->rx_lock);
    #line 2385 
    list_splice_tail(& rx_queue,& tp->rx_done);
    #line 2386 
    cif_spin_unlock_irqrestore_rx_lock_of_r8152(& tp->rx_lock,flags);
  }
  #line 2389 
  out1: 
        #line 2389 
  ;
  #line 2390 
  return work_done;
}

#line 2393  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static void tx_bottom(struct r8152 *tp)
{
  #line 2395 
  int res;
  #line 2397 
  while (1) {
    {
      #line 2399 
      struct tx_agg *agg;
      #line 2398 
      struct net_device *netdev = tp->netdev;
      #line 2401 
      if (skb_queue_empty(& tp->tx_queue) != 0) 
                                                #line 2402 
                                                break;
      #line 2404 
      agg = r8152_get_tx_agg(tp);
      #line 2405 
      if (agg == (struct tx_agg *)0) 
                                     #line 2406 
                                     break;
      #line 2408 
      res = r8152_tx_agg_fill(tp,agg);
      #line 2409 
      if (res == 0) 
                    #line 2410 
                    goto __Cont;
      #line 2412 
      if (res == -19) {
        #line 2413 
        rtl_set_unplug(tp);
        #line 2414 
        netif_device_detach(netdev);
      }
      else {
        #line 2417 
        unsigned long flags;
        #line 2416 
        struct net_device_stats *stats = & netdev->stats;
        #line 2419 
        if ((tp->msg_enable & 128U) != 0U) 
                                           #line 2419 
                                           netdev_warn(netdev,(char *)"failed tx_urb %d\n",res);
        #line 2421 
        stats->tx_dropped += (unsigned long)agg->skb_num;
        #line 2423 
        cif___ldv_spin_lock_tx_lock_of_r8152(& tp->tx_lock);
        #line 2424 
        list_add_tail(& agg->list,& tp->tx_free);
        #line 2425 
        cif_spin_unlock_irqrestore_tx_lock_of_r8152(& tp->tx_lock,flags);
      }
    }
    #line 2397 
    __Cont: 
            #line 2427 
    ;
    #line 2427 
    if (! (res == 0)) 
                      #line 2397 
                      break;
  }
  #line 2428 
  return;
}

#line 2430  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static void bottom_half(unsigned long data)
{
  #line 2432 
  struct r8152 *tp;
  #line 2434 
  tp = (struct r8152 *)data;
  #line 2436 
  if ((int)test_bit(0L,& tp->flags) != 0) 
                                          #line 2437 
                                          return;
  #line 2439 
  if (! test_bit(2L,& tp->flags)) 
                                  #line 2440 
                                  return;
  #line 2444 
  if (! netif_carrier_ok(tp->netdev)) 
                                      #line 2445 
                                      return;
  #line 2447 
  cif_clear_bit(6L,& tp->flags);
  #line 2449 
  tx_bottom(tp);
  #line 2450 
  return;
}

#line 2452  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static int r8152_poll(struct napi_struct *napi, int budget)
{
  #line 2454 
  void *__mptr;
  #line 2455 
  int work_done;
  #line 2454 
  __mptr = (void *)napi;
  #line 2454 
  struct r8152 *tp = ((struct r8152 *)(__mptr + 18446744073709551600U));
  #line 2457 
  work_done = rx_bottom(tp,budget);
  #line 2459 
  if (work_done < budget) {
    #line 2460 
    if (! napi_complete_done(napi,work_done)) 
                                              #line 2461 
                                              goto out;
    #line 2462 
    if (list_empty(& tp->rx_done) == 0) 
                                        #line 2463 
                                        napi_schedule(napi);
  }
  #line 2466 
  out: 
       #line 2466 
  ;
  #line 2467 
  return work_done;
}

#line 2471  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static int r8152_submit_rx(struct r8152 *tp, struct rx_agg *agg, gfp_t mem_flags)
{
  #line 2473 
  int ret;
  #line 2476 
  if ((int)test_bit(0L,& tp->flags) != 0) 
                                          #line 2478 
                                          return 0;
  else {
    #line 2477 
    if (test_bit(2L,& tp->flags)) {
      #line 2477 
      if (! netif_carrier_ok(tp->netdev)) 
                                          #line 2478 
                                          return 0;
    }
    else 
         #line 2478 
         return 0;
  }
  #line 2480 
  ;
  #line 2480 
  ;
  #line 2480 
  ;
  #line 2480 
  ;
  #line 2480 
  ;
  #line 2480 
  usb_fill_bulk_urb(agg->urb,tp->udev,__create_pipe(tp->udev,1U) | 3221225600U,agg->buffer,(int)tp->rx_buf_sz,& read_bulk_callback,(void *)agg);
  #line 2484 
  ret = cif_usb_submit_urb(agg->urb,mem_flags);
  #line 2485 
  if (ret == -19) {
    #line 2486 
    rtl_set_unplug(tp);
    #line 2487 
    netif_device_detach(tp->netdev);
  }
  else 
    #line 2488 
    if (ret != 0) {
      #line 2490 
      unsigned long flags;
      #line 2489 
      struct urb *urb = agg->urb;
      #line 2492 
      urb->actual_length = 0U;
      #line 2493 
      cif___ldv_spin_lock_rx_lock_of_r8152(& tp->rx_lock);
      #line 2494 
      list_add_tail(& agg->list,& tp->rx_done);
      #line 2495 
      cif_spin_unlock_irqrestore_rx_lock_of_r8152(& tp->rx_lock,flags);
      #line 2497 
      if ((tp->msg_enable & 64U) != 0U) 
                                        #line 2497 
                                        netdev_err(tp->netdev,(char *)"Couldn\'t submit rx[%p], ret = %d\n",agg,ret);
      #line 2500 
      napi_schedule(& tp->napi);
    }
  #line 2503 
  return ret;
}

#line 2506  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static void rtl_drop_queued_tx(struct r8152 *tp)
{
  #line 2509 
  struct sk_buff_head skb_head;
  #line 2510 
  struct sk_buff *skb;
  #line 2508 
  struct net_device_stats *stats = & (tp->netdev)->stats;
  #line 2509 
  struct sk_buff_head *tx_queue = & tp->tx_queue;
  #line 2512 
  if (skb_queue_empty(tx_queue) != 0) 
                                      #line 2513 
                                      return;
  #line 2515 
  __skb_queue_head_init(& skb_head);
  #line 2516 
  cif_spin_lock_bh_lock_of_sk_buff_head(& tx_queue->lock);
  #line 2517 
  skb_queue_splice_init(tx_queue,& skb_head);
  #line 2518 
  cif_spin_unlock_bh_lock_of_sk_buff_head(& tx_queue->lock);
  #line 2520 
  while (1) {
    #line 2520 
    skb = __skb_dequeue(& skb_head);
    #line 2520 
    if (! (skb != (struct sk_buff *)0)) 
                                        #line 2520 
                                        break;
    #line 2521 
    consume_skb(skb);
    #line 2522 
    (stats->tx_dropped) ++;
  }
  #line 2524 
  return;
}

#line 2526  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static void rtl8152_tx_timeout(struct net_device *netdev)
{
  #line 2528 
  struct r8152 *tp = netdev_priv(netdev);
  #line 2530 
  if ((tp->msg_enable & 128U) != 0U) 
                                     #line 2530 
                                     netdev_warn(netdev,(char *)"Tx timeout\n");
  #line 2532 
  usb_queue_reset_device(tp->intf);
  #line 2533 
  return;
}

#line 2535  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static void rtl8152_set_rx_mode(struct net_device *netdev)
{
  #line 2537 
  struct r8152 *tp = netdev_priv(netdev);
  #line 2539 
  if ((int)netif_carrier_ok(netdev) != 0) {
    #line 2540 
    cif_set_bit(1L,& tp->flags);
    #line 2541 
    cif_schedule_delayed_work(& tp->schedule,0UL);
  }
  #line 2543 
  return;
}

#line 2545  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static void _rtl8152_set_rx_mode(struct net_device *netdev)
{
  #line 2548 
  u32 mc_filter[2U];
  #line 2549 
  __le32 tmp[2U];
  #line 2550 
  u32 ocp_data;
  #line 2547 
  struct r8152 *tp = netdev_priv(netdev);
  #line 2552 
  netif_stop_queue(netdev);
  #line 2553 
  ocp_data = ocp_read_dword(tp,(unsigned short)256,(unsigned short)49168);
  #line 2554 
  ocp_data &= 4294967280U;
  #line 2555 
  ocp_data |= 10U;
  #line 2557 
  if ((netdev->flags & 256U) != 0U) {
    #line 2559 
    if ((tp->msg_enable & 4U) != 0U) 
                                     #line 2559 
                                     netdev_notice(netdev,(char *)"Promiscuous mode enabled\n");
    #line 2560 
    ocp_data |= 5U;
    #line 2561 
    mc_filter[1] = 4294967295U;
    #line 2562 
    mc_filter[0] = 4294967295U;
  }
  else 
    #line 2563 
    if (netdev->mc.count > 32 || (netdev->flags & 512U) != 0U) {
      #line 2566 
      ocp_data |= 4U;
      #line 2567 
      mc_filter[1] = 4294967295U;
      #line 2568 
      mc_filter[0] = 4294967295U;
    }
    else {
      #line 2574 
      void *__mptr;
      #line 2570 
      struct netdev_hw_addr *ha;
      #line 2572 
      mc_filter[1] = 0U;
      #line 2573 
      mc_filter[0] = 0U;
      #line 2574 
      __mptr = (void *)netdev->mc.list.next;
      #line 2574 
      ha = ((struct netdev_hw_addr *)__mptr);
      #line 2574 
      while (& ha->list != & netdev->mc.list) {
        #line 2574 
        void *__mptr_0;
        {
          #line 2575 
          u32 ___x;
          #line 2575 
          u32 tmp_6;
          {
            #line 2575 
            u32 __x = crc32_le(4294967295U,(unsigned char *)(& ha->addr),6UL);
            #line 2575 
            if (0 != 0) {
              #line 2575 
              ___x = __x;
              #line 2575 
              ___x = (___x << 16) | (___x << ((unsigned long)8 * sizeof(___x) - (unsigned long)16));
              #line 2575 
              ___x = ((___x >> 8) & 16711935U) | ((___x << 8) & 4278255360U);
              #line 2575 
              ___x = ((___x >> 4) & 252645135U) | ((___x << 4) & 4042322160U);
              #line 2575 
              ___x = ((___x >> 2) & 858993459U) | ((___x << 2) & 3435973836U);
              #line 2575 
              ___x = ((___x >> 1) & 1431655765U) | ((___x << 1) & 2863311530U);
              #line 2575 
              tmp_6 = ___x;
            }
            else 
                 #line 2575 
                 tmp_6 = __bitrev32(__x);
            }
          #line 2575 
          int bit_nr = (int)(tmp_6 >> 26);
          #line 2577 
          mc_filter[bit_nr >> 5] |= (unsigned int)(1 << (bit_nr & 31));
          #line 2578 
          ocp_data |= 4U;
        }
        #line 2574 
        __mptr_0 = (void *)ha->list.next;
        #line 2574 
        ha = ((struct netdev_hw_addr *)__mptr_0);
      }
    }
  #line 2582 
  tmp[0] = __builtin_bswap32(mc_filter[1]);
  #line 2583 
  tmp[1] = __builtin_bswap32(mc_filter[0]);
  #line 2585 
  pla_ocp_write(tp,(unsigned short)52480,(unsigned short)255,(unsigned short)8,(void *)(& tmp));
  #line 2586 
  ocp_write_dword(tp,(unsigned short)256,(unsigned short)49168,ocp_data);
  #line 2587 
  netif_wake_queue(netdev);
  #line 2588 
  return;
}

#line 2591  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static netdev_features_t rtl8152_features_check(struct sk_buff *skb, struct net_device *dev, netdev_features_t features)
{
  #line 2595 
  int tmp_0;
  #line 2594 
  u32 mss = (unsigned int)((struct skb_shared_info *)skb_end_pointer(skb))->gso_size;
  #line 2595 
  if (mss != 0U) 
                 #line 2595 
                 tmp_0 = 127; else 
                                   #line 2595 
                                   tmp_0 = 2047;
  #line 2595 
  int max_offset = tmp_0;
  #line 2596 
  int offset = skb_transport_offset(skb);
  #line 2598 
  if ((mss != 0U || (unsigned int)skb->ip_summed == 3U) && offset > max_offset) 
    #line 2599 
    features &= 18446744056529747941ULL;
  else 
    #line 2600 
    if ((unsigned long)skb->len + 8UL > (unsigned long)agg_buf_sz) 
                                                                   #line 2601 
                                                                   features &= 18446744056529747967ULL;
  #line 2603 
  return features;
}

#line 2606  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static netdev_tx_t rtl8152_start_xmit(struct sk_buff *skb, struct net_device *netdev)
{
  #line 2609 
  struct r8152 *tp = netdev_priv(netdev);
  #line 2611 
  skb_tx_timestamp(skb);
  #line 2613 
  skb_queue_tail(& tp->tx_queue,skb);
  #line 2615 
  if (list_empty(& tp->tx_free) == 0) {
    #line 2616 
    if ((int)test_bit(4L,& tp->flags) != 0) {
      #line 2617 
      cif_set_bit(6L,& tp->flags);
      #line 2618 
      cif_schedule_delayed_work(& tp->schedule,0UL);
    }
    else {
      #line 2620 
      usb_mark_last_busy(tp->udev);
      #line 2621 
      cif_tasklet_schedule(& tp->tx_tl);
    }
  }
  else {
    #line 2623 
    ;
    #line 2623 
    if (skb_queue_len(& tp->tx_queue) > tp->tx_qlen) 
                                                     #line 2624 
                                                     netif_stop_queue(netdev);
  }
  #line 2627 
  return NETDEV_TX_OK;
}

#line 2630  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static void r8152b_reset_packet_filter(struct r8152 *tp)
{
  #line 2632 
  u32 ocp_data;
  #line 2634 
  ocp_data = (unsigned int)ocp_read_word(tp,(unsigned short)256,(unsigned short)49332);
  #line 2635 
  ocp_data &= 4294967294U;
  #line 2636 
  ocp_write_word(tp,(unsigned short)256,(unsigned short)49332,ocp_data);
  #line 2637 
  ocp_data |= 1U;
  #line 2638 
  ocp_write_word(tp,(unsigned short)256,(unsigned short)49332,ocp_data);
  #line 2639 
  return;
}

#line 2641  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static void rtl8152_nic_reset(struct r8152 *tp)
{
  #line 2643 
  int i;
  #line 2645 
  ocp_write_byte(tp,(unsigned short)256,(unsigned short)59411,16U);
  #line 2647 
  i = 0;
  #line 2647 
  while (i <= 999) {
    {
      #line 2648 
      if (((int)ocp_read_byte(tp,(unsigned short)256,(unsigned short)59411) & 16) == 0) 
        #line 2649 
        break;
      #line 2650 
      usleep_range(100UL,400UL);
    }
    #line 2647 
    i ++;
  }
  #line 2652 
  return;
}

#line 2654  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static void set_tx_qlen(struct r8152 *tp)
{
  #line 2656 
  struct net_device *netdev = tp->netdev;
  #line 2658 
  tp->tx_qlen = (unsigned int)((unsigned long)agg_buf_sz / ((unsigned long)(netdev->mtu + 22U) + 8UL));
  #line 2659 
  return;
}

#line 2662  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
__inline static u8 rtl8152_get_speed(struct r8152 *tp)
{
  #line 2664 
  return ocp_read_byte(tp,(unsigned short)256,(unsigned short)59656);
}

#line 2667  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static void rtl_set_eee_plus(struct r8152 *tp)
{
  #line 2669 
  u32 ocp_data;
  #line 2670 
  u8 speed;
  #line 2672 
  speed = rtl8152_get_speed(tp);
  #line 2673 
  if (((int)speed & 4) != 0) {
    #line 2674 
    ocp_data = (unsigned int)ocp_read_word(tp,(unsigned short)256,(unsigned short)57472);
    #line 2675 
    ocp_data |= 2U;
    #line 2676 
    ocp_write_word(tp,(unsigned short)256,(unsigned short)57472,ocp_data);
  }
  else {
    #line 2678 
    ocp_data = (unsigned int)ocp_read_word(tp,(unsigned short)256,(unsigned short)57472);
    #line 2679 
    ocp_data &= 4294967293U;
    #line 2680 
    ocp_write_word(tp,(unsigned short)256,(unsigned short)57472,ocp_data);
  }
  #line 2682 
  return;
}

#line 2684  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static void rxdy_gated_en(struct r8152 *tp, bool enable)
{
  #line 2686 
  u32 ocp_data;
  #line 2688 
  ocp_data = (unsigned int)ocp_read_word(tp,(unsigned short)256,(unsigned short)59482);
  #line 2689 
  if ((int)enable != 0) 
                        #line 2690 
                        ocp_data |= 8U; else 
                                             #line 2692 
                                             ocp_data &= 4294967287U;
  #line 2693 
  ocp_write_word(tp,(unsigned short)256,(unsigned short)59482,ocp_data);
  #line 2694 
  return;
}

#line 2696  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static int rtl_start_rx(struct r8152 *tp)
{
  #line 2714 
  void *__mptr_0;
  #line 2714 
  void *__mptr;
  #line 2698 
  struct rx_agg *agg;
  #line 2698 
  struct rx_agg *agg_next;
  #line 2699 
  struct list_head tmp_list;
  #line 2700 
  unsigned long flags;
  #line 2701 
  int ret = 0;
  #line 2701 
  int i = 0;
  #line 2703 
  INIT_LIST_HEAD(& tmp_list);
  #line 2705 
  cif___ldv_spin_lock_rx_lock_of_r8152(& tp->rx_lock);
  #line 2707 
  INIT_LIST_HEAD(& tp->rx_done);
  #line 2708 
  INIT_LIST_HEAD(& tp->rx_used);
  #line 2710 
  list_splice_init(& tp->rx_info,& tmp_list);
  #line 2712 
  cif_spin_unlock_irqrestore_rx_lock_of_r8152(& tp->rx_lock,flags);
  #line 2714 
  __mptr = (void *)tmp_list.next;
  #line 2714 
  agg = ((struct rx_agg *)(__mptr + 18446744073709551600U));
  #line 2714 
  __mptr_0 = (void *)agg->info_list.next;
  #line 2715 
  agg_next = ((struct rx_agg *)(__mptr_0 + 18446744073709551600U));
  #line 2714 
  while (& agg->info_list != & tmp_list) {
    #line 2714 
    void *__mptr_1;
    #line 2715 
    INIT_LIST_HEAD(& agg->list);
    #line 2718 
    i ++;
    #line 2718 
    if (i > 10) {
      #line 2719 
      cif___ldv_spin_lock_rx_lock_of_r8152(& tp->rx_lock);
      #line 2720 
      list_add_tail(& agg->list,& tp->rx_used);
      #line 2721 
      cif_spin_unlock_irqrestore_rx_lock_of_r8152(& tp->rx_lock,flags);
    }
    else 
      #line 2722 
      if ((long)(ret < 0) != 0L) {
        #line 2723 
        cif___ldv_spin_lock_rx_lock_of_r8152(& tp->rx_lock);
        #line 2724 
        list_add_tail(& agg->list,& tp->rx_done);
        #line 2725 
        cif_spin_unlock_irqrestore_rx_lock_of_r8152(& tp->rx_lock,flags);
      }
      else 
           #line 2727 
           ret = r8152_submit_rx(tp,agg,3264U);
    #line 2714 
    agg = agg_next;
    #line 2714 
    __mptr_1 = (void *)agg_next->info_list.next;
    #line 2714 
    agg_next = ((struct rx_agg *)(__mptr_1 + 18446744073709551600U));
  }
  #line 2731 
  cif___ldv_spin_lock_rx_lock_of_r8152(& tp->rx_lock);
  {
    #line 2732 
    int __ret_warn_on = list_empty(& tp->rx_info) == 0;
    #line 2732 
    if ((long)(__ret_warn_on != 0) != 0L) {
      #line 2733 
      ldv_inline_asm();
      #line 2734 
      ldv_inline_asm();
    }
    #line 2732 
    long tmp_3 = (long)(__ret_warn_on != 0);
  }
  #line 2733 
  list_splice(& tmp_list,& tp->rx_info);
  #line 2734 
  cif_spin_unlock_irqrestore_rx_lock_of_r8152(& tp->rx_lock,flags);
  #line 2736 
  return ret;
}

#line 2739  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static int rtl_stop_rx(struct r8152 *tp)
{
  #line 2757 
  void *__mptr_0;
  #line 2757 
  void *__mptr;
  #line 2741 
  struct rx_agg *agg;
  #line 2741 
  struct rx_agg *agg_next;
  #line 2742 
  struct list_head tmp_list;
  #line 2743 
  unsigned long flags;
  #line 2745 
  INIT_LIST_HEAD(& tmp_list);
  #line 2753 
  cif___ldv_spin_lock_rx_lock_of_r8152(& tp->rx_lock);
  #line 2754 
  list_splice_init(& tp->rx_info,& tmp_list);
  #line 2755 
  cif_spin_unlock_irqrestore_rx_lock_of_r8152(& tp->rx_lock,flags);
  #line 2757 
  __mptr = (void *)tmp_list.next;
  #line 2757 
  agg = ((struct rx_agg *)(__mptr + 18446744073709551600U));
  #line 2757 
  __mptr_0 = (void *)agg->info_list.next;
  #line 2758 
  agg_next = ((struct rx_agg *)(__mptr_0 + 18446744073709551600U));
  #line 2757 
  while (& agg->info_list != & tmp_list) {
    #line 2757 
    void *__mptr_1;
    #line 2761 
    if (page_count(agg->page) > 1) 
                                   #line 2762 
                                   free_rx_agg(tp,agg); else 
                                                             #line 2764 
                                                             cif_usb_kill_urb(agg->urb);
    #line 2757 
    agg = agg_next;
    #line 2757 
    __mptr_1 = (void *)agg_next->info_list.next;
    #line 2757 
    agg_next = ((struct rx_agg *)(__mptr_1 + 18446744073709551600U));
  }
  #line 2768 
  cif___ldv_spin_lock_rx_lock_of_r8152(& tp->rx_lock);
  {
    #line 2769 
    int __ret_warn_on = list_empty(& tp->rx_info) == 0;
    #line 2769 
    if ((long)(__ret_warn_on != 0) != 0L) {
      #line 2770 
      ldv_inline_asm();
      #line 2771 
      ldv_inline_asm();
    }
    #line 2769 
    long tmp_4 = (long)(__ret_warn_on != 0);
  }
  #line 2770 
  list_splice(& tmp_list,& tp->rx_info);
  #line 2771 
  cif_spin_unlock_irqrestore_rx_lock_of_r8152(& tp->rx_lock,flags);
  #line 2773 
  while (1) {
    #line 2773 
    if (! (skb_queue_empty(& tp->rx_queue) == 0)) 
                                                  #line 2773 
                                                  break;
    #line 2774 
    consume_skb(__skb_dequeue(& tp->rx_queue));
  }
  #line 2776 
  return 0;
}

#line 2779  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
__inline static void r8153b_rx_agg_chg_indicate(struct r8152 *tp)
{
  #line 2781 
  ocp_write_byte(tp,(unsigned short)0,(unsigned short)54327,3U);
  #line 2782 
  return;
}

#line 2785  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static int rtl_enable(struct r8152 *tp)
{
  #line 2787 
  u32 ocp_data;
  #line 2789 
  r8152b_reset_packet_filter(tp);
  #line 2791 
  ocp_data = (unsigned int)ocp_read_byte(tp,(unsigned short)256,(unsigned short)59411);
  #line 2792 
  ocp_data |= 12U;
  #line 2793 
  ocp_write_byte(tp,(unsigned short)256,(unsigned short)59411,ocp_data);
  #line 2795 
  switch ((int)tp->version) {
    #line 2796 
    case 8: 
            #line 2796 
    ;
    #line 2797 
    case 9: 
            #line 2797 
    ;
    #line 2798 
    r8153b_rx_agg_chg_indicate(tp);
    #line 2799 
    break;
    #line 2800 
    default: 
             #line 2800 
    ;
    #line 2801 
    break;
  }
  #line 2804 
  rxdy_gated_en(tp,(_Bool)0);
  #line 2806 
  return 0;
}

#line 2809  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static int rtl8152_enable(struct r8152 *tp)
{
  #line 2811 
  if ((int)test_bit(0L,& tp->flags) != 0) 
                                          #line 2812 
                                          return -19;
  #line 2814 
  set_tx_qlen(tp);
  #line 2815 
  rtl_set_eee_plus(tp);
  #line 2817 
  return rtl_enable(tp);
}

#line 2820  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static void r8153_set_rx_early_timeout(struct r8152 *tp)
{
  #line 2822 
  u32 ocp_data = tp->coalesce / 8U;
  #line 2824 
  switch ((int)tp->version) {
    #line 2825 
    case 3: 
            #line 2825 
    ;
    #line 2826 
    case 4: 
            #line 2826 
    ;
    #line 2827 
    case 5: 
            #line 2827 
    ;
    #line 2828 
    case 6: 
            #line 2828 
    ;
    #line 2829 
    ocp_write_word(tp,(unsigned short)0,(unsigned short)54316,ocp_data);
    #line 2831 
    break;
    #line 2833 
    case 8: 
            #line 2833 
    ;
    #line 2834 
    case 9: 
            #line 2834 
    ;
    #line 2838 
    ocp_write_word(tp,(unsigned short)0,(unsigned short)54316,16U);
    #line 2840 
    ocp_write_word(tp,(unsigned short)0,(unsigned short)54322,ocp_data);
    #line 2842 
    break;
    #line 2844 
    default: 
             #line 2844 
    ;
    #line 2845 
    break;
  }
  #line 2847 
  return;
}

#line 2849  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static void r8153_set_rx_early_size(struct r8152 *tp)
{
  #line 2851 
  u32 ocp_data = (tp->rx_buf_sz - (tp->netdev)->mtu) + 4294967242U;
  #line 2853 
  switch ((int)tp->version) {
    #line 2854 
    case 3: 
            #line 2854 
    ;
    #line 2855 
    case 4: 
            #line 2855 
    ;
    #line 2856 
    case 5: 
            #line 2856 
    ;
    #line 2857 
    case 6: 
            #line 2857 
    ;
    #line 2858 
    ocp_write_word(tp,(unsigned short)0,(unsigned short)54318,ocp_data / 4U);
    #line 2860 
    break;
    #line 2861 
    case 8: 
            #line 2861 
    ;
    #line 2862 
    case 9: 
            #line 2862 
    ;
    #line 2863 
    ocp_write_word(tp,(unsigned short)0,(unsigned short)54318,ocp_data / 8U);
    #line 2865 
    break;
    #line 2866 
    default: 
             #line 2866 
    ;
    {
      #line 2867 
      int __ret_warn_on = 1;
      #line 2867 
      if ((long)(__ret_warn_on != 0) != 0L) {
        #line 2868 
        ldv_inline_asm();
        #line 2869 
        ldv_inline_asm();
      }
      #line 2867 
      long tmp = (long)(__ret_warn_on != 0);
    }
    #line 2868 
    break;
  }
  #line 2870 
  return;
}

#line 2872  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static int rtl8153_enable(struct r8152 *tp)
{
  #line 2874 
  if ((int)test_bit(0L,& tp->flags) != 0) 
                                          #line 2875 
                                          return -19;
  #line 2877 
  set_tx_qlen(tp);
  #line 2878 
  rtl_set_eee_plus(tp);
  #line 2879 
  r8153_set_rx_early_timeout(tp);
  #line 2880 
  r8153_set_rx_early_size(tp);
  #line 2882 
  if ((unsigned int)tp->version == 9U) {
    #line 2883 
    u32 ocp_data;
    #line 2885 
    ocp_data = (unsigned int)ocp_read_word(tp,(unsigned short)0,(unsigned short)54504);
    #line 2886 
    ocp_data &= 4294967293U;
    #line 2887 
    ocp_write_word(tp,(unsigned short)0,(unsigned short)54504,ocp_data);
    #line 2888 
    usleep_range(1000UL,2000UL);
    #line 2889 
    ocp_data |= 2U;
    #line 2890 
    ocp_write_word(tp,(unsigned short)0,(unsigned short)54504,ocp_data);
  }
  #line 2893 
  return rtl_enable(tp);
}

#line 2896  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static void rtl_disable(struct r8152 *tp)
{
  #line 2898 
  u32 ocp_data;
  #line 2899 
  int i;
  #line 2901 
  if ((int)test_bit(0L,& tp->flags) != 0) {
    #line 2902 
    rtl_drop_queued_tx(tp);
    #line 2903 
    return;
  }
  #line 2906 
  ocp_data = ocp_read_dword(tp,(unsigned short)256,(unsigned short)49168);
  #line 2907 
  ocp_data &= 4294967280U;
  #line 2908 
  ocp_write_dword(tp,(unsigned short)256,(unsigned short)49168,ocp_data);
  #line 2910 
  rtl_drop_queued_tx(tp);
  #line 2912 
  i = 0;
  #line 2912 
  while (i <= 3) {
    #line 2913 
    cif_usb_kill_urb(tp->tx_info[i].urb);
    #line 2912 
    i ++;
  }
  #line 2915 
  rxdy_gated_en(tp,(_Bool)1);
  #line 2917 
  i = 0;
  #line 2917 
  while (i <= 999) {
    {
      #line 2918 
      ocp_data = (unsigned int)ocp_read_byte(tp,(unsigned short)256,(unsigned short)59471);
      #line 2919 
      if ((ocp_data & 48U) == 48U) 
                                   #line 2920 
                                   break;
      #line 2921 
      usleep_range(1000UL,2000UL);
    }
    #line 2917 
    i ++;
  }
  #line 2924 
  i = 0;
  #line 2924 
  while (i <= 999) {
    {
      #line 2925 
      if (((int)ocp_read_word(tp,(unsigned short)256,(unsigned short)58896) & 2048) != 0) 
        #line 2926 
        break;
      #line 2927 
      usleep_range(1000UL,2000UL);
    }
    #line 2924 
    i ++;
  }
  #line 2930 
  rtl_stop_rx(tp);
  #line 2932 
  rtl8152_nic_reset(tp);
  #line 2933 
  return;
}

#line 2935  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static void r8152_power_cut_en(struct r8152 *tp, bool enable)
{
  #line 2937 
  u32 ocp_data;
  #line 2939 
  ocp_data = (unsigned int)ocp_read_word(tp,(unsigned short)0,(unsigned short)55296);
  #line 2940 
  if ((int)enable != 0) 
                        #line 2941 
                        ocp_data |= 256U; else 
                                               #line 2943 
                                               ocp_data &= 4294967039U;
  #line 2944 
  ocp_write_word(tp,(unsigned short)0,(unsigned short)55296,ocp_data);
  #line 2946 
  ocp_data = (unsigned int)ocp_read_word(tp,(unsigned short)0,(unsigned short)54322);
  #line 2947 
  ocp_data &= 4294967294U;
  #line 2948 
  ocp_write_word(tp,(unsigned short)0,(unsigned short)54322,ocp_data);
  #line 2949 
  return;
}

#line 2951  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static void rtl_rx_vlan_en(struct r8152 *tp, bool enable)
{
  #line 2953 
  u32 ocp_data;
  #line 2955 
  ocp_data = (unsigned int)ocp_read_word(tp,(unsigned short)256,(unsigned short)59476);
  #line 2956 
  if ((int)enable != 0) 
                        #line 2957 
                        ocp_data |= 64U; else 
                                              #line 2959 
                                              ocp_data &= 4294967231U;
  #line 2960 
  ocp_write_word(tp,(unsigned short)256,(unsigned short)59476,ocp_data);
  #line 2961 
  return;
}

#line 2963  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static int rtl8152_set_features(struct net_device *dev, netdev_features_t features)
{
  #line 2968 
  int ret;
  #line 2966 
  netdev_features_t changed = dev->features ^ features;
  #line 2967 
  struct r8152 *tp = netdev_priv(dev);
  #line 2970 
  ret = usb_autopm_get_interface(tp->intf);
  #line 2971 
  if (ret < 0) 
               #line 2972 
               goto out;
  #line 2974 
  cif_mutex_lock_control_of_r8152(& tp->control);
  #line 2976 
  if ((changed & 256ULL) != 0ULL) 
    #line 2977 
    if ((features & 256ULL) != 0ULL) 
                                     #line 2978 
                                     rtl_rx_vlan_en(tp,(_Bool)1); else 
                                                                    #line 2980 
                                                                    rtl_rx_vlan_en(tp,(_Bool)0);
  #line 2983 
  cif_mutex_unlock_control_of_r8152(& tp->control);
  #line 2985 
  usb_autopm_put_interface(tp->intf);
  #line 2987 
  out: 
       #line 2987 
  ;
  #line 2988 
  return ret;
}

#line 2993  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static u32 __rtl_get_wol(struct r8152 *tp)
{
  #line 2995 
  u32 ocp_data;
  #line 2996 
  u32 wolopts = 0U;
  #line 2998 
  ocp_data = (unsigned int)ocp_read_word(tp,(unsigned short)256,(unsigned short)59424);
  #line 2999 
  if ((ocp_data & 16U) != 0U) 
                              #line 3000 
                              wolopts |= 1U;
  #line 3002 
  ocp_data = (unsigned int)ocp_read_word(tp,(unsigned short)256,(unsigned short)59426);
  #line 3003 
  if ((ocp_data & 16U) != 0U) 
                              #line 3004 
                              wolopts |= 2U;
  #line 3005 
  if ((ocp_data & 64U) != 0U) 
                              #line 3006 
                              wolopts |= 8U;
  #line 3007 
  if ((ocp_data & 32U) != 0U) 
                              #line 3008 
                              wolopts |= 4U;
  #line 3010 
  ocp_data = (unsigned int)ocp_read_word(tp,(unsigned short)256,(unsigned short)49334);
  #line 3011 
  if ((ocp_data & 1U) != 0U) 
                             #line 3012 
                             wolopts |= 32U;
  #line 3014 
  return wolopts;
}

#line 3017  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static void __rtl_set_wol(struct r8152 *tp, u32 wolopts)
{
  #line 3019 
  u32 ocp_data;
  #line 3021 
  ocp_write_byte(tp,(unsigned short)256,(unsigned short)59420,192U);
  #line 3023 
  ocp_data = (unsigned int)ocp_read_word(tp,(unsigned short)256,(unsigned short)59424);
  #line 3024 
  ocp_data &= 4294967279U;
  #line 3025 
  if ((wolopts & 1U) != 0U) 
                            #line 3026 
                            ocp_data |= 16U;
  #line 3027 
  ocp_write_word(tp,(unsigned short)256,(unsigned short)59424,ocp_data);
  #line 3029 
  ocp_data = (unsigned int)ocp_read_word(tp,(unsigned short)256,(unsigned short)59426);
  #line 3030 
  ocp_data &= 4294967183U;
  #line 3031 
  if ((wolopts & 2U) != 0U) 
                            #line 3032 
                            ocp_data |= 16U;
  #line 3033 
  if ((wolopts & 8U) != 0U) 
                            #line 3034 
                            ocp_data |= 64U;
  #line 3035 
  if ((wolopts & 4U) != 0U) 
                            #line 3036 
                            ocp_data |= 32U;
  #line 3037 
  ocp_write_word(tp,(unsigned short)256,(unsigned short)59426,ocp_data);
  #line 3039 
  ocp_write_byte(tp,(unsigned short)256,(unsigned short)59420,0U);
  #line 3041 
  ocp_data = (unsigned int)ocp_read_word(tp,(unsigned short)256,(unsigned short)49334);
  #line 3042 
  ocp_data &= 4294967294U;
  #line 3043 
  if ((wolopts & 32U) != 0U) 
                             #line 3044 
                             ocp_data |= 1U;
  #line 3045 
  ocp_write_word(tp,(unsigned short)256,(unsigned short)49334,ocp_data);
  #line 3047 
  if ((wolopts & 47U) != 0U) 
                             #line 3048 
                             device_set_wakeup_enable(& (tp->udev)->dev,(_Bool)1); else 
                                                                    #line 3050 
                                                                    device_set_wakeup_enable(& (tp->udev)->dev,(_Bool)0);
  #line 3051 
  return;
}

#line 3053  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static void r8153_mac_clk_spd(struct r8152 *tp, bool enable)
{
  #line 3056 
  if ((int)enable != 0) {
    #line 3057 
    ocp_write_word(tp,(unsigned short)256,(unsigned short)57536,3975U);
    #line 3059 
    ocp_write_word(tp,(unsigned short)256,(unsigned short)57546,32775U);
    #line 3061 
    ocp_write_word(tp,(unsigned short)256,(unsigned short)57548,263U);
    #line 3064 
    ocp_write_word(tp,(unsigned short)256,(unsigned short)57550,6457U);
  }
  else {
    #line 3069 
    ocp_write_word(tp,(unsigned short)256,(unsigned short)57536,0U);
    #line 3070 
    ocp_write_word(tp,(unsigned short)256,(unsigned short)57546,0U);
    #line 3071 
    ocp_write_word(tp,(unsigned short)256,(unsigned short)57548,0U);
    #line 3072 
    ocp_write_word(tp,(unsigned short)256,(unsigned short)57550,0U);
  }
  #line 3074 
  return;
}

#line 3076  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static void r8153_u1u2en(struct r8152 *tp, bool enable)
{
  #line 3078 
  u8 u1u2[8U];
  #line 3080 
  if ((int)enable != 0) 
                        #line 3081 
                        memset((void *)(& u1u2),255,8UL); else 
                                                               #line 3083 
                                                               memset((void *)(& u1u2),0,8UL);
  #line 3085 
  usb_ocp_write(tp,(unsigned short)54416,(unsigned short)63,(unsigned short)8,(void *)(& u1u2));
  #line 3086 
  return;
}

#line 3088  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static void r8153b_u1u2en(struct r8152 *tp, bool enable)
{
  #line 3090 
  u32 ocp_data;
  #line 3092 
  ocp_data = (unsigned int)ocp_read_word(tp,(unsigned short)0,(unsigned short)53208);
  #line 3093 
  if ((int)enable != 0) 
                        #line 3094 
                        ocp_data |= 1U; else 
                                             #line 3096 
                                             ocp_data &= 4294967294U;
  #line 3098 
  ocp_write_word(tp,(unsigned short)0,(unsigned short)53208,ocp_data);
  #line 3099 
  return;
}

#line 3101  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static void r8153_u2p3en(struct r8152 *tp, bool enable)
{
  #line 3103 
  u32 ocp_data;
  #line 3105 
  ocp_data = (unsigned int)ocp_read_word(tp,(unsigned short)0,(unsigned short)46176);
  #line 3106 
  if ((int)enable != 0) 
                        #line 3107 
                        ocp_data |= 1U; else 
                                             #line 3109 
                                             ocp_data &= 4294967294U;
  #line 3110 
  ocp_write_word(tp,(unsigned short)0,(unsigned short)46176,ocp_data);
  #line 3111 
  return;
}

#line 3113  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static void r8153b_ups_flags(struct r8152 *tp)
{
  #line 3115 
  u32 ups_flags = 0U;
  #line 3117 
  if ((unsigned int)tp->ups_info.green != 0U) 
                                              #line 3118 
                                              ups_flags |= 67108864U;
  #line 3120 
  if ((unsigned int)tp->ups_info.aldps != 0U) 
                                              #line 3121 
                                              ups_flags |= 8U;
  #line 3123 
  if ((unsigned int)tp->ups_info.eee != 0U) 
                                            #line 3124 
                                            ups_flags |= 1048576U;
  #line 3126 
  if ((unsigned int)tp->ups_info.flow_control != 0U) 
                                                     #line 3127 
                                                     ups_flags |= 134217728U;
  #line 3129 
  if ((unsigned int)tp->ups_info.eee_ckdiv != 0U) 
                                                  #line 3130 
                                                  ups_flags |= 4194304U;
  #line 3132 
  if ((unsigned int)tp->ups_info.eee_cmod_lv != 0U) 
                                                    #line 3133 
                                                    ups_flags |= 33554432U;
  #line 3135 
  if ((unsigned int)tp->ups_info._10m_ckdiv != 0U) 
                                                   #line 3136 
                                                   ups_flags |= 2U;
  #line 3138 
  if ((unsigned int)tp->ups_info.eee_plloff_100 != 0U) 
                                                       #line 3139 
                                                       ups_flags |= 8388608U;
  #line 3141 
  if ((unsigned int)tp->ups_info.eee_plloff_giga != 0U) 
                                                        #line 3142 
                                                        ups_flags |= 16777216U;
  #line 3144 
  if ((unsigned int)tp->ups_info._250m_ckdiv != 0U) 
                                                    #line 3145 
                                                    ups_flags |= 4U;
  #line 3147 
  if ((unsigned int)tp->ups_info.ctap_short_off != 0U) 
                                                       #line 3148 
                                                       ups_flags |= 16U;
  #line 3150 
  switch ((int)tp->ups_info.speed_duplex) {
    #line 3151 
    case 0: 
            #line 3151 
    ;
    #line 3152 
    ups_flags |= 65536U;
    #line 3153 
    break;
    #line 3154 
    case 1: 
            #line 3154 
    ;
    #line 3155 
    ups_flags |= 131072U;
    #line 3156 
    break;
    #line 3157 
    case 2: 
            #line 3157 
    ;
    #line 3158 
    ups_flags |= 196608U;
    #line 3159 
    break;
    #line 3160 
    case 3: 
            #line 3160 
    ;
    #line 3161 
    ups_flags |= 262144U;
    #line 3162 
    break;
    #line 3163 
    case 4: 
            #line 3163 
    ;
    #line 3164 
    ups_flags |= 327680U;
    #line 3165 
    break;
    #line 3166 
    case 5: 
            #line 3166 
    ;
    #line 3167 
    ups_flags |= 393216U;
    #line 3168 
    break;
    #line 3169 
    case 6: 
            #line 3169 
    ;
    #line 3170 
    ups_flags |= 458752U;
    #line 3171 
    break;
    #line 3172 
    case 7: 
            #line 3172 
    ;
    #line 3173 
    ups_flags |= 524288U;
    #line 3174 
    break;
    #line 3175 
    case 8: 
            #line 3175 
    ;
    #line 3176 
    ups_flags |= 589824U;
    #line 3177 
    break;
    #line 3178 
    default: 
             #line 3178 
    ;
    #line 3179 
    break;
  }
  #line 3182 
  ocp_write_dword(tp,(unsigned short)0,(unsigned short)55368,ups_flags);
  #line 3183 
  return;
}

#line 3185  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static void r8153b_green_en(struct r8152 *tp, bool enable)
{
  #line 3187 
  u16 data;
  #line 3189 
  if ((int)enable != 0) {
    #line 3190 
    sram_write(tp,(unsigned short)32837,(unsigned short)0);
    #line 3191 
    sram_write(tp,(unsigned short)32845,(unsigned short)4642);
    #line 3192 
    sram_write(tp,(unsigned short)32861,(unsigned short)34);
  }
  else {
    #line 3194 
    sram_write(tp,(unsigned short)32837,(unsigned short)9284);
    #line 3195 
    sram_write(tp,(unsigned short)32845,(unsigned short)9284);
    #line 3196 
    sram_write(tp,(unsigned short)32861,(unsigned short)9284);
  }
  #line 3199 
  data = sram_read(tp,(unsigned short)32785);
  #line 3200 
  data = (unsigned short)((unsigned int)data | 32768U);
  #line 3201 
  sram_write(tp,(unsigned short)32785,(unsigned short)((int)data));
  #line 3203 
  tp->ups_info.green = (unsigned int)enable;
  #line 3204 
  return;
}

#line 3206  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static u16 r8153_phy_status(struct r8152 *tp, u16 desired)
{
  #line 3208 
  u16 data;
  #line 3209 
  int i;
  #line 3211 
  i = 0;
  #line 3211 
  while (i <= 499) {
    #line 3212 
    data = ocp_reg_read(tp,(unsigned short)42016);
    #line 3213 
    data = (unsigned short)((unsigned int)data & 7U);
    #line 3214 
    if ((unsigned int)desired != 0U) {
      #line 3215 
      if ((int)data == (int)desired) 
                                     #line 3216 
                                     break;
    }
    else 
      #line 3217 
      if (((unsigned int)data == 3U || (unsigned int)data == 5U) || (unsigned int)data == 2U) 
        #line 3219 
        break;
    #line 3222 
    msleep(20U);
    #line 3211 
    i ++;
  }
  #line 3225 
  return data;
}

#line 3228  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static void r8153b_ups_en(struct r8152 *tp, bool enable)
{
  #line 3230 
  u32 ocp_data = (unsigned int)ocp_read_byte(tp,(unsigned short)0,(unsigned short)55306);
  #line 3232 
  if ((int)enable != 0) {
    #line 3233 
    r8153b_ups_flags(tp);
    #line 3235 
    ocp_data |= 56U;
    #line 3236 
    ocp_write_byte(tp,(unsigned short)0,(unsigned short)55306,ocp_data);
    #line 3238 
    ocp_data = (unsigned int)ocp_read_byte(tp,(unsigned short)0,(unsigned short)53247);
    #line 3239 
    ocp_data |= 1U;
    #line 3240 
    ocp_write_byte(tp,(unsigned short)0,(unsigned short)53247,ocp_data);
  }
  else {
    #line 3242 
    u16 data;
    #line 3244 
    ocp_data &= 4294967247U;
    #line 3245 
    ocp_write_byte(tp,(unsigned short)0,(unsigned short)55306,ocp_data);
    #line 3247 
    ocp_data = (unsigned int)ocp_read_byte(tp,(unsigned short)0,(unsigned short)53247);
    #line 3248 
    ocp_data &= 4294967294U;
    #line 3249 
    ocp_write_byte(tp,(unsigned short)0,(unsigned short)53247,ocp_data);
    #line 3251 
    ocp_data = (unsigned int)ocp_read_word(tp,(unsigned short)0,(unsigned short)55322);
    #line 3252 
    ocp_data &= 4294967294U;
    #line 3253 
    ocp_write_word(tp,(unsigned short)0,(unsigned short)55322,ocp_data);
    #line 3255 
    data = r8153_phy_status(tp,(unsigned short)0);
    #line 3257 
    switch ((int)data) {
      #line 3258 
      case 5: 
              #line 3258 
      ;
      #line 3259 
      case 2: 
              #line 3259 
      ;
      #line 3260 
      ;
      #line 3260 
      r8153b_green_en(tp,(_Bool)((bool)((int)test_bit(7L,& tp->flags)) != 0));
      #line 3263 
      data = (unsigned short)r8152_mdio_read(tp,0U);
      #line 3264 
      data = (unsigned short)((unsigned int)data & 63487U);
      #line 3265 
      data = (unsigned short)((unsigned int)data | 32768U);
      #line 3266 
      r8152_mdio_write(tp,0U,(unsigned int)data);
      #line 3268 
      data = r8153_phy_status(tp,(unsigned short)3);
      #line 3271 
      default: 
               #line 3271 
      ;
      #line 3272 
      if ((unsigned int)data != 3U) 
        #line 3273 
        if ((tp->msg_enable & 4U) != 0U) 
                                         #line 3273 
                                         netdev_warn(tp->netdev,(char *)"PHY not ready");
      #line 3275 
      break;
    }
  }
  #line 3278 
  return;
}

#line 3280  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static void r8153_power_cut_en(struct r8152 *tp, bool enable)
{
  #line 3282 
  u32 ocp_data;
  #line 3284 
  ocp_data = (unsigned int)ocp_read_word(tp,(unsigned short)0,(unsigned short)55306);
  #line 3285 
  if ((int)enable != 0) 
                        #line 3286 
                        ocp_data |= 9U; else 
                                             #line 3288 
                                             ocp_data &= 4294967286U;
  #line 3289 
  ocp_write_word(tp,(unsigned short)0,(unsigned short)55306,ocp_data);
  #line 3291 
  ocp_data = (unsigned int)ocp_read_word(tp,(unsigned short)0,(unsigned short)55322);
  #line 3292 
  ocp_data &= 4294967294U;
  #line 3293 
  ocp_write_word(tp,(unsigned short)0,(unsigned short)55322,ocp_data);
  #line 3294 
  return;
}

#line 3296  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static void r8153b_power_cut_en(struct r8152 *tp, bool enable)
{
  #line 3298 
  u32 ocp_data;
  #line 3300 
  ocp_data = (unsigned int)ocp_read_word(tp,(unsigned short)0,(unsigned short)55306);
  #line 3301 
  if ((int)enable != 0) 
                        #line 3302 
                        ocp_data |= 9U; else 
                                             #line 3304 
                                             ocp_data &= 4294967294U;
  #line 3305 
  ocp_write_word(tp,(unsigned short)0,(unsigned short)55306,ocp_data);
  #line 3307 
  ocp_data = (unsigned int)ocp_read_word(tp,(unsigned short)0,(unsigned short)55322);
  #line 3308 
  ocp_data &= 4294967294U;
  #line 3309 
  ocp_write_word(tp,(unsigned short)0,(unsigned short)55322,ocp_data);
  #line 3310 
  return;
}

#line 3312  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static void r8153_queue_wake(struct r8152 *tp, bool enable)
{
  #line 3314 
  u32 ocp_data;
  #line 3316 
  ocp_data = (unsigned int)ocp_read_byte(tp,(unsigned short)256,(unsigned short)54156);
  #line 3317 
  if ((int)enable != 0) 
                        #line 3318 
                        ocp_data |= 1U; else 
                                             #line 3320 
                                             ocp_data &= 4294967294U;
  #line 3321 
  ocp_write_byte(tp,(unsigned short)256,(unsigned short)54156,ocp_data);
  #line 3323 
  ocp_data = (unsigned int)ocp_read_byte(tp,(unsigned short)256,(unsigned short)54154);
  #line 3324 
  ocp_data &= 4294967294U;
  #line 3325 
  ocp_write_byte(tp,(unsigned short)256,(unsigned short)54154,ocp_data);
  #line 3327 
  ocp_data = (unsigned int)ocp_read_word(tp,(unsigned short)256,(unsigned short)54168);
  #line 3328 
  ocp_data &= 4294967039U;
  #line 3329 
  ocp_write_word(tp,(unsigned short)256,(unsigned short)54168,ocp_data);
  #line 3330 
  return;
}

#line 3332  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static bool rtl_can_wakeup(struct r8152 *tp)
{
  #line 3334 
  struct usb_device *udev = tp->udev;
  #line 3336 
  return (_Bool)(((int)(udev->actconfig)->desc.bmAttributes & 32) != 0);
}

#line 3339  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static void rtl_runtime_suspend_enable(struct r8152 *tp, bool enable)
{
  #line 3341 
  if ((int)enable != 0) {
    #line 3342 
    u32 ocp_data;
    #line 3344 
    __rtl_set_wol(tp,47U);
    #line 3346 
    ocp_write_byte(tp,(unsigned short)256,(unsigned short)59420,192U);
    #line 3348 
    ocp_data = (unsigned int)ocp_read_word(tp,(unsigned short)256,(unsigned short)59424);
    #line 3349 
    ocp_data |= 8U;
    #line 3350 
    ocp_write_word(tp,(unsigned short)256,(unsigned short)59424,ocp_data);
    #line 3352 
    ocp_write_byte(tp,(unsigned short)256,(unsigned short)59420,0U);
  }
  else {
    #line 3354 
    u32 ocp_data_0;
    #line 3356 
    __rtl_set_wol(tp,tp->saved_wolopts);
    #line 3358 
    ocp_write_byte(tp,(unsigned short)256,(unsigned short)59420,192U);
    #line 3360 
    ocp_data_0 = (unsigned int)ocp_read_word(tp,(unsigned short)256,(unsigned short)59424);
    #line 3361 
    ocp_data_0 &= 4294967287U;
    #line 3362 
    ocp_write_word(tp,(unsigned short)256,(unsigned short)59424,ocp_data_0);
    #line 3364 
    ocp_write_byte(tp,(unsigned short)256,(unsigned short)59420,0U);
  }
  #line 3366 
  return;
}

#line 3368  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static void rtl8153_runtime_enable(struct r8152 *tp, bool enable)
{
  #line 3370 
  if ((int)enable != 0) {
    #line 3371 
    r8153_u1u2en(tp,(_Bool)0);
    #line 3372 
    r8153_u2p3en(tp,(_Bool)0);
    #line 3373 
    r8153_mac_clk_spd(tp,(_Bool)1);
    #line 3374 
    rtl_runtime_suspend_enable(tp,(_Bool)1);
  }
  else {
    #line 3376 
    rtl_runtime_suspend_enable(tp,(_Bool)0);
    #line 3377 
    r8153_mac_clk_spd(tp,(_Bool)0);
    #line 3379 
    switch ((int)tp->version) {
      #line 3380 
      case 3: 
              #line 3380 
      ;
      #line 3381 
      case 4: 
              #line 3381 
      ;
      #line 3382 
      break;
      #line 3383 
      case 5: 
              #line 3383 
      ;
      #line 3384 
      case 6: 
              #line 3384 
      ;
      #line 3385 
      default: 
               #line 3385 
      ;
      #line 3386 
      r8153_u2p3en(tp,(_Bool)1);
      #line 3387 
      break;
    }
    #line 3390 
    r8153_u1u2en(tp,(_Bool)1);
  }
  #line 3392 
  return;
}

#line 3394  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static void rtl8153b_runtime_enable(struct r8152 *tp, bool enable)
{
  #line 3396 
  if ((int)enable != 0) {
    #line 3397 
    r8153_queue_wake(tp,(_Bool)1);
    #line 3398 
    r8153b_u1u2en(tp,(_Bool)0);
    #line 3399 
    r8153_u2p3en(tp,(_Bool)0);
    #line 3400 
    rtl_runtime_suspend_enable(tp,(_Bool)1);
    #line 3401 
    r8153b_ups_en(tp,(_Bool)1);
  }
  else {
    #line 3403 
    r8153b_ups_en(tp,(_Bool)0);
    #line 3404 
    r8153_queue_wake(tp,(_Bool)0);
    #line 3405 
    rtl_runtime_suspend_enable(tp,(_Bool)0);
    #line 3406 
    if ((tp->udev)->speed != (unsigned int)USB_SPEED_HIGH) 
                                                           #line 3407 
                                                           r8153b_u1u2en(tp,(_Bool)1);
  }
  #line 3409 
  return;
}

#line 3411  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static void r8153_teredo_off(struct r8152 *tp)
{
  #line 3413 
  u32 ocp_data;
  #line 3415 
  switch ((int)tp->version) {
    #line 3416 
    case 1: 
            #line 3416 
    ;
    #line 3417 
    case 2: 
            #line 3417 
    ;
    #line 3418 
    case 3: 
            #line 3418 
    ;
    #line 3419 
    case 4: 
            #line 3419 
    ;
    #line 3420 
    case 5: 
            #line 3420 
    ;
    #line 3421 
    case 6: 
            #line 3421 
    ;
    #line 3422 
    case 7: 
            #line 3422 
    ;
    #line 3423 
    ocp_data = (unsigned int)ocp_read_word(tp,(unsigned short)256,(unsigned short)49340);
    #line 3424 
    ocp_data &= 4294934272U;
    #line 3426 
    ocp_write_word(tp,(unsigned short)256,(unsigned short)49340,ocp_data);
    #line 3427 
    break;
    #line 3429 
    case 8: 
            #line 3429 
    ;
    #line 3430 
    case 9: 
            #line 3430 
    ;
    #line 3434 
    ocp_write_byte(tp,(unsigned short)256,(unsigned short)49340,255U);
    #line 3435 
    break;
    #line 3437 
    default: 
             #line 3437 
    ;
    #line 3438 
    break;
  }
  #line 3441 
  ocp_write_word(tp,(unsigned short)256,(unsigned short)58408,16U);
  #line 3442 
  ocp_write_word(tp,(unsigned short)256,(unsigned short)53992,0U);
  #line 3443 
  ocp_write_dword(tp,(unsigned short)256,(unsigned short)53964,0U);
  #line 3444 
  return;
}

#line 3446  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static void rtl_reset_bmu(struct r8152 *tp)
{
  #line 3448 
  u32 ocp_data;
  #line 3450 
  ocp_data = (unsigned int)ocp_read_byte(tp,(unsigned short)0,(unsigned short)54448);
  #line 3451 
  ocp_data &= 4294967292U;
  #line 3452 
  ocp_write_byte(tp,(unsigned short)0,(unsigned short)54448,ocp_data);
  #line 3453 
  ocp_data |= 3U;
  #line 3454 
  ocp_write_byte(tp,(unsigned short)0,(unsigned short)54448,ocp_data);
  #line 3455 
  return;
}

#line 3458  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static void rtl_clear_bp(struct r8152 *tp, u16 type)
{
  #line 3460 
  switch ((int)tp->version) {
    #line 3461 
    case 1: 
            #line 3461 
    ;
    #line 3462 
    case 2: 
            #line 3462 
    ;
    #line 3463 
    case 7: 
            #line 3463 
    ;
    #line 3464 
    break;
    #line 3465 
    case 3: 
            #line 3465 
    ;
    #line 3466 
    case 4: 
            #line 3466 
    ;
    #line 3467 
    case 5: 
            #line 3467 
    ;
    #line 3468 
    case 6: 
            #line 3468 
    ;
    #line 3469 
    ocp_write_byte(tp,(unsigned short)((int)type),(unsigned short)64568,0U);
    #line 3470 
    break;
    #line 3471 
    case 8: 
            #line 3471 
    ;
    #line 3472 
    case 9: 
            #line 3472 
    ;
    #line 3473 
    default: 
             #line 3473 
    ;
    #line 3474 
    if ((unsigned int)type == 0U) {
      #line 3475 
      ocp_write_byte(tp,(unsigned short)0,(unsigned short)64584,0U);
      #line 3477 
      ocp_write_word(tp,(unsigned short)0,(unsigned short)64568,0U);
      #line 3478 
      ocp_write_word(tp,(unsigned short)0,(unsigned short)64570,0U);
      #line 3479 
      ocp_write_word(tp,(unsigned short)0,(unsigned short)64572,0U);
      #line 3480 
      ocp_write_word(tp,(unsigned short)0,(unsigned short)64574,0U);
      #line 3481 
      ocp_write_word(tp,(unsigned short)0,(unsigned short)64576,0U);
      #line 3482 
      ocp_write_word(tp,(unsigned short)0,(unsigned short)64578,0U);
      #line 3483 
      ocp_write_word(tp,(unsigned short)0,(unsigned short)64580,0U);
      #line 3484 
      ocp_write_word(tp,(unsigned short)0,(unsigned short)64582,0U);
    }
    else 
         #line 3486 
         ocp_write_byte(tp,(unsigned short)256,(unsigned short)64568,0U);
    #line 3488 
    break;
  }
  #line 3491 
  ocp_write_word(tp,(unsigned short)((int)type),(unsigned short)64552,0U);
  #line 3492 
  ocp_write_word(tp,(unsigned short)((int)type),(unsigned short)64554,0U);
  #line 3493 
  ocp_write_word(tp,(unsigned short)((int)type),(unsigned short)64556,0U);
  #line 3494 
  ocp_write_word(tp,(unsigned short)((int)type),(unsigned short)64558,0U);
  #line 3495 
  ocp_write_word(tp,(unsigned short)((int)type),(unsigned short)64560,0U);
  #line 3496 
  ocp_write_word(tp,(unsigned short)((int)type),(unsigned short)64562,0U);
  #line 3497 
  ocp_write_word(tp,(unsigned short)((int)type),(unsigned short)64564,0U);
  #line 3498 
  ocp_write_word(tp,(unsigned short)((int)type),(unsigned short)64566,0U);
  #line 3501 
  usleep_range(3000UL,6000UL);
  #line 3502 
  ocp_write_word(tp,(unsigned short)((int)type),(unsigned short)64550,0U);
  #line 3503 
  return;
}

#line 3505  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static int r8153_patch_request(struct r8152 *tp, bool request)
{
  #line 3507 
  u16 data;
  #line 3508 
  int i;
  #line 3510 
  data = ocp_reg_read(tp,(unsigned short)47136);
  #line 3511 
  if ((int)request != 0) 
                         #line 3512 
                         data = (unsigned short)((unsigned int)data | 16U); else 
                                                                    #line 3514 
                                                                    data = (unsigned short)((unsigned int)data & 65519U);
  #line 3515 
  ocp_reg_write(tp,(unsigned short)47136,(unsigned short)((int)data));
  #line 3517 
  i = 0;
  #line 3517 
  while ((int)request != 0 && i <= 4999) {
    {
      #line 3518 
      usleep_range(1000UL,2000UL);
      #line 3519 
      if (((unsigned long)ocp_reg_read(tp,(unsigned short)47104) & 64UL) != 0UL) 
        #line 3520 
        break;
    }
    #line 3517 
    i ++;
  }
  #line 3523 
  if ((int)request != 0) {
    #line 3523 
    if (((unsigned long)ocp_reg_read(tp,(unsigned short)47104) & 64UL) == 0UL) {
      #line 3524 
      if ((tp->msg_enable & 1U) != 0U) 
                                       #line 3524 
                                       netdev_err(tp->netdev,(char *)"patch request fail\n");
      #line 3525 
      r8153_patch_request(tp,(_Bool)0);
      #line 3526 
      return -62;
    }
    else 
         #line 3528 
         return 0;
  }
  else 
       #line 3528 
       return 0;
}

#line 3532  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static int r8153_pre_ram_code(struct r8152 *tp, u16 key_addr, u16 patch_key)
{
  #line 3534 
  if (r8153_patch_request(tp,(_Bool)1) != 0) {
    #line 3535 
    _dev_err(& (tp->intf)->dev,(char *)"patch request fail\n");
    #line 3536 
    return -62;
  }
  #line 3539 
  sram_write(tp,(unsigned short)((int)key_addr),(unsigned short)((int)patch_key));
  #line 3540 
  sram_write(tp,(unsigned short)47150,(unsigned short)1);
  #line 3542 
  return 0;
}

#line 3545  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static int r8153_post_ram_code(struct r8152 *tp, u16 key_addr)
{
  #line 3547 
  u16 data;
  #line 3549 
  sram_write(tp,(unsigned short)0,(unsigned short)0);
  #line 3551 
  data = ocp_reg_read(tp,(unsigned short)47150);
  #line 3552 
  data = (unsigned short)((unsigned int)data & 65534U);
  #line 3553 
  ocp_reg_write(tp,(unsigned short)47150,(unsigned short)((int)data));
  #line 3555 
  sram_write(tp,(unsigned short)((int)key_addr),(unsigned short)0);
  #line 3557 
  r8153_patch_request(tp,(_Bool)0);
  #line 3559 
  ocp_write_word(tp,(unsigned short)256,(unsigned short)59500,(unsigned int)tp->ocp_base);
  #line 3561 
  return 0;
}

#line 3564  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static bool rtl8152_is_fw_phy_nc_ok(struct r8152 *tp, struct fw_phy_nc *phy)
{
  #line 3566 
  u32 length;
  #line 3567 
  u16 fw_offset;
  #line 3567 
  u16 fw_reg;
  #line 3567 
  u16 ba_reg;
  #line 3567 
  u16 patch_en_addr;
  #line 3567 
  u16 mode_reg;
  #line 3567 
  u16 bp_start;
  #line 3568 
  bool rc = (_Bool)0;
  #line 3570 
  switch ((int)tp->version) {
    #line 3571 
    case 4: 
            #line 3571 
    ;
    #line 3572 
    case 5: 
            #line 3572 
    ;
    #line 3573 
    case 6: 
            #line 3573 
    ;
    #line 3574 
    fw_reg = (unsigned short)40980U;
    #line 3575 
    ba_reg = (unsigned short)40978U;
    #line 3576 
    patch_en_addr = (unsigned short)40986U;
    #line 3577 
    mode_reg = (unsigned short)47136U;
    #line 3578 
    bp_start = (unsigned short)40960U;
    #line 3579 
    break;
    #line 3580 
    default: 
             #line 3580 
    ;
    #line 3581 
    goto out;
  }
  #line 3584 
  fw_offset = phy->fw_offset;
  #line 3585 
  if ((unsigned int)fw_offset <= 39U) {
    #line 3586 
    _dev_err(& (tp->intf)->dev,(char *)"fw_offset too small\n");
    #line 3587 
    goto out;
  }
  #line 3590 
  length = phy->blk_hdr.length;
  #line 3591 
  if ((unsigned int)fw_offset > length) {
    #line 3592 
    _dev_err(& (tp->intf)->dev,(char *)"invalid fw_offset\n");
    #line 3593 
    goto out;
  }
  #line 3596 
  length -= (unsigned int)phy->fw_offset;
  #line 3597 
  if (length == 0U || (length & 1U) != 0U) {
    #line 3598 
    _dev_err(& (tp->intf)->dev,(char *)"invalid block length\n");
    #line 3599 
    goto out;
  }
  #line 3602 
  if ((int)phy->fw_reg != (int)fw_reg) {
    #line 3603 
    _dev_err(& (tp->intf)->dev,(char *)"invalid register to load firmware\n");
    #line 3604 
    goto out;
  }
  #line 3607 
  if ((int)phy->ba_reg != (int)ba_reg) {
    #line 3608 
    _dev_err(& (tp->intf)->dev,(char *)"invalid base address register\n");
    #line 3609 
    goto out;
  }
  #line 3612 
  if ((int)phy->patch_en_addr != (int)patch_en_addr) {
    #line 3613 
    _dev_err(& (tp->intf)->dev,(char *)"invalid patch mode enabled register\n");
    #line 3615 
    goto out;
  }
  #line 3618 
  if ((int)phy->mode_reg != (int)mode_reg) {
    #line 3619 
    _dev_err(& (tp->intf)->dev,(char *)"invalid register to switch the mode\n");
    #line 3621 
    goto out;
  }
  #line 3624 
  if ((int)phy->bp_start != (int)bp_start) {
    #line 3625 
    _dev_err(& (tp->intf)->dev,(char *)"invalid start register of break point\n");
    #line 3627 
    goto out;
  }
  #line 3630 
  if ((unsigned int)phy->bp_num > 4U) {
    #line 3631 
    _dev_err(& (tp->intf)->dev,(char *)"invalid break point number\n");
    #line 3632 
    goto out;
  }
  #line 3635 
  rc = (_Bool)1;
  #line 3636 
  out: 
       #line 3636 
  ;
  #line 3637 
  return rc;
}

#line 3640  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static bool rtl8152_is_fw_mac_ok(struct r8152 *tp, struct fw_mac *mac)
{
  #line 3642 
  u16 fw_reg;
  #line 3642 
  u16 bp_ba_addr;
  #line 3642 
  u16 bp_en_addr;
  #line 3642 
  u16 bp_start;
  #line 3642 
  u16 fw_offset;
  #line 3644 
  u32 length;
  #line 3644 
  u32 type;
  #line 3645 
  int i;
  #line 3645 
  int max_bp;
  #line 3643 
  bool rc = (_Bool)0;
  #line 3647 
  type = mac->blk_hdr.type;
  #line 3648 
  if (type == 1U) 
    #line 3649 
    switch ((int)tp->version) {
      #line 3650 
      case 1: 
              #line 3650 
      ;
      #line 3651 
      case 2: 
              #line 3651 
      ;
      #line 3652 
      case 7: 
              #line 3652 
      ;
      #line 3653 
      fw_reg = (unsigned short)63488U;
      #line 3654 
      bp_ba_addr = (unsigned short)64550U;
      #line 3655 
      bp_en_addr = (unsigned short)0U;
      #line 3656 
      bp_start = (unsigned short)64552U;
      #line 3657 
      max_bp = 8;
      #line 3658 
      break;
      #line 3659 
      case 3: 
              #line 3659 
      ;
      #line 3660 
      case 4: 
              #line 3660 
      ;
      #line 3661 
      case 5: 
              #line 3661 
      ;
      #line 3662 
      case 6: 
              #line 3662 
      ;
      #line 3663 
      case 8: 
              #line 3663 
      ;
      #line 3664 
      case 9: 
              #line 3664 
      ;
      #line 3665 
      fw_reg = (unsigned short)63488U;
      #line 3666 
      bp_ba_addr = (unsigned short)64550U;
      #line 3667 
      bp_en_addr = (unsigned short)64568U;
      #line 3668 
      bp_start = (unsigned short)64552U;
      #line 3669 
      max_bp = 8;
      #line 3670 
      break;
      #line 3671 
      default: 
               #line 3671 
      ;
      #line 3672 
      goto out;
    }
  else 
    #line 3674 
    if (type == 2U) 
      #line 3675 
      switch ((int)tp->version) {
        #line 3676 
        case 3: 
                #line 3676 
        ;
        #line 3677 
        case 4: 
                #line 3677 
        ;
        #line 3678 
        case 5: 
                #line 3678 
        ;
        #line 3679 
        case 6: 
                #line 3679 
        ;
        #line 3680 
        fw_reg = (unsigned short)63488U;
        #line 3681 
        bp_ba_addr = (unsigned short)64550U;
        #line 3682 
        bp_en_addr = (unsigned short)64568U;
        #line 3683 
        bp_start = (unsigned short)64552U;
        #line 3684 
        max_bp = 8;
        #line 3685 
        break;
        #line 3686 
        case 8: 
                #line 3686 
        ;
        #line 3687 
        case 9: 
                #line 3687 
        ;
        #line 3688 
        fw_reg = (unsigned short)58880U;
        #line 3689 
        bp_ba_addr = (unsigned short)64550U;
        #line 3690 
        bp_en_addr = (unsigned short)64584U;
        #line 3691 
        bp_start = (unsigned short)64552U;
        #line 3692 
        max_bp = 16;
        #line 3693 
        break;
        #line 3694 
        case 1: 
                #line 3694 
        ;
        #line 3695 
        case 2: 
                #line 3695 
        ;
        #line 3696 
        case 7: 
                #line 3696 
        ;
        #line 3697 
        default: 
                 #line 3697 
        ;
        #line 3698 
        goto out;
      }
    else 
         #line 3701 
         goto out;
  #line 3704 
  fw_offset = mac->fw_offset;
  #line 3705 
  if ((unsigned int)fw_offset <= 62U) {
    #line 3706 
    _dev_err(& (tp->intf)->dev,(char *)"fw_offset too small\n");
    #line 3707 
    goto out;
  }
  #line 3710 
  length = mac->blk_hdr.length;
  #line 3711 
  if ((unsigned int)fw_offset > length) {
    #line 3712 
    _dev_err(& (tp->intf)->dev,(char *)"invalid fw_offset\n");
    #line 3713 
    goto out;
  }
  #line 3716 
  length -= (unsigned int)fw_offset;
  #line 3717 
  if (length <= 3U || (length & 3U) != 0U) {
    #line 3718 
    _dev_err(& (tp->intf)->dev,(char *)"invalid block length\n");
    #line 3719 
    goto out;
  }
  #line 3722 
  if ((int)mac->fw_reg != (int)fw_reg) {
    #line 3723 
    _dev_err(& (tp->intf)->dev,(char *)"invalid register to load firmware\n");
    #line 3724 
    goto out;
  }
  #line 3727 
  if ((int)mac->bp_ba_addr != (int)bp_ba_addr) {
    #line 3728 
    _dev_err(& (tp->intf)->dev,(char *)"invalid base address register\n");
    #line 3729 
    goto out;
  }
  #line 3732 
  if ((int)mac->bp_en_addr != (int)bp_en_addr) {
    #line 3733 
    _dev_err(& (tp->intf)->dev,(char *)"invalid enabled mask register\n");
    #line 3734 
    goto out;
  }
  #line 3737 
  if ((int)mac->bp_start != (int)bp_start) {
    #line 3738 
    _dev_err(& (tp->intf)->dev,(char *)"invalid start register of break point\n");
    #line 3740 
    goto out;
  }
  #line 3743 
  if ((int)mac->bp_num > max_bp) {
    #line 3744 
    _dev_err(& (tp->intf)->dev,(char *)"invalid break point number\n");
    #line 3745 
    goto out;
  }
  #line 3748 
  i = (int)mac->bp_num;
  #line 3748 
  while (i < max_bp) {
    #line 3749 
    if ((unsigned int)mac->bp[i] != 0U) {
      #line 3750 
      _dev_err(& (tp->intf)->dev,(char *)"unused bp%u is not zero\n",i);
      #line 3751 
      goto out;
    }
    #line 3748 
    i ++;
  }
  #line 3755 
  rc = (_Bool)1;
  #line 3756 
  out: 
       #line 3756 
  ;
  #line 3757 
  return rc;
}

#line 3764  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static long rtl8152_fw_verify_checksum(struct r8152 *tp, struct fw_header *fw_hdr, size_t size)
{
  #line 3767 
  unsigned char checksum[32U];
  #line 3768 
  struct crypto_shash *alg;
  #line 3769 
  struct shash_desc *sdesc;
  #line 3770 
  size_t len;
  #line 3771 
  long rc;
  #line 3773 
  alg = crypto_alloc_shash((char *)"sha256",0U,0U);
  #line 3774 
  if ((int)IS_ERR((void *)alg) != 0) {
    #line 3775 
    rc = PTR_ERR((void *)alg);
    #line 3776 
    goto out;
  }
  #line 3779 
  if (crypto_shash_digestsize(alg) != 32U) {
    #line 3780 
    rc = -14L;
    #line 3781 
    ;
    #line 3781 
    _dev_err(& (tp->intf)->dev,(char *)"digestsize incorrect (%u)\n",crypto_shash_digestsize(alg));
    #line 3783 
    goto free_shash;
  }
  #line 3786 
  len = (unsigned long)crypto_shash_descsize(alg) + 8UL;
  #line 3787 
  sdesc = (struct shash_desc *)kmalloc(len,3264U);
  #line 3788 
  if (sdesc == (struct shash_desc *)0) {
    #line 3789 
    rc = -12L;
    #line 3790 
    goto free_shash;
  }
  #line 3792 
  sdesc->tfm = alg;
  #line 3794 
  len = size + 18446744073709551584UL;
  #line 3795 
  rc = (long)crypto_shash_digest(sdesc,(u8 *)(& fw_hdr->version),
                            (unsigned int)len,(u8 *)(& checksum));
  #line 3796 
  kfree((void *)sdesc);
  #line 3797 
  if (rc != 0L) 
                #line 3798 
                goto free_shash;
  #line 3800 
  if (memcmp((void *)(& fw_hdr->checksum),(void *)(& checksum),32UL) != 0) {
    #line 3801 
    _dev_err(& (tp->intf)->dev,(char *)"checksum fail\n");
    #line 3802 
    rc = -14L;
  }
  #line 3805 
  free_shash: 
              #line 3805 
  ;
  #line 3806 
  crypto_free_shash(alg);
  #line 3807 
  out: 
       #line 3807 
  ;
  #line 3808 
  return rc;
}

#line 3811  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static long rtl8152_check_firmware(struct r8152 *tp, struct rtl_fw *rtl_fw)
{
  #line 3820 
  int i;
  #line 3813 
  struct firmware *fw = rtl_fw->fw;
  #line 3814 
  struct fw_header *fw_hdr = (struct fw_header *)fw->data;
  #line 3815 
  struct fw_mac *pla = (struct fw_mac *)0;
  #line 3815 
  struct fw_mac *usb = (struct fw_mac *)0;
  #line 3816 
  struct fw_phy_patch_key *start = (struct fw_phy_patch_key *)0;
  #line 3817 
  struct fw_phy_nc *phy_nc = (struct fw_phy_nc *)0;
  #line 3818 
  struct fw_block *stop = (struct fw_block *)0;
  #line 3819 
  long ret = -14L;
  #line 3822 
  if (fw->size <= 63UL) {
    #line 3823 
    _dev_err(& (tp->intf)->dev,(char *)"file too small\n");
    #line 3824 
    goto fail;
  }
  #line 3827 
  ret = rtl8152_fw_verify_checksum(tp,fw_hdr,fw->size);
  #line 3828 
  if (ret != 0L) 
                 #line 3829 
                 goto fail;
  #line 3831 
  ret = -14L;
  #line 3833 
  i = 64;
  #line 3833 
  while ((unsigned long)i < fw->size) {
    #line 3835 
    u32 type;
    #line 3834 
    struct fw_block *block = (struct fw_block *)(fw->data + (unsigned long)i);
    #line 3837 
    if ((unsigned long)i + 8UL > fw->size) 
                                           #line 3838 
                                           goto fail;
    #line 3840 
    type = block->type;
    #line 3841 
    switch (type) {
      #line 3842 
      case (u32)0: 
                   #line 3842 
      ;
      #line 3843 
      if (block->length != 8U) 
                               #line 3844 
                               goto fail;
      #line 3845 
      goto fw_end;
      #line 3846 
      case (u32)1: 
                   #line 3846 
      ;
      #line 3847 
      if (pla != (struct fw_mac *)0) {
        #line 3848 
        _dev_err(& (tp->intf)->dev,(char *)"multiple PLA firmware encountered");
        #line 3850 
        goto fail;
      }
      #line 3853 
      pla = (struct fw_mac *)block;
      #line 3854 
      if (! rtl8152_is_fw_mac_ok(tp,pla)) {
        #line 3855 
        _dev_err(& (tp->intf)->dev,(char *)"check PLA firmware failed\n");
        #line 3857 
        goto fail;
      }
      #line 3859 
      break;
      #line 3860 
      case (u32)2: 
                   #line 3860 
      ;
      #line 3861 
      if (usb != (struct fw_mac *)0) {
        #line 3862 
        _dev_err(& (tp->intf)->dev,(char *)"multiple USB firmware encountered");
        #line 3864 
        goto fail;
      }
      #line 3867 
      usb = (struct fw_mac *)block;
      #line 3868 
      if (! rtl8152_is_fw_mac_ok(tp,usb)) {
        #line 3869 
        _dev_err(& (tp->intf)->dev,(char *)"check USB firmware failed\n");
        #line 3871 
        goto fail;
      }
      #line 3873 
      break;
      #line 3874 
      case (u32)3: 
                   #line 3874 
      ;
      #line 3875 
      if ((start != (struct fw_phy_patch_key *)0 || phy_nc != (struct fw_phy_nc *)0) || stop != (struct fw_block *)0) {
        #line 3876 
        _dev_err(& (tp->intf)->dev,(char *)"check PHY_START fail\n");
        #line 3878 
        goto fail;
      }
      #line 3881 
      if (block->length != 16U) {
        #line 3882 
        _dev_err(& (tp->intf)->dev,(char *)"Invalid length for PHY_START\n");
        #line 3884 
        goto fail;
      }
      #line 3887 
      start = (struct fw_phy_patch_key *)block;
      #line 3888 
      break;
      #line 3889 
      case (u32)4: 
                   #line 3889 
      ;
      #line 3890 
      if (stop != (struct fw_block *)0 || start == (struct fw_phy_patch_key *)0) {
        #line 3891 
        _dev_err(& (tp->intf)->dev,(char *)"Check PHY_STOP fail\n");
        #line 3893 
        goto fail;
      }
      #line 3896 
      if (block->length != 8U) {
        #line 3897 
        _dev_err(& (tp->intf)->dev,(char *)"Invalid length for PHY_STOP\n");
        #line 3899 
        goto fail;
      }
      #line 3902 
      stop = block;
      #line 3903 
      break;
      #line 3904 
      case (u32)5: 
                   #line 3904 
      ;
      #line 3905 
      if (start == (struct fw_phy_patch_key *)0 || stop != (struct fw_block *)0) {
        #line 3906 
        _dev_err(& (tp->intf)->dev,(char *)"check PHY_NC fail\n");
        #line 3908 
        goto fail;
      }
      #line 3911 
      if (phy_nc != (struct fw_phy_nc *)0) {
        #line 3912 
        _dev_err(& (tp->intf)->dev,(char *)"multiple PHY NC encountered\n");
        #line 3914 
        goto fail;
      }
      #line 3917 
      phy_nc = (struct fw_phy_nc *)block;
      #line 3918 
      if (! rtl8152_is_fw_phy_nc_ok(tp,phy_nc)) {
        #line 3919 
        _dev_err(& (tp->intf)->dev,(char *)"check PHY NC firmware failed\n");
        #line 3921 
        goto fail;
      }
      #line 3924 
      break;
      #line 3925 
      default: 
               #line 3925 
      ;
      #line 3926 
      _dev_warn(& (tp->intf)->dev,(char *)"Unknown type %u is found\n",type);
      #line 3928 
      break;
    }
    #line 3932 
    i = (int)(((block->length + 7U) & 4294967288U) + (unsigned int)i);
  }
  #line 3935 
  fw_end: 
          #line 3935 
  ;
  #line 3936 
  if ((phy_nc != (struct fw_phy_nc *)0 || start != (struct fw_phy_patch_key *)0) && stop == (struct fw_block *)0) {
    #line 3937 
    _dev_err(& (tp->intf)->dev,(char *)"without PHY_STOP\n");
    #line 3938 
    goto fail;
  }
  #line 3941 
  return 0L;
  #line 3942 
  fail: 
        #line 3942 
  ;
  #line 3943 
  return ret;
}

#line 3946  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static void rtl8152_fw_phy_nc_apply(struct r8152 *tp, struct fw_phy_nc *phy)
{
  #line 3948 
  u16 mode_reg;
  #line 3948 
  u16 bp_index;
  #line 3949 
  u32 length;
  #line 3949 
  u32 i;
  #line 3949 
  u32 num;
  #line 3950 
  __le16 *data;
  #line 3952 
  mode_reg = phy->mode_reg;
  #line 3953 
  sram_write(tp,(unsigned short)((int)mode_reg),(unsigned short)((int)phy->mode_pre));
  #line 3954 
  sram_write(tp,(unsigned short)((int)phy->ba_reg),(unsigned short)((int)phy->ba_data));
  #line 3957 
  length = phy->blk_hdr.length;
  #line 3958 
  length -= (unsigned int)phy->fw_offset;
  #line 3959 
  num = length / 2U;
  #line 3960 
  data = (__le16 *)((u8 *)phy + (unsigned long)phy->fw_offset);
  #line 3962 
  ocp_reg_write(tp,(unsigned short)42038,(unsigned short)((int)phy->fw_reg));
  #line 3963 
  i = 0U;
  #line 3963 
  while (i < num) {
    #line 3964 
    ocp_reg_write(tp,(unsigned short)42040,(unsigned short)((int)*(data + (unsigned long)i)));
    #line 3963 
    i ++;
  }
  #line 3966 
  sram_write(tp,(unsigned short)((int)phy->patch_en_addr),(unsigned short)((int)phy->patch_en_value));
  #line 3969 
  bp_index = phy->bp_start;
  #line 3970 
  num = (unsigned int)phy->bp_num;
  #line 3971 
  i = 0U;
  #line 3971 
  while (i < num) {
    #line 3972 
    sram_write(tp,(unsigned short)((int)bp_index),(unsigned short)((int)phy->bp[i]));
    #line 3973 
    bp_index = (unsigned short)((unsigned int)bp_index + 2U);
    #line 3971 
    i ++;
  }
  #line 3976 
  sram_write(tp,(unsigned short)((int)mode_reg),(unsigned short)((int)phy->mode_post));
  {
    #line 3978 
    bool branch;
    #line 3978 
    struct _ddebug __UNIQUE_ID_ddebug557 = {.modname = (char *)"r8152", .function = (char *)"rtl8152_fw_phy_nc_apply", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c", .format = (char *)"successfully applied %s\n", .lineno = (unsigned int)3978U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
    #line 3978 
    branch = arch_static_branch(& __UNIQUE_ID_ddebug557.key.dd_key_false.key,(_Bool)0);
    #line 3978 
    if ((long)((long)((int)branch != 0)) != 0L) 
                                                #line 3978 
                                                __dynamic_dev_dbg(& __UNIQUE_ID_ddebug557,& (tp->intf)->dev,(char *)"successfully applied %s\n",(char *)(& phy->info));
  }
  #line 3980 
  return;
}

#line 3981  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static void rtl8152_fw_mac_apply(struct r8152 *tp, struct fw_mac *mac)
{
  #line 3983 
  u16 bp_en_addr;
  #line 3983 
  u16 bp_index;
  #line 3983 
  u16 type;
  #line 3983 
  u16 bp_num;
  #line 3983 
  u16 fw_ver_reg;
  #line 3984 
  u32 length;
  #line 3985 
  u8 *data;
  #line 3986 
  int i;
  #line 3988 
  switch (mac->blk_hdr.type) {
    #line 3989 
    case (__le32)1: 
                    #line 3989 
    ;
    #line 3990 
    type = (unsigned short)256U;
    #line 3991 
    break;
    #line 3992 
    case (__le32)2: 
                    #line 3992 
    ;
    #line 3993 
    type = (unsigned short)0U;
    #line 3994 
    break;
    #line 3995 
    default: 
             #line 3995 
    ;
    #line 3996 
    return;
  }
  #line 3999 
  rtl_clear_bp(tp,(unsigned short)((int)type));
  #line 4004 
  if ((unsigned int)tp->version == 4U && (unsigned int)type == 256U) {
    #line 4004 
    if (((unsigned long)ocp_read_word(tp,(unsigned short)256,(unsigned short)54158) & 1UL) == 0UL) {
      #line 4006 
      ocp_write_word(tp,(unsigned short)256,(unsigned short)54156,130U);
      #line 4007 
      ocp_write_word(tp,(unsigned short)256,(unsigned short)54158,130U);
    }
  }
  #line 4010 
  length = mac->blk_hdr.length;
  #line 4011 
  length -= (unsigned int)mac->fw_offset;
  #line 4013 
  data = (u8 *)mac;
  #line 4014 
  data += (unsigned long)mac->fw_offset;
  #line 4016 
  generic_ocp_write(tp,(unsigned short)((int)mac->fw_reg),(unsigned short)255,(unsigned short)((int)((unsigned short)length)),(void *)data,(unsigned short)((int)type));
  #line 4019 
  ocp_write_word(tp,(unsigned short)((int)type),(unsigned short)((int)mac->bp_ba_addr),(unsigned int)mac->bp_ba_value);
  #line 4022 
  bp_index = mac->bp_start;
  #line 4023 
  bp_num = mac->bp_num;
  #line 4024 
  i = 0;
  #line 4024 
  while ((int)bp_num > i) {
    #line 4025 
    ocp_write_word(tp,(unsigned short)((int)type),(unsigned short)((int)bp_index),(unsigned int)mac->bp[i]);
    #line 4026 
    bp_index = (unsigned short)((unsigned int)bp_index + 2U);
    #line 4024 
    i ++;
  }
  #line 4029 
  bp_en_addr = mac->bp_en_addr;
  #line 4030 
  if ((unsigned int)bp_en_addr != 0U) 
                                      #line 4031 
                                      ocp_write_word(tp,(unsigned short)((int)type),(unsigned short)((int)bp_en_addr),(unsigned int)mac->bp_en_value);
  #line 4034 
  fw_ver_reg = mac->fw_ver_reg;
  #line 4035 
  if ((unsigned int)fw_ver_reg != 0U) 
                                      #line 4036 
                                      ocp_write_byte(tp,(unsigned short)0,(unsigned short)((int)fw_ver_reg),(unsigned int)mac->fw_ver_data);
  {
    #line 4039 
    bool branch;
    #line 4039 
    struct _ddebug __UNIQUE_ID_ddebug558 = {.modname = (char *)"r8152", .function = (char *)"rtl8152_fw_mac_apply", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c", .format = (char *)"successfully applied %s\n", .lineno = (unsigned int)4039U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
    #line 4039 
    branch = arch_static_branch(& __UNIQUE_ID_ddebug558.key.dd_key_false.key,(_Bool)0);
    #line 4039 
    if ((long)((long)((int)branch != 0)) != 0L) 
                                                #line 4039 
                                                __dynamic_dev_dbg(& __UNIQUE_ID_ddebug558,& (tp->intf)->dev,(char *)"successfully applied %s\n",(char *)(& mac->info));
  }
  #line 4041 
  return;
}

#line 4042  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static void rtl8152_apply_firmware(struct r8152 *tp)
{
  #line 4045 
  struct firmware *fw;
  #line 4046 
  struct fw_header *fw_hdr;
  #line 4047 
  struct fw_phy_patch_key *key;
  #line 4049 
  int i;
  #line 4044 
  struct rtl_fw *rtl_fw = & tp->rtl_fw;
  #line 4048 
  u16 key_addr = (unsigned short)0U;
  #line 4051 
  if ((int)IS_ERR_OR_NULL((void *)rtl_fw->fw) != 0) 
                                                    #line 4052 
                                                    return;
  #line 4054 
  fw = rtl_fw->fw;
  #line 4055 
  fw_hdr = (struct fw_header *)fw->data;
  #line 4057 
  if (rtl_fw->pre_fw != (int (*)(struct r8152 *))0) 
                                                    #line 4058 
                                                    (*(rtl_fw->pre_fw))(tp);
  #line 4060 
  i = 64;
  #line 4060 
  while ((unsigned long)i < fw->size) {
    #line 4061 
    struct fw_block *block = (struct fw_block *)(fw->data + (unsigned long)i);
    #line 4063 
    switch (block->type) {
      #line 4064 
      case (__le32)0: 
                      #line 4064 
      ;
      #line 4065 
      goto post_fw;
      #line 4066 
      case (__le32)1: 
                      #line 4066 
      ;
      #line 4067 
      case (__le32)2: 
                      #line 4067 
      ;
      #line 4068 
      rtl8152_fw_mac_apply(tp,(struct fw_mac *)block);
      #line 4069 
      break;
      #line 4070 
      case (__le32)3: 
                      #line 4070 
      ;
      #line 4071 
      key = (struct fw_phy_patch_key *)block;
      #line 4072 
      key_addr = key->key_reg;
      #line 4073 
      r8153_pre_ram_code(tp,(unsigned short)((int)key_addr),(unsigned short)((int)key->key_data));
      #line 4075 
      break;
      #line 4076 
      case (__le32)4: 
                      #line 4076 
      ;
      {
        #line 4077 
        int __ret_warn_on = (unsigned int)key_addr == 0U;
        #line 4077 
        if ((long)(__ret_warn_on != 0) != 0L) {
          #line 4078 
          ldv_inline_asm();
          #line 4079 
          ldv_inline_asm();
        }
        #line 4077 
        long tmp_2 = (long)(__ret_warn_on != 0);
      }
      #line 4078 
      r8153_post_ram_code(tp,(unsigned short)((int)key_addr));
      #line 4079 
      break;
      #line 4080 
      case (__le32)5: 
                      #line 4080 
      ;
      #line 4081 
      rtl8152_fw_phy_nc_apply(tp,(struct fw_phy_nc *)block);
      #line 4082 
      break;
      #line 4083 
      default: 
               #line 4083 
      ;
      #line 4084 
      break;
    }
    #line 4087 
    i = (int)(((block->length + 7U) & 4294967288U) + (unsigned int)i);
  }
  #line 4090 
  post_fw: 
           #line 4090 
  ;
  #line 4091 
  if (rtl_fw->post_fw != (int (*)(struct r8152 *))0) 
                                                     #line 4092 
                                                     (*(rtl_fw->post_fw))(tp);
  #line 4094 
  strscpy((char *)(& rtl_fw->version),(char *)(& fw_hdr->version),32UL);
  #line 4095 
  _dev_info(& (tp->intf)->dev,(char *)"load %s successfully\n",(char *)(& rtl_fw->version));
  #line 4096 
  return;
}

#line 4098  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static void rtl8152_release_firmware(struct r8152 *tp)
{
  #line 4100 
  struct rtl_fw *rtl_fw = & tp->rtl_fw;
  #line 4102 
  if (! IS_ERR_OR_NULL((void *)rtl_fw->fw)) {
    #line 4103 
    cif_release_firmware(rtl_fw->fw);
    #line 4104 
    rtl_fw->fw = (struct firmware *)0;
  }
  #line 4106 
  return;
}

#line 4108  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static int rtl8152_request_firmware(struct r8152 *tp)
{
  #line 4111 
  long rc;
  #line 4110 
  struct rtl_fw *rtl_fw = & tp->rtl_fw;
  #line 4113 
  if (rtl_fw->fw != (struct firmware *)0 || rtl_fw->fw_name == (char *)0) {
    #line 4114 
    _dev_info(& (tp->intf)->dev,(char *)"skip request firmware\n");
    #line 4115 
    rc = 0L;
    #line 4116 
    goto result;
  }
  #line 4119 
  rc = (long)cif_request_firmware(& rtl_fw->fw,rtl_fw->fw_name,& (tp->intf)->dev);
  #line 4120 
  if (rc < 0L) 
               #line 4121 
               goto result;
  #line 4123 
  rc = rtl8152_check_firmware(tp,rtl_fw);
  #line 4124 
  if (rc < 0L) 
               #line 4125 
               cif_release_firmware(rtl_fw->fw);
  #line 4127 
  result: 
          #line 4127 
  ;
  #line 4128 
  if (rc != 0L) {
    #line 4129 
    rtl_fw->fw = (struct firmware *)ERR_PTR(rc);
    #line 4131 
    _dev_warn(& (tp->intf)->dev,(char *)"unable to load firmware patch %s (%ld)\n",rtl_fw->fw_name,rc);
  }
  #line 4136 
  return (int)rc;
}

#line 4139  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static void r8152_aldps_en(struct r8152 *tp, bool enable)
{
  #line 4141 
  if ((int)enable != 0) 
                        #line 4142 
                        ocp_reg_write(tp,(unsigned short)8208,(unsigned short)33552);
  else {
    #line 4145 
    ocp_reg_write(tp,(unsigned short)8208,(unsigned short)784);
    #line 4147 
    msleep(20U);
  }
  #line 4149 
  return;
}

#line 4151  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
__inline static void r8152_mmd_indirect(struct r8152 *tp, u16 dev, u16 reg)
{
  #line 4153 
  ocp_reg_write(tp,(unsigned short)42010,(unsigned short)((int)dev));
  #line 4154 
  ocp_reg_write(tp,(unsigned short)42012,(unsigned short)((int)reg));
  #line 4155 
  ocp_reg_write(tp,(unsigned short)42010,(unsigned short)((int)((unsigned int)dev | 16384U)));
  #line 4156 
  return;
}

#line 4158  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static u16 r8152_mmd_read(struct r8152 *tp, u16 dev, u16 reg)
{
  #line 4160 
  u16 data;
  #line 4162 
  r8152_mmd_indirect(tp,(unsigned short)((int)dev),(unsigned short)((int)reg));
  #line 4163 
  data = ocp_reg_read(tp,(unsigned short)42012);
  #line 4164 
  ocp_reg_write(tp,(unsigned short)42010,(unsigned short)0);
  #line 4166 
  return data;
}

#line 4169  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static void r8152_mmd_write(struct r8152 *tp, u16 dev, u16 reg, u16 data)
{
  #line 4171 
  r8152_mmd_indirect(tp,(unsigned short)((int)dev),(unsigned short)((int)reg));
  #line 4172 
  ocp_reg_write(tp,(unsigned short)42012,(unsigned short)((int)data));
  #line 4173 
  ocp_reg_write(tp,(unsigned short)42010,(unsigned short)0);
  #line 4174 
  return;
}

#line 4176  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static void r8152_eee_en(struct r8152 *tp, bool enable)
{
  #line 4178 
  u16 config1;
  #line 4178 
  u16 config2;
  #line 4178 
  u16 config3;
  #line 4179 
  u32 ocp_data;
  #line 4181 
  ocp_data = (unsigned int)ocp_read_word(tp,(unsigned short)256,(unsigned short)57408);
  #line 4182 
  config1 = (unsigned short)((unsigned int)ocp_reg_read(tp,(unsigned short)8320) & 65423U);
  #line 4183 
  config2 = ocp_reg_read(tp,(unsigned short)8338);
  #line 4184 
  config3 = (unsigned short)((unsigned int)ocp_reg_read(tp,(unsigned short)8340) & 127U);
  #line 4186 
  if ((int)enable != 0) {
    #line 4187 
    ocp_data |= 3U;
    #line 4188 
    config1 = (unsigned short)((unsigned int)config1 | 13056U);
    #line 4189 
    config1 = (unsigned short)((unsigned int)config1 | 16U);
    #line 4190 
    config2 = (unsigned short)((unsigned int)config2 | 1536U);
    #line 4191 
    config3 = (unsigned short)((unsigned int)config3 | 5376U);
  }
  else {
    #line 4193 
    ocp_data &= 4294967292U;
    #line 4194 
    config1 = (unsigned short)((unsigned int)config1 & 52479U);
    #line 4196 
    config1 = (unsigned short)((unsigned int)config1 | 112U);
    #line 4197 
    config2 = (unsigned short)((unsigned int)config2 & 63999U);
    #line 4198 
    config3 = (unsigned short)((unsigned int)config3 | 65408U);
  }
  #line 4201 
  ocp_write_word(tp,(unsigned short)256,(unsigned short)57408,ocp_data);
  #line 4202 
  ocp_reg_write(tp,(unsigned short)8320,(unsigned short)((int)config1));
  #line 4203 
  ocp_reg_write(tp,(unsigned short)8338,(unsigned short)((int)config2));
  #line 4204 
  ocp_reg_write(tp,(unsigned short)8340,(unsigned short)((int)config3));
  #line 4205 
  return;
}

#line 4207  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static void r8153_eee_en(struct r8152 *tp, bool enable)
{
  #line 4209 
  u32 ocp_data;
  #line 4210 
  u16 config;
  #line 4212 
  ocp_data = (unsigned int)ocp_read_word(tp,(unsigned short)256,(unsigned short)57408);
  #line 4213 
  config = ocp_reg_read(tp,(unsigned short)42034);
  #line 4215 
  if ((int)enable != 0) {
    #line 4216 
    ocp_data |= 3U;
    #line 4217 
    config = (unsigned short)((unsigned int)config | 16U);
  }
  else {
    #line 4219 
    ocp_data &= 4294967292U;
    #line 4220 
    config = (unsigned short)((unsigned int)config & 65519U);
  }
  #line 4223 
  ocp_write_word(tp,(unsigned short)256,(unsigned short)57408,ocp_data);
  #line 4224 
  ocp_reg_write(tp,(unsigned short)42034,(unsigned short)((int)config));
  #line 4226 
  tp->ups_info.eee = (unsigned int)enable;
  #line 4227 
  return;
}

#line 4229  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static void rtl_eee_enable(struct r8152 *tp, bool enable)
{
  #line 4231 
  switch ((int)tp->version) {
    #line 4232 
    case 1: 
            #line 4232 
    ;
    #line 4233 
    case 2: 
            #line 4233 
    ;
    #line 4234 
    case 7: 
            #line 4234 
    ;
    #line 4235 
    if ((int)enable != 0) {
      #line 4236 
      r8152_eee_en(tp,(_Bool)1);
      #line 4237 
      r8152_mmd_write(tp,(unsigned short)7,(unsigned short)60,(unsigned short)((int)tp->eee_adv));
    }
    else {
      #line 4240 
      r8152_eee_en(tp,(_Bool)0);
      #line 4241 
      r8152_mmd_write(tp,(unsigned short)7,(unsigned short)60,(unsigned short)0);
    }
    #line 4243 
    break;
    #line 4244 
    case 3: 
            #line 4244 
    ;
    #line 4245 
    case 4: 
            #line 4245 
    ;
    #line 4246 
    case 5: 
            #line 4246 
    ;
    #line 4247 
    case 6: 
            #line 4247 
    ;
    #line 4248 
    case 8: 
            #line 4248 
    ;
    #line 4249 
    case 9: 
            #line 4249 
    ;
    #line 4250 
    if ((int)enable != 0) {
      #line 4251 
      r8153_eee_en(tp,(_Bool)1);
      #line 4252 
      ocp_reg_write(tp,(unsigned short)42448,(unsigned short)((int)tp->eee_adv));
    }
    else {
      #line 4254 
      r8153_eee_en(tp,(_Bool)0);
      #line 4255 
      ocp_reg_write(tp,(unsigned short)42448,(unsigned short)0);
    }
    #line 4257 
    break;
    #line 4258 
    default: 
             #line 4258 
    ;
    #line 4259 
    break;
  }
  #line 4261 
  return;
}

#line 4263  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static void r8152b_enable_fc(struct r8152 *tp)
{
  #line 4265 
  u16 anar;
  #line 4267 
  anar = (unsigned short)r8152_mdio_read(tp,4U);
  #line 4268 
  anar = (unsigned short)((unsigned int)anar | 3072U);
  #line 4269 
  r8152_mdio_write(tp,4U,(unsigned int)anar);
  #line 4271 
  tp->ups_info.flow_control = (unsigned int)1U;
  #line 4272 
  return;
}

#line 4274  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static void rtl8152_disable(struct r8152 *tp)
{
  #line 4276 
  r8152_aldps_en(tp,(_Bool)0);
  #line 4277 
  rtl_disable(tp);
  #line 4278 
  r8152_aldps_en(tp,(_Bool)1);
  #line 4279 
  return;
}

#line 4281  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static void r8152b_hw_phy_cfg(struct r8152 *tp)
{
  #line 4283 
  rtl8152_apply_firmware(tp);
  #line 4284 
  rtl_eee_enable(tp,(_Bool)((bool)((int)tp->eee_en) != 0));
  #line 4285 
  r8152_aldps_en(tp,(_Bool)1);
  #line 4286 
  r8152b_enable_fc(tp);
  #line 4288 
  cif_set_bit(5L,& tp->flags);
  #line 4289 
  return;
}

#line 4291  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static void wait_oob_link_list_ready(struct r8152 *tp)
{
  #line 4293 
  u32 ocp_data;
  #line 4294 
  int i;
  #line 4296 
  i = 0;
  #line 4296 
  while (i <= 999) {
    {
      #line 4297 
      ocp_data = (unsigned int)ocp_read_byte(tp,(unsigned short)256,(unsigned short)59471);
      #line 4298 
      if ((ocp_data & 2U) != 0U) 
                                 #line 4299 
                                 break;
      #line 4300 
      usleep_range(1000UL,2000UL);
    }
    #line 4296 
    i ++;
  }
  #line 4302 
  return;
}

#line 4304  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static void r8152b_exit_oob(struct r8152 *tp)
{
  #line 4306 
  u32 ocp_data;
  #line 4308 
  ocp_data = ocp_read_dword(tp,(unsigned short)256,(unsigned short)49168);
  #line 4309 
  ocp_data &= 4294967280U;
  #line 4310 
  ocp_write_dword(tp,(unsigned short)256,(unsigned short)49168,ocp_data);
  #line 4312 
  rxdy_gated_en(tp,(_Bool)1);
  #line 4313 
  r8153_teredo_off(tp);
  #line 4314 
  ocp_write_byte(tp,(unsigned short)256,(unsigned short)59420,0U);
  #line 4315 
  ocp_write_byte(tp,(unsigned short)256,(unsigned short)59411,0U);
  #line 4317 
  ocp_data = (unsigned int)ocp_read_byte(tp,(unsigned short)256,(unsigned short)59471);
  #line 4318 
  ocp_data &= 4294967167U;
  #line 4319 
  ocp_write_byte(tp,(unsigned short)256,(unsigned short)59471,ocp_data);
  #line 4321 
  ocp_data = (unsigned int)ocp_read_word(tp,(unsigned short)256,(unsigned short)59614);
  #line 4322 
  ocp_data &= 4294950911U;
  #line 4323 
  ocp_write_word(tp,(unsigned short)256,(unsigned short)59614,ocp_data);
  #line 4325 
  wait_oob_link_list_ready(tp);
  #line 4327 
  ocp_data = (unsigned int)ocp_read_word(tp,(unsigned short)256,(unsigned short)59614);
  #line 4328 
  ocp_data |= 32768U;
  #line 4329 
  ocp_write_word(tp,(unsigned short)256,(unsigned short)59614,ocp_data);
  #line 4331 
  wait_oob_link_list_ready(tp);
  #line 4333 
  rtl8152_nic_reset(tp);
  #line 4336 
  ocp_write_dword(tp,(unsigned short)256,(unsigned short)49312,524290U);
  #line 4338 
  if ((unsigned int)(tp->udev)->speed + 4294967295U <= 1U) {
    #line 4341 
    ocp_write_dword(tp,(unsigned short)256,(unsigned short)49316,96U);
    #line 4343 
    ocp_write_dword(tp,(unsigned short)256,(unsigned short)49320,120U);
  }
  else {
    #line 4347 
    ocp_write_dword(tp,(unsigned short)256,(unsigned short)49316,56U);
    #line 4349 
    ocp_write_dword(tp,(unsigned short)256,(unsigned short)49320,72U);
  }
  #line 4354 
  ocp_write_dword(tp,(unsigned short)256,(unsigned short)58904,4194312U);
  #line 4356 
  ocp_write_byte(tp,(unsigned short)0,(unsigned short)54282,3U);
  #line 4357 
  ocp_write_dword(tp,(unsigned short)0,(unsigned short)54284,2048000384U);
  #line 4358 
  ocp_write_dword(tp,(unsigned short)0,(unsigned short)54324,257U);
  #line 4361 
  rtl_rx_vlan_en(tp,(_Bool)(((tp->netdev)->features & 256ULL) != 0ULL));
  #line 4363 
  ocp_write_word(tp,(unsigned short)256,(unsigned short)49174,1522U);
  #line 4365 
  ocp_data = (unsigned int)ocp_read_word(tp,(unsigned short)256,(unsigned short)58896);
  #line 4366 
  ocp_data |= 128U;
  #line 4367 
  ocp_write_word(tp,(unsigned short)256,(unsigned short)58896,ocp_data);
  #line 4368 
  return;
}

#line 4370  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static void r8152b_enter_oob(struct r8152 *tp)
{
  #line 4372 
  u32 ocp_data;
  #line 4374 
  ocp_data = (unsigned int)ocp_read_byte(tp,(unsigned short)256,(unsigned short)59471);
  #line 4375 
  ocp_data &= 4294967167U;
  #line 4376 
  ocp_write_byte(tp,(unsigned short)256,(unsigned short)59471,ocp_data);
  #line 4378 
  ocp_write_dword(tp,(unsigned short)256,(unsigned short)49312,25165827U);
  #line 4379 
  ocp_write_dword(tp,(unsigned short)256,(unsigned short)49316,74U);
  #line 4380 
  ocp_write_dword(tp,(unsigned short)256,(unsigned short)49320,90U);
  #line 4382 
  rtl_disable(tp);
  #line 4384 
  wait_oob_link_list_ready(tp);
  #line 4386 
  ocp_data = (unsigned int)ocp_read_word(tp,(unsigned short)256,(unsigned short)59614);
  #line 4387 
  ocp_data |= 32768U;
  #line 4388 
  ocp_write_word(tp,(unsigned short)256,(unsigned short)59614,ocp_data);
  #line 4390 
  wait_oob_link_list_ready(tp);
  #line 4392 
  ocp_write_word(tp,(unsigned short)256,(unsigned short)49174,1522U);
  #line 4394 
  rtl_rx_vlan_en(tp,(_Bool)1);
  #line 4396 
  ocp_data = (unsigned int)ocp_read_word(tp,(unsigned short)256,(unsigned short)53664);
  #line 4397 
  ocp_data |= 1U;
  #line 4398 
  ocp_write_word(tp,(unsigned short)256,(unsigned short)53664,ocp_data);
  #line 4400 
  ocp_data = (unsigned int)ocp_read_byte(tp,(unsigned short)256,(unsigned short)59471);
  #line 4401 
  ocp_data |= 129U;
  #line 4402 
  ocp_write_byte(tp,(unsigned short)256,(unsigned short)59471,ocp_data);
  #line 4404 
  rxdy_gated_en(tp,(_Bool)0);
  #line 4406 
  ocp_data = ocp_read_dword(tp,(unsigned short)256,(unsigned short)49168);
  #line 4407 
  ocp_data |= 14U;
  #line 4408 
  ocp_write_dword(tp,(unsigned short)256,(unsigned short)49168,ocp_data);
  #line 4409 
  return;
}

#line 4411  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static int r8153_pre_firmware_1(struct r8152 *tp)
{
  #line 4413 
  int i;
  #line 4416 
  i = 0;
  #line 4416 
  while (i <= 103) {
    {
      #line 4417 
      u32 ocp_data = (unsigned int)ocp_read_byte(tp,(unsigned short)0,(unsigned short)58372);
      #line 4419 
      if (((unsigned long)ocp_data & 1UL) == 0UL) 
                                                  #line 4420 
                                                  break;
      #line 4421 
      usleep_range(1000UL,2000UL);
    }
    #line 4416 
    i ++;
  }
  #line 4424 
  return 0;
}

#line 4427  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static int r8153_post_firmware_1(struct r8152 *tp)
{
  #line 4430 
  if (((unsigned long)ocp_read_byte(tp,(unsigned short)0,(unsigned short)53231) & 1UL) != 0UL) 
    #line 4431 
    ocp_write_word(tp,(unsigned short)0,(unsigned short)64560,5496U);
  #line 4434 
  ocp_write_word(tp,(unsigned short)256,(unsigned short)54152,2250U);
  #line 4436 
  return 0;
}

#line 4439  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static int r8153_pre_firmware_2(struct r8152 *tp)
{
  #line 4441 
  u32 ocp_data;
  #line 4443 
  r8153_pre_firmware_1(tp);
  #line 4445 
  ocp_data = (unsigned int)ocp_read_word(tp,(unsigned short)0,(unsigned short)53194);
  #line 4446 
  ocp_data &= 4294950911U;
  #line 4447 
  ocp_write_word(tp,(unsigned short)0,(unsigned short)53194,ocp_data);
  #line 4449 
  return 0;
}

#line 4452  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static int r8153_post_firmware_2(struct r8152 *tp)
{
  #line 4454 
  u32 ocp_data;
  #line 4457 
  if (((unsigned long)ocp_read_byte(tp,(unsigned short)0,(unsigned short)53231) & 1UL) != 0UL) {
    #line 4458 
    ocp_data = (unsigned int)ocp_read_word(tp,(unsigned short)256,(unsigned short)64568);
    #line 4459 
    ocp_data |= 1U;
    #line 4460 
    ocp_write_word(tp,(unsigned short)256,(unsigned short)64568,ocp_data);
  }
  #line 4464 
  ocp_write_word(tp,(unsigned short)256,(unsigned short)54152,2250U);
  #line 4467 
  ocp_write_word(tp,(unsigned short)256,(unsigned short)54168,132U);
  #line 4469 
  ocp_data = (unsigned int)ocp_read_word(tp,(unsigned short)0,(unsigned short)53194);
  #line 4470 
  ocp_data |= 16384U;
  #line 4471 
  ocp_write_word(tp,(unsigned short)0,(unsigned short)53194,ocp_data);
  #line 4473 
  ocp_data = (unsigned int)ocp_read_byte(tp,(unsigned short)0,(unsigned short)46110);
  #line 4474 
  ocp_data |= 3U;
  #line 4475 
  ocp_write_byte(tp,(unsigned short)0,(unsigned short)46110,ocp_data);
  #line 4477 
  return 0;
}

#line 4480  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static int r8153_post_firmware_3(struct r8152 *tp)
{
  #line 4482 
  u32 ocp_data;
  #line 4484 
  ocp_data = (unsigned int)ocp_read_byte(tp,(unsigned short)0,(unsigned short)46110);
  #line 4485 
  ocp_data |= 3U;
  #line 4486 
  ocp_write_byte(tp,(unsigned short)0,(unsigned short)46110,ocp_data);
  #line 4488 
  ocp_data = (unsigned int)ocp_read_word(tp,(unsigned short)0,(unsigned short)53196);
  #line 4489 
  ocp_data |= 512U;
  #line 4490 
  ocp_write_word(tp,(unsigned short)0,(unsigned short)53196,ocp_data);
  #line 4492 
  return 0;
}

#line 4495  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static int r8153b_pre_firmware_1(struct r8152 *tp)
{
  #line 4498 
  ocp_write_word(tp,(unsigned short)0,(unsigned short)54080,32893U);
  #line 4501 
  return 0;
}

#line 4504  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static int r8153b_post_firmware_1(struct r8152 *tp)
{
  #line 4506 
  u32 ocp_data;
  #line 4509 
  ocp_data = (unsigned int)ocp_read_byte(tp,(unsigned short)0,(unsigned short)55327);
  #line 4510 
  if ((ocp_data & 4U) != 0U) {
    #line 4511 
    ocp_data = (unsigned int)ocp_read_word(tp,(unsigned short)256,(unsigned short)64568);
    #line 4512 
    ocp_data |= 1U;
    #line 4513 
    ocp_write_word(tp,(unsigned short)256,(unsigned short)64568,ocp_data);
  }
  #line 4516 
  ocp_data = (unsigned int)ocp_read_word(tp,(unsigned short)0,(unsigned short)54068);
  #line 4517 
  ocp_data |= 2U;
  #line 4518 
  ocp_write_word(tp,(unsigned short)0,(unsigned short)54068,ocp_data);
  #line 4520 
  ocp_data = (unsigned int)ocp_read_word(tp,(unsigned short)0,(unsigned short)54504);
  #line 4521 
  ocp_data |= 2U;
  #line 4522 
  ocp_write_word(tp,(unsigned short)0,(unsigned short)54504,ocp_data);
  #line 4524 
  ocp_data = (unsigned int)ocp_read_word(tp,(unsigned short)0,(unsigned short)53196);
  #line 4525 
  ocp_data |= 512U;
  #line 4526 
  ocp_write_word(tp,(unsigned short)0,(unsigned short)53196,ocp_data);
  #line 4528 
  return 0;
}

#line 4531  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static void r8153_aldps_en(struct r8152 *tp, bool enable)
{
  #line 4533 
  u16 data;
  #line 4535 
  data = ocp_reg_read(tp,(unsigned short)42032);
  #line 4536 
  if ((int)enable != 0) {
    #line 4537 
    data = (unsigned short)((unsigned int)data | 4U);
    #line 4538 
    ocp_reg_write(tp,(unsigned short)42032,(unsigned short)((int)data));
  }
  else {
    #line 4540 
    int i;
    #line 4542 
    data = (unsigned short)((unsigned int)data & 65531U);
    #line 4543 
    ocp_reg_write(tp,(unsigned short)42032,(unsigned short)((int)data));
    #line 4544 
    i = 0;
    #line 4544 
    while (i <= 19) {
      {
        #line 4545 
        usleep_range(1000UL,2000UL);
        #line 4546 
        if (((int)ocp_read_word(tp,(unsigned short)256,(unsigned short)57344) & 256) != 0) 
          #line 4547 
          break;
      }
      #line 4544 
      i ++;
    }
  }
  #line 4551 
  tp->ups_info.aldps = (unsigned int)enable;
  #line 4552 
  return;
}

#line 4554  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static void r8153_hw_phy_cfg(struct r8152 *tp)
{
  #line 4556 
  u32 ocp_data;
  #line 4557 
  u16 data;
  #line 4560 
  r8153_aldps_en(tp,(_Bool)0);
  #line 4563 
  rtl_eee_enable(tp,(_Bool)0);
  #line 4565 
  rtl8152_apply_firmware(tp);
  #line 4567 
  if ((unsigned int)tp->version == 3U) {
    #line 4568 
    data = ocp_reg_read(tp,(unsigned short)42034);
    #line 4569 
    data = (unsigned short)((unsigned int)data & 65471U);
    #line 4570 
    ocp_reg_write(tp,(unsigned short)42034,(unsigned short)((int)data));
  }
  #line 4573 
  data = ocp_reg_read(tp,(unsigned short)42032);
  #line 4574 
  data = (unsigned short)((unsigned int)data | 32768U);
  #line 4575 
  ocp_reg_write(tp,(unsigned short)42032,(unsigned short)((int)data));
  #line 4577 
  data = ocp_reg_read(tp,(unsigned short)42050);
  #line 4578 
  data = (unsigned short)((unsigned int)data | 128U);
  #line 4579 
  ocp_reg_write(tp,(unsigned short)42050,(unsigned short)((int)data));
  #line 4580 
  data = ocp_reg_read(tp,(unsigned short)42032);
  #line 4581 
  data = (unsigned short)((unsigned int)data | 1U);
  #line 4582 
  ocp_reg_write(tp,(unsigned short)42032,(unsigned short)((int)data));
  #line 4583 
  sram_write(tp,(unsigned short)32900,(unsigned short)2835);
  #line 4585 
  ocp_data = (unsigned int)ocp_read_word(tp,(unsigned short)256,(unsigned short)59468);
  #line 4586 
  ocp_data |= 64U;
  #line 4587 
  ocp_write_word(tp,(unsigned short)256,(unsigned short)59468,ocp_data);
  #line 4590 
  sram_write(tp,(unsigned short)32786,(unsigned short)63247);
  #line 4593 
  sram_write(tp,(unsigned short)32896,(unsigned short)175);
  #line 4594 
  sram_write(tp,(unsigned short)32898,(unsigned short)520);
  #line 4596 
  if ((int)tp->eee_en != 0) 
                            #line 4597 
                            rtl_eee_enable(tp,(_Bool)1);
  #line 4599 
  r8153_aldps_en(tp,(_Bool)1);
  #line 4600 
  r8152b_enable_fc(tp);
  #line 4602 
  switch ((int)tp->version) {
    #line 4603 
    case 3: 
            #line 4603 
    ;
    #line 4604 
    case 4: 
            #line 4604 
    ;
    #line 4605 
    break;
    #line 4606 
    case 5: 
            #line 4606 
    ;
    #line 4607 
    case 6: 
            #line 4607 
    ;
    #line 4608 
    default: 
             #line 4608 
    ;
    #line 4609 
    r8153_u2p3en(tp,(_Bool)1);
    #line 4610 
    break;
  }
  #line 4613 
  cif_set_bit(5L,& tp->flags);
  #line 4614 
  return;
}

#line 4616  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static u32 r8152_efuse_read(struct r8152 *tp, u8 addr)
{
  #line 4618 
  u32 ocp_data;
  #line 4620 
  ocp_write_word(tp,(unsigned short)256,(unsigned short)56578,(unsigned int)addr | 32768U);
  #line 4621 
  ocp_data = (unsigned int)ocp_read_word(tp,(unsigned short)256,(unsigned short)56578);
  #line 4622 
  ocp_data = (ocp_data << 9U) & 65536U;
  #line 4623 
  ocp_data = (unsigned int)ocp_read_word(tp,(unsigned short)256,(unsigned short)56576) | ocp_data;
  #line 4625 
  return ocp_data;
}

#line 4628  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static void r8153b_hw_phy_cfg(struct r8152 *tp)
{
  #line 4630 
  u32 ocp_data;
  #line 4631 
  u16 data;
  #line 4634 
  r8153_aldps_en(tp,(_Bool)0);
  #line 4637 
  rtl_eee_enable(tp,(_Bool)0);
  #line 4639 
  rtl8152_apply_firmware(tp);
  #line 4641 
  ;
  #line 4641 
  r8153b_green_en(tp,(_Bool)((bool)((int)test_bit(7L,& tp->flags)) != 0));
  #line 4643 
  data = sram_read(tp,(unsigned short)32785);
  #line 4644 
  data = (unsigned short)((unsigned int)data | 2048U);
  #line 4645 
  sram_write(tp,(unsigned short)32785,(unsigned short)((int)data));
  #line 4646 
  data = ocp_reg_read(tp,(unsigned short)42028);
  #line 4647 
  data = (unsigned short)((unsigned int)data | 2U);
  #line 4648 
  ocp_reg_write(tp,(unsigned short)42028,(unsigned short)((int)data));
  #line 4655 
  ocp_data = r8152_efuse_read(tp,(unsigned char)125);
  #line 4656 
  data = (unsigned short)(((unsigned int)((unsigned short)(ocp_data >> 1)) & 65528U) | ((unsigned int)((unsigned short)ocp_data) & 7U));
  #line 4657 
  if ((unsigned int)data != 65535U) 
                                    #line 4658 
                                    ocp_reg_write(tp,(unsigned short)48380,(unsigned short)((int)data));
  #line 4664 
  ocp_data = (unsigned int)ocp_reg_read(tp,(unsigned short)50214);
  #line 4665 
  ocp_data &= 16383U;
  #line 4666 
  if (ocp_data != 0U) {
    #line 4667 
    u32 swr_cnt_1ms_ini;
    #line 4669 
    swr_cnt_1ms_ini = 16000000U / ocp_data & 4095U;
    #line 4670 
    ocp_data = (unsigned int)ocp_read_word(tp,(unsigned short)0,(unsigned short)55362);
    #line 4671 
    ocp_data = (ocp_data & 4294963200U) | swr_cnt_1ms_ini;
    #line 4672 
    ocp_write_word(tp,(unsigned short)0,(unsigned short)55362,ocp_data);
  }
  #line 4675 
  ocp_data = (unsigned int)ocp_read_word(tp,(unsigned short)256,(unsigned short)59468);
  #line 4676 
  ocp_data |= 64U;
  #line 4677 
  ocp_write_word(tp,(unsigned short)256,(unsigned short)59468,ocp_data);
  #line 4680 
  if (r8153_patch_request(tp,(_Bool)1) == 0) {
    #line 4681 
    data = ocp_reg_read(tp,(unsigned short)42032);
    #line 4682 
    data = (unsigned short)((unsigned int)data | 32768U);
    #line 4683 
    ocp_reg_write(tp,(unsigned short)42032,(unsigned short)((int)data));
    #line 4684 
    tp->ups_info.eee_ckdiv = (unsigned int)1U;
    #line 4686 
    data = ocp_reg_read(tp,(unsigned short)42050);
    #line 4687 
    data = (unsigned short)((unsigned int)data | 26624U);
    #line 4688 
    ocp_reg_write(tp,(unsigned short)42050,(unsigned short)((int)data));
    #line 4689 
    tp->ups_info.eee_cmod_lv = (unsigned int)1U;
    #line 4690 
    tp->ups_info._10m_ckdiv = (unsigned int)1U;
    #line 4691 
    tp->ups_info.eee_plloff_giga = (unsigned int)1U;
    #line 4693 
    ocp_reg_write(tp,(unsigned short)50198,(unsigned short)0);
    #line 4694 
    ocp_reg_write(tp,(unsigned short)50198,(unsigned short)1280);
    #line 4695 
    tp->ups_info._250m_ckdiv = (unsigned int)1U;
    #line 4697 
    r8153_patch_request(tp,(_Bool)0);
  }
  #line 4700 
  if ((int)tp->eee_en != 0) 
                            #line 4701 
                            rtl_eee_enable(tp,(_Bool)1);
  #line 4703 
  r8153_aldps_en(tp,(_Bool)1);
  #line 4704 
  r8152b_enable_fc(tp);
  #line 4706 
  cif_set_bit(5L,& tp->flags);
  #line 4707 
  return;
}

#line 4709  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static void r8153_first_init(struct r8152 *tp)
{
  #line 4711 
  u32 ocp_data;
  #line 4713 
  r8153_mac_clk_spd(tp,(_Bool)0);
  #line 4714 
  rxdy_gated_en(tp,(_Bool)1);
  #line 4715 
  r8153_teredo_off(tp);
  #line 4717 
  ocp_data = ocp_read_dword(tp,(unsigned short)256,(unsigned short)49168);
  #line 4718 
  ocp_data &= 4294967280U;
  #line 4719 
  ocp_write_dword(tp,(unsigned short)256,(unsigned short)49168,ocp_data);
  #line 4721 
  rtl8152_nic_reset(tp);
  #line 4722 
  rtl_reset_bmu(tp);
  #line 4724 
  ocp_data = (unsigned int)ocp_read_byte(tp,(unsigned short)256,(unsigned short)59471);
  #line 4725 
  ocp_data &= 4294967167U;
  #line 4726 
  ocp_write_byte(tp,(unsigned short)256,(unsigned short)59471,ocp_data);
  #line 4728 
  ocp_data = (unsigned int)ocp_read_word(tp,(unsigned short)256,(unsigned short)59614);
  #line 4729 
  ocp_data &= 4294950911U;
  #line 4730 
  ocp_write_word(tp,(unsigned short)256,(unsigned short)59614,ocp_data);
  #line 4732 
  wait_oob_link_list_ready(tp);
  #line 4734 
  ocp_data = (unsigned int)ocp_read_word(tp,(unsigned short)256,(unsigned short)59614);
  #line 4735 
  ocp_data |= 32768U;
  #line 4736 
  ocp_write_word(tp,(unsigned short)256,(unsigned short)59614,ocp_data);
  #line 4738 
  wait_oob_link_list_ready(tp);
  #line 4740 
  rtl_rx_vlan_en(tp,(_Bool)(((tp->netdev)->features & 256ULL) != 0ULL));
  #line 4742 
  ocp_data = (tp->netdev)->mtu + 22U;
  #line 4743 
  ocp_write_word(tp,(unsigned short)256,(unsigned short)49174,ocp_data);
  #line 4744 
  ocp_write_byte(tp,(unsigned short)256,(unsigned short)58901,192U);
  #line 4746 
  ocp_data = (unsigned int)ocp_read_word(tp,(unsigned short)256,(unsigned short)58896);
  #line 4747 
  ocp_data |= 128U;
  #line 4748 
  ocp_write_word(tp,(unsigned short)256,(unsigned short)58896,ocp_data);
  #line 4750 
  rtl8152_nic_reset(tp);
  #line 4753 
  ocp_write_dword(tp,(unsigned short)256,(unsigned short)49312,524290U);
  #line 4754 
  ocp_write_word(tp,(unsigned short)256,(unsigned short)49316,160U);
  #line 4755 
  ocp_write_word(tp,(unsigned short)256,(unsigned short)49320,272U);
  #line 4757 
  ocp_write_dword(tp,(unsigned short)256,(unsigned short)58904,16777224U);
  #line 4758 
  return;
}

#line 4760  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static void r8153_enter_oob(struct r8152 *tp)
{
  #line 4762 
  u32 ocp_data;
  #line 4764 
  r8153_mac_clk_spd(tp,(_Bool)1);
  #line 4766 
  ocp_data = (unsigned int)ocp_read_byte(tp,(unsigned short)256,(unsigned short)59471);
  #line 4767 
  ocp_data &= 4294967167U;
  #line 4768 
  ocp_write_byte(tp,(unsigned short)256,(unsigned short)59471,ocp_data);
  #line 4770 
  rtl_disable(tp);
  #line 4771 
  rtl_reset_bmu(tp);
  #line 4773 
  wait_oob_link_list_ready(tp);
  #line 4775 
  ocp_data = (unsigned int)ocp_read_word(tp,(unsigned short)256,(unsigned short)59614);
  #line 4776 
  ocp_data |= 32768U;
  #line 4777 
  ocp_write_word(tp,(unsigned short)256,(unsigned short)59614,ocp_data);
  #line 4779 
  wait_oob_link_list_ready(tp);
  #line 4781 
  ocp_data = (tp->netdev)->mtu + 22U;
  #line 4782 
  ocp_write_word(tp,(unsigned short)256,(unsigned short)49174,ocp_data);
  #line 4784 
  switch ((int)tp->version) {
    #line 4785 
    case 3: 
            #line 4785 
    ;
    #line 4786 
    case 4: 
            #line 4786 
    ;
    #line 4787 
    case 5: 
            #line 4787 
    ;
    #line 4788 
    case 6: 
            #line 4788 
    ;
    #line 4789 
    ocp_data = (unsigned int)ocp_read_word(tp,(unsigned short)256,(unsigned short)49340);
    #line 4790 
    ocp_data &= 4294934783U;
    #line 4791 
    ocp_write_word(tp,(unsigned short)256,(unsigned short)49340,ocp_data);
    #line 4792 
    break;
    #line 4794 
    case 8: 
            #line 4794 
    ;
    #line 4795 
    case 9: 
            #line 4795 
    ;
    #line 4800 
    ocp_write_word(tp,(unsigned short)256,(unsigned short)49348,255U);
    #line 4801 
    break;
    #line 4803 
    default: 
             #line 4803 
    ;
    #line 4804 
    break;
  }
  #line 4807 
  rtl_rx_vlan_en(tp,(_Bool)1);
  #line 4809 
  ocp_data = (unsigned int)ocp_read_word(tp,(unsigned short)256,(unsigned short)53664);
  #line 4810 
  ocp_data |= 1U;
  #line 4811 
  ocp_write_word(tp,(unsigned short)256,(unsigned short)53664,ocp_data);
  #line 4813 
  ocp_data = (unsigned int)ocp_read_byte(tp,(unsigned short)256,(unsigned short)59471);
  #line 4814 
  ocp_data |= 129U;
  #line 4815 
  ocp_write_byte(tp,(unsigned short)256,(unsigned short)59471,ocp_data);
  #line 4817 
  rxdy_gated_en(tp,(_Bool)0);
  #line 4819 
  ocp_data = ocp_read_dword(tp,(unsigned short)256,(unsigned short)49168);
  #line 4820 
  ocp_data |= 14U;
  #line 4821 
  ocp_write_dword(tp,(unsigned short)256,(unsigned short)49168,ocp_data);
  #line 4822 
  return;
}

#line 4824  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static void rtl8153_disable(struct r8152 *tp)
{
  #line 4826 
  r8153_aldps_en(tp,(_Bool)0);
  #line 4827 
  rtl_disable(tp);
  #line 4828 
  rtl_reset_bmu(tp);
  #line 4829 
  r8153_aldps_en(tp,(_Bool)1);
  #line 4830 
  return;
}

#line 4832  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static int rtl8152_set_speed(struct r8152 *tp, u8 autoneg, u32 speed, u8 duplex, u32 advertising)
{
  #line 4835 
  u16 bmcr;
  #line 4836 
  int ret = 0;
  #line 4838 
  if ((unsigned int)autoneg == 0U) {
    #line 4839 
    if ((unsigned int)duplex > 1U) 
                                   #line 4840 
                                   return -22;
    #line 4842 
    switch (speed) {
      #line 4843 
      case (u32)10: 
                    #line 4843 
      ;
      #line 4844 
      bmcr = (unsigned short)0U;
      #line 4845 
      if ((unsigned int)duplex == 1U) {
        #line 4846 
        bmcr = (unsigned short)((unsigned int)bmcr | 256U);
        #line 4847 
        tp->ups_info.speed_duplex = (unsigned int)6U;
      }
      else 
           #line 4849 
           tp->ups_info.speed_duplex = (unsigned int)5U;
      #line 4851 
      break;
      #line 4852 
      case (u32)100: 
                     #line 4852 
      ;
      #line 4853 
      bmcr = (unsigned short)8192U;
      #line 4854 
      if ((unsigned int)duplex == 1U) {
        #line 4855 
        bmcr = (unsigned short)((unsigned int)bmcr | 256U);
        #line 4856 
        tp->ups_info.speed_duplex = (unsigned int)8U;
      }
      else 
           #line 4858 
           tp->ups_info.speed_duplex = (unsigned int)7U;
      #line 4860 
      break;
      #line 4861 
      case (u32)1000: 
                      #line 4861 
      ;
      #line 4862 
      if ((unsigned int)tp->mii.supports_gmii != 0U) {
        #line 4863 
        bmcr = (unsigned short)320U;
        #line 4864 
        tp->ups_info.speed_duplex = (unsigned int)4U;
        #line 4865 
        break;
      }
      #line 4868 
      default: 
               #line 4868 
      ;
      #line 4869 
      ret = -22;
      #line 4870 
      goto out;
    }
    #line 4873 
    if ((unsigned int)duplex == 1U) 
                                    #line 4874 
                                    tp->mii.full_duplex = (unsigned int)1U; else 
                                                                    #line 4876 
                                                                    tp->mii.full_duplex = (unsigned int)0U;
    #line 4878 
    tp->mii.force_media = (unsigned int)1U;
  }
  else {
    #line 4880 
    u16 anar;
    #line 4880 
    u16 tmp1;
    #line 4881 
    u32 support;
    #line 4883 
    support = 15U;
    #line 4886 
    if ((unsigned int)tp->mii.supports_gmii != 0U) 
                                                   #line 4887 
                                                   support |= 32U;
    #line 4889 
    if ((advertising & support) == 0U) 
                                       #line 4890 
                                       return -22;
    #line 4892 
    anar = (unsigned short)r8152_mdio_read(tp,4U);
    #line 4893 
    tmp1 = (unsigned short)((unsigned int)anar & 65055U);
    #line 4895 
    if (((unsigned long)advertising & 1UL) != 0UL) {
      #line 4896 
      tmp1 = (unsigned short)((unsigned int)tmp1 | 32U);
      #line 4897 
      tp->ups_info.speed_duplex = (unsigned int)0U;
    }
    #line 4899 
    if (((unsigned long)advertising & 2UL) != 0UL) {
      #line 4900 
      tmp1 = (unsigned short)((unsigned int)tmp1 | 64U);
      #line 4901 
      tp->ups_info.speed_duplex = (unsigned int)1U;
    }
    #line 4904 
    if (((unsigned long)advertising & 4UL) != 0UL) {
      #line 4905 
      tmp1 = (unsigned short)((unsigned int)tmp1 | 128U);
      #line 4906 
      tp->ups_info.speed_duplex = (unsigned int)2U;
    }
    #line 4908 
    if (((unsigned long)advertising & 8UL) != 0UL) {
      #line 4909 
      tmp1 = (unsigned short)((unsigned int)tmp1 | 256U);
      #line 4910 
      tp->ups_info.speed_duplex = (unsigned int)3U;
    }
    #line 4913 
    if ((int)anar != (int)tmp1) {
      #line 4914 
      r8152_mdio_write(tp,4U,(unsigned int)tmp1);
      #line 4915 
      tp->mii.advertising = (int)tmp1;
    }
    #line 4918 
    if ((unsigned int)tp->mii.supports_gmii != 0U) {
      #line 4919 
      u16 gbcr;
      #line 4921 
      gbcr = (unsigned short)r8152_mdio_read(tp,9U);
      #line 4922 
      tmp1 = (unsigned short)((unsigned int)gbcr & 64767U);
      #line 4925 
      if (((unsigned long)advertising & 32UL) != 0UL) {
        #line 4926 
        tmp1 = (unsigned short)((unsigned int)tmp1 | 512U);
        #line 4927 
        tp->ups_info.speed_duplex = (unsigned int)4U;
      }
      #line 4930 
      if ((int)gbcr != (int)tmp1) 
                                  #line 4931 
                                  r8152_mdio_write(tp,9U,(unsigned int)tmp1);
    }
    #line 4934 
    bmcr = (unsigned short)4608U;
    #line 4936 
    tp->mii.force_media = (unsigned int)0U;
  }
  #line 4939 
  if ((int)test_and_clear_bit(5L,& tp->flags) != 0) 
                                                    #line 4940 
                                                    bmcr = (unsigned short)((unsigned int)bmcr | 32768U);
  #line 4942 
  r8152_mdio_write(tp,0U,(unsigned int)bmcr);
  #line 4944 
  if (((int)bmcr & 32768) != 0) {
    #line 4945 
    int i;
    #line 4947 
    i = 0;
    #line 4947 
    while (i <= 49) {
      {
        #line 4948 
        msleep(20U);
        #line 4949 
        if ((r8152_mdio_read(tp,0U) & 32768) == 0) 
                                                   #line 4950 
                                                   break;
      }
      #line 4947 
      i ++;
    }
  }
  #line 4954 
  out: 
       #line 4954 
  ;
  #line 4955 
  return ret;
}

#line 4958  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static void rtl8152_up(struct r8152 *tp)
{
  #line 4960 
  if ((int)test_bit(0L,& tp->flags) != 0) 
                                          #line 4961 
                                          return;
  #line 4963 
  r8152_aldps_en(tp,(_Bool)0);
  #line 4964 
  r8152b_exit_oob(tp);
  #line 4965 
  r8152_aldps_en(tp,(_Bool)1);
  #line 4966 
  return;
}

#line 4968  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static void rtl8152_down(struct r8152 *tp)
{
  #line 4970 
  if ((int)test_bit(0L,& tp->flags) != 0) {
    #line 4971 
    rtl_drop_queued_tx(tp);
    #line 4972 
    return;
  }
  #line 4975 
  r8152_power_cut_en(tp,(_Bool)0);
  #line 4976 
  r8152_aldps_en(tp,(_Bool)0);
  #line 4977 
  r8152b_enter_oob(tp);
  #line 4978 
  r8152_aldps_en(tp,(_Bool)1);
  #line 4979 
  return;
}

#line 4981  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static void rtl8153_up(struct r8152 *tp)
{
  #line 4983 
  u32 ocp_data;
  #line 4985 
  if ((int)test_bit(0L,& tp->flags) != 0) 
                                          #line 4986 
                                          return;
  #line 4988 
  r8153_u1u2en(tp,(_Bool)0);
  #line 4989 
  r8153_u2p3en(tp,(_Bool)0);
  #line 4990 
  r8153_aldps_en(tp,(_Bool)0);
  #line 4991 
  r8153_first_init(tp);
  #line 4993 
  ocp_data = (unsigned int)ocp_read_byte(tp,(unsigned short)256,(unsigned short)59658);
  #line 4994 
  ocp_data |= 1U;
  #line 4995 
  ocp_write_byte(tp,(unsigned short)256,(unsigned short)59658,ocp_data);
  #line 4997 
  ocp_data = (unsigned int)ocp_read_byte(tp,(unsigned short)256,(unsigned short)57351);
  #line 4998 
  ocp_data &= 4294967167U;
  #line 4999 
  ocp_write_byte(tp,(unsigned short)256,(unsigned short)57351,ocp_data);
  #line 5001 
  ocp_data = (unsigned int)ocp_read_word(tp,(unsigned short)0,(unsigned short)46118);
  #line 5002 
  ocp_data &= 4294967293U;
  #line 5003 
  ocp_write_word(tp,(unsigned short)0,(unsigned short)46118,ocp_data);
  #line 5005 
  r8153_aldps_en(tp,(_Bool)1);
  #line 5007 
  switch ((int)tp->version) {
    #line 5008 
    case 3: 
            #line 5008 
    ;
    #line 5009 
    case 4: 
            #line 5009 
    ;
    #line 5010 
    break;
    #line 5011 
    case 5: 
            #line 5011 
    ;
    #line 5012 
    case 6: 
            #line 5012 
    ;
    #line 5013 
    default: 
             #line 5013 
    ;
    #line 5014 
    r8153_u2p3en(tp,(_Bool)1);
    #line 5015 
    break;
  }
  #line 5018 
  r8153_u1u2en(tp,(_Bool)1);
  #line 5019 
  return;
}

#line 5021  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static void rtl8153_down(struct r8152 *tp)
{
  #line 5023 
  u32 ocp_data;
  #line 5025 
  if ((int)test_bit(0L,& tp->flags) != 0) {
    #line 5026 
    rtl_drop_queued_tx(tp);
    #line 5027 
    return;
  }
  #line 5030 
  ocp_data = (unsigned int)ocp_read_byte(tp,(unsigned short)256,(unsigned short)59658);
  #line 5031 
  ocp_data &= 4294967294U;
  #line 5032 
  ocp_write_byte(tp,(unsigned short)256,(unsigned short)59658,ocp_data);
  #line 5034 
  r8153_u1u2en(tp,(_Bool)0);
  #line 5035 
  r8153_u2p3en(tp,(_Bool)0);
  #line 5036 
  r8153_power_cut_en(tp,(_Bool)0);
  #line 5037 
  r8153_aldps_en(tp,(_Bool)0);
  #line 5038 
  r8153_enter_oob(tp);
  #line 5039 
  r8153_aldps_en(tp,(_Bool)1);
  #line 5040 
  return;
}

#line 5042  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static void rtl8153b_up(struct r8152 *tp)
{
  #line 5044 
  u32 ocp_data;
  #line 5046 
  if ((int)test_bit(0L,& tp->flags) != 0) 
                                          #line 5047 
                                          return;
  #line 5049 
  r8153b_u1u2en(tp,(_Bool)0);
  #line 5050 
  r8153_u2p3en(tp,(_Bool)0);
  #line 5051 
  r8153_aldps_en(tp,(_Bool)0);
  #line 5053 
  r8153_first_init(tp);
  #line 5054 
  ocp_write_dword(tp,(unsigned short)0,(unsigned short)54284,65537U);
  #line 5056 
  ocp_data = (unsigned int)ocp_read_word(tp,(unsigned short)256,(unsigned short)57548);
  #line 5057 
  ocp_data &= 4294950911U;
  #line 5058 
  ocp_write_word(tp,(unsigned short)256,(unsigned short)57548,ocp_data);
  #line 5060 
  r8153_aldps_en(tp,(_Bool)1);
  #line 5062 
  if ((tp->udev)->speed != (unsigned int)USB_SPEED_HIGH) 
                                                         #line 5063 
                                                         r8153b_u1u2en(tp,(_Bool)1);
  #line 5064 
  return;
}

#line 5066  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static void rtl8153b_down(struct r8152 *tp)
{
  #line 5068 
  u32 ocp_data;
  #line 5070 
  if ((int)test_bit(0L,& tp->flags) != 0) {
    #line 5071 
    rtl_drop_queued_tx(tp);
    #line 5072 
    return;
  }
  #line 5075 
  ocp_data = (unsigned int)ocp_read_word(tp,(unsigned short)256,(unsigned short)57548);
  #line 5076 
  ocp_data |= 16384U;
  #line 5077 
  ocp_write_word(tp,(unsigned short)256,(unsigned short)57548,ocp_data);
  #line 5079 
  r8153b_u1u2en(tp,(_Bool)0);
  #line 5080 
  r8153_u2p3en(tp,(_Bool)0);
  #line 5081 
  r8153b_power_cut_en(tp,(_Bool)0);
  #line 5082 
  r8153_aldps_en(tp,(_Bool)0);
  #line 5083 
  r8153_enter_oob(tp);
  #line 5084 
  r8153_aldps_en(tp,(_Bool)1);
  #line 5085 
  return;
}

#line 5087  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static bool rtl8152_in_nway(struct r8152 *tp)
{
  #line 5089 
  u16 nway_state;
  #line 5091 
  ocp_write_word(tp,(unsigned short)256,(unsigned short)59500,8192U);
  #line 5092 
  tp->ocp_base = (unsigned short)8192U;
  #line 5093 
  ocp_write_byte(tp,(unsigned short)256,(unsigned short)45076,76U);
  #line 5094 
  nway_state = ocp_read_word(tp,(unsigned short)256,(unsigned short)45082);
  #line 5097 
  if (((int)nway_state & 49152) != 0) 
                                      #line 5098 
                                      return (_Bool)0; else 
                                                            #line 5100 
                                                            return (_Bool)1;
}

#line 5103  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static bool rtl8153_in_nway(struct r8152 *tp)
{
  #line 5105 
  u16 phy_state = (unsigned short)((unsigned int)ocp_reg_read(tp,(unsigned short)42760) & 255U);
  #line 5107 
  if ((unsigned int)phy_state + 65535U <= 1U) 
                                              #line 5108 
                                              return (_Bool)0; else 
                                                                    #line 5110 
                                                                    return (_Bool)1;
}

#line 5113  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static void set_carrier(struct r8152 *tp)
{
  #line 5117 
  u8 speed;
  #line 5115 
  struct net_device *netdev = tp->netdev;
  #line 5116 
  struct napi_struct *napi = & tp->napi;
  #line 5119 
  speed = rtl8152_get_speed(tp);
  #line 5121 
  if (((int)speed & 2) != 0) {
    #line 5122 
    if (netif_carrier_ok(netdev)) {
      #line 5133 
      if ((int)netif_queue_stopped(netdev) != 0) {
        #line 5133 
        ;
        #line 5133 
        if (skb_queue_len(& tp->tx_queue) < tp->tx_qlen) 
                                                         #line 5135 
                                                         netif_wake_queue(netdev);
      }
    }
    else {
      #line 5123 
      (*(tp->rtl_ops.enable))(tp);
      #line 5124 
      netif_stop_queue(netdev);
      #line 5125 
      napi_disable(napi);
      #line 5126 
      netif_carrier_on(netdev);
      #line 5127 
      rtl_start_rx(tp);
      #line 5128 
      cif_clear_bit(1L,& tp->flags);
      #line 5129 
      _rtl8152_set_rx_mode(netdev);
      #line 5130 
      napi_enable(& tp->napi);
      #line 5131 
      netif_wake_queue(netdev);
      #line 5132 
      if ((tp->msg_enable & 4U) != 0U) 
                                       #line 5132 
                                       netdev_info(netdev,(char *)"carrier on\n");
    }
  }
  else {
    #line 5138 
    if ((int)netif_carrier_ok(netdev) != 0) {
      #line 5139 
      netif_carrier_off(netdev);
      #line 5140 
      tasklet_disable(& tp->tx_tl);
      #line 5141 
      napi_disable(napi);
      #line 5142 
      (*(tp->rtl_ops.disable))(tp);
      #line 5143 
      napi_enable(napi);
      #line 5144 
      tasklet_enable(& tp->tx_tl);
      #line 5145 
      if ((tp->msg_enable & 4U) != 0U) 
                                       #line 5145 
                                       netdev_info(netdev,(char *)"carrier off\n");
    }
  }
  #line 5147 
  return;
}

#line 5150  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static void rtl_work_func_t(struct work_struct *work)
{
  #line 5152 
  void *__mptr;
  #line 5152 
  __mptr = (void *)work;
  #line 5152 
  struct r8152 *tp = ((struct r8152 *)(__mptr + 18446744073709550560U));
  #line 5157 
  if ((int)test_bit(0L,& tp->flags) != 0) 
                                          #line 5158 
                                          return;
  else {
    #line 5157 
    if (! netif_running(tp->netdev)) 
                                     #line 5158 
                                     return;
  }
  #line 5160 
  if (usb_autopm_get_interface(tp->intf) < 0) 
                                              #line 5161 
                                              return;
  #line 5163 
  if (! test_bit(2L,& tp->flags)) 
                                  #line 5164 
                                  goto out1;
  #line 5166 
  if (cif_mutex_trylock_control_of_r8152(& tp->control) == 0) {
    #line 5167 
    cif_schedule_delayed_work(& tp->schedule,0UL);
    #line 5168 
    goto out1;
  }
  #line 5171 
  if ((int)test_and_clear_bit(3L,& tp->flags) != 0) 
                                                    #line 5172 
                                                    set_carrier(tp);
  #line 5174 
  if ((int)test_and_clear_bit(1L,& tp->flags) != 0) 
                                                    #line 5175 
                                                    _rtl8152_set_rx_mode(tp->netdev);
  #line 5178 
  if ((int)test_and_clear_bit(6L,& tp->flags) != 0) {
    #line 5178 
    if ((int)netif_carrier_ok(tp->netdev) != 0) 
                                                #line 5180 
                                                cif_tasklet_schedule(& tp->tx_tl);
  }
  #line 5182 
  cif_mutex_unlock_control_of_r8152(& tp->control);
  #line 5184 
  out1: 
        #line 5184 
  ;
  #line 5185 
  usb_autopm_put_interface(tp->intf);
  #line 5186 
  return;
}

#line 5188  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static void rtl_hw_phy_work_func_t(struct work_struct *work)
{
  #line 5190 
  void *__mptr;
  #line 5190 
  __mptr = (void *)work;
  #line 5190 
  struct r8152 *tp = ((struct r8152 *)(__mptr + 18446744073709550376U));
  #line 5192 
  if ((int)test_bit(0L,& tp->flags) != 0) 
                                          #line 5193 
                                          return;
  #line 5195 
  if (usb_autopm_get_interface(tp->intf) < 0) 
                                              #line 5196 
                                              return;
  #line 5198 
  cif_mutex_lock_control_of_r8152(& tp->control);
  #line 5200 
  if (rtl8152_request_firmware(tp) == -19) 
    #line 5200 
    if ((int)tp->rtl_fw.retry != 0) {
      #line 5201 
      tp->rtl_fw.retry = (_Bool)0;
      #line 5202 
      tp->rtl_fw.fw = (struct firmware *)0;
      #line 5206 
      cif_queue_delayed_work(system_long_wq,& tp->hw_phy_work,2500UL);
      #line 5207 
      goto ignore_once;
    }
  #line 5210 
  (*(tp->rtl_ops.hw_phy_cfg))(tp);
  #line 5212 
  rtl8152_set_speed(tp,(unsigned char)((int)tp->autoneg),(unsigned int)tp->speed,(unsigned char)((int)tp->duplex),tp->advertising);
  #line 5215 
  ignore_once: 
               #line 5215 
  ;
  #line 5216 
  cif_mutex_unlock_control_of_r8152(& tp->control);
  #line 5218 
  usb_autopm_put_interface(tp->intf);
  #line 5219 
  return;
}

#line 5222  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static int rtl_notifier(struct notifier_block *nb, unsigned long action, void *data)
{
  #line 5225 
  void *__mptr;
  #line 5225 
  __mptr = (void *)nb;
  #line 5225 
  struct r8152 *tp = ((struct r8152 *)(__mptr + 18446744073709549984U));
  #line 5227 
  switch (action) {
    #line 5228 
    case (unsigned long)1: 
                           #line 5228 
    ;
    #line 5229 
    case (unsigned long)3: 
                           #line 5229 
    ;
    #line 5230 
    usb_autopm_get_interface(tp->intf);
    #line 5231 
    break;
    #line 5233 
    case (unsigned long)2: 
                           #line 5233 
    ;
    #line 5234 
    case (unsigned long)4: 
                           #line 5234 
    ;
    #line 5235 
    usb_autopm_put_interface(tp->intf);
    #line 5236 
    break;
    #line 5238 
    case (unsigned long)6: 
                           #line 5238 
    ;
    #line 5239 
    case (unsigned long)5: 
                           #line 5239 
    ;
    #line 5240 
    default: 
             #line 5240 
    ;
    #line 5241 
    break;
  }
  #line 5244 
  return 0;
}

#line 5248  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static int rtl8152_open(struct net_device *netdev)
{
  #line 5250 
  struct r8152 *tp = netdev_priv(netdev);
  #line 5251 
  int res = 0;
  #line 5253 
  if ((work_busy(& tp->hw_phy_work.work) & 1U) != 0U) {
    #line 5254 
    cancel_delayed_work_sync(& tp->hw_phy_work);
    #line 5255 
    rtl_hw_phy_work_func_t(& tp->hw_phy_work.work);
  }
  #line 5258 
  res = alloc_all_mem(tp);
  #line 5259 
  if (res != 0) 
                #line 5260 
                goto out;
  #line 5262 
  res = usb_autopm_get_interface(tp->intf);
  #line 5263 
  if (res < 0) 
               #line 5264 
               goto out_free;
  #line 5266 
  cif_mutex_lock_control_of_r8152(& tp->control);
  #line 5268 
  (*(tp->rtl_ops.up))(tp);
  #line 5270 
  netif_carrier_off(netdev);
  #line 5271 
  netif_start_queue(netdev);
  #line 5272 
  cif_set_bit(2L,& tp->flags);
  #line 5274 
  res = cif_usb_submit_urb(tp->intr_urb,3264U);
  #line 5275 
  if (res != 0) {
    #line 5276 
    if (res == -19) 
                    #line 5277 
                    netif_device_detach(tp->netdev);
    #line 5278 
    if ((tp->msg_enable & 32U) != 0U) 
                                      #line 5278 
                                      netdev_warn(netdev,(char *)"intr_urb submit failed: %d\n",res);
    #line 5280 
    goto out_unlock;
  }
  #line 5282 
  napi_enable(& tp->napi);
  #line 5283 
  tasklet_enable(& tp->tx_tl);
  #line 5285 
  cif_mutex_unlock_control_of_r8152(& tp->control);
  #line 5287 
  usb_autopm_put_interface(tp->intf);
  #line 5289 
  tp->pm_notifier.notifier_call = & rtl_notifier;
  #line 5290 
  register_pm_notifier(& tp->pm_notifier);
  #line 5292 
  return 0;
  #line 5294 
  out_unlock: 
              #line 5294 
  ;
  #line 5295 
  cif_mutex_unlock_control_of_r8152(& tp->control);
  #line 5296 
  usb_autopm_put_interface(tp->intf);
  #line 5297 
  out_free: 
            #line 5297 
  ;
  #line 5298 
  free_all_mem(tp);
  #line 5299 
  out: 
       #line 5299 
  ;
  #line 5300 
  return res;
}

#line 5303  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static int rtl8152_close(struct net_device *netdev)
{
  #line 5305 
  struct r8152 *tp = netdev_priv(netdev);
  #line 5306 
  int res = 0;
  #line 5309 
  unregister_pm_notifier(& tp->pm_notifier);
  #line 5311 
  tasklet_disable(& tp->tx_tl);
  #line 5312 
  cif_clear_bit(2L,& tp->flags);
  #line 5313 
  cif_usb_kill_urb(tp->intr_urb);
  #line 5314 
  cancel_delayed_work_sync(& tp->schedule);
  #line 5315 
  napi_disable(& tp->napi);
  #line 5316 
  netif_stop_queue(netdev);
  #line 5318 
  res = usb_autopm_get_interface(tp->intf);
  #line 5319 
  if (res < 0) 
               #line 5319 
               goto _LOR;
  else {
    #line 5319 
    if ((int)test_bit(0L,& tp->flags) != 0) {
      #line 5319 
      _LOR: {
              #line 5320 
              rtl_drop_queued_tx(tp);
              #line 5321 
              rtl_stop_rx(tp);
            }
    }
    else {
      #line 5323 
      cif_mutex_lock_control_of_r8152(& tp->control);
      #line 5325 
      (*(tp->rtl_ops.down))(tp);
      #line 5327 
      cif_mutex_unlock_control_of_r8152(& tp->control);
      #line 5329 
      usb_autopm_put_interface(tp->intf);
    }
  }
  #line 5332 
  free_all_mem(tp);
  #line 5334 
  return res;
}

#line 5337  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static void rtl_tally_reset(struct r8152 *tp)
{
  #line 5339 
  u32 ocp_data;
  #line 5341 
  ocp_data = (unsigned int)ocp_read_word(tp,(unsigned short)256,(unsigned short)59392);
  #line 5342 
  ocp_data |= 1U;
  #line 5343 
  ocp_write_word(tp,(unsigned short)256,(unsigned short)59392,ocp_data);
  #line 5344 
  return;
}

#line 5346  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static void r8152b_init(struct r8152 *tp)
{
  #line 5348 
  u32 ocp_data;
  #line 5349 
  u16 data;
  #line 5351 
  if ((int)test_bit(0L,& tp->flags) != 0) 
                                          #line 5352 
                                          return;
  #line 5354 
  data = (unsigned short)r8152_mdio_read(tp,0U);
  #line 5355 
  if (((int)data & 2048) != 0) {
    #line 5356 
    data = (unsigned short)((unsigned int)data & 63487U);
    #line 5357 
    r8152_mdio_write(tp,0U,(unsigned int)data);
  }
  #line 5360 
  r8152_aldps_en(tp,(_Bool)0);
  #line 5362 
  if ((unsigned int)tp->version == 1U) {
    #line 5363 
    ocp_data = (unsigned int)ocp_read_word(tp,(unsigned short)256,(unsigned short)56722);
    #line 5364 
    ocp_data &= 4294965503U;
    #line 5365 
    ocp_write_word(tp,(unsigned short)256,(unsigned short)56722,ocp_data);
  }
  #line 5368 
  r8152_power_cut_en(tp,(_Bool)0);
  #line 5370 
  ocp_data = (unsigned int)ocp_read_word(tp,(unsigned short)256,(unsigned short)59468);
  #line 5371 
  ocp_data |= 192U;
  #line 5372 
  ocp_write_word(tp,(unsigned short)256,(unsigned short)59468,ocp_data);
  #line 5373 
  ocp_data = ocp_read_dword(tp,(unsigned short)256,(unsigned short)57536);
  #line 5374 
  ocp_data &= 4042322160U;
  #line 5375 
  ocp_data |= 117526279U;
  #line 5376 
  ocp_write_dword(tp,(unsigned short)256,(unsigned short)57536,ocp_data);
  #line 5377 
  ocp_data = 15U;
  #line 5379 
  ocp_write_word(tp,(unsigned short)256,(unsigned short)57378,ocp_data);
  #line 5381 
  rtl_tally_reset(tp);
  #line 5384 
  ocp_data = (unsigned int)ocp_read_word(tp,(unsigned short)0,(unsigned short)54278);
  #line 5385 
  ocp_data &= 4294967151U;
  #line 5386 
  ocp_write_word(tp,(unsigned short)0,(unsigned short)54278,ocp_data);
  #line 5387 
  return;
}

#line 5389  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static void r8153_init(struct r8152 *tp)
{
  #line 5391 
  u32 ocp_data;
  #line 5392 
  u16 data;
  #line 5393 
  int i;
  #line 5395 
  if ((int)test_bit(0L,& tp->flags) != 0) 
                                          #line 5396 
                                          return;
  #line 5398 
  r8153_u1u2en(tp,(_Bool)0);
  #line 5400 
  i = 0;
  #line 5400 
  while (i <= 499) {
    {
      #line 5401 
      if (((int)ocp_read_word(tp,(unsigned short)256,(unsigned short)57348) & 2) != 0) 
        #line 5403 
        break;
      #line 5404 
      msleep(20U);
    }
    #line 5400 
    i ++;
  }
  #line 5407 
  data = r8153_phy_status(tp,(unsigned short)0);
  #line 5409 
  if ((unsigned int)tp->version + 253U <= 2U) 
                                              #line 5411 
                                              ocp_reg_write(tp,(unsigned short)48134,(unsigned short)448);
  #line 5413 
  data = (unsigned short)r8152_mdio_read(tp,0U);
  #line 5414 
  if (((int)data & 2048) != 0) {
    #line 5415 
    data = (unsigned short)((unsigned int)data & 63487U);
    #line 5416 
    r8152_mdio_write(tp,0U,(unsigned int)data);
  }
  #line 5419 
  data = r8153_phy_status(tp,(unsigned short)3);
  #line 5421 
  r8153_u2p3en(tp,(_Bool)0);
  #line 5423 
  if ((unsigned int)tp->version == 4U) {
    #line 5424 
    ocp_data = (unsigned int)ocp_read_word(tp,(unsigned short)0,(unsigned short)46120);
    #line 5425 
    ocp_data &= 4294950913U;
    #line 5426 
    ocp_data |= 192U;
    #line 5427 
    ocp_write_word(tp,(unsigned short)0,(unsigned short)46120,ocp_data);
    #line 5429 
    ocp_data = (unsigned int)ocp_read_byte(tp,(unsigned short)0,(unsigned short)46110);
    #line 5430 
    ocp_data |= 3U;
    #line 5431 
    ocp_write_byte(tp,(unsigned short)0,(unsigned short)46110,ocp_data);
  }
  else 
    #line 5432 
    if ((unsigned int)tp->version == 5U) {
      #line 5433 
      ocp_data = (unsigned int)ocp_read_byte(tp,(unsigned short)256,(unsigned short)49328);
      #line 5434 
      ocp_data &= 4294967293U;
      #line 5435 
      ocp_write_byte(tp,(unsigned short)256,(unsigned short)49328,ocp_data);
      #line 5437 
      ocp_data = (unsigned int)ocp_read_byte(tp,(unsigned short)0,(unsigned short)46180);
      #line 5438 
      if ((unsigned int)ocp_read_word(tp,(unsigned short)0,(unsigned short)53184) == 0U) 
        #line 5439 
        ocp_data &= 4294967294U; else 
                                      #line 5441 
                                      ocp_data |= 1U;
      #line 5442 
      ocp_write_byte(tp,(unsigned short)0,(unsigned short)46180,ocp_data);
    }
    else 
      #line 5443 
      if ((unsigned int)tp->version == 6U) {
        #line 5444 
        ocp_data = (unsigned int)ocp_read_byte(tp,(unsigned short)0,(unsigned short)46180);
        #line 5445 
        if ((unsigned int)ocp_read_word(tp,(unsigned short)0,(unsigned short)53184) == 0U) 
          #line 5446 
          ocp_data &= 4294967294U; else 
                                        #line 5448 
                                        ocp_data |= 1U;
        #line 5449 
        ocp_write_byte(tp,(unsigned short)0,(unsigned short)46180,ocp_data);
        #line 5451 
        r8153_queue_wake(tp,(_Bool)0);
        #line 5453 
        ocp_data = (unsigned int)ocp_read_word(tp,(unsigned short)256,(unsigned short)54168);
        #line 5454 
        if (((int)rtl8152_get_speed(tp) & 2) != 0) 
                                                   #line 5455 
                                                   ocp_data |= 32768U; else 
                                                                    #line 5457 
                                                                    ocp_data &= 4294934527U;
        #line 5458 
        ocp_data |= 1U;
        #line 5459 
        ocp_write_word(tp,(unsigned short)256,(unsigned short)54168,ocp_data);
      }
  #line 5462 
  ocp_data = (unsigned int)ocp_read_byte(tp,(unsigned short)0,(unsigned short)46182);
  #line 5463 
  ocp_data |= 1U;
  #line 5464 
  ocp_write_byte(tp,(unsigned short)0,(unsigned short)46182,ocp_data);
  #line 5466 
  ocp_data = (unsigned int)ocp_read_word(tp,(unsigned short)0,(unsigned short)58428);
  #line 5467 
  ocp_data &= 4294967294U;
  #line 5468 
  ocp_write_word(tp,(unsigned short)0,(unsigned short)58428,ocp_data);
  #line 5470 
  ocp_data = (unsigned int)ocp_read_word(tp,(unsigned short)256,(unsigned short)56722);
  #line 5471 
  ocp_data &= 4294965503U;
  #line 5472 
  ocp_write_word(tp,(unsigned short)256,(unsigned short)56722,ocp_data);
  #line 5474 
  ocp_data = 50U;
  #line 5475 
  if ((unsigned int)tp->version == 4U && (tp->udev)->speed <= (unsigned int)USB_SPEED_WIRELESS) 
    #line 5476 
    ocp_data |= 4U; else 
                         #line 5478 
                         ocp_data |= 12U;
  #line 5479 
  ocp_write_byte(tp,(unsigned short)0,(unsigned short)54298,ocp_data);
  #line 5481 
  ocp_data = (unsigned int)ocp_read_word(tp,(unsigned short)0,(unsigned short)55332);
  #line 5482 
  ocp_data &= 4294903807U;
  #line 5483 
  ocp_data |= 41216U;
  #line 5484 
  ocp_write_word(tp,(unsigned short)0,(unsigned short)55332,ocp_data);
  #line 5486 
  ocp_write_word(tp,(unsigned short)0,(unsigned short)52216,1U);
  #line 5488 
  r8153_power_cut_en(tp,(_Bool)0);
  #line 5489 
  rtl_runtime_suspend_enable(tp,(_Bool)0);
  #line 5490 
  r8153_u1u2en(tp,(_Bool)1);
  #line 5491 
  r8153_mac_clk_spd(tp,(_Bool)0);
  #line 5492 
  usb_enable_lpm(tp->udev);
  #line 5494 
  ocp_data = (unsigned int)ocp_read_byte(tp,(unsigned short)256,(unsigned short)59658);
  #line 5495 
  ocp_data |= 1U;
  #line 5496 
  ocp_write_byte(tp,(unsigned short)256,(unsigned short)59658,ocp_data);
  #line 5498 
  ocp_data = (unsigned int)ocp_read_byte(tp,(unsigned short)256,(unsigned short)57351);
  #line 5499 
  ocp_data &= 4294967167U;
  #line 5500 
  ocp_write_byte(tp,(unsigned short)256,(unsigned short)57351,ocp_data);
  #line 5503 
  ocp_data = (unsigned int)ocp_read_word(tp,(unsigned short)0,(unsigned short)54278);
  #line 5504 
  ocp_data &= 4294967151U;
  #line 5505 
  if ((int)test_bit(8L,& tp->flags) != 0) 
                                          #line 5506 
                                          ocp_data |= 16U;
  #line 5508 
  ocp_write_word(tp,(unsigned short)0,(unsigned short)54278,ocp_data);
  #line 5510 
  rtl_tally_reset(tp);
  #line 5512 
  switch ((unsigned int)(tp->udev)->speed) {
    #line 5513 
    case (unsigned int)5: 
                          #line 5513 
    ;
    #line 5514 
    case (unsigned int)6: 
                          #line 5514 
    ;
    #line 5515 
    tp->coalesce = 85000U;
    #line 5516 
    break;
    #line 5517 
    case (unsigned int)3: 
                          #line 5517 
    ;
    #line 5518 
    tp->coalesce = 250000U;
    #line 5519 
    break;
    #line 5520 
    default: 
             #line 5520 
    ;
    #line 5521 
    tp->coalesce = 524280U;
    #line 5522 
    break;
  }
  #line 5524 
  return;
}

#line 5526  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static void r8153b_init(struct r8152 *tp)
{
  #line 5528 
  u32 ocp_data;
  #line 5529 
  u16 data;
  #line 5530 
  int i;
  #line 5532 
  if ((int)test_bit(0L,& tp->flags) != 0) 
                                          #line 5533 
                                          return;
  #line 5535 
  r8153b_u1u2en(tp,(_Bool)0);
  #line 5537 
  i = 0;
  #line 5537 
  while (i <= 499) {
    {
      #line 5538 
      if (((int)ocp_read_word(tp,(unsigned short)256,(unsigned short)57348) & 2) != 0) 
        #line 5540 
        break;
      #line 5541 
      msleep(20U);
    }
    #line 5537 
    i ++;
  }
  #line 5544 
  data = r8153_phy_status(tp,(unsigned short)0);
  #line 5546 
  data = (unsigned short)r8152_mdio_read(tp,0U);
  #line 5547 
  if (((int)data & 2048) != 0) {
    #line 5548 
    data = (unsigned short)((unsigned int)data & 63487U);
    #line 5549 
    r8152_mdio_write(tp,0U,(unsigned int)data);
  }
  #line 5552 
  data = r8153_phy_status(tp,(unsigned short)3);
  #line 5554 
  r8153_u2p3en(tp,(_Bool)0);
  #line 5557 
  ocp_write_word(tp,(unsigned short)0,(unsigned short)52220,4095U);
  #line 5560 
  ocp_write_word(tp,(unsigned short)0,(unsigned short)54490,500U);
  #line 5562 
  r8153b_power_cut_en(tp,(_Bool)0);
  #line 5563 
  r8153b_ups_en(tp,(_Bool)0);
  #line 5564 
  r8153_queue_wake(tp,(_Bool)0);
  #line 5565 
  rtl_runtime_suspend_enable(tp,(_Bool)0);
  #line 5567 
  ocp_data = (unsigned int)ocp_read_word(tp,(unsigned short)256,(unsigned short)54168);
  #line 5568 
  if (((int)rtl8152_get_speed(tp) & 2) != 0) 
                                             #line 5569 
                                             ocp_data |= 32768U; else 
                                                                   #line 5571 
                                                                   ocp_data &= 4294934527U;
  #line 5572 
  ocp_data |= 1U;
  #line 5573 
  ocp_write_word(tp,(unsigned short)256,(unsigned short)54168,ocp_data);
  #line 5575 
  if ((tp->udev)->speed != (unsigned int)USB_SPEED_HIGH) 
                                                         #line 5576 
                                                         r8153b_u1u2en(tp,(_Bool)1);
  #line 5577 
  usb_enable_lpm(tp->udev);
  #line 5580 
  ocp_data = (unsigned int)ocp_read_word(tp,(unsigned short)256,(unsigned short)57546);
  #line 5581 
  ocp_data |= 32768U;
  #line 5582 
  ocp_write_word(tp,(unsigned short)256,(unsigned short)57546,ocp_data);
  #line 5584 
  ocp_data = (unsigned int)ocp_read_word(tp,(unsigned short)256,(unsigned short)57548);
  #line 5585 
  ocp_data &= 4294950911U;
  #line 5586 
  ocp_write_word(tp,(unsigned short)256,(unsigned short)57548,ocp_data);
  #line 5588 
  if ((unsigned int)tp->version == 9U) {
    #line 5590 
    if (((unsigned long)ocp_read_byte(tp,(unsigned short)256,(unsigned short)56320) & 32UL) != 0UL) {
      #line 5591 
      ocp_data = (unsigned int)ocp_read_word(tp,(unsigned short)256,(unsigned short)59468);
      #line 5592 
      ocp_data |= 16U;
      #line 5593 
      ocp_write_word(tp,(unsigned short)256,(unsigned short)59468,ocp_data);
    }
  }
  #line 5597 
  cif_set_bit(7L,& tp->flags);
  #line 5600 
  ocp_data = (unsigned int)ocp_read_word(tp,(unsigned short)0,(unsigned short)54278);
  #line 5601 
  ocp_data &= 4294967151U;
  #line 5602 
  ocp_write_word(tp,(unsigned short)0,(unsigned short)54278,ocp_data);
  #line 5604 
  rtl_tally_reset(tp);
  #line 5606 
  tp->coalesce = 15000U;
  #line 5607 
  return;
}

#line 5609  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static int rtl8152_pre_reset(struct usb_interface *intf)
{
  #line 5612 
  struct net_device *netdev;
  #line 5611 
  struct r8152 *tp = usb_get_intfdata(intf);
  #line 5614 
  if (tp == (struct r8152 *)0) 
                               #line 5615 
                               return 0;
  #line 5617 
  netdev = tp->netdev;
  #line 5618 
  if (! netif_running(netdev)) 
                               #line 5619 
                               return 0;
  #line 5621 
  netif_stop_queue(netdev);
  #line 5622 
  tasklet_disable(& tp->tx_tl);
  #line 5623 
  cif_clear_bit(2L,& tp->flags);
  #line 5624 
  cif_usb_kill_urb(tp->intr_urb);
  #line 5625 
  cancel_delayed_work_sync(& tp->schedule);
  #line 5626 
  napi_disable(& tp->napi);
  #line 5627 
  if ((int)netif_carrier_ok(netdev) != 0) {
    #line 5628 
    cif_mutex_lock_control_of_r8152(& tp->control);
    #line 5629 
    (*(tp->rtl_ops.disable))(tp);
    #line 5630 
    cif_mutex_unlock_control_of_r8152(& tp->control);
  }
  #line 5633 
  return 0;
}

#line 5636  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static int rtl8152_post_reset(struct usb_interface *intf)
{
  #line 5639 
  struct net_device *netdev;
  #line 5640 
  struct sockaddr sa;
  #line 5638 
  struct r8152 *tp = usb_get_intfdata(intf);
  #line 5642 
  if (tp == (struct r8152 *)0) 
                               #line 5643 
                               return 0;
  #line 5646 
  if (determine_ethernet_addr(tp,& sa) >= 0) {
    #line 5647 
    rtnl_lock();
    #line 5648 
    dev_set_mac_address(tp->netdev,& sa,(struct netlink_ext_ack *)0);
    #line 5649 
    rtnl_unlock();
  }
  #line 5652 
  netdev = tp->netdev;
  #line 5653 
  if (! netif_running(netdev)) 
                               #line 5654 
                               return 0;
  #line 5656 
  cif_set_bit(2L,& tp->flags);
  #line 5657 
  if ((int)netif_carrier_ok(netdev) != 0) {
    #line 5658 
    cif_mutex_lock_control_of_r8152(& tp->control);
    #line 5659 
    (*(tp->rtl_ops.enable))(tp);
    #line 5660 
    rtl_start_rx(tp);
    #line 5661 
    _rtl8152_set_rx_mode(netdev);
    #line 5662 
    cif_mutex_unlock_control_of_r8152(& tp->control);
  }
  #line 5665 
  napi_enable(& tp->napi);
  #line 5666 
  tasklet_enable(& tp->tx_tl);
  #line 5667 
  netif_wake_queue(netdev);
  #line 5668 
  cif_usb_submit_urb(tp->intr_urb,3264U);
  #line 5670 
  if (list_empty(& tp->rx_done) == 0) 
                                      #line 5671 
                                      napi_schedule(& tp->napi);
  #line 5673 
  return 0;
}

#line 5676  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static bool delay_autosuspend(struct r8152 *tp)
{
  #line 5678 
  bool sw_linking = (_Bool)((int)netif_carrier_ok(tp->netdev) != 0);
  #line 5679 
  bool hw_linking = (_Bool)(((int)rtl8152_get_speed(tp) & 2) != 0);
  #line 5685 
  if (work_busy(& tp->schedule.work) != 0U) 
                                            #line 5686 
                                            return (_Bool)1;
  else 
    #line 5685 
    if ((int)sw_linking != (int)hw_linking) 
                                            #line 5686 
                                            return (_Bool)1;
  #line 5691 
  if (! sw_linking) {
    #line 5691 
    if ((int)(*(tp->rtl_ops.in_nway))(tp) != 0) 
                                                #line 5692 
                                                return (_Bool)1; else 
                                                                   #line 5691 
                                                                   goto _LAND;
  }
  else {
    #line 5691 
    _LAND: 
    #line 5693 
    if (skb_queue_empty(& tp->tx_queue) == 0) 
                                              #line 5694 
                                              return (_Bool)1; else 
                                                                    #line 5696 
                                                                    return (_Bool)0;
  }
}

#line 5699  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static int rtl8152_runtime_resume(struct r8152 *tp)
{
  #line 5701 
  struct net_device *netdev = tp->netdev;
  #line 5703 
  if ((int)netif_running(netdev) != 0) {
    #line 5703 
    if ((netdev->flags & 1U) != 0U) {
      #line 5704 
      struct napi_struct *napi = & tp->napi;
      #line 5706 
      (*(tp->rtl_ops.autosuspend_en))(tp,(_Bool)0);
      #line 5707 
      napi_disable(napi);
      #line 5708 
      cif_set_bit(2L,& tp->flags);
      #line 5710 
      if ((int)netif_carrier_ok(netdev) != 0) {
        #line 5711 
        if (((int)rtl8152_get_speed(tp) & 2) != 0) 
                                                   #line 5712 
                                                   rtl_start_rx(tp);
        else {
          #line 5714 
          netif_carrier_off(netdev);
          #line 5715 
          (*(tp->rtl_ops.disable))(tp);
          #line 5716 
          if ((tp->msg_enable & 4U) != 0U) 
                                           #line 5716 
                                           netdev_info(netdev,(char *)"linking down\n");
        }
      }
      #line 5720 
      napi_enable(napi);
      #line 5721 
      cif_clear_bit(4L,& tp->flags);
      #line 5724 
      if (list_empty(& tp->rx_done) == 0) 
                                          #line 5725 
                                          napi_schedule(& tp->napi);
      #line 5727 
      cif_usb_submit_urb(tp->intr_urb,3072U);
    }
    else 
         #line 5703 
         goto _LAND;
  }
  else {
    #line 5703 
    _LAND: {
             #line 5729 
             if ((netdev->flags & 1U) != 0U) 
                                             #line 5730 
                                             (*(tp->rtl_ops.autosuspend_en))(tp,(_Bool)0);
             #line 5732 
             cif_clear_bit(4L,& tp->flags);
           }
  }
  #line 5735 
  return 0;
}

#line 5738  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static int rtl8152_system_resume(struct r8152 *tp)
{
  #line 5740 
  struct net_device *netdev = tp->netdev;
  #line 5742 
  netif_device_attach(netdev);
  #line 5744 
  if ((int)netif_running(netdev) != 0) 
    #line 5744 
    if ((netdev->flags & 1U) != 0U) {
      #line 5745 
      (*(tp->rtl_ops.up))(tp);
      #line 5746 
      netif_carrier_off(netdev);
      #line 5747 
      cif_set_bit(2L,& tp->flags);
      #line 5748 
      cif_usb_submit_urb(tp->intr_urb,3072U);
    }
  #line 5751 
  return 0;
}

#line 5754  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static int rtl8152_runtime_suspend(struct r8152 *tp)
{
  #line 5756 
  struct net_device *netdev = tp->netdev;
  #line 5757 
  int ret = 0;
  #line 5759 
  cif_set_bit(4L,& tp->flags);
  #line 5762 
  if ((int)netif_running(netdev) != 0) {
    #line 5762 
    if ((int)test_bit(2L,& tp->flags) != 0) {
      #line 5763 
      u32 rcr = 0U;
      #line 5765 
      if ((int)netif_carrier_ok(netdev) != 0) {
        #line 5766 
        u32 ocp_data;
        #line 5768 
        rcr = ocp_read_dword(tp,(unsigned short)256,(unsigned short)49168);
        #line 5769 
        ocp_data = rcr & 4294967280U;
        #line 5770 
        ocp_write_dword(tp,(unsigned short)256,(unsigned short)49168,ocp_data);
        #line 5771 
        rxdy_gated_en(tp,(_Bool)1);
        #line 5772 
        ocp_data = (unsigned int)ocp_read_byte(tp,(unsigned short)256,(unsigned short)59471);
        #line 5774 
        if ((ocp_data & 16U) == 0U) {
          #line 5775 
          rxdy_gated_en(tp,(_Bool)0);
          #line 5776 
          ocp_write_dword(tp,(unsigned short)256,(unsigned short)49168,rcr);
          #line 5777 
          cif_clear_bit(4L,& tp->flags);
          #line 5779 
          ret = -16;
          #line 5780 
          goto out1;
        }
      }
      #line 5784 
      cif_clear_bit(2L,& tp->flags);
      #line 5785 
      cif_usb_kill_urb(tp->intr_urb);
      #line 5787 
      (*(tp->rtl_ops.autosuspend_en))(tp,(_Bool)1);
      #line 5789 
      if ((int)netif_carrier_ok(netdev) != 0) {
        #line 5790 
        struct napi_struct *napi = & tp->napi;
        #line 5792 
        napi_disable(napi);
        #line 5793 
        rtl_stop_rx(tp);
        #line 5794 
        rxdy_gated_en(tp,(_Bool)0);
        #line 5795 
        ocp_write_dword(tp,(unsigned short)256,(unsigned short)49168,rcr);
        #line 5796 
        napi_enable(napi);
      }
      #line 5799 
      if ((int)delay_autosuspend(tp) != 0) {
        #line 5800 
        rtl8152_runtime_resume(tp);
        #line 5801 
        ret = -16;
      }
    }
  }
  #line 5805 
  out1: 
        #line 5805 
  ;
  #line 5806 
  return ret;
}

#line 5809  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static int rtl8152_system_suspend(struct r8152 *tp)
{
  #line 5811 
  struct net_device *netdev = tp->netdev;
  #line 5813 
  netif_device_detach(netdev);
  #line 5815 
  if ((int)netif_running(netdev) != 0) {
    #line 5815 
    if ((int)test_bit(2L,& tp->flags) != 0) {
      #line 5816 
      struct napi_struct *napi = & tp->napi;
      #line 5818 
      cif_clear_bit(2L,& tp->flags);
      #line 5819 
      cif_usb_kill_urb(tp->intr_urb);
      #line 5820 
      tasklet_disable(& tp->tx_tl);
      #line 5821 
      napi_disable(napi);
      #line 5822 
      cancel_delayed_work_sync(& tp->schedule);
      #line 5823 
      (*(tp->rtl_ops.down))(tp);
      #line 5824 
      napi_enable(napi);
      #line 5825 
      tasklet_enable(& tp->tx_tl);
    }
  }
  #line 5828 
  return 0;
}

#line 5831  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static int rtl8152_suspend(struct usb_interface *intf, pm_message_t message)
{
  #line 5834 
  int ret;
  #line 5833 
  struct r8152 *tp = usb_get_intfdata(intf);
  #line 5836 
  cif_mutex_lock_control_of_r8152(& tp->control);
  #line 5838 
  if ((message.event & 1024) != 0) 
                                   #line 5839 
                                   ret = rtl8152_runtime_suspend(tp); else 
                                                                    #line 5841 
                                                                    ret = rtl8152_system_suspend(tp);
  #line 5843 
  cif_mutex_unlock_control_of_r8152(& tp->control);
  #line 5845 
  return ret;
}

#line 5848  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static int rtl8152_resume(struct usb_interface *intf)
{
  #line 5851 
  int ret;
  #line 5850 
  struct r8152 *tp = usb_get_intfdata(intf);
  #line 5853 
  cif_mutex_lock_control_of_r8152(& tp->control);
  #line 5855 
  if ((int)test_bit(4L,& tp->flags) != 0) 
                                          #line 5856 
                                          ret = rtl8152_runtime_resume(tp); else 
                                                                    #line 5858 
                                                                    ret = rtl8152_system_resume(tp);
  #line 5860 
  cif_mutex_unlock_control_of_r8152(& tp->control);
  #line 5862 
  return ret;
}

#line 5865  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static int rtl8152_reset_resume(struct usb_interface *intf)
{
  #line 5867 
  struct r8152 *tp = usb_get_intfdata(intf);
  #line 5869 
  cif_clear_bit(4L,& tp->flags);
  #line 5870 
  (*(tp->rtl_ops.init))(tp);
  #line 5871 
  cif_queue_delayed_work(system_long_wq,& tp->hw_phy_work,0UL);
  #line 5872 
  set_ethernet_addr(tp);
  #line 5873 
  return rtl8152_resume(intf);
}

#line 5876  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static void rtl8152_get_wol(struct net_device *dev, struct ethtool_wolinfo *wol)
{
  #line 5878 
  struct r8152 *tp = netdev_priv(dev);
  #line 5880 
  if (usb_autopm_get_interface(tp->intf) < 0) 
                                              #line 5881 
                                              return;
  #line 5883 
  if (rtl_can_wakeup(tp)) {
    #line 5887 
    cif_mutex_lock_control_of_r8152(& tp->control);
    #line 5888 
    wol->supported = 47U;
    #line 5889 
    wol->wolopts = __rtl_get_wol(tp);
    #line 5890 
    cif_mutex_unlock_control_of_r8152(& tp->control);
  }
  else {
    #line 5884 
    wol->supported = 0U;
    #line 5885 
    wol->wolopts = 0U;
  }
  #line 5893 
  usb_autopm_put_interface(tp->intf);
  #line 5894 
  return;
}

#line 5896  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static int rtl8152_set_wol(struct net_device *dev, struct ethtool_wolinfo *wol)
{
  #line 5899 
  int ret;
  #line 5898 
  struct r8152 *tp = netdev_priv(dev);
  #line 5901 
  if (! rtl_can_wakeup(tp)) 
                            #line 5902 
                            return -95;
  #line 5904 
  if ((wol->wolopts & 4294967248U) != 0U) 
                                          #line 5905 
                                          return -22;
  #line 5907 
  ret = usb_autopm_get_interface(tp->intf);
  #line 5908 
  if (ret < 0) 
               #line 5909 
               goto out_set_wol;
  #line 5911 
  cif_mutex_lock_control_of_r8152(& tp->control);
  #line 5913 
  __rtl_set_wol(tp,wol->wolopts);
  #line 5914 
  tp->saved_wolopts = wol->wolopts & 47U;
  #line 5916 
  cif_mutex_unlock_control_of_r8152(& tp->control);
  #line 5918 
  usb_autopm_put_interface(tp->intf);
  #line 5920 
  out_set_wol: 
               #line 5920 
  ;
  #line 5921 
  return ret;
}

#line 5924  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static u32 rtl8152_get_msglevel(struct net_device *dev)
{
  #line 5926 
  struct r8152 *tp = netdev_priv(dev);
  #line 5928 
  return tp->msg_enable;
}

#line 5931  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static void rtl8152_set_msglevel(struct net_device *dev, u32 value)
{
  #line 5933 
  struct r8152 *tp = netdev_priv(dev);
  #line 5935 
  tp->msg_enable = value;
  #line 5936 
  return;
}

#line 5938  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static void rtl8152_get_drvinfo(struct net_device *netdev, struct ethtool_drvinfo *info)
{
  #line 5941 
  struct r8152 *tp = netdev_priv(netdev);
  #line 5943 
  strlcpy((char *)(& info->driver),(char *)"r8152",32UL);
  #line 5944 
  strlcpy((char *)(& info->version),(char *)"v1.",32UL);
  #line 5945 
  usb_make_path(tp->udev,(char *)(& info->bus_info),32UL);
  #line 5946 
  if (! IS_ERR_OR_NULL((void *)tp->rtl_fw.fw)) 
                                               #line 5947 
                                               strlcpy((char *)(& info->fw_version),(char *)(& tp->rtl_fw.version),32UL);
  #line 5948 
  return;
}

#line 5952  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static int rtl8152_get_link_ksettings(struct net_device *netdev, struct ethtool_link_ksettings *cmd)
{
  #line 5956 
  int ret;
  #line 5955 
  struct r8152 *tp = netdev_priv(netdev);
  #line 5958 
  if (tp->mii.mdio_read == (int (*)(struct net_device *, int , int ))0) 
    #line 5959 
    return -95;
  #line 5961 
  ret = usb_autopm_get_interface(tp->intf);
  #line 5962 
  if (ret < 0) 
               #line 5963 
               goto out;
  #line 5965 
  cif_mutex_lock_control_of_r8152(& tp->control);
  #line 5967 
  mii_ethtool_get_link_ksettings(& tp->mii,cmd);
  #line 5969 
  cif_mutex_unlock_control_of_r8152(& tp->control);
  #line 5971 
  usb_autopm_put_interface(tp->intf);
  #line 5973 
  out: 
       #line 5973 
  ;
  #line 5974 
  return ret;
}

#line 5977  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static int rtl8152_set_link_ksettings(struct net_device *dev, struct ethtool_link_ksettings *cmd)
{
  #line 5982 
  int ret;
  #line 5980 
  struct r8152 *tp = netdev_priv(dev);
  #line 5981 
  u32 advertising = 0U;
  #line 5984 
  ret = usb_autopm_get_interface(tp->intf);
  #line 5985 
  if (ret < 0) 
               #line 5986 
               goto out;
  #line 5988 
  if ((int)test_bit(0L,(unsigned long *)(& cmd->link_modes.advertising)) != 0) 
    #line 5990 
    advertising |= 1U;
  #line 5992 
  if ((int)test_bit(1L,(unsigned long *)(& cmd->link_modes.advertising)) != 0) 
    #line 5994 
    advertising |= 2U;
  #line 5996 
  if ((int)test_bit(2L,(unsigned long *)(& cmd->link_modes.advertising)) != 0) 
    #line 5998 
    advertising |= 4U;
  #line 6000 
  if ((int)test_bit(3L,(unsigned long *)(& cmd->link_modes.advertising)) != 0) 
    #line 6002 
    advertising |= 8U;
  #line 6004 
  if ((int)test_bit(4L,(unsigned long *)(& cmd->link_modes.advertising)) != 0) 
    #line 6006 
    advertising |= 16U;
  #line 6008 
  if ((int)test_bit(5L,(unsigned long *)(& cmd->link_modes.advertising)) != 0) 
    #line 6010 
    advertising |= 32U;
  #line 6012 
  cif_mutex_lock_control_of_r8152(& tp->control);
  #line 6014 
  ret = rtl8152_set_speed(tp,(unsigned char)((int)cmd->base.autoneg),cmd->base.speed,(unsigned char)((int)cmd->base.duplex),advertising);
  #line 6016 
  if (ret == 0) {
    #line 6017 
    tp->autoneg = cmd->base.autoneg;
    #line 6018 
    tp->speed = (unsigned short)cmd->base.speed;
    #line 6019 
    tp->duplex = cmd->base.duplex;
    #line 6020 
    tp->advertising = advertising;
  }
  #line 6023 
  cif_mutex_unlock_control_of_r8152(& tp->control);
  #line 6025 
  usb_autopm_put_interface(tp->intf);
  #line 6027 
  out: 
       #line 6027 
  ;
  #line 6028 
  return ret;
}

#line 6031  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static char rtl8152_gstrings[13U][32U] = {{(char)'t', (char)'x', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s'}, {(char)'r', (char)'x', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s'}, {(char)'t', (char)'x', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s'}, {(char)'r', (char)'x', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s'}, {(char)'r', (char)'x', (char)'_', (char)'m', (char)'i', (char)'s', (char)'s', (char)'e', (char)'d'}, {(char)'a', (char)'l', (char)'i', (char)'g', (char)'n', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s'}, {(char)'t', (char)'x', (char)'_', (char)'s', (char)'i', (char)'n', (char)'g', (char)'l', (char)'e', (char)'_', (char)'c', (char)'o', (char)'l', (char)'l', (char)'i', (char)'s', (char)'i', (char)'o', (char)'n', (char)'s'}, {(char)'t', (char)'x', (char)'_', (char)'m', (char)'u', (char)'l', (char)'t', (char)'i', (char)'_', (char)'c', (char)'o', (char)'l', (char)'l', (char)'i', (char)'s', (char)'i', (char)'o', (char)'n', (char)'s'}, {(char)'r', (char)'x', (char)'_', (char)'u', (char)'n', (char)'i', (char)'c', (char)'a', (char)'s', (char)'t'}, {(char)'r', (char)'x', (char)'_', (char)'b', (char)'r', (char)'o', (char)'a', (char)'d', (char)'c', (char)'a', (char)'s', (char)'t'}, {(char)'r', (char)'x', (char)'_', (char)'m', (char)'u', (char)'l', (char)'t', (char)'i', (char)'c', (char)'a', (char)'s', (char)'t'}, {(char)'t', (char)'x', (char)'_', (char)'a', (char)'b', (char)'o', (char)'r', (char)'t', (char)'e', (char)'d'}, {(char)'t', (char)'x', (char)'_', (char)'u', (char)'n', (char)'d', (char)'e', (char)'r', (char)'r', (char)'u', (char)'n'}};
#line 6047  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static int rtl8152_get_sset_count(struct net_device *dev, int sset)
{
  #line 6049 
  switch (sset) {
    #line 6050 
    case 1: 
            #line 6050 
    ;
    #line 6051 
    return 13;
    #line 6052 
    default: 
             #line 6052 
    ;
    #line 6053 
    return -95;
  }
}

#line 6057  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static void rtl8152_get_ethtool_stats(struct net_device *dev, struct ethtool_stats *stats, u64 *data)
{
  #line 6061 
  struct tally_counter tally;
  #line 6060 
  struct r8152 *tp = netdev_priv(dev);
  #line 6063 
  if (usb_autopm_get_interface(tp->intf) < 0) 
                                              #line 6064 
                                              return;
  #line 6066 
  generic_ocp_read(tp,(unsigned short)59536,(unsigned short)64,(void *)(& tally),(unsigned short)256);
  #line 6068 
  usb_autopm_put_interface(tp->intf);
  #line 6070 
  *data = tally.tx_packets;
  #line 6071 
  *(data + 1U) = tally.rx_packets;
  #line 6072 
  *(data + 2U) = tally.tx_errors;
  #line 6073 
  *(data + 3U) = (unsigned long long)tally.rx_errors;
  #line 6074 
  *(data + 4U) = (unsigned long long)tally.rx_missed;
  #line 6075 
  *(data + 5U) = (unsigned long long)tally.align_errors;
  #line 6076 
  *(data + 6U) = (unsigned long long)tally.tx_one_collision;
  #line 6077 
  *(data + 7U) = (unsigned long long)tally.tx_multi_collision;
  #line 6078 
  *(data + 8U) = tally.rx_unicast;
  #line 6079 
  *(data + 9U) = tally.rx_broadcast;
  #line 6080 
  *(data + 10U) = (unsigned long long)tally.rx_multicast;
  #line 6081 
  *(data + 11U) = (unsigned long long)tally.tx_aborted;
  #line 6082 
  *(data + 12U) = (unsigned long long)tally.tx_underrun;
  #line 6083 
  return;
}

#line 6085  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static void rtl8152_get_strings(struct net_device *dev, u32 stringset, u8 *data)
{
  #line 6087 
  switch (stringset) {
    #line 6088 
    case (u32)1: 
                 #line 6088 
    ;
    #line 6089 
    memcpy((void *)data,(void *)(& rtl8152_gstrings),416UL);
    #line 6090 
    break;
  }
  #line 6092 
  return;
}

#line 6094  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static int r8152_get_eee(struct r8152 *tp, struct ethtool_eee *eee)
{
  #line 6096 
  u32 lp;
  #line 6096 
  u32 adv;
  #line 6097 
  u16 val;
  #line 6096 
  u32 supported = 0U;
  #line 6099 
  val = r8152_mmd_read(tp,(unsigned short)3,(unsigned short)20);
  #line 6100 
  supported = mmd_eee_cap_to_ethtool_sup_t((unsigned short)((int)val));
  #line 6102 
  val = r8152_mmd_read(tp,(unsigned short)7,(unsigned short)60);
  #line 6103 
  adv = mmd_eee_cap_to_ethtool_sup_t((unsigned short)((int)val));
  #line 6105 
  val = r8152_mmd_read(tp,(unsigned short)7,(unsigned short)61);
  #line 6106 
  lp = mmd_eee_cap_to_ethtool_sup_t((unsigned short)((int)val));
  #line 6108 
  eee->eee_enabled = (unsigned int)tp->eee_en;
  #line 6109 
  eee->eee_active = (unsigned int)(((supported & adv) & lp) != 0U);
  #line 6110 
  eee->supported = supported;
  #line 6111 
  eee->advertised = (unsigned int)tp->eee_adv;
  #line 6112 
  eee->lp_advertised = lp;
  #line 6114 
  return 0;
}

#line 6117  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static int r8152_set_eee(struct r8152 *tp, struct ethtool_eee *eee)
{
  #line 6119 
  u16 val = ethtool_adv_to_mmd_eee_adv_t(eee->advertised);
  #line 6121 
  tp->eee_en = (_Bool)(eee->eee_enabled != 0U);
  #line 6122 
  tp->eee_adv = val;
  #line 6124 
  rtl_eee_enable(tp,(_Bool)((bool)((int)tp->eee_en) != 0));
  #line 6126 
  return 0;
}

#line 6129  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static int r8153_get_eee(struct r8152 *tp, struct ethtool_eee *eee)
{
  #line 6131 
  u32 lp;
  #line 6131 
  u32 adv;
  #line 6132 
  u16 val;
  #line 6131 
  u32 supported = 0U;
  #line 6134 
  val = ocp_reg_read(tp,(unsigned short)42436);
  #line 6135 
  supported = mmd_eee_cap_to_ethtool_sup_t((unsigned short)((int)val));
  #line 6137 
  val = ocp_reg_read(tp,(unsigned short)42448);
  #line 6138 
  adv = mmd_eee_cap_to_ethtool_sup_t((unsigned short)((int)val));
  #line 6140 
  val = ocp_reg_read(tp,(unsigned short)42450);
  #line 6141 
  lp = mmd_eee_cap_to_ethtool_sup_t((unsigned short)((int)val));
  #line 6143 
  eee->eee_enabled = (unsigned int)tp->eee_en;
  #line 6144 
  eee->eee_active = (unsigned int)(((supported & adv) & lp) != 0U);
  #line 6145 
  eee->supported = supported;
  #line 6146 
  eee->advertised = (unsigned int)tp->eee_adv;
  #line 6147 
  eee->lp_advertised = lp;
  #line 6149 
  return 0;
}

#line 6153  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static int rtl_ethtool_get_eee(struct net_device *net, struct ethtool_eee *edata)
{
  #line 6156 
  int ret;
  #line 6155 
  struct r8152 *tp = netdev_priv(net);
  #line 6158 
  ret = usb_autopm_get_interface(tp->intf);
  #line 6159 
  if (ret < 0) 
               #line 6160 
               goto out;
  #line 6162 
  cif_mutex_lock_control_of_r8152(& tp->control);
  #line 6164 
  ret = (*(tp->rtl_ops.eee_get))(tp,edata);
  #line 6166 
  cif_mutex_unlock_control_of_r8152(& tp->control);
  #line 6168 
  usb_autopm_put_interface(tp->intf);
  #line 6170 
  out: 
       #line 6170 
  ;
  #line 6171 
  return ret;
}

#line 6175  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static int rtl_ethtool_set_eee(struct net_device *net, struct ethtool_eee *edata)
{
  #line 6178 
  int ret;
  #line 6177 
  struct r8152 *tp = netdev_priv(net);
  #line 6180 
  ret = usb_autopm_get_interface(tp->intf);
  #line 6181 
  if (ret < 0) 
               #line 6182 
               goto out;
  #line 6184 
  cif_mutex_lock_control_of_r8152(& tp->control);
  #line 6186 
  ret = (*(tp->rtl_ops.eee_set))(tp,edata);
  #line 6187 
  if (ret == 0) 
                #line 6188 
                ret = mii_nway_restart(& tp->mii);
  #line 6190 
  cif_mutex_unlock_control_of_r8152(& tp->control);
  #line 6192 
  usb_autopm_put_interface(tp->intf);
  #line 6194 
  out: 
       #line 6194 
  ;
  #line 6195 
  return ret;
}

#line 6198  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static int rtl8152_nway_reset(struct net_device *dev)
{
  #line 6201 
  int ret;
  #line 6200 
  struct r8152 *tp = netdev_priv(dev);
  #line 6203 
  ret = usb_autopm_get_interface(tp->intf);
  #line 6204 
  if (ret < 0) 
               #line 6205 
               goto out;
  #line 6207 
  cif_mutex_lock_control_of_r8152(& tp->control);
  #line 6209 
  ret = mii_nway_restart(& tp->mii);
  #line 6211 
  cif_mutex_unlock_control_of_r8152(& tp->control);
  #line 6213 
  usb_autopm_put_interface(tp->intf);
  #line 6215 
  out: 
       #line 6215 
  ;
  #line 6216 
  return ret;
}

#line 6219  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static int rtl8152_get_coalesce(struct net_device *netdev, struct ethtool_coalesce *coalesce)
{
  #line 6222 
  struct r8152 *tp = netdev_priv(netdev);
  #line 6224 
  switch ((int)tp->version) {
    #line 6225 
    case 1: 
            #line 6225 
    ;
    #line 6226 
    case 2: 
            #line 6226 
    ;
    #line 6227 
    case 7: 
            #line 6227 
    ;
    #line 6228 
    return -95;
    #line 6229 
    default: 
             #line 6229 
    ;
    #line 6230 
    break;
  }
  #line 6233 
  coalesce->rx_coalesce_usecs = tp->coalesce;
  #line 6235 
  return 0;
}

#line 6238  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static int rtl8152_set_coalesce(struct net_device *netdev, struct ethtool_coalesce *coalesce)
{
  #line 6242 
  int ret;
  #line 6241 
  struct r8152 *tp = netdev_priv(netdev);
  #line 6244 
  switch ((int)tp->version) {
    #line 6245 
    case 1: 
            #line 6245 
    ;
    #line 6246 
    case 2: 
            #line 6246 
    ;
    #line 6247 
    case 7: 
            #line 6247 
    ;
    #line 6248 
    return -95;
    #line 6249 
    default: 
             #line 6249 
    ;
    #line 6250 
    break;
  }
  #line 6253 
  if (coalesce->rx_coalesce_usecs > 524280U) 
                                             #line 6254 
                                             return -22;
  #line 6256 
  ret = usb_autopm_get_interface(tp->intf);
  #line 6257 
  if (ret < 0) 
               #line 6258 
               return ret;
  #line 6260 
  cif_mutex_lock_control_of_r8152(& tp->control);
  #line 6262 
  if (tp->coalesce != coalesce->rx_coalesce_usecs) {
    #line 6263 
    tp->coalesce = coalesce->rx_coalesce_usecs;
    #line 6265 
    if ((int)netif_running(netdev) != 0) {
      #line 6265 
      if ((int)netif_carrier_ok(netdev) != 0) {
        #line 6266 
        netif_stop_queue(netdev);
        #line 6267 
        napi_disable(& tp->napi);
        #line 6268 
        (*(tp->rtl_ops.disable))(tp);
        #line 6269 
        (*(tp->rtl_ops.enable))(tp);
        #line 6270 
        rtl_start_rx(tp);
        #line 6271 
        cif_clear_bit(1L,& tp->flags);
        #line 6272 
        _rtl8152_set_rx_mode(netdev);
        #line 6273 
        napi_enable(& tp->napi);
        #line 6274 
        netif_wake_queue(netdev);
      }
    }
  }
  #line 6278 
  cif_mutex_unlock_control_of_r8152(& tp->control);
  #line 6280 
  usb_autopm_put_interface(tp->intf);
  #line 6282 
  return ret;
}

#line 6285  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static int rtl8152_get_tunable(struct net_device *netdev, struct ethtool_tunable *tunable, void *d)
{
  #line 6288 
  struct r8152 *tp = netdev_priv(netdev);
  #line 6290 
  switch (tunable->id) {
    #line 6291 
    case (__u32)1: 
                   #line 6291 
    ;
    #line 6292 
    *((u32 *)d) = tp->rx_copybreak;
    #line 6293 
    break;
    #line 6294 
    default: 
             #line 6294 
    ;
    #line 6295 
    return -95;
  }
  #line 6298 
  return 0;
}

#line 6301  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static int rtl8152_set_tunable(struct net_device *netdev, struct ethtool_tunable *tunable, void *d)
{
  #line 6306 
  u32 val;
  #line 6305 
  struct r8152 *tp = netdev_priv(netdev);
  #line 6308 
  switch (tunable->id) {
    #line 6309 
    case (__u32)1: 
                   #line 6309 
    ;
    #line 6310 
    val = *((u32 *)d);
    #line 6311 
    if (val <= 59U) {
      #line 6312 
      if ((tp->msg_enable & 64U) != 0U) 
                                        #line 6312 
                                        netdev_err(netdev,(char *)"Invalid rx copy break value\n");
      #line 6314 
      return -22;
    }
    #line 6317 
    if (tp->rx_copybreak != val) 
      #line 6318 
      if ((netdev->flags & 1U) != 0U) {
        #line 6319 
        cif_mutex_lock_control_of_r8152(& tp->control);
        #line 6320 
        napi_disable(& tp->napi);
        #line 6321 
        tp->rx_copybreak = val;
        #line 6322 
        napi_enable(& tp->napi);
        #line 6323 
        cif_mutex_unlock_control_of_r8152(& tp->control);
      }
      else 
           #line 6325 
           tp->rx_copybreak = val;
    #line 6328 
    break;
    #line 6329 
    default: 
             #line 6329 
    ;
    #line 6330 
    return -95;
  }
  #line 6333 
  return 0;
}

#line 6336  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static void rtl8152_get_ringparam(struct net_device *netdev, struct ethtool_ringparam *ring)
{
  #line 6339 
  struct r8152 *tp = netdev_priv(netdev);
  #line 6341 
  ring->rx_max_pending = 4096U;
  #line 6342 
  ring->rx_pending = tp->rx_pending;
  #line 6343 
  return;
}

#line 6345  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static int rtl8152_set_ringparam(struct net_device *netdev, struct ethtool_ringparam *ring)
{
  #line 6348 
  struct r8152 *tp = netdev_priv(netdev);
  #line 6350 
  if (ring->rx_pending <= 19U) 
                               #line 6351 
                               return -22;
  #line 6353 
  if (tp->rx_pending != ring->rx_pending) 
    #line 6354 
    if ((netdev->flags & 1U) != 0U) {
      #line 6355 
      cif_mutex_lock_control_of_r8152(& tp->control);
      #line 6356 
      napi_disable(& tp->napi);
      #line 6357 
      tp->rx_pending = ring->rx_pending;
      #line 6358 
      napi_enable(& tp->napi);
      #line 6359 
      cif_mutex_unlock_control_of_r8152(& tp->control);
    }
    else 
         #line 6361 
         tp->rx_pending = ring->rx_pending;
  #line 6365 
  return 0;
}

#line 6368  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static struct ethtool_ops ops = {.get_drvinfo = & rtl8152_get_drvinfo, .get_wol = & rtl8152_get_wol, .set_wol = & rtl8152_set_wol, .get_msglevel = & rtl8152_get_msglevel, .set_msglevel = & rtl8152_set_msglevel, .nway_reset = & rtl8152_nway_reset, .get_link = & ethtool_op_get_link, .get_coalesce = & rtl8152_get_coalesce, .set_coalesce = & rtl8152_set_coalesce, .get_ringparam = & rtl8152_get_ringparam, .set_ringparam = & rtl8152_set_ringparam, .get_strings = & rtl8152_get_strings, .get_ethtool_stats = & rtl8152_get_ethtool_stats, .get_sset_count = & rtl8152_get_sset_count, .get_eee = & rtl_ethtool_get_eee, .set_eee = & rtl_ethtool_set_eee, .get_tunable = & rtl8152_get_tunable, .set_tunable = & rtl8152_set_tunable, .get_link_ksettings = & rtl8152_get_link_ksettings, .set_link_ksettings = & rtl8152_set_link_ksettings};
#line 6391  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static int rtl8152_ioctl(struct net_device *netdev, struct ifreq *rq, int cmd)
{
  #line 6395 
  int res;
  #line 6393 
  struct r8152 *tp = netdev_priv(netdev);
  #line 6394 
  struct mii_ioctl_data *data = if_mii(rq);
  #line 6397 
  if ((int)test_bit(0L,& tp->flags) != 0) 
                                          #line 6398 
                                          return -19;
  #line 6400 
  res = usb_autopm_get_interface(tp->intf);
  #line 6401 
  if (res < 0) 
               #line 6402 
               goto out;
  #line 6404 
  switch (cmd) {
    #line 6405 
    case 35143: 
                #line 6405 
    ;
    #line 6406 
    data->phy_id = (unsigned short)32U;
    #line 6407 
    break;
    #line 6409 
    case 35144: 
                #line 6409 
    ;
    #line 6410 
    cif_mutex_lock_control_of_r8152(& tp->control);
    #line 6411 
    data->val_out = (unsigned short)r8152_mdio_read(tp,(unsigned int)data->reg_num);
    #line 6412 
    cif_mutex_unlock_control_of_r8152(& tp->control);
    #line 6413 
    break;
    #line 6415 
    case 35145: 
                #line 6415 
    ;
    #line 6416 
    if (! capable(12)) {
      #line 6417 
      res = -1;
      #line 6418 
      break;
    }
    #line 6420 
    cif_mutex_lock_control_of_r8152(& tp->control);
    #line 6421 
    r8152_mdio_write(tp,(unsigned int)data->reg_num,(unsigned int)data->val_in);
    #line 6422 
    cif_mutex_unlock_control_of_r8152(& tp->control);
    #line 6423 
    break;
    #line 6425 
    default: 
             #line 6425 
    ;
    #line 6426 
    res = -95;
  }
  #line 6429 
  usb_autopm_put_interface(tp->intf);
  #line 6431 
  out: 
       #line 6431 
  ;
  #line 6432 
  return res;
}

#line 6435  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static int rtl8152_change_mtu(struct net_device *dev, int new_mtu)
{
  #line 6438 
  int ret;
  #line 6437 
  struct r8152 *tp = netdev_priv(dev);
  #line 6440 
  switch ((int)tp->version) {
    #line 6441 
    case 1: 
            #line 6441 
    ;
    #line 6442 
    case 2: 
            #line 6442 
    ;
    #line 6443 
    case 7: 
            #line 6443 
    ;
    #line 6444 
    dev->mtu = (unsigned int)new_mtu;
    #line 6445 
    return 0;
    #line 6446 
    default: 
             #line 6446 
    ;
    #line 6447 
    break;
  }
  #line 6450 
  ret = usb_autopm_get_interface(tp->intf);
  #line 6451 
  if (ret < 0) 
               #line 6452 
               return ret;
  #line 6454 
  cif_mutex_lock_control_of_r8152(& tp->control);
  #line 6456 
  dev->mtu = (unsigned int)new_mtu;
  #line 6458 
  if ((int)netif_running(dev) != 0) {
    #line 6459 
    u32 rms = (unsigned int)(new_mtu + 22);
    #line 6461 
    ocp_write_word(tp,(unsigned short)256,(unsigned short)49174,rms);
    #line 6463 
    if ((int)netif_carrier_ok(dev) != 0) 
                                         #line 6464 
                                         r8153_set_rx_early_size(tp);
  }
  #line 6467 
  cif_mutex_unlock_control_of_r8152(& tp->control);
  #line 6469 
  usb_autopm_put_interface(tp->intf);
  #line 6471 
  return ret;
}

#line 6474  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static struct net_device_ops rtl8152_netdev_ops = {.ndo_open = & rtl8152_open, .ndo_stop = & rtl8152_close, .ndo_start_xmit = & rtl8152_start_xmit, .ndo_features_check = & rtl8152_features_check, .ndo_set_rx_mode = & rtl8152_set_rx_mode, .ndo_set_mac_address = & rtl8152_set_mac_address, .ndo_validate_addr = & eth_validate_addr, .ndo_do_ioctl = & rtl8152_ioctl, .ndo_change_mtu = & rtl8152_change_mtu, .ndo_tx_timeout = & rtl8152_tx_timeout, .ndo_set_features = & rtl8152_set_features};
#line 6488  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static void rtl8152_unload(struct r8152 *tp)
{
  #line 6490 
  if ((int)test_bit(0L,& tp->flags) != 0) 
                                          #line 6491 
                                          return;
  #line 6493 
  if ((unsigned int)tp->version != 1U) 
                                       #line 6494 
                                       r8152_power_cut_en(tp,(_Bool)1);
  #line 6495 
  return;
}

#line 6497  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static void rtl8153_unload(struct r8152 *tp)
{
  #line 6499 
  if ((int)test_bit(0L,& tp->flags) != 0) 
                                          #line 6500 
                                          return;
  #line 6502 
  r8153_power_cut_en(tp,(_Bool)0);
  #line 6503 
  return;
}

#line 6505  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static void rtl8153b_unload(struct r8152 *tp)
{
  #line 6507 
  if ((int)test_bit(0L,& tp->flags) != 0) 
                                          #line 6508 
                                          return;
  #line 6510 
  r8153b_power_cut_en(tp,(_Bool)0);
  #line 6511 
  return;
}

#line 6513  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static int rtl_ops_init(struct r8152 *tp)
{
  #line 6515 
  struct rtl_ops *ops_0 = & tp->rtl_ops;
  #line 6516 
  int ret = 0;
  #line 6518 
  switch ((int)tp->version) {
    #line 6519 
    case 1: 
            #line 6519 
    ;
    #line 6520 
    case 2: 
            #line 6520 
    ;
    #line 6521 
    case 7: 
            #line 6521 
    ;
    #line 6522 
    ops_0->init = & r8152b_init;
    #line 6523 
    ops_0->enable = & rtl8152_enable;
    #line 6524 
    ops_0->disable = & rtl8152_disable;
    #line 6525 
    ops_0->up = & rtl8152_up;
    #line 6526 
    ops_0->down = & rtl8152_down;
    #line 6527 
    ops_0->unload = & rtl8152_unload;
    #line 6528 
    ops_0->eee_get = & r8152_get_eee;
    #line 6529 
    ops_0->eee_set = & r8152_set_eee;
    #line 6530 
    ops_0->in_nway = & rtl8152_in_nway;
    #line 6531 
    ops_0->hw_phy_cfg = & r8152b_hw_phy_cfg;
    #line 6532 
    ops_0->autosuspend_en = & rtl_runtime_suspend_enable;
    #line 6533 
    tp->rx_buf_sz = 16384U;
    #line 6534 
    tp->eee_en = (_Bool)1;
    #line 6535 
    tp->eee_adv = (unsigned short)2U;
    #line 6536 
    break;
    #line 6538 
    case 3: 
            #line 6538 
    ;
    #line 6539 
    case 4: 
            #line 6539 
    ;
    #line 6540 
    case 5: 
            #line 6540 
    ;
    #line 6541 
    case 6: 
            #line 6541 
    ;
    #line 6542 
    ops_0->init = & r8153_init;
    #line 6543 
    ops_0->enable = & rtl8153_enable;
    #line 6544 
    ops_0->disable = & rtl8153_disable;
    #line 6545 
    ops_0->up = & rtl8153_up;
    #line 6546 
    ops_0->down = & rtl8153_down;
    #line 6547 
    ops_0->unload = & rtl8153_unload;
    #line 6548 
    ops_0->eee_get = & r8153_get_eee;
    #line 6549 
    ops_0->eee_set = & r8152_set_eee;
    #line 6550 
    ops_0->in_nway = & rtl8153_in_nway;
    #line 6551 
    ops_0->hw_phy_cfg = & r8153_hw_phy_cfg;
    #line 6552 
    ops_0->autosuspend_en = & rtl8153_runtime_enable;
    #line 6553 
    tp->rx_buf_sz = 32768U;
    #line 6554 
    tp->eee_en = (_Bool)1;
    #line 6555 
    tp->eee_adv = (unsigned short)6U;
    #line 6556 
    break;
    #line 6558 
    case 8: 
            #line 6558 
    ;
    #line 6559 
    case 9: 
            #line 6559 
    ;
    #line 6560 
    ops_0->init = & r8153b_init;
    #line 6561 
    ops_0->enable = & rtl8153_enable;
    #line 6562 
    ops_0->disable = & rtl8153_disable;
    #line 6563 
    ops_0->up = & rtl8153b_up;
    #line 6564 
    ops_0->down = & rtl8153b_down;
    #line 6565 
    ops_0->unload = & rtl8153b_unload;
    #line 6566 
    ops_0->eee_get = & r8153_get_eee;
    #line 6567 
    ops_0->eee_set = & r8152_set_eee;
    #line 6568 
    ops_0->in_nway = & rtl8153_in_nway;
    #line 6569 
    ops_0->hw_phy_cfg = & r8153b_hw_phy_cfg;
    #line 6570 
    ops_0->autosuspend_en = & rtl8153b_runtime_enable;
    #line 6571 
    tp->rx_buf_sz = 32768U;
    #line 6572 
    tp->eee_en = (_Bool)1;
    #line 6573 
    tp->eee_adv = (unsigned short)6U;
    #line 6574 
    break;
    #line 6576 
    default: 
             #line 6576 
    ;
    #line 6577 
    ret = -19;
    #line 6578 
    if ((tp->msg_enable & 2U) != 0U) 
                                     #line 6578 
                                     netdev_err(tp->netdev,(char *)"Unknown Device\n");
    #line 6579 
    break;
  }
  #line 6582 
  return ret;
}

#line 6595  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static int rtl_fw_init(struct r8152 *tp)
{
  #line 6597 
  struct rtl_fw *rtl_fw = & tp->rtl_fw;
  #line 6599 
  switch ((int)tp->version) {
    #line 6600 
    case 4: 
            #line 6600 
    ;
    #line 6601 
    rtl_fw->fw_name = (char *)"rtl_nic/rtl8153a-2.fw";
    #line 6602 
    rtl_fw->pre_fw = & r8153_pre_firmware_1;
    #line 6603 
    rtl_fw->post_fw = & r8153_post_firmware_1;
    #line 6604 
    break;
    #line 6605 
    case 5: 
            #line 6605 
    ;
    #line 6606 
    rtl_fw->fw_name = (char *)"rtl_nic/rtl8153a-3.fw";
    #line 6607 
    rtl_fw->pre_fw = & r8153_pre_firmware_2;
    #line 6608 
    rtl_fw->post_fw = & r8153_post_firmware_2;
    #line 6609 
    break;
    #line 6610 
    case 6: 
            #line 6610 
    ;
    #line 6611 
    rtl_fw->fw_name = (char *)"rtl_nic/rtl8153a-4.fw";
    #line 6612 
    rtl_fw->post_fw = & r8153_post_firmware_3;
    #line 6613 
    break;
    #line 6614 
    case 9: 
            #line 6614 
    ;
    #line 6615 
    rtl_fw->fw_name = (char *)"rtl_nic/rtl8153b-2.fw";
    #line 6616 
    rtl_fw->pre_fw = & r8153b_pre_firmware_1;
    #line 6617 
    rtl_fw->post_fw = & r8153b_post_firmware_1;
    #line 6618 
    break;
    #line 6619 
    default: 
             #line 6619 
    ;
    #line 6620 
    break;
  }
  #line 6623 
  return 0;
}

#line 6626  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static u8 rtl_get_version(struct usb_interface *intf)
{
  #line 6630 
  __le32 *tmp;
  #line 6631 
  u8 version;
  #line 6632 
  int ret;
  #line 6628 
  struct usb_device *udev = interface_to_usbdev(intf);
  #line 6629 
  u32 ocp_data = 0U;
  #line 6634 
  tmp = (__le32 *)kmalloc(4UL,3264U);
  #line 6635 
  if (tmp == (__le32 *)0U) 
                           #line 6636 
                           return (unsigned char)0U;
  #line 6638 
  ;
  #line 6638 
  ;
  #line 6638 
  ret = usb_control_msg(udev,__create_pipe(udev,0U) | 2147483776U,(unsigned char)5,(unsigned char)192,(unsigned short)58896,(unsigned short)256,(void *)tmp,(unsigned short)4,500);
  #line 6641 
  if (ret > 0) 
               #line 6642 
               ocp_data = (*tmp >> 16) & 31984U;
  #line 6644 
  kfree((void *)tmp);
  #line 6646 
  switch (ocp_data) {
    #line 6647 
    case (u32)19456: 
                     #line 6647 
    ;
    #line 6648 
    version = (unsigned char)1U;
    #line 6649 
    break;
    #line 6650 
    case (u32)19472: 
                     #line 6650 
    ;
    #line 6651 
    version = (unsigned char)2U;
    #line 6652 
    break;
    #line 6653 
    case (u32)23552: 
                     #line 6653 
    ;
    #line 6654 
    version = (unsigned char)3U;
    #line 6655 
    break;
    #line 6656 
    case (u32)23568: 
                     #line 6656 
    ;
    #line 6657 
    version = (unsigned char)4U;
    #line 6658 
    break;
    #line 6659 
    case (u32)23584: 
                     #line 6659 
    ;
    #line 6660 
    version = (unsigned char)5U;
    #line 6661 
    break;
    #line 6662 
    case (u32)23600: 
                     #line 6662 
    ;
    #line 6663 
    version = (unsigned char)6U;
    #line 6664 
    break;
    #line 6665 
    case (u32)18432: 
                     #line 6665 
    ;
    #line 6666 
    version = (unsigned char)7U;
    #line 6667 
    break;
    #line 6668 
    case (u32)24576: 
                     #line 6668 
    ;
    #line 6669 
    version = (unsigned char)8U;
    #line 6670 
    break;
    #line 6671 
    case (u32)24592: 
                     #line 6671 
    ;
    #line 6672 
    version = (unsigned char)9U;
    #line 6673 
    break;
    #line 6674 
    default: 
             #line 6674 
    ;
    #line 6675 
    version = (unsigned char)0U;
    #line 6676 
    _dev_info(& intf->dev,(char *)"Unknown version 0x%04x\n",ocp_data);
    #line 6677 
    break;
  }
  {
    #line 6680 
    bool branch;
    #line 6680 
    struct _ddebug __UNIQUE_ID_ddebug574 = {.modname = (char *)"r8152", .function = (char *)"rtl_get_version", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c", .format = (char *)"Detected version 0x%04x\n", .lineno = (unsigned int)6680U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
    #line 6680 
    branch = arch_static_branch(& __UNIQUE_ID_ddebug574.key.dd_key_false.key,(_Bool)0);
    #line 6680 
    if ((long)((long)((int)branch != 0)) != 0L) 
                                                #line 6680 
                                                __dynamic_dev_dbg(& __UNIQUE_ID_ddebug574,& intf->dev,(char *)"Detected version 0x%04x\n",(int)version);
  }
  #line 6682 
  return version;
}

#line 6685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static int rtl8152_probe(struct usb_interface *intf, struct usb_device_id *id)
{
  #line 6690 
  struct r8152 *tp;
  #line 6691 
  struct net_device *netdev;
  #line 6692 
  int ret;
  #line 6688 
  struct usb_device *udev = interface_to_usbdev(intf);
  #line 6689 
  u8 version = rtl_get_version(intf);
  #line 6694 
  if ((unsigned int)version == 0U) 
                                   #line 6695 
                                   return -19;
  #line 6697 
  if ((unsigned int)(udev->actconfig)->desc.bConfigurationValue != 1U) {
    #line 6698 
    usb_driver_set_configuration(udev,1);
    #line 6699 
    return -19;
  }
  #line 6702 
  if ((unsigned int)(intf->cur_altsetting)->desc.bNumEndpoints <= 2U) 
    #line 6703 
    return -19;
  #line 6705 
  cif_usb_reset_device(udev);
  #line 6706 
  netdev = cif_alloc_etherdev_mqs(1936,1U,1U);
  #line 6707 
  if (netdev == (struct net_device *)0) {
    #line 6708 
    _dev_err(& intf->dev,(char *)"Out of memory\n");
    #line 6709 
    return -12;
  }
  #line 6712 
  netdev->dev.parent = & intf->dev;
  #line 6713 
  tp = (struct r8152 *)netdev_priv(netdev);
  #line 6714 
  tp->msg_enable = 32767U;
  #line 6716 
  tp->udev = udev;
  #line 6717 
  tp->netdev = netdev;
  #line 6718 
  tp->intf = intf;
  #line 6719 
  tp->version = version;
  #line 6721 
  switch ((int)version) {
    #line 6722 
    case 1: 
            #line 6722 
    ;
    #line 6723 
    case 2: 
            #line 6723 
    ;
    #line 6724 
    case 7: 
            #line 6724 
    ;
    #line 6725 
    tp->mii.supports_gmii = (unsigned int)0U;
    #line 6726 
    break;
    #line 6727 
    default: 
             #line 6727 
    ;
    #line 6728 
    tp->mii.supports_gmii = (unsigned int)1U;
    #line 6729 
    break;
  }
  #line 6732 
  ret = rtl_ops_init(tp);
  #line 6733 
  if (ret != 0) 
                #line 6734 
                goto out;
  #line 6736 
  rtl_fw_init(tp);
  {
    #line 6738 
    struct lock_class_key __key;
    #line 6738 
    __mutex_init(& tp->control,(char *)"&tp->control",& __key);
  }
  {
    #line 6739 
    struct lock_class_key __key_0;
    #line 6739 
    __init_work(& tp->schedule.work,0);
    #line 6739 
    atomic_long_t __constr_expr_44 = {.counter = 137438953408LL};
    #line 6739 
    tp->schedule.work.data = __constr_expr_44;
    #line 6739 
    lockdep_init_map(& tp->schedule.work.lockdep_map,(char *)"(work_completion)",& __key_0,0);
    #line 6739 
    INIT_LIST_HEAD(& tp->schedule.work.entry);
    #line 6739 
    tp->schedule.work.func = & rtl_work_func_t;
  }
  {
    #line 6739 
    struct lock_class_key __key_1;
    #line 6739 
    init_timer_key(& tp->schedule.timer,& delayed_work_timer_fn,2097152U,(char *)"&(&tp->schedule)->timer",& __key_1);
  }
  {
    #line 6740 
    struct lock_class_key __key_2;
    #line 6740 
    __init_work(& tp->hw_phy_work.work,0);
    #line 6740 
    atomic_long_t __constr_expr_45 = {.counter = 137438953408LL};
    #line 6740 
    tp->hw_phy_work.work.data = __constr_expr_45;
    #line 6740 
    lockdep_init_map(& tp->hw_phy_work.work.lockdep_map,(char *)"(work_completion)",& __key_2,0);
    #line 6740 
    INIT_LIST_HEAD(& tp->hw_phy_work.work.entry);
    #line 6740 
    tp->hw_phy_work.work.func = & rtl_hw_phy_work_func_t;
  }
  {
    #line 6740 
    struct lock_class_key __key_3;
    #line 6740 
    init_timer_key(& tp->hw_phy_work.timer,& delayed_work_timer_fn,2097152U,(char *)"&(&tp->hw_phy_work)->timer",& __key_3);
  }
  #line 6741 
  cif_tasklet_init(& tp->tx_tl,& bottom_half,(unsigned long)tp);
  #line 6742 
  tasklet_disable(& tp->tx_tl);
  #line 6744 
  netdev->netdev_ops = & rtl8152_netdev_ops;
  #line 6745 
  netdev->watchdog_timeo = 1250;
  #line 6747 
  netdev->features |= 549756928467ULL;
  #line 6751 
  netdev->hw_features = 549756928467ULL;
  #line 6755 
  netdev->vlan_features = 1114227ULL;
  #line 6759 
  if ((unsigned int)tp->version == 1U) {
    #line 6760 
    netdev->features &= 18446743523953737727ULL;
    #line 6761 
    netdev->hw_features &= 18446743523953737727ULL;
  }
  #line 6764 
  if ((unsigned int)udev->descriptor.idVendor == 6127U && (unsigned int)udev->descriptor.idProduct == 12418U) 
    #line 6766 
    cif_set_bit(9L,& tp->flags);
  #line 6768 
  if ((unsigned int)udev->descriptor.bcdDevice == 12305U && udev->serial != (char *)0) {
    #line 6768 
    if (cif_strcmp(udev->serial,(char *)"000001000000") == 0) 
                                                              #line 6768 
                                                              goto _LOR;
    else {
      #line 6769 
      if (cif_strcmp(udev->serial,(char *)"000002000000") == 0) {
        #line 6768 
        _LOR: {
                #line 6771 
                _dev_info(& udev->dev,(char *)"Dell TB16 Dock, disable RX aggregation");
                #line 6772 
                cif_set_bit(8L,& tp->flags);
              }
      }
    }
  }
  #line 6775 
  netdev->ethtool_ops = & ops;
  #line 6776 
  netif_set_gso_max_size(netdev,agg_buf_sz + 4294967266U);
  #line 6779 
  netdev->min_mtu = 68U;
  #line 6780 
  switch ((int)tp->version) {
    #line 6781 
    case 1: 
            #line 6781 
    ;
    #line 6782 
    case 2: 
            #line 6782 
    ;
    #line 6783 
    netdev->max_mtu = 1500U;
    #line 6784 
    break;
    #line 6785 
    default: 
             #line 6785 
    ;
    #line 6786 
    netdev->max_mtu = 9194U;
    #line 6787 
    break;
  }
  #line 6790 
  tp->mii.dev = netdev;
  #line 6791 
  tp->mii.mdio_read = & read_mii_word;
  #line 6792 
  tp->mii.mdio_write = & write_mii_word;
  #line 6793 
  tp->mii.phy_id_mask = 63;
  #line 6794 
  tp->mii.reg_num_mask = 31;
  #line 6795 
  tp->mii.phy_id = 32;
  #line 6797 
  tp->autoneg = (unsigned char)1U;
  #line 6798 
  tp->speed = (unsigned short)100U;
  #line 6799 
  tp->advertising = 15U;
  #line 6801 
  if ((unsigned int)tp->mii.supports_gmii != 0U) {
    #line 6802 
    tp->speed = (unsigned short)1000U;
    #line 6803 
    tp->advertising |= 32U;
  }
  #line 6805 
  tp->duplex = (unsigned char)1U;
  #line 6807 
  tp->rx_copybreak = 256U;
  #line 6808 
  tp->rx_pending = 100U;
  #line 6810 
  intf->needs_remote_wakeup = (unsigned int)1U;
  #line 6812 
  if (rtl_can_wakeup(tp)) 
                          #line 6815 
                          tp->saved_wolopts = __rtl_get_wol(tp); else 
                                                                   #line 6813 
                                                                   __rtl_set_wol(tp,0U);
  #line 6817 
  (*(tp->rtl_ops.init))(tp);
  #line 6822 
  cif_queue_delayed_work(system_long_wq,& tp->hw_phy_work,0UL);
  #line 6823 
  set_ethernet_addr(tp);
  #line 6825 
  usb_set_intfdata(intf,(void *)tp);
  #line 6826 
  netif_napi_add(netdev,& tp->napi,& r8152_poll,64);
  #line 6828 
  ret = cif_register_netdev(netdev);
  #line 6829 
  if (ret != 0) {
    #line 6830 
    if ((tp->msg_enable & 2U) != 0U) 
                                     #line 6830 
                                     netdev_err(netdev,(char *)"couldn\'t register the device\n");
    #line 6831 
    goto out1;
  }
  #line 6834 
  if (tp->saved_wolopts != 0U) 
                               #line 6835 
                               device_set_wakeup_enable(& udev->dev,(_Bool)1); else 
                                                                    #line 6837 
                                                                    device_set_wakeup_enable(& udev->dev,(_Bool)0);
  #line 6839 
  if ((tp->msg_enable & 2U) != 0U) 
                                   #line 6839 
                                   netdev_info(netdev,(char *)"%s\n",(char *)"v1.");
  #line 6841 
  return 0;
  #line 6843 
  out1: 
        #line 6843 
  ;
  #line 6844 
  tasklet_kill(& tp->tx_tl);
  #line 6845 
  usb_set_intfdata(intf,(void *)0);
  #line 6846 
  out: 
       #line 6846 
  ;
  #line 6847 
  cif_free_netdev(netdev);
  #line 6848 
  return ret;
}

#line 6851  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static void rtl8152_disconnect(struct usb_interface *intf)
{
  #line 6853 
  struct r8152 *tp = usb_get_intfdata(intf);
  #line 6855 
  usb_set_intfdata(intf,(void *)0);
  #line 6856 
  if (tp != (struct r8152 *)0) {
    #line 6857 
    rtl_set_unplug(tp);
    #line 6859 
    cif_unregister_netdev(tp->netdev);
    #line 6860 
    tasklet_kill(& tp->tx_tl);
    #line 6861 
    cancel_delayed_work_sync(& tp->hw_phy_work);
    #line 6862 
    (*(tp->rtl_ops.unload))(tp);
    #line 6863 
    rtl8152_release_firmware(tp);
    #line 6864 
    cif_free_netdev(tp->netdev);
  }
  #line 6866 
  return;
}

#line 6885  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static struct usb_device_id rtl8152_table[35U] = {{.match_flags = (unsigned short)131U, .idVendor = (unsigned short)3034U, .idProduct = (unsigned short)32848U, .bInterfaceClass = (unsigned char)255U}, {.match_flags = (unsigned short)899U, .idVendor = (unsigned short)3034U, .idProduct = (unsigned short)32848U, .bInterfaceClass = (unsigned char)2U, .bInterfaceSubClass = (unsigned char)6U}, {.match_flags = (unsigned short)131U, .idVendor = (unsigned short)3034U, .idProduct = (unsigned short)33106U, .bInterfaceClass = (unsigned char)255U}, {.match_flags = (unsigned short)899U, .idVendor = (unsigned short)3034U, .idProduct = (unsigned short)33106U, .bInterfaceClass = (unsigned char)2U, .bInterfaceSubClass = (unsigned char)6U}, {.match_flags = (unsigned short)131U, .idVendor = (unsigned short)3034U, .idProduct = (unsigned short)33107U, .bInterfaceClass = (unsigned char)255U}, {.match_flags = (unsigned short)899U, .idVendor = (unsigned short)3034U, .idProduct = (unsigned short)33107U, .bInterfaceClass = (unsigned char)2U, .bInterfaceSubClass = (unsigned char)6U}, {.match_flags = (unsigned short)131U, .idVendor = (unsigned short)1118U, .idProduct = (unsigned short)1963U, .bInterfaceClass = (unsigned char)255U}, {.match_flags = (unsigned short)899U, .idVendor = (unsigned short)1118U, .idProduct = (unsigned short)1963U, .bInterfaceClass = (unsigned char)2U, .bInterfaceSubClass = (unsigned char)6U}, {.match_flags = (unsigned short)131U, .idVendor = (unsigned short)1118U, .idProduct = (unsigned short)1990U, .bInterfaceClass = (unsigned char)255U}, {.match_flags = (unsigned short)899U, .idVendor = (unsigned short)1118U, .idProduct = (unsigned short)1990U, .bInterfaceClass = (unsigned char)2U, .bInterfaceSubClass = (unsigned char)6U}, {.match_flags = (unsigned short)131U, .idVendor = (unsigned short)1256U, .idProduct = (unsigned short)41217U, .bInterfaceClass = (unsigned char)255U}, {.match_flags = (unsigned short)899U, .idVendor = (unsigned short)1256U, .idProduct = (unsigned short)41217U, .bInterfaceClass = (unsigned char)2U, .bInterfaceSubClass = (unsigned char)6U}, {.match_flags = (unsigned short)131U, .idVendor = (unsigned short)6127U, .idProduct = (unsigned short)12367U, .bInterfaceClass = (unsigned char)255U}, {.match_flags = (unsigned short)899U, .idVendor = (unsigned short)6127U, .idProduct = (unsigned short)12367U, .bInterfaceClass = (unsigned char)2U, .bInterfaceSubClass = (unsigned char)6U}, {.match_flags = (unsigned short)131U, .idVendor = (unsigned short)6127U, .idProduct = (unsigned short)12386U, .bInterfaceClass = (unsigned char)255U}, {.match_flags = (unsigned short)899U, .idVendor = (unsigned short)6127U, .idProduct = (unsigned short)12386U, .bInterfaceClass = (unsigned char)2U, .bInterfaceSubClass = (unsigned char)6U}, {.match_flags = (unsigned short)131U, .idVendor = (unsigned short)6127U, .idProduct = (unsigned short)12393U, .bInterfaceClass = (unsigned char)255U}, {.match_flags = (unsigned short)899U, .idVendor = (unsigned short)6127U, .idProduct = (unsigned short)12393U, .bInterfaceClass = (unsigned char)2U, .bInterfaceSubClass = (unsigned char)6U}, {.match_flags = (unsigned short)131U, .idVendor = (unsigned short)6127U, .idProduct = (unsigned short)12418U, .bInterfaceClass = (unsigned char)255U}, {.match_flags = (unsigned short)899U, .idVendor = (unsigned short)6127U, .idProduct = (unsigned short)12418U, .bInterfaceClass = (unsigned char)2U, .bInterfaceSubClass = (unsigned char)6U}, {.match_flags = (unsigned short)131U, .idVendor = (unsigned short)6127U, .idProduct = (unsigned short)29189U, .bInterfaceClass = (unsigned char)255U}, {.match_flags = (unsigned short)899U, .idVendor = (unsigned short)6127U, .idProduct = (unsigned short)29189U, .bInterfaceClass = (unsigned char)2U, .bInterfaceSubClass = (unsigned char)6U}, {.match_flags = (unsigned short)131U, .idVendor = (unsigned short)6127U, .idProduct = (unsigned short)29196U, .bInterfaceClass = (unsigned char)255U}, {.match_flags = (unsigned short)899U, .idVendor = (unsigned short)6127U, .idProduct = (unsigned short)29196U, .bInterfaceClass = (unsigned char)2U, .bInterfaceSubClass = (unsigned char)6U}, {.match_flags = (unsigned short)131U, .idVendor = (unsigned short)6127U, .idProduct = (unsigned short)29204U, .bInterfaceClass = (unsigned char)255U}, {.match_flags = (unsigned short)899U, .idVendor = (unsigned short)6127U, .idProduct = (unsigned short)29204U, .bInterfaceClass = (unsigned char)2U, .bInterfaceSubClass = (unsigned char)6U}, {.match_flags = (unsigned short)131U, .idVendor = (unsigned short)6127U, .idProduct = (unsigned short)41863U, .bInterfaceClass = (unsigned char)255U}, {.match_flags = (unsigned short)899U, .idVendor = (unsigned short)6127U, .idProduct = (unsigned short)41863U, .bInterfaceClass = (unsigned char)2U, .bInterfaceSubClass = (unsigned char)6U}, {.match_flags = (unsigned short)131U, .idVendor = (unsigned short)5041U, .idProduct = (unsigned short)65U, .bInterfaceClass = (unsigned char)255U}, {.match_flags = (unsigned short)899U, .idVendor = (unsigned short)5041U, .idProduct = (unsigned short)65U, .bInterfaceClass = (unsigned char)2U, .bInterfaceSubClass = (unsigned char)6U}, {.match_flags = (unsigned short)131U, .idVendor = (unsigned short)2389U, .idProduct = (unsigned short)2559U, .bInterfaceClass = (unsigned char)255U}, {.match_flags = (unsigned short)899U, .idVendor = (unsigned short)2389U, .idProduct = (unsigned short)2559U, .bInterfaceClass = (unsigned char)2U, .bInterfaceSubClass = (unsigned char)6U}, {.match_flags = (unsigned short)131U, .idVendor = (unsigned short)9047U, .idProduct = (unsigned short)1537U, .bInterfaceClass = (unsigned char)255U}, {.match_flags = (unsigned short)899U, .idVendor = (unsigned short)9047U, .idProduct = (unsigned short)1537U, .bInterfaceClass = (unsigned char)2U, .bInterfaceSubClass = (unsigned char)6U}};
#line 6906  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
struct usb_device_id __mod_usb__rtl8152_table_device_table[35U];
#line 6908  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static struct usb_driver rtl8152_driver = {.name = (char *)"r8152", .probe = & rtl8152_probe, .disconnect = & rtl8152_disconnect, .suspend = & rtl8152_suspend, .resume = & rtl8152_resume, .reset_resume = & rtl8152_reset_resume, .pre_reset = & rtl8152_pre_reset, .post_reset = & rtl8152_post_reset, .id_table = (struct usb_device_id *)(& rtl8152_table), .supports_autosuspend = (unsigned int)1U, .disable_hub_initiated_lpm = (unsigned int)1U};
#line 6922  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static int rtl8152_driver_init(void)
{
  #line 6922 
  return cif_usb_register_driver(& rtl8152_driver,& __this_module,
                              (char *)"r8152");
}

#line 6922  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/usb/r8152.c"
static void rtl8152_driver_exit(void)
{
  #line 6922 
  cif_usb_deregister(& rtl8152_driver);
  #line 6923 
  return;
}

#line 93  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
struct usb_driver *emg_alias_rtl8152_driver = & rtl8152_driver;
#line 94  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
struct usb_device_id (*emg_alias_rtl8152_table)[35U] = & rtl8152_table;
#line 97 
#line 97 
struct net_device *emg_alloc_etherdev_mqs(int arg0, unsigned int arg1, unsigned int arg2);
#line 98 
#line 98 
void emg_free_netdev(struct net_device *arg0);
#line 99 
#line 99 
_Bool emg_queue_delayed_work(struct workqueue_struct *arg0, struct delayed_work *arg1, unsigned long arg2);
#line 100 
#line 100 
int emg_register_netdev(struct net_device *arg0);
#line 101 
#line 101 
_Bool emg_schedule_delayed_work(struct delayed_work *arg0, unsigned long arg1);
#line 102 
#line 102 
void emg_tasklet_init(struct tasklet_struct *arg0, void (*arg1)(unsigned long ), unsigned long arg2);
#line 103 
#line 103 
void emg_tasklet_schedule(struct tasklet_struct *arg0);
#line 104 
#line 104 
void emg_unregister_netdev(struct net_device *arg0);
#line 105 
#line 105 
void emg_usb_deregister(struct usb_driver *arg0);
#line 106 
#line 106 
void emg_usb_kill_urb(struct urb *arg0);
#line 107 
#line 107 
int emg_usb_register_driver(struct usb_driver *arg0, struct module *arg1, char *arg2);
#line 108 
#line 108 
int emg_usb_reset_device(struct usb_device *arg0);
#line 109 
#line 109 
int emg_usb_submit_urb(struct urb *arg0, unsigned int arg1);
#line 113  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
int emg_wrapper_rtl8152_change_mtu(struct net_device *arg0, int arg1)
{
  #line 114 
  return rtl8152_change_mtu(arg0,arg1);
}

#line 118  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
int emg_wrapper_rtl8152_close(struct net_device *arg0)
{
  #line 119 
  return rtl8152_close(arg0);
}

#line 123  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
void emg_wrapper_rtl8152_disconnect(struct usb_interface *arg0)
{
  #line 124 
  rtl8152_disconnect(arg0);
  #line 125 
  return;
}

#line 128  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
unsigned long long emg_wrapper_rtl8152_features_check(struct sk_buff *arg0, struct net_device *arg1, unsigned long long arg2)
{
  #line 129 
  return rtl8152_features_check(arg0,arg1,arg2);
}

#line 133  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
int emg_wrapper_rtl8152_get_coalesce(struct net_device *arg0, struct ethtool_coalesce *arg1)
{
  #line 134 
  return rtl8152_get_coalesce(arg0,arg1);
}

#line 138  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
void emg_wrapper_rtl8152_get_drvinfo(struct net_device *arg0, struct ethtool_drvinfo *arg1)
{
  #line 139 
  rtl8152_get_drvinfo(arg0,arg1);
  #line 140 
  return;
}

#line 143  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
void emg_wrapper_rtl8152_get_ethtool_stats(struct net_device *arg0, struct ethtool_stats *arg1, unsigned long long *arg2)
{
  #line 144 
  rtl8152_get_ethtool_stats(arg0,arg1,arg2);
  #line 145 
  return;
}

#line 148  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
int emg_wrapper_rtl8152_get_link_ksettings(struct net_device *arg0, struct ethtool_link_ksettings *arg1)
{
  #line 149 
  return rtl8152_get_link_ksettings(arg0,arg1);
}

#line 153  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
unsigned int emg_wrapper_rtl8152_get_msglevel(struct net_device *arg0)
{
  #line 154 
  return rtl8152_get_msglevel(arg0);
}

#line 158  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
void emg_wrapper_rtl8152_get_ringparam(struct net_device *arg0, struct ethtool_ringparam *arg1)
{
  #line 159 
  rtl8152_get_ringparam(arg0,arg1);
  #line 160 
  return;
}

#line 163  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
int emg_wrapper_rtl8152_get_sset_count(struct net_device *arg0, int arg1)
{
  #line 164 
  return rtl8152_get_sset_count(arg0,arg1);
}

#line 168  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
void emg_wrapper_rtl8152_get_strings(struct net_device *arg0, unsigned int arg1, unsigned char *arg2)
{
  #line 169 
  rtl8152_get_strings(arg0,arg1,arg2);
  #line 170 
  return;
}

#line 173  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
int emg_wrapper_rtl8152_get_tunable(struct net_device *arg0, struct ethtool_tunable *arg1, void *arg2)
{
  #line 174 
  return rtl8152_get_tunable(arg0,arg1,arg2);
}

#line 178  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
void emg_wrapper_rtl8152_get_wol(struct net_device *arg0, struct ethtool_wolinfo *arg1)
{
  #line 179 
  rtl8152_get_wol(arg0,arg1);
  #line 180 
  return;
}

#line 183  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
int emg_wrapper_rtl8152_ioctl(struct net_device *arg0, struct ifreq *arg1, int arg2)
{
  #line 184 
  return rtl8152_ioctl(arg0,arg1,arg2);
}

#line 188  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
int emg_wrapper_rtl8152_nway_reset(struct net_device *arg0)
{
  #line 189 
  return rtl8152_nway_reset(arg0);
}

#line 193  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
int emg_wrapper_rtl8152_open(struct net_device *arg0)
{
  #line 194 
  return rtl8152_open(arg0);
}

#line 198  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
int emg_wrapper_rtl8152_post_reset(struct usb_interface *arg0)
{
  #line 199 
  return rtl8152_post_reset(arg0);
}

#line 203  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
int emg_wrapper_rtl8152_pre_reset(struct usb_interface *arg0)
{
  #line 204 
  return rtl8152_pre_reset(arg0);
}

#line 208  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
int emg_wrapper_rtl8152_probe(struct usb_interface *arg0, struct usb_device_id *arg1)
{
  #line 209 
  return rtl8152_probe(arg0,arg1);
}

#line 213  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
int emg_wrapper_rtl8152_reset_resume(struct usb_interface *arg0)
{
  #line 214 
  return rtl8152_reset_resume(arg0);
}

#line 218  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
int emg_wrapper_rtl8152_resume(struct usb_interface *arg0)
{
  #line 219 
  return rtl8152_resume(arg0);
}

#line 223  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
int emg_wrapper_rtl8152_set_coalesce(struct net_device *arg0, struct ethtool_coalesce *arg1)
{
  #line 224 
  return rtl8152_set_coalesce(arg0,arg1);
}

#line 228  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
int emg_wrapper_rtl8152_set_features(struct net_device *arg0, unsigned long long arg1)
{
  #line 229 
  return rtl8152_set_features(arg0,arg1);
}

#line 233  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
int emg_wrapper_rtl8152_set_link_ksettings(struct net_device *arg0, struct ethtool_link_ksettings *arg1)
{
  #line 234 
  return rtl8152_set_link_ksettings(arg0,arg1);
}

#line 238  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
int emg_wrapper_rtl8152_set_mac_address(struct net_device *arg0, void *arg1)
{
  #line 239 
  return rtl8152_set_mac_address(arg0,arg1);
}

#line 243  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
void emg_wrapper_rtl8152_set_msglevel(struct net_device *arg0, unsigned int arg1)
{
  #line 244 
  rtl8152_set_msglevel(arg0,arg1);
  #line 245 
  return;
}

#line 248  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
int emg_wrapper_rtl8152_set_ringparam(struct net_device *arg0, struct ethtool_ringparam *arg1)
{
  #line 249 
  return rtl8152_set_ringparam(arg0,arg1);
}

#line 253  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
void emg_wrapper_rtl8152_set_rx_mode(struct net_device *arg0)
{
  #line 254 
  rtl8152_set_rx_mode(arg0);
  #line 255 
  return;
}

#line 258  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
int emg_wrapper_rtl8152_set_tunable(struct net_device *arg0, struct ethtool_tunable *arg1, void *arg2)
{
  #line 259 
  return rtl8152_set_tunable(arg0,arg1,arg2);
}

#line 263  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
int emg_wrapper_rtl8152_set_wol(struct net_device *arg0, struct ethtool_wolinfo *arg1)
{
  #line 264 
  return rtl8152_set_wol(arg0,arg1);
}

#line 268  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
enum netdev_tx emg_wrapper_rtl8152_start_xmit(struct sk_buff *arg0, struct net_device *arg1)
{
  #line 269 
  return rtl8152_start_xmit(arg0,arg1);
}

#line 273  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
int emg_wrapper_rtl8152_suspend(struct usb_interface *arg0, struct pm_message arg1)
{
  #line 274 
  return rtl8152_suspend(arg0,arg1);
}

#line 278  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
void emg_wrapper_rtl8152_tx_timeout(struct net_device *arg0)
{
  #line 279 
  rtl8152_tx_timeout(arg0);
  #line 280 
  return;
}

#line 283  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
int emg_wrapper_rtl_ethtool_get_eee(struct net_device *arg0, struct ethtool_eee *arg1)
{
  #line 284 
  return rtl_ethtool_get_eee(arg0,arg1);
}

#line 288  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
int emg_wrapper_rtl_ethtool_set_eee(struct net_device *arg0, struct ethtool_eee *arg1)
{
  #line 289 
  return rtl_ethtool_set_eee(arg0,arg1);
}

#line 293  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
void emg_rtl8152_driver_exit(void)
{
  #line 294 
  rtl8152_driver_exit();
  #line 295 
  return;
}

#line 297  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
int emg_rtl8152_driver_init(void)
{
  #line 298 
  return rtl8152_driver_init();
}

#line 316  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
static void cif_set_bit(long nr, unsigned long *addr)
{
  #line 319 
  ldv_set_bit(nr,addr);
  #line 320 
  return;
}

#line 323  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
static void cif_clear_bit(long nr, unsigned long *addr)
{
  #line 326 
  ldv_clear_bit(nr,addr);
  #line 327 
  return;
}

#line 330  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
static void INIT_LIST_HEAD(struct list_head *list)
{
  #line 333 
  ldv_init_list_head(list);
  #line 334 
  return;
}

#line 337  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
static int cif_strncmp(char *cs, char *ct, __kernel_size_t count)
{
  #line 340 
  return ldv_strncmp(cs,ct,count);
}

#line 379  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
static void atomic_inc(atomic_t *v)
{
  #line 382 
  ldv_atomic_inc(v);
  #line 383 
  return;
}

#line 386  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
static void atomic_dec(atomic_t *v)
{
  #line 389 
  ldv_atomic_dec(v);
  #line 390 
  return;
}

#line 400  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
static void *ERR_PTR(long error)
{
  #line 403 
  return ldv_err_ptr(error);
}

#line 407  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
static long PTR_ERR(void *ptr)
{
  #line 410 
  return ldv_ptr_err(ptr);
}

#line 414  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
static bool IS_ERR(void *ptr)
{
  #line 417 
  return ldv_is_err(ptr);
}

#line 421  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
static bool IS_ERR_OR_NULL(void *ptr)
{
  #line 424 
  return ldv_is_err_or_null(ptr);
}

#line 500  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
static bool cif_queue_delayed_work(struct workqueue_struct *wq, struct delayed_work *dwork, unsigned long delay)
{
  #line 504 
  return emg_queue_delayed_work(wq,dwork,delay);
}

#line 526  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
static void *kmalloc(size_t size, gfp_t flags)
{
  #line 529 
  return ldv_kmalloc(size,flags);
}

#line 742  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
static void cif_spin_lock__xmit_lock_of_netdev_queue(spinlock_t *lock)
{
  #line 745 
  ldv_spin_model_lock((char *)"_xmit_lock_of_netdev_queue");
  #line 747 
  spin_lock(lock);
  #line 748 
  return;
}

#line 782  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
static void cif_spin_unlock__xmit_lock_of_netdev_queue(spinlock_t *lock)
{
  #line 785 
  ldv_spin_model_unlock((char *)"_xmit_lock_of_netdev_queue");
  #line 787 
  spin_unlock(lock);
  #line 788 
  return;
}

#line 800  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
static void cif_spin_lock_tx_global_lock_of_net_device(spinlock_t *lock)
{
  #line 803 
  ldv_spin_model_lock((char *)"tx_global_lock_of_net_device");
  #line 805 
  spin_lock(lock);
  #line 806 
  return;
}

#line 809  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
static void cif_spin_unlock_tx_global_lock_of_net_device(spinlock_t *lock)
{
  #line 812 
  ldv_spin_model_unlock((char *)"tx_global_lock_of_net_device");
  #line 814 
  spin_unlock(lock);
  #line 815 
  return;
}

#line 881  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
static void *cif_kmemdup(void *src, size_t len, gfp_t gfp)
{
  #line 884 
  return ldv_kmemdup(src,len,gfp);
}

#line 995  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
static int cif_strcmp(char *cs, char *ct)
{
  #line 998 
  return ldv_strcmp(cs,ct);
}

#line 1002  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
static void cif_mutex_lock_control_of_r8152(struct mutex *lock)
{
  #line 1005 
  ldv_mutex_model_lock(lock,(char *)"control_of_r8152");
  #line 1006 
  return;
}

#line 1009  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
static void cif_mutex_unlock_control_of_r8152(struct mutex *lock)
{
  #line 1012 
  ldv_mutex_model_unlock(lock,(char *)"control_of_r8152");
  #line 1013 
  return;
}

#line 1016  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
static void cif___ldv_spin_lock_rx_lock_of_r8152(spinlock_t *lock)
{
  #line 1019 
  ldv_spin_model_lock((char *)"rx_lock_of_r8152");
  #line 1021 
  __ldv_spin_lock(lock);
  #line 1022 
  return;
}

#line 1025  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
static void cif_spin_unlock_irqrestore_rx_lock_of_r8152(spinlock_t *lock, unsigned long flags)
{
  #line 1028 
  ldv_spin_model_unlock((char *)"rx_lock_of_r8152");
  #line 1030 
  spin_unlock_irqrestore(lock,flags);
  #line 1031 
  return;
}

#line 1034  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
static void cif___ldv_spin_lock_tx_lock_of_r8152(spinlock_t *lock)
{
  #line 1037 
  ldv_spin_model_lock((char *)"tx_lock_of_r8152");
  #line 1039 
  __ldv_spin_lock(lock);
  #line 1040 
  return;
}

#line 1043  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
static void cif_spin_unlock_irqrestore_tx_lock_of_r8152(spinlock_t *lock, unsigned long flags)
{
  #line 1046 
  ldv_spin_model_unlock((char *)"tx_lock_of_r8152");
  #line 1048 
  spin_unlock_irqrestore(lock,flags);
  #line 1049 
  return;
}

#line 1052  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
static void cif_tasklet_schedule(struct tasklet_struct *t)
{
  #line 1056 
  emg_tasklet_schedule(t);
  #line 1057 
  return;
}

#line 1060  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
static bool cif_schedule_delayed_work(struct delayed_work *dwork, unsigned long delay)
{
  #line 1064 
  return emg_schedule_delayed_work(dwork,delay);
}

#line 1068  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
static int cif_usb_submit_urb(struct urb *urb, gfp_t mem_flags)
{
  #line 1072 
  return emg_usb_submit_urb(urb,mem_flags);
}

#line 1076  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
static void cif_spin_lock_lock_of_sk_buff_head(spinlock_t *lock)
{
  #line 1079 
  ldv_spin_model_lock((char *)"lock_of_sk_buff_head");
  #line 1081 
  spin_lock(lock);
  #line 1082 
  return;
}

#line 1085  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
static void cif_spin_unlock_lock_of_sk_buff_head(spinlock_t *lock)
{
  #line 1088 
  ldv_spin_model_unlock((char *)"lock_of_sk_buff_head");
  #line 1090 
  spin_unlock(lock);
  #line 1091 
  return;
}

#line 1094  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
static void cif_spin_lock_bh_lock_of_sk_buff_head(spinlock_t *lock)
{
  #line 1097 
  ldv_spin_model_lock((char *)"lock_of_sk_buff_head");
  #line 1099 
  spin_lock_bh(lock);
  #line 1100 
  return;
}

#line 1103  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
static void cif_spin_unlock_bh_lock_of_sk_buff_head(spinlock_t *lock)
{
  #line 1106 
  ldv_spin_model_unlock((char *)"lock_of_sk_buff_head");
  #line 1108 
  spin_unlock_bh(lock);
  #line 1109 
  return;
}

#line 1112  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
static void cif_usb_kill_urb(struct urb *urb)
{
  #line 1116 
  emg_usb_kill_urb(urb);
  #line 1117 
  return;
}

#line 1120  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
static void cif_release_firmware(struct firmware *fw)
{
  #line 1123 
  ldv_release_firmware(fw);
  #line 1124 
  return;
}

#line 1127  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
static int cif_request_firmware(struct firmware **fw, char *name, struct device *device)
{
  #line 1130 
  return ldv_request_firmware(fw);
}

#line 1134  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
static int cif_mutex_trylock_control_of_r8152(struct mutex *lock)
{
  #line 1137 
  int is_mutex_held_by_another_thread = ldv_undef_int();
  #line 1139 
  if (is_mutex_held_by_another_thread != 0) 
                                            #line 1142 
                                            return 0;
  else {
    #line 1146 
    ldv_mutex_model_lock(lock,(char *)"control_of_r8152");
    #line 1148 
    return 1;
  }
}

#line 1153  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
static int cif_usb_reset_device(struct usb_device *dev)
{
  #line 1157 
  return emg_usb_reset_device(dev);
}

#line 1161  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
static struct net_device *cif_alloc_etherdev_mqs(int sizeof_priv, unsigned int txqs, unsigned int rxqs)
{
  #line 1165 
  return emg_alloc_etherdev_mqs(sizeof_priv,txqs,rxqs);
}

#line 1169  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
static void cif_tasklet_init(struct tasklet_struct *t, void (*func)(unsigned long ), unsigned long data)
{
  #line 1173 
  emg_tasklet_init(t,func,data);
  #line 1174 
  return;
}

#line 1177  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
static int cif_register_netdev(struct net_device *dev)
{
  #line 1181 
  return emg_register_netdev(dev);
}

#line 1185  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
static void cif_free_netdev(struct net_device *dev)
{
  #line 1189 
  emg_free_netdev(dev);
  #line 1190 
  return;
}

#line 1193  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
static void cif_unregister_netdev(struct net_device *dev)
{
  #line 1197 
  emg_unregister_netdev(dev);
  #line 1198 
  return;
}

#line 1201  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
static int cif_usb_register_driver(struct usb_driver *ldv_func_arg1, struct module *ldv_func_arg2, char *ldv_func_arg3)
{
  #line 1205 
  return emg_usb_register_driver(ldv_func_arg1,ldv_func_arg2,ldv_func_arg3);
}

#line 1209  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/0/concurrency safety/weaver/r8152.i.aux"
static void cif_usb_deregister(struct usb_driver *ldv_func_arg1)
{
  #line 1213 
  emg_usb_deregister(ldv_func_arg1);
  #line 1214 
  return;
}

#line 20  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/common/inline_asm.c"
void ldv_inline_asm(void)
{
  #line 24 
  return;
}

#line 20  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
void ldv_atomic_add(int i, atomic_t *v)
{
  #line 22 
  v->counter += i;
  #line 23 
  return;
}

#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
void ldv_atomic_sub(int i, atomic_t *v)
{
  #line 27 
  v->counter -= i;
  #line 28 
  return;
}

#line 30  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
int ldv_atomic_sub_and_test(int i, atomic_t *v)
{
  #line 32 
  v->counter -= i;
  #line 33 
  if (v->counter != 0) 
                       #line 34 
                       return 0;
  #line 36 
  return 1;
}

#line 39  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
void ldv_atomic_inc(atomic_t *v)
{
  #line 41 
  (v->counter) ++;
  #line 42 
  return;
}

#line 44  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
void ldv_atomic_dec(atomic_t *v)
{
  #line 46 
  (v->counter) --;
  #line 47 
  return;
}

#line 49  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
int ldv_atomic_dec_and_test(atomic_t *v)
{
  #line 51 
  (v->counter) --;
  #line 52 
  if (v->counter != 0) 
                       #line 53 
                       return 0;
  #line 55 
  return 1;
}

#line 58  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
int ldv_atomic_inc_and_test(atomic_t *v)
{
  #line 60 
  (v->counter) ++;
  #line 61 
  if (v->counter != 0) 
                       #line 62 
                       return 0;
  #line 64 
  return 1;
}

#line 67  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
int ldv_atomic_add_return(int i, atomic_t *v)
{
  #line 69 
  v->counter += i;
  #line 70 
  return v->counter;
}

#line 73  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
int ldv_atomic_add_negative(int i, atomic_t *v)
{
  #line 75 
  v->counter += i;
  #line 76 
  return v->counter < 0;
}

#line 79  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
int ldv_atomic_inc_short(short *v)
{
  #line 81 
  *v = (short)((unsigned int)*v + 1U);
  #line 82 
  return (int)*v;
}

#line 20  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/current.c"
static struct task_struct ldv_current;
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/current.c"
struct task_struct *ldv_get_current(void)
{
  #line 28 
  ldv_current.pid = 1;
  #line 29 
  return & ldv_current;
}

#line 32  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 28  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
void ldv_switch_to_interrupt_context(void);
#line 42  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 34  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
void ldv_switch_to_process_context(void);
#line 50  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 40  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
bool ldv_in_interrupt_context(void);
#line 112  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 55  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
int ldv_post_init(int init_ret_val);
#line 132  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 61  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
int ldv_post_probe(int probe_ret_val);
#line 133  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 133 
void ldv_check_return_value_probe(int);
#line 141 
#line 68  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
int ldv_filter_err_code(int ret_val);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/common.h"
#line 23 
void __VERIFIER_assume(int);
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
static bool __ldv_in_interrupt_context = (_Bool)0;
#line 28  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
void ldv_switch_to_interrupt_context(void)
{
  #line 31 
  __ldv_in_interrupt_context = (_Bool)1;
  #line 32 
  return;
}

#line 34  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
void ldv_switch_to_process_context(void)
{
  #line 37 
  __ldv_in_interrupt_context = (_Bool)0;
  #line 38 
  return;
}

#line 40  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
bool ldv_in_interrupt_context(void)
{
  #line 42 
  return __ldv_in_interrupt_context;
}

#line 45  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
static int ldv_filter_positive_int(int val)
{
  #line 47 
  __VERIFIER_assume(val <= 0);
  #line 48 
  return val;
}

#line 55  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
int ldv_post_init(int init_ret_val)
{
  #line 57 
  return ldv_filter_positive_int(init_ret_val);
}

#line 61  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
int ldv_post_probe(int probe_ret_val)
{
  #line 63 
  ldv_check_return_value_probe(probe_ret_val);
  #line 64 
  return ldv_filter_positive_int(probe_ret_val);
}

#line 68  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
int ldv_filter_err_code(int ret_val)
{
  #line 70 
  return ldv_filter_positive_int(ret_val);
}

#line 28  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/common/list.h"
#line 28 
void ldv_save_allocated_memory_to_list(void *);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/device.h"
#line 29  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
void *ldv_dev_get_drvdata(struct device *dev);
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/device.h"
#line 43  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
int ldv_dev_set_drvdata(struct device *dev, void *data);
#line 57  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 57 
void *ldv_xzalloc(size_t size);
#line 29  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
void *ldv_dev_get_drvdata(struct device *dev)
{
  #line 31 
  if (dev != (struct device *)0 && dev->p != (struct device_private *)0) 
    #line 32 
    return (dev->p)->driver_data;
  #line 34 
  return (void *)0;
}

#line 43  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
int ldv_dev_set_drvdata(struct device *dev, void *data)
{
  #line 45 
  dev->p = (struct device_private *)ldv_xzalloc(8UL);
  #line 46 
  ldv_save_allocated_memory_to_list((void *)dev->p);
  #line 47 
  (dev->p)->driver_data = data;
  #line 49 
  return 0;
}

#line 156  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 156 
void ldv_check_alloc_flags(gfp_t);
#line 48  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 48 
void *ldv_malloc(size_t size);
#line 49 
#line 49 
void *ldv_calloc(size_t nmemb, size_t size);
#line 50 
#line 50 
void *ldv_zalloc(size_t size);
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/devres.c"
void *ldv_devm_kmalloc(size_t size, gfp_t flags)
{
  #line 26 
  void *res;
  #line 28 
  ldv_check_alloc_flags(flags);
  #line 29 
  res = ldv_malloc(size);
  #line 30 
  ldv_save_allocated_memory_to_list(res);
  #line 32 
  return res;
}

#line 35  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/devres.c"
void *ldv_devm_kzalloc(size_t size, gfp_t flags)
{
  #line 37 
  void *res;
  #line 39 
  ldv_check_alloc_flags(flags);
  #line 40 
  res = ldv_zalloc(size);
  #line 41 
  ldv_save_allocated_memory_to_list(res);
  #line 43 
  return res;
}

#line 46  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/devres.c"
void *ldv_devm_kmalloc_array(size_t n, size_t size, gfp_t flags)
{
  #line 48 
  void *res;
  #line 50 
  ldv_check_alloc_flags(flags);
  #line 51 
  res = ldv_malloc(n * size);
  #line 52 
  ldv_save_allocated_memory_to_list(res);
  #line 54 
  return res;
}

#line 57  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/devres.c"
void *ldv_devm_kcalloc(size_t n, size_t size, gfp_t flags)
{
  #line 59 
  void *res;
  #line 61 
  ldv_check_alloc_flags(flags);
  #line 62 
  res = ldv_calloc(n,size);
  #line 63 
  ldv_save_allocated_memory_to_list(res);
  #line 65 
  return res;
}

#line 51  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 51 
void ldv_free(void *s);
#line 59 
#line 59 
void *ldv_malloc_unknown_size(void);
#line 31  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 31 
int ldv_undef_int_positive(void);
#line 40 
#line 40 
int ldv_undef_int_nonpositive(void);
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/firmware_loader.c"
int ldv_request_firmware(struct firmware **fw)
{
  #line 27 
  int retval;
  #line 26 
  struct firmware *_fw = (struct firmware *)0;
  #line 29 
  retval = ldv_undef_int_nonpositive();
  #line 31 
  if (retval == 0) {
    #line 33 
    _fw = (struct firmware *)ldv_xzalloc(32UL);
    #line 34 
    _fw->data = (u8 *)ldv_malloc_unknown_size();
    #line 35 
    __VERIFIER_assume(_fw->data != (u8 *)0U);
    #line 36 
    _fw->size = (unsigned long)ldv_undef_int_positive();
  }
  #line 39 
  *fw = _fw;
  #line 41 
  return retval;
}

#line 44  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/firmware_loader.c"
void ldv_release_firmware(struct firmware *fw)
{
  #line 46 
  if (fw != (struct firmware *)0) {
    #line 48 
    ldv_free((void *)fw->data);
    #line 49 
    ldv_free((void *)fw);
  }
  #line 51 
  return;
}

#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/i2c.h"
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/i2c/i2c-core-smbus.c"
s32 ldv_i2c_smbus_read_block_data(u8 *values);
#line 55  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 55 
void *ldv_xmalloc(size_t size);
#line 34  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 34 
int ldv_undef_int_negative(void);
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/i2c/i2c-core-smbus.c"
s32 ldv_i2c_smbus_read_block_data(u8 *values)
{
  #line 27 
  __u8 size;
  #line 28 
  char *bytes;
  #line 30 
  if (ldv_undef_int() != 0) {
    #line 33 
    size = (unsigned char)ldv_undef_int_positive();
    #line 35 
    __VERIFIER_assume((unsigned int)size <= 32U);
    #line 37 
    bytes = (char *)ldv_xmalloc((unsigned long)size);
    #line 39 
    memcpy((void *)values,(void *)bytes,(unsigned long)size);
    #line 40 
    ldv_free((void *)bytes);
    #line 42 
    return (int)size;
  }
  else {
    #line 46 
    return ldv_undef_int_negative();
  }
}

#line 988  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
__inline static void v4l2_set_subdevdata(struct v4l2_subdev *sd, void *p)
{
  #line 990 
  sd->dev_priv = p;
  #line 991 
  return;
}

#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/media/v4l2-common.h"
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/media/v4l2-core/v4l2-i2c.c"
void ldv_v4l2_i2c_subdev_init(struct v4l2_subdev *sd, struct i2c_client *client, struct v4l2_subdev_ops *ops_0);
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/media/v4l2-core/v4l2-i2c.c"
void ldv_v4l2_i2c_subdev_init(struct v4l2_subdev *sd, struct i2c_client *client, struct v4l2_subdev_ops *ops_0)
{
  #line 26 
  sd->ops = ops_0;
  #line 27 
  v4l2_set_subdevdata(sd,(void *)client);
  #line 28 
  ldv_dev_set_drvdata(& client->dev,(void *)sd);
  #line 29 
  return;
}

#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/spi.c"
struct spi_controller *ldv_spi_alloc_master(struct device *host, unsigned int size)
{
  #line 25 
  struct spi_controller *master;
  #line 27 
  master = (struct spi_controller *)ldv_zalloc((unsigned long)size + 2936UL);
  #line 29 
  if (master == (struct spi_controller *)0) 
                                            #line 30 
                                            return (struct spi_controller *)0;
  #line 32 
  ldv_dev_set_drvdata(& master->dev,(void *)(master + 1U));
  #line 34 
  return master;
}

#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/fb.h"
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/video/fbdev/core/fbsysfs.c"
struct fb_info *ldv_framebuffer_alloc(size_t size);
#line 26  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/fb.h"
#line 38  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/video/fbdev/core/fbsysfs.c"
void ldv_framebuffer_release(struct fb_info *info);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/video/fbdev/core/fbsysfs.c"
struct fb_info *ldv_framebuffer_alloc(size_t size)
{
  #line 25 
  struct fb_info *info;
  #line 27 
  info = (struct fb_info *)ldv_zalloc(size + 1568UL);
  #line 29 
  if (info == (struct fb_info *)0) 
                                   #line 30 
                                   return (struct fb_info *)0;
  #line 32 
  if (size != 0UL) 
                   #line 33 
                   info->par = (void *)((char *)info + 1568UL);
  #line 35 
  return info;
}

#line 38  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/video/fbdev/core/fbsysfs.c"
void ldv_framebuffer_release(struct fb_info *info)
{
  #line 40 
  if (info == (struct fb_info *)0) 
                                   #line 41 
                                   return;
  #line 44 
  ldv_free((void *)info->apertures);
  #line 46 
  ldv_free((void *)info);
  #line 47 
  return;
}

#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/err.c"
bool ldv_is_err(void *ptr)
{
  #line 29 
  if ((unsigned long)ptr > 18446744073709547520UL) 
                                                   #line 30 
                                                   return (_Bool)1; else 
                                                                    #line 32 
                                                                    return (_Bool)0;
}

#line 35  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/err.c"
void *ldv_err_ptr(long error)
{
  #line 37 
  unsigned long result;
  #line 39 
  __VERIFIER_assume(error < 0L);
  #line 40 
  __VERIFIER_assume(error >= -4095L);
  #line 41 
  result = 18446744073709547520UL - (unsigned long)error;
  #line 42 
  __VERIFIER_assume(result > 18446744073709547520UL);
  #line 44 
  return (void *)result;
}

#line 47  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_ptr_err(void *ptr)
{
  #line 49 
  long result;
  #line 51 
  __VERIFIER_assume((unsigned long)ptr > 18446744073709547520UL);
  #line 52 
  result = (long)(18446744073709547520UL - (unsigned long)ptr);
  #line 53 
  __VERIFIER_assume(result < 0L);
  #line 54 
  __VERIFIER_assume(result >= -4095L);
  #line 56 
  return result;
}

#line 59  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/err.c"
bool ldv_is_err_or_null(void *ptr)
{
  #line 61 
  int tmp_0;
  #line 61 
  if (ptr == (void *)0) 
                        #line 61 
                        tmp_0 = 1;
  else {
    #line 61 
    if ((int)ldv_is_err(ptr) != 0) 
                                   #line 61 
                                   tmp_0 = 1; else 
                                                   #line 61 
                                                   tmp_0 = 0;
  }
  #line 61 
  return (_Bool)(tmp_0 != 0);
}

#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/panic.h"
#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/kernel/panic.c"
void ldv_panic(void);
#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/kernel/panic.c"
void ldv_panic(void)
{
  #line 23 
  __VERIFIER_assume(0);
  #line 24 
  return;
}

#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/bitmap.h"
#line 32  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_bitmap_set(unsigned long *map, unsigned int start, int nbits);
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/bitmap.h"
#line 52  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_bitmap_clear(unsigned long *map, unsigned int start, int nbits);
#line 27  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/bitmap.h"
#line 72  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_bitmap_zero(unsigned long *dst, unsigned int nbits);
#line 29  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/bitmap.h"
#line 78  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
unsigned long ldv_bitmap_find_next_zero_area(unsigned long *map, unsigned long size, unsigned long start, unsigned int nr, unsigned long align_mask);
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/find_bit.h"
#line 22 
unsigned long ldv_find_next_bit(unsigned long *addr, unsigned long size, unsigned long offset);
#line 23 
#line 23 
unsigned long ldv_find_next_zero_bit(unsigned long *addr, unsigned long size, unsigned long offset);
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_set_bit(long nr, unsigned long *addr)
{
  #line 24 
  *(addr + (unsigned long)nr / 64UL) |= 1UL << ((unsigned long)nr & 63UL);
  #line 25 
  return;
}

#line 27  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_clear_bit(long nr, unsigned long *addr)
{
  #line 29 
  *(addr + (unsigned long)nr / 64UL) &= ~ (1UL << ((unsigned long)nr & 63UL));
  #line 30 
  return;
}

#line 32  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_bitmap_set(unsigned long *map, unsigned int start, int nbits)
{
  #line 34 
  unsigned long *p = map + (unsigned long)(start / 64U);
  #line 35 
  unsigned int size = start + (unsigned int)nbits;
  #line 36 
  int bits_to_set = (int)(64U - (start & 63U));
  #line 37 
  unsigned long mask_to_set = 18446744073709551615UL << ((unsigned long)start & 63UL);
  #line 39 
  while (nbits - bits_to_set >= 0) {
    #line 40 
    *p |= mask_to_set;
    #line 41 
    nbits -= bits_to_set;
    #line 42 
    bits_to_set = 64;
    #line 43 
    mask_to_set = 18446744073709551615UL;
    #line 44 
    p ++;
  }
  #line 46 
  if (nbits != 0) {
    #line 47 
    mask_to_set = (18446744073709551615UL >> ((unsigned long)(- size) & 63UL)) & mask_to_set;
    #line 48 
    *p |= mask_to_set;
  }
  #line 50 
  return;
}

#line 52  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_bitmap_clear(unsigned long *map, unsigned int start, int nbits)
{
  #line 54 
  unsigned long *p = map + (unsigned long)(start / 64U);
  #line 55 
  unsigned int size = start + (unsigned int)nbits;
  #line 56 
  int bits_to_clear = (int)(64U - (start & 63U));
  #line 57 
  unsigned long mask_to_clear = 18446744073709551615UL << ((unsigned long)start & 63UL);
  #line 59 
  while (nbits - bits_to_clear >= 0) {
    #line 60 
    *p &= ~ mask_to_clear;
    #line 61 
    nbits -= bits_to_clear;
    #line 62 
    bits_to_clear = 64;
    #line 63 
    mask_to_clear = 18446744073709551615UL;
    #line 64 
    p ++;
  }
  #line 66 
  if (nbits != 0) {
    #line 67 
    mask_to_clear = (18446744073709551615UL >> ((unsigned long)(- size) & 63UL)) & mask_to_clear;
    #line 68 
    *p &= ~ mask_to_clear;
  }
  #line 70 
  return;
}

#line 72  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_bitmap_zero(unsigned long *dst, unsigned int nbits)
{
  #line 74 
  unsigned int len = (unsigned int)(((unsigned long)nbits + 63UL) / 64UL) * 8U;
  #line 75 
  memset((void *)dst,0,(unsigned long)len);
  #line 76 
  return;
}

#line 78  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
unsigned long ldv_bitmap_find_next_zero_area(unsigned long *map, unsigned long size, unsigned long start, unsigned int nr, unsigned long align_mask)
{
  #line 80 
  unsigned long index;
  #line 80 
  unsigned long end;
  #line 80 
  unsigned long i;
  #line 82 
  again: 
         #line 82 
  ;
  #line 83 
  index = ldv_find_next_zero_bit(map,size,start);
  #line 84 
  index = (index + align_mask) & ~ align_mask;
  #line 85 
  end = (unsigned long)nr + index;
  #line 87 
  if (end > size) 
                  #line 88 
                  return end;
  #line 90 
  i = ldv_find_next_bit(map,end,index);
  #line 92 
  if (i < end) {
    #line 93 
    start = i + 1UL;
    #line 94 
    goto again;
  }
  #line 97 
  return index;
}

#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/find_bit.h"
#line 68  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/find_bit.common.c"
unsigned long ldv_find_first_bit(unsigned long *addr, unsigned long size);
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/find_bit.h"
#line 25 
void ldv_check_find_bit_offset(unsigned long, unsigned long);
#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/find_bit.common.c"
static unsigned long ldv_ffs(unsigned long word)
{
  #line 23 
  int num = 0;
  #line 25 
  if ((word & 4294967295UL) == 0UL) {
    #line 26 
    num += 32;
    #line 27 
    word >>= 32;
  }
  #line 29 
  if ((word & 65535UL) == 0UL) {
    #line 30 
    num += 16;
    #line 31 
    word >>= 16;
  }
  #line 33 
  if ((word & 255UL) == 0UL) {
    #line 34 
    num += 8;
    #line 35 
    word >>= 8;
  }
  #line 37 
  if ((word & 15UL) == 0UL) {
    #line 38 
    num += 4;
    #line 39 
    word >>= 4;
  }
  #line 41 
  if ((word & 3UL) == 0UL) {
    #line 42 
    num += 2;
    #line 43 
    word >>= 2;
  }
  #line 45 
  if ((word & 1UL) == 0UL) 
                           #line 46 
                           num ++;
  #line 48 
  return (unsigned long)num;
}

#line 51  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/find_bit.common.c"
static unsigned long ldv_min(unsigned long a, unsigned long b)
{
  #line 53 
  if (a < b) 
             #line 54 
             return a;
  #line 56 
  return b;
}

#line 59  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/find_bit.common.c"
static unsigned long ldv_restrict_find_bit_res(unsigned long res, unsigned long size)
{
  #line 62 
  __VERIFIER_assume(1);
  #line 63 
  __VERIFIER_assume(res <= size);
  #line 65 
  return res;
}

#line 68  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/find_bit.common.c"
unsigned long ldv_find_first_bit(unsigned long *addr, unsigned long size)
{
  #line 70 
  unsigned long i;
  #line 72 
  i = 0UL;
  #line 72 
  while (i * 64UL < size) {
    #line 73 
    if (*(addr + i) != 0UL) {
      #line 74 
      ;
      #line 74 
      ;
      #line 74 
      ;
      #line 74 
      return ldv_restrict_find_bit_res(ldv_min(i * 64UL + ldv_ffs(*(addr + i)),size),
                                  size);
    }
    #line 72 
    i ++;
  }
  #line 76 
  return size;
}

#line 79  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/find_bit.common.c"
unsigned long ldv_find_next_bit(unsigned long *addr, unsigned long size, unsigned long offset)
{
  #line 81 
  unsigned long tmp;
  #line 83 
  ldv_check_find_bit_offset(size,offset);
  #line 85 
  tmp = *(addr + offset / 64UL);
  #line 86 
  tmp = (unsigned long)((18446744073709551615ULL << (offset & 63UL)) & (unsigned long long)tmp);
  #line 87 
  offset &= 18446744073709551552UL;
  #line 89 
  while (tmp == 0UL) {
    #line 90 
    offset += 64UL;
    #line 91 
    if (offset >= size) 
                        #line 92 
                        return size;
    #line 94 
    tmp = *(addr + offset / 64UL);
  }
  #line 97 
  ;
  #line 97 
  ;
  #line 97 
  ;
  #line 97 
  return ldv_restrict_find_bit_res(ldv_min(ldv_ffs(tmp) + offset,size),size);
}

#line 100  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/find_bit.common.c"
unsigned long ldv_find_next_zero_bit(unsigned long *addr, unsigned long size, unsigned long offset)
{
  #line 102 
  unsigned long tmp;
  #line 104 
  ldv_check_find_bit_offset(size,offset);
  #line 106 
  tmp = *(addr + offset / 64UL);
  #line 107 
  tmp = ~ tmp;
  #line 108 
  tmp = (unsigned long)((18446744073709551615ULL << (offset & 63UL)) & (unsigned long long)tmp);
  #line 109 
  offset &= 18446744073709551552UL;
  #line 111 
  while (tmp == 0UL) {
    #line 112 
    offset += 64UL;
    #line 113 
    if (offset >= size) 
                        #line 114 
                        return size;
    #line 116 
    tmp = *(addr + offset / 64UL);
    #line 117 
    tmp = ~ tmp;
  }
  #line 120 
  ;
  #line 120 
  ;
  #line 120 
  ;
  #line 120 
  return ldv_restrict_find_bit_res(ldv_min(ldv_ffs(tmp) + offset,size),size);
}

#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/string.h"
#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
size_t ldv_strlen(char *s);
#line 28  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/string.h"
#line 70  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
char *ldv_strstr(char *cs, char *ct);
#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
size_t ldv_strlen(char *s)
{
  #line 23 
  unsigned int len = 0U;
  #line 25 
  while ((int)*s != 0) {
    #line 26 
    len ++;
    #line 25 
    s ++;
  }
  #line 28 
  return (unsigned long)len;
}

#line 31  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
int ldv_strcmp(char *cs, char *ct)
{
  #line 33 
  while ((int)*cs != 0 && (int)*ct != 0) {
    #line 34 
    if ((int)*cs != (int)*ct) 
                              #line 35 
                              break;
    #line 33 
    cs ++;
    #line 33 
    ct ++;
  }
  #line 37 
  return (int)*cs - (int)*ct;
}

#line 40  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
int ldv_strncmp(char *cs, char *ct, __kernel_size_t count)
{
  #line 42 
  if (count == 0UL) 
                    #line 43 
                    return 0;
  #line 45 
  while ((int)*cs != 0 && (int)*ct != 0) {
    #line 46 
    if ((int)*cs != (int)*ct) 
                              #line 47 
                              break;
    #line 49 
    count --;
    #line 51 
    if (count == 0UL) 
                      #line 52 
                      break;
    #line 45 
    cs ++;
    #line 45 
    ct ++;
  }
  #line 55 
  return (int)*cs - (int)*ct;
}

#line 58  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
int ldv_memcmp(void *cs, void *ct, size_t count)
{
  #line 60 
  unsigned char *su1;
  #line 60 
  unsigned char *su2;
  #line 61 
  int res = 0;
  #line 63 
  su1 = (unsigned char *)cs;
  #line 63 
  su2 = (unsigned char *)ct;
  #line 63 
  while (count != 0UL) {
    #line 64 
    res = (int)*su1 - (int)*su2;
    #line 64 
    if (res != 0) 
                  #line 65 
                  break;
    #line 63 
    su1 ++;
    #line 63 
    su2 ++;
    #line 63 
    count --;
  }
  #line 67 
  return res;
}

#line 70  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
char *ldv_strstr(char *cs, char *ct)
{
  #line 72 
  size_t cs_len;
  #line 72 
  size_t ct_len;
  #line 74 
  cs_len = ldv_strlen(cs);
  #line 75 
  ct_len = ldv_strlen(ct);
  #line 77 
  while (cs_len >= ct_len) {
    #line 78 
    if (ldv_memcmp((void *)cs,(void *)ct,ct_len) == 0) 
                                                       #line 79 
                                                       return cs;
    #line 81 
    cs_len --;
    #line 82 
    cs ++;
  }
  #line 85 
  return (char *)0;
}

#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/list.c"
void ldv_init_list_head(struct list_head *list)
{
  #line 23 
  list->next = list;
  #line 24 
  list->prev = list;
  #line 25 
  return;
}

#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 33  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kzalloc(size_t size, gfp_t flags);
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 53  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags);
#line 26  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 43  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags);
#line 30  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 69  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
struct kmem_cache *ldv_kmem_cache_create(char *name, unsigned int size);
#line 31  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 85  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmem_cache_alloc(struct kmem_cache *cachep, gfp_t flags);
#line 32  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 90  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmem_cache_zalloc(struct kmem_cache *cachep, gfp_t flags);
#line 33  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 95  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void ldv_kmem_cache_free(struct kmem_cache *cachep, void *objp);
#line 34  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 100  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void ldv_kmem_cache_destroy(struct kmem_cache *cachep);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc(size_t size, gfp_t flags)
{
  #line 25 
  void *res;
  #line 27 
  ldv_check_alloc_flags(flags);
  #line 28 
  res = ldv_malloc(size);
  #line 30 
  return res;
}

#line 33  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kzalloc(size_t size, gfp_t flags)
{
  #line 35 
  void *res;
  #line 37 
  ldv_check_alloc_flags(flags);
  #line 38 
  res = ldv_zalloc(size);
  #line 40 
  return res;
}

#line 43  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags)
{
  #line 45 
  void *res;
  #line 47 
  ldv_check_alloc_flags(flags);
  #line 48 
  res = ldv_malloc(n * size);
  #line 50 
  return res;
}

#line 53  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags)
{
  #line 55 
  void *res;
  #line 57 
  ldv_check_alloc_flags(flags);
  #line 58 
  res = ldv_calloc(n,size);
  #line 60 
  return res;
}

#line 69  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
struct kmem_cache *ldv_kmem_cache_create(char *name, unsigned int size)
{
  #line 71 
  struct kmem_cache *res;
  #line 72 
  struct ldv_kmem_cache *ldv_res;
  #line 74 
  res = (struct kmem_cache *)ldv_zalloc(16UL);
  #line 76 
  if (res != (struct kmem_cache *)0) {
    #line 77 
    ldv_res = (struct ldv_kmem_cache *)res;
    #line 78 
    ldv_res->name = name;
    #line 79 
    ldv_res->size = size;
  }
  #line 82 
  return res;
}

#line 85  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmem_cache_alloc(struct kmem_cache *cachep, gfp_t flags)
{
  #line 87 
  return ldv_kmalloc((unsigned long)((struct ldv_kmem_cache *)cachep)->size,
                  flags);
}

#line 90  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmem_cache_zalloc(struct kmem_cache *cachep, gfp_t flags)
{
  #line 92 
  return ldv_kzalloc((unsigned long)((struct ldv_kmem_cache *)cachep)->size,
                  flags);
}

#line 95  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void ldv_kmem_cache_free(struct kmem_cache *cachep, void *objp)
{
  #line 97 
  ldv_free(objp);
  #line 98 
  return;
}

#line 100  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void ldv_kmem_cache_destroy(struct kmem_cache *cachep)
{
  #line 102 
  ldv_free((void *)cachep);
  #line 103 
  return;
}

#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/util.c"
void *ldv_kmemdup(void *src, size_t len, gfp_t gfp)
{
  #line 25 
  void *res;
  #line 27 
  ldv_check_alloc_flags(gfp);
  #line 28 
  res = ldv_malloc(len);
  #line 30 
  if (res != (void *)0) 
                        #line 31 
                        memcpy(res,src,len);
  #line 33 
  return res;
}

#line 162  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 162 
void ldv_check_alloc_nonatomic(void);
#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/vmalloc.h"
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/vmalloc.c"
void *ldv_vmalloc(unsigned long size);
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/vmalloc.h"
#line 33  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/vmalloc.c"
void *ldv_vzalloc(unsigned long size);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/vmalloc.h"
#line 43  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/vmalloc.c"
void ldv_vfree(void *addr);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/vmalloc.c"
void *ldv_vmalloc(unsigned long size)
{
  #line 25 
  void *res;
  #line 27 
  ldv_check_alloc_nonatomic();
  #line 28 
  res = ldv_malloc(size);
  #line 30 
  return res;
}

#line 33  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/vmalloc.c"
void *ldv_vzalloc(unsigned long size)
{
  #line 35 
  void *res;
  #line 37 
  ldv_check_alloc_nonatomic();
  #line 38 
  res = ldv_zalloc(size);
  #line 40 
  return res;
}

#line 43  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/vmalloc.c"
void ldv_vfree(void *addr)
{
  #line 45 
  ldv_free(addr);
  #line 46 
  return;
}

#line 28  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 28 
void *malloc(size_t);
#line 29 
#line 29 
void *calloc(size_t, size_t);
#line 30 
#line 30 
void free(void *);
#line 45 
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
unsigned int ldv_is_memory_alloc_failures;
#line 56  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 63  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xcalloc(size_t nmemb, size_t size);
#line 60  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 88  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc_unknown_size(void);
#line 61  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 97  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc_unknown_size(void);
#line 64  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc(size_t size);
#line 65  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 37  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc(size_t nmemb, size_t size);
#line 66  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 42  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc(size_t size);
#line 67  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 47  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void ldv_reference_free(void *s);
#line 69  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 52  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_realloc(void *ptr, size_t size);
#line 71  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 80  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc(size_t size);
#line 72  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 90  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xcalloc(size_t nmemb, size_t size);
#line 73  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 100  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xzalloc(size_t size);
#line 75  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 110  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc_unknown_size(void);
#line 76  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 124  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc_unknown_size(void);
#line 77  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 139  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc_unknown_size(void);
#line 83  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 106  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc_unknown_size(size_t size);
#line 85  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 144  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size);
#line 87  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 87 
void *external_allocated_data(void);
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
unsigned int ldv_is_memory_alloc_failures = 1U;
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc(size_t size)
{
  #line 26 
  void *res;
  #line 28 
  if (ldv_is_memory_alloc_failures != 0U) {
    #line 28 
    if (ldv_undef_int() != 0) 
                              #line 29 
                              return (void *)0;
  }
  #line 32 
  res = malloc(size);
  #line 33 
  __VERIFIER_assume(res != (void *)0);
  #line 34 
  return res;
}

#line 37  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc(size_t nmemb, size_t size)
{
  #line 39 
  return calloc(nmemb,size);
}

#line 42  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc(size_t size)
{
  #line 44 
  return calloc(1UL,size);
}

#line 47  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void ldv_reference_free(void *s)
{
  #line 49 
  free(s);
  #line 50 
  return;
}

#line 52  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_realloc(void *ptr, size_t size)
{
  #line 54 
  void *res;
  #line 56 
  if (ptr != (void *)0 && size == 0UL) {
    #line 57 
    free(ptr);
    #line 58 
    return (void *)0;
  }
  #line 61 
  if (ptr == (void *)0) {
    #line 62 
    res = malloc(size);
    #line 63 
    return res;
  }
  #line 66 
  if (ldv_undef_int() != 0) {
    #line 68 
    res = malloc(size);
    #line 69 
    __VERIFIER_assume(res != (void *)0);
    #line 71 
    memcpy(res,ptr,size);
    #line 72 
    free(ptr);
    #line 74 
    return res;
  }
  else 
       #line 77 
       return (void *)0;
}

#line 80  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc(size_t size)
{
  #line 82 
  void *res;
  #line 84 
  res = malloc(size);
  #line 85 
  __VERIFIER_assume(res != (void *)0);
  #line 87 
  return res;
}

#line 90  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xcalloc(size_t nmemb, size_t size)
{
  #line 92 
  void *res;
  #line 94 
  res = calloc(nmemb,size);
  #line 95 
  __VERIFIER_assume(res != (void *)0);
  #line 97 
  return res;
}

#line 100  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xzalloc(size_t size)
{
  #line 102 
  void *res;
  #line 104 
  res = calloc(1UL,size);
  #line 105 
  __VERIFIER_assume(res != (void *)0);
  #line 107 
  return res;
}

#line 110  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc_unknown_size(void)
{
  #line 112 
  void *res;
  #line 114 
  if (ldv_undef_int() != 0) {
    #line 116 
    res = external_allocated_data();
    #line 117 
    __VERIFIER_assume(res != (void *)0);
    #line 118 
    return res;
  }
  else 
       #line 121 
       return (void *)0;
}

#line 124  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc_unknown_size(void)
{
  #line 126 
  void *res;
  #line 128 
  if (ldv_undef_int() != 0) {
    #line 130 
    res = external_allocated_data();
    #line 131 
    memset(res,0,8UL);
    #line 132 
    __VERIFIER_assume(res != (void *)0);
    #line 133 
    return res;
  }
  else 
       #line 136 
       return (void *)0;
}

#line 139  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc_unknown_size(void)
{
  #line 141 
  return ldv_reference_calloc_unknown_size();
}

#line 144  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size)
{
  #line 146 
  void *res;
  #line 149 
  res = external_allocated_data();
  #line 150 
  __VERIFIER_assume(res != (void *)0);
  #line 152 
  return res;
}

#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc(size_t size)
{
  #line 25 
  void *res;
  #line 26 
  res = ldv_reference_malloc(size);
  #line 27 
  if (res != (void *)0) {
    #line 28 
    int tmp_0;
    #line 28 
    if (ldv_is_err(res)) 
                         #line 28 
                         tmp_0 = 0; else 
                                         #line 28 
                                         tmp_0 = 1;
    #line 28 
    __VERIFIER_assume(tmp_0);
  }
  #line 29 
  return res;
}

#line 32  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc(size_t nmemb, size_t size)
{
  #line 34 
  void *res;
  #line 35 
  res = ldv_reference_calloc(nmemb,size);
  #line 36 
  if (res != (void *)0) {
    #line 37 
    int tmp_0;
    #line 37 
    if (ldv_is_err(res)) 
                         #line 37 
                         tmp_0 = 0; else 
                                         #line 37 
                                         tmp_0 = 1;
    #line 37 
    __VERIFIER_assume(tmp_0);
  }
  #line 38 
  return res;
}

#line 41  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc(size_t size)
{
  #line 43 
  void *res;
  #line 44 
  res = ldv_reference_zalloc(size);
  #line 45 
  if (res != (void *)0) {
    #line 46 
    int tmp_0;
    #line 46 
    if (ldv_is_err(res)) 
                         #line 46 
                         tmp_0 = 0; else 
                                         #line 46 
                                         tmp_0 = 1;
    #line 46 
    __VERIFIER_assume(tmp_0);
  }
  #line 47 
  return res;
}

#line 50  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void ldv_free(void *s)
{
  #line 52 
  ldv_reference_free(s);
  #line 53 
  return;
}

#line 55  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc(size_t size)
{
  #line 57 
  void *res;
  #line 59 
  int tmp_0;
  #line 58 
  res = ldv_reference_xmalloc(size);
  #line 59 
  if (ldv_is_err(res)) 
                       #line 59 
                       tmp_0 = 0; else 
                                       #line 59 
                                       tmp_0 = 1;
  #line 59 
  __VERIFIER_assume(tmp_0);
  #line 60 
  return res;
}

#line 63  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xcalloc(size_t nmemb, size_t size)
{
  #line 65 
  void *res;
  #line 67 
  int tmp_0;
  #line 66 
  res = ldv_reference_xcalloc(nmemb,size);
  #line 67 
  if (ldv_is_err(res)) 
                       #line 67 
                       tmp_0 = 0; else 
                                       #line 67 
                                       tmp_0 = 1;
  #line 67 
  __VERIFIER_assume(tmp_0);
  #line 68 
  return res;
}

#line 71  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xzalloc(size_t size)
{
  #line 73 
  void *res;
  #line 75 
  int tmp_0;
  #line 74 
  res = ldv_reference_xzalloc(size);
  #line 75 
  if (ldv_is_err(res)) 
                       #line 75 
                       tmp_0 = 0; else 
                                       #line 75 
                                       tmp_0 = 1;
  #line 75 
  __VERIFIER_assume(tmp_0);
  #line 76 
  return res;
}

#line 79  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc_unknown_size(void)
{
  #line 81 
  void *res;
  #line 82 
  res = ldv_reference_malloc_unknown_size();
  #line 83 
  if (res != (void *)0) {
    #line 84 
    int tmp_0;
    #line 84 
    if (ldv_is_err(res)) 
                         #line 84 
                         tmp_0 = 0; else 
                                         #line 84 
                                         tmp_0 = 1;
    #line 84 
    __VERIFIER_assume(tmp_0);
  }
  #line 85 
  return res;
}

#line 88  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc_unknown_size(void)
{
  #line 90 
  void *res;
  #line 91 
  res = ldv_reference_calloc_unknown_size();
  #line 92 
  if (res != (void *)0) {
    #line 93 
    int tmp_0;
    #line 93 
    if (ldv_is_err(res)) 
                         #line 93 
                         tmp_0 = 0; else 
                                         #line 93 
                                         tmp_0 = 1;
    #line 93 
    __VERIFIER_assume(tmp_0);
  }
  #line 94 
  return res;
}

#line 97  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc_unknown_size(void)
{
  #line 99 
  void *res;
  #line 100 
  res = ldv_reference_zalloc_unknown_size();
  #line 101 
  if (res != (void *)0) {
    #line 102 
    int tmp_0;
    #line 102 
    if (ldv_is_err(res)) 
                         #line 102 
                         tmp_0 = 0; else 
                                         #line 102 
                                         tmp_0 = 1;
    #line 102 
    __VERIFIER_assume(tmp_0);
  }
  #line 103 
  return res;
}

#line 106  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc_unknown_size(size_t size)
{
  #line 108 
  void *res;
  #line 110 
  int tmp_0;
  #line 109 
  res = ldv_reference_xmalloc_unknown_size(size);
  #line 110 
  if (ldv_is_err(res)) 
                       #line 110 
                       tmp_0 = 0; else 
                                       #line 110 
                                       tmp_0 = 1;
  #line 110 
  __VERIFIER_assume(tmp_0);
  #line 111 
  return res;
}

/* compiler builtin: 
   long __builtin_expect(long exp, long c);   */
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/common.h"
#line 22 
void __VERIFIER_error(void);
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/common.h"
long __builtin_expect(long exp, long c)
{
  #line 26 
  return exp;
}

#line 35  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/gcc.c"
void __builtin_trap(void)
{
  #line 37 
  __VERIFIER_error();
  #line 38 
  return;
}

#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 53  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
long ldv_undef_long(void);
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 61  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned int ldv_undef_uint(void);
#line 26  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 77  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long ldv_undef_ulong(void);
#line 27  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 85  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long long ldv_undef_ulonglong(void);
#line 28  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 69  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr(void);
#line 37  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 111  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_nonnegative(void);
#line 43  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 129  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr_non_null(void);
#line 54  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 139  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int __ldv_undef_int_range(int begin, int end);
#line 56  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 151  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int __ldv_undef_int_range2(int begin, int end);
#line 29 
#line 29 
int __VERIFIER_nondet_int(void);
#line 31 
#line 31 
long __VERIFIER_nondet_long(void);
#line 38 
#line 38 
unsigned int __VERIFIER_nondet_uint(void);
#line 41 
#line 41 
unsigned long __VERIFIER_nondet_ulong(void);
#line 42 
#line 42 
unsigned long long __VERIFIER_nondet_ulonglong(void);
#line 43 
#line 43 
void *__VERIFIER_nondet_pointer(void);
#line 45  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int(void)
{
  #line 48 
  int undef_int = __VERIFIER_nondet_int();
  #line 50 
  return undef_int;
}

#line 53  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
long ldv_undef_long(void)
{
  #line 56 
  long undef_long = __VERIFIER_nondet_long();
  #line 58 
  return undef_long;
}

#line 61  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned int ldv_undef_uint(void)
{
  #line 64 
  unsigned int undef_uint = __VERIFIER_nondet_uint();
  #line 66 
  return undef_uint;
}

#line 69  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr(void)
{
  #line 72 
  void *undef_ptr = __VERIFIER_nondet_pointer();
  #line 74 
  return undef_ptr;
}

#line 77  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long ldv_undef_ulong(void)
{
  #line 80 
  unsigned long undef_ulong = __VERIFIER_nondet_ulong();
  #line 82 
  return undef_ulong;
}

#line 85  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long long ldv_undef_ulonglong(void)
{
  #line 88 
  unsigned long long undef_ulonglong = __VERIFIER_nondet_ulonglong();
  #line 90 
  return undef_ulonglong;
}

#line 93  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_positive(void)
{
  #line 95 
  int ret = ldv_undef_int();
  #line 97 
  __VERIFIER_assume(ret > 0);
  #line 99 
  return ret;
}

#line 102  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_negative(void)
{
  #line 104 
  int ret = ldv_undef_int();
  #line 106 
  __VERIFIER_assume(ret < 0);
  #line 108 
  return ret;
}

#line 111  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_nonnegative(void)
{
  #line 113 
  int ret = ldv_undef_int();
  #line 115 
  __VERIFIER_assume(ret >= 0);
  #line 117 
  return ret;
}

#line 120  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_nonpositive(void)
{
  #line 122 
  int ret = ldv_undef_int();
  #line 124 
  __VERIFIER_assume(ret <= 0);
  #line 126 
  return ret;
}

#line 129  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr_non_null(void)
{
  #line 131 
  void *ret = ldv_undef_ptr();
  #line 133 
  __VERIFIER_assume(ret != (void *)0);
  #line 135 
  return ret;
}

#line 139  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int __ldv_undef_int_range(int begin, int end)
{
  #line 141 
  int ret;
  #line 143 
  ret = ldv_undef_int();
  #line 144 
  __VERIFIER_assume(ret >= begin);
  #line 145 
  __VERIFIER_assume(ret <= end);
  #line 147 
  return ret;
}

#line 151  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int __ldv_undef_int_range2(int begin, int end)
{
  #line 153 
  int ret;
  #line 155 
  ret = begin;
  #line 155 
  while (ret < end) {
    #line 156 
    if (ldv_undef_int() != 0) 
                              #line 157 
                              break;
    #line 155 
    ret ++;
  }
  #line 159 
  return ret;
}

#line 62  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 62 
void ldv_initialize(void);
#line 87 
#line 87 
void ldv_failed_usb_register_driver(void);
#line 97 
#line 97 
void ldv_failed_register_netdev(void);
#line 123 
#line 123 
void ldv_pre_probe(void);
#line 35  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/thread.h"
#line 35 
int pthread_create(pthread_t *, pthread_attr_t *, void *(*)(void *), void *);
#line 39 
#line 39 
int pthread_join(pthread_t, void **);
#line 74  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/emg/0/environment_model.c"
#line 121 
void emg_dispatch_deregister_10(struct usb_driver *arg0);
#line 75 
#line 112 
void emg_dispatch_deregister_9(struct net_device *arg0);
#line 76 
#line 130 
void emg_dispatch_register_12(struct usb_driver *arg0);
#line 77 
#line 101 
void emg_dispatch_register_5(struct net_device *arg0);
#line 78 
#line 1053 
void *emg_entry_point_insmod(void *arg0);
#line 80 
#line 141 
void *emg_net_random_allocationless_scenario_rtl8152_get_coalesce(void *arg0);
#line 92 
#line 553 
void *emg_usb_usb_scenario_rtl8152_driver(void *arg0);
#line 93 
#line 1082 
int main(void);
#line 96  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/emg/0/environment_model.c"
pthread_t emg_thread_15;
#line 97  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/emg/0/environment_model.c"
pthread_t emg_thread_16;
#line 101  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/emg/0/environment_model.c"
void emg_dispatch_register_5(struct net_device *arg0)
{
  #line 102 
  int ret;
  #line 103 
  struct emg_struct_random_allocationless_scenario_rtl8152_get_coalesce_15 *cf_arg_15;
  #line 104 
  cf_arg_15 = (struct emg_struct_random_allocationless_scenario_rtl8152_get_coalesce_15 *)ldv_xmalloc(16UL);
  #line 105 
  cf_arg_15->arg0 = arg0;
  #line 106 
  ret = pthread_create(& emg_thread_15,(pthread_attr_t *)0,& emg_net_random_allocationless_scenario_rtl8152_get_coalesce,(void *)cf_arg_15);
  #line 107 
  __VERIFIER_assume(ret == 0);
  #line 108 
  return;
}

#line 112  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/emg/0/environment_model.c"
void emg_dispatch_deregister_9(struct net_device *arg0)
{
  #line 113 
  int ret;
  #line 114 
  struct emg_struct_random_allocationless_scenario_rtl8152_get_coalesce_15 *cf_arg_15;
  #line 115 
  ret = pthread_join(emg_thread_15,(void **)0);
  #line 116 
  __VERIFIER_assume(ret == 0);
  #line 117 
  return;
}

#line 121  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/emg/0/environment_model.c"
void emg_dispatch_deregister_10(struct usb_driver *arg0)
{
  #line 122 
  int ret;
  #line 123 
  struct emg_struct_usb_scenario_rtl8152_driver_16 *cf_arg_16;
  #line 124 
  ret = pthread_join(emg_thread_16,(void **)0);
  #line 125 
  __VERIFIER_assume(ret == 0);
  #line 126 
  return;
}

#line 130  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/emg/0/environment_model.c"
void emg_dispatch_register_12(struct usb_driver *arg0)
{
  #line 131 
  int ret;
  #line 132 
  struct emg_struct_usb_scenario_rtl8152_driver_16 *cf_arg_16;
  #line 133 
  cf_arg_16 = (struct emg_struct_usb_scenario_rtl8152_driver_16 *)ldv_xmalloc(16UL);
  #line 134 
  cf_arg_16->arg0 = arg0;
  #line 135 
  ret = pthread_create(& emg_thread_16,(pthread_attr_t *)0,& emg_usb_usb_scenario_rtl8152_driver,(void *)cf_arg_16);
  #line 136 
  __VERIFIER_assume(ret == 0);
  #line 137 
  return;
}

#line 141  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/emg/0/environment_model.c"
void *emg_net_random_allocationless_scenario_rtl8152_get_coalesce(void *arg0)
{
  #line 144 
  struct net_device *emg_15_container;
  #line 145 
  struct sk_buff *emg_15_emg_param_0_16;
  #line 146 
  struct sk_buff *emg_15_emg_param_0_20;
  #line 147 
  struct ethtool_coalesce *emg_15_emg_param_1_0;
  #line 148 
  struct ethtool_drvinfo *emg_15_emg_param_1_1;
  #line 149 
  struct ethtool_tunable *emg_15_emg_param_1_10;
  #line 150 
  struct ethtool_wolinfo *emg_15_emg_param_1_12;
  #line 151 
  int emg_15_emg_param_1_13;
  #line 152 
  struct ifreq *emg_15_emg_param_1_14;
  #line 153 
  unsigned long long emg_15_emg_param_1_18;
  #line 154 
  void *emg_15_emg_param_1_19;
  #line 155 
  struct ethtool_eee *emg_15_emg_param_1_2;
  #line 156 
  struct ethtool_coalesce *emg_15_emg_param_1_21;
  #line 157 
  struct ethtool_eee *emg_15_emg_param_1_22;
  #line 158 
  struct ethtool_link_ksettings *emg_15_emg_param_1_23;
  #line 159 
  unsigned int emg_15_emg_param_1_24;
  #line 160 
  struct ethtool_ringparam *emg_15_emg_param_1_25;
  #line 161 
  struct ethtool_tunable *emg_15_emg_param_1_26;
  #line 162 
  struct ethtool_wolinfo *emg_15_emg_param_1_28;
  #line 163 
  struct ethtool_stats *emg_15_emg_param_1_3;
  #line 164 
  struct ethtool_link_ksettings *emg_15_emg_param_1_5;
  #line 165 
  struct ethtool_ringparam *emg_15_emg_param_1_6;
  #line 166 
  int emg_15_emg_param_1_7;
  #line 167 
  unsigned int emg_15_emg_param_1_8;
  #line 168 
  void *emg_15_emg_param_2_11;
  #line 169 
  int emg_15_emg_param_2_15;
  #line 170 
  unsigned long long emg_15_emg_param_2_17;
  #line 171 
  void *emg_15_emg_param_2_27;
  #line 172 
  unsigned long long *emg_15_emg_param_2_4;
  #line 173 
  unsigned char *emg_15_emg_param_2_9;
  #line 174 
  int emg_repeat_cnt_call_15 = 1;
  #line 176 
  struct emg_struct_random_allocationless_scenario_rtl8152_get_coalesce_15 *data = (struct emg_struct_random_allocationless_scenario_rtl8152_get_coalesce_15 *)arg0;
  #line 181 
  if (data != (struct emg_struct_random_allocationless_scenario_rtl8152_get_coalesce_15 *)0) {
    #line 182 
    emg_15_container = data->arg0;
    #line 183 
    ldv_free((void *)data);
  }
  #line 188 
  goto emg_call_15;
  #line 192 
  return (void *)0;
  #line 195 
  emg_call_15: 
               #line 195 
  ;
  #line 196 
  switch (ldv_undef_int()) {
    #line 197 
    case 0: 
            #line 197 
    ;
    #line 199 
    emg_15_emg_param_1_28 = (struct ethtool_wolinfo *)ldv_xmalloc_unknown_size(0UL);
    #line 199 
    emg_15_emg_param_1_28 = emg_15_emg_param_1_28;
    #line 203 
    emg_wrapper_rtl8152_set_wol(emg_15_container,emg_15_emg_param_1_28);
    #line 207 
    ldv_free((void *)emg_15_emg_param_1_28);
    #line 209 
    break;
    #line 211 
    case 1: 
            #line 211 
    ;
    #line 213 
    emg_15_emg_param_1_26 = (struct ethtool_tunable *)ldv_xmalloc_unknown_size(0UL);
    #line 213 
    emg_15_emg_param_1_26 = emg_15_emg_param_1_26;
    #line 214 
    emg_15_emg_param_2_27 = ldv_xmalloc_unknown_size(0UL);
    #line 214 
    emg_15_emg_param_2_27 = emg_15_emg_param_2_27;
    #line 218 
    emg_wrapper_rtl8152_set_tunable(emg_15_container,emg_15_emg_param_1_26,emg_15_emg_param_2_27);
    #line 222 
    ldv_free((void *)emg_15_emg_param_1_26);
    #line 223 
    ldv_free(emg_15_emg_param_2_27);
    #line 225 
    break;
    #line 227 
    case 2: 
            #line 227 
    ;
    #line 229 
    emg_15_emg_param_1_25 = (struct ethtool_ringparam *)ldv_xmalloc_unknown_size(0UL);
    #line 229 
    emg_15_emg_param_1_25 = emg_15_emg_param_1_25;
    #line 233 
    emg_wrapper_rtl8152_set_ringparam(emg_15_container,emg_15_emg_param_1_25);
    #line 237 
    ldv_free((void *)emg_15_emg_param_1_25);
    #line 239 
    break;
    #line 241 
    case 3: 
            #line 241 
    ;
    #line 243 
    emg_wrapper_rtl8152_set_msglevel(emg_15_container,emg_15_emg_param_1_24);
    #line 245 
    break;
    #line 247 
    case 4: 
            #line 247 
    ;
    #line 249 
    emg_15_emg_param_1_23 = (struct ethtool_link_ksettings *)ldv_xmalloc_unknown_size(0UL);
    #line 249 
    emg_15_emg_param_1_23 = emg_15_emg_param_1_23;
    #line 253 
    emg_wrapper_rtl8152_set_link_ksettings(emg_15_container,emg_15_emg_param_1_23);
    #line 257 
    ldv_free((void *)emg_15_emg_param_1_23);
    #line 259 
    break;
    #line 261 
    case 5: 
            #line 261 
    ;
    #line 263 
    emg_15_emg_param_1_22 = (struct ethtool_eee *)ldv_xmalloc_unknown_size(0UL);
    #line 263 
    emg_15_emg_param_1_22 = emg_15_emg_param_1_22;
    #line 267 
    emg_wrapper_rtl_ethtool_set_eee(emg_15_container,emg_15_emg_param_1_22);
    #line 271 
    ldv_free((void *)emg_15_emg_param_1_22);
    #line 273 
    break;
    #line 275 
    case 6: 
            #line 275 
    ;
    #line 277 
    emg_15_emg_param_1_21 = (struct ethtool_coalesce *)ldv_xmalloc_unknown_size(0UL);
    #line 277 
    emg_15_emg_param_1_21 = emg_15_emg_param_1_21;
    #line 281 
    emg_wrapper_rtl8152_set_coalesce(emg_15_container,emg_15_emg_param_1_21);
    #line 285 
    ldv_free((void *)emg_15_emg_param_1_21);
    #line 287 
    break;
    #line 289 
    case 7: 
            #line 289 
    ;
    #line 291 
    emg_wrapper_rtl8152_nway_reset(emg_15_container);
    #line 293 
    break;
    #line 295 
    case 8: 
            #line 295 
    ;
    #line 297 
    eth_validate_addr(emg_15_container);
    #line 299 
    break;
    #line 301 
    case 9: 
            #line 301 
    ;
    #line 303 
    emg_wrapper_rtl8152_tx_timeout(emg_15_container);
    #line 305 
    break;
    #line 307 
    case 10: 
             #line 307 
    ;
    #line 309 
    emg_15_emg_param_0_20 = (struct sk_buff *)ldv_xmalloc_unknown_size(0UL);
    #line 309 
    emg_15_emg_param_0_20 = emg_15_emg_param_0_20;
    #line 313 
    emg_wrapper_rtl8152_start_xmit(emg_15_emg_param_0_20,emg_15_container);
    #line 317 
    ldv_free((void *)emg_15_emg_param_0_20);
    #line 319 
    break;
    #line 321 
    case 11: 
             #line 321 
    ;
    #line 323 
    emg_wrapper_rtl8152_set_rx_mode(emg_15_container);
    #line 325 
    break;
    #line 327 
    case 12: 
             #line 327 
    ;
    #line 329 
    emg_15_emg_param_1_19 = ldv_xmalloc_unknown_size(0UL);
    #line 329 
    emg_15_emg_param_1_19 = emg_15_emg_param_1_19;
    #line 333 
    emg_wrapper_rtl8152_set_mac_address(emg_15_container,emg_15_emg_param_1_19);
    #line 337 
    ldv_free(emg_15_emg_param_1_19);
    #line 339 
    break;
    #line 341 
    case 13: 
             #line 341 
    ;
    #line 343 
    emg_wrapper_rtl8152_set_features(emg_15_container,emg_15_emg_param_1_18);
    #line 345 
    break;
    #line 347 
    case 14: 
             #line 347 
    ;
    #line 349 
    emg_15_emg_param_0_16 = (struct sk_buff *)ldv_xmalloc_unknown_size(0UL);
    #line 349 
    emg_15_emg_param_0_16 = emg_15_emg_param_0_16;
    #line 353 
    emg_wrapper_rtl8152_features_check(emg_15_emg_param_0_16,emg_15_container,emg_15_emg_param_2_17);
    #line 357 
    ldv_free((void *)emg_15_emg_param_0_16);
    #line 359 
    break;
    #line 361 
    case 15: 
             #line 361 
    ;
    #line 363 
    emg_15_emg_param_1_14 = (struct ifreq *)ldv_xmalloc_unknown_size(0UL);
    #line 363 
    emg_15_emg_param_1_14 = emg_15_emg_param_1_14;
    #line 367 
    emg_wrapper_rtl8152_ioctl(emg_15_container,emg_15_emg_param_1_14,emg_15_emg_param_2_15);
    #line 371 
    ldv_free((void *)emg_15_emg_param_1_14);
    #line 373 
    break;
    #line 375 
    case 16: 
             #line 375 
    ;
    #line 377 
    emg_wrapper_rtl8152_change_mtu(emg_15_container,emg_15_emg_param_1_13);
    #line 379 
    break;
    #line 381 
    case 17: 
             #line 381 
    ;
    #line 383 
    emg_15_emg_param_1_12 = (struct ethtool_wolinfo *)ldv_xmalloc_unknown_size(0UL);
    #line 383 
    emg_15_emg_param_1_12 = emg_15_emg_param_1_12;
    #line 387 
    emg_wrapper_rtl8152_get_wol(emg_15_container,emg_15_emg_param_1_12);
    #line 391 
    ldv_free((void *)emg_15_emg_param_1_12);
    #line 393 
    break;
    #line 395 
    case 18: 
             #line 395 
    ;
    #line 397 
    emg_15_emg_param_1_10 = (struct ethtool_tunable *)ldv_xmalloc_unknown_size(0UL);
    #line 397 
    emg_15_emg_param_1_10 = emg_15_emg_param_1_10;
    #line 398 
    emg_15_emg_param_2_11 = ldv_xmalloc_unknown_size(0UL);
    #line 398 
    emg_15_emg_param_2_11 = emg_15_emg_param_2_11;
    #line 402 
    emg_wrapper_rtl8152_get_tunable(emg_15_container,emg_15_emg_param_1_10,emg_15_emg_param_2_11);
    #line 406 
    ldv_free((void *)emg_15_emg_param_1_10);
    #line 407 
    ldv_free(emg_15_emg_param_2_11);
    #line 409 
    break;
    #line 411 
    case 19: 
             #line 411 
    ;
    #line 413 
    emg_15_emg_param_2_9 = (unsigned char *)ldv_xmalloc_unknown_size(0UL);
    #line 413 
    emg_15_emg_param_2_9 = emg_15_emg_param_2_9;
    #line 417 
    emg_wrapper_rtl8152_get_strings(emg_15_container,emg_15_emg_param_1_8,emg_15_emg_param_2_9);
    #line 421 
    ldv_free((void *)emg_15_emg_param_2_9);
    #line 423 
    break;
    #line 425 
    case 20: 
             #line 425 
    ;
    #line 427 
    emg_wrapper_rtl8152_get_sset_count(emg_15_container,emg_15_emg_param_1_7);
    #line 429 
    break;
    #line 431 
    case 21: 
             #line 431 
    ;
    #line 433 
    emg_15_emg_param_1_6 = (struct ethtool_ringparam *)ldv_xmalloc_unknown_size(0UL);
    #line 433 
    emg_15_emg_param_1_6 = emg_15_emg_param_1_6;
    #line 437 
    emg_wrapper_rtl8152_get_ringparam(emg_15_container,emg_15_emg_param_1_6);
    #line 441 
    ldv_free((void *)emg_15_emg_param_1_6);
    #line 443 
    break;
    #line 445 
    case 22: 
             #line 445 
    ;
    #line 447 
    emg_wrapper_rtl8152_get_msglevel(emg_15_container);
    #line 449 
    break;
    #line 451 
    case 23: 
             #line 451 
    ;
    #line 453 
    emg_15_emg_param_1_5 = (struct ethtool_link_ksettings *)ldv_xmalloc_unknown_size(0UL);
    #line 453 
    emg_15_emg_param_1_5 = emg_15_emg_param_1_5;
    #line 457 
    emg_wrapper_rtl8152_get_link_ksettings(emg_15_container,emg_15_emg_param_1_5);
    #line 461 
    ldv_free((void *)emg_15_emg_param_1_5);
    #line 463 
    break;
    #line 465 
    case 24: 
             #line 465 
    ;
    #line 467 
    ethtool_op_get_link(emg_15_container);
    #line 469 
    break;
    #line 471 
    case 25: 
             #line 471 
    ;
    #line 473 
    emg_15_emg_param_1_3 = (struct ethtool_stats *)ldv_xmalloc_unknown_size(0UL);
    #line 473 
    emg_15_emg_param_1_3 = emg_15_emg_param_1_3;
    #line 474 
    emg_15_emg_param_2_4 = (unsigned long long *)ldv_xmalloc_unknown_size(0UL);
    #line 474 
    emg_15_emg_param_2_4 = emg_15_emg_param_2_4;
    #line 478 
    emg_wrapper_rtl8152_get_ethtool_stats(emg_15_container,emg_15_emg_param_1_3,emg_15_emg_param_2_4);
    #line 482 
    ldv_free((void *)emg_15_emg_param_1_3);
    #line 483 
    ldv_free((void *)emg_15_emg_param_2_4);
    #line 485 
    break;
    #line 487 
    case 26: 
             #line 487 
    ;
    #line 489 
    emg_15_emg_param_1_2 = (struct ethtool_eee *)ldv_xmalloc_unknown_size(0UL);
    #line 489 
    emg_15_emg_param_1_2 = emg_15_emg_param_1_2;
    #line 493 
    emg_wrapper_rtl_ethtool_get_eee(emg_15_container,emg_15_emg_param_1_2);
    #line 497 
    ldv_free((void *)emg_15_emg_param_1_2);
    #line 499 
    break;
    #line 501 
    case 27: 
             #line 501 
    ;
    #line 503 
    emg_15_emg_param_1_1 = (struct ethtool_drvinfo *)ldv_xmalloc_unknown_size(0UL);
    #line 503 
    emg_15_emg_param_1_1 = emg_15_emg_param_1_1;
    #line 507 
    emg_wrapper_rtl8152_get_drvinfo(emg_15_container,emg_15_emg_param_1_1);
    #line 511 
    ldv_free((void *)emg_15_emg_param_1_1);
    #line 513 
    break;
    #line 515 
    case 28: 
             #line 515 
    ;
    #line 517 
    emg_15_emg_param_1_0 = (struct ethtool_coalesce *)ldv_xmalloc_unknown_size(0UL);
    #line 517 
    emg_15_emg_param_1_0 = emg_15_emg_param_1_0;
    #line 521 
    emg_wrapper_rtl8152_get_coalesce(emg_15_container,emg_15_emg_param_1_0);
    #line 525 
    ldv_free((void *)emg_15_emg_param_1_0);
    #line 528 
    if (emg_repeat_cnt_call_15 > 0) {
      #line 529 
      emg_repeat_cnt_call_15 --;
      #line 531 
      goto emg_call_15;
    }
    else 
         #line 533 
         __VERIFIER_assume(0);
    #line 537 
    break;
    #line 539 
    case 29: 
             #line 539 
    ;
    #line 543 
    break;
    #line 545 
    default: 
             #line 545 
    ;
    #line 545 
    __VERIFIER_assume(0);
  }
  #line 548 
  return (void *)0;
}

#line 553  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/emg/0/environment_model.c"
void *emg_usb_usb_scenario_rtl8152_driver(void *arg0)
{
  #line 556 
  int emg_16_choice;
  #line 557 
  struct usb_driver *emg_16_container;
  #line 558 
  struct usb_device_id *emg_16_device_id;
  #line 559 
  struct pm_message *emg_16_emg_param_1_0;
  #line 560 
  int emg_16_probe_retval;
  #line 561 
  struct usb_interface *emg_16_resource;
  #line 562 
  struct usb_device *emg_16_usb_device;
  #line 563 
  int emg_repeat_cnt_manage_interface_16 = 1;
  #line 565 
  struct emg_struct_usb_scenario_rtl8152_driver_16 *data = (struct emg_struct_usb_scenario_rtl8152_driver_16 *)arg0;
  #line 569 
  emg_16_choice = 0;
  #line 570 
  emg_16_probe_retval = ldv_undef_int();
  #line 571 
  emg_16_choice = 0;
  #line 572 
  emg_16_container = emg_alias_rtl8152_driver;
  #line 573 
  emg_16_probe_retval = ldv_undef_int();
  #line 575 
  __VERIFIER_assume(data->arg0 == emg_alias_rtl8152_driver);
  #line 577 
  if (data != (struct emg_struct_usb_scenario_rtl8152_driver_16 *)0) {
    #line 578 
    emg_16_container = data->arg0;
    #line 579 
    ldv_free((void *)data);
  }
  #line 584 
  emg_16_resource = (struct usb_interface *)ldv_xmalloc(1704UL);
  #line 585 
  emg_16_usb_device = (struct usb_device *)ldv_xmalloc(2200UL);
  #line 586 
  emg_16_resource->dev.parent = & emg_16_usb_device->dev;
  #line 587 
  emg_16_choice = __ldv_undef_int_range(0,34);
  #line 588 
  emg_16_device_id = emg_16_container->id_table + (unsigned long)emg_16_choice;
  #line 592 
  goto emg_manage_interface_16;
  #line 596 
  return (void *)0;
  #line 599 
  emg_manage_interface_16: 
                           #line 599 
  ;
  #line 600 
  if (ldv_undef_int() != 0) {
    #line 603 
    ldv_pre_probe();
    #line 607 
    emg_16_probe_retval = emg_wrapper_rtl8152_probe(emg_16_resource,emg_16_device_id);
    #line 612 
    emg_16_probe_retval = ldv_post_probe(emg_16_probe_retval);
    #line 615 
    if (ldv_undef_int() != 0) {
      #line 617 
      __VERIFIER_assume(emg_16_probe_retval == 0);
      #line 620 
      switch (ldv_undef_int()) {
        #line 621 
        case 0: 
                #line 621 
        ;
        #line 627 
        emg_wrapper_rtl8152_pre_reset(emg_16_resource);
        #line 631 
        emg_wrapper_rtl8152_post_reset(emg_16_resource);
        #line 633 
        break;
        #line 635 
        case 1: 
                #line 635 
        ;
        #line 637 
        emg_16_emg_param_1_0 = (struct pm_message *)ldv_xmalloc_unknown_size(0UL);
        #line 637 
        emg_16_emg_param_1_0 = emg_16_emg_param_1_0;
        #line 641 
        emg_wrapper_rtl8152_suspend(emg_16_resource,*emg_16_emg_param_1_0);
        #line 645 
        ldv_free((void *)emg_16_emg_param_1_0);
        #line 648 
        if (ldv_undef_int() != 0) 
                                  #line 650 
                                  emg_wrapper_rtl8152_resume(emg_16_resource); else 
                                                                    #line 654 
                                                                    emg_wrapper_rtl8152_reset_resume(emg_16_resource);
        #line 657 
        break;
        #line 659 
        case 2: 
                #line 659 
        ;
        #line 663 
        break;
        #line 665 
        case 3: 
                #line 665 
        ;
        #line 668 
        break;
        #line 670 
        default: 
                 #line 670 
        ;
        #line 670 
        __VERIFIER_assume(0);
      }
      #line 674 
      emg_wrapper_rtl8152_disconnect(emg_16_resource);
    }
    else 
         #line 678 
         __VERIFIER_assume(emg_16_probe_retval != 0);
    #line 682 
    if (emg_repeat_cnt_manage_interface_16 > 0) {
      #line 683 
      emg_repeat_cnt_manage_interface_16 --;
      #line 685 
      goto emg_manage_interface_16;
    }
    else 
         #line 687 
         __VERIFIER_assume(0);
  }
  else {
    #line 693 
    ldv_free((void *)emg_16_resource);
    #line 694 
    ldv_free((void *)emg_16_usb_device);
  }
  #line 702 
  return (void *)0;
}

#line 707  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/emg/0/environment_model.c"
struct net_device *emg_alloc_etherdev_mqs(int arg0, unsigned int arg1, unsigned int arg2)
{
  #line 710 
  struct net_device *emg_2_netdev;
  #line 712 
  if (ldv_undef_int() != 0) {
    #line 714 
    emg_2_netdev = (struct net_device *)ldv_xmalloc(3328UL);
    #line 718 
    return emg_2_netdev;
  }
  else 
       #line 722 
       return (struct net_device *)0;
}

#line 730  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/emg/0/environment_model.c"
void emg_free_netdev(struct net_device *arg0)
{
  #line 733 
  struct net_device *emg_3_netdev;
  #line 736 
  emg_3_netdev = arg0;
  #line 737 
  ldv_free((void *)emg_3_netdev);
  #line 740 
  return;
}

#line 745  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/emg/0/environment_model.c"
_Bool emg_queue_delayed_work(struct workqueue_struct *arg0, struct delayed_work *arg1, unsigned long arg2)
{
  #line 748 
  struct delayed_work *emg_4_delayed_work;
  #line 749 
  struct work_struct *emg_4_emg_param_0_0;
  #line 751 
  if (ldv_undef_int() != 0) {
    #line 753 
    emg_4_delayed_work = arg1;
    #line 757 
    emg_4_emg_param_0_0 = (struct work_struct *)ldv_xmalloc_unknown_size(0UL);
    #line 757 
    emg_4_emg_param_0_0 = emg_4_emg_param_0_0;
    #line 761 
    if (emg_4_delayed_work->work.func != (void (*)(struct work_struct *))0) 
      #line 762 
      (*(emg_4_delayed_work->work.func))(emg_4_emg_param_0_0);
    #line 767 
    ldv_free((void *)emg_4_emg_param_0_0);
    #line 771 
    return (_Bool)1;
  }
  else 
       #line 775 
       return (_Bool)0;
}

#line 783  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/emg/0/environment_model.c"
int emg_register_netdev(struct net_device *arg0)
{
  #line 786 
  struct net_device *emg_5_netdev;
  #line 787 
  int emg_5_ret;
  #line 790 
  emg_5_ret = ldv_undef_int();
  #line 791 
  emg_5_ret = ldv_undef_int();
  #line 792 
  if (ldv_undef_int() != 0) {
    #line 794 
    emg_5_netdev = arg0;
    #line 798 
    emg_5_ret = emg_wrapper_rtl8152_open(emg_5_netdev);
    #line 801 
    if (ldv_undef_int() != 0) {
      #line 803 
      __VERIFIER_assume(emg_5_ret == 0);
      #line 807 
      emg_dispatch_register_5(emg_5_netdev);
      #line 811 
      return 0;
    }
    else {
      #line 815 
      __VERIFIER_assume(emg_5_ret != 0);
      #line 816 
      ldv_failed_register_netdev();
      #line 817 
      return ldv_undef_int_negative();
    }
  }
  else {
    #line 822 
    ldv_failed_register_netdev();
    #line 823 
    return ldv_undef_int_negative();
  }
}

#line 831  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/emg/0/environment_model.c"
_Bool emg_schedule_delayed_work(struct delayed_work *arg0, unsigned long arg1)
{
  #line 834 
  struct delayed_work *emg_6_delayed_work;
  #line 835 
  struct work_struct *emg_6_emg_param_0_0;
  #line 837 
  if (ldv_undef_int() != 0) {
    #line 839 
    emg_6_delayed_work = arg0;
    #line 843 
    emg_6_emg_param_0_0 = (struct work_struct *)ldv_xmalloc_unknown_size(0UL);
    #line 843 
    emg_6_emg_param_0_0 = emg_6_emg_param_0_0;
    #line 847 
    if (emg_6_delayed_work->work.func != (void (*)(struct work_struct *))0) 
      #line 848 
      (*(emg_6_delayed_work->work.func))(emg_6_emg_param_0_0);
    #line 853 
    ldv_free((void *)emg_6_emg_param_0_0);
    #line 857 
    return (_Bool)1;
  }
  else 
       #line 861 
       return (_Bool)0;
}

#line 869  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/emg/0/environment_model.c"
void emg_tasklet_init(struct tasklet_struct *arg0, void (*arg1)(unsigned long ), unsigned long arg2)
{
  #line 874 
  arg0->func = arg1;
  #line 875 
  arg0->data = arg2;
  #line 876 
  arg0->count.counter = 0;
  #line 879 
  return;
}

#line 884  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/emg/0/environment_model.c"
void emg_tasklet_schedule(struct tasklet_struct *arg0)
{
  #line 887 
  unsigned long emg_8_emg_param_0_0;
  #line 888 
  struct tasklet_struct *emg_8_tasklet_struct;
  #line 891 
  emg_8_tasklet_struct = arg0;
  #line 895 
  if (emg_8_tasklet_struct->count.counter == 0) 
    #line 896 
    if (emg_8_tasklet_struct->func != (void (*)(unsigned long ))0) 
                                                                   #line 897 
                                                                   (*(emg_8_tasklet_struct->func))(emg_8_emg_param_0_0);
  #line 902 
  return;
}

#line 907  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/emg/0/environment_model.c"
void emg_unregister_netdev(struct net_device *arg0)
{
  #line 910 
  struct net_device *emg_9_netdev;
  #line 913 
  emg_9_netdev = arg0;
  #line 917 
  emg_wrapper_rtl8152_close(emg_9_netdev);
  #line 921 
  emg_dispatch_deregister_9(emg_9_netdev);
  #line 924 
  return;
}

#line 929  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/emg/0/environment_model.c"
void emg_usb_deregister(struct usb_driver *arg0)
{
  #line 932 
  struct usb_driver *emg_10_usb_driver;
  #line 934 
  emg_10_usb_driver = emg_alias_rtl8152_driver;
  #line 936 
  emg_10_usb_driver = arg0;
  #line 940 
  emg_dispatch_deregister_10(emg_10_usb_driver);
  #line 943 
  return;
}

#line 948  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/emg/0/environment_model.c"
void emg_usb_kill_urb(struct urb *arg0)
{
  #line 951 
  struct urb *emg_11_urb;
  #line 954 
  emg_11_urb = arg0;
  #line 957 
  if (ldv_undef_int() != 0) {
    #line 959 
    __VERIFIER_assume(emg_11_urb != (struct urb *)0);
    #line 963 
    if (emg_11_urb->complete != (void (*)(struct urb *))0) 
                                                           #line 964 
                                                           (*(emg_11_urb->complete))(emg_11_urb);
  }
  else 
       #line 969 
       __VERIFIER_assume(emg_11_urb == (struct urb *)0);
  #line 973 
  return;
}

#line 978  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/emg/0/environment_model.c"
int emg_usb_register_driver(struct usb_driver *arg0, struct module *arg1, char *arg2)
{
  #line 981 
  struct usb_driver *emg_12_usb_driver;
  #line 983 
  emg_12_usb_driver = emg_alias_rtl8152_driver;
  #line 984 
  if (ldv_undef_int() != 0) {
    #line 986 
    emg_12_usb_driver = arg0;
    #line 990 
    emg_dispatch_register_12(emg_12_usb_driver);
    #line 994 
    return 0;
  }
  else {
    #line 998 
    ldv_failed_usb_register_driver();
    #line 999 
    return ldv_undef_int_negative();
  }
}

#line 1007  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/emg/0/environment_model.c"
int emg_usb_reset_device(struct usb_device *arg0)
{
  #line 1016 
  return 0;
}

#line 1023  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/emg/0/environment_model.c"
int emg_usb_submit_urb(struct urb *arg0, unsigned int arg1)
{
  #line 1026 
  struct urb *emg_14_urb;
  #line 1028 
  if (ldv_undef_int() != 0) {
    #line 1030 
    emg_14_urb = arg0;
    #line 1031 
    ldv_check_alloc_flags(arg1);
    #line 1035 
    if (emg_14_urb->complete != (void (*)(struct urb *))0) 
                                                           #line 1036 
                                                           (*(emg_14_urb->complete))(emg_14_urb);
    #line 1041 
    return (int)((long)ldv_malloc_unknown_size());
  }
  else 
       #line 1045 
       return 0;
}

#line 1053  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/emg/0/environment_model.c"
void *emg_entry_point_insmod(void *arg0)
{
  #line 1056 
  int emg_1_ret;
  #line 1059 
  emg_1_ret = emg_rtl8152_driver_init();
  #line 1060 
  emg_1_ret = ldv_post_init(emg_1_ret);
  #line 1063 
  if (ldv_undef_int() != 0) {
    #line 1065 
    __VERIFIER_assume(emg_1_ret == 0);
    #line 1069 
    emg_rtl8152_driver_exit();
  }
  else 
       #line 1073 
       __VERIFIER_assume(emg_1_ret != 0);
  #line 1077 
  return (void *)0;
}

#line 1082  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/usb/r8152.ko/concurrency safety/emg/0/environment_model.c"
int main(void)
{
  #line 1084 
  ldv_initialize();
  #line 1086 
  emg_entry_point_insmod((void *)0);
  #line 1088 
  return 0;
}

