/* Generated by Frama-C */
#line 106  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/compiler_types.h"
typedef signed char __s8;
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/int-ll64.h"
typedef unsigned char __u8;
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/int-ll64.h"
typedef short __s16;
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/int-ll64.h"
typedef unsigned short __u16;
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/int-ll64.h"
typedef int __s32;
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/int-ll64.h"
typedef unsigned int __u32;
#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/int-ll64.h"
typedef long long __s64;
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/int-ll64.h"
typedef unsigned long long __u64;
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/int-ll64.h"
typedef __s8 s8;
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/int-ll64.h"
typedef __u8 u8;
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/int-ll64.h"
typedef __s16 s16;
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/int-ll64.h"
typedef __u16 u16;
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/int-ll64.h"
typedef __s32 s32;
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/int-ll64.h"
typedef __u32 u32;
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/int-ll64.h"
typedef __s64 s64;
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/int-ll64.h"
typedef __u64 u64;
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/uapi/asm/posix_types_64.h"
typedef long __kernel_long_t;
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef unsigned long __kernel_ulong_t;
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_pid_t;
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_uid32_t;
#line 50  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_gid32_t;
#line 51  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef __kernel_ulong_t __kernel_size_t;
#line 73  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_ssize_t;
#line 88  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef long long __kernel_loff_t;
#line 91  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef long long __kernel_time64_t;
#line 92  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_clock_t;
#line 93  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_timer_t;
#line 94  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_clockid_t;
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef __u16 __le16;
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/types.h"
typedef __u16 __be16;
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/types.h"
typedef __u32 __le32;
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/types.h"
typedef __u32 __be32;
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/types.h"
typedef __u64 __be64;
#line 37  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/types.h"
typedef __u32 __wsum;
#line 38  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/types.h"
typedef unsigned int __poll_t;
#line 53  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/types.h"
typedef u32 __kernel_dev_t;
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef __kernel_dev_t dev_t;
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef unsigned short umode_t;
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef __kernel_pid_t pid_t;
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef __kernel_clockid_t clockid_t;
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef _Bool bool;
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef __kernel_uid32_t uid_t;
#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef __kernel_gid32_t gid_t;
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef __kernel_loff_t loff_t;
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef __kernel_size_t size_t;
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef __kernel_ssize_t ssize_t;
#line 103  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef s32 int32_t;
#line 109  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef u32 uint32_t;
#line 115  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef u64 sector_t;
#line 131  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef u64 blkcnt_t;
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef u64 dma_addr_t;
#line 149  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef unsigned int gfp_t;
#line 154  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef unsigned int slab_flags_t;
#line 155  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef unsigned int fmode_t;
#line 156  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef u64 phys_addr_t;
#line 159  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef phys_addr_t resource_size_t;
#line 170  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
struct __anonstruct_atomic_t_6 {
   int counter ;
};
#line 170  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef struct __anonstruct_atomic_t_6 atomic_t;
#line 174  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
struct __anonstruct_atomic64_t_7 {
   s64 counter ;
};
#line 174  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef struct __anonstruct_atomic64_t_7 atomic64_t;
#line 181  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
struct list_head {
   struct list_head *next ;
   struct list_head *prev ;
};
#line 185 
struct hlist_node;
#line 185  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
struct hlist_head {
   struct hlist_node *first ;
};
#line 189  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
struct hlist_node {
   struct hlist_node *next ;
   struct hlist_node **pprev ;
};
#line 219  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
struct callback_head {
   struct callback_head *next ;
   void (*func)(struct callback_head *) ;
} __attribute__((__aligned__(8)));
#line 14  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.ko/concurrency safety/0/concurrency safety/weaver/rtl8xxxu_8192e.i.aux"
struct task_struct;
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/export.h"
struct module;
#line 60  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/export.h"
struct kernel_symbol {
   int value_offset ;
   int name_offset ;
   int namespace_offset ;
};
#line 136  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/init.h"
typedef void (*ctor_fn_t)(void);
#line 139 
struct file_system_type;
#line 83  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/printk.h"
struct ctl_table;
#line 87  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jump_label.h"
struct jump_entry;
#line 87 
struct static_key_mod;
#line 87  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jump_label.h"
union __anonunion_8 {
   unsigned long type ;
   struct jump_entry *entries ;
   struct static_key_mod *next ;
};
#line 87  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jump_label.h"
struct static_key {
   atomic_t enabled ;
   union __anonunion_8 __anonCompField_static_key_4 ;
};
#line 122  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jump_label.h"
struct jump_entry {
   s32 code ;
   s32 target ;
   long key ;
};
#line 346  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jump_label.h"
struct static_key_true {
   struct static_key key ;
};
#line 350  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jump_label.h"
struct static_key_false {
   struct static_key key ;
};
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dynamic_debug.h"
union __anonunion_key_9 {
   struct static_key_true dd_key_true ;
   struct static_key_false dd_key_false ;
};
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dynamic_debug.h"
struct _ddebug {
   char *modname ;
   char *function ;
   char *filename ;
   char *format ;
   unsigned int lineno : 18 ;
   unsigned int flags : 8 ;
   union __anonunion_key_9 key ;
} __attribute__((__aligned__(8)));
#line 59 
struct device;
#line 65 
struct net_device;
#line 476  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/printk.h"
struct file_operations;
#line 87  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/div64.h"
struct completion;
#line 88 
struct pt_regs;
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/bug.h"
struct bug_entry {
   int bug_addr_disp ;
   int file_disp ;
   unsigned short line ;
   unsigned short flags ;
};
#line 188  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/math64.h"
typedef __s64 time64_t;
#line 7  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/time_types.h"
struct __kernel_timespec {
   __kernel_time64_t tv_sec ;
   long long tv_nsec ;
};
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/time64.h"
struct timespec64 {
   time64_t tv_sec ;
   long tv_nsec ;
};
#line 165 
struct old_timespec32;
#line 166 
struct pollfd;
#line 167 
enum timespec_type {
    TT_NONE = 0,
    TT_NATIVE = 1,
    TT_COMPAT = 2
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/restart_block.h"
struct __anonstruct_futex_27 {
   u32 *uaddr ;
   u32 val ;
   u32 flags ;
   u32 bitset ;
   u64 time ;
   u32 *uaddr2 ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/restart_block.h"
union __anonunion_29 {
   struct __kernel_timespec *rmtp ;
   struct old_timespec32 *compat_rmtp ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/restart_block.h"
struct __anonstruct_nanosleep_28 {
   clockid_t clockid ;
   enum timespec_type type ;
   union __anonunion_29 __anonCompField___anonstruct_nanosleep_28_5 ;
   u64 expires ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/restart_block.h"
struct __anonstruct_poll_30 {
   struct pollfd *ufds ;
   int nfds ;
   int has_timeout ;
   unsigned long tv_sec ;
   unsigned long tv_nsec ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/restart_block.h"
union __anonunion_26 {
   struct __anonstruct_futex_27 futex ;
   struct __anonstruct_nanosleep_28 nanosleep ;
   struct __anonstruct_poll_30 poll ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/restart_block.h"
struct restart_block {
   long (*fn)(struct restart_block *) ;
   union __anonunion_26 __anonCompField_restart_block_6 ;
};
#line 58  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/page_64.h"
struct page;
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/getorder.h"
struct mm_struct;
#line 49 
struct io_bitmap;
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/ptrace.h"
struct pt_regs {
   unsigned long r15 ;
   unsigned long r14 ;
   unsigned long r13 ;
   unsigned long r12 ;
   unsigned long bp ;
   unsigned long bx ;
   unsigned long r11 ;
   unsigned long r10 ;
   unsigned long r9 ;
   unsigned long r8 ;
   unsigned long ax ;
   unsigned long cx ;
   unsigned long dx ;
   unsigned long si ;
   unsigned long di ;
   unsigned long orig_ax ;
   unsigned long ip ;
   unsigned long cs ;
   unsigned long flags ;
   unsigned long sp ;
   unsigned long ss ;
};
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/desc_defs.h"
struct desc_struct {
   u16 limit0 ;
   u16 base0 ;
   u16 base1 : 8 ;
   u16 type : 4 ;
   u16 s : 1 ;
   u16 dpl : 2 ;
   u16 p : 1 ;
   u16 limit1 : 4 ;
   u16 avl : 1 ;
   u16 l : 1 ;
   u16 d : 1 ;
   u16 g : 1 ;
   u16 base2 : 8 ;
} __attribute__((__packed__));
#line 119  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/desc_defs.h"
typedef unsigned long pteval_t;
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pmdval_t;
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pudval_t;
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgdval_t;
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgprotval_t;
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_64_types.h"
struct __anonstruct_pte_t_53 {
   pteval_t pte ;
};
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_64_types.h"
typedef struct __anonstruct_pte_t_53 pte_t;
#line 265  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
struct pgprot {
   pgprotval_t pgprot ;
};
#line 267  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
typedef struct pgprot pgprot_t;
#line 266  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
struct __anonstruct_pgd_t_54 {
   pgdval_t pgd ;
};
#line 266  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
typedef struct __anonstruct_pgd_t_54 pgd_t;
#line 319  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
struct __anonstruct_pud_t_56 {
   pudval_t pud ;
};
#line 319  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
typedef struct __anonstruct_pud_t_56 pud_t;
#line 345  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
struct __anonstruct_pmd_t_57 {
   pmdval_t pmd ;
};
#line 345  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
typedef struct __anonstruct_pmd_t_57 pmd_t;
#line 505  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
typedef struct page *pgtable_t;
#line 519 
struct file;
#line 530 
struct seq_file;
#line 360  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/nospec-branch.h"
struct thread_struct;
#line 362 
struct cpumask;
#line 365 
struct vm_area_struct;
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qspinlock_types.h"
struct __anonstruct_59 {
   u8 locked ;
   u8 pending ;
};
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qspinlock_types.h"
struct __anonstruct_60 {
   u16 locked_pending ;
   u16 tail ;
};
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qspinlock_types.h"
union __anonunion_58 {
   atomic_t val ;
   struct __anonstruct_59 __anonCompField___anonunion_58_7 ;
   struct __anonstruct_60 __anonCompField___anonunion_58_8 ;
};
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qspinlock_types.h"
struct qspinlock {
   union __anonunion_58 __anonCompField_qspinlock_9 ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qspinlock_types.h"
typedef struct qspinlock arch_spinlock_t;
#line 13  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qrwlock_types.h"
struct __anonstruct_62 {
   u8 wlocked ;
   u8 __lstate[3U] ;
};
#line 13  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qrwlock_types.h"
union __anonunion_61 {
   atomic_t cnts ;
   struct __anonstruct_62 __anonCompField___anonunion_61_10 ;
};
#line 13  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qrwlock_types.h"
struct qrwlock {
   union __anonunion_61 __anonCompField_qrwlock_11 ;
   arch_spinlock_t wait_lock ;
};
#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qrwlock_types.h"
typedef struct qrwlock arch_rwlock_t;
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/math_emu.h"
struct math_emu_info {
   long ___orig_eip ;
   struct pt_regs *regs ;
};
#line 2288  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/atomic-fallback.h"
typedef atomic64_t atomic_long_t;
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cpumask.h"
struct cpumask {
   unsigned long bits[128U] ;
};
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cpumask.h"
typedef struct cpumask cpumask_t;
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/tracepoint-defs.h"
struct tracepoint_func {
   void *func ;
   void *data ;
   int prio ;
};
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/tracepoint-defs.h"
struct tracepoint {
   char *name ;
   struct static_key key ;
   int (*regfunc)(void) ;
   void (*unregfunc)(void) ;
   struct tracepoint_func *funcs ;
};
#line 37  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/tracepoint-defs.h"
typedef int tracepoint_ptr_t;
#line 44  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/tracepoint-defs.h"
struct bpf_raw_event_map {
   struct tracepoint *tp ;
   void *bpf_func ;
   u32 num_args ;
   u32 writable_size ;
} __attribute__((__aligned__(32)));
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
struct fregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u32 status ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_90 {
   u64 rip ;
   u64 rdp ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_91 {
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
union __anonunion_89 {
   struct __anonstruct_90 __anonCompField___anonunion_89_17 ;
   struct __anonstruct_91 __anonCompField___anonunion_89_18 ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
union __anonunion_92 {
   u32 padding1[12U] ;
   u32 sw_reserved[12U] ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
struct fxregs_state {
   u16 cwd ;
   u16 swd ;
   u16 twd ;
   u16 fop ;
   union __anonunion_89 __anonCompField_fxregs_state_19 ;
   u32 mxcsr ;
   u32 mxcsr_mask ;
   u32 st_space[32U] ;
   u32 xmm_space[64U] ;
   u32 padding[12U] ;
   union __anonunion_92 __anonCompField_fxregs_state_20 ;
} __attribute__((__aligned__(16)));
#line 79  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
struct swregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u8 ftop ;
   u8 changed ;
   u8 lookahead ;
   u8 no_update ;
   u8 rm ;
   u8 alimit ;
   struct math_emu_info *info ;
   u32 entry_eip ;
};
#line 232  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
struct xstate_header {
   u64 xfeatures ;
   u64 xcomp_bv ;
   u64 reserved[6U] ;
} __attribute__((__packed__));
#line 253  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
struct xregs_state {
   struct fxregs_state i387 ;
   struct xstate_header header ;
   u8 extended_state_area[0U] ;
} __attribute__((__packed__, __aligned__(64)));
#line 268  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
union fpregs_state {
   struct fregs_state fsave ;
   struct fxregs_state fxsave ;
   struct swregs_state soft ;
   struct xregs_state xsave ;
   u8 __padding[4096U] ;
};
#line 281  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
struct fpu {
   unsigned int last_cpu ;
   unsigned long avx512_timestamp ;
   union fpregs_state state ;
};
#line 73  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/orc_types.h"
struct orc_entry {
   s16 sp_offset ;
   s16 bp_offset ;
   unsigned int sp_reg : 4 ;
   unsigned int bp_reg : 4 ;
   unsigned int type : 2 ;
   unsigned int end : 1 ;
} __attribute__((__packed__));
#line 180  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/processor.h"
struct seq_operations;
#line 478 
struct perf_event;
#line 479  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/processor.h"
struct __anonstruct_mm_segment_t_95 {
   unsigned long seg ;
};
#line 479  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/processor.h"
typedef struct __anonstruct_mm_segment_t_95 mm_segment_t;
#line 485  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/processor.h"
struct thread_struct {
   struct desc_struct tls_array[3U] ;
   unsigned long sp ;
   unsigned short es ;
   unsigned short ds ;
   unsigned short fsindex ;
   unsigned short gsindex ;
   unsigned long fsbase ;
   unsigned long gsbase ;
   struct perf_event *ptrace_bps[4U] ;
   unsigned long debugreg6 ;
   unsigned long ptrace_dr7 ;
   unsigned long cr2 ;
   unsigned long trap_nr ;
   unsigned long error_code ;
   struct io_bitmap *io_bitmap ;
   unsigned long iopl_emul ;
   mm_segment_t addr_limit ;
   unsigned int sig_on_uaccess_err : 1 ;
   unsigned int uaccess_err : 1 ;
   struct fpu fpu ;
};
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/thread_info.h"
struct thread_info {
   unsigned long flags ;
   u32 status ;
};
#line 35  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bottom_half.h"
struct lockdep_map;
#line 55  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockdep.h"
struct lockdep_subclass_key {
   char __one_byte ;
} __attribute__((__packed__));
#line 60  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockdep.h"
union __anonunion_96 {
   struct hlist_node hash_entry ;
   struct lockdep_subclass_key subkeys[8U] ;
};
#line 60  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockdep.h"
struct lock_class_key {
   union __anonunion_96 __anonCompField_lock_class_key_23 ;
};
#line 68 
struct lock_trace;
#line 77  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockdep.h"
struct lock_class {
   struct hlist_node hash_entry ;
   struct list_head lock_entry ;
   struct list_head locks_after ;
   struct list_head locks_before ;
   struct lockdep_subclass_key *key ;
   unsigned int subclass ;
   unsigned int dep_gen_id ;
   unsigned long usage_mask ;
   struct lock_trace *usage_traces[9U] ;
   int name_version ;
   char *name ;
   unsigned long contention_point[4U] ;
   unsigned long contending_point[4U] ;
};
#line 157  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockdep.h"
struct lockdep_map {
   struct lock_class_key *key ;
   struct lock_class *class_cache[2U] ;
   char *name ;
   int cpu ;
   unsigned long ip ;
};
#line 226  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockdep.h"
struct held_lock {
   u64 prev_chain_key ;
   unsigned long acquire_ip ;
   struct lockdep_map *instance ;
   struct lockdep_map *nest_lock ;
   u64 waittime_stamp ;
   u64 holdtime_stamp ;
   unsigned int class_idx : 13 ;
   unsigned int irq_context : 2 ;
   unsigned int trylock : 1 ;
   unsigned int read : 2 ;
   unsigned int check : 1 ;
   unsigned int hardirqs_off : 1 ;
   unsigned int references : 12 ;
   unsigned int pin_count ;
};
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_types.h"
struct raw_spinlock {
   arch_spinlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_types.h"
typedef struct raw_spinlock raw_spinlock_t;
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_types.h"
struct __anonstruct_98 {
   u8 __padding[24U] ;
   struct lockdep_map dep_map ;
};
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_types.h"
union __anonunion_97 {
   struct raw_spinlock rlock ;
   struct __anonstruct_98 __anonCompField___anonunion_97_24 ;
};
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_types.h"
struct spinlock {
   union __anonunion_97 __anonCompField_spinlock_25 ;
};
#line 73  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_types.h"
typedef struct spinlock spinlock_t;
#line 74  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_types.h"
struct __anonstruct_rwlock_t_99 {
   arch_rwlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};
#line 74  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_types.h"
typedef struct __anonstruct_rwlock_t_99 rwlock_t;
#line 57  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
struct mutex;
#line 27  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
struct kmem_cache;
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/wait.h"
struct wait_queue_head {
   spinlock_t lock ;
   struct list_head head ;
};
#line 38  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/wait.h"
typedef struct wait_queue_head wait_queue_head_t;
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/refcount.h"
struct refcount_struct {
   atomic_t refs ;
};
#line 101  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/refcount.h"
typedef struct refcount_struct refcount_t;
#line 305 
enum pid_type {
    PIDTYPE_PID = 0,
    PIDTYPE_TGID = 1,
    PIDTYPE_PGID = 2,
    PIDTYPE_SID = 3,
    PIDTYPE_MAX = 4
};
#line 54  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pid.h"
struct pid_namespace;
#line 54  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pid.h"
struct upid {
   int nr ;
   struct pid_namespace *ns ;
};
#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pid.h"
struct pid {
   refcount_t count ;
   unsigned int level ;
   struct hlist_head tasks[4U] ;
   wait_queue_head_t wait_pidfd ;
   struct callback_head rcu ;
   struct upid numbers[1U] ;
};
#line 84  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/highuid.h"
struct user_namespace;
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uidgid.h"
struct __anonstruct_kuid_t_142 {
   uid_t val ;
};
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uidgid.h"
typedef struct __anonstruct_kuid_t_142 kuid_t;
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uidgid.h"
struct __anonstruct_kgid_t_143 {
   gid_t val ;
};
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uidgid.h"
typedef struct __anonstruct_kgid_t_143 kgid_t;
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/osq_lock.h"
struct optimistic_spin_queue {
   atomic_t tail ;
};
#line 40 
struct ww_acquire_ctx;
#line 53  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mutex.h"
struct mutex {
   atomic_long_t owner ;
   spinlock_t wait_lock ;
   struct optimistic_spin_queue osq ;
   struct list_head wait_list ;
   void *magic ;
   struct lockdep_map dep_map ;
};
#line 72  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mutex.h"
struct mutex_waiter {
   struct list_head list ;
   struct task_struct *task ;
   struct ww_acquire_ctx *ww_ctx ;
   void *magic ;
};
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/seqlock.h"
struct seqcount {
   unsigned int sequence ;
   struct lockdep_map dep_map ;
};
#line 53  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/seqlock.h"
typedef struct seqcount seqcount_t;
#line 403  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/seqlock.h"
struct __anonstruct_seqlock_t_152 {
   struct seqcount seqcount ;
   spinlock_t lock ;
};
#line 403  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/seqlock.h"
typedef struct __anonstruct_seqlock_t_152 seqlock_t;
#line 161  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timex.h"
typedef s32 old_time32_t;
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/time32.h"
struct old_timespec32 {
   old_time32_t tv_sec ;
   s32 tv_nsec ;
};
#line 461  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jiffies.h"
typedef s64 ktime_t;
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
struct timer_list {
   struct hlist_node entry ;
   unsigned long expires ;
   void (*function)(struct timer_list *) ;
   u32 flags ;
   struct lockdep_map lockdep_map ;
};
#line 196 
struct hrtimer;
#line 197 
enum hrtimer_restart;
#line 221 
struct workqueue_struct;
#line 222 
struct work_struct;
#line 102  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/workqueue.h"
struct work_struct {
   atomic_long_t data ;
   struct list_head entry ;
   void (*func)(struct work_struct *) ;
   struct lockdep_map lockdep_map ;
};
#line 115  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/workqueue.h"
struct delayed_work {
   struct work_struct work ;
   struct timer_list timer ;
   struct workqueue_struct *wq ;
   int cpu ;
};
#line 124  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/workqueue.h"
struct rcu_work {
   struct work_struct work ;
   struct callback_head rcu ;
   struct workqueue_struct *wq ;
};
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable-types.h"
struct rhash_head {
   struct rhash_head *next ;
};
#line 25 
struct bucket_table;
#line 33 
struct rhashtable;
#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable-types.h"
struct rhashtable_compare_arg {
   struct rhashtable *ht ;
   void *key ;
};
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable-types.h"
struct rhashtable_params {
   u16 nelem_hint ;
   u16 key_len ;
   u16 key_offset ;
   u16 head_offset ;
   unsigned int max_size ;
   u16 min_size ;
   bool automatic_shrinking ;
   u32 (*hashfn)(void *, u32 , u32 ) ;
   u32 (*obj_hashfn)(void *, u32 , u32 ) ;
   int (*obj_cmpfn)(struct rhashtable_compare_arg *, void *) ;
};
#line 81  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable-types.h"
struct rhashtable {
   struct bucket_table *tbl ;
   unsigned int key_len ;
   unsigned int max_elems ;
   struct rhashtable_params p ;
   bool rhlist ;
   struct work_struct run_work ;
   struct mutex mutex ;
   spinlock_t lock ;
   atomic_t nelems ;
};
#line 67  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/sem.h"
struct sem_undo_list;
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sem.h"
struct sysv_sem {
   struct sem_undo_list *undo_list ;
};
#line 13  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/shm.h"
struct sysv_shm {
   struct list_head shm_clist ;
};
#line 83  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/plist.h"
struct plist_node {
   int prio ;
   struct list_head prio_list ;
   struct list_head node_list ;
};
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rbtree.h"
struct rb_node {
   unsigned long __rb_parent_color ;
   struct rb_node *rb_right ;
   struct rb_node *rb_left ;
} __attribute__((__aligned__(8)));
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rbtree.h"
struct rb_root {
   struct rb_node *rb_node ;
};
#line 125  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rbtree.h"
struct rb_root_cached {
   struct rb_root rb_root ;
   struct rb_node *rb_leftmost ;
};
#line 54  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/llist.h"
struct llist_node;
#line 58  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/llist.h"
struct llist_node {
   struct llist_node *next ;
};
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/smp.h"
struct __call_single_data {
   struct llist_node llist ;
   void (*func)(void *) ;
   void *info ;
   unsigned int flags ;
};
#line 153  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mpspec.h"
struct __anonstruct_nodemask_t_205 {
   unsigned long bits[16U] ;
};
#line 153  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mpspec.h"
typedef struct __anonstruct_nodemask_t_205 nodemask_t;
#line 35  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rwsem.h"
struct rw_semaphore {
   atomic_long_t count ;
   atomic_long_t owner ;
   struct optimistic_spin_queue osq ;
   raw_spinlock_t wait_lock ;
   struct list_head wait_list ;
   void *magic ;
   struct lockdep_map dep_map ;
};
#line 194 
struct ldt_struct;
#line 194 
struct vdso_image;
#line 194  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rwsem.h"
struct __anonstruct_mm_context_t_206 {
   u64 ctx_id ;
   atomic64_t tlb_gen ;
   struct rw_semaphore ldt_usr_sem ;
   struct ldt_struct *ldt ;
   unsigned short ia32_compat ;
   struct mutex lock ;
   void *vdso ;
   struct vdso_image *vdso_image ;
   atomic_t perf_rdpmc_allowed ;
   u16 pkey_allocation_map ;
   s16 execute_only_pkey ;
   void *bd_addr ;
};
#line 194  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rwsem.h"
typedef struct __anonstruct_mm_context_t_206 mm_context_t;
#line 440  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/io.h"
struct fwnode_operations;
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fwnode.h"
struct fwnode_handle {
   struct fwnode_handle *secondary ;
   struct fwnode_operations *ops ;
   struct device *dev ;
};
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fwnode.h"
struct fwnode_endpoint {
   unsigned int port ;
   unsigned int id ;
   struct fwnode_handle *local_fwnode ;
};
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fwnode.h"
struct fwnode_reference_args {
   struct fwnode_handle *fwnode ;
   unsigned int nargs ;
   u64 args[8U] ;
};
#line 110  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fwnode.h"
struct fwnode_operations {
   struct fwnode_handle *(*get)(struct fwnode_handle *) ;
   void (*put)(struct fwnode_handle *) ;
   bool (*device_is_available)(struct fwnode_handle *) ;
   void *(*device_get_match_data)(struct fwnode_handle *, struct device *) ;
   bool (*property_present)(struct fwnode_handle *, char *) ;
   int (*property_read_int_array)(struct fwnode_handle *, char *, unsigned int , void *, size_t ) ;
   int (*property_read_string_array)(struct fwnode_handle *, char *, char **, size_t ) ;
   char *(*get_name)(struct fwnode_handle *) ;
   char *(*get_name_prefix)(struct fwnode_handle *) ;
   struct fwnode_handle *(*get_parent)(struct fwnode_handle *) ;
   struct fwnode_handle *(*get_next_child_node)(struct fwnode_handle *, struct fwnode_handle *) ;
   struct fwnode_handle *(*get_named_child_node)(struct fwnode_handle *, char *) ;
   int (*get_reference_args)(struct fwnode_handle *, char *, char *, unsigned int , unsigned int , struct fwnode_reference_args *) ;
   struct fwnode_handle *(*graph_get_next_endpoint)(struct fwnode_handle *, struct fwnode_handle *) ;
   struct fwnode_handle *(*graph_get_remote_endpoint)(struct fwnode_handle *) ;
   struct fwnode_handle *(*graph_get_port_parent)(struct fwnode_handle *) ;
   int (*graph_parse_endpoint)(struct fwnode_handle *, struct fwnode_endpoint *) ;
   int (*add_links)(struct fwnode_handle *, struct device *) ;
};
#line 302  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/overflow.h"
struct notifier_block;
#line 53  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/vmalloc.h"
struct vm_struct {
   struct vm_struct *next ;
   void *addr ;
   unsigned long size ;
   unsigned long flags ;
   struct page **pages ;
   unsigned int nr_pages ;
   phys_addr_t phys_addr ;
   void *caller ;
};
#line 7  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/tlbbatch.h"
struct arch_tlbflush_unmap_batch {
   struct cpumask cpumask ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types_task.h"
struct vmacache {
   u64 seqnum ;
   struct vm_area_struct *vmas[4U] ;
};
#line 54  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types_task.h"
struct task_rss_stat {
   int events ;
   int count[4U] ;
};
#line 60  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types_task.h"
struct mm_rss_stat {
   atomic_long_t count[4U] ;
};
#line 64  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types_task.h"
struct page_frag {
   struct page *page ;
   __u32 offset ;
   __u32 size ;
};
#line 76  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types_task.h"
struct tlbflush_unmap_batch {
   struct arch_tlbflush_unmap_batch arch ;
   bool flush_required ;
   bool writable ;
};
#line 26  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/completion.h"
struct completion {
   unsigned int done ;
   wait_queue_head_t wait ;
};
#line 120 
struct inode;
#line 67  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rcu_segcblist.h"
struct rcu_segcblist {
   struct callback_head *head ;
   struct callback_head **tails[4U] ;
   unsigned long gp_seq[4U] ;
   atomic_long_t len ;
   long len_lazy ;
   u8 enabled ;
   u8 offloaded ;
};
#line 80 
struct srcu_struct;
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/srcu.h"
struct srcu_node;
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/srcutree.h"
struct srcu_data {
   unsigned long srcu_lock_count[2U] ;
   unsigned long srcu_unlock_count[2U] ;
   spinlock_t lock ;
   struct rcu_segcblist srcu_cblist ;
   unsigned long srcu_gp_seq_needed ;
   unsigned long srcu_gp_seq_needed_exp ;
   bool srcu_cblist_invoking ;
   struct timer_list delay_work ;
   struct work_struct work ;
   struct callback_head srcu_barrier_head ;
   struct srcu_node *mynode ;
   unsigned long grpmask ;
   int cpu ;
   struct srcu_struct *ssp ;
};
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/srcutree.h"
struct srcu_node {
   spinlock_t lock ;
   unsigned long srcu_have_cbs[4U] ;
   unsigned long srcu_data_have_cbs[4U] ;
   unsigned long srcu_gp_seq_needed_exp ;
   struct srcu_node *srcu_parent ;
   int grplo ;
   int grphi ;
};
#line 64  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/srcutree.h"
struct srcu_struct {
   struct srcu_node node[521U] ;
   struct srcu_node *level[4U] ;
   struct mutex srcu_cb_mutex ;
   spinlock_t lock ;
   struct mutex srcu_gp_mutex ;
   unsigned int srcu_idx ;
   unsigned long srcu_gp_seq ;
   unsigned long srcu_gp_seq_needed ;
   unsigned long srcu_gp_seq_needed_exp ;
   unsigned long srcu_last_gp_end ;
   struct srcu_data *sda ;
   unsigned long srcu_barrier_seq ;
   struct mutex srcu_barrier_mutex ;
   struct completion srcu_barrier_completion ;
   atomic_t srcu_barrier_cpu_cnt ;
   struct delayed_work work ;
   struct lockdep_map dep_map ;
};
#line 54  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/notifier.h"
struct notifier_block {
   int (*notifier_call)(struct notifier_block *, unsigned long , void *) ;
   struct notifier_block *next ;
   int priority ;
};
#line 70  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/notifier.h"
struct raw_notifier_head {
   struct notifier_block *head ;
};
#line 50  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/uprobes.h"
struct arch_uprobe_task {
   unsigned long saved_scratch_register ;
   unsigned int saved_trap_nr ;
   unsigned int saved_tf ;
};
#line 57 
enum uprobe_task_state {
    UTASK_RUNNING = 0,
    UTASK_SSTEP = 1,
    UTASK_SSTEP_ACK = 2,
    UTASK_SSTEP_TRAPPED = 3
};
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uprobes.h"
struct __anonstruct_222 {
   struct arch_uprobe_task autask ;
   unsigned long vaddr ;
};
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uprobes.h"
struct __anonstruct_223 {
   struct callback_head dup_xol_work ;
   unsigned long dup_xol_addr ;
};
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uprobes.h"
union __anonunion_221 {
   struct __anonstruct_222 __anonCompField___anonunion_221_29 ;
   struct __anonstruct_223 __anonCompField___anonunion_221_30 ;
};
#line 61 
struct uprobe;
#line 61 
struct return_instance;
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uprobes.h"
struct uprobe_task {
   enum uprobe_task_state state ;
   union __anonunion_221 __anonCompField_uprobe_task_31 ;
   struct uprobe *active_uprobe ;
   unsigned long xol_vaddr ;
   struct return_instance *return_instances ;
   unsigned int depth ;
};
#line 83  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uprobes.h"
struct return_instance {
   struct uprobe *uprobe ;
   unsigned long func ;
   unsigned long stack ;
   unsigned long orig_ret_vaddr ;
   bool chained ;
   struct return_instance *next ;
};
#line 98 
struct xol_area;
#line 101  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uprobes.h"
struct uprobes_state {
   struct xol_area *xol_area ;
};
#line 140 
struct address_space;
#line 141 
struct mem_cgroup;
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct __anonstruct_225 {
   struct list_head lru ;
   struct address_space *mapping ;
   unsigned long index ;
   unsigned long private ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct __anonstruct_226 {
   dma_addr_t dma_addr ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct __anonstruct_229 {
   struct page *next ;
   int pages ;
   int pobjects ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
union __anonunion_228 {
   struct list_head slab_list ;
   struct __anonstruct_229 __anonCompField___anonunion_228_34 ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct __anonstruct_231 {
   unsigned int inuse : 16 ;
   unsigned int objects : 15 ;
   unsigned int frozen : 1 ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
union __anonunion_230 {
   void *s_mem ;
   unsigned long counters ;
   struct __anonstruct_231 __anonCompField___anonunion_230_36 ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct __anonstruct_227 {
   union __anonunion_228 __anonCompField___anonstruct_227_35 ;
   struct kmem_cache *slab_cache ;
   void *freelist ;
   union __anonunion_230 __anonCompField___anonstruct_227_37 ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct __anonstruct_232 {
   unsigned long compound_head ;
   unsigned char compound_dtor ;
   unsigned char compound_order ;
   atomic_t compound_mapcount ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct __anonstruct_233 {
   unsigned long _compound_pad_1 ;
   unsigned long _compound_pad_2 ;
   struct list_head deferred_list ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
union __anonunion_235 {
   struct mm_struct *pt_mm ;
   atomic_t pt_frag_refcount ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct __anonstruct_234 {
   unsigned long _pt_pad_1 ;
   pgtable_t pmd_huge_pte ;
   unsigned long _pt_pad_2 ;
   union __anonunion_235 __anonCompField___anonstruct_234_41 ;
   spinlock_t *ptl ;
};
#line 68 
struct dev_pagemap;
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct __anonstruct_236 {
   struct dev_pagemap *pgmap ;
   void *zone_device_data ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
union __anonunion_224 {
   struct __anonstruct_225 __anonCompField___anonunion_224_32 ;
   struct __anonstruct_226 __anonCompField___anonunion_224_33 ;
   struct __anonstruct_227 __anonCompField___anonunion_224_38 ;
   struct __anonstruct_232 __anonCompField___anonunion_224_39 ;
   struct __anonstruct_233 __anonCompField___anonunion_224_40 ;
   struct __anonstruct_234 __anonCompField___anonunion_224_42 ;
   struct __anonstruct_236 __anonCompField___anonunion_224_43 ;
   struct callback_head callback_head ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
union __anonunion_237 {
   atomic_t _mapcount ;
   unsigned int page_type ;
   unsigned int active ;
   int units ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct page {
   unsigned long flags ;
   union __anonunion_224 __anonCompField_page_44 ;
   union __anonunion_237 __anonCompField_page_45 ;
   atomic_t _refcount ;
   struct mem_cgroup *mem_cgroup ;
} __attribute__((__aligned__(16)));
#line 278 
struct userfaultfd_ctx;
#line 278  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct vm_userfaultfd_ctx {
   struct userfaultfd_ctx *ctx ;
};
#line 292  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct __anonstruct_shared_238 {
   struct rb_node rb ;
   unsigned long rb_subtree_last ;
};
#line 292 
struct anon_vma;
#line 292 
struct vm_operations_struct;
#line 292 
struct mempolicy;
#line 292  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct vm_area_struct {
   unsigned long vm_start ;
   unsigned long vm_end ;
   struct vm_area_struct *vm_next ;
   struct vm_area_struct *vm_prev ;
   struct rb_node vm_rb ;
   unsigned long rb_subtree_gap ;
   struct mm_struct *vm_mm ;
   pgprot_t vm_page_prot ;
   unsigned long vm_flags ;
   struct __anonstruct_shared_238 shared ;
   struct list_head anon_vma_chain ;
   struct anon_vma *anon_vma ;
   struct vm_operations_struct *vm_ops ;
   unsigned long vm_pgoff ;
   struct file *vm_file ;
   void *vm_private_data ;
   atomic_long_t swap_readahead_info ;
   struct mempolicy *vm_policy ;
   struct vm_userfaultfd_ctx vm_userfaultfd_ctx ;
} __attribute__((__designated_init__));
#line 358  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct core_thread {
   struct task_struct *task ;
   struct core_thread *next ;
};
#line 363  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct core_state {
   atomic_t nr_threads ;
   struct core_thread dumper ;
   struct completion startup ;
};
#line 368 
struct kioctx_table;
#line 370 
struct linux_binfmt;
#line 370 
struct mmu_notifier_mm;
#line 370  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct __anonstruct_239 {
   struct vm_area_struct *mmap ;
   struct rb_root mm_rb ;
   u64 vmacache_seqnum ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   unsigned long mmap_base ;
   unsigned long mmap_legacy_base ;
   unsigned long mmap_compat_base ;
   unsigned long mmap_compat_legacy_base ;
   unsigned long task_size ;
   unsigned long highest_vm_end ;
   pgd_t *pgd ;
   atomic_t membarrier_state ;
   atomic_t mm_users ;
   atomic_t mm_count ;
   atomic_long_t pgtables_bytes ;
   int map_count ;
   spinlock_t page_table_lock ;
   struct rw_semaphore mmap_sem ;
   struct list_head mmlist ;
   unsigned long hiwater_rss ;
   unsigned long hiwater_vm ;
   unsigned long total_vm ;
   unsigned long locked_vm ;
   atomic64_t pinned_vm ;
   unsigned long data_vm ;
   unsigned long exec_vm ;
   unsigned long stack_vm ;
   unsigned long def_flags ;
   spinlock_t arg_lock ;
   unsigned long start_code ;
   unsigned long end_code ;
   unsigned long start_data ;
   unsigned long end_data ;
   unsigned long start_brk ;
   unsigned long brk ;
   unsigned long start_stack ;
   unsigned long arg_start ;
   unsigned long arg_end ;
   unsigned long env_start ;
   unsigned long env_end ;
   unsigned long saved_auxv[46U] ;
   struct mm_rss_stat rss_stat ;
   struct linux_binfmt *binfmt ;
   mm_context_t context ;
   unsigned long flags ;
   struct core_state *core_state ;
   spinlock_t ioctx_lock ;
   struct kioctx_table *ioctx_table ;
   struct task_struct *owner ;
   struct user_namespace *user_ns ;
   struct file *exe_file ;
   struct mmu_notifier_mm *mmu_notifier_mm ;
   unsigned long numa_next_scan ;
   unsigned long numa_scan_offset ;
   int numa_scan_seq ;
   atomic_t tlb_flush_pending ;
   bool tlb_flush_batched ;
   struct uprobes_state uprobes_state ;
   atomic_long_t hugetlb_usage ;
   struct work_struct async_put_work ;
} __attribute__((__designated_init__));
#line 370  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct mm_struct {
   struct __anonstruct_239 __anonCompField_mm_struct_46 ;
   unsigned long cpu_bitmap[] ;
};
#line 642 
struct vm_fault;
#line 643  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
typedef unsigned int vm_fault_t;
#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timerqueue.h"
struct timerqueue_node {
   struct rb_node node ;
   ktime_t expires ;
};
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timerqueue.h"
struct timerqueue_head {
   struct rb_root_cached rb_root ;
};
#line 60 
struct hrtimer_clock_base;
#line 61 
struct hrtimer_cpu_base;
#line 80 
enum hrtimer_restart {
    HRTIMER_NORESTART = 0,
    HRTIMER_RESTART = 1
};
#line 117  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/hrtimer.h"
struct hrtimer {
   struct timerqueue_node node ;
   ktime_t _softexpires ;
   enum hrtimer_restart (*function)(struct hrtimer *) ;
   struct hrtimer_clock_base *base ;
   u8 state ;
   u8 is_rel ;
   u8 is_soft ;
   u8 is_hard ;
};
#line 158  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/hrtimer.h"
struct hrtimer_clock_base {
   struct hrtimer_cpu_base *cpu_base ;
   unsigned int index ;
   clockid_t clockid ;
   seqcount_t seq ;
   struct hrtimer *running ;
   struct timerqueue_head active ;
   ktime_t (*get_time)(void) ;
   ktime_t offset ;
} __attribute__((__aligned__(64)));
#line 213  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/hrtimer.h"
struct hrtimer_cpu_base {
   raw_spinlock_t lock ;
   unsigned int cpu ;
   unsigned int active_bases ;
   unsigned int clock_was_set_seq ;
   unsigned int hres_active : 1 ;
   unsigned int in_hrtirq : 1 ;
   unsigned int hang_detected : 1 ;
   unsigned int softirq_activated : 1 ;
   unsigned int nr_events ;
   unsigned short nr_retries ;
   unsigned short nr_hangs ;
   unsigned int max_hang_time ;
   ktime_t expires_next ;
   struct hrtimer *next_timer ;
   ktime_t softirq_expires_next ;
   struct hrtimer *softirq_next_timer ;
   struct hrtimer_clock_base clock_base[8U] ;
} __attribute__((__aligned__(64)));
#line 40  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/seccomp.h"
struct seccomp_filter;
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/seccomp.h"
struct seccomp {
   int mode ;
   struct seccomp_filter *filter ;
};
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/resource.h"
struct rlimit {
   __kernel_ulong_t rlim_cur ;
   __kernel_ulong_t rlim_max ;
};
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/latencytop.h"
struct latency_record {
   unsigned long backtrace[12U] ;
   unsigned int count ;
   unsigned long time ;
   unsigned long max ;
};
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched/types.h"
struct task_cputime {
   u64 stime ;
   u64 utime ;
   unsigned long long sum_exec_runtime ;
};
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/signal.h"
struct __anonstruct_sigset_t_252 {
   unsigned long sig[1U] ;
};
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/signal.h"
typedef struct __anonstruct_sigset_t_252 sigset_t;
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/signal.h"
typedef void __signalfn_t(int );
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/signal-defs.h"
typedef __signalfn_t *__sighandler_t;
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/signal-defs.h"
typedef void __restorefn_t(void);
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/signal-defs.h"
typedef __restorefn_t *__sigrestore_t;
#line 8  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
union sigval {
   int sival_int ;
   void *sival_ptr ;
};
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
typedef union sigval sigval_t;
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__kill_253 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__timer_254 {
   __kernel_timer_t _tid ;
   int _overrun ;
   sigval_t _sigval ;
   int _sys_private ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__rt_255 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   sigval_t _sigval ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigchld_256 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   int _status ;
   __kernel_clock_t _utime ;
   __kernel_clock_t _stime ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__addr_bnd_259 {
   char _dummy_bnd[8U] ;
   void *_lower ;
   void *_upper ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__addr_pkey_260 {
   char _dummy_pkey[8U] ;
   __u32 _pkey ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
union __anonunion_258 {
   short _addr_lsb ;
   struct __anonstruct__addr_bnd_259 _addr_bnd ;
   struct __anonstruct__addr_pkey_260 _addr_pkey ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigfault_257 {
   void *_addr ;
   union __anonunion_258 __anonCompField___anonstruct__sigfault_257_47 ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigpoll_261 {
   long _band ;
   int _fd ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigsys_262 {
   void *_call_addr ;
   int _syscall ;
   unsigned int _arch ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
union __sifields {
   struct __anonstruct__kill_253 _kill ;
   struct __anonstruct__timer_254 _timer ;
   struct __anonstruct__rt_255 _rt ;
   struct __anonstruct__sigchld_256 _sigchld ;
   struct __anonstruct__sigfault_257 _sigfault ;
   struct __anonstruct__sigpoll_261 _sigpoll ;
   struct __anonstruct__sigsys_262 _sigsys ;
};
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/signal_types.h"
struct __anonstruct_267 {
   int si_signo ;
   int si_errno ;
   int si_code ;
   union __sifields _sifields ;
};
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/signal_types.h"
struct kernel_siginfo {
   struct __anonstruct_267 __anonCompField_kernel_siginfo_50 ;
};
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/signal_types.h"
typedef struct kernel_siginfo kernel_siginfo_t;
#line 20 
struct user_struct;
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/signal_types.h"
struct sigpending {
   struct list_head list ;
   sigset_t signal ;
};
#line 35  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/signal_types.h"
struct sigaction {
   __sighandler_t sa_handler ;
   unsigned long sa_flags ;
   __sigrestore_t sa_restorer ;
   sigset_t sa_mask ;
};
#line 49  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/signal_types.h"
struct k_sigaction {
   struct sigaction sa ;
};
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/task_io_accounting.h"
struct task_io_accounting {
   u64 rchar ;
   u64 wchar ;
   u64 syscr ;
   u64 syscw ;
   u64 read_bytes ;
   u64 write_bytes ;
   u64 cancelled_write_bytes ;
};
#line 107  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/posix-timers.h"
struct posix_cputimer_base {
   u64 nextevt ;
   struct timerqueue_head tqhead ;
};
#line 122  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/posix-timers.h"
struct posix_cputimers {
   struct posix_cputimer_base bases[3U] ;
   unsigned int timers_active ;
   unsigned int expiry_active ;
};
#line 193 
struct signal_struct;
#line 62  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/rseq.h"
union __anonunion_rseq_cs_272 {
   __u64 ptr64 ;
   __u64 ptr ;
};
#line 62  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/rseq.h"
struct rseq {
   __u32 cpu_id_start ;
   __u32 cpu_id ;
   union __anonunion_rseq_cs_272 rseq_cs ;
   __u32 flags ;
} __attribute__((__aligned__(32)));
#line 146 
struct audit_context;
#line 147 
struct backing_dev_info;
#line 148 
struct bio_list;
#line 149 
struct blk_plug;
#line 150 
struct capture_control;
#line 151 
struct cfs_rq;
#line 152 
struct fs_struct;
#line 153 
struct futex_pi_state;
#line 154 
struct io_context;
#line 155 
struct nameidata;
#line 156 
struct nsproxy;
#line 157 
struct perf_event_context;
#line 158 
struct pipe_inode_info;
#line 160 
struct reclaim_state;
#line 161 
struct robust_list_head;
#line 166 
struct sighand_struct;
#line 167 
struct task_delay_info;
#line 168 
struct task_group;
#line 242  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct prev_cputime {
   u64 utime ;
   u64 stime ;
   raw_spinlock_t lock ;
};
#line 290  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct sched_info {
   unsigned long pcount ;
   unsigned long long run_delay ;
   unsigned long long last_arrival ;
   unsigned long long last_queued ;
};
#line 325  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct load_weight {
   unsigned long weight ;
   u32 inv_weight ;
};
#line 352  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct util_est {
   unsigned int enqueued ;
   unsigned int ewma ;
} __attribute__((__aligned__(8)));
#line 401  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct sched_avg {
   u64 last_update_time ;
   u64 load_sum ;
   u64 runnable_load_sum ;
   u32 util_sum ;
   u32 period_contrib ;
   unsigned long load_avg ;
   unsigned long runnable_load_avg ;
   unsigned long util_avg ;
   struct util_est util_est ;
} __attribute__((__aligned__(64)));
#line 413  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct sched_statistics {
   u64 wait_start ;
   u64 wait_max ;
   u64 wait_count ;
   u64 wait_sum ;
   u64 iowait_count ;
   u64 iowait_sum ;
   u64 sleep_start ;
   u64 sleep_max ;
   s64 sum_sleep_runtime ;
   u64 block_start ;
   u64 block_max ;
   u64 exec_max ;
   u64 slice_max ;
   u64 nr_migrations_cold ;
   u64 nr_failed_migrations_affine ;
   u64 nr_failed_migrations_running ;
   u64 nr_failed_migrations_hot ;
   u64 nr_forced_migrations ;
   u64 nr_wakeups ;
   u64 nr_wakeups_sync ;
   u64 nr_wakeups_migrate ;
   u64 nr_wakeups_local ;
   u64 nr_wakeups_remote ;
   u64 nr_wakeups_affine ;
   u64 nr_wakeups_affine_attempts ;
   u64 nr_wakeups_passive ;
   u64 nr_wakeups_idle ;
};
#line 449  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct sched_entity {
   struct load_weight load ;
   unsigned long runnable_weight ;
   struct rb_node run_node ;
   struct list_head group_node ;
   unsigned int on_rq ;
   u64 exec_start ;
   u64 sum_exec_runtime ;
   u64 vruntime ;
   u64 prev_sum_exec_runtime ;
   u64 nr_migrations ;
   struct sched_statistics statistics ;
   int depth ;
   struct sched_entity *parent ;
   struct cfs_rq *cfs_rq ;
   struct cfs_rq *my_q ;
   struct sched_avg avg ;
};
#line 486 
struct rt_rq;
#line 486  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct sched_rt_entity {
   struct list_head run_list ;
   unsigned long timeout ;
   unsigned long watchdog_stamp ;
   unsigned int time_slice ;
   unsigned short on_rq ;
   unsigned short on_list ;
   struct sched_rt_entity *back ;
   struct sched_rt_entity *parent ;
   struct rt_rq *rt_rq ;
   struct rt_rq *my_q ;
} __attribute__((__designated_init__));
#line 504  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct sched_dl_entity {
   struct rb_node rb_node ;
   u64 dl_runtime ;
   u64 dl_deadline ;
   u64 dl_period ;
   u64 dl_bw ;
   u64 dl_density ;
   s64 runtime ;
   u64 deadline ;
   unsigned int flags ;
   unsigned int dl_throttled : 1 ;
   unsigned int dl_boosted : 1 ;
   unsigned int dl_yielded : 1 ;
   unsigned int dl_non_contending : 1 ;
   unsigned int dl_overrun : 1 ;
   struct hrtimer dl_timer ;
   struct hrtimer inactive_timer ;
};
#line 600  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct uclamp_se {
   unsigned int value : 11 ;
   unsigned int bucket_id : 3 ;
   unsigned int active : 1 ;
   unsigned int user_defined : 1 ;
};
#line 625  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct wake_q_node {
   struct wake_q_node *next ;
};
#line 629 
struct sched_class;
#line 629 
struct cred;
#line 629 
struct key;
#line 629 
struct files_struct;
#line 629 
struct rt_mutex_waiter;
#line 629 
struct css_set;
#line 629 
struct compat_robust_list_head;
#line 629 
struct numa_group;
#line 629  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
union __anonunion_274 {
   refcount_t rcu_users ;
   struct callback_head rcu ;
};
#line 629 
struct ftrace_ret_stack;
#line 629 
struct kcov;
#line 629 
struct request_queue;
#line 629  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct task_struct {
   struct thread_info thread_info ;
   long state ;
   void *stack ;
   refcount_t usage ;
   unsigned int flags ;
   unsigned int ptrace ;
   struct llist_node wake_entry ;
   int on_cpu ;
   unsigned int cpu ;
   unsigned int wakee_flips ;
   unsigned long wakee_flip_decay_ts ;
   struct task_struct *last_wakee ;
   int recent_used_cpu ;
   int wake_cpu ;
   int on_rq ;
   int prio ;
   int static_prio ;
   int normal_prio ;
   unsigned int rt_priority ;
   struct sched_class *sched_class ;
   struct sched_entity se ;
   struct sched_rt_entity rt ;
   struct task_group *sched_task_group ;
   struct sched_dl_entity dl ;
   struct uclamp_se uclamp_req[2U] ;
   struct uclamp_se uclamp[2U] ;
   struct hlist_head preempt_notifiers ;
   unsigned int btrace_seq ;
   unsigned int policy ;
   int nr_cpus_allowed ;
   cpumask_t *cpus_ptr ;
   cpumask_t cpus_mask ;
   unsigned long rcu_tasks_nvcsw ;
   u8 rcu_tasks_holdout ;
   u8 rcu_tasks_idx ;
   int rcu_tasks_idle_cpu ;
   struct list_head rcu_tasks_holdout_list ;
   struct sched_info sched_info ;
   struct list_head tasks ;
   struct plist_node pushable_tasks ;
   struct rb_node pushable_dl_tasks ;
   struct mm_struct *mm ;
   struct mm_struct *active_mm ;
   struct vmacache vmacache ;
   struct task_rss_stat rss_stat ;
   int exit_state ;
   int exit_code ;
   int exit_signal ;
   int pdeath_signal ;
   unsigned long jobctl ;
   unsigned int personality ;
   unsigned int sched_reset_on_fork : 1 ;
   unsigned int sched_contributes_to_load : 1 ;
   unsigned int sched_migrated : 1 ;
   unsigned int sched_remote_wakeup : 1 ;
   unsigned int sched_psi_wake_requeue : 1 ;
   unsigned int  ;
   unsigned int in_execve : 1 ;
   unsigned int in_iowait : 1 ;
   unsigned int restore_sigmask : 1 ;
   unsigned int in_user_fault : 1 ;
   unsigned int brk_randomized : 1 ;
   unsigned int no_cgroup_migration : 1 ;
   unsigned int frozen : 1 ;
   unsigned int use_memdelay : 1 ;
   unsigned long atomic_flags ;
   struct restart_block restart_block ;
   pid_t pid ;
   pid_t tgid ;
   unsigned long stack_canary ;
   struct task_struct *real_parent ;
   struct task_struct *parent ;
   struct list_head children ;
   struct list_head sibling ;
   struct task_struct *group_leader ;
   struct list_head ptraced ;
   struct list_head ptrace_entry ;
   struct pid *thread_pid ;
   struct hlist_node pid_links[4U] ;
   struct list_head thread_group ;
   struct list_head thread_node ;
   struct completion *vfork_done ;
   int *set_child_tid ;
   int *clear_child_tid ;
   u64 utime ;
   u64 stime ;
   u64 gtime ;
   struct prev_cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   u64 start_time ;
   u64 start_boottime ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   struct posix_cputimers posix_cputimers ;
   struct cred *ptracer_cred ;
   struct cred *real_cred ;
   struct cred *cred ;
   struct key *cached_requested_key ;
   char comm[16U] ;
   struct nameidata *nameidata ;
   struct sysv_sem sysvsem ;
   struct sysv_shm sysvshm ;
   unsigned long last_switch_count ;
   unsigned long last_switch_time ;
   struct fs_struct *fs ;
   struct files_struct *files ;
   struct nsproxy *nsproxy ;
   struct signal_struct *signal ;
   struct sighand_struct *sighand ;
   sigset_t blocked ;
   sigset_t real_blocked ;
   sigset_t saved_sigmask ;
   struct sigpending pending ;
   unsigned long sas_ss_sp ;
   size_t sas_ss_size ;
   unsigned int sas_ss_flags ;
   struct callback_head *task_works ;
   struct audit_context *audit_context ;
   kuid_t loginuid ;
   unsigned int sessionid ;
   struct seccomp seccomp ;
   u32 parent_exec_id ;
   u32 self_exec_id ;
   spinlock_t alloc_lock ;
   raw_spinlock_t pi_lock ;
   struct wake_q_node wake_q ;
   struct rb_root_cached pi_waiters ;
   struct task_struct *pi_top_task ;
   struct rt_mutex_waiter *pi_blocked_on ;
   struct mutex_waiter *blocked_on ;
   int non_block_count ;
   unsigned int irq_events ;
   unsigned long hardirq_enable_ip ;
   unsigned long hardirq_disable_ip ;
   unsigned int hardirq_enable_event ;
   unsigned int hardirq_disable_event ;
   int hardirqs_enabled ;
   int hardirq_context ;
   unsigned long softirq_disable_ip ;
   unsigned long softirq_enable_ip ;
   unsigned int softirq_disable_event ;
   unsigned int softirq_enable_event ;
   int softirqs_enabled ;
   int softirq_context ;
   u64 curr_chain_key ;
   int lockdep_depth ;
   unsigned int lockdep_recursion ;
   struct held_lock held_locks[48U] ;
   unsigned int in_ubsan ;
   void *journal_info ;
   struct bio_list *bio_list ;
   struct blk_plug *plug ;
   struct reclaim_state *reclaim_state ;
   struct backing_dev_info *backing_dev_info ;
   struct io_context *io_context ;
   struct capture_control *capture_control ;
   unsigned long ptrace_message ;
   kernel_siginfo_t *last_siginfo ;
   struct task_io_accounting ioac ;
   unsigned int psi_flags ;
   u64 acct_rss_mem1 ;
   u64 acct_vm_mem1 ;
   u64 acct_timexpd ;
   nodemask_t mems_allowed ;
   seqcount_t mems_allowed_seq ;
   int cpuset_mem_spread_rotor ;
   int cpuset_slab_spread_rotor ;
   struct css_set *cgroups ;
   struct list_head cg_list ;
   u32 closid ;
   u32 rmid ;
   struct robust_list_head *robust_list ;
   struct compat_robust_list_head *compat_robust_list ;
   struct list_head pi_state_list ;
   struct futex_pi_state *pi_state_cache ;
   struct mutex futex_exit_mutex ;
   unsigned int futex_state ;
   struct perf_event_context *perf_event_ctxp[2U] ;
   struct mutex perf_event_mutex ;
   struct list_head perf_event_list ;
   struct mempolicy *mempolicy ;
   short il_prev ;
   short pref_node_fork ;
   int numa_scan_seq ;
   unsigned int numa_scan_period ;
   unsigned int numa_scan_period_max ;
   int numa_preferred_nid ;
   unsigned long numa_migrate_retry ;
   u64 node_stamp ;
   u64 last_task_numa_placement ;
   u64 last_sum_exec_runtime ;
   struct callback_head numa_work ;
   struct numa_group *numa_group ;
   unsigned long *numa_faults ;
   unsigned long total_numa_faults ;
   unsigned long numa_faults_locality[3U] ;
   unsigned long numa_pages_migrated ;
   struct rseq *rseq ;
   u32 rseq_sig ;
   unsigned long rseq_event_mask ;
   struct tlbflush_unmap_batch tlb_ubc ;
   union __anonunion_274 __anonCompField_task_struct_52 ;
   struct pipe_inode_info *splice_pipe ;
   struct page_frag task_frag ;
   struct task_delay_info *delays ;
   int make_it_fail ;
   unsigned int fail_nth ;
   int nr_dirtied ;
   int nr_dirtied_pause ;
   unsigned long dirty_paused_when ;
   int latency_record_count ;
   struct latency_record latency_record[32U] ;
   u64 timer_slack_ns ;
   u64 default_timer_slack_ns ;
   unsigned int kasan_depth ;
   int curr_ret_stack ;
   int curr_ret_depth ;
   struct ftrace_ret_stack *ret_stack ;
   unsigned long long ftrace_timestamp ;
   atomic_t trace_overrun ;
   atomic_t tracing_graph_pause ;
   unsigned long trace ;
   unsigned long trace_recursion ;
   unsigned int kcov_mode ;
   unsigned int kcov_size ;
   void *kcov_area ;
   struct kcov *kcov ;
   u64 kcov_handle ;
   int kcov_sequence ;
   struct mem_cgroup *memcg_in_oom ;
   gfp_t memcg_oom_gfp_mask ;
   int memcg_oom_order ;
   unsigned int memcg_nr_pages_over_high ;
   struct mem_cgroup *active_memcg ;
   struct request_queue *throttle_queue ;
   struct uprobe_task *utask ;
   unsigned int sequential_io ;
   unsigned int sequential_io_avg ;
   unsigned long task_state_change ;
   int pagefault_disabled ;
   struct task_struct *oom_reaper_list ;
   struct vm_struct *stack_vm_area ;
   refcount_t stack_refcount ;
   int patch_state ;
   void *security ;
   struct thread_struct thread ;
};
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct free_area {
   struct list_head free_list[6U] ;
   unsigned long nr_free ;
};
#line 158 
struct pglist_data;
#line 168  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct zone_padding {
   char x[0U] ;
} __attribute__((__aligned__(4096)));
#line 285  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct zone_reclaim_stat {
   unsigned long recent_rotated[2U] ;
   unsigned long recent_scanned[2U] ;
};
#line 304  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct lruvec {
   struct list_head lists[5U] ;
   struct zone_reclaim_stat reclaim_stat ;
   atomic_long_t inactive_age ;
   unsigned long refaults ;
   unsigned long flags ;
   struct pglist_data *pgdat ;
};
#line 316  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
typedef unsigned int isolate_mode_t;
#line 340  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct per_cpu_pages {
   int count ;
   int high ;
   int batch ;
   struct list_head lists[3U] ;
};
#line 349  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct per_cpu_pageset {
   struct per_cpu_pages pcp ;
   s8 expire ;
   u16 vm_numa_stat_diff[6U] ;
   s8 stat_threshold ;
   s8 vm_stat_diff[13U] ;
};
#line 361  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct per_cpu_nodestat {
   s8 stat_threshold ;
   s8 vm_node_stat_diff[32U] ;
};
#line 365 
enum zone_type {
    ZONE_DMA = 0,
    ZONE_DMA32 = 1,
    ZONE_NORMAL = 2,
    ZONE_MOVABLE = 3,
    ZONE_DEVICE = 4,
    __MAX_NR_ZONES = 5
};
#line 432  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct zone {
   unsigned long _watermark[3U] ;
   unsigned long watermark_boost ;
   unsigned long nr_reserved_highatomic ;
   long lowmem_reserve[5U] ;
   int node ;
   struct pglist_data *zone_pgdat ;
   struct per_cpu_pageset *pageset ;
   unsigned long zone_start_pfn ;
   atomic_long_t managed_pages ;
   unsigned long spanned_pages ;
   unsigned long present_pages ;
   char *name ;
   unsigned long nr_isolate_pageblock ;
   seqlock_t span_seqlock ;
   int initialized ;
   struct zone_padding _pad1_ ;
   struct free_area free_area[11U] ;
   unsigned long flags ;
   spinlock_t lock ;
   struct zone_padding _pad2_ ;
   unsigned long percpu_drift_mark ;
   unsigned long compact_cached_free_pfn ;
   unsigned long compact_cached_migrate_pfn[2U] ;
   unsigned long compact_init_migrate_pfn ;
   unsigned long compact_init_free_pfn ;
   unsigned int compact_considered ;
   unsigned int compact_defer_shift ;
   int compact_order_failed ;
   bool compact_blockskip_flush ;
   bool contiguous ;
   struct zone_padding _pad3_ ;
   atomic_long_t vm_stat[13U] ;
   atomic_long_t vm_numa_stat[6U] ;
} __attribute__((__aligned__(4096)));
#line 665  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct zoneref {
   struct zone *zone ;
   int zone_idx ;
};
#line 684  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct zonelist {
   struct zoneref _zonerefs[5121U] ;
};
#line 694  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct deferred_split {
   spinlock_t split_queue_lock ;
   struct list_head split_queue ;
   unsigned long split_queue_len ;
};
#line 710  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct pglist_data {
   struct zone node_zones[5U] ;
   struct zonelist node_zonelists[2U] ;
   int nr_zones ;
   spinlock_t node_size_lock ;
   unsigned long node_start_pfn ;
   unsigned long node_present_pages ;
   unsigned long node_spanned_pages ;
   int node_id ;
   wait_queue_head_t kswapd_wait ;
   wait_queue_head_t pfmemalloc_wait ;
   struct task_struct *kswapd ;
   int kswapd_order ;
   enum zone_type kswapd_classzone_idx ;
   int kswapd_failures ;
   int kcompactd_max_order ;
   enum zone_type kcompactd_classzone_idx ;
   wait_queue_head_t kcompactd_wait ;
   struct task_struct *kcompactd ;
   unsigned long totalreserve_pages ;
   unsigned long min_unmapped_pages ;
   unsigned long min_slab_pages ;
   struct zone_padding _pad1_ ;
   spinlock_t lru_lock ;
   unsigned long first_deferred_pfn ;
   struct deferred_split deferred_split_queue ;
   struct lruvec __lruvec ;
   unsigned long flags ;
   struct zone_padding _pad2_ ;
   struct per_cpu_nodestat *per_cpu_nodestats ;
   atomic_long_t vm_stat[32U] ;
};
#line 824 
struct resource;
#line 825 
struct vmem_altmap;
#line 623  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/gfp.h"
struct percpu_ref;
#line 624  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/gfp.h"
typedef void percpu_ref_func_t(struct percpu_ref *);
#line 95  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/percpu-refcount.h"
struct percpu_ref {
   atomic_long_t count ;
   unsigned long percpu_count_ptr ;
   percpu_ref_func_t *release ;
   percpu_ref_func_t *confirm_switch ;
   bool force_atomic : 1 ;
   bool allow_reinit : 1 ;
   struct callback_head rcu ;
};
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/extable.h"
struct exception_table_entry {
   int insn ;
   int fixup ;
   int handler ;
};
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/stat.h"
struct kstat {
   u32 result_mask ;
   umode_t mode ;
   unsigned int nlink ;
   uint32_t blksize ;
   u64 attributes ;
   u64 attributes_mask ;
   u64 ino ;
   dev_t dev ;
   dev_t rdev ;
   kuid_t uid ;
   kgid_t gid ;
   loff_t size ;
   struct timespec64 atime ;
   struct timespec64 mtime ;
   struct timespec64 ctime ;
   struct timespec64 btime ;
   u64 blocks ;
};
#line 822  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/sysctl.h"
struct ctl_table_root;
#line 823 
struct ctl_table_header;
#line 824 
struct ctl_dir;
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
typedef int proc_handler(struct ctl_table *, int , void *, size_t *, loff_t *);
#line 105  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
struct ctl_table_poll {
   atomic_t event ;
   wait_queue_head_t wait ;
};
#line 123  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
struct ctl_table {
   char *procname ;
   void *data ;
   int maxlen ;
   umode_t mode ;
   struct ctl_table *child ;
   proc_handler *proc_handler ;
   struct ctl_table_poll *poll ;
   void *extra1 ;
   void *extra2 ;
} __attribute__((__designated_init__));
#line 135  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
struct ctl_node {
   struct rb_node node ;
   struct ctl_table_header *header ;
};
#line 142  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
struct __anonstruct_375 {
   struct ctl_table *ctl_table ;
   int used ;
   int count ;
   int nreg ;
};
#line 142  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
union __anonunion_374 {
   struct __anonstruct_375 __anonCompField___anonunion_374_53 ;
   struct callback_head rcu ;
};
#line 142 
struct ctl_table_set;
#line 142  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
struct ctl_table_header {
   union __anonunion_374 __anonCompField_ctl_table_header_54 ;
   struct completion *unregistering ;
   struct ctl_table *ctl_table_arg ;
   struct ctl_table_root *root ;
   struct ctl_table_set *set ;
   struct ctl_dir *parent ;
   struct ctl_node *node ;
   struct hlist_head inodes ;
};
#line 161  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
struct ctl_dir {
   struct ctl_table_header header ;
   struct rb_root root ;
};
#line 167  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
struct ctl_table_set {
   int (*is_seen)(struct ctl_table_set *) ;
   struct ctl_dir dir ;
};
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
struct ctl_table_root {
   struct ctl_table_set default_set ;
   struct ctl_table_set *(*lookup)(struct ctl_table_root *) ;
   void (*set_ownership)(struct ctl_table_header *, struct ctl_table *, kuid_t *, kgid_t *) ;
   int (*permissions)(struct ctl_table_header *, struct ctl_table *) ;
};
#line 13  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/vdso.h"
struct vdso_image {
   void *data ;
   unsigned long size ;
   unsigned long alt ;
   unsigned long alt_len ;
   long sym_vvar_start ;
   long sym_vvar_page ;
   long sym_pvclock_page ;
   long sym_hvclock_page ;
   long sym_VDSO32_NOTE_MASK ;
   long sym___kernel_sigreturn ;
   long sym___kernel_rt_sigreturn ;
   long sym___kernel_vsyscall ;
   long sym_int80_landing_pad ;
};
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
typedef __u64 Elf64_Addr;
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
typedef __u16 Elf64_Half;
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
typedef __u64 Elf64_Off;
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
typedef __u32 Elf64_Word;
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
typedef __u64 Elf64_Xword;
#line 192  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
struct elf64_sym {
   Elf64_Word st_name ;
   unsigned char st_info ;
   unsigned char st_other ;
   Elf64_Half st_shndx ;
   Elf64_Addr st_value ;
   Elf64_Xword st_size ;
};
#line 200  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
typedef struct elf64_sym Elf64_Sym;
#line 221  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
struct elf64_hdr {
   unsigned char e_ident[16U] ;
   Elf64_Half e_type ;
   Elf64_Half e_machine ;
   Elf64_Word e_version ;
   Elf64_Addr e_entry ;
   Elf64_Off e_phoff ;
   Elf64_Off e_shoff ;
   Elf64_Word e_flags ;
   Elf64_Half e_ehsize ;
   Elf64_Half e_phentsize ;
   Elf64_Half e_phnum ;
   Elf64_Half e_shentsize ;
   Elf64_Half e_shnum ;
   Elf64_Half e_shstrndx ;
};
#line 237  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
typedef struct elf64_hdr Elf64_Ehdr;
#line 316  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
struct elf64_shdr {
   Elf64_Word sh_name ;
   Elf64_Word sh_type ;
   Elf64_Xword sh_flags ;
   Elf64_Addr sh_addr ;
   Elf64_Off sh_offset ;
   Elf64_Xword sh_size ;
   Elf64_Word sh_link ;
   Elf64_Word sh_info ;
   Elf64_Xword sh_addralign ;
   Elf64_Xword sh_entsize ;
};
#line 328  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
typedef struct elf64_shdr Elf64_Shdr;
#line 292  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/xarray.h"
struct xarray {
   spinlock_t xa_lock ;
   gfp_t xa_flags ;
   void *xa_head ;
};
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/idr.h"
struct idr {
   struct xarray idr_rt ;
   unsigned int idr_base ;
   unsigned int idr_next ;
};
#line 322 
struct dentry;
#line 323 
struct iattr;
#line 324 
struct super_block;
#line 325 
struct poll_table_struct;
#line 326 
struct fs_context;
#line 328 
struct kernfs_open_node;
#line 329 
struct kernfs_iattrs;
#line 84  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_root;
#line 84  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_elem_dir {
   unsigned long subdirs ;
   struct rb_root children ;
   struct kernfs_root *root ;
};
#line 96 
struct kernfs_node;
#line 96  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_elem_symlink {
   struct kernfs_node *target_kn ;
};
#line 100 
struct kernfs_ops;
#line 100  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_elem_attr {
   struct kernfs_ops *ops ;
   struct kernfs_open_node *open ;
   loff_t size ;
   struct kernfs_node *notify_next ;
};
#line 116  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
union __anonunion_393 {
   struct kernfs_elem_dir dir ;
   struct kernfs_elem_symlink symlink ;
   struct kernfs_elem_attr attr ;
};
#line 116  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_node {
   atomic_t count ;
   atomic_t active ;
   struct lockdep_map dep_map ;
   struct kernfs_node *parent ;
   char *name ;
   struct rb_node rb ;
   void *ns ;
   unsigned int hash ;
   union __anonunion_393 __anonCompField_kernfs_node_57 ;
   void *priv ;
   u64 id ;
   unsigned short flags ;
   umode_t mode ;
   struct kernfs_iattrs *iattr ;
};
#line 161  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_syscall_ops {
   int (*show_options)(struct seq_file *, struct kernfs_root *) ;
   int (*mkdir)(struct kernfs_node *, char *, umode_t ) ;
   int (*rmdir)(struct kernfs_node *) ;
   int (*rename)(struct kernfs_node *, struct kernfs_node *, char *) ;
   int (*show_path)(struct seq_file *, struct kernfs_node *, struct kernfs_root *) ;
};
#line 173  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_root {
   struct kernfs_node *kn ;
   unsigned int flags ;
   struct idr ino_idr ;
   u32 last_id_lowbits ;
   u32 id_highbits ;
   struct kernfs_syscall_ops *syscall_ops ;
   struct list_head supers ;
   wait_queue_head_t deactivate_waitq ;
};
#line 190  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_open_file {
   struct kernfs_node *kn ;
   struct file *file ;
   struct seq_file *seq_file ;
   void *priv ;
   struct mutex mutex ;
   struct mutex prealloc_mutex ;
   int event ;
   struct list_head list ;
   char *prealloc_buf ;
   size_t atomic_write_len ;
   bool mmapped : 1 ;
   bool released : 1 ;
   struct vm_operations_struct *vm_ops ;
};
#line 210  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_ops {
   int (*open)(struct kernfs_open_file *) ;
   void (*release)(struct kernfs_open_file *) ;
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   ssize_t (*read)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   size_t atomic_write_len ;
   bool prealloc ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   __poll_t (*poll)(struct kernfs_open_file *, struct poll_table_struct *) ;
   int (*mmap)(struct kernfs_open_file *, struct vm_area_struct *) ;
   struct lock_class_key lockdep_key ;
};
#line 595 
struct sock;
#line 596 
struct kobject;
#line 597 
enum kobj_ns_type {
    KOBJ_NS_TYPE_NONE = 0,
    KOBJ_NS_TYPE_NET = 1,
    KOBJ_NS_TYPES = 2
};
#line 39  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kobject_ns.h"
struct kobj_ns_type_operations {
   enum kobj_ns_type type ;
   bool (*current_may_mount)(void) ;
   void *(*grab_current_ns)(void) ;
   void *(*netlink_ns)(struct sock *) ;
   void *(*initial_ns)(void) ;
   void (*drop_ns)(void *) ;
};
#line 58 
struct bin_attribute;
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysfs.h"
struct attribute {
   char *name ;
   umode_t mode ;
   bool ignore_lockdep : 1 ;
   struct lock_class_key *key ;
   struct lock_class_key skey ;
};
#line 84  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysfs.h"
struct attribute_group {
   char *name ;
   umode_t (*is_visible)(struct kobject *, struct attribute *, int ) ;
   umode_t (*is_bin_visible)(struct kobject *, struct bin_attribute *, int ) ;
   struct attribute **attrs ;
   struct bin_attribute **bin_attrs ;
};
#line 161  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysfs.h"
struct bin_attribute {
   struct attribute attr ;
   size_t size ;
   void *private ;
   ssize_t (*read)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   ssize_t (*write)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   int (*mmap)(struct file *, struct kobject *, struct bin_attribute *, struct vm_area_struct *) ;
};
#line 223  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysfs.h"
struct sysfs_ops {
   ssize_t (*show)(struct kobject *, struct attribute *, char *) ;
   ssize_t (*store)(struct kobject *, struct attribute *, char *, size_t ) ;
};
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kref.h"
struct kref {
   refcount_t refcount ;
};
#line 65  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kobject.h"
struct kset;
#line 65 
struct kobj_type;
#line 65  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kobject.h"
struct kobject {
   char *name ;
   struct list_head entry ;
   struct kobject *parent ;
   struct kset *kset ;
   struct kobj_type *ktype ;
   struct kernfs_node *sd ;
   struct kref kref ;
   struct delayed_work release ;
   unsigned int state_initialized : 1 ;
   unsigned int state_in_sysfs : 1 ;
   unsigned int state_add_uevent_sent : 1 ;
   unsigned int state_remove_uevent_sent : 1 ;
   unsigned int uevent_suppress : 1 ;
};
#line 139  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kobject.h"
struct kobj_type {
   void (*release)(struct kobject *) ;
   struct sysfs_ops *sysfs_ops ;
   struct attribute **default_attrs ;
   struct attribute_group **default_groups ;
   struct kobj_ns_type_operations *(*child_ns_type)(struct kobject *) ;
   void *(*namespace)(struct kobject *) ;
   void (*get_ownership)(struct kobject *, kuid_t *, kgid_t *) ;
};
#line 149  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kobject.h"
struct kobj_uevent_env {
   char *argv[3U] ;
   char *envp[32U] ;
   int envp_idx ;
   char buf[2048U] ;
   int buflen ;
};
#line 157  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kobject.h"
struct kset_uevent_ops {
   int (*filter)(struct kset *, struct kobject *) ;
   char *(*name)(struct kset *, struct kobject *) ;
   int (*uevent)(struct kset *, struct kobject *, struct kobj_uevent_env *) ;
};
#line 193  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kobject.h"
struct kset {
   struct list_head list ;
   spinlock_t list_lock ;
   struct kobject kobj ;
   struct kset_uevent_ops *uevent_ops ;
} __attribute__((__designated_init__));
#line 247 
struct kernel_param;
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/moduleparam.h"
struct kernel_param_ops {
   unsigned int flags ;
   int (*set)(char *, struct kernel_param *) ;
   int (*get)(char *, struct kernel_param *) ;
   void (*free)(void *) ;
};
#line 69 
struct kparam_string;
#line 69 
struct kparam_array;
#line 69  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/moduleparam.h"
union __anonunion_396 {
   void *arg ;
   struct kparam_string *str ;
   struct kparam_array *arr ;
};
#line 69  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/moduleparam.h"
struct kernel_param {
   char *name ;
   struct module *mod ;
   struct kernel_param_ops *ops ;
   u16 perm ;
   s8 level ;
   u8 flags ;
   union __anonunion_396 __anonCompField_kernel_param_58 ;
};
#line 86  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/moduleparam.h"
struct kparam_string {
   unsigned int maxlen ;
   char *string ;
};
#line 92  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/moduleparam.h"
struct kparam_array {
   unsigned int max ;
   unsigned int elemsize ;
   unsigned int *num ;
   struct kernel_param_ops *ops ;
   void *elem ;
};
#line 40  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rbtree_latch.h"
struct latch_tree_node {
   struct rb_node node[2U] ;
};
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/error-injection.h"
struct error_injection_entry {
   unsigned long addr ;
   int etype ;
};
#line 8  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/module.h"
struct mod_arch_specific {
   unsigned int num_orcs ;
   int *orc_unwind_ip ;
   struct orc_entry *orc_unwind ;
};
#line 45  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
struct module_param_attrs;
#line 45  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
struct module_kobject {
   struct kobject kobj ;
   struct module *mod ;
   struct kobject *drivers_dir ;
   struct module_param_attrs *mp ;
   struct completion *kobj_completion ;
} __attribute__((__designated_init__));
#line 53  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
struct module_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct module_attribute *, struct module_kobject *, char *) ;
   ssize_t (*store)(struct module_attribute *, struct module_kobject *, char *, size_t ) ;
   void (*setup)(struct module *, char *) ;
   int (*test)(struct module *) ;
   void (*free)(struct module *) ;
};
#line 297 
enum module_state {
    MODULE_STATE_LIVE = 0,
    MODULE_STATE_COMING = 1,
    MODULE_STATE_GOING = 2,
    MODULE_STATE_UNFORMED = 3
};
#line 305  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
struct mod_tree_node {
   struct module *mod ;
   struct latch_tree_node node ;
};
#line 310  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
struct module_layout {
   void *base ;
   unsigned int size ;
   unsigned int text_size ;
   unsigned int ro_size ;
   unsigned int ro_after_init_size ;
   struct mod_tree_node mtn ;
};
#line 334  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
struct mod_kallsyms {
   Elf64_Sym *symtab ;
   unsigned int num_symtab ;
   char *strtab ;
   char *typetab ;
};
#line 342  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
struct klp_modinfo {
   Elf64_Ehdr hdr ;
   Elf64_Shdr *sechdrs ;
   char *secstrings ;
   unsigned int symndx ;
};
#line 350 
struct module_sect_attrs;
#line 350 
struct module_notes_attrs;
#line 350 
struct trace_event_call;
#line 350 
struct trace_eval_map;
#line 350  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
struct module {
   enum module_state state ;
   struct list_head list ;
   char name[56U] ;
   struct module_kobject mkobj ;
   struct module_attribute *modinfo_attrs ;
   char *version ;
   char *srcversion ;
   struct kobject *holders_dir ;
   struct kernel_symbol *syms ;
   s32 *crcs ;
   unsigned int num_syms ;
   struct mutex param_lock ;
   struct kernel_param *kp ;
   unsigned int num_kp ;
   unsigned int num_gpl_syms ;
   struct kernel_symbol *gpl_syms ;
   s32 *gpl_crcs ;
   struct kernel_symbol *unused_syms ;
   s32 *unused_crcs ;
   unsigned int num_unused_syms ;
   unsigned int num_unused_gpl_syms ;
   struct kernel_symbol *unused_gpl_syms ;
   s32 *unused_gpl_crcs ;
   bool sig_ok ;
   bool async_probe_requested ;
   struct kernel_symbol *gpl_future_syms ;
   s32 *gpl_future_crcs ;
   unsigned int num_gpl_future_syms ;
   unsigned int num_exentries ;
   struct exception_table_entry *extable ;
   int (*init)(void) ;
   struct module_layout core_layout ;
   struct module_layout init_layout ;
   struct mod_arch_specific arch ;
   unsigned long taints ;
   unsigned int num_bugs ;
   struct list_head bug_list ;
   struct bug_entry *bug_table ;
   struct mod_kallsyms *kallsyms ;
   struct mod_kallsyms core_kallsyms ;
   struct module_sect_attrs *sect_attrs ;
   struct module_notes_attrs *notes_attrs ;
   char *args ;
   void *percpu ;
   unsigned int percpu_size ;
   unsigned int num_tracepoints ;
   tracepoint_ptr_t *tracepoints_ptrs ;
   unsigned int num_srcu_structs ;
   struct srcu_struct **srcu_struct_ptrs ;
   unsigned int num_bpf_raw_events ;
   struct bpf_raw_event_map *bpf_raw_events ;
   struct jump_entry *jump_entries ;
   unsigned int num_jump_entries ;
   unsigned int num_trace_bprintk_fmt ;
   char **trace_bprintk_fmt_start ;
   struct trace_event_call **trace_events ;
   unsigned int num_trace_events ;
   struct trace_eval_map **trace_evals ;
   unsigned int num_trace_evals ;
   unsigned int num_ftrace_callsites ;
   unsigned long *ftrace_callsites ;
   bool klp ;
   bool klp_alive ;
   struct klp_modinfo *klp_info ;
   struct list_head source_list ;
   struct list_head target_list ;
   void (*exit)(void) ;
   atomic_t refcnt ;
   ctor_fn_t *ctors ;
   unsigned int num_ctors ;
   struct error_injection_entry *ei_funcs ;
   unsigned int num_ei_funcs ;
} __attribute__((__designated_init__, __aligned__(64)));
#line 36  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/uuid.h"
struct __anonstruct_uuid_t_404 {
   __u8 b[16U] ;
};
#line 36  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/uuid.h"
typedef struct __anonstruct_uuid_t_404 uuid_t;
#line 87  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uuid.h"
typedef unsigned long kernel_ulong_t;
#line 210  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mod_devicetable.h"
struct acpi_device_id {
   __u8 id[9U] ;
   kernel_ulong_t driver_data ;
   __u32 cls ;
   __u32 cls_msk ;
};
#line 260  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mod_devicetable.h"
struct of_device_id {
   char name[32U] ;
   char type[32U] ;
   char compatible[128U] ;
   void *data ;
};
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ioport.h"
struct resource {
   resource_size_t start ;
   resource_size_t end ;
   char *name ;
   unsigned long flags ;
   unsigned long desc ;
   struct resource *parent ;
   struct resource *sibling ;
   struct resource *child ;
};
#line 50  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pm.h"
struct pm_message {
   int event ;
};
#line 53  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pm.h"
typedef struct pm_message pm_message_t;
#line 278  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pm.h"
struct dev_pm_ops {
   int (*prepare)(struct device *) ;
   void (*complete)(struct device *) ;
   int (*suspend)(struct device *) ;
   int (*resume)(struct device *) ;
   int (*freeze)(struct device *) ;
   int (*thaw)(struct device *) ;
   int (*poweroff)(struct device *) ;
   int (*restore)(struct device *) ;
   int (*suspend_late)(struct device *) ;
   int (*resume_early)(struct device *) ;
   int (*freeze_late)(struct device *) ;
   int (*thaw_early)(struct device *) ;
   int (*poweroff_late)(struct device *) ;
   int (*restore_early)(struct device *) ;
   int (*suspend_noirq)(struct device *) ;
   int (*resume_noirq)(struct device *) ;
   int (*freeze_noirq)(struct device *) ;
   int (*thaw_noirq)(struct device *) ;
   int (*poweroff_noirq)(struct device *) ;
   int (*restore_noirq)(struct device *) ;
   int (*runtime_suspend)(struct device *) ;
   int (*runtime_resume)(struct device *) ;
   int (*runtime_idle)(struct device *) ;
};
#line 303 
enum rpm_status {
    RPM_ACTIVE = 0,
    RPM_RESUMING = 1,
    RPM_SUSPENDED = 2,
    RPM_SUSPENDING = 3
};
#line 310 
enum rpm_request {
    RPM_REQ_NONE = 0,
    RPM_REQ_IDLE = 1,
    RPM_REQ_SUSPEND = 2,
    RPM_REQ_AUTOSUSPEND = 3,
    RPM_REQ_RESUME = 4
};
#line 318 
struct wakeup_source;
#line 319 
struct wake_irq;
#line 320 
struct pm_domain_data;
#line 530  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pm.h"
struct pm_subsys_data {
   spinlock_t lock ;
   unsigned int refcount ;
   struct list_head clock_list ;
   struct pm_domain_data *domain_data ;
};
#line 573 
struct dev_pm_qos;
#line 573  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pm.h"
struct dev_pm_info {
   pm_message_t power_state ;
   unsigned int can_wakeup : 1 ;
   unsigned int async_suspend : 1 ;
   bool in_dpm_list : 1 ;
   bool is_prepared : 1 ;
   bool is_suspended : 1 ;
   bool is_noirq_suspended : 1 ;
   bool is_late_suspended : 1 ;
   bool no_pm : 1 ;
   bool early_init : 1 ;
   bool direct_complete : 1 ;
   u32 driver_flags ;
   spinlock_t lock ;
   struct list_head entry ;
   struct completion completion ;
   struct wakeup_source *wakeup ;
   bool wakeup_path : 1 ;
   bool syscore : 1 ;
   bool no_pm_callbacks : 1 ;
   unsigned int must_resume : 1 ;
   unsigned int may_skip_resume : 1 ;
   struct hrtimer suspend_timer ;
   unsigned long timer_expires ;
   struct work_struct work ;
   wait_queue_head_t wait_queue ;
   struct wake_irq *wakeirq ;
   atomic_t usage_count ;
   atomic_t child_count ;
   unsigned int disable_depth : 3 ;
   unsigned int idle_notification : 1 ;
   unsigned int request_pending : 1 ;
   unsigned int deferred_resume : 1 ;
   unsigned int runtime_auto : 1 ;
   bool ignore_children : 1 ;
   unsigned int no_callbacks : 1 ;
   unsigned int irq_safe : 1 ;
   unsigned int use_autosuspend : 1 ;
   unsigned int timer_autosuspends : 1 ;
   unsigned int memalloc_noio : 1 ;
   unsigned int links_count ;
   enum rpm_request request ;
   enum rpm_status runtime_status ;
   int runtime_error ;
   int autosuspend_delay ;
   u64 last_busy ;
   u64 active_time ;
   u64 suspended_time ;
   u64 accounting_timestamp ;
   struct pm_subsys_data *subsys_data ;
   void (*set_latency_tolerance)(struct device *, s32 ) ;
   struct dev_pm_qos *qos ;
};
#line 650  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pm.h"
struct dev_pm_domain {
   struct dev_pm_ops ops ;
   int (*start)(struct device *) ;
   void (*detach)(struct device *, bool ) ;
   int (*activate)(struct device *) ;
   void (*sync)(struct device *) ;
   void (*dismiss)(struct device *) ;
};
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ratelimit.h"
struct ratelimit_state {
   raw_spinlock_t lock ;
   int interval ;
   int burst ;
   int printed ;
   int missed ;
   unsigned long begin ;
   unsigned long flags ;
};
#line 5  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/device.h"
struct dev_archdata {
   void *iommu ;
};
#line 12 
struct dma_map_ops;
#line 23 
struct device_driver;
#line 24 
struct driver_private;
#line 25 
struct class;
#line 26 
struct subsys_private;
#line 27 
struct bus_type;
#line 28 
struct iommu_ops;
#line 29 
struct iommu_group;
#line 30 
struct iommu_fwspec;
#line 31 
struct dev_pin_info;
#line 32 
struct iommu_param;
#line 122  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
struct bus_type {
   char *name ;
   char *dev_name ;
   struct device *dev_root ;
   struct attribute_group **bus_groups ;
   struct attribute_group **dev_groups ;
   struct attribute_group **drv_groups ;
   int (*match)(struct device *, struct device_driver *) ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   int (*probe)(struct device *) ;
   void (*sync_state)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*online)(struct device *) ;
   int (*offline)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   int (*num_vf)(struct device *) ;
   int (*dma_configure)(struct device *) ;
   struct dev_pm_ops *pm ;
   struct iommu_ops *iommu_ops ;
   struct subsys_private *p ;
   struct lock_class_key lock_key ;
   bool need_parent_lock ;
};
#line 164 
struct device_type;
#line 309 
enum probe_type {
    PROBE_DEFAULT_STRATEGY = 0,
    PROBE_PREFER_ASYNCHRONOUS = 1,
    PROBE_FORCE_SYNCHRONOUS = 2
};
#line 383  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
struct device_driver {
   char *name ;
   struct bus_type *bus ;
   struct module *owner ;
   char *mod_name ;
   bool suppress_bind_attrs ;
   enum probe_type probe_type ;
   struct of_device_id *of_match_table ;
   struct acpi_device_id *acpi_match_table ;
   int (*probe)(struct device *) ;
   void (*sync_state)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct attribute_group **groups ;
   struct attribute_group **dev_groups ;
   struct dev_pm_ops *pm ;
   void (*coredump)(struct device *) ;
   struct driver_private *p ;
};
#line 589  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
struct class {
   char *name ;
   struct module *owner ;
   struct attribute_group **class_groups ;
   struct attribute_group **dev_groups ;
   struct kobject *dev_kobj ;
   int (*dev_uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *) ;
   void (*class_release)(struct class *) ;
   void (*dev_release)(struct device *) ;
   int (*shutdown_pre)(struct device *) ;
   struct kobj_ns_type_operations *ns_type ;
   void *(*namespace)(struct device *) ;
   void (*get_ownership)(struct device *, kuid_t *, kgid_t *) ;
   struct dev_pm_ops *pm ;
   struct subsys_private *p ;
};
#line 809  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
struct device_type {
   char *name ;
   struct attribute_group **groups ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *, kuid_t *, kgid_t *) ;
   void (*release)(struct device *) ;
   struct dev_pm_ops *pm ;
};
#line 1008  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
struct device_dma_parameters {
   unsigned int max_segment_size ;
   unsigned long segment_boundary_mask ;
};
#line 1139 
enum dl_dev_state {
    DL_DEV_NO_DRIVER = 0,
    DL_DEV_PROBING = 1,
    DL_DEV_DRIVER_BOUND = 2,
    DL_DEV_UNBINDING = 3
};
#line 1164  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
struct dev_links_info {
   struct list_head suppliers ;
   struct list_head consumers ;
   struct list_head needs_suppliers ;
   struct list_head defer_sync ;
   bool need_for_probe ;
   enum dl_dev_state status ;
};
#line 1259 
struct dma_coherent_mem;
#line 1259 
struct cma;
#line 1259  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
struct device {
   struct kobject kobj ;
   struct device *parent ;
   struct device_private *p ;
   char *init_name ;
   struct device_type *type ;
   struct bus_type *bus ;
   struct device_driver *driver ;
   void *platform_data ;
   void *driver_data ;
   struct mutex lockdep_mutex ;
   struct mutex mutex ;
   struct dev_links_info links ;
   struct dev_pm_info power ;
   struct dev_pm_domain *pm_domain ;
   struct irq_domain *msi_domain ;
   struct dev_pin_info *pins ;
   struct list_head msi_list ;
   struct dma_map_ops *dma_ops ;
   u64 *dma_mask ;
   u64 coherent_dma_mask ;
   u64 bus_dma_limit ;
   unsigned long dma_pfn_offset ;
   struct device_dma_parameters *dma_parms ;
   struct list_head dma_pools ;
   struct dma_coherent_mem *dma_mem ;
   struct cma *cma_area ;
   struct dev_archdata archdata ;
   struct device_node *of_node ;
   struct fwnode_handle *fwnode ;
   int numa_node ;
   dev_t devt ;
   u32 id ;
   spinlock_t devres_lock ;
   struct list_head devres_head ;
   struct class *class ;
   struct attribute_group **groups ;
   void (*release)(struct device *) ;
   struct iommu_group *iommu_group ;
   struct iommu_fwspec *iommu_fwspec ;
   struct iommu_param *iommu_param ;
   bool offline_disabled : 1 ;
   bool offline : 1 ;
   bool of_node_reused : 1 ;
   bool state_synced : 1 ;
};
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pm_wakeup.h"
struct wakeup_source {
   char *name ;
   int id ;
   struct list_head entry ;
   spinlock_t lock ;
   struct wake_irq *wakeirq ;
   struct timer_list timer ;
   unsigned long timer_expires ;
   ktime_t total_time ;
   ktime_t max_time ;
   ktime_t last_time ;
   ktime_t start_prevent_time ;
   ktime_t prevent_sleep_time ;
   unsigned long event_count ;
   unsigned long active_count ;
   unsigned long relax_count ;
   unsigned long expire_count ;
   unsigned long wakeup_count ;
   struct device *dev ;
   bool active : 1 ;
   bool autosleep_enabled : 1 ;
};
#line 289  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
struct usb_device_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __le16 bcdUSB ;
   __u8 bDeviceClass ;
   __u8 bDeviceSubClass ;
   __u8 bDeviceProtocol ;
   __u8 bMaxPacketSize0 ;
   __le16 idVendor ;
   __le16 idProduct ;
   __le16 bcdDevice ;
   __u8 iManufacturer ;
   __u8 iProduct ;
   __u8 iSerialNumber ;
   __u8 bNumConfigurations ;
} __attribute__((__packed__));
#line 345  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
struct usb_config_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __le16 wTotalLength ;
   __u8 bNumInterfaces ;
   __u8 bConfigurationValue ;
   __u8 iConfiguration ;
   __u8 bmAttributes ;
   __u8 bMaxPower ;
} __attribute__((__packed__));
#line 382  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
struct usb_interface_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __u8 bInterfaceNumber ;
   __u8 bAlternateSetting ;
   __u8 bNumEndpoints ;
   __u8 bInterfaceClass ;
   __u8 bInterfaceSubClass ;
   __u8 bInterfaceProtocol ;
   __u8 iInterface ;
} __attribute__((__packed__));
#line 400  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
struct usb_endpoint_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __u8 bEndpointAddress ;
   __u8 bmAttributes ;
   __le16 wMaxPacketSize ;
   __u8 bInterval ;
   __u8 bRefresh ;
   __u8 bSynchAddress ;
} __attribute__((__packed__));
#line 670  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
struct usb_ssp_isoc_ep_comp_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __le16 wReseved ;
   __le32 dwBytesPerInterval ;
} __attribute__((__packed__));
#line 682  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
struct usb_ss_ep_comp_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __u8 bMaxBurst ;
   __u8 bmAttributes ;
   __le16 wBytesPerInterval ;
} __attribute__((__packed__));
#line 776  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
struct usb_interface_assoc_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __u8 bFirstInterface ;
   __u8 bInterfaceCount ;
   __u8 bFunctionClass ;
   __u8 bFunctionSubClass ;
   __u8 bFunctionProtocol ;
   __u8 iFunction ;
} __attribute__((__packed__));
#line 837  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
struct usb_bos_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __le16 wTotalLength ;
   __u8 bNumDeviceCaps ;
} __attribute__((__packed__));
#line 888  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
struct usb_ext_cap_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __u8 bDevCapabilityType ;
   __le32 bmAttributes ;
} __attribute__((__packed__));
#line 910  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
struct usb_ss_cap_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __u8 bDevCapabilityType ;
   __u8 bmAttributes ;
   __le16 wSpeedSupported ;
   __u8 bFunctionalitySupport ;
   __u8 bU1devExitLat ;
   __le16 bU2DevExitLat ;
} __attribute__((__packed__));
#line 933  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
struct usb_ss_container_id_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __u8 bDevCapabilityType ;
   __u8 bReserved ;
   __u8 ContainerID[16U] ;
} __attribute__((__packed__));
#line 948  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
struct usb_ssp_cap_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __u8 bDevCapabilityType ;
   __u8 bReserved ;
   __le32 bmAttributes ;
   __le16 wFunctionalitySupport ;
   __le16 wReserved ;
   __le32 bmSublinkSpeedAttr[1U] ;
} __attribute__((__packed__));
#line 1073  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
struct usb_ptm_cap_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __u8 bDevCapabilityType ;
} __attribute__((__packed__));
#line 1134 
enum usb_device_speed {
    USB_SPEED_UNKNOWN = 0,
    USB_SPEED_LOW = 1,
    USB_SPEED_FULL = 2,
    USB_SPEED_HIGH = 3,
    USB_SPEED_WIRELESS = 4,
    USB_SPEED_SUPER = 5,
    USB_SPEED_SUPER_PLUS = 6
};
#line 1144 
enum usb_device_state {
    USB_STATE_NOTATTACHED = 0,
    USB_STATE_ATTACHED = 1,
    USB_STATE_POWERED = 2,
    USB_STATE_RECONNECTING = 3,
    USB_STATE_UNAUTHENTICATED = 4,
    USB_STATE_DEFAULT = 5,
    USB_STATE_ADDRESS = 6,
    USB_STATE_CONFIGURED = 7,
    USB_STATE_SUSPENDED = 8
};
#line 110  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/interrupt.h"
struct proc_dir_entry;
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_bl.h"
struct hlist_bl_node;
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_bl.h"
struct hlist_bl_head {
   struct hlist_bl_node *first ;
};
#line 38  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_bl.h"
struct hlist_bl_node {
   struct hlist_bl_node *next ;
   struct hlist_bl_node **pprev ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockref.h"
struct __anonstruct_419 {
   spinlock_t lock ;
   int count ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockref.h"
union __anonunion_418 {
   struct __anonstruct_419 __anonCompField___anonunion_418_59 ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockref.h"
struct lockref {
   union __anonunion_418 __anonCompField_lockref_60 ;
};
#line 78  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/stringhash.h"
struct path;
#line 79 
struct vfsmount;
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dcache.h"
struct __anonstruct_421 {
   u32 hash ;
   u32 len ;
};
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dcache.h"
union __anonunion_420 {
   struct __anonstruct_421 __anonCompField___anonunion_420_61 ;
   u64 hash_len ;
};
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dcache.h"
struct qstr {
   union __anonunion_420 __anonCompField_qstr_62 ;
   unsigned char *name ;
};
#line 89 
struct dentry_operations;
#line 89  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dcache.h"
union __anonunion_422 {
   struct list_head d_lru ;
   wait_queue_head_t *d_wait ;
};
#line 89  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dcache.h"
union __anonunion_d_u_423 {
   struct hlist_node d_alias ;
   struct hlist_bl_node d_in_lookup_hash ;
   struct callback_head d_rcu ;
};
#line 89  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dcache.h"
struct dentry {
   unsigned int d_flags ;
   seqcount_t d_seq ;
   struct hlist_bl_node d_hash ;
   struct dentry *d_parent ;
   struct qstr d_name ;
   struct inode *d_inode ;
   unsigned char d_iname[32U] ;
   struct lockref d_lockref ;
   struct dentry_operations *d_op ;
   struct super_block *d_sb ;
   unsigned long d_time ;
   void *d_fsdata ;
   union __anonunion_422 __anonCompField_dentry_63 ;
   struct list_head d_child ;
   struct list_head d_subdirs ;
   union __anonunion_d_u_423 d_u ;
} __attribute__((__designated_init__));
#line 135  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dcache.h"
struct dentry_operations {
   int (*d_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_weak_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_hash)(struct dentry *, struct qstr *) ;
   int (*d_compare)(struct dentry *, unsigned int , char *, struct qstr *) ;
   int (*d_delete)(struct dentry *) ;
   int (*d_init)(struct dentry *) ;
   void (*d_release)(struct dentry *) ;
   void (*d_prune)(struct dentry *) ;
   void (*d_iput)(struct dentry *, struct inode *) ;
   char *(*d_dname)(struct dentry *, char *, int ) ;
   struct vfsmount *(*d_automount)(struct path *) ;
   int (*d_manage)(struct path *, bool ) ;
   struct dentry *(*d_real)(struct dentry *, struct inode *) ;
} __attribute__((__aligned__(64)));
#line 8  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/path.h"
struct path {
   struct vfsmount *mnt ;
   struct dentry *dentry ;
} __attribute__((__designated_init__));
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/shrinker.h"
struct shrink_control {
   gfp_t gfp_mask ;
   int nid ;
   unsigned long nr_to_scan ;
   unsigned long nr_scanned ;
   struct mem_cgroup *memcg ;
};
#line 60  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/shrinker.h"
struct shrinker {
   unsigned long (*count_objects)(struct shrinker *, struct shrink_control *) ;
   unsigned long (*scan_objects)(struct shrinker *, struct shrink_control *) ;
   long batch ;
   int seeks ;
   unsigned int flags ;
   struct list_head list ;
   int id ;
   atomic_long_t *nr_deferred ;
};
#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_lru.h"
struct list_lru_one {
   struct list_head list ;
   long nr_items ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_lru.h"
struct list_lru_memcg {
   struct callback_head rcu ;
   struct list_lru_one *lru[0U] ;
};
#line 40  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_lru.h"
struct list_lru_node {
   spinlock_t lock ;
   struct list_lru_one lru ;
   struct list_lru_memcg *memcg_lrus ;
   long nr_items ;
} __attribute__((__aligned__(64)));
#line 52  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_lru.h"
struct list_lru {
   struct list_lru_node *node ;
   struct list_head list ;
   int shrinker_id ;
   bool memcg_aware ;
};
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/capability.h"
struct kernel_cap_struct {
   __u32 cap[2U] ;
};
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/capability.h"
typedef struct kernel_cap_struct kernel_cap_t;
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fiemap.h"
struct fiemap_extent {
   __u64 fe_logical ;
   __u64 fe_physical ;
   __u64 fe_length ;
   __u64 fe_reserved64[2U] ;
   __u32 fe_flags ;
   __u32 fe_reserved[3U] ;
};
#line 39 
enum migrate_mode {
    MIGRATE_ASYNC = 0,
    MIGRATE_SYNC_LIGHT = 1,
    MIGRATE_SYNC = 2,
    MIGRATE_SYNC_NO_COPY = 3
};
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rcuwait.h"
struct rcuwait {
   struct task_struct *task ;
};
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rcu_sync.h"
struct rcu_sync {
   int gp_state ;
   int gp_count ;
   wait_queue_head_t gp_wait ;
   struct callback_head cb_head ;
};
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/percpu-rwsem.h"
struct percpu_rw_semaphore {
   struct rcu_sync rss ;
   unsigned int *read_count ;
   struct rw_semaphore rw_sem ;
   struct rcuwait writer ;
   int readers_block ;
};
#line 10  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/delayed_call.h"
struct delayed_call {
   void (*fn)(void *) ;
   void *arg ;
};
#line 35  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/delayed_call.h"
typedef u32 errseq_t;
#line 72  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/iocontext.h"
union __anonunion_430 {
   struct list_head q_node ;
   struct kmem_cache *__rcu_icq_cache ;
};
#line 72  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/iocontext.h"
union __anonunion_431 {
   struct hlist_node ioc_node ;
   struct callback_head __rcu_head ;
};
#line 72  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/iocontext.h"
struct io_cq {
   struct request_queue *q ;
   struct io_context *ioc ;
   union __anonunion_430 __anonCompField_io_cq_64 ;
   union __anonunion_431 __anonCompField_io_cq_65 ;
   unsigned int flags ;
};
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/iocontext.h"
struct io_context {
   atomic_long_t refcount ;
   atomic_t active_ref ;
   atomic_t nr_tasks ;
   spinlock_t lock ;
   unsigned short ioprio ;
   int nr_batch_requests ;
   unsigned long last_waited ;
   struct xarray icq_tree ;
   struct io_cq *icq_hint ;
   struct hlist_head icq_list ;
   struct work_struct release_work ;
};
#line 286  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fs.h"
struct bdi_writeback;
#line 287 
struct bio;
#line 288 
struct export_operations;
#line 289 
struct hd_geometry;
#line 290 
struct iovec;
#line 291 
struct kiocb;
#line 292 
struct kstatfs;
#line 293 
struct swap_info_struct;
#line 294 
struct iov_iter;
#line 295 
struct fscrypt_info;
#line 296 
struct fscrypt_operations;
#line 297 
struct fsverity_info;
#line 298 
struct fsverity_operations;
#line 299 
struct fs_parameter_description;
#line 224  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct iattr {
   unsigned int ia_valid ;
   umode_t ia_mode ;
   kuid_t ia_uid ;
   kgid_t ia_gid ;
   loff_t ia_size ;
   struct timespec64 ia_atime ;
   struct timespec64 ia_mtime ;
   struct timespec64 ia_ctime ;
   struct file *ia_file ;
};
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/percpu_counter.h"
struct percpu_counter {
   raw_spinlock_t lock ;
   s64 count ;
   struct list_head list ;
   s32 *counters ;
};
#line 214  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dqblk_xfs.h"
struct dquot;
#line 215 
struct kqid;
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/projid.h"
typedef __kernel_uid32_t projid_t;
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/projid.h"
struct __anonstruct_kprojid_t_432 {
   projid_t val ;
};
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/projid.h"
typedef struct __anonstruct_kprojid_t_432 kprojid_t;
#line 180  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/quota.h"
enum quota_type {
    USRQUOTA = 0,
    GRPQUOTA = 1,
    PRJQUOTA = 2
};
#line 66  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
typedef long long qsize_t;
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
union __anonunion_433 {
   kuid_t uid ;
   kgid_t gid ;
   kprojid_t projid ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct kqid {
   union __anonunion_433 __anonCompField_kqid_66 ;
   enum quota_type type ;
};
#line 205  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct mem_dqblk {
   qsize_t dqb_bhardlimit ;
   qsize_t dqb_bsoftlimit ;
   qsize_t dqb_curspace ;
   qsize_t dqb_rsvspace ;
   qsize_t dqb_ihardlimit ;
   qsize_t dqb_isoftlimit ;
   qsize_t dqb_curinodes ;
   time64_t dqb_btime ;
   time64_t dqb_itime ;
};
#line 216 
struct quota_format_type;
#line 222  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct mem_dqinfo {
   struct quota_format_type *dqi_format ;
   int dqi_fmt_id ;
   struct list_head dqi_dirty_list ;
   unsigned long dqi_flags ;
   unsigned int dqi_bgrace ;
   unsigned int dqi_igrace ;
   qsize_t dqi_max_spc_limit ;
   qsize_t dqi_max_ino_limit ;
   void *dqi_priv ;
};
#line 294  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct dquot {
   struct hlist_node dq_hash ;
   struct list_head dq_inuse ;
   struct list_head dq_free ;
   struct list_head dq_dirty ;
   struct mutex dq_lock ;
   spinlock_t dq_dqb_lock ;
   atomic_t dq_count ;
   struct super_block *dq_sb ;
   struct kqid dq_id ;
   loff_t dq_off ;
   unsigned long dq_flags ;
   struct mem_dqblk dq_dqb ;
};
#line 310  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct quota_format_ops {
   int (*check_quota_file)(struct super_block *, int ) ;
   int (*read_file_info)(struct super_block *, int ) ;
   int (*write_file_info)(struct super_block *, int ) ;
   int (*free_file_info)(struct super_block *, int ) ;
   int (*read_dqblk)(struct dquot *) ;
   int (*commit_dqblk)(struct dquot *) ;
   int (*release_dqblk)(struct dquot *) ;
   int (*get_next_id)(struct super_block *, struct kqid *) ;
};
#line 322  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct dquot_operations {
   int (*write_dquot)(struct dquot *) ;
   struct dquot *(*alloc_dquot)(struct super_block *, int ) ;
   void (*destroy_dquot)(struct dquot *) ;
   int (*acquire_dquot)(struct dquot *) ;
   int (*release_dquot)(struct dquot *) ;
   int (*mark_dirty)(struct dquot *) ;
   int (*write_info)(struct super_block *, int ) ;
   qsize_t *(*get_reserved_space)(struct inode *) ;
   int (*get_projid)(struct inode *, kprojid_t *) ;
   int (*get_inode_usage)(struct inode *, qsize_t *) ;
   int (*get_next_id)(struct super_block *, struct kqid *) ;
};
#line 343  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct qc_dqblk {
   int d_fieldmask ;
   u64 d_spc_hardlimit ;
   u64 d_spc_softlimit ;
   u64 d_ino_hardlimit ;
   u64 d_ino_softlimit ;
   u64 d_space ;
   u64 d_ino_count ;
   s64 d_ino_timer ;
   s64 d_spc_timer ;
   int d_ino_warns ;
   int d_spc_warns ;
   u64 d_rt_spc_hardlimit ;
   u64 d_rt_spc_softlimit ;
   u64 d_rt_space ;
   s64 d_rt_spc_timer ;
   int d_rt_spc_warns ;
};
#line 395  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct qc_type_state {
   unsigned int flags ;
   unsigned int spc_timelimit ;
   unsigned int ino_timelimit ;
   unsigned int rt_spc_timelimit ;
   unsigned int spc_warnlimit ;
   unsigned int ino_warnlimit ;
   unsigned int rt_spc_warnlimit ;
   unsigned long long ino ;
   blkcnt_t blocks ;
   blkcnt_t nextents ;
};
#line 409  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct qc_state {
   unsigned int s_incoredqs ;
   struct qc_type_state s_state[3U] ;
};
#line 415  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct qc_info {
   int i_fieldmask ;
   unsigned int i_flags ;
   unsigned int i_spc_timelimit ;
   unsigned int i_ino_timelimit ;
   unsigned int i_rt_spc_timelimit ;
   unsigned int i_spc_warnlimit ;
   unsigned int i_ino_warnlimit ;
   unsigned int i_rt_spc_warnlimit ;
};
#line 428  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct quotactl_ops {
   int (*quota_on)(struct super_block *, int , int , struct path *) ;
   int (*quota_off)(struct super_block *, int ) ;
   int (*quota_enable)(struct super_block *, unsigned int ) ;
   int (*quota_disable)(struct super_block *, unsigned int ) ;
   int (*quota_sync)(struct super_block *, int ) ;
   int (*set_info)(struct super_block *, int , struct qc_info *) ;
   int (*get_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*get_nextdqblk)(struct super_block *, struct kqid *, struct qc_dqblk *) ;
   int (*set_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*get_state)(struct super_block *, struct qc_state *) ;
   int (*rm_xquota)(struct super_block *, unsigned int ) ;
};
#line 443  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct quota_format_type {
   int qf_fmt_id ;
   struct quota_format_ops *qf_ops ;
   struct module *qf_owner ;
   struct quota_format_type *qf_next ;
};
#line 518  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct quota_info {
   unsigned int flags ;
   struct rw_semaphore dqio_sem ;
   struct inode *files[3U] ;
   struct mem_dqinfo info[3U] ;
   struct quota_format_ops *ops[3U] ;
};
#line 538 
struct writeback_control;
#line 539 
enum rw_hint {
    WRITE_LIFE_NOT_SET = 0,
    WRITE_LIFE_NONE = 1,
    WRITE_LIFE_SHORT = 2,
    WRITE_LIFE_MEDIUM = 3,
    WRITE_LIFE_LONG = 4,
    WRITE_LIFE_EXTREME = 5
};
#line 318  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct kiocb {
   struct file *ki_filp ;
   loff_t ki_pos ;
   void (*ki_complete)(struct kiocb *, long , long ) ;
   void *private ;
   int ki_flags ;
   u16 ki_hint ;
   u16 ki_ioprio ;
   unsigned int ki_cookie ;
};
#line 339  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
union __anonunion_arg_435 {
   char *buf ;
   void *data ;
};
#line 339  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct __anonstruct_read_descriptor_t_434 {
   size_t written ;
   size_t count ;
   union __anonunion_arg_435 arg ;
   int error ;
};
#line 339  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
typedef struct __anonstruct_read_descriptor_t_434 read_descriptor_t;
#line 362  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct address_space_operations {
   int (*writepage)(struct page *, struct writeback_control *) ;
   int (*readpage)(struct file *, struct page *) ;
   int (*writepages)(struct address_space *, struct writeback_control *) ;
   int (*set_page_dirty)(struct page *) ;
   int (*readpages)(struct file *, struct address_space *, struct list_head *, unsigned int ) ;
   int (*write_begin)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page **, void **) ;
   int (*write_end)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page *, void *) ;
   sector_t (*bmap)(struct address_space *, sector_t ) ;
   void (*invalidatepage)(struct page *, unsigned int , unsigned int ) ;
   int (*releasepage)(struct page *, gfp_t ) ;
   void (*freepage)(struct page *) ;
   ssize_t (*direct_IO)(struct kiocb *, struct iov_iter *) ;
   int (*migratepage)(struct address_space *, struct page *, struct page *, enum migrate_mode ) ;
   bool (*isolate_page)(struct page *, isolate_mode_t ) ;
   void (*putback_page)(struct page *) ;
   int (*launder_page)(struct page *) ;
   int (*is_partially_uptodate)(struct page *, unsigned long , unsigned long ) ;
   void (*is_dirty_writeback)(struct page *, bool *, bool *) ;
   int (*error_remove_page)(struct address_space *, struct page *) ;
   int (*swap_activate)(struct swap_info_struct *, struct file *, sector_t *) ;
   void (*swap_deactivate)(struct file *) ;
};
#line 445  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct address_space {
   struct inode *host ;
   struct xarray i_pages ;
   gfp_t gfp_mask ;
   atomic_t i_mmap_writable ;
   atomic_t nr_thps ;
   struct rb_root_cached i_mmap ;
   struct rw_semaphore i_mmap_rwsem ;
   unsigned long nrpages ;
   unsigned long nrexceptional ;
   unsigned long writeback_index ;
   struct address_space_operations *a_ops ;
   unsigned long flags ;
   errseq_t wb_err ;
   spinlock_t private_lock ;
   struct list_head private_list ;
   void *private_data ;
} __attribute__((__designated_init__, __aligned__(8)));
#line 473 
struct hd_struct;
#line 473 
struct gendisk;
#line 473  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct block_device {
   dev_t bd_dev ;
   int bd_openers ;
   struct inode *bd_inode ;
   struct super_block *bd_super ;
   struct mutex bd_mutex ;
   void *bd_claiming ;
   void *bd_holder ;
   int bd_holders ;
   bool bd_write_holder ;
   struct list_head bd_holder_disks ;
   struct block_device *bd_contains ;
   unsigned int bd_block_size ;
   u8 bd_partno ;
   struct hd_struct *bd_part ;
   unsigned int bd_part_count ;
   int bd_invalidated ;
   struct gendisk *bd_disk ;
   struct request_queue *bd_queue ;
   struct backing_dev_info *bd_bdi ;
   struct list_head bd_list ;
   unsigned long bd_private ;
   int bd_fsfreeze_count ;
   struct mutex bd_fsfreeze_mutex ;
} __attribute__((__designated_init__));
#line 587 
struct posix_acl;
#line 614 
struct fsnotify_mark_connector;
#line 628 
struct inode_operations;
#line 628  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
union __anonunion_438 {
   unsigned int i_nlink ;
   unsigned int __i_nlink ;
};
#line 628  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
union __anonunion_439 {
   struct hlist_head i_dentry ;
   struct callback_head i_rcu ;
};
#line 628  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
union __anonunion_440 {
   struct file_operations *i_fop ;
   void (*free_inode)(struct inode *) ;
};
#line 628 
struct file_lock_context;
#line 628  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
union __anonunion_441 {
   struct pipe_inode_info *i_pipe ;
   struct block_device *i_bdev ;
   struct cdev *i_cdev ;
   char *i_link ;
   unsigned int i_dir_seq ;
};
#line 628  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct inode {
   umode_t i_mode ;
   unsigned short i_opflags ;
   kuid_t i_uid ;
   kgid_t i_gid ;
   unsigned int i_flags ;
   struct posix_acl *i_acl ;
   struct posix_acl *i_default_acl ;
   struct inode_operations *i_op ;
   struct super_block *i_sb ;
   struct address_space *i_mapping ;
   void *i_security ;
   unsigned long i_ino ;
   union __anonunion_438 __anonCompField_inode_67 ;
   dev_t i_rdev ;
   loff_t i_size ;
   struct timespec64 i_atime ;
   struct timespec64 i_mtime ;
   struct timespec64 i_ctime ;
   spinlock_t i_lock ;
   unsigned short i_bytes ;
   u8 i_blkbits ;
   u8 i_write_hint ;
   blkcnt_t i_blocks ;
   unsigned long i_state ;
   struct rw_semaphore i_rwsem ;
   unsigned long dirtied_when ;
   unsigned long dirtied_time_when ;
   struct hlist_node i_hash ;
   struct list_head i_io_list ;
   struct bdi_writeback *i_wb ;
   int i_wb_frn_winner ;
   u16 i_wb_frn_avg_time ;
   u16 i_wb_frn_history ;
   struct list_head i_lru ;
   struct list_head i_sb_list ;
   struct list_head i_wb_list ;
   union __anonunion_439 __anonCompField_inode_68 ;
   atomic64_t i_version ;
   atomic_t i_count ;
   atomic_t i_dio_count ;
   atomic_t i_writecount ;
   atomic_t i_readcount ;
   union __anonunion_440 __anonCompField_inode_69 ;
   struct file_lock_context *i_flctx ;
   struct address_space i_data ;
   struct list_head i_devices ;
   union __anonunion_441 __anonCompField_inode_70 ;
   __u32 i_generation ;
   __u32 i_fsnotify_mask ;
   struct fsnotify_mark_connector *i_fsnotify_marks ;
   struct fscrypt_info *i_crypt_info ;
   struct fsverity_info *i_verity_info ;
   void *i_private ;
} __attribute__((__designated_init__));
#line 904  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct fown_struct {
   rwlock_t lock ;
   struct pid *pid ;
   enum pid_type pid_type ;
   kuid_t uid ;
   kuid_t euid ;
   int signum ;
};
#line 915  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct file_ra_state {
   unsigned long start ;
   unsigned int size ;
   unsigned int async_size ;
   unsigned int ra_pages ;
   unsigned int mmap_miss ;
   loff_t prev_pos ;
};
#line 935  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
union __anonunion_f_u_442 {
   struct llist_node fu_llist ;
   struct callback_head fu_rcuhead ;
};
#line 935  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct file {
   union __anonunion_f_u_442 f_u ;
   struct path f_path ;
   struct inode *f_inode ;
   struct file_operations *f_op ;
   spinlock_t f_lock ;
   enum rw_hint f_write_hint ;
   atomic_long_t f_count ;
   unsigned int f_flags ;
   fmode_t f_mode ;
   struct mutex f_pos_lock ;
   loff_t f_pos ;
   struct fown_struct f_owner ;
   struct cred *f_cred ;
   struct file_ra_state f_ra ;
   u64 f_version ;
   void *f_security ;
   void *private_data ;
   struct list_head f_ep_links ;
   struct list_head f_tfile_llink ;
   struct address_space *f_mapping ;
   errseq_t f_wb_err ;
} __attribute__((__designated_init__, __aligned__(4)));
#line 988  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
typedef void *fl_owner_t;
#line 1026 
struct file_lock;
#line 1029  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct file_lock_operations {
   void (*fl_copy_lock)(struct file_lock *, struct file_lock *) ;
   void (*fl_release_private)(struct file_lock *) ;
};
#line 1034  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct lock_manager_operations {
   fl_owner_t (*lm_get_owner)(fl_owner_t ) ;
   void (*lm_put_owner)(fl_owner_t ) ;
   void (*lm_notify)(struct file_lock *) ;
   int (*lm_grant)(struct file_lock *, int ) ;
   bool (*lm_break)(struct file_lock *) ;
   int (*lm_change)(struct file_lock *, int , struct list_head *) ;
   void (*lm_setup)(struct file_lock *, void **) ;
};
#line 1052 
struct net;
#line 1058 
struct nlm_lockowner;
#line 10  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/nfs_fs_i.h"
struct nfs_lock_info {
   u32 state ;
   struct nlm_lockowner *owner ;
   struct list_head list ;
};
#line 15 
struct nfs4_lock_state;
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/nfs_fs_i.h"
struct nfs4_lock_info {
   struct nfs4_lock_state *owner ;
};
#line 1079  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct fasync_struct;
#line 1079  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct __anonstruct_afs_444 {
   struct list_head link ;
   int state ;
   unsigned int debug_id ;
};
#line 1079  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
union __anonunion_fl_u_443 {
   struct nfs_lock_info nfs_fl ;
   struct nfs4_lock_info nfs4_fl ;
   struct __anonstruct_afs_444 afs ;
};
#line 1079  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct file_lock {
   struct file_lock *fl_blocker ;
   struct list_head fl_list ;
   struct hlist_node fl_link ;
   struct list_head fl_blocked_requests ;
   struct list_head fl_blocked_member ;
   fl_owner_t fl_owner ;
   unsigned int fl_flags ;
   unsigned char fl_type ;
   unsigned int fl_pid ;
   int fl_link_cpu ;
   wait_queue_head_t fl_wait ;
   struct file *fl_file ;
   loff_t fl_start ;
   loff_t fl_end ;
   struct fasync_struct *fl_fasync ;
   unsigned long fl_break_time ;
   unsigned long fl_downgrade_time ;
   struct file_lock_operations *fl_ops ;
   struct lock_manager_operations *fl_lmops ;
   union __anonunion_fl_u_443 fl_u ;
} __attribute__((__designated_init__));
#line 1117  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct file_lock_context {
   spinlock_t flc_lock ;
   struct list_head flc_flock ;
   struct list_head flc_posix ;
   struct list_head flc_lease ;
};
#line 1331  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct fasync_struct {
   rwlock_t fa_lock ;
   int magic ;
   int fa_fd ;
   struct fasync_struct *fa_next ;
   struct file *fa_file ;
   struct callback_head fa_rcu ;
};
#line 1418  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct sb_writers {
   int frozen ;
   wait_queue_head_t wait_unfrozen ;
   struct percpu_rw_semaphore rw_sem[3U] ;
};
#line 1424 
struct super_operations;
#line 1424 
struct xattr_handler;
#line 1424 
struct mtd_info;
#line 1424  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct super_block {
   struct list_head s_list ;
   dev_t s_dev ;
   unsigned char s_blocksize_bits ;
   unsigned long s_blocksize ;
   loff_t s_maxbytes ;
   struct file_system_type *s_type ;
   struct super_operations *s_op ;
   struct dquot_operations *dq_op ;
   struct quotactl_ops *s_qcop ;
   struct export_operations *s_export_op ;
   unsigned long s_flags ;
   unsigned long s_iflags ;
   unsigned long s_magic ;
   struct dentry *s_root ;
   struct rw_semaphore s_umount ;
   int s_count ;
   atomic_t s_active ;
   void *s_security ;
   struct xattr_handler **s_xattr ;
   struct fscrypt_operations *s_cop ;
   struct key *s_master_keys ;
   struct fsverity_operations *s_vop ;
   struct hlist_bl_head s_roots ;
   struct list_head s_mounts ;
   struct block_device *s_bdev ;
   struct backing_dev_info *s_bdi ;
   struct mtd_info *s_mtd ;
   struct hlist_node s_instances ;
   unsigned int s_quota_types ;
   struct quota_info s_dquot ;
   struct sb_writers s_writers ;
   void *s_fs_info ;
   u32 s_time_gran ;
   time64_t s_time_min ;
   time64_t s_time_max ;
   __u32 s_fsnotify_mask ;
   struct fsnotify_mark_connector *s_fsnotify_marks ;
   char s_id[32U] ;
   uuid_t s_uuid ;
   unsigned int s_max_links ;
   fmode_t s_mode ;
   struct mutex s_vfs_rename_mutex ;
   char *s_subtype ;
   struct dentry_operations *s_d_op ;
   int cleancache_poolid ;
   struct shrinker s_shrink ;
   atomic_long_t s_remove_count ;
   atomic_long_t s_fsnotify_inode_refs ;
   int s_readonly_remount ;
   struct workqueue_struct *s_dio_done_wq ;
   struct hlist_head s_pins ;
   struct user_namespace *s_user_ns ;
   struct list_lru s_dentry_lru ;
   struct list_lru s_inode_lru ;
   struct callback_head rcu ;
   struct work_struct destroy_work ;
   struct mutex s_sync_lock ;
   int s_stack_depth ;
   spinlock_t s_inode_list_lock ;
   struct list_head s_inodes ;
   spinlock_t s_inode_wblist_lock ;
   struct list_head s_inodes_wb ;
} __attribute__((__designated_init__));
#line 1746  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct fiemap_extent_info {
   unsigned int fi_flags ;
   unsigned int fi_extents_mapped ;
   unsigned int fi_extents_max ;
   struct fiemap_extent *fi_extents_start ;
};
#line 1756 
struct dir_context;
#line 1767  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct dir_context {
   int (*actor)(struct dir_context *, char *, int , loff_t , u64 , unsigned int ) ;
   loff_t pos ;
};
#line 1771 
struct block_device_operations;
#line 1821  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct file_operations {
   struct module *owner ;
   loff_t (*llseek)(struct file *, loff_t , int ) ;
   ssize_t (*read)(struct file *, char *, size_t , loff_t *) ;
   ssize_t (*write)(struct file *, char *, size_t , loff_t *) ;
   ssize_t (*read_iter)(struct kiocb *, struct iov_iter *) ;
   ssize_t (*write_iter)(struct kiocb *, struct iov_iter *) ;
   int (*iopoll)(struct kiocb *, bool ) ;
   int (*iterate)(struct file *, struct dir_context *) ;
   int (*iterate_shared)(struct file *, struct dir_context *) ;
   __poll_t (*poll)(struct file *, struct poll_table_struct *) ;
   long (*unlocked_ioctl)(struct file *, unsigned int , unsigned long ) ;
   long (*compat_ioctl)(struct file *, unsigned int , unsigned long ) ;
   int (*mmap)(struct file *, struct vm_area_struct *) ;
   unsigned long mmap_supported_flags ;
   int (*open)(struct inode *, struct file *) ;
   int (*flush)(struct file *, fl_owner_t ) ;
   int (*release)(struct inode *, struct file *) ;
   int (*fsync)(struct file *, loff_t , loff_t , int ) ;
   int (*fasync)(int , struct file *, int ) ;
   int (*lock)(struct file *, int , struct file_lock *) ;
   ssize_t (*sendpage)(struct file *, struct page *, int , size_t , loff_t *, int ) ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   int (*check_flags)(int ) ;
   int (*flock)(struct file *, int , struct file_lock *) ;
   ssize_t (*splice_write)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ) ;
   ssize_t (*splice_read)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ) ;
   int (*setlease)(struct file *, long , struct file_lock **, void **) ;
   long (*fallocate)(struct file *, int , loff_t , loff_t ) ;
   void (*show_fdinfo)(struct seq_file *, struct file *) ;
   ssize_t (*copy_file_range)(struct file *, loff_t , struct file *, loff_t , size_t , unsigned int ) ;
   loff_t (*remap_file_range)(struct file *, loff_t , struct file *, loff_t , loff_t , unsigned int ) ;
   int (*fadvise)(struct file *, loff_t , loff_t , int ) ;
} __attribute__((__designated_init__));
#line 1863  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct inode_operations {
   struct dentry *(*lookup)(struct inode *, struct dentry *, unsigned int ) ;
   char *(*get_link)(struct dentry *, struct inode *, struct delayed_call *) ;
   int (*permission)(struct inode *, int ) ;
   struct posix_acl *(*get_acl)(struct inode *, int ) ;
   int (*readlink)(struct dentry *, char *, int ) ;
   int (*create)(struct inode *, struct dentry *, umode_t , bool ) ;
   int (*link)(struct dentry *, struct inode *, struct dentry *) ;
   int (*unlink)(struct inode *, struct dentry *) ;
   int (*symlink)(struct inode *, struct dentry *, char *) ;
   int (*mkdir)(struct inode *, struct dentry *, umode_t ) ;
   int (*rmdir)(struct inode *, struct dentry *) ;
   int (*mknod)(struct inode *, struct dentry *, umode_t , dev_t ) ;
   int (*rename)(struct inode *, struct dentry *, struct inode *, struct dentry *, unsigned int ) ;
   int (*setattr)(struct dentry *, struct iattr *) ;
   int (*getattr)(struct path *, struct kstat *, u32 , unsigned int ) ;
   ssize_t (*listxattr)(struct dentry *, char *, size_t ) ;
   int (*fiemap)(struct inode *, struct fiemap_extent_info *, u64 , u64 ) ;
   int (*update_time)(struct inode *, struct timespec64 *, int ) ;
   int (*atomic_open)(struct inode *, struct dentry *, struct file *, unsigned int , umode_t ) ;
   int (*tmpfile)(struct inode *, struct dentry *, umode_t ) ;
   int (*set_acl)(struct inode *, struct posix_acl *, int ) ;
} __attribute__((__aligned__(64)));
#line 1942  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct super_operations {
   struct inode *(*alloc_inode)(struct super_block *) ;
   void (*destroy_inode)(struct inode *) ;
   void (*free_inode)(struct inode *) ;
   void (*dirty_inode)(struct inode *, int ) ;
   int (*write_inode)(struct inode *, struct writeback_control *) ;
   int (*drop_inode)(struct inode *) ;
   void (*evict_inode)(struct inode *) ;
   void (*put_super)(struct super_block *) ;
   int (*sync_fs)(struct super_block *, int ) ;
   int (*freeze_super)(struct super_block *) ;
   int (*freeze_fs)(struct super_block *) ;
   int (*thaw_super)(struct super_block *) ;
   int (*unfreeze_fs)(struct super_block *) ;
   int (*statfs)(struct dentry *, struct kstatfs *) ;
   int (*remount_fs)(struct super_block *, int *, char *) ;
   void (*umount_begin)(struct super_block *) ;
   int (*show_options)(struct seq_file *, struct dentry *) ;
   int (*show_devname)(struct seq_file *, struct dentry *) ;
   int (*show_path)(struct seq_file *, struct dentry *) ;
   int (*show_stats)(struct seq_file *, struct dentry *) ;
   ssize_t (*quota_read)(struct super_block *, int , char *, size_t , loff_t ) ;
   ssize_t (*quota_write)(struct super_block *, int , char *, size_t , loff_t ) ;
   struct dquot **(*get_dquots)(struct inode *) ;
   int (*bdev_try_to_free_page)(struct super_block *, struct page *, gfp_t ) ;
   long (*nr_cached_objects)(struct super_block *, struct shrink_control *) ;
   long (*free_cached_objects)(struct super_block *, struct shrink_control *) ;
};
#line 2217  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct file_system_type {
   char *name ;
   int fs_flags ;
   int (*init_fs_context)(struct fs_context *) ;
   struct fs_parameter_description *parameters ;
   struct dentry *(*mount)(struct file_system_type *, int , char *, void *) ;
   void (*kill_sb)(struct super_block *) ;
   struct module *owner ;
   struct file_system_type *next ;
   struct hlist_head fs_supers ;
   struct lock_class_key s_lock_key ;
   struct lock_class_key s_umount_key ;
   struct lock_class_key s_vfs_rename_key ;
   struct lock_class_key s_writers_key[3U] ;
   struct lock_class_key i_lock_key ;
   struct lock_class_key i_mutex_key ;
   struct lock_class_key i_mutex_dir_key ;
};
#line 279  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pm_runtime.h"
struct usb_device;
#line 281 
struct wusb_dev;
#line 282 
struct ep_device;
#line 67  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb_host_endpoint {
   struct usb_endpoint_descriptor desc ;
   struct usb_ss_ep_comp_descriptor ss_ep_comp ;
   struct usb_ssp_isoc_ep_comp_descriptor ssp_isoc_ep_comp ;
   struct list_head urb_list ;
   void *hcpriv ;
   struct ep_device *ep_dev ;
   unsigned char *extra ;
   int extralen ;
   int enabled ;
   int streams ;
};
#line 82  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb_host_interface {
   struct usb_interface_descriptor desc ;
   int extralen ;
   unsigned char *extra ;
   struct usb_host_endpoint *endpoint ;
   char *string ;
};
#line 95 
enum usb_interface_condition {
    USB_INTERFACE_UNBOUND = 0,
    USB_INTERFACE_BINDING = 1,
    USB_INTERFACE_BOUND = 2,
    USB_INTERFACE_UNBINDING = 3
};
#line 232  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb_interface {
   struct usb_host_interface *altsetting ;
   struct usb_host_interface *cur_altsetting ;
   unsigned int num_altsetting ;
   struct usb_interface_assoc_descriptor *intf_assoc ;
   int minor ;
   enum usb_interface_condition condition ;
   unsigned int sysfs_files_created : 1 ;
   unsigned int ep_devs_created : 1 ;
   unsigned int unregistering : 1 ;
   unsigned int needs_remote_wakeup : 1 ;
   unsigned int needs_altsetting0 : 1 ;
   unsigned int needs_binding : 1 ;
   unsigned int resetting_device : 1 ;
   unsigned int authorized : 1 ;
   struct device dev ;
   struct device *usb_dev ;
   struct work_struct reset_ws ;
};
#line 322  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb_interface_cache {
   unsigned int num_altsetting ;
   struct kref ref ;
   struct usb_host_interface altsetting[0U] ;
};
#line 374  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb_host_config {
   struct usb_config_descriptor desc ;
   char *string ;
   struct usb_interface_assoc_descriptor *intf_assoc[16U] ;
   struct usb_interface *interface[32U] ;
   struct usb_interface_cache *intf_cache[32U] ;
   unsigned char *extra ;
   int extralen ;
};
#line 396  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb_host_bos {
   struct usb_bos_descriptor *desc ;
   struct usb_ext_cap_descriptor *ext_cap ;
   struct usb_ss_cap_descriptor *ss_cap ;
   struct usb_ssp_cap_descriptor *ssp_cap ;
   struct usb_ss_container_id_descriptor *ss_id ;
   struct usb_ptm_cap_descriptor *ptm_cap ;
};
#line 417  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb_devmap {
   unsigned long devicemap[2U] ;
};
#line 424 
struct mon_bus;
#line 424  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb_bus {
   struct device *controller ;
   struct device *sysdev ;
   int busnum ;
   char *bus_name ;
   u8 uses_pio_for_control ;
   u8 otg_port ;
   unsigned int is_b_host : 1 ;
   unsigned int b_hnp_enable : 1 ;
   unsigned int no_stop_on_short : 1 ;
   unsigned int no_sg_constraint : 1 ;
   unsigned int sg_tablesize ;
   int devnum_next ;
   struct mutex devnum_next_mutex ;
   struct usb_devmap devmap ;
   struct usb_device *root_hub ;
   struct usb_bus *hs_companion ;
   int bandwidth_allocated ;
   int bandwidth_int_reqs ;
   int bandwidth_isoc_reqs ;
   unsigned int resuming_ports ;
   struct mon_bus *mon_bus ;
   int monitored ;
};
#line 469 
struct usb_tt;
#line 470 
enum usb_device_removable {
    USB_DEVICE_REMOVABLE_UNKNOWN = 0,
    USB_DEVICE_REMOVABLE = 1,
    USB_DEVICE_FIXED = 2
};
#line 502  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb2_lpm_parameters {
   unsigned int besl ;
   int timeout ;
};
#line 522  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb3_lpm_parameters {
   unsigned int mel ;
   unsigned int pel ;
   unsigned int sel ;
   int timeout ;
};
#line 631  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb_device {
   int devnum ;
   char devpath[16U] ;
   u32 route ;
   enum usb_device_state state ;
   enum usb_device_speed speed ;
   unsigned int rx_lanes ;
   unsigned int tx_lanes ;
   struct usb_tt *tt ;
   int ttport ;
   unsigned int toggle[2U] ;
   struct usb_device *parent ;
   struct usb_bus *bus ;
   struct usb_host_endpoint ep0 ;
   struct device dev ;
   struct usb_device_descriptor descriptor ;
   struct usb_host_bos *bos ;
   struct usb_host_config *config ;
   struct usb_host_config *actconfig ;
   struct usb_host_endpoint *ep_in[16U] ;
   struct usb_host_endpoint *ep_out[16U] ;
   char **rawdescriptors ;
   unsigned short bus_mA ;
   u8 portnum ;
   u8 level ;
   u8 devaddr ;
   unsigned int can_submit : 1 ;
   unsigned int persist_enabled : 1 ;
   unsigned int have_langid : 1 ;
   unsigned int authorized : 1 ;
   unsigned int authenticated : 1 ;
   unsigned int wusb : 1 ;
   unsigned int lpm_capable : 1 ;
   unsigned int usb2_hw_lpm_capable : 1 ;
   unsigned int usb2_hw_lpm_besl_capable : 1 ;
   unsigned int usb2_hw_lpm_enabled : 1 ;
   unsigned int usb2_hw_lpm_allowed : 1 ;
   unsigned int usb3_lpm_u1_enabled : 1 ;
   unsigned int usb3_lpm_u2_enabled : 1 ;
   int string_langid ;
   char *product ;
   char *manufacturer ;
   char *serial ;
   struct list_head filelist ;
   int maxchild ;
   u32 quirks ;
   atomic_t urbnum ;
   unsigned long active_duration ;
   unsigned long connect_time ;
   unsigned int do_remote_wakeup : 1 ;
   unsigned int reset_resume : 1 ;
   unsigned int port_is_suspended : 1 ;
   struct wusb_dev *wusb_dev ;
   int slot_id ;
   enum usb_device_removable removable ;
   struct usb2_lpm_parameters l1_params ;
   struct usb3_lpm_parameters u1_params ;
   struct usb3_lpm_parameters u2_params ;
   unsigned int lpm_disable_count ;
   u16 hub_delay ;
};
#line 1349  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb_anchor {
   struct list_head urb_list ;
   wait_queue_head_t wait ;
   spinlock_t lock ;
   atomic_t suspend_wakeups ;
   unsigned int poisoned : 1 ;
};
#line 1550 
struct scatterlist;
#line 41  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dynamic_queue_limits.h"
struct dql {
   unsigned int num_queued ;
   unsigned int adj_limit ;
   unsigned int last_obj_cnt ;
   unsigned int limit ;
   unsigned int num_completed ;
   unsigned int prev_ovlimit ;
   unsigned int prev_num_queued ;
   unsigned int prev_last_obj_cnt ;
   unsigned int lowest_slack ;
   unsigned long slack_start_time ;
   unsigned int max_limit ;
   unsigned int min_limit ;
   unsigned int slack_hold_time ;
};
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/uio.h"
struct iovec {
   void *iov_base ;
   __kernel_size_t iov_len ;
};
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uio.h"
struct kvec {
   void *iov_base ;
   size_t iov_len ;
};
#line 30 
struct bio_vec;
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uio.h"
union __anonunion_454 {
   struct iovec *iov ;
   struct kvec *kvec ;
   struct bio_vec *bvec ;
   struct pipe_inode_info *pipe ;
};
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uio.h"
struct __anonstruct_456 {
   unsigned int head ;
   unsigned int start_head ;
};
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uio.h"
union __anonunion_455 {
   unsigned long nr_segs ;
   struct __anonstruct_456 __anonCompField___anonunion_455_72 ;
};
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uio.h"
struct iov_iter {
   unsigned int type ;
   size_t iov_offset ;
   size_t count ;
   union __anonunion_454 __anonCompField_iov_iter_71 ;
   union __anonunion_455 __anonCompField_iov_iter_73 ;
};
#line 285  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uio.h"
typedef unsigned short __kernel_sa_family_t;
#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/socket.h"
struct socket;
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/socket.h"
typedef __kernel_sa_family_t sa_family_t;
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/socket.h"
struct sockaddr {
   sa_family_t sa_family ;
   char sa_data[14U] ;
};
#line 49  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/socket.h"
struct msghdr {
   void *msg_name ;
   int msg_namelen ;
   struct iov_iter msg_iter ;
   void *msg_control ;
   __kernel_size_t msg_controllen ;
   unsigned int msg_flags ;
   struct kiocb *msg_iocb ;
};
#line 422 
struct ns_common;
#line 423  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/socket.h"
struct __anonstruct_sync_serial_settings_459 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
};
#line 423  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/socket.h"
typedef struct __anonstruct_sync_serial_settings_459 sync_serial_settings;
#line 45  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_te1_settings_460 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
   unsigned int slot_map ;
};
#line 45  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_te1_settings_460 te1_settings;
#line 52  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_raw_hdlc_proto_461 {
   unsigned short encoding ;
   unsigned short parity ;
};
#line 52  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_raw_hdlc_proto_461 raw_hdlc_proto;
#line 57  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_462 {
   unsigned int t391 ;
   unsigned int t392 ;
   unsigned int n391 ;
   unsigned int n392 ;
   unsigned int n393 ;
   unsigned short lmi ;
   unsigned short dce ;
};
#line 57  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_462 fr_proto;
#line 67  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_463 {
   unsigned int dlci ;
};
#line 67  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_463 fr_proto_pvc;
#line 71  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_info_464 {
   unsigned int dlci ;
   char master[16U] ;
};
#line 71  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_info_464 fr_proto_pvc_info;
#line 76  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_cisco_proto_465 {
   unsigned int interval ;
   unsigned int timeout ;
};
#line 76  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_cisco_proto_465 cisco_proto;
#line 195  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if.h"
struct ifmap {
   unsigned long mem_start ;
   unsigned long mem_end ;
   unsigned short base_addr ;
   unsigned char irq ;
   unsigned char dma ;
   unsigned char port ;
};
#line 206  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if.h"
union __anonunion_ifs_ifsu_466 {
   raw_hdlc_proto *raw_hdlc ;
   cisco_proto *cisco ;
   fr_proto *fr ;
   fr_proto_pvc *fr_pvc ;
   fr_proto_pvc_info *fr_pvc_info ;
   sync_serial_settings *sync ;
   te1_settings *te1 ;
};
#line 206  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if.h"
struct if_settings {
   unsigned int type ;
   unsigned int size ;
   union __anonunion_ifs_ifsu_466 ifs_ifsu ;
};
#line 232  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if.h"
union __anonunion_ifr_ifrn_467 {
   char ifrn_name[16U] ;
};
#line 232  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if.h"
union __anonunion_ifr_ifru_468 {
   struct sockaddr ifru_addr ;
   struct sockaddr ifru_dstaddr ;
   struct sockaddr ifru_broadaddr ;
   struct sockaddr ifru_netmask ;
   struct sockaddr ifru_hwaddr ;
   short ifru_flags ;
   int ifru_ivalue ;
   int ifru_mtu ;
   struct ifmap ifru_map ;
   char ifru_slave[16U] ;
   char ifru_newname[16U] ;
   void *ifru_data ;
   struct if_settings ifru_settings ;
};
#line 232  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if.h"
struct ifreq {
   union __anonunion_ifr_ifrn_467 ifr_ifrn ;
   union __anonunion_ifr_ifru_468 ifr_ifru ;
};
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/compat.h"
typedef s32 compat_long_t;
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/compat.h"
typedef u32 compat_uptr_t;
#line 367  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/compat.h"
struct compat_robust_list {
   compat_uptr_t next ;
};
#line 371  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/compat.h"
struct compat_robust_list_head {
   struct compat_robust_list list ;
   compat_long_t futex_offset ;
   compat_uptr_t list_op_pending ;
};
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memremap.h"
struct vmem_altmap {
   unsigned long base_pfn ;
   unsigned long end_pfn ;
   unsigned long reserve ;
   unsigned long free ;
   unsigned long align ;
   unsigned long alloc ;
};
#line 26 
enum memory_type {
    MEMORY_DEVICE_PRIVATE = 1,
    MEMORY_DEVICE_FS_DAX = 2,
    MEMORY_DEVICE_DEVDAX = 3,
    MEMORY_DEVICE_PCI_P2PDMA = 4
};
#line 67  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memremap.h"
struct dev_pagemap_ops {
   void (*page_free)(struct page *) ;
   void (*kill)(struct dev_pagemap *) ;
   void (*cleanup)(struct dev_pagemap *) ;
   vm_fault_t (*migrate_to_ram)(struct vm_fault *) ;
};
#line 107  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memremap.h"
struct dev_pagemap {
   struct vmem_altmap altmap ;
   struct resource res ;
   struct percpu_ref *ref ;
   struct percpu_ref internal_ref ;
   struct completion done ;
   enum memory_type type ;
   unsigned int flags ;
   struct dev_pagemap_ops *ops ;
};
#line 417  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm.h"
struct vm_fault {
   struct vm_area_struct *vma ;
   unsigned int flags ;
   gfp_t gfp_mask ;
   unsigned long pgoff ;
   unsigned long address ;
   pmd_t *pmd ;
   pud_t *pud ;
   pte_t orig_pte ;
   struct page *cow_page ;
   struct mem_cgroup *memcg ;
   struct page *page ;
   pte_t *pte ;
   spinlock_t *ptl ;
   pgtable_t prealloc_pte ;
};
#line 448 
enum page_entry_size {
    PE_SIZE_PTE = 0,
    PE_SIZE_PMD = 1,
    PE_SIZE_PUD = 2
};
#line 467  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm.h"
struct vm_operations_struct {
   void (*open)(struct vm_area_struct *) ;
   void (*close)(struct vm_area_struct *) ;
   int (*split)(struct vm_area_struct *, unsigned long ) ;
   int (*mremap)(struct vm_area_struct *) ;
   vm_fault_t (*fault)(struct vm_fault *) ;
   vm_fault_t (*huge_fault)(struct vm_fault *, enum page_entry_size ) ;
   void (*map_pages)(struct vm_fault *, unsigned long , unsigned long ) ;
   unsigned long (*pagesize)(struct vm_area_struct *) ;
   vm_fault_t (*page_mkwrite)(struct vm_fault *) ;
   vm_fault_t (*pfn_mkwrite)(struct vm_fault *) ;
   int (*access)(struct vm_area_struct *, unsigned long , void *, int , int ) ;
   char *(*name)(struct vm_area_struct *) ;
   int (*set_policy)(struct vm_area_struct *, struct mempolicy *) ;
   struct mempolicy *(*get_policy)(struct vm_area_struct *, unsigned long ) ;
   struct page *(*find_special_page)(struct vm_area_struct *, unsigned long ) ;
};
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bvec.h"
struct bio_vec {
   struct page *bv_page ;
   unsigned int bv_len ;
   unsigned int bv_offset ;
};
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bvec.h"
struct bvec_iter {
   sector_t bi_sector ;
   unsigned int bi_size ;
   unsigned int bi_idx ;
   unsigned int bi_bvec_done ;
};
#line 201  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/random.h"
enum ldv_10758 {
    SS_FREE = 0,
    SS_UNCONNECTED = 1,
    SS_CONNECTING = 2,
    SS_CONNECTED = 3,
    SS_DISCONNECTING = 4
};
#line 209  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/random.h"
typedef enum ldv_10758 socket_state;
#line 94  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/net.h"
struct socket_wq {
   wait_queue_head_t wait ;
   struct fasync_struct *fasync_list ;
   unsigned long flags ;
   struct callback_head rcu ;
} __attribute__((__aligned__(64)));
#line 112 
struct proto_ops;
#line 112  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/net.h"
struct socket {
   socket_state state ;
   short type ;
   unsigned long flags ;
   struct file *file ;
   struct sock *sk ;
   struct proto_ops *ops ;
   struct socket_wq wq ;
};
#line 125 
struct sk_buff;
#line 135  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/net.h"
struct proto_ops {
   int family ;
   struct module *owner ;
   int (*release)(struct socket *) ;
   int (*bind)(struct socket *, struct sockaddr *, int ) ;
   int (*connect)(struct socket *, struct sockaddr *, int , int ) ;
   int (*socketpair)(struct socket *, struct socket *) ;
   int (*accept)(struct socket *, struct socket *, int , bool ) ;
   int (*getname)(struct socket *, struct sockaddr *, int ) ;
   __poll_t (*poll)(struct file *, struct socket *, struct poll_table_struct *) ;
   int (*ioctl)(struct socket *, unsigned int , unsigned long ) ;
   int (*compat_ioctl)(struct socket *, unsigned int , unsigned long ) ;
   int (*gettstamp)(struct socket *, void *, bool , bool ) ;
   int (*listen)(struct socket *, int ) ;
   int (*shutdown)(struct socket *, int ) ;
   int (*setsockopt)(struct socket *, int , int , char *, unsigned int ) ;
   int (*getsockopt)(struct socket *, int , int , char *, int *) ;
   int (*compat_setsockopt)(struct socket *, int , int , char *, unsigned int ) ;
   int (*compat_getsockopt)(struct socket *, int , int , char *, int *) ;
   int (*sendmsg)(struct socket *, struct msghdr *, size_t ) ;
   int (*recvmsg)(struct socket *, struct msghdr *, size_t , int ) ;
   int (*mmap)(struct file *, struct socket *, struct vm_area_struct *) ;
   ssize_t (*sendpage)(struct socket *, struct page *, int , size_t , int ) ;
   ssize_t (*splice_read)(struct socket *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ) ;
   int (*set_peek_off)(struct sock *, int ) ;
   int (*peek_len)(struct socket *) ;
   int (*read_sock)(struct sock *, read_descriptor_t *, int (*)(read_descriptor_t *, struct sk_buff *, unsigned int , size_t )) ;
   int (*sendpage_locked)(struct sock *, struct page *, int , size_t , int ) ;
   int (*sendmsg_locked)(struct sock *, struct msghdr *, size_t ) ;
   int (*set_rcvlowat)(struct sock *, int ) ;
};
#line 162  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/checksum_64.h"
struct in6_addr;
#line 71  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dma-debug.h"
enum dma_data_direction {
    DMA_BIDIRECTIONAL = 0,
    DMA_TO_DEVICE = 1,
    DMA_FROM_DEVICE = 2,
    DMA_NONE = 3
};
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/scatterlist.h"
struct scatterlist {
   unsigned long page_link ;
   unsigned int offset ;
   unsigned int length ;
   dma_addr_t dma_address ;
   unsigned int dma_length ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/scatterlist.h"
struct sg_table {
   struct scatterlist *sgl ;
   unsigned int nents ;
   unsigned int orig_nents ;
};
#line 76  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dma-mapping.h"
struct dma_map_ops {
   void *(*alloc)(struct device *, size_t , dma_addr_t *, gfp_t , unsigned long ) ;
   void (*free)(struct device *, size_t , void *, dma_addr_t , unsigned long ) ;
   int (*mmap)(struct device *, struct vm_area_struct *, void *, dma_addr_t , size_t , unsigned long ) ;
   int (*get_sgtable)(struct device *, struct sg_table *, void *, dma_addr_t , size_t , unsigned long ) ;
   dma_addr_t (*map_page)(struct device *, struct page *, unsigned long , size_t , enum dma_data_direction , unsigned long ) ;
   void (*unmap_page)(struct device *, dma_addr_t , size_t , enum dma_data_direction , unsigned long ) ;
   int (*map_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , unsigned long ) ;
   void (*unmap_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , unsigned long ) ;
   dma_addr_t (*map_resource)(struct device *, phys_addr_t , size_t , enum dma_data_direction , unsigned long ) ;
   void (*unmap_resource)(struct device *, dma_addr_t , size_t , enum dma_data_direction , unsigned long ) ;
   void (*sync_single_for_cpu)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_single_for_device)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_sg_for_cpu)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   void (*sync_sg_for_device)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   void (*cache_sync)(struct device *, void *, size_t , enum dma_data_direction ) ;
   int (*dma_supported)(struct device *, u64 ) ;
   u64 (*get_required_mask)(struct device *) ;
   size_t (*max_mapping_size)(struct device *) ;
   unsigned long (*get_merge_boundary)(struct device *) ;
};
#line 803  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dma-mapping.h"
typedef u64 netdev_features_t;
#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/in6.h"
union __anonunion_in6_u_513 {
   __u8 u6_addr8[16U] ;
   __be16 u6_addr16[8U] ;
   __be32 u6_addr32[4U] ;
};
#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/in6.h"
struct in6_addr {
   union __anonunion_in6_u_513 in6_u ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/in6.h"
struct __anonstruct_siphash_key_t_514 {
   u64 key[2U] ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/in6.h"
typedef struct __anonstruct_siphash_key_t_514 siphash_key_t;
#line 163  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if_ether.h"
struct ethhdr {
   unsigned char h_dest[6U] ;
   unsigned char h_source[6U] ;
   __be16 h_proto ;
} __attribute__((__packed__));
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pipe_fs_i.h"
struct pipe_buf_operations;
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pipe_fs_i.h"
struct pipe_buffer {
   struct page *page ;
   unsigned int offset ;
   unsigned int len ;
   struct pipe_buf_operations *ops ;
   unsigned int flags ;
   unsigned long private ;
};
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pipe_fs_i.h"
struct pipe_inode_info {
   struct mutex mutex ;
   wait_queue_head_t wait ;
   unsigned int head ;
   unsigned int tail ;
   unsigned int max_usage ;
   unsigned int ring_size ;
   unsigned int readers ;
   unsigned int writers ;
   unsigned int files ;
   unsigned int r_counter ;
   unsigned int w_counter ;
   struct page *tmp_page ;
   struct fasync_struct *fasync_readers ;
   struct fasync_struct *fasync_writers ;
   struct pipe_buffer *bufs ;
   struct user_struct *user ;
};
#line 77  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pipe_fs_i.h"
struct pipe_buf_operations {
   int (*confirm)(struct pipe_inode_info *, struct pipe_buffer *) ;
   void (*release)(struct pipe_inode_info *, struct pipe_buffer *) ;
   int (*steal)(struct pipe_inode_info *, struct pipe_buffer *) ;
   bool (*get)(struct pipe_inode_info *, struct pipe_buffer *) ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct flowi_tunnel {
   __be64 tun_id ;
};
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct flowi_common {
   int flowic_oif ;
   int flowic_iif ;
   __u32 flowic_mark ;
   __u8 flowic_tos ;
   __u8 flowic_scope ;
   __u8 flowic_proto ;
   __u8 flowic_flags ;
   __u32 flowic_secid ;
   kuid_t flowic_uid ;
   struct flowi_tunnel flowic_tun_key ;
   __u32 flowic_multipath_hash ;
};
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct __anonstruct_ports_525 {
   __be16 dport ;
   __be16 sport ;
};
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct __anonstruct_icmpt_526 {
   __u8 type ;
   __u8 code ;
};
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct __anonstruct_dnports_527 {
   __le16 dport ;
   __le16 sport ;
};
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct __anonstruct_mht_528 {
   __u8 type ;
};
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
union flowi_uli {
   struct __anonstruct_ports_525 ports ;
   struct __anonstruct_icmpt_526 icmpt ;
   struct __anonstruct_dnports_527 dnports ;
   __be32 spi ;
   __be32 gre_key ;
   struct __anonstruct_mht_528 mht ;
};
#line 70  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct flowi4 {
   struct flowi_common __fl_common ;
   __be32 saddr ;
   __be32 daddr ;
   union flowi_uli uli ;
} __attribute__((__aligned__(8)));
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct flowi6 {
   struct flowi_common __fl_common ;
   struct in6_addr daddr ;
   struct in6_addr saddr ;
   __be32 flowlabel ;
   union flowi_uli uli ;
   __u32 mp_hash ;
} __attribute__((__aligned__(8)));
#line 158  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct flowidn {
   struct flowi_common __fl_common ;
   __le16 daddr ;
   __le16 saddr ;
   union flowi_uli uli ;
} __attribute__((__aligned__(8)));
#line 173  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
union __anonunion_u_529 {
   struct flowi_common __fl_common ;
   struct flowi4 ip4 ;
   struct flowi6 ip6 ;
   struct flowidn dn ;
};
#line 173  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct flowi {
   union __anonunion_u_529 u ;
} __attribute__((__aligned__(8)));
#line 8  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netfilter/nf_conntrack_common.h"
struct ip_conntrack_stat {
   unsigned int found ;
   unsigned int invalid ;
   unsigned int ignore ;
   unsigned int insert ;
   unsigned int insert_failed ;
   unsigned int drop ;
   unsigned int early_drop ;
   unsigned int error ;
   unsigned int expect_new ;
   unsigned int expect_create ;
   unsigned int expect_delete ;
   unsigned int search_restart ;
};
#line 42 
struct bpf_prog;
#line 43 
union bpf_attr;
#line 44 
struct skb_ext;
#line 289  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
struct sk_buff_head {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   __u32 qlen ;
   spinlock_t lock ;
};
#line 562  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
typedef unsigned int sk_buff_data_t;
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_536 {
   struct net_device *dev ;
   unsigned long dev_scratch ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
struct __anonstruct_535 {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   union __anonunion_536 __anonCompField___anonstruct_535_89 ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_534 {
   struct __anonstruct_535 __anonCompField___anonunion_534_90 ;
   struct rb_node rbnode ;
   struct list_head list ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_537 {
   struct sock *sk ;
   int ip_defrag_offset ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_538 {
   ktime_t tstamp ;
   u64 skb_mstamp_ns ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
struct __anonstruct_540 {
   unsigned long _skb_refdst ;
   void (*destructor)(struct sk_buff *) ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_539 {
   struct __anonstruct_540 __anonCompField___anonunion_539_94 ;
   struct list_head tcp_tsorted_anchor ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
struct __anonstruct_542 {
   __u16 csum_start ;
   __u16 csum_offset ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_541 {
   __wsum csum ;
   struct __anonstruct_542 __anonCompField___anonunion_541_96 ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_543 {
   unsigned int napi_id ;
   unsigned int sender_cpu ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_544 {
   __u32 mark ;
   __u32 reserved_tailroom ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_545 {
   __be16 inner_protocol ;
   __u8 inner_ipproto ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
struct sk_buff {
   union __anonunion_534 __anonCompField_sk_buff_91 ;
   union __anonunion_537 __anonCompField_sk_buff_92 ;
   union __anonunion_538 __anonCompField_sk_buff_93 ;
   char cb[48U] ;
   union __anonunion_539 __anonCompField_sk_buff_95 ;
   unsigned long _nfct ;
   unsigned int len ;
   unsigned int data_len ;
   __u16 mac_len ;
   __u16 hdr_len ;
   __u16 queue_mapping ;
   __u8 __cloned_offset[0U] ;
   __u8 cloned : 1 ;
   __u8 nohdr : 1 ;
   __u8 fclone : 2 ;
   __u8 peeked : 1 ;
   __u8 head_frag : 1 ;
   __u8 pfmemalloc : 1 ;
   __u8 active_extensions ;
   __u32 headers_start[0U] ;
   __u8 __pkt_type_offset[0U] ;
   __u8 pkt_type : 3 ;
   __u8 ignore_df : 1 ;
   __u8 nf_trace : 1 ;
   __u8 ip_summed : 2 ;
   __u8 ooo_okay : 1 ;
   __u8 l4_hash : 1 ;
   __u8 sw_hash : 1 ;
   __u8 wifi_acked_valid : 1 ;
   __u8 wifi_acked : 1 ;
   __u8 no_fcs : 1 ;
   __u8 encapsulation : 1 ;
   __u8 encap_hdr_csum : 1 ;
   __u8 csum_valid : 1 ;
   __u8 __pkt_vlan_present_offset[0U] ;
   __u8 vlan_present : 1 ;
   __u8 csum_complete_sw : 1 ;
   __u8 csum_level : 2 ;
   __u8 csum_not_inet : 1 ;
   __u8 dst_pending_confirm : 1 ;
   __u8 ndisc_nodetype : 2 ;
   __u8 ipvs_property : 1 ;
   __u8 inner_protocol_type : 1 ;
   __u8 remcsum_offload : 1 ;
   __u8 offload_fwd_mark : 1 ;
   __u8 offload_l3_fwd_mark : 1 ;
   __u8 tc_skip_classify : 1 ;
   __u8 tc_at_ingress : 1 ;
   __u8 tc_redirected : 1 ;
   __u8 tc_from_ingress : 1 ;
   __u8 decrypted : 1 ;
   __u16 tc_index ;
   union __anonunion_541 __anonCompField_sk_buff_97 ;
   __u32 priority ;
   int skb_iif ;
   __u32 hash ;
   __be16 vlan_proto ;
   __u16 vlan_tci ;
   union __anonunion_543 __anonCompField_sk_buff_98 ;
   __u32 secmark ;
   union __anonunion_544 __anonCompField_sk_buff_99 ;
   union __anonunion_545 __anonCompField_sk_buff_100 ;
   __u16 inner_transport_header ;
   __u16 inner_network_header ;
   __u16 inner_mac_header ;
   __be16 protocol ;
   __u16 transport_header ;
   __u16 network_header ;
   __u16 mac_header ;
   __u32 headers_end[0U] ;
   sk_buff_data_t tail ;
   sk_buff_data_t end ;
   unsigned char *head ;
   unsigned char *data ;
   unsigned int truesize ;
   refcount_t users ;
   struct skb_ext *extensions ;
};
#line 920 
struct dst_entry;
#line 4108  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
struct skb_ext {
   refcount_t refcnt ;
   u8 offset[3U] ;
   u8 chunks ;
   char data[0U] ;
};
#line 177  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_drvinfo {
   __u32 cmd ;
   char driver[32U] ;
   char version[32U] ;
   char fw_version[32U] ;
   char bus_info[32U] ;
   char erom_version[32U] ;
   char reserved2[12U] ;
   __u32 n_priv_flags ;
   __u32 n_stats ;
   __u32 testinfo_len ;
   __u32 eedump_len ;
   __u32 regdump_len ;
};
#line 203  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_wolinfo {
   __u32 cmd ;
   __u32 supported ;
   __u32 wolopts ;
   __u8 sopass[6U] ;
};
#line 244  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_tunable {
   __u32 cmd ;
   __u32 id ;
   __u32 type_id ;
   __u32 len ;
   void *data[0U] ;
};
#line 310  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_regs {
   __u32 cmd ;
   __u32 version ;
   __u32 len ;
   __u8 data[0U] ;
};
#line 335  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_eeprom {
   __u32 cmd ;
   __u32 magic ;
   __u32 offset ;
   __u32 len ;
   __u8 data[0U] ;
};
#line 360  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_eee {
   __u32 cmd ;
   __u32 supported ;
   __u32 advertised ;
   __u32 lp_advertised ;
   __u32 eee_active ;
   __u32 eee_enabled ;
   __u32 tx_lpi_enabled ;
   __u32 tx_lpi_timer ;
   __u32 reserved[2U] ;
};
#line 382  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_modinfo {
   __u32 cmd ;
   __u32 type ;
   __u32 eeprom_len ;
   __u32 reserved[8U] ;
};
#line 462  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_coalesce {
   __u32 cmd ;
   __u32 rx_coalesce_usecs ;
   __u32 rx_max_coalesced_frames ;
   __u32 rx_coalesce_usecs_irq ;
   __u32 rx_max_coalesced_frames_irq ;
   __u32 tx_coalesce_usecs ;
   __u32 tx_max_coalesced_frames ;
   __u32 tx_coalesce_usecs_irq ;
   __u32 tx_max_coalesced_frames_irq ;
   __u32 stats_block_coalesce_usecs ;
   __u32 use_adaptive_rx_coalesce ;
   __u32 use_adaptive_tx_coalesce ;
   __u32 pkt_rate_low ;
   __u32 rx_coalesce_usecs_low ;
   __u32 rx_max_coalesced_frames_low ;
   __u32 tx_coalesce_usecs_low ;
   __u32 tx_max_coalesced_frames_low ;
   __u32 pkt_rate_high ;
   __u32 rx_coalesce_usecs_high ;
   __u32 rx_max_coalesced_frames_high ;
   __u32 tx_coalesce_usecs_high ;
   __u32 tx_max_coalesced_frames_high ;
   __u32 rate_sample_interval ;
};
#line 513  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_ringparam {
   __u32 cmd ;
   __u32 rx_max_pending ;
   __u32 rx_mini_max_pending ;
   __u32 rx_jumbo_max_pending ;
   __u32 tx_max_pending ;
   __u32 rx_pending ;
   __u32 rx_mini_pending ;
   __u32 rx_jumbo_pending ;
   __u32 tx_pending ;
};
#line 541  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_channels {
   __u32 cmd ;
   __u32 max_rx ;
   __u32 max_tx ;
   __u32 max_other ;
   __u32 max_combined ;
   __u32 rx_count ;
   __u32 tx_count ;
   __u32 other_count ;
   __u32 combined_count ;
};
#line 575  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_pauseparam {
   __u32 cmd ;
   __u32 autoneg ;
   __u32 rx_pause ;
   __u32 tx_pause ;
};
#line 683  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_test {
   __u32 cmd ;
   __u32 flags ;
   __u32 reserved ;
   __u32 len ;
   __u64 data[0U] ;
};
#line 702  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_stats {
   __u32 cmd ;
   __u32 n_stats ;
   __u64 data[0U] ;
};
#line 758  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_tcpip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be16 psrc ;
   __be16 pdst ;
   __u8 tos ;
};
#line 775  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_ah_espip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 spi ;
   __u8 tos ;
};
#line 793  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_usrip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 l4_4_bytes ;
   __u8 tos ;
   __u8 ip_ver ;
   __u8 proto ;
};
#line 812  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_tcpip6_spec {
   __be32 ip6src[4U] ;
   __be32 ip6dst[4U] ;
   __be16 psrc ;
   __be16 pdst ;
   __u8 tclass ;
};
#line 829  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_ah_espip6_spec {
   __be32 ip6src[4U] ;
   __be32 ip6dst[4U] ;
   __be32 spi ;
   __u8 tclass ;
};
#line 844  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_usrip6_spec {
   __be32 ip6src[4U] ;
   __be32 ip6dst[4U] ;
   __be32 l4_4_bytes ;
   __u8 tclass ;
   __u8 l4_proto ;
};
#line 852  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
union ethtool_flow_union {
   struct ethtool_tcpip4_spec tcp_ip4_spec ;
   struct ethtool_tcpip4_spec udp_ip4_spec ;
   struct ethtool_tcpip4_spec sctp_ip4_spec ;
   struct ethtool_ah_espip4_spec ah_ip4_spec ;
   struct ethtool_ah_espip4_spec esp_ip4_spec ;
   struct ethtool_usrip4_spec usr_ip4_spec ;
   struct ethtool_tcpip6_spec tcp_ip6_spec ;
   struct ethtool_tcpip6_spec udp_ip6_spec ;
   struct ethtool_tcpip6_spec sctp_ip6_spec ;
   struct ethtool_ah_espip6_spec ah_ip6_spec ;
   struct ethtool_ah_espip6_spec esp_ip6_spec ;
   struct ethtool_usrip6_spec usr_ip6_spec ;
   struct ethhdr ether_spec ;
   __u8 hdata[52U] ;
};
#line 880  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_flow_ext {
   __u8 padding[2U] ;
   unsigned char h_dest[6U] ;
   __be16 vlan_etype ;
   __be16 vlan_tci ;
   __be32 data[2U] ;
};
#line 905  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_rx_flow_spec {
   __u32 flow_type ;
   union ethtool_flow_union h_u ;
   struct ethtool_flow_ext h_ext ;
   union ethtool_flow_union m_u ;
   struct ethtool_flow_ext m_ext ;
   __u64 ring_cookie ;
   __u32 location ;
};
#line 1001  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
union __anonunion_571 {
   __u32 rule_cnt ;
   __u32 rss_context ;
};
#line 1001  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_rxnfc {
   __u32 cmd ;
   __u32 flow_type ;
   __u64 data ;
   struct ethtool_rx_flow_spec fs ;
   union __anonunion_571 __anonCompField_ethtool_rxnfc_102 ;
   __u32 rule_locs[0U] ;
};
#line 1130  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_flash {
   __u32 cmd ;
   __u32 region ;
   char data[128U] ;
};
#line 1150  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_dump {
   __u32 cmd ;
   __u32 version ;
   __u32 flag ;
   __u32 len ;
   __u8 data[0U] ;
};
#line 1230  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_ts_info {
   __u32 cmd ;
   __u32 so_timestamping ;
   __s32 phc_index ;
   __u32 tx_types ;
   __u32 tx_reserved[3U] ;
   __u32 rx_filters ;
   __u32 rx_reserved[3U] ;
};
#line 1302  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_fecparam {
   __u32 cmd ;
   __u32 active_fec ;
   __u32 fec ;
   __u32 reserved ;
};
#line 1876  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_link_settings {
   __u32 cmd ;
   __u32 speed ;
   __u8 duplex ;
   __u8 port ;
   __u8 phy_address ;
   __u8 autoneg ;
   __u8 mdio_support ;
   __u8 eth_tp_mdix ;
   __u8 eth_tp_mdix_ctrl ;
   __s8 link_mode_masks_nwords ;
   __u8 transceiver ;
   __u8 reserved1[3U] ;
   __u32 reserved[7U] ;
   __u32 link_mode_masks[0U] ;
};
#line 40  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ethtool.h"
enum ethtool_phys_id_state {
    ETHTOOL_ID_INACTIVE = 0,
    ETHTOOL_ID_ACTIVE = 1,
    ETHTOOL_ID_ON = 2,
    ETHTOOL_ID_OFF = 3
};
#line 108  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ethtool.h"
struct __anonstruct_link_modes_574 {
   unsigned long supported[2U] ;
   unsigned long advertising[2U] ;
   unsigned long lp_advertising[2U] ;
};
#line 108  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ethtool.h"
struct ethtool_link_ksettings {
   struct ethtool_link_settings base ;
   struct __anonstruct_link_modes_574 link_modes ;
};
#line 325  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ethtool.h"
struct ethtool_ops {
   void (*get_drvinfo)(struct net_device *, struct ethtool_drvinfo *) ;
   int (*get_regs_len)(struct net_device *) ;
   void (*get_regs)(struct net_device *, struct ethtool_regs *, void *) ;
   void (*get_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   int (*set_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   u32 (*get_msglevel)(struct net_device *) ;
   void (*set_msglevel)(struct net_device *, u32 ) ;
   int (*nway_reset)(struct net_device *) ;
   u32 (*get_link)(struct net_device *) ;
   int (*get_eeprom_len)(struct net_device *) ;
   int (*get_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*set_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   int (*set_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   void (*get_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   int (*set_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   void (*get_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   int (*set_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   void (*self_test)(struct net_device *, struct ethtool_test *, u64 *) ;
   void (*get_strings)(struct net_device *, u32 , u8 *) ;
   int (*set_phys_id)(struct net_device *, enum ethtool_phys_id_state ) ;
   void (*get_ethtool_stats)(struct net_device *, struct ethtool_stats *, u64 *) ;
   int (*begin)(struct net_device *) ;
   void (*complete)(struct net_device *) ;
   u32 (*get_priv_flags)(struct net_device *) ;
   int (*set_priv_flags)(struct net_device *, u32 ) ;
   int (*get_sset_count)(struct net_device *, int ) ;
   int (*get_rxnfc)(struct net_device *, struct ethtool_rxnfc *, u32 *) ;
   int (*set_rxnfc)(struct net_device *, struct ethtool_rxnfc *) ;
   int (*flash_device)(struct net_device *, struct ethtool_flash *) ;
   int (*reset)(struct net_device *, u32 *) ;
   u32 (*get_rxfh_key_size)(struct net_device *) ;
   u32 (*get_rxfh_indir_size)(struct net_device *) ;
   int (*get_rxfh)(struct net_device *, u32 *, u8 *, u8 *) ;
   int (*set_rxfh)(struct net_device *, u32 *, u8 *, u8 ) ;
   int (*get_rxfh_context)(struct net_device *, u32 *, u8 *, u8 *, u32 ) ;
   int (*set_rxfh_context)(struct net_device *, u32 *, u8 *, u8 , u32 *, bool ) ;
   void (*get_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*set_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*get_dump_flag)(struct net_device *, struct ethtool_dump *) ;
   int (*get_dump_data)(struct net_device *, struct ethtool_dump *, void *) ;
   int (*set_dump)(struct net_device *, struct ethtool_dump *) ;
   int (*get_ts_info)(struct net_device *, struct ethtool_ts_info *) ;
   int (*get_module_info)(struct net_device *, struct ethtool_modinfo *) ;
   int (*get_module_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*set_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*get_tunable)(struct net_device *, struct ethtool_tunable *, void *) ;
   int (*set_tunable)(struct net_device *, struct ethtool_tunable *, void *) ;
   int (*get_per_queue_coalesce)(struct net_device *, u32 , struct ethtool_coalesce *) ;
   int (*set_per_queue_coalesce)(struct net_device *, u32 , struct ethtool_coalesce *) ;
   int (*get_link_ksettings)(struct net_device *, struct ethtool_link_ksettings *) ;
   int (*set_link_ksettings)(struct net_device *, struct ethtool_link_ksettings *) ;
   int (*get_fecparam)(struct net_device *, struct ethtool_fecparam *) ;
   int (*set_fecparam)(struct net_device *, struct ethtool_fecparam *) ;
   void (*get_ethtool_phy_stats)(struct net_device *, struct ethtool_stats *, u64 *) ;
};
#line 422 
struct prot_inuse;
#line 8  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/core.h"
struct netns_core {
   struct ctl_table_header *sysctl_hdr ;
   int sysctl_somaxconn ;
   int *sock_inuse ;
   struct prot_inuse *prot_inuse ;
};
#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct u64_stats_sync {
   };
#line 36  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct __anonstruct_local_t_575 {
   atomic_long_t a ;
};
#line 36  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
typedef struct __anonstruct_local_t_575 local_t;
#line 119  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/local.h"
struct __anonstruct_local64_t_576 {
   local_t a ;
};
#line 119  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/local.h"
typedef struct __anonstruct_local64_t_576 local64_t;
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/local64.h"
struct __anonstruct_u64_stats_t_577 {
   local64_t v ;
};
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/local64.h"
typedef struct __anonstruct_u64_stats_t_577 u64_stats_t;
#line 51  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct ipstats_mib {
   u64 mibs[37U] ;
   struct u64_stats_sync syncp ;
};
#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct icmp_mib {
   unsigned long mibs[28U] ;
};
#line 64  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct icmpmsg_mib {
   atomic_long_t mibs[512U] ;
};
#line 71  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct icmpv6_mib {
   unsigned long mibs[6U] ;
};
#line 81  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct icmpv6msg_mib {
   atomic_long_t mibs[512U] ;
};
#line 92  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct tcp_mib {
   unsigned long mibs[16U] ;
};
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct udp_mib {
   unsigned long mibs[9U] ;
};
#line 104  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct linux_mib {
   unsigned long mibs[120U] ;
};
#line 110  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct linux_xfrm_mib {
   unsigned long mibs[29U] ;
};
#line 116  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct linux_tls_mib {
   unsigned long mibs[11U] ;
};
#line 7  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/mib.h"
struct netns_mib {
   struct tcp_mib *tcp_statistics ;
   struct ipstats_mib *ip_statistics ;
   struct linux_mib *net_statistics ;
   struct udp_mib *udp_statistics ;
   struct udp_mib *udplite_statistics ;
   struct icmp_mib *icmp_statistics ;
   struct icmpmsg_mib *icmpmsg_statistics ;
   struct proc_dir_entry *proc_net_devsnmp6 ;
   struct udp_mib *udp_stats_in6 ;
   struct udp_mib *udplite_stats_in6 ;
   struct ipstats_mib *ipv6_statistics ;
   struct icmpv6_mib *icmpv6_statistics ;
   struct icmpv6msg_mib *icmpv6msg_statistics ;
   struct linux_xfrm_mib *xfrm_statistics ;
   struct linux_tls_mib *tls_statistics ;
};
#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/unix.h"
struct netns_unix {
   int sysctl_max_dgram_qlen ;
   struct ctl_table_header *ctl ;
};
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/packet.h"
struct netns_packet {
   struct mutex sklist_lock ;
   struct hlist_head sklist ;
};
#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/inet_frag.h"
struct inet_frags;
#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/inet_frag.h"
struct fqdir {
   long high_thresh ;
   long low_thresh ;
   int timeout ;
   int max_dist ;
   struct inet_frags *f ;
   struct net *net ;
   bool dead ;
   struct rhashtable rhashtable ;
   atomic_long_t mem ;
   struct work_struct destroy_work ;
};
#line 41  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/inet_frag.h"
struct frag_v4_compare_key {
   __be32 saddr ;
   __be32 daddr ;
   u32 user ;
   u32 vif ;
   __be16 id ;
   u16 protocol ;
};
#line 50  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/inet_frag.h"
struct frag_v6_compare_key {
   struct in6_addr saddr ;
   struct in6_addr daddr ;
   u32 user ;
   __be32 id ;
   u32 iif ;
};
#line 77  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/inet_frag.h"
union __anonunion_key_578 {
   struct frag_v4_compare_key v4 ;
   struct frag_v6_compare_key v6 ;
};
#line 77  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/inet_frag.h"
struct inet_frag_queue {
   struct rhash_head node ;
   union __anonunion_key_578 key ;
   struct timer_list timer ;
   spinlock_t lock ;
   refcount_t refcnt ;
   struct rb_root rb_fragments ;
   struct sk_buff *fragments_tail ;
   struct sk_buff *last_run_head ;
   ktime_t stamp ;
   int len ;
   int meat ;
   __u8 flags ;
   u16 max_size ;
   struct fqdir *fqdir ;
   struct callback_head rcu ;
};
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/inet_frag.h"
struct inet_frags {
   unsigned int qsize ;
   void (*constructor)(struct inet_frag_queue *, void *) ;
   void (*destructor)(struct inet_frag_queue *) ;
   void (*frag_expire)(struct timer_list *) ;
   struct kmem_cache *frags_cachep ;
   char *frags_cache_name ;
   struct rhashtable_params rhash_params ;
   refcount_t refcnt ;
   struct completion completion ;
};
#line 177 
struct ipv4_devconf;
#line 178 
struct fib_rules_ops;
#line 179 
struct fib_table;
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ipv4.h"
struct local_ports {
   seqlock_t lock ;
   int range[2U] ;
   bool warned ;
};
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ipv4.h"
struct ping_group_range {
   seqlock_t lock ;
   kgid_t range[2U] ;
};
#line 31 
struct inet_hashinfo;
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ipv4.h"
struct inet_timewait_death_row {
   atomic_t tw_count ;
   struct inet_hashinfo *hashinfo ;
   int sysctl_max_tw_buckets ;
};
#line 40 
struct tcp_fastopen_context;
#line 43 
struct ip_ra_chain;
#line 43 
struct inet_peer_base;
#line 43 
struct xt_table;
#line 43 
struct tcp_congestion_ops;
#line 43 
struct fib_notifier_ops;
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ipv4.h"
struct netns_ipv4 {
   struct ctl_table_header *forw_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *ipv4_hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *xfrm4_hdr ;
   struct ipv4_devconf *devconf_all ;
   struct ipv4_devconf *devconf_dflt ;
   struct ip_ra_chain *ra_chain ;
   struct mutex ra_mutex ;
   struct fib_rules_ops *rules_ops ;
   bool fib_has_custom_rules ;
   unsigned int fib_rules_require_fldissect ;
   struct fib_table *fib_main ;
   struct fib_table *fib_default ;
   bool fib_has_custom_local_routes ;
   int fib_num_tclassid_users ;
   struct hlist_head *fib_table_hash ;
   bool fib_offload_disabled ;
   struct sock *fibnl ;
   struct sock **icmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct inet_peer_base *peers ;
   struct sock **tcp_sk ;
   struct fqdir *fqdir ;
   struct xt_table *iptable_filter ;
   struct xt_table *iptable_mangle ;
   struct xt_table *iptable_raw ;
   struct xt_table *arptable_filter ;
   struct xt_table *iptable_security ;
   struct xt_table *nat_table ;
   int sysctl_icmp_echo_ignore_all ;
   int sysctl_icmp_echo_ignore_broadcasts ;
   int sysctl_icmp_ignore_bogus_error_responses ;
   int sysctl_icmp_ratelimit ;
   int sysctl_icmp_ratemask ;
   int sysctl_icmp_errors_use_inbound_ifaddr ;
   struct local_ports ip_local_ports ;
   int sysctl_tcp_ecn ;
   int sysctl_tcp_ecn_fallback ;
   int sysctl_ip_default_ttl ;
   int sysctl_ip_no_pmtu_disc ;
   int sysctl_ip_fwd_use_pmtu ;
   int sysctl_ip_fwd_update_priority ;
   int sysctl_ip_nonlocal_bind ;
   int sysctl_ip_dynaddr ;
   int sysctl_ip_early_demux ;
   int sysctl_raw_l3mdev_accept ;
   int sysctl_tcp_early_demux ;
   int sysctl_udp_early_demux ;
   int sysctl_fwmark_reflect ;
   int sysctl_tcp_fwmark_accept ;
   int sysctl_tcp_l3mdev_accept ;
   int sysctl_tcp_mtu_probing ;
   int sysctl_tcp_mtu_probe_floor ;
   int sysctl_tcp_base_mss ;
   int sysctl_tcp_min_snd_mss ;
   int sysctl_tcp_probe_threshold ;
   u32 sysctl_tcp_probe_interval ;
   int sysctl_tcp_keepalive_time ;
   int sysctl_tcp_keepalive_probes ;
   int sysctl_tcp_keepalive_intvl ;
   int sysctl_tcp_syn_retries ;
   int sysctl_tcp_synack_retries ;
   int sysctl_tcp_syncookies ;
   int sysctl_tcp_reordering ;
   int sysctl_tcp_retries1 ;
   int sysctl_tcp_retries2 ;
   int sysctl_tcp_orphan_retries ;
   int sysctl_tcp_fin_timeout ;
   unsigned int sysctl_tcp_notsent_lowat ;
   int sysctl_tcp_tw_reuse ;
   int sysctl_tcp_sack ;
   int sysctl_tcp_window_scaling ;
   int sysctl_tcp_timestamps ;
   int sysctl_tcp_early_retrans ;
   int sysctl_tcp_recovery ;
   int sysctl_tcp_thin_linear_timeouts ;
   int sysctl_tcp_slow_start_after_idle ;
   int sysctl_tcp_retrans_collapse ;
   int sysctl_tcp_stdurg ;
   int sysctl_tcp_rfc1337 ;
   int sysctl_tcp_abort_on_overflow ;
   int sysctl_tcp_fack ;
   int sysctl_tcp_max_reordering ;
   int sysctl_tcp_dsack ;
   int sysctl_tcp_app_win ;
   int sysctl_tcp_adv_win_scale ;
   int sysctl_tcp_frto ;
   int sysctl_tcp_nometrics_save ;
   int sysctl_tcp_moderate_rcvbuf ;
   int sysctl_tcp_tso_win_divisor ;
   int sysctl_tcp_workaround_signed_windows ;
   int sysctl_tcp_limit_output_bytes ;
   int sysctl_tcp_challenge_ack_limit ;
   int sysctl_tcp_min_tso_segs ;
   int sysctl_tcp_min_rtt_wlen ;
   int sysctl_tcp_autocorking ;
   int sysctl_tcp_invalid_ratelimit ;
   int sysctl_tcp_pacing_ss_ratio ;
   int sysctl_tcp_pacing_ca_ratio ;
   int sysctl_tcp_wmem[3U] ;
   int sysctl_tcp_rmem[3U] ;
   int sysctl_tcp_comp_sack_nr ;
   unsigned long sysctl_tcp_comp_sack_delay_ns ;
   struct inet_timewait_death_row tcp_death_row ;
   int sysctl_max_syn_backlog ;
   int sysctl_tcp_fastopen ;
   struct tcp_congestion_ops *tcp_congestion_control ;
   struct tcp_fastopen_context *tcp_fastopen_ctx ;
   spinlock_t tcp_fastopen_ctx_lock ;
   unsigned int sysctl_tcp_fastopen_blackhole_timeout ;
   atomic_t tfo_active_disable_times ;
   unsigned long tfo_active_disable_stamp ;
   int sysctl_udp_wmem_min ;
   int sysctl_udp_rmem_min ;
   int sysctl_udp_l3mdev_accept ;
   int sysctl_igmp_max_memberships ;
   int sysctl_igmp_max_msf ;
   int sysctl_igmp_llm_reports ;
   int sysctl_igmp_qrv ;
   struct ping_group_range ping_group_range ;
   atomic_t dev_addr_genid ;
   unsigned long *sysctl_local_reserved_ports ;
   int sysctl_ip_prot_sock ;
   struct list_head mr_tables ;
   struct fib_rules_ops *mr_rules_ops ;
   int sysctl_fib_multipath_use_neigh ;
   int sysctl_fib_multipath_hash_policy ;
   struct fib_notifier_ops *notifier_ops ;
   unsigned int fib_seq ;
   struct fib_notifier_ops *ipmr_notifier_ops ;
   unsigned int ipmr_seq ;
   atomic_t rt_genid ;
   siphash_key_t ip_id_key ;
};
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/dst_ops.h"
struct neighbour;
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/dst_ops.h"
struct dst_ops {
   unsigned short family ;
   unsigned int gc_thresh ;
   int (*gc)(struct dst_ops *) ;
   struct dst_entry *(*check)(struct dst_entry *, __u32 ) ;
   unsigned int (*default_advmss)(struct dst_entry *) ;
   unsigned int (*mtu)(struct dst_entry *) ;
   u32 *(*cow_metrics)(struct dst_entry *, unsigned long ) ;
   void (*destroy)(struct dst_entry *) ;
   void (*ifdown)(struct dst_entry *, struct net_device *, int ) ;
   struct dst_entry *(*negative_advice)(struct dst_entry *) ;
   void (*link_failure)(struct sk_buff *) ;
   void (*update_pmtu)(struct dst_entry *, struct sock *, struct sk_buff *, u32 , bool ) ;
   void (*redirect)(struct dst_entry *, struct sock *, struct sk_buff *) ;
   int (*local_out)(struct net *, struct sock *, struct sk_buff *) ;
   struct neighbour *(*neigh_lookup)(struct dst_entry *, struct sk_buff *, void *) ;
   void (*confirm_neigh)(struct dst_entry *, void *) ;
   struct kmem_cache *kmem_cachep ;
   struct percpu_counter pcpuc_entries ;
};
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ipv6.h"
struct netns_sysctl_ipv6 {
   struct ctl_table_header *hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *icmp_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *xfrm6_hdr ;
   int bindv6only ;
   int flush_delay ;
   int ip6_rt_max_size ;
   int ip6_rt_gc_min_interval ;
   int ip6_rt_gc_timeout ;
   int ip6_rt_gc_interval ;
   int ip6_rt_gc_elasticity ;
   int ip6_rt_mtu_expires ;
   int ip6_rt_min_advmss ;
   int multipath_hash_policy ;
   int flowlabel_consistency ;
   int auto_flowlabels ;
   int icmpv6_time ;
   int icmpv6_echo_ignore_all ;
   int icmpv6_echo_ignore_multicast ;
   int icmpv6_echo_ignore_anycast ;
   unsigned long icmpv6_ratemask[4U] ;
   unsigned long *icmpv6_ratemask_ptr ;
   int anycast_src_echo_reply ;
   int ip_nonlocal_bind ;
   int fwmark_reflect ;
   int idgen_retries ;
   int idgen_delay ;
   int flowlabel_state_ranges ;
   int flowlabel_reflect ;
   int max_dst_opts_cnt ;
   int max_hbh_opts_cnt ;
   int max_dst_opts_len ;
   int max_hbh_opts_len ;
   int seg6_flowlabel ;
   bool skip_notify_on_dev_down ;
};
#line 56 
struct ipv6_devconf;
#line 56 
struct fib6_info;
#line 56 
struct rt6_info;
#line 56 
struct rt6_statistics;
#line 56 
struct fib6_table;
#line 56 
struct seg6_pernet_data;
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ipv6.h"
struct __anonstruct_ip6addrlbl_table_580 {
   struct hlist_head head ;
   spinlock_t lock ;
   u32 seq ;
};
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ipv6.h"
struct netns_ipv6 {
   struct netns_sysctl_ipv6 sysctl ;
   struct ipv6_devconf *devconf_all ;
   struct ipv6_devconf *devconf_dflt ;
   struct inet_peer_base *peers ;
   struct fqdir *fqdir ;
   struct xt_table *ip6table_filter ;
   struct xt_table *ip6table_mangle ;
   struct xt_table *ip6table_raw ;
   struct xt_table *ip6table_security ;
   struct xt_table *ip6table_nat ;
   struct fib6_info *fib6_null_entry ;
   struct rt6_info *ip6_null_entry ;
   struct rt6_statistics *rt6_stats ;
   struct timer_list ip6_fib_timer ;
   struct hlist_head *fib_table_hash ;
   struct fib6_table *fib6_main_tbl ;
   struct list_head fib6_walkers ;
   struct dst_ops ip6_dst_ops ;
   rwlock_t fib6_walker_lock ;
   spinlock_t fib6_gc_lock ;
   unsigned int ip6_rt_gc_expire ;
   unsigned long ip6_rt_last_gc ;
   unsigned int fib6_rules_require_fldissect ;
   bool fib6_has_custom_rules ;
   unsigned int fib6_routes_require_src ;
   struct rt6_info *ip6_prohibit_entry ;
   struct rt6_info *ip6_blk_hole_entry ;
   struct fib6_table *fib6_local_tbl ;
   struct fib_rules_ops *fib6_rules_ops ;
   struct sock **icmp_sk ;
   struct sock *ndisc_sk ;
   struct sock *tcp_sk ;
   struct sock *igmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct list_head mr6_tables ;
   struct fib_rules_ops *mr6_rules_ops ;
   atomic_t dev_addr_genid ;
   atomic_t fib6_sernum ;
   struct seg6_pernet_data *seg6_data ;
   struct fib_notifier_ops *notifier_ops ;
   struct fib_notifier_ops *ip6mr_notifier_ops ;
   unsigned int ipmr_seq ;
   struct __anonstruct_ip6addrlbl_table_580 ip6addrlbl_table ;
};
#line 121  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ipv6.h"
struct netns_nf_frag {
   struct fqdir *fqdir ;
};
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/nexthop.h"
struct netns_nexthop {
   struct rb_root rb_root ;
   struct hlist_head *devhash ;
   unsigned int seq ;
   u32 last_id_allocated ;
};
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ieee802154_6lowpan.h"
struct netns_sysctl_lowpan {
   struct ctl_table_header *frags_hdr ;
};
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ieee802154_6lowpan.h"
struct netns_ieee802154_lowpan {
   struct netns_sysctl_lowpan sysctl ;
   struct fqdir *fqdir ;
};
#line 21 
struct sctp_mib;
#line 10  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/sctp.h"
struct netns_sctp {
   struct sctp_mib *sctp_statistics ;
   struct proc_dir_entry *proc_net_sctp ;
   struct ctl_table_header *sysctl_header ;
   struct sock *ctl_sock ;
   struct list_head local_addr_list ;
   struct list_head addr_waitq ;
   struct timer_list addr_wq_timer ;
   struct list_head auto_asconf_splist ;
   spinlock_t addr_wq_lock ;
   spinlock_t local_addr_lock ;
   unsigned int rto_initial ;
   unsigned int rto_min ;
   unsigned int rto_max ;
   int rto_alpha ;
   int rto_beta ;
   int max_burst ;
   int cookie_preserve_enable ;
   char *sctp_hmac_alg ;
   unsigned int valid_cookie_life ;
   unsigned int sack_timeout ;
   unsigned int hb_interval ;
   int max_retrans_association ;
   int max_retrans_path ;
   int max_retrans_init ;
   int pf_retrans ;
   int ps_retrans ;
   int pf_enable ;
   int pf_expose ;
   int sndbuf_policy ;
   int rcvbuf_policy ;
   int default_auto_asconf ;
   int addip_enable ;
   int addip_noauth ;
   int prsctp_enable ;
   int reconf_enable ;
   int auth_enable ;
   int intl_enable ;
   int ecn_enable ;
   int scope_policy ;
   int rwnd_upd_shift ;
   unsigned long max_autoclose ;
};
#line 7  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/dccp.h"
struct netns_dccp {
   struct sock *v4_ctl_sk ;
   struct sock *v6_ctl_sk ;
};
#line 75  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/netfilter.h"
struct nf_logger;
#line 76 
struct nf_queue_handler;
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/netfilter.h"
struct nf_hook_entries;
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/netfilter.h"
struct netns_nf {
   struct proc_dir_entry *proc_netfilter ;
   struct nf_queue_handler *queue_handler ;
   struct nf_logger *nf_loggers[13U] ;
   struct ctl_table_header *nf_log_dir_header ;
   struct nf_hook_entries *hooks_ipv4[5U] ;
   struct nf_hook_entries *hooks_ipv6[5U] ;
   struct nf_hook_entries *hooks_arp[3U] ;
   struct nf_hook_entries *hooks_bridge[5U] ;
   struct nf_hook_entries *hooks_decnet[7U] ;
   bool defrag_ipv4 ;
   bool defrag_ipv6 ;
};
#line 37 
struct ebt_table;
#line 10  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/x_tables.h"
struct netns_xt {
   struct list_head tables[13U] ;
   bool notrack_deprecated_warning ;
   bool clusterip_deprecated_warning ;
   struct ebt_table *broute_table ;
   struct ebt_table *frame_filter ;
   struct ebt_table *frame_nat ;
};
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_nulls.h"
struct hlist_nulls_node;
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_nulls.h"
struct hlist_nulls_head {
   struct hlist_nulls_node *first ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_nulls.h"
struct hlist_nulls_node {
   struct hlist_nulls_node *next ;
   struct hlist_nulls_node **pprev ;
};
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct nf_generic_net {
   unsigned int timeout ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct nf_tcp_net {
   unsigned int timeouts[14U] ;
   int tcp_loose ;
   int tcp_be_liberal ;
   int tcp_max_retrans ;
};
#line 38  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct nf_udp_net {
   unsigned int timeouts[2U] ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct nf_icmp_net {
   unsigned int timeout ;
};
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct nf_dccp_net {
   int dccp_loose ;
   unsigned int dccp_timeout[10U] ;
};
#line 54  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct nf_sctp_net {
   unsigned int timeouts[10U] ;
};
#line 66  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct nf_gre_net {
   struct list_head keymap_list ;
   unsigned int timeouts[2U] ;
};
#line 72  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct nf_ip_net {
   struct nf_generic_net generic ;
   struct nf_tcp_net tcp ;
   struct nf_udp_net udp ;
   struct nf_icmp_net icmp ;
   struct nf_icmp_net icmpv6 ;
   struct nf_dccp_net dccp ;
   struct nf_sctp_net sctp ;
   struct nf_gre_net gre ;
};
#line 89  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct ct_pcpu {
   spinlock_t lock ;
   struct hlist_nulls_head unconfirmed ;
   struct hlist_nulls_head dying ;
};
#line 95 
struct nf_ct_event_notifier;
#line 95 
struct nf_exp_event_notifier;
#line 95  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct netns_ct {
   atomic_t count ;
   unsigned int expect_count ;
   struct delayed_work ecache_dwork ;
   bool ecache_dwork_pending ;
   bool auto_assign_helper_warned ;
   struct ctl_table_header *sysctl_header ;
   unsigned int sysctl_log_invalid ;
   int sysctl_events ;
   int sysctl_acct ;
   int sysctl_auto_assign_helper ;
   int sysctl_tstamp ;
   int sysctl_checksum ;
   struct ct_pcpu *pcpu_lists ;
   struct ip_conntrack_stat *stat ;
   struct nf_ct_event_notifier *nf_conntrack_event_cb ;
   struct nf_exp_event_notifier *nf_expect_event_cb ;
   struct nf_ip_net nf_ct_proto ;
   unsigned int labels_used ;
};
#line 7  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/nftables.h"
struct netns_nftables {
   struct list_head tables ;
   struct list_head commit_list ;
   struct list_head module_list ;
   struct mutex commit_mutex ;
   unsigned int base_seq ;
   u8 gencursor ;
   u8 validate_state ;
};
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/xfrm.h"
struct xfrm_policy_hash {
   struct hlist_head *table ;
   unsigned int hmask ;
   u8 dbits4 ;
   u8 sbits4 ;
   u8 dbits6 ;
   u8 sbits6 ;
};
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/xfrm.h"
struct xfrm_policy_hthresh {
   struct work_struct work ;
   seqlock_t lock ;
   u8 lbits4 ;
   u8 rbits4 ;
   u8 lbits6 ;
   u8 rbits6 ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/xfrm.h"
struct netns_xfrm {
   struct list_head state_all ;
   struct hlist_head *state_bydst ;
   struct hlist_head *state_bysrc ;
   struct hlist_head *state_byspi ;
   unsigned int state_hmask ;
   unsigned int state_num ;
   struct work_struct state_hash_work ;
   struct list_head policy_all ;
   struct hlist_head *policy_byidx ;
   unsigned int policy_idx_hmask ;
   struct hlist_head policy_inexact[3U] ;
   struct xfrm_policy_hash policy_bydst[3U] ;
   unsigned int policy_count[6U] ;
   struct work_struct policy_hash_work ;
   struct xfrm_policy_hthresh policy_hthresh ;
   struct list_head inexact_bins ;
   struct sock *nlsk ;
   struct sock *nlsk_stash ;
   u32 sysctl_aevent_etime ;
   u32 sysctl_aevent_rseqth ;
   int sysctl_larval_drop ;
   u32 sysctl_acq_expires ;
   struct ctl_table_header *sysctl_hdr ;
   struct dst_ops xfrm4_dst_ops ;
   struct dst_ops xfrm6_dst_ops ;
   spinlock_t xfrm_state_lock ;
   spinlock_t xfrm_policy_lock ;
   struct mutex xfrm_cfg_mutex ;
};
#line 79 
struct mpls_route;
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/mpls.h"
struct netns_mpls {
   int ip_ttl_propagate ;
   int default_ttl ;
   size_t platform_labels ;
   struct mpls_route **platform_label ;
   struct ctl_table_header *ctl ;
};
#line 20 
struct can_dev_rcv_lists;
#line 21 
struct can_pkg_stats;
#line 22 
struct can_rcv_lists_stats;
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/can.h"
struct netns_can {
   struct proc_dir_entry *proc_dir ;
   struct proc_dir_entry *pde_version ;
   struct proc_dir_entry *pde_stats ;
   struct proc_dir_entry *pde_reset_stats ;
   struct proc_dir_entry *pde_rcvlist_all ;
   struct proc_dir_entry *pde_rcvlist_fil ;
   struct proc_dir_entry *pde_rcvlist_inv ;
   struct proc_dir_entry *pde_rcvlist_sff ;
   struct proc_dir_entry *pde_rcvlist_eff ;
   struct proc_dir_entry *pde_rcvlist_err ;
   struct proc_dir_entry *bcmproc_dir ;
   struct can_dev_rcv_lists *rx_alldev_list ;
   spinlock_t rcvlists_lock ;
   struct timer_list stattimer ;
   struct can_pkg_stats *pkg_stats ;
   struct can_rcv_lists_stats *rcv_lists_stats ;
   struct hlist_head cgw_list ;
};
#line 8  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/xdp.h"
struct netns_xdp {
   struct mutex lock ;
   struct hlist_head list ;
};
#line 12 
struct proc_ns_operations;
#line 7  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ns_common.h"
struct ns_common {
   atomic_long_t stashed ;
   struct proc_ns_operations *ops ;
   unsigned int inum ;
};
#line 12 
struct net_generic;
#line 13 
struct uevent_sock;
#line 14 
struct netns_ipvs;
#line 55  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/net_namespace.h"
struct key_tag;
#line 55 
struct ucounts;
#line 55  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/net_namespace.h"
struct net {
   refcount_t passive ;
   refcount_t count ;
   spinlock_t rules_mod_lock ;
   unsigned int dev_unreg_count ;
   unsigned int dev_base_seq ;
   int ifindex ;
   spinlock_t nsid_lock ;
   atomic_t fnhe_genid ;
   struct list_head list ;
   struct list_head exit_list ;
   struct llist_node cleanup_list ;
   struct key_tag *key_domain ;
   struct user_namespace *user_ns ;
   struct ucounts *ucounts ;
   struct idr netns_ids ;
   struct ns_common ns ;
   struct list_head dev_base_head ;
   struct proc_dir_entry *proc_net ;
   struct proc_dir_entry *proc_net_stat ;
   struct ctl_table_set sysctls ;
   struct sock *rtnl ;
   struct sock *genl_sock ;
   struct uevent_sock *uevent_sock ;
   struct hlist_head *dev_name_head ;
   struct hlist_head *dev_index_head ;
   struct raw_notifier_head netdev_chain ;
   u32 hash_mix ;
   struct net_device *loopback_dev ;
   struct list_head rules_ops ;
   struct netns_core core ;
   struct netns_mib mib ;
   struct netns_packet packet ;
   struct netns_unix unx ;
   struct netns_nexthop nexthop ;
   struct netns_ipv4 ipv4 ;
   struct netns_ipv6 ipv6 ;
   struct netns_ieee802154_lowpan ieee802154_lowpan ;
   struct netns_sctp sctp ;
   struct netns_dccp dccp ;
   struct netns_nf nf ;
   struct netns_xt xt ;
   struct netns_ct ct ;
   struct netns_nftables nft ;
   struct netns_nf_frag nf_frag ;
   struct ctl_table_header *nf_frag_frags_hdr ;
   struct sock *nfnl ;
   struct sock *nfnl_stash ;
   struct list_head nfnl_acct_list ;
   struct list_head nfct_timeout_list ;
   struct sk_buff_head wext_nlevents ;
   struct net_generic *gen ;
   struct bpf_prog *flow_dissector_prog ;
   struct netns_xfrm xfrm ;
   struct netns_ipvs *ipvs ;
   struct netns_mpls mpls ;
   struct netns_can can ;
   struct netns_xdp xdp ;
   struct sock *crypto_nlsk ;
   struct sock *diag_nlsk ;
} __attribute__((__designated_init__));
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/assoc_array.h"
struct assoc_array_ptr;
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/assoc_array.h"
struct assoc_array {
   struct assoc_array_ptr *root ;
   unsigned long nr_leaves_on_tree ;
};
#line 83  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/assoc_array.h"
typedef int32_t key_serial_t;
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
typedef uint32_t key_perm_t;
#line 32 
struct key_type;
#line 85  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
struct key_tag {
   struct callback_head rcu ;
   refcount_t usage ;
   bool removed ;
};
#line 91  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
struct __anonstruct_593 {
   u16 desc_len ;
   char desc[6U] ;
};
#line 91  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
union __anonunion_592 {
   struct __anonstruct_593 __anonCompField___anonunion_592_103 ;
   unsigned long x ;
};
#line 91  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
struct keyring_index_key {
   unsigned long hash ;
   union __anonunion_592 __anonCompField_keyring_index_key_104 ;
   struct key_type *type ;
   struct key_tag *domain_tag ;
   char *description ;
};
#line 111  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
union key_payload {
   void *rcu_data0 ;
   void *data[4U] ;
};
#line 153  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
struct key_restriction {
   int (*check)(struct key *, struct key_type *, union key_payload *, struct key *) ;
   struct key *key ;
   struct key_type *keytype ;
};
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
union __anonunion_594 {
   struct list_head graveyard_link ;
   struct rb_node serial_node ;
};
#line 172 
struct key_user;
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
union __anonunion_595 {
   time64_t expiry ;
   time64_t revoked_at ;
};
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
struct __anonstruct_597 {
   unsigned long hash ;
   unsigned long len_desc ;
   struct key_type *type ;
   struct key_tag *domain_tag ;
   char *description ;
};
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
union __anonunion_596 {
   struct keyring_index_key index_key ;
   struct __anonstruct_597 __anonCompField___anonunion_596_107 ;
};
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
struct __anonstruct_599 {
   struct list_head name_link ;
   struct assoc_array keys ;
};
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
union __anonunion_598 {
   union key_payload payload ;
   struct __anonstruct_599 __anonCompField___anonunion_598_109 ;
};
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
struct key {
   refcount_t usage ;
   key_serial_t serial ;
   union __anonunion_594 __anonCompField_key_105 ;
   struct rw_semaphore sem ;
   struct key_user *user ;
   void *security ;
   union __anonunion_595 __anonCompField_key_106 ;
   time64_t last_used_at ;
   kuid_t uid ;
   kgid_t gid ;
   key_perm_t perm ;
   unsigned short quotalen ;
   unsigned short datalen ;
   short state ;
   unsigned long flags ;
   union __anonunion_596 __anonCompField_key_108 ;
   union __anonunion_598 __anonCompField_key_110 ;
   struct key_restriction *restrict_link ;
};
#line 13  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched/user.h"
struct user_struct {
   refcount_t __count ;
   atomic_t processes ;
   atomic_t sigpending ;
   atomic_t fanotify_listeners ;
   atomic_long_t epoll_watches ;
   unsigned long mq_bytes ;
   unsigned long locked_shm ;
   unsigned long unix_inflight ;
   atomic_long_t pipe_bufs ;
   struct hlist_node uidhash_node ;
   kuid_t uid ;
   atomic_long_t locked_vm ;
   struct ratelimit_state ratelimit ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cred.h"
struct group_info {
   atomic_t usage ;
   int ngroups ;
   kgid_t gid[0U] ;
} __attribute__((__designated_init__));
#line 111  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cred.h"
union __anonunion_602 {
   int non_rcu ;
   struct callback_head rcu ;
};
#line 111  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cred.h"
struct cred {
   atomic_t usage ;
   atomic_t subscribers ;
   void *put_addr ;
   unsigned int magic ;
   kuid_t uid ;
   kgid_t gid ;
   kuid_t suid ;
   kgid_t sgid ;
   kuid_t euid ;
   kgid_t egid ;
   kuid_t fsuid ;
   kgid_t fsgid ;
   unsigned int securebits ;
   kernel_cap_t cap_inheritable ;
   kernel_cap_t cap_permitted ;
   kernel_cap_t cap_effective ;
   kernel_cap_t cap_bset ;
   kernel_cap_t cap_ambient ;
   unsigned char jit_keyring ;
   struct key *session_keyring ;
   struct key *process_keyring ;
   struct key *thread_keyring ;
   struct key *request_key_auth ;
   void *security ;
   struct user_struct *user ;
   struct user_namespace *user_ns ;
   struct group_info *group_info ;
   union __anonunion_602 __anonCompField_cred_111 ;
} __attribute__((__designated_init__));
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/seq_file.h"
struct seq_file {
   char *buf ;
   size_t size ;
   size_t from ;
   size_t count ;
   size_t pad_until ;
   loff_t index ;
   loff_t read_pos ;
   u64 version ;
   struct mutex lock ;
   struct seq_operations *op ;
   int poll_event ;
   struct file *file ;
   void *private ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/seq_file.h"
struct seq_operations {
   void *(*start)(struct seq_file *, loff_t *) ;
   void (*stop)(struct seq_file *, void *) ;
   void *(*next)(struct seq_file *, void *, loff_t *) ;
   int (*show)(struct seq_file *, void *) ;
};
#line 275  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/net_namespace.h"
struct __anonstruct_possible_net_t_603 {
   struct net *net ;
};
#line 275  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/net_namespace.h"
typedef struct __anonstruct_possible_net_t_603 possible_net_t;
#line 58  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct ieee_ets {
   __u8 willing ;
   __u8 ets_cap ;
   __u8 cbs ;
   __u8 tc_tx_bw[8U] ;
   __u8 tc_rx_bw[8U] ;
   __u8 tc_tsa[8U] ;
   __u8 prio_tc[8U] ;
   __u8 tc_reco_bw[8U] ;
   __u8 tc_reco_tsa[8U] ;
   __u8 reco_prio_tc[8U] ;
};
#line 78  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct ieee_maxrate {
   __u64 tc_maxrate[8U] ;
};
#line 119  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct ieee_qcn {
   __u8 rpg_enable[8U] ;
   __u32 rppp_max_rps[8U] ;
   __u32 rpg_time_reset[8U] ;
   __u32 rpg_byte_reset[8U] ;
   __u32 rpg_threshold[8U] ;
   __u32 rpg_max_rate[8U] ;
   __u32 rpg_ai_rate[8U] ;
   __u32 rpg_hai_rate[8U] ;
   __u32 rpg_gd[8U] ;
   __u32 rpg_min_dec_fac[8U] ;
   __u32 rpg_min_rate[8U] ;
   __u32 cndd_state_machine[8U] ;
};
#line 141  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct ieee_qcn_stats {
   __u64 rppp_rp_centiseconds[8U] ;
   __u32 rppp_created_rps[8U] ;
};
#line 157  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct ieee_pfc {
   __u8 pfc_cap ;
   __u8 pfc_en ;
   __u8 mbc ;
   __u16 delay ;
   __u64 requests[8U] ;
   __u64 indications[8U] ;
};
#line 168  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct dcbnl_buffer {
   __u8 prio2buffer[8U] ;
   __u32 buffer_size[8U] ;
   __u32 total_size ;
};
#line 190  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct cee_pg {
   __u8 willing ;
   __u8 error ;
   __u8 pg_en ;
   __u8 tcs_supported ;
   __u8 pg_bw[8U] ;
   __u8 prio_pg[8U] ;
};
#line 207  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct cee_pfc {
   __u8 willing ;
   __u8 error ;
   __u8 pfc_en ;
   __u8 tcs_supported ;
};
#line 244  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct dcb_app {
   __u8 selector ;
   __u8 priority ;
   __u16 protocol ;
};
#line 259  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct dcb_peer_app_info {
   __u8 willing ;
   __u8 error ;
};
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/dcbnl.h"
struct dcbnl_rtnl_ops {
   int (*ieee_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_setets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_getmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_setmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_getqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_setqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_getqcnstats)(struct net_device *, struct ieee_qcn_stats *) ;
   int (*ieee_getpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_setpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_getapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_setapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_delapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_peer_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_peer_getpfc)(struct net_device *, struct ieee_pfc *) ;
   u8 (*getstate)(struct net_device *) ;
   u8 (*setstate)(struct net_device *, u8 ) ;
   void (*getpermhwaddr)(struct net_device *, u8 *) ;
   void (*setpgtccfgtx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgtx)(struct net_device *, int , u8 ) ;
   void (*setpgtccfgrx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgrx)(struct net_device *, int , u8 ) ;
   void (*getpgtccfgtx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgtx)(struct net_device *, int , u8 *) ;
   void (*getpgtccfgrx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgrx)(struct net_device *, int , u8 *) ;
   void (*setpfccfg)(struct net_device *, int , u8 ) ;
   void (*getpfccfg)(struct net_device *, int , u8 *) ;
   u8 (*setall)(struct net_device *) ;
   u8 (*getcap)(struct net_device *, int , u8 *) ;
   int (*getnumtcs)(struct net_device *, int , u8 *) ;
   int (*setnumtcs)(struct net_device *, int , u8 ) ;
   u8 (*getpfcstate)(struct net_device *) ;
   void (*setpfcstate)(struct net_device *, u8 ) ;
   void (*getbcncfg)(struct net_device *, int , u32 *) ;
   void (*setbcncfg)(struct net_device *, int , u32 ) ;
   void (*getbcnrp)(struct net_device *, int , u8 *) ;
   void (*setbcnrp)(struct net_device *, int , u8 ) ;
   int (*setapp)(struct net_device *, u8 , u16 , u8 ) ;
   int (*getapp)(struct net_device *, u8 , u16 ) ;
   u8 (*getfeatcfg)(struct net_device *, int , u8 *) ;
   u8 (*setfeatcfg)(struct net_device *, int , u8 ) ;
   u8 (*getdcbx)(struct net_device *) ;
   u8 (*setdcbx)(struct net_device *, u8 ) ;
   int (*peer_getappinfo)(struct net_device *, struct dcb_peer_app_info *, u16 *) ;
   int (*peer_getapptable)(struct net_device *, struct dcb_app *) ;
   int (*cee_peer_getpg)(struct net_device *, struct cee_pg *) ;
   int (*cee_peer_getpfc)(struct net_device *, struct cee_pfc *) ;
   int (*dcbnl_getbuffer)(struct net_device *, struct dcbnl_buffer *) ;
   int (*dcbnl_setbuffer)(struct net_device *, struct dcbnl_buffer *) ;
};
#line 41  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/taskstats.h"
struct taskstats {
   __u16 version ;
   __u32 ac_exitcode ;
   __u8 ac_flag ;
   __u8 ac_nice ;
   __u64 cpu_count ;
   __u64 cpu_delay_total ;
   __u64 blkio_count ;
   __u64 blkio_delay_total ;
   __u64 swapin_count ;
   __u64 swapin_delay_total ;
   __u64 cpu_run_real_total ;
   __u64 cpu_run_virtual_total ;
   char ac_comm[32U] ;
   __u8 ac_sched ;
   __u8 ac_pad[3U] ;
   __u32 ac_uid ;
   __u32 ac_gid ;
   __u32 ac_pid ;
   __u32 ac_ppid ;
   __u32 ac_btime ;
   __u64 ac_etime ;
   __u64 ac_utime ;
   __u64 ac_stime ;
   __u64 ac_minflt ;
   __u64 ac_majflt ;
   __u64 coremem ;
   __u64 virtmem ;
   __u64 hiwater_rss ;
   __u64 hiwater_vm ;
   __u64 read_char ;
   __u64 write_char ;
   __u64 read_syscalls ;
   __u64 write_syscalls ;
   __u64 read_bytes ;
   __u64 write_bytes ;
   __u64 cancelled_write_bytes ;
   __u64 nvcsw ;
   __u64 nivcsw ;
   __u64 ac_utimescaled ;
   __u64 ac_stimescaled ;
   __u64 cpu_scaled_run_real_total ;
   __u64 freepages_count ;
   __u64 freepages_delay_total ;
   __u64 thrashing_count ;
   __u64 thrashing_delay_total ;
};
#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/cgroupstats.h"
struct mnt_namespace;
#line 60 
struct uts_namespace;
#line 61 
struct ipc_namespace;
#line 62 
struct cgroup_namespace;
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/nsproxy.h"
struct nsproxy {
   atomic_t count ;
   struct uts_namespace *uts_ns ;
   struct ipc_namespace *ipc_ns ;
   struct mnt_namespace *mnt_ns ;
   struct pid_namespace *pid_ns_for_children ;
   struct net *net_ns ;
   struct cgroup_namespace *cgroup_ns ;
};
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/user_namespace.h"
struct uid_gid_extent {
   u32 first ;
   u32 lower_first ;
   u32 count ;
};
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/user_namespace.h"
struct __anonstruct_605 {
   struct uid_gid_extent *forward ;
   struct uid_gid_extent *reverse ;
};
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/user_namespace.h"
union __anonunion_604 {
   struct uid_gid_extent extent[5U] ;
   struct __anonstruct_605 __anonCompField___anonunion_604_112 ;
};
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/user_namespace.h"
struct uid_gid_map {
   u32 nr_extents ;
   union __anonunion_604 __anonCompField_uid_gid_map_113 ;
};
#line 55  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/user_namespace.h"
struct user_namespace {
   struct uid_gid_map uid_map ;
   struct uid_gid_map gid_map ;
   struct uid_gid_map projid_map ;
   atomic_t count ;
   struct user_namespace *parent ;
   int level ;
   kuid_t owner ;
   kgid_t group ;
   struct ns_common ns ;
   unsigned long flags ;
   struct list_head keyring_name_list ;
   struct key *user_keyring_register ;
   struct rw_semaphore keyring_sem ;
   struct key *persistent_keyring_register ;
   struct work_struct work ;
   struct ctl_table_set set ;
   struct ctl_table_header *sysctls ;
   struct ucounts *ucounts ;
   int ucount_max[9U] ;
} __attribute__((__designated_init__));
#line 91  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/user_namespace.h"
struct ucounts {
   struct hlist_node node ;
   struct user_namespace *ns ;
   kuid_t uid ;
   int count ;
   atomic_t ucount[9U] ;
};
#line 65  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct bpf_insn {
   __u8 code ;
   __u8 dst_reg : 4 ;
   __u8 src_reg : 4 ;
   __s16 off ;
   __s32 imm ;
};
#line 79  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct bpf_cgroup_storage_key {
   __u64 cgroup_inode_id ;
   __u32 attach_type ;
};
#line 110 
enum bpf_map_type {
    BPF_MAP_TYPE_UNSPEC = 0,
    BPF_MAP_TYPE_HASH = 1,
    BPF_MAP_TYPE_ARRAY = 2,
    BPF_MAP_TYPE_PROG_ARRAY = 3,
    BPF_MAP_TYPE_PERF_EVENT_ARRAY = 4,
    BPF_MAP_TYPE_PERCPU_HASH = 5,
    BPF_MAP_TYPE_PERCPU_ARRAY = 6,
    BPF_MAP_TYPE_STACK_TRACE = 7,
    BPF_MAP_TYPE_CGROUP_ARRAY = 8,
    BPF_MAP_TYPE_LRU_HASH = 9,
    BPF_MAP_TYPE_LRU_PERCPU_HASH = 10,
    BPF_MAP_TYPE_LPM_TRIE = 11,
    BPF_MAP_TYPE_ARRAY_OF_MAPS = 12,
    BPF_MAP_TYPE_HASH_OF_MAPS = 13,
    BPF_MAP_TYPE_DEVMAP = 14,
    BPF_MAP_TYPE_SOCKMAP = 15,
    BPF_MAP_TYPE_CPUMAP = 16,
    BPF_MAP_TYPE_XSKMAP = 17,
    BPF_MAP_TYPE_SOCKHASH = 18,
    BPF_MAP_TYPE_CGROUP_STORAGE = 19,
    BPF_MAP_TYPE_REUSEPORT_SOCKARRAY = 20,
    BPF_MAP_TYPE_PERCPU_CGROUP_STORAGE = 21,
    BPF_MAP_TYPE_QUEUE = 22,
    BPF_MAP_TYPE_STACK = 23,
    BPF_MAP_TYPE_SK_STORAGE = 24,
    BPF_MAP_TYPE_DEVMAP_HASH = 25
};
#line 139 
enum bpf_prog_type {
    BPF_PROG_TYPE_UNSPEC = 0,
    BPF_PROG_TYPE_SOCKET_FILTER = 1,
    BPF_PROG_TYPE_KPROBE = 2,
    BPF_PROG_TYPE_SCHED_CLS = 3,
    BPF_PROG_TYPE_SCHED_ACT = 4,
    BPF_PROG_TYPE_TRACEPOINT = 5,
    BPF_PROG_TYPE_XDP = 6,
    BPF_PROG_TYPE_PERF_EVENT = 7,
    BPF_PROG_TYPE_CGROUP_SKB = 8,
    BPF_PROG_TYPE_CGROUP_SOCK = 9,
    BPF_PROG_TYPE_LWT_IN = 10,
    BPF_PROG_TYPE_LWT_OUT = 11,
    BPF_PROG_TYPE_LWT_XMIT = 12,
    BPF_PROG_TYPE_SOCK_OPS = 13,
    BPF_PROG_TYPE_SK_SKB = 14,
    BPF_PROG_TYPE_CGROUP_DEVICE = 15,
    BPF_PROG_TYPE_SK_MSG = 16,
    BPF_PROG_TYPE_RAW_TRACEPOINT = 17,
    BPF_PROG_TYPE_CGROUP_SOCK_ADDR = 18,
    BPF_PROG_TYPE_LWT_SEG6LOCAL = 19,
    BPF_PROG_TYPE_LIRC_MODE2 = 20,
    BPF_PROG_TYPE_SK_REUSEPORT = 21,
    BPF_PROG_TYPE_FLOW_DISSECTOR = 22,
    BPF_PROG_TYPE_CGROUP_SYSCTL = 23,
    BPF_PROG_TYPE_RAW_TRACEPOINT_WRITABLE = 24,
    BPF_PROG_TYPE_CGROUP_SOCKOPT = 25,
    BPF_PROG_TYPE_TRACING = 26
};
#line 169 
enum bpf_attach_type {
    BPF_CGROUP_INET_INGRESS = 0,
    BPF_CGROUP_INET_EGRESS = 1,
    BPF_CGROUP_INET_SOCK_CREATE = 2,
    BPF_CGROUP_SOCK_OPS = 3,
    BPF_SK_SKB_STREAM_PARSER = 4,
    BPF_SK_SKB_STREAM_VERDICT = 5,
    BPF_CGROUP_DEVICE = 6,
    BPF_SK_MSG_VERDICT = 7,
    BPF_CGROUP_INET4_BIND = 8,
    BPF_CGROUP_INET6_BIND = 9,
    BPF_CGROUP_INET4_CONNECT = 10,
    BPF_CGROUP_INET6_CONNECT = 11,
    BPF_CGROUP_INET4_POST_BIND = 12,
    BPF_CGROUP_INET6_POST_BIND = 13,
    BPF_CGROUP_UDP4_SENDMSG = 14,
    BPF_CGROUP_UDP6_SENDMSG = 15,
    BPF_LIRC_MODE2 = 16,
    BPF_FLOW_DISSECTOR = 17,
    BPF_CGROUP_SYSCTL = 18,
    BPF_CGROUP_UDP4_RECVMSG = 19,
    BPF_CGROUP_UDP6_RECVMSG = 20,
    BPF_CGROUP_GETSOCKOPT = 21,
    BPF_CGROUP_SETSOCKOPT = 22,
    BPF_TRACE_RAW_TP = 23,
    BPF_TRACE_FENTRY = 24,
    BPF_TRACE_FEXIT = 25,
    __MAX_BPF_ATTACH_TYPE = 26
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_607 {
   __u32 map_type ;
   __u32 key_size ;
   __u32 value_size ;
   __u32 max_entries ;
   __u32 map_flags ;
   __u32 inner_map_fd ;
   __u32 numa_node ;
   char map_name[16U] ;
   __u32 map_ifindex ;
   __u32 btf_fd ;
   __u32 btf_key_type_id ;
   __u32 btf_value_type_id ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
union __anonunion_609 {
   __u64 value ;
   __u64 next_key ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_608 {
   __u32 map_fd ;
   __u64 key ;
   union __anonunion_609 __anonCompField___anonstruct_608_116 ;
   __u64 flags ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_610 {
   __u32 prog_type ;
   __u32 insn_cnt ;
   __u64 insns ;
   __u64 license ;
   __u32 log_level ;
   __u32 log_size ;
   __u64 log_buf ;
   __u32 kern_version ;
   __u32 prog_flags ;
   char prog_name[16U] ;
   __u32 prog_ifindex ;
   __u32 expected_attach_type ;
   __u32 prog_btf_fd ;
   __u32 func_info_rec_size ;
   __u64 func_info ;
   __u32 func_info_cnt ;
   __u32 line_info_rec_size ;
   __u64 line_info ;
   __u32 line_info_cnt ;
   __u32 attach_btf_id ;
   __u32 attach_prog_fd ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_611 {
   __u64 pathname ;
   __u32 bpf_fd ;
   __u32 file_flags ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_612 {
   __u32 target_fd ;
   __u32 attach_bpf_fd ;
   __u32 attach_type ;
   __u32 attach_flags ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_test_613 {
   __u32 prog_fd ;
   __u32 retval ;
   __u32 data_size_in ;
   __u32 data_size_out ;
   __u64 data_in ;
   __u64 data_out ;
   __u32 repeat ;
   __u32 duration ;
   __u32 ctx_size_in ;
   __u32 ctx_size_out ;
   __u64 ctx_in ;
   __u64 ctx_out ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
union __anonunion_615 {
   __u32 start_id ;
   __u32 prog_id ;
   __u32 map_id ;
   __u32 btf_id ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_614 {
   union __anonunion_615 __anonCompField___anonstruct_614_121 ;
   __u32 next_id ;
   __u32 open_flags ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_info_616 {
   __u32 bpf_fd ;
   __u32 info_len ;
   __u64 info ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_query_617 {
   __u32 target_fd ;
   __u32 attach_type ;
   __u32 query_flags ;
   __u32 attach_flags ;
   __u64 prog_ids ;
   __u32 prog_cnt ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_raw_tracepoint_618 {
   __u64 name ;
   __u32 prog_fd ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_619 {
   __u64 btf ;
   __u64 btf_log_buf ;
   __u32 btf_size ;
   __u32 btf_log_size ;
   __u32 btf_log_level ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_task_fd_query_620 {
   __u32 pid ;
   __u32 fd ;
   __u32 flags ;
   __u32 buf_len ;
   __u64 buf ;
   __u32 prog_id ;
   __u32 fd_type ;
   __u64 probe_offset ;
   __u64 probe_addr ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
union bpf_attr {
   struct __anonstruct_607 __anonCompField_bpf_attr_115 ;
   struct __anonstruct_608 __anonCompField_bpf_attr_117 ;
   struct __anonstruct_610 __anonCompField_bpf_attr_118 ;
   struct __anonstruct_611 __anonCompField_bpf_attr_119 ;
   struct __anonstruct_612 __anonCompField_bpf_attr_120 ;
   struct __anonstruct_test_613 test ;
   struct __anonstruct_614 __anonCompField_bpf_attr_122 ;
   struct __anonstruct_info_616 info ;
   struct __anonstruct_query_617 query ;
   struct __anonstruct_raw_tracepoint_618 raw_tracepoint ;
   struct __anonstruct_619 __anonCompField_bpf_attr_123 ;
   struct __anonstruct_task_fd_query_620 task_fd_query ;
} __attribute__((__aligned__(8)));
#line 3653  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct bpf_func_info {
   __u32 insn_off ;
   __u32 type_id ;
};
#line 3661  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct bpf_line_info {
   __u32 insn_off ;
   __u32 file_name_off ;
   __u32 line_off ;
   __u32 line_col ;
};
#line 95  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/file.h"
struct bpf_prog_aux;
#line 96 
struct bpf_map;
#line 97 
struct btf;
#line 98 
struct btf_type;
#line 37  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_map_ops {
   int (*map_alloc_check)(union bpf_attr *) ;
   struct bpf_map *(*map_alloc)(union bpf_attr *) ;
   void (*map_release)(struct bpf_map *, struct file *) ;
   void (*map_free)(struct bpf_map *) ;
   int (*map_get_next_key)(struct bpf_map *, void *, void *) ;
   void (*map_release_uref)(struct bpf_map *) ;
   void *(*map_lookup_elem_sys_only)(struct bpf_map *, void *) ;
   void *(*map_lookup_elem)(struct bpf_map *, void *) ;
   int (*map_update_elem)(struct bpf_map *, void *, void *, u64 ) ;
   int (*map_delete_elem)(struct bpf_map *, void *) ;
   int (*map_push_elem)(struct bpf_map *, void *, u64 ) ;
   int (*map_pop_elem)(struct bpf_map *, void *) ;
   int (*map_peek_elem)(struct bpf_map *, void *) ;
   void *(*map_fd_get_ptr)(struct bpf_map *, struct file *, int ) ;
   void (*map_fd_put_ptr)(void *) ;
   u32 (*map_gen_lookup)(struct bpf_map *, struct bpf_insn *) ;
   u32 (*map_fd_sys_lookup_elem)(void *) ;
   void (*map_seq_show_elem)(struct bpf_map *, void *, struct seq_file *) ;
   int (*map_check_btf)(struct bpf_map *, struct btf *, struct btf_type *, struct btf_type *) ;
   int (*map_poke_track)(struct bpf_map *, struct bpf_prog_aux *) ;
   void (*map_poke_untrack)(struct bpf_map *, struct bpf_prog_aux *) ;
   void (*map_poke_run)(struct bpf_map *, u32 , struct bpf_prog *, struct bpf_prog *) ;
   int (*map_direct_value_addr)(struct bpf_map *, u64 *, u32 ) ;
   int (*map_direct_value_meta)(struct bpf_map *, u64 , u32 *) ;
   int (*map_mmap)(struct bpf_map *, struct vm_area_struct *) ;
};
#line 82  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_map_memory {
   u32 pages ;
   struct user_struct *user ;
};
#line 87  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_map {
   struct bpf_map_ops *ops ;
   struct bpf_map *inner_map_meta ;
   void *security ;
   enum bpf_map_type map_type ;
   u32 key_size ;
   u32 value_size ;
   u32 max_entries ;
   u32 map_flags ;
   int spin_lock_off ;
   u32 id ;
   int numa_node ;
   u32 btf_key_type_id ;
   u32 btf_value_type_id ;
   struct btf *btf ;
   struct bpf_map_memory memory ;
   char name[16U] ;
   bool unpriv_array ;
   bool frozen ;
   atomic64_t refcnt ;
   atomic64_t usercnt ;
   struct work_struct work ;
   struct mutex freeze_mutex ;
   u64 writecnt ;
};
#line 151 
struct bpf_offload_dev;
#line 152 
struct bpf_offloaded_map;
#line 156  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_map_dev_ops {
   int (*map_get_next_key)(struct bpf_offloaded_map *, void *, void *) ;
   int (*map_lookup_elem)(struct bpf_offloaded_map *, void *, void *) ;
   int (*map_update_elem)(struct bpf_offloaded_map *, void *, void *, u64 ) ;
   int (*map_delete_elem)(struct bpf_offloaded_map *, void *) ;
};
#line 166  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_offloaded_map {
   struct bpf_map map ;
   struct net_device *netdev ;
   struct bpf_map_dev_ops *dev_ops ;
   void *dev_priv ;
   struct list_head offloads ;
};
#line 327  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_prog_ops {
   int (*test_run)(struct bpf_prog *, union bpf_attr *, union bpf_attr *) ;
};
#line 369  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_prog_offload {
   struct bpf_prog *prog ;
   struct net_device *netdev ;
   struct bpf_offload_dev *offdev ;
   void *dev_priv ;
   struct list_head offloads ;
   bool dev_state ;
   bool opt_failed ;
   void *jited_image ;
   u32 jited_len ;
};
#line 394  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_prog_stats {
   u64 cnt ;
   u64 nsecs ;
   struct u64_stats_sync syncp ;
} __attribute__((__aligned__(16)));
#line 400  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct btf_func_model {
   u8 ret_size ;
   u8 nr_args ;
   u8 arg_size[12U] ;
};
#line 447 
enum bpf_tramp_prog_type {
    BPF_TRAMP_FENTRY = 0,
    BPF_TRAMP_FEXIT = 1,
    BPF_TRAMP_MAX = 2
};
#line 454  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct __anonstruct_func_647 {
   struct btf_func_model model ;
   void *addr ;
   bool ftrace_managed ;
};
#line 454  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_trampoline {
   struct hlist_node hlist ;
   struct mutex mutex ;
   refcount_t refcnt ;
   u64 key ;
   struct __anonstruct_func_647 func ;
   struct hlist_head progs_hlist[2U] ;
   int progs_cnt[2U] ;
   void *image ;
   u64 selector ;
};
#line 495  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_func_info_aux {
   bool unreliable ;
};
#line 504  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct __anonstruct_tail_call_649 {
   struct bpf_map *map ;
   u32 key ;
};
#line 504  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
union __anonunion_648 {
   struct __anonstruct_tail_call_649 tail_call ;
};
#line 504  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_jit_poke_descriptor {
   void *ip ;
   union __anonunion_648 __anonCompField_bpf_jit_poke_descriptor_148 ;
   bool ip_stable ;
   u8 adj_off ;
   u16 reason ;
};
#line 517  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
union __anonunion_650 {
   struct work_struct work ;
   struct callback_head rcu ;
};
#line 517  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_prog_aux {
   atomic64_t refcnt ;
   u32 used_map_cnt ;
   u32 max_ctx_offset ;
   u32 max_pkt_offset ;
   u32 max_tp_access ;
   u32 stack_depth ;
   u32 id ;
   u32 func_cnt ;
   u32 func_idx ;
   u32 attach_btf_id ;
   struct bpf_prog *linked_prog ;
   bool verifier_zext ;
   bool offload_requested ;
   bool attach_btf_trace ;
   bool func_proto_unreliable ;
   enum bpf_tramp_prog_type trampoline_prog_type ;
   struct bpf_trampoline *trampoline ;
   struct hlist_node tramp_hlist ;
   struct btf_type *attach_func_proto ;
   char *attach_func_name ;
   struct bpf_prog **func ;
   void *jit_data ;
   struct bpf_jit_poke_descriptor *poke_tab ;
   u32 size_poke_tab ;
   struct latch_tree_node ksym_tnode ;
   struct list_head ksym_lnode ;
   struct bpf_prog_ops *ops ;
   struct bpf_map **used_maps ;
   struct bpf_prog *prog ;
   struct user_struct *user ;
   u64 load_time ;
   struct bpf_map *cgroup_storage[2U] ;
   char name[16U] ;
   void *security ;
   struct bpf_prog_offload *offload ;
   struct btf *btf ;
   struct bpf_func_info *func_info ;
   struct bpf_func_info_aux *func_info_aux ;
   struct bpf_line_info *linfo ;
   void **jited_linfo ;
   u32 func_info_cnt ;
   u32 nr_linfo ;
   u32 linfo_idx ;
   u32 num_exentries ;
   struct exception_table_entry *extable ;
   struct bpf_prog_stats *stats ;
   union __anonunion_650 __anonCompField_bpf_prog_aux_149 ;
};
#line 686 
struct bpf_cgroup_storage;
#line 686  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_prog_array_item {
   struct bpf_prog *prog ;
   struct bpf_cgroup_storage *cgroup_storage[2U] ;
};
#line 691  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_prog_array {
   struct callback_head rcu ;
   struct bpf_prog_array_item items[0U] ;
};
#line 1335 
struct cgroup;
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf-cgroup.h"
struct bpf_cgroup_storage_map;
#line 37  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf-cgroup.h"
struct bpf_storage_buffer {
   struct callback_head rcu ;
   char data[0U] ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf-cgroup.h"
union __anonunion_652 {
   struct bpf_storage_buffer *buf ;
   void *percpu_buf ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf-cgroup.h"
struct bpf_cgroup_storage {
   union __anonunion_652 __anonCompField_bpf_cgroup_storage_151 ;
   struct bpf_cgroup_storage_map *map ;
   struct bpf_cgroup_storage_key key ;
   struct list_head list ;
   struct rb_node node ;
   struct callback_head rcu ;
};
#line 62  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf-cgroup.h"
struct cgroup_bpf {
   struct bpf_prog_array *effective[26U] ;
   struct list_head progs[26U] ;
   u32 flags[26U] ;
   struct bpf_prog_array *inactive ;
   struct percpu_ref refcnt ;
   struct work_struct release_work ;
};
#line 69  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kthread.h"
struct kthread_work;
#line 86  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kthread.h"
struct kthread_worker {
   unsigned int flags ;
   raw_spinlock_t lock ;
   struct list_head work_list ;
   struct list_head delayed_work_list ;
   struct task_struct *task ;
   struct kthread_work *current_work ;
};
#line 95  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kthread.h"
struct kthread_work {
   struct list_head node ;
   void (*func)(struct kthread_work *) ;
   struct kthread_worker *worker ;
   int canceling ;
};
#line 103  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kthread.h"
struct kthread_delayed_work {
   struct kthread_work work ;
   struct timer_list timer ;
};
#line 199 
struct cgroup_subsys_state;
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/psi_types.h"
struct psi_group_cpu {
   seqcount_t seq ;
   unsigned int tasks[3U] ;
   u32 state_mask ;
   u32 times[6U] ;
   u64 state_start ;
   u32 times_prev[2U][6U] ;
};
#line 96 
struct psi_group;
#line 128  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/psi_types.h"
struct psi_group {
   struct mutex avgs_lock ;
   struct psi_group_cpu *pcpu ;
   u64 avg_total[5U] ;
   u64 avg_last_update ;
   u64 avg_next_update ;
   struct delayed_work avgs_work ;
   u64 total[2U][5U] ;
   unsigned long avg[5U][3U] ;
   atomic_t poll_scheduled ;
   struct kthread_worker *poll_kworker ;
   struct kthread_delayed_work poll_work ;
   struct mutex trigger_lock ;
   struct list_head triggers ;
   u32 nr_triggers[5U] ;
   u32 poll_states ;
   u64 poll_min_period ;
   u64 polling_total[5U] ;
   u64 polling_next_update ;
   u64 polling_until ;
};
#line 166 
struct cgroup_root;
#line 167 
struct cgroup_subsys;
#line 168 
struct cgroup_taskset;
#line 119  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cgroup_file {
   struct kernfs_node *kn ;
   unsigned long notified_at ;
   struct timer_list notify_timer ;
};
#line 133  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cgroup_subsys_state {
   struct cgroup *cgroup ;
   struct cgroup_subsys *ss ;
   struct percpu_ref refcnt ;
   struct list_head sibling ;
   struct list_head children ;
   struct list_head rstat_css_node ;
   int id ;
   unsigned int flags ;
   u64 serial_nr ;
   atomic_t online_cnt ;
   struct work_struct destroy_work ;
   struct rcu_work destroy_rwork ;
   struct cgroup_subsys_state *parent ;
};
#line 190  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct css_set {
   struct cgroup_subsys_state *subsys[14U] ;
   refcount_t refcount ;
   struct css_set *dom_cset ;
   struct cgroup *dfl_cgrp ;
   int nr_tasks ;
   struct list_head tasks ;
   struct list_head mg_tasks ;
   struct list_head dying_tasks ;
   struct list_head task_iters ;
   struct list_head e_cset_node[14U] ;
   struct list_head threaded_csets ;
   struct list_head threaded_csets_node ;
   struct hlist_node hlist ;
   struct list_head cgrp_links ;
   struct list_head mg_preload_node ;
   struct list_head mg_node ;
   struct cgroup *mg_src_cgrp ;
   struct cgroup *mg_dst_cgrp ;
   struct css_set *mg_dst_cset ;
   bool dead ;
   struct callback_head callback_head ;
};
#line 279  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cgroup_base_stat {
   struct task_cputime cputime ;
};
#line 303  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cgroup_rstat_cpu {
   struct u64_stats_sync bsync ;
   struct cgroup_base_stat bstat ;
   struct cgroup_base_stat last_bstat ;
   struct cgroup *updated_children ;
   struct cgroup *updated_next ;
};
#line 332  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cgroup_freezer_state {
   bool freeze ;
   int e_freeze ;
   int nr_frozen_descendants ;
   int nr_frozen_tasks ;
};
#line 351  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cgroup {
   struct cgroup_subsys_state self ;
   unsigned long flags ;
   int level ;
   int max_depth ;
   int nr_descendants ;
   int nr_dying_descendants ;
   int max_descendants ;
   int nr_populated_csets ;
   int nr_populated_domain_children ;
   int nr_populated_threaded_children ;
   int nr_threaded_children ;
   struct kernfs_node *kn ;
   struct cgroup_file procs_file ;
   struct cgroup_file events_file ;
   u16 subtree_control ;
   u16 subtree_ss_mask ;
   u16 old_subtree_control ;
   u16 old_subtree_ss_mask ;
   struct cgroup_subsys_state *subsys[14U] ;
   struct cgroup_root *root ;
   struct list_head cset_links ;
   struct list_head e_csets[14U] ;
   struct cgroup *dom_cgrp ;
   struct cgroup *old_dom_cgrp ;
   struct cgroup_rstat_cpu *rstat_cpu ;
   struct list_head rstat_css_list ;
   struct cgroup_base_stat last_bstat ;
   struct cgroup_base_stat bstat ;
   struct prev_cputime prev_cputime ;
   struct list_head pidlists ;
   struct mutex pidlist_mutex ;
   wait_queue_head_t offline_waitq ;
   struct work_struct release_agent_work ;
   struct psi_group psi ;
   struct cgroup_bpf bpf ;
   atomic_t congestion_count ;
   struct cgroup_freezer_state freezer ;
   u64 ancestor_ids[] ;
};
#line 489  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cgroup_root {
   struct kernfs_root *kf_root ;
   unsigned int subsys_mask ;
   int hierarchy_id ;
   struct cgroup cgrp ;
   u64 cgrp_ancestor_id_storage ;
   atomic_t nr_cgrps ;
   struct list_head root_list ;
   unsigned int flags ;
   char release_agent_path[4096U] ;
   char name[64U] ;
};
#line 527  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cftype {
   char name[64U] ;
   unsigned long private ;
   size_t max_write_len ;
   unsigned int flags ;
   unsigned int file_offset ;
   struct cgroup_subsys *ss ;
   struct list_head node ;
   struct kernfs_ops *kf_ops ;
   int (*open)(struct kernfs_open_file *) ;
   void (*release)(struct kernfs_open_file *) ;
   u64 (*read_u64)(struct cgroup_subsys_state *, struct cftype *) ;
   s64 (*read_s64)(struct cgroup_subsys_state *, struct cftype *) ;
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   int (*write_u64)(struct cgroup_subsys_state *, struct cftype *, u64 ) ;
   int (*write_s64)(struct cgroup_subsys_state *, struct cftype *, s64 ) ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   __poll_t (*poll)(struct kernfs_open_file *, struct poll_table_struct *) ;
   struct lock_class_key lockdep_key ;
};
#line 616  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cgroup_subsys {
   struct cgroup_subsys_state *(*css_alloc)(struct cgroup_subsys_state *) ;
   int (*css_online)(struct cgroup_subsys_state *) ;
   void (*css_offline)(struct cgroup_subsys_state *) ;
   void (*css_released)(struct cgroup_subsys_state *) ;
   void (*css_free)(struct cgroup_subsys_state *) ;
   void (*css_reset)(struct cgroup_subsys_state *) ;
   void (*css_rstat_flush)(struct cgroup_subsys_state *, int ) ;
   int (*css_extra_stat_show)(struct seq_file *, struct cgroup_subsys_state *) ;
   int (*can_attach)(struct cgroup_taskset *) ;
   void (*cancel_attach)(struct cgroup_taskset *) ;
   void (*attach)(struct cgroup_taskset *) ;
   void (*post_attach)(void) ;
   int (*can_fork)(struct task_struct *) ;
   void (*cancel_fork)(struct task_struct *) ;
   void (*fork)(struct task_struct *) ;
   void (*exit)(struct task_struct *) ;
   void (*release)(struct task_struct *) ;
   void (*bind)(struct cgroup_subsys_state *) ;
   bool early_init : 1 ;
   bool implicit_on_dfl : 1 ;
   bool threaded : 1 ;
   bool broken_hierarchy : 1 ;
   bool warned_broken_hierarchy : 1 ;
   int id ;
   char *name ;
   char *legacy_name ;
   struct cgroup_root *root ;
   struct idr css_idr ;
   struct list_head cfts ;
   struct cftype *dfl_cftypes ;
   struct cftype *legacy_cftypes ;
   unsigned int depends_on ;
};
#line 783  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct __anonstruct_654 {
   u8 is_data ;
   u8 padding ;
   u16 prioidx ;
   u32 classid ;
} __attribute__((__packed__));
#line 783  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
union __anonunion_653 {
   struct __anonstruct_654 __anonCompField___anonunion_653_152 ;
   u64 val ;
};
#line 783  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct sock_cgroup_data {
   union __anonunion_653 __anonCompField_sock_cgroup_data_153 ;
};
#line 848  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup.h"
struct cgroup_namespace {
   refcount_t count ;
   struct ns_common ns ;
   struct user_namespace *user_ns ;
   struct ucounts *ucounts ;
   struct css_set *root_cset ;
};
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netprio_cgroup.h"
struct netprio_map {
   struct callback_head rcu ;
   u32 priomap_len ;
   u32 priomap[] ;
};
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/xdp.h"
struct xdp_mem_info {
   u32 type ;
   u32 id ;
};
#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/xdp.h"
struct xdp_rxq_info {
   struct net_device *dev ;
   u32 queue_index ;
   u32 reg_state ;
   struct xdp_mem_info mem ;
} __attribute__((__aligned__(64)));
#line 75  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/xdp.h"
struct xdp_frame {
   void *data ;
   u16 len ;
   u16 headroom ;
   u16 metasize ;
   struct xdp_mem_info mem ;
   struct net_device *dev_rx ;
};
#line 175 
struct netdev_bpf;
#line 160  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/security.h"
struct xfrm_policy;
#line 161 
struct xfrm_state;
#line 178 
struct request_sock;
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched/signal.h"
struct sighand_struct {
   spinlock_t siglock ;
   refcount_t count ;
   wait_queue_head_t signalfd_wqh ;
   struct k_sigaction action[64U] ;
};
#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched/signal.h"
struct pacct_struct {
   int ac_flag ;
   long ac_exitcode ;
   unsigned long ac_mem ;
   u64 ac_utime ;
   u64 ac_stime ;
   unsigned long ac_minflt ;
   unsigned long ac_majflt ;
};
#line 36  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched/signal.h"
struct cpu_itimer {
   u64 expires ;
   u64 incr ;
};
#line 45  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched/signal.h"
struct task_cputime_atomic {
   atomic64_t utime ;
   atomic64_t stime ;
   atomic64_t sum_exec_runtime ;
};
#line 64  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched/signal.h"
struct thread_group_cputimer {
   struct task_cputime_atomic cputime_atomic ;
};
#line 80 
struct tty_struct;
#line 80 
struct autogroup;
#line 80 
struct tty_audit_buf;
#line 80  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched/signal.h"
struct signal_struct {
   refcount_t sigcnt ;
   atomic_t live ;
   int nr_threads ;
   struct list_head thread_head ;
   wait_queue_head_t wait_chldexit ;
   struct task_struct *curr_target ;
   struct sigpending shared_pending ;
   struct hlist_head multiprocess ;
   int group_exit_code ;
   int notify_count ;
   struct task_struct *group_exit_task ;
   int group_stop_count ;
   unsigned int flags ;
   unsigned int is_child_subreaper : 1 ;
   unsigned int has_child_subreaper : 1 ;
   int posix_timer_id ;
   struct list_head posix_timers ;
   struct hrtimer real_timer ;
   ktime_t it_real_incr ;
   struct cpu_itimer it[2U] ;
   struct thread_group_cputimer cputimer ;
   struct posix_cputimers posix_cputimers ;
   struct pid *pids[4U] ;
   struct pid *tty_old_pgrp ;
   int leader ;
   struct tty_struct *tty ;
   struct autogroup *autogroup ;
   seqlock_t stats_lock ;
   u64 utime ;
   u64 stime ;
   u64 cutime ;
   u64 cstime ;
   u64 gtime ;
   u64 cgtime ;
   struct prev_cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   unsigned long cnvcsw ;
   unsigned long cnivcsw ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   unsigned long cmin_flt ;
   unsigned long cmaj_flt ;
   unsigned long inblock ;
   unsigned long oublock ;
   unsigned long cinblock ;
   unsigned long coublock ;
   unsigned long maxrss ;
   unsigned long cmaxrss ;
   struct task_io_accounting ioac ;
   unsigned long long sum_sched_runtime ;
   struct rlimit rlim[16U] ;
   struct pacct_struct pacct ;
   struct taskstats *stats ;
   unsigned int audit_tty ;
   struct tty_audit_buf *tty_audit_buf ;
   bool oom_flag_origin ;
   short oom_score_adj ;
   short oom_score_adj_min ;
   struct mm_struct *oom_mm ;
   struct mutex cred_guard_mutex ;
} __attribute__((__designated_init__));
#line 44  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/netlink.h"
struct nlmsghdr {
   __u32 nlmsg_len ;
   __u16 nlmsg_type ;
   __u16 nlmsg_flags ;
   __u32 nlmsg_seq ;
   __u32 nlmsg_pid ;
};
#line 211  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/netlink.h"
struct nlattr {
   __u16 nla_len ;
   __u16 nla_type ;
};
#line 74  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netlink.h"
struct netlink_ext_ack {
   char *_msg ;
   struct nlattr *bad_attr ;
   u8 cookie[20U] ;
   u8 cookie_len ;
};
#line 180  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netlink.h"
union __anonunion_677 {
   u8 ctx[48U] ;
   long args[6U] ;
};
#line 180  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netlink.h"
struct netlink_callback {
   struct sk_buff *skb ;
   struct nlmsghdr *nlh ;
   int (*dump)(struct sk_buff *, struct netlink_callback *) ;
   int (*done)(struct netlink_callback *) ;
   void *data ;
   struct module *module ;
   struct netlink_ext_ack *extack ;
   u16 family ;
   u16 min_dump_alloc ;
   bool strict_check ;
   u16 answer_flags ;
   unsigned int prev_seq ;
   unsigned int seq ;
   union __anonunion_677 __anonCompField_netlink_callback_154 ;
};
#line 8  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/neighbour.h"
struct ndmsg {
   __u8 ndm_family ;
   __u8 ndm_pad1 ;
   __u16 ndm_pad2 ;
   __s32 ndm_ifindex ;
   __u16 ndm_state ;
   __u8 ndm_flags ;
   __u8 ndm_type ;
};
#line 44  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if_link.h"
struct rtnl_link_stats64 {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 rx_errors ;
   __u64 tx_errors ;
   __u64 rx_dropped ;
   __u64 tx_dropped ;
   __u64 multicast ;
   __u64 collisions ;
   __u64 rx_length_errors ;
   __u64 rx_over_errors ;
   __u64 rx_crc_errors ;
   __u64 rx_frame_errors ;
   __u64 rx_fifo_errors ;
   __u64 rx_missed_errors ;
   __u64 tx_aborted_errors ;
   __u64 tx_carrier_errors ;
   __u64 tx_fifo_errors ;
   __u64 tx_heartbeat_errors ;
   __u64 tx_window_errors ;
   __u64 rx_compressed ;
   __u64 tx_compressed ;
   __u64 rx_nohandler ;
};
#line 753  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if_link.h"
struct ifla_vf_guid {
   __u32 vf ;
   __u64 guid ;
};
#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/if_link.h"
struct ifla_vf_stats {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 broadcast ;
   __u64 multicast ;
   __u64 rx_dropped ;
   __u64 tx_dropped ;
};
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/if_link.h"
struct ifla_vf_info {
   __u32 vf ;
   __u8 mac[32U] ;
   __u32 vlan ;
   __u32 qos ;
   __u32 spoofchk ;
   __u32 linkstate ;
   __u32 min_tx_rate ;
   __u32 max_tx_rate ;
   __u32 rss_query_en ;
   __u32 trusted ;
   __be16 vlan_proto ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/pkt_sched.h"
struct tc_stats {
   __u64 bytes ;
   __u32 packets ;
   __u32 drops ;
   __u32 overlimits ;
   __u32 bps ;
   __u32 pps ;
   __u32 qlen ;
   __u32 backlog ;
};
#line 102  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/pkt_sched.h"
struct tc_sizespec {
   unsigned char cell_log ;
   unsigned char size_log ;
   short cell_align ;
   int overhead ;
   unsigned int linklayer ;
   unsigned int mpu ;
   unsigned int mtu ;
   unsigned int tsize ;
};
#line 118  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/hashtable.h"
struct netpoll_info;
#line 119 
struct phy_device;
#line 120 
struct dsa_port;
#line 121 
struct sfp_bus;
#line 122 
struct wireless_dev;
#line 123 
struct wpan_dev;
#line 124 
struct mpls_dev;
#line 125 
struct udp_tunnel_info;
#line 69  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
enum netdev_tx {
    __NETDEV_TX_MIN = -2147483648,
    NETDEV_TX_OK = 0,
    NETDEV_TX_BUSY = 16
};
#line 75  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
typedef enum netdev_tx netdev_tx_t;
#line 161  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct net_device_stats {
   unsigned long rx_packets ;
   unsigned long tx_packets ;
   unsigned long rx_bytes ;
   unsigned long tx_bytes ;
   unsigned long rx_errors ;
   unsigned long tx_errors ;
   unsigned long rx_dropped ;
   unsigned long tx_dropped ;
   unsigned long multicast ;
   unsigned long collisions ;
   unsigned long rx_length_errors ;
   unsigned long rx_over_errors ;
   unsigned long rx_crc_errors ;
   unsigned long rx_frame_errors ;
   unsigned long rx_fifo_errors ;
   unsigned long rx_missed_errors ;
   unsigned long tx_aborted_errors ;
   unsigned long tx_carrier_errors ;
   unsigned long tx_fifo_errors ;
   unsigned long tx_heartbeat_errors ;
   unsigned long tx_window_errors ;
   unsigned long rx_compressed ;
   unsigned long tx_compressed ;
};
#line 195 
struct neigh_parms;
#line 217  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_hw_addr_list {
   struct list_head list ;
   int count ;
};
#line 237  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct hh_cache {
   unsigned int hh_len ;
   seqlock_t hh_lock ;
   unsigned long hh_data[16U] ;
};
#line 263  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct header_ops {
   int (*create)(struct sk_buff *, struct net_device *, unsigned short , void *, void *, unsigned int ) ;
   int (*parse)(struct sk_buff *, unsigned char *) ;
   int (*cache)(struct neighbour *, struct hh_cache *, __be16 ) ;
   void (*cache_update)(struct hh_cache *, struct net_device *, unsigned char *) ;
   bool (*validate)(char *, unsigned int ) ;
   __be16 (*parse_protocol)(struct sk_buff *) ;
};
#line 372 
enum rx_handler_result {
    RX_HANDLER_CONSUMED = 0,
    RX_HANDLER_ANOTHER = 1,
    RX_HANDLER_EXACT = 2,
    RX_HANDLER_PASS = 3
};
#line 379  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
typedef enum rx_handler_result rx_handler_result_t;
#line 421  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
typedef rx_handler_result_t rx_handler_func_t(struct sk_buff **);
#line 589 
struct Qdisc;
#line 589 
struct xdp_umem;
#line 589  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_queue {
   struct net_device *dev ;
   struct Qdisc *qdisc ;
   struct Qdisc *qdisc_sleeping ;
   struct kobject kobj ;
   int numa_node ;
   unsigned long tx_maxrate ;
   unsigned long trans_timeout ;
   struct net_device *sb_dev ;
   struct xdp_umem *umem ;
   spinlock_t _xmit_lock ;
   int xmit_lock_owner ;
   unsigned long trans_start ;
   unsigned long state ;
   struct dql dql ;
} __attribute__((__aligned__(64)));
#line 662  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct rps_map {
   unsigned int len ;
   struct callback_head rcu ;
   u16 cpus[0U] ;
};
#line 674  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct rps_dev_flow {
   u16 cpu ;
   u16 filter ;
   unsigned int last_qtail ;
};
#line 684  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct rps_dev_flow_table {
   unsigned int mask ;
   struct callback_head rcu ;
   struct rps_dev_flow flows[0U] ;
};
#line 736  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_rx_queue {
   struct rps_map *rps_map ;
   struct rps_dev_flow_table *rps_flow_table ;
   struct kobject kobj ;
   struct net_device *dev ;
   struct xdp_rxq_info xdp_rxq ;
   struct xdp_umem *umem ;
} __attribute__((__aligned__(64)));
#line 764  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct xps_map {
   unsigned int len ;
   unsigned int alloc_len ;
   struct callback_head rcu ;
   u16 queues[0U] ;
};
#line 777  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct xps_dev_maps {
   struct callback_head rcu ;
   struct xps_map *attr_map[0U] ;
};
#line 793  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_tc_txq {
   u16 count ;
   u16 offset ;
};
#line 803  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_fcoe_hbainfo {
   char manufacturer[64U] ;
   char serial_number[64U] ;
   char hardware_version[64U] ;
   char driver_version[64U] ;
   char optionrom_version[64U] ;
   char firmware_version[64U] ;
   char model[256U] ;
   char model_description[256U] ;
};
#line 820  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_phys_item_id {
   unsigned char id[32U] ;
   unsigned char id_len ;
};
#line 833 
enum tc_setup_type {
    TC_SETUP_QDISC_MQPRIO = 0,
    TC_SETUP_CLSU32 = 1,
    TC_SETUP_CLSFLOWER = 2,
    TC_SETUP_CLSMATCHALL = 3,
    TC_SETUP_CLSBPF = 4,
    TC_SETUP_BLOCK = 5,
    TC_SETUP_QDISC_CBS = 6,
    TC_SETUP_QDISC_RED = 7,
    TC_SETUP_QDISC_PRIO = 8,
    TC_SETUP_QDISC_MQ = 9,
    TC_SETUP_QDISC_ETF = 10,
    TC_SETUP_ROOT_QDISC = 11,
    TC_SETUP_QDISC_GRED = 12,
    TC_SETUP_QDISC_TAPRIO = 13,
    TC_SETUP_FT = 14
};
#line 851 
enum bpf_netdev_command {
    XDP_SETUP_PROG = 0,
    XDP_SETUP_PROG_HW = 1,
    XDP_QUERY_PROG = 2,
    XDP_QUERY_PROG_HW = 3,
    BPF_OFFLOAD_MAP_ALLOC = 4,
    BPF_OFFLOAD_MAP_FREE = 5,
    XDP_SETUP_XSK_UMEM = 6
};
#line 879  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct __anonstruct_682 {
   u32 flags ;
   struct bpf_prog *prog ;
   struct netlink_ext_ack *extack ;
};
#line 879  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct __anonstruct_683 {
   u32 prog_id ;
   u32 prog_flags ;
};
#line 879  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct __anonstruct_684 {
   struct bpf_offloaded_map *offmap ;
};
#line 879  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct __anonstruct_xsk_685 {
   struct xdp_umem *umem ;
   u16 queue_id ;
};
#line 879  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
union __anonunion_681 {
   struct __anonstruct_682 __anonCompField___anonunion_681_156 ;
   struct __anonstruct_683 __anonCompField___anonunion_681_157 ;
   struct __anonstruct_684 __anonCompField___anonunion_681_158 ;
   struct __anonstruct_xsk_685 xsk ;
};
#line 879  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_bpf {
   enum bpf_netdev_command command ;
   union __anonunion_681 __anonCompField_netdev_bpf_159 ;
};
#line 911  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct xfrmdev_ops {
   int (*xdo_dev_state_add)(struct xfrm_state *) ;
   void (*xdo_dev_state_delete)(struct xfrm_state *) ;
   void (*xdo_dev_state_free)(struct xfrm_state *) ;
   bool (*xdo_dev_offload_ok)(struct sk_buff *, struct xfrm_state *) ;
   void (*xdo_dev_state_advance_esn)(struct xfrm_state *) ;
};
#line 921  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct dev_ifalias {
   struct callback_head rcuhead ;
   char ifalias[] ;
};
#line 926 
struct tlsdev_ops;
#line 929  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_name_node {
   struct hlist_node hlist ;
   struct list_head list ;
   struct net_device *dev ;
   char *name ;
};
#line 1257 
struct devlink_port;
#line 1257  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct net_device_ops {
   int (*ndo_init)(struct net_device *) ;
   void (*ndo_uninit)(struct net_device *) ;
   int (*ndo_open)(struct net_device *) ;
   int (*ndo_stop)(struct net_device *) ;
   netdev_tx_t (*ndo_start_xmit)(struct sk_buff *, struct net_device *) ;
   netdev_features_t (*ndo_features_check)(struct sk_buff *, struct net_device *, netdev_features_t ) ;
   u16 (*ndo_select_queue)(struct net_device *, struct sk_buff *, struct net_device *) ;
   void (*ndo_change_rx_flags)(struct net_device *, int ) ;
   void (*ndo_set_rx_mode)(struct net_device *) ;
   int (*ndo_set_mac_address)(struct net_device *, void *) ;
   int (*ndo_validate_addr)(struct net_device *) ;
   int (*ndo_do_ioctl)(struct net_device *, struct ifreq *, int ) ;
   int (*ndo_set_config)(struct net_device *, struct ifmap *) ;
   int (*ndo_change_mtu)(struct net_device *, int ) ;
   int (*ndo_neigh_setup)(struct net_device *, struct neigh_parms *) ;
   void (*ndo_tx_timeout)(struct net_device *) ;
   void (*ndo_get_stats64)(struct net_device *, struct rtnl_link_stats64 *) ;
   bool (*ndo_has_offload_stats)(struct net_device *, int ) ;
   int (*ndo_get_offload_stats)(int , struct net_device *, void *) ;
   struct net_device_stats *(*ndo_get_stats)(struct net_device *) ;
   int (*ndo_vlan_rx_add_vid)(struct net_device *, __be16 , u16 ) ;
   int (*ndo_vlan_rx_kill_vid)(struct net_device *, __be16 , u16 ) ;
   void (*ndo_poll_controller)(struct net_device *) ;
   int (*ndo_netpoll_setup)(struct net_device *, struct netpoll_info *) ;
   void (*ndo_netpoll_cleanup)(struct net_device *) ;
   int (*ndo_set_vf_mac)(struct net_device *, int , u8 *) ;
   int (*ndo_set_vf_vlan)(struct net_device *, int , u16 , u8 , __be16 ) ;
   int (*ndo_set_vf_rate)(struct net_device *, int , int , int ) ;
   int (*ndo_set_vf_spoofchk)(struct net_device *, int , bool ) ;
   int (*ndo_set_vf_trust)(struct net_device *, int , bool ) ;
   int (*ndo_get_vf_config)(struct net_device *, int , struct ifla_vf_info *) ;
   int (*ndo_set_vf_link_state)(struct net_device *, int , int ) ;
   int (*ndo_get_vf_stats)(struct net_device *, int , struct ifla_vf_stats *) ;
   int (*ndo_set_vf_port)(struct net_device *, int , struct nlattr **) ;
   int (*ndo_get_vf_port)(struct net_device *, int , struct sk_buff *) ;
   int (*ndo_get_vf_guid)(struct net_device *, int , struct ifla_vf_guid *, struct ifla_vf_guid *) ;
   int (*ndo_set_vf_guid)(struct net_device *, int , u64 , int ) ;
   int (*ndo_set_vf_rss_query_en)(struct net_device *, int , bool ) ;
   int (*ndo_setup_tc)(struct net_device *, enum tc_setup_type , void *) ;
   int (*ndo_fcoe_enable)(struct net_device *) ;
   int (*ndo_fcoe_disable)(struct net_device *) ;
   int (*ndo_fcoe_ddp_setup)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_ddp_done)(struct net_device *, u16 ) ;
   int (*ndo_fcoe_ddp_target)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_get_hbainfo)(struct net_device *, struct netdev_fcoe_hbainfo *) ;
   int (*ndo_fcoe_get_wwn)(struct net_device *, u64 *, int ) ;
   int (*ndo_rx_flow_steer)(struct net_device *, struct sk_buff *, u16 , u32 ) ;
   int (*ndo_add_slave)(struct net_device *, struct net_device *, struct netlink_ext_ack *) ;
   int (*ndo_del_slave)(struct net_device *, struct net_device *) ;
   netdev_features_t (*ndo_fix_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_set_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_neigh_construct)(struct net_device *, struct neighbour *) ;
   void (*ndo_neigh_destroy)(struct net_device *, struct neighbour *) ;
   int (*ndo_fdb_add)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char *, u16 , u16 , struct netlink_ext_ack *) ;
   int (*ndo_fdb_del)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char *, u16 ) ;
   int (*ndo_fdb_dump)(struct sk_buff *, struct netlink_callback *, struct net_device *, struct net_device *, int *) ;
   int (*ndo_fdb_get)(struct sk_buff *, struct nlattr **, struct net_device *, unsigned char *, u16 , u32 , u32 , struct netlink_ext_ack *) ;
   int (*ndo_bridge_setlink)(struct net_device *, struct nlmsghdr *, u16 , struct netlink_ext_ack *) ;
   int (*ndo_bridge_getlink)(struct sk_buff *, u32 , u32 , struct net_device *, u32 , int ) ;
   int (*ndo_bridge_dellink)(struct net_device *, struct nlmsghdr *, u16 ) ;
   int (*ndo_change_carrier)(struct net_device *, bool ) ;
   int (*ndo_get_phys_port_id)(struct net_device *, struct netdev_phys_item_id *) ;
   int (*ndo_get_port_parent_id)(struct net_device *, struct netdev_phys_item_id *) ;
   int (*ndo_get_phys_port_name)(struct net_device *, char *, size_t ) ;
   void (*ndo_udp_tunnel_add)(struct net_device *, struct udp_tunnel_info *) ;
   void (*ndo_udp_tunnel_del)(struct net_device *, struct udp_tunnel_info *) ;
   void *(*ndo_dfwd_add_station)(struct net_device *, struct net_device *) ;
   void (*ndo_dfwd_del_station)(struct net_device *, void *) ;
   int (*ndo_set_tx_maxrate)(struct net_device *, int , u32 ) ;
   int (*ndo_get_iflink)(struct net_device *) ;
   int (*ndo_change_proto_down)(struct net_device *, bool ) ;
   int (*ndo_fill_metadata_dst)(struct net_device *, struct sk_buff *) ;
   void (*ndo_set_rx_headroom)(struct net_device *, int ) ;
   int (*ndo_bpf)(struct net_device *, struct netdev_bpf *) ;
   int (*ndo_xdp_xmit)(struct net_device *, int , struct xdp_frame **, u32 ) ;
   int (*ndo_xsk_wakeup)(struct net_device *, u32 , u32 ) ;
   struct devlink_port *(*ndo_get_devlink_port)(struct net_device *) ;
};
#line 1492 
enum ldv_15060 {
    NETREG_UNINITIALIZED = 0,
    NETREG_REGISTERED = 1,
    NETREG_UNREGISTERING = 2,
    NETREG_UNREGISTERED = 3,
    NETREG_RELEASED = 4,
    NETREG_DUMMY = 5
};
#line 1501 
enum ldv_15061 {
    RTNL_LINK_INITIALIZED = 0,
    RTNL_LINK_INITIALIZING = 1
};
#line 1795  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct __anonstruct_adj_list_686 {
   struct list_head upper ;
   struct list_head lower ;
};
#line 1795 
struct iw_handler_def;
#line 1795 
struct iw_public_data;
#line 1795 
struct l3mdev_ops;
#line 1795 
struct ndisc_ops;
#line 1795 
struct vlan_info;
#line 1795 
struct tipc_bearer;
#line 1795 
struct in_device;
#line 1795 
struct dn_dev;
#line 1795 
struct inet6_dev;
#line 1795 
struct mini_Qdisc;
#line 1795 
struct cpu_rmap;
#line 1795 
struct pcpu_lstats;
#line 1795 
struct pcpu_sw_netstats;
#line 1795 
struct pcpu_dstats;
#line 1795  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
union __anonunion_687 {
   void *ml_priv ;
   struct pcpu_lstats *lstats ;
   struct pcpu_sw_netstats *tstats ;
   struct pcpu_dstats *dstats ;
};
#line 1795 
struct garp_port;
#line 1795 
struct mrp_port;
#line 1795 
struct rtnl_link_ops;
#line 1795  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct net_device {
   char name[16U] ;
   struct netdev_name_node *name_node ;
   struct dev_ifalias *ifalias ;
   unsigned long mem_end ;
   unsigned long mem_start ;
   unsigned long base_addr ;
   int irq ;
   unsigned long state ;
   struct list_head dev_list ;
   struct list_head napi_list ;
   struct list_head unreg_list ;
   struct list_head close_list ;
   struct list_head ptype_all ;
   struct list_head ptype_specific ;
   struct __anonstruct_adj_list_686 adj_list ;
   netdev_features_t features ;
   netdev_features_t hw_features ;
   netdev_features_t wanted_features ;
   netdev_features_t vlan_features ;
   netdev_features_t hw_enc_features ;
   netdev_features_t mpls_features ;
   netdev_features_t gso_partial_features ;
   int ifindex ;
   int group ;
   struct net_device_stats stats ;
   atomic_long_t rx_dropped ;
   atomic_long_t tx_dropped ;
   atomic_long_t rx_nohandler ;
   atomic_t carrier_up_count ;
   atomic_t carrier_down_count ;
   struct iw_handler_def *wireless_handlers ;
   struct iw_public_data *wireless_data ;
   struct net_device_ops *netdev_ops ;
   struct ethtool_ops *ethtool_ops ;
   struct l3mdev_ops *l3mdev_ops ;
   struct ndisc_ops *ndisc_ops ;
   struct xfrmdev_ops *xfrmdev_ops ;
   struct tlsdev_ops *tlsdev_ops ;
   struct header_ops *header_ops ;
   unsigned int flags ;
   unsigned int priv_flags ;
   unsigned short gflags ;
   unsigned short padded ;
   unsigned char operstate ;
   unsigned char link_mode ;
   unsigned char if_port ;
   unsigned char dma ;
   unsigned int mtu ;
   unsigned int min_mtu ;
   unsigned int max_mtu ;
   unsigned short type ;
   unsigned short hard_header_len ;
   unsigned char min_header_len ;
   unsigned short needed_headroom ;
   unsigned short needed_tailroom ;
   unsigned char perm_addr[32U] ;
   unsigned char addr_assign_type ;
   unsigned char addr_len ;
   unsigned char upper_level ;
   unsigned char lower_level ;
   unsigned short neigh_priv_len ;
   unsigned short dev_id ;
   unsigned short dev_port ;
   spinlock_t addr_list_lock ;
   unsigned char name_assign_type ;
   bool uc_promisc ;
   struct netdev_hw_addr_list uc ;
   struct netdev_hw_addr_list mc ;
   struct netdev_hw_addr_list dev_addrs ;
   struct kset *queues_kset ;
   unsigned int promiscuity ;
   unsigned int allmulti ;
   struct vlan_info *vlan_info ;
   struct dsa_port *dsa_ptr ;
   struct tipc_bearer *tipc_ptr ;
   void *atalk_ptr ;
   struct in_device *ip_ptr ;
   struct dn_dev *dn_ptr ;
   struct inet6_dev *ip6_ptr ;
   void *ax25_ptr ;
   struct wireless_dev *ieee80211_ptr ;
   struct wpan_dev *ieee802154_ptr ;
   struct mpls_dev *mpls_ptr ;
   unsigned char *dev_addr ;
   struct netdev_rx_queue *_rx ;
   unsigned int num_rx_queues ;
   unsigned int real_num_rx_queues ;
   struct bpf_prog *xdp_prog ;
   unsigned long gro_flush_timeout ;
   rx_handler_func_t *rx_handler ;
   void *rx_handler_data ;
   struct mini_Qdisc *miniq_ingress ;
   struct netdev_queue *ingress_queue ;
   struct nf_hook_entries *nf_hooks_ingress ;
   unsigned char broadcast[32U] ;
   struct cpu_rmap *rx_cpu_rmap ;
   struct hlist_node index_hlist ;
   struct netdev_queue *_tx ;
   unsigned int num_tx_queues ;
   unsigned int real_num_tx_queues ;
   struct Qdisc *qdisc ;
   struct hlist_head qdisc_hash[16U] ;
   unsigned int tx_queue_len ;
   spinlock_t tx_global_lock ;
   int watchdog_timeo ;
   struct xps_dev_maps *xps_cpus_map ;
   struct xps_dev_maps *xps_rxqs_map ;
   struct mini_Qdisc *miniq_egress ;
   struct timer_list watchdog_timer ;
   int *pcpu_refcnt ;
   struct list_head todo_list ;
   struct list_head link_watch_list ;
   enum ldv_15060 reg_state : 8 ;
   bool dismantle ;
   enum ldv_15061 rtnl_link_state : 16 ;
   bool needs_free_netdev ;
   void (*priv_destructor)(struct net_device *) ;
   struct netpoll_info *npinfo ;
   possible_net_t nd_net ;
   union __anonunion_687 __anonCompField_net_device_160 ;
   struct garp_port *garp_port ;
   struct mrp_port *mrp_port ;
   struct device dev ;
   struct attribute_group *sysfs_groups[4U] ;
   struct attribute_group *sysfs_rx_queue_group ;
   struct rtnl_link_ops *rtnl_link_ops ;
   unsigned int gso_max_size ;
   u16 gso_max_segs ;
   struct dcbnl_rtnl_ops *dcbnl_ops ;
   s16 num_tc ;
   struct netdev_tc_txq tc_to_txq[16U] ;
   u8 prio_tc_map[16U] ;
   unsigned int fcoe_ddp_xid ;
   struct netprio_map *priomap ;
   struct phy_device *phydev ;
   struct sfp_bus *sfp_bus ;
   struct lock_class_key qdisc_tx_busylock_key ;
   struct lock_class_key qdisc_running_key ;
   struct lock_class_key qdisc_xmit_lock_key ;
   struct lock_class_key addr_list_lock_key ;
   bool proto_down ;
   unsigned int wol_enabled : 1 ;
};
#line 2400  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct pcpu_sw_netstats {
   u64 rx_packets ;
   u64 rx_bytes ;
   u64 tx_packets ;
   u64 tx_bytes ;
   struct u64_stats_sync syncp ;
} __attribute__((__aligned__(32)));
#line 2408  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct pcpu_lstats {
   u64_stats_t packets ;
   u64_stats_t bytes ;
   struct u64_stats_sync syncp ;
} __attribute__((__aligned__(16)));
#line 233  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct ieee80211_hdr {
   __le16 frame_control ;
   __le16 duration_id ;
   u8 addr1[6U] ;
   u8 addr2[6U] ;
   u8 addr3[6U] ;
   __le16 seq_ctrl ;
   u8 addr4[6U] ;
} __attribute__((__packed__, __aligned__(2)));
#line 1227  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct ieee80211_p2p_noa_desc {
   u8 count ;
   __le32 duration ;
   __le32 interval ;
   __le32 start_time ;
} __attribute__((__packed__));
#line 1234  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct ieee80211_p2p_noa_attr {
   u8 index ;
   u8 oppps_ctwindow ;
   struct ieee80211_p2p_noa_desc desc[4U] ;
} __attribute__((__packed__));
#line 1276  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct ieee80211_mcs_info {
   u8 rx_mask[10U] ;
   __le16 rx_highest ;
   u8 tx_params ;
   u8 reserved[3U] ;
} __attribute__((__packed__));
#line 1310  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct ieee80211_ht_cap {
   __le16 cap_info ;
   u8 ampdu_params_info ;
   struct ieee80211_mcs_info mcs ;
   __le16 extended_ht_cap_info ;
   __le32 tx_BF_cap_info ;
   u8 antenna_selection_info ;
} __attribute__((__packed__));
#line 1483  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct ieee80211_vht_mcs_info {
   __le16 rx_mcs_map ;
   __le16 rx_highest ;
   __le16 tx_mcs_map ;
   __le16 tx_highest ;
} __attribute__((__packed__));
#line 1526  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct ieee80211_vht_cap {
   __le32 vht_cap_info ;
   struct ieee80211_vht_mcs_info supp_mcs ;
} __attribute__((__packed__));
#line 1569  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct ieee80211_he_cap_elem {
   u8 mac_cap_info[6U] ;
   u8 phy_cap_info[11U] ;
} __attribute__((__packed__));
#line 1616  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct ieee80211_he_mcs_nss_supp {
   __le16 rx_mcs_80 ;
   __le16 tx_mcs_80 ;
   __le16 rx_mcs_160 ;
   __le16 tx_mcs_160 ;
   __le16 rx_mcs_80p80 ;
   __le16 tx_mcs_80p80 ;
} __attribute__((__packed__));
#line 1631  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct ieee80211_he_operation {
   __le32 he_oper_params ;
   __le16 he_mcs_nss_set ;
   u8 optional[0U] ;
} __attribute__((__packed__));
#line 811  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/debugfs.h"
enum nl80211_iftype {
    NL80211_IFTYPE_UNSPECIFIED = 0,
    NL80211_IFTYPE_ADHOC = 1,
    NL80211_IFTYPE_STATION = 2,
    NL80211_IFTYPE_AP = 3,
    NL80211_IFTYPE_AP_VLAN = 4,
    NL80211_IFTYPE_WDS = 5,
    NL80211_IFTYPE_MONITOR = 6,
    NL80211_IFTYPE_MESH_POINT = 7,
    NL80211_IFTYPE_P2P_CLIENT = 8,
    NL80211_IFTYPE_P2P_GO = 9,
    NL80211_IFTYPE_P2P_DEVICE = 10,
    NL80211_IFTYPE_OCB = 11,
    NL80211_IFTYPE_NAN = 12,
    NUM_NL80211_IFTYPES = 13,
    NL80211_IFTYPE_MAX = 12
};
#line 3263  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/nl80211.h"
enum nl80211_reg_initiator {
    NL80211_REGDOM_SET_BY_CORE = 0,
    NL80211_REGDOM_SET_BY_USER = 1,
    NL80211_REGDOM_SET_BY_DRIVER = 2,
    NL80211_REGDOM_SET_BY_COUNTRY_IE = 3
};
#line 3320 
enum nl80211_dfs_regions {
    NL80211_DFS_UNSET = 0,
    NL80211_DFS_FCC = 1,
    NL80211_DFS_ETSI = 2,
    NL80211_DFS_JP = 3
};
#line 3327 
enum nl80211_user_reg_hint_type {
    NL80211_USER_REG_HINT_USER = 0,
    NL80211_USER_REG_HINT_CELL_BASE = 1,
    NL80211_USER_REG_HINT_INDOOR = 2
};
#line 3446 
enum nl80211_key_mode {
    NL80211_KEY_RX_TX = 0,
    NL80211_KEY_NO_TX = 1,
    NL80211_KEY_SET_TX = 2
};
#line 3452 
enum nl80211_chan_width {
    NL80211_CHAN_WIDTH_20_NOHT = 0,
    NL80211_CHAN_WIDTH_20 = 1,
    NL80211_CHAN_WIDTH_40 = 2,
    NL80211_CHAN_WIDTH_80 = 3,
    NL80211_CHAN_WIDTH_80P80 = 4,
    NL80211_CHAN_WIDTH_160 = 5,
    NL80211_CHAN_WIDTH_5 = 6,
    NL80211_CHAN_WIDTH_10 = 7
};
#line 3463 
enum nl80211_bss_scan_width {
    NL80211_BSS_CHAN_WIDTH_20 = 0,
    NL80211_BSS_CHAN_WIDTH_10 = 1,
    NL80211_BSS_CHAN_WIDTH_5 = 2
};
#line 3500 
enum nl80211_auth_type {
    NL80211_AUTHTYPE_OPEN_SYSTEM = 0,
    NL80211_AUTHTYPE_SHARED_KEY = 1,
    NL80211_AUTHTYPE_FT = 2,
    NL80211_AUTHTYPE_NETWORK_EAP = 3,
    NL80211_AUTHTYPE_SAE = 4,
    NL80211_AUTHTYPE_FILS_SK = 5,
    NL80211_AUTHTYPE_FILS_SK_PFS = 6,
    NL80211_AUTHTYPE_FILS_PK = 7,
    __NL80211_AUTHTYPE_NUM = 8,
    NL80211_AUTHTYPE_MAX = 7,
    NL80211_AUTHTYPE_AUTOMATIC = 8
};
#line 3521 
enum nl80211_mfp {
    NL80211_MFP_NO = 0,
    NL80211_MFP_REQUIRED = 1,
    NL80211_MFP_OPTIONAL = 2
};
#line 4599 
enum nl80211_band {
    NL80211_BAND_2GHZ = 0,
    NL80211_BAND_5GHZ = 1,
    NL80211_BAND_60GHZ = 2,
    NL80211_BAND_6GHZ = 3,
    NUM_NL80211_BANDS = 4
};
#line 4633 
enum nl80211_tx_power_setting {
    NL80211_TX_POWER_AUTOMATIC = 0,
    NL80211_TX_POWER_LIMITED = 1,
    NL80211_TX_POWER_FIXED = 2
};
#line 4914  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/nl80211.h"
struct nl80211_wowlan_tcp_data_seq {
   __u32 start ;
   __u32 offset ;
   __u32 len ;
};
#line 4925  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/nl80211.h"
struct nl80211_wowlan_tcp_data_token {
   __u32 offset ;
   __u32 len ;
   __u8 token_stream[] ;
};
#line 4936  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/nl80211.h"
struct nl80211_wowlan_tcp_data_token_feature {
   __u32 min_len ;
   __u32 max_len ;
   __u32 bufsize ;
};
#line 5237 
enum nl80211_dfs_state {
    NL80211_DFS_USABLE = 0,
    NL80211_DFS_UNAVAILABLE = 1,
    NL80211_DFS_AVAILABLE = 2
};
#line 5847  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/nl80211.h"
struct nl80211_vendor_cmd_info {
   __u32 vendor_id ;
   __u32 subcmd ;
};
#line 5903 
enum nl80211_bss_select_attr {
    __NL80211_BSS_SELECT_ATTR_INVALID = 0,
    NL80211_BSS_SELECT_ATTR_RSSI = 1,
    NL80211_BSS_SELECT_ATTR_BAND_PREF = 2,
    NL80211_BSS_SELECT_ATTR_RSSI_ADJUST = 3,
    __NL80211_BSS_SELECT_ATTR_AFTER_LAST = 4,
    NL80211_BSS_SELECT_ATTR_MAX = 3
};
#line 6138 
enum environment_cap {
    ENVIRON_ANY = 0,
    ENVIRON_INDOOR = 1,
    ENVIRON_OUTDOOR = 2
};
#line 77  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/regulatory.h"
struct regulatory_request {
   struct callback_head callback_head ;
   int wiphy_idx ;
   enum nl80211_reg_initiator initiator ;
   enum nl80211_user_reg_hint_type user_reg_hint_type ;
   char alpha2[3U] ;
   enum nl80211_dfs_regions dfs_region ;
   bool intersect ;
   bool processed ;
   enum environment_cap country_ie_env ;
   struct list_head list ;
};
#line 181  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/regulatory.h"
struct ieee80211_freq_range {
   u32 start_freq_khz ;
   u32 end_freq_khz ;
   u32 max_bandwidth_khz ;
};
#line 187  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/regulatory.h"
struct ieee80211_power_rule {
   u32 max_antenna_gain ;
   u32 max_eirp ;
};
#line 205  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/regulatory.h"
struct ieee80211_wmm_ac {
   u16 cw_min ;
   u16 cw_max ;
   u16 cot ;
   u8 aifsn ;
};
#line 212  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/regulatory.h"
struct ieee80211_wmm_rule {
   struct ieee80211_wmm_ac client[4U] ;
   struct ieee80211_wmm_ac ap[4U] ;
};
#line 217  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/regulatory.h"
struct ieee80211_reg_rule {
   struct ieee80211_freq_range freq_range ;
   struct ieee80211_power_rule power_rule ;
   struct ieee80211_wmm_rule wmm_rule ;
   u32 flags ;
   u32 dfs_cac_ms ;
   bool has_wmm ;
};
#line 226  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/regulatory.h"
struct ieee80211_regdomain {
   struct callback_head callback_head ;
   u32 n_reg_rules ;
   char alpha2[3U] ;
   enum nl80211_dfs_regions dfs_region ;
   struct ieee80211_reg_rule reg_rules[] ;
};
#line 233 
struct wiphy;
#line 147  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct ieee80211_channel {
   enum nl80211_band band ;
   u32 center_freq ;
   u16 hw_value ;
   u32 flags ;
   int max_antenna_gain ;
   int max_power ;
   int max_reg_power ;
   bool beacon_found ;
   u32 orig_flags ;
   int orig_mag ;
   int orig_mpwr ;
   enum nl80211_dfs_state dfs_state ;
   unsigned long dfs_state_entered ;
   unsigned int dfs_cac_ms ;
};
#line 172 
enum ieee80211_bss_type {
    IEEE80211_BSS_TYPE_ESS = 0,
    IEEE80211_BSS_TYPE_PBSS = 1,
    IEEE80211_BSS_TYPE_IBSS = 2,
    IEEE80211_BSS_TYPE_MBSS = 3,
    IEEE80211_BSS_TYPE_ANY = 4
};
#line 243  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct ieee80211_rate {
   u32 flags ;
   u16 bitrate ;
   u16 hw_value ;
   u16 hw_value_short ;
};
#line 256  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct ieee80211_he_obss_pd {
   bool enable ;
   u8 min_offset ;
   u8 max_offset ;
};
#line 274  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct ieee80211_sta_ht_cap {
   u16 cap ;
   bool ht_supported ;
   u8 ampdu_factor ;
   u8 ampdu_density ;
   struct ieee80211_mcs_info mcs ;
};
#line 292  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct ieee80211_sta_vht_cap {
   bool vht_supported ;
   u32 cap ;
   struct ieee80211_vht_mcs_info vht_mcs ;
};
#line 311  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct ieee80211_sta_he_cap {
   bool has_he ;
   struct ieee80211_he_cap_elem he_cap_elem ;
   struct ieee80211_he_mcs_nss_supp he_mcs_nss_supp ;
   u8 ppe_thres[25U] ;
};
#line 328  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct ieee80211_sband_iftype_data {
   u16 types_mask ;
   struct ieee80211_sta_he_cap he_cap ;
};
#line 332 
enum ieee80211_edmg_bw_config {
    IEEE80211_EDMG_BW_CONFIG_4 = 4,
    IEEE80211_EDMG_BW_CONFIG_5 = 5,
    IEEE80211_EDMG_BW_CONFIG_6 = 6,
    IEEE80211_EDMG_BW_CONFIG_7 = 7,
    IEEE80211_EDMG_BW_CONFIG_8 = 8,
    IEEE80211_EDMG_BW_CONFIG_9 = 9,
    IEEE80211_EDMG_BW_CONFIG_10 = 10,
    IEEE80211_EDMG_BW_CONFIG_11 = 11,
    IEEE80211_EDMG_BW_CONFIG_12 = 12,
    IEEE80211_EDMG_BW_CONFIG_13 = 13,
    IEEE80211_EDMG_BW_CONFIG_14 = 14,
    IEEE80211_EDMG_BW_CONFIG_15 = 15
};
#line 382  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct ieee80211_edmg {
   u8 channels ;
   enum ieee80211_edmg_bw_config bw_config ;
};
#line 410  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct ieee80211_supported_band {
   struct ieee80211_channel *channels ;
   struct ieee80211_rate *bitrates ;
   enum nl80211_band band ;
   int n_channels ;
   int n_bitrates ;
   struct ieee80211_sta_ht_cap ht_cap ;
   struct ieee80211_sta_vht_cap vht_cap ;
   struct ieee80211_edmg edmg_cap ;
   u16 n_iftype_data ;
   struct ieee80211_sband_iftype_data *iftype_data ;
};
#line 571  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct key_params {
   u8 *key ;
   u8 *seq ;
   int key_len ;
   int seq_len ;
   u16 vlan_id ;
   u32 cipher ;
   enum nl80211_key_mode mode ;
};
#line 593  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_chan_def {
   struct ieee80211_channel *chan ;
   enum nl80211_chan_width width ;
   u32 center_freq1 ;
   u32 center_freq2 ;
   struct ieee80211_edmg edmg ;
};
#line 853  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_crypto_settings {
   u32 wpa_versions ;
   u32 cipher_group ;
   int n_ciphers_pairwise ;
   u32 ciphers_pairwise[5U] ;
   int n_akm_suites ;
   u32 akm_suites[2U] ;
   bool control_port ;
   __be16 control_port_ethertype ;
   bool control_port_no_encrypt ;
   bool control_port_over_nl80211 ;
   struct key_params *wep_keys ;
   int wep_tx_key ;
   u8 *psk ;
   u8 *sae_pwd ;
   u8 sae_pwd_len ;
};
#line 917  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct mac_address {
   u8 addr[6U] ;
};
#line 1885  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_ssid {
   u8 ssid[32U] ;
   u8 ssid_len ;
};
#line 1991  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_match_set {
   struct cfg80211_ssid ssid ;
   u8 bssid[6U] ;
   s32 rssi_thold ;
   s32 per_band_rssi_thold[4U] ;
};
#line 2007  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_sched_scan_plan {
   u32 interval ;
   u32 iterations ;
};
#line 2018  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_bss_select_adjust {
   enum nl80211_band band ;
   s8 delta ;
};
#line 2073  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_sched_scan_request {
   u64 reqid ;
   struct cfg80211_ssid *ssids ;
   int n_ssids ;
   u32 n_channels ;
   enum nl80211_bss_scan_width scan_width ;
   u8 *ie ;
   size_t ie_len ;
   u32 flags ;
   struct cfg80211_match_set *match_sets ;
   int n_match_sets ;
   s32 min_rssi_thold ;
   u32 delay ;
   struct cfg80211_sched_scan_plan *scan_plans ;
   int n_scan_plans ;
   u8 mac_addr[6U] ;
   u8 mac_addr_mask[6U] ;
   bool relative_rssi_set ;
   s8 relative_rssi ;
   struct cfg80211_bss_select_adjust rssi_adjust ;
   struct wiphy *wiphy ;
   struct net_device *dev ;
   unsigned long scan_start ;
   bool report_results ;
   struct callback_head callback_head ;
   u32 owner_nlportid ;
   bool nl_owner_dead ;
   struct list_head list ;
   struct ieee80211_channel *channels[0U] ;
};
#line 2109 
enum cfg80211_signal_type {
    CFG80211_SIGNAL_TYPE_NONE = 0,
    CFG80211_SIGNAL_TYPE_MBM = 1,
    CFG80211_SIGNAL_TYPE_UNSPEC = 2
};
#line 2432  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_ibss_params {
   u8 *ssid ;
   u8 *bssid ;
   struct cfg80211_chan_def chandef ;
   u8 *ie ;
   u8 ssid_len ;
   u8 ie_len ;
   u16 beacon_interval ;
   u32 basic_rates ;
   bool channel_fixed ;
   bool privacy ;
   bool control_port ;
   bool control_port_over_nl80211 ;
   bool userspace_handles_dfs ;
   int mcast_rate[4U] ;
   struct ieee80211_ht_cap ht_capa ;
   struct ieee80211_ht_cap ht_capa_mask ;
   struct key_params *wep_keys ;
   int wep_tx_key ;
};
#line 2460  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
union __anonunion_param_741 {
   enum nl80211_band band_pref ;
   struct cfg80211_bss_select_adjust adjust ;
};
#line 2460  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_bss_selection {
   enum nl80211_bss_select_attr behaviour ;
   union __anonunion_param_741 param ;
};
#line 2531  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_connect_params {
   struct ieee80211_channel *channel ;
   struct ieee80211_channel *channel_hint ;
   u8 *bssid ;
   u8 *bssid_hint ;
   u8 *ssid ;
   size_t ssid_len ;
   enum nl80211_auth_type auth_type ;
   u8 *ie ;
   size_t ie_len ;
   bool privacy ;
   enum nl80211_mfp mfp ;
   struct cfg80211_crypto_settings crypto ;
   u8 *key ;
   u8 key_len ;
   u8 key_idx ;
   u32 flags ;
   int bg_scan_period ;
   struct ieee80211_ht_cap ht_capa ;
   struct ieee80211_ht_cap ht_capa_mask ;
   struct ieee80211_vht_cap vht_capa ;
   struct ieee80211_vht_cap vht_capa_mask ;
   bool pbss ;
   struct cfg80211_bss_selection bss_select ;
   u8 *prev_bssid ;
   u8 *fils_erp_username ;
   size_t fils_erp_username_len ;
   u8 *fils_erp_realm ;
   size_t fils_erp_realm_len ;
   u16 fils_erp_next_seq_num ;
   u8 *fils_erp_rrk ;
   size_t fils_erp_rrk_len ;
   bool want_1x ;
   struct ieee80211_edmg edmg ;
};
#line 2656  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_pkt_pattern {
   u8 *mask ;
   u8 *pattern ;
   int pattern_len ;
   int pkt_offset ;
};
#line 2681  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_wowlan_tcp {
   struct socket *sock ;
   __be32 src ;
   __be32 dst ;
   u16 src_port ;
   u16 dst_port ;
   u8 dst_mac[6U] ;
   int payload_len ;
   u8 *payload ;
   struct nl80211_wowlan_tcp_data_seq payload_seq ;
   u32 data_interval ;
   u32 wake_len ;
   u8 *wake_data ;
   u8 *wake_mask ;
   u32 tokens_size ;
   struct nl80211_wowlan_tcp_data_token payload_tok ;
};
#line 2715  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_wowlan {
   bool any ;
   bool disconnect ;
   bool magic_pkt ;
   bool gtk_rekey_failure ;
   bool eap_identity_req ;
   bool four_way_handshake ;
   bool rfkill_release ;
   struct cfg80211_pkt_pattern *patterns ;
   struct cfg80211_wowlan_tcp *tcp ;
   int n_patterns ;
   struct cfg80211_sched_scan_request *nd_config ;
};
#line 4043  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct ieee80211_iface_limit {
   u16 max ;
   u16 types ;
};
#line 4107  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct ieee80211_iface_combination {
   struct ieee80211_iface_limit *limits ;
   u32 num_different_channels ;
   u16 max_interfaces ;
   u8 n_limits ;
   bool beacon_int_infra_match ;
   u8 radar_detect_widths ;
   u8 radar_detect_regions ;
   u32 beacon_int_min_gcd ;
};
#line 4165  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct ieee80211_txrx_stypes {
   u16 tx ;
   u16 rx ;
};
#line 4198  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct wiphy_wowlan_tcp_support {
   struct nl80211_wowlan_tcp_data_token_feature *tok ;
   u32 data_payload_max ;
   u32 data_interval_max ;
   u32 wake_payload_max ;
   bool seq ;
};
#line 4221  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct wiphy_wowlan_support {
   u32 flags ;
   int n_patterns ;
   int pattern_max_len ;
   int pattern_min_len ;
   int max_pkt_offset ;
   int max_nd_match_sets ;
   struct wiphy_wowlan_tcp_support *tcp ;
};
#line 4241  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct wiphy_coalesce_support {
   int n_rules ;
   int max_delay ;
   int n_patterns ;
   int pattern_max_len ;
   int pattern_min_len ;
   int max_pkt_offset ;
};
#line 4312 
struct nla_policy;
#line 4312  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct wiphy_vendor_command {
   struct nl80211_vendor_cmd_info info ;
   u32 flags ;
   int (*doit)(struct wiphy *, struct wireless_dev *, void *, int ) ;
   int (*dumpit)(struct wiphy *, struct wireless_dev *, struct sk_buff *, void *, int , unsigned long *) ;
   struct nla_policy *policy ;
   unsigned int maxattr ;
};
#line 4335  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct wiphy_iftype_ext_capab {
   enum nl80211_iftype iftype ;
   u8 *extended_capabilities ;
   u8 *extended_capabilities_mask ;
   u8 extended_capabilities_len ;
};
#line 4360  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct __anonstruct_ftm_743 {
   u32 preambles ;
   u32 bandwidths ;
   s8 max_bursts_exponent ;
   u8 max_ftms_per_burst ;
   u8 supported : 1 ;
   u8 asap : 1 ;
   u8 non_asap : 1 ;
   u8 request_lci : 1 ;
   u8 request_civicloc : 1 ;
};
#line 4360  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_pmsr_capabilities {
   unsigned int max_peers ;
   u8 report_ap_tsf : 1 ;
   u8 randomize_mac_addr : 1 ;
   struct __anonstruct_ftm_743 ftm ;
};
#line 4552  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct wiphy {
   u8 perm_addr[6U] ;
   u8 addr_mask[6U] ;
   struct mac_address *addresses ;
   struct ieee80211_txrx_stypes *mgmt_stypes ;
   struct ieee80211_iface_combination *iface_combinations ;
   int n_iface_combinations ;
   u16 software_iftypes ;
   u16 n_addresses ;
   u16 interface_modes ;
   u16 max_acl_mac_addrs ;
   u32 flags ;
   u32 regulatory_flags ;
   u32 features ;
   u8 ext_features[6U] ;
   u32 ap_sme_capa ;
   enum cfg80211_signal_type signal_type ;
   int bss_priv_size ;
   u8 max_scan_ssids ;
   u8 max_sched_scan_reqs ;
   u8 max_sched_scan_ssids ;
   u8 max_match_sets ;
   u16 max_scan_ie_len ;
   u16 max_sched_scan_ie_len ;
   u32 max_sched_scan_plans ;
   u32 max_sched_scan_plan_interval ;
   u32 max_sched_scan_plan_iterations ;
   int n_cipher_suites ;
   u32 *cipher_suites ;
   int n_akm_suites ;
   u32 *akm_suites ;
   u8 retry_short ;
   u8 retry_long ;
   u32 frag_threshold ;
   u32 rts_threshold ;
   u8 coverage_class ;
   char fw_version[32U] ;
   u32 hw_version ;
   struct wiphy_wowlan_support *wowlan ;
   struct cfg80211_wowlan *wowlan_config ;
   u16 max_remain_on_channel_duration ;
   u8 max_num_pmkids ;
   u32 available_antennas_tx ;
   u32 available_antennas_rx ;
   u32 probe_resp_offload ;
   u8 *extended_capabilities ;
   u8 *extended_capabilities_mask ;
   u8 extended_capabilities_len ;
   struct wiphy_iftype_ext_capab *iftype_ext_capab ;
   unsigned int num_iftype_ext_capab ;
   void *privid ;
   struct ieee80211_supported_band *bands[4U] ;
   void (*reg_notifier)(struct wiphy *, struct regulatory_request *) ;
   struct ieee80211_regdomain *regd ;
   struct device dev ;
   bool registered ;
   struct dentry *debugfsdir ;
   struct ieee80211_ht_cap *ht_capa_mod_mask ;
   struct ieee80211_vht_cap *vht_capa_mod_mask ;
   struct list_head wdev_list ;
   possible_net_t _net ;
   struct iw_handler_def *wext ;
   struct wiphy_coalesce_support *coalesce ;
   struct wiphy_vendor_command *vendor_commands ;
   struct nl80211_vendor_cmd_info *vendor_events ;
   int n_vendor_commands ;
   int n_vendor_events ;
   u16 max_ap_assoc_sta ;
   u8 max_num_csa_counters ;
   u8 max_adj_channel_rssi_comp ;
   u32 bss_select_support ;
   u8 nan_supported_bands ;
   u32 txq_limit ;
   u32 txq_memory_limit ;
   u32 txq_quantum ;
   u8 support_mbssid : 1 ;
   u8 support_only_he_mbssid : 1 ;
   struct cfg80211_pmsr_capabilities *pmsr_capa ;
   char priv[0U] ;
};
#line 4826 
struct cfg80211_conn;
#line 4827 
struct cfg80211_internal_bss;
#line 4828 
struct cfg80211_cached_keys;
#line 4829 
struct cfg80211_cqm_config;
#line 4912  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct __anonstruct_wext_744 {
   struct cfg80211_ibss_params ibss ;
   struct cfg80211_connect_params connect ;
   struct cfg80211_cached_keys *keys ;
   u8 *ie ;
   size_t ie_len ;
   u8 bssid[6U] ;
   u8 prev_bssid[6U] ;
   u8 ssid[32U] ;
   s8 default_key ;
   s8 default_mgmt_key ;
   bool prev_bssid_valid ;
};
#line 4912  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct wireless_dev {
   struct wiphy *wiphy ;
   enum nl80211_iftype iftype ;
   struct list_head list ;
   struct net_device *netdev ;
   u32 identifier ;
   struct list_head mgmt_registrations ;
   spinlock_t mgmt_registrations_lock ;
   struct mutex mtx ;
   bool use_4addr ;
   bool is_running ;
   u8 address[6U] ;
   u8 ssid[32U] ;
   u8 ssid_len ;
   u8 mesh_id_len ;
   u8 mesh_id_up_len ;
   struct cfg80211_conn *conn ;
   struct cfg80211_cached_keys *connect_keys ;
   enum ieee80211_bss_type conn_bss_type ;
   u32 conn_owner_nlportid ;
   struct work_struct disconnect_wk ;
   u8 disconnect_bssid[6U] ;
   struct list_head event_list ;
   spinlock_t event_lock ;
   struct cfg80211_internal_bss *current_bss ;
   struct cfg80211_chan_def preset_chandef ;
   struct cfg80211_chan_def chandef ;
   bool ibss_fixed ;
   bool ibss_dfs_possible ;
   bool ps ;
   int ps_timeout ;
   int beacon_interval ;
   u32 ap_unexpected_nlportid ;
   u32 owner_nlportid ;
   bool nl_owner_dead ;
   bool cac_started ;
   unsigned long cac_start_time ;
   unsigned int cac_time_ms ;
   struct __anonstruct_wext_744 wext ;
   struct cfg80211_cqm_config *cqm_config ;
   struct list_head pmsr_list ;
   spinlock_t pmsr_lock ;
   struct work_struct pmsr_free_wk ;
};
#line 567  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/rtnetlink.h"
struct tcmsg {
   unsigned char tcm_family ;
   unsigned char tcm__pad1 ;
   unsigned short tcm__pad2 ;
   int tcm_ifindex ;
   __u32 tcm_handle ;
   __u32 tcm_parent ;
   __u32 tcm_info ;
};
#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/gen_stats.h"
struct gnet_stats_queue {
   __u32 qlen ;
   __u32 backlog ;
   __u32 drops ;
   __u32 requeues ;
   __u32 overlimits ;
};
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/gen_stats.h"
struct gnet_stats_basic_packed {
   __u64 bytes ;
   __u64 packets ;
};
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/gen_stats.h"
struct gnet_stats_basic_cpu {
   struct gnet_stats_basic_packed bstats ;
   struct u64_stats_sync syncp ;
} __attribute__((__aligned__(16)));
#line 20 
struct net_rate_estimator;
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/gen_stats.h"
struct gnet_dump {
   spinlock_t *lock ;
   struct sk_buff *skb ;
   struct nlattr *tail ;
   int compat_tc_stats ;
   int compat_xstats ;
   int padattr ;
   void *xstats ;
   int xstats_len ;
   struct tc_stats tc_stats ;
};
#line 291  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netlink.h"
struct __anonstruct_752 {
   s16 min ;
   s16 max ;
};
#line 291  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netlink.h"
union __anonunion_751 {
   void *validation_data ;
   struct __anonstruct_752 __anonCompField___anonunion_751_163 ;
   int (*validate)(struct nlattr *, struct netlink_ext_ack *) ;
   u16 strict_start_type ;
};
#line 291  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netlink.h"
struct nla_policy {
   u8 type ;
   u8 validation_type ;
   u16 len ;
   union __anonunion_751 __anonCompField_nla_policy_164 ;
};
#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/rtnetlink.h"
struct rtnl_link_ops {
   struct list_head list ;
   char *kind ;
   size_t priv_size ;
   void (*setup)(struct net_device *) ;
   unsigned int maxtype ;
   struct nla_policy *policy ;
   int (*validate)(struct nlattr **, struct nlattr **, struct netlink_ext_ack *) ;
   int (*newlink)(struct net *, struct net_device *, struct nlattr **, struct nlattr **, struct netlink_ext_ack *) ;
   int (*changelink)(struct net_device *, struct nlattr **, struct nlattr **, struct netlink_ext_ack *) ;
   void (*dellink)(struct net_device *, struct list_head *) ;
   size_t (*get_size)(struct net_device *) ;
   int (*fill_info)(struct sk_buff *, struct net_device *) ;
   size_t (*get_xstats_size)(struct net_device *) ;
   int (*fill_xstats)(struct sk_buff *, struct net_device *) ;
   unsigned int (*get_num_tx_queues)(void) ;
   unsigned int (*get_num_rx_queues)(void) ;
   unsigned int slave_maxtype ;
   struct nla_policy *slave_policy ;
   int (*slave_changelink)(struct net_device *, struct net_device *, struct nlattr **, struct nlattr **, struct netlink_ext_ack *) ;
   size_t (*get_slave_size)(struct net_device *, struct net_device *) ;
   int (*fill_slave_info)(struct sk_buff *, struct net_device *, struct net_device *) ;
   struct net *(*get_link_net)(struct net_device *) ;
   size_t (*get_linkxstats_size)(struct net_device *, int ) ;
   int (*fill_linkxstats)(struct sk_buff *, struct net_device *, int *, int ) ;
};
#line 173  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jhash.h"
struct rhash_lock_head {
   };
#line 76  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable.h"
struct bucket_table {
   unsigned int size ;
   unsigned int nest ;
   u32 hash_rnd ;
   struct list_head walkers ;
   struct callback_head rcu ;
   struct bucket_table *future_tbl ;
   struct lockdep_map dep_map ;
   struct rhash_lock_head *buckets[] ;
};
#line 281  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow_offload.h"
struct flow_block {
   struct list_head cb_list ;
};
#line 298  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow_offload.h"
typedef int flow_setup_cb_t(enum tc_setup_type , void *, void *);
#line 412 
struct Qdisc_ops;
#line 413 
struct qdisc_walker;
#line 414 
struct tcf_walker;
#line 41  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct qdisc_size_table {
   struct callback_head rcu ;
   struct list_head list ;
   struct tc_sizespec szopts ;
   int refcnt ;
   u16 data[] ;
};
#line 50  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct qdisc_skb_head {
   struct sk_buff *head ;
   struct sk_buff *tail ;
   __u32 qlen ;
   spinlock_t lock ;
};
#line 57  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct Qdisc {
   int (*enqueue)(struct sk_buff *, struct Qdisc *, struct sk_buff **) ;
   struct sk_buff *(*dequeue)(struct Qdisc *) ;
   unsigned int flags ;
   u32 limit ;
   struct Qdisc_ops *ops ;
   struct qdisc_size_table *stab ;
   struct hlist_node hash ;
   u32 handle ;
   u32 parent ;
   struct netdev_queue *dev_queue ;
   struct net_rate_estimator *rate_est ;
   struct gnet_stats_basic_cpu *cpu_bstats ;
   struct gnet_stats_queue *cpu_qstats ;
   int padded ;
   refcount_t refcnt ;
   struct sk_buff_head gso_skb ;
   struct qdisc_skb_head q ;
   struct gnet_stats_basic_packed bstats ;
   seqcount_t running ;
   struct gnet_stats_queue qstats ;
   unsigned long state ;
   struct Qdisc *next_sched ;
   struct sk_buff_head skb_bad_txq ;
   spinlock_t busylock ;
   spinlock_t seqlock ;
   bool empty ;
   struct callback_head rcu ;
};
#line 195 
struct tcf_block;
#line 195  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct Qdisc_class_ops {
   unsigned int flags ;
   struct netdev_queue *(*select_queue)(struct Qdisc *, struct tcmsg *) ;
   int (*graft)(struct Qdisc *, unsigned long , struct Qdisc *, struct Qdisc **, struct netlink_ext_ack *) ;
   struct Qdisc *(*leaf)(struct Qdisc *, unsigned long ) ;
   void (*qlen_notify)(struct Qdisc *, unsigned long ) ;
   unsigned long (*find)(struct Qdisc *, u32 ) ;
   int (*change)(struct Qdisc *, u32 , u32 , struct nlattr **, unsigned long *, struct netlink_ext_ack *) ;
   int (*delete)(struct Qdisc *, unsigned long ) ;
   void (*walk)(struct Qdisc *, struct qdisc_walker *) ;
   struct tcf_block *(*tcf_block)(struct Qdisc *, unsigned long , struct netlink_ext_ack *) ;
   unsigned long (*bind_tcf)(struct Qdisc *, unsigned long , u32 ) ;
   void (*unbind_tcf)(struct Qdisc *, unsigned long ) ;
   int (*dump)(struct Qdisc *, unsigned long , struct sk_buff *, struct tcmsg *) ;
   int (*dump_stats)(struct Qdisc *, unsigned long , struct gnet_dump *) ;
};
#line 235  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct Qdisc_ops {
   struct Qdisc_ops *next ;
   struct Qdisc_class_ops *cl_ops ;
   char id[16U] ;
   int priv_size ;
   unsigned int static_flags ;
   int (*enqueue)(struct sk_buff *, struct Qdisc *, struct sk_buff **) ;
   struct sk_buff *(*dequeue)(struct Qdisc *) ;
   struct sk_buff *(*peek)(struct Qdisc *) ;
   int (*init)(struct Qdisc *, struct nlattr *, struct netlink_ext_ack *) ;
   void (*reset)(struct Qdisc *) ;
   void (*destroy)(struct Qdisc *) ;
   int (*change)(struct Qdisc *, struct nlattr *, struct netlink_ext_ack *) ;
   void (*attach)(struct Qdisc *) ;
   int (*change_tx_queue_len)(struct Qdisc *, unsigned int ) ;
   int (*dump)(struct Qdisc *, struct sk_buff *) ;
   int (*dump_stats)(struct Qdisc *, struct gnet_dump *) ;
   void (*ingress_block_set)(struct Qdisc *, u32 ) ;
   void (*egress_block_set)(struct Qdisc *, u32 ) ;
   u32 (*ingress_block_get)(struct Qdisc *) ;
   u32 (*egress_block_get)(struct Qdisc *) ;
   struct module *owner ;
};
#line 272  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct __anonstruct_826 {
   unsigned long class ;
   u32 classid ;
};
#line 272 
struct tcf_proto;
#line 272  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct __anonstruct_827 {
   bool ingress ;
   struct gnet_stats_queue *qstats ;
};
#line 272  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
union __anonunion_825 {
   struct __anonstruct_826 __anonCompField___anonunion_825_166 ;
   struct tcf_proto *goto_tp ;
   struct __anonstruct_827 __anonCompField___anonunion_825_167 ;
};
#line 272  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct tcf_result {
   union __anonunion_825 __anonCompField_tcf_result_168 ;
};
#line 287 
struct tcf_chain;
#line 290  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct tcf_proto_ops {
   struct list_head head ;
   char kind[16U] ;
   int (*classify)(struct sk_buff *, struct tcf_proto *, struct tcf_result *) ;
   int (*init)(struct tcf_proto *) ;
   void (*destroy)(struct tcf_proto *, bool , struct netlink_ext_ack *) ;
   void *(*get)(struct tcf_proto *, u32 ) ;
   void (*put)(struct tcf_proto *, void *) ;
   int (*change)(struct net *, struct sk_buff *, struct tcf_proto *, unsigned long , u32 , struct nlattr **, void **, bool , bool , struct netlink_ext_ack *) ;
   int (*delete)(struct tcf_proto *, void *, bool *, bool , struct netlink_ext_ack *) ;
   bool (*delete_empty)(struct tcf_proto *) ;
   void (*walk)(struct tcf_proto *, struct tcf_walker *, bool ) ;
   int (*reoffload)(struct tcf_proto *, bool , flow_setup_cb_t *, void *, struct netlink_ext_ack *) ;
   void (*hw_add)(struct tcf_proto *, void *) ;
   void (*hw_del)(struct tcf_proto *, void *) ;
   void (*bind_class)(void *, u32 , unsigned long ) ;
   void *(*tmplt_create)(struct net *, struct tcf_chain *, struct nlattr **, struct netlink_ext_ack *) ;
   void (*tmplt_destroy)(void *) ;
   int (*dump)(struct net *, struct tcf_proto *, void *, struct sk_buff *, struct tcmsg *, bool ) ;
   int (*tmplt_dump)(struct sk_buff *, struct net *, void *) ;
   struct module *owner ;
   int flags ;
};
#line 348  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct tcf_proto {
   struct tcf_proto *next ;
   void *root ;
   int (*classify)(struct sk_buff *, struct tcf_proto *, struct tcf_result *) ;
   __be16 protocol ;
   u32 prio ;
   void *data ;
   struct tcf_proto_ops *ops ;
   struct tcf_chain *chain ;
   spinlock_t lock ;
   bool deleting ;
   refcount_t refcnt ;
   struct callback_head rcu ;
   struct hlist_node destroy_ht_node ;
};
#line 386  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct tcf_chain {
   struct mutex filter_chain_lock ;
   struct tcf_proto *filter_chain ;
   struct list_head list ;
   struct tcf_block *block ;
   u32 index ;
   unsigned int refcnt ;
   unsigned int action_refcnt ;
   bool explicitly_created ;
   bool flushing ;
   struct tcf_proto_ops *tmplt_ops ;
   void *tmplt_priv ;
   struct callback_head rcu ;
};
#line 402  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct __anonstruct_chain0_829 {
   struct tcf_chain *chain ;
   struct list_head filter_chain_list ;
};
#line 402  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct tcf_block {
   struct mutex lock ;
   struct list_head chain_list ;
   u32 index ;
   refcount_t refcnt ;
   struct net *net ;
   struct Qdisc *q ;
   struct rw_semaphore cb_lock ;
   struct flow_block flow_block ;
   struct list_head owner_list ;
   bool keep_dst ;
   atomic_t offloadcnt ;
   unsigned int nooffloaddevcnt ;
   unsigned int lockeddevcnt ;
   struct __anonstruct_chain0_829 chain0 ;
   struct callback_head rcu ;
   struct hlist_head proto_destroy_ht[128U] ;
   struct mutex proto_destroy_lock ;
};
#line 1269  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct mini_Qdisc {
   struct tcf_proto *filter_list ;
   struct gnet_stats_basic_cpu *cpu_bstats ;
   struct gnet_stats_queue *cpu_qstats ;
   struct callback_head rcu ;
};
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/pkt_sched.h"
struct qdisc_walker {
   int stop ;
   int skip ;
   int count ;
   int (*fn)(struct Qdisc *, unsigned long , struct qdisc_walker *) ;
};
#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/page_counter.h"
struct page_counter {
   atomic_long_t usage ;
   unsigned long min ;
   unsigned long low ;
   unsigned long max ;
   struct page_counter *parent ;
   unsigned long emin ;
   atomic_long_t min_usage ;
   atomic_long_t children_min_usage ;
   unsigned long elow ;
   atomic_long_t low_usage ;
   atomic_long_t children_low_usage ;
   unsigned long watermark ;
   unsigned long failcnt ;
};
#line 66 
struct eventfd_ctx;
#line 13  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/vmpressure.h"
struct vmpressure {
   unsigned long scanned ;
   unsigned long reclaimed ;
   unsigned long tree_scanned ;
   unsigned long tree_reclaimed ;
   spinlock_t sr_lock ;
   struct list_head events ;
   struct mutex events_lock ;
   struct work_struct work ;
};
#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/flex_proportions.h"
struct fprop_global {
   struct percpu_counter events ;
   unsigned int period ;
   seqcount_t sequence ;
};
#line 76  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/flex_proportions.h"
struct fprop_local_percpu {
   struct percpu_counter events ;
   unsigned int period ;
   raw_spinlock_t lock ;
};
#line 116  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/flex_proportions.h"
typedef int congested_fn(void *, int );
#line 45  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backing-dev-defs.h"
enum wb_reason {
    WB_REASON_BACKGROUND = 0,
    WB_REASON_VMSCAN = 1,
    WB_REASON_SYNC = 2,
    WB_REASON_PERIODIC = 3,
    WB_REASON_LAPTOP_TIMER = 4,
    WB_REASON_FREE_MORE_MEM = 5,
    WB_REASON_FS_FREE_SPACE = 6,
    WB_REASON_FORKER_THREAD = 7,
    WB_REASON_FOREIGN_FLUSH = 8,
    WB_REASON_MAX = 9
};
#line 71  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backing-dev-defs.h"
struct wb_completion {
   atomic_t cnt ;
   wait_queue_head_t *waitq ;
};
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backing-dev-defs.h"
struct bdi_writeback_congested {
   unsigned long state ;
   refcount_t refcnt ;
   struct backing_dev_info *__bdi ;
   int blkcg_id ;
   struct rb_node rb_node ;
};
#line 130  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backing-dev-defs.h"
union __anonunion_842 {
   struct work_struct release_work ;
   struct callback_head rcu ;
};
#line 130  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backing-dev-defs.h"
struct bdi_writeback {
   struct backing_dev_info *bdi ;
   unsigned long state ;
   unsigned long last_old_flush ;
   struct list_head b_dirty ;
   struct list_head b_io ;
   struct list_head b_more_io ;
   struct list_head b_dirty_time ;
   spinlock_t list_lock ;
   struct percpu_counter stat[4U] ;
   struct bdi_writeback_congested *congested ;
   unsigned long bw_time_stamp ;
   unsigned long dirtied_stamp ;
   unsigned long written_stamp ;
   unsigned long write_bandwidth ;
   unsigned long avg_write_bandwidth ;
   unsigned long dirty_ratelimit ;
   unsigned long balanced_dirty_ratelimit ;
   struct fprop_local_percpu completions ;
   int dirty_exceeded ;
   enum wb_reason start_all_reason ;
   spinlock_t work_lock ;
   struct list_head work_list ;
   struct delayed_work dwork ;
   unsigned long dirty_sleep ;
   struct list_head bdi_node ;
   struct percpu_ref refcnt ;
   struct fprop_local_percpu memcg_completions ;
   struct cgroup_subsys_state *memcg_css ;
   struct cgroup_subsys_state *blkcg_css ;
   struct list_head memcg_node ;
   struct list_head blkcg_node ;
   union __anonunion_842 __anonCompField_bdi_writeback_170 ;
};
#line 188  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backing-dev-defs.h"
struct backing_dev_info {
   u64 id ;
   struct rb_node rb_node ;
   struct list_head bdi_list ;
   unsigned long ra_pages ;
   unsigned long io_pages ;
   congested_fn *congested_fn ;
   void *congested_data ;
   char *name ;
   struct kref refcnt ;
   unsigned int capabilities ;
   unsigned int min_ratio ;
   unsigned int max_ratio ;
   unsigned int max_prop_frac ;
   atomic_long_t tot_write_bandwidth ;
   struct bdi_writeback wb ;
   struct list_head wb_list ;
   struct xarray cgwb_tree ;
   struct rb_root cgwb_congested_tree ;
   struct mutex cgwb_release_mutex ;
   struct rw_semaphore wb_switch_rwsem ;
   wait_queue_head_t wb_waitq ;
   struct device *dev ;
   struct device *owner ;
   struct timer_list laptop_mode_wb_timer ;
   struct dentry *debug_dir ;
};
#line 306 
struct bio_set;
#line 307 
struct bio_integrity_payload;
#line 308  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backing-dev-defs.h"
typedef void bio_end_io_t(struct bio *);
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk_types.h"
typedef u8 blk_status_t;
#line 112  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk_types.h"
struct bio_issue {
   u64 value ;
};
#line 144 
struct blkcg_gq;
#line 144  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk_types.h"
union __anonunion_843 {
   struct bio_integrity_payload *bi_integrity ;
};
#line 144  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk_types.h"
struct bio {
   struct bio *bi_next ;
   struct gendisk *bi_disk ;
   unsigned int bi_opf ;
   unsigned short bi_flags ;
   unsigned short bi_ioprio ;
   unsigned short bi_write_hint ;
   blk_status_t bi_status ;
   u8 bi_partno ;
   atomic_t __bi_remaining ;
   struct bvec_iter bi_iter ;
   bio_end_io_t *bi_end_io ;
   void *bi_private ;
   struct blkcg_gq *bi_blkg ;
   struct bio_issue bi_issue ;
   u64 bi_iocost_cost ;
   union __anonunion_843 __anonCompField_bio_171 ;
   unsigned short bi_vcnt ;
   unsigned short bi_max_vecs ;
   atomic_t __bi_cnt ;
   struct bio_vec *bi_io_vec ;
   struct bio_set *bi_pool ;
   struct bio_vec bi_inline_vecs[0U] ;
};
#line 452  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk_types.h"
typedef unsigned int blk_qc_t;
#line 479  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk_types.h"
struct blk_rq_stat {
   u64 mean ;
   u64 min ;
   u64 max ;
   u32 nr_samples ;
   u64 batch ;
};
#line 86  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/genhd.h"
struct disk_stats {
   u64 nsecs[4U] ;
   unsigned long sectors[4U] ;
   unsigned long ios[4U] ;
   unsigned long merges[4U] ;
   unsigned long io_ticks ;
   unsigned long time_in_queue ;
   local_t in_flight[2U] ;
};
#line 103  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/genhd.h"
struct partition_meta_info {
   char uuid[37U] ;
   u8 volname[64U] ;
};
#line 108  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/genhd.h"
struct hd_struct {
   sector_t start_sect ;
   sector_t nr_sects ;
   seqcount_t nr_sects_seq ;
   sector_t alignment_offset ;
   unsigned int discard_alignment ;
   struct device __dev ;
   struct kobject *holder_dir ;
   int policy ;
   int partno ;
   struct partition_meta_info *info ;
   int make_it_fail ;
   unsigned long stamp ;
   struct disk_stats *dkstats ;
   struct percpu_ref ref ;
   struct rcu_work rcu_work ;
};
#line 160  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/genhd.h"
struct disk_part_tbl {
   struct callback_head callback_head ;
   int len ;
   struct hd_struct *last_lookup ;
   struct hd_struct *part[] ;
};
#line 166 
struct disk_events;
#line 167 
struct badblocks;
#line 172 
struct blk_integrity_profile;
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/genhd.h"
struct blk_integrity {
   struct blk_integrity_profile *profile ;
   unsigned char flags ;
   unsigned char tuple_size ;
   unsigned char interval_exp ;
   unsigned char tag_size ;
};
#line 182 
struct timer_rand_state;
#line 182  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/genhd.h"
struct gendisk {
   int major ;
   int first_minor ;
   int minors ;
   char disk_name[32U] ;
   char *(*devnode)(struct gendisk *, umode_t *) ;
   unsigned short events ;
   unsigned short event_flags ;
   struct disk_part_tbl *part_tbl ;
   struct hd_struct part0 ;
   struct block_device_operations *fops ;
   struct request_queue *queue ;
   void *private_data ;
   int flags ;
   struct rw_semaphore lookup_sem ;
   struct kobject *slave_dir ;
   struct timer_rand_state *random ;
   atomic_t sync_io ;
   struct disk_events *ev ;
   struct kobject integrity_kobj ;
   int node_id ;
   struct badblocks *bb ;
   struct lockdep_map lockdep_map ;
};
#line 637  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pagemap.h"
typedef void *mempool_alloc_t(gfp_t , void *);
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mempool.h"
typedef void mempool_free_t(void *, void *);
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mempool.h"
struct mempool_s {
   spinlock_t lock ;
   int min_nr ;
   int curr_nr ;
   void **elements ;
   void *pool_data ;
   mempool_alloc_t *alloc ;
   mempool_free_t *free ;
   wait_queue_head_t wait ;
};
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mempool.h"
typedef struct mempool_s mempool_t;
#line 307  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bio.h"
struct bio_integrity_payload {
   struct bio *bip_bio ;
   struct bvec_iter bip_iter ;
   unsigned short bip_slab ;
   unsigned short bip_vcnt ;
   unsigned short bip_max_vcnt ;
   unsigned short bip_flags ;
   struct bvec_iter bio_iter ;
   struct work_struct bip_work ;
   struct bio_vec *bip_vec ;
   struct bio_vec bip_inline_vecs[0U] ;
};
#line 575  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bio.h"
struct bio_list {
   struct bio *head ;
   struct bio *tail ;
};
#line 703  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bio.h"
struct bio_set {
   struct kmem_cache *bio_slab ;
   unsigned int front_pad ;
   mempool_t bio_pool ;
   mempool_t bvec_pool ;
   mempool_t bio_integrity_pool ;
   mempool_t bvec_integrity_pool ;
   spinlock_t rescue_lock ;
   struct bio_list rescue_list ;
   struct work_struct rescue_work ;
   struct workqueue_struct *rescue_workqueue ;
};
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bsg.h"
struct sg_io_v4 {
   __s32 guard ;
   __u32 protocol ;
   __u32 subprotocol ;
   __u32 request_len ;
   __u64 request ;
   __u64 request_tag ;
   __u32 request_attr ;
   __u32 request_priority ;
   __u32 request_extra ;
   __u32 max_response_len ;
   __u64 response ;
   __u32 dout_iovec_count ;
   __u32 dout_xfer_len ;
   __u32 din_iovec_count ;
   __u32 din_xfer_len ;
   __u64 dout_xferp ;
   __u64 din_xferp ;
   __u32 timeout ;
   __u32 flags ;
   __u64 usr_ptr ;
   __u32 spare_in ;
   __u32 driver_status ;
   __u32 transport_status ;
   __u32 device_status ;
   __u32 retry_delay ;
   __u32 info ;
   __u32 duration ;
   __u32 response_len ;
   __s32 din_resid ;
   __s32 dout_resid ;
   __u64 generated_tag ;
   __u32 spare_out ;
   __u32 padding ;
};
#line 65 
struct request;
#line 10  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bsg.h"
struct bsg_ops {
   int (*check_proto)(struct sg_io_v4 *) ;
   int (*fill_hdr)(struct request *, struct sg_io_v4 *, fmode_t ) ;
   int (*complete_rq)(struct request *, struct sg_io_v4 *) ;
   void (*free_rq)(struct request *) ;
};
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bsg.h"
struct bsg_class_device {
   struct device *class_dev ;
   int minor ;
   struct request_queue *queue ;
   struct bsg_ops *ops ;
};
#line 94  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/blkzoned.h"
struct blk_zone {
   __u64 start ;
   __u64 len ;
   __u64 wp ;
   __u8 type ;
   __u8 cond ;
   __u8 non_seq ;
   __u8 reset ;
   __u8 reserved[36U] ;
};
#line 134 
struct elevator_queue;
#line 135 
struct blk_trace;
#line 138 
struct blk_flush_queue;
#line 139 
struct pr_ops;
#line 140 
struct rq_qos;
#line 141 
struct blk_queue_stats;
#line 142 
struct blk_stat_callback;
#line 143  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/blkzoned.h"
typedef void rq_end_io_fn(struct request *, blk_status_t );
#line 63  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
typedef __u32 req_flags_t;
#line 67 
enum mq_rq_state {
    MQ_RQ_IDLE = 0,
    MQ_RQ_IN_FLIGHT = 1,
    MQ_RQ_COMPLETE = 2
};
#line 132 
struct blk_mq_ctx;
#line 132 
struct blk_mq_hw_ctx;
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
union __anonunion_846 {
   struct hlist_node hash ;
   struct list_head ipi_list ;
};
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
union __anonunion_847 {
   struct rb_node rb_node ;
   struct bio_vec special_vec ;
   void *completion_data ;
   int error_count ;
};
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
struct __anonstruct_elv_849 {
   struct io_cq *icq ;
   void *priv[2U] ;
};
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
struct __anonstruct_flush_850 {
   unsigned int seq ;
   struct list_head list ;
   rq_end_io_fn *saved_end_io ;
};
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
union __anonunion_848 {
   struct __anonstruct_elv_849 elv ;
   struct __anonstruct_flush_850 flush ;
};
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
union __anonunion_851 {
   struct __call_single_data csd ;
   u64 fifo_time ;
};
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
struct request {
   struct request_queue *q ;
   struct blk_mq_ctx *mq_ctx ;
   struct blk_mq_hw_ctx *mq_hctx ;
   unsigned int cmd_flags ;
   req_flags_t rq_flags ;
   int tag ;
   int internal_tag ;
   unsigned int __data_len ;
   sector_t __sector ;
   struct bio *bio ;
   struct bio *biotail ;
   struct list_head queuelist ;
   union __anonunion_846 __anonCompField_request_172 ;
   union __anonunion_847 __anonCompField_request_173 ;
   union __anonunion_848 __anonCompField_request_174 ;
   struct gendisk *rq_disk ;
   struct hd_struct *part ;
   u64 alloc_time_ns ;
   u64 start_time_ns ;
   u64 io_start_time_ns ;
   unsigned short wbt_flags ;
   unsigned short stats_sectors ;
   unsigned short nr_phys_segments ;
   unsigned short nr_integrity_segments ;
   unsigned short write_hint ;
   unsigned short ioprio ;
   unsigned int extra_len ;
   enum mq_rq_state state ;
   refcount_t ref ;
   unsigned int timeout ;
   unsigned long deadline ;
   union __anonunion_851 __anonCompField_request_175 ;
   rq_end_io_fn *end_io ;
   void *end_io_data ;
};
#line 285 
struct elevator_type;
#line 286 
struct blk_mq_debugfs_attr;
#line 287 
enum elv_merge {
    ELEVATOR_NO_MERGE = 0,
    ELEVATOR_FRONT_MERGE = 1,
    ELEVATOR_BACK_MERGE = 2,
    ELEVATOR_DISCARD_MERGE = 3
};
#line 294 
struct blk_mq_alloc_data;
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/elevator.h"
struct elevator_mq_ops {
   int (*init_sched)(struct request_queue *, struct elevator_type *) ;
   void (*exit_sched)(struct elevator_queue *) ;
   int (*init_hctx)(struct blk_mq_hw_ctx *, unsigned int ) ;
   void (*exit_hctx)(struct blk_mq_hw_ctx *, unsigned int ) ;
   void (*depth_updated)(struct blk_mq_hw_ctx *) ;
   bool (*allow_merge)(struct request_queue *, struct request *, struct bio *) ;
   bool (*bio_merge)(struct blk_mq_hw_ctx *, struct bio *, unsigned int ) ;
   int (*request_merge)(struct request_queue *, struct request **, struct bio *) ;
   void (*request_merged)(struct request_queue *, struct request *, enum elv_merge ) ;
   void (*requests_merged)(struct request_queue *, struct request *, struct request *) ;
   void (*limit_depth)(unsigned int , struct blk_mq_alloc_data *) ;
   void (*prepare_request)(struct request *, struct bio *) ;
   void (*finish_request)(struct request *) ;
   void (*insert_requests)(struct blk_mq_hw_ctx *, struct list_head *, bool ) ;
   struct request *(*dispatch_request)(struct blk_mq_hw_ctx *) ;
   bool (*has_work)(struct blk_mq_hw_ctx *) ;
   void (*completed_request)(struct request *, u64 ) ;
   void (*requeue_request)(struct request *) ;
   struct request *(*former_request)(struct request_queue *, struct request *) ;
   struct request *(*next_request)(struct request_queue *, struct request *) ;
   void (*init_icq)(struct io_cq *) ;
   void (*exit_icq)(struct io_cq *) ;
};
#line 57  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/elevator.h"
struct elv_fs_entry {
   struct attribute attr ;
   ssize_t (*show)(struct elevator_queue *, char *) ;
   ssize_t (*store)(struct elevator_queue *, char *, size_t ) ;
};
#line 66  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/elevator.h"
struct elevator_type {
   struct kmem_cache *icq_cache ;
   struct elevator_mq_ops ops ;
   size_t icq_size ;
   size_t icq_align ;
   struct elv_fs_entry *elevator_attrs ;
   char *elevator_name ;
   char *elevator_alias ;
   unsigned int elevator_features ;
   struct module *elevator_owner ;
   struct blk_mq_debugfs_attr *queue_debugfs_attrs ;
   struct blk_mq_debugfs_attr *hctx_debugfs_attrs ;
   char icq_cache_name[22U] ;
   struct list_head list ;
};
#line 101  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/elevator.h"
struct elevator_queue {
   struct elevator_type *type ;
   void *elevator_data ;
   struct kobject kobj ;
   struct mutex sysfs_lock ;
   unsigned int registered : 1 ;
   struct hlist_head hash[64U] ;
};
#line 153  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/elevator.h"
typedef blk_qc_t make_request_fn(struct request_queue *, struct bio *);
#line 291  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
typedef int dma_drain_needed_fn(struct request *);
#line 304 
enum blk_zoned_model {
    BLK_ZONED_NONE = 0,
    BLK_ZONED_HA = 1,
    BLK_ZONED_HM = 2
};
#line 320  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
struct queue_limits {
   unsigned long bounce_pfn ;
   unsigned long seg_boundary_mask ;
   unsigned long virt_boundary_mask ;
   unsigned int max_hw_sectors ;
   unsigned int max_dev_sectors ;
   unsigned int chunk_sectors ;
   unsigned int max_sectors ;
   unsigned int max_segment_size ;
   unsigned int physical_block_size ;
   unsigned int logical_block_size ;
   unsigned int alignment_offset ;
   unsigned int io_min ;
   unsigned int io_opt ;
   unsigned int max_discard_sectors ;
   unsigned int max_hw_discard_sectors ;
   unsigned int max_write_same_sectors ;
   unsigned int max_write_zeroes_sectors ;
   unsigned int discard_granularity ;
   unsigned int discard_alignment ;
   unsigned short max_segments ;
   unsigned short max_integrity_segments ;
   unsigned short max_discard_segments ;
   unsigned char misaligned ;
   unsigned char discard_misaligned ;
   unsigned char raid_partial_stripes_expensive ;
   enum blk_zoned_model zoned ;
};
#line 394 
struct blk_mq_ops;
#line 394 
struct throtl_data;
#line 394 
struct blk_mq_tag_set;
#line 394  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
struct request_queue {
   struct request *last_merge ;
   struct elevator_queue *elevator ;
   struct blk_queue_stats *stats ;
   struct rq_qos *rq_qos ;
   make_request_fn *make_request_fn ;
   dma_drain_needed_fn *dma_drain_needed ;
   struct blk_mq_ops *mq_ops ;
   struct blk_mq_ctx *queue_ctx ;
   unsigned int queue_depth ;
   struct blk_mq_hw_ctx **queue_hw_ctx ;
   unsigned int nr_hw_queues ;
   struct backing_dev_info *backing_dev_info ;
   void *queuedata ;
   unsigned long queue_flags ;
   atomic_t pm_only ;
   int id ;
   gfp_t bounce_gfp ;
   spinlock_t queue_lock ;
   struct kobject kobj ;
   struct kobject *mq_kobj ;
   struct blk_integrity integrity ;
   struct device *dev ;
   int rpm_status ;
   unsigned int nr_pending ;
   unsigned long nr_requests ;
   unsigned int dma_drain_size ;
   void *dma_drain_buffer ;
   unsigned int dma_pad_mask ;
   unsigned int dma_alignment ;
   unsigned int rq_timeout ;
   int poll_nsec ;
   struct blk_stat_callback *poll_cb ;
   struct blk_rq_stat poll_stat[16U] ;
   struct timer_list timeout ;
   struct work_struct timeout_work ;
   struct list_head icq_list ;
   unsigned long blkcg_pols[1U] ;
   struct blkcg_gq *root_blkg ;
   struct list_head blkg_list ;
   struct queue_limits limits ;
   unsigned int required_elevator_features ;
   unsigned int nr_zones ;
   unsigned long *conv_zones_bitmap ;
   unsigned long *seq_zones_wlock ;
   unsigned int sg_timeout ;
   unsigned int sg_reserved_size ;
   int node ;
   struct blk_trace *blk_trace ;
   struct mutex blk_trace_mutex ;
   struct blk_flush_queue *fq ;
   struct list_head requeue_list ;
   spinlock_t requeue_lock ;
   struct delayed_work requeue_work ;
   struct mutex sysfs_lock ;
   struct mutex sysfs_dir_lock ;
   struct list_head unused_hctx_list ;
   spinlock_t unused_hctx_lock ;
   int mq_freeze_depth ;
   struct bsg_class_device bsg_dev ;
   struct throtl_data *td ;
   struct callback_head callback_head ;
   wait_queue_head_t mq_freeze_wq ;
   struct mutex mq_freeze_lock ;
   struct percpu_ref q_usage_counter ;
   struct blk_mq_tag_set *tag_set ;
   struct list_head tag_set_list ;
   struct bio_set bio_split ;
   struct dentry *debugfs_dir ;
   struct dentry *sched_debugfs_dir ;
   struct dentry *rqos_debugfs_dir ;
   bool mq_sysfs_init_done ;
   size_t cmd_size ;
   struct work_struct release_work ;
   u64 write_hints[5U] ;
};
#line 1160  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
struct blk_plug {
   struct list_head mq_list ;
   struct list_head cb_list ;
   unsigned short rq_count ;
   bool multiple_queues ;
};
#line 1514  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
struct blk_integrity_iter {
   void *prot_buf ;
   void *data_buf ;
   sector_t seed ;
   unsigned int data_size ;
   unsigned short interval ;
   char *disk_name ;
};
#line 1522  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
typedef blk_status_t integrity_processing_fn(struct blk_integrity_iter *);
#line 1524  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
typedef void integrity_prepare_fn(struct request *);
#line 1525  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
typedef void integrity_complete_fn(struct request *, unsigned int );
#line 1527  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
struct blk_integrity_profile {
   integrity_processing_fn *generate_fn ;
   integrity_processing_fn *verify_fn ;
   integrity_prepare_fn *prepare_fn ;
   integrity_complete_fn *complete_fn ;
   char *name ;
};
#line 1693  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
struct block_device_operations {
   int (*open)(struct block_device *, fmode_t ) ;
   void (*release)(struct gendisk *, fmode_t ) ;
   int (*rw_page)(struct block_device *, sector_t , struct page *, unsigned int ) ;
   int (*ioctl)(struct block_device *, fmode_t , unsigned int , unsigned long ) ;
   int (*compat_ioctl)(struct block_device *, fmode_t , unsigned int , unsigned long ) ;
   unsigned int (*check_events)(struct gendisk *, unsigned int ) ;
   int (*media_changed)(struct gendisk *) ;
   void (*unlock_native_capacity)(struct gendisk *) ;
   int (*revalidate_disk)(struct gendisk *) ;
   int (*getgeo)(struct block_device *, struct hd_geometry *) ;
   void (*swap_slot_free_notify)(struct block_device *, unsigned long ) ;
   int (*report_zones)(struct gendisk *, sector_t , unsigned int , int (*)(struct blk_zone *, unsigned int , void *), void *) ;
   struct module *owner ;
   struct pr_ops *pr_ops ;
};
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk-cgroup.h"
struct blkcg_policy_data;
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk-cgroup.h"
struct blkcg {
   struct cgroup_subsys_state css ;
   spinlock_t lock ;
   struct xarray blkg_tree ;
   struct blkcg_gq *blkg_hint ;
   struct hlist_head blkg_list ;
   struct blkcg_policy_data *cpd[5U] ;
   struct list_head all_blkcgs_node ;
   struct list_head cgwb_list ;
   refcount_t cgwb_refcnt ;
};
#line 63  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk-cgroup.h"
struct blkg_iostat {
   u64 bytes[3U] ;
   u64 ios[3U] ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk-cgroup.h"
struct blkg_iostat_set {
   struct u64_stats_sync sync ;
   struct blkg_iostat cur ;
   struct blkg_iostat last ;
};
#line 85  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk-cgroup.h"
struct blkg_policy_data {
   struct blkcg_gq *blkg ;
   int plid ;
};
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk-cgroup.h"
struct blkcg_policy_data {
   struct blkcg *blkcg ;
   int plid ;
};
#line 105  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk-cgroup.h"
struct blkcg_gq {
   struct request_queue *q ;
   struct list_head q_node ;
   struct hlist_node blkcg_node ;
   struct blkcg *blkcg ;
   struct bdi_writeback_congested *wb_congested ;
   struct blkcg_gq *parent ;
   struct percpu_ref refcnt ;
   bool online ;
   struct blkg_iostat_set *iostat_cpu ;
   struct blkg_iostat_set iostat ;
   struct blkg_policy_data *pd[5U] ;
   spinlock_t async_bio_lock ;
   struct bio_list async_bios ;
   struct work_struct async_bio_work ;
   atomic_t use_delay ;
   atomic64_t delay_nsec ;
   atomic64_t delay_start ;
   u64 last_delay ;
   int last_use ;
   struct callback_head callback_head ;
};
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/writeback.h"
enum writeback_sync_modes {
    WB_SYNC_NONE = 0,
    WB_SYNC_ALL = 1
};
#line 51  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/writeback.h"
struct writeback_control {
   long nr_to_write ;
   long pages_skipped ;
   loff_t range_start ;
   loff_t range_end ;
   enum writeback_sync_modes sync_mode ;
   unsigned int for_kupdate : 1 ;
   unsigned int for_background : 1 ;
   unsigned int tagged_writepages : 1 ;
   unsigned int for_reclaim : 1 ;
   unsigned int range_cyclic : 1 ;
   unsigned int for_sync : 1 ;
   unsigned int no_cgroup_owner : 1 ;
   unsigned int punt_to_cgroup : 1 ;
   struct bdi_writeback *wb ;
   struct inode *inode ;
   int wb_id ;
   int wb_lcand_id ;
   int wb_tcand_id ;
   size_t wb_bytes ;
   size_t wb_lcand_bytes ;
   size_t wb_tcand_bytes ;
};
#line 129  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/writeback.h"
struct wb_domain {
   spinlock_t lock ;
   struct fprop_global completions ;
   struct timer_list period_timer ;
   unsigned long period_time ;
   unsigned long dirty_limit_tstamp ;
   unsigned long dirty_limit ;
};
#line 69  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct mem_cgroup_id {
   int id ;
   refcount_t ref ;
};
#line 86  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct memcg_vmstats_percpu {
   long stat[38U] ;
   unsigned long events[91U] ;
   unsigned long nr_page_events ;
   unsigned long targets[2U] ;
};
#line 93  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct mem_cgroup_reclaim_iter {
   struct mem_cgroup *position ;
   unsigned int generation ;
};
#line 99  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct lruvec_stat {
   long count[32U] ;
};
#line 107  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct memcg_shrinker_map {
   struct callback_head rcu ;
   unsigned long map[0U] ;
};
#line 115  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct mem_cgroup_per_node {
   struct lruvec lruvec ;
   struct lruvec_stat *lruvec_stat_local ;
   struct lruvec_stat *lruvec_stat_cpu ;
   atomic_long_t lruvec_stat[32U] ;
   unsigned long lru_zone_size[5U][5U] ;
   struct mem_cgroup_reclaim_iter iter ;
   struct memcg_shrinker_map *shrinker_map ;
   struct rb_node tree_node ;
   unsigned long usage_in_excess ;
   bool on_tree ;
   struct mem_cgroup *memcg ;
};
#line 139  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct mem_cgroup_threshold {
   struct eventfd_ctx *eventfd ;
   unsigned long threshold ;
};
#line 145  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct mem_cgroup_threshold_ary {
   int current_threshold ;
   unsigned int size ;
   struct mem_cgroup_threshold entries[0U] ;
};
#line 154  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct mem_cgroup_thresholds {
   struct mem_cgroup_threshold_ary *primary ;
   struct mem_cgroup_threshold_ary *spare ;
};
#line 164 
enum memcg_kmem_state {
    KMEM_NONE = 0,
    KMEM_ALLOCATED = 1,
    KMEM_ONLINE = 2
};
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct memcg_padding {
   char x[0U] ;
} __attribute__((__aligned__(4096)));
#line 190  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct memcg_cgwb_frn {
   u64 bdi_id ;
   int memcg_id ;
   u64 at ;
   struct wb_completion done ;
};
#line 203  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct mem_cgroup {
   struct cgroup_subsys_state css ;
   struct mem_cgroup_id id ;
   struct page_counter memory ;
   struct page_counter swap ;
   struct page_counter memsw ;
   struct page_counter kmem ;
   struct page_counter tcpmem ;
   unsigned long high ;
   struct work_struct high_work ;
   unsigned long soft_limit ;
   struct vmpressure vmpressure ;
   bool use_hierarchy ;
   bool oom_group ;
   bool oom_lock ;
   int under_oom ;
   int swappiness ;
   int oom_kill_disable ;
   struct cgroup_file events_file ;
   struct cgroup_file events_local_file ;
   struct cgroup_file swap_events_file ;
   struct mutex thresholds_lock ;
   struct mem_cgroup_thresholds thresholds ;
   struct mem_cgroup_thresholds memsw_thresholds ;
   struct list_head oom_notify ;
   unsigned long move_charge_at_immigrate ;
   spinlock_t move_lock ;
   unsigned long move_lock_flags ;
   struct memcg_padding _pad1_ ;
   atomic_t moving_account ;
   struct task_struct *move_lock_task ;
   struct memcg_vmstats_percpu *vmstats_local ;
   struct memcg_vmstats_percpu *vmstats_percpu ;
   struct memcg_padding _pad2_ ;
   atomic_long_t vmstats[38U] ;
   atomic_long_t vmevents[91U] ;
   atomic_long_t memory_events[7U] ;
   atomic_long_t memory_events_local[7U] ;
   unsigned long socket_pressure ;
   bool tcpmem_active ;
   int tcpmem_pressure ;
   int kmemcg_id ;
   enum memcg_kmem_state kmem_state ;
   struct list_head kmem_caches ;
   struct list_head cgwb_list ;
   struct wb_domain cgwb_domain ;
   struct memcg_cgwb_frn cgwb_frn[4U] ;
   struct list_head event_list ;
   spinlock_t event_list_lock ;
   struct deferred_split deferred_split_queue ;
   struct mem_cgroup_per_node *nodeinfo[0U] ;
};
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/filter.h"
struct sock_filter {
   __u16 code ;
   __u8 jt ;
   __u8 jf ;
   __u32 k ;
};
#line 35 
struct sock_reuseport;
#line 513  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/filter.h"
struct sock_fprog_kern {
   u16 len ;
   struct sock_filter *filter ;
};
#line 526  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/filter.h"
union __anonunion_867 {
   struct sock_filter insns[0U] ;
   struct bpf_insn insnsi[0U] ;
};
#line 526  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/filter.h"
struct bpf_prog {
   u16 pages ;
   u16 jited : 1 ;
   u16 jit_requested : 1 ;
   u16 gpl_compatible : 1 ;
   u16 cb_access : 1 ;
   u16 dst_needed : 1 ;
   u16 blinded : 1 ;
   u16 is_func : 1 ;
   u16 kprobe_override : 1 ;
   u16 has_callchain_buf : 1 ;
   u16 enforce_expected_attach_type : 1 ;
   enum bpf_prog_type type ;
   enum bpf_attach_type expected_attach_type ;
   u32 len ;
   u32 jited_len ;
   u8 tag[8U] ;
   struct bpf_prog_aux *aux ;
   struct sock_fprog_kern *orig_prog ;
   unsigned int (*bpf_func)(void *, struct bpf_insn *) ;
   union __anonunion_867 __anonCompField_bpf_prog_176 ;
};
#line 554  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/filter.h"
struct sk_filter {
   refcount_t refcnt ;
   struct callback_head rcu ;
   struct bpf_prog *prog ;
};
#line 36  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/poll.h"
struct pollfd {
   int fd ;
   short events ;
   short revents ;
};
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/poll.h"
struct poll_table_struct {
   void (*_qproc)(struct file *, wait_queue_head_t *, struct poll_table_struct *) ;
   __poll_t _key ;
};
#line 70  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/neighbour.h"
struct neigh_table;
#line 70  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/neighbour.h"
struct neigh_parms {
   possible_net_t net ;
   struct net_device *dev ;
   struct list_head list ;
   int (*neigh_setup)(struct neighbour *) ;
   struct neigh_table *tbl ;
   void *sysctl_table ;
   int dead ;
   refcount_t refcnt ;
   struct callback_head callback_head ;
   int reachable_time ;
   int data[13U] ;
   unsigned long data_state[1U] ;
};
#line 112  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/neighbour.h"
struct neigh_statistics {
   unsigned long allocs ;
   unsigned long destroys ;
   unsigned long hash_grows ;
   unsigned long res_failed ;
   unsigned long lookups ;
   unsigned long hits ;
   unsigned long rcv_probes_mcast ;
   unsigned long rcv_probes_ucast ;
   unsigned long periodic_gc_runs ;
   unsigned long forced_gc_runs ;
   unsigned long unres_discards ;
   unsigned long table_fulls ;
};
#line 134 
struct neigh_ops;
#line 134  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/neighbour.h"
struct neighbour {
   struct neighbour *next ;
   struct neigh_table *tbl ;
   struct neigh_parms *parms ;
   unsigned long confirmed ;
   unsigned long updated ;
   rwlock_t lock ;
   refcount_t refcnt ;
   unsigned int arp_queue_len_bytes ;
   struct sk_buff_head arp_queue ;
   struct timer_list timer ;
   unsigned long used ;
   atomic_t probes ;
   __u8 flags ;
   __u8 nud_state ;
   __u8 type ;
   __u8 dead ;
   u8 protocol ;
   seqlock_t ha_lock ;
   unsigned char ha[32U] ;
   struct hh_cache hh ;
   int (*output)(struct neighbour *, struct sk_buff *) ;
   struct neigh_ops *ops ;
   struct list_head gc_list ;
   struct callback_head rcu ;
   struct net_device *dev ;
   u8 primary_key[0U] ;
} __attribute__((__designated_init__));
#line 163  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/neighbour.h"
struct neigh_ops {
   int family ;
   void (*solicit)(struct neighbour *, struct sk_buff *) ;
   void (*error_report)(struct neighbour *, struct sk_buff *) ;
   int (*output)(struct neighbour *, struct sk_buff *) ;
   int (*connected_output)(struct neighbour *, struct sk_buff *) ;
};
#line 171  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/neighbour.h"
struct pneigh_entry {
   struct pneigh_entry *next ;
   possible_net_t net ;
   struct net_device *dev ;
   u8 flags ;
   u8 protocol ;
   u8 key[0U] ;
};
#line 186  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/neighbour.h"
struct neigh_hash_table {
   struct neighbour **hash_buckets ;
   unsigned int hash_shift ;
   __u32 hash_rnd[4U] ;
   struct callback_head rcu ;
};
#line 194  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/neighbour.h"
struct neigh_table {
   int family ;
   unsigned int entry_size ;
   unsigned int key_len ;
   __be16 protocol ;
   __u32 (*hash)(void *, struct net_device *, __u32 *) ;
   bool (*key_eq)(struct neighbour *, void *) ;
   int (*constructor)(struct neighbour *) ;
   int (*pconstructor)(struct pneigh_entry *) ;
   void (*pdestructor)(struct pneigh_entry *) ;
   void (*proxy_redo)(struct sk_buff *) ;
   bool (*allow_add)(struct net_device *, struct netlink_ext_ack *) ;
   char *id ;
   struct neigh_parms parms ;
   struct list_head parms_list ;
   int gc_interval ;
   int gc_thresh1 ;
   int gc_thresh2 ;
   int gc_thresh3 ;
   unsigned long last_flush ;
   struct delayed_work gc_work ;
   struct timer_list proxy_timer ;
   struct sk_buff_head proxy_queue ;
   atomic_t entries ;
   atomic_t gc_entries ;
   struct list_head gc_list ;
   rwlock_t lock ;
   unsigned long last_rand ;
   struct neigh_statistics *stats ;
   struct neigh_hash_table *nht ;
   struct pneigh_entry **phash_buckets ;
};
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/dst.h"
struct lwtunnel_state;
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/dst.h"
struct dst_entry {
   struct net_device *dev ;
   struct dst_ops *ops ;
   unsigned long _metrics ;
   unsigned long expires ;
   struct xfrm_state *xfrm ;
   int (*input)(struct sk_buff *) ;
   int (*output)(struct net *, struct sock *, struct sk_buff *) ;
   unsigned short flags ;
   short obsolete ;
   unsigned short header_len ;
   unsigned short trailer_len ;
   atomic_t __refcnt ;
   int __use ;
   unsigned long lastuse ;
   struct lwtunnel_state *lwtstate ;
   struct callback_head callback_head ;
   short error ;
   short __pad ;
   __u32 tclassid ;
};
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fib_rules.h"
struct fib_rule_hdr {
   __u8 family ;
   __u8 dst_len ;
   __u8 src_len ;
   __u8 tos ;
   __u8 table ;
   __u8 res1 ;
   __u8 res2 ;
   __u8 action ;
   __u32 flags ;
};
#line 38  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fib_rules.h"
struct fib_rule_port_range {
   __u16 start ;
   __u16 end ;
};
#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/fib_notifier.h"
struct fib_notifier_ops {
   int family ;
   struct list_head list ;
   unsigned int (*fib_seq_read)(struct net *) ;
   int (*fib_dump)(struct net *, struct notifier_block *, struct netlink_ext_ack *) ;
   struct module *owner ;
   struct callback_head rcu ;
};
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/fib_rules.h"
struct fib_kuid_range {
   kuid_t start ;
   kuid_t end ;
};
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/fib_rules.h"
struct fib_rule {
   struct list_head list ;
   int iifindex ;
   int oifindex ;
   u32 mark ;
   u32 mark_mask ;
   u32 flags ;
   u32 table ;
   u8 action ;
   u8 l3mdev ;
   u8 proto ;
   u8 ip_proto ;
   u32 target ;
   __be64 tun_id ;
   struct fib_rule *ctarget ;
   struct net *fr_net ;
   refcount_t refcnt ;
   u32 pref ;
   int suppress_ifgroup ;
   int suppress_prefixlen ;
   char iifname[16U] ;
   char oifname[16U] ;
   struct fib_kuid_range uid_range ;
   struct fib_rule_port_range sport_range ;
   struct fib_rule_port_range dport_range ;
   struct callback_head rcu ;
};
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/fib_rules.h"
struct fib_lookup_arg {
   void *lookup_ptr ;
   void *lookup_data ;
   void *result ;
   struct fib_rule *rule ;
   u32 table ;
   int flags ;
};
#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/fib_rules.h"
struct fib_rules_ops {
   int family ;
   struct list_head list ;
   int rule_size ;
   int addr_size ;
   int unresolved_rules ;
   int nr_goto_rules ;
   unsigned int fib_rules_seq ;
   int (*action)(struct fib_rule *, struct flowi *, int , struct fib_lookup_arg *) ;
   bool (*suppress)(struct fib_rule *, struct fib_lookup_arg *) ;
   int (*match)(struct fib_rule *, struct flowi *, int ) ;
   int (*configure)(struct fib_rule *, struct sk_buff *, struct fib_rule_hdr *, struct nlattr **, struct netlink_ext_ack *) ;
   int (*delete)(struct fib_rule *) ;
   int (*compare)(struct fib_rule *, struct fib_rule_hdr *, struct nlattr **) ;
   int (*fill)(struct fib_rule *, struct sk_buff *, struct fib_rule_hdr *) ;
   size_t (*nlmsg_payload)(struct fib_rule *) ;
   void (*flush_cache)(struct fib_rules_ops *) ;
   int nlgroup ;
   struct nla_policy *policy ;
   struct list_head rules_list ;
   struct module *owner ;
   struct net *fro_net ;
   struct callback_head rcu ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/l3mdev.h"
struct l3mdev_ops {
   u32 (*l3mdev_fib_table)(struct net_device *) ;
   struct sk_buff *(*l3mdev_l3_rcv)(struct net_device *, struct sk_buff *, u16 ) ;
   struct sk_buff *(*l3mdev_l3_out)(struct net_device *, struct sock *, struct sk_buff *, u16 ) ;
   struct dst_entry *(*l3mdev_link_scope_lookup)(struct net_device *, struct flowi6 *) ;
};
#line 202  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/l3mdev.h"
struct __anonstruct_socket_lock_t_889 {
   spinlock_t slock ;
   int owned ;
   wait_queue_head_t wq ;
   struct lockdep_map dep_map ;
};
#line 202  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/l3mdev.h"
typedef struct __anonstruct_socket_lock_t_889 socket_lock_t;
#line 108  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
struct proto;
#line 109  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
typedef __u32 __portpair;
#line 114  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
typedef __u64 __addrpair;
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
struct __anonstruct_891 {
   __be32 skc_daddr ;
   __be32 skc_rcv_saddr ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_890 {
   __addrpair skc_addrpair ;
   struct __anonstruct_891 __anonCompField___anonunion_890_178 ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_892 {
   unsigned int skc_hash ;
   __u16 skc_u16hashes[2U] ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
struct __anonstruct_894 {
   __be16 skc_dport ;
   __u16 skc_num ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_893 {
   __portpair skc_portpair ;
   struct __anonstruct_894 __anonCompField___anonunion_893_181 ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_895 {
   struct hlist_node skc_bind_node ;
   struct hlist_node skc_portaddr_node ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_896 {
   unsigned long skc_flags ;
   struct sock *skc_listener ;
   struct inet_timewait_death_row *skc_tw_dr ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_897 {
   struct hlist_node skc_node ;
   struct hlist_nulls_node skc_nulls_node ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_898 {
   int skc_incoming_cpu ;
   u32 skc_rcv_wnd ;
   u32 skc_tw_rcv_nxt ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_899 {
   u32 skc_rxhash ;
   u32 skc_window_clamp ;
   u32 skc_tw_snd_nxt ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
struct sock_common {
   union __anonunion_890 __anonCompField_sock_common_179 ;
   union __anonunion_892 __anonCompField_sock_common_180 ;
   union __anonunion_893 __anonCompField_sock_common_182 ;
   unsigned short skc_family ;
   unsigned char skc_state ;
   unsigned char skc_reuse : 4 ;
   unsigned char skc_reuseport : 1 ;
   unsigned char skc_ipv6only : 1 ;
   unsigned char skc_net_refcnt : 1 ;
   int skc_bound_dev_if ;
   union __anonunion_895 __anonCompField_sock_common_183 ;
   struct proto *skc_prot ;
   possible_net_t skc_net ;
   struct in6_addr skc_v6_daddr ;
   struct in6_addr skc_v6_rcv_saddr ;
   atomic64_t skc_cookie ;
   union __anonunion_896 __anonCompField_sock_common_184 ;
   int skc_dontcopy_begin[0U] ;
   union __anonunion_897 __anonCompField_sock_common_185 ;
   unsigned short skc_tx_queue_mapping ;
   unsigned short skc_rx_queue_mapping ;
   union __anonunion_898 __anonCompField_sock_common_186 ;
   refcount_t skc_refcnt ;
   int skc_dontcopy_end[0U] ;
   union __anonunion_899 __anonCompField_sock_common_187 ;
};
#line 231 
struct bpf_sk_storage;
#line 323  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
struct __anonstruct_sk_backlog_900 {
   atomic_t rmem_alloc ;
   int len ;
   struct sk_buff *head ;
   struct sk_buff *tail ;
};
#line 323  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_901 {
   struct socket_wq *sk_wq ;
   struct socket_wq *sk_wq_raw ;
};
#line 323  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_902 {
   struct sk_buff *sk_send_head ;
   struct rb_root tcp_rtx_queue ;
};
#line 323  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
struct sock {
   struct sock_common __sk_common ;
   socket_lock_t sk_lock ;
   atomic_t sk_drops ;
   int sk_rcvlowat ;
   struct sk_buff_head sk_error_queue ;
   struct sk_buff *sk_rx_skb_cache ;
   struct sk_buff_head sk_receive_queue ;
   struct __anonstruct_sk_backlog_900 sk_backlog ;
   int sk_forward_alloc ;
   unsigned int sk_ll_usec ;
   unsigned int sk_napi_id ;
   int sk_rcvbuf ;
   struct sk_filter *sk_filter ;
   union __anonunion_901 __anonCompField_sock_188 ;
   struct xfrm_policy *sk_policy[2U] ;
   struct dst_entry *sk_rx_dst ;
   struct dst_entry *sk_dst_cache ;
   atomic_t sk_omem_alloc ;
   int sk_sndbuf ;
   int sk_wmem_queued ;
   refcount_t sk_wmem_alloc ;
   unsigned long sk_tsq_flags ;
   union __anonunion_902 __anonCompField_sock_189 ;
   struct sk_buff *sk_tx_skb_cache ;
   struct sk_buff_head sk_write_queue ;
   __s32 sk_peek_off ;
   int sk_write_pending ;
   __u32 sk_dst_pending_confirm ;
   u32 sk_pacing_status ;
   long sk_sndtimeo ;
   struct timer_list sk_timer ;
   __u32 sk_priority ;
   __u32 sk_mark ;
   unsigned long sk_pacing_rate ;
   unsigned long sk_max_pacing_rate ;
   struct page_frag sk_frag ;
   netdev_features_t sk_route_caps ;
   netdev_features_t sk_route_nocaps ;
   netdev_features_t sk_route_forced_caps ;
   int sk_gso_type ;
   unsigned int sk_gso_max_size ;
   gfp_t sk_allocation ;
   __u32 sk_txhash ;
   unsigned int __sk_flags_offset[0U] ;
   unsigned int sk_padding : 1 ;
   unsigned int sk_kern_sock : 1 ;
   unsigned int sk_no_check_tx : 1 ;
   unsigned int sk_no_check_rx : 1 ;
   unsigned int sk_userlocks : 4 ;
   unsigned int sk_protocol : 8 ;
   unsigned int sk_type : 16 ;
   u16 sk_gso_max_segs ;
   u8 sk_pacing_shift ;
   unsigned long sk_lingertime ;
   struct proto *sk_prot_creator ;
   rwlock_t sk_callback_lock ;
   int sk_err ;
   int sk_err_soft ;
   u32 sk_ack_backlog ;
   u32 sk_max_ack_backlog ;
   kuid_t sk_uid ;
   struct pid *sk_peer_pid ;
   struct cred *sk_peer_cred ;
   long sk_rcvtimeo ;
   ktime_t sk_stamp ;
   u16 sk_tsflags ;
   u8 sk_shutdown ;
   u32 sk_tskey ;
   atomic_t sk_zckey ;
   u8 sk_clockid ;
   u8 sk_txtime_deadline_mode : 1 ;
   u8 sk_txtime_report_errors : 1 ;
   u8 sk_txtime_unused : 6 ;
   struct socket *sk_socket ;
   void *sk_user_data ;
   void *sk_security ;
   struct sock_cgroup_data sk_cgrp_data ;
   struct mem_cgroup *sk_memcg ;
   void (*sk_state_change)(struct sock *) ;
   void (*sk_data_ready)(struct sock *) ;
   void (*sk_write_space)(struct sock *) ;
   void (*sk_error_report)(struct sock *) ;
   int (*sk_backlog_rcv)(struct sock *, struct sk_buff *) ;
   struct sk_buff *(*sk_validate_xmit_skb)(struct sock *, struct net_device *, struct sk_buff *) ;
   void (*sk_destruct)(struct sock *) ;
   struct sock_reuseport *sk_reuseport_cb ;
   struct bpf_sk_storage *sk_bpf_storage ;
   struct callback_head sk_rcu ;
};
#line 1048 
struct request_sock_ops;
#line 1049 
struct timewait_sock_ops;
#line 1050 
struct raw_hashinfo;
#line 1051 
struct smc_hashinfo;
#line 1071 
struct udp_table;
#line 1071  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_h_937 {
   struct inet_hashinfo *hashinfo ;
   struct udp_table *udp_table ;
   struct raw_hashinfo *raw_hash ;
   struct smc_hashinfo *smc_hash ;
};
#line 1071  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
struct proto {
   void (*close)(struct sock *, long ) ;
   int (*pre_connect)(struct sock *, struct sockaddr *, int ) ;
   int (*connect)(struct sock *, struct sockaddr *, int ) ;
   int (*disconnect)(struct sock *, int ) ;
   struct sock *(*accept)(struct sock *, int , int *, bool ) ;
   int (*ioctl)(struct sock *, int , unsigned long ) ;
   int (*init)(struct sock *) ;
   void (*destroy)(struct sock *) ;
   void (*shutdown)(struct sock *, int ) ;
   int (*setsockopt)(struct sock *, int , int , char *, unsigned int ) ;
   int (*getsockopt)(struct sock *, int , int , char *, int *) ;
   void (*keepalive)(struct sock *, int ) ;
   int (*compat_setsockopt)(struct sock *, int , int , char *, unsigned int ) ;
   int (*compat_getsockopt)(struct sock *, int , int , char *, int *) ;
   int (*compat_ioctl)(struct sock *, unsigned int , unsigned long ) ;
   int (*sendmsg)(struct sock *, struct msghdr *, size_t ) ;
   int (*recvmsg)(struct sock *, struct msghdr *, size_t , int , int , int *) ;
   int (*sendpage)(struct sock *, struct page *, int , size_t , int ) ;
   int (*bind)(struct sock *, struct sockaddr *, int ) ;
   int (*backlog_rcv)(struct sock *, struct sk_buff *) ;
   void (*release_cb)(struct sock *) ;
   int (*hash)(struct sock *) ;
   void (*unhash)(struct sock *) ;
   void (*rehash)(struct sock *) ;
   int (*get_port)(struct sock *, unsigned short ) ;
   unsigned int inuse_idx ;
   bool (*stream_memory_free)(struct sock *, int ) ;
   bool (*stream_memory_read)(struct sock *) ;
   void (*enter_memory_pressure)(struct sock *) ;
   void (*leave_memory_pressure)(struct sock *) ;
   atomic_long_t *memory_allocated ;
   struct percpu_counter *sockets_allocated ;
   unsigned long *memory_pressure ;
   long *sysctl_mem ;
   int *sysctl_wmem ;
   int *sysctl_rmem ;
   u32 sysctl_wmem_offset ;
   u32 sysctl_rmem_offset ;
   int max_header ;
   bool no_autobind ;
   struct kmem_cache *slab ;
   unsigned int obj_size ;
   slab_flags_t slab_flags ;
   unsigned int useroffset ;
   unsigned int usersize ;
   struct percpu_counter *orphan_count ;
   struct request_sock_ops *rsk_prot ;
   struct timewait_sock_ops *twsk_prot ;
   union __anonunion_h_937 h ;
   struct module *owner ;
   char name[32U] ;
   struct list_head node ;
   int (*diag_destroy)(struct sock *, int ) ;
} __attribute__((__designated_init__));
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/request_sock.h"
struct request_sock_ops {
   int family ;
   unsigned int obj_size ;
   struct kmem_cache *slab ;
   char *slab_name ;
   int (*rtx_syn_ack)(struct sock *, struct request_sock *) ;
   void (*send_ack)(struct sock *, struct sk_buff *, struct request_sock *) ;
   void (*send_reset)(struct sock *, struct sk_buff *) ;
   void (*destructor)(struct request_sock *) ;
   void (*syn_ack_timeout)(struct request_sock *) ;
};
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/request_sock.h"
struct request_sock {
   struct sock_common __req_common ;
   struct request_sock *dl_next ;
   u16 mss ;
   u8 num_retrans ;
   u8 cookie_ts : 1 ;
   u8 num_timeout : 7 ;
   u32 ts_recent ;
   struct timer_list rsk_timer ;
   struct request_sock_ops *rsk_ops ;
   struct sock *sk ;
   u32 *saved_syn ;
   u32 secid ;
   u32 peer_secid ;
};
#line 63  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ipv6.h"
struct ipv6_stable_secret {
   bool initialized ;
   struct in6_addr secret ;
};
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ipv6.h"
struct ipv6_devconf {
   __s32 forwarding ;
   __s32 hop_limit ;
   __s32 mtu6 ;
   __s32 accept_ra ;
   __s32 accept_redirects ;
   __s32 autoconf ;
   __s32 dad_transmits ;
   __s32 rtr_solicits ;
   __s32 rtr_solicit_interval ;
   __s32 rtr_solicit_max_interval ;
   __s32 rtr_solicit_delay ;
   __s32 force_mld_version ;
   __s32 mldv1_unsolicited_report_interval ;
   __s32 mldv2_unsolicited_report_interval ;
   __s32 use_tempaddr ;
   __s32 temp_valid_lft ;
   __s32 temp_prefered_lft ;
   __s32 regen_max_retry ;
   __s32 max_desync_factor ;
   __s32 max_addresses ;
   __s32 accept_ra_defrtr ;
   __s32 accept_ra_min_hop_limit ;
   __s32 accept_ra_pinfo ;
   __s32 ignore_routes_with_linkdown ;
   __s32 accept_ra_rtr_pref ;
   __s32 rtr_probe_interval ;
   __s32 accept_ra_rt_info_min_plen ;
   __s32 accept_ra_rt_info_max_plen ;
   __s32 proxy_ndp ;
   __s32 accept_source_route ;
   __s32 accept_ra_from_local ;
   __s32 optimistic_dad ;
   __s32 use_optimistic ;
   __s32 mc_forwarding ;
   __s32 disable_ipv6 ;
   __s32 drop_unicast_in_l2_multicast ;
   __s32 accept_dad ;
   __s32 force_tllao ;
   __s32 ndisc_notify ;
   __s32 suppress_frag_ndisc ;
   __s32 accept_ra_mtu ;
   __s32 drop_unsolicited_na ;
   struct ipv6_stable_secret stable_secret ;
   __s32 use_oif_addrs_only ;
   __s32 keep_addr_on_down ;
   __s32 seg6_enabled ;
   __s32 seg6_require_hmac ;
   __u32 enhanced_dad ;
   __u32 addr_gen_mode ;
   __s32 disable_policy ;
   __s32 ndisc_tclass ;
   struct ctl_table_header *sysctl_header ;
};
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/timewait_sock.h"
struct timewait_sock_ops {
   struct kmem_cache *twsk_slab ;
   char *twsk_slab_name ;
   unsigned int twsk_obj_size ;
   int (*twsk_unique)(struct sock *, struct sock *, void *) ;
   void (*twsk_destructor)(struct sock *) ;
};
#line 246  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/inet_ecn.h"
typedef u32 codel_time_t;
#line 225  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_chanctx_conf {
   struct cfg80211_chan_def def ;
   struct cfg80211_chan_def min_def ;
   u8 rx_chains_static ;
   u8 rx_chains_dynamic ;
   bool radar_enabled ;
   u8 drv_priv[0U] ;
};
#line 267 
struct ieee80211_vif;
#line 440 
struct ieee80211_sta;
#line 471  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_mu_group_data {
   u8 membership[8U] ;
   u8 position[16U] ;
};
#line 484  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_ftm_responder_params {
   u8 *lci ;
   u8 *civicloc ;
   size_t lci_len ;
   size_t civicloc_len ;
};
#line 608  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_bss_conf {
   u8 *bssid ;
   u8 bss_color ;
   u8 htc_trig_based_pkt_ext ;
   bool multi_sta_back_32bit ;
   bool uora_exists ;
   bool ack_enabled ;
   u8 uora_ocw_range ;
   u16 frame_time_rts_th ;
   bool he_support ;
   bool twt_requester ;
   bool twt_responder ;
   bool assoc ;
   bool ibss_joined ;
   bool ibss_creator ;
   u16 aid ;
   bool use_cts_prot ;
   bool use_short_preamble ;
   bool use_short_slot ;
   bool enable_beacon ;
   u8 dtim_period ;
   u16 beacon_int ;
   u16 assoc_capability ;
   u64 sync_tsf ;
   u32 sync_device_ts ;
   u8 sync_dtim_count ;
   u32 basic_rates ;
   struct ieee80211_rate *beacon_rate ;
   int mcast_rate[4U] ;
   u16 ht_operation_mode ;
   s32 cqm_rssi_thold ;
   u32 cqm_rssi_hyst ;
   s32 cqm_rssi_low ;
   s32 cqm_rssi_high ;
   struct cfg80211_chan_def chandef ;
   struct ieee80211_mu_group_data mu_group ;
   __be32 arp_addr_list[4U] ;
   int arp_addr_cnt ;
   bool qos ;
   bool idle ;
   bool ps ;
   u8 ssid[32U] ;
   size_t ssid_len ;
   bool hidden_ssid ;
   int txpower ;
   enum nl80211_tx_power_setting txpower_type ;
   struct ieee80211_p2p_noa_attr p2p_noa_attr ;
   bool allow_p2p_go_ps ;
   u16 max_idle_period ;
   bool protected_keep_alive ;
   bool ftm_responder ;
   struct ieee80211_ftm_responder_params *ftmr_params ;
   bool nontransmitted ;
   u8 transmitter_bssid[6U] ;
   u8 bssid_index ;
   u8 bssid_indicator ;
   bool ema_ap ;
   u8 profile_periodicity ;
   struct ieee80211_he_operation he_operation ;
   struct ieee80211_he_obss_pd he_obss_pd ;
};
#line 930  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_tx_rate {
   s8 idx ;
   u16 count : 5 ;
   u16 flags : 11 ;
} __attribute__((__packed__));
#line 1004  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct __anonstruct_1013 {
   struct ieee80211_tx_rate rates[4U] ;
   s8 rts_cts_rate_idx ;
   u8 use_rts : 1 ;
   u8 use_cts_prot : 1 ;
   u8 short_preamble : 1 ;
   u8 skip_table : 1 ;
};
#line 1004  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
union __anonunion_1012 {
   struct __anonstruct_1013 __anonCompField___anonunion_1012_192 ;
   unsigned long jiffies ;
};
#line 1004 
struct ieee80211_key_conf;
#line 1004  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct __anonstruct_control_1011 {
   union __anonunion_1012 __anonCompField___anonstruct_control_1011_193 ;
   struct ieee80211_vif *vif ;
   struct ieee80211_key_conf *hw_key ;
   u32 flags ;
   codel_time_t enqueue_time ;
};
#line 1004  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct __anonstruct_ack_1014 {
   u64 cookie ;
};
#line 1004  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct __anonstruct_status_1015 {
   struct ieee80211_tx_rate rates[4U] ;
   s32 ack_signal ;
   u8 ampdu_ack_len ;
   u8 ampdu_len ;
   u8 antenna ;
   u16 tx_time ;
   bool is_valid_ack_signal ;
   void *status_driver_data[2U] ;
};
#line 1004  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct __anonstruct_1016 {
   struct ieee80211_tx_rate driver_rates[4U] ;
   u8 pad[4U] ;
   void *rate_driver_data[3U] ;
};
#line 1004  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
union __anonunion_1010 {
   struct __anonstruct_control_1011 control ;
   struct __anonstruct_ack_1014 ack ;
   struct __anonstruct_status_1015 status ;
   struct __anonstruct_1016 __anonCompField___anonunion_1010_194 ;
   void *driver_data[5U] ;
};
#line 1004  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_tx_info {
   u32 flags ;
   u8 band ;
   u8 hw_queue ;
   u16 ack_frame_id : 6 ;
   u16 tx_time_est : 10 ;
   union __anonunion_1010 __anonCompField_ieee80211_tx_info_195 ;
};
#line 1430 
enum ieee80211_smps_mode {
    IEEE80211_SMPS_AUTOMATIC = 0,
    IEEE80211_SMPS_OFF = 1,
    IEEE80211_SMPS_STATIC = 2,
    IEEE80211_SMPS_DYNAMIC = 3,
    IEEE80211_SMPS_NUM_MODES = 4
};
#line 1522  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_conf {
   u32 flags ;
   int power_level ;
   int dynamic_ps_timeout ;
   u16 listen_interval ;
   u8 ps_dtim_period ;
   u8 long_frame_max_tx_count ;
   u8 short_frame_max_tx_count ;
   struct cfg80211_chan_def chandef ;
   bool radar_enabled ;
   enum ieee80211_smps_mode smps_mode ;
};
#line 1627 
struct ieee80211_txq;
#line 1627  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_vif {
   enum nl80211_iftype type ;
   struct ieee80211_bss_conf bss_conf ;
   u8 addr[6U] ;
   bool p2p ;
   bool csa_active ;
   bool mu_mimo_owner ;
   u8 cab_queue ;
   u8 hw_queue[4U] ;
   struct ieee80211_txq *txq ;
   struct ieee80211_chanctx_conf *chanctx_conf ;
   u32 driver_flags ;
   struct dentry *debugfs_dir ;
   unsigned int probe_req_reg ;
   bool txqs_stopped[4U] ;
   u8 drv_priv[0U] ;
};
#line 1772  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_key_conf {
   atomic64_t tx_pn ;
   u32 cipher ;
   u8 icv_len ;
   u8 iv_len ;
   u8 hw_key_idx ;
   s8 keyidx ;
   u16 flags ;
   u8 keylen ;
   u8 key[0U] ;
};
#line 1846  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_cipher_scheme {
   u32 cipher ;
   u16 iftype ;
   u8 hdr_len ;
   u8 pn_len ;
   u8 pn_off ;
   u8 key_idx_off ;
   u8 key_idx_mask ;
   u8 key_idx_shift ;
   u8 mic_len ;
};
#line 1870 
enum ieee80211_sta_rx_bandwidth {
    IEEE80211_STA_RX_BW_20 = 0,
    IEEE80211_STA_RX_BW_40 = 1,
    IEEE80211_STA_RX_BW_80 = 2,
    IEEE80211_STA_RX_BW_160 = 3
};
#line 1915  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct __anonstruct_rate_1024 {
   s8 idx ;
   u8 count ;
   u8 count_cts ;
   u8 count_rts ;
   u16 flags ;
};
#line 1915  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_sta_rates {
   struct callback_head callback_head ;
   struct __anonstruct_rate_1024 rate[4U] ;
};
#line 1939  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_sta_txpwr {
   s16 power ;
   enum nl80211_tx_power_setting type ;
};
#line 1991  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_sta {
   u32 supp_rates[4U] ;
   u8 addr[6U] ;
   u16 aid ;
   struct ieee80211_sta_ht_cap ht_cap ;
   struct ieee80211_sta_vht_cap vht_cap ;
   struct ieee80211_sta_he_cap he_cap ;
   u16 max_rx_aggregation_subframes ;
   bool wme ;
   u8 uapsd_queues ;
   u8 max_sp ;
   u8 rx_nss ;
   enum ieee80211_sta_rx_bandwidth bandwidth ;
   enum ieee80211_smps_mode smps_mode ;
   struct ieee80211_sta_rates *rates ;
   bool tdls ;
   bool tdls_initiator ;
   bool mfp ;
   u8 max_amsdu_subframes ;
   u16 max_amsdu_len ;
   bool support_p2p_ps ;
   u16 max_rc_amsdu_len ;
   u16 max_tid_amsdu_len[16U] ;
   struct ieee80211_sta_txpwr txpwr ;
   struct ieee80211_txq *txq[17U] ;
   u8 drv_priv[0U] ;
};
#line 2074  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_txq {
   struct ieee80211_vif *vif ;
   struct ieee80211_sta *sta ;
   u8 tid ;
   u8 ac ;
   u8 drv_priv[0U] ;
};
#line 2487  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct __anonstruct_radiotap_timestamp_1025 {
   int units_pos ;
   s16 accuracy ;
};
#line 2487  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_hw {
   struct ieee80211_conf conf ;
   struct wiphy *wiphy ;
   char *rate_control_algorithm ;
   void *priv ;
   unsigned long flags[1U] ;
   unsigned int extra_tx_headroom ;
   unsigned int extra_beacon_tailroom ;
   int vif_data_size ;
   int sta_data_size ;
   int chanctx_data_size ;
   int txq_data_size ;
   u16 queues ;
   u16 max_listen_interval ;
   s8 max_signal ;
   u8 max_rates ;
   u8 max_report_rates ;
   u8 max_rate_tries ;
   u16 max_rx_aggregation_subframes ;
   u16 max_tx_aggregation_subframes ;
   u8 max_tx_fragments ;
   u8 offchannel_tx_hw_queue ;
   u8 radiotap_mcs_details ;
   u16 radiotap_vht_details ;
   struct __anonstruct_radiotap_timestamp_1025 radiotap_timestamp ;
   netdev_features_t netdev_features ;
   u8 uapsd_queues ;
   u8 uapsd_max_sp_len ;
   u8 n_cipher_schemes ;
   struct ieee80211_cipher_scheme *cipher_schemes ;
   u8 max_nan_de_entries ;
   u8 tx_sk_pacing_shift ;
   u8 weight_multiplier ;
   u32 max_mtu ;
};
#line 6481 
enum rtl8xxxu_rtl_chip {
    RTL8192S = 530720,
    RTL8191S = 530704,
    RTL8192C = 530732,
    RTL8191C = 530716,
    RTL8188C = 530572,
    RTL8188R = 530569,
    RTL8192D = 530733,
    RTL8723A = 553530,
    RTL8188E = 530574,
    RTL8812 = 557344,
    RTL8821 = 557584,
    RTL8192E = 530734,
    RTL8191E = 530718,
    RTL8723B = 553531,
    RTL8814A = 557386,
    RTL8881A = 559130,
    RTL8821B = 557595,
    RTL8822B = 557611,
    RTL8703B = 553019,
    RTL8195A = 530778,
    RTL8188F = 530575
};
#line 366  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.h"
struct rtl8xxxu_txdesc32 {
   __le16 pkt_size ;
   u8 pkt_offset ;
   u8 txdw0 ;
   __le32 txdw1 ;
   __le32 txdw2 ;
   __le32 txdw3 ;
   __le32 txdw4 ;
   __le32 txdw5 ;
   __le32 txdw6 ;
   __le16 csum ;
   __le16 txdw7 ;
};
#line 604  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.h"
struct rtl8xxxu_firmware_header {
   __le16 signature ;
   u8 category ;
   u8 function ;
   __le16 major_version ;
   u8 minor_version ;
   u8 reserved1 ;
   u8 month ;
   u8 date ;
   u8 hour ;
   u8 minute ;
   __le16 ramcodesize ;
   u16 reserved2 ;
   __le32 svn_idx ;
   u32 reserved3 ;
   u32 reserved4 ;
   u32 reserved5 ;
   u8 data[0U] ;
};
#line 636  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.h"
struct rtl8xxxu_power_base {
   u32 reg_0e00 ;
   u32 reg_0e04 ;
   u32 reg_0e08 ;
   u32 reg_086c ;
   u32 reg_0e10 ;
   u32 reg_0e14 ;
   u32 reg_0e18 ;
   u32 reg_0e1c ;
   u32 reg_0830 ;
   u32 reg_0834 ;
   u32 reg_0838 ;
   u32 reg_086c_2 ;
   u32 reg_083c ;
   u32 reg_0848 ;
   u32 reg_084c ;
   u32 reg_0868 ;
};
#line 661  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.h"
struct rtl8723au_idx {
   int a : 4 ;
   int b : 4 ;
} __attribute__((__packed__));
#line 671  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.h"
struct rtl8723au_efuse {
   __le16 rtl_id ;
   u8 res0[14U] ;
   u8 cck_tx_power_index_A[3U] ;
   u8 cck_tx_power_index_B[3U] ;
   u8 ht40_1s_tx_power_index_A[3U] ;
   u8 ht40_1s_tx_power_index_B[3U] ;
   struct rtl8723au_idx ht20_tx_power_index_diff[3U] ;
   struct rtl8723au_idx ofdm_tx_power_index_diff[3U] ;
   struct rtl8723au_idx ht40_max_power_offset[3U] ;
   struct rtl8723au_idx ht20_max_power_offset[3U] ;
   u8 channel_plan ;
   u8 tssi_a ;
   u8 thermal_meter ;
   u8 rf_regulatory ;
   u8 rf_option_2 ;
   u8 rf_option_3 ;
   u8 rf_option_4 ;
   u8 res7 ;
   u8 version ;
   u8 customer_id_major ;
   u8 customer_id_minor ;
   u8 xtal_k ;
   u8 chipset ;
   u8 res8[130U] ;
   u8 vid ;
   u8 res9 ;
   u8 pid ;
   u8 res10[12U] ;
   u8 mac_addr[6U] ;
   u8 res11[2U] ;
   u8 vendor_name[7U] ;
   u8 res12[2U] ;
   u8 device_name[41U] ;
};
#line 711  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.h"
struct rtl8192cu_efuse {
   __le16 rtl_id ;
   __le16 hpon ;
   u8 res0[2U] ;
   __le16 clk ;
   __le16 testr ;
   __le16 vid ;
   __le16 did ;
   __le16 svid ;
   __le16 smid ;
   u8 res1[4U] ;
   u8 mac_addr[6U] ;
   u8 res2[2U] ;
   u8 vendor_name[7U] ;
   u8 res3[3U] ;
   u8 device_name[20U] ;
   u8 res4[30U] ;
   u8 cck_tx_power_index_A[3U] ;
   u8 cck_tx_power_index_B[3U] ;
   u8 ht40_1s_tx_power_index_A[3U] ;
   u8 ht40_1s_tx_power_index_B[3U] ;
   struct rtl8723au_idx ht40_2s_tx_power_index_diff[3U] ;
   struct rtl8723au_idx ht20_tx_power_index_diff[3U] ;
   struct rtl8723au_idx ofdm_tx_power_index_diff[3U] ;
   struct rtl8723au_idx ht40_max_power_offset[3U] ;
   struct rtl8723au_idx ht20_max_power_offset[3U] ;
   u8 channel_plan ;
   u8 tssi_a ;
   u8 tssi_b ;
   u8 thermal_meter ;
   u8 rf_regulatory ;
   u8 rf_option_2 ;
   u8 rf_option_3 ;
   u8 rf_option_4 ;
   u8 res5[1U] ;
   u8 version ;
   u8 customer_id ;
};
#line 754  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.h"
struct rtl8723bu_pwr_idx {
   int ht20 : 4 ;
   int ht40 : 4 ;
   int ofdm : 4 ;
   int cck : 4 ;
} __attribute__((__packed__));
#line 768  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.h"
struct rtl8723bu_efuse_tx_power {
   u8 cck_base[6U] ;
   u8 ht40_base[5U] ;
   struct rtl8723au_idx ht20_ofdm_1s_diff ;
   struct rtl8723bu_pwr_idx pwr_diff[3U] ;
   u8 dummy5g[24U] ;
};
#line 776  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.h"
struct rtl8723bu_efuse {
   __le16 rtl_id ;
   u8 res0[14U] ;
   struct rtl8723bu_efuse_tx_power tx_power_index_A ;
   struct rtl8723bu_efuse_tx_power tx_power_index_B ;
   struct rtl8723bu_efuse_tx_power tx_power_index_C ;
   struct rtl8723bu_efuse_tx_power tx_power_index_D ;
   u8 channel_plan ;
   u8 xtal_k ;
   u8 thermal_meter ;
   u8 iqk_lck ;
   u8 pa_type ;
   u8 lna_type_2g ;
   u8 res2[3U] ;
   u8 rf_board_option ;
   u8 rf_feature_option ;
   u8 rf_bt_setting ;
   u8 eeprom_version ;
   u8 eeprom_customer_id ;
   u8 res3[2U] ;
   u8 tx_pwr_calibrate_rate ;
   u8 rf_antenna_option ;
   u8 rfe_option ;
   u8 res4[9U] ;
   u8 usb_optional_function ;
   u8 res5[30U] ;
   u8 res6[2U] ;
   u8 serial[11U] ;
   u8 vid ;
   u8 res7 ;
   u8 pid ;
   u8 res8[4U] ;
   u8 mac_addr[6U] ;
   u8 res9[2U] ;
   u8 vendor_name[7U] ;
   u8 res10[2U] ;
   u8 device_name[20U] ;
   u8 res11[207U] ;
   u8 package_type ;
   u8 res12[4U] ;
};
#line 818  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.h"
struct rtl8192eu_efuse_tx_power {
   u8 cck_base[6U] ;
   u8 ht40_base[5U] ;
   struct rtl8723au_idx ht20_ofdm_1s_diff ;
   struct rtl8723bu_pwr_idx pwr_diff[3U] ;
   u8 dummy5g[24U] ;
};
#line 826  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.h"
struct rtl8192eu_efuse {
   __le16 rtl_id ;
   u8 res0[14U] ;
   struct rtl8192eu_efuse_tx_power tx_power_index_A ;
   struct rtl8192eu_efuse_tx_power tx_power_index_B ;
   u8 res2[84U] ;
   u8 channel_plan ;
   u8 xtal_k ;
   u8 thermal_meter ;
   u8 iqk_lck ;
   u8 pa_type ;
   u8 lna_type_2g ;
   u8 res3[1U] ;
   u8 lna_type_5g ;
   u8 res4[1U] ;
   u8 rf_board_option ;
   u8 rf_feature_option ;
   u8 rf_bt_setting ;
   u8 eeprom_version ;
   u8 eeprom_customer_id ;
   u8 res5[3U] ;
   u8 rf_antenna_option ;
   u8 res6[6U] ;
   u8 vid ;
   u8 res7[1U] ;
   u8 pid ;
   u8 res8[1U] ;
   u8 usb_optional_function ;
   u8 res9[2U] ;
   u8 mac_addr[6U] ;
   u8 res10[2U] ;
   u8 vendor_name[7U] ;
   u8 res11[2U] ;
   u8 device_name[11U] ;
   u8 res12[2U] ;
   u8 serial[11U] ;
   u8 res13[48U] ;
   u8 unknown[13U] ;
   u8 res14[195U] ;
};
#line 867  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.h"
struct rtl8xxxu_reg8val {
   u16 reg ;
   u8 val ;
};
#line 872  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.h"
struct rtl8xxxu_reg32val {
   u16 reg ;
   u32 val ;
};
#line 877  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.h"
struct rtl8xxxu_rfregval {
   u8 reg ;
   u32 val ;
};
#line 881 
enum rtl8xxxu_rfpath {
    RF_A = 0,
    RF_B = 1
};
#line 1187 
struct rtl8xxxu_fileops;
#line 1242  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.h"
struct rtl8xxxu_btcoex {
   u8 bt_status ;
   bool bt_busy ;
   bool has_sco ;
   bool has_a2dp ;
   bool has_hid ;
   bool has_pan ;
   bool hid_only ;
   bool a2dp_only ;
   bool c2h_bt_inquiry ;
};
#line 1263  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.h"
union __anonunion_usb_buf_1047 {
   __le32 val32 ;
   __le16 val16 ;
   u8 val8 ;
};
#line 1263  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.h"
union __anonunion_efuse_wifi_1048 {
   u8 raw[512U] ;
   struct rtl8723au_efuse efuse8723 ;
   struct rtl8723bu_efuse efuse8723bu ;
   struct rtl8192cu_efuse efuse8192 ;
   struct rtl8192eu_efuse efuse8192eu ;
};
#line 1263  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.h"
struct rtl8xxxu_priv {
   struct ieee80211_hw *hw ;
   struct usb_device *udev ;
   struct rtl8xxxu_fileops *fops ;
   spinlock_t tx_urb_lock ;
   struct list_head tx_urb_free_list ;
   int tx_urb_free_count ;
   bool tx_stopped ;
   spinlock_t rx_urb_lock ;
   struct list_head rx_urb_pending_list ;
   int rx_urb_pending_count ;
   bool shutdown ;
   struct work_struct rx_urb_wq ;
   u8 mac_addr[6U] ;
   char chip_name[8U] ;
   char chip_vendor[8U] ;
   u8 cck_tx_power_index_A[6U] ;
   u8 cck_tx_power_index_B[6U] ;
   u8 ht40_1s_tx_power_index_A[6U] ;
   u8 ht40_1s_tx_power_index_B[6U] ;
   struct rtl8723au_idx ht40_2s_tx_power_index_diff[3U] ;
   struct rtl8723au_idx ht20_tx_power_index_diff[3U] ;
   struct rtl8723au_idx ofdm_tx_power_index_diff[3U] ;
   struct rtl8723au_idx ht40_max_power_offset[3U] ;
   struct rtl8723au_idx ht20_max_power_offset[3U] ;
   struct rtl8723au_idx ofdm_tx_power_diff[4U] ;
   struct rtl8723au_idx ht20_tx_power_diff[4U] ;
   struct rtl8723au_idx ht40_tx_power_diff[4U] ;
   struct rtl8xxxu_power_base *power_base ;
   u32 chip_cut : 4 ;
   u32 rom_rev : 4 ;
   u32 is_multi_func : 1 ;
   u32 has_wifi : 1 ;
   u32 has_bluetooth : 1 ;
   u32 enable_bluetooth : 1 ;
   u32 has_gps : 1 ;
   u32 hi_pa : 1 ;
   u32 vendor_umc : 1 ;
   u32 vendor_smic : 1 ;
   u32 has_polarity_ctrl : 1 ;
   u32 has_eeprom : 1 ;
   u32 boot_eeprom : 1 ;
   u32 usb_interrupts : 1 ;
   u32 ep_tx_high_queue : 1 ;
   u32 ep_tx_normal_queue : 1 ;
   u32 ep_tx_low_queue : 1 ;
   u32 has_xtalk : 1 ;
   u32 rx_buf_aggregation : 1 ;
   u8 xtalk ;
   unsigned int pipe_interrupt ;
   unsigned int pipe_in ;
   unsigned int pipe_out[20U] ;
   u8 out_ep[4U] ;
   u8 ep_tx_count ;
   u8 rf_paths ;
   u8 rx_paths ;
   u8 tx_paths ;
   u32 rege94 ;
   u32 rege9c ;
   u32 regeb4 ;
   u32 regebc ;
   int next_mbox ;
   int nr_out_eps ;
   struct mutex h2c_mutex ;
   struct usb_anchor rx_anchor ;
   struct usb_anchor tx_anchor ;
   struct usb_anchor int_anchor ;
   struct rtl8xxxu_firmware_header *fw_data ;
   size_t fw_size ;
   struct mutex usb_buf_mutex ;
   union __anonunion_usb_buf_1047 usb_buf ;
   union __anonunion_efuse_wifi_1048 efuse_wifi ;
   u32 adda_backup[16U] ;
   u32 mac_backup[4U] ;
   u32 bb_backup[9U] ;
   u32 bb_recovery_backup[9U] ;
   enum rtl8xxxu_rtl_chip rtl_chip ;
   u8 pi_enabled : 1 ;
   u8 no_pape : 1 ;
   u8 int_buf[56U] ;
   u8 rssi_level ;
   struct ieee80211_vif *vif ;
   struct delayed_work ra_watchdog ;
   struct work_struct c2hcmd_work ;
   struct sk_buff_head c2hcmd_queue ;
   spinlock_t c2hcmd_lock ;
   struct rtl8xxxu_btcoex bt_coex ;
};
#line 1392  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.h"
struct rtl8xxxu_fileops {
   int (*parse_efuse)(struct rtl8xxxu_priv *) ;
   int (*load_firmware)(struct rtl8xxxu_priv *) ;
   int (*power_on)(struct rtl8xxxu_priv *) ;
   void (*power_off)(struct rtl8xxxu_priv *) ;
   void (*reset_8051)(struct rtl8xxxu_priv *) ;
   int (*llt_init)(struct rtl8xxxu_priv *) ;
   void (*init_phy_bb)(struct rtl8xxxu_priv *) ;
   int (*init_phy_rf)(struct rtl8xxxu_priv *) ;
   void (*phy_init_antenna_selection)(struct rtl8xxxu_priv *) ;
   void (*phy_iq_calibrate)(struct rtl8xxxu_priv *) ;
   void (*config_channel)(struct ieee80211_hw *) ;
   int (*parse_rx_desc)(struct rtl8xxxu_priv *, struct sk_buff *) ;
   void (*init_aggregation)(struct rtl8xxxu_priv *) ;
   void (*init_statistics)(struct rtl8xxxu_priv *) ;
   void (*enable_rf)(struct rtl8xxxu_priv *) ;
   void (*disable_rf)(struct rtl8xxxu_priv *) ;
   void (*usb_quirks)(struct rtl8xxxu_priv *) ;
   void (*set_tx_power)(struct rtl8xxxu_priv *, int , bool ) ;
   void (*update_rate_mask)(struct rtl8xxxu_priv *, u32 , u8 , int ) ;
   void (*report_connect)(struct rtl8xxxu_priv *, u8 , bool ) ;
   void (*fill_txdesc)(struct ieee80211_hw *, struct ieee80211_hdr *, struct ieee80211_tx_info *, struct rtl8xxxu_txdesc32 *, bool , bool , bool , u32 ) ;
   int writeN_block_size ;
   int rx_agg_buf_size ;
   char tx_desc_size ;
   char rx_desc_size ;
   u8 has_s0s1 : 1 ;
   u8 has_tx_report : 1 ;
   u8 gen2_thermal_meter : 1 ;
   u8 needs_full_init : 1 ;
   u32 adda_1t_init ;
   u32 adda_1t_path_on ;
   u32 adda_2t_path_on_a ;
   u32 adda_2t_path_on_b ;
   u16 trxff_boundary ;
   u8 pbp_rx ;
   u8 pbp_tx ;
   struct rtl8xxxu_reg8val *mactable ;
   u8 total_page_num ;
   u8 page_num_hi ;
   u8 page_num_lo ;
   u8 page_num_norm ;
};
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/types.h"
typedef __u64 __le64;
#line 66  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
union __anonunion___u_2109 {
   struct list_head *__val ;
   char __c[1U] ;
};
#line 106  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
union __anonunion___u_2111 {
   struct list_head *__val ;
   char __c[1U] ;
};
#line 268  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
union __anonunion___u_2113 {
   struct list_head *__val ;
   char __c[1U] ;
};
#line 31  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/device.h"
struct firmware;
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 121  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mod_devicetable.h"
struct usb_device_id {
   __u16 match_flags ;
   __u16 idVendor ;
   __u16 idProduct ;
   __u16 bcdDevice_lo ;
   __u16 bcdDevice_hi ;
   __u8 bDeviceClass ;
   __u8 bDeviceSubClass ;
   __u8 bDeviceProtocol ;
   __u8 bInterfaceClass ;
   __u8 bInterfaceSubClass ;
   __u8 bInterfaceProtocol ;
   __u8 bInterfaceNumber ;
   kernel_ulong_t driver_info ;
};
#line 280  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pm_runtime.h"
struct usb_driver;
#line 1090  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb_dynids {
   spinlock_t lock ;
   struct list_head list ;
};
#line 1112  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usbdrv_wrap {
   struct device_driver driver ;
   int for_devices ;
};
#line 1183  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb_driver {
   char *name ;
   int (*probe)(struct usb_interface *, struct usb_device_id *) ;
   void (*disconnect)(struct usb_interface *) ;
   int (*unlocked_ioctl)(struct usb_interface *, unsigned int , void *) ;
   int (*suspend)(struct usb_interface *, pm_message_t ) ;
   int (*resume)(struct usb_interface *) ;
   int (*reset_resume)(struct usb_interface *) ;
   int (*pre_reset)(struct usb_interface *) ;
   int (*post_reset)(struct usb_interface *) ;
   struct usb_device_id *id_table ;
   struct attribute_group **dev_groups ;
   struct usb_dynids dynids ;
   struct usbdrv_wrap drvwrap ;
   unsigned int no_dynamic_id : 1 ;
   unsigned int supports_autosuspend : 1 ;
   unsigned int disable_hub_initiated_lpm : 1 ;
   unsigned int soft_unbind : 1 ;
};
#line 1340  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb_iso_packet_descriptor {
   unsigned int offset ;
   unsigned int length ;
   unsigned int actual_length ;
   int status ;
};
#line 1346 
struct urb;
#line 1550  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct urb {
   struct kref kref ;
   int unlinked ;
   void *hcpriv ;
   atomic_t use_count ;
   atomic_t reject ;
   struct list_head urb_list ;
   struct list_head anchor_list ;
   struct usb_anchor *anchor ;
   struct usb_device *dev ;
   struct usb_host_endpoint *ep ;
   unsigned int pipe ;
   unsigned int stream_id ;
   int status ;
   unsigned int transfer_flags ;
   void *transfer_buffer ;
   dma_addr_t transfer_dma ;
   struct scatterlist *sg ;
   int num_mapped_sgs ;
   int num_sgs ;
   u32 transfer_buffer_length ;
   u32 actual_length ;
   unsigned char *setup_packet ;
   dma_addr_t setup_dma ;
   int start_frame ;
   int number_of_packets ;
   int interval ;
   int error_count ;
   void *context ;
   void (*complete)(struct urb *) ;
   struct usb_iso_packet_descriptor iso_frame_desc[0U] ;
};
#line 1867  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion___u_2647 {
   struct sk_buff *__val ;
   char __c[1U] ;
};
#line 1868  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion___u_2649 {
   struct sk_buff *__val ;
   char __c[1U] ;
};
#line 1869  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion___u_2651 {
   struct sk_buff *__val ;
   char __c[1U] ;
};
#line 1870  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion___u_2653 {
   struct sk_buff *__val ;
   char __c[1U] ;
};
#line 2026  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion___u_2663 {
   struct sk_buff *__val ;
   char __c[1U] ;
};
#line 2027  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion___u_2665 {
   struct sk_buff *__val ;
   char __c[1U] ;
};
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/firmware.h"
struct firmware {
   size_t size ;
   u8 *data ;
   struct page **pages ;
   void *priv ;
};
#line 706  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct ieee80211_msrment_ie {
   u8 token ;
   u8 mode ;
   u8 type ;
   u8 request[0U] ;
} __attribute__((__packed__));
#line 729  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct ieee80211_ext_chansw_ie {
   u8 mode ;
   u8 new_operating_class ;
   u8 new_ch_num ;
   u8 count ;
} __attribute__((__packed__));
#line 879  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct ieee80211_tpc_report_ie {
   u8 tx_power ;
   u8 link_margin ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_auth_2796 {
   __le16 auth_alg ;
   __le16 auth_transaction ;
   __le16 status_code ;
   u8 variable[0U] ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_deauth_2797 {
   __le16 reason_code ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_assoc_req_2798 {
   __le16 capab_info ;
   __le16 listen_interval ;
   u8 variable[0U] ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_assoc_resp_2799 {
   __le16 capab_info ;
   __le16 status_code ;
   __le16 aid ;
   u8 variable[0U] ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_reassoc_resp_2800 {
   __le16 capab_info ;
   __le16 status_code ;
   __le16 aid ;
   u8 variable[0U] ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_reassoc_req_2801 {
   __le16 capab_info ;
   __le16 listen_interval ;
   u8 current_ap[6U] ;
   u8 variable[0U] ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_disassoc_2802 {
   __le16 reason_code ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_beacon_2803 {
   __le64 timestamp ;
   __le16 beacon_int ;
   __le16 capab_info ;
   u8 variable[0U] ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_probe_req_2804 {
   u8 variable[0U] ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_probe_resp_2805 {
   __le64 timestamp ;
   __le16 beacon_int ;
   __le16 capab_info ;
   u8 variable[0U] ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_wme_action_2808 {
   u8 action_code ;
   u8 dialog_token ;
   u8 status_code ;
   u8 variable[0U] ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_chan_switch_2809 {
   u8 action_code ;
   u8 variable[0U] ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_ext_chan_switch_2810 {
   u8 action_code ;
   struct ieee80211_ext_chansw_ie data ;
   u8 variable[0U] ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_measurement_2811 {
   u8 action_code ;
   u8 dialog_token ;
   u8 element_id ;
   u8 length ;
   struct ieee80211_msrment_ie msr_elem ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_addba_req_2812 {
   u8 action_code ;
   u8 dialog_token ;
   __le16 capab ;
   __le16 timeout ;
   __le16 start_seq_num ;
   u8 variable[0U] ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_addba_resp_2813 {
   u8 action_code ;
   u8 dialog_token ;
   __le16 status ;
   __le16 capab ;
   __le16 timeout ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_delba_2814 {
   u8 action_code ;
   __le16 params ;
   __le16 reason_code ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_self_prot_2815 {
   u8 action_code ;
   u8 variable[0U] ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_mesh_action_2816 {
   u8 action_code ;
   u8 variable[0U] ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_sa_query_2817 {
   u8 action ;
   u8 trans_id[2U] ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_ht_smps_2818 {
   u8 action ;
   u8 smps_control ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_ht_notify_cw_2819 {
   u8 action_code ;
   u8 chanwidth ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_tdls_discover_resp_2820 {
   u8 action_code ;
   u8 dialog_token ;
   __le16 capability ;
   u8 variable[0U] ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_vht_opmode_notif_2821 {
   u8 action_code ;
   u8 operating_mode ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_vht_group_notif_2822 {
   u8 action_code ;
   u8 membership[8U] ;
   u8 position[16U] ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_tpc_report_2823 {
   u8 action_code ;
   u8 dialog_token ;
   u8 tpc_elem_id ;
   u8 tpc_elem_length ;
   struct ieee80211_tpc_report_ie tpc ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_ftm_2824 {
   u8 action_code ;
   u8 dialog_token ;
   u8 follow_up ;
   u8 tod[6U] ;
   u8 toa[6U] ;
   __le16 tod_error ;
   __le16 toa_error ;
   u8 variable[0U] ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
union __anonunion_u_2807 {
   struct __anonstruct_wme_action_2808 wme_action ;
   struct __anonstruct_chan_switch_2809 chan_switch ;
   struct __anonstruct_ext_chan_switch_2810 ext_chan_switch ;
   struct __anonstruct_measurement_2811 measurement ;
   struct __anonstruct_addba_req_2812 addba_req ;
   struct __anonstruct_addba_resp_2813 addba_resp ;
   struct __anonstruct_delba_2814 delba ;
   struct __anonstruct_self_prot_2815 self_prot ;
   struct __anonstruct_mesh_action_2816 mesh_action ;
   struct __anonstruct_sa_query_2817 sa_query ;
   struct __anonstruct_ht_smps_2818 ht_smps ;
   struct __anonstruct_ht_notify_cw_2819 ht_notify_cw ;
   struct __anonstruct_tdls_discover_resp_2820 tdls_discover_resp ;
   struct __anonstruct_vht_opmode_notif_2821 vht_opmode_notif ;
   struct __anonstruct_vht_group_notif_2822 vht_group_notif ;
   struct __anonstruct_tpc_report_2823 tpc_report ;
   struct __anonstruct_ftm_2824 ftm ;
};
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_action_2806 {
   u8 category ;
   union __anonunion_u_2807 u ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
union __anonunion_u_2795 {
   struct __anonstruct_auth_2796 auth ;
   struct __anonstruct_deauth_2797 deauth ;
   struct __anonstruct_assoc_req_2798 assoc_req ;
   struct __anonstruct_assoc_resp_2799 assoc_resp ;
   struct __anonstruct_reassoc_resp_2800 reassoc_resp ;
   struct __anonstruct_reassoc_req_2801 reassoc_req ;
   struct __anonstruct_disassoc_2802 disassoc ;
   struct __anonstruct_beacon_2803 beacon ;
   struct __anonstruct_probe_req_2804 probe_req ;
   struct __anonstruct_probe_resp_2805 probe_resp ;
   struct __anonstruct_action_2806 action ;
};
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct ieee80211_mgmt {
   __le16 frame_control ;
   __le16 duration ;
   u8 da[6U] ;
   u8 sa[6U] ;
   u8 bssid[6U] ;
   __le16 seq_ctrl ;
   union __anonunion_u_2795 u ;
} __attribute__((__packed__, __aligned__(2)));
#line 1656  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct ieee80211_he_mu_edca_param_ac_rec {
   u8 aifsn ;
   u8 ecw_min_max ;
   u8 mu_edca_timer ;
} __attribute__((__packed__));
#line 3039  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/nl80211.h"
struct nl80211_sta_flag_update {
   __u32 mask ;
   __u32 set ;
} __attribute__((__packed__));
#line 3362 
enum nl80211_mesh_power_mode {
    NL80211_MESH_POWER_UNKNOWN = 0,
    NL80211_MESH_POWER_ACTIVE = 1,
    NL80211_MESH_POWER_LIGHT_SLEEP = 2,
    NL80211_MESH_POWER_DEEP_SLEEP = 3,
    __NL80211_MESH_POWER_AFTER_LAST = 4,
    NL80211_MESH_POWER_MAX = 3
};
#line 4593 
enum nl80211_txrate_gi {
    NL80211_TXRATE_DEFAULT_GI = 0,
    NL80211_TXRATE_FORCE_SGI = 1,
    NL80211_TXRATE_FORCE_LGI = 2
};
#line 5133 
enum nl80211_ext_feature_index {
    NL80211_EXT_FEATURE_VHT_IBSS = 0,
    NL80211_EXT_FEATURE_RRM = 1,
    NL80211_EXT_FEATURE_MU_MIMO_AIR_SNIFFER = 2,
    NL80211_EXT_FEATURE_SCAN_START_TIME = 3,
    NL80211_EXT_FEATURE_BSS_PARENT_TSF = 4,
    NL80211_EXT_FEATURE_SET_SCAN_DWELL = 5,
    NL80211_EXT_FEATURE_BEACON_RATE_LEGACY = 6,
    NL80211_EXT_FEATURE_BEACON_RATE_HT = 7,
    NL80211_EXT_FEATURE_BEACON_RATE_VHT = 8,
    NL80211_EXT_FEATURE_FILS_STA = 9,
    NL80211_EXT_FEATURE_MGMT_TX_RANDOM_TA = 10,
    NL80211_EXT_FEATURE_MGMT_TX_RANDOM_TA_CONNECTED = 11,
    NL80211_EXT_FEATURE_SCHED_SCAN_RELATIVE_RSSI = 12,
    NL80211_EXT_FEATURE_CQM_RSSI_LIST = 13,
    NL80211_EXT_FEATURE_FILS_SK_OFFLOAD = 14,
    NL80211_EXT_FEATURE_4WAY_HANDSHAKE_STA_PSK = 15,
    NL80211_EXT_FEATURE_4WAY_HANDSHAKE_STA_1X = 16,
    NL80211_EXT_FEATURE_FILS_MAX_CHANNEL_TIME = 17,
    NL80211_EXT_FEATURE_ACCEPT_BCAST_PROBE_RESP = 18,
    NL80211_EXT_FEATURE_OCE_PROBE_REQ_HIGH_TX_RATE = 19,
    NL80211_EXT_FEATURE_OCE_PROBE_REQ_DEFERRAL_SUPPRESSION = 20,
    NL80211_EXT_FEATURE_MFP_OPTIONAL = 21,
    NL80211_EXT_FEATURE_LOW_SPAN_SCAN = 22,
    NL80211_EXT_FEATURE_LOW_POWER_SCAN = 23,
    NL80211_EXT_FEATURE_HIGH_ACCURACY_SCAN = 24,
    NL80211_EXT_FEATURE_DFS_OFFLOAD = 25,
    NL80211_EXT_FEATURE_CONTROL_PORT_OVER_NL80211 = 26,
    NL80211_EXT_FEATURE_ACK_SIGNAL_SUPPORT = 27,
    NL80211_EXT_FEATURE_DATA_ACK_SIGNAL_SUPPORT = 27,
    NL80211_EXT_FEATURE_TXQS = 28,
    NL80211_EXT_FEATURE_SCAN_RANDOM_SN = 29,
    NL80211_EXT_FEATURE_SCAN_MIN_PREQ_CONTENT = 30,
    NL80211_EXT_FEATURE_CAN_REPLACE_PTK0 = 31,
    NL80211_EXT_FEATURE_ENABLE_FTM_RESPONDER = 32,
    NL80211_EXT_FEATURE_AIRTIME_FAIRNESS = 33,
    NL80211_EXT_FEATURE_AP_PMKSA_CACHING = 34,
    NL80211_EXT_FEATURE_SCHED_SCAN_BAND_SPECIFIC_RSSI_THOLD = 35,
    NL80211_EXT_FEATURE_EXT_KEY_ID = 36,
    NL80211_EXT_FEATURE_STA_TX_PWR = 37,
    NL80211_EXT_FEATURE_SAE_OFFLOAD = 38,
    NL80211_EXT_FEATURE_VLAN_OFFLOAD = 39,
    NL80211_EXT_FEATURE_AQL = 40,
    NUM_NL80211_EXT_FEATURES = 41,
    MAX_NL80211_EXT_FEATURES = 40
};
#line 5912 
enum nl80211_nan_function_type {
    NL80211_NAN_FUNC_PUBLISH = 0,
    NL80211_NAN_FUNC_SUBSCRIBE = 1,
    NL80211_NAN_FUNC_FOLLOW_UP = 2,
    __NL80211_NAN_FUNC_TYPE_AFTER_LAST = 3,
    NL80211_NAN_FUNC_MAX_TYPE = 2
};
#line 6001 
enum nl80211_preamble {
    NL80211_PREAMBLE_LEGACY = 0,
    NL80211_PREAMBLE_HT = 1,
    NL80211_PREAMBLE_VHT = 2,
    NL80211_PREAMBLE_DMG = 3
};
#line 811  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct survey_info {
   struct ieee80211_channel *channel ;
   u64 time ;
   u64 time_busy ;
   u64 time_ext_busy ;
   u64 time_rx ;
   u64 time_tx ;
   u64 time_scan ;
   u64 time_bss_rx ;
   u32 filled ;
   s8 noise ;
};
#line 940  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct __anonstruct_control_2836 {
   u32 legacy ;
   u8 ht_mcs[10U] ;
   u16 vht_mcs[8U] ;
   enum nl80211_txrate_gi gi ;
};
#line 940  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_bitrate_mask {
   struct __anonstruct_control_2836 control[4U] ;
};
#line 1314  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct rate_info {
   u8 flags ;
   u8 mcs ;
   u16 legacy ;
   u8 nss ;
   u8 bw ;
   u8 he_gi ;
   u8 he_dcm ;
   u8 he_ru_alloc ;
   u8 n_bonded_ch ;
};
#line 1351  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct sta_bss_parameters {
   u8 flags ;
   u8 dtim_period ;
   u16 beacon_interval ;
};
#line 1373  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_txq_stats {
   u32 filled ;
   u32 backlog_bytes ;
   u32 backlog_packets ;
   u32 flows ;
   u32 drops ;
   u32 ecn_marks ;
   u32 overlimit ;
   u32 overmemory ;
   u32 collisions ;
   u32 tx_bytes ;
   u32 tx_packets ;
   u32 max_flows ;
};
#line 1399  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_tid_stats {
   u32 filled ;
   u64 rx_msdu ;
   u64 tx_msdu ;
   u64 tx_msdu_retries ;
   u64 tx_msdu_failed ;
   struct cfg80211_txq_stats txq_stats ;
};
#line 1476  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct station_info {
   u64 filled ;
   u32 connected_time ;
   u32 inactive_time ;
   u64 assoc_at ;
   u64 rx_bytes ;
   u64 tx_bytes ;
   u16 llid ;
   u16 plid ;
   u8 plink_state ;
   s8 signal ;
   s8 signal_avg ;
   u8 chains ;
   s8 chain_signal[4U] ;
   s8 chain_signal_avg[4U] ;
   struct rate_info txrate ;
   struct rate_info rxrate ;
   u32 rx_packets ;
   u32 tx_packets ;
   u32 tx_retries ;
   u32 tx_failed ;
   u32 rx_dropped_misc ;
   struct sta_bss_parameters bss_param ;
   struct nl80211_sta_flag_update sta_flags ;
   int generation ;
   u8 *assoc_req_ies ;
   size_t assoc_req_ies_len ;
   u32 beacon_loss_count ;
   s64 t_offset ;
   enum nl80211_mesh_power_mode local_pm ;
   enum nl80211_mesh_power_mode peer_pm ;
   enum nl80211_mesh_power_mode nonpeer_pm ;
   u32 expected_throughput ;
   u64 tx_duration ;
   u64 rx_duration ;
   u64 rx_beacon ;
   u8 rx_beacon_signal_avg ;
   u8 connected_to_gate ;
   struct cfg80211_tid_stats *pertid ;
   s8 ack_signal ;
   s8 avg_ack_signal ;
   u16 airtime_weight ;
   u32 rx_mpdu_count ;
   u32 fcs_err_count ;
   u32 airtime_link_metric ;
};
#line 1899  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_scan_info {
   u64 scan_start_tsf ;
   u8 tsf_bssid[6U] ;
   bool aborted ;
};
#line 1934  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_scan_request {
   struct cfg80211_ssid *ssids ;
   int n_ssids ;
   u32 n_channels ;
   enum nl80211_bss_scan_width scan_width ;
   u8 *ie ;
   size_t ie_len ;
   u16 duration ;
   bool duration_mandatory ;
   u32 flags ;
   u32 rates[4U] ;
   struct wireless_dev *wdev ;
   u8 mac_addr[6U] ;
   u8 mac_addr_mask[6U] ;
   u8 bssid[6U] ;
   struct wiphy *wiphy ;
   unsigned long scan_start ;
   struct cfg80211_scan_info info ;
   bool notified ;
   bool no_cck ;
   struct ieee80211_channel *channels[0U] ;
};
#line 2821  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_gtk_rekey_data {
   u8 *kek ;
   u8 *kck ;
   u8 *replay_ctr ;
};
#line 2921  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_nan_conf {
   u8 master_pref ;
   u8 bands ;
};
#line 2944  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_nan_func_filter {
   u8 *filter ;
   u8 len ;
};
#line 2978  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_nan_func {
   enum nl80211_nan_function_type type ;
   u8 service_id[6U] ;
   u8 publish_type ;
   bool close_range ;
   bool publish_bcast ;
   bool subscribe_active ;
   u8 followup_id ;
   u8 followup_reqid ;
   struct mac_address followup_dest ;
   u32 ttl ;
   u8 *serv_spec_info ;
   u8 serv_spec_info_len ;
   bool srf_include ;
   u8 *srf_bf ;
   u8 srf_bf_len ;
   u8 srf_bf_idx ;
   struct mac_address *srf_macs ;
   int srf_num_macs ;
   struct cfg80211_nan_func_filter *rx_filters ;
   struct cfg80211_nan_func_filter *tx_filters ;
   u8 num_tx_filters ;
   u8 num_rx_filters ;
   u8 instance_id ;
   u64 cookie ;
};
#line 3072  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_ftm_responder_stats {
   u32 filled ;
   u32 success_num ;
   u32 partial_num ;
   u32 failed_num ;
   u32 asap_num ;
   u32 non_asap_num ;
   u64 total_duration_ms ;
   u32 unknown_triggers_num ;
   u32 reschedule_requests_num ;
   u32 out_of_window_triggers_num ;
};
#line 3210  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_pmsr_ftm_request_peer {
   enum nl80211_preamble preamble ;
   u16 burst_period ;
   u8 requested : 1 ;
   u8 asap : 1 ;
   u8 request_lci : 1 ;
   u8 request_civicloc : 1 ;
   u8 num_bursts_exp ;
   u8 burst_duration ;
   u8 ftms_per_burst ;
   u8 ftmr_retries ;
};
#line 3230  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_pmsr_request_peer {
   u8 addr[6U] ;
   struct cfg80211_chan_def chandef ;
   u8 report_ap_tsf : 1 ;
   struct cfg80211_pmsr_ftm_request_peer ftm ;
};
#line 3253  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_pmsr_request {
   u64 cookie ;
   void *drv_data ;
   u32 n_peers ;
   u32 nl_portid ;
   u32 timeout ;
   u8 mac_addr[6U] ;
   u8 mac_addr_mask[6U] ;
   struct list_head list ;
   struct cfg80211_pmsr_request_peer peers[] ;
};
#line 173  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_tx_queue_params {
   u16 txop ;
   u16 cw_min ;
   u16 cw_max ;
   u8 aifs ;
   bool acm ;
   bool uapsd ;
   bool mu_edca ;
   struct ieee80211_he_mu_edca_param_ac_rec mu_edca_param_rec ;
};
#line 184  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_low_level_stats {
   unsigned int dot11ACKFailureCount ;
   unsigned int dot11RTSFailureCount ;
   unsigned int dot11FCSErrorCount ;
   unsigned int dot11RTSSuccessCount ;
};
#line 235 
enum ieee80211_chanctx_switch_mode {
    CHANCTX_SWMODE_REASSIGN_VIF = 0,
    CHANCTX_SWMODE_SWAP_CONTEXTS = 1
};
#line 267  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_vif_chanctx_switch {
   struct ieee80211_vif *vif ;
   struct ieee80211_chanctx_conf *old_ctx ;
   struct ieee80211_chanctx_conf *new_ctx ;
};
#line 304 
enum ieee80211_event_type {
    RSSI_EVENT = 0,
    MLME_EVENT = 1,
    BAR_RX_EVENT = 2,
    BA_FRAME_TIMEOUT = 3
};
#line 311 
enum ieee80211_rssi_event_data {
    RSSI_EVENT_HIGH = 0,
    RSSI_EVENT_LOW = 1
};
#line 392  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_rssi_event {
   enum ieee80211_rssi_event_data data ;
};
#line 395 
enum ieee80211_mlme_event_data {
    AUTH_EVENT = 0,
    ASSOC_EVENT = 1,
    DEAUTH_RX_EVENT = 2,
    DEAUTH_TX_EVENT = 3
};
#line 402 
enum ieee80211_mlme_event_status {
    MLME_SUCCESS = 0,
    MLME_DENIED = 1,
    MLME_TIMEOUT = 2
};
#line 428  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_mlme_event {
   enum ieee80211_mlme_event_data data ;
   enum ieee80211_mlme_event_status status ;
   u16 reason ;
};
#line 440  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_ba_event {
   struct ieee80211_sta *sta ;
   u16 tid ;
   u16 ssn ;
};
#line 454  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
union __anonunion_u_3105 {
   struct ieee80211_rssi_event rssi ;
   struct ieee80211_mlme_event mlme ;
   struct ieee80211_ba_event ba ;
};
#line 454  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_event {
   enum ieee80211_event_type type ;
   union __anonunion_u_3105 u ;
};
#line 1106  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_scan_ies {
   u8 *ies[4U] ;
   size_t len[4U] ;
   u8 *common_ies ;
   size_t common_ie_len ;
};
#line 1119 
struct ieee80211_rx_status;
#line 1358  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_rx_status {
   u64 mactime ;
   u64 boottime_ns ;
   u32 device_timestamp ;
   u32 ampdu_reference ;
   u32 flag ;
   u16 freq ;
   u8 enc_flags ;
   u8 encoding : 2 ;
   u8 bw : 3 ;
   u8 he_ru : 3 ;
   u8 he_gi : 2 ;
   u8 he_dcm : 1 ;
   u8 rate_idx ;
   u8 nss ;
   u8 rx_flags ;
   u8 band ;
   u8 antenna ;
   s8 signal ;
   u8 chains ;
   s8 chain_signal[4U] ;
   u8 ampdu_delimiter_crc ;
   u8 zero_length_psdu_type ;
};
#line 1556  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_channel_switch {
   u64 timestamp ;
   u32 device_timestamp ;
   bool block_tx ;
   struct cfg80211_chan_def chandef ;
   u8 count ;
   u32 delay ;
};
#line 1803  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct __anonstruct_tkip_3114 {
   u32 iv32 ;
   u16 iv16 ;
};
#line 1803  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct __anonstruct_ccmp_3115 {
   u8 pn[6U] ;
};
#line 1803  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct __anonstruct_aes_cmac_3116 {
   u8 pn[6U] ;
};
#line 1803  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct __anonstruct_aes_gmac_3117 {
   u8 pn[6U] ;
};
#line 1803  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct __anonstruct_gcmp_3118 {
   u8 pn[6U] ;
};
#line 1803  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct __anonstruct_hw_3119 {
   u8 seq[16U] ;
   u8 seq_len ;
};
#line 1803  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
union __anonunion_3113 {
   struct __anonstruct_tkip_3114 tkip ;
   struct __anonstruct_ccmp_3115 ccmp ;
   struct __anonstruct_aes_cmac_3116 aes_cmac ;
   struct __anonstruct_aes_gmac_3117 aes_gmac ;
   struct __anonstruct_gcmp_3118 gcmp ;
   struct __anonstruct_hw_3119 hw ;
};
#line 1803  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_key_seq {
   union __anonunion_3113 __anonCompField_ieee80211_key_seq_196 ;
};
#line 1857 
enum set_key_cmd {
    SET_KEY = 0,
    DISABLE_KEY = 1
};
#line 1862 
enum ieee80211_sta_state {
    IEEE80211_STA_NOTEXIST = 0,
    IEEE80211_STA_NONE = 1,
    IEEE80211_STA_AUTH = 2,
    IEEE80211_STA_ASSOC = 3,
    IEEE80211_STA_AUTHORIZED = 4
};
#line 2037 
enum sta_notify_cmd {
    STA_NOTIFY_SLEEP = 0,
    STA_NOTIFY_AWAKE = 1
};
#line 2057  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_tx_control {
   struct ieee80211_sta *sta ;
};
#line 2083 
enum ieee80211_hw_flags {
    IEEE80211_HW_HAS_RATE_CONTROL = 0,
    IEEE80211_HW_RX_INCLUDES_FCS = 1,
    IEEE80211_HW_HOST_BROADCAST_PS_BUFFERING = 2,
    IEEE80211_HW_SIGNAL_UNSPEC = 3,
    IEEE80211_HW_SIGNAL_DBM = 4,
    IEEE80211_HW_NEED_DTIM_BEFORE_ASSOC = 5,
    IEEE80211_HW_SPECTRUM_MGMT = 6,
    IEEE80211_HW_AMPDU_AGGREGATION = 7,
    IEEE80211_HW_SUPPORTS_PS = 8,
    IEEE80211_HW_PS_NULLFUNC_STACK = 9,
    IEEE80211_HW_SUPPORTS_DYNAMIC_PS = 10,
    IEEE80211_HW_MFP_CAPABLE = 11,
    IEEE80211_HW_WANT_MONITOR_VIF = 12,
    IEEE80211_HW_NO_AUTO_VIF = 13,
    IEEE80211_HW_SW_CRYPTO_CONTROL = 14,
    IEEE80211_HW_SUPPORT_FAST_XMIT = 15,
    IEEE80211_HW_REPORTS_TX_ACK_STATUS = 16,
    IEEE80211_HW_CONNECTION_MONITOR = 17,
    IEEE80211_HW_QUEUE_CONTROL = 18,
    IEEE80211_HW_SUPPORTS_PER_STA_GTK = 19,
    IEEE80211_HW_AP_LINK_PS = 20,
    IEEE80211_HW_TX_AMPDU_SETUP_IN_HW = 21,
    IEEE80211_HW_SUPPORTS_RC_TABLE = 22,
    IEEE80211_HW_P2P_DEV_ADDR_FOR_INTF = 23,
    IEEE80211_HW_TIMING_BEACON_ONLY = 24,
    IEEE80211_HW_SUPPORTS_HT_CCK_RATES = 25,
    IEEE80211_HW_CHANCTX_STA_CSA = 26,
    IEEE80211_HW_SUPPORTS_CLONED_SKBS = 27,
    IEEE80211_HW_SINGLE_SCAN_ON_ALL_BANDS = 28,
    IEEE80211_HW_TDLS_WIDER_BW = 29,
    IEEE80211_HW_SUPPORTS_AMSDU_IN_AMPDU = 30,
    IEEE80211_HW_BEACON_TX_STATUS = 31,
    IEEE80211_HW_NEEDS_UNIQUE_STA_ADDR = 32,
    IEEE80211_HW_SUPPORTS_REORDERING_BUFFER = 33,
    IEEE80211_HW_USES_RSS = 34,
    IEEE80211_HW_TX_AMSDU = 35,
    IEEE80211_HW_TX_FRAG_LIST = 36,
    IEEE80211_HW_REPORTS_LOW_ACK = 37,
    IEEE80211_HW_SUPPORTS_TX_FRAG = 38,
    IEEE80211_HW_SUPPORTS_TDLS_BUFFER_STA = 39,
    IEEE80211_HW_DEAUTH_NEED_MGD_TX_PREP = 40,
    IEEE80211_HW_DOESNT_SUPPORT_QOS_NDP = 41,
    IEEE80211_HW_BUFF_MMPDU_TXQ = 42,
    IEEE80211_HW_SUPPORTS_VHT_EXT_NSS_BW = 43,
    IEEE80211_HW_STA_MMPDU_TXQ = 44,
    IEEE80211_HW_TX_STATUS_NO_AMPDU_LEN = 45,
    IEEE80211_HW_SUPPORTS_MULTI_BSSID = 46,
    IEEE80211_HW_SUPPORTS_ONLY_HE_MULTI_BSSID = 47,
    IEEE80211_HW_AMPDU_KEYBORDER_SUPPORT = 48,
    NUM_IEEE80211_HW_FLAGS = 49
};
#line 2546  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_scan_request {
   struct ieee80211_scan_ies ies ;
   struct cfg80211_scan_request req ;
};
#line 2566  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_tdls_ch_sw_params {
   struct ieee80211_sta *sta ;
   struct cfg80211_chan_def *chandef ;
   u8 action_code ;
   u32 status ;
   u32 timestamp ;
   u16 switch_time ;
   u16 switch_timeout ;
   struct sk_buff *tmpl_skb ;
   u32 ch_sw_tm_ie ;
};
#line 2662 
enum ieee80211_ampdu_mlme_action {
    IEEE80211_AMPDU_RX_START = 0,
    IEEE80211_AMPDU_RX_STOP = 1,
    IEEE80211_AMPDU_TX_START = 2,
    IEEE80211_AMPDU_TX_STOP_CONT = 3,
    IEEE80211_AMPDU_TX_STOP_FLUSH = 4,
    IEEE80211_AMPDU_TX_STOP_FLUSH_CONT = 5,
    IEEE80211_AMPDU_TX_OPERATIONAL = 6
};
#line 3161  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_ampdu_params {
   enum ieee80211_ampdu_mlme_action action ;
   struct ieee80211_sta *sta ;
   u16 tid ;
   u16 ssn ;
   u16 buf_size ;
   bool amsdu ;
   u16 timeout ;
};
#line 3170 
enum ieee80211_frame_release_type {
    IEEE80211_FRAME_RELEASE_PSPOLL = 0,
    IEEE80211_FRAME_RELEASE_UAPSD = 1
};
#line 3182 
enum ieee80211_roc_type {
    IEEE80211_ROC_TYPE_NORMAL = 0,
    IEEE80211_ROC_TYPE_MGMT_TX = 1
};
#line 3187 
enum ieee80211_reconfig_type {
    IEEE80211_RECONFIG_TYPE_RESTART = 0,
    IEEE80211_RECONFIG_TYPE_SUSPEND = 1
};
#line 3778  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_ops {
   void (*tx)(struct ieee80211_hw *, struct ieee80211_tx_control *, struct sk_buff *) ;
   int (*start)(struct ieee80211_hw *) ;
   void (*stop)(struct ieee80211_hw *) ;
   int (*suspend)(struct ieee80211_hw *, struct cfg80211_wowlan *) ;
   int (*resume)(struct ieee80211_hw *) ;
   void (*set_wakeup)(struct ieee80211_hw *, bool ) ;
   int (*add_interface)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   int (*change_interface)(struct ieee80211_hw *, struct ieee80211_vif *, enum nl80211_iftype , bool ) ;
   void (*remove_interface)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   int (*config)(struct ieee80211_hw *, u32 ) ;
   void (*bss_info_changed)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_bss_conf *, u32 ) ;
   int (*start_ap)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   void (*stop_ap)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   u64 (*prepare_multicast)(struct ieee80211_hw *, struct netdev_hw_addr_list *) ;
   void (*configure_filter)(struct ieee80211_hw *, unsigned int , unsigned int *, u64 ) ;
   void (*config_iface_filter)(struct ieee80211_hw *, struct ieee80211_vif *, unsigned int , unsigned int ) ;
   int (*set_tim)(struct ieee80211_hw *, struct ieee80211_sta *, bool ) ;
   int (*set_key)(struct ieee80211_hw *, enum set_key_cmd , struct ieee80211_vif *, struct ieee80211_sta *, struct ieee80211_key_conf *) ;
   void (*update_tkip_key)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_key_conf *, struct ieee80211_sta *, u32 , u16 *) ;
   void (*set_rekey_data)(struct ieee80211_hw *, struct ieee80211_vif *, struct cfg80211_gtk_rekey_data *) ;
   void (*set_default_unicast_key)(struct ieee80211_hw *, struct ieee80211_vif *, int ) ;
   int (*hw_scan)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_scan_request *) ;
   void (*cancel_hw_scan)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   int (*sched_scan_start)(struct ieee80211_hw *, struct ieee80211_vif *, struct cfg80211_sched_scan_request *, struct ieee80211_scan_ies *) ;
   int (*sched_scan_stop)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   void (*sw_scan_start)(struct ieee80211_hw *, struct ieee80211_vif *, u8 *) ;
   void (*sw_scan_complete)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   int (*get_stats)(struct ieee80211_hw *, struct ieee80211_low_level_stats *) ;
   void (*get_key_seq)(struct ieee80211_hw *, struct ieee80211_key_conf *, struct ieee80211_key_seq *) ;
   int (*set_frag_threshold)(struct ieee80211_hw *, u32 ) ;
   int (*set_rts_threshold)(struct ieee80211_hw *, u32 ) ;
   int (*sta_add)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *) ;
   int (*sta_remove)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *) ;
   void (*sta_add_debugfs)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *, struct dentry *) ;
   void (*sta_notify)(struct ieee80211_hw *, struct ieee80211_vif *, enum sta_notify_cmd , struct ieee80211_sta *) ;
   int (*sta_set_txpwr)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *) ;
   int (*sta_state)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *, enum ieee80211_sta_state , enum ieee80211_sta_state ) ;
   void (*sta_pre_rcu_remove)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *) ;
   void (*sta_rc_update)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *, u32 ) ;
   void (*sta_rate_tbl_update)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *) ;
   void (*sta_statistics)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *, struct station_info *) ;
   int (*conf_tx)(struct ieee80211_hw *, struct ieee80211_vif *, u16 , struct ieee80211_tx_queue_params *) ;
   u64 (*get_tsf)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   void (*set_tsf)(struct ieee80211_hw *, struct ieee80211_vif *, u64 ) ;
   void (*offset_tsf)(struct ieee80211_hw *, struct ieee80211_vif *, s64 ) ;
   void (*reset_tsf)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   int (*tx_last_beacon)(struct ieee80211_hw *) ;
   int (*ampdu_action)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_ampdu_params *) ;
   int (*get_survey)(struct ieee80211_hw *, int , struct survey_info *) ;
   void (*rfkill_poll)(struct ieee80211_hw *) ;
   void (*set_coverage_class)(struct ieee80211_hw *, s16 ) ;
   int (*testmode_cmd)(struct ieee80211_hw *, struct ieee80211_vif *, void *, int ) ;
   int (*testmode_dump)(struct ieee80211_hw *, struct sk_buff *, struct netlink_callback *, void *, int ) ;
   void (*flush)(struct ieee80211_hw *, struct ieee80211_vif *, u32 , bool ) ;
   void (*channel_switch)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_channel_switch *) ;
   int (*set_antenna)(struct ieee80211_hw *, u32 , u32 ) ;
   int (*get_antenna)(struct ieee80211_hw *, u32 *, u32 *) ;
   int (*remain_on_channel)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_channel *, int , enum ieee80211_roc_type ) ;
   int (*cancel_remain_on_channel)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   int (*set_ringparam)(struct ieee80211_hw *, u32 , u32 ) ;
   void (*get_ringparam)(struct ieee80211_hw *, u32 *, u32 *, u32 *, u32 *) ;
   bool (*tx_frames_pending)(struct ieee80211_hw *) ;
   int (*set_bitrate_mask)(struct ieee80211_hw *, struct ieee80211_vif *, struct cfg80211_bitrate_mask *) ;
   void (*event_callback)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_event *) ;
   void (*allow_buffered_frames)(struct ieee80211_hw *, struct ieee80211_sta *, u16 , int , enum ieee80211_frame_release_type , bool ) ;
   void (*release_buffered_frames)(struct ieee80211_hw *, struct ieee80211_sta *, u16 , int , enum ieee80211_frame_release_type , bool ) ;
   int (*get_et_sset_count)(struct ieee80211_hw *, struct ieee80211_vif *, int ) ;
   void (*get_et_stats)(struct ieee80211_hw *, struct ieee80211_vif *, struct ethtool_stats *, u64 *) ;
   void (*get_et_strings)(struct ieee80211_hw *, struct ieee80211_vif *, u32 , u8 *) ;
   void (*mgd_prepare_tx)(struct ieee80211_hw *, struct ieee80211_vif *, u16 ) ;
   void (*mgd_protect_tdls_discover)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   int (*add_chanctx)(struct ieee80211_hw *, struct ieee80211_chanctx_conf *) ;
   void (*remove_chanctx)(struct ieee80211_hw *, struct ieee80211_chanctx_conf *) ;
   void (*change_chanctx)(struct ieee80211_hw *, struct ieee80211_chanctx_conf *, u32 ) ;
   int (*assign_vif_chanctx)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_chanctx_conf *) ;
   void (*unassign_vif_chanctx)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_chanctx_conf *) ;
   int (*switch_vif_chanctx)(struct ieee80211_hw *, struct ieee80211_vif_chanctx_switch *, int , enum ieee80211_chanctx_switch_mode ) ;
   void (*reconfig_complete)(struct ieee80211_hw *, enum ieee80211_reconfig_type ) ;
   void (*ipv6_addr_change)(struct ieee80211_hw *, struct ieee80211_vif *, struct inet6_dev *) ;
   void (*channel_switch_beacon)(struct ieee80211_hw *, struct ieee80211_vif *, struct cfg80211_chan_def *) ;
   int (*pre_channel_switch)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_channel_switch *) ;
   int (*post_channel_switch)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   void (*abort_channel_switch)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   void (*channel_switch_rx_beacon)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_channel_switch *) ;
   int (*join_ibss)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   void (*leave_ibss)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   u32 (*get_expected_throughput)(struct ieee80211_hw *, struct ieee80211_sta *) ;
   int (*get_txpower)(struct ieee80211_hw *, struct ieee80211_vif *, int *) ;
   int (*tdls_channel_switch)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *, u8 , struct cfg80211_chan_def *, struct sk_buff *, u32 ) ;
   void (*tdls_cancel_channel_switch)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *) ;
   void (*tdls_recv_channel_switch)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_tdls_ch_sw_params *) ;
   void (*wake_tx_queue)(struct ieee80211_hw *, struct ieee80211_txq *) ;
   void (*sync_rx_queues)(struct ieee80211_hw *) ;
   int (*start_nan)(struct ieee80211_hw *, struct ieee80211_vif *, struct cfg80211_nan_conf *) ;
   int (*stop_nan)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   int (*nan_change_conf)(struct ieee80211_hw *, struct ieee80211_vif *, struct cfg80211_nan_conf *, u32 ) ;
   int (*add_nan_func)(struct ieee80211_hw *, struct ieee80211_vif *, struct cfg80211_nan_func *) ;
   void (*del_nan_func)(struct ieee80211_hw *, struct ieee80211_vif *, u8 ) ;
   bool (*can_aggregate_in_amsdu)(struct ieee80211_hw *, struct sk_buff *, struct sk_buff *) ;
   int (*get_ftm_responder_stats)(struct ieee80211_hw *, struct ieee80211_vif *, struct cfg80211_ftm_responder_stats *) ;
   int (*start_pmsr)(struct ieee80211_hw *, struct ieee80211_vif *, struct cfg80211_pmsr_request *) ;
   void (*abort_pmsr)(struct ieee80211_hw *, struct ieee80211_vif *, struct cfg80211_pmsr_request *) ;
};
#line 103  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.h"
struct rtl8xxxu_rxdesc16 {
   u32 pktlen : 14 ;
   u32 crc32 : 1 ;
   u32 icverr : 1 ;
   u32 drvinfo_sz : 4 ;
   u32 security : 3 ;
   u32 qos : 1 ;
   u32 shift : 2 ;
   u32 phy_stats : 1 ;
   u32 swdec : 1 ;
   u32 ls : 1 ;
   u32 fs : 1 ;
   u32 eor : 1 ;
   u32 own : 1 ;
   u32 macid : 5 ;
   u32 tid : 4 ;
   u32 hwrsvd : 4 ;
   u32 amsdu : 1 ;
   u32 paggr : 1 ;
   u32 faggr : 1 ;
   u32 a1fit : 4 ;
   u32 a2fit : 4 ;
   u32 pam : 1 ;
   u32 pwr : 1 ;
   u32 md : 1 ;
   u32 mf : 1 ;
   u32 type : 2 ;
   u32 mc : 1 ;
   u32 bc : 1 ;
   u32 seq : 12 ;
   u32 frag : 4 ;
   u32 pkt_cnt : 8 ;
   u32 reserved : 6 ;
   u32 nextind : 1 ;
   u32 reserved0 : 1 ;
   u32 rxmcs : 6 ;
   u32 rxht : 1 ;
   u32 gf : 1 ;
   u32 splcp : 1 ;
   u32 bw : 1 ;
   u32 htc : 1 ;
   u32 eosp : 1 ;
   u32 bssidfit : 2 ;
   u32 reserved1 : 16 ;
   u32 unicastwake : 1 ;
   u32 magicwake : 1 ;
   u32 pattern0match : 1 ;
   u32 pattern1match : 1 ;
   u32 pattern2match : 1 ;
   u32 pattern3match : 1 ;
   u32 pattern4match : 1 ;
   u32 pattern5match : 1 ;
   u32 pattern6match : 1 ;
   u32 pattern7match : 1 ;
   u32 pattern8match : 1 ;
   u32 pattern9match : 1 ;
   u32 patternamatch : 1 ;
   u32 patternbmatch : 1 ;
   u32 patterncmatch : 1 ;
   u32 reserved2 : 19 ;
   u32 tsfl ;
};
#line 241  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.h"
struct rtl8xxxu_rxdesc24 {
   u32 pktlen : 14 ;
   u32 crc32 : 1 ;
   u32 icverr : 1 ;
   u32 drvinfo_sz : 4 ;
   u32 security : 3 ;
   u32 qos : 1 ;
   u32 shift : 2 ;
   u32 phy_stats : 1 ;
   u32 swdec : 1 ;
   u32 ls : 1 ;
   u32 fs : 1 ;
   u32 eor : 1 ;
   u32 own : 1 ;
   u32 macid : 7 ;
   u32 dummy1_0 : 1 ;
   u32 tid : 4 ;
   u32 dummy1_1 : 1 ;
   u32 amsdu : 1 ;
   u32 rxid_match : 1 ;
   u32 paggr : 1 ;
   u32 a1fit : 4 ;
   u32 chkerr : 1 ;
   u32 ipver : 1 ;
   u32 tcpudp : 1 ;
   u32 chkvld : 1 ;
   u32 pam : 1 ;
   u32 pwr : 1 ;
   u32 more_data : 1 ;
   u32 more_frag : 1 ;
   u32 type : 2 ;
   u32 mc : 1 ;
   u32 bc : 1 ;
   u32 seq : 12 ;
   u32 frag : 4 ;
   u32 rx_is_qos : 1 ;
   u32 dummy2_0 : 1 ;
   u32 wlanhd_iv_len : 6 ;
   u32 dummy2_1 : 4 ;
   u32 rpt_sel : 1 ;
   u32 dummy2_2 : 3 ;
   u32 rxmcs : 7 ;
   u32 dummy3_0 : 3 ;
   u32 htc : 1 ;
   u32 eosp : 1 ;
   u32 bssidfit : 2 ;
   u32 dummy3_1 : 2 ;
   u32 usb_agg_pktnum : 8 ;
   u32 dummy3_2 : 5 ;
   u32 pattern_match : 1 ;
   u32 unicast_match : 1 ;
   u32 magic_match : 1 ;
   u32 splcp : 1 ;
   u32 ldcp : 1 ;
   u32 stbc : 1 ;
   u32 dummy4_0 : 1 ;
   u32 bw : 2 ;
   u32 dummy4_1 : 26 ;
   u32 tsfl ;
};
#line 380  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.h"
struct rtl8xxxu_txdesc40 {
   __le16 pkt_size ;
   u8 pkt_offset ;
   u8 txdw0 ;
   __le32 txdw1 ;
   __le32 txdw2 ;
   __le32 txdw3 ;
   __le32 txdw4 ;
   __le32 txdw5 ;
   __le32 txdw6 ;
   __le16 csum ;
   __le16 txdw7 ;
   __le32 txdw8 ;
   __le32 txdw9 ;
};
#line 551  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.h"
struct phy_rx_agc_info {
   u8 gain : 7 ;
   u8 trsw : 1 ;
};
#line 559  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.h"
struct rtl8723au_phy_stats {
   struct phy_rx_agc_info path_agc[2U] ;
   u8 ch_corr[2U] ;
   u8 cck_sig_qual_ofdm_pwdb_all ;
   u8 cck_agc_rpt_ofdm_cfosho_a ;
   u8 cck_rpt_b_ofdm_cfosho_b ;
   u8 reserved_1 ;
   u8 noise_power_db_msb ;
   u8 path_cfotail[2U] ;
   u8 pcts_mask[2U] ;
   s8 stream_rxevm[2U] ;
   u8 path_rxsnr[2U] ;
   u8 noise_power_db_lsb ;
   u8 reserved_2[3U] ;
   u8 stream_csi[2U] ;
   u8 stream_target_csi[2U] ;
   s8 sig_evm ;
   u8 reserved_3 ;
   u8 antsel_rx_keep_2 : 1 ;
   u8 sgi_en : 1 ;
   u8 rxsc : 2 ;
   u8 idle_long : 1 ;
   u8 r_ant_train_en : 1 ;
   u8 antenna_select_b : 1 ;
   u8 antenna_select : 1 ;
};
#line 887  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.h"
struct rtl8xxxu_rfregs {
   u16 hssiparm1 ;
   u16 hssiparm2 ;
   u16 lssiparm ;
   u16 hspiread ;
   u16 lssiread ;
   u16 rf_sw_ctrl ;
};
#line 985  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.h"
struct __anonstruct_cmd_3124 {
   u8 cmd ;
   u8 data[7U] ;
} __attribute__((__packed__));
#line 985  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.h"
struct __anonstruct_raw_3125 {
   __le32 data ;
   __le16 ext ;
} __attribute__((__packed__));
#line 985  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.h"
struct __anonstruct_raw_wide_3126 {
   __le32 data ;
   __le32 ext ;
} __attribute__((__packed__));
#line 985  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.h"
struct __anonstruct_joinbss_3127 {
   u8 cmd ;
   u8 data ;
} __attribute__((__packed__));
#line 985  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.h"
struct __anonstruct_ramask_3128 {
   u8 cmd ;
   __le16 mask_hi ;
   u8 arg ;
   __le16 mask_lo ;
} __attribute__((__packed__));
#line 985  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.h"
struct __anonstruct_media_status_rpt_3129 {
   u8 cmd ;
   u8 parm ;
   u8 macid ;
   u8 macid_end ;
} __attribute__((__packed__));
#line 985  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.h"
struct __anonstruct_b_macid_cfg_3130 {
   u8 cmd ;
   u8 macid ;
   u8 data1 ;
   u8 data2 ;
   u8 ramask0 ;
   u8 ramask1 ;
   u8 ramask2 ;
   u8 ramask3 ;
} __attribute__((__packed__));
#line 985  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.h"
struct __anonstruct_b_type_dma_3131 {
   u8 cmd ;
   u8 data1 ;
   u8 data2 ;
   u8 data3 ;
   u8 data4 ;
   u8 data5 ;
} __attribute__((__packed__));
#line 985  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.h"
struct __anonstruct_bt_info_3132 {
   u8 cmd ;
   u8 data ;
} __attribute__((__packed__));
#line 985  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.h"
struct __anonstruct_bt_mp_oper_3133 {
   u8 cmd ;
   u8 operreq ;
   u8 opcode ;
   u8 data ;
   u8 addr ;
} __attribute__((__packed__));
#line 985  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.h"
struct __anonstruct_bt_wlan_calibration_3134 {
   u8 cmd ;
   u8 data ;
} __attribute__((__packed__));
#line 985  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.h"
struct __anonstruct_ignore_wlan_3135 {
   u8 cmd ;
   u8 data ;
} __attribute__((__packed__));
#line 985  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.h"
struct __anonstruct_ant_sel_rsv_3136 {
   u8 cmd ;
   u8 ant_inverse ;
   u8 int_switch_type ;
} __attribute__((__packed__));
#line 985  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.h"
struct __anonstruct_bt_grant_3137 {
   u8 cmd ;
   u8 data ;
} __attribute__((__packed__));
#line 985  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.h"
union __anonunion_3123 {
   struct __anonstruct_cmd_3124 cmd ;
   struct __anonstruct_raw_3125 raw ;
   struct __anonstruct_raw_wide_3126 raw_wide ;
   struct __anonstruct_joinbss_3127 joinbss ;
   struct __anonstruct_ramask_3128 ramask ;
   struct __anonstruct_media_status_rpt_3129 media_status_rpt ;
   struct __anonstruct_b_macid_cfg_3130 b_macid_cfg ;
   struct __anonstruct_b_type_dma_3131 b_type_dma ;
   struct __anonstruct_bt_info_3132 bt_info ;
   struct __anonstruct_bt_mp_oper_3133 bt_mp_oper ;
   struct __anonstruct_bt_wlan_calibration_3134 bt_wlan_calibration ;
   struct __anonstruct_ignore_wlan_3135 ignore_wlan ;
   struct __anonstruct_ant_sel_rsv_3136 ant_sel_rsv ;
   struct __anonstruct_bt_grant_3137 bt_grant ;
};
#line 985  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.h"
struct h2c_cmd {
   union __anonunion_3123 __anonCompField_h2c_cmd_197 ;
};
#line 1136  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.h"
struct __anonstruct_raw_3139 {
   u8 payload[0U] ;
} __attribute__((__packed__));
#line 1136  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.h"
struct __anonstruct_bt_mp_info_3140 {
   u8 ext_id ;
   u8 status : 4 ;
   u8 retlen : 4 ;
   u8 opcode_ver : 4 ;
   u8 req_num : 4 ;
   u8 payload[2U] ;
} __attribute__((__packed__));
#line 1136  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.h"
struct __anonstruct_bt_info_3141 {
   u8 response_source : 4 ;
   u8 dummy0_0 : 4 ;
   u8 bt_info ;
   u8 retry_count : 4 ;
   u8 dummy2_0 : 1 ;
   u8 bt_page : 1 ;
   u8 tx_rx_mask : 1 ;
   u8 dummy2_2 : 1 ;
   u8 rssi ;
   u8 basic_rate : 1 ;
   u8 bt_has_reset : 1 ;
   u8 dummy4_1 : 1 ;
   u8 ignore_wlan : 1 ;
   u8 auto_report : 1 ;
   u8 dummy4_2 : 3 ;
   u8 a4 ;
   u8 a5 ;
} __attribute__((__packed__));
#line 1136  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.h"
struct __anonstruct_ra_report_3142 {
   u8 rate : 7 ;
   u8 dummy0_0 : 1 ;
   u8 macid ;
   u8 ldpc : 1 ;
   u8 txbf : 1 ;
   u8 noisy_state : 1 ;
   u8 dummy2_0 : 5 ;
   u8 dummy3_0 ;
} __attribute__((__packed__));
#line 1136  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.h"
union __anonunion_3138 {
   struct __anonstruct_raw_3139 raw ;
   struct __anonstruct_bt_mp_info_3140 bt_mp_info ;
   struct __anonstruct_bt_info_3141 bt_info ;
   struct __anonstruct_ra_report_3142 ra_report ;
};
#line 1136  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.h"
struct rtl8723bu_c2h {
   u8 id ;
   u8 seq ;
   union __anonunion_3138 __anonCompField_rtl8723bu_c2h_198 ;
};
#line 1380  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.h"
struct rtl8xxxu_rx_urb {
   struct urb urb ;
   struct ieee80211_hw *hw ;
   struct list_head list ;
};
#line 1386  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.h"
struct rtl8xxxu_tx_urb {
   struct urb urb ;
   struct ieee80211_hw *hw ;
   struct list_head list ;
};
#line 4692  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
union __anonunion___u_3146 {
   struct list_head *__val ;
   char __c[1U] ;
};
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 197 
enum hrtimer_restart;
#line 197 
enum hrtimer_restart;
#line 197 
enum hrtimer_restart;
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
struct device_private {
   void *driver_data ;
};
#line 164  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef unsigned long irq_hw_number_t;
#line 303  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ioport.h"
struct irq_data;
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 244  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/idr.h"
struct ida {
   struct xarray xa ;
};
#line 439  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/property.h"
typedef u32 phandle;
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/of.h"
struct property {
   char *name ;
   int length ;
   void *value ;
   struct property *next ;
   unsigned long _flags ;
   struct bin_attribute attr ;
};
#line 51  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/of.h"
struct device_node {
   char *name ;
   phandle phandle ;
   char *full_name ;
   struct fwnode_handle fwnode ;
   struct property *properties ;
   struct property *deadprops ;
   struct device_node *parent ;
   struct device_node *child ;
   struct device_node *sibling ;
   struct kobject kobj ;
   unsigned long _flags ;
   void *data ;
};
#line 63  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/irqdomain.h"
struct irq_fwspec {
   struct fwnode_handle *fwnode ;
   int param_count ;
   u32 param[16U] ;
};
#line 68 
enum irq_domain_bus_token {
    DOMAIN_BUS_ANY = 0,
    DOMAIN_BUS_WIRED = 1,
    DOMAIN_BUS_GENERIC_MSI = 2,
    DOMAIN_BUS_PCI_MSI = 3,
    DOMAIN_BUS_PLATFORM_MSI = 4,
    DOMAIN_BUS_NEXUS = 5,
    DOMAIN_BUS_IPI = 6,
    DOMAIN_BUS_FSL_MC_MSI = 7,
    DOMAIN_BUS_TI_SCI_INTA_MSI = 8,
    DOMAIN_BUS_WAKEUP = 9
};
#line 104  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/irqdomain.h"
struct irq_domain_ops {
   int (*match)(struct irq_domain *, struct device_node *, enum irq_domain_bus_token ) ;
   int (*select)(struct irq_domain *, struct irq_fwspec *, enum irq_domain_bus_token ) ;
   int (*map)(struct irq_domain *, unsigned int , irq_hw_number_t ) ;
   void (*unmap)(struct irq_domain *, unsigned int ) ;
   int (*xlate)(struct irq_domain *, struct device_node *, u32 *, unsigned int , unsigned long *, unsigned int *) ;
   int (*alloc)(struct irq_domain *, unsigned int , unsigned int , void *) ;
   void (*free)(struct irq_domain *, unsigned int , unsigned int ) ;
   int (*activate)(struct irq_domain *, struct irq_data *, bool ) ;
   void (*deactivate)(struct irq_domain *, struct irq_data *) ;
   int (*translate)(struct irq_domain *, struct irq_fwspec *, unsigned long *, unsigned int *) ;
   void (*debug_show)(struct seq_file *, struct irq_domain *, struct irq_data *, int ) ;
};
#line 132 
struct irq_domain_chip_generic;
#line 161  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/irqdomain.h"
struct irq_domain {
   struct list_head link ;
   char *name ;
   struct irq_domain_ops *ops ;
   void *host_data ;
   unsigned int flags ;
   unsigned int mapcount ;
   struct fwnode_handle *fwnode ;
   enum irq_domain_bus_token bus_token ;
   struct irq_domain_chip_generic *gc ;
   struct irq_domain *parent ;
   struct dentry *debugfs_file ;
   irq_hw_number_t hwirq_max ;
   unsigned int revmap_direct_max_irq ;
   unsigned int revmap_size ;
   struct xarray revmap_tree ;
   struct mutex revmap_tree_mutex ;
   unsigned int linear_revmap[] ;
};
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rtmutex.h"
struct rt_mutex {
   raw_spinlock_t wait_lock ;
   struct rb_root_cached waiters ;
   struct task_struct *owner ;
   int save_state ;
   char *name ;
   char *file ;
   int line ;
   void *magic ;
   struct lockdep_map dep_map ;
};
#line 69  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/i2c.h"
struct i2c_msg {
   __u16 addr ;
   __u16 flags ;
   __u16 len ;
   __u8 *buf ;
};
#line 135  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/i2c.h"
union i2c_smbus_data {
   __u8 byte ;
   __u16 word ;
   __u8 block[34U] ;
};
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/i2c.h"
struct i2c_algorithm;
#line 28 
struct i2c_adapter;
#line 29 
struct i2c_client;
#line 33 
enum i2c_slave_event;
#line 33 
enum i2c_slave_event;
#line 314  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/i2c.h"
struct i2c_client {
   unsigned short flags ;
   unsigned short addr ;
   char name[20U] ;
   struct i2c_adapter *adapter ;
   struct device dev ;
   int init_irq ;
   int irq ;
   struct list_head detected ;
   int (*slave_cb)(struct i2c_client *, enum i2c_slave_event , u8 *) ;
};
#line 360 
enum i2c_slave_event {
    I2C_SLAVE_READ_REQUESTED = 0,
    I2C_SLAVE_WRITE_REQUESTED = 1,
    I2C_SLAVE_READ_PROCESSED = 2,
    I2C_SLAVE_WRITE_RECEIVED = 3,
    I2C_SLAVE_STOP = 4
};
#line 527  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/i2c.h"
struct i2c_algorithm {
   int (*master_xfer)(struct i2c_adapter *, struct i2c_msg *, int ) ;
   int (*master_xfer_atomic)(struct i2c_adapter *, struct i2c_msg *, int ) ;
   int (*smbus_xfer)(struct i2c_adapter *, u16 , unsigned short , char , u8 , int , union i2c_smbus_data *) ;
   int (*smbus_xfer_atomic)(struct i2c_adapter *, u16 , unsigned short , char , u8 , int , union i2c_smbus_data *) ;
   u32 (*functionality)(struct i2c_adapter *) ;
   int (*reg_slave)(struct i2c_client *) ;
   int (*unreg_slave)(struct i2c_client *) ;
};
#line 565  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/i2c.h"
struct i2c_lock_operations {
   void (*lock_bus)(struct i2c_adapter *, unsigned int ) ;
   int (*trylock_bus)(struct i2c_adapter *, unsigned int ) ;
   void (*unlock_bus)(struct i2c_adapter *, unsigned int ) ;
};
#line 618 
struct gpio_desc;
#line 618  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/i2c.h"
struct i2c_bus_recovery_info {
   int (*recover_bus)(struct i2c_adapter *) ;
   int (*get_scl)(struct i2c_adapter *) ;
   void (*set_scl)(struct i2c_adapter *, int ) ;
   int (*get_sda)(struct i2c_adapter *) ;
   void (*set_sda)(struct i2c_adapter *, int ) ;
   int (*get_bus_free)(struct i2c_adapter *) ;
   void (*prepare_recovery)(struct i2c_adapter *) ;
   void (*unprepare_recovery)(struct i2c_adapter *) ;
   struct gpio_desc *scl_gpiod ;
   struct gpio_desc *sda_gpiod ;
};
#line 661  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/i2c.h"
struct i2c_adapter_quirks {
   u64 flags ;
   int max_num_msgs ;
   u16 max_write_len ;
   u16 max_read_len ;
   u16 max_comb_1st_msg_len ;
   u16 max_comb_2nd_msg_len ;
};
#line 692  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/i2c.h"
struct i2c_adapter {
   struct module *owner ;
   unsigned int class ;
   struct i2c_algorithm *algo ;
   void *algo_data ;
   struct i2c_lock_operations *lock_ops ;
   struct rt_mutex bus_lock ;
   struct rt_mutex mux_lock ;
   int timeout ;
   int retries ;
   struct device dev ;
   unsigned long locked_flags ;
   int nr ;
   char name[48U] ;
   struct completion dev_released ;
   struct mutex userspace_clients_lock ;
   struct list_head userspace_clients ;
   struct i2c_bus_recovery_info *bus_recovery_info ;
   struct i2c_adapter_quirks *quirks ;
   struct irq_domain *host_notify_domain ;
};
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cdev.h"
struct cdev {
   struct kobject kobj ;
   struct module *owner ;
   struct file_operations *ops ;
   struct list_head list ;
   dev_t dev ;
   unsigned int count ;
} __attribute__((__designated_init__));
#line 87  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/v4l2-common.h"
struct v4l2_edid {
   __u32 pad ;
   __u32 start_block ;
   __u32 blocks ;
   __u32 reserved[5U] ;
   __u8 *edid ;
};
#line 754 
enum v4l2_priority {
    V4L2_PRIORITY_UNSET = 0,
    V4L2_PRIORITY_BACKGROUND = 1,
    V4L2_PRIORITY_INTERACTIVE = 2,
    V4L2_PRIORITY_RECORD = 3,
    V4L2_PRIORITY_DEFAULT = 2
};
#line 413  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_rect {
   __s32 left ;
   __s32 top ;
   __u32 width ;
   __u32 height ;
};
#line 420  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_fract {
   __u32 numerator ;
   __u32 denominator ;
};
#line 1212  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
typedef __u64 v4l2_std_id;
#line 1394  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_bt_timings {
   __u32 width ;
   __u32 height ;
   __u32 interlaced ;
   __u32 polarities ;
   __u64 pixelclock ;
   __u32 hfrontporch ;
   __u32 hsync ;
   __u32 hbackporch ;
   __u32 vfrontporch ;
   __u32 vsync ;
   __u32 vbackporch ;
   __u32 il_vfrontporch ;
   __u32 il_vsync ;
   __u32 il_vbackporch ;
   __u32 standards ;
   __u32 flags ;
   struct v4l2_fract picture_aspect ;
   __u8 cea861_vic ;
   __u8 hdmi_vic ;
   __u8 reserved[46U] ;
} __attribute__((__packed__));
#line 1517  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
union __anonunion_7021 {
   struct v4l2_bt_timings bt ;
   __u32 reserved[32U] ;
};
#line 1517  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_dv_timings {
   __u32 type ;
   union __anonunion_7021 __anonCompField_v4l2_dv_timings_77 ;
} __attribute__((__packed__));
#line 1536  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_enum_dv_timings {
   __u32 index ;
   __u32 pad ;
   __u32 reserved[2U] ;
   struct v4l2_dv_timings timings ;
};
#line 1554  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_bt_timings_cap {
   __u32 min_width ;
   __u32 max_width ;
   __u32 min_height ;
   __u32 max_height ;
   __u64 min_pixelclock ;
   __u64 max_pixelclock ;
   __u32 standards ;
   __u32 capabilities ;
   __u32 reserved[16U] ;
} __attribute__((__packed__));
#line 1581  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
union __anonunion_7022 {
   struct v4l2_bt_timings_cap bt ;
   __u32 raw_data[32U] ;
};
#line 1581  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_dv_timings_cap {
   __u32 type ;
   __u32 pad ;
   __u32 reserved[2U] ;
   union __anonunion_7022 __anonCompField_v4l2_dv_timings_cap_78 ;
};
#line 1803  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_tuner {
   __u32 index ;
   __u8 name[32U] ;
   __u32 type ;
   __u32 capability ;
   __u32 rangelow ;
   __u32 rangehigh ;
   __u32 rxsubchans ;
   __u32 audmode ;
   __s32 signal ;
   __s32 afc ;
   __u32 reserved[4U] ;
};
#line 1817  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_modulator {
   __u32 index ;
   __u8 name[32U] ;
   __u32 capability ;
   __u32 rangelow ;
   __u32 rangehigh ;
   __u32 txsubchans ;
   __u32 type ;
   __u32 reserved[3U] ;
};
#line 1860  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_frequency {
   __u32 tuner ;
   __u32 type ;
   __u32 frequency ;
   __u32 reserved[8U] ;
};
#line 1871  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_frequency_band {
   __u32 tuner ;
   __u32 type ;
   __u32 index ;
   __u32 capability ;
   __u32 rangelow ;
   __u32 rangehigh ;
   __u32 modulation ;
   __u32 reserved[9U] ;
};
#line 2043  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_vbi_format {
   __u32 sampling_rate ;
   __u32 offset ;
   __u32 samples_per_line ;
   __u32 sample_format ;
   __s32 start[2U] ;
   __u32 count[2U] ;
   __u32 flags ;
   __u32 reserved[2U] ;
};
#line 2071  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_sliced_vbi_format {
   __u16 service_set ;
   __u16 service_lines[2U][24U] ;
   __u32 io_size ;
   __u32 reserved[2U] ;
};
#line 2095  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_sliced_vbi_cap {
   __u16 service_set ;
   __u16 service_lines[2U][24U] ;
   __u32 type ;
   __u32 reserved[3U] ;
};
#line 2106  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_sliced_vbi_data {
   __u32 id ;
   __u32 field ;
   __u32 line ;
   __u32 reserved ;
   __u8 data[48U] ;
};
#line 2350  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_event_subscription {
   __u32 type ;
   __u32 id ;
   __u32 flags ;
   __u32 reserved[5U] ;
};
#line 2375  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
union __anonunion_7038 {
   __u32 addr ;
   char name[32U] ;
};
#line 2375  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_dbg_match {
   __u32 type ;
   union __anonunion_7038 __anonCompField_v4l2_dbg_match_87 ;
} __attribute__((__packed__));
#line 2383  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_dbg_register {
   struct v4l2_dbg_match match ;
   __u32 size ;
   __u64 reg ;
   __u64 val ;
} __attribute__((__packed__));
#line 57  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_device;
#line 57  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_gobj {
   struct media_device *mdev ;
   u32 id ;
   struct list_head list ;
};
#line 72  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_entity_enum {
   unsigned long *bmap ;
   int idx_max ;
};
#line 88 
struct media_entity;
#line 88  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct __anonstruct_stack_7042 {
   struct media_entity *entity ;
   struct list_head *link ;
};
#line 88  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_graph {
   struct __anonstruct_stack_7042 stack[16U] ;
   struct media_entity_enum ent_enum ;
   int top ;
};
#line 104  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_pipeline {
   int streaming_count ;
   struct media_graph graph ;
};
#line 132 
struct media_pad;
#line 132 
struct media_interface;
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
union __anonunion_7043 {
   struct media_gobj *gobj0 ;
   struct media_pad *source ;
   struct media_interface *intf ;
};
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
union __anonunion_7044 {
   struct media_gobj *gobj1 ;
   struct media_pad *sink ;
   struct media_entity *entity ;
};
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_link {
   struct media_gobj graph_obj ;
   struct list_head list ;
   union __anonunion_7043 __anonCompField_media_link_90 ;
   union __anonunion_7044 __anonCompField_media_link_91 ;
   struct media_link *reverse ;
   unsigned long flags ;
   bool is_backlink ;
};
#line 149 
enum media_pad_signal_type {
    PAD_SIGNAL_DEFAULT = 0,
    PAD_SIGNAL_ANALOG = 1,
    PAD_SIGNAL_DV = 2,
    PAD_SIGNAL_AUDIO = 3
};
#line 189  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_pad {
   struct media_gobj graph_obj ;
   struct media_entity *entity ;
   u16 index ;
   enum media_pad_signal_type sig_type ;
   unsigned long flags ;
};
#line 214  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_entity_operations {
   int (*get_fwnode_pad)(struct fwnode_endpoint *) ;
   int (*link_setup)(struct media_entity *, struct media_pad *, struct media_pad *, u32 ) ;
   int (*link_validate)(struct media_link *) ;
};
#line 221 
enum media_entity_type {
    MEDIA_ENTITY_TYPE_BASE = 0,
    MEDIA_ENTITY_TYPE_VIDEO_DEVICE = 1,
    MEDIA_ENTITY_TYPE_V4L2_SUBDEV = 2
};
#line 289  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct __anonstruct_dev_7046 {
   u32 major ;
   u32 minor ;
};
#line 289  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
union __anonunion_info_7045 {
   struct __anonstruct_dev_7046 dev ;
};
#line 289  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_entity {
   struct media_gobj graph_obj ;
   char *name ;
   enum media_entity_type obj_type ;
   u32 function ;
   unsigned long flags ;
   u16 num_pads ;
   u16 num_links ;
   u16 num_backlinks ;
   int internal_idx ;
   struct media_pad *pads ;
   struct list_head links ;
   struct media_entity_operations *ops ;
   int stream_count ;
   int use_count ;
   struct media_pipeline *pipe ;
   union __anonunion_info_7045 info ;
};
#line 335  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_interface {
   struct media_gobj graph_obj ;
   struct list_head links ;
   u32 type ;
   u32 flags ;
};
#line 349  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_intf_devnode {
   struct media_interface intf ;
   u32 major ;
   u32 minor ;
};
#line 1087 
enum vfl_devnode_type {
    VFL_TYPE_GRABBER = 0,
    VFL_TYPE_VBI = 1,
    VFL_TYPE_RADIO = 2,
    VFL_TYPE_SUBDEV = 3,
    VFL_TYPE_SDR = 4,
    VFL_TYPE_TOUCH = 5,
    VFL_TYPE_MAX = 6
};
#line 1097 
enum vfl_devnode_direction {
    VFL_DIR_RX = 0,
    VFL_DIR_TX = 1,
    VFL_DIR_M2M = 2
};
#line 1104 
struct video_device;
#line 1105 
struct v4l2_device;
#line 1106 
struct v4l2_ctrl_handler;
#line 104  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-dev.h"
struct v4l2_prio_state {
   atomic_t prios[4U] ;
};
#line 193  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-dev.h"
struct v4l2_file_operations {
   struct module *owner ;
   ssize_t (*read)(struct file *, char *, size_t , loff_t *) ;
   ssize_t (*write)(struct file *, char *, size_t , loff_t *) ;
   __poll_t (*poll)(struct file *, struct poll_table_struct *) ;
   long (*unlocked_ioctl)(struct file *, unsigned int , unsigned long ) ;
   long (*compat_ioctl32)(struct file *, unsigned int , unsigned long ) ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   int (*mmap)(struct file *, struct vm_area_struct *) ;
   int (*open)(struct file *) ;
   int (*release)(struct file *) ;
};
#line 256 
struct vb2_queue;
#line 256 
struct v4l2_ioctl_ops;
#line 256  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-dev.h"
struct video_device {
   struct media_entity entity ;
   struct media_intf_devnode *intf_devnode ;
   struct media_pipeline pipe ;
   struct v4l2_file_operations *fops ;
   u32 device_caps ;
   struct device dev ;
   struct cdev *cdev ;
   struct v4l2_device *v4l2_dev ;
   struct device *dev_parent ;
   struct v4l2_ctrl_handler *ctrl_handler ;
   struct vb2_queue *queue ;
   struct v4l2_prio_state *prio ;
   char name[32U] ;
   enum vfl_devnode_type vfl_type ;
   enum vfl_devnode_direction vfl_dir ;
   int minor ;
   u16 num ;
   unsigned long flags ;
   int index ;
   spinlock_t fh_lock ;
   struct list_head fh_list ;
   int dev_debug ;
   v4l2_std_id tvnorms ;
   void (*release)(struct video_device *) ;
   struct v4l2_ioctl_ops *ioctl_ops ;
   unsigned long valid_ioctls[3U] ;
   struct mutex *lock ;
};
#line 95  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-common.h"
struct v4l2_subdev;
#line 96 
struct v4l2_subdev_ops;
#line 335  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-common.h"
struct v4l2_priv_tun_config {
   int tuner ;
   void *priv ;
};
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-devnode.h"
struct media_file_operations {
   struct module *owner ;
   ssize_t (*read)(struct file *, char *, size_t , loff_t *) ;
   ssize_t (*write)(struct file *, char *, size_t , loff_t *) ;
   __poll_t (*poll)(struct file *, struct poll_table_struct *) ;
   long (*ioctl)(struct file *, unsigned int , unsigned long ) ;
   long (*compat_ioctl)(struct file *, unsigned int , unsigned long ) ;
   int (*open)(struct file *) ;
   int (*release)(struct file *) ;
};
#line 75  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-devnode.h"
struct media_devnode {
   struct media_device *media_dev ;
   struct media_file_operations *fops ;
   struct device dev ;
   struct cdev cdev ;
   struct device *parent ;
   int minor ;
   unsigned long flags ;
   void (*release)(struct media_devnode *) ;
};
#line 65  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-device.h"
struct media_request;
#line 65  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-device.h"
struct media_device_ops {
   int (*link_notify)(struct media_link *, u32 , unsigned int ) ;
   struct media_request *(*req_alloc)(struct media_device *) ;
   void (*req_free)(struct media_request *) ;
   int (*req_validate)(struct media_request *) ;
   void (*req_queue)(struct media_request *) ;
};
#line 144  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-device.h"
struct media_device {
   struct device *dev ;
   struct media_devnode *devnode ;
   char model[32U] ;
   char driver_name[32U] ;
   char serial[40U] ;
   char bus_info[32U] ;
   u32 hw_revision ;
   u64 topology_version ;
   u32 id ;
   struct ida entity_internal_idx ;
   int entity_internal_idx_max ;
   struct list_head entities ;
   struct list_head interfaces ;
   struct list_head pads ;
   struct list_head links ;
   struct list_head entity_notify ;
   struct mutex graph_mutex ;
   struct media_graph pm_count_walk ;
   void *source_priv ;
   int (*enable_source)(struct media_entity *, struct media_pipeline *) ;
   void (*disable_source)(struct media_entity *) ;
   struct media_device_ops *ops ;
   struct mutex req_queue_mutex ;
   atomic_t request_id ;
};
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/v4l2-mediabus.h"
struct v4l2_mbus_framefmt {
   __u32 width ;
   __u32 height ;
   __u32 code ;
   __u32 field ;
   __u32 colorspace ;
   __u16 ycbcr_enc ;
   __u16 quantization ;
   __u16 xfer_func ;
   __u16 reserved[11U] ;
};
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/v4l2-subdev.h"
struct v4l2_subdev_format {
   __u32 which ;
   __u32 pad ;
   struct v4l2_mbus_framefmt format ;
   __u32 reserved[8U] ;
};
#line 75  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/v4l2-subdev.h"
struct v4l2_subdev_mbus_code_enum {
   __u32 pad ;
   __u32 index ;
   __u32 code ;
   __u32 which ;
   __u32 reserved[8U] ;
};
#line 90  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/v4l2-subdev.h"
struct v4l2_subdev_frame_size_enum {
   __u32 index ;
   __u32 pad ;
   __u32 code ;
   __u32 min_width ;
   __u32 max_width ;
   __u32 min_height ;
   __u32 max_height ;
   __u32 which ;
   __u32 reserved[8U] ;
};
#line 107  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/v4l2-subdev.h"
struct v4l2_subdev_frame_interval {
   __u32 pad ;
   struct v4l2_fract interval ;
   __u32 reserved[9U] ;
};
#line 123  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/v4l2-subdev.h"
struct v4l2_subdev_frame_interval_enum {
   __u32 index ;
   __u32 pad ;
   __u32 code ;
   __u32 width ;
   __u32 height ;
   struct v4l2_fract interval ;
   __u32 which ;
   __u32 reserved[8U] ;
};
#line 149  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/v4l2-subdev.h"
struct v4l2_subdev_selection {
   __u32 which ;
   __u32 pad ;
   __u32 target ;
   __u32 flags ;
   struct v4l2_rect r ;
   __u32 reserved[8U] ;
};
#line 157 
struct v4l2_async_notifier;
#line 158 
enum v4l2_async_match_type {
    V4L2_ASYNC_MATCH_CUSTOM = 0,
    V4L2_ASYNC_MATCH_DEVNAME = 1,
    V4L2_ASYNC_MATCH_I2C = 2,
    V4L2_ASYNC_MATCH_FWNODE = 3
};
#line 79  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-async.h"
struct __anonstruct_i2c_7060 {
   int adapter_id ;
   unsigned short address ;
};
#line 79  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-async.h"
struct __anonstruct_custom_7061 {
   bool (*match)(struct device *, struct v4l2_async_subdev *) ;
   void *priv ;
};
#line 79  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-async.h"
union __anonunion_match_7059 {
   struct fwnode_handle *fwnode ;
   char *device_name ;
   struct __anonstruct_i2c_7060 i2c ;
   struct __anonstruct_custom_7061 custom ;
};
#line 79  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-async.h"
struct v4l2_async_subdev {
   enum v4l2_async_match_type match_type ;
   union __anonunion_match_7059 match ;
   struct list_head list ;
   struct list_head asd_list ;
};
#line 107  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-async.h"
struct v4l2_async_notifier_operations {
   int (*bound)(struct v4l2_async_notifier *, struct v4l2_subdev *, struct v4l2_async_subdev *) ;
   int (*complete)(struct v4l2_async_notifier *) ;
   void (*unbind)(struct v4l2_async_notifier *, struct v4l2_subdev *, struct v4l2_async_subdev *) ;
};
#line 129  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-async.h"
struct v4l2_async_notifier {
   struct v4l2_async_notifier_operations *ops ;
   struct v4l2_device *v4l2_dev ;
   struct v4l2_subdev *sd ;
   struct v4l2_async_notifier *parent ;
   struct list_head asd_list ;
   struct list_head waiting ;
   struct list_head done ;
   struct list_head list ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-fh.h"
struct v4l2_m2m_ctx;
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-fh.h"
struct v4l2_fh {
   struct list_head list ;
   struct video_device *vdev ;
   struct v4l2_ctrl_handler *ctrl_handler ;
   enum v4l2_priority prio ;
   wait_queue_head_t wait ;
   struct mutex subscribe_lock ;
   struct list_head subscribed ;
   struct list_head available ;
   unsigned int navailable ;
   u32 sequence ;
   struct v4l2_m2m_ctx *m2m_ctx ;
};
#line 162 
enum v4l2_mbus_type {
    V4L2_MBUS_UNKNOWN = 0,
    V4L2_MBUS_PARALLEL = 1,
    V4L2_MBUS_BT656 = 2,
    V4L2_MBUS_CSI1 = 3,
    V4L2_MBUS_CCP2 = 4,
    V4L2_MBUS_CSI2_DPHY = 5,
    V4L2_MBUS_CSI2_CPHY = 6
};
#line 97  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-mediabus.h"
struct v4l2_mbus_config {
   enum v4l2_mbus_type type ;
   unsigned int flags ;
};
#line 184 
struct v4l2_subdev_fh;
#line 185 
struct tuner_setup;
#line 186 
struct v4l2_mbus_frame_desc;
#line 52  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_decode_vbi_line {
   u32 is_second_field ;
   u8 *p ;
   u32 line ;
   u32 type ;
};
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_io_pin_config {
   u32 flags ;
   u8 pin ;
   u8 function ;
   u8 value ;
   u8 strength ;
};
#line 188  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_core_ops {
   int (*log_status)(struct v4l2_subdev *) ;
   int (*s_io_pin_config)(struct v4l2_subdev *, size_t , struct v4l2_subdev_io_pin_config *) ;
   int (*init)(struct v4l2_subdev *, u32 ) ;
   int (*load_fw)(struct v4l2_subdev *) ;
   int (*reset)(struct v4l2_subdev *, u32 ) ;
   int (*s_gpio)(struct v4l2_subdev *, u32 ) ;
   long (*ioctl)(struct v4l2_subdev *, unsigned int , void *) ;
   long (*compat_ioctl32)(struct v4l2_subdev *, unsigned int , unsigned long ) ;
   int (*g_register)(struct v4l2_subdev *, struct v4l2_dbg_register *) ;
   int (*s_register)(struct v4l2_subdev *, struct v4l2_dbg_register *) ;
   int (*s_power)(struct v4l2_subdev *, int ) ;
   int (*interrupt_service_routine)(struct v4l2_subdev *, u32 , bool *) ;
   int (*subscribe_event)(struct v4l2_subdev *, struct v4l2_fh *, struct v4l2_event_subscription *) ;
   int (*unsubscribe_event)(struct v4l2_subdev *, struct v4l2_fh *, struct v4l2_event_subscription *) ;
};
#line 264  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_tuner_ops {
   int (*standby)(struct v4l2_subdev *) ;
   int (*s_radio)(struct v4l2_subdev *) ;
   int (*s_frequency)(struct v4l2_subdev *, struct v4l2_frequency *) ;
   int (*g_frequency)(struct v4l2_subdev *, struct v4l2_frequency *) ;
   int (*enum_freq_bands)(struct v4l2_subdev *, struct v4l2_frequency_band *) ;
   int (*g_tuner)(struct v4l2_subdev *, struct v4l2_tuner *) ;
   int (*s_tuner)(struct v4l2_subdev *, struct v4l2_tuner *) ;
   int (*g_modulator)(struct v4l2_subdev *, struct v4l2_modulator *) ;
   int (*s_modulator)(struct v4l2_subdev *, struct v4l2_modulator *) ;
   int (*s_type_addr)(struct v4l2_subdev *, struct tuner_setup *) ;
   int (*s_config)(struct v4l2_subdev *, struct v4l2_priv_tun_config *) ;
};
#line 304  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_audio_ops {
   int (*s_clock_freq)(struct v4l2_subdev *, u32 ) ;
   int (*s_i2s_clock_freq)(struct v4l2_subdev *, u32 ) ;
   int (*s_routing)(struct v4l2_subdev *, u32 , u32 , u32 ) ;
   int (*s_stream)(struct v4l2_subdev *, int ) ;
};
#line 310 
enum v4l2_mbus_frame_desc_flags {
    V4L2_MBUS_FRAME_DESC_FL_LEN_MAX = 1,
    V4L2_MBUS_FRAME_DESC_FL_BLOB = 2
};
#line 335  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_mbus_frame_desc_entry {
   enum v4l2_mbus_frame_desc_flags flags ;
   u32 pixelcode ;
   u32 length ;
};
#line 348  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_mbus_frame_desc {
   struct v4l2_mbus_frame_desc_entry entry[4U] ;
   unsigned short num_entries ;
};
#line 415  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_video_ops {
   int (*s_routing)(struct v4l2_subdev *, u32 , u32 , u32 ) ;
   int (*s_crystal_freq)(struct v4l2_subdev *, u32 , u32 ) ;
   int (*g_std)(struct v4l2_subdev *, v4l2_std_id *) ;
   int (*s_std)(struct v4l2_subdev *, v4l2_std_id ) ;
   int (*s_std_output)(struct v4l2_subdev *, v4l2_std_id ) ;
   int (*g_std_output)(struct v4l2_subdev *, v4l2_std_id *) ;
   int (*querystd)(struct v4l2_subdev *, v4l2_std_id *) ;
   int (*g_tvnorms)(struct v4l2_subdev *, v4l2_std_id *) ;
   int (*g_tvnorms_output)(struct v4l2_subdev *, v4l2_std_id *) ;
   int (*g_input_status)(struct v4l2_subdev *, u32 *) ;
   int (*s_stream)(struct v4l2_subdev *, int ) ;
   int (*g_pixelaspect)(struct v4l2_subdev *, struct v4l2_fract *) ;
   int (*g_frame_interval)(struct v4l2_subdev *, struct v4l2_subdev_frame_interval *) ;
   int (*s_frame_interval)(struct v4l2_subdev *, struct v4l2_subdev_frame_interval *) ;
   int (*s_dv_timings)(struct v4l2_subdev *, struct v4l2_dv_timings *) ;
   int (*g_dv_timings)(struct v4l2_subdev *, struct v4l2_dv_timings *) ;
   int (*query_dv_timings)(struct v4l2_subdev *, struct v4l2_dv_timings *) ;
   int (*g_mbus_config)(struct v4l2_subdev *, struct v4l2_mbus_config *) ;
   int (*s_mbus_config)(struct v4l2_subdev *, struct v4l2_mbus_config *) ;
   int (*s_rx_buffer)(struct v4l2_subdev *, void *, unsigned int *) ;
};
#line 481  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_vbi_ops {
   int (*decode_vbi_line)(struct v4l2_subdev *, struct v4l2_decode_vbi_line *) ;
   int (*s_vbi_data)(struct v4l2_subdev *, struct v4l2_sliced_vbi_data *) ;
   int (*g_vbi_data)(struct v4l2_subdev *, struct v4l2_sliced_vbi_data *) ;
   int (*g_sliced_vbi_cap)(struct v4l2_subdev *, struct v4l2_sliced_vbi_cap *) ;
   int (*s_raw_fmt)(struct v4l2_subdev *, struct v4l2_vbi_format *) ;
   int (*g_sliced_fmt)(struct v4l2_subdev *, struct v4l2_sliced_vbi_format *) ;
   int (*s_sliced_fmt)(struct v4l2_subdev *, struct v4l2_sliced_vbi_format *) ;
};
#line 501  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_sensor_ops {
   int (*g_skip_top_lines)(struct v4l2_subdev *, u32 *) ;
   int (*g_skip_frames)(struct v4l2_subdev *, u32 *) ;
};
#line 505 
enum v4l2_subdev_ir_mode {
    V4L2_SUBDEV_IR_MODE_PULSE_WIDTH = 0
};
#line 540  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_ir_parameters {
   unsigned int bytes_per_data_element ;
   enum v4l2_subdev_ir_mode mode ;
   bool enable ;
   bool interrupt_enable ;
   bool shutdown ;
   bool modulation ;
   u32 max_pulse_width ;
   unsigned int carrier_freq ;
   unsigned int duty_cycle ;
   bool invert_level ;
   bool invert_carrier_sense ;
   u32 noise_filter_min_width ;
   unsigned int carrier_range_lower ;
   unsigned int carrier_range_upper ;
   u32 resolution ;
};
#line 599  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_ir_ops {
   int (*rx_read)(struct v4l2_subdev *, u8 *, size_t , ssize_t *) ;
   int (*rx_g_parameters)(struct v4l2_subdev *, struct v4l2_subdev_ir_parameters *) ;
   int (*rx_s_parameters)(struct v4l2_subdev *, struct v4l2_subdev_ir_parameters *) ;
   int (*tx_write)(struct v4l2_subdev *, u8 *, size_t , ssize_t *) ;
   int (*tx_g_parameters)(struct v4l2_subdev *, struct v4l2_subdev_ir_parameters *) ;
   int (*tx_s_parameters)(struct v4l2_subdev *, struct v4l2_subdev_ir_parameters *) ;
};
#line 630  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_pad_config {
   struct v4l2_mbus_framefmt try_fmt ;
   struct v4l2_rect try_crop ;
   struct v4l2_rect try_compose ;
};
#line 674  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_pad_ops {
   int (*init_cfg)(struct v4l2_subdev *, struct v4l2_subdev_pad_config *) ;
   int (*enum_mbus_code)(struct v4l2_subdev *, struct v4l2_subdev_pad_config *, struct v4l2_subdev_mbus_code_enum *) ;
   int (*enum_frame_size)(struct v4l2_subdev *, struct v4l2_subdev_pad_config *, struct v4l2_subdev_frame_size_enum *) ;
   int (*enum_frame_interval)(struct v4l2_subdev *, struct v4l2_subdev_pad_config *, struct v4l2_subdev_frame_interval_enum *) ;
   int (*get_fmt)(struct v4l2_subdev *, struct v4l2_subdev_pad_config *, struct v4l2_subdev_format *) ;
   int (*set_fmt)(struct v4l2_subdev *, struct v4l2_subdev_pad_config *, struct v4l2_subdev_format *) ;
   int (*get_selection)(struct v4l2_subdev *, struct v4l2_subdev_pad_config *, struct v4l2_subdev_selection *) ;
   int (*set_selection)(struct v4l2_subdev *, struct v4l2_subdev_pad_config *, struct v4l2_subdev_selection *) ;
   int (*get_edid)(struct v4l2_subdev *, struct v4l2_edid *) ;
   int (*set_edid)(struct v4l2_subdev *, struct v4l2_edid *) ;
   int (*dv_timings_cap)(struct v4l2_subdev *, struct v4l2_dv_timings_cap *) ;
   int (*enum_dv_timings)(struct v4l2_subdev *, struct v4l2_enum_dv_timings *) ;
   int (*link_validate)(struct v4l2_subdev *, struct media_link *, struct v4l2_subdev_format *, struct v4l2_subdev_format *) ;
   int (*get_frame_desc)(struct v4l2_subdev *, unsigned int , struct v4l2_mbus_frame_desc *) ;
   int (*set_frame_desc)(struct v4l2_subdev *, unsigned int , struct v4l2_mbus_frame_desc *) ;
};
#line 727  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_ops {
   struct v4l2_subdev_core_ops *core ;
   struct v4l2_subdev_tuner_ops *tuner ;
   struct v4l2_subdev_audio_ops *audio ;
   struct v4l2_subdev_video_ops *video ;
   struct v4l2_subdev_vbi_ops *vbi ;
   struct v4l2_subdev_ir_ops *ir ;
   struct v4l2_subdev_sensor_ops *sensor ;
   struct v4l2_subdev_pad_ops *pad ;
};
#line 765  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_internal_ops {
   int (*registered)(struct v4l2_subdev *) ;
   void (*unregistered)(struct v4l2_subdev *) ;
   int (*open)(struct v4l2_subdev *, struct v4l2_subdev_fh *) ;
   int (*close)(struct v4l2_subdev *, struct v4l2_subdev_fh *) ;
   void (*release)(struct v4l2_subdev *) ;
};
#line 772 
struct regulator_bulk_data;
#line 797  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_platform_data {
   struct regulator_bulk_data *regulators ;
   int num_regulators ;
   void *host_priv ;
};
#line 848  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev {
   struct media_entity entity ;
   struct list_head list ;
   struct module *owner ;
   bool owner_v4l2_dev ;
   u32 flags ;
   struct v4l2_device *v4l2_dev ;
   struct v4l2_subdev_ops *ops ;
   struct v4l2_subdev_internal_ops *internal_ops ;
   struct v4l2_ctrl_handler *ctrl_handler ;
   char name[32U] ;
   u32 grp_id ;
   void *dev_priv ;
   void *host_priv ;
   struct video_device *devnode ;
   struct device *dev ;
   struct fwnode_handle *fwnode ;
   struct list_head async_list ;
   struct v4l2_async_subdev *asd ;
   struct v4l2_async_notifier *notifier ;
   struct v4l2_async_notifier *subdev_notifier ;
   struct v4l2_subdev_platform_data *pdata ;
};
#line 906  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_fh {
   struct v4l2_fh vfh ;
   struct module *owner ;
   struct v4l2_subdev_pad_config *pad ;
};
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-device.h"
struct v4l2_device {
   struct device *dev ;
   struct media_device *mdev ;
   struct list_head subdevs ;
   spinlock_t lock ;
   char name[36U] ;
   void (*notify)(struct v4l2_subdev *, unsigned int , void *) ;
   struct v4l2_ctrl_handler *ctrl_handler ;
   struct v4l2_prio_state prio ;
   struct kref ref ;
   void (*release)(struct v4l2_device *) ;
};
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ptp_clock_kernel.h"
struct ptp_system_timestamp {
   struct timespec64 pre_ts ;
   struct timespec64 post_ts ;
};
#line 277 
struct dma_chan;
#line 279 
struct spi_controller;
#line 280 
struct spi_transfer;
#line 281 
struct spi_controller_mem_ops;
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spi/spi.h"
struct spi_statistics {
   spinlock_t lock ;
   unsigned long messages ;
   unsigned long transfers ;
   unsigned long errors ;
   unsigned long timedout ;
   unsigned long spi_sync ;
   unsigned long spi_sync_immediate ;
   unsigned long spi_async ;
   unsigned long long bytes ;
   unsigned long long bytes_rx ;
   unsigned long long bytes_tx ;
   unsigned long transfer_bytes_histo[17U] ;
   unsigned long transfers_split_maxsize ;
};
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spi/spi.h"
struct spi_delay {
   u16 value ;
   u8 unit ;
};
#line 157  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spi/spi.h"
struct spi_device {
   struct device dev ;
   struct spi_controller *controller ;
   struct spi_controller *master ;
   u32 max_speed_hz ;
   u8 chip_select ;
   u8 bits_per_word ;
   bool rt ;
   u32 mode ;
   int irq ;
   void *controller_state ;
   void *controller_data ;
   char modalias[32U] ;
   char *driver_override ;
   int cs_gpio ;
   struct gpio_desc *cs_gpiod ;
   struct spi_delay word_delay ;
   struct spi_statistics statistics ;
};
#line 247 
struct spi_message;
#line 452  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spi/spi.h"
struct spi_controller {
   struct device dev ;
   struct list_head list ;
   s16 bus_num ;
   u16 num_chipselect ;
   u16 dma_alignment ;
   u32 mode_bits ;
   u32 bits_per_word_mask ;
   u32 min_speed_hz ;
   u32 max_speed_hz ;
   u16 flags ;
   bool slave ;
   size_t (*max_transfer_size)(struct spi_device *) ;
   size_t (*max_message_size)(struct spi_device *) ;
   struct mutex io_mutex ;
   spinlock_t bus_lock_spinlock ;
   struct mutex bus_lock_mutex ;
   bool bus_lock_flag ;
   int (*setup)(struct spi_device *) ;
   int (*set_cs_timing)(struct spi_device *, struct spi_delay *, struct spi_delay *, struct spi_delay *) ;
   int (*transfer)(struct spi_device *, struct spi_message *) ;
   void (*cleanup)(struct spi_device *) ;
   bool (*can_dma)(struct spi_controller *, struct spi_device *, struct spi_transfer *) ;
   bool queued ;
   struct kthread_worker kworker ;
   struct task_struct *kworker_task ;
   struct kthread_work pump_messages ;
   spinlock_t queue_lock ;
   struct list_head queue ;
   struct spi_message *cur_msg ;
   bool idling ;
   bool busy ;
   bool running ;
   bool rt ;
   bool auto_runtime_pm ;
   bool cur_msg_prepared ;
   bool cur_msg_mapped ;
   struct completion xfer_completion ;
   size_t max_dma_len ;
   int (*prepare_transfer_hardware)(struct spi_controller *) ;
   int (*transfer_one_message)(struct spi_controller *, struct spi_message *) ;
   int (*unprepare_transfer_hardware)(struct spi_controller *) ;
   int (*prepare_message)(struct spi_controller *, struct spi_message *) ;
   int (*unprepare_message)(struct spi_controller *, struct spi_message *) ;
   int (*slave_abort)(struct spi_controller *) ;
   void (*set_cs)(struct spi_device *, bool ) ;
   int (*transfer_one)(struct spi_controller *, struct spi_device *, struct spi_transfer *) ;
   void (*handle_err)(struct spi_controller *, struct spi_message *) ;
   struct spi_controller_mem_ops *mem_ops ;
   struct spi_delay cs_setup ;
   struct spi_delay cs_hold ;
   struct spi_delay cs_inactive ;
   int *cs_gpios ;
   struct gpio_desc **cs_gpiods ;
   bool use_gpio_descriptors ;
   struct spi_statistics statistics ;
   struct dma_chan *dma_tx ;
   struct dma_chan *dma_rx ;
   void *dummy_rx ;
   void *dummy_tx ;
   int (*fw_translate_cs)(struct spi_controller *, unsigned int ) ;
   bool ptp_sts_supported ;
   unsigned long irq_flags ;
};
#line 890  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spi/spi.h"
struct spi_transfer {
   void *tx_buf ;
   void *rx_buf ;
   unsigned int len ;
   dma_addr_t tx_dma ;
   dma_addr_t rx_dma ;
   struct sg_table tx_sg ;
   struct sg_table rx_sg ;
   unsigned int cs_change : 1 ;
   unsigned int tx_nbits : 3 ;
   unsigned int rx_nbits : 3 ;
   u8 bits_per_word ;
   u16 delay_usecs ;
   struct spi_delay delay ;
   struct spi_delay cs_change_delay ;
   struct spi_delay word_delay ;
   u32 speed_hz ;
   u32 effective_speed_hz ;
   unsigned int ptp_sts_word_pre ;
   unsigned int ptp_sts_word_post ;
   struct ptp_system_timestamp *ptp_sts ;
   bool timestamped_pre ;
   bool timestamped_post ;
   struct list_head transfer_list ;
};
#line 961  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spi/spi.h"
struct spi_message {
   struct list_head transfers ;
   struct spi_device *spi ;
   unsigned int is_dma_mapped : 1 ;
   void (*complete)(void *) ;
   void *context ;
   unsigned int frame_length ;
   unsigned int actual_length ;
   int status ;
   struct list_head queue ;
   void *state ;
   struct list_head resources ;
};
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 157  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fb_fix_screeninfo {
   char id[16U] ;
   unsigned long smem_start ;
   __u32 smem_len ;
   __u32 type ;
   __u32 type_aux ;
   __u32 visual ;
   __u16 xpanstep ;
   __u16 ypanstep ;
   __u16 ywrapstep ;
   __u32 line_length ;
   unsigned long mmio_start ;
   __u32 mmio_len ;
   __u32 accel ;
   __u16 capabilities ;
   __u16 reserved[2U] ;
};
#line 188  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fb_bitfield {
   __u32 offset ;
   __u32 length ;
   __u32 msb_right ;
};
#line 241  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fb_var_screeninfo {
   __u32 xres ;
   __u32 yres ;
   __u32 xres_virtual ;
   __u32 yres_virtual ;
   __u32 xoffset ;
   __u32 yoffset ;
   __u32 bits_per_pixel ;
   __u32 grayscale ;
   struct fb_bitfield red ;
   struct fb_bitfield green ;
   struct fb_bitfield blue ;
   struct fb_bitfield transp ;
   __u32 nonstd ;
   __u32 activate ;
   __u32 height ;
   __u32 width ;
   __u32 accel_flags ;
   __u32 pixclock ;
   __u32 left_margin ;
   __u32 right_margin ;
   __u32 upper_margin ;
   __u32 lower_margin ;
   __u32 hsync_len ;
   __u32 vsync_len ;
   __u32 sync ;
   __u32 vmode ;
   __u32 rotate ;
   __u32 colorspace ;
   __u32 reserved[4U] ;
};
#line 281  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fb_cmap {
   __u32 start ;
   __u32 len ;
   __u16 *red ;
   __u16 *green ;
   __u16 *blue ;
   __u16 *transp ;
};
#line 341  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fb_copyarea {
   __u32 dx ;
   __u32 dy ;
   __u32 width ;
   __u32 height ;
   __u32 sx ;
   __u32 sy ;
};
#line 350  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fb_fillrect {
   __u32 dx ;
   __u32 dy ;
   __u32 width ;
   __u32 height ;
   __u32 color ;
   __u32 rop ;
};
#line 359  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fb_image {
   __u32 dx ;
   __u32 dy ;
   __u32 width ;
   __u32 height ;
   __u32 fg_color ;
   __u32 bg_color ;
   __u8 depth ;
   char *data ;
   struct fb_cmap cmap ;
};
#line 383  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fbcurpos {
   __u16 x ;
   __u16 y ;
};
#line 387  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fb_cursor {
   __u16 set ;
   __u16 enable ;
   __u16 rop ;
   char *mask ;
   struct fbcurpos hot ;
   struct fb_image image ;
};
#line 400 
enum backlight_type {
    BACKLIGHT_RAW = 1,
    BACKLIGHT_PLATFORM = 2,
    BACKLIGHT_FIRMWARE = 3,
    BACKLIGHT_TYPE_MAX = 4
};
#line 412 
enum backlight_scale {
    BACKLIGHT_SCALE_UNKNOWN = 0,
    BACKLIGHT_SCALE_LINEAR = 1,
    BACKLIGHT_SCALE_NON_LINEAR = 2
};
#line 418 
struct backlight_device;
#line 419 
struct fb_info;
#line 58  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backlight.h"
struct backlight_ops {
   unsigned int options ;
   int (*update_status)(struct backlight_device *) ;
   int (*get_brightness)(struct backlight_device *) ;
   int (*check_fb)(struct backlight_device *, struct fb_info *) ;
};
#line 74  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backlight.h"
struct backlight_properties {
   int brightness ;
   int max_brightness ;
   int power ;
   int fb_blank ;
   enum backlight_type type ;
   unsigned int state ;
   enum backlight_scale scale ;
};
#line 97  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backlight.h"
struct backlight_device {
   struct backlight_properties props ;
   struct mutex update_lock ;
   struct mutex ops_lock ;
   struct backlight_ops *ops ;
   struct notifier_block fb_notif ;
   struct list_head entry ;
   struct device dev ;
   bool fb_bl_on[32U] ;
   int use_count ;
};
#line 52  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_chroma {
   __u32 redx ;
   __u32 greenx ;
   __u32 bluex ;
   __u32 whitex ;
   __u32 redy ;
   __u32 greeny ;
   __u32 bluey ;
   __u32 whitey ;
};
#line 63 
struct fb_videomode;
#line 63  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_monspecs {
   struct fb_chroma chroma ;
   struct fb_videomode *modedb ;
   __u8 manufacturer[4U] ;
   __u8 monitor[14U] ;
   __u8 serial_no[14U] ;
   __u8 ascii[14U] ;
   __u32 modedb_len ;
   __u32 model ;
   __u32 serial ;
   __u32 year ;
   __u32 week ;
   __u32 hfmin ;
   __u32 hfmax ;
   __u32 dclkmin ;
   __u32 dclkmax ;
   __u16 input ;
   __u16 dpms ;
   __u16 signal ;
   __u16 vfmin ;
   __u16 vfmax ;
   __u16 gamma ;
   __u16 gtf : 1 ;
   __u16 misc ;
   __u8 version ;
   __u8 revision ;
   __u8 max_x ;
   __u8 max_y ;
};
#line 144  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_blit_caps {
   u32 x ;
   u32 y ;
   u32 len ;
   u32 flags ;
};
#line 185  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_pixmap {
   u8 *addr ;
   u32 size ;
   u32 offset ;
   u32 buf_align ;
   u32 scan_align ;
   u32 access_align ;
   u32 flags ;
   u32 blit_x ;
   u32 blit_y ;
   void (*writeio)(struct fb_info *, void *, void *, unsigned int ) ;
   void (*readio)(struct fb_info *, void *, void *, unsigned int ) ;
};
#line 203  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_deferred_io {
   unsigned long delay ;
   struct mutex lock ;
   struct list_head pagelist ;
   void (*first_io)(struct fb_info *) ;
   void (*deferred_io)(struct fb_info *, struct list_head *) ;
};
#line 228  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_ops {
   struct module *owner ;
   int (*fb_open)(struct fb_info *, int ) ;
   int (*fb_release)(struct fb_info *, int ) ;
   ssize_t (*fb_read)(struct fb_info *, char *, size_t , loff_t *) ;
   ssize_t (*fb_write)(struct fb_info *, char *, size_t , loff_t *) ;
   int (*fb_check_var)(struct fb_var_screeninfo *, struct fb_info *) ;
   int (*fb_set_par)(struct fb_info *) ;
   int (*fb_setcolreg)(unsigned int , unsigned int , unsigned int , unsigned int , unsigned int , struct fb_info *) ;
   int (*fb_setcmap)(struct fb_cmap *, struct fb_info *) ;
   int (*fb_blank)(int , struct fb_info *) ;
   int (*fb_pan_display)(struct fb_var_screeninfo *, struct fb_info *) ;
   void (*fb_fillrect)(struct fb_info *, struct fb_fillrect *) ;
   void (*fb_copyarea)(struct fb_info *, struct fb_copyarea *) ;
   void (*fb_imageblit)(struct fb_info *, struct fb_image *) ;
   int (*fb_cursor)(struct fb_info *, struct fb_cursor *) ;
   int (*fb_sync)(struct fb_info *) ;
   int (*fb_ioctl)(struct fb_info *, unsigned int , unsigned long ) ;
   int (*fb_compat_ioctl)(struct fb_info *, unsigned int , unsigned long ) ;
   int (*fb_mmap)(struct fb_info *, struct vm_area_struct *) ;
   void (*fb_get_caps)(struct fb_info *, struct fb_blit_caps *, struct fb_var_screeninfo *) ;
   void (*fb_destroy)(struct fb_info *) ;
   int (*fb_debug_enter)(struct fb_info *) ;
   int (*fb_debug_leave)(struct fb_info *) ;
};
#line 306  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_tilemap {
   __u32 width ;
   __u32 height ;
   __u32 depth ;
   __u32 length ;
   __u8 *data ;
};
#line 315  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_tilerect {
   __u32 sx ;
   __u32 sy ;
   __u32 width ;
   __u32 height ;
   __u32 index ;
   __u32 fg ;
   __u32 bg ;
   __u32 rop ;
};
#line 326  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_tilearea {
   __u32 sx ;
   __u32 sy ;
   __u32 dx ;
   __u32 dy ;
   __u32 width ;
   __u32 height ;
};
#line 335  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_tileblit {
   __u32 sx ;
   __u32 sy ;
   __u32 width ;
   __u32 height ;
   __u32 fg ;
   __u32 bg ;
   __u32 length ;
   __u32 *indices ;
};
#line 346  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_tilecursor {
   __u32 sx ;
   __u32 sy ;
   __u32 mode ;
   __u32 shape ;
   __u32 fg ;
   __u32 bg ;
};
#line 355  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_tile_ops {
   void (*fb_settile)(struct fb_info *, struct fb_tilemap *) ;
   void (*fb_tilecopy)(struct fb_info *, struct fb_tilearea *) ;
   void (*fb_tilefill)(struct fb_info *, struct fb_tilerect *) ;
   void (*fb_tileblit)(struct fb_info *, struct fb_tileblit *) ;
   void (*fb_tilecursor)(struct fb_info *, struct fb_tilecursor *) ;
   int (*fb_get_tilemax)(struct fb_info *) ;
};
#line 499  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct aperture {
   resource_size_t base ;
   resource_size_t size ;
};
#line 497  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct apertures_struct {
   unsigned int count ;
   struct aperture ranges[0U] ;
};
#line 439  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
union __anonunion_7962 {
   char *screen_base ;
   char *screen_buffer ;
};
#line 439  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_info {
   atomic_t count ;
   int node ;
   int flags ;
   int fbcon_rotate_hint ;
   struct mutex lock ;
   struct mutex mm_lock ;
   struct fb_var_screeninfo var ;
   struct fb_fix_screeninfo fix ;
   struct fb_monspecs monspecs ;
   struct work_struct queue ;
   struct fb_pixmap pixmap ;
   struct fb_pixmap sprite ;
   struct fb_cmap cmap ;
   struct list_head modelist ;
   struct fb_videomode *mode ;
   struct backlight_device *bl_dev ;
   struct mutex bl_curve_mutex ;
   u8 bl_curve[128U] ;
   struct delayed_work deferred_work ;
   struct fb_deferred_io *fbdefio ;
   struct fb_ops *fbops ;
   struct device *device ;
   struct device *dev ;
   int class_flag ;
   struct fb_tile_ops *tileops ;
   union __anonunion_7962 __anonCompField_fb_info_73 ;
   unsigned long screen_size ;
   void *pseudo_palette ;
   u32 state ;
   void *fbcon_par ;
   void *par ;
   struct apertures_struct *apertures ;
   bool skip_vt_switch ;
};
#line 767  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_videomode {
   char *name ;
   u32 refresh ;
   u32 xres ;
   u32 yres ;
   u32 pixclock ;
   u32 left_margin ;
   u32 right_margin ;
   u32 upper_margin ;
   u32 lower_margin ;
   u32 hsync_len ;
   u32 vsync_len ;
   u32 sync ;
   u32 vmode ;
   u32 flag ;
};
#line 63  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
struct ldv_kmem_cache {
   char *name ;
   unsigned int size ;
};
#line 88  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
typedef unsigned long pthread_t;
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/thread.h"
union pthread_attr_t {
   char __size[56U] ;
   long __align ;
};
#line 30  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/thread.h"
typedef union pthread_attr_t pthread_attr_t;
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 17  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.ko/concurrency safety/emg/0/environment_model.c"
struct emg_struct_ieee80211_scenario_rtl8xxxu_ops_10 {
   struct ieee80211_hw *arg0 ;
   int signal_pending ;
};
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.ko/concurrency safety/emg/0/environment_model.c"
struct emg_struct_usb_scenario_rtl8xxxu_driver_11 {
   struct usb_driver *arg0 ;
   int signal_pending ;
};
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/common/inline_asm.h"
#line 22 
void ldv_inline_asm(void);
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/jump_label.h"
__inline static bool arch_static_branch(struct static_key *key, bool branch)
{
  #line 27 
  ldv_inline_asm();
  #line 28 
  ldv_inline_asm();
  #line 34 
  return (_Bool)0;
  #line 35 
  l_yes: 
         #line 35 
  ;
  #line 36 
  return (_Bool)1;
}

#line 64  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dynamic_debug.h"
#line 64 
void __dynamic_dev_dbg(struct _ddebug *, struct device *, char * , ...);
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/string_64.h"
#line 14 
void *memcpy(void *, void *, size_t);
#line 18 
#line 18 
void *memset(void *, int, size_t);
#line 177  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/string.h"
#line 177 
void *memchr_inv(void *, int, size_t);
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/irqflags.h"
#line 20 
unsigned long native_save_fl(void);
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/irqflags.h"
unsigned long native_save_fl(void)
{
  #line 22 
  unsigned long flags;
  #line 23 
  ldv_inline_asm();
  #line 35 
  return flags;
}

#line 38 
#line 39 
void native_restore_fl(unsigned long flags);
#line 39  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/irqflags.h"
void native_restore_fl(unsigned long flags)
{
  #line 41 
  ldv_inline_asm();
  #line 42 
  return;
}

#line 1714  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
#line 1714 
void _dev_warn(struct device *, char * , ...);
#line 1718 
#line 1718 
void _dev_info(struct device *, char * , ...);
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/delay.h"
#line 11 
void __const_udelay(unsigned long);
#line 276  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/etherdevice.h"
__inline static void ether_addr_copy(u8 *dst, u8 *src)
{
  #line 279 
  *((u32 *)dst) = *((u32 *)src);
  #line 280 
  *((u16 *)(dst + 4U)) = *((u16 *)(src + 4U));
  #line 281 
  return;
}

#line 1443  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.h"
#line 37  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
int rtl8xxxu_debug;
#line 1446  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.h"
#line 637  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
u32 rtl8xxxu_iqk_phy_iq_bb_reg[9U];
#line 1447  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.h"
#line 1447 
u8 rtl8xxxu_read8(struct rtl8xxxu_priv *priv, u16 addr);
#line 1448 
#line 1448 
u16 rtl8xxxu_read16(struct rtl8xxxu_priv *priv, u16 addr);
#line 1449 
#line 1449 
u32 rtl8xxxu_read32(struct rtl8xxxu_priv *priv, u16 addr);
#line 1450 
#line 1450 
int rtl8xxxu_write8(struct rtl8xxxu_priv *priv, u16 addr, u8 val);
#line 1451 
#line 1451 
int rtl8xxxu_write16(struct rtl8xxxu_priv *priv, u16 addr, u16 val);
#line 1452 
#line 1452 
int rtl8xxxu_write32(struct rtl8xxxu_priv *priv, u16 addr, u32 val);
#line 1455 
#line 1455 
int rtl8xxxu_write_rfreg(struct rtl8xxxu_priv *priv, enum rtl8xxxu_rfpath path, u8 reg, u32 data);
#line 1457 
#line 1457 
void rtl8xxxu_save_regs(struct rtl8xxxu_priv *priv, u32 *regs, u32 *backup, int count);
#line 1459 
#line 1459 
void rtl8xxxu_restore_regs(struct rtl8xxxu_priv *priv, u32 *regs, u32 *backup, int count);
#line 1461 
#line 1461 
void rtl8xxxu_save_mac_regs(struct rtl8xxxu_priv *priv, u32 *reg, u32 *backup);
#line 1463 
#line 1463 
void rtl8xxxu_restore_mac_regs(struct rtl8xxxu_priv *priv, u32 *reg, u32 *backup);
#line 1465 
#line 1465 
void rtl8xxxu_path_adda_on(struct rtl8xxxu_priv *priv, u32 *regs, bool path_a_on);
#line 1467 
#line 1467 
void rtl8xxxu_mac_calibration(struct rtl8xxxu_priv *priv, u32 *regs, u32 *backup);
#line 1469 
#line 1469 
void rtl8xxxu_fill_iqk_matrix_a(struct rtl8xxxu_priv *priv, bool iqk_ok, int (*result)[8U], int candidate, bool tx_only);
#line 1471 
#line 1471 
void rtl8xxxu_fill_iqk_matrix_b(struct rtl8xxxu_priv *priv, bool iqk_ok, int (*result)[8U], int candidate, bool tx_only);
#line 1473 
#line 1473 
int rtl8xxxu_init_phy_rf(struct rtl8xxxu_priv *priv, struct rtl8xxxu_rfregval *table, enum rtl8xxxu_rfpath path);
#line 1476 
#line 1476 
int rtl8xxxu_init_phy_regs(struct rtl8xxxu_priv *priv, struct rtl8xxxu_reg32val *array);
#line 1478 
#line 1478 
int rtl8xxxu_load_firmware(struct rtl8xxxu_priv *priv, char *fw_name);
#line 1479 
#line 1479 
void rtl8xxxu_firmware_self_reset(struct rtl8xxxu_priv *priv);
#line 1481 
#line 1481 
void rtl8xxxu_reset_8051(struct rtl8xxxu_priv *priv);
#line 1482 
#line 1482 
int rtl8xxxu_auto_llt_table(struct rtl8xxxu_priv *priv);
#line 1484 
#line 1484 
int rtl8xxxu_flush_fifo(struct rtl8xxxu_priv *priv);
#line 1495 
#line 1495 
void rtl8xxxu_gen2_config_channel(struct ieee80211_hw *hw);
#line 1497 
#line 1497 
void rtl8xxxu_gen2_usb_quirks(struct rtl8xxxu_priv *priv);
#line 1500 
#line 1500 
void rtl8xxxu_gen2_update_rate_mask(struct rtl8xxxu_priv *priv, u32 ramask, u8 rateid, int sgi);
#line 1504 
#line 1504 
void rtl8xxxu_gen2_report_connect(struct rtl8xxxu_priv *priv, u8 macid, bool connect);
#line 1509 
#line 1509 
void rtl8xxxu_gen2_disable_rf(struct rtl8xxxu_priv *priv);
#line 1511 
#line 1511 
int rtl8xxxu_parse_rxdesc24(struct rtl8xxxu_priv *priv, struct sk_buff *skb);
#line 1512 
#line 1512 
int rtl8xxxu_gen2_channel_to_group(int channel);
#line 1513 
#line 1513 
bool rtl8xxxu_gen2_simularity_compare(struct rtl8xxxu_priv *priv, int (*result)[8U], int c1, int c2);
#line 1520 
#line 1520 
void rtl8xxxu_fill_txdesc_v2(struct ieee80211_hw *hw, struct ieee80211_hdr *hdr, struct ieee80211_tx_info *tx_info, struct rtl8xxxu_txdesc32 *tx_desc32, bool sgi, bool short_preamble, bool ampdu_enable, u32 rts_rate);
#line 1529 
#line 1629  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_8192e.c"
struct rtl8xxxu_fileops rtl8192eu_fops;
#line 35  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_8192e.c"
static struct rtl8xxxu_reg8val rtl8192e_mac_init_table[102U] = {{.reg = (unsigned short)17U, .val = (unsigned char)235U}, {.reg = (unsigned short)18U, .val = (unsigned char)7U}, {.reg = (unsigned short)20U, .val = (unsigned char)117U}, {.reg = (unsigned short)771U, .val = (unsigned char)167U}, {.reg = (unsigned short)1064U, .val = (unsigned char)10U}, {.reg = (unsigned short)1065U, .val = (unsigned char)16U}, {.reg = (unsigned short)1072U}, {.reg = (unsigned short)1073U}, {.reg = (unsigned short)1074U}, {.reg = (unsigned short)1075U, .val = (unsigned char)1U}, {.reg = (unsigned short)1076U, .val = (unsigned char)4U}, {.reg = (unsigned short)1077U, .val = (unsigned char)5U}, {.reg = (unsigned short)1078U, .val = (unsigned char)7U}, {.reg = (unsigned short)1079U, .val = (unsigned char)8U}, {.reg = (unsigned short)1084U, .val = (unsigned char)4U}, {.reg = (unsigned short)1085U, .val = (unsigned char)5U}, {.reg = (unsigned short)1086U, .val = (unsigned char)7U}, {.reg = (unsigned short)1087U, .val = (unsigned char)8U}, {.reg = (unsigned short)1088U, .val = (unsigned char)93U}, {.reg = (unsigned short)1089U, .val = (unsigned char)1U}, {.reg = (unsigned short)1090U}, {.reg = (unsigned short)1092U, .val = (unsigned char)16U}, {.reg = (unsigned short)1093U}, {.reg = (unsigned short)1094U}, {.reg = (unsigned short)1095U}, {.reg = (unsigned short)1096U}, {.reg = (unsigned short)1097U, .val = (unsigned char)240U}, {.reg = (unsigned short)1098U, .val = (unsigned char)15U}, {.reg = (unsigned short)1099U, .val = (unsigned char)62U}, {.reg = (unsigned short)1100U, .val = (unsigned char)16U}, {.reg = (unsigned short)1101U}, {.reg = (unsigned short)1102U}, {.reg = (unsigned short)1103U}, {.reg = (unsigned short)1104U}, {.reg = (unsigned short)1105U, .val = (unsigned char)240U}, {.reg = (unsigned short)1106U, .val = (unsigned char)15U}, {.reg = (unsigned short)1107U}, {.reg = (unsigned short)1110U, .val = (unsigned char)94U}, {.reg = (unsigned short)1120U, .val = (unsigned char)102U}, {.reg = (unsigned short)1121U, .val = (unsigned char)102U}, {.reg = (unsigned short)1224U, .val = (unsigned char)255U}, {.reg = (unsigned short)1225U, .val = (unsigned char)8U}, {.reg = (unsigned short)1228U, .val = (unsigned char)255U}, {.reg = (unsigned short)1229U, .val = (unsigned char)255U}, {.reg = (unsigned short)1230U, .val = (unsigned char)1U}, {.reg = (unsigned short)1280U, .val = (unsigned char)38U}, {.reg = (unsigned short)1281U, .val = (unsigned char)162U}, {.reg = (unsigned short)1282U, .val = (unsigned char)47U}, {.reg = (unsigned short)1283U}, {.reg = (unsigned short)1284U, .val = (unsigned char)40U}, {.reg = (unsigned short)1285U, .val = (unsigned char)163U}, {.reg = (unsigned short)1286U, .val = (unsigned char)94U}, {.reg = (unsigned short)1287U}, {.reg = (unsigned short)1288U, .val = (unsigned char)43U}, {.reg = (unsigned short)1289U, .val = (unsigned char)164U}, {.reg = (unsigned short)1290U, .val = (unsigned char)94U}, {.reg = (unsigned short)1291U}, {.reg = (unsigned short)1292U, .val = (unsigned char)79U}, {.reg = (unsigned short)1293U, .val = (unsigned char)164U}, {.reg = (unsigned short)1294U}, {.reg = (unsigned short)1295U}, {.reg = (unsigned short)1298U, .val = (unsigned char)28U}, {.reg = (unsigned short)1300U, .val = (unsigned char)10U}, {.reg = (unsigned short)1302U, .val = (unsigned char)10U}, {.reg = (unsigned short)1317U, .val = (unsigned char)79U}, {.reg = (unsigned short)1344U, .val = (unsigned char)18U}, {.reg = (unsigned short)1345U, .val = (unsigned char)100U}, {.reg = (unsigned short)1360U, .val = (unsigned char)16U}, {.reg = (unsigned short)1361U, .val = (unsigned char)16U}, {.reg = (unsigned short)1369U, .val = (unsigned char)2U}, {.reg = (unsigned short)1372U, .val = (unsigned char)80U}, {.reg = (unsigned short)1373U, .val = (unsigned char)255U}, {.reg = (unsigned short)1541U, .val = (unsigned char)48U}, {.reg = (unsigned short)1544U, .val = (unsigned char)14U}, {.reg = (unsigned short)1545U, .val = (unsigned char)42U}, {.reg = (unsigned short)1568U, .val = (unsigned char)255U}, {.reg = (unsigned short)1569U, .val = (unsigned char)255U}, {.reg = (unsigned short)1570U, .val = (unsigned char)255U}, {.reg = (unsigned short)1571U, .val = (unsigned char)255U}, {.reg = (unsigned short)1572U, .val = (unsigned char)255U}, {.reg = (unsigned short)1573U, .val = (unsigned char)255U}, {.reg = (unsigned short)1574U, .val = (unsigned char)255U}, {.reg = (unsigned short)1575U, .val = (unsigned char)255U}, {.reg = (unsigned short)1592U, .val = (unsigned char)80U}, {.reg = (unsigned short)1596U, .val = (unsigned char)10U}, {.reg = (unsigned short)1597U, .val = (unsigned char)10U}, {.reg = (unsigned short)1598U, .val = (unsigned char)14U}, {.reg = (unsigned short)1599U, .val = (unsigned char)14U}, {.reg = (unsigned short)1600U, .val = (unsigned char)64U}, {.reg = (unsigned short)1602U, .val = (unsigned char)64U}, {.reg = (unsigned short)1603U}, {.reg = (unsigned short)1618U, .val = (unsigned char)200U}, {.reg = (unsigned short)1646U, .val = (unsigned char)5U}, {.reg = (unsigned short)1792U, .val = (unsigned char)33U}, {.reg = (unsigned short)1793U, .val = (unsigned char)67U}, {.reg = (unsigned short)1794U, .val = (unsigned char)101U}, {.reg = (unsigned short)1795U, .val = (unsigned char)135U}, {.reg = (unsigned short)1800U, .val = (unsigned char)33U}, {.reg = (unsigned short)1801U, .val = (unsigned char)67U}, {.reg = (unsigned short)1802U, .val = (unsigned char)101U}, {.reg = (unsigned short)1803U, .val = (unsigned char)135U}, {.reg = (unsigned short)65535U, .val = (unsigned char)255U}};
#line 65  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_8192e.c"
static struct rtl8xxxu_reg32val rtl8192eu_phy_init_table[209U] = {{.reg = (unsigned short)2048U, .val = 2147745792U}, {.reg = (unsigned short)2052U, .val = 3U}, {.reg = (unsigned short)2056U, .val = 64512U}, {.reg = (unsigned short)2060U, .val = 10U}, {.reg = (unsigned short)2064U, .val = 268440369U}, {.reg = (unsigned short)2068U, .val = 34356496U}, {.reg = (unsigned short)2072U, .val = 35783557U}, {.reg = (unsigned short)2076U}, {.reg = (unsigned short)2080U, .val = 16777472U}, {.reg = (unsigned short)2084U, .val = 3736068U}, {.reg = (unsigned short)2088U, .val = 16777472U}, {.reg = (unsigned short)2092U, .val = 3736068U}, {.reg = (unsigned short)2096U, .val = 842150450U}, {.reg = (unsigned short)2100U, .val = 808464432U}, {.reg = (unsigned short)2104U, .val = 808464432U}, {.reg = (unsigned short)2108U, .val = 808464432U}, {.reg = (unsigned short)2112U, .val = 65536U}, {.reg = (unsigned short)2116U, .val = 65536U}, {.reg = (unsigned short)2120U, .val = 673720360U}, {.reg = (unsigned short)2124U, .val = 673720360U}, {.reg = (unsigned short)2128U}, {.reg = (unsigned short)2132U}, {.reg = (unsigned short)2136U, .val = 10092698U}, {.reg = (unsigned short)2140U, .val = 16777236U}, {.reg = (unsigned short)2144U, .val = 1727397888U}, {.reg = (unsigned short)2148U, .val = 102694912U}, {.reg = (unsigned short)2152U, .val = 808464432U}, {.reg = (unsigned short)2156U, .val = 808464432U}, {.reg = (unsigned short)2160U}, {.reg = (unsigned short)2164U, .val = 1426080256U}, {.reg = (unsigned short)2168U, .val = 134744072U}, {.reg = (unsigned short)2172U}, {.reg = (unsigned short)2176U, .val = 2952793116U}, {.reg = (unsigned short)2180U, .val = 1U}, {.reg = (unsigned short)2184U}, {.reg = (unsigned short)2188U, .val = 3422552256U}, {.reg = (unsigned short)2192U, .val = 2048U}, {.reg = (unsigned short)2196U, .val = 4294967294U}, {.reg = (unsigned short)2200U, .val = 1076895760U}, {.reg = (unsigned short)2304U}, {.reg = (unsigned short)2308U, .val = 35U}, {.reg = (unsigned short)2312U}, {.reg = (unsigned short)2316U, .val = 2165445395U}, {.reg = (unsigned short)2320U, .val = 2154561537U}, {.reg = (unsigned short)2324U, .val = 1U}, {.reg = (unsigned short)2328U}, {.reg = (unsigned short)2332U, .val = 65536U}, {.reg = (unsigned short)2340U, .val = 1U}, {.reg = (unsigned short)2344U}, {.reg = (unsigned short)2348U}, {.reg = (unsigned short)2352U}, {.reg = (unsigned short)2356U}, {.reg = (unsigned short)2360U}, {.reg = (unsigned short)2364U}, {.reg = (unsigned short)2368U}, {.reg = (unsigned short)2372U}, {.reg = (unsigned short)2380U, .val = 8U}, {.reg = (unsigned short)2560U, .val = 13682632U}, {.reg = (unsigned short)2564U, .val = 2180972556U}, {.reg = (unsigned short)2568U, .val = 2357428992U}, {.reg = (unsigned short)2572U, .val = 778572303U}, {.reg = (unsigned short)2576U, .val = 2499844984U}, {.reg = (unsigned short)2580U, .val = 286576680U}, {.reg = (unsigned short)2584U, .val = 8917271U}, {.reg = (unsigned short)2588U, .val = 2299793152U}, {.reg = (unsigned short)2592U, .val = 437977088U}, {.reg = (unsigned short)2596U, .val = 151917335U}, {.reg = (unsigned short)2600U, .val = 516U}, {.reg = (unsigned short)2604U, .val = 13828096U}, {.reg = (unsigned short)2672U, .val = 270532352U}, {.reg = (unsigned short)2676U, .val = 7U}, {.reg = (unsigned short)2680U, .val = 2304U}, {.reg = (unsigned short)2684U, .val = 576390662U}, {.reg = (unsigned short)2688U, .val = 562066865U}, {.reg = (unsigned short)2872U}, {.reg = (unsigned short)3072U, .val = 1208425792U}, {.reg = (unsigned short)3076U, .val = 60839475U}, {.reg = (unsigned short)3080U, .val = 228U}, {.reg = (unsigned short)3084U, .val = 1819044972U}, {.reg = (unsigned short)3088U, .val = 142606336U}, {.reg = (unsigned short)3092U, .val = 1073742080U}, {.reg = (unsigned short)3096U, .val = 142606336U}, {.reg = (unsigned short)3100U, .val = 1073742080U}, {.reg = (unsigned short)3104U}, {.reg = (unsigned short)3108U}, {.reg = (unsigned short)3112U}, {.reg = (unsigned short)3116U}, {.reg = (unsigned short)3120U, .val = 1776921671U}, {.reg = (unsigned short)3124U, .val = 1184256687U}, {.reg = (unsigned short)3128U, .val = 1232689556U}, {.reg = (unsigned short)3132U, .val = 177706780U}, {.reg = (unsigned short)3136U, .val = 528236607U}, {.reg = (unsigned short)3140U, .val = 65719U}, {.reg = (unsigned short)3144U, .val = 3959554311U}, {.reg = (unsigned short)3148U, .val = 8323967U}, {.reg = (unsigned short)3152U, .val = 3407904U}, {.reg = (unsigned short)3156U, .val = 8421407U}, {.reg = (unsigned short)3160U, .val = 32U}, {.reg = (unsigned short)3164U, .val = 2393234U}, {.reg = (unsigned short)3168U}, {.reg = (unsigned short)3172U, .val = 1897038987U}, {.reg = (unsigned short)3176U, .val = 1203768319U}, {.reg = (unsigned short)3180U, .val = 54U}, {.reg = (unsigned short)3184U, .val = 1536U}, {.reg = (unsigned short)3188U, .val = 33632617U}, {.reg = (unsigned short)3192U, .val = 31U}, {.reg = (unsigned short)3196U, .val = 12129810U}, {.reg = (unsigned short)3200U, .val = 1073742080U}, {.reg = (unsigned short)3204U, .val = 569769984U}, {.reg = (unsigned short)3208U, .val = 1073742080U}, {.reg = (unsigned short)3212U, .val = 2699296768U}, {.reg = (unsigned short)3216U, .val = 1185824U}, {.reg = (unsigned short)3220U}, {.reg = (unsigned short)3224U, .val = 1185824U}, {.reg = (unsigned short)3228U, .val = 32639U}, {.reg = (unsigned short)3232U}, {.reg = (unsigned short)3236U, .val = 196768U}, {.reg = (unsigned short)3240U}, {.reg = (unsigned short)3244U}, {.reg = (unsigned short)3248U}, {.reg = (unsigned short)3252U}, {.reg = (unsigned short)3256U}, {.reg = (unsigned short)3260U, .val = 671088640U}, {.reg = (unsigned short)3264U}, {.reg = (unsigned short)3268U}, {.reg = (unsigned short)3272U}, {.reg = (unsigned short)3276U}, {.reg = (unsigned short)3280U}, {.reg = (unsigned short)3284U}, {.reg = (unsigned short)3288U, .val = 1689396263U}, {.reg = (unsigned short)3292U, .val = 7760178U}, {.reg = (unsigned short)3296U, .val = 2236962U}, {.reg = (unsigned short)3300U, .val = 262144U}, {.reg = (unsigned short)3304U, .val = 2003059458U}, {.reg = (unsigned short)3308U, .val = 798479372U}, {.reg = (unsigned short)3328U, .val = 526144U}, {.reg = (unsigned short)3332U, .val = 132099U}, {.reg = (unsigned short)3336U, .val = 36991U}, {.reg = (unsigned short)3340U, .val = 536936961U}, {.reg = (unsigned short)3344U, .val = 2690855731U}, {.reg = (unsigned short)3348U, .val = 859028547U}, {.reg = (unsigned short)3352U, .val = 2056215403U}, {.reg = (unsigned short)3356U, .val = 127U}, {.reg = (unsigned short)3372U, .val = 3432487285U}, {.reg = (unsigned short)3376U}, {.reg = (unsigned short)3380U, .val = 2153807872U}, {.reg = (unsigned short)3384U}, {.reg = (unsigned short)3388U, .val = 1209171U}, {.reg = (unsigned short)3392U}, {.reg = (unsigned short)3396U}, {.reg = (unsigned short)3400U}, {.reg = (unsigned short)3404U}, {.reg = (unsigned short)3408U, .val = 1681331210U}, {.reg = (unsigned short)3412U}, {.reg = (unsigned short)3416U, .val = 642U}, {.reg = (unsigned short)3420U, .val = 805511268U}, {.reg = (unsigned short)3424U, .val = 1179901544U}, {.reg = (unsigned short)3428U, .val = 72452668U}, {.reg = (unsigned short)3432U, .val = 8449U}, {.reg = (unsigned short)3436U, .val = 706747414U}, {.reg = (unsigned short)3440U, .val = 403846702U}, {.reg = (unsigned short)3444U, .val = 841753120U}, {.reg = (unsigned short)3448U, .val = 932900U}, {.reg = (unsigned short)3456U, .val = 17305608U}, {.reg = (unsigned short)3460U, .val = 2048U}, {.reg = (unsigned short)3464U, .val = 4038393856U}, {.reg = (unsigned short)3584U, .val = 808464432U}, {.reg = (unsigned short)3588U, .val = 808464432U}, {.reg = (unsigned short)3592U, .val = 59781168U}, {.reg = (unsigned short)3600U, .val = 808464432U}, {.reg = (unsigned short)3604U, .val = 808464432U}, {.reg = (unsigned short)3608U, .val = 808464432U}, {.reg = (unsigned short)3612U, .val = 808464432U}, {.reg = (unsigned short)3624U}, {.reg = (unsigned short)3632U, .val = 268491807U}, {.reg = (unsigned short)3636U, .val = 268471327U}, {.reg = (unsigned short)3640U, .val = 34865410U}, {.reg = (unsigned short)3644U, .val = 1746273474U}, {.reg = (unsigned short)3648U, .val = 16808960U}, {.reg = (unsigned short)3652U, .val = 16795648U}, {.reg = (unsigned short)3656U, .val = 4211081216U}, {.reg = (unsigned short)3660U, .val = 10449U}, {.reg = (unsigned short)3664U, .val = 268491807U}, {.reg = (unsigned short)3668U, .val = 268471327U}, {.reg = (unsigned short)3672U, .val = 34865410U}, {.reg = (unsigned short)3676U, .val = 672533765U}, {.reg = (unsigned short)3680U, .val = 8U}, {.reg = (unsigned short)3688U, .val = 264263254U}, {.reg = (unsigned short)3692U, .val = 62953110U}, {.reg = (unsigned short)3696U, .val = 62953110U}, {.reg = (unsigned short)3700U, .val = 201348694U}, {.reg = (unsigned short)3704U, .val = 201348694U}, {.reg = (unsigned short)3708U, .val = 201348694U}, {.reg = (unsigned short)3712U, .val = 201348694U}, {.reg = (unsigned short)3716U, .val = 62953110U}, {.reg = (unsigned short)3720U, .val = 201348694U}, {.reg = (unsigned short)3724U, .val = 62953110U}, {.reg = (unsigned short)3792U, .val = 62953110U}, {.reg = (unsigned short)3796U, .val = 62953110U}, {.reg = (unsigned short)3800U, .val = 62953110U}, {.reg = (unsigned short)3804U, .val = 54998U}, {.reg = (unsigned short)3808U, .val = 54998U}, {.reg = (unsigned short)3820U, .val = 264246806U}, {.reg = (unsigned short)3812U, .val = 2952793116U}, {.reg = (unsigned short)3816U, .val = 1U}, {.reg = (unsigned short)3860U, .val = 3U}, {.reg = (unsigned short)3916U}, {.reg = (unsigned short)3840U, .val = 768U}, {.reg = (unsigned short)65535U, .val = 4294967295U}};
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_8192e.c"
static struct rtl8xxxu_reg32val rtl8xxx_agc_8192eu_std_table[131U] = {{.reg = (unsigned short)3192U, .val = 4211081217U}, {.reg = (unsigned short)3192U, .val = 4211146753U}, {.reg = (unsigned short)3192U, .val = 4211212289U}, {.reg = (unsigned short)3192U, .val = 4211277825U}, {.reg = (unsigned short)3192U, .val = 4211343361U}, {.reg = (unsigned short)3192U, .val = 4211408897U}, {.reg = (unsigned short)3192U, .val = 4194697217U}, {.reg = (unsigned short)3192U, .val = 4177985537U}, {.reg = (unsigned short)3192U, .val = 4161273857U}, {.reg = (unsigned short)3192U, .val = 4144562177U}, {.reg = (unsigned short)3192U, .val = 4127850497U}, {.reg = (unsigned short)3192U, .val = 4111138817U}, {.reg = (unsigned short)3192U, .val = 4094427137U}, {.reg = (unsigned short)3192U, .val = 4077715457U}, {.reg = (unsigned short)3192U, .val = 4061003777U}, {.reg = (unsigned short)3192U, .val = 4044292097U}, {.reg = (unsigned short)3192U, .val = 4027580417U}, {.reg = (unsigned short)3192U, .val = 4010868737U}, {.reg = (unsigned short)3192U, .val = 3994157057U}, {.reg = (unsigned short)3192U, .val = 3977445377U}, {.reg = (unsigned short)3192U, .val = 3960733697U}, {.reg = (unsigned short)3192U, .val = 3944022017U}, {.reg = (unsigned short)3192U, .val = 3927310337U}, {.reg = (unsigned short)3192U, .val = 3910598657U}, {.reg = (unsigned short)3192U, .val = 3893886977U}, {.reg = (unsigned short)3192U, .val = 3877175297U}, {.reg = (unsigned short)3192U, .val = 3357147137U}, {.reg = (unsigned short)3192U, .val = 3340435457U}, {.reg = (unsigned short)3192U, .val = 3323723777U}, {.reg = (unsigned short)3192U, .val = 119341057U}, {.reg = (unsigned short)3192U, .val = 102629377U}, {.reg = (unsigned short)3192U, .val = 85917697U}, {.reg = (unsigned short)3192U, .val = 69206017U}, {.reg = (unsigned short)3192U, .val = 52494337U}, {.reg = (unsigned short)3192U, .val = 2854354945U}, {.reg = (unsigned short)3192U, .val = 2837643265U}, {.reg = (unsigned short)3192U, .val = 2820931585U}, {.reg = (unsigned short)3192U, .val = 2804219905U}, {.reg = (unsigned short)3192U, .val = 2787508225U}, {.reg = (unsigned short)3192U, .val = 2233925633U}, {.reg = (unsigned short)3192U, .val = 2217213953U}, {.reg = (unsigned short)3192U, .val = 2200502273U}, {.reg = (unsigned short)3192U, .val = 623509505U}, {.reg = (unsigned short)3192U, .val = 606797825U}, {.reg = (unsigned short)3192U, .val = 590086145U}, {.reg = (unsigned short)3192U, .val = 573374465U}, {.reg = (unsigned short)3192U, .val = 1731067905U}, {.reg = (unsigned short)3192U, .val = 1714356225U}, {.reg = (unsigned short)3192U, .val = 1697644545U}, {.reg = (unsigned short)3192U, .val = 1680932865U}, {.reg = (unsigned short)3192U, .val = 1664221185U}, {.reg = (unsigned short)3192U, .val = 1647509505U}, {.reg = (unsigned short)3192U, .val = 1630797825U}, {.reg = (unsigned short)3192U, .val = 1161101313U}, {.reg = (unsigned short)3192U, .val = 1144389633U}, {.reg = (unsigned short)3192U, .val = 1127677953U}, {.reg = (unsigned short)3192U, .val = 1110966273U}, {.reg = (unsigned short)3192U, .val = 1094254593U}, {.reg = (unsigned short)3192U, .val = 1077542913U}, {.reg = (unsigned short)3192U, .val = 1077608449U}, {.reg = (unsigned short)3192U, .val = 1077673985U}, {.reg = (unsigned short)3192U, .val = 1077739521U}, {.reg = (unsigned short)3192U, .val = 1077805057U}, {.reg = (unsigned short)3192U, .val = 1077870593U}, {.reg = (unsigned short)3192U, .val = 4215275521U}, {.reg = (unsigned short)3192U, .val = 4215341057U}, {.reg = (unsigned short)3192U, .val = 4215406593U}, {.reg = (unsigned short)3192U, .val = 4215472129U}, {.reg = (unsigned short)3192U, .val = 4215537665U}, {.reg = (unsigned short)3192U, .val = 4215603201U}, {.reg = (unsigned short)3192U, .val = 4198891521U}, {.reg = (unsigned short)3192U, .val = 4182179841U}, {.reg = (unsigned short)3192U, .val = 4165468161U}, {.reg = (unsigned short)3192U, .val = 4148756481U}, {.reg = (unsigned short)3192U, .val = 4132044801U}, {.reg = (unsigned short)3192U, .val = 4115333121U}, {.reg = (unsigned short)3192U, .val = 4098621441U}, {.reg = (unsigned short)3192U, .val = 4081909761U}, {.reg = (unsigned short)3192U, .val = 4065198081U}, {.reg = (unsigned short)3192U, .val = 4048486401U}, {.reg = (unsigned short)3192U, .val = 4031774721U}, {.reg = (unsigned short)3192U, .val = 4015063041U}, {.reg = (unsigned short)3192U, .val = 3998351361U}, {.reg = (unsigned short)3192U, .val = 3981639681U}, {.reg = (unsigned short)3192U, .val = 3964928001U}, {.reg = (unsigned short)3192U, .val = 3948216321U}, {.reg = (unsigned short)3192U, .val = 3931504641U}, {.reg = (unsigned short)3192U, .val = 3914792961U}, {.reg = (unsigned short)3192U, .val = 3898081281U}, {.reg = (unsigned short)3192U, .val = 3881369601U}, {.reg = (unsigned short)3192U, .val = 3864657921U}, {.reg = (unsigned short)3192U, .val = 3847946241U}, {.reg = (unsigned short)3192U, .val = 3831234561U}, {.reg = (unsigned short)3192U, .val = 3814522881U}, {.reg = (unsigned short)3192U, .val = 3797811201U}, {.reg = (unsigned short)3192U, .val = 3781099521U}, {.reg = (unsigned short)3192U, .val = 2321547265U}, {.reg = (unsigned short)3192U, .val = 2304835585U}, {.reg = (unsigned short)3192U, .val = 2288123905U}, {.reg = (unsigned short)3192U, .val = 2271412225U}, {.reg = (unsigned short)3192U, .val = 2254700545U}, {.reg = (unsigned short)3192U, .val = 2237988865U}, {.reg = (unsigned short)3192U, .val = 2221277185U}, {.reg = (unsigned short)3192U, .val = 2204565505U}, {.reg = (unsigned short)3192U, .val = 2187853825U}, {.reg = (unsigned short)3192U, .val = 1802043393U}, {.reg = (unsigned short)3192U, .val = 1785331713U}, {.reg = (unsigned short)3192U, .val = 1768620033U}, {.reg = (unsigned short)3192U, .val = 1751908353U}, {.reg = (unsigned short)3192U, .val = 1735196673U}, {.reg = (unsigned short)3192U, .val = 1718484993U}, {.reg = (unsigned short)3192U, .val = 1701773313U}, {.reg = (unsigned short)3192U, .val = 1685061633U}, {.reg = (unsigned short)3192U, .val = 1668349953U}, {.reg = (unsigned short)3192U, .val = 1651638273U}, {.reg = (unsigned short)3192U, .val = 1634926593U}, {.reg = (unsigned short)3192U, .val = 1232338945U}, {.reg = (unsigned short)3192U, .val = 1215627265U}, {.reg = (unsigned short)3192U, .val = 1198915585U}, {.reg = (unsigned short)3192U, .val = 1182203905U}, {.reg = (unsigned short)3192U, .val = 1165492225U}, {.reg = (unsigned short)3192U, .val = 1148780545U}, {.reg = (unsigned short)3192U, .val = 1132068865U}, {.reg = (unsigned short)3192U, .val = 1115357185U}, {.reg = (unsigned short)3192U, .val = 1098645505U}, {.reg = (unsigned short)3192U, .val = 1081933825U}, {.reg = (unsigned short)3192U, .val = 1081999361U}, {.reg = (unsigned short)3192U, .val = 1082064897U}, {.reg = (unsigned short)3152U, .val = 262178U}, {.reg = (unsigned short)3152U, .val = 262176U}, {.reg = (unsigned short)65535U, .val = 4294967295U}};
#line 266  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_8192e.c"
static struct rtl8xxxu_reg32val rtl8xxx_agc_8192eu_highpa_table[131U] = {{.reg = (unsigned short)3192U, .val = 4194304001U}, {.reg = (unsigned short)3192U, .val = 4177592321U}, {.reg = (unsigned short)3192U, .val = 4160880641U}, {.reg = (unsigned short)3192U, .val = 4144168961U}, {.reg = (unsigned short)3192U, .val = 4127457281U}, {.reg = (unsigned short)3192U, .val = 4110745601U}, {.reg = (unsigned short)3192U, .val = 4094033921U}, {.reg = (unsigned short)3192U, .val = 4077322241U}, {.reg = (unsigned short)3192U, .val = 4060610561U}, {.reg = (unsigned short)3192U, .val = 4043898881U}, {.reg = (unsigned short)3192U, .val = 4027187201U}, {.reg = (unsigned short)3192U, .val = 4010475521U}, {.reg = (unsigned short)3192U, .val = 3993763841U}, {.reg = (unsigned short)3192U, .val = 3977052161U}, {.reg = (unsigned short)3192U, .val = 3960340481U}, {.reg = (unsigned short)3192U, .val = 3943628801U}, {.reg = (unsigned short)3192U, .val = 3926917121U}, {.reg = (unsigned short)3192U, .val = 3910205441U}, {.reg = (unsigned short)3192U, .val = 3893493761U}, {.reg = (unsigned short)3192U, .val = 3876782081U}, {.reg = (unsigned short)3192U, .val = 3860070401U}, {.reg = (unsigned short)3192U, .val = 3843358721U}, {.reg = (unsigned short)3192U, .val = 3826647041U}, {.reg = (unsigned short)3192U, .val = 3809935361U}, {.reg = (unsigned short)3192U, .val = 3793223681U}, {.reg = (unsigned short)3192U, .val = 3776512001U}, {.reg = (unsigned short)3192U, .val = 2316959745U}, {.reg = (unsigned short)3192U, .val = 2300248065U}, {.reg = (unsigned short)3192U, .val = 2283536385U}, {.reg = (unsigned short)3192U, .val = 2266824705U}, {.reg = (unsigned short)3192U, .val = 2250113025U}, {.reg = (unsigned short)3192U, .val = 2233401345U}, {.reg = (unsigned short)3192U, .val = 2216689665U}, {.reg = (unsigned short)3192U, .val = 2199977985U}, {.reg = (unsigned short)3192U, .val = 2183266305U}, {.reg = (unsigned short)3192U, .val = 1780678657U}, {.reg = (unsigned short)3192U, .val = 1763966977U}, {.reg = (unsigned short)3192U, .val = 1747255297U}, {.reg = (unsigned short)3192U, .val = 1730543617U}, {.reg = (unsigned short)3192U, .val = 1713831937U}, {.reg = (unsigned short)3192U, .val = 1697120257U}, {.reg = (unsigned short)3192U, .val = 1680408577U}, {.reg = (unsigned short)3192U, .val = 1663696897U}, {.reg = (unsigned short)3192U, .val = 1646985217U}, {.reg = (unsigned short)3192U, .val = 1630273537U}, {.reg = (unsigned short)3192U, .val = 1613561857U}, {.reg = (unsigned short)3192U, .val = 1194196993U}, {.reg = (unsigned short)3192U, .val = 1177485313U}, {.reg = (unsigned short)3192U, .val = 1160773633U}, {.reg = (unsigned short)3192U, .val = 1144061953U}, {.reg = (unsigned short)3192U, .val = 1127350273U}, {.reg = (unsigned short)3192U, .val = 1110638593U}, {.reg = (unsigned short)3192U, .val = 1093926913U}, {.reg = (unsigned short)3192U, .val = 1077215233U}, {.reg = (unsigned short)3192U, .val = 1077280769U}, {.reg = (unsigned short)3192U, .val = 1077346305U}, {.reg = (unsigned short)3192U, .val = 1077411841U}, {.reg = (unsigned short)3192U, .val = 1077477377U}, {.reg = (unsigned short)3192U, .val = 1077542913U}, {.reg = (unsigned short)3192U, .val = 1077608449U}, {.reg = (unsigned short)3192U, .val = 1077673985U}, {.reg = (unsigned short)3192U, .val = 1077739521U}, {.reg = (unsigned short)3192U, .val = 1077805057U}, {.reg = (unsigned short)3192U, .val = 1077870593U}, {.reg = (unsigned short)3192U, .val = 4198498305U}, {.reg = (unsigned short)3192U, .val = 4181786625U}, {.reg = (unsigned short)3192U, .val = 4165074945U}, {.reg = (unsigned short)3192U, .val = 4148363265U}, {.reg = (unsigned short)3192U, .val = 4131651585U}, {.reg = (unsigned short)3192U, .val = 4114939905U}, {.reg = (unsigned short)3192U, .val = 4098228225U}, {.reg = (unsigned short)3192U, .val = 4081516545U}, {.reg = (unsigned short)3192U, .val = 4064804865U}, {.reg = (unsigned short)3192U, .val = 4048093185U}, {.reg = (unsigned short)3192U, .val = 4031381505U}, {.reg = (unsigned short)3192U, .val = 4014669825U}, {.reg = (unsigned short)3192U, .val = 3997958145U}, {.reg = (unsigned short)3192U, .val = 3981246465U}, {.reg = (unsigned short)3192U, .val = 3964534785U}, {.reg = (unsigned short)3192U, .val = 3947823105U}, {.reg = (unsigned short)3192U, .val = 3931111425U}, {.reg = (unsigned short)3192U, .val = 3914399745U}, {.reg = (unsigned short)3192U, .val = 3897688065U}, {.reg = (unsigned short)3192U, .val = 3880976385U}, {.reg = (unsigned short)3192U, .val = 3864264705U}, {.reg = (unsigned short)3192U, .val = 3847553025U}, {.reg = (unsigned short)3192U, .val = 3830841345U}, {.reg = (unsigned short)3192U, .val = 3814129665U}, {.reg = (unsigned short)3192U, .val = 3797417985U}, {.reg = (unsigned short)3192U, .val = 3780706305U}, {.reg = (unsigned short)3192U, .val = 2321154049U}, {.reg = (unsigned short)3192U, .val = 2304442369U}, {.reg = (unsigned short)3192U, .val = 2287730689U}, {.reg = (unsigned short)3192U, .val = 2271019009U}, {.reg = (unsigned short)3192U, .val = 2254307329U}, {.reg = (unsigned short)3192U, .val = 2237595649U}, {.reg = (unsigned short)3192U, .val = 2220883969U}, {.reg = (unsigned short)3192U, .val = 2204172289U}, {.reg = (unsigned short)3192U, .val = 2187460609U}, {.reg = (unsigned short)3192U, .val = 1784872961U}, {.reg = (unsigned short)3192U, .val = 1768161281U}, {.reg = (unsigned short)3192U, .val = 1751449601U}, {.reg = (unsigned short)3192U, .val = 1734737921U}, {.reg = (unsigned short)3192U, .val = 1718026241U}, {.reg = (unsigned short)3192U, .val = 1701314561U}, {.reg = (unsigned short)3192U, .val = 1684602881U}, {.reg = (unsigned short)3192U, .val = 1667891201U}, {.reg = (unsigned short)3192U, .val = 1651179521U}, {.reg = (unsigned short)3192U, .val = 1634467841U}, {.reg = (unsigned short)3192U, .val = 1617756161U}, {.reg = (unsigned short)3192U, .val = 1198391297U}, {.reg = (unsigned short)3192U, .val = 1181679617U}, {.reg = (unsigned short)3192U, .val = 1164967937U}, {.reg = (unsigned short)3192U, .val = 1148256257U}, {.reg = (unsigned short)3192U, .val = 1131544577U}, {.reg = (unsigned short)3192U, .val = 1114832897U}, {.reg = (unsigned short)3192U, .val = 1098121217U}, {.reg = (unsigned short)3192U, .val = 1081409537U}, {.reg = (unsigned short)3192U, .val = 1081475073U}, {.reg = (unsigned short)3192U, .val = 1081540609U}, {.reg = (unsigned short)3192U, .val = 1081606145U}, {.reg = (unsigned short)3192U, .val = 1081671681U}, {.reg = (unsigned short)3192U, .val = 1081737217U}, {.reg = (unsigned short)3192U, .val = 1081802753U}, {.reg = (unsigned short)3192U, .val = 1081868289U}, {.reg = (unsigned short)3192U, .val = 1081933825U}, {.reg = (unsigned short)3192U, .val = 1081999361U}, {.reg = (unsigned short)3192U, .val = 1082064897U}, {.reg = (unsigned short)3152U, .val = 262690U}, {.reg = (unsigned short)3152U, .val = 262688U}, {.reg = (unsigned short)65535U, .val = 4294967295U}};
#line 335  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_8192e.c"
static struct rtl8xxxu_rfregval rtl8192eu_radioa_init_table[98U] = {{.reg = (unsigned char)127U, .val = 130U}, {.reg = (unsigned char)129U, .val = 261120U}, {.val = 196608U}, {.reg = (unsigned char)8U, .val = 33792U}, {.reg = (unsigned char)24U, .val = 1031U}, {.reg = (unsigned char)25U, .val = 18U}, {.reg = (unsigned char)27U, .val = 100U}, {.reg = (unsigned char)30U, .val = 524297U}, {.reg = (unsigned char)31U, .val = 2176U}, {.reg = (unsigned char)47U, .val = 106592U}, {.reg = (unsigned char)63U}, {.reg = (unsigned char)66U, .val = 24768U}, {.reg = (unsigned char)87U, .val = 851968U}, {.reg = (unsigned char)88U, .val = 778624U}, {.reg = (unsigned char)103U, .val = 5458U}, {.reg = (unsigned char)131U}, {.reg = (unsigned char)176U, .val = 1047025U}, {.reg = (unsigned char)177U, .val = 349208U}, {.reg = (unsigned char)178U, .val = 576512U}, {.reg = (unsigned char)180U, .val = 274563U}, {.reg = (unsigned char)181U, .val = 33126U}, {.reg = (unsigned char)182U, .val = 32830U}, {.reg = (unsigned char)183U, .val = 116383U}, {.reg = (unsigned char)184U, .val = 16511U}, {.reg = (unsigned char)185U, .val = 524289U}, {.reg = (unsigned char)186U, .val = 262145U}, {.reg = (unsigned char)187U, .val = 1024U}, {.reg = (unsigned char)191U, .val = 786432U}, {.reg = (unsigned char)194U, .val = 9216U}, {.reg = (unsigned char)195U, .val = 9U}, {.reg = (unsigned char)196U, .val = 265361U}, {.reg = (unsigned char)197U, .val = 629145U}, {.reg = (unsigned char)198U, .val = 163U}, {.reg = (unsigned char)199U, .val = 559136U}, {.reg = (unsigned char)200U, .val = 486406U}, {.reg = (unsigned char)201U}, {.reg = (unsigned char)202U, .val = 524288U}, {.reg = (unsigned char)223U, .val = 384U}, {.reg = (unsigned char)239U, .val = 416U}, {.reg = (unsigned char)81U, .val = 431429U}, {.reg = (unsigned char)82U, .val = 517214U}, {.reg = (unsigned char)83U, .val = 113U}, {.reg = (unsigned char)86U, .val = 335859U}, {.reg = (unsigned char)53U, .val = 168U}, {.reg = (unsigned char)53U, .val = 482U}, {.reg = (unsigned char)53U, .val = 680U}, {.reg = (unsigned char)54U, .val = 7204U}, {.reg = (unsigned char)54U, .val = 39972U}, {.reg = (unsigned char)54U, .val = 72740U}, {.reg = (unsigned char)54U, .val = 105508U}, {.reg = (unsigned char)24U, .val = 3079U}, {.reg = (unsigned char)90U, .val = 294912U}, {.reg = (unsigned char)25U, .val = 473552U}, {.reg = (unsigned char)52U, .val = 44503U}, {.reg = (unsigned char)52U, .val = 40404U}, {.reg = (unsigned char)52U, .val = 36305U}, {.reg = (unsigned char)52U, .val = 32206U}, {.reg = (unsigned char)52U, .val = 28107U}, {.reg = (unsigned char)52U, .val = 24008U}, {.reg = (unsigned char)52U, .val = 19909U}, {.reg = (unsigned char)52U, .val = 13516U}, {.reg = (unsigned char)52U, .val = 9295U}, {.reg = (unsigned char)52U, .val = 5196U}, {.reg = (unsigned char)52U, .val = 20U}, {.val = 196953U}, {.reg = (unsigned char)132U, .val = 426368U}, {.reg = (unsigned char)134U, .val = 334U}, {.reg = (unsigned char)135U, .val = 298496U}, {.reg = (unsigned char)142U, .val = 415040U}, {.reg = (unsigned char)143U, .val = 557056U}, {.reg = (unsigned char)239U, .val = 8352U}, {.reg = (unsigned char)59U, .val = 983728U}, {.reg = (unsigned char)59U, .val = 980912U}, {.reg = (unsigned char)59U, .val = 872368U}, {.reg = (unsigned char)59U, .val = 847968U}, {.reg = (unsigned char)59U, .val = 721040U}, {.reg = (unsigned char)59U, .val = 655488U}, {.reg = (unsigned char)59U, .val = 589952U}, {.reg = (unsigned char)59U, .val = 587648U}, {.reg = (unsigned char)59U, .val = 493360U}, {.reg = (unsigned char)59U, .val = 397232U}, {.reg = (unsigned char)59U, .val = 393120U}, {.reg = (unsigned char)59U, .val = 263712U}, {.reg = (unsigned char)59U, .val = 225424U}, {.reg = (unsigned char)59U, .val = 131200U}, {.reg = (unsigned char)59U, .val = 127072U}, {.reg = (unsigned char)59U, .val = 65456U}, {.reg = (unsigned char)239U, .val = 160U}, {.reg = (unsigned char)254U}, {.reg = (unsigned char)24U, .val = 64519U}, {.reg = (unsigned char)254U}, {.reg = (unsigned char)254U}, {.reg = (unsigned char)254U}, {.reg = (unsigned char)254U}, {.reg = (unsigned char)30U, .val = 1U}, {.reg = (unsigned char)31U, .val = 524288U}, {.val = 212592U}, {.reg = (unsigned char)255U, .val = 4294967295U}};
#line 415  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_8192e.c"
static struct rtl8xxxu_rfregval rtl8192eu_radiob_init_table[78U] = {{.reg = (unsigned char)127U, .val = 130U}, {.reg = (unsigned char)129U, .val = 261120U}, {.val = 196608U}, {.reg = (unsigned char)8U, .val = 33792U}, {.reg = (unsigned char)24U, .val = 1031U}, {.reg = (unsigned char)25U, .val = 18U}, {.reg = (unsigned char)27U, .val = 100U}, {.reg = (unsigned char)30U, .val = 524297U}, {.reg = (unsigned char)31U, .val = 2176U}, {.reg = (unsigned char)47U, .val = 106592U}, {.reg = (unsigned char)63U}, {.reg = (unsigned char)66U, .val = 24768U}, {.reg = (unsigned char)87U, .val = 851968U}, {.reg = (unsigned char)88U, .val = 778624U}, {.reg = (unsigned char)103U, .val = 5458U}, {.reg = (unsigned char)127U, .val = 130U}, {.reg = (unsigned char)129U, .val = 258048U}, {.reg = (unsigned char)131U}, {.reg = (unsigned char)223U, .val = 384U}, {.reg = (unsigned char)239U, .val = 416U}, {.reg = (unsigned char)81U, .val = 431429U}, {.reg = (unsigned char)82U, .val = 517166U}, {.reg = (unsigned char)83U, .val = 113U}, {.reg = (unsigned char)86U, .val = 335859U}, {.reg = (unsigned char)53U, .val = 168U}, {.reg = (unsigned char)53U, .val = 480U}, {.reg = (unsigned char)53U, .val = 680U}, {.reg = (unsigned char)54U, .val = 7336U}, {.reg = (unsigned char)54U, .val = 39972U}, {.reg = (unsigned char)54U, .val = 72740U}, {.reg = (unsigned char)54U, .val = 105508U}, {.reg = (unsigned char)24U, .val = 3079U}, {.reg = (unsigned char)90U, .val = 294912U}, {.reg = (unsigned char)25U, .val = 473552U}, {.reg = (unsigned char)52U, .val = 44503U}, {.reg = (unsigned char)52U, .val = 40404U}, {.reg = (unsigned char)52U, .val = 36305U}, {.reg = (unsigned char)52U, .val = 32206U}, {.reg = (unsigned char)52U, .val = 28107U}, {.reg = (unsigned char)52U, .val = 24008U}, {.reg = (unsigned char)52U, .val = 19909U}, {.reg = (unsigned char)52U, .val = 13516U}, {.reg = (unsigned char)52U, .val = 9295U}, {.reg = (unsigned char)52U, .val = 5196U}, {.reg = (unsigned char)52U, .val = 20U}, {.val = 196953U}, {.reg = (unsigned char)132U, .val = 426368U}, {.reg = (unsigned char)134U, .val = 206U}, {.reg = (unsigned char)135U, .val = 297472U}, {.reg = (unsigned char)142U, .val = 415040U}, {.reg = (unsigned char)143U, .val = 557056U}, {.reg = (unsigned char)239U, .val = 8352U}, {.reg = (unsigned char)59U, .val = 983728U}, {.reg = (unsigned char)59U, .val = 980912U}, {.reg = (unsigned char)59U, .val = 872368U}, {.reg = (unsigned char)59U, .val = 847968U}, {.reg = (unsigned char)59U, .val = 721040U}, {.reg = (unsigned char)59U, .val = 655488U}, {.reg = (unsigned char)59U, .val = 589952U}, {.reg = (unsigned char)59U, .val = 587648U}, {.reg = (unsigned char)59U, .val = 493360U}, {.reg = (unsigned char)59U, .val = 397232U}, {.reg = (unsigned char)59U, .val = 393120U}, {.reg = (unsigned char)59U, .val = 263712U}, {.reg = (unsigned char)59U, .val = 225424U}, {.reg = (unsigned char)59U, .val = 131200U}, {.reg = (unsigned char)59U, .val = 127072U}, {.reg = (unsigned char)59U, .val = 65456U}, {.reg = (unsigned char)239U, .val = 160U}, {.val = 65881U}, {.reg = (unsigned char)254U}, {.reg = (unsigned char)254U}, {.reg = (unsigned char)254U}, {.reg = (unsigned char)254U}, {.reg = (unsigned char)30U, .val = 1U}, {.reg = (unsigned char)31U, .val = 524288U}, {.val = 212592U}, {.reg = (unsigned char)255U, .val = 4294967295U}};
#line 482  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_8192e.c"
static void rtl8192e_set_tx_power(struct rtl8xxxu_priv *priv, int channel, bool ht40)
{
  #line 484 
  u32 val32;
  #line 484 
  u32 ofdm;
  #line 484 
  u32 mcs;
  #line 485 
  u8 cck;
  #line 485 
  u8 ofdmbase;
  #line 485 
  u8 mcsbase;
  #line 486 
  int group;
  #line 486 
  int tx_idx;
  #line 488 
  tx_idx = 0;
  #line 489 
  group = rtl8xxxu_gen2_channel_to_group(channel);
  #line 491 
  cck = priv->cck_tx_power_index_A[group];
  #line 493 
  val32 = rtl8xxxu_read32(priv,(unsigned short)3592);
  #line 494 
  val32 &= 4294902015U;
  #line 495 
  val32 = (unsigned int)((int)cck << 8) | val32;
  #line 496 
  rtl8xxxu_write32(priv,(unsigned short)3592,val32);
  #line 498 
  val32 = rtl8xxxu_read32(priv,(unsigned short)2156);
  #line 499 
  val32 &= 255U;
  #line 500 
  val32 = (unsigned int)((((int)cck << 8) | ((int)cck << 16)) | ((int)cck << 24)) | val32;
  #line 501 
  rtl8xxxu_write32(priv,(unsigned short)2156,val32);
  #line 503 
  ofdmbase = priv->ht40_1s_tx_power_index_A[group];
  #line 504 
  ofdmbase = (unsigned char)((int)((unsigned char)priv->ofdm_tx_power_diff[tx_idx].a) + (int)ofdmbase);
  #line 505 
  ofdm = (unsigned int)((((int)ofdmbase | ((int)ofdmbase << 8)) | ((int)ofdmbase << 16)) | ((int)ofdmbase << 24));
  #line 507 
  rtl8xxxu_write32(priv,(unsigned short)3584,ofdm);
  #line 508 
  rtl8xxxu_write32(priv,(unsigned short)3588,ofdm);
  #line 510 
  mcsbase = priv->ht40_1s_tx_power_index_A[group];
  #line 511 
  if ((int)ht40 != 0) {
    #line 512 
    int tmp;
    #line 512 
    tmp = tx_idx;
    #line 512 
    tx_idx ++;
    #line 512 
    mcsbase = (unsigned char)((int)((unsigned char)priv->ht40_tx_power_diff[tmp].a) + (int)mcsbase);
  }
  else {
    #line 514 
    int tmp_0;
    #line 514 
    tmp_0 = tx_idx;
    #line 514 
    tx_idx ++;
    #line 514 
    mcsbase = (unsigned char)((int)((unsigned char)priv->ht20_tx_power_diff[tmp_0].a) + (int)mcsbase);
  }
  #line 515 
  mcs = (unsigned int)((((int)mcsbase | ((int)mcsbase << 8)) | ((int)mcsbase << 16)) | ((int)mcsbase << 24));
  #line 517 
  rtl8xxxu_write32(priv,(unsigned short)3600,mcs);
  #line 518 
  rtl8xxxu_write32(priv,(unsigned short)3604,mcs);
  #line 519 
  rtl8xxxu_write32(priv,(unsigned short)3608,mcs);
  #line 520 
  rtl8xxxu_write32(priv,(unsigned short)3612,mcs);
  #line 522 
  if ((unsigned int)priv->tx_paths > 1U) {
    #line 523 
    cck = priv->cck_tx_power_index_B[group];
    #line 525 
    val32 = rtl8xxxu_read32(priv,(unsigned short)2104);
    #line 526 
    val32 &= 255U;
    #line 527 
    val32 = (unsigned int)((((int)cck << 8) | ((int)cck << 16)) | ((int)cck << 24)) | val32;
    #line 528 
    rtl8xxxu_write32(priv,(unsigned short)2104,val32);
    #line 530 
    val32 = rtl8xxxu_read32(priv,(unsigned short)2156);
    #line 531 
    val32 &= 4294967040U;
    #line 532 
    val32 = (unsigned int)cck | val32;
    #line 533 
    rtl8xxxu_write32(priv,(unsigned short)2156,val32);
    #line 535 
    ofdmbase = priv->ht40_1s_tx_power_index_B[group];
    #line 536 
    ofdmbase = (unsigned char)((int)((unsigned char)priv->ofdm_tx_power_diff[tx_idx].b) + (int)ofdmbase);
    #line 537 
    ofdm = (unsigned int)((((int)ofdmbase | ((int)ofdmbase << 8)) | ((int)ofdmbase << 16)) | ((int)ofdmbase << 24));
    #line 540 
    rtl8xxxu_write32(priv,(unsigned short)2096,ofdm);
    #line 541 
    rtl8xxxu_write32(priv,(unsigned short)2100,ofdm);
    #line 543 
    mcsbase = priv->ht40_1s_tx_power_index_B[group];
    #line 544 
    if ((int)ht40 != 0) {
      #line 545 
      int tmp_1;
      #line 545 
      tmp_1 = tx_idx;
      #line 545 
      tx_idx ++;
      #line 545 
      mcsbase = (unsigned char)((int)((unsigned char)priv->ht40_tx_power_diff[tmp_1].b) + (int)mcsbase);
    }
    else {
      #line 547 
      int tmp_2;
      #line 547 
      tmp_2 = tx_idx;
      #line 547 
      tx_idx ++;
      #line 547 
      mcsbase = (unsigned char)((int)((unsigned char)priv->ht20_tx_power_diff[tmp_2].b) + (int)mcsbase);
    }
    #line 548 
    mcs = (unsigned int)((((int)mcsbase | ((int)mcsbase << 8)) | ((int)mcsbase << 16)) | ((int)mcsbase << 24));
    #line 550 
    rtl8xxxu_write32(priv,(unsigned short)2108,mcs);
    #line 551 
    rtl8xxxu_write32(priv,(unsigned short)2120,mcs);
    #line 552 
    rtl8xxxu_write32(priv,(unsigned short)2124,mcs);
    #line 553 
    rtl8xxxu_write32(priv,(unsigned short)2152,mcs);
  }
  #line 555 
  return;
}

#line 557  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_8192e.c"
static int rtl8192eu_parse_efuse(struct rtl8xxxu_priv *priv)
{
  #line 560 
  int i;
  #line 559 
  struct rtl8192eu_efuse *efuse = & priv->efuse_wifi.efuse8192eu;
  #line 562 
  if ((unsigned int)efuse->rtl_id != 33065U) 
                                             #line 563 
                                             return -22;
  #line 565 
  ether_addr_copy((u8 *)(& priv->mac_addr),(u8 *)(& efuse->mac_addr));
  #line 567 
  memcpy((void *)(& priv->cck_tx_power_index_A),(void *)(& efuse->tx_power_index_A.cck_base),6UL);
  #line 569 
  memcpy((void *)(& priv->cck_tx_power_index_B),(void *)(& efuse->tx_power_index_B.cck_base),6UL);
  #line 572 
  memcpy((void *)(& priv->ht40_1s_tx_power_index_A),(void *)(& efuse->tx_power_index_A.ht40_base),5UL);
  #line 575 
  memcpy((void *)(& priv->ht40_1s_tx_power_index_B),(void *)(& efuse->tx_power_index_B.ht40_base),5UL);
  #line 579 
  priv->ht20_tx_power_diff[0].a = efuse->tx_power_index_A.ht20_ofdm_1s_diff.b;
  #line 581 
  priv->ht20_tx_power_diff[0].b = efuse->tx_power_index_B.ht20_ofdm_1s_diff.b;
  #line 584 
  priv->ht40_tx_power_diff[0].a = (int)0;
  #line 585 
  priv->ht40_tx_power_diff[0].b = (int)0;
  #line 587 
  i = 1;
  #line 587 
  while (i <= 3) {
    #line 588 
    priv->ofdm_tx_power_diff[i].a = efuse->tx_power_index_A.pwr_diff[i + -1].ofdm;
    #line 590 
    priv->ofdm_tx_power_diff[i].b = efuse->tx_power_index_B.pwr_diff[i + -1].ofdm;
    #line 593 
    priv->ht20_tx_power_diff[i].a = efuse->tx_power_index_A.pwr_diff[i + -1].ht20;
    #line 595 
    priv->ht20_tx_power_diff[i].b = efuse->tx_power_index_B.pwr_diff[i + -1].ht20;
    #line 598 
    priv->ht40_tx_power_diff[i].a = efuse->tx_power_index_A.pwr_diff[i + -1].ht40;
    #line 600 
    priv->ht40_tx_power_diff[i].b = efuse->tx_power_index_B.pwr_diff[i + -1].ht40;
    #line 587 
    i ++;
  }
  #line 604 
  priv->has_xtalk = (unsigned int)1U;
  #line 605 
  priv->xtalk = (unsigned char)((unsigned int)priv->efuse_wifi.efuse8192eu.xtal_k & 63U);
  #line 607 
  _dev_info(& (priv->udev)->dev,(char *)"Vendor: %.7s\n",(u8 *)(& efuse->vendor_name));
  #line 608 
  _dev_info(& (priv->udev)->dev,(char *)"Product: %.11s\n",(u8 *)(& efuse->device_name));
  #line 609 
  if (memchr_inv((void *)(& efuse->serial),255,11UL) != (void *)0) 
                                                                   #line 610 
                                                                   _dev_info(& (priv->udev)->dev,(char *)"Serial: %.11s\n",(u8 *)(& efuse->serial)); else 
                                                                    #line 612 
                                                                    _dev_info(& (priv->udev)->dev,(char *)"Serial not available.\n");
  #line 614 
  if ((rtl8xxxu_debug & 8192) != 0) {
    #line 615 
    unsigned char *raw = (unsigned char *)(& priv->efuse_wifi.raw);
    #line 617 
    _dev_info(& (priv->udev)->dev,(char *)"%s: dumping efuse (0x%02zx bytes):\n",(char *)"rtl8192eu_parse_efuse",512UL);
    #line 620 
    i = 0;
    #line 620 
    while ((unsigned int)i <= 511U) {
      #line 621 
      _dev_info(& (priv->udev)->dev,(char *)"%02x: %8ph\n",i,raw + (unsigned long)i);
      #line 620 
      i += 8;
    }
  }
  #line 623 
  return 0;
}

#line 626  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_8192e.c"
static int rtl8192eu_load_firmware(struct rtl8xxxu_priv *priv)
{
  #line 628 
  char *fw_name;
  #line 629 
  int ret;
  #line 631 
  fw_name = (char *)"rtlwifi/rtl8192eu_nic.bin";
  #line 633 
  ret = rtl8xxxu_load_firmware(priv,fw_name);
  #line 635 
  return ret;
}

#line 638  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_8192e.c"
static void rtl8192eu_init_phy_bb(struct rtl8xxxu_priv *priv)
{
  #line 640 
  u8 val8;
  #line 641 
  u16 val16;
  #line 643 
  val16 = rtl8xxxu_read16(priv,(unsigned short)2);
  #line 644 
  val16 = (unsigned short)((unsigned int)val16 | 8195U);
  #line 645 
  rtl8xxxu_write16(priv,(unsigned short)2,(unsigned short)((int)val16));
  #line 648 
  val8 = (unsigned char)7U;
  #line 649 
  rtl8xxxu_write8(priv,(unsigned short)31,(unsigned char)((int)val8));
  #line 651 
  val16 = rtl8xxxu_read16(priv,(unsigned short)2);
  #line 652 
  val16 = (unsigned short)((unsigned int)val16 | 8215U);
  #line 654 
  rtl8xxxu_write16(priv,(unsigned short)2,(unsigned short)((int)val16));
  #line 655 
  val8 = (unsigned char)7U;
  #line 656 
  rtl8xxxu_write8(priv,(unsigned short)31,(unsigned char)((int)val8));
  #line 657 
  rtl8xxxu_init_phy_regs(priv,(struct rtl8xxxu_reg32val *)(& rtl8192eu_phy_init_table));
  #line 659 
  if ((unsigned int)priv->hi_pa != 0U) 
                                       #line 660 
                                       rtl8xxxu_init_phy_regs(priv,(struct rtl8xxxu_reg32val *)(& rtl8xxx_agc_8192eu_highpa_table)); else 
                                                                    #line 662 
                                                                    rtl8xxxu_init_phy_regs(priv,(struct rtl8xxxu_reg32val *)(& rtl8xxx_agc_8192eu_std_table));
  #line 663 
  return;
}

#line 665  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_8192e.c"
static int rtl8192eu_init_phy_rf(struct rtl8xxxu_priv *priv)
{
  #line 667 
  int ret;
  #line 669 
  ret = rtl8xxxu_init_phy_rf(priv,(struct rtl8xxxu_rfregval *)(& rtl8192eu_radioa_init_table),(enum rtl8xxxu_rfpath)RF_A);
  #line 670 
  if (ret != 0) 
                #line 671 
                goto exit;
  #line 673 
  ret = rtl8xxxu_init_phy_rf(priv,(struct rtl8xxxu_rfregval *)(& rtl8192eu_radiob_init_table),(enum rtl8xxxu_rfpath)RF_B);
  #line 675 
  exit: 
        #line 675 
  ;
  #line 676 
  return ret;
}

#line 679  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_8192e.c"
static int rtl8192eu_iqk_path_a(struct rtl8xxxu_priv *priv)
{
  #line 681 
  u32 reg_eac;
  #line 681 
  u32 reg_e94;
  #line 681 
  u32 reg_e9c;
  #line 682 
  int result = 0;
  #line 688 
  rtl8xxxu_write32(priv,(unsigned short)3624,0U);
  #line 689 
  rtl8xxxu_write_rfreg(priv,(enum rtl8xxxu_rfpath)RF_A,(unsigned char)223,384U);
  #line 690 
  rtl8xxxu_write32(priv,(unsigned short)3624,2155872256U);
  #line 693 
  rtl8xxxu_write32(priv,(unsigned short)3632,402689052U);
  #line 694 
  rtl8xxxu_write32(priv,(unsigned short)3636,939559964U);
  #line 695 
  rtl8xxxu_write32(priv,(unsigned short)3664,939559964U);
  #line 696 
  rtl8xxxu_write32(priv,(unsigned short)3668,939559964U);
  #line 698 
  rtl8xxxu_write32(priv,(unsigned short)3640,2182349571U);
  #line 699 
  rtl8xxxu_write32(priv,(unsigned short)3644,1746272256U);
  #line 702 
  rtl8xxxu_write32(priv,(unsigned short)3660,4598033U);
  #line 705 
  rtl8xxxu_write32(priv,(unsigned short)3656,4177526784U);
  #line 706 
  rtl8xxxu_write32(priv,(unsigned short)3656,4160749568U);
  {
    #line 708 
    unsigned long __ms = 10UL;
    #line 708 
    while (1) {
      #line 708 
      unsigned long tmp;
      #line 708 
      tmp = __ms;
      #line 708 
      __ms --;
      #line 708 
      ;
      #line 708 
      if (! (tmp != 0UL)) 
                          #line 708 
                          break;
      #line 708 
      __const_udelay(4295000UL);
    }
  }
  #line 711 
  reg_eac = rtl8xxxu_read32(priv,(unsigned short)3756);
  #line 712 
  reg_e94 = rtl8xxxu_read32(priv,(unsigned short)3732);
  #line 713 
  reg_e9c = rtl8xxxu_read32(priv,(unsigned short)3740);
  #line 715 
  if ((((unsigned long)reg_eac & 268435456UL) == 0UL && (reg_e94 & 67043328U) != 21102592U) && (reg_e9c & 67043328U) != 4325376U) 
    #line 718 
    result |= 1;
  #line 720 
  return result;
}

#line 723  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_8192e.c"
static int rtl8192eu_rx_iqk_path_a(struct rtl8xxxu_priv *priv)
{
  #line 725 
  u32 reg_ea4;
  #line 725 
  u32 reg_eac;
  #line 725 
  u32 reg_e94;
  #line 725 
  u32 reg_e9c;
  #line 725 
  u32 val32;
  #line 726 
  int result = 0;
  #line 729 
  rtl8xxxu_write32(priv,(unsigned short)3624,0U);
  #line 732 
  rtl8xxxu_write_rfreg(priv,(enum rtl8xxxu_rfpath)RF_A,(unsigned char)239,524448U);
  #line 733 
  rtl8xxxu_write_rfreg(priv,(enum rtl8xxxu_rfpath)RF_A,(unsigned char)48,196608U);
  #line 734 
  rtl8xxxu_write_rfreg(priv,(enum rtl8xxxu_rfpath)RF_A,(unsigned char)49,15U);
  #line 735 
  rtl8xxxu_write_rfreg(priv,(enum rtl8xxxu_rfpath)RF_A,(unsigned char)50,987515U);
  #line 738 
  rtl8xxxu_write_rfreg(priv,(enum rtl8xxxu_rfpath)RF_A,(unsigned char)223,2432U);
  #line 739 
  rtl8xxxu_write_rfreg(priv,(enum rtl8xxxu_rfpath)RF_A,(unsigned char)86,331776U);
  #line 742 
  rtl8xxxu_write32(priv,(unsigned short)3624,2155872256U);
  #line 745 
  rtl8xxxu_write32(priv,(unsigned short)3648,16808960U);
  #line 746 
  rtl8xxxu_write32(priv,(unsigned short)3652,16795648U);
  #line 749 
  rtl8xxxu_write32(priv,(unsigned short)3632,402689052U);
  #line 750 
  rtl8xxxu_write32(priv,(unsigned short)3636,939559964U);
  #line 751 
  rtl8xxxu_write32(priv,(unsigned short)3664,939559964U);
  #line 752 
  rtl8xxxu_write32(priv,(unsigned short)3668,939559964U);
  #line 754 
  rtl8xxxu_write32(priv,(unsigned short)3640,2182482975U);
  #line 755 
  rtl8xxxu_write32(priv,(unsigned short)3644,1746275359U);
  #line 758 
  rtl8xxxu_write32(priv,(unsigned short)3660,4630801U);
  #line 761 
  rtl8xxxu_write32(priv,(unsigned short)3656,4194304000U);
  #line 762 
  rtl8xxxu_write32(priv,(unsigned short)3656,4160749568U);
  {
    #line 764 
    unsigned long __ms = 10UL;
    #line 764 
    while (1) {
      #line 764 
      unsigned long tmp;
      #line 764 
      tmp = __ms;
      #line 764 
      __ms --;
      #line 764 
      ;
      #line 764 
      if (! (tmp != 0UL)) 
                          #line 764 
                          break;
      #line 764 
      __const_udelay(4295000UL);
    }
  }
  #line 767 
  reg_eac = rtl8xxxu_read32(priv,(unsigned short)3756);
  #line 768 
  reg_e94 = rtl8xxxu_read32(priv,(unsigned short)3732);
  #line 769 
  reg_e9c = rtl8xxxu_read32(priv,(unsigned short)3740);
  #line 771 
  if ((((unsigned long)reg_eac & 268435456UL) == 0UL && (reg_e94 & 67043328U) != 21102592U) && (reg_e9c & 67043328U) != 4325376U) 
    #line 774 
    result |= 1;
  else {
    #line 777 
    rtl8xxxu_write32(priv,(unsigned short)3624,0U);
    #line 778 
    rtl8xxxu_write_rfreg(priv,(enum rtl8xxxu_rfpath)RF_A,(unsigned char)223,384U);
    #line 779 
    goto out;
  }
  #line 782 
  val32 = ((reg_e94 & 67043328U) | ((reg_e9c >> 16) & 1023U)) | 2147515392U;
  #line 784 
  rtl8xxxu_write32(priv,(unsigned short)3648,val32);
  #line 787 
  rtl8xxxu_write32(priv,(unsigned short)3624,0U);
  #line 789 
  rtl8xxxu_write_rfreg(priv,(enum rtl8xxxu_rfpath)RF_A,(unsigned char)239,524448U);
  #line 790 
  rtl8xxxu_write_rfreg(priv,(enum rtl8xxxu_rfpath)RF_A,(unsigned char)48,196608U);
  #line 791 
  rtl8xxxu_write_rfreg(priv,(enum rtl8xxxu_rfpath)RF_A,(unsigned char)49,15U);
  #line 792 
  rtl8xxxu_write_rfreg(priv,(enum rtl8xxxu_rfpath)RF_A,(unsigned char)50,1015802U);
  #line 795 
  rtl8xxxu_write_rfreg(priv,(enum rtl8xxxu_rfpath)RF_A,(unsigned char)223,2432U);
  #line 796 
  rtl8xxxu_write_rfreg(priv,(enum rtl8xxxu_rfpath)RF_A,(unsigned char)86,331776U);
  #line 799 
  rtl8xxxu_write32(priv,(unsigned short)3624,2155872256U);
  #line 802 
  rtl8xxxu_write32(priv,(unsigned short)3652,16795648U);
  #line 805 
  rtl8xxxu_write32(priv,(unsigned short)3632,939559964U);
  #line 806 
  rtl8xxxu_write32(priv,(unsigned short)3636,402689052U);
  #line 807 
  rtl8xxxu_write32(priv,(unsigned short)3664,939559964U);
  #line 808 
  rtl8xxxu_write32(priv,(unsigned short)3668,939559964U);
  #line 810 
  rtl8xxxu_write32(priv,(unsigned short)3640,2182482975U);
  #line 811 
  rtl8xxxu_write32(priv,(unsigned short)3644,672533535U);
  #line 814 
  rtl8xxxu_write32(priv,(unsigned short)3660,4630673U);
  #line 817 
  rtl8xxxu_write32(priv,(unsigned short)3656,4194304000U);
  #line 818 
  rtl8xxxu_write32(priv,(unsigned short)3656,4160749568U);
  {
    #line 820 
    unsigned long __ms_0 = 10UL;
    #line 820 
    while (1) {
      #line 820 
      unsigned long tmp_0;
      #line 820 
      tmp_0 = __ms_0;
      #line 820 
      __ms_0 --;
      #line 820 
      ;
      #line 820 
      if (! (tmp_0 != 0UL)) 
                            #line 820 
                            break;
      #line 820 
      __const_udelay(4295000UL);
    }
  }
  #line 822 
  reg_eac = rtl8xxxu_read32(priv,(unsigned short)3756);
  #line 823 
  reg_ea4 = rtl8xxxu_read32(priv,(unsigned short)3748);
  #line 825 
  rtl8xxxu_write32(priv,(unsigned short)3624,0U);
  #line 826 
  rtl8xxxu_write_rfreg(priv,(enum rtl8xxxu_rfpath)RF_A,(unsigned char)223,384U);
  #line 828 
  if ((((unsigned long)reg_eac & 134217728UL) == 0UL && (reg_ea4 & 67043328U) != 20054016U) && (reg_eac & 67043328U) != 3538944U) 
    #line 831 
    result |= 2; else 
                      #line 833 
                      _dev_warn(& (priv->udev)->dev,(char *)"%s: Path A RX IQK failed!\n",(char *)"rtl8192eu_rx_iqk_path_a");
  #line 836 
  out: 
       #line 836 
  ;
  #line 837 
  return result;
}

#line 840  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_8192e.c"
static int rtl8192eu_iqk_path_b(struct rtl8xxxu_priv *priv)
{
  #line 842 
  u32 reg_eac;
  #line 842 
  u32 reg_eb4;
  #line 842 
  u32 reg_ebc;
  #line 843 
  int result = 0;
  #line 845 
  rtl8xxxu_write32(priv,(unsigned short)3624,0U);
  #line 846 
  rtl8xxxu_write_rfreg(priv,(enum rtl8xxxu_rfpath)RF_B,(unsigned char)223,384U);
  #line 847 
  rtl8xxxu_write32(priv,(unsigned short)3624,2155872256U);
  #line 849 
  rtl8xxxu_write32(priv,(unsigned short)3624,0U);
  #line 850 
  rtl8xxxu_write32(priv,(unsigned short)3624,2155872256U);
  #line 853 
  rtl8xxxu_write32(priv,(unsigned short)3632,939559964U);
  #line 854 
  rtl8xxxu_write32(priv,(unsigned short)3636,939559964U);
  #line 855 
  rtl8xxxu_write32(priv,(unsigned short)3664,402689052U);
  #line 856 
  rtl8xxxu_write32(priv,(unsigned short)3668,939559964U);
  #line 858 
  rtl8xxxu_write32(priv,(unsigned short)3672,2182349794U);
  #line 859 
  rtl8xxxu_write32(priv,(unsigned short)3676,1746272256U);
  #line 862 
  rtl8xxxu_write32(priv,(unsigned short)3660,4794641U);
  #line 865 
  rtl8xxxu_write32(priv,(unsigned short)3656,4194304000U);
  #line 866 
  rtl8xxxu_write32(priv,(unsigned short)3656,4160749568U);
  #line 868 
  __const_udelay(4295000UL);
  #line 871 
  reg_eac = rtl8xxxu_read32(priv,(unsigned short)3756);
  #line 872 
  reg_eb4 = rtl8xxxu_read32(priv,(unsigned short)3764);
  #line 873 
  reg_ebc = rtl8xxxu_read32(priv,(unsigned short)3772);
  #line 875 
  if ((((unsigned long)reg_eac & 2147483648UL) == 0UL && (reg_eb4 & 67043328U) != 21102592U) && (reg_ebc & 67043328U) != 4325376U) 
    #line 878 
    result |= 1; else 
                      #line 880 
                      _dev_warn(& (priv->udev)->dev,(char *)"%s: Path B IQK failed!\n",(char *)"rtl8192eu_iqk_path_b");
  #line 883 
  return result;
}

#line 886  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_8192e.c"
static int rtl8192eu_rx_iqk_path_b(struct rtl8xxxu_priv *priv)
{
  #line 888 
  u32 reg_eac;
  #line 888 
  u32 reg_eb4;
  #line 888 
  u32 reg_ebc;
  #line 888 
  u32 reg_ec4;
  #line 888 
  u32 reg_ecc;
  #line 888 
  u32 val32;
  #line 889 
  int result = 0;
  #line 892 
  rtl8xxxu_write32(priv,(unsigned short)3624,0U);
  #line 895 
  rtl8xxxu_write_rfreg(priv,(enum rtl8xxxu_rfpath)RF_B,(unsigned char)239,524448U);
  #line 896 
  rtl8xxxu_write_rfreg(priv,(enum rtl8xxxu_rfpath)RF_B,(unsigned char)48,196608U);
  #line 897 
  rtl8xxxu_write_rfreg(priv,(enum rtl8xxxu_rfpath)RF_B,(unsigned char)49,15U);
  #line 898 
  rtl8xxxu_write_rfreg(priv,(enum rtl8xxxu_rfpath)RF_B,(unsigned char)50,987515U);
  #line 901 
  rtl8xxxu_write_rfreg(priv,(enum rtl8xxxu_rfpath)RF_B,(unsigned char)223,2432U);
  #line 902 
  rtl8xxxu_write_rfreg(priv,(enum rtl8xxxu_rfpath)RF_B,(unsigned char)86,331776U);
  #line 905 
  rtl8xxxu_write32(priv,(unsigned short)3624,2155872256U);
  #line 908 
  rtl8xxxu_write32(priv,(unsigned short)3648,16808960U);
  #line 909 
  rtl8xxxu_write32(priv,(unsigned short)3652,16795648U);
  #line 912 
  rtl8xxxu_write32(priv,(unsigned short)3632,939559964U);
  #line 913 
  rtl8xxxu_write32(priv,(unsigned short)3636,939559964U);
  #line 914 
  rtl8xxxu_write32(priv,(unsigned short)3664,402689052U);
  #line 915 
  rtl8xxxu_write32(priv,(unsigned short)3668,939559964U);
  #line 917 
  rtl8xxxu_write32(priv,(unsigned short)3672,2182482975U);
  #line 918 
  rtl8xxxu_write32(priv,(unsigned short)3676,1746275359U);
  #line 921 
  rtl8xxxu_write32(priv,(unsigned short)3660,4630801U);
  #line 924 
  rtl8xxxu_write32(priv,(unsigned short)3656,4194304000U);
  #line 925 
  rtl8xxxu_write32(priv,(unsigned short)3656,4160749568U);
  {
    #line 927 
    unsigned long __ms = 10UL;
    #line 927 
    while (1) {
      #line 927 
      unsigned long tmp;
      #line 927 
      tmp = __ms;
      #line 927 
      __ms --;
      #line 927 
      ;
      #line 927 
      if (! (tmp != 0UL)) 
                          #line 927 
                          break;
      #line 927 
      __const_udelay(4295000UL);
    }
  }
  #line 930 
  reg_eac = rtl8xxxu_read32(priv,(unsigned short)3756);
  #line 931 
  reg_eb4 = rtl8xxxu_read32(priv,(unsigned short)3764);
  #line 932 
  reg_ebc = rtl8xxxu_read32(priv,(unsigned short)3772);
  #line 934 
  if ((((unsigned long)reg_eac & 2147483648UL) == 0UL && (reg_eb4 & 67043328U) != 21102592U) && (reg_ebc & 67043328U) != 4325376U) 
    #line 937 
    result |= 1;
  else {
    #line 943 
    rtl8xxxu_write32(priv,(unsigned short)3624,0U);
    #line 944 
    rtl8xxxu_write_rfreg(priv,(enum rtl8xxxu_rfpath)RF_B,(unsigned char)223,384U);
    #line 945 
    goto out;
  }
  #line 948 
  val32 = ((reg_eb4 & 67043328U) | ((reg_ebc >> 16) & 1023U)) | 2147515392U;
  #line 950 
  rtl8xxxu_write32(priv,(unsigned short)3648,val32);
  #line 953 
  rtl8xxxu_write32(priv,(unsigned short)3624,0U);
  #line 955 
  rtl8xxxu_write_rfreg(priv,(enum rtl8xxxu_rfpath)RF_B,(unsigned char)239,524448U);
  #line 956 
  rtl8xxxu_write_rfreg(priv,(enum rtl8xxxu_rfpath)RF_B,(unsigned char)48,196608U);
  #line 957 
  rtl8xxxu_write_rfreg(priv,(enum rtl8xxxu_rfpath)RF_B,(unsigned char)49,15U);
  #line 958 
  rtl8xxxu_write_rfreg(priv,(enum rtl8xxxu_rfpath)RF_B,(unsigned char)50,1015802U);
  #line 961 
  rtl8xxxu_write_rfreg(priv,(enum rtl8xxxu_rfpath)RF_B,(unsigned char)223,2432U);
  #line 962 
  rtl8xxxu_write_rfreg(priv,(enum rtl8xxxu_rfpath)RF_B,(unsigned char)86,331776U);
  #line 965 
  rtl8xxxu_write32(priv,(unsigned short)3624,2155872256U);
  #line 968 
  rtl8xxxu_write32(priv,(unsigned short)3652,16795648U);
  #line 971 
  rtl8xxxu_write32(priv,(unsigned short)3632,939559964U);
  #line 972 
  rtl8xxxu_write32(priv,(unsigned short)3636,939559964U);
  #line 973 
  rtl8xxxu_write32(priv,(unsigned short)3664,939559964U);
  #line 974 
  rtl8xxxu_write32(priv,(unsigned short)3668,402689052U);
  #line 976 
  rtl8xxxu_write32(priv,(unsigned short)3640,2182482975U);
  #line 977 
  rtl8xxxu_write32(priv,(unsigned short)3644,672533535U);
  #line 980 
  rtl8xxxu_write32(priv,(unsigned short)3660,4630673U);
  #line 983 
  rtl8xxxu_write32(priv,(unsigned short)3656,4194304000U);
  #line 984 
  rtl8xxxu_write32(priv,(unsigned short)3656,4160749568U);
  {
    #line 986 
    unsigned long __ms_0 = 10UL;
    #line 986 
    while (1) {
      #line 986 
      unsigned long tmp_0;
      #line 986 
      tmp_0 = __ms_0;
      #line 986 
      __ms_0 --;
      #line 986 
      ;
      #line 986 
      if (! (tmp_0 != 0UL)) 
                            #line 986 
                            break;
      #line 986 
      __const_udelay(4295000UL);
    }
  }
  #line 988 
  reg_eac = rtl8xxxu_read32(priv,(unsigned short)3756);
  #line 989 
  reg_ec4 = rtl8xxxu_read32(priv,(unsigned short)3780);
  #line 990 
  reg_ecc = rtl8xxxu_read32(priv,(unsigned short)3788);
  #line 992 
  rtl8xxxu_write32(priv,(unsigned short)3624,0U);
  #line 993 
  rtl8xxxu_write_rfreg(priv,(enum rtl8xxxu_rfpath)RF_B,(unsigned char)223,384U);
  #line 995 
  if ((((unsigned long)reg_eac & 1073741824UL) == 0UL && (reg_ec4 & 67043328U) != 20054016U) && (reg_ecc & 67043328U) != 3538944U) 
    #line 998 
    result |= 2; else 
                      #line 1000 
                      _dev_warn(& (priv->udev)->dev,(char *)"%s: Path B RX IQK failed!\n",(char *)"rtl8192eu_rx_iqk_path_b");
  #line 1003 
  out: 
       #line 1003 
  ;
  #line 1004 
  return result;
}

#line 1007  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_8192e.c"
static void rtl8192eu_phy_iqcalibrate(struct rtl8xxxu_priv *priv, int (*result)[8U], int t)
{
  #line 1011 
  u32 i;
  #line 1011 
  u32 val32;
  #line 1012 
  int path_a_ok;
  #line 1012 
  int path_b_ok;
  #line 1010 
  struct device *dev = & (priv->udev)->dev;
  #line 1013 
  int retry = 2;
  #line 1014 
  u32 adda_regs[16U] = {2140U, 3692U, 3696U, 3700U, 3704U, 3708U, 3712U, 3716U, 3720U, 3724U, 3792U, 3796U, 3800U, 3804U, 3808U, 3820U};
  #line 1024 
  u32 iqk_mac_regs[4U] = {1314U, 1360U, 1361U, 64U};
  #line 1028 
  u32 iqk_bb_regs[9U] = {3076U, 3080U, 2164U, 2920U, 2924U, 2160U, 2144U, 2148U, 2564U};
  #line 1034 
  u8 xa_agc = (unsigned char)rtl8xxxu_read32(priv,(unsigned short)3152);
  #line 1035 
  u8 xb_agc = (unsigned char)rtl8xxxu_read32(priv,(unsigned short)3160);
  #line 1042 
  if (t == 0) {
    #line 1044 
    rtl8xxxu_save_regs(priv,(u32 *)(& adda_regs),(u32 *)(& priv->adda_backup),16);
    #line 1046 
    rtl8xxxu_save_mac_regs(priv,(u32 *)(& iqk_mac_regs),(u32 *)(& priv->mac_backup));
    #line 1047 
    rtl8xxxu_save_regs(priv,(u32 *)(& iqk_bb_regs),(u32 *)(& priv->bb_backup),9);
  }
  #line 1051 
  rtl8xxxu_path_adda_on(priv,(u32 *)(& adda_regs),(_Bool)1);
  #line 1054 
  rtl8xxxu_mac_calibration(priv,(u32 *)(& iqk_mac_regs),(u32 *)(& priv->mac_backup));
  #line 1056 
  val32 = rtl8xxxu_read32(priv,(unsigned short)2564);
  #line 1057 
  val32 |= 251658240U;
  #line 1058 
  rtl8xxxu_write32(priv,(unsigned short)2564,val32);
  #line 1060 
  rtl8xxxu_write32(priv,(unsigned short)3076,60839424U);
  #line 1061 
  rtl8xxxu_write32(priv,(unsigned short)3080,524516U);
  #line 1062 
  rtl8xxxu_write32(priv,(unsigned short)2164,572555776U);
  #line 1064 
  val32 = rtl8xxxu_read32(priv,(unsigned short)2160);
  #line 1065 
  val32 |= 67109888U;
  #line 1066 
  rtl8xxxu_write32(priv,(unsigned short)2160,val32);
  #line 1068 
  val32 = rtl8xxxu_read32(priv,(unsigned short)2144);
  #line 1069 
  val32 |= 1024U;
  #line 1070 
  rtl8xxxu_write32(priv,(unsigned short)2144,val32);
  #line 1071 
  val32 = rtl8xxxu_read32(priv,(unsigned short)2148);
  #line 1072 
  val32 |= 1024U;
  #line 1073 
  rtl8xxxu_write32(priv,(unsigned short)2148,val32);
  #line 1075 
  rtl8xxxu_write32(priv,(unsigned short)3624,2155872256U);
  #line 1076 
  rtl8xxxu_write32(priv,(unsigned short)3648,16808960U);
  #line 1077 
  rtl8xxxu_write32(priv,(unsigned short)3652,16795648U);
  #line 1079 
  i = 0U;
  #line 1079 
  while (i < (unsigned int)retry) {
    #line 1080 
    path_a_ok = rtl8192eu_iqk_path_a(priv);
    #line 1081 
    if (path_a_ok == 1) {
      #line 1082 
      val32 = rtl8xxxu_read32(priv,(unsigned short)3732);
      #line 1084 
      (*(result + (unsigned long)t))[0] = (int)(val32 >> 16) & 1023;
      #line 1085 
      val32 = rtl8xxxu_read32(priv,(unsigned short)3740);
      #line 1087 
      (*(result + (unsigned long)t))[1] = (int)(val32 >> 16) & 1023;
      #line 1089 
      break;
    }
    #line 1079 
    i ++;
  }
  #line 1093 
  if (path_a_ok == 0) {
    #line 1094 
    bool branch;
    #line 1094 
    struct _ddebug __UNIQUE_ID_ddebug560 = {.modname = (char *)"rtl8xxxu", .function = (char *)"rtl8192eu_phy_iqcalibrate", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_8192e.c", .format = (char *)"%s: Path A TX IQK failed!\n", .lineno = (unsigned int)1094U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
    #line 1094 
    branch = arch_static_branch(& __UNIQUE_ID_ddebug560.key.dd_key_false.key,(_Bool)0);
    #line 1094 
    if ((long)((long)((int)branch != 0)) != 0L) 
                                                #line 1094 
                                                __dynamic_dev_dbg(& __UNIQUE_ID_ddebug560,dev,(char *)"%s: Path A TX IQK failed!\n",(char *)"rtl8192eu_phy_iqcalibrate");
  }
  #line 1096 
  i = 0U;
  #line 1096 
  while (i < (unsigned int)retry) {
    #line 1097 
    path_a_ok = rtl8192eu_rx_iqk_path_a(priv);
    #line 1098 
    if (path_a_ok == 3) {
      #line 1099 
      val32 = rtl8xxxu_read32(priv,(unsigned short)3748);
      #line 1101 
      (*(result + (unsigned long)t))[2] = (int)(val32 >> 16) & 1023;
      #line 1102 
      val32 = rtl8xxxu_read32(priv,(unsigned short)3756);
      #line 1104 
      (*(result + (unsigned long)t))[3] = (int)(val32 >> 16) & 1023;
      #line 1106 
      break;
    }
    #line 1096 
    i ++;
  }
  #line 1110 
  if (path_a_ok == 0) {
    #line 1111 
    bool branch_0;
    #line 1111 
    struct _ddebug __UNIQUE_ID_ddebug561 = {.modname = (char *)"rtl8xxxu", .function = (char *)"rtl8192eu_phy_iqcalibrate", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_8192e.c", .format = (char *)"%s: Path A RX IQK failed!\n", .lineno = (unsigned int)1111U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
    #line 1111 
    branch_0 = arch_static_branch(& __UNIQUE_ID_ddebug561.key.dd_key_false.key,(_Bool)0);
    #line 1111 
    if ((long)((long)((int)branch_0 != 0)) != 0L) 
                                                  #line 1111 
                                                  __dynamic_dev_dbg(& __UNIQUE_ID_ddebug561,dev,(char *)"%s: Path A RX IQK failed!\n",(char *)"rtl8192eu_phy_iqcalibrate");
  }
  #line 1113 
  if ((unsigned int)priv->rf_paths > 1U) {
    #line 1115 
    rtl8xxxu_write32(priv,(unsigned short)3624,0U);
    #line 1116 
    rtl8xxxu_write_rfreg(priv,(enum rtl8xxxu_rfpath)RF_A,(unsigned char)0,65536U);
    #line 1117 
    rtl8xxxu_write32(priv,(unsigned short)3624,2155872256U);
    #line 1120 
    rtl8xxxu_path_adda_on(priv,(u32 *)(& adda_regs),(_Bool)0);
    #line 1122 
    rtl8xxxu_write32(priv,(unsigned short)3624,2155872256U);
    #line 1123 
    rtl8xxxu_write32(priv,(unsigned short)3648,16808960U);
    #line 1124 
    rtl8xxxu_write32(priv,(unsigned short)3652,16795648U);
    #line 1126 
    i = 0U;
    #line 1126 
    while (i < (unsigned int)retry) {
      #line 1127 
      path_b_ok = rtl8192eu_iqk_path_b(priv);
      #line 1128 
      if (path_b_ok == 1) {
        #line 1129 
        val32 = rtl8xxxu_read32(priv,(unsigned short)3764);
        #line 1130 
        (*(result + (unsigned long)t))[4] = (int)(val32 >> 16) & 1023;
        #line 1131 
        val32 = rtl8xxxu_read32(priv,(unsigned short)3772);
        #line 1132 
        (*(result + (unsigned long)t))[5] = (int)(val32 >> 16) & 1023;
        #line 1133 
        break;
      }
      #line 1126 
      i ++;
    }
    #line 1137 
    if (path_b_ok == 0) {
      #line 1138 
      bool branch_1;
      #line 1138 
      struct _ddebug __UNIQUE_ID_ddebug562 = {.modname = (char *)"rtl8xxxu", .function = (char *)"rtl8192eu_phy_iqcalibrate", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_8192e.c", .format = (char *)"%s: Path B IQK failed!\n", .lineno = (unsigned int)1138U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
      #line 1138 
      branch_1 = arch_static_branch(& __UNIQUE_ID_ddebug562.key.dd_key_false.key,(_Bool)0);
      #line 1138 
      if ((long)((long)((int)branch_1 != 0)) != 0L) 
                                                    #line 1138 
                                                    __dynamic_dev_dbg(& __UNIQUE_ID_ddebug562,dev,(char *)"%s: Path B IQK failed!\n",(char *)"rtl8192eu_phy_iqcalibrate");
    }
    #line 1140 
    i = 0U;
    #line 1140 
    while (i < (unsigned int)retry) {
      #line 1141 
      path_b_ok = rtl8192eu_rx_iqk_path_b(priv);
      #line 1142 
      if (path_b_ok == 3) {
        #line 1143 
        val32 = rtl8xxxu_read32(priv,(unsigned short)3780);
        #line 1145 
        (*(result + (unsigned long)t))[6] = (int)(val32 >> 16) & 1023;
        #line 1146 
        val32 = rtl8xxxu_read32(priv,(unsigned short)3788);
        #line 1148 
        (*(result + (unsigned long)t))[7] = (int)(val32 >> 16) & 1023;
        #line 1149 
        break;
      }
      #line 1140 
      i ++;
    }
    #line 1153 
    if (path_b_ok == 0) {
      #line 1154 
      bool branch_2;
      #line 1154 
      struct _ddebug __UNIQUE_ID_ddebug563 = {.modname = (char *)"rtl8xxxu", .function = (char *)"rtl8192eu_phy_iqcalibrate", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_8192e.c", .format = (char *)"%s: Path B RX IQK failed!\n", .lineno = (unsigned int)1154U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
      #line 1154 
      branch_2 = arch_static_branch(& __UNIQUE_ID_ddebug563.key.dd_key_false.key,(_Bool)0);
      #line 1154 
      if ((long)((long)((int)branch_2 != 0)) != 0L) 
                                                    #line 1154 
                                                    __dynamic_dev_dbg(& __UNIQUE_ID_ddebug563,dev,(char *)"%s: Path B RX IQK failed!\n",(char *)"rtl8192eu_phy_iqcalibrate");
    }
  }
  #line 1158 
  rtl8xxxu_write32(priv,(unsigned short)3624,0U);
  #line 1160 
  if (t != 0) {
    #line 1162 
    rtl8xxxu_restore_regs(priv,(u32 *)(& adda_regs),(u32 *)(& priv->adda_backup),16);
    #line 1166 
    rtl8xxxu_restore_mac_regs(priv,(u32 *)(& iqk_mac_regs),(u32 *)(& priv->mac_backup));
    #line 1169 
    rtl8xxxu_restore_regs(priv,(u32 *)(& iqk_bb_regs),(u32 *)(& priv->bb_backup),9);
    #line 1173 
    val32 = rtl8xxxu_read32(priv,(unsigned short)3152);
    #line 1174 
    val32 &= 4294967040U;
    #line 1175 
    rtl8xxxu_write32(priv,(unsigned short)3152,val32 | 80U);
    #line 1176 
    rtl8xxxu_write32(priv,(unsigned short)3152,(unsigned int)xa_agc | val32);
    #line 1178 
    if ((unsigned int)priv->rf_paths > 1U) {
      #line 1179 
      val32 = rtl8xxxu_read32(priv,(unsigned short)3160);
      #line 1180 
      val32 &= 4294967040U;
      #line 1181 
      rtl8xxxu_write32(priv,(unsigned short)3160,val32 | 80U);
      #line 1183 
      rtl8xxxu_write32(priv,(unsigned short)3160,(unsigned int)xb_agc | val32);
    }
    #line 1188 
    rtl8xxxu_write32(priv,(unsigned short)3632,16813056U);
    #line 1189 
    rtl8xxxu_write32(priv,(unsigned short)3636,16813056U);
  }
  #line 1191 
  return;
}

#line 1193  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_8192e.c"
static void rtl8192eu_phy_iq_calibrate(struct rtl8xxxu_priv *priv)
{
  #line 1196 
  int result[4U][8U];
  #line 1197 
  int i;
  #line 1197 
  int candidate;
  #line 1198 
  bool path_a_ok;
  #line 1198 
  bool path_b_ok;
  #line 1199 
  u32 reg_e94;
  #line 1199 
  u32 reg_e9c;
  #line 1199 
  u32 reg_ea4;
  #line 1199 
  u32 reg_eac;
  #line 1200 
  u32 reg_eb4;
  #line 1200 
  u32 reg_ebc;
  #line 1200 
  u32 reg_ec4;
  #line 1200 
  u32 reg_ecc;
  #line 1201 
  bool simu;
  #line 1195 
  struct device *dev = & (priv->udev)->dev;
  #line 1203 
  memset((void *)(& result),0,128UL);
  #line 1204 
  candidate = -1;
  #line 1206 
  path_a_ok = (_Bool)0;
  #line 1207 
  path_b_ok = (_Bool)0;
  #line 1209 
  i = 0;
  #line 1209 
  while (i <= 2) {
    #line 1210 
    rtl8192eu_phy_iqcalibrate(priv,(int (*)[8U])(& result),i);
    #line 1212 
    if (i == 1) {
      #line 1213 
      simu = rtl8xxxu_gen2_simularity_compare(priv,(int (*)[8U])(& result),0,1);
      #line 1215 
      if ((int)simu != 0) {
        #line 1216 
        candidate = 0;
        #line 1217 
        break;
      }
    }
    #line 1221 
    if (i == 2) {
      #line 1222 
      simu = rtl8xxxu_gen2_simularity_compare(priv,(int (*)[8U])(& result),0,2);
      #line 1224 
      if ((int)simu != 0) {
        #line 1225 
        candidate = 0;
        #line 1226 
        break;
      }
      #line 1229 
      simu = rtl8xxxu_gen2_simularity_compare(priv,(int (*)[8U])(& result),1,2);
      #line 1231 
      if ((int)simu != 0) 
                          #line 1232 
                          candidate = 1; else 
                                              #line 1234 
                                              candidate = 3;
    }
    #line 1209 
    i ++;
  }
  #line 1238 
  i = 0;
  #line 1238 
  while (i <= 3) {
    #line 1239 
    reg_e94 = (unsigned int)result[i][0];
    #line 1240 
    reg_e9c = (unsigned int)result[i][1];
    #line 1241 
    reg_ea4 = (unsigned int)result[i][2];
    #line 1242 
    reg_eb4 = (unsigned int)result[i][4];
    #line 1243 
    reg_ebc = (unsigned int)result[i][5];
    #line 1244 
    reg_ec4 = (unsigned int)result[i][6];
    #line 1238 
    i ++;
  }
  #line 1247 
  if (candidate >= 0) {
    #line 1248 
    reg_e94 = (unsigned int)result[candidate][0];
    #line 1249 
    priv->rege94 = reg_e94;
    #line 1250 
    reg_e9c = (unsigned int)result[candidate][1];
    #line 1251 
    priv->rege9c = reg_e9c;
    #line 1252 
    reg_ea4 = (unsigned int)result[candidate][2];
    #line 1253 
    reg_eac = (unsigned int)result[candidate][3];
    #line 1254 
    reg_eb4 = (unsigned int)result[candidate][4];
    #line 1255 
    priv->regeb4 = reg_eb4;
    #line 1256 
    reg_ebc = (unsigned int)result[candidate][5];
    #line 1257 
    priv->regebc = reg_ebc;
    #line 1258 
    reg_ec4 = (unsigned int)result[candidate][6];
    #line 1259 
    reg_ecc = (unsigned int)result[candidate][7];
    {
      #line 1260 
      bool branch;
      #line 1260 
      struct _ddebug __UNIQUE_ID_ddebug564 = {.modname = (char *)"rtl8xxxu", .function = (char *)"rtl8192eu_phy_iq_calibrate", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_8192e.c", .format = (char *)"%s: candidate is %x\n", .lineno = (unsigned int)1260U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
      #line 1260 
      branch = arch_static_branch(& __UNIQUE_ID_ddebug564.key.dd_key_false.key,(_Bool)0);
      #line 1260 
      if ((long)((long)((int)branch != 0)) != 0L) 
                                                  #line 1260 
                                                  __dynamic_dev_dbg(& __UNIQUE_ID_ddebug564,dev,(char *)"%s: candidate is %x\n",(char *)"rtl8192eu_phy_iq_calibrate",candidate);
    }
    {
      #line 1261 
      bool branch_0;
      #line 1261 
      struct _ddebug __UNIQUE_ID_ddebug565 = {.modname = (char *)"rtl8xxxu", .function = (char *)"rtl8192eu_phy_iq_calibrate", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_8192e.c", .format = (char *)"%s: e94 =%x e9c=%x ea4=%x eac=%x eb4=%x ebc=%x ec4=%x ecc=%x\n", .lineno = (unsigned int)1261U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
      #line 1261 
      branch_0 = arch_static_branch(& __UNIQUE_ID_ddebug565.key.dd_key_false.key,(_Bool)0);
      #line 1261 
      if ((long)((long)((int)branch_0 != 0)) != 0L) 
                                                    #line 1261 
                                                    __dynamic_dev_dbg(& __UNIQUE_ID_ddebug565,dev,(char *)"%s: e94 =%x e9c=%x ea4=%x eac=%x eb4=%x ebc=%x ec4=%x ecc=%x\n",(char *)"rtl8192eu_phy_iq_calibrate",reg_e94,reg_e9c,reg_ea4,reg_eac,reg_eb4,reg_ebc,reg_ec4,reg_ecc);
    }
    #line 1265 
    path_a_ok = (_Bool)1;
    #line 1266 
    path_b_ok = (_Bool)1;
  }
  else {
    #line 1268 
    priv->regeb4 = 256U;
    #line 1268 
    priv->rege94 = 256U;
    #line 1268 
    reg_eb4 = 256U;
    #line 1268 
    reg_e94 = reg_eb4;
    #line 1269 
    priv->regebc = 0U;
    #line 1269 
    priv->rege9c = 0U;
    #line 1269 
    reg_ebc = 0U;
    #line 1269 
    reg_e9c = reg_ebc;
  }
  #line 1272 
  if (reg_e94 != 0U && candidate >= 0) 
                                       #line 1273 
                                       rtl8xxxu_fill_iqk_matrix_a(priv,(_Bool)((bool)((int)path_a_ok) != 0),(int (*)[8U])(& result),candidate,(_Bool)(reg_ea4 == 0U));
  #line 1276 
  if ((unsigned int)priv->rf_paths > 1U) 
                                         #line 1277 
                                         rtl8xxxu_fill_iqk_matrix_b(priv,(_Bool)((bool)((int)path_b_ok) != 0),(int (*)[8U])(& result),candidate,(_Bool)(reg_ec4 == 0U));
  #line 1280 
  rtl8xxxu_save_regs(priv,(u32 *)(& rtl8xxxu_iqk_phy_iq_bb_reg),(u32 *)(& priv->bb_recovery_backup),9);
  #line 1282 
  return;
}

#line 1287  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_8192e.c"
static void rtl8192e_crystal_afe_adjust(struct rtl8xxxu_priv *priv)
{
  #line 1289 
  u8 val8;
  #line 1290 
  u32 val32;
  #line 1295 
  val8 = rtl8xxxu_read8(priv,(unsigned short)40);
  #line 1296 
  val8 = (unsigned char)((unsigned int)val8 & 251U);
  #line 1297 
  rtl8xxxu_write8(priv,(unsigned short)40,(unsigned char)((int)val8));
  #line 1299 
  val32 = rtl8xxxu_read32(priv,(unsigned short)120);
  #line 1300 
  val32 &= 4294966399U;
  #line 1301 
  rtl8xxxu_write32(priv,(unsigned short)120,val32);
  #line 1307 
  val8 = rtl8xxxu_read8(priv,(unsigned short)40);
  #line 1308 
  val8 = (unsigned char)((unsigned int)val8 & 191U);
  #line 1309 
  rtl8xxxu_write8(priv,(unsigned short)40,(unsigned char)((int)val8));
  #line 1314 
  val32 = rtl8xxxu_read32(priv,(unsigned short)120);
  #line 1315 
  val32 &= 4292870143U;
  #line 1316 
  rtl8xxxu_write32(priv,(unsigned short)120,val32);
  #line 1317 
  return;
}

#line 1319  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_8192e.c"
static void rtl8192e_disabled_to_emu(struct rtl8xxxu_priv *priv)
{
  #line 1321 
  u8 val8;
  #line 1324 
  val8 = rtl8xxxu_read8(priv,(unsigned short)5);
  #line 1325 
  val8 = (unsigned char)((unsigned int)val8 & 231U);
  #line 1326 
  rtl8xxxu_write8(priv,(unsigned short)5,(unsigned char)((int)val8));
  #line 1327 
  return;
}

#line 1329  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_8192e.c"
static int rtl8192e_emu_to_active(struct rtl8xxxu_priv *priv)
{
  #line 1331 
  u8 val8;
  #line 1332 
  u32 val32;
  #line 1333 
  int count;
  #line 1333 
  int ret = 0;
  #line 1336 
  val8 = rtl8xxxu_read8(priv,(unsigned short)5);
  #line 1337 
  val8 = (unsigned char)((unsigned int)val8 & 127U);
  #line 1338 
  rtl8xxxu_write8(priv,(unsigned short)5,(unsigned char)((int)val8));
  #line 1341 
  val8 = rtl8xxxu_read8(priv,(unsigned short)5);
  #line 1342 
  val8 = (unsigned char)((unsigned int)val8 & 251U);
  #line 1343 
  rtl8xxxu_write8(priv,(unsigned short)5,(unsigned char)((int)val8));
  #line 1346 
  val8 = rtl8xxxu_read8(priv,(unsigned short)5);
  #line 1347 
  val8 = (unsigned char)((unsigned int)val8 & 231U);
  #line 1348 
  rtl8xxxu_write8(priv,(unsigned short)5,(unsigned char)((int)val8));
  #line 1351 
  count = 500;
  #line 1351 
  while (count != 0) {
    #line 1352 
    val32 = rtl8xxxu_read32(priv,(unsigned short)4);
    #line 1353 
    if (((unsigned long)val32 & 131072UL) != 0UL) 
                                                  #line 1354 
                                                  break;
    #line 1356 
    __const_udelay(42950UL);
    #line 1351 
    count --;
  }
  #line 1359 
  if (count == 0) {
    #line 1360 
    ret = -16;
    #line 1361 
    goto exit;
  }
  #line 1367 
  val8 = rtl8xxxu_read8(priv,(unsigned short)6);
  #line 1368 
  val8 = (unsigned char)((unsigned int)val8 | 1U);
  #line 1369 
  rtl8xxxu_write8(priv,(unsigned short)6,(unsigned char)((int)val8));
  #line 1372 
  val32 = rtl8xxxu_read32(priv,(unsigned short)4);
  #line 1373 
  val32 |= 256U;
  #line 1374 
  rtl8xxxu_write32(priv,(unsigned short)4,val32);
  #line 1376 
  count = 500;
  #line 1376 
  while (count != 0) {
    #line 1377 
    val32 = rtl8xxxu_read32(priv,(unsigned short)4);
    #line 1378 
    if (((unsigned long)val32 & 256UL) == 0UL) {
      #line 1379 
      ret = 0;
      #line 1380 
      break;
    }
    #line 1382 
    __const_udelay(42950UL);
    #line 1376 
    count --;
  }
  #line 1385 
  if (count == 0) {
    #line 1386 
    ret = -16;
    #line 1387 
    goto exit;
  }
  #line 1390 
  exit: 
        #line 1390 
  ;
  #line 1391 
  return ret;
}

#line 1394  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_8192e.c"
static int rtl8192eu_active_to_lps(struct rtl8xxxu_priv *priv)
{
  #line 1397 
  u8 val8;
  #line 1398 
  u16 val16;
  #line 1399 
  u32 val32;
  #line 1400 
  int retry;
  #line 1400 
  int retval;
  #line 1396 
  struct device *dev = & (priv->udev)->dev;
  #line 1402 
  rtl8xxxu_write8(priv,(unsigned short)1314,(unsigned char)255);
  #line 1404 
  retry = 100;
  #line 1405 
  retval = -16;
  #line 1409 
  while (1) {
    #line 1415 
    int tmp;
    #line 1410 
    val32 = rtl8xxxu_read32(priv,(unsigned short)1528);
    #line 1411 
    if (val32 == 0U) {
      #line 1412 
      retval = 0;
      #line 1413 
      break;
    }
    #line 1415 
    tmp = retry;
    #line 1415 
    retry --;
    #line 1415 
    ;
    #line 1415 
    if (! (tmp != 0)) 
                      #line 1409 
                      break;
  }
  #line 1417 
  if (retry == 0) {
    #line 1418 
    _dev_warn(dev,(char *)"Failed to flush TX queue\n");
    #line 1419 
    retval = -16;
    #line 1420 
    goto out;
  }
  #line 1424 
  val8 = rtl8xxxu_read8(priv,(unsigned short)2);
  #line 1425 
  val8 = (unsigned char)((unsigned int)val8 & 254U);
  #line 1426 
  rtl8xxxu_write8(priv,(unsigned short)2,(unsigned char)((int)val8));
  #line 1428 
  __const_udelay(8590UL);
  #line 1431 
  val8 = rtl8xxxu_read8(priv,(unsigned short)2);
  #line 1432 
  val8 = (unsigned char)((unsigned int)val8 & 253U);
  #line 1433 
  rtl8xxxu_write8(priv,(unsigned short)2,(unsigned char)((int)val8));
  #line 1436 
  val16 = rtl8xxxu_read16(priv,(unsigned short)256);
  #line 1437 
  val16 = (unsigned short)((unsigned int)val16 & 65280U);
  #line 1438 
  val16 = (unsigned short)((unsigned int)val16 | 3U);
  #line 1439 
  rtl8xxxu_write16(priv,(unsigned short)256,(unsigned short)((int)val16));
  #line 1441 
  val16 = rtl8xxxu_read16(priv,(unsigned short)256);
  #line 1442 
  val16 = (unsigned short)((unsigned int)val16 & 65023U);
  #line 1443 
  rtl8xxxu_write16(priv,(unsigned short)256,(unsigned short)((int)val16));
  #line 1445 
  val8 = rtl8xxxu_read8(priv,(unsigned short)1363);
  #line 1446 
  val8 = (unsigned char)((unsigned int)val8 | 32U);
  #line 1447 
  rtl8xxxu_write8(priv,(unsigned short)1363,(unsigned char)((int)val8));
  #line 1449 
  out: 
       #line 1449 
  ;
  #line 1450 
  return retval;
}

#line 1453  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_8192e.c"
static int rtl8192eu_active_to_emu(struct rtl8xxxu_priv *priv)
{
  #line 1455 
  u8 val8;
  #line 1456 
  int count;
  #line 1456 
  int ret = 0;
  #line 1459 
  val8 = rtl8xxxu_read8(priv,(unsigned short)31);
  #line 1460 
  val8 = (unsigned char)((unsigned int)val8 & 254U);
  #line 1461 
  rtl8xxxu_write8(priv,(unsigned short)31,(unsigned char)((int)val8));
  #line 1464 
  val8 = rtl8xxxu_read8(priv,(unsigned short)78);
  #line 1465 
  val8 = (unsigned char)((unsigned int)val8 & 127U);
  #line 1466 
  rtl8xxxu_write8(priv,(unsigned short)78,(unsigned char)((int)val8));
  #line 1469 
  val8 = rtl8xxxu_read8(priv,(unsigned short)5);
  #line 1470 
  val8 = (unsigned char)((unsigned int)val8 | 2U);
  #line 1471 
  rtl8xxxu_write8(priv,(unsigned short)5,(unsigned char)((int)val8));
  #line 1473 
  count = 500;
  #line 1473 
  while (count != 0) {
    #line 1474 
    val8 = rtl8xxxu_read8(priv,(unsigned short)5);
    #line 1475 
    if (((unsigned long)val8 & 2UL) == 0UL) 
                                            #line 1476 
                                            break;
    #line 1477 
    __const_udelay(42950UL);
    #line 1473 
    count --;
  }
  #line 1480 
  if (count == 0) {
    #line 1481 
    _dev_warn(& (priv->udev)->dev,(char *)"%s: Disabling MAC timed out\n",(char *)"rtl8192eu_active_to_emu");
    #line 1483 
    ret = -16;
    #line 1484 
    goto exit;
  }
  #line 1487 
  exit: 
        #line 1487 
  ;
  #line 1488 
  return ret;
}

#line 1491  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_8192e.c"
static int rtl8192eu_emu_to_disabled(struct rtl8xxxu_priv *priv)
{
  #line 1493 
  u8 val8;
  #line 1496 
  val8 = rtl8xxxu_read8(priv,(unsigned short)5);
  #line 1497 
  val8 = (unsigned char)((unsigned int)val8 & 231U);
  #line 1498 
  val8 = (unsigned char)((unsigned int)val8 | 8U);
  #line 1499 
  rtl8xxxu_write8(priv,(unsigned short)5,(unsigned char)((int)val8));
  #line 1501 
  return 0;
}

#line 1504  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_8192e.c"
static int rtl8192eu_power_on(struct rtl8xxxu_priv *priv)
{
  #line 1506 
  u16 val16;
  #line 1507 
  u32 val32;
  #line 1508 
  int ret;
  #line 1510 
  ret = 0;
  #line 1512 
  val32 = rtl8xxxu_read32(priv,(unsigned short)240);
  #line 1513 
  if (((unsigned long)val32 & 16777216UL) != 0UL) 
                                                  #line 1514 
                                                  rtl8xxxu_write8(priv,(unsigned short)124,(unsigned char)195);
  else {
    #line 1519 
    val32 = rtl8xxxu_read32(priv,(unsigned short)20);
    #line 1520 
    val32 &= 4279238655U;
    #line 1521 
    val32 |= 5242880U;
    #line 1522 
    rtl8xxxu_write32(priv,(unsigned short)20,val32);
    #line 1523 
    rtl8xxxu_write8(priv,(unsigned short)124,(unsigned char)131);
  }
  #line 1529 
  rtl8192e_crystal_afe_adjust(priv);
  #line 1530 
  rtl8192e_disabled_to_emu(priv);
  #line 1532 
  ret = rtl8192e_emu_to_active(priv);
  #line 1533 
  if (ret != 0) 
                #line 1534 
                goto exit;
  #line 1536 
  rtl8xxxu_write16(priv,(unsigned short)256,(unsigned short)0);
  #line 1542 
  val16 = rtl8xxxu_read16(priv,(unsigned short)256);
  #line 1543 
  val16 = (unsigned short)((unsigned int)val16 | 1791U);
  #line 1548 
  rtl8xxxu_write16(priv,(unsigned short)256,(unsigned short)((int)val16));
  #line 1550 
  exit: 
        #line 1550 
  ;
  #line 1551 
  return ret;
}

#line 1554  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_8192e.c"
static void rtl8192eu_power_off(struct rtl8xxxu_priv *priv)
{
  #line 1556 
  u8 val8;
  #line 1557 
  u16 val16;
  #line 1559 
  rtl8xxxu_flush_fifo(priv);
  #line 1561 
  val8 = rtl8xxxu_read8(priv,(unsigned short)1260);
  #line 1562 
  val8 = (unsigned char)((unsigned int)val8 & 253U);
  #line 1563 
  rtl8xxxu_write8(priv,(unsigned short)1260,(unsigned char)((int)val8));
  #line 1566 
  rtl8xxxu_write8(priv,(unsigned short)31,(unsigned char)0);
  #line 1568 
  rtl8192eu_active_to_lps(priv);
  #line 1571 
  if (((unsigned long)rtl8xxxu_read8(priv,(unsigned short)128) & 128UL) != 0UL) 
    #line 1572 
    rtl8xxxu_firmware_self_reset(priv);
  #line 1575 
  val16 = rtl8xxxu_read16(priv,(unsigned short)2);
  #line 1576 
  val16 = (unsigned short)((unsigned int)val16 & 64511U);
  #line 1577 
  rtl8xxxu_write16(priv,(unsigned short)2,(unsigned short)((int)val16));
  #line 1580 
  rtl8xxxu_write8(priv,(unsigned short)128,(unsigned char)0);
  #line 1582 
  rtl8xxxu_reset_8051(priv);
  #line 1584 
  rtl8192eu_active_to_emu(priv);
  #line 1585 
  rtl8192eu_emu_to_disabled(priv);
  #line 1586 
  return;
}

#line 1588  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_8192e.c"
static void rtl8192e_enable_rf(struct rtl8xxxu_priv *priv)
{
  #line 1590 
  u32 val32;
  #line 1591 
  u8 val8;
  #line 1593 
  val32 = rtl8xxxu_read32(priv,(unsigned short)3696);
  #line 1594 
  val32 |= 12582912U;
  #line 1595 
  rtl8xxxu_write32(priv,(unsigned short)3696,val32);
  #line 1597 
  val8 = rtl8xxxu_read8(priv,(unsigned short)64);
  #line 1598 
  val8 = (unsigned char)((unsigned int)val8 | 32U);
  #line 1599 
  rtl8xxxu_write8(priv,(unsigned short)64,(unsigned char)((int)val8));
  #line 1604 
  rtl8xxxu_write8(priv,(unsigned short)1902,(unsigned char)4);
  #line 1606 
  val32 = rtl8xxxu_read32(priv,(unsigned short)56);
  #line 1607 
  val32 |= 2048U;
  #line 1608 
  rtl8xxxu_write32(priv,(unsigned short)56,val32);
  #line 1610 
  val32 = rtl8xxxu_read32(priv,(unsigned short)2372);
  #line 1611 
  val32 |= 3U;
  #line 1612 
  rtl8xxxu_write32(priv,(unsigned short)2372,val32);
  #line 1614 
  rtl8xxxu_write8(priv,(unsigned short)2352,(unsigned char)119);
  #line 1616 
  val32 = rtl8xxxu_read32(priv,(unsigned short)76);
  #line 1617 
  val32 &= 4278190079U;
  #line 1618 
  val32 |= 8388608U;
  #line 1619 
  rtl8xxxu_write32(priv,(unsigned short)76,val32);
  #line 1624 
  val8 = rtl8xxxu_read8(priv,(unsigned short)100);
  #line 1625 
  val8 = (unsigned char)((unsigned int)val8 & 254U);
  #line 1626 
  rtl8xxxu_write8(priv,(unsigned short)100,(unsigned char)((int)val8));
  #line 1627 
  return;
}

#line 1629  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_8192e.c"
struct rtl8xxxu_fileops rtl8192eu_fops = {.parse_efuse = & rtl8192eu_parse_efuse, .load_firmware = & rtl8192eu_load_firmware, .power_on = & rtl8192eu_power_on, .power_off = & rtl8192eu_power_off, .reset_8051 = & rtl8xxxu_reset_8051, .llt_init = & rtl8xxxu_auto_llt_table, .init_phy_bb = & rtl8192eu_init_phy_bb, .init_phy_rf = & rtl8192eu_init_phy_rf, .phy_iq_calibrate = & rtl8192eu_phy_iq_calibrate, .config_channel = & rtl8xxxu_gen2_config_channel, .parse_rx_desc = & rtl8xxxu_parse_rxdesc24, .enable_rf = & rtl8192e_enable_rf, .disable_rf = & rtl8xxxu_gen2_disable_rf, .usb_quirks = & rtl8xxxu_gen2_usb_quirks, .set_tx_power = & rtl8192e_set_tx_power, .update_rate_mask = & rtl8xxxu_gen2_update_rate_mask, .report_connect = & rtl8xxxu_gen2_report_connect, .fill_txdesc = & rtl8xxxu_fill_txdesc_v2, .writeN_block_size = 128, .tx_desc_size = (char)40, .rx_desc_size = (char)24, .gen2_thermal_meter = (unsigned char)1U, .adda_1t_init = 264246806U, .adda_1t_path_on = 264246806U, .adda_2t_path_on_a = 264246806U, .adda_2t_path_on_b = 264246806U, .trxff_boundary = (unsigned short)15615U, .mactable = (struct rtl8xxxu_reg8val *)(& rtl8192e_mac_init_table), .total_page_num = (unsigned char)243U, .page_num_hi = (unsigned char)8U, .page_num_lo = (unsigned char)12U};
#line 171  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/printk.h"
#line 171 
int printk(char * , ...);
#line 469  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernel.h"
#line 469 
int sprintf(char *, char * , ...);
#line 1445  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.h"
#line 130  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
struct rtl8xxxu_reg8val rtl8xxxu_gen1_mac_init_table[87U];
#line 1480  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.h"
#line 1480 
void rtl8xxxu_power_off(struct rtl8xxxu_priv *priv);
#line 1489 
#line 1489 
int rtl8xxxu_init_llt_table(struct rtl8xxxu_priv *priv);
#line 1490 
#line 1490 
void rtl8xxxu_gen1_phy_iq_calibrate(struct rtl8xxxu_priv *priv);
#line 1491 
#line 1491 
void rtl8xxxu_gen1_init_phy_bb(struct rtl8xxxu_priv *priv);
#line 1492 
#line 1492 
void rtl8xxxu_gen1_set_tx_power(struct rtl8xxxu_priv *priv, int channel, bool ht40);
#line 1494 
#line 1494 
void rtl8xxxu_gen1_config_channel(struct ieee80211_hw *hw);
#line 1496 
#line 1496 
void rtl8xxxu_gen1_usb_quirks(struct rtl8xxxu_priv *priv);
#line 1498 
#line 1498 
void rtl8xxxu_update_rate_mask(struct rtl8xxxu_priv *priv, u32 ramask, u8 rateid, int sgi);
#line 1502 
#line 1502 
void rtl8xxxu_gen1_report_connect(struct rtl8xxxu_priv *priv, u8 macid, bool connect);
#line 1506 
#line 1506 
void rtl8xxxu_gen1_init_aggregation(struct rtl8xxxu_priv *priv);
#line 1507 
#line 1507 
void rtl8xxxu_gen1_enable_rf(struct rtl8xxxu_priv *priv);
#line 1508 
#line 1508 
void rtl8xxxu_gen1_disable_rf(struct rtl8xxxu_priv *priv);
#line 1510 
#line 1510 
int rtl8xxxu_parse_rxdesc16(struct rtl8xxxu_priv *priv, struct sk_buff *skb);
#line 1515 
#line 1515 
void rtl8xxxu_fill_txdesc_v1(struct ieee80211_hw *hw, struct ieee80211_hdr *hdr, struct ieee80211_tx_info *tx_info, struct rtl8xxxu_txdesc32 *tx_desc, bool sgi, bool short_preamble, bool ampdu_enable, u32 rts_rate);
#line 1528 
#line 543  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_8192c.c"
struct rtl8xxxu_fileops rtl8192cu_fops;
#line 36  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_8192c.c"
static struct rtl8xxxu_power_base rtl8192c_power_base = {.reg_0e00 = 118033420U, .reg_0e04 = 16909317U, .reg_0e10 = 185338894U, .reg_0e14 = 16975110U, .reg_0e18 = 185339150U, .reg_0e1c = 16975113U, .reg_0830 = 118033420U, .reg_0834 = 16909317U, .reg_083c = 185339150U, .reg_0848 = 16975113U, .reg_084c = 185339150U, .reg_0868 = 16975113U};
#line 58  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_8192c.c"
static struct rtl8xxxu_power_base rtl8188r_power_base = {.reg_0e00 = 101189640U, .reg_0e04 = 263174U, .reg_0e10 = 67503624U, .reg_0e14 = 131588U, .reg_0e18 = 67503624U, .reg_0e1c = 131588U, .reg_0830 = 101189640U, .reg_0834 = 263174U, .reg_083c = 67503624U, .reg_0848 = 131588U, .reg_084c = 67503624U, .reg_0868 = 131588U};
#line 80  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_8192c.c"
static struct rtl8xxxu_rfregval rtl8192cu_radioa_2t_init_table[142U] = {{.val = 196953U}, {.reg = (unsigned char)1U, .val = 201348U}, {.reg = (unsigned char)2U, .val = 622592U}, {.reg = (unsigned char)3U, .val = 101475U}, {.reg = (unsigned char)4U, .val = 135399U}, {.reg = (unsigned char)9U, .val = 132175U}, {.reg = (unsigned char)10U, .val = 110001U}, {.reg = (unsigned char)11U, .val = 346215U}, {.reg = (unsigned char)12U, .val = 563502U}, {.reg = (unsigned char)13U, .val = 58668U}, {.reg = (unsigned char)14U, .val = 236775U}, {.reg = (unsigned char)15U, .val = 1105U}, {.reg = (unsigned char)25U}, {.reg = (unsigned char)26U, .val = 66133U}, {.reg = (unsigned char)27U, .val = 395776U}, {.reg = (unsigned char)28U, .val = 1033080U}, {.reg = (unsigned char)29U, .val = 660048U}, {.reg = (unsigned char)30U, .val = 279647U}, {.reg = (unsigned char)31U, .val = 524289U}, {.reg = (unsigned char)32U, .val = 46612U}, {.reg = (unsigned char)33U, .val = 442368U}, {.reg = (unsigned char)34U}, {.reg = (unsigned char)35U, .val = 5464U}, {.reg = (unsigned char)36U, .val = 96U}, {.reg = (unsigned char)37U, .val = 1155U}, {.reg = (unsigned char)38U, .val = 323584U}, {.reg = (unsigned char)39U, .val = 968665U}, {.reg = (unsigned char)40U, .val = 358336U}, {.reg = (unsigned char)41U, .val = 18307U}, {.reg = (unsigned char)42U, .val = 1U}, {.reg = (unsigned char)43U, .val = 135988U}, {.reg = (unsigned char)42U}, {.reg = (unsigned char)43U, .val = 84U}, {.reg = (unsigned char)42U, .val = 1U}, {.reg = (unsigned char)43U, .val = 2056U}, {.reg = (unsigned char)43U, .val = 340787U}, {.reg = (unsigned char)44U, .val = 12U}, {.reg = (unsigned char)42U, .val = 2U}, {.reg = (unsigned char)43U, .val = 2056U}, {.reg = (unsigned char)43U, .val = 373555U}, {.reg = (unsigned char)44U, .val = 13U}, {.reg = (unsigned char)42U, .val = 3U}, {.reg = (unsigned char)43U, .val = 2056U}, {.reg = (unsigned char)43U, .val = 406323U}, {.reg = (unsigned char)44U, .val = 13U}, {.reg = (unsigned char)42U, .val = 4U}, {.reg = (unsigned char)43U, .val = 2056U}, {.reg = (unsigned char)43U, .val = 439091U}, {.reg = (unsigned char)44U, .val = 13U}, {.reg = (unsigned char)42U, .val = 5U}, {.reg = (unsigned char)43U, .val = 2056U}, {.reg = (unsigned char)43U, .val = 471859U}, {.reg = (unsigned char)44U, .val = 13U}, {.reg = (unsigned char)42U, .val = 6U}, {.reg = (unsigned char)43U, .val = 1801U}, {.reg = (unsigned char)43U, .val = 373555U}, {.reg = (unsigned char)44U, .val = 13U}, {.reg = (unsigned char)42U, .val = 7U}, {.reg = (unsigned char)43U, .val = 1801U}, {.reg = (unsigned char)43U, .val = 406323U}, {.reg = (unsigned char)44U, .val = 13U}, {.reg = (unsigned char)42U, .val = 8U}, {.reg = (unsigned char)43U, .val = 1546U}, {.reg = (unsigned char)43U, .val = 308019U}, {.reg = (unsigned char)44U, .val = 13U}, {.reg = (unsigned char)42U, .val = 9U}, {.reg = (unsigned char)43U, .val = 1546U}, {.reg = (unsigned char)43U, .val = 340787U}, {.reg = (unsigned char)44U, .val = 13U}, {.reg = (unsigned char)42U, .val = 10U}, {.reg = (unsigned char)43U, .val = 1546U}, {.reg = (unsigned char)43U, .val = 373555U}, {.reg = (unsigned char)44U, .val = 13U}, {.reg = (unsigned char)42U, .val = 11U}, {.reg = (unsigned char)43U, .val = 1546U}, {.reg = (unsigned char)43U, .val = 406323U}, {.reg = (unsigned char)44U, .val = 13U}, {.reg = (unsigned char)42U, .val = 12U}, {.reg = (unsigned char)43U, .val = 1546U}, {.reg = (unsigned char)43U, .val = 439091U}, {.reg = (unsigned char)44U, .val = 13U}, {.reg = (unsigned char)42U, .val = 13U}, {.reg = (unsigned char)43U, .val = 1546U}, {.reg = (unsigned char)43U, .val = 471859U}, {.reg = (unsigned char)44U, .val = 13U}, {.reg = (unsigned char)42U, .val = 14U}, {.reg = (unsigned char)43U, .val = 1291U}, {.reg = (unsigned char)43U, .val = 419430U}, {.reg = (unsigned char)44U, .val = 26U}, {.reg = (unsigned char)42U, .val = 917504U}, {.reg = (unsigned char)16U, .val = 262159U}, {.reg = (unsigned char)17U, .val = 930300U}, {.reg = (unsigned char)16U, .val = 393231U}, {.reg = (unsigned char)17U, .val = 1047032U}, {.reg = (unsigned char)16U, .val = 131087U}, {.reg = (unsigned char)17U, .val = 132089U}, {.reg = (unsigned char)16U, .val = 196623U}, {.reg = (unsigned char)17U, .val = 1045760U}, {.reg = (unsigned char)16U}, {.reg = (unsigned char)17U}, {.reg = (unsigned char)16U, .val = 524303U}, {.reg = (unsigned char)17U, .val = 258304U}, {.reg = (unsigned char)16U, .val = 589839U}, {.reg = (unsigned char)17U, .val = 143616U}, {.reg = (unsigned char)18U, .val = 204800U}, {.reg = (unsigned char)18U, .val = 462848U}, {.reg = (unsigned char)18U, .val = 720896U}, {.reg = (unsigned char)18U, .val = 1032192U}, {.reg = (unsigned char)19U, .val = 165811U}, {.reg = (unsigned char)19U, .val = 148663U}, {.reg = (unsigned char)19U, .val = 132267U}, {.reg = (unsigned char)19U, .val = 115871U}, {.reg = (unsigned char)19U, .val = 99475U}, {.reg = (unsigned char)19U, .val = 82587U}, {.reg = (unsigned char)19U, .val = 66201U}, {.reg = (unsigned char)19U, .val = 49820U}, {.reg = (unsigned char)19U, .val = 33184U}, {.reg = (unsigned char)19U, .val = 16556U}, {.reg = (unsigned char)19U, .val = 32U}, {.reg = (unsigned char)20U, .val = 103500U}, {.reg = (unsigned char)20U, .val = 365636U}, {.reg = (unsigned char)20U, .val = 627788U}, {.reg = (unsigned char)20U, .val = 889924U}, {.reg = (unsigned char)21U, .val = 62500U}, {.reg = (unsigned char)21U, .val = 324644U}, {.reg = (unsigned char)21U, .val = 586788U}, {.reg = (unsigned char)21U, .val = 848932U}, {.reg = (unsigned char)22U, .val = 918320U}, {.reg = (unsigned char)22U, .val = 656176U}, {.reg = (unsigned char)22U, .val = 394032U}, {.reg = (unsigned char)22U, .val = 131888U}, {.val = 65881U}, {.reg = (unsigned char)24U, .val = 62465U}, {.reg = (unsigned char)254U}, {.reg = (unsigned char)254U}, {.reg = (unsigned char)31U, .val = 524291U}, {.reg = (unsigned char)254U}, {.reg = (unsigned char)254U}, {.reg = (unsigned char)30U, .val = 279639U}, {.reg = (unsigned char)31U, .val = 524288U}, {.val = 196953U}, {.reg = (unsigned char)255U, .val = 4294967295U}};
#line 155  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_8192c.c"
static struct rtl8xxxu_rfregval rtl8192cu_radiob_2t_init_table[40U] = {{.val = 196953U}, {.reg = (unsigned char)1U, .val = 201348U}, {.reg = (unsigned char)2U, .val = 622592U}, {.reg = (unsigned char)3U, .val = 101475U}, {.reg = (unsigned char)4U, .val = 135399U}, {.reg = (unsigned char)9U, .val = 132175U}, {.reg = (unsigned char)10U, .val = 110001U}, {.reg = (unsigned char)11U, .val = 346215U}, {.reg = (unsigned char)12U, .val = 563502U}, {.reg = (unsigned char)13U, .val = 58668U}, {.reg = (unsigned char)14U, .val = 236775U}, {.reg = (unsigned char)15U, .val = 1105U}, {.reg = (unsigned char)18U, .val = 204800U}, {.reg = (unsigned char)18U, .val = 462848U}, {.reg = (unsigned char)18U, .val = 720896U}, {.reg = (unsigned char)18U, .val = 1032192U}, {.reg = (unsigned char)19U, .val = 165807U}, {.reg = (unsigned char)19U, .val = 148663U}, {.reg = (unsigned char)19U, .val = 132267U}, {.reg = (unsigned char)19U, .val = 115871U}, {.reg = (unsigned char)19U, .val = 99475U}, {.reg = (unsigned char)19U, .val = 82583U}, {.reg = (unsigned char)19U, .val = 66197U}, {.reg = (unsigned char)19U, .val = 49816U}, {.reg = (unsigned char)19U, .val = 33180U}, {.reg = (unsigned char)19U, .val = 16552U}, {.reg = (unsigned char)19U, .val = 28U}, {.reg = (unsigned char)20U, .val = 103500U}, {.reg = (unsigned char)20U, .val = 365636U}, {.reg = (unsigned char)20U, .val = 627788U}, {.reg = (unsigned char)20U, .val = 889924U}, {.reg = (unsigned char)21U, .val = 62500U}, {.reg = (unsigned char)21U, .val = 324644U}, {.reg = (unsigned char)21U, .val = 586788U}, {.reg = (unsigned char)21U, .val = 848932U}, {.reg = (unsigned char)22U, .val = 918320U}, {.reg = (unsigned char)22U, .val = 656176U}, {.reg = (unsigned char)22U, .val = 394032U}, {.reg = (unsigned char)22U, .val = 131888U}, {.reg = (unsigned char)255U, .val = 4294967295U}};
#line 179  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_8192c.c"
static struct rtl8xxxu_rfregval rtl8192cu_radioa_1t_init_table[142U] = {{.val = 196953U}, {.reg = (unsigned char)1U, .val = 201348U}, {.reg = (unsigned char)2U, .val = 622592U}, {.reg = (unsigned char)3U, .val = 101475U}, {.reg = (unsigned char)4U, .val = 135399U}, {.reg = (unsigned char)9U, .val = 132175U}, {.reg = (unsigned char)10U, .val = 110001U}, {.reg = (unsigned char)11U, .val = 346215U}, {.reg = (unsigned char)12U, .val = 563502U}, {.reg = (unsigned char)13U, .val = 58668U}, {.reg = (unsigned char)14U, .val = 236775U}, {.reg = (unsigned char)15U, .val = 1105U}, {.reg = (unsigned char)25U}, {.reg = (unsigned char)26U, .val = 66133U}, {.reg = (unsigned char)27U, .val = 395776U}, {.reg = (unsigned char)28U, .val = 1033080U}, {.reg = (unsigned char)29U, .val = 660048U}, {.reg = (unsigned char)30U, .val = 279647U}, {.reg = (unsigned char)31U, .val = 524289U}, {.reg = (unsigned char)32U, .val = 46612U}, {.reg = (unsigned char)33U, .val = 442368U}, {.reg = (unsigned char)34U}, {.reg = (unsigned char)35U, .val = 5464U}, {.reg = (unsigned char)36U, .val = 96U}, {.reg = (unsigned char)37U, .val = 1155U}, {.reg = (unsigned char)38U, .val = 323584U}, {.reg = (unsigned char)39U, .val = 968665U}, {.reg = (unsigned char)40U, .val = 358336U}, {.reg = (unsigned char)41U, .val = 18307U}, {.reg = (unsigned char)42U, .val = 1U}, {.reg = (unsigned char)43U, .val = 135988U}, {.reg = (unsigned char)42U}, {.reg = (unsigned char)43U, .val = 84U}, {.reg = (unsigned char)42U, .val = 1U}, {.reg = (unsigned char)43U, .val = 2056U}, {.reg = (unsigned char)43U, .val = 340787U}, {.reg = (unsigned char)44U, .val = 12U}, {.reg = (unsigned char)42U, .val = 2U}, {.reg = (unsigned char)43U, .val = 2056U}, {.reg = (unsigned char)43U, .val = 373555U}, {.reg = (unsigned char)44U, .val = 13U}, {.reg = (unsigned char)42U, .val = 3U}, {.reg = (unsigned char)43U, .val = 2056U}, {.reg = (unsigned char)43U, .val = 406323U}, {.reg = (unsigned char)44U, .val = 13U}, {.reg = (unsigned char)42U, .val = 4U}, {.reg = (unsigned char)43U, .val = 2056U}, {.reg = (unsigned char)43U, .val = 439091U}, {.reg = (unsigned char)44U, .val = 13U}, {.reg = (unsigned char)42U, .val = 5U}, {.reg = (unsigned char)43U, .val = 2056U}, {.reg = (unsigned char)43U, .val = 471859U}, {.reg = (unsigned char)44U, .val = 13U}, {.reg = (unsigned char)42U, .val = 6U}, {.reg = (unsigned char)43U, .val = 1801U}, {.reg = (unsigned char)43U, .val = 373555U}, {.reg = (unsigned char)44U, .val = 13U}, {.reg = (unsigned char)42U, .val = 7U}, {.reg = (unsigned char)43U, .val = 1801U}, {.reg = (unsigned char)43U, .val = 406323U}, {.reg = (unsigned char)44U, .val = 13U}, {.reg = (unsigned char)42U, .val = 8U}, {.reg = (unsigned char)43U, .val = 1546U}, {.reg = (unsigned char)43U, .val = 308019U}, {.reg = (unsigned char)44U, .val = 13U}, {.reg = (unsigned char)42U, .val = 9U}, {.reg = (unsigned char)43U, .val = 1546U}, {.reg = (unsigned char)43U, .val = 340787U}, {.reg = (unsigned char)44U, .val = 13U}, {.reg = (unsigned char)42U, .val = 10U}, {.reg = (unsigned char)43U, .val = 1546U}, {.reg = (unsigned char)43U, .val = 373555U}, {.reg = (unsigned char)44U, .val = 13U}, {.reg = (unsigned char)42U, .val = 11U}, {.reg = (unsigned char)43U, .val = 1546U}, {.reg = (unsigned char)43U, .val = 406323U}, {.reg = (unsigned char)44U, .val = 13U}, {.reg = (unsigned char)42U, .val = 12U}, {.reg = (unsigned char)43U, .val = 1546U}, {.reg = (unsigned char)43U, .val = 439091U}, {.reg = (unsigned char)44U, .val = 13U}, {.reg = (unsigned char)42U, .val = 13U}, {.reg = (unsigned char)43U, .val = 1546U}, {.reg = (unsigned char)43U, .val = 471859U}, {.reg = (unsigned char)44U, .val = 13U}, {.reg = (unsigned char)42U, .val = 14U}, {.reg = (unsigned char)43U, .val = 1291U}, {.reg = (unsigned char)43U, .val = 419430U}, {.reg = (unsigned char)44U, .val = 26U}, {.reg = (unsigned char)42U, .val = 917504U}, {.reg = (unsigned char)16U, .val = 262159U}, {.reg = (unsigned char)17U, .val = 930300U}, {.reg = (unsigned char)16U, .val = 393231U}, {.reg = (unsigned char)17U, .val = 1047032U}, {.reg = (unsigned char)16U, .val = 131087U}, {.reg = (unsigned char)17U, .val = 132089U}, {.reg = (unsigned char)16U, .val = 196623U}, {.reg = (unsigned char)17U, .val = 1045760U}, {.reg = (unsigned char)16U}, {.reg = (unsigned char)17U}, {.reg = (unsigned char)16U, .val = 524303U}, {.reg = (unsigned char)17U, .val = 258304U}, {.reg = (unsigned char)16U, .val = 589839U}, {.reg = (unsigned char)17U, .val = 143616U}, {.reg = (unsigned char)18U, .val = 204800U}, {.reg = (unsigned char)18U, .val = 462848U}, {.reg = (unsigned char)18U, .val = 720896U}, {.reg = (unsigned char)18U, .val = 1032192U}, {.reg = (unsigned char)19U, .val = 165811U}, {.reg = (unsigned char)19U, .val = 148663U}, {.reg = (unsigned char)19U, .val = 132267U}, {.reg = (unsigned char)19U, .val = 115871U}, {.reg = (unsigned char)19U, .val = 99475U}, {.reg = (unsigned char)19U, .val = 82587U}, {.reg = (unsigned char)19U, .val = 66201U}, {.reg = (unsigned char)19U, .val = 49820U}, {.reg = (unsigned char)19U, .val = 33184U}, {.reg = (unsigned char)19U, .val = 16556U}, {.reg = (unsigned char)19U, .val = 32U}, {.reg = (unsigned char)20U, .val = 103500U}, {.reg = (unsigned char)20U, .val = 365636U}, {.reg = (unsigned char)20U, .val = 627788U}, {.reg = (unsigned char)20U, .val = 889924U}, {.reg = (unsigned char)21U, .val = 62469U}, {.reg = (unsigned char)21U, .val = 324613U}, {.reg = (unsigned char)21U, .val = 586757U}, {.reg = (unsigned char)21U, .val = 848901U}, {.reg = (unsigned char)22U, .val = 918320U}, {.reg = (unsigned char)22U, .val = 656176U}, {.reg = (unsigned char)22U, .val = 394032U}, {.reg = (unsigned char)22U, .val = 131888U}, {.val = 65881U}, {.reg = (unsigned char)24U, .val = 62465U}, {.reg = (unsigned char)254U}, {.reg = (unsigned char)254U}, {.reg = (unsigned char)31U, .val = 524291U}, {.reg = (unsigned char)254U}, {.reg = (unsigned char)254U}, {.reg = (unsigned char)30U, .val = 279639U}, {.reg = (unsigned char)31U, .val = 524288U}, {.val = 196953U}, {.reg = (unsigned char)255U, .val = 4294967295U}};
#line 254  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_8192c.c"
static struct rtl8xxxu_rfregval rtl8188ru_radioa_1t_highpa_table[142U] = {{.val = 196953U}, {.reg = (unsigned char)1U, .val = 201348U}, {.reg = (unsigned char)2U, .val = 622592U}, {.reg = (unsigned char)3U, .val = 101475U}, {.reg = (unsigned char)4U, .val = 135399U}, {.reg = (unsigned char)9U, .val = 132175U}, {.reg = (unsigned char)10U, .val = 110000U}, {.reg = (unsigned char)11U, .val = 346215U}, {.reg = (unsigned char)12U, .val = 563502U}, {.reg = (unsigned char)13U, .val = 58665U}, {.reg = (unsigned char)14U, .val = 236775U}, {.reg = (unsigned char)15U, .val = 1105U}, {.reg = (unsigned char)25U}, {.reg = (unsigned char)26U, .val = 597U}, {.reg = (unsigned char)27U, .val = 395776U}, {.reg = (unsigned char)28U, .val = 1033080U}, {.reg = (unsigned char)29U, .val = 660048U}, {.reg = (unsigned char)30U, .val = 279647U}, {.reg = (unsigned char)31U, .val = 524289U}, {.reg = (unsigned char)32U, .val = 46612U}, {.reg = (unsigned char)33U, .val = 442368U}, {.reg = (unsigned char)34U, .val = 2108U}, {.reg = (unsigned char)35U, .val = 5464U}, {.reg = (unsigned char)36U, .val = 96U}, {.reg = (unsigned char)37U, .val = 1155U}, {.reg = (unsigned char)38U, .val = 323584U}, {.reg = (unsigned char)39U, .val = 968665U}, {.reg = (unsigned char)40U, .val = 620480U}, {.reg = (unsigned char)41U, .val = 18307U}, {.reg = (unsigned char)42U, .val = 1U}, {.reg = (unsigned char)43U, .val = 135988U}, {.reg = (unsigned char)42U}, {.reg = (unsigned char)43U, .val = 84U}, {.reg = (unsigned char)42U, .val = 1U}, {.reg = (unsigned char)43U, .val = 2056U}, {.reg = (unsigned char)43U, .val = 340787U}, {.reg = (unsigned char)44U, .val = 12U}, {.reg = (unsigned char)42U, .val = 2U}, {.reg = (unsigned char)43U, .val = 2056U}, {.reg = (unsigned char)43U, .val = 373555U}, {.reg = (unsigned char)44U, .val = 13U}, {.reg = (unsigned char)42U, .val = 3U}, {.reg = (unsigned char)43U, .val = 2056U}, {.reg = (unsigned char)43U, .val = 406323U}, {.reg = (unsigned char)44U, .val = 13U}, {.reg = (unsigned char)42U, .val = 4U}, {.reg = (unsigned char)43U, .val = 2056U}, {.reg = (unsigned char)43U, .val = 439091U}, {.reg = (unsigned char)44U, .val = 13U}, {.reg = (unsigned char)42U, .val = 5U}, {.reg = (unsigned char)43U, .val = 2056U}, {.reg = (unsigned char)43U, .val = 471859U}, {.reg = (unsigned char)44U, .val = 13U}, {.reg = (unsigned char)42U, .val = 6U}, {.reg = (unsigned char)43U, .val = 1801U}, {.reg = (unsigned char)43U, .val = 373555U}, {.reg = (unsigned char)44U, .val = 13U}, {.reg = (unsigned char)42U, .val = 7U}, {.reg = (unsigned char)43U, .val = 1801U}, {.reg = (unsigned char)43U, .val = 406323U}, {.reg = (unsigned char)44U, .val = 13U}, {.reg = (unsigned char)42U, .val = 8U}, {.reg = (unsigned char)43U, .val = 1546U}, {.reg = (unsigned char)43U, .val = 308019U}, {.reg = (unsigned char)44U, .val = 13U}, {.reg = (unsigned char)42U, .val = 9U}, {.reg = (unsigned char)43U, .val = 1546U}, {.reg = (unsigned char)43U, .val = 340787U}, {.reg = (unsigned char)44U, .val = 13U}, {.reg = (unsigned char)42U, .val = 10U}, {.reg = (unsigned char)43U, .val = 1546U}, {.reg = (unsigned char)43U, .val = 373555U}, {.reg = (unsigned char)44U, .val = 13U}, {.reg = (unsigned char)42U, .val = 11U}, {.reg = (unsigned char)43U, .val = 1546U}, {.reg = (unsigned char)43U, .val = 406323U}, {.reg = (unsigned char)44U, .val = 13U}, {.reg = (unsigned char)42U, .val = 12U}, {.reg = (unsigned char)43U, .val = 1546U}, {.reg = (unsigned char)43U, .val = 439091U}, {.reg = (unsigned char)44U, .val = 13U}, {.reg = (unsigned char)42U, .val = 13U}, {.reg = (unsigned char)43U, .val = 1546U}, {.reg = (unsigned char)43U, .val = 471859U}, {.reg = (unsigned char)44U, .val = 13U}, {.reg = (unsigned char)42U, .val = 14U}, {.reg = (unsigned char)43U, .val = 1291U}, {.reg = (unsigned char)43U, .val = 419430U}, {.reg = (unsigned char)44U, .val = 26U}, {.reg = (unsigned char)42U, .val = 917504U}, {.reg = (unsigned char)16U, .val = 262159U}, {.reg = (unsigned char)17U, .val = 930300U}, {.reg = (unsigned char)16U, .val = 393231U}, {.reg = (unsigned char)17U, .val = 1047032U}, {.reg = (unsigned char)16U, .val = 131087U}, {.reg = (unsigned char)17U, .val = 132089U}, {.reg = (unsigned char)16U, .val = 196623U}, {.reg = (unsigned char)17U, .val = 1045760U}, {.reg = (unsigned char)16U}, {.reg = (unsigned char)17U}, {.reg = (unsigned char)16U, .val = 524303U}, {.reg = (unsigned char)17U, .val = 258304U}, {.reg = (unsigned char)16U, .val = 589839U}, {.reg = (unsigned char)17U, .val = 143616U}, {.reg = (unsigned char)18U, .val = 884736U}, {.reg = (unsigned char)18U, .val = 589824U}, {.reg = (unsigned char)18U, .val = 331776U}, {.reg = (unsigned char)18U, .val = 73728U}, {.reg = (unsigned char)19U, .val = 167860U}, {.reg = (unsigned char)19U, .val = 151464U}, {.reg = (unsigned char)19U, .val = 133028U}, {.reg = (unsigned char)19U, .val = 115632U}, {.reg = (unsigned char)19U, .val = 99236U}, {.reg = (unsigned char)19U, .val = 82840U}, {.reg = (unsigned char)19U, .val = 65956U}, {.reg = (unsigned char)19U, .val = 49560U}, {.reg = (unsigned char)19U, .val = 32932U}, {.reg = (unsigned char)19U, .val = 16536U}, {.reg = (unsigned char)19U}, {.reg = (unsigned char)20U, .val = 103500U}, {.reg = (unsigned char)20U, .val = 365636U}, {.reg = (unsigned char)20U, .val = 627788U}, {.reg = (unsigned char)20U, .val = 889924U}, {.reg = (unsigned char)21U, .val = 62469U}, {.reg = (unsigned char)21U, .val = 324613U}, {.reg = (unsigned char)21U, .val = 586757U}, {.reg = (unsigned char)21U, .val = 848901U}, {.reg = (unsigned char)22U, .val = 918320U}, {.reg = (unsigned char)22U, .val = 656176U}, {.reg = (unsigned char)22U, .val = 394032U}, {.reg = (unsigned char)22U, .val = 131888U}, {.val = 65881U}, {.reg = (unsigned char)24U, .val = 62465U}, {.reg = (unsigned char)254U}, {.reg = (unsigned char)254U}, {.reg = (unsigned char)31U, .val = 524291U}, {.reg = (unsigned char)254U}, {.reg = (unsigned char)254U}, {.reg = (unsigned char)30U, .val = 279639U}, {.reg = (unsigned char)31U, .val = 524288U}, {.val = 196953U}, {.reg = (unsigned char)255U, .val = 4294967295U}};
#line 329  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_8192c.c"
static int rtl8192cu_load_firmware(struct rtl8xxxu_priv *priv)
{
  #line 331 
  char *fw_name;
  #line 332 
  int ret;
  #line 334 
  if ((unsigned int)priv->vendor_umc == 0U) 
                                            #line 335 
                                            fw_name = (char *)"rtlwifi/rtl8192cufw_TMSC.bin";
  else 
    #line 336 
    if ((unsigned int)priv->chip_cut != 0U || priv->rtl_chip == (unsigned int)RTL8192C) 
      #line 337 
      fw_name = (char *)"rtlwifi/rtl8192cufw_B.bin"; else 
                                                          #line 339 
                                                          fw_name = (char *)"rtlwifi/rtl8192cufw_A.bin";
  #line 341 
  ret = rtl8xxxu_load_firmware(priv,fw_name);
  #line 343 
  return ret;
}

#line 346  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_8192c.c"
static int rtl8192cu_parse_efuse(struct rtl8xxxu_priv *priv)
{
  #line 349 
  int i;
  #line 348 
  struct rtl8192cu_efuse *efuse = & priv->efuse_wifi.efuse8192;
  #line 351 
  if ((unsigned int)efuse->rtl_id != 33065U) 
                                             #line 352 
                                             return -22;
  #line 354 
  ether_addr_copy((u8 *)(& priv->mac_addr),(u8 *)(& efuse->mac_addr));
  #line 356 
  memcpy((void *)(& priv->cck_tx_power_index_A),(void *)(& efuse->cck_tx_power_index_A),3UL);
  #line 359 
  memcpy((void *)(& priv->cck_tx_power_index_B),(void *)(& efuse->cck_tx_power_index_B),3UL);
  #line 363 
  memcpy((void *)(& priv->ht40_1s_tx_power_index_A),(void *)(& efuse->ht40_1s_tx_power_index_A),3UL);
  #line 366 
  memcpy((void *)(& priv->ht40_1s_tx_power_index_B),(void *)(& efuse->ht40_1s_tx_power_index_B),3UL);
  #line 369 
  memcpy((void *)(& priv->ht40_2s_tx_power_index_diff),(void *)(& efuse->ht40_2s_tx_power_index_diff),3UL);
  #line 373 
  memcpy((void *)(& priv->ht20_tx_power_index_diff),(void *)(& efuse->ht20_tx_power_index_diff),3UL);
  #line 376 
  memcpy((void *)(& priv->ofdm_tx_power_index_diff),(void *)(& efuse->ofdm_tx_power_index_diff),3UL);
  #line 380 
  memcpy((void *)(& priv->ht40_max_power_offset),(void *)(& efuse->ht40_max_power_offset),3UL);
  #line 383 
  memcpy((void *)(& priv->ht20_max_power_offset),(void *)(& efuse->ht20_max_power_offset),3UL);
  #line 387 
  _dev_info(& (priv->udev)->dev,(char *)"Vendor: %.7s\n",(u8 *)(& efuse->vendor_name));
  #line 389 
  _dev_info(& (priv->udev)->dev,(char *)"Product: %.20s\n",(u8 *)(& efuse->device_name));
  #line 392 
  priv->power_base = & rtl8192c_power_base;
  #line 394 
  if (((int)efuse->rf_regulatory & 32) != 0) {
    #line 395 
    sprintf((char *)(& priv->chip_name),(char *)"8188RU");
    #line 396 
    priv->rtl_chip = RTL8188R;
    #line 397 
    priv->hi_pa = (unsigned int)1U;
    #line 398 
    priv->no_pape = (unsigned char)1U;
    #line 399 
    priv->power_base = & rtl8188r_power_base;
  }
  #line 402 
  if ((rtl8xxxu_debug & 8192) != 0) {
    #line 403 
    unsigned char *raw = (unsigned char *)(& priv->efuse_wifi.raw);
    #line 405 
    _dev_info(& (priv->udev)->dev,(char *)"%s: dumping efuse (0x%02zx bytes):\n",(char *)"rtl8192cu_parse_efuse",128UL);
    #line 408 
    i = 0;
    #line 408 
    while ((unsigned int)i <= 127U) {
      #line 409 
      _dev_info(& (priv->udev)->dev,(char *)"%02x: %8ph\n",i,raw + (unsigned long)i);
      #line 408 
      i += 8;
    }
  }
  #line 411 
  return 0;
}

#line 414  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_8192c.c"
static int rtl8192cu_init_phy_rf(struct rtl8xxxu_priv *priv)
{
  #line 416 
  struct rtl8xxxu_rfregval *rftable;
  #line 417 
  int ret;
  #line 419 
  if (priv->rtl_chip == (unsigned int)RTL8188R) {
    #line 420 
    rftable = (struct rtl8xxxu_rfregval *)(& rtl8188ru_radioa_1t_highpa_table);
    #line 421 
    ret = rtl8xxxu_init_phy_rf(priv,rftable,(enum rtl8xxxu_rfpath)RF_A);
  }
  else 
    #line 422 
    if ((unsigned int)priv->rf_paths == 1U) {
      #line 423 
      rftable = (struct rtl8xxxu_rfregval *)(& rtl8192cu_radioa_1t_init_table);
      #line 424 
      ret = rtl8xxxu_init_phy_rf(priv,rftable,(enum rtl8xxxu_rfpath)RF_A);
    }
    else {
      #line 426 
      rftable = (struct rtl8xxxu_rfregval *)(& rtl8192cu_radioa_2t_init_table);
      #line 427 
      ret = rtl8xxxu_init_phy_rf(priv,rftable,(enum rtl8xxxu_rfpath)RF_A);
      #line 428 
      if (ret != 0) 
                    #line 429 
                    goto exit;
      #line 430 
      rftable = (struct rtl8xxxu_rfregval *)(& rtl8192cu_radiob_2t_init_table);
      #line 431 
      ret = rtl8xxxu_init_phy_rf(priv,rftable,(enum rtl8xxxu_rfpath)RF_B);
    }
  #line 434 
  exit: 
        #line 434 
  ;
  #line 435 
  return ret;
}

#line 438  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_8192c.c"
static int rtl8192cu_power_on(struct rtl8xxxu_priv *priv)
{
  #line 440 
  u8 val8;
  #line 441 
  u16 val16;
  #line 442 
  u32 val32;
  #line 443 
  int i;
  #line 445 
  i = 100;
  #line 445 
  while (i != 0) {
    #line 446 
    val8 = rtl8xxxu_read8(priv,(unsigned short)4);
    #line 447 
    if (((unsigned long)val8 & 2UL) != 0UL) 
                                            #line 448 
                                            break;
    #line 445 
    i --;
  }
  #line 451 
  if (i == 0) {
    #line 452 
    printk((char *)"\001",(char *)"rtl8192cu_power_on");
    #line 453 
    return -19;
  }
  #line 459 
  rtl8xxxu_write8(priv,(unsigned short)28,(unsigned char)0);
  #line 460 
  rtl8xxxu_write8(priv,(unsigned short)17,(unsigned char)43);
  #line 461 
  __const_udelay(429500UL);
  #line 463 
  val8 = rtl8xxxu_read8(priv,(unsigned short)33);
  #line 464 
  if (((unsigned long)val8 & 1UL) == 0UL) {
    #line 465 
    printk((char *)"\001",(char *)"rtl8192cu_power_on",(int)val8);
    #line 466 
    val8 = (unsigned char)((unsigned int)val8 | 1U);
    #line 467 
    rtl8xxxu_write8(priv,(unsigned short)33,(unsigned char)((int)val8));
    #line 469 
    __const_udelay(429500UL);
    #line 471 
    val8 = rtl8xxxu_read8(priv,(unsigned short)0);
    #line 472 
    val8 = (unsigned char)((unsigned int)val8 & 254U);
    #line 473 
    rtl8xxxu_write8(priv,(unsigned short)0,(unsigned char)((int)val8));
  }
  #line 479 
  val16 = rtl8xxxu_read16(priv,(unsigned short)4);
  #line 480 
  val16 = (unsigned short)((unsigned int)val16 | 256U);
  #line 481 
  rtl8xxxu_write16(priv,(unsigned short)4,(unsigned short)((int)val16));
  #line 483 
  i = 1000;
  #line 483 
  while (i != 0) {
    #line 484 
    val16 = rtl8xxxu_read16(priv,(unsigned short)4);
    #line 485 
    if (((unsigned long)val16 & 256UL) == 0UL) 
                                               #line 486 
                                               break;
    #line 483 
    i --;
  }
  #line 488 
  if (i == 0) {
    #line 489 
    printk((char *)"\001",(char *)"rtl8192cu_power_on");
    #line 490 
    return -16;
  }
  #line 496 
  val16 = (unsigned short)2066U;
  #line 498 
  rtl8xxxu_write16(priv,(unsigned short)4,(unsigned short)((int)val16));
  #line 503 
  val16 = rtl8xxxu_read16(priv,(unsigned short)0);
  #line 504 
  val16 = (unsigned short)((unsigned int)val16 & 65023U);
  #line 505 
  rtl8xxxu_write16(priv,(unsigned short)0,(unsigned short)((int)val16));
  #line 507 
  val8 = rtl8xxxu_read8(priv,(unsigned short)1536);
  #line 508 
  val8 = (unsigned char)((unsigned int)val8 & 191U);
  #line 509 
  rtl8xxxu_write8(priv,(unsigned short)1536,(unsigned char)((int)val8));
  #line 510 
  i = 200;
  #line 510 
  while (i != 0) {
    #line 511 
    val8 = rtl8xxxu_read8(priv,(unsigned short)1536);
    #line 512 
    if (((unsigned long)val8 & 128UL) == 0UL) 
                                              #line 513 
                                              break;
    #line 510 
    i --;
  }
  #line 516 
  if (i == 0) {
    #line 517 
    printk((char *)"\001",(char *)"rtl8192cu_power_on");
    #line 518 
    return -16;
  }
  #line 524 
  val16 = rtl8xxxu_read16(priv,(unsigned short)256);
  #line 525 
  val16 = (unsigned short)((unsigned int)val16 | 255U);
  #line 528 
  rtl8xxxu_write16(priv,(unsigned short)256,(unsigned short)((int)val16));
  #line 530 
  rtl8xxxu_write8(priv,(unsigned short)65040,(unsigned char)25);
  #line 535 
  if (priv->rtl_chip == (unsigned int)RTL8188R) {
    #line 536 
    val32 = rtl8xxxu_read32(priv,(unsigned short)2172);
    #line 537 
    val32 &= 4294967293U;
    #line 538 
    rtl8xxxu_write32(priv,(unsigned short)2172,val32);
  }
  #line 540 
  return 0;
}

#line 543  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_8192c.c"
struct rtl8xxxu_fileops rtl8192cu_fops = {.parse_efuse = & rtl8192cu_parse_efuse, .load_firmware = & rtl8192cu_load_firmware, .power_on = & rtl8192cu_power_on, .power_off = & rtl8xxxu_power_off, .reset_8051 = & rtl8xxxu_reset_8051, .llt_init = & rtl8xxxu_init_llt_table, .init_phy_bb = & rtl8xxxu_gen1_init_phy_bb, .init_phy_rf = & rtl8192cu_init_phy_rf, .phy_iq_calibrate = & rtl8xxxu_gen1_phy_iq_calibrate, .config_channel = & rtl8xxxu_gen1_config_channel, .parse_rx_desc = & rtl8xxxu_parse_rxdesc16, .init_aggregation = & rtl8xxxu_gen1_init_aggregation, .enable_rf = & rtl8xxxu_gen1_enable_rf, .disable_rf = & rtl8xxxu_gen1_disable_rf, .usb_quirks = & rtl8xxxu_gen1_usb_quirks, .set_tx_power = & rtl8xxxu_gen1_set_tx_power, .update_rate_mask = & rtl8xxxu_update_rate_mask, .report_connect = & rtl8xxxu_gen1_report_connect, .fill_txdesc = & rtl8xxxu_fill_txdesc_v1, .writeN_block_size = 128, .rx_agg_buf_size = 16000, .tx_desc_size = (char)32, .rx_desc_size = (char)24, .adda_1t_init = 186328480U, .adda_1t_path_on = 198911392U, .adda_2t_path_on_a = 81470884U, .adda_2t_path_on_b = 186328484U, .trxff_boundary = (unsigned short)10239U, .pbp_rx = (unsigned char)1U, .pbp_tx = (unsigned char)1U, .mactable = (struct rtl8xxxu_reg8val *)(& rtl8xxxu_gen1_mac_init_table), .total_page_num = (unsigned char)248U, .page_num_hi = (unsigned char)12U, .page_num_lo = (unsigned char)2U, .page_num_norm = (unsigned char)2U};
/* compiler builtin: 
   void *__builtin_memcpy(void *, void const *, unsigned long);   */
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/export.h"
#line 16 
extern struct module __this_module;
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/compiler.h"
__inline static void __read_once_size(void *p, void *res, int size)
{
  #line 199 
  switch (size) {
    #line 199 
    case 1: 
            #line 199 
    ;
    #line 199 
    *((__u8 *)res) = *((__u8 *)p);
    #line 199 
    break;
    #line 199 
    case 2: 
            #line 199 
    ;
    #line 199 
    *((__u16 *)res) = *((__u16 *)p);
    #line 199 
    break;
    #line 199 
    case 4: 
            #line 199 
    ;
    #line 199 
    *((__u32 *)res) = *((__u32 *)p);
    #line 199 
    break;
    #line 199 
    case 8: 
            #line 199 
    ;
    #line 199 
    *((__u64 *)res) = *((__u64 *)p);
    #line 199 
    break;
    #line 199 
    default: 
             #line 199 
    ;
    #line 200 
    ldv_inline_asm();
    #line 199 
    __builtin_memcpy(res,(void const *)p,(unsigned long)size);
    #line 200 
    ldv_inline_asm();
  }
  #line 203 
  return;
}

#line 220  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/compiler.h"
__inline static void __write_once_size(void *p, void *res, int size)
{
  #line 222 
  switch (size) {
    #line 223 
    case 1: 
            #line 223 
    ;
    #line 223 
    *((__u8 *)p) = *((__u8 *)res);
    #line 223 
    break;
    #line 224 
    case 2: 
            #line 224 
    ;
    #line 224 
    *((__u16 *)p) = *((__u16 *)res);
    #line 224 
    break;
    #line 225 
    case 4: 
            #line 225 
    ;
    #line 225 
    *((__u32 *)p) = *((__u32 *)res);
    #line 225 
    break;
    #line 226 
    case 8: 
            #line 226 
    ;
    #line 226 
    *((__u64 *)p) = *((__u64 *)res);
    #line 226 
    break;
    #line 227 
    default: 
             #line 227 
    ;
    #line 228 
    ldv_inline_asm();
    #line 229 
    __builtin_memcpy(p,(void const *)res,(unsigned long)size);
    #line 230 
    ldv_inline_asm();
  }
  #line 232 
  return;
}

#line 38  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kasan-checks.h"
__inline static bool kasan_check_write(void *p, unsigned int size)
{
  #line 40 
  return (_Bool)1;
}

#line 66  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/bitops.h"
__inline static void arch___set_bit(long nr, unsigned long *addr)
{
  #line 68 
  ldv_inline_asm();
  #line 69 
  return;
}

#line 324  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/bitops.h"
__inline static int fls(unsigned int x)
{
  #line 326 
  int r;
  #line 327 
  ldv_inline_asm();
  #line 351 
  return r + 1;
}

#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/bitops/instrumented-non-atomic.h"
__inline static void __set_bit(long nr, unsigned long *addr)
{
  #line 27 
  kasan_check_write((void *)(addr + (unsigned long)(nr / 64L)),8U);
  #line 28 
  arch___set_bit(nr,addr);
  #line 29 
  return;
}

#line 487  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/printk.h"
#line 487 
void print_hex_dump(char *, char *, int, int, int, void *, size_t, bool);
#line 26  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
#line 226  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.ko/concurrency safety/0/concurrency safety/weaver/rtl8xxxu_core.i.aux"
static void INIT_LIST_HEAD(struct list_head *list);
#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
#line 33 
bool __list_add_valid(struct list_head *, struct list_head *, struct list_head *);
#line 36 
#line 36 
bool __list_del_entry_valid(struct list_head *);
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
__inline static void __list_add(struct list_head *new, struct list_head *prev, struct list_head *next)
{
  #line 60 
  if (! __list_add_valid(new,prev,next)) 
                                         #line 61 
                                         return;
  #line 63 
  next->prev = new;
  #line 64 
  new->next = next;
  #line 65 
  new->prev = prev;
  {
    #line 67 
    union __anonunion___u_2109 __u = {.__val = new};
    #line 66 
    __write_once_size((void *)(& prev->next),(void *)(& __u.__c),8);
    #line 66 
    struct list_head *tmp_2 = __u.__val;
  }
  #line 68 
  return;
}

#line 77  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
__inline static void list_add(struct list_head *new, struct list_head *head)
{
  #line 79 
  __list_add(new,head,head->next);
  #line 80 
  return;
}

#line 91  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
__inline static void list_add_tail(struct list_head *new, struct list_head *head)
{
  #line 93 
  __list_add(new,head->prev,head);
  #line 94 
  return;
}

#line 95  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
__inline static void __list_del(struct list_head *prev, struct list_head *next)
{
  #line 97 
  next->prev = prev;
  {
    #line 107 
    union __anonunion___u_2111 __u = {.__val = next};
    #line 106 
    __write_once_size((void *)(& prev->next),(void *)(& __u.__c),8);
    #line 106 
    struct list_head *tmp = __u.__val;
  }
  #line 108 
  return;
}

#line 129  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
__inline static void __list_del_entry(struct list_head *entry)
{
  #line 131 
  if (! __list_del_entry_valid(entry)) 
                                       #line 132 
                                       return;
  #line 134 
  __list_del(entry->prev,entry->next);
  #line 135 
  return;
}

#line 137  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
__inline static void list_del(struct list_head *entry)
{
  #line 139 
  __list_del_entry(entry);
  #line 140 
  entry->next = (struct list_head *)(-2401263026318606080);
  #line 141 
  entry->prev = (struct list_head *)(-2401263026318606046);
  #line 142 
  return;
}

#line 188  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
__inline static void list_del_init(struct list_head *entry)
{
  #line 190 
  __list_del_entry(entry);
  #line 191 
  INIT_LIST_HEAD(entry);
  #line 192 
  return;
}

#line 266  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
__inline static int list_empty(struct list_head *head)
{
  #line 269 
  union __anonunion___u_2113 __u;
  #line 268 
  __read_once_size((void *)(& head->next),(void *)(& __u.__c),8);
  #line 268 
  ;
  #line 268 
  return (__u.__val) == head;
}

#line 401  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
__inline static void __list_splice(struct list_head *list, struct list_head *prev, struct list_head *next)
{
  #line 405 
  struct list_head *first = list->next;
  #line 406 
  struct list_head *last = list->prev;
  #line 408 
  first->prev = prev;
  #line 409 
  prev->next = first;
  #line 411 
  last->next = next;
  #line 412 
  next->prev = last;
  #line 413 
  return;
}

#line 446  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
__inline static void list_splice_init(struct list_head *list, struct list_head *head)
{
  #line 449 
  if (list_empty(list) == 0) {
    #line 450 
    __list_splice(list,head,head->next);
    #line 451 
    INIT_LIST_HEAD(list);
  }
  #line 453 
  return;
}

#line 88  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/percpu.h"
#line 88 
void __bad_percpu_size(void);
#line 186  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/string.h"
#line 742  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.ko/concurrency safety/0/concurrency safety/weaver/rtl8xxxu_core.i.aux"
static void *cif_kmemdup(void *src, size_t len, gfp_t gfp);
#line 77  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/preempt.h"
__inline static void __preempt_count_add(int val)
{
  #line 79 
  int tmp;
  #line 79 
  if (0 != 0 && (val == 1 || val == -1)) 
                                         #line 79 
                                         tmp = val; else 
                                                         #line 79 
                                                         tmp = 0;
  #line 79 
  int pao_ID__ = tmp;
  #line 79 
  switch (4UL) {
    #line 79 
    case (unsigned long)1: 
                           #line 79 
    ;
    #line 79 
    if (pao_ID__ == 1) 
                       #line 81 
                       ldv_inline_asm();
    else 
      #line 79 
      if (pao_ID__ == -1) 
                          #line 81 
                          ldv_inline_asm(); else 
                                                 #line 84 
                                                 ldv_inline_asm();
    #line 79 
    break;
    #line 79 
    case (unsigned long)2: 
                           #line 79 
    ;
    #line 79 
    if (pao_ID__ == 1) 
                       #line 81 
                       ldv_inline_asm();
    else 
      #line 79 
      if (pao_ID__ == -1) 
                          #line 81 
                          ldv_inline_asm(); else 
                                                 #line 84 
                                                 ldv_inline_asm();
    #line 79 
    break;
    #line 79 
    case (unsigned long)4: 
                           #line 79 
    ;
    #line 79 
    if (pao_ID__ == 1) 
                       #line 81 
                       ldv_inline_asm();
    else 
      #line 79 
      if (pao_ID__ == -1) 
                          #line 81 
                          ldv_inline_asm(); else 
                                                 #line 84 
                                                 ldv_inline_asm();
    #line 79 
    break;
    #line 79 
    case (unsigned long)8: 
                           #line 79 
    ;
    #line 79 
    if (pao_ID__ == 1) 
                       #line 81 
                       ldv_inline_asm();
    else 
      #line 79 
      if (pao_ID__ == -1) 
                          #line 81 
                          ldv_inline_asm(); else 
                                                 #line 84 
                                                 ldv_inline_asm();
    #line 79 
    break;
    #line 79 
    default: 
             #line 79 
    ;
    #line 79 
    __bad_percpu_size();
  }
  #line 82 
  return;
}

#line 82  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/preempt.h"
__inline static void __preempt_count_sub(int val)
{
  #line 84 
  int tmp;
  #line 84 
  if (0 != 0 && (val == -1 || val == 1)) 
                                         #line 84 
                                         tmp = - val; else 
                                                           #line 84 
                                                           tmp = 0;
  #line 84 
  int pao_ID__ = tmp;
  #line 84 
  switch (4UL) {
    #line 84 
    case (unsigned long)1: 
                           #line 84 
    ;
    #line 84 
    if (pao_ID__ == 1) 
                       #line 86 
                       ldv_inline_asm();
    else 
      #line 84 
      if (pao_ID__ == -1) 
                          #line 86 
                          ldv_inline_asm(); else 
                                                 #line 89 
                                                 ldv_inline_asm();
    #line 84 
    break;
    #line 84 
    case (unsigned long)2: 
                           #line 84 
    ;
    #line 84 
    if (pao_ID__ == 1) 
                       #line 86 
                       ldv_inline_asm();
    else 
      #line 84 
      if (pao_ID__ == -1) 
                          #line 86 
                          ldv_inline_asm(); else 
                                                 #line 89 
                                                 ldv_inline_asm();
    #line 84 
    break;
    #line 84 
    case (unsigned long)4: 
                           #line 84 
    ;
    #line 84 
    if (pao_ID__ == 1) 
                       #line 86 
                       ldv_inline_asm();
    else 
      #line 84 
      if (pao_ID__ == -1) 
                          #line 86 
                          ldv_inline_asm(); else 
                                                 #line 89 
                                                 ldv_inline_asm();
    #line 84 
    break;
    #line 84 
    case (unsigned long)8: 
                           #line 84 
    ;
    #line 84 
    if (pao_ID__ == 1) 
                       #line 86 
                       ldv_inline_asm();
    else 
      #line 84 
      if (pao_ID__ == -1) 
                          #line 86 
                          ldv_inline_asm(); else 
                                                 #line 89 
                                                 ldv_inline_asm();
    #line 84 
    break;
    #line 84 
    default: 
             #line 84 
    ;
    #line 84 
    __bad_percpu_size();
  }
  #line 87 
  return;
}

#line 302  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockdep.h"
#line 302 
void lockdep_init_map(struct lockdep_map *, char *, struct lock_class_key *, int);
#line 348 
#line 348 
void lock_acquire(struct lockdep_map *, unsigned int, int, int, int, struct lockdep_map *, unsigned long);
#line 352 
#line 352 
void lock_release(struct lockdep_map *, unsigned long);
#line 658 
#line 658 
void lockdep_rcu_suspicious(char *, int, char *);
#line 95  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
#line 95 
void __raw_spin_lock_init(raw_spinlock_t *, char *, struct lock_class_key *);
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_api_smp.h"
#line 43 
void _raw_spin_unlock_irqrestore(raw_spinlock_t *, unsigned long);
#line 325  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
__inline static raw_spinlock_t *spinlock_check(spinlock_t *lock)
{
  #line 327 
  return & lock->__anonCompField_spinlock_25.rlock;
}

#line 391  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
static void spin_unlock_irqrestore(spinlock_t *lock, unsigned long flags)
{
  {
    #line 393 
    unsigned long __dummy;
    #line 393 
    unsigned long __dummy2;
    }
  #line 393 
  _raw_spin_unlock_irqrestore(& lock->__anonCompField_spinlock_25.rlock,flags);
  #line 395 
  return;
}

#line 395 
#line 942  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.ko/concurrency safety/0/concurrency safety/weaver/rtl8xxxu_core.i.aux"
static void cif_spin_unlock_irqrestore_tx_urb_lock_of_rtl8xxxu_priv(spinlock_t *lock, unsigned long flags);
#line 395  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
#line 968  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.ko/concurrency safety/0/concurrency safety/weaver/rtl8xxxu_core.i.aux"
static void cif_spin_unlock_irqrestore_rx_urb_lock_of_rtl8xxxu_priv(spinlock_t *lock, unsigned long flags);
#line 395  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
#line 986  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.ko/concurrency safety/0/concurrency safety/weaver/rtl8xxxu_core.i.aux"
static void cif_spin_unlock_irqrestore_c2hcmd_lock_of_rtl8xxxu_priv(spinlock_t *lock, unsigned long flags);
#line 26 
#line 891 
static void cif_mutex_lock_usb_buf_mutex_of_rtl8xxxu_priv(struct mutex *lock);
#line 26 
#line 905 
static void cif_mutex_lock_h2c_mutex_of_rtl8xxxu_priv(struct mutex *lock);
#line 29 
#line 29 
void ldv_mutex_model_lock(struct mutex *, char *);
#line 31 
#line 31 
void ldv_mutex_model_unlock(struct mutex *, char *);
#line 33 
#line 33 
void __ldv_spin_lock(spinlock_t *);
#line 35 
#line 933 
static void cif___ldv_spin_lock_tx_urb_lock_of_rtl8xxxu_priv(spinlock_t *lock);
#line 35 
#line 959 
static void cif___ldv_spin_lock_rx_urb_lock_of_rtl8xxxu_priv(spinlock_t *lock);
#line 35 
#line 977 
static void cif___ldv_spin_lock_c2hcmd_lock_of_rtl8xxxu_priv(spinlock_t *lock);
#line 40 
#line 40 
void ldv_spin_model_lock(char *);
#line 41 
#line 41 
void ldv_spin_model_unlock(char *);
#line 51 
#line 51 
int ldv_request_firmware(struct firmware **fw);
#line 52 
#line 52 
void ldv_release_firmware(struct firmware *fw);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/string.h"
#line 23 
void *ldv_kmemdup(void *src, size_t len, gfp_t gfp);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/list.h"
#line 23 
void ldv_init_list_head(struct list_head *list);
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 24 
void *ldv_kmalloc(size_t size, gfp_t flags);
#line 57  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rcupdate.h"
__inline static void __rcu_read_lock(void)
{
  #line 59 
  __preempt_count_add(1);
  #line 60 
  ldv_inline_asm();
  #line 62 
  return;
}

#line 62  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rcupdate.h"
__inline static void __rcu_read_unlock(void)
{
  #line 66 
  ldv_inline_asm();
  #line 64 
  __preempt_count_sub(1);
  #line 66 
  return;
}

#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rcutree.h"
#line 56 
bool rcu_is_watching(void);
#line 206  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rcupdate.h"
__inline static void rcu_lock_acquire(struct lockdep_map *map)
{
  #line 208 
  __here_0: 
            #line 208 
  ;
  #line 208 
  ;
  #line 208 
  lock_acquire(map,0U,0,2,0,(struct lockdep_map *)0,(unsigned long)((void *)0));
  #line 210 
  return;
}

#line 211  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rcupdate.h"
__inline static void rcu_lock_release(struct lockdep_map *map)
{
  #line 213 
  __here_0: 
            #line 213 
  ;
  #line 213 
  ;
  #line 213 
  lock_release(map,(unsigned long)((void *)0));
  #line 215 
  return;
}

#line 216 
#line 216 
extern struct lockdep_map rcu_lock_map;
#line 220 
#line 220 
int debug_lockdep_rcu_enabled(void);
#line 613  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rcupdate.h"
__inline static void rcu_read_lock(void)
{
  #line 615 
  __rcu_read_lock();
  #line 617 
  rcu_lock_acquire(& rcu_lock_map);
  {
    #line 618 
    bool __warned;
    #line 618 
    if (debug_lockdep_rcu_enabled() != 0) 
      #line 618 
      if (! __warned) {
        #line 618 
        if (! rcu_is_watching()) {
          #line 618 
          __warned = (_Bool)1;
          #line 618 
          lockdep_rcu_suspicious((char *)"./include/linux/rcupdate.h",618,(char *)"rcu_read_lock() used illegally while idle");
        }
      }
  }
  #line 621 
  return;
}

#line 665  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rcupdate.h"
__inline static void rcu_read_unlock(void)
{
  {
    #line 667 
    bool __warned;
    #line 667 
    if (debug_lockdep_rcu_enabled() != 0) 
      #line 667 
      if (! __warned) {
        #line 667 
        if (! rcu_is_watching()) {
          #line 667 
          __warned = (_Bool)1;
          #line 667 
          lockdep_rcu_suspicious((char *)"./include/linux/rcupdate.h",667,(char *)"rcu_read_unlock() used illegally while idle");
        }
      }
  }
  #line 670 
  __rcu_read_unlock();
  #line 671 
  rcu_lock_release(& rcu_lock_map);
  #line 672 
  return;
}

#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/wait.h"
#line 61 
void __init_waitqueue_head(struct wait_queue_head *, char *, struct lock_class_key *);
#line 86  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mutex.h"
#line 86 
void mutex_destroy(struct mutex *);
#line 128 
#line 128 
void __mutex_init(struct mutex *, char *, struct lock_class_key *);
#line 185 
#line 898  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.ko/concurrency safety/0/concurrency safety/weaver/rtl8xxxu_core.i.aux"
static void cif_mutex_unlock_usb_buf_mutex_of_rtl8xxxu_priv(struct mutex *lock);
#line 185  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mutex.h"
#line 912  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.ko/concurrency safety/0/concurrency safety/weaver/rtl8xxxu_core.i.aux"
static void cif_mutex_unlock_h2c_mutex_of_rtl8xxxu_priv(struct mutex *lock);
#line 90  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
#line 90 
void init_timer_key(struct timer_list *, void (*)(struct timer_list *), unsigned int, char *, struct lock_class_key *);
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/workqueue.h"
#line 22 
void delayed_work_timer_fn(struct timer_list *);
#line 207 
#line 207 
void __init_work(struct work_struct *, int);
#line 466 
#line 466 
bool cancel_delayed_work_sync(struct delayed_work *);
#line 554 
#line 749  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.ko/concurrency safety/0/concurrency safety/weaver/rtl8xxxu_core.i.aux"
static bool cif_schedule_work(struct work_struct *work);
#line 612  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/workqueue.h"
#line 995  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.ko/concurrency safety/0/concurrency safety/weaver/rtl8xxxu_core.i.aux"
static bool cif_schedule_delayed_work(struct delayed_work *dwork, unsigned long delay);
#line 189  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/slab.h"
#line 189 
void kfree(void *);
#line 542 
#line 414  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.ko/concurrency safety/0/concurrency safety/weaver/rtl8xxxu_core.i.aux"
static void *kmalloc(size_t size, gfp_t flags);
#line 1417  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
__inline static void *dev_get_drvdata(struct device *dev)
{
  #line 1419 
  return dev->driver_data;
}

#line 1422  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
__inline static void dev_set_drvdata(struct device *dev, void *data)
{
  #line 1424 
  dev->driver_data = data;
  #line 1425 
  return;
}

#line 1712 
#line 1712 
void _dev_err(struct device *, char * , ...);
#line 462  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
__inline static int usb_endpoint_num(struct usb_endpoint_descriptor *epd)
{
  #line 464 
  return (int)epd->bEndpointAddress & 15;
}

#line 474  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
__inline static int usb_endpoint_type(struct usb_endpoint_descriptor *epd)
{
  #line 476 
  return (int)epd->bmAttributes & 3;
}

#line 485  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
__inline static int usb_endpoint_dir_in(struct usb_endpoint_descriptor *epd)
{
  #line 487 
  return ((int)epd->bEndpointAddress & 128) != 0;
}

#line 496  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
__inline static int usb_endpoint_dir_out(struct usb_endpoint_descriptor *epd)
{
  #line 499 
  return ((int)epd->bEndpointAddress & 128) == 0;
}

#line 508  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
__inline static int usb_endpoint_xfer_bulk(struct usb_endpoint_descriptor *epd)
{
  #line 511 
  return ((int)epd->bmAttributes & 3) == 2;
}

#line 535  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
__inline static int usb_endpoint_xfer_int(struct usb_endpoint_descriptor *epd)
{
  #line 538 
  return ((int)epd->bmAttributes & 3) == 3;
}

#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/delay.h"
#line 59 
void msleep(unsigned int);
#line 61 
#line 61 
void usleep_range(unsigned long, unsigned long);
#line 263  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
__inline static void *usb_get_intfdata(struct usb_interface *intf)
{
  #line 265 
  return dev_get_drvdata(& intf->dev);
}

#line 268  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
__inline static void usb_set_intfdata(struct usb_interface *intf, void *data)
{
  #line 270 
  dev_set_drvdata(& intf->dev,data);
  #line 271 
  return;
}

#line 714  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
__inline static struct usb_device *interface_to_usbdev(struct usb_interface *intf)
{
  #line 716 
  void *__mptr;
  #line 716 
  __mptr = (void *)intf->dev.parent;
  #line 716 
  return ((struct usb_device *)(__mptr + 18446744073709551456U));
}

#line 719 
#line 719 
struct usb_device *usb_get_dev(struct usb_device *);
#line 720 
#line 720 
void usb_put_dev(struct usb_device *);
#line 746 
#line 1019  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.ko/concurrency safety/0/concurrency safety/weaver/rtl8xxxu_core.i.aux"
static int cif_usb_reset_device(struct usb_device *dev);
#line 1276  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
#line 1027  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.ko/concurrency safety/0/concurrency safety/weaver/rtl8xxxu_core.i.aux"
static int cif_usb_register_driver(struct usb_driver *ldv_func_arg1, struct module *ldv_func_arg2, char *ldv_func_arg3);
#line 1282  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
#line 1035  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.ko/concurrency safety/0/concurrency safety/weaver/rtl8xxxu_core.i.aux"
static void cif_usb_deregister(struct usb_driver *ldv_func_arg1);
#line 1357  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
__inline static void init_usb_anchor(struct usb_anchor *anchor)
{
  #line 1359 
  memset((void *)anchor,0,184UL);
  #line 1360 
  INIT_LIST_HEAD(& anchor->urb_list);
  {
    #line 1361 
    struct lock_class_key __key;
    #line 1361 
    __init_waitqueue_head(& anchor->wait,(char *)"&anchor->wait",& __key);
  }
  #line 1362 
  spinlock_check(& anchor->lock);
  {
    #line 1362 
    struct lock_class_key __key_0;
    #line 1362 
    __raw_spin_lock_init(& anchor->lock.__anonCompField_spinlock_25.rlock,(char *)"&(&anchor->lock)->rlock",& __key_0);
  }
  #line 1365 
  return;
}

#line 1636  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
__inline static void usb_fill_bulk_urb(struct urb *urb, struct usb_device *dev, unsigned int pipe, void *transfer_buffer, int buffer_length, void (*complete_fn)(struct urb *), void *context)
{
  #line 1644 
  urb->dev = dev;
  #line 1645 
  urb->pipe = pipe;
  #line 1646 
  urb->transfer_buffer = transfer_buffer;
  #line 1647 
  urb->transfer_buffer_length = (unsigned int)buffer_length;
  #line 1648 
  urb->complete = complete_fn;
  #line 1649 
  urb->context = context;
  #line 1650 
  return;
}

#line 1677  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
__inline static void usb_fill_int_urb(struct urb *urb, struct usb_device *dev, unsigned int pipe, void *transfer_buffer, int buffer_length, void (*complete_fn)(struct urb *), void *context, int interval)
{
  #line 1686 
  urb->dev = dev;
  #line 1687 
  urb->pipe = pipe;
  #line 1688 
  urb->transfer_buffer = transfer_buffer;
  #line 1689 
  urb->transfer_buffer_length = (unsigned int)buffer_length;
  #line 1690 
  urb->complete = complete_fn;
  #line 1691 
  urb->context = context;
  #line 1693 
  if (dev->speed == (unsigned int)USB_SPEED_HIGH || dev->speed > (unsigned int)USB_SPEED_WIRELESS) {
    #line 1695 
    int tmp_1;
    #line 1695 
    int __UNIQUE_ID___x367;
    {
      #line 1695 
      int __UNIQUE_ID___x365;
      #line 1695 
      int tmp;
      {
        #line 1695 
        __UNIQUE_ID___x365 = interval;
        #line 1695 
        int __UNIQUE_ID___y366 = 1;
        #line 1695 
        if (__UNIQUE_ID___x365 > __UNIQUE_ID___y366) 
                                                     #line 1695 
                                                     tmp = __UNIQUE_ID___x365; else 
                                                                    #line 1695 
                                                                    tmp = __UNIQUE_ID___y366;
        }
      #line 1695 
      __UNIQUE_ID___x367 = tmp;
      #line 1695 
      int __UNIQUE_ID___y368 = 16;
      #line 1695 
      if (__UNIQUE_ID___x367 < __UNIQUE_ID___y368) 
                                                   #line 1695 
                                                   tmp_1 = __UNIQUE_ID___x367; else 
                                                                    #line 1695 
                                                                    tmp_1 = __UNIQUE_ID___y368;
      }
    #line 1695 
    interval = tmp_1;
    #line 1697 
    urb->interval = 1 << (interval + -1);
  }
  else 
       #line 1699 
       urb->interval = interval;
  #line 1702 
  urb->start_frame = -1;
  #line 1703 
  return;
}

#line 1705 
#line 1705 
void usb_init_urb(struct urb *);
#line 1706 
#line 1706 
struct urb *usb_alloc_urb(int, gfp_t);
#line 1707 
#line 1707 
void usb_free_urb(struct urb *);
#line 1711 
#line 951  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.ko/concurrency safety/0/concurrency safety/weaver/rtl8xxxu_core.i.aux"
static int cif_usb_submit_urb(struct urb *urb, gfp_t mem_flags);
#line 1715  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
#line 1715 
void usb_kill_anchored_urbs(struct usb_anchor *);
#line 1721 
#line 1721 
void usb_anchor_urb(struct urb *, struct usb_anchor *);
#line 1722 
#line 1722 
void usb_unanchor_urb(struct urb *);
#line 1783 
#line 1783 
int usb_control_msg(struct usb_device *, unsigned int, __u8, __u8, __u16, __u16, void *, __u16, int);
#line 1925  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
__inline static unsigned int __create_pipe(struct usb_device *dev, unsigned int endpoint)
{
  #line 1928 
  return (unsigned int)(dev->devnum << 8) | (endpoint << 15);
}

#line 1023  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
#line 1023 
void consume_skb(struct sk_buff *);
#line 1105 
#line 1105 
struct sk_buff *skb_clone(struct sk_buff *, gfp_t);
#line 1493  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static int skb_queue_empty(struct sk_buff_head *list)
{
  #line 1495 
  return list->next == (struct sk_buff *)list;
}

#line 1744  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static struct sk_buff *skb_peek(struct sk_buff_head *list_)
{
  #line 1746 
  struct sk_buff *skb = list_->next;
  #line 1748 
  if (skb == (struct sk_buff *)list_) 
                                      #line 1749 
                                      skb = (struct sk_buff *)0;
  #line 1750 
  return skb;
}

#line 1827  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static void __skb_queue_head_init(struct sk_buff_head *list)
{
  #line 1829 
  list->next = ((struct sk_buff *)list);
  #line 1829 
  list->prev = ((struct sk_buff *)list);
  #line 1830 
  list->qlen = 0U;
  #line 1831 
  return;
}

#line 1841  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static void skb_queue_head_init(struct sk_buff_head *list)
{
  #line 1843 
  spinlock_check(& list->lock);
  {
    #line 1843 
    struct lock_class_key __key;
    #line 1843 
    __raw_spin_lock_init(& list->lock.__anonCompField_spinlock_25.rlock,(char *)"&(&list->lock)->rlock",& __key);
  }
  #line 1844 
  __skb_queue_head_init(list);
  #line 1845 
  return;
}

#line 1860  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static void __skb_insert(struct sk_buff *newsk, struct sk_buff *prev, struct sk_buff *next, struct sk_buff_head *list)
{
  {
    #line 1868 
    union __anonunion___u_2647 __u = {.__val = next};
    #line 1867 
    __write_once_size((void *)(& newsk->__anonCompField_sk_buff_91.__anonCompField___anonunion_534_90.next),(void *)(& __u.__c),8);
    #line 1867 
    struct sk_buff *tmp = __u.__val;
  }
  {
    #line 1869 
    union __anonunion___u_2649 __u_0 = {.__val = prev};
    #line 1868 
    __write_once_size((void *)(& newsk->__anonCompField_sk_buff_91.__anonCompField___anonunion_534_90.prev),(void *)(& __u_0.__c),8);
    #line 1868 
    struct sk_buff *tmp_3 = __u_0.__val;
  }
  {
    #line 1870 
    union __anonunion___u_2651 __u_1 = {.__val = newsk};
    #line 1869 
    __write_once_size((void *)(& next->__anonCompField_sk_buff_91.__anonCompField___anonunion_534_90.prev),(void *)(& __u_1.__c),8);
    #line 1869 
    struct sk_buff *tmp_5 = __u_1.__val;
  }
  {
    #line 1871 
    union __anonunion___u_2653 __u_2 = {.__val = newsk};
    #line 1870 
    __write_once_size((void *)(& prev->__anonCompField_sk_buff_91.__anonCompField___anonunion_534_90.next),(void *)(& __u_2.__c),8);
    #line 1870 
    struct sk_buff *tmp_7 = __u_2.__val;
  }
  #line 1871 
  (list->qlen) ++;
  #line 1872 
  return;
}

#line 1972  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static void __skb_queue_before(struct sk_buff_head *list, struct sk_buff *next, struct sk_buff *newsk)
{
  #line 1976 
  __skb_insert(newsk,next->__anonCompField_sk_buff_91.__anonCompField___anonunion_534_90.prev,next,list);
  #line 1977 
  return;
}

#line 2006  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static void __skb_queue_tail(struct sk_buff_head *list, struct sk_buff *newsk)
{
  #line 2009 
  __skb_queue_before(list,(struct sk_buff *)list,newsk);
  #line 2010 
  return;
}

#line 2018  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static void __skb_unlink(struct sk_buff *skb, struct sk_buff_head *list)
{
  #line 2020 
  struct sk_buff *next;
  #line 2020 
  struct sk_buff *prev;
  #line 2022 
  (list->qlen) --;
  #line 2023 
  next = skb->__anonCompField_sk_buff_91.__anonCompField___anonunion_534_90.next;
  #line 2024 
  prev = skb->__anonCompField_sk_buff_91.__anonCompField___anonunion_534_90.prev;
  #line 2025 
  skb->__anonCompField_sk_buff_91.__anonCompField___anonunion_534_90.prev = ((struct sk_buff *)0);
  #line 2025 
  skb->__anonCompField_sk_buff_91.__anonCompField___anonunion_534_90.next = ((struct sk_buff *)0);
  {
    #line 2027 
    union __anonunion___u_2663 __u = {.__val = prev};
    #line 2026 
    __write_once_size((void *)(& next->__anonCompField_sk_buff_91.__anonCompField___anonunion_534_90.prev),(void *)(& __u.__c),8);
    #line 2026 
    struct sk_buff *tmp_2 = __u.__val;
  }
  {
    #line 2028 
    union __anonunion___u_2665 __u_0 = {.__val = next};
    #line 2027 
    __write_once_size((void *)(& prev->__anonCompField_sk_buff_91.__anonCompField___anonunion_534_90.next),(void *)(& __u_0.__c),8);
    #line 2027 
    struct sk_buff *tmp_4 = __u_0.__val;
  }
  #line 2029 
  return;
}

#line 2038  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static struct sk_buff *__skb_dequeue(struct sk_buff_head *list)
{
  #line 2040 
  struct sk_buff *skb = skb_peek(list);
  #line 2041 
  if (skb != (struct sk_buff *)0) 
                                  #line 2042 
                                  __skb_unlink(skb,list);
  #line 2043 
  return skb;
}

#line 2189 
#line 2189 
void *skb_put(struct sk_buff *, unsigned int);
#line 2245 
#line 2245 
void *skb_push(struct sk_buff *, unsigned int);
#line 2253 
#line 2253 
void *skb_pull(struct sk_buff *, unsigned int);
#line 2299  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static unsigned int skb_headroom(struct sk_buff *skb)
{
  #line 2301 
  return (unsigned int)(skb->data - skb->head);
}

#line 2652 
#line 2652 
void skb_trim(struct sk_buff *, unsigned int);
#line 2762 
#line 2762 
struct sk_buff *__netdev_alloc_skb(struct net_device *, unsigned int, gfp_t);
#line 4277  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static u16 skb_get_queue_mapping(struct sk_buff *skb)
{
  #line 4279 
  return skb->queue_mapping;
}

#line 116  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/etherdevice.h"
__inline static bool is_multicast_ether_addr(u8 *addr)
{
  #line 119 
  u32 a = *((u32 *)addr);
  #line 126 
  return (_Bool)((a & 1U) != 0U);
}

#line 162  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/etherdevice.h"
__inline static bool is_broadcast_ether_addr(u8 *addr)
{
  #line 166 
  return (_Bool)((unsigned int)(((int)*((u16 *)addr) & (int)*((u16 *)(addr + 2U))) & (int)*((u16 *)(addr + 4U))) == 65535U);
}

#line 238  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/etherdevice.h"
__inline static void eth_broadcast_addr(u8 *addr)
{
  #line 240 
  memset((void *)addr,255,6UL);
  #line 241 
  return;
}

#line 45  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/firmware.h"
#line 919  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.ko/concurrency safety/0/concurrency safety/weaver/rtl8xxxu_core.i.aux"
static int cif_request_firmware(struct firmware **fw, char *name, struct device *device);
#line 57  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/firmware.h"
#line 926  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.ko/concurrency safety/0/concurrency safety/weaver/rtl8xxxu_core.i.aux"
static void cif_release_firmware(struct firmware *fw);
#line 266  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
__inline static bool ieee80211_has_tods(__le16 fc)
{
  #line 268 
  return (_Bool)(((int)fc & 256) != 0);
}

#line 348  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
__inline static bool ieee80211_is_mgmt(__le16 fc)
{
  #line 350 
  return (_Bool)(((int)fc & 12) == 0);
}

#line 368  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
__inline static bool ieee80211_is_data(__le16 fc)
{
  #line 370 
  return (_Bool)(((int)fc & 12) == 8);
}

#line 378  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
__inline static bool ieee80211_is_data_qos(__le16 fc)
{
  #line 384 
  return (_Bool)(((int)fc & 140) == 136);
}

#line 516  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
__inline static bool ieee80211_is_action(__le16 fc)
{
  #line 518 
  return (_Bool)(((int)fc & 252) == 208);
}

#line 3148  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
__inline static u8 *ieee80211_get_DA(struct ieee80211_hdr *hdr)
{
  #line 3150 
  if ((int)ieee80211_has_tods((unsigned short)((int)hdr->frame_control)) != 0) 
    #line 3151 
    return (u8 *)(& hdr->addr3); else 
                                      #line 3153 
                                      return (u8 *)(& hdr->addr1);
}

#line 4738  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
__inline static void set_wiphy_dev(struct wiphy *wiphy, struct device *dev)
{
  #line 4740 
  wiphy->dev.parent = dev;
  #line 4741 
  return;
}

#line 7322  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
__inline static void wiphy_ext_feature_set(struct wiphy *wiphy, enum nl80211_ext_feature_index ftidx)
{
  #line 7325 
  u8 *ft_byte;
  #line 7327 
  ft_byte = & wiphy->ext_features[(unsigned int)ftidx / 8U];
  #line 7328 
  *ft_byte = (unsigned char)((int)*ft_byte | (int)((unsigned char)(1UL << ((unsigned int)ftidx & 7U))));
  #line 7329 
  return;
}

#line 1114  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
__inline static struct ieee80211_tx_info *IEEE80211_SKB_CB(struct sk_buff *skb)
{
  #line 1116 
  return (struct ieee80211_tx_info *)(& skb->cb);
}

#line 1119  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
__inline static struct ieee80211_rx_status *IEEE80211_SKB_RXCB(struct sk_buff *skb)
{
  #line 1121 
  return (struct ieee80211_rx_status *)(& skb->cb);
}

#line 1139  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
__inline static void ieee80211_tx_info_clear_status(struct ieee80211_tx_info *info)
{
  #line 1141 
  int i;
  #line 1149 
  i = 0;
  #line 1149 
  while (i <= 3) {
    #line 1150 
    info->__anonCompField_ieee80211_tx_info_195.status.rates[i].count = (unsigned short)0U;
    #line 1149 
    i ++;
  }
  #line 1154 
  memset((void *)(& info->__anonCompField_ieee80211_tx_info_195.status.ampdu_ack_len),0,24UL);
  #line 1155 
  return;
}

#line 2533  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
__inline static void _ieee80211_hw_set(struct ieee80211_hw *hw, enum ieee80211_hw_flags flg)
{
  #line 2536 
  __set_bit((long)flg,(unsigned long *)(& hw->flags));
  #line 2537 
  return;
}

#line 2599  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
__inline static void SET_IEEE80211_DEV(struct ieee80211_hw *hw, struct device *dev)
{
  #line 2601 
  set_wiphy_dev(hw->wiphy,dev);
  #line 2602 
  return;
}

#line 2610  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
__inline static void SET_IEEE80211_PERM_ADDR(struct ieee80211_hw *hw, u8 *addr)
{
  #line 2612 
  memcpy((void *)(& (hw->wiphy)->perm_addr),(void *)addr,6UL);
  #line 2613 
  return;
}

#line 2616  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
__inline static struct ieee80211_rate *ieee80211_get_tx_rate(struct ieee80211_hw *hw, struct ieee80211_tx_info *c)
{
  #line 2619 
  int __ret_warn_on;
  #line 2619 
  __ret_warn_on = (int)c->__anonCompField_ieee80211_tx_info_195.control.__anonCompField___anonstruct_control_1011_193.__anonCompField___anonunion_1012_192.rates[0].idx < 0;
  #line 2619 
  if ((long)(__ret_warn_on != 0) != 0L) {
    #line 2620 
    ldv_inline_asm();
    #line 2621 
    ldv_inline_asm();
  }
  #line 2619 
  if ((long)((long)(__ret_warn_on != 0)) != 0L) 
                                                #line 2620 
                                                return (struct ieee80211_rate *)0;
  #line 2621 
  return ((hw->wiphy)->bands[(int)c->band])->bitrates + (unsigned long)c->__anonCompField_ieee80211_tx_info_195.control.__anonCompField___anonstruct_control_1011_193.__anonCompField___anonunion_1012_192.rates[0].idx;
}

#line 2625  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
__inline static struct ieee80211_rate *ieee80211_get_rts_cts_rate(struct ieee80211_hw *hw, struct ieee80211_tx_info *c)
{
  #line 2628 
  if ((int)c->__anonCompField_ieee80211_tx_info_195.control.__anonCompField___anonstruct_control_1011_193.__anonCompField___anonunion_1012_192.rts_cts_rate_idx < 0) 
    #line 2629 
    return (struct ieee80211_rate *)0;
  #line 2630 
  return ((hw->wiphy)->bands[(int)c->band])->bitrates + (unsigned long)c->__anonCompField_ieee80211_tx_info_195.control.__anonCompField___anonstruct_control_1011_193.__anonCompField___anonunion_1012_192.rts_cts_rate_idx;
}

#line 4123 
#line 1003  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.ko/concurrency safety/0/concurrency safety/weaver/rtl8xxxu_core.i.aux"
static struct ieee80211_hw *cif_ieee80211_alloc_hw(size_t priv_data_len, struct ieee80211_ops *ops);
#line 4135  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
#line 4135 
int ieee80211_register_hw(struct ieee80211_hw *);
#line 4289 
#line 4289 
void ieee80211_unregister_hw(struct ieee80211_hw *);
#line 4301 
#line 1011  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.ko/concurrency safety/0/concurrency safety/weaver/rtl8xxxu_core.i.aux"
static void cif_ieee80211_free_hw(struct ieee80211_hw *hw);
#line 4379  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
#line 4379 
void ieee80211_rx_irqsafe(struct ieee80211_hw *, struct sk_buff *);
#line 4660 
#line 4660 
void ieee80211_tx_status_irqsafe(struct ieee80211_hw *, struct sk_buff *);
#line 5199 
#line 5199 
void ieee80211_stop_queues(struct ieee80211_hw *);
#line 5207 
#line 5207 
void ieee80211_wake_queues(struct ieee80211_hw *);
#line 5452 
#line 5452 
struct ieee80211_sta *ieee80211_find_sta(struct ieee80211_vif *, u8 *);
#line 6144 
#line 6144 
int ieee80211_ave_rssi(struct ieee80211_vif *);
#line 1453  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.h"
#line 807  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
u32 rtl8xxxu_read_rfreg(struct rtl8xxxu_priv *priv, enum rtl8xxxu_rfpath path, u8 reg);
#line 1483  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.h"
#line 3315  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
void rtl8xxxu_gen2_prepare_calibrate(struct rtl8xxxu_priv *priv, u8 start);
#line 1485  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.h"
#line 940  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
int rtl8xxxu_gen2_h2c_cmd(struct rtl8xxxu_priv *priv, struct h2c_cmd *h2c, int len);
#line 1487  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.h"
#line 3594  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
int rtl8xxxu_active_to_lps(struct rtl8xxxu_priv *priv);
#line 1488  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.h"
#line 3650  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
void rtl8xxxu_disabled_to_emu(struct rtl8xxxu_priv *priv);
#line 1525  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.h"
#line 3822  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
void rtl8723bu_set_ps_tdma(struct rtl8xxxu_priv *priv, u8 arg1, u8 arg2, u8 arg3, u8 arg4, u8 arg5);
#line 1530  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.h"
#line 360  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_8723a.c"
struct rtl8xxxu_fileops rtl8723au_fops;
#line 1531  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.h"
#line 1643  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_8723b.c"
struct rtl8xxxu_fileops rtl8723bu_fops;
#line 37  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
int rtl8xxxu_debug = 8192;
#line 38  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
static bool rtl8xxxu_ht40_2g;
#line 39  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
static bool rtl8xxxu_dma_aggregation;
#line 40  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
static int rtl8xxxu_dma_agg_timeout = -1;
#line 41  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
static int rtl8xxxu_dma_agg_pages = -1;
#line 74 
#line 5668 
static int rtl8xxxu_submit_rx_urb(struct rtl8xxxu_priv *priv, struct rtl8xxxu_rx_urb *rx_urb);
#line 77  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
static struct ieee80211_rate rtl8xxxu_rates[12U] = {{.bitrate = (unsigned short)10U}, {.bitrate = (unsigned short)20U, .hw_value = (unsigned short)1U}, {.bitrate = (unsigned short)55U, .hw_value = (unsigned short)2U}, {.bitrate = (unsigned short)110U, .hw_value = (unsigned short)3U}, {.bitrate = (unsigned short)60U, .hw_value = (unsigned short)4U}, {.bitrate = (unsigned short)90U, .hw_value = (unsigned short)5U}, {.bitrate = (unsigned short)120U, .hw_value = (unsigned short)6U}, {.bitrate = (unsigned short)180U, .hw_value = (unsigned short)7U}, {.bitrate = (unsigned short)240U, .hw_value = (unsigned short)8U}, {.bitrate = (unsigned short)360U, .hw_value = (unsigned short)9U}, {.bitrate = (unsigned short)480U, .hw_value = (unsigned short)10U}, {.bitrate = (unsigned short)540U, .hw_value = (unsigned short)11U}};
#line 92  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
static struct ieee80211_channel rtl8xxxu_channels_2g[14U] = {{.center_freq = 2412U, .hw_value = (unsigned short)1U, .max_power = 30}, {.center_freq = 2417U, .hw_value = (unsigned short)2U, .max_power = 30}, {.center_freq = 2422U, .hw_value = (unsigned short)3U, .max_power = 30}, {.center_freq = 2427U, .hw_value = (unsigned short)4U, .max_power = 30}, {.center_freq = 2432U, .hw_value = (unsigned short)5U, .max_power = 30}, {.center_freq = 2437U, .hw_value = (unsigned short)6U, .max_power = 30}, {.center_freq = 2442U, .hw_value = (unsigned short)7U, .max_power = 30}, {.center_freq = 2447U, .hw_value = (unsigned short)8U, .max_power = 30}, {.center_freq = 2452U, .hw_value = (unsigned short)9U, .max_power = 30}, {.center_freq = 2457U, .hw_value = (unsigned short)10U, .max_power = 30}, {.center_freq = 2462U, .hw_value = (unsigned short)11U, .max_power = 30}, {.center_freq = 2467U, .hw_value = (unsigned short)12U, .max_power = 30}, {.center_freq = 2472U, .hw_value = (unsigned short)13U, .max_power = 30}, {.center_freq = 2484U, .hw_value = (unsigned short)14U, .max_power = 30}};
#line 123  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
static struct ieee80211_supported_band rtl8xxxu_supported_band = {.channels = (struct ieee80211_channel *)(& rtl8xxxu_channels_2g), .bitrates = (struct ieee80211_rate *)(& rtl8xxxu_rates), .n_channels = 14, .n_bitrates = 12};
#line 130  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
struct rtl8xxxu_reg8val rtl8xxxu_gen1_mac_init_table[87U] = {{.reg = (unsigned short)1056U, .val = (unsigned char)128U}, {.reg = (unsigned short)1059U}, {.reg = (unsigned short)1072U}, {.reg = (unsigned short)1073U}, {.reg = (unsigned short)1074U}, {.reg = (unsigned short)1075U, .val = (unsigned char)1U}, {.reg = (unsigned short)1076U, .val = (unsigned char)4U}, {.reg = (unsigned short)1077U, .val = (unsigned char)5U}, {.reg = (unsigned short)1078U, .val = (unsigned char)6U}, {.reg = (unsigned short)1079U, .val = (unsigned char)7U}, {.reg = (unsigned short)1080U}, {.reg = (unsigned short)1081U}, {.reg = (unsigned short)1082U}, {.reg = (unsigned short)1083U, .val = (unsigned char)1U}, {.reg = (unsigned short)1084U, .val = (unsigned char)4U}, {.reg = (unsigned short)1085U, .val = (unsigned char)5U}, {.reg = (unsigned short)1086U, .val = (unsigned char)6U}, {.reg = (unsigned short)1087U, .val = (unsigned char)7U}, {.reg = (unsigned short)1088U, .val = (unsigned char)93U}, {.reg = (unsigned short)1089U, .val = (unsigned char)1U}, {.reg = (unsigned short)1090U}, {.reg = (unsigned short)1092U, .val = (unsigned char)21U}, {.reg = (unsigned short)1093U, .val = (unsigned char)240U}, {.reg = (unsigned short)1094U, .val = (unsigned char)15U}, {.reg = (unsigned short)1095U}, {.reg = (unsigned short)1112U, .val = (unsigned char)65U}, {.reg = (unsigned short)1113U, .val = (unsigned char)168U}, {.reg = (unsigned short)1114U, .val = (unsigned char)114U}, {.reg = (unsigned short)1115U, .val = (unsigned char)185U}, {.reg = (unsigned short)1120U, .val = (unsigned char)102U}, {.reg = (unsigned short)1121U, .val = (unsigned char)102U}, {.reg = (unsigned short)1122U, .val = (unsigned char)8U}, {.reg = (unsigned short)1123U, .val = (unsigned char)3U}, {.reg = (unsigned short)1224U, .val = (unsigned char)255U}, {.reg = (unsigned short)1225U, .val = (unsigned char)8U}, {.reg = (unsigned short)1228U, .val = (unsigned char)255U}, {.reg = (unsigned short)1229U, .val = (unsigned char)255U}, {.reg = (unsigned short)1230U, .val = (unsigned char)1U}, {.reg = (unsigned short)1280U, .val = (unsigned char)38U}, {.reg = (unsigned short)1281U, .val = (unsigned char)162U}, {.reg = (unsigned short)1282U, .val = (unsigned char)47U}, {.reg = (unsigned short)1283U}, {.reg = (unsigned short)1284U, .val = (unsigned char)40U}, {.reg = (unsigned short)1285U, .val = (unsigned char)163U}, {.reg = (unsigned short)1286U, .val = (unsigned char)94U}, {.reg = (unsigned short)1287U}, {.reg = (unsigned short)1288U, .val = (unsigned char)43U}, {.reg = (unsigned short)1289U, .val = (unsigned char)164U}, {.reg = (unsigned short)1290U, .val = (unsigned char)94U}, {.reg = (unsigned short)1291U}, {.reg = (unsigned short)1292U, .val = (unsigned char)79U}, {.reg = (unsigned short)1293U, .val = (unsigned char)164U}, {.reg = (unsigned short)1294U}, {.reg = (unsigned short)1295U}, {.reg = (unsigned short)1298U, .val = (unsigned char)28U}, {.reg = (unsigned short)1300U, .val = (unsigned char)10U}, {.reg = (unsigned short)1301U, .val = (unsigned char)16U}, {.reg = (unsigned short)1302U, .val = (unsigned char)10U}, {.reg = (unsigned short)1303U, .val = (unsigned char)16U}, {.reg = (unsigned short)1306U, .val = (unsigned char)22U}, {.reg = (unsigned short)1316U, .val = (unsigned char)15U}, {.reg = (unsigned short)1317U, .val = (unsigned char)79U}, {.reg = (unsigned short)1350U, .val = (unsigned char)64U}, {.reg = (unsigned short)1351U}, {.reg = (unsigned short)1360U, .val = (unsigned char)16U}, {.reg = (unsigned short)1361U, .val = (unsigned char)16U}, {.reg = (unsigned short)1369U, .val = (unsigned char)2U}, {.reg = (unsigned short)1370U, .val = (unsigned char)2U}, {.reg = (unsigned short)1373U, .val = (unsigned char)255U}, {.reg = (unsigned short)1541U, .val = (unsigned char)48U}, {.reg = (unsigned short)1544U, .val = (unsigned char)14U}, {.reg = (unsigned short)1545U, .val = (unsigned char)42U}, {.reg = (unsigned short)1618U, .val = (unsigned char)32U}, {.reg = (unsigned short)1596U, .val = (unsigned char)10U}, {.reg = (unsigned short)1597U, .val = (unsigned char)10U}, {.reg = (unsigned short)1598U, .val = (unsigned char)14U}, {.reg = (unsigned short)1599U, .val = (unsigned char)14U}, {.reg = (unsigned short)1646U, .val = (unsigned char)5U}, {.reg = (unsigned short)1792U, .val = (unsigned char)33U}, {.reg = (unsigned short)1793U, .val = (unsigned char)67U}, {.reg = (unsigned short)1794U, .val = (unsigned char)101U}, {.reg = (unsigned short)1795U, .val = (unsigned char)135U}, {.reg = (unsigned short)1800U, .val = (unsigned char)33U}, {.reg = (unsigned short)1801U, .val = (unsigned char)67U}, {.reg = (unsigned short)1802U, .val = (unsigned char)101U}, {.reg = (unsigned short)1803U, .val = (unsigned char)135U}, {.reg = (unsigned short)65535U, .val = (unsigned char)255U}};
#line 155  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
static struct rtl8xxxu_reg32val rtl8723a_phy_1t_init_table[187U] = {{.reg = (unsigned short)2048U, .val = 2147745792U}, {.reg = (unsigned short)2052U, .val = 3U}, {.reg = (unsigned short)2056U, .val = 64512U}, {.reg = (unsigned short)2060U, .val = 10U}, {.reg = (unsigned short)2064U, .val = 268440369U}, {.reg = (unsigned short)2068U, .val = 34356496U}, {.reg = (unsigned short)2072U, .val = 35652485U}, {.reg = (unsigned short)2076U}, {.reg = (unsigned short)2080U, .val = 16777472U}, {.reg = (unsigned short)2084U, .val = 3735556U}, {.reg = (unsigned short)2088U}, {.reg = (unsigned short)2092U}, {.reg = (unsigned short)2096U}, {.reg = (unsigned short)2100U}, {.reg = (unsigned short)2104U}, {.reg = (unsigned short)2108U}, {.reg = (unsigned short)2112U, .val = 65536U}, {.reg = (unsigned short)2116U}, {.reg = (unsigned short)2120U}, {.reg = (unsigned short)2124U}, {.reg = (unsigned short)2128U}, {.reg = (unsigned short)2132U}, {.reg = (unsigned short)2136U, .val = 1452955290U}, {.reg = (unsigned short)2140U, .val = 1779108U}, {.reg = (unsigned short)2144U, .val = 1727398160U}, {.reg = (unsigned short)2148U, .val = 102695216U}, {.reg = (unsigned short)2152U}, {.reg = (unsigned short)2156U, .val = 842150400U}, {.reg = (unsigned short)2160U, .val = 117442400U}, {.reg = (unsigned short)2164U, .val = 570441728U}, {.reg = (unsigned short)2168U, .val = 2056U}, {.reg = (unsigned short)2172U}, {.reg = (unsigned short)2176U, .val = 3221762160U}, {.reg = (unsigned short)2180U, .val = 1237U}, {.reg = (unsigned short)2184U}, {.reg = (unsigned short)2188U, .val = 3435135168U}, {.reg = (unsigned short)2192U, .val = 2048U}, {.reg = (unsigned short)2196U, .val = 4294967294U}, {.reg = (unsigned short)2200U, .val = 1076895760U}, {.reg = (unsigned short)2204U, .val = 7364688U}, {.reg = (unsigned short)2304U}, {.reg = (unsigned short)2308U, .val = 35U}, {.reg = (unsigned short)2312U}, {.reg = (unsigned short)2316U, .val = 2165444881U}, {.reg = (unsigned short)2560U, .val = 13649864U}, {.reg = (unsigned short)2564U, .val = 2164195340U}, {.reg = (unsigned short)2568U, .val = 2357428992U}, {.reg = (unsigned short)2572U, .val = 778572303U}, {.reg = (unsigned short)2576U, .val = 2499853176U}, {.reg = (unsigned short)2580U, .val = 286539816U}, {.reg = (unsigned short)2584U, .val = 8917271U}, {.reg = (unsigned short)2588U, .val = 2299793152U}, {.reg = (unsigned short)2592U, .val = 437977088U}, {.reg = (unsigned short)2596U, .val = 151917335U}, {.reg = (unsigned short)2600U, .val = 516U}, {.reg = (unsigned short)2604U, .val = 13828096U}, {.reg = (unsigned short)2672U, .val = 270515968U}, {.reg = (unsigned short)2676U, .val = 7U}, {.reg = (unsigned short)2680U, .val = 2304U}, {.reg = (unsigned short)3072U, .val = 1208425792U}, {.reg = (unsigned short)3076U, .val = 60839441U}, {.reg = (unsigned short)3080U, .val = 228U}, {.reg = (unsigned short)3084U, .val = 1819044972U}, {.reg = (unsigned short)3088U, .val = 142606336U}, {.reg = (unsigned short)3092U, .val = 1073742080U}, {.reg = (unsigned short)3096U, .val = 142606336U}, {.reg = (unsigned short)3100U, .val = 1073742080U}, {.reg = (unsigned short)3104U}, {.reg = (unsigned short)3108U}, {.reg = (unsigned short)3112U}, {.reg = (unsigned short)3116U}, {.reg = (unsigned short)3120U, .val = 1776921668U}, {.reg = (unsigned short)3124U, .val = 1184256687U}, {.reg = (unsigned short)3128U, .val = 1232689556U}, {.reg = (unsigned short)3132U, .val = 177706780U}, {.reg = (unsigned short)3136U, .val = 528236607U}, {.reg = (unsigned short)3140U, .val = 65719U}, {.reg = (unsigned short)3144U, .val = 3959554311U}, {.reg = (unsigned short)3148U, .val = 8323967U}, {.reg = (unsigned short)3152U, .val = 1767126048U}, {.reg = (unsigned short)3156U, .val = 1136394388U}, {.reg = (unsigned short)3160U, .val = 1767126048U}, {.reg = (unsigned short)3164U, .val = 1128005780U}, {.reg = (unsigned short)3168U}, {.reg = (unsigned short)3172U, .val = 1897038987U}, {.reg = (unsigned short)3176U, .val = 1203768319U}, {.reg = (unsigned short)3180U, .val = 54U}, {.reg = (unsigned short)3184U, .val = 746520589U}, {.reg = (unsigned short)3188U, .val = 25563355U}, {.reg = (unsigned short)3192U, .val = 31U}, {.reg = (unsigned short)3196U, .val = 12129810U}, {.reg = (unsigned short)3200U, .val = 1073742080U}, {.reg = (unsigned short)3204U, .val = 552992768U}, {.reg = (unsigned short)3208U, .val = 1073742080U}, {.reg = (unsigned short)3212U, .val = 538968064U}, {.reg = (unsigned short)3216U, .val = 1185824U}, {.reg = (unsigned short)3220U}, {.reg = (unsigned short)3224U, .val = 1185824U}, {.reg = (unsigned short)3228U, .val = 32639U}, {.reg = (unsigned short)3232U}, {.reg = (unsigned short)3236U, .val = 128U}, {.reg = (unsigned short)3240U}, {.reg = (unsigned short)3244U}, {.reg = (unsigned short)3248U}, {.reg = (unsigned short)3252U}, {.reg = (unsigned short)3256U}, {.reg = (unsigned short)3260U, .val = 671088640U}, {.reg = (unsigned short)3264U}, {.reg = (unsigned short)3268U}, {.reg = (unsigned short)3272U}, {.reg = (unsigned short)3276U}, {.reg = (unsigned short)3280U}, {.reg = (unsigned short)3284U}, {.reg = (unsigned short)3288U, .val = 1689396263U}, {.reg = (unsigned short)3292U, .val = 7760178U}, {.reg = (unsigned short)3296U, .val = 2236962U}, {.reg = (unsigned short)3300U}, {.reg = (unsigned short)3304U, .val = 929317634U}, {.reg = (unsigned short)3308U, .val = 798479372U}, {.reg = (unsigned short)3328U, .val = 526144U}, {.reg = (unsigned short)3332U, .val = 132097U}, {.reg = (unsigned short)3336U, .val = 36991U}, {.reg = (unsigned short)3340U, .val = 536936961U}, {.reg = (unsigned short)3344U, .val = 2690855731U}, {.reg = (unsigned short)3348U, .val = 859028547U}, {.reg = (unsigned short)3352U, .val = 2056215403U}, {.reg = (unsigned short)3372U, .val = 3432487285U}, {.reg = (unsigned short)3376U}, {.reg = (unsigned short)3380U, .val = 2153807872U}, {.reg = (unsigned short)3384U}, {.reg = (unsigned short)3388U, .val = 160403U}, {.reg = (unsigned short)3392U}, {.reg = (unsigned short)3396U}, {.reg = (unsigned short)3400U}, {.reg = (unsigned short)3404U}, {.reg = (unsigned short)3408U, .val = 1681331210U}, {.reg = (unsigned short)3412U}, {.reg = (unsigned short)3416U}, {.reg = (unsigned short)3420U, .val = 805511268U}, {.reg = (unsigned short)3424U, .val = 1179901544U}, {.reg = (unsigned short)3428U, .val = 72452668U}, {.reg = (unsigned short)3432U, .val = 8449U}, {.reg = (unsigned short)3436U, .val = 706747414U}, {.reg = (unsigned short)3440U, .val = 403846702U}, {.reg = (unsigned short)3444U, .val = 841753120U}, {.reg = (unsigned short)3448U, .val = 932900U}, {.reg = (unsigned short)3584U, .val = 707406378U}, {.reg = (unsigned short)3588U, .val = 707406378U}, {.reg = (unsigned short)3592U, .val = 59779626U}, {.reg = (unsigned short)3600U, .val = 707406378U}, {.reg = (unsigned short)3604U, .val = 707406378U}, {.reg = (unsigned short)3608U, .val = 707406378U}, {.reg = (unsigned short)3612U, .val = 707406378U}, {.reg = (unsigned short)3624U}, {.reg = (unsigned short)3632U, .val = 268491807U}, {.reg = (unsigned short)3636U, .val = 268471327U}, {.reg = (unsigned short)3640U, .val = 34865410U}, {.reg = (unsigned short)3644U, .val = 1746273474U}, {.reg = (unsigned short)3648U, .val = 16808960U}, {.reg = (unsigned short)3652U, .val = 16795648U}, {.reg = (unsigned short)3656U, .val = 4211081216U}, {.reg = (unsigned short)3660U, .val = 10449U}, {.reg = (unsigned short)3664U, .val = 268491807U}, {.reg = (unsigned short)3668U, .val = 268471327U}, {.reg = (unsigned short)3672U, .val = 34865410U}, {.reg = (unsigned short)3676U, .val = 672533765U}, {.reg = (unsigned short)3680U, .val = 8U}, {.reg = (unsigned short)3688U, .val = 1779108U}, {.reg = (unsigned short)3692U, .val = 1662723488U}, {.reg = (unsigned short)3696U, .val = 1662723488U}, {.reg = (unsigned short)3700U, .val = 135996832U}, {.reg = (unsigned short)3704U, .val = 135996832U}, {.reg = (unsigned short)3708U, .val = 135996832U}, {.reg = (unsigned short)3712U, .val = 135996832U}, {.reg = (unsigned short)3716U, .val = 1662723488U}, {.reg = (unsigned short)3720U, .val = 135996832U}, {.reg = (unsigned short)3724U, .val = 1662723488U}, {.reg = (unsigned short)3792U, .val = 1662723488U}, {.reg = (unsigned short)3796U, .val = 1662723488U}, {.reg = (unsigned short)3800U, .val = 1662723488U}, {.reg = (unsigned short)3804U, .val = 1779104U}, {.reg = (unsigned short)3808U, .val = 1779104U}, {.reg = (unsigned short)3820U, .val = 1796941216U}, {.reg = (unsigned short)3860U, .val = 3U}, {.reg = (unsigned short)3916U}, {.reg = (unsigned short)3840U, .val = 768U}, {.reg = (unsigned short)65535U, .val = 4294967295U}};
#line 253  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
static struct rtl8xxxu_reg32val rtl8192cu_phy_2t_init_table[188U] = {{.reg = (unsigned short)36U, .val = 1146895U}, {.reg = (unsigned short)40U, .val = 16767875U}, {.reg = (unsigned short)2048U, .val = 2147745794U}, {.reg = (unsigned short)2052U, .val = 3U}, {.reg = (unsigned short)2056U, .val = 64512U}, {.reg = (unsigned short)2060U, .val = 10U}, {.reg = (unsigned short)2064U, .val = 268436272U}, {.reg = (unsigned short)2068U, .val = 34356496U}, {.reg = (unsigned short)2072U, .val = 35652485U}, {.reg = (unsigned short)2076U}, {.reg = (unsigned short)2080U, .val = 16777472U}, {.reg = (unsigned short)2084U, .val = 3735556U}, {.reg = (unsigned short)2088U, .val = 16777472U}, {.reg = (unsigned short)2092U, .val = 3735556U}, {.reg = (unsigned short)2096U, .val = 656877351U}, {.reg = (unsigned short)2100U, .val = 656877351U}, {.reg = (unsigned short)2104U, .val = 656877351U}, {.reg = (unsigned short)2108U, .val = 656877351U}, {.reg = (unsigned short)2112U, .val = 65536U}, {.reg = (unsigned short)2116U, .val = 65536U}, {.reg = (unsigned short)2120U, .val = 656877351U}, {.reg = (unsigned short)2124U, .val = 656877351U}, {.reg = (unsigned short)2128U}, {.reg = (unsigned short)2132U}, {.reg = (unsigned short)2136U, .val = 1452955290U}, {.reg = (unsigned short)2140U, .val = 203105700U}, {.reg = (unsigned short)2144U, .val = 1726349872U}, {.reg = (unsigned short)2148U, .val = 102695216U}, {.reg = (unsigned short)2152U, .val = 656877351U}, {.reg = (unsigned short)2156U, .val = 724249383U}, {.reg = (unsigned short)2160U, .val = 117442304U}, {.reg = (unsigned short)2164U, .val = 572014592U}, {.reg = (unsigned short)2168U, .val = 134744072U}, {.reg = (unsigned short)2172U}, {.reg = (unsigned short)2176U, .val = 3221762160U}, {.reg = (unsigned short)2180U, .val = 1237U}, {.reg = (unsigned short)2184U}, {.reg = (unsigned short)2188U, .val = 3422552256U}, {.reg = (unsigned short)2192U, .val = 2048U}, {.reg = (unsigned short)2196U, .val = 4294967294U}, {.reg = (unsigned short)2200U, .val = 1076895760U}, {.reg = (unsigned short)2204U, .val = 7364688U}, {.reg = (unsigned short)2304U}, {.reg = (unsigned short)2308U, .val = 35U}, {.reg = (unsigned short)2312U}, {.reg = (unsigned short)2316U, .val = 2165445395U}, {.reg = (unsigned short)2560U, .val = 13649864U}, {.reg = (unsigned short)2564U, .val = 2164195340U}, {.reg = (unsigned short)2568U, .val = 2357428992U}, {.reg = (unsigned short)2572U, .val = 778572303U}, {.reg = (unsigned short)2576U, .val = 2499853176U}, {.reg = (unsigned short)2580U, .val = 286539816U}, {.reg = (unsigned short)2584U, .val = 8917271U}, {.reg = (unsigned short)2588U, .val = 2299793152U}, {.reg = (unsigned short)2592U, .val = 437977088U}, {.reg = (unsigned short)2596U, .val = 151917335U}, {.reg = (unsigned short)2600U, .val = 516U}, {.reg = (unsigned short)2604U, .val = 13828096U}, {.reg = (unsigned short)2672U, .val = 270515968U}, {.reg = (unsigned short)2676U, .val = 7U}, {.reg = (unsigned short)3072U, .val = 1208425792U}, {.reg = (unsigned short)3076U, .val = 60839475U}, {.reg = (unsigned short)3080U, .val = 228U}, {.reg = (unsigned short)3084U, .val = 1819044972U}, {.reg = (unsigned short)3088U, .val = 142606336U}, {.reg = (unsigned short)3092U, .val = 1073742080U}, {.reg = (unsigned short)3096U, .val = 142606336U}, {.reg = (unsigned short)3100U, .val = 1073742080U}, {.reg = (unsigned short)3104U}, {.reg = (unsigned short)3108U}, {.reg = (unsigned short)3112U}, {.reg = (unsigned short)3116U}, {.reg = (unsigned short)3120U, .val = 1776921668U}, {.reg = (unsigned short)3124U, .val = 1184256719U}, {.reg = (unsigned short)3128U, .val = 1232689556U}, {.reg = (unsigned short)3132U, .val = 177706780U}, {.reg = (unsigned short)3136U, .val = 528236607U}, {.reg = (unsigned short)3140U, .val = 65719U}, {.reg = (unsigned short)3144U, .val = 3959554311U}, {.reg = (unsigned short)3148U, .val = 8323967U}, {.reg = (unsigned short)3152U, .val = 1767126048U}, {.reg = (unsigned short)3156U, .val = 1136394388U}, {.reg = (unsigned short)3160U, .val = 1767126048U}, {.reg = (unsigned short)3164U, .val = 1128005780U}, {.reg = (unsigned short)3168U}, {.reg = (unsigned short)3172U, .val = 1360430219U}, {.reg = (unsigned short)3176U, .val = 1203768319U}, {.reg = (unsigned short)3180U, .val = 54U}, {.reg = (unsigned short)3184U, .val = 746520589U}, {.reg = (unsigned short)3188U, .val = 562434395U}, {.reg = (unsigned short)3192U, .val = 31U}, {.reg = (unsigned short)3196U, .val = 12162578U}, {.reg = (unsigned short)3200U, .val = 1073742080U}, {.reg = (unsigned short)3204U, .val = 552992768U}, {.reg = (unsigned short)3208U, .val = 1073742080U}, {.reg = (unsigned short)3212U, .val = 2699296768U}, {.reg = (unsigned short)3216U, .val = 1185824U}, {.reg = (unsigned short)3220U}, {.reg = (unsigned short)3224U, .val = 1185824U}, {.reg = (unsigned short)3228U, .val = 32639U}, {.reg = (unsigned short)3232U}, {.reg = (unsigned short)3236U, .val = 128U}, {.reg = (unsigned short)3240U}, {.reg = (unsigned short)3244U}, {.reg = (unsigned short)3248U}, {.reg = (unsigned short)3252U}, {.reg = (unsigned short)3256U}, {.reg = (unsigned short)3260U, .val = 671088640U}, {.reg = (unsigned short)3264U}, {.reg = (unsigned short)3268U}, {.reg = (unsigned short)3272U}, {.reg = (unsigned short)3276U}, {.reg = (unsigned short)3280U}, {.reg = (unsigned short)3284U}, {.reg = (unsigned short)3288U, .val = 1689396263U}, {.reg = (unsigned short)3292U, .val = 7760178U}, {.reg = (unsigned short)3296U, .val = 2236962U}, {.reg = (unsigned short)3300U}, {.reg = (unsigned short)3304U, .val = 929317634U}, {.reg = (unsigned short)3308U, .val = 798479372U}, {.reg = (unsigned short)3328U, .val = 526144U}, {.reg = (unsigned short)3332U, .val = 132099U}, {.reg = (unsigned short)3336U, .val = 36991U}, {.reg = (unsigned short)3340U, .val = 536936961U}, {.reg = (unsigned short)3344U, .val = 2690855731U}, {.reg = (unsigned short)3348U, .val = 859028547U}, {.reg = (unsigned short)3352U, .val = 2056215403U}, {.reg = (unsigned short)3372U, .val = 3432487285U}, {.reg = (unsigned short)3376U}, {.reg = (unsigned short)3380U, .val = 2153807872U}, {.reg = (unsigned short)3384U}, {.reg = (unsigned short)3388U, .val = 160403U}, {.reg = (unsigned short)3392U}, {.reg = (unsigned short)3396U}, {.reg = (unsigned short)3400U}, {.reg = (unsigned short)3404U}, {.reg = (unsigned short)3408U, .val = 1681331210U}, {.reg = (unsigned short)3412U}, {.reg = (unsigned short)3416U}, {.reg = (unsigned short)3420U, .val = 805511268U}, {.reg = (unsigned short)3424U, .val = 1179901544U}, {.reg = (unsigned short)3428U, .val = 72452668U}, {.reg = (unsigned short)3432U, .val = 8449U}, {.reg = (unsigned short)3436U, .val = 706747414U}, {.reg = (unsigned short)3440U, .val = 403846702U}, {.reg = (unsigned short)3444U, .val = 841753120U}, {.reg = (unsigned short)3448U, .val = 932900U}, {.reg = (unsigned short)3584U, .val = 707406378U}, {.reg = (unsigned short)3588U, .val = 707406378U}, {.reg = (unsigned short)3592U, .val = 59779626U}, {.reg = (unsigned short)3600U, .val = 707406378U}, {.reg = (unsigned short)3604U, .val = 707406378U}, {.reg = (unsigned short)3608U, .val = 707406378U}, {.reg = (unsigned short)3612U, .val = 707406378U}, {.reg = (unsigned short)3624U}, {.reg = (unsigned short)3632U, .val = 268491807U}, {.reg = (unsigned short)3636U, .val = 268471327U}, {.reg = (unsigned short)3640U, .val = 34865410U}, {.reg = (unsigned short)3644U, .val = 1746273474U}, {.reg = (unsigned short)3648U, .val = 16808960U}, {.reg = (unsigned short)3652U, .val = 16795648U}, {.reg = (unsigned short)3656U, .val = 4211081216U}, {.reg = (unsigned short)3660U, .val = 10449U}, {.reg = (unsigned short)3664U, .val = 268491807U}, {.reg = (unsigned short)3668U, .val = 268471327U}, {.reg = (unsigned short)3672U, .val = 34865410U}, {.reg = (unsigned short)3676U, .val = 672533765U}, {.reg = (unsigned short)3680U, .val = 16U}, {.reg = (unsigned short)3688U, .val = 1779108U}, {.reg = (unsigned short)3692U, .val = 1675306404U}, {.reg = (unsigned short)3696U, .val = 1675306404U}, {.reg = (unsigned short)3700U, .val = 203105700U}, {.reg = (unsigned short)3704U, .val = 203105700U}, {.reg = (unsigned short)3708U, .val = 203105700U}, {.reg = (unsigned short)3712U, .val = 203105700U}, {.reg = (unsigned short)3716U, .val = 1675306404U}, {.reg = (unsigned short)3720U, .val = 203105700U}, {.reg = (unsigned short)3724U, .val = 1675306404U}, {.reg = (unsigned short)3792U, .val = 1675306404U}, {.reg = (unsigned short)3796U, .val = 1675306404U}, {.reg = (unsigned short)3800U, .val = 1675306404U}, {.reg = (unsigned short)3804U, .val = 1779108U}, {.reg = (unsigned short)3808U, .val = 1779108U}, {.reg = (unsigned short)3820U, .val = 1876632996U}, {.reg = (unsigned short)3860U, .val = 3U}, {.reg = (unsigned short)3916U}, {.reg = (unsigned short)3840U, .val = 768U}, {.reg = (unsigned short)65535U, .val = 4294967295U}};
#line 351  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
static struct rtl8xxxu_reg32val rtl8188ru_phy_1t_highpa_table[190U] = {{.reg = (unsigned short)36U, .val = 1146895U}, {.reg = (unsigned short)40U, .val = 16767875U}, {.reg = (unsigned short)64U, .val = 786436U}, {.reg = (unsigned short)2048U, .val = 2147745792U}, {.reg = (unsigned short)2052U, .val = 1U}, {.reg = (unsigned short)2056U, .val = 64512U}, {.reg = (unsigned short)2060U, .val = 10U}, {.reg = (unsigned short)2064U, .val = 268456840U}, {.reg = (unsigned short)2068U, .val = 34356496U}, {.reg = (unsigned short)2072U, .val = 35652485U}, {.reg = (unsigned short)2076U}, {.reg = (unsigned short)2080U, .val = 16777472U}, {.reg = (unsigned short)2084U, .val = 3736068U}, {.reg = (unsigned short)2088U}, {.reg = (unsigned short)2092U}, {.reg = (unsigned short)2096U}, {.reg = (unsigned short)2100U}, {.reg = (unsigned short)2104U}, {.reg = (unsigned short)2108U}, {.reg = (unsigned short)2112U, .val = 65536U}, {.reg = (unsigned short)2116U}, {.reg = (unsigned short)2120U}, {.reg = (unsigned short)2124U}, {.reg = (unsigned short)2128U}, {.reg = (unsigned short)2132U}, {.reg = (unsigned short)2136U, .val = 1452955290U}, {.reg = (unsigned short)2140U, .val = 1779108U}, {.reg = (unsigned short)2144U, .val = 1726349872U}, {.reg = (unsigned short)2148U, .val = 102695216U}, {.reg = (unsigned short)2152U}, {.reg = (unsigned short)2156U, .val = 538976256U}, {.reg = (unsigned short)2160U, .val = 50332416U}, {.reg = (unsigned short)2164U, .val = 570441728U}, {.reg = (unsigned short)2168U, .val = 2056U}, {.reg = (unsigned short)2172U, .val = 16761841U}, {.reg = (unsigned short)2176U, .val = 3221762160U}, {.reg = (unsigned short)2180U, .val = 1237U}, {.reg = (unsigned short)2184U}, {.reg = (unsigned short)2188U, .val = 3435135168U}, {.reg = (unsigned short)2192U, .val = 2048U}, {.reg = (unsigned short)2196U, .val = 4294967294U}, {.reg = (unsigned short)2200U, .val = 1076895760U}, {.reg = (unsigned short)2204U, .val = 7364688U}, {.reg = (unsigned short)2304U}, {.reg = (unsigned short)2308U, .val = 35U}, {.reg = (unsigned short)2312U}, {.reg = (unsigned short)2316U, .val = 2165444881U}, {.reg = (unsigned short)2560U, .val = 13649864U}, {.reg = (unsigned short)2564U, .val = 2164195340U}, {.reg = (unsigned short)2568U, .val = 2357428992U}, {.reg = (unsigned short)2572U, .val = 778572303U}, {.reg = (unsigned short)2576U, .val = 2499853176U}, {.reg = (unsigned short)2580U, .val = 286539816U}, {.reg = (unsigned short)2584U, .val = 8917271U}, {.reg = (unsigned short)2588U, .val = 2299793152U}, {.reg = (unsigned short)2592U, .val = 353763328U}, {.reg = (unsigned short)2596U, .val = 118165266U}, {.reg = (unsigned short)2600U, .val = 260U}, {.reg = (unsigned short)2604U, .val = 13828096U}, {.reg = (unsigned short)2672U, .val = 270515968U}, {.reg = (unsigned short)2676U, .val = 7U}, {.reg = (unsigned short)3072U, .val = 1208425792U}, {.reg = (unsigned short)3076U, .val = 60839441U}, {.reg = (unsigned short)3080U, .val = 228U}, {.reg = (unsigned short)3084U, .val = 1819044972U}, {.reg = (unsigned short)3088U, .val = 142606336U}, {.reg = (unsigned short)3092U, .val = 1073742080U}, {.reg = (unsigned short)3096U, .val = 142606336U}, {.reg = (unsigned short)3100U, .val = 1073742080U}, {.reg = (unsigned short)3104U}, {.reg = (unsigned short)3108U}, {.reg = (unsigned short)3112U}, {.reg = (unsigned short)3116U}, {.reg = (unsigned short)3120U, .val = 1776921668U}, {.reg = (unsigned short)3124U, .val = 1184256719U}, {.reg = (unsigned short)3128U, .val = 1232689556U}, {.reg = (unsigned short)3132U, .val = 177706780U}, {.reg = (unsigned short)3136U, .val = 528236607U}, {.reg = (unsigned short)3140U, .val = 65719U}, {.reg = (unsigned short)3144U, .val = 3959554311U}, {.reg = (unsigned short)3148U, .val = 8323967U}, {.reg = (unsigned short)3152U, .val = 1767126062U}, {.reg = (unsigned short)3156U, .val = 1136394388U}, {.reg = (unsigned short)3160U, .val = 1767126063U}, {.reg = (unsigned short)3164U, .val = 1128005780U}, {.reg = (unsigned short)3168U}, {.reg = (unsigned short)3172U, .val = 1360430219U}, {.reg = (unsigned short)3176U, .val = 1203768319U}, {.reg = (unsigned short)3180U, .val = 54U}, {.reg = (unsigned short)3184U, .val = 742785037U}, {.reg = (unsigned short)3188U, .val = 25563355U}, {.reg = (unsigned short)3192U, .val = 31U}, {.reg = (unsigned short)3196U, .val = 12129810U}, {.reg = (unsigned short)3200U, .val = 603979920U}, {.reg = (unsigned short)3204U, .val = 552992768U}, {.reg = (unsigned short)3208U, .val = 603979920U}, {.reg = (unsigned short)3212U, .val = 538968064U}, {.reg = (unsigned short)3216U, .val = 1185824U}, {.reg = (unsigned short)3220U}, {.reg = (unsigned short)3224U, .val = 1185824U}, {.reg = (unsigned short)3228U, .val = 32639U}, {.reg = (unsigned short)3232U}, {.reg = (unsigned short)3236U, .val = 128U}, {.reg = (unsigned short)3240U}, {.reg = (unsigned short)3244U}, {.reg = (unsigned short)3248U}, {.reg = (unsigned short)3252U}, {.reg = (unsigned short)3256U}, {.reg = (unsigned short)3260U, .val = 671088640U}, {.reg = (unsigned short)3264U}, {.reg = (unsigned short)3268U}, {.reg = (unsigned short)3272U}, {.reg = (unsigned short)3276U}, {.reg = (unsigned short)3280U}, {.reg = (unsigned short)3284U}, {.reg = (unsigned short)3288U, .val = 1689396263U}, {.reg = (unsigned short)3292U, .val = 7760178U}, {.reg = (unsigned short)3296U, .val = 2236962U}, {.reg = (unsigned short)3300U}, {.reg = (unsigned short)3304U, .val = 929317634U}, {.reg = (unsigned short)3308U, .val = 798479372U}, {.reg = (unsigned short)3328U, .val = 526144U}, {.reg = (unsigned short)3332U, .val = 132097U}, {.reg = (unsigned short)3336U, .val = 36991U}, {.reg = (unsigned short)3340U, .val = 536936961U}, {.reg = (unsigned short)3344U, .val = 2690855731U}, {.reg = (unsigned short)3348U, .val = 859028547U}, {.reg = (unsigned short)3352U, .val = 2056215403U}, {.reg = (unsigned short)3372U, .val = 3432487285U}, {.reg = (unsigned short)3376U}, {.reg = (unsigned short)3380U, .val = 2153807872U}, {.reg = (unsigned short)3384U}, {.reg = (unsigned short)3388U, .val = 160403U}, {.reg = (unsigned short)3392U}, {.reg = (unsigned short)3396U}, {.reg = (unsigned short)3400U}, {.reg = (unsigned short)3404U}, {.reg = (unsigned short)3408U, .val = 1681331210U}, {.reg = (unsigned short)3412U}, {.reg = (unsigned short)3416U}, {.reg = (unsigned short)3420U, .val = 805511268U}, {.reg = (unsigned short)3424U, .val = 1179901544U}, {.reg = (unsigned short)3428U, .val = 72452668U}, {.reg = (unsigned short)3432U, .val = 8449U}, {.reg = (unsigned short)3436U, .val = 706747414U}, {.reg = (unsigned short)3440U, .val = 403846702U}, {.reg = (unsigned short)3444U, .val = 841753120U}, {.reg = (unsigned short)3448U, .val = 932900U}, {.reg = (unsigned short)3584U, .val = 606348324U}, {.reg = (unsigned short)3588U, .val = 606348324U}, {.reg = (unsigned short)3592U, .val = 59777060U}, {.reg = (unsigned short)3600U, .val = 606348324U}, {.reg = (unsigned short)3604U, .val = 606348324U}, {.reg = (unsigned short)3608U, .val = 606348324U}, {.reg = (unsigned short)3612U, .val = 606348324U}, {.reg = (unsigned short)3624U}, {.reg = (unsigned short)3632U, .val = 268491807U}, {.reg = (unsigned short)3636U, .val = 268471327U}, {.reg = (unsigned short)3640U, .val = 34865410U}, {.reg = (unsigned short)3644U, .val = 1746273474U}, {.reg = (unsigned short)3648U, .val = 16808960U}, {.reg = (unsigned short)3652U, .val = 16795648U}, {.reg = (unsigned short)3656U, .val = 4211081216U}, {.reg = (unsigned short)3660U, .val = 10449U}, {.reg = (unsigned short)3664U, .val = 268491807U}, {.reg = (unsigned short)3668U, .val = 268471327U}, {.reg = (unsigned short)3672U, .val = 34865410U}, {.reg = (unsigned short)3676U, .val = 672533765U}, {.reg = (unsigned short)3680U, .val = 8U}, {.reg = (unsigned short)3688U, .val = 1779108U}, {.reg = (unsigned short)3692U, .val = 1662723488U}, {.reg = (unsigned short)3696U, .val = 1662723488U}, {.reg = (unsigned short)3700U, .val = 135996832U}, {.reg = (unsigned short)3704U, .val = 135996832U}, {.reg = (unsigned short)3708U, .val = 135996832U}, {.reg = (unsigned short)3712U, .val = 135996832U}, {.reg = (unsigned short)3716U, .val = 1662723488U}, {.reg = (unsigned short)3720U, .val = 135996832U}, {.reg = (unsigned short)3724U, .val = 1662723488U}, {.reg = (unsigned short)3792U, .val = 1662723488U}, {.reg = (unsigned short)3796U, .val = 1662723488U}, {.reg = (unsigned short)3800U, .val = 1662723488U}, {.reg = (unsigned short)3804U, .val = 1779104U}, {.reg = (unsigned short)3808U, .val = 1779104U}, {.reg = (unsigned short)3820U, .val = 1796941216U}, {.reg = (unsigned short)3816U, .val = 827675720U}, {.reg = (unsigned short)3860U, .val = 3U}, {.reg = (unsigned short)3916U}, {.reg = (unsigned short)3840U, .val = 768U}, {.reg = (unsigned short)65535U, .val = 4294967295U}};
#line 450  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
static struct rtl8xxxu_reg32val rtl8xxx_agc_standard_table[161U] = {{.reg = (unsigned short)3192U, .val = 2063597569U}, {.reg = (unsigned short)3192U, .val = 2063663105U}, {.reg = (unsigned short)3192U, .val = 2063728641U}, {.reg = (unsigned short)3192U, .val = 2063794177U}, {.reg = (unsigned short)3192U, .val = 2063859713U}, {.reg = (unsigned short)3192U, .val = 2063925249U}, {.reg = (unsigned short)3192U, .val = 2047213569U}, {.reg = (unsigned short)3192U, .val = 2030501889U}, {.reg = (unsigned short)3192U, .val = 2013790209U}, {.reg = (unsigned short)3192U, .val = 1997078529U}, {.reg = (unsigned short)3192U, .val = 1980366849U}, {.reg = (unsigned short)3192U, .val = 1963655169U}, {.reg = (unsigned short)3192U, .val = 1946943489U}, {.reg = (unsigned short)3192U, .val = 1930231809U}, {.reg = (unsigned short)3192U, .val = 1913520129U}, {.reg = (unsigned short)3192U, .val = 1896808449U}, {.reg = (unsigned short)3192U, .val = 1880096769U}, {.reg = (unsigned short)3192U, .val = 1863385089U}, {.reg = (unsigned short)3192U, .val = 1846673409U}, {.reg = (unsigned short)3192U, .val = 1829961729U}, {.reg = (unsigned short)3192U, .val = 1813250049U}, {.reg = (unsigned short)3192U, .val = 1796538369U}, {.reg = (unsigned short)3192U, .val = 1779826689U}, {.reg = (unsigned short)3192U, .val = 1763115009U}, {.reg = (unsigned short)3192U, .val = 1746403329U}, {.reg = (unsigned short)3192U, .val = 1729691649U}, {.reg = (unsigned short)3192U, .val = 1712979969U}, {.reg = (unsigned short)3192U, .val = 1696268289U}, {.reg = (unsigned short)3192U, .val = 1679556609U}, {.reg = (unsigned short)3192U, .val = 1662844929U}, {.reg = (unsigned short)3192U, .val = 1646133249U}, {.reg = (unsigned short)3192U, .val = 1629421569U}, {.reg = (unsigned short)3192U, .val = 1612709889U}, {.reg = (unsigned short)3192U, .val = 1226899457U}, {.reg = (unsigned short)3192U, .val = 1210187777U}, {.reg = (unsigned short)3192U, .val = 1193476097U}, {.reg = (unsigned short)3192U, .val = 1176764417U}, {.reg = (unsigned short)3192U, .val = 1160052737U}, {.reg = (unsigned short)3192U, .val = 1143341057U}, {.reg = (unsigned short)3192U, .val = 1126629377U}, {.reg = (unsigned short)3192U, .val = 1109917697U}, {.reg = (unsigned short)3192U, .val = 1093206017U}, {.reg = (unsigned short)3192U, .val = 1076494337U}, {.reg = (unsigned short)3192U, .val = 640352257U}, {.reg = (unsigned short)3192U, .val = 623640577U}, {.reg = (unsigned short)3192U, .val = 606928897U}, {.reg = (unsigned short)3192U, .val = 590217217U}, {.reg = (unsigned short)3192U, .val = 573505537U}, {.reg = (unsigned short)3192U, .val = 556793857U}, {.reg = (unsigned short)3192U, .val = 540082177U}, {.reg = (unsigned short)3192U, .val = 103940097U}, {.reg = (unsigned short)3192U, .val = 87228417U}, {.reg = (unsigned short)3192U, .val = 70516737U}, {.reg = (unsigned short)3192U, .val = 53805057U}, {.reg = (unsigned short)3192U, .val = 37093377U}, {.reg = (unsigned short)3192U, .val = 20381697U}, {.reg = (unsigned short)3192U, .val = 3670017U}, {.reg = (unsigned short)3192U, .val = 3735553U}, {.reg = (unsigned short)3192U, .val = 3801089U}, {.reg = (unsigned short)3192U, .val = 3866625U}, {.reg = (unsigned short)3192U, .val = 3932161U}, {.reg = (unsigned short)3192U, .val = 3997697U}, {.reg = (unsigned short)3192U, .val = 4063233U}, {.reg = (unsigned short)3192U, .val = 4128769U}, {.reg = (unsigned short)3192U, .val = 2067791873U}, {.reg = (unsigned short)3192U, .val = 2067857409U}, {.reg = (unsigned short)3192U, .val = 2067922945U}, {.reg = (unsigned short)3192U, .val = 2067988481U}, {.reg = (unsigned short)3192U, .val = 2068054017U}, {.reg = (unsigned short)3192U, .val = 2068119553U}, {.reg = (unsigned short)3192U, .val = 2051407873U}, {.reg = (unsigned short)3192U, .val = 2034696193U}, {.reg = (unsigned short)3192U, .val = 2017984513U}, {.reg = (unsigned short)3192U, .val = 2001272833U}, {.reg = (unsigned short)3192U, .val = 1984561153U}, {.reg = (unsigned short)3192U, .val = 1967849473U}, {.reg = (unsigned short)3192U, .val = 1951137793U}, {.reg = (unsigned short)3192U, .val = 1934426113U}, {.reg = (unsigned short)3192U, .val = 1917714433U}, {.reg = (unsigned short)3192U, .val = 1901002753U}, {.reg = (unsigned short)3192U, .val = 1884291073U}, {.reg = (unsigned short)3192U, .val = 1867579393U}, {.reg = (unsigned short)3192U, .val = 1850867713U}, {.reg = (unsigned short)3192U, .val = 1834156033U}, {.reg = (unsigned short)3192U, .val = 1817444353U}, {.reg = (unsigned short)3192U, .val = 1800732673U}, {.reg = (unsigned short)3192U, .val = 1784020993U}, {.reg = (unsigned short)3192U, .val = 1767309313U}, {.reg = (unsigned short)3192U, .val = 1750597633U}, {.reg = (unsigned short)3192U, .val = 1733885953U}, {.reg = (unsigned short)3192U, .val = 1717174273U}, {.reg = (unsigned short)3192U, .val = 1700462593U}, {.reg = (unsigned short)3192U, .val = 1683750913U}, {.reg = (unsigned short)3192U, .val = 1667039233U}, {.reg = (unsigned short)3192U, .val = 1650327553U}, {.reg = (unsigned short)3192U, .val = 1633615873U}, {.reg = (unsigned short)3192U, .val = 1616904193U}, {.reg = (unsigned short)3192U, .val = 1231093761U}, {.reg = (unsigned short)3192U, .val = 1214382081U}, {.reg = (unsigned short)3192U, .val = 1197670401U}, {.reg = (unsigned short)3192U, .val = 1180958721U}, {.reg = (unsigned short)3192U, .val = 1164247041U}, {.reg = (unsigned short)3192U, .val = 1147535361U}, {.reg = (unsigned short)3192U, .val = 1130823681U}, {.reg = (unsigned short)3192U, .val = 1114112001U}, {.reg = (unsigned short)3192U, .val = 1097400321U}, {.reg = (unsigned short)3192U, .val = 1080688641U}, {.reg = (unsigned short)3192U, .val = 644546561U}, {.reg = (unsigned short)3192U, .val = 627834881U}, {.reg = (unsigned short)3192U, .val = 611123201U}, {.reg = (unsigned short)3192U, .val = 594411521U}, {.reg = (unsigned short)3192U, .val = 577699841U}, {.reg = (unsigned short)3192U, .val = 560988161U}, {.reg = (unsigned short)3192U, .val = 544276481U}, {.reg = (unsigned short)3192U, .val = 108134401U}, {.reg = (unsigned short)3192U, .val = 91422721U}, {.reg = (unsigned short)3192U, .val = 74711041U}, {.reg = (unsigned short)3192U, .val = 57999361U}, {.reg = (unsigned short)3192U, .val = 41287681U}, {.reg = (unsigned short)3192U, .val = 24576001U}, {.reg = (unsigned short)3192U, .val = 7864321U}, {.reg = (unsigned short)3192U, .val = 7929857U}, {.reg = (unsigned short)3192U, .val = 7995393U}, {.reg = (unsigned short)3192U, .val = 8060929U}, {.reg = (unsigned short)3192U, .val = 8126465U}, {.reg = (unsigned short)3192U, .val = 8192001U}, {.reg = (unsigned short)3192U, .val = 8257537U}, {.reg = (unsigned short)3192U, .val = 8323073U}, {.reg = (unsigned short)3192U, .val = 939524126U}, {.reg = (unsigned short)3192U, .val = 939589662U}, {.reg = (unsigned short)3192U, .val = 939655198U}, {.reg = (unsigned short)3192U, .val = 939720734U}, {.reg = (unsigned short)3192U, .val = 939786270U}, {.reg = (unsigned short)3192U, .val = 939851806U}, {.reg = (unsigned short)3192U, .val = 939917342U}, {.reg = (unsigned short)3192U, .val = 939982878U}, {.reg = (unsigned short)3192U, .val = 940048414U}, {.reg = (unsigned short)3192U, .val = 1007222814U}, {.reg = (unsigned short)3192U, .val = 1040842782U}, {.reg = (unsigned short)3192U, .val = 1074462750U}, {.reg = (unsigned short)3192U, .val = 1141637150U}, {.reg = (unsigned short)3192U, .val = 1208811550U}, {.reg = (unsigned short)3192U, .val = 1275985950U}, {.reg = (unsigned short)3192U, .val = 1343160350U}, {.reg = (unsigned short)3192U, .val = 1376780318U}, {.reg = (unsigned short)3192U, .val = 1443954718U}, {.reg = (unsigned short)3192U, .val = 1511129118U}, {.reg = (unsigned short)3192U, .val = 1578303518U}, {.reg = (unsigned short)3192U, .val = 1611923486U}, {.reg = (unsigned short)3192U, .val = 1611989022U}, {.reg = (unsigned short)3192U, .val = 1612054558U}, {.reg = (unsigned short)3192U, .val = 1645674526U}, {.reg = (unsigned short)3192U, .val = 1645740062U}, {.reg = (unsigned short)3192U, .val = 1645805598U}, {.reg = (unsigned short)3192U, .val = 1645871134U}, {.reg = (unsigned short)3192U, .val = 1645936670U}, {.reg = (unsigned short)3192U, .val = 1646002206U}, {.reg = (unsigned short)3192U, .val = 1646067742U}, {.reg = (unsigned short)3192U, .val = 1646133278U}, {.reg = (unsigned short)3192U, .val = 1646198814U}, {.reg = (unsigned short)65535U, .val = 4294967295U}};
#line 534  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
static struct rtl8xxxu_reg32val rtl8xxx_agc_highpa_table[161U] = {{.reg = (unsigned short)3192U, .val = 2063597569U}, {.reg = (unsigned short)3192U, .val = 2063663105U}, {.reg = (unsigned short)3192U, .val = 2063728641U}, {.reg = (unsigned short)3192U, .val = 2063794177U}, {.reg = (unsigned short)3192U, .val = 2063859713U}, {.reg = (unsigned short)3192U, .val = 2063925249U}, {.reg = (unsigned short)3192U, .val = 2063990785U}, {.reg = (unsigned short)3192U, .val = 2064056321U}, {.reg = (unsigned short)3192U, .val = 2064121857U}, {.reg = (unsigned short)3192U, .val = 2047410177U}, {.reg = (unsigned short)3192U, .val = 2030698497U}, {.reg = (unsigned short)3192U, .val = 2013986817U}, {.reg = (unsigned short)3192U, .val = 1997275137U}, {.reg = (unsigned short)3192U, .val = 1980563457U}, {.reg = (unsigned short)3192U, .val = 1963851777U}, {.reg = (unsigned short)3192U, .val = 1947140097U}, {.reg = (unsigned short)3192U, .val = 1930428417U}, {.reg = (unsigned short)3192U, .val = 1913716737U}, {.reg = (unsigned short)3192U, .val = 1897005057U}, {.reg = (unsigned short)3192U, .val = 1880293377U}, {.reg = (unsigned short)3192U, .val = 1863581697U}, {.reg = (unsigned short)3192U, .val = 1846870017U}, {.reg = (unsigned short)3192U, .val = 1830158337U}, {.reg = (unsigned short)3192U, .val = 1813446657U}, {.reg = (unsigned short)3192U, .val = 1796734977U}, {.reg = (unsigned short)3192U, .val = 1780023297U}, {.reg = (unsigned short)3192U, .val = 1763311617U}, {.reg = (unsigned short)3192U, .val = 1746599937U}, {.reg = (unsigned short)3192U, .val = 1729888257U}, {.reg = (unsigned short)3192U, .val = 1713176577U}, {.reg = (unsigned short)3192U, .val = 1696464897U}, {.reg = (unsigned short)3192U, .val = 1679753217U}, {.reg = (unsigned short)3192U, .val = 1663041537U}, {.reg = (unsigned short)3192U, .val = 1646329857U}, {.reg = (unsigned short)3192U, .val = 1629618177U}, {.reg = (unsigned short)3192U, .val = 1612906497U}, {.reg = (unsigned short)3192U, .val = 1176764417U}, {.reg = (unsigned short)3192U, .val = 1160052737U}, {.reg = (unsigned short)3192U, .val = 1143341057U}, {.reg = (unsigned short)3192U, .val = 1126629377U}, {.reg = (unsigned short)3192U, .val = 1109917697U}, {.reg = (unsigned short)3192U, .val = 1093206017U}, {.reg = (unsigned short)3192U, .val = 1076494337U}, {.reg = (unsigned short)3192U, .val = 640352257U}, {.reg = (unsigned short)3192U, .val = 623640577U}, {.reg = (unsigned short)3192U, .val = 606928897U}, {.reg = (unsigned short)3192U, .val = 590217217U}, {.reg = (unsigned short)3192U, .val = 573505537U}, {.reg = (unsigned short)3192U, .val = 556793857U}, {.reg = (unsigned short)3192U, .val = 540082177U}, {.reg = (unsigned short)3192U, .val = 103940097U}, {.reg = (unsigned short)3192U, .val = 87228417U}, {.reg = (unsigned short)3192U, .val = 70516737U}, {.reg = (unsigned short)3192U, .val = 53805057U}, {.reg = (unsigned short)3192U, .val = 37093377U}, {.reg = (unsigned short)3192U, .val = 20381697U}, {.reg = (unsigned short)3192U, .val = 3670017U}, {.reg = (unsigned short)3192U, .val = 3735553U}, {.reg = (unsigned short)3192U, .val = 3801089U}, {.reg = (unsigned short)3192U, .val = 3866625U}, {.reg = (unsigned short)3192U, .val = 3932161U}, {.reg = (unsigned short)3192U, .val = 3997697U}, {.reg = (unsigned short)3192U, .val = 4063233U}, {.reg = (unsigned short)3192U, .val = 4128769U}, {.reg = (unsigned short)3192U, .val = 2067791873U}, {.reg = (unsigned short)3192U, .val = 2067857409U}, {.reg = (unsigned short)3192U, .val = 2067922945U}, {.reg = (unsigned short)3192U, .val = 2067988481U}, {.reg = (unsigned short)3192U, .val = 2068054017U}, {.reg = (unsigned short)3192U, .val = 2068119553U}, {.reg = (unsigned short)3192U, .val = 2068185089U}, {.reg = (unsigned short)3192U, .val = 2068250625U}, {.reg = (unsigned short)3192U, .val = 2068316161U}, {.reg = (unsigned short)3192U, .val = 2051604481U}, {.reg = (unsigned short)3192U, .val = 2034892801U}, {.reg = (unsigned short)3192U, .val = 2018181121U}, {.reg = (unsigned short)3192U, .val = 2001469441U}, {.reg = (unsigned short)3192U, .val = 1984757761U}, {.reg = (unsigned short)3192U, .val = 1968046081U}, {.reg = (unsigned short)3192U, .val = 1951334401U}, {.reg = (unsigned short)3192U, .val = 1934622721U}, {.reg = (unsigned short)3192U, .val = 1917911041U}, {.reg = (unsigned short)3192U, .val = 1901199361U}, {.reg = (unsigned short)3192U, .val = 1884487681U}, {.reg = (unsigned short)3192U, .val = 1867776001U}, {.reg = (unsigned short)3192U, .val = 1851064321U}, {.reg = (unsigned short)3192U, .val = 1834352641U}, {.reg = (unsigned short)3192U, .val = 1817640961U}, {.reg = (unsigned short)3192U, .val = 1800929281U}, {.reg = (unsigned short)3192U, .val = 1784217601U}, {.reg = (unsigned short)3192U, .val = 1767505921U}, {.reg = (unsigned short)3192U, .val = 1750794241U}, {.reg = (unsigned short)3192U, .val = 1734082561U}, {.reg = (unsigned short)3192U, .val = 1717370881U}, {.reg = (unsigned short)3192U, .val = 1700659201U}, {.reg = (unsigned short)3192U, .val = 1683947521U}, {.reg = (unsigned short)3192U, .val = 1667235841U}, {.reg = (unsigned short)3192U, .val = 1650524161U}, {.reg = (unsigned short)3192U, .val = 1633812481U}, {.reg = (unsigned short)3192U, .val = 1617100801U}, {.reg = (unsigned short)3192U, .val = 1180958721U}, {.reg = (unsigned short)3192U, .val = 1164247041U}, {.reg = (unsigned short)3192U, .val = 1147535361U}, {.reg = (unsigned short)3192U, .val = 1130823681U}, {.reg = (unsigned short)3192U, .val = 1114112001U}, {.reg = (unsigned short)3192U, .val = 1097400321U}, {.reg = (unsigned short)3192U, .val = 1080688641U}, {.reg = (unsigned short)3192U, .val = 644546561U}, {.reg = (unsigned short)3192U, .val = 627834881U}, {.reg = (unsigned short)3192U, .val = 611123201U}, {.reg = (unsigned short)3192U, .val = 594411521U}, {.reg = (unsigned short)3192U, .val = 577699841U}, {.reg = (unsigned short)3192U, .val = 560988161U}, {.reg = (unsigned short)3192U, .val = 544276481U}, {.reg = (unsigned short)3192U, .val = 108134401U}, {.reg = (unsigned short)3192U, .val = 91422721U}, {.reg = (unsigned short)3192U, .val = 74711041U}, {.reg = (unsigned short)3192U, .val = 57999361U}, {.reg = (unsigned short)3192U, .val = 41287681U}, {.reg = (unsigned short)3192U, .val = 24576001U}, {.reg = (unsigned short)3192U, .val = 7864321U}, {.reg = (unsigned short)3192U, .val = 7929857U}, {.reg = (unsigned short)3192U, .val = 7995393U}, {.reg = (unsigned short)3192U, .val = 8060929U}, {.reg = (unsigned short)3192U, .val = 8126465U}, {.reg = (unsigned short)3192U, .val = 8192001U}, {.reg = (unsigned short)3192U, .val = 8257537U}, {.reg = (unsigned short)3192U, .val = 8323073U}, {.reg = (unsigned short)3192U, .val = 939524126U}, {.reg = (unsigned short)3192U, .val = 939589662U}, {.reg = (unsigned short)3192U, .val = 939655198U}, {.reg = (unsigned short)3192U, .val = 939720734U}, {.reg = (unsigned short)3192U, .val = 939786270U}, {.reg = (unsigned short)3192U, .val = 939851806U}, {.reg = (unsigned short)3192U, .val = 939917342U}, {.reg = (unsigned short)3192U, .val = 939982878U}, {.reg = (unsigned short)3192U, .val = 940048414U}, {.reg = (unsigned short)3192U, .val = 1007222814U}, {.reg = (unsigned short)3192U, .val = 1040842782U}, {.reg = (unsigned short)3192U, .val = 1074462750U}, {.reg = (unsigned short)3192U, .val = 1141637150U}, {.reg = (unsigned short)3192U, .val = 1208811550U}, {.reg = (unsigned short)3192U, .val = 1275985950U}, {.reg = (unsigned short)3192U, .val = 1343160350U}, {.reg = (unsigned short)3192U, .val = 1376780318U}, {.reg = (unsigned short)3192U, .val = 1443954718U}, {.reg = (unsigned short)3192U, .val = 1511129118U}, {.reg = (unsigned short)3192U, .val = 1578303518U}, {.reg = (unsigned short)3192U, .val = 1611923486U}, {.reg = (unsigned short)3192U, .val = 1611989022U}, {.reg = (unsigned short)3192U, .val = 1612054558U}, {.reg = (unsigned short)3192U, .val = 1645674526U}, {.reg = (unsigned short)3192U, .val = 1645740062U}, {.reg = (unsigned short)3192U, .val = 1645805598U}, {.reg = (unsigned short)3192U, .val = 1645871134U}, {.reg = (unsigned short)3192U, .val = 1645936670U}, {.reg = (unsigned short)3192U, .val = 1646002206U}, {.reg = (unsigned short)3192U, .val = 1646067742U}, {.reg = (unsigned short)3192U, .val = 1646133278U}, {.reg = (unsigned short)3192U, .val = 1646198814U}, {.reg = (unsigned short)65535U, .val = 4294967295U}};
#line 618  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
static struct rtl8xxxu_rfregs rtl8xxxu_rfregs[2U] = {{.hssiparm1 = (unsigned short)2080U, .hssiparm2 = (unsigned short)2084U, .lssiparm = (unsigned short)2112U, .hspiread = (unsigned short)2232U, .lssiread = (unsigned short)2208U, .rf_sw_ctrl = (unsigned short)2160U}, {.hssiparm1 = (unsigned short)2088U, .hssiparm2 = (unsigned short)2092U, .lssiparm = (unsigned short)2116U, .hspiread = (unsigned short)2236U, .lssiread = (unsigned short)2212U, .rf_sw_ctrl = (unsigned short)2162U}};
#line 637  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
u32 rtl8xxxu_iqk_phy_iq_bb_reg[9U] = {3092U, 3100U, 3148U, 3192U, 3200U, 3208U, 3220U, 3228U, 3232U};
#line 649  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
u8 rtl8xxxu_read8(struct rtl8xxxu_priv *priv, u16 addr)
{
  #line 652 
  int len;
  #line 653 
  u8 data;
  #line 651 
  struct usb_device *udev = priv->udev;
  #line 655 
  cif_mutex_lock_usb_buf_mutex_of_rtl8xxxu_priv(& priv->usb_buf_mutex);
  #line 656 
  ;
  #line 656 
  ;
  #line 656 
  ;
  #line 656 
  len = usb_control_msg(udev,__create_pipe(udev,0U) | 2147483776U,(unsigned char)5,(unsigned char)192,(unsigned short)((int)addr),(unsigned short)0,(void *)(& priv->usb_buf.val8),(unsigned short)1,500);
  #line 660 
  data = priv->usb_buf.val8;
  #line 661 
  cif_mutex_unlock_usb_buf_mutex_of_rtl8xxxu_priv(& priv->usb_buf_mutex);
  #line 663 
  if ((rtl8xxxu_debug & 2) != 0) 
                                 #line 664 
                                 _dev_info(& udev->dev,(char *)"%s(%04x)   = 0x%02x, len %i\n",(char *)"rtl8xxxu_read8",(int)addr,(int)data,len);
  #line 666 
  return data;
}

#line 669  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
u16 rtl8xxxu_read16(struct rtl8xxxu_priv *priv, u16 addr)
{
  #line 672 
  int len;
  #line 673 
  u16 data;
  #line 671 
  struct usb_device *udev = priv->udev;
  #line 675 
  cif_mutex_lock_usb_buf_mutex_of_rtl8xxxu_priv(& priv->usb_buf_mutex);
  #line 676 
  ;
  #line 676 
  ;
  #line 676 
  ;
  #line 676 
  len = usb_control_msg(udev,__create_pipe(udev,0U) | 2147483776U,(unsigned char)5,(unsigned char)192,(unsigned short)((int)addr),(unsigned short)0,(void *)(& priv->usb_buf.val16),(unsigned short)2,500);
  #line 680 
  data = priv->usb_buf.val16;
  #line 681 
  cif_mutex_unlock_usb_buf_mutex_of_rtl8xxxu_priv(& priv->usb_buf_mutex);
  #line 683 
  if ((rtl8xxxu_debug & 2) != 0) 
                                 #line 684 
                                 _dev_info(& udev->dev,(char *)"%s(%04x)  = 0x%04x, len %i\n",(char *)"rtl8xxxu_read16",(int)addr,(int)data,len);
  #line 686 
  return data;
}

#line 689  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
u32 rtl8xxxu_read32(struct rtl8xxxu_priv *priv, u16 addr)
{
  #line 692 
  int len;
  #line 693 
  u32 data;
  #line 691 
  struct usb_device *udev = priv->udev;
  #line 695 
  cif_mutex_lock_usb_buf_mutex_of_rtl8xxxu_priv(& priv->usb_buf_mutex);
  #line 696 
  ;
  #line 696 
  ;
  #line 696 
  ;
  #line 696 
  len = usb_control_msg(udev,__create_pipe(udev,0U) | 2147483776U,(unsigned char)5,(unsigned char)192,(unsigned short)((int)addr),(unsigned short)0,(void *)(& priv->usb_buf.val32),(unsigned short)4,500);
  #line 700 
  data = priv->usb_buf.val32;
  #line 701 
  cif_mutex_unlock_usb_buf_mutex_of_rtl8xxxu_priv(& priv->usb_buf_mutex);
  #line 703 
  if ((rtl8xxxu_debug & 2) != 0) 
                                 #line 704 
                                 _dev_info(& udev->dev,(char *)"%s(%04x)  = 0x%08x, len %i\n",(char *)"rtl8xxxu_read32",(int)addr,data,len);
  #line 706 
  return data;
}

#line 709  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
int rtl8xxxu_write8(struct rtl8xxxu_priv *priv, u16 addr, u8 val)
{
  #line 712 
  int ret;
  #line 711 
  struct usb_device *udev = priv->udev;
  #line 714 
  cif_mutex_lock_usb_buf_mutex_of_rtl8xxxu_priv(& priv->usb_buf_mutex);
  #line 715 
  priv->usb_buf.val8 = val;
  #line 716 
  ;
  #line 716 
  ;
  #line 716 
  ;
  #line 716 
  ret = usb_control_msg(udev,__create_pipe(udev,0U) | 2147483648U,(unsigned char)5,(unsigned char)64,(unsigned short)((int)addr),(unsigned short)0,(void *)(& priv->usb_buf.val8),(unsigned short)1,500);
  #line 721 
  cif_mutex_unlock_usb_buf_mutex_of_rtl8xxxu_priv(& priv->usb_buf_mutex);
  #line 723 
  if ((rtl8xxxu_debug & 1) != 0) 
                                 #line 724 
                                 _dev_info(& udev->dev,(char *)"%s(%04x) = 0x%02x\n",(char *)"rtl8xxxu_write8",(int)addr,(int)val);
  #line 726 
  return ret;
}

#line 729  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
int rtl8xxxu_write16(struct rtl8xxxu_priv *priv, u16 addr, u16 val)
{
  #line 732 
  int ret;
  #line 731 
  struct usb_device *udev = priv->udev;
  #line 734 
  cif_mutex_lock_usb_buf_mutex_of_rtl8xxxu_priv(& priv->usb_buf_mutex);
  #line 735 
  priv->usb_buf.val16 = val;
  #line 736 
  ;
  #line 736 
  ;
  #line 736 
  ;
  #line 736 
  ret = usb_control_msg(udev,__create_pipe(udev,0U) | 2147483648U,(unsigned char)5,(unsigned char)64,(unsigned short)((int)addr),(unsigned short)0,(void *)(& priv->usb_buf.val16),(unsigned short)2,500);
  #line 740 
  cif_mutex_unlock_usb_buf_mutex_of_rtl8xxxu_priv(& priv->usb_buf_mutex);
  #line 742 
  if ((rtl8xxxu_debug & 1) != 0) 
                                 #line 743 
                                 _dev_info(& udev->dev,(char *)"%s(%04x) = 0x%04x\n",(char *)"rtl8xxxu_write16",(int)addr,(int)val);
  #line 745 
  return ret;
}

#line 748  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
int rtl8xxxu_write32(struct rtl8xxxu_priv *priv, u16 addr, u32 val)
{
  #line 751 
  int ret;
  #line 750 
  struct usb_device *udev = priv->udev;
  #line 753 
  cif_mutex_lock_usb_buf_mutex_of_rtl8xxxu_priv(& priv->usb_buf_mutex);
  #line 754 
  priv->usb_buf.val32 = val;
  #line 755 
  ;
  #line 755 
  ;
  #line 755 
  ;
  #line 755 
  ret = usb_control_msg(udev,__create_pipe(udev,0U) | 2147483648U,(unsigned char)5,(unsigned char)64,(unsigned short)((int)addr),(unsigned short)0,(void *)(& priv->usb_buf.val32),(unsigned short)4,500);
  #line 759 
  cif_mutex_unlock_usb_buf_mutex_of_rtl8xxxu_priv(& priv->usb_buf_mutex);
  #line 761 
  if ((rtl8xxxu_debug & 1) != 0) 
                                 #line 762 
                                 _dev_info(& udev->dev,(char *)"%s(%04x) = 0x%08x\n",(char *)"rtl8xxxu_write32",(int)addr,val);
  #line 764 
  return ret;
}

#line 768  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
static int rtl8xxxu_writeN(struct rtl8xxxu_priv *priv, u16 addr, u8 *buf, u16 len)
{
  #line 772 
  int ret;
  #line 772 
  int i;
  #line 772 
  int count;
  #line 772 
  int remainder;
  #line 770 
  struct usb_device *udev = priv->udev;
  #line 771 
  int blocksize = (priv->fops)->writeN_block_size;
  #line 774 
  count = (int)len / blocksize;
  #line 775 
  remainder = (int)len % blocksize;
  #line 777 
  i = 0;
  #line 777 
  while (i < count) {
    {
      #line 778 
      ;
      #line 778 
      ;
      #line 778 
      ;
      #line 778 
      ;
      #line 778 
      ret = usb_control_msg(udev,__create_pipe(udev,0U) | 2147483648U,(unsigned char)5,(unsigned char)64,(unsigned short)((int)addr),(unsigned short)0,(void *)buf,(unsigned short)((int)((unsigned short)blocksize)),500);
      #line 782 
      if (ret != blocksize) 
                            #line 783 
                            goto write_error;
      #line 785 
      addr = (unsigned short)((int)((unsigned short)blocksize) + (int)addr);
      #line 786 
      buf += (unsigned long)blocksize;
    }
    #line 777 
    i ++;
  }
  #line 789 
  if (remainder != 0) {
    #line 790 
    ;
    #line 790 
    ;
    #line 790 
    ;
    #line 790 
    ;
    #line 790 
    ret = usb_control_msg(udev,__create_pipe(udev,0U) | 2147483648U,(unsigned char)5,(unsigned char)64,(unsigned short)((int)addr),(unsigned short)0,(void *)buf,(unsigned short)((int)((unsigned short)remainder)),500);
    #line 794 
    if (ret != remainder) 
                          #line 795 
                          goto write_error;
  }
  #line 798 
  return (int)len;
  #line 800 
  write_error: 
               #line 800 
  ;
  #line 801 
  _dev_info(& udev->dev,(char *)"%s: Failed to write block at addr: %04x size: %04x\n",(char *)"rtl8xxxu_writeN",(int)addr,blocksize);
  #line 804 
  return -11;
}

#line 807  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
u32 rtl8xxxu_read_rfreg(struct rtl8xxxu_priv *priv, enum rtl8xxxu_rfpath path, u8 reg)
{
  #line 810 
  u32 hssia;
  #line 810 
  u32 val32;
  #line 810 
  u32 retval;
  #line 812 
  hssia = rtl8xxxu_read32(priv,(unsigned short)2084);
  #line 813 
  if (path != (unsigned int)RF_A) 
                                  #line 814 
                                  val32 = rtl8xxxu_read32(priv,(unsigned short)((int)rtl8xxxu_rfregs[(unsigned int)path].hssiparm2)); else 
                                                                    #line 816 
                                                                    val32 = hssia;
  #line 818 
  val32 &= 2155872255U;
  #line 819 
  val32 = (unsigned int)((int)reg << 23) | val32;
  #line 820 
  val32 |= 2147483648U;
  #line 821 
  hssia &= 2147483647U;
  #line 822 
  rtl8xxxu_write32(priv,(unsigned short)2084,hssia);
  #line 824 
  __const_udelay(42950UL);
  #line 826 
  rtl8xxxu_write32(priv,(unsigned short)((int)rtl8xxxu_rfregs[(unsigned int)path].hssiparm2),val32);
  #line 827 
  __const_udelay(429500UL);
  #line 829 
  hssia |= 2147483648U;
  #line 830 
  rtl8xxxu_write32(priv,(unsigned short)2084,hssia);
  #line 831 
  __const_udelay(42950UL);
  #line 833 
  val32 = rtl8xxxu_read32(priv,(unsigned short)((int)rtl8xxxu_rfregs[(unsigned int)path].hssiparm1));
  #line 834 
  if (((unsigned long)val32 & 256UL) != 0UL) 
                                             #line 835 
                                             retval = rtl8xxxu_read32(priv,(unsigned short)((int)rtl8xxxu_rfregs[(unsigned int)path].hspiread)); else 
                                                                    #line 837 
                                                                    retval = rtl8xxxu_read32(priv,(unsigned short)((int)rtl8xxxu_rfregs[(unsigned int)path].lssiread));
  #line 839 
  retval &= 1048575U;
  #line 841 
  if ((rtl8xxxu_debug & 8) != 0) 
                                 #line 842 
                                 _dev_info(& (priv->udev)->dev,(char *)"%s(%02x) = 0x%06x\n",(char *)"rtl8xxxu_read_rfreg",(int)reg,retval);
  #line 844 
  return retval;
}

#line 852  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
int rtl8xxxu_write_rfreg(struct rtl8xxxu_priv *priv, enum rtl8xxxu_rfpath path, u8 reg, u32 data)
{
  #line 855 
  int ret;
  #line 855 
  int retval;
  #line 856 
  u32 dataaddr;
  #line 856 
  u32 val32;
  #line 858 
  if ((rtl8xxxu_debug & 4) != 0) 
                                 #line 859 
                                 _dev_info(& (priv->udev)->dev,(char *)"%s(%02x) = 0x%06x\n",(char *)"rtl8xxxu_write_rfreg",(int)reg,data);
  #line 862 
  data &= 1048575U;
  #line 863 
  dataaddr = (unsigned int)((int)reg << 20) | data;
  #line 865 
  if (priv->rtl_chip == (unsigned int)RTL8192E) {
    #line 866 
    val32 = rtl8xxxu_read32(priv,(unsigned short)2072);
    #line 867 
    val32 &= 4294836223U;
    #line 868 
    rtl8xxxu_write32(priv,(unsigned short)2072,val32);
  }
  #line 872 
  ret = rtl8xxxu_write32(priv,(unsigned short)((int)rtl8xxxu_rfregs[(unsigned int)path].lssiparm),dataaddr);
  #line 873 
  if (ret != 4) 
                #line 874 
                retval = -5; else 
                                  #line 876 
                                  retval = 0;
  #line 878 
  __const_udelay(4295UL);
  #line 880 
  if (priv->rtl_chip == (unsigned int)RTL8192E) {
    #line 881 
    val32 = rtl8xxxu_read32(priv,(unsigned short)2072);
    #line 882 
    val32 |= 131072U;
    #line 883 
    rtl8xxxu_write32(priv,(unsigned short)2072,val32);
  }
  #line 886 
  return retval;
}

#line 890  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
static int rtl8xxxu_gen1_h2c_cmd(struct rtl8xxxu_priv *priv, struct h2c_cmd *h2c, int len)
{
  #line 893 
  int mbox_nr;
  #line 893 
  int retry;
  #line 894 
  int mbox_reg;
  #line 894 
  int mbox_ext_reg;
  #line 895 
  u8 val8;
  #line 892 
  struct device *dev = & (priv->udev)->dev;
  #line 893 
  int retval = 0;
  #line 897 
  cif_mutex_lock_h2c_mutex_of_rtl8xxxu_priv(& priv->h2c_mutex);
  #line 899 
  mbox_nr = priv->next_mbox;
  #line 900 
  mbox_reg = (mbox_nr + 116) * 4;
  #line 901 
  mbox_ext_reg = (mbox_nr + 68) * 2;
  #line 906 
  retry = 100;
  #line 907 
  while (1) {
    #line 911 
    int tmp;
    #line 908 
    val8 = rtl8xxxu_read8(priv,(unsigned short)460);
    #line 909 
    if ((((unsigned long)val8 >> mbox_nr) & 1UL) == 0UL) 
                                                         #line 910 
                                                         break;
    #line 911 
    tmp = retry;
    #line 911 
    retry --;
    #line 911 
    ;
    #line 911 
    if (! (tmp != 0)) 
                      #line 907 
                      break;
  }
  #line 913 
  if (retry == 0) {
    #line 914 
    _dev_info(dev,(char *)"%s: Mailbox busy\n",(char *)"rtl8xxxu_gen1_h2c_cmd");
    #line 915 
    retval = -16;
    #line 916 
    goto error;
  }
  #line 922 
  if ((unsigned int)len > 4U) {
    #line 923 
    rtl8xxxu_write16(priv,(unsigned short)((int)((unsigned short)mbox_ext_reg)),(unsigned short)((int)h2c->__anonCompField_h2c_cmd_197.raw.ext));
    #line 924 
    if ((rtl8xxxu_debug & 2048) != 0) 
                                      #line 925 
                                      _dev_info(dev,(char *)"H2C_EXT %04x\n",(int)h2c->__anonCompField_h2c_cmd_197.raw.ext);
  }
  #line 928 
  rtl8xxxu_write32(priv,(unsigned short)((int)((unsigned short)mbox_reg)),h2c->__anonCompField_h2c_cmd_197.raw.data);
  #line 929 
  if ((rtl8xxxu_debug & 2048) != 0) 
                                    #line 930 
                                    _dev_info(dev,(char *)"H2C %08x\n",h2c->__anonCompField_h2c_cmd_197.raw.data);
  #line 932 
  priv->next_mbox = (mbox_nr + 1) % 4;
  #line 934 
  error: 
         #line 934 
  ;
  #line 935 
  cif_mutex_unlock_h2c_mutex_of_rtl8xxxu_priv(& priv->h2c_mutex);
  #line 936 
  return retval;
}

#line 940  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
int rtl8xxxu_gen2_h2c_cmd(struct rtl8xxxu_priv *priv, struct h2c_cmd *h2c, int len)
{
  #line 943 
  int mbox_nr;
  #line 943 
  int retry;
  #line 944 
  int mbox_reg;
  #line 944 
  int mbox_ext_reg;
  #line 945 
  u8 val8;
  #line 942 
  struct device *dev = & (priv->udev)->dev;
  #line 943 
  int retval = 0;
  #line 947 
  cif_mutex_lock_h2c_mutex_of_rtl8xxxu_priv(& priv->h2c_mutex);
  #line 949 
  mbox_nr = priv->next_mbox;
  #line 950 
  mbox_reg = (mbox_nr + 116) * 4;
  #line 951 
  mbox_ext_reg = (mbox_nr + 124) * 4;
  #line 956 
  retry = 100;
  #line 957 
  while (1) {
    #line 961 
    int tmp;
    #line 958 
    val8 = rtl8xxxu_read8(priv,(unsigned short)460);
    #line 959 
    if ((((unsigned long)val8 >> mbox_nr) & 1UL) == 0UL) 
                                                         #line 960 
                                                         break;
    #line 961 
    tmp = retry;
    #line 961 
    retry --;
    #line 961 
    ;
    #line 961 
    if (! (tmp != 0)) 
                      #line 957 
                      break;
  }
  #line 963 
  if (retry == 0) {
    #line 964 
    _dev_info(dev,(char *)"%s: Mailbox busy\n",(char *)"rtl8xxxu_gen2_h2c_cmd");
    #line 965 
    retval = -16;
    #line 966 
    goto error;
  }
  #line 972 
  if ((unsigned int)len > 4U) {
    #line 973 
    rtl8xxxu_write32(priv,(unsigned short)((int)((unsigned short)mbox_ext_reg)),h2c->__anonCompField_h2c_cmd_197.raw_wide.ext);
    #line 975 
    if ((rtl8xxxu_debug & 2048) != 0) 
                                      #line 976 
                                      _dev_info(dev,(char *)"H2C_EXT %08x\n",h2c->__anonCompField_h2c_cmd_197.raw_wide.ext);
  }
  #line 979 
  rtl8xxxu_write32(priv,(unsigned short)((int)((unsigned short)mbox_reg)),h2c->__anonCompField_h2c_cmd_197.raw.data);
  #line 980 
  if ((rtl8xxxu_debug & 2048) != 0) 
                                    #line 981 
                                    _dev_info(dev,(char *)"H2C %08x\n",h2c->__anonCompField_h2c_cmd_197.raw.data);
  #line 983 
  priv->next_mbox = (mbox_nr + 1) % 4;
  #line 985 
  error: 
         #line 985 
  ;
  #line 986 
  cif_mutex_unlock_h2c_mutex_of_rtl8xxxu_priv(& priv->h2c_mutex);
  #line 987 
  return retval;
}

#line 990  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
void rtl8xxxu_gen1_enable_rf(struct rtl8xxxu_priv *priv)
{
  #line 992 
  u8 val8;
  #line 993 
  u32 val32;
  #line 995 
  val8 = rtl8xxxu_read8(priv,(unsigned short)17);
  #line 996 
  val8 = (unsigned char)((unsigned int)val8 | 9U);
  #line 997 
  rtl8xxxu_write8(priv,(unsigned short)17,(unsigned char)((int)val8));
  #line 999 
  val32 = rtl8xxxu_read32(priv,(unsigned short)2168);
  #line 1000 
  val32 &= 4294967247U;
  #line 1001 
  val32 |= 8U;
  #line 1002 
  if ((unsigned int)priv->rf_paths == 2U) {
    #line 1003 
    val32 &= 4291821567U;
    #line 1004 
    val32 |= 524288U;
  }
  #line 1006 
  rtl8xxxu_write32(priv,(unsigned short)2168,val32);
  #line 1008 
  val32 = rtl8xxxu_read32(priv,(unsigned short)3076);
  #line 1009 
  val32 &= 4294967055U;
  #line 1010 
  if ((unsigned int)priv->tx_paths == 2U) 
                                          #line 1011 
                                          val32 |= 48U;
  else 
    #line 1012 
    if (priv->rtl_chip == (unsigned int)RTL8192C || priv->rtl_chip == (unsigned int)RTL8191C) 
      #line 1013 
      val32 |= 32U; else 
                         #line 1015 
                         val32 |= 16U;
  #line 1016 
  rtl8xxxu_write32(priv,(unsigned short)3076,val32);
  #line 1018 
  val32 = rtl8xxxu_read32(priv,(unsigned short)2048);
  #line 1019 
  val32 &= 4294967293U;
  #line 1020 
  rtl8xxxu_write32(priv,(unsigned short)2048,val32);
  #line 1022 
  if ((unsigned int)priv->rf_paths == 2U) 
                                          #line 1023 
                                          rtl8xxxu_write32(priv,(unsigned short)3696,1675306400U); else 
                                                                    #line 1025 
                                                                    rtl8xxxu_write32(priv,(unsigned short)3696,1662723488U);
  #line 1027 
  rtl8xxxu_write_rfreg(priv,(enum rtl8xxxu_rfpath)RF_A,(unsigned char)0,208277U);
  #line 1028 
  if ((unsigned int)priv->rf_paths == 2U) 
                                          #line 1029 
                                          rtl8xxxu_write_rfreg(priv,(enum rtl8xxxu_rfpath)RF_B,(unsigned char)0,208277U);
  #line 1031 
  rtl8xxxu_write8(priv,(unsigned short)1314,(unsigned char)0);
  #line 1032 
  return;
}

#line 1034  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
void rtl8xxxu_gen1_disable_rf(struct rtl8xxxu_priv *priv)
{
  #line 1036 
  u8 sps0;
  #line 1037 
  u32 val32;
  #line 1039 
  sps0 = rtl8xxxu_read8(priv,(unsigned short)17);
  #line 1042 
  val32 = rtl8xxxu_read32(priv,(unsigned short)2168);
  #line 1043 
  val32 &= 4294967239U;
  #line 1044 
  if ((unsigned int)priv->rf_paths == 2U) 
                                          #line 1045 
                                          val32 &= 4291297279U;
  #line 1046 
  rtl8xxxu_write32(priv,(unsigned short)2168,val32);
  #line 1049 
  val32 = rtl8xxxu_read32(priv,(unsigned short)3076);
  #line 1050 
  val32 &= 4294967055U;
  #line 1051 
  rtl8xxxu_write32(priv,(unsigned short)3076,val32);
  #line 1054 
  val32 = rtl8xxxu_read32(priv,(unsigned short)2048);
  #line 1055 
  val32 |= 2U;
  #line 1056 
  rtl8xxxu_write32(priv,(unsigned short)2048,val32);
  #line 1059 
  if ((unsigned int)priv->rf_paths == 2U) 
                                          #line 1060 
                                          rtl8xxxu_write32(priv,(unsigned short)3696,14362016U); else 
                                                                    #line 1062 
                                                                    rtl8xxxu_write32(priv,(unsigned short)3696,1779104U);
  #line 1065 
  rtl8xxxu_write_rfreg(priv,(enum rtl8xxxu_rfpath)RF_A,(unsigned char)0,0U);
  #line 1066 
  if ((unsigned int)priv->rf_paths == 2U) 
                                          #line 1067 
                                          rtl8xxxu_write_rfreg(priv,(enum rtl8xxxu_rfpath)RF_B,(unsigned char)0,0U);
  #line 1069 
  sps0 = (unsigned char)((unsigned int)sps0 & 246U);
  #line 1070 
  rtl8xxxu_write8(priv,(unsigned short)17,(unsigned char)((int)sps0));
  #line 1071 
  return;
}

#line 1073  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
static void rtl8xxxu_stop_tx_beacon(struct rtl8xxxu_priv *priv)
{
  #line 1075 
  u8 val8;
  #line 1077 
  val8 = rtl8xxxu_read8(priv,(unsigned short)1058);
  #line 1078 
  val8 = (unsigned char)((unsigned int)val8 & 191U);
  #line 1079 
  rtl8xxxu_write8(priv,(unsigned short)1058,(unsigned char)((int)val8));
  #line 1081 
  rtl8xxxu_write8(priv,(unsigned short)1345,(unsigned char)100);
  #line 1082 
  val8 = rtl8xxxu_read8(priv,(unsigned short)1346);
  #line 1083 
  val8 = (unsigned char)((unsigned int)val8 & 254U);
  #line 1084 
  rtl8xxxu_write8(priv,(unsigned short)1346,(unsigned char)((int)val8));
  #line 1085 
  return;
}

#line 1097  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
static int rtl8xxxu_gen1_channel_to_group(int channel)
{
  #line 1099 
  int group;
  #line 1101 
  if (channel <= 3) 
                    #line 1102 
                    group = 0;
  else 
    #line 1103 
    if (channel <= 9) 
                      #line 1104 
                      group = 1; else 
                                      #line 1106 
                                      group = 2;
  #line 1108 
  return group;
}

#line 1114  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
int rtl8xxxu_gen2_channel_to_group(int channel)
{
  #line 1116 
  int group;
  #line 1118 
  if (channel <= 2) 
                    #line 1119 
                    group = 0;
  else 
    #line 1120 
    if (channel <= 5) 
                      #line 1121 
                      group = 1;
    else 
      #line 1122 
      if (channel <= 8) 
                        #line 1123 
                        group = 2;
      else 
        #line 1124 
        if (channel <= 11) 
                           #line 1125 
                           group = 3; else 
                                           #line 1127 
                                           group = 4;
  #line 1129 
  return group;
}

#line 1132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
void rtl8xxxu_gen1_config_channel(struct ieee80211_hw *hw)
{
  #line 1135 
  u32 val32;
  #line 1135 
  u32 rsr;
  #line 1136 
  u8 val8;
  #line 1136 
  u8 opmode;
  #line 1138 
  int sec_ch_above;
  #line 1138 
  int channel;
  #line 1139 
  int i;
  #line 1134 
  struct rtl8xxxu_priv *priv = (struct rtl8xxxu_priv *)hw->priv;
  #line 1137 
  bool ht = (_Bool)1;
  #line 1141 
  opmode = rtl8xxxu_read8(priv,(unsigned short)1539);
  #line 1142 
  rsr = rtl8xxxu_read32(priv,(unsigned short)1088);
  #line 1143 
  channel = (int)(hw->conf.chandef.chan)->hw_value;
  #line 1145 
  switch ((unsigned int)hw->conf.chandef.width) {
    #line 1146 
    case (unsigned int)0: 
                          #line 1146 
    ;
    #line 1147 
    ht = (_Bool)0;
    #line 1149 
    case (unsigned int)1: 
                          #line 1149 
    ;
    #line 1150 
    opmode = (unsigned char)((unsigned int)opmode | 4U);
    #line 1151 
    rtl8xxxu_write8(priv,(unsigned short)1539,(unsigned char)((int)opmode));
    #line 1153 
    val32 = rtl8xxxu_read32(priv,(unsigned short)2048);
    #line 1154 
    val32 &= 4294967294U;
    #line 1155 
    rtl8xxxu_write32(priv,(unsigned short)2048,val32);
    #line 1157 
    val32 = rtl8xxxu_read32(priv,(unsigned short)2304);
    #line 1158 
    val32 &= 4294967294U;
    #line 1159 
    rtl8xxxu_write32(priv,(unsigned short)2304,val32);
    #line 1161 
    val32 = rtl8xxxu_read32(priv,(unsigned short)2180);
    #line 1162 
    val32 |= 1024U;
    #line 1163 
    rtl8xxxu_write32(priv,(unsigned short)2180,val32);
    #line 1164 
    break;
    #line 1165 
    case (unsigned int)2: 
                          #line 1165 
    ;
    #line 1166 
    if (hw->conf.chandef.center_freq1 > (hw->conf.chandef.chan)->center_freq) {
      #line 1168 
      sec_ch_above = 1;
      #line 1169 
      channel += 2;
    }
    else {
      #line 1171 
      sec_ch_above = 0;
      #line 1172 
      channel += -2;
    }
    #line 1175 
    opmode = (unsigned char)((unsigned int)opmode & 251U);
    #line 1176 
    rtl8xxxu_write8(priv,(unsigned short)1539,(unsigned char)((int)opmode));
    #line 1177 
    rsr &= 4288675839U;
    #line 1178 
    if (sec_ch_above != 0) 
                           #line 1179 
                           rsr |= 4194304U; else 
                                                 #line 1181 
                                                 rsr |= 2097152U;
    #line 1182 
    rtl8xxxu_write32(priv,(unsigned short)1088,rsr);
    #line 1184 
    val32 = rtl8xxxu_read32(priv,(unsigned short)2048);
    #line 1185 
    val32 |= 1U;
    #line 1186 
    rtl8xxxu_write32(priv,(unsigned short)2048,val32);
    #line 1188 
    val32 = rtl8xxxu_read32(priv,(unsigned short)2304);
    #line 1189 
    val32 |= 1U;
    #line 1190 
    rtl8xxxu_write32(priv,(unsigned short)2304,val32);
    #line 1196 
    val32 = rtl8xxxu_read32(priv,(unsigned short)2560);
    #line 1197 
    val32 &= 4294967279U;
    #line 1198 
    if (sec_ch_above == 0) 
                           #line 1199 
                           val32 |= 16U;
    #line 1200 
    rtl8xxxu_write32(priv,(unsigned short)2560,val32);
    #line 1202 
    val32 = rtl8xxxu_read32(priv,(unsigned short)3328);
    #line 1203 
    val32 &= 4294964223U;
    #line 1204 
    if (sec_ch_above != 0) 
                           #line 1205 
                           val32 |= 1024U; else 
                                                #line 1207 
                                                val32 |= 2048U;
    #line 1208 
    rtl8xxxu_write32(priv,(unsigned short)3328,val32);
    #line 1210 
    val32 = rtl8xxxu_read32(priv,(unsigned short)2180);
    #line 1211 
    val32 &= 4294966271U;
    #line 1212 
    rtl8xxxu_write32(priv,(unsigned short)2180,val32);
    #line 1214 
    val32 = rtl8xxxu_read32(priv,(unsigned short)2072);
    #line 1215 
    val32 &= 4093640703U;
    #line 1216 
    if (sec_ch_above != 0) 
                           #line 1217 
                           val32 |= 134217728U; else 
                                                     #line 1219 
                                                     val32 |= 67108864U;
    #line 1220 
    rtl8xxxu_write32(priv,(unsigned short)2072,val32);
    #line 1221 
    break;
    #line 1223 
    default: 
             #line 1223 
    ;
    #line 1224 
    break;
  }
  #line 1227 
  i = 0;
  #line 1227 
  while ((int)priv->rf_paths > i) {
    #line 1228 
    val32 = rtl8xxxu_read_rfreg(priv,(enum rtl8xxxu_rfpath)i,(unsigned char)24);
    #line 1229 
    val32 &= 4294966272U;
    #line 1230 
    val32 |= (unsigned int)channel;
    #line 1231 
    rtl8xxxu_write_rfreg(priv,(enum rtl8xxxu_rfpath)i,(unsigned char)24,val32);
    #line 1227 
    i ++;
  }
  #line 1234 
  if ((int)ht != 0) 
                    #line 1235 
                    val8 = (unsigned char)14U; else 
                                                    #line 1237 
                                                    val8 = (unsigned char)10U;
  #line 1239 
  rtl8xxxu_write8(priv,(unsigned short)1301,(unsigned char)((int)val8));
  #line 1240 
  rtl8xxxu_write8(priv,(unsigned short)1303,(unsigned char)((int)val8));
  #line 1242 
  rtl8xxxu_write16(priv,(unsigned short)1596,(unsigned short)2056);
  #line 1243 
  rtl8xxxu_write16(priv,(unsigned short)1598,(unsigned short)2570);
  #line 1245 
  i = 0;
  #line 1245 
  while ((int)priv->rf_paths > i) {
    #line 1246 
    val32 = rtl8xxxu_read_rfreg(priv,(enum rtl8xxxu_rfpath)i,(unsigned char)24);
    #line 1247 
    if (hw->conf.chandef.width == (unsigned int)NL80211_CHAN_WIDTH_40) 
      #line 1248 
      val32 &= 4294966271U; else 
                                 #line 1250 
                                 val32 |= 1024U;
    #line 1251 
    rtl8xxxu_write_rfreg(priv,(enum rtl8xxxu_rfpath)i,(unsigned char)24,val32);
    #line 1245 
    i ++;
  }
  #line 1253 
  return;
}

#line 1255  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
void rtl8xxxu_gen2_config_channel(struct ieee80211_hw *hw)
{
  #line 1258 
  u32 val32;
  #line 1259 
  u8 val8;
  #line 1259 
  u8 subchannel;
  #line 1260 
  u16 rf_mode_bw;
  #line 1262 
  int sec_ch_above;
  #line 1262 
  int channel;
  #line 1263 
  int i;
  #line 1257 
  struct rtl8xxxu_priv *priv = (struct rtl8xxxu_priv *)hw->priv;
  #line 1261 
  bool ht = (_Bool)1;
  #line 1265 
  rf_mode_bw = rtl8xxxu_read16(priv,(unsigned short)1640);
  #line 1266 
  rf_mode_bw = (unsigned short)((unsigned int)rf_mode_bw & 65151U);
  #line 1267 
  channel = (int)(hw->conf.chandef.chan)->hw_value;
  #line 1270 
  subchannel = (unsigned char)0U;
  #line 1272 
  switch ((unsigned int)hw->conf.chandef.width) {
    #line 1273 
    case (unsigned int)0: 
                          #line 1273 
    ;
    #line 1274 
    ht = (_Bool)0;
    #line 1276 
    case (unsigned int)1: 
                          #line 1276 
    ;
    #line 1277 
    rf_mode_bw = rf_mode_bw;
    #line 1278 
    subchannel = (unsigned char)0U;
    #line 1280 
    val32 = rtl8xxxu_read32(priv,(unsigned short)2048);
    #line 1281 
    val32 &= 4294967294U;
    #line 1282 
    rtl8xxxu_write32(priv,(unsigned short)2048,val32);
    #line 1284 
    val32 = rtl8xxxu_read32(priv,(unsigned short)2304);
    #line 1285 
    val32 &= 4294967294U;
    #line 1286 
    rtl8xxxu_write32(priv,(unsigned short)2304,val32);
    #line 1288 
    val32 = rtl8xxxu_read32(priv,(unsigned short)3300);
    #line 1289 
    val32 &= 1073741823U;
    #line 1290 
    rtl8xxxu_write32(priv,(unsigned short)3300,val32);
    #line 1292 
    break;
    #line 1293 
    case (unsigned int)2: 
                          #line 1293 
    ;
    #line 1294 
    rf_mode_bw = (unsigned short)((unsigned int)rf_mode_bw | 128U);
    #line 1296 
    if (hw->conf.chandef.center_freq1 > (hw->conf.chandef.chan)->center_freq) {
      #line 1298 
      sec_ch_above = 1;
      #line 1299 
      channel += 2;
    }
    else {
      #line 1301 
      sec_ch_above = 0;
      #line 1302 
      channel += -2;
    }
    #line 1305 
    val32 = rtl8xxxu_read32(priv,(unsigned short)2048);
    #line 1306 
    val32 |= 1U;
    #line 1307 
    rtl8xxxu_write32(priv,(unsigned short)2048,val32);
    #line 1309 
    val32 = rtl8xxxu_read32(priv,(unsigned short)2304);
    #line 1310 
    val32 |= 1U;
    #line 1311 
    rtl8xxxu_write32(priv,(unsigned short)2304,val32);
    #line 1317 
    val32 = rtl8xxxu_read32(priv,(unsigned short)2560);
    #line 1318 
    val32 &= 4294967279U;
    #line 1319 
    if (sec_ch_above == 0) 
                           #line 1320 
                           val32 |= 16U;
    #line 1321 
    rtl8xxxu_write32(priv,(unsigned short)2560,val32);
    #line 1323 
    val32 = rtl8xxxu_read32(priv,(unsigned short)3328);
    #line 1324 
    val32 &= 4294964223U;
    #line 1325 
    if (sec_ch_above != 0) 
                           #line 1326 
                           val32 |= 1024U; else 
                                                #line 1328 
                                                val32 |= 2048U;
    #line 1329 
    rtl8xxxu_write32(priv,(unsigned short)3328,val32);
    #line 1331 
    val32 = rtl8xxxu_read32(priv,(unsigned short)2072);
    #line 1332 
    val32 &= 4093640703U;
    #line 1333 
    if (sec_ch_above != 0) 
                           #line 1334 
                           val32 |= 134217728U; else 
                                                     #line 1336 
                                                     val32 |= 67108864U;
    #line 1337 
    rtl8xxxu_write32(priv,(unsigned short)2072,val32);
    #line 1338 
    break;
    #line 1339 
    case (unsigned int)3: 
                          #line 1339 
    ;
    #line 1340 
    rf_mode_bw = (unsigned short)((unsigned int)rf_mode_bw | 256U);
    #line 1341 
    break;
    #line 1342 
    default: 
             #line 1342 
    ;
    #line 1343 
    break;
  }
  #line 1346 
  i = 0;
  #line 1346 
  while ((int)priv->rf_paths > i) {
    #line 1347 
    val32 = rtl8xxxu_read_rfreg(priv,(enum rtl8xxxu_rfpath)i,(unsigned char)24);
    #line 1348 
    val32 &= 4294966272U;
    #line 1349 
    val32 |= (unsigned int)channel;
    #line 1350 
    rtl8xxxu_write_rfreg(priv,(enum rtl8xxxu_rfpath)i,(unsigned char)24,val32);
    #line 1346 
    i ++;
  }
  #line 1353 
  rtl8xxxu_write16(priv,(unsigned short)1640,(unsigned short)((int)rf_mode_bw));
  #line 1354 
  rtl8xxxu_write8(priv,(unsigned short)1155,(unsigned char)((int)subchannel));
  #line 1356 
  if ((int)ht != 0) 
                    #line 1357 
                    val8 = (unsigned char)14U; else 
                                                    #line 1359 
                                                    val8 = (unsigned char)10U;
  #line 1361 
  rtl8xxxu_write8(priv,(unsigned short)1301,(unsigned char)((int)val8));
  #line 1362 
  rtl8xxxu_write8(priv,(unsigned short)1303,(unsigned char)((int)val8));
  #line 1364 
  rtl8xxxu_write16(priv,(unsigned short)1596,(unsigned short)2056);
  #line 1365 
  rtl8xxxu_write16(priv,(unsigned short)1598,(unsigned short)2570);
  #line 1367 
  i = 0;
  #line 1367 
  while ((int)priv->rf_paths > i) {
    #line 1368 
    val32 = rtl8xxxu_read_rfreg(priv,(enum rtl8xxxu_rfpath)i,(unsigned char)24);
    #line 1369 
    val32 &= 4294964223U;
    #line 1370 
    switch ((unsigned int)hw->conf.chandef.width) {
      #line 1371 
      case (unsigned int)3: 
                            #line 1371 
      ;
      #line 1372 
      val32 = val32;
      #line 1373 
      break;
      #line 1374 
      case (unsigned int)2: 
                            #line 1374 
      ;
      #line 1375 
      val32 |= 1024U;
      #line 1376 
      break;
      #line 1377 
      default: 
               #line 1377 
      ;
      #line 1378 
      val32 |= 3072U;
      #line 1379 
      break;
    }
    #line 1381 
    rtl8xxxu_write_rfreg(priv,(enum rtl8xxxu_rfpath)i,(unsigned char)24,val32);
    #line 1367 
    i ++;
  }
  #line 1383 
  return;
}

#line 1386  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
void rtl8xxxu_gen1_set_tx_power(struct rtl8xxxu_priv *priv, int channel, bool ht40)
{
  #line 1389 
  u8 cck[2U];
  #line 1389 
  u8 ofdm[2U];
  #line 1390 
  u8 ofdmbase[2U];
  #line 1390 
  u8 mcsbase[2U];
  #line 1391 
  u32 val32;
  #line 1391 
  u32 ofdm_a;
  #line 1391 
  u32 ofdm_b;
  #line 1391 
  u32 mcs_a;
  #line 1391 
  u32 mcs_b;
  #line 1392 
  u8 val8;
  #line 1393 
  int group;
  #line 1393 
  int i;
  #line 1388 
  struct rtl8xxxu_power_base *power_base = priv->power_base;
  #line 1395 
  group = rtl8xxxu_gen1_channel_to_group(channel);
  #line 1397 
  cck[0] = (unsigned char)((unsigned int)priv->cck_tx_power_index_A[group] + 255U);
  #line 1398 
  cck[1] = (unsigned char)((unsigned int)priv->cck_tx_power_index_B[group] + 255U);
  #line 1400 
  if ((unsigned int)priv->hi_pa != 0U) {
    #line 1401 
    if ((unsigned int)cck[0] > 32U) 
                                    #line 1402 
                                    cck[0] = (unsigned char)32U;
    #line 1403 
    if ((unsigned int)cck[1] > 32U) 
                                    #line 1404 
                                    cck[1] = (unsigned char)32U;
  }
  #line 1407 
  ofdm[0] = priv->ht40_1s_tx_power_index_A[group];
  #line 1408 
  ofdm[1] = priv->ht40_1s_tx_power_index_B[group];
  #line 1409 
  if ((unsigned int)ofdm[0] != 0U) 
                                   #line 1410 
                                   ofdm[0] = (unsigned char)((unsigned int)ofdm[0] + 255U);
  #line 1411 
  if ((unsigned int)ofdm[1] != 0U) 
                                   #line 1412 
                                   ofdm[1] = (unsigned char)((unsigned int)ofdm[1] + 255U);
  #line 1414 
  ofdmbase[0] = (unsigned char)((int)ofdm[0] + (int)((unsigned char)priv->ofdm_tx_power_index_diff[group].a));
  #line 1415 
  ofdmbase[1] = (unsigned char)((int)ofdm[1] + (int)((unsigned char)priv->ofdm_tx_power_index_diff[group].b));
  #line 1417 
  mcsbase[0] = ofdm[0];
  #line 1418 
  mcsbase[1] = ofdm[1];
  #line 1419 
  if (! ht40) {
    #line 1420 
    mcsbase[0] = (unsigned char)((int)mcsbase[0] + (int)((unsigned char)priv->ht20_tx_power_index_diff[group].a));
    #line 1421 
    mcsbase[1] = (unsigned char)((int)mcsbase[1] + (int)((unsigned char)priv->ht20_tx_power_index_diff[group].b));
  }
  #line 1424 
  if ((unsigned int)priv->tx_paths > 1U) {
    #line 1425 
    if ((int)ofdm[0] > (int)priv->ht40_2s_tx_power_index_diff[group].a) 
      #line 1426 
      ofdm[0] = (unsigned char)((int)ofdm[0] - (int)((unsigned char)priv->ht40_2s_tx_power_index_diff[group].a));
    #line 1427 
    if ((int)ofdm[1] > (int)priv->ht40_2s_tx_power_index_diff[group].b) 
      #line 1428 
      ofdm[1] = (unsigned char)((int)ofdm[1] - (int)((unsigned char)priv->ht40_2s_tx_power_index_diff[group].b));
  }
  #line 1431 
  if ((rtl8xxxu_debug & 16) != 0) 
                                  #line 1432 
                                  _dev_info(& (priv->udev)->dev,(char *)"%s: Setting TX power CCK A: %02x, ",(char *)"rtl8xxxu_gen1_set_tx_power",(int)cck[0],(int)cck[1],(int)ofdm[0],(int)ofdm[1]);
  #line 1437 
  i = 0;
  #line 1437 
  while (i <= 1) {
    #line 1438 
    if ((unsigned int)cck[i] > 63U) 
                                    #line 1439 
                                    cck[i] = (unsigned char)63U;
    #line 1440 
    if ((unsigned int)ofdm[i] > 63U) 
                                     #line 1441 
                                     ofdm[i] = (unsigned char)63U;
    #line 1437 
    i ++;
  }
  #line 1444 
  val32 = rtl8xxxu_read32(priv,(unsigned short)3592);
  #line 1445 
  val32 &= 4294902015U;
  #line 1446 
  val32 = (unsigned int)((int)cck[0] << 8) | val32;
  #line 1447 
  rtl8xxxu_write32(priv,(unsigned short)3592,val32);
  #line 1449 
  val32 = rtl8xxxu_read32(priv,(unsigned short)2156);
  #line 1450 
  val32 &= 255U;
  #line 1451 
  val32 = (unsigned int)((((int)cck[0] << 8) | ((int)cck[0] << 16)) | ((int)cck[0] << 24)) | val32;
  #line 1452 
  rtl8xxxu_write32(priv,(unsigned short)2156,val32);
  #line 1454 
  val32 = rtl8xxxu_read32(priv,(unsigned short)2156);
  #line 1455 
  val32 &= 4294967040U;
  #line 1456 
  val32 = (unsigned int)cck[1] | val32;
  #line 1457 
  rtl8xxxu_write32(priv,(unsigned short)2156,val32);
  #line 1459 
  val32 = rtl8xxxu_read32(priv,(unsigned short)2104);
  #line 1460 
  val32 &= 255U;
  #line 1461 
  val32 = (unsigned int)((((int)cck[1] << 8) | ((int)cck[1] << 16)) | ((int)cck[1] << 24)) | val32;
  #line 1462 
  rtl8xxxu_write32(priv,(unsigned short)2104,val32);
  #line 1464 
  ofdm_a = (unsigned int)((((int)ofdmbase[0] | ((int)ofdmbase[0] << 8)) | ((int)ofdmbase[0] << 16)) | ((int)ofdmbase[0] << 24));
  #line 1466 
  ofdm_b = (unsigned int)((((int)ofdmbase[1] | ((int)ofdmbase[1] << 8)) | ((int)ofdmbase[1] << 16)) | ((int)ofdmbase[1] << 24));
  #line 1469 
  rtl8xxxu_write32(priv,(unsigned short)3584,power_base->reg_0e00 + ofdm_a);
  #line 1471 
  rtl8xxxu_write32(priv,(unsigned short)2096,power_base->reg_0830 + ofdm_b);
  #line 1474 
  rtl8xxxu_write32(priv,(unsigned short)3588,power_base->reg_0e04 + ofdm_a);
  #line 1476 
  rtl8xxxu_write32(priv,(unsigned short)2100,power_base->reg_0834 + ofdm_b);
  #line 1479 
  mcs_a = (unsigned int)((((int)mcsbase[0] | ((int)mcsbase[0] << 8)) | ((int)mcsbase[0] << 16)) | ((int)mcsbase[0] << 24));
  #line 1481 
  mcs_b = (unsigned int)((((int)mcsbase[1] | ((int)mcsbase[1] << 8)) | ((int)mcsbase[1] << 16)) | ((int)mcsbase[1] << 24));
  #line 1484 
  rtl8xxxu_write32(priv,(unsigned short)3600,power_base->reg_0e10 + mcs_a);
  #line 1486 
  rtl8xxxu_write32(priv,(unsigned short)2108,power_base->reg_083c + mcs_b);
  #line 1489 
  rtl8xxxu_write32(priv,(unsigned short)3604,power_base->reg_0e14 + mcs_a);
  #line 1491 
  rtl8xxxu_write32(priv,(unsigned short)2120,power_base->reg_0848 + mcs_b);
  #line 1494 
  rtl8xxxu_write32(priv,(unsigned short)3608,power_base->reg_0e18 + mcs_a);
  #line 1496 
  rtl8xxxu_write32(priv,(unsigned short)2124,power_base->reg_084c + mcs_b);
  #line 1499 
  rtl8xxxu_write32(priv,(unsigned short)3612,power_base->reg_0e1c + mcs_a);
  #line 1501 
  i = 0;
  #line 1501 
  while (i <= 2) {
    #line 1502 
    if (i != 2) {
      #line 1503 
      unsigned int tmp;
      #line 1503 
      if (8U > (unsigned int)mcsbase[0]) 
                                         #line 1503 
                                         tmp = 8U; else 
                                                        #line 1503 
                                                        tmp = (unsigned int)mcsbase[0];
      #line 1503 
      val8 = (unsigned char)(tmp + 248U);
    }
    else {
      #line 1505 
      unsigned int tmp_0;
      #line 1505 
      if (6U > (unsigned int)mcsbase[0]) 
                                         #line 1505 
                                         tmp_0 = 6U; else 
                                                          #line 1505 
                                                          tmp_0 = (unsigned int)mcsbase[0];
      #line 1505 
      val8 = (unsigned char)(tmp_0 + 250U);
    }
    #line 1506 
    rtl8xxxu_write8(priv,(unsigned short)((int)((unsigned int)((unsigned short)i) + 3216U)),(unsigned char)((int)val8));
    #line 1501 
    i ++;
  }
  #line 1508 
  rtl8xxxu_write32(priv,(unsigned short)2152,power_base->reg_0868 + mcs_b);
  #line 1510 
  i = 0;
  #line 1510 
  while (i <= 2) {
    #line 1511 
    if (i != 2) {
      #line 1512 
      unsigned int tmp_1;
      #line 1512 
      if (8U > (unsigned int)mcsbase[1]) 
                                         #line 1512 
                                         tmp_1 = 8U; else 
                                                          #line 1512 
                                                          tmp_1 = (unsigned int)mcsbase[1];
      #line 1512 
      val8 = (unsigned char)(tmp_1 + 248U);
    }
    else {
      #line 1514 
      unsigned int tmp_2;
      #line 1514 
      if (6U > (unsigned int)mcsbase[1]) 
                                         #line 1514 
                                         tmp_2 = 6U; else 
                                                          #line 1514 
                                                          tmp_2 = (unsigned int)mcsbase[1];
      #line 1514 
      val8 = (unsigned char)(tmp_2 + 250U);
    }
    #line 1515 
    rtl8xxxu_write8(priv,(unsigned short)((int)((unsigned int)((unsigned short)i) + 3224U)),(unsigned char)((int)val8));
    #line 1510 
    i ++;
  }
  #line 1517 
  return;
}

#line 1519  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
static void rtl8xxxu_set_linktype(struct rtl8xxxu_priv *priv, enum nl80211_iftype linktype)
{
  #line 1522 
  u8 val8;
  #line 1524 
  val8 = rtl8xxxu_read8(priv,(unsigned short)258);
  #line 1525 
  val8 = (unsigned char)((unsigned int)val8 & 252U);
  #line 1527 
  switch ((unsigned int)linktype) {
    #line 1528 
    case (unsigned int)0: 
                          #line 1528 
    ;
    #line 1529 
    val8 = val8;
    #line 1530 
    break;
    #line 1531 
    case (unsigned int)1: 
                          #line 1531 
    ;
    #line 1532 
    val8 = (unsigned char)((unsigned int)val8 | 1U);
    #line 1533 
    break;
    #line 1534 
    case (unsigned int)2: 
                          #line 1534 
    ;
    #line 1535 
    val8 = (unsigned char)((unsigned int)val8 | 2U);
    #line 1536 
    break;
    #line 1537 
    case (unsigned int)3: 
                          #line 1537 
    ;
    #line 1538 
    val8 = (unsigned char)((unsigned int)val8 | 3U);
    #line 1539 
    break;
    #line 1540 
    default: 
             #line 1540 
    ;
    #line 1541 
    goto out;
  }
  #line 1544 
  rtl8xxxu_write8(priv,(unsigned short)258,(unsigned char)((int)val8));
  #line 1545 
  out: 
       #line 1545 
  ;
  #line 1546 
  return;
}

#line 1550  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
static void rtl8xxxu_set_retry(struct rtl8xxxu_priv *priv, u16 short_retry, u16 long_retry)
{
  #line 1552 
  u16 val16;
  #line 1554 
  val16 = (unsigned short)((((int)short_retry << 8) & 16128) | ((int)long_retry & 63));
  #line 1559 
  rtl8xxxu_write16(priv,(unsigned short)1066,(unsigned short)((int)val16));
  #line 1560 
  return;
}

#line 1563  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
static void rtl8xxxu_set_spec_sifs(struct rtl8xxxu_priv *priv, u16 cck, u16 ofdm)
{
  #line 1565 
  u16 val16;
  #line 1567 
  val16 = (unsigned short)(((int)cck & 255) | ((int)ofdm << 8));
  #line 1570 
  rtl8xxxu_write16(priv,(unsigned short)1064,(unsigned short)((int)val16));
  #line 1571 
  return;
}

#line 1573  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
static void rtl8xxxu_print_chipinfo(struct rtl8xxxu_priv *priv)
{
  #line 1576 
  char *cut;
  #line 1575 
  struct device *dev = & (priv->udev)->dev;
  #line 1578 
  switch ((int)priv->chip_cut) {
    #line 1579 
    case 0: 
            #line 1579 
    ;
    #line 1580 
    cut = (char *)"A";
    #line 1581 
    break;
    #line 1582 
    case 1: 
            #line 1582 
    ;
    #line 1583 
    cut = (char *)"B";
    #line 1584 
    break;
    #line 1585 
    case 2: 
            #line 1585 
    ;
    #line 1586 
    cut = (char *)"C";
    #line 1587 
    break;
    #line 1588 
    case 3: 
            #line 1588 
    ;
    #line 1589 
    cut = (char *)"D";
    #line 1590 
    break;
    #line 1591 
    case 4: 
            #line 1591 
    ;
    #line 1592 
    cut = (char *)"E";
    #line 1593 
    break;
    #line 1594 
    default: 
             #line 1594 
    ;
    #line 1595 
    cut = (char *)"unknown";
  }
  #line 1598 
  _dev_info(dev,(char *)"RTL%s rev %s (%s) %iT%iR, TX queues %i, WiFi=%i, BT=%i, GPS=%i, HI PA=%i\n",(char *)(& priv->chip_name),cut,(char *)(& priv->chip_vendor),(int)priv->tx_paths,(int)priv->rx_paths,(int)priv->ep_tx_count,(int)priv->has_wifi,(int)priv->has_bluetooth,(int)priv->has_gps,(int)priv->hi_pa);
  #line 1604 
  _dev_info(dev,(char *)"RTL%s MAC: %pM\n",(char *)(& priv->chip_name),(u8 *)(& priv->mac_addr));
  #line 1605 
  return;
}

#line 1607  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
static int rtl8xxxu_identify_chip(struct rtl8xxxu_priv *priv)
{
  #line 1610 
  u32 val32;
  #line 1610 
  u32 bonding;
  #line 1611 
  u16 val16;
  #line 1609 
  struct device *dev = & (priv->udev)->dev;
  #line 1613 
  val32 = rtl8xxxu_read32(priv,(unsigned short)240);
  #line 1614 
  priv->chip_cut = (unsigned int)(val32 >> 12);
  #line 1616 
  if (((unsigned long)val32 & 8388608UL) != 0UL) {
    #line 1617 
    _dev_info(dev,(char *)"Unsupported test chip\n");
    #line 1618 
    return -524;
  }
  #line 1621 
  if (((unsigned long)val32 & 65536UL) != 0UL) {
    #line 1622 
    if ((unsigned int)priv->chip_cut > 2U) {
      #line 1623 
      sprintf((char *)(& priv->chip_name),(char *)"8723BU");
      #line 1624 
      priv->rtl_chip = RTL8723B;
    }
    else {
      #line 1626 
      sprintf((char *)(& priv->chip_name),(char *)"8723AU");
      #line 1627 
      priv->usb_interrupts = (unsigned int)1U;
      #line 1628 
      priv->rtl_chip = RTL8723A;
    }
    #line 1631 
    priv->rf_paths = (unsigned char)1U;
    #line 1632 
    priv->rx_paths = (unsigned char)1U;
    #line 1633 
    priv->tx_paths = (unsigned char)1U;
    #line 1635 
    val32 = rtl8xxxu_read32(priv,(unsigned short)104);
    #line 1636 
    if (((unsigned long)val32 & 4UL) != 0UL) 
                                             #line 1637 
                                             priv->has_wifi = (unsigned int)1U;
    #line 1638 
    if (((unsigned long)val32 & 262144UL) != 0UL) 
                                                  #line 1639 
                                                  priv->has_bluetooth = (unsigned int)1U;
    #line 1640 
    if (((unsigned long)val32 & 4194304UL) != 0UL) 
                                                   #line 1641 
                                                   priv->has_gps = (unsigned int)1U;
    #line 1642 
    priv->is_multi_func = (unsigned int)1U;
  }
  else 
    #line 1643 
    if (((unsigned long)val32 & 134217728UL) != 0UL) {
      #line 1644 
      bonding = rtl8xxxu_read32(priv,(unsigned short)236);
      #line 1645 
      bonding &= 12582912U;
      #line 1646 
      if ((int)(priv->fops)->tx_desc_size == 40) 
        #line 1648 
        if (bonding == 4194304U) {
          #line 1649 
          sprintf((char *)(& priv->chip_name),(char *)"8191EU");
          #line 1650 
          priv->rf_paths = (unsigned char)2U;
          #line 1651 
          priv->rx_paths = (unsigned char)2U;
          #line 1652 
          priv->tx_paths = (unsigned char)1U;
          #line 1653 
          priv->rtl_chip = RTL8191E;
        }
        else {
          #line 1655 
          sprintf((char *)(& priv->chip_name),(char *)"8192EU");
          #line 1656 
          priv->rf_paths = (unsigned char)2U;
          #line 1657 
          priv->rx_paths = (unsigned char)2U;
          #line 1658 
          priv->tx_paths = (unsigned char)2U;
          #line 1659 
          priv->rtl_chip = RTL8192E;
        }
      else 
        #line 1661 
        if (bonding == 4194304U) {
          #line 1662 
          sprintf((char *)(& priv->chip_name),(char *)"8191CU");
          #line 1663 
          priv->rf_paths = (unsigned char)2U;
          #line 1664 
          priv->rx_paths = (unsigned char)2U;
          #line 1665 
          priv->tx_paths = (unsigned char)1U;
          #line 1666 
          priv->usb_interrupts = (unsigned int)1U;
          #line 1667 
          priv->rtl_chip = RTL8191C;
        }
        else {
          #line 1669 
          sprintf((char *)(& priv->chip_name),(char *)"8192CU");
          #line 1670 
          priv->rf_paths = (unsigned char)2U;
          #line 1671 
          priv->rx_paths = (unsigned char)2U;
          #line 1672 
          priv->tx_paths = (unsigned char)2U;
          #line 1673 
          priv->usb_interrupts = (unsigned int)1U;
          #line 1674 
          priv->rtl_chip = RTL8192C;
        }
      #line 1676 
      priv->has_wifi = (unsigned int)1U;
    }
    else {
      #line 1678 
      sprintf((char *)(& priv->chip_name),(char *)"8188CU");
      #line 1679 
      priv->rf_paths = (unsigned char)1U;
      #line 1680 
      priv->rx_paths = (unsigned char)1U;
      #line 1681 
      priv->tx_paths = (unsigned char)1U;
      #line 1682 
      priv->rtl_chip = RTL8188C;
      #line 1683 
      priv->usb_interrupts = (unsigned int)1U;
      #line 1684 
      priv->has_wifi = (unsigned int)1U;
    }
  #line 1687 
  switch ((unsigned int)priv->rtl_chip) {
    #line 1688 
    case (unsigned int)530574: 
                               #line 1688 
    ;
    #line 1689 
    case (unsigned int)530734: 
                               #line 1689 
    ;
    #line 1690 
    case (unsigned int)553531: 
                               #line 1690 
    ;
    #line 1691 
    switch ((unsigned long)val32 & 786432UL) {
      #line 1692 
      case (unsigned long)0: 
                             #line 1692 
      ;
      #line 1693 
      sprintf((char *)(& priv->chip_vendor),(char *)"TSMC");
      #line 1694 
      break;
      #line 1695 
      case (unsigned long)262144: 
                                  #line 1695 
      ;
      #line 1696 
      sprintf((char *)(& priv->chip_vendor),(char *)"SMIC");
      #line 1697 
      priv->vendor_smic = (unsigned int)1U;
      #line 1698 
      break;
      #line 1699 
      case (unsigned long)524288: 
                                  #line 1699 
      ;
      #line 1700 
      sprintf((char *)(& priv->chip_vendor),(char *)"UMC");
      #line 1701 
      priv->vendor_umc = (unsigned int)1U;
      #line 1702 
      break;
      #line 1703 
      default: 
               #line 1703 
      ;
      #line 1704 
      sprintf((char *)(& priv->chip_vendor),(char *)"unknown");
    }
    #line 1706 
    break;
    #line 1707 
    default: 
             #line 1707 
    ;
    #line 1708 
    if (((unsigned long)val32 & 524288UL) != 0UL) {
      #line 1709 
      sprintf((char *)(& priv->chip_vendor),(char *)"UMC");
      #line 1710 
      priv->vendor_umc = (unsigned int)1U;
    }
    else 
         #line 1712 
         sprintf((char *)(& priv->chip_vendor),(char *)"TSMC");
  }
  #line 1716 
  val32 = rtl8xxxu_read32(priv,(unsigned short)244);
  #line 1717 
  priv->rom_rev = (unsigned int)(val32 >> 28);
  #line 1719 
  val16 = rtl8xxxu_read16(priv,(unsigned short)65126);
  #line 1720 
  if (((int)val16 & 15) != 0) {
    #line 1721 
    priv->ep_tx_high_queue = (unsigned int)1U;
    #line 1722 
    priv->ep_tx_count = (u8)((int)priv->ep_tx_count + 1);
  }
  #line 1725 
  if (((int)val16 & 240) != 0) {
    #line 1726 
    priv->ep_tx_normal_queue = (unsigned int)1U;
    #line 1727 
    priv->ep_tx_count = (u8)((int)priv->ep_tx_count + 1);
  }
  #line 1730 
  if (((int)val16 & 3840) != 0) {
    #line 1731 
    priv->ep_tx_low_queue = (unsigned int)1U;
    #line 1732 
    priv->ep_tx_count = (u8)((int)priv->ep_tx_count + 1);
  }
  #line 1738 
  if ((unsigned int)priv->ep_tx_count == 0U) 
    #line 1739 
    switch (priv->nr_out_eps) {
      #line 1740 
      case 4: 
              #line 1740 
      ;
      #line 1741 
      case 3: 
              #line 1741 
      ;
      #line 1742 
      priv->ep_tx_low_queue = (unsigned int)1U;
      #line 1743 
      priv->ep_tx_count = (u8)((int)priv->ep_tx_count + 1);
      #line 1745 
      case 2: 
              #line 1745 
      ;
      #line 1746 
      priv->ep_tx_normal_queue = (unsigned int)1U;
      #line 1747 
      priv->ep_tx_count = (u8)((int)priv->ep_tx_count + 1);
      #line 1749 
      case 1: 
              #line 1749 
      ;
      #line 1750 
      priv->ep_tx_high_queue = (unsigned int)1U;
      #line 1751 
      priv->ep_tx_count = (u8)((int)priv->ep_tx_count + 1);
      #line 1752 
      break;
      #line 1753 
      default: 
               #line 1753 
      ;
      #line 1754 
      _dev_info(dev,(char *)"Unsupported USB TX end-points\n");
      #line 1755 
      return -524;
    }
  #line 1759 
  return 0;
}

#line 1763  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
static int rtl8xxxu_read_efuse8(struct rtl8xxxu_priv *priv, u16 offset, u8 *data)
{
  #line 1765 
  int i;
  #line 1766 
  u8 val8;
  #line 1767 
  u32 val32;
  #line 1770 
  rtl8xxxu_write8(priv,(unsigned short)49,(unsigned char)((int)((unsigned char)offset)));
  #line 1771 
  val8 = rtl8xxxu_read8(priv,(unsigned short)50);
  #line 1772 
  val8 = (unsigned char)((unsigned int)val8 & 252U);
  #line 1773 
  val8 = (unsigned char)((((int)offset >> 8) & 3) | (int)val8);
  #line 1774 
  rtl8xxxu_write8(priv,(unsigned short)50,(unsigned char)((int)val8));
  #line 1776 
  val8 = rtl8xxxu_read8(priv,(unsigned short)51);
  #line 1777 
  rtl8xxxu_write8(priv,(unsigned short)51,(unsigned char)((int)val8 & 127));
  #line 1780 
  val32 = rtl8xxxu_read32(priv,(unsigned short)48);
  #line 1781 
  i = 0;
  #line 1781 
  while (i <= 499) {
    #line 1782 
    val32 = rtl8xxxu_read32(priv,(unsigned short)48);
    #line 1783 
    if (((unsigned long)val32 & 2147483648UL) != 0UL) 
                                                      #line 1784 
                                                      break;
    #line 1781 
    i ++;
  }
  #line 1787 
  if (i == 500) 
                #line 1788 
                return -5;
  #line 1790 
  __const_udelay(214750UL);
  #line 1791 
  val32 = rtl8xxxu_read32(priv,(unsigned short)48);
  #line 1793 
  *data = (unsigned char)val32;
  #line 1794 
  return 0;
}

#line 1797  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
static int rtl8xxxu_read_efuse(struct rtl8xxxu_priv *priv)
{
  #line 1800 
  int i;
  #line 1801 
  u8 val8;
  #line 1801 
  u8 word_mask;
  #line 1801 
  u8 header;
  #line 1801 
  u8 extheader;
  #line 1802 
  u16 val16;
  #line 1802 
  u16 efuse_addr;
  #line 1802 
  u16 offset;
  #line 1803 
  u32 val32;
  #line 1799 
  struct device *dev = & (priv->udev)->dev;
  #line 1800 
  int ret = 0;
  #line 1805 
  val16 = rtl8xxxu_read16(priv,(unsigned short)10);
  #line 1806 
  if (((unsigned long)val16 & 32UL) != 0UL) 
                                            #line 1807 
                                            priv->has_eeprom = (unsigned int)1U;
  #line 1808 
  if (((unsigned long)val16 & 16UL) != 0UL) 
                                            #line 1809 
                                            priv->boot_eeprom = (unsigned int)1U;
  #line 1811 
  if ((unsigned int)priv->is_multi_func != 0U) {
    #line 1812 
    val32 = rtl8xxxu_read32(priv,(unsigned short)52);
    #line 1813 
    val32 &= 4294966527U;
    #line 1814 
    rtl8xxxu_write32(priv,(unsigned short)52,val32);
  }
  {
    #line 1817 
    bool branch;
    #line 1817 
    struct _ddebug __UNIQUE_ID_ddebug582 = {.modname = (char *)"rtl8xxxu", .function = (char *)"rtl8xxxu_read_efuse", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c", .format = (char *)"Booting from %s\n", .lineno = (unsigned int)1817U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
    #line 1817 
    branch = arch_static_branch(& __UNIQUE_ID_ddebug582.key.dd_key_false.key,(_Bool)0);
    #line 1817 
    if ((long)((long)((int)branch != 0)) != 0L) {
      #line 1817 
      char *tmp;
      #line 1817 
      if ((unsigned int)priv->boot_eeprom != 0U) 
                                                 #line 1817 
                                                 tmp = (char *)"EEPROM"; else 
                                                                    #line 1817 
                                                                    tmp = (char *)"EFUSE";
      #line 1817 
      ;
      #line 1817 
      __dynamic_dev_dbg(& __UNIQUE_ID_ddebug582,dev,(char *)"Booting from %s\n",tmp);
    }
  }
  #line 1820 
  rtl8xxxu_write8(priv,(unsigned short)207,(unsigned char)105);
  #line 1823 
  val16 = rtl8xxxu_read16(priv,(unsigned short)0);
  #line 1824 
  if (((unsigned long)val16 & 32768UL) == 0UL) {
    #line 1825 
    val16 = (unsigned short)((unsigned int)val16 | 32768U);
    #line 1826 
    rtl8xxxu_write16(priv,(unsigned short)0,(unsigned short)((int)val16));
  }
  #line 1829 
  val16 = rtl8xxxu_read16(priv,(unsigned short)2);
  #line 1830 
  if (((unsigned long)val16 & 4096UL) == 0UL) {
    #line 1831 
    val16 = (unsigned short)((unsigned int)val16 | 4096U);
    #line 1832 
    rtl8xxxu_write16(priv,(unsigned short)2,(unsigned short)((int)val16));
  }
  #line 1838 
  val16 = rtl8xxxu_read16(priv,(unsigned short)8);
  #line 1839 
  if (((unsigned long)val16 & 32UL) == 0UL || ((unsigned long)val16 & 2UL) == 0UL) {
    #line 1840 
    val16 = (unsigned short)((unsigned int)val16 | 34U);
    #line 1841 
    rtl8xxxu_write16(priv,(unsigned short)8,(unsigned short)((int)val16));
  }
  #line 1845 
  memset((void *)(& priv->efuse_wifi.raw),255,512UL);
  #line 1847 
  efuse_addr = (unsigned short)0U;
  #line 1848 
  while ((unsigned int)efuse_addr <= 511U) {
    #line 1849 
    u16 map_addr;
    #line 1851 
    u16 tmp_1;
    #line 1851 
    tmp_1 = efuse_addr;
    #line 1851 
    efuse_addr = (u16)((int)efuse_addr + 1);
    #line 1851 
    ;
    #line 1851 
    ;
    #line 1851 
    ret = rtl8xxxu_read_efuse8(priv,(unsigned short)((int)tmp_1),& header);
    #line 1852 
    if (ret != 0 || (unsigned int)header == 255U) 
                                                  #line 1853 
                                                  goto exit;
    #line 1855 
    if (((int)header & 31) == 15) {
      #line 1858 
      u16 tmp_2;
      #line 1856 
      offset = (unsigned short)((int)header >> 5);
      #line 1858 
      tmp_2 = efuse_addr;
      #line 1858 
      efuse_addr = (u16)((int)efuse_addr + 1);
      #line 1858 
      ;
      #line 1858 
      ;
      #line 1858 
      ret = rtl8xxxu_read_efuse8(priv,(unsigned short)((int)tmp_2),& extheader);
      #line 1860 
      if (ret != 0) 
                    #line 1861 
                    goto exit;
      #line 1863 
      if (((int)extheader & 15) == 15) 
                                       #line 1864 
                                       continue;
      #line 1866 
      offset = (unsigned short)((((int)extheader >> 1) & 120) | (int)offset);
      #line 1867 
      word_mask = (unsigned char)((unsigned int)extheader & 15U);
    }
    else {
      #line 1869 
      offset = (unsigned short)((unsigned int)((unsigned short)((int)header >> 4)) & 15U);
      #line 1870 
      word_mask = (unsigned char)((unsigned int)header & 15U);
    }
    #line 1876 
    map_addr = (unsigned short)((unsigned int)offset * 8U);
    #line 1877 
    if ((unsigned int)map_addr > 511U) {
      #line 1878 
      _dev_warn(dev,(char *)"%s: Illegal map_addr (%04x), ",(char *)"rtl8xxxu_read_efuse",(int)map_addr);
      #line 1881 
      ret = -22;
      #line 1882 
      goto exit;
    }
    #line 1884 
    i = 0;
    #line 1884 
    while (i <= 3) {
      {
        #line 1891 
        u16 tmp_3;
        #line 1894 
        u16 tmp_4;
        #line 1896 
        u16 tmp_5;
        #line 1899 
        u16 tmp_6;
        #line 1886 
        if ((((unsigned long)word_mask >> i) & 1UL) != 0UL) {
          #line 1887 
          map_addr = (unsigned short)((unsigned int)map_addr + 2U);
          #line 1888 
          goto __Cont;
        }
        #line 1891 
        tmp_3 = efuse_addr;
        #line 1891 
        efuse_addr = (u16)((int)efuse_addr + 1);
        #line 1891 
        ;
        #line 1891 
        ;
        #line 1891 
        ret = rtl8xxxu_read_efuse8(priv,(unsigned short)((int)tmp_3),& val8);
        #line 1892 
        if (ret != 0) 
                      #line 1893 
                      goto exit;
        #line 1894 
        tmp_4 = map_addr;
        #line 1894 
        map_addr = (u16)((int)map_addr + 1);
        #line 1894 
        priv->efuse_wifi.raw[(int)tmp_4] = val8;
        #line 1896 
        tmp_5 = efuse_addr;
        #line 1896 
        efuse_addr = (u16)((int)efuse_addr + 1);
        #line 1896 
        ;
        #line 1896 
        ;
        #line 1896 
        ret = rtl8xxxu_read_efuse8(priv,(unsigned short)((int)tmp_5),& val8);
        #line 1897 
        if (ret != 0) 
                      #line 1898 
                      goto exit;
        #line 1899 
        tmp_6 = map_addr;
        #line 1899 
        map_addr = (u16)((int)map_addr + 1);
        #line 1899 
        priv->efuse_wifi.raw[(int)tmp_6] = val8;
      }
      #line 1884 
      __Cont: 
              #line 1884 
      i ++;
    }
  }
  #line 1903 
  exit: 
        #line 1903 
  ;
  #line 1904 
  rtl8xxxu_write8(priv,(unsigned short)207,(unsigned char)0);
  #line 1906 
  return ret;
}

#line 1909  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
void rtl8xxxu_reset_8051(struct rtl8xxxu_priv *priv)
{
  #line 1911 
  u8 val8;
  #line 1912 
  u16 sys_func;
  #line 1914 
  val8 = rtl8xxxu_read8(priv,(unsigned short)29);
  #line 1915 
  val8 = (unsigned char)((unsigned int)val8 & 254U);
  #line 1916 
  rtl8xxxu_write8(priv,(unsigned short)29,(unsigned char)((int)val8));
  #line 1918 
  sys_func = rtl8xxxu_read16(priv,(unsigned short)2);
  #line 1919 
  sys_func = (unsigned short)((unsigned int)sys_func & 64511U);
  #line 1920 
  rtl8xxxu_write16(priv,(unsigned short)2,(unsigned short)((int)sys_func));
  #line 1922 
  val8 = rtl8xxxu_read8(priv,(unsigned short)29);
  #line 1923 
  val8 = (unsigned char)((unsigned int)val8 | 1U);
  #line 1924 
  rtl8xxxu_write8(priv,(unsigned short)29,(unsigned char)((int)val8));
  #line 1926 
  sys_func = (unsigned short)((unsigned int)sys_func | 1024U);
  #line 1927 
  rtl8xxxu_write16(priv,(unsigned short)2,(unsigned short)((int)sys_func));
  #line 1928 
  return;
}

#line 1930  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
static int rtl8xxxu_start_firmware(struct rtl8xxxu_priv *priv)
{
  #line 1933 
  int i;
  #line 1934 
  u32 val32;
  #line 1932 
  struct device *dev = & (priv->udev)->dev;
  #line 1933 
  int ret = 0;
  #line 1937 
  i = 0;
  #line 1937 
  while (i <= 999) {
    #line 1938 
    val32 = rtl8xxxu_read32(priv,(unsigned short)128);
    #line 1939 
    if (((unsigned long)val32 & 4UL) != 0UL) 
                                             #line 1940 
                                             break;
    #line 1937 
    i ++;
  }
  #line 1943 
  if (i == 1000) {
    #line 1944 
    _dev_warn(dev,(char *)"Firmware checksum poll timed out\n");
    #line 1945 
    ret = -11;
    #line 1946 
    goto exit;
  }
  #line 1949 
  val32 = rtl8xxxu_read32(priv,(unsigned short)128);
  #line 1950 
  val32 |= 2U;
  #line 1951 
  val32 &= 4294967231U;
  #line 1952 
  rtl8xxxu_write32(priv,(unsigned short)128,val32);
  #line 1958 
  (*((priv->fops)->reset_8051))(priv);
  #line 1961 
  i = 0;
  #line 1961 
  while (i <= 999) {
    #line 1962 
    val32 = rtl8xxxu_read32(priv,(unsigned short)128);
    #line 1963 
    if (((unsigned long)val32 & 64UL) != 0UL) 
                                              #line 1964 
                                              break;
    #line 1966 
    __const_udelay(429500UL);
    #line 1961 
    i ++;
  }
  #line 1969 
  if (i == 1000) {
    #line 1970 
    _dev_warn(dev,(char *)"Firmware failed to start\n");
    #line 1971 
    ret = -11;
    #line 1972 
    goto exit;
  }
  #line 1978 
  if (priv->rtl_chip == (unsigned int)RTL8723B) 
                                                #line 1979 
                                                rtl8xxxu_write8(priv,(unsigned short)460,(unsigned char)15);
  #line 1980 
  exit: 
        #line 1980 
  ;
  #line 1981 
  return ret;
}

#line 1984  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
static int rtl8xxxu_download_firmware(struct rtl8xxxu_priv *priv)
{
  #line 1986 
  int pages;
  #line 1986 
  int remainder;
  #line 1986 
  int i;
  #line 1986 
  int ret;
  #line 1987 
  u8 val8;
  #line 1988 
  u16 val16;
  #line 1989 
  u32 val32;
  #line 1990 
  u8 *fwptr;
  #line 1992 
  val8 = rtl8xxxu_read8(priv,(unsigned short)3);
  #line 1993 
  val8 = (unsigned char)((unsigned int)val8 | 4U);
  #line 1994 
  rtl8xxxu_write8(priv,(unsigned short)3,(unsigned char)((int)val8));
  #line 1997 
  val16 = rtl8xxxu_read16(priv,(unsigned short)2);
  #line 1998 
  val16 = (unsigned short)((unsigned int)val16 | 1024U);
  #line 1999 
  rtl8xxxu_write16(priv,(unsigned short)2,(unsigned short)((int)val16));
  #line 2001 
  val8 = rtl8xxxu_read8(priv,(unsigned short)128);
  #line 2002 
  if (((unsigned long)val8 & 128UL) != 0UL) {
    #line 2003 
    printk((char *)"\001");
    #line 2004 
    rtl8xxxu_write8(priv,(unsigned short)128,(unsigned char)0);
    #line 2005 
    (*((priv->fops)->reset_8051))(priv);
  }
  #line 2009 
  val8 = rtl8xxxu_read8(priv,(unsigned short)128);
  #line 2010 
  val8 = (unsigned char)((unsigned int)val8 | 1U);
  #line 2011 
  rtl8xxxu_write8(priv,(unsigned short)128,(unsigned char)((int)val8));
  #line 2014 
  val32 = rtl8xxxu_read32(priv,(unsigned short)128);
  #line 2015 
  val32 &= 4294443007U;
  #line 2016 
  rtl8xxxu_write32(priv,(unsigned short)128,val32);
  #line 2019 
  val8 = rtl8xxxu_read8(priv,(unsigned short)128);
  #line 2020 
  val8 = (unsigned char)((unsigned int)val8 | 4U);
  #line 2021 
  rtl8xxxu_write8(priv,(unsigned short)128,(unsigned char)((int)val8));
  #line 2023 
  pages = (int)(priv->fw_size / 4096UL);
  #line 2024 
  remainder = (int)priv->fw_size & 4095;
  #line 2026 
  fwptr = (u8 *)(& (priv->fw_data)->data);
  #line 2028 
  i = 0;
  #line 2028 
  while (i < pages) {
    {
      #line 2029 
      val8 = (unsigned char)((unsigned int)rtl8xxxu_read8(priv,(unsigned short)130) & 248U);
      #line 2030 
      val8 = (unsigned char)(i | (int)val8);
      #line 2031 
      rtl8xxxu_write8(priv,(unsigned short)130,(unsigned char)((int)val8));
      #line 2033 
      ret = rtl8xxxu_writeN(priv,(unsigned short)4096,fwptr,(unsigned short)4096);
      #line 2035 
      if (ret != 4096) {
        #line 2036 
        ret = -11;
        #line 2037 
        goto fw_abort;
      }
      #line 2040 
      fwptr += 4096U;
    }
    #line 2028 
    i ++;
  }
  #line 2043 
  if (remainder != 0) {
    #line 2044 
    val8 = (unsigned char)((unsigned int)rtl8xxxu_read8(priv,(unsigned short)130) & 248U);
    #line 2045 
    val8 = (unsigned char)(i | (int)val8);
    #line 2046 
    rtl8xxxu_write8(priv,(unsigned short)130,(unsigned char)((int)val8));
    #line 2047 
    ret = rtl8xxxu_writeN(priv,(unsigned short)4096,fwptr,(unsigned short)((int)((unsigned short)remainder)));
    #line 2049 
    if (ret != remainder) {
      #line 2050 
      ret = -11;
      #line 2051 
      goto fw_abort;
    }
  }
  #line 2055 
  ret = 0;
  #line 2056 
  fw_abort: 
            #line 2056 
  ;
  #line 2058 
  val16 = rtl8xxxu_read16(priv,(unsigned short)128);
  #line 2059 
  val16 = (unsigned short)((unsigned int)val16 & 65534U);
  #line 2060 
  rtl8xxxu_write16(priv,(unsigned short)128,(unsigned short)((int)val16));
  #line 2062 
  return ret;
}

#line 2065  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
int rtl8xxxu_load_firmware(struct rtl8xxxu_priv *priv, char *fw_name)
{
  #line 2068 
  struct firmware *fw;
  #line 2070 
  u16 signature;
  #line 2067 
  struct device *dev = & (priv->udev)->dev;
  #line 2069 
  int ret = 0;
  #line 2072 
  _dev_info(dev,(char *)"%s: Loading firmware %s\n",(char *)"rtl8xxxu",fw_name);
  #line 2073 
  if (cif_request_firmware(& fw,fw_name,& (priv->udev)->dev) != 0) {
    #line 2074 
    _dev_warn(dev,(char *)"request_firmware(%s) failed\n",fw_name);
    #line 2075 
    ret = -11;
    #line 2076 
    goto exit;
  }
  #line 2078 
  if (fw == (struct firmware *)0) {
    #line 2079 
    _dev_warn(dev,(char *)"Firmware data not available\n");
    #line 2080 
    ret = -22;
    #line 2081 
    goto exit;
  }
  #line 2084 
  priv->fw_data = (struct rtl8xxxu_firmware_header *)cif_kmemdup((void *)fw->data,fw->size,3264U);
  #line 2085 
  if (priv->fw_data == (struct rtl8xxxu_firmware_header *)0) {
    #line 2086 
    ret = -12;
    #line 2087 
    goto exit;
  }
  #line 2089 
  priv->fw_size = fw->size + 18446744073709551584UL;
  #line 2091 
  signature = (priv->fw_data)->signature;
  #line 2092 
  switch ((int)signature & 65520) {
    #line 2093 
    case 37600: 
                #line 2093 
    ;
    #line 2094 
    case 37568: 
                #line 2094 
    ;
    #line 2095 
    case 35008: 
                #line 2095 
    ;
    #line 2096 
    case 21248: 
                #line 2096 
    ;
    #line 2097 
    case 8960: 
               #line 2097 
    ;
    #line 2098 
    break;
    #line 2099 
    default: 
             #line 2099 
    ;
    #line 2100 
    ret = -22;
    #line 2101 
    _dev_warn(dev,(char *)"%s: Invalid firmware signature: 0x%04x\n",(char *)"rtl8xxxu_load_firmware",(int)signature);
  }
  #line 2105 
  _dev_info(dev,(char *)"Firmware revision %i.%i (signature 0x%04x)\n",(int)(priv->fw_data)->major_version,(int)(priv->fw_data)->minor_version,(int)signature);
  #line 2109 
  exit: 
        #line 2109 
  ;
  #line 2110 
  cif_release_firmware(fw);
  #line 2111 
  return ret;
}

#line 2114  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
void rtl8xxxu_firmware_self_reset(struct rtl8xxxu_priv *priv)
{
  #line 2116 
  u16 val16;
  #line 2117 
  int i = 100;
  #line 2120 
  rtl8xxxu_write8(priv,(unsigned short)463,(unsigned char)32);
  #line 2122 
  i = 100;
  #line 2122 
  while (i > 0) {
    #line 2123 
    val16 = rtl8xxxu_read16(priv,(unsigned short)2);
    #line 2125 
    if (((unsigned long)val16 & 1024UL) == 0UL) {
      {
        #line 2126 
        bool branch;
        #line 2126 
        struct _ddebug __UNIQUE_ID_ddebug583 = {.modname = (char *)"rtl8xxxu", .function = (char *)"rtl8xxxu_firmware_self_reset", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c", .format = (char *)"%s: Firmware self reset success!\n", .lineno = (unsigned int)2126U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
        #line 2126 
        branch = arch_static_branch(& __UNIQUE_ID_ddebug583.key.dd_key_false.key,(_Bool)0);
        #line 2126 
        if ((long)((long)((int)branch != 0)) != 0L) 
                                                    #line 2126 
                                                    __dynamic_dev_dbg(& __UNIQUE_ID_ddebug583,& (priv->udev)->dev,(char *)"%s: Firmware self reset success!\n",(char *)"rtl8xxxu_firmware_self_reset");
      }
      #line 2128 
      break;
    }
    #line 2130 
    __const_udelay(214750UL);
    #line 2122 
    i --;
  }
  #line 2133 
  if (i == 0) {
    #line 2135 
    val16 = rtl8xxxu_read16(priv,(unsigned short)2);
    #line 2136 
    val16 = (unsigned short)((unsigned int)val16 & 64511U);
    #line 2137 
    rtl8xxxu_write16(priv,(unsigned short)2,(unsigned short)((int)val16));
  }
  #line 2139 
  return;
}

#line 2142  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
static int rtl8xxxu_init_mac(struct rtl8xxxu_priv *priv)
{
  #line 2145 
  int i;
  #line 2145 
  int ret;
  #line 2146 
  u16 reg;
  #line 2147 
  u8 val;
  #line 2144 
  struct rtl8xxxu_reg8val *array = (priv->fops)->mactable;
  #line 2149 
  i = 0;
  #line 2149 
  while (1) {
    #line 2150 
    reg = (array + (unsigned long)i)->reg;
    #line 2151 
    val = (array + (unsigned long)i)->val;
    #line 2153 
    if ((unsigned int)reg == 65535U && (unsigned int)val == 255U) 
                                                                  #line 2154 
                                                                  break;
    #line 2156 
    ret = rtl8xxxu_write8(priv,(unsigned short)((int)reg),(unsigned char)((int)val));
    #line 2157 
    if (ret != 1) {
      #line 2158 
      _dev_warn(& (priv->udev)->dev,(char *)"Failed to initialize MAC ",(int)reg,(int)val);
      #line 2161 
      return -11;
    }
    #line 2149 
    i ++;
  }
  #line 2165 
  if (priv->rtl_chip != (unsigned int)RTL8723B && priv->rtl_chip != (unsigned int)RTL8192E) 
    #line 2166 
    rtl8xxxu_write8(priv,(unsigned short)1226,(unsigned char)10);
  #line 2168 
  return 0;
}

#line 2171  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
int rtl8xxxu_init_phy_regs(struct rtl8xxxu_priv *priv, struct rtl8xxxu_reg32val *array)
{
  #line 2174 
  int i;
  #line 2174 
  int ret;
  #line 2175 
  u16 reg;
  #line 2176 
  u32 val;
  #line 2178 
  i = 0;
  #line 2178 
  while (1) {
    #line 2179 
    reg = (array + (unsigned long)i)->reg;
    #line 2180 
    val = (array + (unsigned long)i)->val;
    #line 2182 
    if ((unsigned int)reg == 65535U && val == 4294967295U) 
                                                           #line 2183 
                                                           break;
    #line 2185 
    ret = rtl8xxxu_write32(priv,(unsigned short)((int)reg),val);
    #line 2186 
    if (ret != 4) {
      #line 2187 
      _dev_warn(& (priv->udev)->dev,(char *)"Failed to initialize PHY\n");
      #line 2189 
      return -11;
    }
    #line 2191 
    __const_udelay(4295UL);
    #line 2178 
    i ++;
  }
  #line 2194 
  return 0;
}

#line 2197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
void rtl8xxxu_gen1_init_phy_bb(struct rtl8xxxu_priv *priv)
{
  #line 2199 
  u8 val8;
  #line 2199 
  u8 ldoa15;
  #line 2199 
  u8 ldov12d;
  #line 2199 
  u8 lpldo;
  #line 2199 
  u8 ldohci12;
  #line 2200 
  u16 val16;
  #line 2201 
  u32 val32;
  #line 2203 
  val8 = rtl8xxxu_read8(priv,(unsigned short)40);
  #line 2204 
  __const_udelay(8590UL);
  #line 2205 
  val8 = (unsigned char)((unsigned int)val8 | 2U);
  #line 2206 
  rtl8xxxu_write8(priv,(unsigned short)40,(unsigned char)((int)val8));
  #line 2207 
  __const_udelay(8590UL);
  #line 2209 
  rtl8xxxu_write8(priv,(unsigned short)41,(unsigned char)255);
  #line 2210 
  __const_udelay(8590UL);
  #line 2212 
  val16 = rtl8xxxu_read16(priv,(unsigned short)2);
  #line 2213 
  val16 = (unsigned short)((unsigned int)val16 | 3U);
  #line 2214 
  rtl8xxxu_write16(priv,(unsigned short)2,(unsigned short)((int)val16));
  #line 2216 
  val32 = rtl8xxxu_read32(priv,(unsigned short)36);
  #line 2217 
  val32 &= 4294950911U;
  #line 2218 
  if ((unsigned int)priv->has_bluetooth != 0U) 
                                               #line 2219 
                                               val32 &= 4293918719U;
  #line 2220 
  rtl8xxxu_write32(priv,(unsigned short)36,val32);
  #line 2223 
  val8 = (unsigned char)7U;
  #line 2224 
  rtl8xxxu_write8(priv,(unsigned short)31,(unsigned char)((int)val8));
  #line 2226 
  if ((unsigned int)priv->hi_pa != 0U) 
                                       #line 2227 
                                       rtl8xxxu_init_phy_regs(priv,(struct rtl8xxxu_reg32val *)(& rtl8188ru_phy_1t_highpa_table));
  else 
    #line 2228 
    if ((unsigned int)priv->tx_paths == 2U) 
                                            #line 2229 
                                            rtl8xxxu_init_phy_regs(priv,(struct rtl8xxxu_reg32val *)(& rtl8192cu_phy_2t_init_table)); else 
                                                                    #line 2231 
                                                                    rtl8xxxu_init_phy_regs(priv,(struct rtl8xxxu_reg32val *)(& rtl8723a_phy_1t_init_table));
  #line 2233 
  if (((priv->rtl_chip == (unsigned int)RTL8188R && (unsigned int)priv->hi_pa != 0U) && (unsigned int)priv->vendor_umc != 0U) && (unsigned int)priv->chip_cut == 1U) 
    #line 2235 
    rtl8xxxu_write8(priv,(unsigned short)3186,(unsigned char)80);
  #line 2237 
  if ((unsigned int)priv->hi_pa != 0U) 
                                       #line 2238 
                                       rtl8xxxu_init_phy_regs(priv,(struct rtl8xxxu_reg32val *)(& rtl8xxx_agc_highpa_table)); else 
                                                                    #line 2240 
                                                                    rtl8xxxu_init_phy_regs(priv,(struct rtl8xxxu_reg32val *)(& rtl8xxx_agc_standard_table));
  #line 2242 
  ldoa15 = (unsigned char)5U;
  #line 2243 
  ldov12d = (unsigned char)37U;
  #line 2244 
  ldohci12 = (unsigned char)87U;
  #line 2245 
  lpldo = (unsigned char)1U;
  #line 2246 
  val32 = (unsigned int)(((((int)lpldo << 24) | ((int)ldohci12 << 16)) | ((int)ldov12d << 8)) | (int)ldoa15);
  #line 2247 
  rtl8xxxu_write32(priv,(unsigned short)32,val32);
  #line 2248 
  return;
}

#line 2253  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
static int rtl8xxxu_init_phy_bb(struct rtl8xxxu_priv *priv)
{
  #line 2255 
  u8 val8;
  #line 2256 
  u32 val32;
  #line 2258 
  (*((priv->fops)->init_phy_bb))(priv);
  #line 2260 
  if ((unsigned int)priv->tx_paths == 1U && (unsigned int)priv->rx_paths == 2U) {
    #line 2266 
    val32 = rtl8xxxu_read32(priv,(unsigned short)2052);
    #line 2267 
    val32 &= 4294967292U;
    #line 2268 
    val32 |= 2U;
    #line 2269 
    rtl8xxxu_write32(priv,(unsigned short)2052,val32);
    #line 2271 
    val32 = rtl8xxxu_read32(priv,(unsigned short)2316);
    #line 2272 
    val32 &= 4291821516U;
    #line 2273 
    val32 |= 2097186U;
    #line 2274 
    rtl8xxxu_write32(priv,(unsigned short)2316,val32);
    #line 2276 
    val32 = rtl8xxxu_read32(priv,(unsigned short)2564);
    #line 2277 
    val32 &= 4043309055U;
    #line 2278 
    val32 &= 16777215U;
    #line 2279 
    val32 |= 1073741824U;
    #line 2280 
    val32 |= 83886080U;
    #line 2281 
    rtl8xxxu_write32(priv,(unsigned short)2564,val32);
    #line 2283 
    val32 = rtl8xxxu_read32(priv,(unsigned short)3076);
    #line 2284 
    val32 &= 4294967040U;
    #line 2285 
    val32 |= 35U;
    #line 2287 
    rtl8xxxu_write32(priv,(unsigned short)3076,val32);
    #line 2289 
    val32 = rtl8xxxu_read32(priv,(unsigned short)3184);
    #line 2290 
    val32 &= 4294967247U;
    #line 2291 
    val32 |= 16U;
    #line 2292 
    rtl8xxxu_write32(priv,(unsigned short)3184,val32);
    #line 2294 
    val32 = rtl8xxxu_read32(priv,(unsigned short)3700);
    #line 2295 
    val32 &= 4093640703U;
    #line 2296 
    val32 |= 134217728U;
    #line 2297 
    rtl8xxxu_write32(priv,(unsigned short)3700,val32);
    #line 2299 
    val32 = rtl8xxxu_read32(priv,(unsigned short)3704);
    #line 2300 
    val32 &= 4093640703U;
    #line 2301 
    val32 |= 134217728U;
    #line 2302 
    rtl8xxxu_write32(priv,(unsigned short)3704,val32);
    #line 2304 
    val32 = rtl8xxxu_read32(priv,(unsigned short)3708);
    #line 2305 
    val32 &= 4093640703U;
    #line 2306 
    val32 |= 134217728U;
    #line 2307 
    rtl8xxxu_write32(priv,(unsigned short)3708,val32);
    #line 2309 
    val32 = rtl8xxxu_read32(priv,(unsigned short)3712);
    #line 2310 
    val32 &= 4093640703U;
    #line 2311 
    val32 |= 134217728U;
    #line 2312 
    rtl8xxxu_write32(priv,(unsigned short)3712,val32);
    #line 2314 
    val32 = rtl8xxxu_read32(priv,(unsigned short)3720);
    #line 2315 
    val32 &= 4093640703U;
    #line 2316 
    val32 |= 134217728U;
    #line 2317 
    rtl8xxxu_write32(priv,(unsigned short)3720,val32);
  }
  #line 2320 
  if ((unsigned int)priv->has_xtalk != 0U) {
    #line 2321 
    val32 = rtl8xxxu_read32(priv,(unsigned short)44);
    #line 2323 
    val8 = priv->xtalk;
    #line 2324 
    val32 &= 4278194175U;
    #line 2325 
    val32 = (unsigned int)(((int)val8 | ((int)val8 << 6)) << 12) | val32;
    #line 2327 
    rtl8xxxu_write32(priv,(unsigned short)44,val32);
  }
  #line 2330 
  if (priv->rtl_chip == (unsigned int)RTL8192E) 
                                                #line 2331 
                                                rtl8xxxu_write32(priv,(unsigned short)36,1016315U);
  #line 2333 
  return 0;
}

#line 2336  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
static int rtl8xxxu_init_rf_regs(struct rtl8xxxu_priv *priv, struct rtl8xxxu_rfregval *array, enum rtl8xxxu_rfpath path)
{
  #line 2340 
  int i;
  #line 2340 
  int ret;
  #line 2341 
  u8 reg;
  #line 2342 
  u32 val;
  #line 2344 
  i = 0;
  #line 2344 
  while (1) {
    #line 2345 
    reg = (array + (unsigned long)i)->reg;
    #line 2346 
    val = (array + (unsigned long)i)->val;
    #line 2348 
    if ((unsigned int)reg == 255U && val == 4294967295U) 
                                                         #line 2349 
                                                         break;
    #line 2351 
    switch ((int)reg) {
      #line 2352 
      case 254: 
                #line 2352 
      ;
      #line 2353 
      msleep(50U);
      #line 2354 
      goto __Cont;
      #line 2355 
      case 253: 
                #line 2355 
      ;
      #line 2356 
      __const_udelay(21475000UL);
      #line 2357 
      goto __Cont;
      #line 2358 
      case 252: 
                #line 2358 
      ;
      #line 2359 
      __const_udelay(4295000UL);
      #line 2360 
      goto __Cont;
      #line 2361 
      case 251: 
                #line 2361 
      ;
      #line 2362 
      __const_udelay(214750UL);
      #line 2363 
      goto __Cont;
      #line 2364 
      case 250: 
                #line 2364 
      ;
      #line 2365 
      __const_udelay(21475UL);
      #line 2366 
      goto __Cont;
      #line 2367 
      case 249: 
                #line 2367 
      ;
      #line 2368 
      __const_udelay(4295UL);
      #line 2369 
      goto __Cont;
    }
    #line 2372 
    ret = rtl8xxxu_write_rfreg(priv,path,(unsigned char)((int)reg),val);
    #line 2373 
    if (ret != 0) {
      #line 2374 
      _dev_warn(& (priv->udev)->dev,(char *)"Failed to initialize RF\n");
      #line 2376 
      return -11;
    }
    #line 2378 
    __const_udelay(4295UL);
    #line 2344 
    __Cont: 
            #line 2344 
    i ++;
  }
  #line 2381 
  return 0;
}

#line 2384  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
int rtl8xxxu_init_phy_rf(struct rtl8xxxu_priv *priv, struct rtl8xxxu_rfregval *table, enum rtl8xxxu_rfpath path)
{
  #line 2388 
  u32 val32;
  #line 2389 
  u16 val16;
  #line 2389 
  u16 rfsi_rfenv;
  #line 2390 
  u16 reg_sw_ctrl;
  #line 2390 
  u16 reg_int_oe;
  #line 2390 
  u16 reg_hssi_parm2;
  #line 2392 
  switch ((unsigned int)path) {
    #line 2393 
    case (unsigned int)0: 
                          #line 2393 
    ;
    #line 2394 
    reg_sw_ctrl = (unsigned short)2160U;
    #line 2395 
    reg_int_oe = (unsigned short)2144U;
    #line 2396 
    reg_hssi_parm2 = (unsigned short)2084U;
    #line 2397 
    break;
    #line 2398 
    case (unsigned int)1: 
                          #line 2398 
    ;
    #line 2399 
    reg_sw_ctrl = (unsigned short)2162U;
    #line 2400 
    reg_int_oe = (unsigned short)2148U;
    #line 2401 
    reg_hssi_parm2 = (unsigned short)2092U;
    #line 2402 
    break;
    #line 2403 
    default: 
             #line 2403 
    ;
    #line 2404 
    _dev_err(& (priv->udev)->dev,(char *)"%s:Unsupported RF path %c\n",(char *)"rtl8xxxu_init_phy_rf",(unsigned int)path + 65U);
    #line 2406 
    return -22;
  }
  #line 2409 
  rfsi_rfenv = rtl8xxxu_read16(priv,(unsigned short)((int)reg_sw_ctrl));
  #line 2410 
  rfsi_rfenv = (unsigned short)((unsigned int)rfsi_rfenv & 16U);
  #line 2415 
  val32 = rtl8xxxu_read32(priv,(unsigned short)((int)reg_int_oe));
  #line 2416 
  val32 |= 1048576U;
  #line 2417 
  rtl8xxxu_write32(priv,(unsigned short)((int)reg_int_oe),val32);
  #line 2418 
  __const_udelay(4295UL);
  #line 2420 
  val32 = rtl8xxxu_read32(priv,(unsigned short)((int)reg_int_oe));
  #line 2421 
  val32 |= 16U;
  #line 2422 
  rtl8xxxu_write32(priv,(unsigned short)((int)reg_int_oe),val32);
  #line 2423 
  __const_udelay(4295UL);
  #line 2428 
  val32 = rtl8xxxu_read32(priv,(unsigned short)((int)reg_hssi_parm2));
  #line 2429 
  val32 &= 4294966271U;
  #line 2430 
  rtl8xxxu_write32(priv,(unsigned short)((int)reg_hssi_parm2),val32);
  #line 2431 
  __const_udelay(4295UL);
  #line 2433 
  val32 = rtl8xxxu_read32(priv,(unsigned short)((int)reg_hssi_parm2));
  #line 2434 
  val32 &= 4294965247U;
  #line 2435 
  rtl8xxxu_write32(priv,(unsigned short)((int)reg_hssi_parm2),val32);
  #line 2436 
  __const_udelay(4295UL);
  #line 2438 
  rtl8xxxu_init_rf_regs(priv,table,path);
  #line 2441 
  val16 = rtl8xxxu_read16(priv,(unsigned short)((int)reg_sw_ctrl));
  #line 2442 
  val16 = (unsigned short)((unsigned int)val16 & 65519U);
  #line 2443 
  val16 = (unsigned short)((int)val16 | (int)rfsi_rfenv);
  #line 2444 
  rtl8xxxu_write16(priv,(unsigned short)((int)reg_sw_ctrl),(unsigned short)((int)val16));
  #line 2446 
  return 0;
}

#line 2449  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
static int rtl8xxxu_llt_write(struct rtl8xxxu_priv *priv, u8 address, u8 data)
{
  #line 2453 
  u32 value;
  #line 2451 
  int ret = -16;
  #line 2452 
  int count = 0;
  #line 2455 
  value = (unsigned int)((((int)address << 8) | 1073741824) | (int)data);
  #line 2457 
  rtl8xxxu_write32(priv,(unsigned short)480,value);
  #line 2459 
  while (1) {
    #line 2465 
    int tmp;
    #line 2460 
    value = rtl8xxxu_read32(priv,(unsigned short)480);
    #line 2461 
    if ((value & 3221225472U) == 0U) {
      #line 2462 
      ret = 0;
      #line 2463 
      break;
    }
    #line 2465 
    tmp = count;
    #line 2465 
    count ++;
    #line 2465 
    ;
    #line 2465 
    if (! (tmp <= 19)) 
                       #line 2459 
                       break;
  }
  #line 2467 
  return ret;
}

#line 2470  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
int rtl8xxxu_init_llt_table(struct rtl8xxxu_priv *priv)
{
  #line 2472 
  int ret;
  #line 2473 
  int i;
  #line 2474 
  u8 last_tx_page;
  #line 2476 
  last_tx_page = (priv->fops)->total_page_num;
  #line 2478 
  i = 0;
  #line 2478 
  while ((int)last_tx_page > i) {
    #line 2479 
    ret = rtl8xxxu_llt_write(priv,(unsigned char)((int)((unsigned char)i)),(unsigned char)((int)((unsigned int)((unsigned char)i) + 1U)));
    #line 2480 
    if (ret != 0) 
                  #line 2481 
                  goto exit;
    #line 2478 
    i ++;
  }
  #line 2484 
  ret = rtl8xxxu_llt_write(priv,(unsigned char)((int)last_tx_page),(unsigned char)255);
  #line 2485 
  if (ret != 0) 
                #line 2486 
                goto exit;
  #line 2489 
  i = (int)last_tx_page + 1;
  #line 2489 
  while (i <= 254) {
    #line 2490 
    ret = rtl8xxxu_llt_write(priv,(unsigned char)((int)((unsigned char)i)),(unsigned char)((int)((unsigned int)((unsigned char)i) + 1U)));
    #line 2491 
    if (ret != 0) 
                  #line 2492 
                  goto exit;
    #line 2489 
    i ++;
  }
  #line 2496 
  ret = rtl8xxxu_llt_write(priv,(unsigned char)255,(unsigned char)((int)((unsigned int)last_tx_page + 1U)));
  #line 2497 
  if (ret != 0) 
                #line 2498 
                goto exit;
  #line 2500 
  exit: 
        #line 2500 
  ;
  #line 2501 
  return ret;
}

#line 2504  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
int rtl8xxxu_auto_llt_table(struct rtl8xxxu_priv *priv)
{
  #line 2506 
  u32 val32;
  #line 2508 
  int i;
  #line 2507 
  int ret = 0;
  #line 2510 
  val32 = rtl8xxxu_read32(priv,(unsigned short)548);
  #line 2511 
  val32 |= 65536U;
  #line 2512 
  rtl8xxxu_write32(priv,(unsigned short)548,val32);
  #line 2514 
  i = 500;
  #line 2514 
  while (i != 0) {
    #line 2515 
    val32 = rtl8xxxu_read32(priv,(unsigned short)548);
    #line 2516 
    if (((unsigned long)val32 & 65536UL) == 0UL) 
                                                 #line 2517 
                                                 break;
    #line 2518 
    usleep_range(2UL,4UL);
    #line 2514 
    i --;
  }
  #line 2521 
  if (i == 0) {
    #line 2522 
    ret = -16;
    #line 2523 
    _dev_warn(& (priv->udev)->dev,(char *)"LLT table init failed\n");
  }
  #line 2526 
  return ret;
}

#line 2529  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
static int rtl8xxxu_init_queue_priority(struct rtl8xxxu_priv *priv)
{
  #line 2531 
  u16 val16;
  #line 2531 
  u16 hi;
  #line 2531 
  u16 lo;
  #line 2532 
  u16 hiq;
  #line 2532 
  u16 mgq;
  #line 2532 
  u16 bkq;
  #line 2532 
  u16 beq;
  #line 2532 
  u16 viq;
  #line 2532 
  u16 voq;
  #line 2533 
  int hip;
  #line 2533 
  int mgp;
  #line 2533 
  int bkp;
  #line 2533 
  int bep;
  #line 2533 
  int vip;
  #line 2533 
  int vop;
  #line 2534 
  int ret = 0;
  #line 2536 
  switch ((int)priv->ep_tx_count) {
    #line 2537 
    case 1: 
            #line 2537 
    ;
    #line 2538 
    if ((unsigned int)priv->ep_tx_high_queue != 0U) 
                                                    #line 2539 
                                                    hi = (unsigned short)3U;
    else 
      #line 2540 
      if ((unsigned int)priv->ep_tx_low_queue != 0U) 
                                                     #line 2541 
                                                     hi = (unsigned short)1U;
      else 
        #line 2542 
        if ((unsigned int)priv->ep_tx_normal_queue != 0U) 
                                                          #line 2543 
                                                          hi = (unsigned short)2U;
        else {
          #line 2545 
          hi = (unsigned short)0U;
          #line 2546 
          ret = -22;
        }
    #line 2549 
    hiq = hi;
    #line 2550 
    mgq = hi;
    #line 2551 
    bkq = hi;
    #line 2552 
    beq = hi;
    #line 2553 
    viq = hi;
    #line 2554 
    voq = hi;
    #line 2556 
    hip = 0;
    #line 2557 
    mgp = 0;
    #line 2558 
    bkp = 0;
    #line 2559 
    bep = 0;
    #line 2560 
    vip = 0;
    #line 2561 
    vop = 0;
    #line 2562 
    break;
    #line 2563 
    case 2: 
            #line 2563 
    ;
    #line 2564 
    if ((unsigned int)priv->ep_tx_high_queue != 0U && (unsigned int)priv->ep_tx_low_queue != 0U) {
      #line 2565 
      hi = (unsigned short)3U;
      #line 2566 
      lo = (unsigned short)1U;
    }
    else 
      #line 2567 
      if ((unsigned int)priv->ep_tx_normal_queue != 0U && (unsigned int)priv->ep_tx_low_queue != 0U) {
        #line 2568 
        hi = (unsigned short)2U;
        #line 2569 
        lo = (unsigned short)1U;
      }
      else 
        #line 2570 
        if ((unsigned int)priv->ep_tx_high_queue != 0U && (unsigned int)priv->ep_tx_normal_queue != 0U) {
          #line 2571 
          hi = (unsigned short)3U;
          #line 2572 
          lo = (unsigned short)2U;
        }
        else {
          #line 2574 
          ret = -22;
          #line 2575 
          hi = (unsigned short)0U;
          #line 2576 
          lo = (unsigned short)0U;
        }
    #line 2579 
    hiq = hi;
    #line 2580 
    mgq = hi;
    #line 2581 
    bkq = lo;
    #line 2582 
    beq = lo;
    #line 2583 
    viq = hi;
    #line 2584 
    voq = hi;
    #line 2586 
    hip = 0;
    #line 2587 
    mgp = 0;
    #line 2588 
    bkp = 1;
    #line 2589 
    bep = 1;
    #line 2590 
    vip = 0;
    #line 2591 
    vop = 0;
    #line 2592 
    break;
    #line 2593 
    case 3: 
            #line 2593 
    ;
    #line 2594 
    beq = (unsigned short)1U;
    #line 2595 
    bkq = (unsigned short)1U;
    #line 2596 
    viq = (unsigned short)2U;
    #line 2597 
    voq = (unsigned short)3U;
    #line 2598 
    mgq = (unsigned short)3U;
    #line 2599 
    hiq = (unsigned short)3U;
    #line 2601 
    hip = (int)((unsigned int)hiq ^ 3U);
    #line 2602 
    mgp = (int)((unsigned int)mgq ^ 3U);
    #line 2603 
    bkp = (int)((unsigned int)bkq ^ 3U);
    #line 2604 
    bep = (int)((unsigned int)beq ^ 3U);
    #line 2605 
    vip = (int)((unsigned int)viq ^ 3U);
    #line 2606 
    vop = (int)((unsigned int)viq ^ 3U);
    #line 2607 
    break;
    #line 2608 
    default: 
             #line 2608 
    ;
    #line 2609 
    ret = -22;
  }
  #line 2616 
  if (ret == 0) {
    #line 2617 
    val16 = rtl8xxxu_read16(priv,(unsigned short)268);
    #line 2618 
    val16 = (unsigned short)((unsigned int)val16 & 7U);
    #line 2619 
    val16 = (unsigned short)((((((((int)voq << 4) | ((int)viq << 6)) | ((int)beq << 8)) | ((int)bkq << 10)) | ((int)mgq << 12)) | ((int)hiq << 14)) | (int)val16);
    #line 2625 
    rtl8xxxu_write16(priv,(unsigned short)268,(unsigned short)((int)val16));
    #line 2627 
    priv->pipe_out[7] = __create_pipe(priv->udev,(unsigned int)priv->out_ep[vop]) | 3221225472U;
    #line 2629 
    priv->pipe_out[5] = __create_pipe(priv->udev,(unsigned int)priv->out_ep[vip]) | 3221225472U;
    #line 2631 
    priv->pipe_out[0] = __create_pipe(priv->udev,(unsigned int)priv->out_ep[bep]) | 3221225472U;
    #line 2633 
    priv->pipe_out[2] = __create_pipe(priv->udev,(unsigned int)priv->out_ep[bkp]) | 3221225472U;
    #line 2635 
    priv->pipe_out[16] = __create_pipe(priv->udev,(unsigned int)priv->out_ep[0]) | 3221225472U;
    #line 2637 
    priv->pipe_out[18] = __create_pipe(priv->udev,(unsigned int)priv->out_ep[mgp]) | 3221225472U;
    #line 2639 
    priv->pipe_out[17] = __create_pipe(priv->udev,(unsigned int)priv->out_ep[hip]) | 3221225472U;
    #line 2641 
    priv->pipe_out[19] = __create_pipe(priv->udev,(unsigned int)priv->out_ep[0]) | 3221225472U;
  }
  #line 2645 
  return ret;
}

#line 2648  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
void rtl8xxxu_fill_iqk_matrix_a(struct rtl8xxxu_priv *priv, bool iqk_ok, int (*result)[8U], int candidate, bool tx_only)
{
  #line 2651 
  u32 oldval;
  #line 2651 
  u32 x;
  #line 2651 
  u32 tx0_a;
  #line 2651 
  u32 reg;
  #line 2652 
  int y;
  #line 2652 
  int tx0_c;
  #line 2653 
  u32 val32;
  #line 2655 
  if (! iqk_ok) 
                #line 2656 
                return;
  #line 2658 
  val32 = rtl8xxxu_read32(priv,(unsigned short)3200);
  #line 2659 
  oldval = val32 >> 22;
  #line 2661 
  x = (unsigned int)(*(result + (unsigned long)candidate))[0];
  #line 2662 
  if ((x & 512U) != 0U) 
                        #line 2663 
                        x |= 4294966272U;
  #line 2664 
  tx0_a = x * oldval >> 8;
  #line 2666 
  val32 = rtl8xxxu_read32(priv,(unsigned short)3200);
  #line 2667 
  val32 &= 4294966272U;
  #line 2668 
  val32 |= tx0_a;
  #line 2669 
  rtl8xxxu_write32(priv,(unsigned short)3200,val32);
  #line 2671 
  val32 = rtl8xxxu_read32(priv,(unsigned short)3148);
  #line 2672 
  val32 &= 2147483647U;
  #line 2673 
  if ((x * oldval & 128U) != 0U) 
                                 #line 2674 
                                 val32 |= 2147483648U;
  #line 2675 
  rtl8xxxu_write32(priv,(unsigned short)3148,val32);
  #line 2677 
  y = (*(result + (unsigned long)candidate))[1];
  #line 2678 
  if ((y & 512) != 0) 
                      #line 2679 
                      y = (int)((unsigned int)y | 4294966272U);
  #line 2680 
  tx0_c = (int)((unsigned int)y * oldval >> 8);
  #line 2682 
  val32 = rtl8xxxu_read32(priv,(unsigned short)3220);
  #line 2683 
  val32 &= 268435455U;
  #line 2684 
  val32 = (unsigned int)((tx0_c >> 6) << 28) | val32;
  #line 2685 
  rtl8xxxu_write32(priv,(unsigned short)3220,val32);
  #line 2687 
  val32 = rtl8xxxu_read32(priv,(unsigned short)3200);
  #line 2688 
  val32 &= 4290838527U;
  #line 2689 
  val32 = ((unsigned int)(tx0_c << 16) & 4128768U) | val32;
  #line 2690 
  rtl8xxxu_write32(priv,(unsigned short)3200,val32);
  #line 2692 
  val32 = rtl8xxxu_read32(priv,(unsigned short)3148);
  #line 2693 
  val32 &= 3758096383U;
  #line 2694 
  if (((unsigned int)y * oldval & 128U) != 0U) 
                                               #line 2695 
                                               val32 |= 536870912U;
  #line 2696 
  rtl8xxxu_write32(priv,(unsigned short)3148,val32);
  #line 2698 
  if ((int)tx_only != 0) {
    {
      #line 2699 
      bool branch;
      #line 2699 
      struct _ddebug __UNIQUE_ID_ddebug584 = {.modname = (char *)"rtl8xxxu", .function = (char *)"rtl8xxxu_fill_iqk_matrix_a", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c", .format = (char *)"%s: only TX\n", .lineno = (unsigned int)2699U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
      #line 2699 
      branch = arch_static_branch(& __UNIQUE_ID_ddebug584.key.dd_key_false.key,(_Bool)0);
      #line 2699 
      if ((long)((long)((int)branch != 0)) != 0L) 
                                                  #line 2699 
                                                  __dynamic_dev_dbg(& __UNIQUE_ID_ddebug584,& (priv->udev)->dev,(char *)"%s: only TX\n",(char *)"rtl8xxxu_fill_iqk_matrix_a");
    }
    #line 2700 
    return;
  }
  #line 2703 
  reg = (unsigned int)(*(result + (unsigned long)candidate))[2];
  #line 2705 
  val32 = rtl8xxxu_read32(priv,(unsigned short)3092);
  #line 2706 
  val32 &= 4294966272U;
  #line 2707 
  val32 = (reg & 1023U) | val32;
  #line 2708 
  rtl8xxxu_write32(priv,(unsigned short)3092,val32);
  #line 2710 
  reg = (unsigned int)(*(result + (unsigned long)candidate))[3] & 63U;
  #line 2712 
  val32 = rtl8xxxu_read32(priv,(unsigned short)3092);
  #line 2713 
  val32 &= 4294902783U;
  #line 2714 
  val32 = ((reg << 10) & 65535U) | val32;
  #line 2715 
  rtl8xxxu_write32(priv,(unsigned short)3092,val32);
  #line 2717 
  reg = (unsigned int)((*(result + (unsigned long)candidate))[3] >> 6) & 15U;
  #line 2719 
  val32 = rtl8xxxu_read32(priv,(unsigned short)3232);
  #line 2720 
  val32 &= 268435455U;
  #line 2721 
  val32 = (reg << 28) | val32;
  #line 2722 
  rtl8xxxu_write32(priv,(unsigned short)3232,val32);
  #line 2723 
  return;
}

#line 2725  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
void rtl8xxxu_fill_iqk_matrix_b(struct rtl8xxxu_priv *priv, bool iqk_ok, int (*result)[8U], int candidate, bool tx_only)
{
  #line 2728 
  u32 oldval;
  #line 2728 
  u32 x;
  #line 2728 
  u32 tx1_a;
  #line 2728 
  u32 reg;
  #line 2729 
  int y;
  #line 2729 
  int tx1_c;
  #line 2730 
  u32 val32;
  #line 2732 
  if (! iqk_ok) 
                #line 2733 
                return;
  #line 2735 
  val32 = rtl8xxxu_read32(priv,(unsigned short)3208);
  #line 2736 
  oldval = val32 >> 22;
  #line 2738 
  x = (unsigned int)(*(result + (unsigned long)candidate))[4];
  #line 2739 
  if ((x & 512U) != 0U) 
                        #line 2740 
                        x |= 4294966272U;
  #line 2741 
  tx1_a = x * oldval >> 8;
  #line 2743 
  val32 = rtl8xxxu_read32(priv,(unsigned short)3208);
  #line 2744 
  val32 &= 4294966272U;
  #line 2745 
  val32 |= tx1_a;
  #line 2746 
  rtl8xxxu_write32(priv,(unsigned short)3208,val32);
  #line 2748 
  val32 = rtl8xxxu_read32(priv,(unsigned short)3148);
  #line 2749 
  val32 &= 4160749567U;
  #line 2750 
  if ((x * oldval & 128U) != 0U) 
                                 #line 2751 
                                 val32 |= 134217728U;
  #line 2752 
  rtl8xxxu_write32(priv,(unsigned short)3148,val32);
  #line 2754 
  y = (*(result + (unsigned long)candidate))[5];
  #line 2755 
  if ((y & 512) != 0) 
                      #line 2756 
                      y = (int)((unsigned int)y | 4294966272U);
  #line 2757 
  tx1_c = (int)((unsigned int)y * oldval >> 8);
  #line 2759 
  val32 = rtl8xxxu_read32(priv,(unsigned short)3228);
  #line 2760 
  val32 &= 268435455U;
  #line 2761 
  val32 = (unsigned int)((tx1_c >> 6) << 28) | val32;
  #line 2762 
  rtl8xxxu_write32(priv,(unsigned short)3228,val32);
  #line 2764 
  val32 = rtl8xxxu_read32(priv,(unsigned short)3208);
  #line 2765 
  val32 &= 4290838527U;
  #line 2766 
  val32 = ((unsigned int)(tx1_c << 16) & 4128768U) | val32;
  #line 2767 
  rtl8xxxu_write32(priv,(unsigned short)3208,val32);
  #line 2769 
  val32 = rtl8xxxu_read32(priv,(unsigned short)3148);
  #line 2770 
  val32 &= 4261412863U;
  #line 2771 
  if (((unsigned int)y * oldval & 128U) != 0U) 
                                               #line 2772 
                                               val32 |= 33554432U;
  #line 2773 
  rtl8xxxu_write32(priv,(unsigned short)3148,val32);
  #line 2775 
  if ((int)tx_only != 0) {
    {
      #line 2776 
      bool branch;
      #line 2776 
      struct _ddebug __UNIQUE_ID_ddebug585 = {.modname = (char *)"rtl8xxxu", .function = (char *)"rtl8xxxu_fill_iqk_matrix_b", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c", .format = (char *)"%s: only TX\n", .lineno = (unsigned int)2776U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
      #line 2776 
      branch = arch_static_branch(& __UNIQUE_ID_ddebug585.key.dd_key_false.key,(_Bool)0);
      #line 2776 
      if ((long)((long)((int)branch != 0)) != 0L) 
                                                  #line 2776 
                                                  __dynamic_dev_dbg(& __UNIQUE_ID_ddebug585,& (priv->udev)->dev,(char *)"%s: only TX\n",(char *)"rtl8xxxu_fill_iqk_matrix_b");
    }
    #line 2777 
    return;
  }
  #line 2780 
  reg = (unsigned int)(*(result + (unsigned long)candidate))[6];
  #line 2782 
  val32 = rtl8xxxu_read32(priv,(unsigned short)3100);
  #line 2783 
  val32 &= 4294966272U;
  #line 2784 
  val32 = (reg & 1023U) | val32;
  #line 2785 
  rtl8xxxu_write32(priv,(unsigned short)3100,val32);
  #line 2787 
  reg = (unsigned int)(*(result + (unsigned long)candidate))[7] & 63U;
  #line 2789 
  val32 = rtl8xxxu_read32(priv,(unsigned short)3100);
  #line 2790 
  val32 &= 4294902783U;
  #line 2791 
  val32 = ((reg << 10) & 65535U) | val32;
  #line 2792 
  rtl8xxxu_write32(priv,(unsigned short)3100,val32);
  #line 2794 
  reg = (unsigned int)((*(result + (unsigned long)candidate))[7] >> 6) & 15U;
  #line 2796 
  val32 = rtl8xxxu_read32(priv,(unsigned short)3192);
  #line 2797 
  val32 &= 4294905855U;
  #line 2798 
  val32 = (reg << 12) | val32;
  #line 2799 
  rtl8xxxu_write32(priv,(unsigned short)3192,val32);
  #line 2800 
  return;
}

#line 2804  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
static bool rtl8xxxu_simularity_compare(struct rtl8xxxu_priv *priv, int (*result)[8U], int c1, int c2)
{
  #line 2807 
  u32 i;
  #line 2807 
  u32 j;
  #line 2807 
  u32 diff;
  #line 2807 
  u32 simubitmap;
  #line 2807 
  u32 bound = 0U;
  #line 2808 
  int candidate[2U] = {-1, -1};
  #line 2809 
  bool retval = (_Bool)1;
  #line 2811 
  if ((unsigned int)priv->tx_paths > 1U) 
                                         #line 2812 
                                         bound = 8U; else 
                                                          #line 2814 
                                                          bound = 4U;
  #line 2816 
  simubitmap = 0U;
  #line 2818 
  i = 0U;
  #line 2818 
  while (i < bound) {
    {
      #line 2820 
      int tmp;
      #line 2820 
      if ((*(result + (unsigned long)c1))[i] > (*(result + (unsigned long)c2))[i]) 
        #line 2820 
        tmp = (*(result + (unsigned long)c1))[i] - (*(result + (unsigned long)c2))[i]; else 
                                                                    #line 2820 
                                                                    tmp = (*(result + (unsigned long)c2))[i] - (*(result + (unsigned long)c1))[i];
      #line 2819 
      diff = (unsigned int)tmp;
      #line 2822 
      if (diff > 5U) 
        #line 2823 
        if ((i == 2U || i == 6U) && simubitmap == 0U) 
          #line 2824 
          if ((*(result + (unsigned long)c1))[i] + (*(result + (unsigned long)c1))[i + 1U] == 0) 
            #line 2825 
            candidate[i / 4U] = c2;
          else 
            #line 2826 
            if ((*(result + (unsigned long)c2))[i] + (*(result + (unsigned long)c2))[i + 1U] == 0) 
              #line 2827 
              candidate[i / 4U] = c1; else 
                                           #line 2829 
                                           simubitmap = (unsigned int)(1 << i) | simubitmap;
        else 
             #line 2831 
             simubitmap = (unsigned int)(1 << i) | simubitmap;
    }
    #line 2818 
    i ++;
  }
  #line 2836 
  if (simubitmap == 0U) {
    #line 2837 
    i = 0U;
    #line 2837 
    while (bound / 4U > i) {
      #line 2838 
      if (candidate[i] >= 0) {
        #line 2839 
        j = i * 4U;
        #line 2839 
        while ((i + 1U) * 4U + 4294967294U > j) {
          #line 2840 
          (*(result + 3U))[j] = (*(result + (unsigned long)candidate[i]))[j];
          #line 2839 
          j ++;
        }
        #line 2841 
        retval = (_Bool)0;
      }
      #line 2837 
      i ++;
    }
    #line 2844 
    return retval;
  }
  else 
    #line 2845 
    if ((simubitmap & 15U) == 0U) {
      #line 2847 
      i = 0U;
      #line 2847 
      while (i <= 3U) {
        #line 2848 
        (*(result + 3U))[i] = (*(result + (unsigned long)c1))[i];
        #line 2847 
        i ++;
      }
    }
    else 
      #line 2849 
      if ((simubitmap & 240U) == 0U && (unsigned int)priv->tx_paths > 1U) {
        #line 2851 
        i = 4U;
        #line 2851 
        while (i <= 7U) {
          #line 2852 
          (*(result + 3U))[i] = (*(result + (unsigned long)c1))[i];
          #line 2851 
          i ++;
        }
      }
  #line 2855 
  return (_Bool)0;
}

#line 2858  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
bool rtl8xxxu_gen2_simularity_compare(struct rtl8xxxu_priv *priv, int (*result)[8U], int c1, int c2)
{
  #line 2861 
  u32 i;
  #line 2861 
  u32 j;
  #line 2861 
  u32 diff;
  #line 2861 
  u32 simubitmap;
  #line 2863 
  int tmp1;
  #line 2863 
  int tmp2;
  #line 2861 
  u32 bound = 0U;
  #line 2862 
  int candidate[2U] = {-1, -1};
  #line 2864 
  bool retval = (_Bool)1;
  #line 2866 
  if ((unsigned int)priv->tx_paths > 1U) 
                                         #line 2867 
                                         bound = 8U; else 
                                                          #line 2869 
                                                          bound = 4U;
  #line 2871 
  simubitmap = 0U;
  #line 2873 
  i = 0U;
  #line 2873 
  while (i < bound) {
    {
      #line 2889 
      int tmp;
      #line 2874 
      if ((i & 1U) != 0U) {
        #line 2875 
        if (((*(result + (unsigned long)c1))[i] & 512) != 0) 
                                                             #line 2876 
                                                             tmp1 = (int)((unsigned int)(*(result + (unsigned long)c1))[i] | 4294966272U); else 
                                                                    #line 2878 
                                                                    tmp1 = (*(result + (unsigned long)c1))[i];
        #line 2880 
        if (((*(result + (unsigned long)c2))[i] & 512) != 0) 
                                                             #line 2881 
                                                             tmp2 = (int)((unsigned int)(*(result + (unsigned long)c2))[i] | 4294966272U); else 
                                                                    #line 2883 
                                                                    tmp2 = (*(result + (unsigned long)c2))[i];
      }
      else {
        #line 2885 
        tmp1 = (*(result + (unsigned long)c1))[i];
        #line 2886 
        tmp2 = (*(result + (unsigned long)c2))[i];
      }
      #line 2889 
      if (tmp1 > tmp2) 
                       #line 2889 
                       tmp = tmp1 - tmp2; else 
                                               #line 2889 
                                               tmp = tmp2 - tmp1;
      #line 2889 
      diff = (unsigned int)tmp;
      #line 2891 
      if (diff > 5U) 
        #line 2892 
        if ((i == 2U || i == 6U) && simubitmap == 0U) 
          #line 2893 
          if ((*(result + (unsigned long)c1))[i] + (*(result + (unsigned long)c1))[i + 1U] == 0) 
            #line 2894 
            candidate[i / 4U] = c2;
          else 
            #line 2895 
            if ((*(result + (unsigned long)c2))[i] + (*(result + (unsigned long)c2))[i + 1U] == 0) 
              #line 2896 
              candidate[i / 4U] = c1; else 
                                           #line 2898 
                                           simubitmap = (unsigned int)(1 << i) | simubitmap;
        else 
             #line 2900 
             simubitmap = (unsigned int)(1 << i) | simubitmap;
    }
    #line 2873 
    i ++;
  }
  #line 2905 
  if (simubitmap == 0U) {
    #line 2906 
    i = 0U;
    #line 2906 
    while (bound / 4U > i) {
      #line 2907 
      if (candidate[i] >= 0) {
        #line 2908 
        j = i * 4U;
        #line 2908 
        while ((i + 1U) * 4U + 4294967294U > j) {
          #line 2909 
          (*(result + 3U))[j] = (*(result + (unsigned long)candidate[i]))[j];
          #line 2908 
          j ++;
        }
        #line 2910 
        retval = (_Bool)0;
      }
      #line 2906 
      i ++;
    }
    #line 2913 
    return retval;
  }
  else {
    #line 2915 
    if ((simubitmap & 3U) == 0U) {
      #line 2917 
      i = 0U;
      #line 2917 
      while (i <= 1U) {
        #line 2918 
        (*(result + 3U))[i] = (*(result + (unsigned long)c1))[i];
        #line 2917 
        i ++;
      }
    }
    #line 2921 
    if ((simubitmap & 12U) == 0U) {
      #line 2923 
      i = 2U;
      #line 2923 
      while (i <= 3U) {
        #line 2924 
        (*(result + 3U))[i] = (*(result + (unsigned long)c1))[i];
        #line 2923 
        i ++;
      }
    }
    #line 2927 
    if ((simubitmap & 48U) == 0U && (unsigned int)priv->tx_paths > 1U) {
      #line 2929 
      i = 4U;
      #line 2929 
      while (i <= 5U) {
        #line 2930 
        (*(result + 3U))[i] = (*(result + (unsigned long)c1))[i];
        #line 2929 
        i ++;
      }
    }
    #line 2933 
    if ((simubitmap & 48U) == 0U && (unsigned int)priv->tx_paths > 1U) {
      #line 2935 
      i = 6U;
      #line 2935 
      while (i <= 7U) {
        #line 2936 
        (*(result + 3U))[i] = (*(result + (unsigned long)c1))[i];
        #line 2935 
        i ++;
      }
    }
  }
  #line 2940 
  return (_Bool)0;
}

#line 2944  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
void rtl8xxxu_save_mac_regs(struct rtl8xxxu_priv *priv, u32 *reg, u32 *backup)
{
  #line 2946 
  int i;
  #line 2948 
  i = 0;
  #line 2948 
  while (i <= 2) {
    #line 2949 
    *(backup + (unsigned long)i) = (unsigned int)rtl8xxxu_read8(priv,
                     (unsigned short)((int)((unsigned short)*(reg + (unsigned long)i))));
    #line 2948 
    i ++;
  }
  #line 2951 
  *(backup + (unsigned long)i) = rtl8xxxu_read32(priv,(unsigned short)((int)((unsigned short)*(reg + (unsigned long)i))));
  #line 2952 
  return;
}

#line 2954  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
void rtl8xxxu_restore_mac_regs(struct rtl8xxxu_priv *priv, u32 *reg, u32 *backup)
{
  #line 2957 
  int i;
  #line 2959 
  i = 0;
  #line 2959 
  while (i <= 2) {
    #line 2960 
    rtl8xxxu_write8(priv,(unsigned short)((int)((unsigned short)*(reg + (unsigned long)i))),(unsigned char)((int)((unsigned char)*(backup + (unsigned long)i))));
    #line 2959 
    i ++;
  }
  #line 2962 
  rtl8xxxu_write32(priv,(unsigned short)((int)((unsigned short)*(reg + (unsigned long)i))),*(backup + (unsigned long)i));
  #line 2963 
  return;
}

#line 2965  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
void rtl8xxxu_save_regs(struct rtl8xxxu_priv *priv, u32 *regs, u32 *backup, int count)
{
  #line 2968 
  int i;
  #line 2970 
  i = 0;
  #line 2970 
  while (i < count) {
    #line 2971 
    *(backup + (unsigned long)i) = rtl8xxxu_read32(priv,(unsigned short)((int)((unsigned short)*(regs + (unsigned long)i))));
    #line 2970 
    i ++;
  }
  #line 2972 
  return;
}

#line 2974  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
void rtl8xxxu_restore_regs(struct rtl8xxxu_priv *priv, u32 *regs, u32 *backup, int count)
{
  #line 2977 
  int i;
  #line 2979 
  i = 0;
  #line 2979 
  while (i < count) {
    #line 2980 
    rtl8xxxu_write32(priv,(unsigned short)((int)((unsigned short)*(regs + (unsigned long)i))),*(backup + (unsigned long)i));
    #line 2979 
    i ++;
  }
  #line 2981 
  return;
}

#line 2984  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
void rtl8xxxu_path_adda_on(struct rtl8xxxu_priv *priv, u32 *regs, bool path_a_on)
{
  #line 2987 
  u32 path_on;
  #line 2988 
  int i;
  #line 2990 
  if ((unsigned int)priv->tx_paths == 1U) {
    #line 2991 
    path_on = (priv->fops)->adda_1t_path_on;
    #line 2992 
    rtl8xxxu_write32(priv,(unsigned short)((int)((unsigned short)*regs)),(priv->fops)->adda_1t_init);
  }
  else {
    #line 2994 
    if ((int)path_a_on != 0) 
                             #line 2994 
                             path_on = (priv->fops)->adda_2t_path_on_a; else 
                                                                    #line 2994 
                                                                    path_on = (priv->fops)->adda_2t_path_on_b;
    #line 2997 
    rtl8xxxu_write32(priv,(unsigned short)((int)((unsigned short)*regs)),path_on);
  }
  #line 3000 
  i = 1;
  #line 3000 
  while (i <= 15) {
    #line 3001 
    rtl8xxxu_write32(priv,(unsigned short)((int)((unsigned short)*(regs + (unsigned long)i))),path_on);
    #line 3000 
    i ++;
  }
  #line 3002 
  return;
}

#line 3004  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
void rtl8xxxu_mac_calibration(struct rtl8xxxu_priv *priv, u32 *regs, u32 *backup)
{
  #line 3007 
  int i = 0;
  #line 3009 
  rtl8xxxu_write8(priv,(unsigned short)((int)((unsigned short)*(regs + (unsigned long)i))),(unsigned char)63);
  #line 3011 
  i = 1;
  #line 3011 
  while (i <= 2) {
    #line 3012 
    rtl8xxxu_write8(priv,(unsigned short)((int)((unsigned short)*(regs + (unsigned long)i))),(unsigned char)((int)((unsigned char)*(backup + (unsigned long)i)) & 247));
    #line 3011 
    i ++;
  }
  #line 3014 
  rtl8xxxu_write8(priv,(unsigned short)((int)((unsigned short)*(regs + (unsigned long)i))),(unsigned char)((int)((unsigned char)*(backup + (unsigned long)i)) & 223));
  #line 3015 
  return;
}

#line 3017  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
static int rtl8xxxu_iqk_path_a(struct rtl8xxxu_priv *priv)
{
  #line 3019 
  u32 reg_eac;
  #line 3019 
  u32 reg_e94;
  #line 3019 
  u32 reg_e9c;
  #line 3019 
  u32 reg_ea4;
  #line 3019 
  u32 val32;
  #line 3020 
  int result = 0;
  #line 3023 
  rtl8xxxu_write32(priv,(unsigned short)3632,268471327U);
  #line 3024 
  rtl8xxxu_write32(priv,(unsigned short)3636,268471327U);
  #line 3025 
  rtl8xxxu_write32(priv,(unsigned short)3640,2182349058U);
  #line 3027 
  if ((unsigned int)priv->rf_paths > 1U) 
                                         #line 3027 
                                         val32 = 672530946U; else 
                                                                  #line 3027 
                                                                  val32 = 672531714U;
  #line 3030 
  rtl8xxxu_write32(priv,(unsigned short)3644,val32);
  #line 3033 
  if ((unsigned int)priv->rf_paths > 1U) {
    #line 3034 
    rtl8xxxu_write32(priv,(unsigned short)3664,268471330U);
    #line 3035 
    rtl8xxxu_write32(priv,(unsigned short)3668,268471330U);
    #line 3036 
    rtl8xxxu_write32(priv,(unsigned short)3672,2182349058U);
    #line 3037 
    rtl8xxxu_write32(priv,(unsigned short)3676,672530946U);
  }
  #line 3041 
  rtl8xxxu_write32(priv,(unsigned short)3660,1059025U);
  #line 3044 
  rtl8xxxu_write32(priv,(unsigned short)3656,4177526784U);
  #line 3045 
  rtl8xxxu_write32(priv,(unsigned short)3656,4160749568U);
  #line 3047 
  __const_udelay(4295000UL);
  #line 3050 
  reg_eac = rtl8xxxu_read32(priv,(unsigned short)3756);
  #line 3051 
  reg_e94 = rtl8xxxu_read32(priv,(unsigned short)3732);
  #line 3052 
  reg_e9c = rtl8xxxu_read32(priv,(unsigned short)3740);
  #line 3053 
  reg_ea4 = rtl8xxxu_read32(priv,(unsigned short)3748);
  #line 3055 
  if ((((unsigned long)reg_eac & 268435456UL) == 0UL && (reg_e94 & 67043328U) != 21102592U) && (reg_e9c & 67043328U) != 4325376U) 
    #line 3058 
    result |= 1; else 
                      #line 3060 
                      goto out;
  #line 3063 
  if ((((unsigned long)reg_eac & 134217728UL) == 0UL && (reg_ea4 & 67043328U) != 20054016U) && (reg_eac & 67043328U) != 3538944U) 
    #line 3066 
    result |= 2; else 
                      #line 3068 
                      _dev_warn(& (priv->udev)->dev,(char *)"%s: Path A RX IQK failed!\n",(char *)"rtl8xxxu_iqk_path_a");
  #line 3070 
  out: 
       #line 3070 
  ;
  #line 3071 
  return result;
}

#line 3074  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
static int rtl8xxxu_iqk_path_b(struct rtl8xxxu_priv *priv)
{
  #line 3076 
  u32 reg_eac;
  #line 3076 
  u32 reg_eb4;
  #line 3076 
  u32 reg_ebc;
  #line 3076 
  u32 reg_ec4;
  #line 3076 
  u32 reg_ecc;
  #line 3077 
  int result = 0;
  #line 3080 
  rtl8xxxu_write32(priv,(unsigned short)3680,2U);
  #line 3081 
  rtl8xxxu_write32(priv,(unsigned short)3680,0U);
  #line 3083 
  __const_udelay(4295000UL);
  #line 3086 
  reg_eac = rtl8xxxu_read32(priv,(unsigned short)3756);
  #line 3087 
  reg_eb4 = rtl8xxxu_read32(priv,(unsigned short)3764);
  #line 3088 
  reg_ebc = rtl8xxxu_read32(priv,(unsigned short)3772);
  #line 3089 
  reg_ec4 = rtl8xxxu_read32(priv,(unsigned short)3780);
  #line 3090 
  reg_ecc = rtl8xxxu_read32(priv,(unsigned short)3788);
  #line 3092 
  if ((((unsigned long)reg_eac & 2147483648UL) == 0UL && (reg_eb4 & 67043328U) != 21102592U) && (reg_ebc & 67043328U) != 4325376U) 
    #line 3095 
    result |= 1; else 
                      #line 3097 
                      goto out;
  #line 3099 
  if ((((unsigned long)reg_eac & 1073741824UL) == 0UL && ((reg_ec4 >> 16) & 1023U) != 306U) && ((reg_ecc >> 16) & 1023U) != 54U) 
    #line 3102 
    result |= 2; else 
                      #line 3104 
                      _dev_warn(& (priv->udev)->dev,(char *)"%s: Path B RX IQK failed!\n",(char *)"rtl8xxxu_iqk_path_b");
  #line 3106 
  out: 
       #line 3106 
  ;
  #line 3107 
  return result;
}

#line 3110  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
static void rtl8xxxu_phy_iqcalibrate(struct rtl8xxxu_priv *priv, int (*result)[8U], int t)
{
  #line 3114 
  u32 i;
  #line 3114 
  u32 val32;
  #line 3115 
  int path_a_ok;
  #line 3115 
  int path_b_ok;
  #line 3113 
  struct device *dev = & (priv->udev)->dev;
  #line 3116 
  int retry = 2;
  #line 3117 
  u32 adda_regs[16U] = {2140U, 3692U, 3696U, 3700U, 3704U, 3708U, 3712U, 3716U, 3720U, 3724U, 3792U, 3796U, 3800U, 3804U, 3808U, 3820U};
  #line 3127 
  u32 iqk_mac_regs[4U] = {1314U, 1360U, 1361U, 64U};
  #line 3131 
  u32 iqk_bb_regs[9U] = {3076U, 3080U, 2164U, 2920U, 2924U, 2160U, 2144U, 2148U, 2048U};
  #line 3143 
  if (t == 0) {
    #line 3145 
    rtl8xxxu_save_regs(priv,(u32 *)(& adda_regs),(u32 *)(& priv->adda_backup),16);
    #line 3147 
    rtl8xxxu_save_mac_regs(priv,(u32 *)(& iqk_mac_regs),(u32 *)(& priv->mac_backup));
    #line 3148 
    rtl8xxxu_save_regs(priv,(u32 *)(& iqk_bb_regs),(u32 *)(& priv->bb_backup),9);
  }
  #line 3152 
  rtl8xxxu_path_adda_on(priv,(u32 *)(& adda_regs),(_Bool)1);
  #line 3154 
  if (t == 0) {
    #line 3155 
    val32 = rtl8xxxu_read32(priv,(unsigned short)2080);
    #line 3156 
    if (((unsigned long)val32 & 256UL) != 0UL) 
                                               #line 3157 
                                               priv->pi_enabled = (unsigned char)1U;
  }
  #line 3160 
  if ((unsigned int)priv->pi_enabled == 0U) {
    #line 3162 
    rtl8xxxu_write32(priv,(unsigned short)2080,16777472U);
    #line 3163 
    rtl8xxxu_write32(priv,(unsigned short)2088,16777472U);
  }
  #line 3166 
  val32 = rtl8xxxu_read32(priv,(unsigned short)2048);
  #line 3167 
  val32 &= 4278190079U;
  #line 3168 
  rtl8xxxu_write32(priv,(unsigned short)2048,val32);
  #line 3170 
  rtl8xxxu_write32(priv,(unsigned short)3076,60839424U);
  #line 3171 
  rtl8xxxu_write32(priv,(unsigned short)3080,524516U);
  #line 3172 
  rtl8xxxu_write32(priv,(unsigned short)2164,572538880U);
  #line 3174 
  if ((unsigned int)priv->no_pape == 0U) {
    #line 3175 
    val32 = rtl8xxxu_read32(priv,(unsigned short)2160);
    #line 3176 
    val32 |= 67109888U;
    #line 3178 
    rtl8xxxu_write32(priv,(unsigned short)2160,val32);
  }
  #line 3181 
  val32 = rtl8xxxu_read32(priv,(unsigned short)2144);
  #line 3182 
  val32 &= 4294966271U;
  #line 3183 
  rtl8xxxu_write32(priv,(unsigned short)2144,val32);
  #line 3184 
  val32 = rtl8xxxu_read32(priv,(unsigned short)2148);
  #line 3185 
  val32 &= 4294966271U;
  #line 3186 
  rtl8xxxu_write32(priv,(unsigned short)2148,val32);
  #line 3188 
  if ((unsigned int)priv->tx_paths > 1U) {
    #line 3189 
    rtl8xxxu_write32(priv,(unsigned short)2112,65536U);
    #line 3190 
    rtl8xxxu_write32(priv,(unsigned short)2116,65536U);
  }
  #line 3194 
  rtl8xxxu_mac_calibration(priv,(u32 *)(& iqk_mac_regs),(u32 *)(& priv->mac_backup));
  #line 3197 
  rtl8xxxu_write32(priv,(unsigned short)2920,524288U);
  #line 3199 
  if ((unsigned int)priv->tx_paths > 1U) 
                                         #line 3200 
                                         rtl8xxxu_write32(priv,(unsigned short)2924,524288U);
  #line 3203 
  rtl8xxxu_write32(priv,(unsigned short)3624,2155872256U);
  #line 3204 
  rtl8xxxu_write32(priv,(unsigned short)3648,16808960U);
  #line 3205 
  rtl8xxxu_write32(priv,(unsigned short)3652,16795648U);
  #line 3207 
  i = 0U;
  #line 3207 
  while (i < (unsigned int)retry) {
    #line 3208 
    path_a_ok = rtl8xxxu_iqk_path_a(priv);
    #line 3209 
    if (path_a_ok == 3) {
      #line 3210 
      val32 = rtl8xxxu_read32(priv,(unsigned short)3732);
      #line 3212 
      (*(result + (unsigned long)t))[0] = (int)(val32 >> 16) & 1023;
      #line 3213 
      val32 = rtl8xxxu_read32(priv,(unsigned short)3740);
      #line 3215 
      (*(result + (unsigned long)t))[1] = (int)(val32 >> 16) & 1023;
      #line 3216 
      val32 = rtl8xxxu_read32(priv,(unsigned short)3748);
      #line 3218 
      (*(result + (unsigned long)t))[2] = (int)(val32 >> 16) & 1023;
      #line 3219 
      val32 = rtl8xxxu_read32(priv,(unsigned short)3756);
      #line 3221 
      (*(result + (unsigned long)t))[3] = (int)(val32 >> 16) & 1023;
      #line 3222 
      break;
    }
    else 
      #line 3223 
      if ((unsigned int)(retry + -1) == i && path_a_ok == 1) {
        {
          #line 3225 
          bool branch;
          #line 3225 
          struct _ddebug __UNIQUE_ID_ddebug586 = {.modname = (char *)"rtl8xxxu", .function = (char *)"rtl8xxxu_phy_iqcalibrate", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c", .format = (char *)"%s: Path A IQK Only Tx Success!!\n", .lineno = (unsigned int)3225U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
          #line 3225 
          branch = arch_static_branch(& __UNIQUE_ID_ddebug586.key.dd_key_false.key,(_Bool)0);
          #line 3225 
          if ((long)((long)((int)branch != 0)) != 0L) 
                                                      #line 3225 
                                                      __dynamic_dev_dbg(& __UNIQUE_ID_ddebug586,dev,(char *)"%s: Path A IQK Only Tx Success!!\n",(char *)"rtl8xxxu_phy_iqcalibrate");
        }
        #line 3228 
        val32 = rtl8xxxu_read32(priv,(unsigned short)3732);
        #line 3230 
        (*(result + (unsigned long)t))[0] = (int)(val32 >> 16) & 1023;
        #line 3231 
        val32 = rtl8xxxu_read32(priv,(unsigned short)3740);
        #line 3233 
        (*(result + (unsigned long)t))[1] = (int)(val32 >> 16) & 1023;
      }
    #line 3207 
    i ++;
  }
  #line 3237 
  if (path_a_ok == 0) {
    #line 3238 
    bool branch_0;
    #line 3238 
    struct _ddebug __UNIQUE_ID_ddebug587 = {.modname = (char *)"rtl8xxxu", .function = (char *)"rtl8xxxu_phy_iqcalibrate", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c", .format = (char *)"%s: Path A IQK failed!\n", .lineno = (unsigned int)3238U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
    #line 3238 
    branch_0 = arch_static_branch(& __UNIQUE_ID_ddebug587.key.dd_key_false.key,(_Bool)0);
    #line 3238 
    if ((long)((long)((int)branch_0 != 0)) != 0L) 
                                                  #line 3238 
                                                  __dynamic_dev_dbg(& __UNIQUE_ID_ddebug587,dev,(char *)"%s: Path A IQK failed!\n",(char *)"rtl8xxxu_phy_iqcalibrate");
  }
  #line 3240 
  if ((unsigned int)priv->tx_paths > 1U) {
    #line 3244 
    rtl8xxxu_write32(priv,(unsigned short)3624,0U);
    #line 3245 
    rtl8xxxu_write32(priv,(unsigned short)2112,65536U);
    #line 3246 
    rtl8xxxu_write32(priv,(unsigned short)3624,2155872256U);
    #line 3249 
    rtl8xxxu_path_adda_on(priv,(u32 *)(& adda_regs),(_Bool)0);
    #line 3251 
    i = 0U;
    #line 3251 
    while (i < (unsigned int)retry) {
      #line 3252 
      path_b_ok = rtl8xxxu_iqk_path_b(priv);
      #line 3253 
      if (path_b_ok == 3) {
        #line 3254 
        val32 = rtl8xxxu_read32(priv,(unsigned short)3764);
        #line 3255 
        (*(result + (unsigned long)t))[4] = (int)(val32 >> 16) & 1023;
        #line 3256 
        val32 = rtl8xxxu_read32(priv,(unsigned short)3772);
        #line 3257 
        (*(result + (unsigned long)t))[5] = (int)(val32 >> 16) & 1023;
        #line 3258 
        val32 = rtl8xxxu_read32(priv,(unsigned short)3780);
        #line 3259 
        (*(result + (unsigned long)t))[6] = (int)(val32 >> 16) & 1023;
        #line 3260 
        val32 = rtl8xxxu_read32(priv,(unsigned short)3788);
        #line 3261 
        (*(result + (unsigned long)t))[7] = (int)(val32 >> 16) & 1023;
        #line 3262 
        break;
      }
      else 
        #line 3263 
        if ((unsigned int)(retry + -1) == i && path_b_ok == 1) {
          #line 3265 
          val32 = rtl8xxxu_read32(priv,(unsigned short)3764);
          #line 3266 
          (*(result + (unsigned long)t))[4] = (int)(val32 >> 16) & 1023;
          #line 3267 
          val32 = rtl8xxxu_read32(priv,(unsigned short)3772);
          #line 3268 
          (*(result + (unsigned long)t))[5] = (int)(val32 >> 16) & 1023;
        }
      #line 3251 
      i ++;
    }
    #line 3272 
    if (path_b_ok == 0) {
      #line 3273 
      bool branch_1;
      #line 3273 
      struct _ddebug __UNIQUE_ID_ddebug588 = {.modname = (char *)"rtl8xxxu", .function = (char *)"rtl8xxxu_phy_iqcalibrate", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c", .format = (char *)"%s: Path B IQK failed!\n", .lineno = (unsigned int)3273U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
      #line 3273 
      branch_1 = arch_static_branch(& __UNIQUE_ID_ddebug588.key.dd_key_false.key,(_Bool)0);
      #line 3273 
      if ((long)((long)((int)branch_1 != 0)) != 0L) 
                                                    #line 3273 
                                                    __dynamic_dev_dbg(& __UNIQUE_ID_ddebug588,dev,(char *)"%s: Path B IQK failed!\n",(char *)"rtl8xxxu_phy_iqcalibrate");
    }
  }
  #line 3277 
  rtl8xxxu_write32(priv,(unsigned short)3624,0U);
  #line 3279 
  if (t != 0) {
    #line 3280 
    if ((unsigned int)priv->pi_enabled == 0U) {
      #line 3285 
      val32 = 16777216U;
      #line 3286 
      rtl8xxxu_write32(priv,(unsigned short)2080,val32);
      #line 3287 
      rtl8xxxu_write32(priv,(unsigned short)2088,val32);
    }
    #line 3291 
    rtl8xxxu_restore_regs(priv,(u32 *)(& adda_regs),(u32 *)(& priv->adda_backup),16);
    #line 3295 
    rtl8xxxu_restore_mac_regs(priv,(u32 *)(& iqk_mac_regs),(u32 *)(& priv->mac_backup));
    #line 3298 
    rtl8xxxu_restore_regs(priv,(u32 *)(& iqk_bb_regs),(u32 *)(& priv->bb_backup),9);
    #line 3302 
    rtl8xxxu_write32(priv,(unsigned short)2112,208595U);
    #line 3304 
    if ((unsigned int)priv->tx_paths > 1U) 
                                           #line 3305 
                                           rtl8xxxu_write32(priv,(unsigned short)2116,208595U);
    #line 3310 
    rtl8xxxu_write32(priv,(unsigned short)3632,16813056U);
    #line 3311 
    rtl8xxxu_write32(priv,(unsigned short)3636,16813056U);
  }
  #line 3313 
  return;
}

#line 3315  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
void rtl8xxxu_gen2_prepare_calibrate(struct rtl8xxxu_priv *priv, u8 start)
{
  #line 3317 
  struct h2c_cmd h2c;
  #line 3319 
  memset((void *)(& h2c),0,8UL);
  #line 3320 
  h2c.__anonCompField_h2c_cmd_197.bt_wlan_calibration.cmd = (unsigned char)109U;
  #line 3321 
  h2c.__anonCompField_h2c_cmd_197.bt_wlan_calibration.data = start;
  #line 3323 
  rtl8xxxu_gen2_h2c_cmd(priv,& h2c,2);
  #line 3324 
  return;
}

#line 3326  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
void rtl8xxxu_gen1_phy_iq_calibrate(struct rtl8xxxu_priv *priv)
{
  #line 3329 
  int result[4U][8U];
  #line 3330 
  int i;
  #line 3330 
  int candidate;
  #line 3331 
  bool path_a_ok;
  #line 3331 
  bool path_b_ok;
  #line 3332 
  u32 reg_e94;
  #line 3332 
  u32 reg_e9c;
  #line 3332 
  u32 reg_ea4;
  #line 3332 
  u32 reg_eac;
  #line 3333 
  u32 reg_eb4;
  #line 3333 
  u32 reg_ebc;
  #line 3333 
  u32 reg_ec4;
  #line 3333 
  u32 reg_ecc;
  #line 3335 
  bool simu;
  #line 3328 
  struct device *dev = & (priv->udev)->dev;
  #line 3334 
  s32 reg_tmp = 0;
  #line 3337 
  memset((void *)(& result),0,128UL);
  #line 3338 
  candidate = -1;
  #line 3340 
  path_a_ok = (_Bool)0;
  #line 3341 
  path_b_ok = (_Bool)0;
  #line 3343 
  rtl8xxxu_read32(priv,(unsigned short)2048);
  #line 3345 
  i = 0;
  #line 3345 
  while (i <= 2) {
    #line 3346 
    rtl8xxxu_phy_iqcalibrate(priv,(int (*)[8U])(& result),i);
    #line 3348 
    if (i == 1) {
      #line 3349 
      simu = rtl8xxxu_simularity_compare(priv,(int (*)[8U])(& result),0,1);
      #line 3350 
      if ((int)simu != 0) {
        #line 3351 
        candidate = 0;
        #line 3352 
        break;
      }
    }
    #line 3356 
    if (i == 2) {
      #line 3357 
      simu = rtl8xxxu_simularity_compare(priv,(int (*)[8U])(& result),0,2);
      #line 3358 
      if ((int)simu != 0) {
        #line 3359 
        candidate = 0;
        #line 3360 
        break;
      }
      #line 3363 
      simu = rtl8xxxu_simularity_compare(priv,(int (*)[8U])(& result),1,2);
      #line 3364 
      if ((int)simu != 0) 
                          #line 3365 
                          candidate = 1;
      else {
        #line 3367 
        i = 0;
        #line 3367 
        while (i <= 7) {
          #line 3368 
          reg_tmp = result[3][i] + reg_tmp;
          #line 3367 
          i ++;
        }
        #line 3370 
        if (reg_tmp != 0) 
                          #line 3371 
                          candidate = 3; else 
                                              #line 3373 
                                              candidate = -1;
      }
    }
    #line 3345 
    i ++;
  }
  #line 3378 
  i = 0;
  #line 3378 
  while (i <= 3) {
    #line 3379 
    reg_e94 = (unsigned int)result[i][0];
    #line 3380 
    reg_e9c = (unsigned int)result[i][1];
    #line 3381 
    reg_ea4 = (unsigned int)result[i][2];
    #line 3382 
    reg_eac = (unsigned int)result[i][3];
    #line 3383 
    reg_eb4 = (unsigned int)result[i][4];
    #line 3384 
    reg_ebc = (unsigned int)result[i][5];
    #line 3385 
    reg_ec4 = (unsigned int)result[i][6];
    #line 3386 
    reg_ecc = (unsigned int)result[i][7];
    #line 3378 
    i ++;
  }
  #line 3389 
  if (candidate >= 0) {
    #line 3390 
    reg_e94 = (unsigned int)result[candidate][0];
    #line 3391 
    priv->rege94 = reg_e94;
    #line 3392 
    reg_e9c = (unsigned int)result[candidate][1];
    #line 3393 
    priv->rege9c = reg_e9c;
    #line 3394 
    reg_ea4 = (unsigned int)result[candidate][2];
    #line 3395 
    reg_eac = (unsigned int)result[candidate][3];
    #line 3396 
    reg_eb4 = (unsigned int)result[candidate][4];
    #line 3397 
    priv->regeb4 = reg_eb4;
    #line 3398 
    reg_ebc = (unsigned int)result[candidate][5];
    #line 3399 
    priv->regebc = reg_ebc;
    #line 3400 
    reg_ec4 = (unsigned int)result[candidate][6];
    #line 3401 
    reg_ecc = (unsigned int)result[candidate][7];
    {
      #line 3402 
      bool branch;
      #line 3402 
      struct _ddebug __UNIQUE_ID_ddebug589 = {.modname = (char *)"rtl8xxxu", .function = (char *)"rtl8xxxu_gen1_phy_iq_calibrate", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c", .format = (char *)"%s: candidate is %x\n", .lineno = (unsigned int)3402U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
      #line 3402 
      branch = arch_static_branch(& __UNIQUE_ID_ddebug589.key.dd_key_false.key,(_Bool)0);
      #line 3402 
      if ((long)((long)((int)branch != 0)) != 0L) 
                                                  #line 3402 
                                                  __dynamic_dev_dbg(& __UNIQUE_ID_ddebug589,dev,(char *)"%s: candidate is %x\n",(char *)"rtl8xxxu_gen1_phy_iq_calibrate",candidate);
    }
    {
      #line 3403 
      bool branch_0;
      #line 3403 
      struct _ddebug __UNIQUE_ID_ddebug590 = {.modname = (char *)"rtl8xxxu", .function = (char *)"rtl8xxxu_gen1_phy_iq_calibrate", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c", .format = (char *)"%s: e94 =%x e9c=%x ea4=%x eac=%x eb4=%x ebc=%x ec4=%x ecc=%x\n", .lineno = (unsigned int)3403U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
      #line 3403 
      branch_0 = arch_static_branch(& __UNIQUE_ID_ddebug590.key.dd_key_false.key,(_Bool)0);
      #line 3403 
      if ((long)((long)((int)branch_0 != 0)) != 0L) 
                                                    #line 3403 
                                                    __dynamic_dev_dbg(& __UNIQUE_ID_ddebug590,dev,(char *)"%s: e94 =%x e9c=%x ea4=%x eac=%x eb4=%x ebc=%x ec4=%x ecc=%x\n",(char *)"rtl8xxxu_gen1_phy_iq_calibrate",reg_e94,reg_e9c,reg_ea4,reg_eac,reg_eb4,reg_ebc,reg_ec4,reg_ecc);
    }
    #line 3407 
    path_a_ok = (_Bool)1;
    #line 3408 
    path_b_ok = (_Bool)1;
  }
  else {
    #line 3410 
    priv->regeb4 = 256U;
    #line 3410 
    priv->rege94 = 256U;
    #line 3410 
    reg_eb4 = 256U;
    #line 3410 
    reg_e94 = reg_eb4;
    #line 3411 
    priv->regebc = 0U;
    #line 3411 
    priv->rege9c = 0U;
    #line 3411 
    reg_ebc = 0U;
    #line 3411 
    reg_e9c = reg_ebc;
  }
  #line 3414 
  if (reg_e94 != 0U && candidate >= 0) 
                                       #line 3415 
                                       rtl8xxxu_fill_iqk_matrix_a(priv,(_Bool)((bool)((int)path_a_ok) != 0),(int (*)[8U])(& result),candidate,(_Bool)(reg_ea4 == 0U));
  #line 3418 
  if ((unsigned int)priv->tx_paths > 1U && reg_eb4 != 0U) 
                                                          #line 3419 
                                                          rtl8xxxu_fill_iqk_matrix_b(priv,(_Bool)((bool)((int)path_b_ok) != 0),(int (*)[8U])(& result),candidate,(_Bool)(reg_ec4 == 0U));
  #line 3422 
  rtl8xxxu_save_regs(priv,(u32 *)(& rtl8xxxu_iqk_phy_iq_bb_reg),(u32 *)(& priv->bb_recovery_backup),9);
  #line 3424 
  return;
}

#line 3426  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
static void rtl8723a_phy_lc_calibrate(struct rtl8xxxu_priv *priv)
{
  #line 3428 
  u32 val32;
  #line 3429 
  u32 rf_amode;
  #line 3429 
  u32 lstf;
  #line 3429 
  u32 rf_bmode = 0U;
  #line 3432 
  lstf = rtl8xxxu_read32(priv,(unsigned short)3328);
  #line 3434 
  if ((lstf & 1879048192U) != 0U) {
    #line 3436 
    val32 = lstf & 2415919103U;
    #line 3437 
    rtl8xxxu_write32(priv,(unsigned short)3328,val32);
    #line 3440 
    rf_amode = rtl8xxxu_read_rfreg(priv,(enum rtl8xxxu_rfpath)RF_A,(unsigned char)0);
    #line 3443 
    rtl8xxxu_write_rfreg(priv,(enum rtl8xxxu_rfpath)RF_A,(unsigned char)0,(rf_amode & 589823U) | 65536U);
    #line 3447 
    if ((unsigned int)priv->tx_paths > 1U) {
      #line 3448 
      rf_bmode = rtl8xxxu_read_rfreg(priv,(enum rtl8xxxu_rfpath)RF_B,(unsigned char)0);
      #line 3451 
      rtl8xxxu_write_rfreg(priv,(enum rtl8xxxu_rfpath)RF_B,(unsigned char)0,(rf_bmode & 589823U) | 65536U);
    }
  }
  else 
       #line 3457 
       rtl8xxxu_write8(priv,(unsigned short)1314,(unsigned char)255);
  #line 3461 
  if ((unsigned int)(priv->fops)->has_s0s1 != 0U) 
                                                  #line 3462 
                                                  rtl8xxxu_write_rfreg(priv,(enum rtl8xxxu_rfpath)RF_A,(unsigned char)176,916448U);
  #line 3463 
  val32 = rtl8xxxu_read_rfreg(priv,(enum rtl8xxxu_rfpath)RF_A,(unsigned char)24);
  #line 3464 
  val32 |= 32768U;
  #line 3465 
  rtl8xxxu_write_rfreg(priv,(enum rtl8xxxu_rfpath)RF_A,(unsigned char)24,val32);
  #line 3467 
  msleep(100U);
  #line 3469 
  if ((unsigned int)(priv->fops)->has_s0s1 != 0U) 
                                                  #line 3470 
                                                  rtl8xxxu_write_rfreg(priv,(enum rtl8xxxu_rfpath)RF_A,(unsigned char)176,917472U);
  #line 3473 
  if ((lstf & 1879048192U) != 0U) {
    #line 3475 
    rtl8xxxu_write32(priv,(unsigned short)3328,lstf);
    #line 3476 
    rtl8xxxu_write_rfreg(priv,(enum rtl8xxxu_rfpath)RF_A,(unsigned char)0,rf_amode);
    #line 3479 
    if ((unsigned int)priv->tx_paths > 1U) 
                                           #line 3480 
                                           rtl8xxxu_write_rfreg(priv,(enum rtl8xxxu_rfpath)RF_B,(unsigned char)0,rf_bmode);
  }
  else 
       #line 3483 
       rtl8xxxu_write8(priv,(unsigned short)1314,(unsigned char)0);
  #line 3484 
  return;
}

#line 3486  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
static int rtl8xxxu_set_mac(struct rtl8xxxu_priv *priv)
{
  #line 3488 
  int i;
  #line 3489 
  u16 reg;
  #line 3491 
  reg = (unsigned short)1552U;
  #line 3493 
  i = 0;
  #line 3493 
  while (i <= 5) {
    #line 3494 
    rtl8xxxu_write8(priv,(unsigned short)((int)((unsigned short)i) + (int)reg),(unsigned char)((int)priv->mac_addr[i]));
    #line 3493 
    i ++;
  }
  #line 3496 
  return 0;
}

#line 3499  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
static int rtl8xxxu_set_bssid(struct rtl8xxxu_priv *priv, u8 *bssid)
{
  #line 3501 
  int i;
  #line 3502 
  u16 reg;
  {
    #line 3504 
    bool branch;
    #line 3504 
    struct _ddebug __UNIQUE_ID_ddebug591 = {.modname = (char *)"rtl8xxxu", .function = (char *)"rtl8xxxu_set_bssid", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c", .format = (char *)"%s: (%pM)\n", .lineno = (unsigned int)3504U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
    #line 3504 
    branch = arch_static_branch(& __UNIQUE_ID_ddebug591.key.dd_key_false.key,(_Bool)0);
    #line 3504 
    if ((long)((long)((int)branch != 0)) != 0L) 
                                                #line 3504 
                                                __dynamic_dev_dbg(& __UNIQUE_ID_ddebug591,& (priv->udev)->dev,(char *)"%s: (%pM)\n",(char *)"rtl8xxxu_set_bssid",bssid);
  }
  #line 3506 
  reg = (unsigned short)1560U;
  #line 3508 
  i = 0;
  #line 3508 
  while (i <= 5) {
    #line 3509 
    rtl8xxxu_write8(priv,(unsigned short)((int)((unsigned short)i) + (int)reg),(unsigned char)((int)*(bssid + (unsigned long)i)));
    #line 3508 
    i ++;
  }
  #line 3511 
  return 0;
}

#line 3515  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
static void rtl8xxxu_set_ampdu_factor(struct rtl8xxxu_priv *priv, u8 ampdu_factor)
{
  #line 3519 
  int i;
  #line 3517 
  u8 vals[4U] = {(unsigned char)65U, (unsigned char)168U, (unsigned char)114U, (unsigned char)185U};
  #line 3518 
  u8 max_agg = (unsigned char)15U;
  #line 3521 
  ampdu_factor = (unsigned char)(1 << ((int)ampdu_factor + 2));
  #line 3522 
  if ((int)ampdu_factor > (int)max_agg) 
                                        #line 3523 
                                        ampdu_factor = max_agg;
  #line 3525 
  i = 0;
  #line 3525 
  while (i <= 3) {
    #line 3526 
    if (((int)vals[i] & 240) > (int)ampdu_factor << 4) 
                                                       #line 3527 
                                                       vals[i] = (unsigned char)(((int)vals[i] & 15) | ((int)ampdu_factor << 4));
    #line 3529 
    if (((int)vals[i] & 15) > (int)ampdu_factor) 
                                                 #line 3530 
                                                 vals[i] = (unsigned char)(((int)vals[i] & -16) | (int)ampdu_factor);
    #line 3532 
    rtl8xxxu_write8(priv,(unsigned short)((int)((unsigned int)((unsigned short)i) + 1112U)),(unsigned char)((int)vals[i]));
    #line 3525 
    i ++;
  }
  #line 3534 
  return;
}

#line 3536  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
static void rtl8xxxu_set_ampdu_min_space(struct rtl8xxxu_priv *priv, u8 density)
{
  #line 3538 
  u8 val8;
  #line 3540 
  val8 = rtl8xxxu_read8(priv,(unsigned short)1116);
  #line 3541 
  val8 = (unsigned char)((unsigned int)val8 & 248U);
  #line 3542 
  val8 = (unsigned char)((int)val8 | (int)density);
  #line 3543 
  rtl8xxxu_write8(priv,(unsigned short)1116,(unsigned char)((int)val8));
  #line 3544 
  return;
}

#line 3546  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
static int rtl8xxxu_active_to_emu(struct rtl8xxxu_priv *priv)
{
  #line 3548 
  u8 val8;
  #line 3549 
  int count;
  #line 3549 
  int ret = 0;
  #line 3554 
  rtl8xxxu_write8(priv,(unsigned short)31,(unsigned char)0);
  #line 3557 
  val8 = rtl8xxxu_read8(priv,(unsigned short)78);
  #line 3558 
  val8 = (unsigned char)((unsigned int)val8 & 127U);
  #line 3559 
  rtl8xxxu_write8(priv,(unsigned short)78,(unsigned char)((int)val8));
  #line 3562 
  val8 = rtl8xxxu_read8(priv,(unsigned short)5);
  #line 3563 
  val8 = (unsigned char)((unsigned int)val8 | 2U);
  #line 3564 
  rtl8xxxu_write8(priv,(unsigned short)5,(unsigned char)((int)val8));
  #line 3566 
  count = 500;
  #line 3566 
  while (count != 0) {
    #line 3567 
    val8 = rtl8xxxu_read8(priv,(unsigned short)5);
    #line 3568 
    if (((unsigned long)val8 & 2UL) == 0UL) 
                                            #line 3569 
                                            break;
    #line 3570 
    __const_udelay(42950UL);
    #line 3566 
    count --;
  }
  #line 3573 
  if (count == 0) {
    #line 3574 
    _dev_warn(& (priv->udev)->dev,(char *)"%s: Disabling MAC timed out\n",(char *)"rtl8xxxu_active_to_emu");
    #line 3576 
    ret = -16;
    #line 3577 
    goto exit;
  }
  #line 3581 
  val8 = rtl8xxxu_read8(priv,(unsigned short)0);
  #line 3582 
  val8 = (unsigned char)((unsigned int)val8 | 32U);
  #line 3583 
  rtl8xxxu_write8(priv,(unsigned short)0,(unsigned char)((int)val8));
  #line 3586 
  val8 = rtl8xxxu_read8(priv,(unsigned short)32);
  #line 3587 
  val8 = (unsigned char)((unsigned int)val8 & 254U);
  #line 3588 
  rtl8xxxu_write8(priv,(unsigned short)32,(unsigned char)((int)val8));
  #line 3590 
  exit: 
        #line 3590 
  ;
  #line 3591 
  return ret;
}

#line 3594  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
int rtl8xxxu_active_to_lps(struct rtl8xxxu_priv *priv)
{
  #line 3596 
  u8 val8;
  #line 3597 
  u8 val32;
  #line 3598 
  int count;
  #line 3598 
  int ret = 0;
  #line 3600 
  rtl8xxxu_write8(priv,(unsigned short)1314,(unsigned char)255);
  #line 3605 
  count = 500;
  #line 3605 
  while (count != 0) {
    {
      #line 3606 
      val32 = (unsigned char)rtl8xxxu_read32(priv,(unsigned short)1528);
      #line 3607 
      if ((unsigned int)val32 == 0U) 
                                     #line 3608 
                                     break;
      #line 3609 
      __const_udelay(42950UL);
    }
    #line 3605 
    count --;
  }
  #line 3612 
  if (count == 0) {
    #line 3613 
    _dev_warn(& (priv->udev)->dev,(char *)"%s: RX poll timed out (0x05f8)\n",(char *)"rtl8xxxu_active_to_lps");
    #line 3615 
    ret = -16;
    #line 3616 
    goto exit;
  }
  #line 3620 
  val8 = rtl8xxxu_read8(priv,(unsigned short)2);
  #line 3621 
  val8 = (unsigned char)((unsigned int)val8 & 254U);
  #line 3622 
  rtl8xxxu_write8(priv,(unsigned short)2,(unsigned char)((int)val8));
  #line 3624 
  __const_udelay(8590UL);
  #line 3627 
  val8 = rtl8xxxu_read8(priv,(unsigned short)2);
  #line 3628 
  val8 = (unsigned char)((unsigned int)val8 & 253U);
  #line 3629 
  rtl8xxxu_write8(priv,(unsigned short)2,(unsigned char)((int)val8));
  #line 3632 
  val8 = rtl8xxxu_read8(priv,(unsigned short)256);
  #line 3633 
  val8 = (unsigned char)3U;
  #line 3634 
  rtl8xxxu_write8(priv,(unsigned short)256,(unsigned char)((int)val8));
  #line 3637 
  val8 = rtl8xxxu_read8(priv,(unsigned short)257);
  #line 3638 
  val8 = (unsigned char)((unsigned int)val8 & 253U);
  #line 3639 
  rtl8xxxu_write8(priv,(unsigned short)257,(unsigned char)((int)val8));
  #line 3642 
  val8 = rtl8xxxu_read8(priv,(unsigned short)1363);
  #line 3643 
  val8 = (unsigned char)((unsigned int)val8 | 32U);
  #line 3644 
  rtl8xxxu_write8(priv,(unsigned short)1363,(unsigned char)((int)val8));
  #line 3646 
  exit: 
        #line 3646 
  ;
  #line 3647 
  return ret;
}

#line 3650  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
void rtl8xxxu_disabled_to_emu(struct rtl8xxxu_priv *priv)
{
  #line 3652 
  u8 val8;
  #line 3655 
  val8 = rtl8xxxu_read8(priv,(unsigned short)5);
  #line 3656 
  val8 = (unsigned char)((unsigned int)val8 & 119U);
  #line 3657 
  rtl8xxxu_write8(priv,(unsigned short)5,(unsigned char)((int)val8));
  #line 3660 
  val8 = rtl8xxxu_read8(priv,(unsigned short)74);
  #line 3661 
  val8 = (unsigned char)((unsigned int)val8 & 254U);
  #line 3662 
  rtl8xxxu_write8(priv,(unsigned short)74,(unsigned char)((int)val8));
  #line 3665 
  val8 = rtl8xxxu_read8(priv,(unsigned short)5);
  #line 3666 
  val8 = (unsigned char)((unsigned int)val8 & 231U);
  #line 3667 
  rtl8xxxu_write8(priv,(unsigned short)5,(unsigned char)((int)val8));
  #line 3668 
  return;
}

#line 3670  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
static int rtl8xxxu_emu_to_disabled(struct rtl8xxxu_priv *priv)
{
  #line 3672 
  u8 val8;
  #line 3675 
  rtl8xxxu_write8(priv,(unsigned short)7,(unsigned char)32);
  #line 3678 
  val8 = rtl8xxxu_read8(priv,(unsigned short)5);
  #line 3679 
  val8 = (unsigned char)((unsigned int)val8 & 239U);
  #line 3680 
  val8 = (unsigned char)((unsigned int)val8 | 8U);
  #line 3681 
  rtl8xxxu_write8(priv,(unsigned short)5,(unsigned char)((int)val8));
  #line 3683 
  val8 = rtl8xxxu_read8(priv,(unsigned short)5);
  #line 3684 
  val8 = (unsigned char)((unsigned int)val8 | 128U);
  #line 3685 
  rtl8xxxu_write8(priv,(unsigned short)5,(unsigned char)((int)val8));
  #line 3688 
  val8 = rtl8xxxu_read8(priv,(unsigned short)74);
  #line 3689 
  val8 = (unsigned char)((unsigned int)val8 | 1U);
  #line 3690 
  rtl8xxxu_write8(priv,(unsigned short)74,(unsigned char)((int)val8));
  #line 3692 
  return 0;
}

#line 3695  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
int rtl8xxxu_flush_fifo(struct rtl8xxxu_priv *priv)
{
  #line 3698 
  u32 val32;
  #line 3699 
  int retry;
  #line 3699 
  int retval;
  #line 3697 
  struct device *dev = & (priv->udev)->dev;
  #line 3701 
  rtl8xxxu_write8(priv,(unsigned short)1314,(unsigned char)255);
  #line 3703 
  val32 = rtl8xxxu_read32(priv,(unsigned short)644);
  #line 3704 
  val32 |= 262144U;
  #line 3705 
  rtl8xxxu_write32(priv,(unsigned short)644,val32);
  #line 3707 
  retry = 100;
  #line 3708 
  retval = -16;
  #line 3710 
  while (1) {
    #line 3716 
    int tmp;
    #line 3711 
    val32 = rtl8xxxu_read32(priv,(unsigned short)644);
    #line 3712 
    if (((unsigned long)val32 & 131072UL) != 0UL) {
      #line 3713 
      retval = 0;
      #line 3714 
      break;
    }
    #line 3716 
    tmp = retry;
    #line 3716 
    retry --;
    #line 3716 
    ;
    #line 3716 
    if (! (tmp != 0)) 
                      #line 3710 
                      break;
  }
  #line 3718 
  rtl8xxxu_write16(priv,(unsigned short)532,(unsigned short)0);
  #line 3719 
  rtl8xxxu_write32(priv,(unsigned short)512,2147483648U);
  #line 3720 
  __const_udelay(8590000UL);
  #line 3722 
  if (retry == 0) 
                  #line 3723 
                  _dev_warn(dev,(char *)"Failed to flush FIFO\n");
  #line 3725 
  return retval;
}

#line 3728  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
void rtl8xxxu_gen1_usb_quirks(struct rtl8xxxu_priv *priv)
{
  #line 3731 
  rtl8xxxu_write8(priv,(unsigned short)65088,(unsigned char)224);
  #line 3732 
  rtl8xxxu_write8(priv,(unsigned short)65089,(unsigned char)141);
  #line 3733 
  rtl8xxxu_write8(priv,(unsigned short)65090,(unsigned char)128);
  #line 3738 
  rtl8xxxu_write32(priv,(unsigned short)524,16581408U);
  #line 3744 
  if ((unsigned int)priv->chip_cut != 0U || (unsigned int)priv->vendor_umc == 0U) {
    #line 3745 
    rtl8xxxu_write8(priv,(unsigned short)65088,(unsigned char)230);
    #line 3746 
    rtl8xxxu_write8(priv,(unsigned short)65089,(unsigned char)148);
    #line 3747 
    rtl8xxxu_write8(priv,(unsigned short)65090,(unsigned char)128);
    #line 3749 
    rtl8xxxu_write8(priv,(unsigned short)65088,(unsigned char)224);
    #line 3750 
    rtl8xxxu_write8(priv,(unsigned short)65089,(unsigned char)25);
    #line 3751 
    rtl8xxxu_write8(priv,(unsigned short)65090,(unsigned char)128);
    #line 3753 
    rtl8xxxu_write8(priv,(unsigned short)65088,(unsigned char)229);
    #line 3754 
    rtl8xxxu_write8(priv,(unsigned short)65089,(unsigned char)145);
    #line 3755 
    rtl8xxxu_write8(priv,(unsigned short)65090,(unsigned char)128);
    #line 3757 
    rtl8xxxu_write8(priv,(unsigned short)65088,(unsigned char)226);
    #line 3758 
    rtl8xxxu_write8(priv,(unsigned short)65089,(unsigned char)129);
    #line 3759 
    rtl8xxxu_write8(priv,(unsigned short)65090,(unsigned char)128);
  }
  #line 3761 
  return;
}

#line 3763  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
void rtl8xxxu_gen2_usb_quirks(struct rtl8xxxu_priv *priv)
{
  #line 3765 
  u32 val32;
  #line 3767 
  val32 = rtl8xxxu_read32(priv,(unsigned short)524);
  #line 3768 
  val32 |= 512U;
  #line 3769 
  rtl8xxxu_write32(priv,(unsigned short)524,val32);
  #line 3770 
  return;
}

#line 3772  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
void rtl8xxxu_power_off(struct rtl8xxxu_priv *priv)
{
  #line 3774 
  u8 val8;
  #line 3775 
  u16 val16;
  #line 3776 
  u32 val32;
  #line 3781 
  if (priv->rtl_chip == (unsigned int)RTL8188R) {
    #line 3782 
    val32 = rtl8xxxu_read32(priv,(unsigned short)2172);
    #line 3783 
    val32 |= 2U;
    #line 3784 
    rtl8xxxu_write32(priv,(unsigned short)2172,val32);
  }
  #line 3787 
  rtl8xxxu_flush_fifo(priv);
  #line 3789 
  rtl8xxxu_active_to_lps(priv);
  #line 3792 
  rtl8xxxu_write8(priv,(unsigned short)31,(unsigned char)0);
  #line 3795 
  if (((unsigned long)rtl8xxxu_read8(priv,(unsigned short)128) & 128UL) != 0UL) 
    #line 3796 
    rtl8xxxu_firmware_self_reset(priv);
  #line 3799 
  val16 = rtl8xxxu_read16(priv,(unsigned short)2);
  #line 3800 
  val16 = (unsigned short)((unsigned int)val16 & 64511U);
  #line 3801 
  rtl8xxxu_write16(priv,(unsigned short)2,(unsigned short)((int)val16));
  #line 3804 
  rtl8xxxu_write8(priv,(unsigned short)128,(unsigned char)0);
  #line 3806 
  rtl8xxxu_active_to_emu(priv);
  #line 3807 
  rtl8xxxu_emu_to_disabled(priv);
  #line 3810 
  val8 = rtl8xxxu_read8(priv,(unsigned short)29);
  #line 3811 
  val8 = (unsigned char)((unsigned int)val8 & 254U);
  #line 3812 
  rtl8xxxu_write8(priv,(unsigned short)29,(unsigned char)((int)val8));
  #line 3814 
  val8 = rtl8xxxu_read8(priv,(unsigned short)29);
  #line 3815 
  val8 = (unsigned char)((unsigned int)val8 | 1U);
  #line 3816 
  rtl8xxxu_write8(priv,(unsigned short)29,(unsigned char)((int)val8));
  #line 3819 
  rtl8xxxu_write8(priv,(unsigned short)28,(unsigned char)14);
  #line 3820 
  return;
}

#line 3822  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
void rtl8723bu_set_ps_tdma(struct rtl8xxxu_priv *priv, u8 arg1, u8 arg2, u8 arg3, u8 arg4, u8 arg5)
{
  #line 3825 
  struct h2c_cmd h2c;
  #line 3827 
  memset((void *)(& h2c),0,8UL);
  #line 3828 
  h2c.__anonCompField_h2c_cmd_197.b_type_dma.cmd = (unsigned char)96U;
  #line 3829 
  h2c.__anonCompField_h2c_cmd_197.b_type_dma.data1 = arg1;
  #line 3830 
  h2c.__anonCompField_h2c_cmd_197.b_type_dma.data2 = arg2;
  #line 3831 
  h2c.__anonCompField_h2c_cmd_197.b_type_dma.data3 = arg3;
  #line 3832 
  h2c.__anonCompField_h2c_cmd_197.b_type_dma.data4 = arg4;
  #line 3833 
  h2c.__anonCompField_h2c_cmd_197.b_type_dma.data5 = arg5;
  #line 3834 
  rtl8xxxu_gen2_h2c_cmd(priv,& h2c,6);
  #line 3835 
  return;
}

#line 3837  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
void rtl8xxxu_gen2_disable_rf(struct rtl8xxxu_priv *priv)
{
  #line 3839 
  u32 val32;
  #line 3841 
  val32 = rtl8xxxu_read32(priv,(unsigned short)3696);
  #line 3842 
  val32 &= 4282384383U;
  #line 3843 
  rtl8xxxu_write32(priv,(unsigned short)3696,val32);
  #line 3844 
  return;
}

#line 3846  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
static void rtl8xxxu_init_queue_reserved_page(struct rtl8xxxu_priv *priv)
{
  #line 3849 
  u32 hq;
  #line 3849 
  u32 lq;
  #line 3849 
  u32 nq;
  #line 3849 
  u32 eq;
  #line 3849 
  u32 pubq;
  #line 3850 
  u32 val32;
  #line 3848 
  struct rtl8xxxu_fileops *fops = priv->fops;
  #line 3852 
  hq = 0U;
  #line 3853 
  lq = 0U;
  #line 3854 
  nq = 0U;
  #line 3855 
  eq = 0U;
  #line 3856 
  pubq = 0U;
  #line 3858 
  if ((unsigned int)priv->ep_tx_high_queue != 0U) 
                                                  #line 3859 
                                                  hq = (unsigned int)fops->page_num_hi;
  #line 3860 
  if ((unsigned int)priv->ep_tx_low_queue != 0U) 
                                                 #line 3861 
                                                 lq = (unsigned int)fops->page_num_lo;
  #line 3862 
  if ((unsigned int)priv->ep_tx_normal_queue != 0U) 
                                                    #line 3863 
                                                    nq = (unsigned int)fops->page_num_norm;
  #line 3865 
  val32 = (eq << 16) | nq;
  #line 3866 
  rtl8xxxu_write32(priv,(unsigned short)532,val32);
  #line 3868 
  pubq = ((((unsigned int)fops->total_page_num - hq) - lq) - nq) + 4294967295U;
  #line 3870 
  val32 = 2147483648U;
  #line 3871 
  val32 |= hq;
  #line 3872 
  val32 = (lq << 8) | val32;
  #line 3873 
  val32 = (pubq << 16) | val32;
  #line 3875 
  rtl8xxxu_write32(priv,(unsigned short)512,val32);
  #line 3876 
  return;
}

#line 3878  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
static int rtl8xxxu_init_device(struct ieee80211_hw *hw)
{
  #line 3883 
  bool macpower;
  #line 3884 
  int ret;
  #line 3885 
  u8 val8;
  #line 3886 
  u16 val16;
  #line 3887 
  u32 val32;
  #line 3880 
  struct rtl8xxxu_priv *priv = (struct rtl8xxxu_priv *)hw->priv;
  #line 3881 
  struct device *dev = & (priv->udev)->dev;
  #line 3882 
  struct rtl8xxxu_fileops *fops = priv->fops;
  #line 3890 
  val8 = rtl8xxxu_read8(priv,(unsigned short)256);
  #line 3891 
  val16 = rtl8xxxu_read16(priv,(unsigned short)8);
  #line 3897 
  if ((unsigned int)val8 == 234U || ((unsigned long)val16 & 2048UL) == 0UL) 
    #line 3898 
    macpower = (_Bool)0; else 
                              #line 3900 
                              macpower = (_Bool)1;
  #line 3902 
  if ((unsigned int)fops->needs_full_init != 0U) 
                                                 #line 3903 
                                                 macpower = (_Bool)0;
  #line 3905 
  ret = (*(fops->power_on))(priv);
  #line 3906 
  if (ret < 0) {
    #line 3907 
    _dev_warn(dev,(char *)"%s: Failed power on\n",(char *)"rtl8xxxu_init_device");
    #line 3908 
    goto exit;
  }
  #line 3911 
  if (! macpower) 
                  #line 3912 
                  rtl8xxxu_init_queue_reserved_page(priv);
  #line 3914 
  ret = rtl8xxxu_init_queue_priority(priv);
  {
    #line 3915 
    bool branch;
    #line 3915 
    struct _ddebug __UNIQUE_ID_ddebug592 = {.modname = (char *)"rtl8xxxu", .function = (char *)"rtl8xxxu_init_device", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c", .format = (char *)"%s: init_queue_priority %i\n", .lineno = (unsigned int)3915U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
    #line 3915 
    branch = arch_static_branch(& __UNIQUE_ID_ddebug592.key.dd_key_false.key,(_Bool)0);
    #line 3915 
    if ((long)((long)((int)branch != 0)) != 0L) 
                                                #line 3915 
                                                __dynamic_dev_dbg(& __UNIQUE_ID_ddebug592,dev,(char *)"%s: init_queue_priority %i\n",(char *)"rtl8xxxu_init_device",ret);
  }
  #line 3916 
  if (ret != 0) 
                #line 3917 
                goto exit;
  #line 3922 
  rtl8xxxu_write16(priv,(unsigned short)278,(unsigned short)((int)fops->trxff_boundary));
  #line 3924 
  ret = rtl8xxxu_download_firmware(priv);
  {
    #line 3925 
    bool branch_0;
    #line 3925 
    struct _ddebug __UNIQUE_ID_ddebug593 = {.modname = (char *)"rtl8xxxu", .function = (char *)"rtl8xxxu_init_device", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c", .format = (char *)"%s: download_firmware %i\n", .lineno = (unsigned int)3925U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
    #line 3925 
    branch_0 = arch_static_branch(& __UNIQUE_ID_ddebug593.key.dd_key_false.key,(_Bool)0);
    #line 3925 
    if ((long)((long)((int)branch_0 != 0)) != 0L) 
                                                  #line 3925 
                                                  __dynamic_dev_dbg(& __UNIQUE_ID_ddebug593,dev,(char *)"%s: download_firmware %i\n",(char *)"rtl8xxxu_init_device",ret);
  }
  #line 3926 
  if (ret != 0) 
                #line 3927 
                goto exit;
  #line 3928 
  ret = rtl8xxxu_start_firmware(priv);
  {
    #line 3929 
    bool branch_1;
    #line 3929 
    struct _ddebug __UNIQUE_ID_ddebug594 = {.modname = (char *)"rtl8xxxu", .function = (char *)"rtl8xxxu_init_device", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c", .format = (char *)"%s: start_firmware %i\n", .lineno = (unsigned int)3929U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
    #line 3929 
    branch_1 = arch_static_branch(& __UNIQUE_ID_ddebug594.key.dd_key_false.key,(_Bool)0);
    #line 3929 
    if ((long)((long)((int)branch_1 != 0)) != 0L) 
                                                  #line 3929 
                                                  __dynamic_dev_dbg(& __UNIQUE_ID_ddebug594,dev,(char *)"%s: start_firmware %i\n",(char *)"rtl8xxxu_init_device",ret);
  }
  #line 3930 
  if (ret != 0) 
                #line 3931 
                goto exit;
  #line 3933 
  if (fops->phy_init_antenna_selection != (void (*)(struct rtl8xxxu_priv *))0) 
    #line 3934 
    (*(fops->phy_init_antenna_selection))(priv);
  #line 3936 
  ret = rtl8xxxu_init_mac(priv);
  {
    #line 3938 
    bool branch_2;
    #line 3938 
    struct _ddebug __UNIQUE_ID_ddebug595 = {.modname = (char *)"rtl8xxxu", .function = (char *)"rtl8xxxu_init_device", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c", .format = (char *)"%s: init_mac %i\n", .lineno = (unsigned int)3938U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
    #line 3938 
    branch_2 = arch_static_branch(& __UNIQUE_ID_ddebug595.key.dd_key_false.key,(_Bool)0);
    #line 3938 
    if ((long)((long)((int)branch_2 != 0)) != 0L) 
                                                  #line 3938 
                                                  __dynamic_dev_dbg(& __UNIQUE_ID_ddebug595,dev,(char *)"%s: init_mac %i\n",(char *)"rtl8xxxu_init_device",ret);
  }
  #line 3939 
  if (ret != 0) 
                #line 3940 
                goto exit;
  #line 3942 
  ret = rtl8xxxu_init_phy_bb(priv);
  {
    #line 3943 
    bool branch_3;
    #line 3943 
    struct _ddebug __UNIQUE_ID_ddebug596 = {.modname = (char *)"rtl8xxxu", .function = (char *)"rtl8xxxu_init_device", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c", .format = (char *)"%s: init_phy_bb %i\n", .lineno = (unsigned int)3943U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
    #line 3943 
    branch_3 = arch_static_branch(& __UNIQUE_ID_ddebug596.key.dd_key_false.key,(_Bool)0);
    #line 3943 
    if ((long)((long)((int)branch_3 != 0)) != 0L) 
                                                  #line 3943 
                                                  __dynamic_dev_dbg(& __UNIQUE_ID_ddebug596,dev,(char *)"%s: init_phy_bb %i\n",(char *)"rtl8xxxu_init_device",ret);
  }
  #line 3944 
  if (ret != 0) 
                #line 3945 
                goto exit;
  #line 3947 
  ret = (*(fops->init_phy_rf))(priv);
  #line 3948 
  if (ret != 0) 
                #line 3949 
                goto exit;
  #line 3952 
  if (priv->rtl_chip != (unsigned int)RTL8723B && priv->rtl_chip != (unsigned int)RTL8192E) 
    #line 3953 
    rtl8xxxu_write32(priv,(unsigned short)2052,3U);
  #line 3955 
  val32 = 50332512U;
  #line 3958 
  if ((unsigned int)priv->no_pape == 0U) 
                                         #line 3959 
                                         val32 |= 67109888U;
  #line 3962 
  rtl8xxxu_write32(priv,(unsigned short)2160,val32);
  #line 3965 
  if (priv->rtl_chip != (unsigned int)RTL8192E) 
                                                #line 3966 
                                                rtl8xxxu_write32(priv,(unsigned short)2144,1727398416U);
  #line 3968 
  if (! macpower) {
    #line 3972 
    val8 = (unsigned char)((unsigned int)fops->total_page_num + 1U);
    #line 3974 
    rtl8xxxu_write8(priv,(unsigned short)1060,(unsigned char)((int)val8));
    #line 3975 
    rtl8xxxu_write8(priv,(unsigned short)1061,(unsigned char)((int)val8));
    #line 3976 
    rtl8xxxu_write8(priv,(unsigned short)1117,(unsigned char)((int)val8));
    #line 3977 
    rtl8xxxu_write8(priv,(unsigned short)276,(unsigned char)((int)val8));
    #line 3978 
    rtl8xxxu_write8(priv,(unsigned short)521,(unsigned char)((int)val8));
  }
  #line 3985 
  val8 = (unsigned char)((int)fops->pbp_rx | ((int)fops->pbp_tx << 4));
  #line 3987 
  if (priv->rtl_chip != (unsigned int)RTL8192E) 
                                                #line 3988 
                                                rtl8xxxu_write8(priv,(unsigned short)260,(unsigned char)((int)val8));
  {
    #line 3990 
    bool branch_4;
    #line 3990 
    struct _ddebug __UNIQUE_ID_ddebug597 = {.modname = (char *)"rtl8xxxu", .function = (char *)"rtl8xxxu_init_device", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c", .format = (char *)"%s: macpower %i\n", .lineno = (unsigned int)3990U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
    #line 3990 
    branch_4 = arch_static_branch(& __UNIQUE_ID_ddebug597.key.dd_key_false.key,(_Bool)0);
    #line 3990 
    if ((long)((long)((int)branch_4 != 0)) != 0L) 
                                                  #line 3990 
                                                  __dynamic_dev_dbg(& __UNIQUE_ID_ddebug597,dev,(char *)"%s: macpower %i\n",(char *)"rtl8xxxu_init_device",(int)macpower);
  }
  #line 3991 
  if (! macpower) {
    #line 3992 
    ret = (*(fops->llt_init))(priv);
    #line 3993 
    if (ret != 0) {
      #line 3994 
      _dev_warn(dev,(char *)"%s: LLT table init failed\n",(char *)"rtl8xxxu_init_device");
      #line 3995 
      goto exit;
    }
    #line 4001 
    (*(fops->usb_quirks))(priv);
    #line 4006 
    if ((unsigned int)fops->has_tx_report != 0U) {
      #line 4007 
      val8 = rtl8xxxu_read8(priv,(unsigned short)1260);
      #line 4008 
      val8 = (unsigned char)((unsigned int)val8 | 2U);
      #line 4009 
      rtl8xxxu_write8(priv,(unsigned short)1260,(unsigned char)((int)val8));
      #line 4011 
      rtl8xxxu_write8(priv,(unsigned short)1261,(unsigned char)2);
      #line 4013 
      rtl8xxxu_write16(priv,(unsigned short)1264,(unsigned short)52720);
      #line 4016 
      val8 = rtl8xxxu_read8(priv,(unsigned short)163);
      #line 4017 
      val8 = (unsigned char)((unsigned int)val8 & 248U);
      #line 4018 
      rtl8xxxu_write8(priv,(unsigned short)163,(unsigned char)((int)val8));
    }
  }
  #line 4025 
  rtl8xxxu_write8(priv,(unsigned short)1551,(unsigned char)4);
  #line 4027 
  if (priv->rtl_chip == (unsigned int)RTL8192E) {
    #line 4028 
    rtl8xxxu_write32(priv,(unsigned short)176,0U);
    #line 4029 
    rtl8xxxu_write32(priv,(unsigned short)184,0U);
  }
  else {
    #line 4034 
    rtl8xxxu_write32(priv,(unsigned short)292,4294967295U);
    #line 4035 
    rtl8xxxu_write32(priv,(unsigned short)288,4294967295U);
  }
  #line 4038 
  rtl8xxxu_set_mac(priv);
  #line 4039 
  rtl8xxxu_set_linktype(priv,(enum nl80211_iftype)NL80211_IFTYPE_STATION);
  #line 4044 
  val32 = 1879072782U;
  #line 4047 
  rtl8xxxu_write32(priv,(unsigned short)1544,val32);
  #line 4052 
  rtl8xxxu_write32(priv,(unsigned short)1568,4294967295U);
  #line 4053 
  rtl8xxxu_write32(priv,(unsigned short)1572,4294967295U);
  #line 4058 
  val32 = rtl8xxxu_read32(priv,(unsigned short)1088);
  #line 4059 
  val32 &= 4293918720U;
  #line 4060 
  val32 |= 1048561U;
  #line 4061 
  rtl8xxxu_write32(priv,(unsigned short)1088,val32);
  #line 4064 
  rtl8xxxu_set_spec_sifs(priv,(unsigned short)16,(unsigned short)16);
  #line 4065 
  rtl8xxxu_set_retry(priv,(unsigned short)48,(unsigned short)48);
  #line 4066 
  rtl8xxxu_set_spec_sifs(priv,(unsigned short)10,(unsigned short)16);
  #line 4071 
  rtl8xxxu_write16(priv,(unsigned short)1594,(unsigned short)4106);
  #line 4074 
  rtl8xxxu_write16(priv,(unsigned short)1300,(unsigned short)4106);
  #line 4077 
  rtl8xxxu_write16(priv,(unsigned short)1302,(unsigned short)4106);
  #line 4080 
  rtl8xxxu_write32(priv,(unsigned short)1288,6202411U);
  #line 4081 
  rtl8xxxu_write32(priv,(unsigned short)1292,42063U);
  #line 4082 
  rtl8xxxu_write32(priv,(unsigned short)1284,6202148U);
  #line 4083 
  rtl8xxxu_write32(priv,(unsigned short)1280,3121702U);
  #line 4086 
  rtl8xxxu_write32(priv,(unsigned short)1072,0U);
  #line 4087 
  rtl8xxxu_write32(priv,(unsigned short)1076,268960772U);
  #line 4088 
  rtl8xxxu_write32(priv,(unsigned short)1080,67305985U);
  #line 4089 
  rtl8xxxu_write32(priv,(unsigned short)1084,134678021U);
  #line 4091 
  val8 = rtl8xxxu_read8(priv,(unsigned short)1056);
  #line 4092 
  val8 = (unsigned char)((unsigned int)val8 | 128U);
  #line 4093 
  rtl8xxxu_write8(priv,(unsigned short)1056,(unsigned char)((int)val8));
  #line 4096 
  rtl8xxxu_write8(priv,(unsigned short)1600,(unsigned char)64);
  #line 4101 
  val16 = (unsigned short)4112U;
  #line 4102 
  rtl8xxxu_write16(priv,(unsigned short)1360,(unsigned short)((int)val16));
  #line 4103 
  rtl8xxxu_write16(priv,(unsigned short)1344,(unsigned short)25604);
  #line 4104 
  rtl8xxxu_write8(priv,(unsigned short)1368,(unsigned char)5);
  #line 4105 
  rtl8xxxu_write8(priv,(unsigned short)1369,(unsigned char)2);
  #line 4106 
  rtl8xxxu_write16(priv,(unsigned short)1296,(unsigned short)26127);
  #line 4111 
  if (priv->rtl_chip == (unsigned int)RTL8723B) {
    #line 4115 
    val8 = rtl8xxxu_read8(priv,(unsigned short)656);
    #line 4116 
    val8 = (unsigned char)((unsigned int)val8 & 207U);
    #line 4117 
    val8 = (unsigned char)((unsigned int)val8 | 16U);
    #line 4118 
    val8 = (unsigned char)((unsigned int)val8 | 14U);
    #line 4119 
    rtl8xxxu_write8(priv,(unsigned short)656,(unsigned char)((int)val8));
    #line 4124 
    val8 = rtl8xxxu_read8(priv,(unsigned short)1223);
    #line 4125 
    val8 = (unsigned char)((unsigned int)val8 | 128U);
    #line 4126 
    rtl8xxxu_write8(priv,(unsigned short)1223,(unsigned char)((int)val8));
    #line 4128 
    rtl8xxxu_write16(priv,(unsigned short)1226,(unsigned short)3092);
    #line 4129 
    rtl8xxxu_write8(priv,(unsigned short)1110,(unsigned char)94);
    #line 4130 
    rtl8xxxu_write32(priv,(unsigned short)1112,4294967295U);
    #line 4131 
    rtl8xxxu_write8(priv,(unsigned short)1548,(unsigned char)24);
    #line 4132 
    rtl8xxxu_write8(priv,(unsigned short)1298,(unsigned char)0);
    #line 4133 
    rtl8xxxu_write8(priv,(unsigned short)1372,(unsigned char)80);
    #line 4134 
    rtl8xxxu_write8(priv,(unsigned short)1592,(unsigned char)80);
    #line 4136 
    val8 = rtl8xxxu_read8(priv,(unsigned short)28);
    #line 4137 
    val8 = (unsigned char)((unsigned int)val8 | 96U);
    #line 4138 
    rtl8xxxu_write8(priv,(unsigned short)28,(unsigned char)((int)val8));
  }
  #line 4141 
  if (fops->init_aggregation != (void (*)(struct rtl8xxxu_priv *))0) 
    #line 4142 
    (*(fops->init_aggregation))(priv);
  #line 4147 
  val32 = rtl8xxxu_read32(priv,(unsigned short)2048);
  #line 4148 
  val32 |= 50331648U;
  #line 4149 
  rtl8xxxu_write32(priv,(unsigned short)2048,val32);
  #line 4154 
  rtl8xxxu_write32(priv,(unsigned short)1648,3221225472U);
  #line 4159 
  (*(fops->set_tx_power))(priv,1,(_Bool)0);
  #line 4162 
  if (priv->rtl_chip != (unsigned int)RTL8192E) {
    #line 4163 
    val8 = rtl8xxxu_read8(priv,(unsigned short)78);
    #line 4164 
    val8 = (unsigned char)((unsigned int)val8 | 128U);
    #line 4165 
    rtl8xxxu_write8(priv,(unsigned short)78,(unsigned char)((int)val8));
  }
  #line 4168 
  rtl8xxxu_write8(priv,(unsigned short)1059,(unsigned char)255);
  #line 4171 
  rtl8xxxu_write32(priv,(unsigned short)1228,33685503U);
  #line 4173 
  rtl8xxxu_write16(priv,(unsigned short)1120,(unsigned short)0);
  #line 4175 
  if (fops->init_statistics != (void (*)(struct rtl8xxxu_priv *))0) 
                                                                    #line 4176 
                                                                    (*(fops->init_statistics))(priv);
  #line 4178 
  if (priv->rtl_chip == (unsigned int)RTL8192E) {
    #line 4183 
    val8 = rtl8xxxu_read8(priv,(unsigned short)1222);
    #line 4184 
    val8 = (unsigned char)((unsigned int)val8 & 247U);
    #line 4185 
    rtl8xxxu_write8(priv,(unsigned short)1222,(unsigned char)((int)val8));
    #line 4189 
    rtl8xxxu_write8(priv,(unsigned short)62,(unsigned char)0);
  }
  #line 4192 
  rtl8723a_phy_lc_calibrate(priv);
  #line 4194 
  (*(fops->phy_iq_calibrate))(priv);
  #line 4199 
  if ((unsigned int)fops->gen2_thermal_meter != 0U) 
                                                    #line 4200 
                                                    rtl8xxxu_write_rfreg(priv,(enum rtl8xxxu_rfpath)RF_A,(unsigned char)66,228600U); else 
                                                                    #line 4203 
                                                                    rtl8xxxu_write_rfreg(priv,(enum rtl8xxxu_rfpath)RF_A,(unsigned char)36,96U);
  #line 4206 
  val8 = (unsigned char)235U;
  #line 4207 
  rtl8xxxu_write8(priv,(unsigned short)1618,(unsigned char)((int)val8));
  #line 4209 
  if (priv->rtl_chip == (unsigned int)RTL8723A) {
    #line 4215 
    val32 = rtl8xxxu_read32(priv,(unsigned short)2048);
    #line 4216 
    if ((val32 & 4278190080U) != 2197815296U) {
      #line 4217 
      val32 |= 16777216U;
      #line 4218 
      rtl8xxxu_write32(priv,(unsigned short)2048,val32);
    }
  }
  else 
    #line 4220 
    if (priv->rtl_chip == (unsigned int)RTL8192E) 
                                                  #line 4221 
                                                  rtl8xxxu_write8(priv,(unsigned short)65112,(unsigned char)0);
  #line 4224 
  val32 = rtl8xxxu_read32(priv,(unsigned short)1056);
  #line 4225 
  val32 |= 4096U;
  #line 4227 
  rtl8xxxu_write32(priv,(unsigned short)1056,val32);
  #line 4229 
  if (priv->rtl_chip == (unsigned int)RTL8192E) {
    #line 4233 
    val32 = rtl8xxxu_read32(priv,(unsigned short)16);
    #line 4234 
    rtl8xxxu_write8(priv,(unsigned short)20,(unsigned char)117);
    #line 4235 
    val32 &= 4293922815U;
    #line 4236 
    val32 |= 516096U;
    #line 4237 
    rtl8xxxu_write32(priv,(unsigned short)16,val32);
  }
  #line 4239 
  exit: 
        #line 4239 
  ;
  #line 4240 
  return ret;
}

#line 4243  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
static void rtl8xxxu_cam_write(struct rtl8xxxu_priv *priv, struct ieee80211_key_conf *key, u8 *mac)
{
  #line 4246 
  u32 cmd;
  #line 4246 
  u32 val32;
  #line 4246 
  u32 addr;
  #line 4246 
  u32 ctrl;
  #line 4247 
  int j;
  #line 4247 
  int i;
  #line 4247 
  int tmp_debug;
  #line 4249 
  tmp_debug = rtl8xxxu_debug;
  #line 4250 
  if ((rtl8xxxu_debug & 1024) != 0) 
                                    #line 4251 
                                    rtl8xxxu_debug |= 1;
  #line 4257 
  addr = (unsigned int)((int)key->keyidx << 3);
  #line 4258 
  ctrl = (((key->cipher << 2) & 60U) | (unsigned int)key->keyidx) | 32768U;
  #line 4260 
  j = 5;
  #line 4260 
  while (j >= 0) {
    #line 4261 
    switch (j) {
      #line 4262 
      case 0: 
              #line 4262 
      ;
      #line 4263 
      val32 = ((unsigned int)((int)*mac << 16) | ctrl) | (unsigned int)((int)*(mac + 1U) << 24);
      #line 4264 
      break;
      #line 4265 
      case 1: 
              #line 4265 
      ;
      #line 4266 
      val32 = (unsigned int)((((int)*(mac + 2U) | ((int)*(mac + 3U) << 8)) | ((int)*(mac + 4U) << 16)) | ((int)*(mac + 5U) << 24));
      #line 4268 
      break;
      #line 4269 
      default: 
               #line 4269 
      ;
      #line 4270 
      i = (j + -2) << 2;
      #line 4271 
      val32 = (unsigned int)((((int)key->key[i] | ((int)key->key[i + 1] << 8)) | ((int)key->key[i + 2] << 16)) | ((int)key->key[i + 3] << 24));
      #line 4273 
      break;
    }
    #line 4276 
    rtl8xxxu_write32(priv,(unsigned short)1652,val32);
    #line 4277 
    cmd = (addr + (unsigned int)j) | 2147549184U;
    #line 4278 
    rtl8xxxu_write32(priv,(unsigned short)1648,cmd);
    #line 4279 
    __const_udelay(429500UL);
    #line 4260 
    j --;
  }
  #line 4282 
  rtl8xxxu_debug = tmp_debug;
  #line 4283 
  return;
}

#line 4285  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
static void rtl8xxxu_sw_scan_start(struct ieee80211_hw *hw, struct ieee80211_vif *vif, u8 *mac)
{
  #line 4289 
  u8 val8;
  #line 4288 
  struct rtl8xxxu_priv *priv = (struct rtl8xxxu_priv *)hw->priv;
  #line 4291 
  val8 = rtl8xxxu_read8(priv,(unsigned short)1360);
  #line 4292 
  val8 = (unsigned char)((unsigned int)val8 | 16U);
  #line 4293 
  rtl8xxxu_write8(priv,(unsigned short)1360,(unsigned char)((int)val8));
  #line 4294 
  return;
}

#line 4296  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
static void rtl8xxxu_sw_scan_complete(struct ieee80211_hw *hw, struct ieee80211_vif *vif)
{
  #line 4300 
  u8 val8;
  #line 4299 
  struct rtl8xxxu_priv *priv = (struct rtl8xxxu_priv *)hw->priv;
  #line 4302 
  val8 = rtl8xxxu_read8(priv,(unsigned short)1360);
  #line 4303 
  val8 = (unsigned char)((unsigned int)val8 & 239U);
  #line 4304 
  rtl8xxxu_write8(priv,(unsigned short)1360,(unsigned char)((int)val8));
  #line 4305 
  return;
}

#line 4307  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
void rtl8xxxu_update_rate_mask(struct rtl8xxxu_priv *priv, u32 ramask, u8 rateid, int sgi)
{
  #line 4310 
  struct h2c_cmd h2c;
  #line 4312 
  memset((void *)(& h2c),0,8UL);
  #line 4314 
  h2c.__anonCompField_h2c_cmd_197.ramask.cmd = (unsigned char)134U;
  #line 4315 
  h2c.__anonCompField_h2c_cmd_197.ramask.mask_lo = (unsigned short)ramask;
  #line 4316 
  h2c.__anonCompField_h2c_cmd_197.ramask.mask_hi = (unsigned short)(ramask >> 16);
  #line 4318 
  h2c.__anonCompField_h2c_cmd_197.ramask.arg = (unsigned char)128U;
  #line 4319 
  if (sgi != 0) 
                #line 4320 
                h2c.__anonCompField_h2c_cmd_197.ramask.arg = (unsigned char)((unsigned int)h2c.__anonCompField_h2c_cmd_197.ramask.arg | 32U);
  {
    #line 4322 
    bool branch;
    #line 4322 
    struct _ddebug __UNIQUE_ID_ddebug598 = {.modname = (char *)"rtl8xxxu", .function = (char *)"rtl8xxxu_update_rate_mask", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c", .format = (char *)"%s: rate mask %08x, arg %02x, size %zi\n", .lineno = (unsigned int)4322U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
    #line 4322 
    branch = arch_static_branch(& __UNIQUE_ID_ddebug598.key.dd_key_false.key,(_Bool)0);
    #line 4322 
    if ((long)((long)((int)branch != 0)) != 0L) 
                                                #line 4322 
                                                __dynamic_dev_dbg(& __UNIQUE_ID_ddebug598,& (priv->udev)->dev,(char *)"%s: rate mask %08x, arg %02x, size %zi\n",(char *)"rtl8xxxu_update_rate_mask",ramask,(int)h2c.__anonCompField_h2c_cmd_197.ramask.arg,6UL);
  }
  #line 4324 
  rtl8xxxu_gen1_h2c_cmd(priv,& h2c,6);
  #line 4325 
  return;
}

#line 4327  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
void rtl8xxxu_gen2_update_rate_mask(struct rtl8xxxu_priv *priv, u32 ramask, u8 rateid, int sgi)
{
  #line 4330 
  struct h2c_cmd h2c;
  #line 4331 
  u8 bw = (unsigned char)0U;
  #line 4333 
  memset((void *)(& h2c),0,8UL);
  #line 4335 
  h2c.__anonCompField_h2c_cmd_197.b_macid_cfg.cmd = (unsigned char)64U;
  #line 4336 
  h2c.__anonCompField_h2c_cmd_197.b_macid_cfg.ramask0 = (unsigned char)ramask;
  #line 4337 
  h2c.__anonCompField_h2c_cmd_197.b_macid_cfg.ramask1 = (unsigned char)(ramask >> 8);
  #line 4338 
  h2c.__anonCompField_h2c_cmd_197.b_macid_cfg.ramask2 = (unsigned char)(ramask >> 16);
  #line 4339 
  h2c.__anonCompField_h2c_cmd_197.b_macid_cfg.ramask3 = (unsigned char)(ramask >> 24);
  #line 4341 
  h2c.__anonCompField_h2c_cmd_197.ramask.arg = (unsigned char)128U;
  #line 4342 
  h2c.__anonCompField_h2c_cmd_197.b_macid_cfg.data1 = rateid;
  #line 4343 
  if (sgi != 0) 
                #line 4344 
                h2c.__anonCompField_h2c_cmd_197.b_macid_cfg.data1 = (unsigned char)((unsigned int)h2c.__anonCompField_h2c_cmd_197.b_macid_cfg.data1 | 128U);
  #line 4346 
  h2c.__anonCompField_h2c_cmd_197.b_macid_cfg.data2 = bw;
  {
    #line 4348 
    bool branch;
    #line 4348 
    struct _ddebug __UNIQUE_ID_ddebug599 = {.modname = (char *)"rtl8xxxu", .function = (char *)"rtl8xxxu_gen2_update_rate_mask", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c", .format = (char *)"%s: rate mask %08x, arg %02x, size %zi\n", .lineno = (unsigned int)4348U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
    #line 4348 
    branch = arch_static_branch(& __UNIQUE_ID_ddebug599.key.dd_key_false.key,(_Bool)0);
    #line 4348 
    if ((long)((long)((int)branch != 0)) != 0L) 
                                                #line 4348 
                                                __dynamic_dev_dbg(& __UNIQUE_ID_ddebug599,& (priv->udev)->dev,(char *)"%s: rate mask %08x, arg %02x, size %zi\n",(char *)"rtl8xxxu_gen2_update_rate_mask",ramask,(int)h2c.__anonCompField_h2c_cmd_197.ramask.arg,8UL);
  }
  #line 4350 
  rtl8xxxu_gen2_h2c_cmd(priv,& h2c,8);
  #line 4351 
  return;
}

#line 4353  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
void rtl8xxxu_gen1_report_connect(struct rtl8xxxu_priv *priv, u8 macid, bool connect)
{
  #line 4356 
  struct h2c_cmd h2c;
  #line 4358 
  memset((void *)(& h2c),0,8UL);
  #line 4360 
  h2c.__anonCompField_h2c_cmd_197.joinbss.cmd = (unsigned char)2U;
  #line 4362 
  if ((int)connect != 0) 
                         #line 4363 
                         h2c.__anonCompField_h2c_cmd_197.joinbss.data = (unsigned char)1U; else 
                                                                    #line 4365 
                                                                    h2c.__anonCompField_h2c_cmd_197.joinbss.data = (unsigned char)0U;
  #line 4367 
  rtl8xxxu_gen1_h2c_cmd(priv,& h2c,2);
  #line 4368 
  return;
}

#line 4370  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
void rtl8xxxu_gen2_report_connect(struct rtl8xxxu_priv *priv, u8 macid, bool connect)
{
  #line 4372 
  return;
}

#line 4394  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
void rtl8xxxu_gen1_init_aggregation(struct rtl8xxxu_priv *priv)
{
  #line 4396 
  u8 agg_ctrl;
  #line 4396 
  u8 usb_spec;
  #line 4396 
  u8 page_thresh;
  #line 4396 
  u8 timeout;
  #line 4398 
  usb_spec = rtl8xxxu_read8(priv,(unsigned short)65109);
  #line 4399 
  usb_spec = (unsigned char)((unsigned int)usb_spec & 247U);
  #line 4400 
  rtl8xxxu_write8(priv,(unsigned short)65109,(unsigned char)((int)usb_spec));
  #line 4402 
  agg_ctrl = rtl8xxxu_read8(priv,(unsigned short)268);
  #line 4403 
  agg_ctrl = (unsigned char)((unsigned int)agg_ctrl & 251U);
  #line 4405 
  if (! rtl8xxxu_dma_aggregation) {
    #line 4406 
    rtl8xxxu_write8(priv,(unsigned short)268,(unsigned char)((int)agg_ctrl));
    #line 4407 
    return;
  }
  #line 4410 
  agg_ctrl = (unsigned char)((unsigned int)agg_ctrl | 4U);
  #line 4411 
  rtl8xxxu_write8(priv,(unsigned short)268,(unsigned char)((int)agg_ctrl));
  #line 4426 
  page_thresh = (unsigned char)((priv->fops)->rx_agg_buf_size / 512);
  #line 4427 
  if (rtl8xxxu_dma_agg_pages >= 0) 
    #line 4428 
    if ((int)page_thresh >= rtl8xxxu_dma_agg_pages) 
                                                    #line 4429 
                                                    timeout = page_thresh;
    else 
      #line 4430 
      if (rtl8xxxu_dma_agg_pages <= 6) 
                                       #line 4431 
                                       _dev_err(& (priv->udev)->dev,(char *)"%s: dma_agg_pages=%i too small, minimum is 6\n",(char *)"rtl8xxxu_gen1_init_aggregation",rtl8xxxu_dma_agg_pages); else 
                                                                    #line 4435 
                                                                    _dev_err(& (priv->udev)->dev,(char *)"%s: dma_agg_pages=%i larger than limit %i\n",(char *)"rtl8xxxu_gen1_init_aggregation",rtl8xxxu_dma_agg_pages,(int)page_thresh);
  #line 4439 
  rtl8xxxu_write8(priv,(unsigned short)640,(unsigned char)((int)page_thresh));
  #line 4445 
  timeout = (unsigned char)4U;
  #line 4447 
  if (rtl8xxxu_dma_agg_timeout >= 0) 
    #line 4448 
    if (rtl8xxxu_dma_agg_timeout <= 127) 
                                         #line 4449 
                                         timeout = (unsigned char)rtl8xxxu_dma_agg_timeout; else 
                                                                    #line 4451 
                                                                    _dev_err(& (priv->udev)->dev,(char *)"%s: Invalid dma_agg_timeout: %i\n",(char *)"rtl8xxxu_gen1_init_aggregation",rtl8xxxu_dma_agg_timeout);
  #line 4456 
  rtl8xxxu_write8(priv,(unsigned short)641,(unsigned char)((int)timeout));
  #line 4457 
  rtl8xxxu_write8(priv,(unsigned short)65115,(unsigned char)((int)timeout));
  #line 4458 
  priv->rx_buf_aggregation = (unsigned int)1U;
  #line 4459 
  return;
}

#line 4461  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
static void rtl8xxxu_set_basic_rates(struct rtl8xxxu_priv *priv, u32 rate_cfg)
{
  #line 4463 
  u32 val32;
  #line 4464 
  u8 rate_idx = (unsigned char)0U;
  #line 4466 
  rate_cfg &= 1048575U;
  #line 4468 
  val32 = rtl8xxxu_read32(priv,(unsigned short)1088);
  #line 4469 
  val32 &= 4293918720U;
  #line 4470 
  val32 |= rate_cfg;
  #line 4471 
  rtl8xxxu_write32(priv,(unsigned short)1088,val32);
  {
    #line 4473 
    bool branch;
    #line 4473 
    struct _ddebug __UNIQUE_ID_ddebug600 = {.modname = (char *)"rtl8xxxu", .function = (char *)"rtl8xxxu_set_basic_rates", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c", .format = (char *)"%s: rates %08x\n", .lineno = (unsigned int)4473U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
    #line 4473 
    branch = arch_static_branch(& __UNIQUE_ID_ddebug600.key.dd_key_false.key,(_Bool)0);
    #line 4473 
    if ((long)((long)((int)branch != 0)) != 0L) 
                                                #line 4473 
                                                __dynamic_dev_dbg(& __UNIQUE_ID_ddebug600,& (priv->udev)->dev,(char *)"%s: rates %08x\n",(char *)"rtl8xxxu_set_basic_rates",rate_cfg);
  }
  #line 4475 
  while (rate_cfg != 0U) {
    #line 4476 
    rate_cfg >>= 1;
    #line 4477 
    rate_idx = (u8)((int)rate_idx + 1);
  }
  #line 4479 
  rtl8xxxu_write8(priv,(unsigned short)1152,(unsigned char)((int)rate_idx));
  #line 4480 
  return;
}

#line 4483  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
static u16 rtl8xxxu_wireless_mode(struct ieee80211_hw *hw, struct ieee80211_sta *sta)
{
  #line 4485 
  u16 network_type = (unsigned short)0U;
  #line 4487 
  if ((hw->conf.chandef.chan)->band == (unsigned int)NL80211_BAND_5GHZ) {
    #line 4488 
    if ((int)sta->vht_cap.vht_supported != 0) 
                                              #line 4489 
                                              network_type = (unsigned short)64U;
    else 
      #line 4490 
      if ((int)sta->ht_cap.ht_supported != 0) 
                                              #line 4491 
                                              network_type = (unsigned short)16U;
    #line 4493 
    network_type = (unsigned short)((unsigned int)network_type | 4U);
  }
  else {
    #line 4495 
    if ((int)sta->vht_cap.vht_supported != 0) 
                                              #line 4496 
                                              network_type = (unsigned short)64U;
    else 
      #line 4497 
      if ((int)sta->ht_cap.ht_supported != 0) 
                                              #line 4498 
                                              network_type = (unsigned short)8U;
    #line 4500 
    if (sta->supp_rates[0] <= 15U) 
                                   #line 4501 
                                   network_type = (unsigned short)((unsigned int)network_type | 1U);
    else 
      #line 4502 
      if ((sta->supp_rates[0] & 15U) != 0U) 
                                            #line 4503 
                                            network_type = (unsigned short)((unsigned int)network_type | 3U); else 
                                                                    #line 4505 
                                                                    network_type = (unsigned short)((unsigned int)network_type | 2U);
  }
  #line 4508 
  return network_type;
}

#line 4512  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
static void rtl8xxxu_bss_info_changed(struct ieee80211_hw *hw, struct ieee80211_vif *vif, struct ieee80211_bss_conf *bss_conf, u32 changed)
{
  #line 4517 
  struct ieee80211_sta *sta;
  #line 4518 
  u32 val32;
  #line 4519 
  u8 val8;
  #line 4515 
  struct rtl8xxxu_priv *priv = (struct rtl8xxxu_priv *)hw->priv;
  #line 4516 
  struct device *dev = & (priv->udev)->dev;
  #line 4521 
  if ((changed & 1U) != 0U) {
    {
      #line 4522 
      bool branch;
      #line 4522 
      struct _ddebug __UNIQUE_ID_ddebug601 = {.modname = (char *)"rtl8xxxu", .function = (char *)"rtl8xxxu_bss_info_changed", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c", .format = (char *)"Changed ASSOC: %i!\n", .lineno = (unsigned int)4522U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
      #line 4522 
      branch = arch_static_branch(& __UNIQUE_ID_ddebug601.key.dd_key_false.key,(_Bool)0);
      #line 4522 
      if ((long)((long)((int)branch != 0)) != 0L) 
                                                  #line 4522 
                                                  __dynamic_dev_dbg(& __UNIQUE_ID_ddebug601,dev,(char *)"Changed ASSOC: %i!\n",(int)bss_conf->assoc);
    }
    #line 4524 
    rtl8xxxu_set_linktype(priv,vif->type);
    #line 4526 
    if ((int)bss_conf->assoc != 0) {
      #line 4527 
      u32 ramask;
      #line 4528 
      int sgi = 0;
      #line 4530 
      rcu_read_lock();
      #line 4531 
      sta = ieee80211_find_sta(vif,bss_conf->bssid);
      #line 4532 
      if (sta == (struct ieee80211_sta *)0) {
        #line 4533 
        _dev_info(dev,(char *)"%s: ASSOC no sta found\n",(char *)"rtl8xxxu_bss_info_changed");
        #line 4535 
        rcu_read_unlock();
        #line 4536 
        goto error;
      }
      #line 4539 
      if ((int)sta->ht_cap.ht_supported != 0) 
                                              #line 4540 
                                              _dev_info(dev,(char *)"%s: HT supported\n",(char *)"rtl8xxxu_bss_info_changed");
      #line 4541 
      if ((int)sta->vht_cap.vht_supported != 0) 
                                                #line 4542 
                                                _dev_info(dev,(char *)"%s: VHT supported\n",(char *)"rtl8xxxu_bss_info_changed");
      #line 4545 
      ramask = ((sta->supp_rates[0] & 4095U) | (unsigned int)((int)sta->ht_cap.mcs.rx_mask[0] << 12)) | (unsigned int)((int)sta->ht_cap.mcs.rx_mask[1] << 20);
      #line 4548 
      if (((int)sta->ht_cap.cap & 96) != 0) 
                                            #line 4550 
                                            sgi = 1;
      #line 4551 
      rcu_read_unlock();
      #line 4553 
      priv->vif = vif;
      #line 4554 
      priv->rssi_level = (unsigned char)0U;
      #line 4556 
      (*((priv->fops)->update_rate_mask))(priv,ramask,(unsigned char)0,sgi);
      #line 4558 
      rtl8xxxu_write8(priv,(unsigned short)1373,(unsigned char)255);
      #line 4560 
      rtl8xxxu_stop_tx_beacon(priv);
      #line 4563 
      rtl8xxxu_write16(priv,(unsigned short)1704,(unsigned short)((int)((unsigned int)bss_conf->aid | 49152U)));
      #line 4566 
      (*((priv->fops)->report_connect))(priv,(unsigned char)0,(_Bool)1);
    }
    else {
      #line 4568 
      val8 = rtl8xxxu_read8(priv,(unsigned short)1360);
      #line 4569 
      val8 = (unsigned char)((unsigned int)val8 | 16U);
      #line 4570 
      rtl8xxxu_write8(priv,(unsigned short)1360,(unsigned char)((int)val8));
      #line 4572 
      (*((priv->fops)->report_connect))(priv,(unsigned char)0,(_Bool)0);
    }
  }
  #line 4576 
  if ((changed & 4U) != 0U) {
    {
      #line 4577 
      bool branch_0;
      #line 4577 
      struct _ddebug __UNIQUE_ID_ddebug602 = {.modname = (char *)"rtl8xxxu", .function = (char *)"rtl8xxxu_bss_info_changed", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c", .format = (char *)"Changed ERP_PREAMBLE: Use short preamble %i\n", .lineno = (unsigned int)4577U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
      #line 4577 
      branch_0 = arch_static_branch(& __UNIQUE_ID_ddebug602.key.dd_key_false.key,(_Bool)0);
      #line 4577 
      if ((long)((long)((int)branch_0 != 0)) != 0L) 
                                                    #line 4577 
                                                    __dynamic_dev_dbg(& __UNIQUE_ID_ddebug602,dev,(char *)"Changed ERP_PREAMBLE: Use short preamble %i\n",(int)bss_conf->use_short_preamble);
    }
    #line 4579 
    val32 = rtl8xxxu_read32(priv,(unsigned short)1088);
    #line 4580 
    if ((int)bss_conf->use_short_preamble != 0) 
                                                #line 4581 
                                                val32 |= 8388608U; else 
                                                                    #line 4583 
                                                                    val32 &= 4286578687U;
    #line 4584 
    rtl8xxxu_write32(priv,(unsigned short)1088,val32);
  }
  #line 4587 
  if ((changed & 8U) != 0U) {
    {
      #line 4588 
      bool branch_1;
      #line 4588 
      struct _ddebug __UNIQUE_ID_ddebug603 = {.modname = (char *)"rtl8xxxu", .function = (char *)"rtl8xxxu_bss_info_changed", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c", .format = (char *)"Changed ERP_SLOT: short_slot_time %i\n", .lineno = (unsigned int)4588U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
      #line 4588 
      branch_1 = arch_static_branch(& __UNIQUE_ID_ddebug603.key.dd_key_false.key,(_Bool)0);
      #line 4588 
      if ((long)((long)((int)branch_1 != 0)) != 0L) 
                                                    #line 4588 
                                                    __dynamic_dev_dbg(& __UNIQUE_ID_ddebug603,dev,(char *)"Changed ERP_SLOT: short_slot_time %i\n",(int)bss_conf->use_short_slot);
    }
    #line 4591 
    if ((int)bss_conf->use_short_slot != 0) 
                                            #line 4592 
                                            val8 = (unsigned char)9U; else 
                                                                    #line 4594 
                                                                    val8 = (unsigned char)20U;
    #line 4595 
    rtl8xxxu_write8(priv,(unsigned short)1307,(unsigned char)((int)val8));
  }
  #line 4598 
  if ((changed & 128U) != 0U) {
    {
      #line 4599 
      bool branch_2;
      #line 4599 
      struct _ddebug __UNIQUE_ID_ddebug604 = {.modname = (char *)"rtl8xxxu", .function = (char *)"rtl8xxxu_bss_info_changed", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c", .format = (char *)"Changed BSSID!\n", .lineno = (unsigned int)4599U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
      #line 4599 
      branch_2 = arch_static_branch(& __UNIQUE_ID_ddebug604.key.dd_key_false.key,(_Bool)0);
      #line 4599 
      if ((long)((long)((int)branch_2 != 0)) != 0L) 
                                                    #line 4599 
                                                    __dynamic_dev_dbg(& __UNIQUE_ID_ddebug604,dev,(char *)"Changed BSSID!\n");
    }
    #line 4600 
    rtl8xxxu_set_bssid(priv,bss_conf->bssid);
  }
  #line 4603 
  if ((changed & 32U) != 0U) {
    {
      #line 4604 
      bool branch_3;
      #line 4604 
      struct _ddebug __UNIQUE_ID_ddebug605 = {.modname = (char *)"rtl8xxxu", .function = (char *)"rtl8xxxu_bss_info_changed", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c", .format = (char *)"Changed BASIC_RATES!\n", .lineno = (unsigned int)4604U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
      #line 4604 
      branch_3 = arch_static_branch(& __UNIQUE_ID_ddebug605.key.dd_key_false.key,(_Bool)0);
      #line 4604 
      if ((long)((long)((int)branch_3 != 0)) != 0L) 
                                                    #line 4604 
                                                    __dynamic_dev_dbg(& __UNIQUE_ID_ddebug605,dev,(char *)"Changed BASIC_RATES!\n");
    }
    #line 4605 
    rtl8xxxu_set_basic_rates(priv,bss_conf->basic_rates);
  }
  #line 4607 
  error: 
         #line 4607 
  ;
  #line 4608 
  return;
}

#line 4611  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
static u32 rtl8xxxu_80211_to_rtl_queue(u32 queue)
{
  #line 4613 
  u32 rtlqueue;
  #line 4615 
  switch (queue) {
    #line 4616 
    case (u32)0: 
                 #line 4616 
    ;
    #line 4617 
    rtlqueue = 7U;
    #line 4618 
    break;
    #line 4619 
    case (u32)1: 
                 #line 4619 
    ;
    #line 4620 
    rtlqueue = 5U;
    #line 4621 
    break;
    #line 4622 
    case (u32)2: 
                 #line 4622 
    ;
    #line 4623 
    rtlqueue = 0U;
    #line 4624 
    break;
    #line 4625 
    case (u32)3: 
                 #line 4625 
    ;
    #line 4626 
    rtlqueue = 2U;
    #line 4627 
    break;
    #line 4628 
    default: 
             #line 4628 
    ;
    #line 4629 
    rtlqueue = 0U;
  }
  #line 4632 
  return rtlqueue;
}

#line 4635  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
static u32 rtl8xxxu_queue_select(struct ieee80211_hw *hw, struct sk_buff *skb)
{
  #line 4638 
  u32 queue;
  #line 4637 
  struct ieee80211_hdr *hdr = (struct ieee80211_hdr *)skb->data;
  #line 4640 
  if ((int)ieee80211_is_mgmt((unsigned short)((int)hdr->frame_control)) != 0) 
    #line 4641 
    queue = 18U;
  else {
    #line 4643 
    queue = rtl8xxxu_80211_to_rtl_queue((unsigned int)skb_get_queue_mapping(skb));
  }
  #line 4645 
  return queue;
}

#line 4653  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
static void rtl8xxxu_calc_tx_desc_csum(struct rtl8xxxu_txdesc32 *tx_desc)
{
  #line 4657 
  int i;
  #line 4655 
  __le16 *ptr = (__le16 *)tx_desc;
  #line 4656 
  u16 csum = (unsigned short)0U;
  #line 4663 
  tx_desc->csum = (unsigned short)0U;
  #line 4665 
  i = 0;
  #line 4665 
  while ((unsigned int)i <= 15U) {
    #line 4666 
    csum = (unsigned short)((int)*(ptr + (unsigned long)i) ^ (int)csum);
    #line 4665 
    i ++;
  }
  #line 4668 
  tx_desc->csum = (unsigned short)((int)tx_desc->csum | (int)csum);
  #line 4669 
  return;
}

#line 4671  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
static void rtl8xxxu_free_tx_resources(struct rtl8xxxu_priv *priv)
{
  #line 4677 
  void *__mptr;
  #line 4677 
  void *__mptr_0;
  #line 4673 
  struct rtl8xxxu_tx_urb *tx_urb;
  #line 4673 
  struct rtl8xxxu_tx_urb *tmp;
  #line 4674 
  unsigned long flags;
  #line 4676 
  cif___ldv_spin_lock_tx_urb_lock_of_rtl8xxxu_priv(& priv->tx_urb_lock);
  #line 4677 
  __mptr = (void *)priv->tx_urb_free_list.next;
  #line 4677 
  tx_urb = ((struct rtl8xxxu_tx_urb *)(__mptr + 18446744073709551424U));
  #line 4677 
  __mptr_0 = (void *)tx_urb->list.next;
  #line 4678 
  tmp = ((struct rtl8xxxu_tx_urb *)(__mptr_0 + 18446744073709551424U));
  #line 4677 
  while (& tx_urb->list != & priv->tx_urb_free_list) {
    #line 4677 
    void *__mptr_1;
    #line 4678 
    list_del(& tx_urb->list);
    #line 4679 
    (priv->tx_urb_free_count) --;
    #line 4680 
    usb_free_urb(& tx_urb->urb);
    #line 4677 
    tx_urb = tmp;
    #line 4677 
    __mptr_1 = (void *)tmp->list.next;
    #line 4677 
    tmp = ((struct rtl8xxxu_tx_urb *)(__mptr_1 + 18446744073709551424U));
  }
  #line 4682 
  cif_spin_unlock_irqrestore_tx_urb_lock_of_rtl8xxxu_priv(& priv->tx_urb_lock,flags);
  #line 4683 
  return;
}

#line 4686  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
static struct rtl8xxxu_tx_urb *rtl8xxxu_alloc_tx_urb(struct rtl8xxxu_priv *priv)
{
  #line 4692 
  void *__mptr;
  #line 4692 
  struct rtl8xxxu_tx_urb *tmp_1;
  #line 4688 
  struct rtl8xxxu_tx_urb *tx_urb;
  #line 4689 
  unsigned long flags;
  #line 4691 
  cif___ldv_spin_lock_tx_urb_lock_of_rtl8xxxu_priv(& priv->tx_urb_lock);
  {
    #line 4693 
    union __anonunion___u_3146 __u;
    #line 4692 
    struct list_head *head__ = & priv->tx_urb_free_list;
    #line 4692 
    __read_once_size((void *)(& head__->next),(void *)(& __u.__c),8);
    #line 4692 
    struct list_head *pos__ = (__u.__val);
    #line 4692 
    if (pos__ != head__) {
      #line 4692 
      __mptr = (void *)pos__;
      #line 4692 
      tmp_1 = ((struct rtl8xxxu_tx_urb *)(__mptr + 18446744073709551424U));
    }
    else 
         #line 4692 
         tmp_1 = (struct rtl8xxxu_tx_urb *)0;
    }
  #line 4692 
  tx_urb = tmp_1;
  #line 4694 
  if (tx_urb != (struct rtl8xxxu_tx_urb *)0) {
    #line 4695 
    list_del(& tx_urb->list);
    #line 4696 
    (priv->tx_urb_free_count) --;
    #line 4697 
    if (priv->tx_urb_free_count <= 24 && ! priv->tx_stopped) {
      #line 4699 
      priv->tx_stopped = (_Bool)1;
      #line 4700 
      ieee80211_stop_queues(priv->hw);
    }
  }
  #line 4704 
  cif_spin_unlock_irqrestore_tx_urb_lock_of_rtl8xxxu_priv(& priv->tx_urb_lock,flags);
  #line 4706 
  return tx_urb;
}

#line 4709  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
static void rtl8xxxu_free_tx_urb(struct rtl8xxxu_priv *priv, struct rtl8xxxu_tx_urb *tx_urb)
{
  #line 4712 
  unsigned long flags;
  #line 4714 
  INIT_LIST_HEAD(& tx_urb->list);
  #line 4716 
  cif___ldv_spin_lock_tx_urb_lock_of_rtl8xxxu_priv(& priv->tx_urb_lock);
  #line 4718 
  list_add(& tx_urb->list,& priv->tx_urb_free_list);
  #line 4719 
  (priv->tx_urb_free_count) ++;
  #line 4720 
  if (priv->tx_urb_free_count > 32 && (int)priv->tx_stopped != 0) {
    #line 4722 
    priv->tx_stopped = (_Bool)0;
    #line 4723 
    ieee80211_wake_queues(priv->hw);
  }
  #line 4726 
  cif_spin_unlock_irqrestore_tx_urb_lock_of_rtl8xxxu_priv(& priv->tx_urb_lock,flags);
  #line 4727 
  return;
}

#line 4729  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
static void rtl8xxxu_tx_complete(struct urb *urb)
{
  #line 4736 
  void *__mptr;
  #line 4732 
  struct ieee80211_tx_info *tx_info;
  #line 4733 
  struct ieee80211_hw *hw;
  #line 4734 
  struct rtl8xxxu_priv *priv;
  #line 4731 
  struct sk_buff *skb = (struct sk_buff *)urb->context;
  #line 4736 
  __mptr = (void *)urb;
  #line 4735 
  struct rtl8xxxu_tx_urb *tx_urb = ((struct rtl8xxxu_tx_urb *)__mptr);
  #line 4738 
  tx_info = IEEE80211_SKB_CB(skb);
  #line 4739 
  hw = (struct ieee80211_hw *)tx_info->__anonCompField_ieee80211_tx_info_195.__anonCompField___anonunion_1010_194.rate_driver_data[0];
  #line 4740 
  priv = (struct rtl8xxxu_priv *)hw->priv;
  #line 4742 
  skb_pull(skb,(unsigned int)(priv->fops)->tx_desc_size);
  #line 4744 
  ieee80211_tx_info_clear_status(tx_info);
  #line 4745 
  tx_info->__anonCompField_ieee80211_tx_info_195.status.rates[0].idx = (signed char)(-1);
  #line 4746 
  tx_info->__anonCompField_ieee80211_tx_info_195.status.rates[0].count = (unsigned short)0U;
  #line 4748 
  if (urb->status == 0) 
                        #line 4749 
                        tx_info->flags |= 512U;
  #line 4751 
  ieee80211_tx_status_irqsafe(hw,skb);
  #line 4753 
  rtl8xxxu_free_tx_urb(priv,tx_urb);
  #line 4754 
  return;
}

#line 4756  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
static void rtl8xxxu_dump_action(struct device *dev, struct ieee80211_hdr *hdr)
{
  #line 4760 
  u16 cap;
  #line 4760 
  u16 timeout;
  #line 4759 
  struct ieee80211_mgmt *mgmt = (struct ieee80211_mgmt *)hdr;
  #line 4762 
  if ((rtl8xxxu_debug & 4096) == 0) 
                                    #line 4763 
                                    return;
  #line 4765 
  switch ((int)mgmt->u.action.u.addba_resp.action_code) {
    #line 4766 
    case 1: 
            #line 4766 
    ;
    #line 4767 
    cap = mgmt->u.action.u.addba_resp.capab;
    #line 4768 
    timeout = mgmt->u.action.u.addba_resp.timeout;
    #line 4769 
    _dev_info(dev,(char *)"WLAN_ACTION_ADDBA_RESP: ",(int)timeout,((int)cap >> 2) & 15,(int)cap >> 6,((int)cap >> 1) & 1,(int)mgmt->u.action.u.addba_resp.status);
    #line 4777 
    break;
    #line 4778 
    case 0: 
            #line 4778 
    ;
    #line 4779 
    cap = mgmt->u.action.u.addba_req.capab;
    #line 4780 
    timeout = mgmt->u.action.u.addba_req.timeout;
    #line 4781 
    _dev_info(dev,(char *)"WLAN_ACTION_ADDBA_REQ: ",(int)timeout,((int)cap >> 2) & 15,(int)cap >> 6,((int)cap >> 1) & 1);
    #line 4787 
    break;
    #line 4788 
    default: 
             #line 4788 
    ;
    #line 4789 
    _dev_info(dev,(char *)"action frame %02x\n",(int)mgmt->u.action.u.addba_resp.action_code);
    #line 4791 
    break;
  }
  #line 4793 
  return;
}

#line 4800  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
void rtl8xxxu_fill_txdesc_v1(struct ieee80211_hw *hw, struct ieee80211_hdr *hdr, struct ieee80211_tx_info *tx_info, struct rtl8xxxu_txdesc32 *tx_desc, bool sgi, bool short_preamble, bool ampdu_enable, u32 rts_rate)
{
  #line 4808 
  u32 rate;
  #line 4810 
  u16 seq_number;
  #line 4805 
  struct ieee80211_rate *tx_rate = ieee80211_get_tx_rate(hw,tx_info);
  #line 4806 
  struct rtl8xxxu_priv *priv = (struct rtl8xxxu_priv *)hw->priv;
  #line 4807 
  struct device *dev = & (priv->udev)->dev;
  #line 4809 
  u16 rate_flags = (unsigned short)tx_info->__anonCompField_ieee80211_tx_info_195.control.__anonCompField___anonstruct_control_1011_193.__anonCompField___anonunion_1012_192.rates[0].flags;
  #line 4812 
  if (((int)rate_flags & 8) != 0) {
    #line 4813 
    if (ieee80211_is_mgmt((unsigned short)((int)hdr->frame_control))) 
      #line 4816 
      rate = (unsigned int)tx_rate->hw_value; else 
                                                   #line 4814 
                                                   rate = (unsigned int)((int)tx_info->__anonCompField_ieee80211_tx_info_195.control.__anonCompField___anonstruct_control_1011_193.__anonCompField___anonunion_1012_192.rates[0].idx + 12);
  }
  else 
       #line 4816 
       rate = (unsigned int)tx_rate->hw_value;
  #line 4818 
  if ((rtl8xxxu_debug & 32) != 0) 
                                  #line 4819 
                                  _dev_info(dev,(char *)"%s: TX rate: %d, pkt size %d\n",(char *)"rtl8xxxu_fill_txdesc_v1",rate,(int)tx_desc->pkt_size);
  #line 4822 
  seq_number = (unsigned short)((int)hdr->seq_ctrl >> 4);
  #line 4824 
  tx_desc->txdw5 = rate;
  #line 4826 
  if ((int)ieee80211_is_data((unsigned short)((int)hdr->frame_control)) != 0) 
    #line 4827 
    tx_desc->txdw5 |= 130816U;
  #line 4829 
  tx_desc->txdw3 = (unsigned int)seq_number << 16;
  #line 4831 
  if ((int)ampdu_enable != 0) 
                              #line 4832 
                              tx_desc->txdw1 |= 32U; else 
                                                          #line 4834 
                                                          tx_desc->txdw1 |= 64U;
  #line 4836 
  if ((int)ieee80211_is_mgmt((unsigned short)((int)hdr->frame_control)) != 0) {
    #line 4837 
    tx_desc->txdw5 = rate;
    #line 4838 
    tx_desc->txdw4 |= 256U;
    #line 4839 
    tx_desc->txdw5 |= 1572864U;
    #line 4840 
    tx_desc->txdw5 |= 131072U;
  }
  #line 4843 
  if ((int)ieee80211_is_data_qos((unsigned short)((int)hdr->frame_control)) != 0) 
    #line 4844 
    tx_desc->txdw4 |= 64U;
  #line 4846 
  if ((int)short_preamble != 0) 
                                #line 4847 
                                tx_desc->txdw4 |= 16777216U;
  #line 4849 
  if ((int)sgi != 0) 
                     #line 4850 
                     tx_desc->txdw5 |= 64U;
  #line 4855 
  tx_desc->txdw4 |= rts_rate;
  #line 4856 
  if (((int)rate_flags & 1) != 0) {
    #line 4857 
    tx_desc->txdw4 |= 4096U;
    #line 4858 
    tx_desc->txdw4 |= 8192U;
  }
  else 
    #line 4859 
    if (((int)rate_flags & 2) != 0) {
      #line 4860 
      tx_desc->txdw4 |= 2048U;
      #line 4861 
      tx_desc->txdw4 |= 8192U;
    }
  #line 4863 
  return;
}

#line 4870  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
void rtl8xxxu_fill_txdesc_v2(struct ieee80211_hw *hw, struct ieee80211_hdr *hdr, struct ieee80211_tx_info *tx_info, struct rtl8xxxu_txdesc32 *tx_desc32, bool sgi, bool short_preamble, bool ampdu_enable, u32 rts_rate)
{
  #line 4878 
  struct rtl8xxxu_txdesc40 *tx_desc40;
  #line 4879 
  u32 rate;
  #line 4881 
  u16 seq_number;
  #line 4875 
  struct ieee80211_rate *tx_rate = ieee80211_get_tx_rate(hw,tx_info);
  #line 4876 
  struct rtl8xxxu_priv *priv = (struct rtl8xxxu_priv *)hw->priv;
  #line 4877 
  struct device *dev = & (priv->udev)->dev;
  #line 4880 
  u16 rate_flags = (unsigned short)tx_info->__anonCompField_ieee80211_tx_info_195.control.__anonCompField___anonstruct_control_1011_193.__anonCompField___anonunion_1012_192.rates[0].flags;
  #line 4883 
  tx_desc40 = (struct rtl8xxxu_txdesc40 *)tx_desc32;
  #line 4885 
  if (((int)rate_flags & 8) != 0) {
    #line 4886 
    if (ieee80211_is_mgmt((unsigned short)((int)hdr->frame_control))) 
      #line 4889 
      rate = (unsigned int)tx_rate->hw_value; else 
                                                   #line 4887 
                                                   rate = (unsigned int)((int)tx_info->__anonCompField_ieee80211_tx_info_195.control.__anonCompField___anonstruct_control_1011_193.__anonCompField___anonunion_1012_192.rates[0].idx + 12);
  }
  else 
       #line 4889 
       rate = (unsigned int)tx_rate->hw_value;
  #line 4891 
  if ((rtl8xxxu_debug & 32) != 0) 
                                  #line 4892 
                                  _dev_info(dev,(char *)"%s: TX rate: %d, pkt size %d\n",(char *)"rtl8xxxu_fill_txdesc_v2",rate,(int)tx_desc40->pkt_size);
  #line 4895 
  seq_number = (unsigned short)((int)hdr->seq_ctrl >> 4);
  #line 4897 
  tx_desc40->txdw4 = rate;
  #line 4898 
  if ((int)ieee80211_is_data((unsigned short)((int)hdr->frame_control)) != 0) 
    #line 4899 
    tx_desc40->txdw4 |= 7936U;
  #line 4903 
  tx_desc40->txdw9 = (unsigned int)seq_number << 12;
  #line 4905 
  if ((int)ampdu_enable != 0) 
                              #line 4906 
                              tx_desc40->txdw2 |= 4096U; else 
                                                              #line 4908 
                                                              tx_desc40->txdw2 |= 65536U;
  #line 4910 
  if ((int)ieee80211_is_mgmt((unsigned short)((int)hdr->frame_control)) != 0) {
    #line 4911 
    tx_desc40->txdw4 = rate;
    #line 4912 
    tx_desc40->txdw3 |= 256U;
    #line 4913 
    tx_desc40->txdw4 |= 1572864U;
    #line 4915 
    tx_desc40->txdw4 |= 131072U;
  }
  #line 4918 
  if ((int)short_preamble != 0) 
                                #line 4919 
                                tx_desc40->txdw5 |= 16U;
  #line 4921 
  tx_desc40->txdw4 |= rts_rate << 24;
  #line 4925 
  if (((int)rate_flags & 1) != 0) {
    #line 4926 
    tx_desc40->txdw3 |= 4096U;
    #line 4927 
    tx_desc40->txdw3 |= 8192U;
  }
  else 
    #line 4928 
    if (((int)rate_flags & 2) != 0) 
                                    #line 4933 
                                    tx_desc40->txdw3 |= 2048U;
  #line 4934 
  return;
}

#line 4937  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
static void rtl8xxxu_tx(struct ieee80211_hw *hw, struct ieee80211_tx_control *control, struct sk_buff *skb)
{
  #line 4944 
  struct rtl8xxxu_txdesc32 *tx_desc;
  #line 4945 
  struct rtl8xxxu_tx_urb *tx_urb;
  #line 4949 
  u32 queue;
  #line 4949 
  u32 rts_rate;
  #line 4953 
  int ret;
  #line 4954 
  bool ampdu_enable;
  #line 4941 
  struct ieee80211_hdr *hdr = (struct ieee80211_hdr *)skb->data;
  #line 4942 
  struct ieee80211_tx_info *tx_info = IEEE80211_SKB_CB(skb);
  #line 4943 
  struct rtl8xxxu_priv *priv = (struct rtl8xxxu_priv *)hw->priv;
  #line 4946 
  struct ieee80211_sta *sta = (struct ieee80211_sta *)0;
  #line 4947 
  struct ieee80211_vif *vif = tx_info->__anonCompField_ieee80211_tx_info_195.control.vif;
  #line 4948 
  struct device *dev = & (priv->udev)->dev;
  #line 4950 
  u16 pktlen = (unsigned short)skb->len;
  #line 4951 
  u16 rate_flag = (unsigned short)tx_info->__anonCompField_ieee80211_tx_info_195.control.__anonCompField___anonstruct_control_1011_193.__anonCompField___anonunion_1012_192.rates[0].flags;
  #line 4952 
  int tx_desc_size = (int)(priv->fops)->tx_desc_size;
  #line 4954 
  bool sgi = (_Bool)0;
  #line 4954 
  bool short_preamble = (_Bool)0;
  #line 4956 
  ;
  #line 4956 
  if (skb_headroom(skb) < (unsigned int)tx_desc_size) {
    #line 4957 
    ;
    #line 4957 
    _dev_warn(dev,(char *)"%s: Not enough headroom (%i) for tx descriptor\n",(char *)"rtl8xxxu_tx",skb_headroom(skb));
    #line 4960 
    goto error;
  }
  #line 4963 
  if ((long)(skb->len > (unsigned int)(65535 - tx_desc_size)) != 0L) {
    #line 4964 
    _dev_warn(dev,(char *)"%s: Trying to send over-sized skb (%i)\n",(char *)"rtl8xxxu_tx",skb->len);
    #line 4966 
    goto error;
  }
  #line 4969 
  tx_urb = rtl8xxxu_alloc_tx_urb(priv);
  #line 4970 
  if (tx_urb == (struct rtl8xxxu_tx_urb *)0) {
    #line 4971 
    _dev_warn(dev,(char *)"%s: Unable to allocate tx urb\n",(char *)"rtl8xxxu_tx");
    #line 4972 
    goto error;
  }
  #line 4975 
  if ((int)ieee80211_is_action((unsigned short)((int)hdr->frame_control)) != 0) 
    #line 4976 
    rtl8xxxu_dump_action(dev,hdr);
  #line 4978 
  tx_info->__anonCompField_ieee80211_tx_info_195.__anonCompField___anonunion_1010_194.rate_driver_data[0] = (void *)hw;
  #line 4980 
  if (control != (struct ieee80211_tx_control *)0 && control->sta != (struct ieee80211_sta *)0) 
    #line 4981 
    sta = control->sta;
  #line 4983 
  tx_desc = (struct rtl8xxxu_txdesc32 *)skb_push(skb,(unsigned int)tx_desc_size);
  #line 4985 
  memset((void *)tx_desc,0,(unsigned long)tx_desc_size);
  #line 4986 
  tx_desc->pkt_size = pktlen;
  #line 4987 
  tx_desc->pkt_offset = (unsigned char)tx_desc_size;
  #line 4989 
  tx_desc->txdw0 = (unsigned char)140U;
  #line 4991 
  if ((int)is_multicast_ether_addr(ieee80211_get_DA(hdr)) != 0) 
                                                                #line 4993 
                                                                tx_desc->txdw0 = (unsigned char)((unsigned int)tx_desc->txdw0 | 1U);
  else {
    #line 4991 
    if ((int)is_broadcast_ether_addr(ieee80211_get_DA(hdr)) != 0) 
                                                                  #line 4993 
                                                                  tx_desc->txdw0 = (unsigned char)((unsigned int)tx_desc->txdw0 | 1U);
  }
  #line 4995 
  queue = rtl8xxxu_queue_select(hw,skb);
  #line 4996 
  tx_desc->txdw1 = queue << 8;
  #line 4998 
  if (tx_info->__anonCompField_ieee80211_tx_info_195.control.hw_key != (struct ieee80211_key_conf *)0) 
    #line 4999 
    switch ((tx_info->__anonCompField_ieee80211_tx_info_195.control.hw_key)->cipher) {
      #line 5000 
      case (u32)1027073: 
                         #line 5000 
      ;
      #line 5001 
      case (u32)1027077: 
                         #line 5001 
      ;
      #line 5002 
      case (u32)1027074: 
                         #line 5002 
      ;
      #line 5003 
      tx_desc->txdw1 |= 4194304U;
      #line 5004 
      break;
      #line 5005 
      case (u32)1027076: 
                         #line 5005 
      ;
      #line 5006 
      tx_desc->txdw1 |= 12582912U;
      #line 5007 
      break;
      #line 5008 
      default: 
               #line 5008 
      ;
      #line 5009 
      break;
    }
  #line 5014 
  ampdu_enable = (_Bool)0;
  #line 5015 
  if ((int)ieee80211_is_data_qos((unsigned short)((int)hdr->frame_control)) != 0) 
    #line 5015 
    if (sta != (struct ieee80211_sta *)0) 
      #line 5016 
      if ((int)sta->ht_cap.ht_supported != 0) {
        #line 5017 
        u32 ampdu;
        #line 5017 
        u32 val32;
        #line 5019 
        ampdu = (unsigned int)sta->ht_cap.ampdu_density;
        #line 5020 
        val32 = ampdu << 20;
        #line 5021 
        tx_desc->txdw2 |= val32;
        #line 5023 
        ampdu_enable = (_Bool)1;
      }
  #line 5027 
  if (((int)rate_flag & 128) != 0) 
                                   #line 5031 
                                   sgi = (_Bool)1;
  else {
    #line 5027 
    if ((int)ieee80211_is_data_qos((unsigned short)((int)hdr->frame_control)) != 0) 
      #line 5028 
      if (sta != (struct ieee80211_sta *)0) 
        #line 5029 
        if (((int)sta->ht_cap.cap & 96) != 0) 
                                              #line 5031 
                                              sgi = (_Bool)1;
  }
  #line 5033 
  if (((int)rate_flag & 4) != 0 || (sta != (struct ieee80211_sta *)0 && vif != (struct ieee80211_vif *)0) && (int)vif->bss_conf.use_short_preamble != 0) 
    #line 5035 
    short_preamble = (_Bool)1;
  #line 5037 
  if (((int)rate_flag & 1) != 0) {
    #line 5038 
    rts_rate = (unsigned int)ieee80211_get_rts_cts_rate(hw,tx_info)->hw_value;
  }
  else 
    #line 5039 
    if (((int)rate_flag & 2) != 0) {
      #line 5040 
      rts_rate = (unsigned int)ieee80211_get_rts_cts_rate(hw,tx_info)->hw_value;
    }
    else 
         #line 5042 
         rts_rate = 0U;
  #line 5045 
  (*((priv->fops)->fill_txdesc))(hw,hdr,tx_info,tx_desc,(_Bool)((bool)((int)sgi) != 0),(_Bool)((bool)((int)short_preamble) != 0),(_Bool)((bool)((int)ampdu_enable) != 0),rts_rate);
  #line 5048 
  rtl8xxxu_calc_tx_desc_csum(tx_desc);
  #line 5050 
  usb_fill_bulk_urb(& tx_urb->urb,priv->udev,priv->pipe_out[queue],(void *)skb->data,(int)skb->len,& rtl8xxxu_tx_complete,(void *)skb);
  #line 5053 
  usb_anchor_urb(& tx_urb->urb,& priv->tx_anchor);
  #line 5054 
  ret = cif_usb_submit_urb(& tx_urb->urb,2592U);
  #line 5055 
  if (ret != 0) {
    #line 5056 
    usb_unanchor_urb(& tx_urb->urb);
    #line 5057 
    rtl8xxxu_free_tx_urb(priv,tx_urb);
    #line 5058 
    goto error;
  }
  #line 5060 
  return;
  #line 5061 
  error: 
         #line 5061 
  ;
  #line 5062 
  consume_skb(skb);
  #line 5063 
  return;
}

#line 5065  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
static void rtl8xxxu_rx_parse_phystats(struct rtl8xxxu_priv *priv, struct ieee80211_rx_status *rx_status, struct rtl8723au_phy_stats *phy_stats, u32 rxmcs)
{
  #line 5070 
  if ((unsigned int)phy_stats->sgi_en != 0U) 
                                             #line 5071 
                                             rx_status->enc_flags = (unsigned char)((unsigned int)rx_status->enc_flags | 4U);
  #line 5073 
  if (rxmcs <= 3U) {
    #line 5077 
    u8 cck_agc_rpt = phy_stats->cck_agc_rpt_ofdm_cfosho_a;
    #line 5079 
    switch ((int)cck_agc_rpt & 192) {
      #line 5080 
      case 192: 
                #line 5080 
      ;
      #line 5081 
      rx_status->signal = (signed char)(210U - ((unsigned int)cck_agc_rpt & 62U));
      #line 5082 
      break;
      #line 5083 
      case 128: 
                #line 5083 
      ;
      #line 5084 
      rx_status->signal = (signed char)(230U - ((unsigned int)cck_agc_rpt & 62U));
      #line 5085 
      break;
      #line 5086 
      case 64: 
               #line 5086 
      ;
      #line 5087 
      rx_status->signal = (signed char)(244U - ((unsigned int)cck_agc_rpt & 62U));
      #line 5088 
      break;
      #line 5089 
      case 0: 
              #line 5089 
      ;
      #line 5090 
      rx_status->signal = (signed char)(16U - ((unsigned int)cck_agc_rpt & 62U));
      #line 5091 
      break;
    }
  }
  else 
       #line 5094 
       rx_status->signal = (signed char)((unsigned int)((int)phy_stats->cck_sig_qual_ofdm_pwdb_all >> 1) + 146U);
  #line 5096 
  return;
}

#line 5099  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
static void rtl8xxxu_free_rx_resources(struct rtl8xxxu_priv *priv)
{
  #line 5106 
  void *__mptr;
  #line 5106 
  void *__mptr_0;
  #line 5101 
  struct rtl8xxxu_rx_urb *rx_urb;
  #line 5101 
  struct rtl8xxxu_rx_urb *tmp;
  #line 5102 
  unsigned long flags;
  #line 5104 
  cif___ldv_spin_lock_rx_urb_lock_of_rtl8xxxu_priv(& priv->rx_urb_lock);
  #line 5106 
  __mptr = (void *)priv->rx_urb_pending_list.next;
  #line 5106 
  rx_urb = ((struct rtl8xxxu_rx_urb *)(__mptr + 18446744073709551424U));
  #line 5106 
  __mptr_0 = (void *)rx_urb->list.next;
  #line 5107 
  tmp = ((struct rtl8xxxu_rx_urb *)(__mptr_0 + 18446744073709551424U));
  #line 5106 
  while ((void *)rx_urb != (void *)priv) {
    #line 5106 
    void *__mptr_1;
    #line 5108 
    list_del(& rx_urb->list);
    #line 5109 
    (priv->rx_urb_pending_count) --;
    #line 5110 
    usb_free_urb(& rx_urb->urb);
    #line 5106 
    rx_urb = tmp;
    #line 5106 
    __mptr_1 = (void *)tmp->list.next;
    #line 5106 
    tmp = ((struct rtl8xxxu_rx_urb *)(__mptr_1 + 18446744073709551424U));
  }
  #line 5113 
  cif_spin_unlock_irqrestore_rx_urb_lock_of_rtl8xxxu_priv(& priv->rx_urb_lock,flags);
  #line 5114 
  return;
}

#line 5116  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
static void rtl8xxxu_queue_rx_urb(struct rtl8xxxu_priv *priv, struct rtl8xxxu_rx_urb *rx_urb)
{
  #line 5119 
  struct sk_buff *skb;
  #line 5120 
  unsigned long flags;
  #line 5121 
  int pending = 0;
  #line 5123 
  cif___ldv_spin_lock_rx_urb_lock_of_rtl8xxxu_priv(& priv->rx_urb_lock);
  #line 5125 
  if (! priv->shutdown) {
    #line 5126 
    list_add_tail(& rx_urb->list,& priv->rx_urb_pending_list);
    #line 5127 
    (priv->rx_urb_pending_count) ++;
    #line 5128 
    pending = priv->rx_urb_pending_count;
  }
  else {
    #line 5130 
    skb = (struct sk_buff *)rx_urb->urb.context;
    #line 5131 
    consume_skb(skb);
    #line 5132 
    usb_free_urb(& rx_urb->urb);
  }
  #line 5135 
  cif_spin_unlock_irqrestore_rx_urb_lock_of_rtl8xxxu_priv(& priv->rx_urb_lock,flags);
  #line 5137 
  if (pending > 8) 
                   #line 5138 
                   cif_schedule_work(& priv->rx_urb_wq);
  #line 5139 
  return;
}

#line 5141  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
static void rtl8xxxu_rx_urb_work(struct work_struct *work)
{
  #line 5150 
  void *__mptr;
  #line 5160 
  void *__mptr_0;
  #line 5160 
  void *__mptr_1;
  #line 5143 
  struct rtl8xxxu_priv *priv;
  #line 5144 
  struct rtl8xxxu_rx_urb *rx_urb;
  #line 5144 
  struct rtl8xxxu_rx_urb *tmp;
  #line 5145 
  struct list_head local;
  #line 5146 
  struct sk_buff *skb;
  #line 5147 
  unsigned long flags;
  #line 5148 
  int ret;
  #line 5150 
  __mptr = (void *)work;
  #line 5150 
  priv = ((struct rtl8xxxu_priv *)(__mptr + 18446744073709551400U));
  #line 5151 
  INIT_LIST_HEAD(& local);
  #line 5153 
  cif___ldv_spin_lock_rx_urb_lock_of_rtl8xxxu_priv(& priv->rx_urb_lock);
  #line 5155 
  list_splice_init(& priv->rx_urb_pending_list,& local);
  #line 5156 
  priv->rx_urb_pending_count = 0;
  #line 5158 
  cif_spin_unlock_irqrestore_rx_urb_lock_of_rtl8xxxu_priv(& priv->rx_urb_lock,flags);
  #line 5160 
  __mptr_0 = (void *)local.next;
  #line 5160 
  rx_urb = ((struct rtl8xxxu_rx_urb *)(__mptr_0 + 18446744073709551424U));
  #line 5160 
  __mptr_1 = (void *)rx_urb->list.next;
  #line 5161 
  tmp = ((struct rtl8xxxu_rx_urb *)(__mptr_1 + 18446744073709551424U));
  #line 5160 
  while (& rx_urb->list != & local) {
    #line 5160 
    void *__mptr_2;
    #line 5161 
    list_del_init(& rx_urb->list);
    #line 5162 
    ret = rtl8xxxu_submit_rx_urb(priv,rx_urb);
    #line 5168 
    switch (ret) {
      #line 5169 
      case 0: 
              #line 5169 
      ;
      #line 5170 
      break;
      #line 5171 
      case -12: 
                #line 5171 
      ;
      #line 5172 
      case -11: 
                #line 5172 
      ;
      #line 5173 
      rtl8xxxu_queue_rx_urb(priv,rx_urb);
      #line 5174 
      break;
      #line 5175 
      default: 
               #line 5175 
      ;
      #line 5176 
      printk((char *)"\001",ret);
      #line 5177 
      skb = (struct sk_buff *)rx_urb->urb.context;
      #line 5178 
      consume_skb(skb);
      #line 5179 
      usb_free_urb(& rx_urb->urb);
    }
    #line 5160 
    rx_urb = tmp;
    #line 5160 
    __mptr_2 = (void *)tmp->list.next;
    #line 5160 
    tmp = ((struct rtl8xxxu_rx_urb *)(__mptr_2 + 18446744073709551424U));
  }
  #line 5182 
  return;
}

#line 5192  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
static void rtl8723bu_set_coex_with_type(struct rtl8xxxu_priv *priv, u8 type)
{
  #line 5194 
  switch ((int)type) {
    #line 5195 
    case 0: 
            #line 5195 
    ;
    #line 5196 
    rtl8xxxu_write32(priv,(unsigned short)1728,1431655765U);
    #line 5197 
    rtl8xxxu_write32(priv,(unsigned short)1732,1431655765U);
    #line 5198 
    rtl8xxxu_write32(priv,(unsigned short)1736,16777215U);
    #line 5199 
    rtl8xxxu_write8(priv,(unsigned short)1740,(unsigned char)3);
    #line 5200 
    break;
    #line 5201 
    case 1: 
            #line 5201 
    ;
    #line 5202 
    case 3: 
            #line 5202 
    ;
    #line 5203 
    rtl8xxxu_write32(priv,(unsigned short)1728,1431655765U);
    #line 5204 
    rtl8xxxu_write32(priv,(unsigned short)1732,1515870810U);
    #line 5205 
    rtl8xxxu_write32(priv,(unsigned short)1736,16777215U);
    #line 5206 
    rtl8xxxu_write8(priv,(unsigned short)1740,(unsigned char)3);
    #line 5207 
    break;
    #line 5208 
    case 2: 
            #line 5208 
    ;
    #line 5209 
    rtl8xxxu_write32(priv,(unsigned short)1728,1515870810U);
    #line 5210 
    rtl8xxxu_write32(priv,(unsigned short)1732,1515870810U);
    #line 5211 
    rtl8xxxu_write32(priv,(unsigned short)1736,16777215U);
    #line 5212 
    rtl8xxxu_write8(priv,(unsigned short)1740,(unsigned char)3);
    #line 5213 
    break;
    #line 5214 
    case 4: 
            #line 5214 
    ;
    #line 5215 
    rtl8xxxu_write32(priv,(unsigned short)1728,1515870810U);
    #line 5216 
    rtl8xxxu_write32(priv,(unsigned short)1732,2863290970U);
    #line 5217 
    rtl8xxxu_write32(priv,(unsigned short)1736,16777215U);
    #line 5218 
    rtl8xxxu_write8(priv,(unsigned short)1740,(unsigned char)3);
    #line 5219 
    break;
    #line 5220 
    case 5: 
            #line 5220 
    ;
    #line 5221 
    rtl8xxxu_write32(priv,(unsigned short)1728,1515870810U);
    #line 5222 
    rtl8xxxu_write32(priv,(unsigned short)1732,2858048090U);
    #line 5223 
    rtl8xxxu_write32(priv,(unsigned short)1736,16777215U);
    #line 5224 
    rtl8xxxu_write8(priv,(unsigned short)1740,(unsigned char)3);
    #line 5225 
    break;
    #line 5226 
    case 6: 
            #line 5226 
    ;
    #line 5227 
    rtl8xxxu_write32(priv,(unsigned short)1728,1431655765U);
    #line 5228 
    rtl8xxxu_write32(priv,(unsigned short)1732,2863311530U);
    #line 5229 
    rtl8xxxu_write32(priv,(unsigned short)1736,16777215U);
    #line 5230 
    rtl8xxxu_write8(priv,(unsigned short)1740,(unsigned char)3);
    #line 5231 
    break;
    #line 5232 
    case 7: 
            #line 5232 
    ;
    #line 5233 
    rtl8xxxu_write32(priv,(unsigned short)1728,2863311530U);
    #line 5234 
    rtl8xxxu_write32(priv,(unsigned short)1732,2863311530U);
    #line 5235 
    rtl8xxxu_write32(priv,(unsigned short)1736,16777215U);
    #line 5236 
    rtl8xxxu_write8(priv,(unsigned short)1740,(unsigned char)3);
    #line 5237 
    break;
    #line 5238 
    default: 
             #line 5238 
    ;
    #line 5239 
    break;
  }
  #line 5241 
  return;
}

#line 5244  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
static void rtl8723bu_update_bt_link_info(struct rtl8xxxu_priv *priv, u8 bt_info)
{
  #line 5246 
  struct rtl8xxxu_btcoex *btcoex = & priv->bt_coex;
  #line 5248 
  if (((unsigned long)bt_info & 4UL) != 0UL) 
                                             #line 5249 
                                             btcoex->c2h_bt_inquiry = (_Bool)1; else 
                                                                    #line 5251 
                                                                    btcoex->c2h_bt_inquiry = (_Bool)0;
  #line 5253 
  if (((unsigned long)bt_info & 1UL) == 0UL) {
    #line 5254 
    btcoex->bt_status = (unsigned char)0U;
    #line 5255 
    btcoex->has_sco = (_Bool)0;
    #line 5256 
    btcoex->has_hid = (_Bool)0;
    #line 5257 
    btcoex->has_pan = (_Bool)0;
    #line 5258 
    btcoex->has_a2dp = (_Bool)0;
  }
  else {
    #line 5260 
    if (((unsigned int)bt_info & 31U) == 1U) 
                                             #line 5261 
                                             btcoex->bt_status = (unsigned char)1U;
    else 
      #line 5262 
      if (((unsigned long)bt_info & 2UL) != 0UL || ((unsigned long)bt_info & 16UL) != 0UL) 
        #line 5264 
        btcoex->bt_status = (unsigned char)4U;
      else 
        #line 5265 
        if (((unsigned long)bt_info & 8UL) != 0UL) 
                                                   #line 5266 
                                                   btcoex->bt_status = (unsigned char)3U; else 
                                                                    #line 5268 
                                                                    btcoex->bt_status = (unsigned char)6U;
    #line 5270 
    if (((unsigned long)bt_info & 128UL) != 0UL) 
                                                 #line 5271 
                                                 btcoex->has_pan = (_Bool)1; else 
                                                                    #line 5273 
                                                                    btcoex->has_pan = (_Bool)0;
    #line 5275 
    if (((unsigned long)bt_info & 64UL) != 0UL) 
                                                #line 5276 
                                                btcoex->has_a2dp = (_Bool)1; else 
                                                                    #line 5278 
                                                                    btcoex->has_a2dp = (_Bool)0;
    #line 5280 
    if (((unsigned long)bt_info & 32UL) != 0UL) 
                                                #line 5281 
                                                btcoex->has_hid = (_Bool)1; else 
                                                                    #line 5283 
                                                                    btcoex->has_hid = (_Bool)0;
    #line 5285 
    if (((unsigned long)bt_info & 2UL) != 0UL) 
                                               #line 5286 
                                               btcoex->has_sco = (_Bool)1; else 
                                                                    #line 5288 
                                                                    btcoex->has_sco = (_Bool)0;
  }
  #line 5291 
  if (((! btcoex->has_a2dp && ! btcoex->has_sco) && ! btcoex->has_pan) && (int)btcoex->has_hid != 0) 
    #line 5293 
    btcoex->hid_only = (_Bool)1; else 
                                      #line 5295 
                                      btcoex->hid_only = (_Bool)0;
  #line 5297 
  if (((! btcoex->has_sco && ! btcoex->has_pan) && ! btcoex->has_hid) && (int)btcoex->has_a2dp != 0) 
    #line 5299 
    btcoex->has_a2dp = (_Bool)1; else 
                                      #line 5301 
                                      btcoex->has_a2dp = (_Bool)0;
  #line 5303 
  if ((unsigned int)btcoex->bt_status + 253U <= 1U) 
                                                    #line 5305 
                                                    btcoex->bt_busy = (_Bool)1; else 
                                                                    #line 5307 
                                                                    btcoex->bt_busy = (_Bool)0;
  #line 5308 
  return;
}

#line 5311  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
static void rtl8723bu_handle_bt_inquiry(struct rtl8xxxu_priv *priv)
{
  #line 5313 
  struct ieee80211_vif *vif;
  #line 5314 
  struct rtl8xxxu_btcoex *btcoex;
  #line 5315 
  bool wifi_connected;
  #line 5317 
  vif = priv->vif;
  #line 5318 
  btcoex = & priv->bt_coex;
  #line 5319 
  wifi_connected = (_Bool)((vif != (struct ieee80211_vif *)0 && (int)vif->bss_conf.assoc != 0) != 0);
  #line 5321 
  if (! wifi_connected) {
    #line 5322 
    rtl8723bu_set_ps_tdma(priv,(unsigned char)8,(unsigned char)0,(unsigned char)0,(unsigned char)0,(unsigned char)0);
    #line 5323 
    rtl8723bu_set_coex_with_type(priv,(unsigned char)0);
  }
  else 
    #line 5324 
    if (((int)btcoex->has_sco != 0 || (int)btcoex->has_hid != 0) || (int)btcoex->has_a2dp != 0) {
      #line 5325 
      rtl8723bu_set_ps_tdma(priv,(unsigned char)97,(unsigned char)53,(unsigned char)3,(unsigned char)17,(unsigned char)17);
      #line 5326 
      rtl8723bu_set_coex_with_type(priv,(unsigned char)4);
    }
    else 
      #line 5327 
      if ((int)btcoex->has_pan != 0) {
        #line 5328 
        rtl8723bu_set_ps_tdma(priv,(unsigned char)97,(unsigned char)63,(unsigned char)3,(unsigned char)17,(unsigned char)17);
        #line 5329 
        rtl8723bu_set_coex_with_type(priv,(unsigned char)4);
      }
      else {
        #line 5331 
        rtl8723bu_set_ps_tdma(priv,(unsigned char)8,(unsigned char)0,(unsigned char)0,(unsigned char)0,(unsigned char)0);
        #line 5332 
        rtl8723bu_set_coex_with_type(priv,(unsigned char)7);
      }
  #line 5334 
  return;
}

#line 5337  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
static void rtl8723bu_handle_bt_info(struct rtl8xxxu_priv *priv)
{
  #line 5339 
  struct ieee80211_vif *vif;
  #line 5340 
  struct rtl8xxxu_btcoex *btcoex;
  #line 5341 
  bool wifi_connected;
  #line 5343 
  vif = priv->vif;
  #line 5344 
  btcoex = & priv->bt_coex;
  #line 5345 
  wifi_connected = (_Bool)((vif != (struct ieee80211_vif *)0 && (int)vif->bss_conf.assoc != 0) != 0);
  #line 5347 
  if ((int)wifi_connected != 0) {
    #line 5348 
    u32 val32 = 0U;
    #line 5349 
    u32 high_prio_tx = 0U;
    #line 5349 
    u32 high_prio_rx = 0U;
    #line 5351 
    val32 = rtl8xxxu_read32(priv,(unsigned short)1904);
    #line 5352 
    high_prio_tx = val32 & 65535U;
    #line 5353 
    high_prio_rx = val32 >> 16;
    #line 5355 
    if ((int)btcoex->bt_busy != 0) 
      #line 5356 
      if ((int)btcoex->hid_only != 0) {
        #line 5357 
        rtl8723bu_set_ps_tdma(priv,(unsigned char)97,(unsigned char)32,(unsigned char)3,(unsigned char)17,(unsigned char)17);
        #line 5359 
        rtl8723bu_set_coex_with_type(priv,(unsigned char)5);
      }
      else 
        #line 5360 
        if ((int)btcoex->a2dp_only != 0) {
          #line 5361 
          rtl8723bu_set_ps_tdma(priv,(unsigned char)97,(unsigned char)53,(unsigned char)3,(unsigned char)17,(unsigned char)17);
          #line 5363 
          rtl8723bu_set_coex_with_type(priv,(unsigned char)4);
        }
        else 
          #line 5364 
          if (((int)btcoex->has_a2dp != 0 || (int)btcoex->has_hid != 0 && (int)btcoex->has_a2dp != 0) && (int)btcoex->has_pan != 0) {
            #line 5367 
            rtl8723bu_set_ps_tdma(priv,(unsigned char)81,(unsigned char)33,(unsigned char)3,(unsigned char)16,(unsigned char)16);
            #line 5369 
            rtl8723bu_set_coex_with_type(priv,(unsigned char)4);
          }
          else 
            #line 5370 
            if ((int)btcoex->has_hid != 0 && (int)btcoex->has_a2dp != 0) {
              #line 5371 
              rtl8723bu_set_ps_tdma(priv,(unsigned char)81,(unsigned char)33,(unsigned char)3,(unsigned char)16,(unsigned char)16);
              #line 5373 
              rtl8723bu_set_coex_with_type(priv,(unsigned char)3);
            }
            else {
              #line 5375 
              rtl8723bu_set_ps_tdma(priv,(unsigned char)97,(unsigned char)53,(unsigned char)3,(unsigned char)17,(unsigned char)17);
              #line 5377 
              rtl8723bu_set_coex_with_type(priv,(unsigned char)4);
            }
    else {
      #line 5380 
      rtl8723bu_set_ps_tdma(priv,(unsigned char)8,(unsigned char)0,(unsigned char)0,(unsigned char)0,(unsigned char)0);
      #line 5381 
      if (high_prio_tx + high_prio_rx <= 60U) 
                                              #line 5382 
                                              rtl8723bu_set_coex_with_type(priv,(unsigned char)2); else 
                                                                    #line 5384 
                                                                    rtl8723bu_set_coex_with_type(priv,(unsigned char)7);
    }
  }
  else {
    #line 5387 
    rtl8723bu_set_ps_tdma(priv,(unsigned char)8,(unsigned char)0,(unsigned char)0,(unsigned char)0,(unsigned char)0);
    #line 5388 
    rtl8723bu_set_coex_with_type(priv,(unsigned char)0);
  }
  #line 5390 
  return;
}

#line 5392  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
static void rtl8xxxu_c2hcmd_callback(struct work_struct *work)
{
  #line 5401 
  void *__mptr;
  #line 5394 
  struct rtl8xxxu_priv *priv;
  #line 5395 
  struct rtl8723bu_c2h *c2h;
  #line 5397 
  unsigned long flags;
  #line 5399 
  struct rtl8xxxu_btcoex *btcoex;
  #line 5396 
  struct sk_buff *skb = (struct sk_buff *)0;
  #line 5398 
  u8 bt_info = (unsigned char)0U;
  #line 5401 
  __mptr = (void *)work;
  #line 5401 
  priv = ((struct rtl8xxxu_priv *)(__mptr + 18446744073709549288U));
  #line 5402 
  btcoex = & priv->bt_coex;
  #line 5404 
  if ((unsigned int)priv->rf_paths > 1U) 
                                         #line 5405 
                                         goto out;
  #line 5407 
  while (1) {
    #line 5407 
    if (! (skb_queue_empty(& priv->c2hcmd_queue) == 0)) 
                                                        #line 5407 
                                                        break;
    #line 5408 
    cif___ldv_spin_lock_c2hcmd_lock_of_rtl8xxxu_priv(& priv->c2hcmd_lock);
    #line 5409 
    skb = __skb_dequeue(& priv->c2hcmd_queue);
    #line 5410 
    cif_spin_unlock_irqrestore_c2hcmd_lock_of_rtl8xxxu_priv(& priv->c2hcmd_lock,flags);
    #line 5412 
    c2h = (struct rtl8723bu_c2h *)skb->data;
    #line 5414 
    switch ((int)c2h->id) {
      #line 5415 
      case 9: 
              #line 5415 
      ;
      #line 5416 
      bt_info = c2h->__anonCompField_rtl8723bu_c2h_198.bt_info.bt_info;
      #line 5418 
      rtl8723bu_update_bt_link_info(priv,(unsigned char)((int)bt_info));
      #line 5419 
      if ((int)btcoex->c2h_bt_inquiry != 0) {
        #line 5420 
        rtl8723bu_handle_bt_inquiry(priv);
        #line 5421 
        break;
      }
      #line 5423 
      rtl8723bu_handle_bt_info(priv);
      #line 5424 
      break;
      #line 5425 
      default: 
               #line 5425 
      ;
      #line 5426 
      break;
    }
  }
  #line 5430 
  out: 
       #line 5430 
  ;
  #line 5431 
  consume_skb(skb);
  #line 5432 
  return;
}

#line 5434  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
static void rtl8723bu_handle_c2h(struct rtl8xxxu_priv *priv, struct sk_buff *skb)
{
  #line 5439 
  int len;
  #line 5440 
  unsigned long flags;
  #line 5437 
  struct rtl8723bu_c2h *c2h = (struct rtl8723bu_c2h *)skb->data;
  #line 5438 
  struct device *dev = & (priv->udev)->dev;
  #line 5442 
  len = (int)(skb->len + 4294967294U);
  {
    #line 5444 
    bool branch;
    #line 5444 
    struct _ddebug __UNIQUE_ID_ddebug606 = {.modname = (char *)"rtl8xxxu", .function = (char *)"rtl8723bu_handle_c2h", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c", .format = (char *)"C2H ID %02x seq %02x, len %02x source %02x\n", .lineno = (unsigned int)5444U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
    #line 5444 
    branch = arch_static_branch(& __UNIQUE_ID_ddebug606.key.dd_key_false.key,(_Bool)0);
    #line 5444 
    if ((long)((long)((int)branch != 0)) != 0L) 
                                                #line 5444 
                                                __dynamic_dev_dbg(& __UNIQUE_ID_ddebug606,dev,(char *)"C2H ID %02x seq %02x, len %02x source %02x\n",(int)c2h->id,(int)c2h->seq,len,(int)c2h->__anonCompField_rtl8723bu_c2h_198.bt_info.response_source);
  }
  #line 5447 
  switch ((int)c2h->id) {
    #line 5448 
    case 9: 
            #line 5448 
    ;
    #line 5449 
    if ((unsigned int)c2h->__anonCompField_rtl8723bu_c2h_198.bt_info.response_source > 2U) {
      #line 5451 
      bool branch_0;
      #line 5451 
      struct _ddebug __UNIQUE_ID_ddebug607 = {.modname = (char *)"rtl8xxxu", .function = (char *)"rtl8723bu_handle_c2h", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c", .format = (char *)"C2H_BT_INFO WiFi only firmware\n", .lineno = (unsigned int)5451U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
      #line 5451 
      branch_0 = arch_static_branch(& __UNIQUE_ID_ddebug607.key.dd_key_false.key,(_Bool)0);
      #line 5451 
      if ((long)((long)((int)branch_0 != 0)) != 0L) 
                                                    #line 5451 
                                                    __dynamic_dev_dbg(& __UNIQUE_ID_ddebug607,dev,(char *)"C2H_BT_INFO WiFi only firmware\n");
    }
    else {
      #line 5453 
      bool branch_1;
      #line 5453 
      struct _ddebug __UNIQUE_ID_ddebug608 = {.modname = (char *)"rtl8xxxu", .function = (char *)"rtl8723bu_handle_c2h", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c", .format = (char *)"C2H_BT_INFO BT/WiFi coexist firmware\n", .lineno = (unsigned int)5453U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
      #line 5453 
      branch_1 = arch_static_branch(& __UNIQUE_ID_ddebug608.key.dd_key_false.key,(_Bool)0);
      #line 5453 
      if ((long)((long)((int)branch_1 != 0)) != 0L) 
                                                    #line 5453 
                                                    __dynamic_dev_dbg(& __UNIQUE_ID_ddebug608,dev,(char *)"C2H_BT_INFO BT/WiFi coexist firmware\n");
    }
    #line 5455 
    if ((unsigned int)c2h->__anonCompField_rtl8723bu_c2h_198.bt_info.bt_has_reset != 0U) {
      #line 5456 
      bool branch_2;
      #line 5456 
      struct _ddebug __UNIQUE_ID_ddebug609 = {.modname = (char *)"rtl8xxxu", .function = (char *)"rtl8723bu_handle_c2h", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c", .format = (char *)"BT has been reset\n", .lineno = (unsigned int)5456U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
      #line 5456 
      branch_2 = arch_static_branch(& __UNIQUE_ID_ddebug609.key.dd_key_false.key,(_Bool)0);
      #line 5456 
      if ((long)((long)((int)branch_2 != 0)) != 0L) 
                                                    #line 5456 
                                                    __dynamic_dev_dbg(& __UNIQUE_ID_ddebug609,dev,(char *)"BT has been reset\n");
    }
    #line 5457 
    if ((unsigned int)c2h->__anonCompField_rtl8723bu_c2h_198.bt_info.tx_rx_mask != 0U) {
      #line 5458 
      bool branch_3;
      #line 5458 
      struct _ddebug __UNIQUE_ID_ddebug610 = {.modname = (char *)"rtl8xxxu", .function = (char *)"rtl8723bu_handle_c2h", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c", .format = (char *)"BT TRx mask\n", .lineno = (unsigned int)5458U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
      #line 5458 
      branch_3 = arch_static_branch(& __UNIQUE_ID_ddebug610.key.dd_key_false.key,(_Bool)0);
      #line 5458 
      if ((long)((long)((int)branch_3 != 0)) != 0L) 
                                                    #line 5458 
                                                    __dynamic_dev_dbg(& __UNIQUE_ID_ddebug610,dev,(char *)"BT TRx mask\n");
    }
    #line 5460 
    break;
    #line 5461 
    case 11: 
             #line 5461 
    ;
    {
      #line 5462 
      bool branch_4;
      #line 5462 
      struct _ddebug __UNIQUE_ID_ddebug611 = {.modname = (char *)"rtl8xxxu", .function = (char *)"rtl8723bu_handle_c2h", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c", .format = (char *)"C2H_MP_INFO ext ID %02x, status %02x\n", .lineno = (unsigned int)5462U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
      #line 5462 
      branch_4 = arch_static_branch(& __UNIQUE_ID_ddebug611.key.dd_key_false.key,(_Bool)0);
      #line 5462 
      if ((long)((long)((int)branch_4 != 0)) != 0L) 
                                                    #line 5462 
                                                    __dynamic_dev_dbg(& __UNIQUE_ID_ddebug611,dev,(char *)"C2H_MP_INFO ext ID %02x, status %02x\n",(int)c2h->__anonCompField_rtl8723bu_c2h_198.bt_mp_info.ext_id,(int)c2h->__anonCompField_rtl8723bu_c2h_198.bt_mp_info.status);
    }
    #line 5464 
    break;
    #line 5465 
    case 12: 
             #line 5465 
    ;
    {
      #line 5466 
      bool branch_5;
      #line 5466 
      struct _ddebug __UNIQUE_ID_ddebug612 = {.modname = (char *)"rtl8xxxu", .function = (char *)"rtl8723bu_handle_c2h", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c", .format = (char *)"C2H RA RPT: rate %02x, unk %i, macid %02x, noise %i\n", .lineno = (unsigned int)5466U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
      #line 5466 
      branch_5 = arch_static_branch(& __UNIQUE_ID_ddebug612.key.dd_key_false.key,(_Bool)0);
      #line 5466 
      if ((long)((long)((int)branch_5 != 0)) != 0L) 
                                                    #line 5466 
                                                    __dynamic_dev_dbg(& __UNIQUE_ID_ddebug612,dev,(char *)"C2H RA RPT: rate %02x, unk %i, macid %02x, noise %i\n",(int)c2h->__anonCompField_rtl8723bu_c2h_198.ra_report.rate,(int)c2h->__anonCompField_rtl8723bu_c2h_198.ra_report.dummy0_0,(int)c2h->__anonCompField_rtl8723bu_c2h_198.ra_report.macid,(int)c2h->__anonCompField_rtl8723bu_c2h_198.ra_report.noisy_state);
    }
    #line 5470 
    break;
    #line 5471 
    default: 
             #line 5471 
    ;
    #line 5472 
    _dev_info(dev,(char *)"Unhandled C2H event %02x seq %02x\n",(int)c2h->id,(int)c2h->seq);
    #line 5474 
    print_hex_dump((char *)"\001",(char *)"C2H content: ",0,16,1,(void *)(& c2h->__anonCompField_rtl8723bu_c2h_198.raw.payload),(unsigned long)len,(_Bool)0);
    #line 5476 
    break;
  }
  #line 5479 
  cif___ldv_spin_lock_c2hcmd_lock_of_rtl8xxxu_priv(& priv->c2hcmd_lock);
  #line 5480 
  __skb_queue_tail(& priv->c2hcmd_queue,skb);
  #line 5481 
  cif_spin_unlock_irqrestore_c2hcmd_lock_of_rtl8xxxu_priv(& priv->c2hcmd_lock,flags);
  #line 5483 
  cif_schedule_work(& priv->c2hcmd_work);
  #line 5484 
  return;
}

#line 5486  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
int rtl8xxxu_parse_rxdesc16(struct rtl8xxxu_priv *priv, struct sk_buff *skb)
{
  #line 5489 
  struct ieee80211_rx_status *rx_status;
  #line 5490 
  struct rtl8xxxu_rxdesc16 *rx_desc;
  #line 5491 
  struct rtl8723au_phy_stats *phy_stats;
  #line 5493 
  __le32 *_rx_desc_le;
  #line 5494 
  u32 *_rx_desc;
  #line 5495 
  int drvinfo_sz;
  #line 5495 
  int desc_shift;
  #line 5496 
  int i;
  #line 5496 
  int pkt_cnt;
  #line 5496 
  int pkt_len;
  #line 5496 
  int urb_len;
  #line 5496 
  int pkt_offset;
  #line 5488 
  struct ieee80211_hw *hw = priv->hw;
  #line 5492 
  struct sk_buff *next_skb = (struct sk_buff *)0;
  #line 5498 
  urb_len = (int)skb->len;
  #line 5499 
  pkt_cnt = 0;
  #line 5501 
  while (1) {
    {
      #line 5520 
      int __y;
      #line 5502 
      rx_desc = (struct rtl8xxxu_rxdesc16 *)skb->data;
      #line 5503 
      _rx_desc_le = (__le32 *)skb->data;
      #line 5504 
      _rx_desc = (u32 *)skb->data;
      #line 5506 
      i = 0;
      #line 5506 
      while ((unsigned int)i <= 5U) {
        #line 5508 
        *(_rx_desc + (unsigned long)i) = *(_rx_desc_le + (unsigned long)i);
        #line 5507 
        i ++;
      }
      #line 5514 
      if (pkt_cnt == 0) 
                        #line 5515 
                        pkt_cnt = (int)rx_desc->pkt_cnt;
      #line 5516 
      pkt_len = (int)rx_desc->pktlen;
      #line 5518 
      drvinfo_sz = (int)rx_desc->drvinfo_sz * 8;
      #line 5519 
      desc_shift = (int)rx_desc->shift;
      #line 5520 
      __y = 128;
      #line 5520 
      pkt_offset = (int)(((((unsigned long)((pkt_len + drvinfo_sz) + desc_shift) + (unsigned long)(
         __y + -1)) + 24UL) / (unsigned long)__y) * (unsigned long)__y);
      #line 5527 
      if (pkt_cnt > 1 && (unsigned long)urb_len > (unsigned long)pkt_offset + 24UL) 
        #line 5529 
        next_skb = skb_clone(skb,2592U);
      #line 5531 
      rx_status = IEEE80211_SKB_RXCB(skb);
      #line 5532 
      memset((void *)rx_status,0,48UL);
      #line 5534 
      skb_pull(skb,24U);
      #line 5536 
      phy_stats = (struct rtl8723au_phy_stats *)skb->data;
      #line 5538 
      skb_pull(skb,(unsigned int)(drvinfo_sz + desc_shift));
      #line 5540 
      skb_trim(skb,(unsigned int)pkt_len);
      #line 5542 
      if ((unsigned int)rx_desc->phy_stats != 0U) 
                                                  #line 5543 
                                                  rtl8xxxu_rx_parse_phystats(priv,rx_status,phy_stats,(unsigned int)rx_desc->rxmcs);
      #line 5546 
      rx_status->mactime = (unsigned long long)rx_desc->tsfl;
      #line 5547 
      rx_status->flag |= 128U;
      #line 5549 
      if ((unsigned int)rx_desc->swdec == 0U) 
                                              #line 5550 
                                              rx_status->flag |= 2U;
      #line 5551 
      if ((unsigned int)rx_desc->crc32 != 0U) 
                                              #line 5552 
                                              rx_status->flag |= 32U;
      #line 5553 
      if ((unsigned int)rx_desc->bw != 0U) 
                                           #line 5554 
                                           rx_status->bw = (unsigned char)3U;
      #line 5556 
      if ((unsigned int)rx_desc->rxht != 0U) {
        #line 5557 
        rx_status->encoding = (unsigned char)1U;
        #line 5558 
        rx_status->rate_idx = (unsigned char)((unsigned int)((unsigned char)rx_desc->rxmcs) + 244U);
      }
      else 
           #line 5560 
           rx_status->rate_idx = (unsigned char)rx_desc->rxmcs;
      #line 5563 
      rx_status->freq = (unsigned short)(hw->conf.chandef.chan)->center_freq;
      #line 5564 
      rx_status->band = (unsigned char)(hw->conf.chandef.chan)->band;
      #line 5566 
      ieee80211_rx_irqsafe(hw,skb);
      #line 5568 
      skb = next_skb;
      #line 5569 
      if (skb != (struct sk_buff *)0) 
                                      #line 5570 
                                      skb_pull(next_skb,(unsigned int)pkt_offset);
      #line 5572 
      pkt_cnt --;
      #line 5573 
      urb_len -= pkt_offset;
    }
    #line 5574 
    if (! ((skb != (struct sk_buff *)0 && urb_len > 0) && pkt_cnt > 0)) 
      #line 5501 
      break;
  }
  #line 5576 
  return 0;
}

#line 5579  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
int rtl8xxxu_parse_rxdesc24(struct rtl8xxxu_priv *priv, struct sk_buff *skb)
{
  #line 5585 
  struct rtl8723au_phy_stats *phy_stats;
  #line 5588 
  int drvinfo_sz;
  #line 5588 
  int desc_shift;
  #line 5589 
  int i;
  #line 5581 
  struct ieee80211_hw *hw = priv->hw;
  #line 5582 
  struct ieee80211_rx_status *rx_status = IEEE80211_SKB_RXCB(skb);
  #line 5583 
  struct rtl8xxxu_rxdesc24 *rx_desc = (struct rtl8xxxu_rxdesc24 *)skb->data;
  #line 5586 
  __le32 *_rx_desc_le = (__le32 *)skb->data;
  #line 5587 
  u32 *_rx_desc = (u32 *)skb->data;
  #line 5591 
  i = 0;
  #line 5591 
  while ((unsigned int)i <= 5U) {
    #line 5592 
    *(_rx_desc + (unsigned long)i) = *(_rx_desc_le + (unsigned long)i);
    #line 5591 
    i ++;
  }
  #line 5594 
  memset((void *)rx_status,0,48UL);
  #line 5596 
  skb_pull(skb,24U);
  #line 5598 
  phy_stats = (struct rtl8723au_phy_stats *)skb->data;
  #line 5600 
  drvinfo_sz = (int)rx_desc->drvinfo_sz * 8;
  #line 5601 
  desc_shift = (int)rx_desc->shift;
  #line 5602 
  skb_pull(skb,(unsigned int)(drvinfo_sz + desc_shift));
  #line 5604 
  if ((unsigned int)rx_desc->rpt_sel != 0U) {
    #line 5605 
    struct device *dev = & (priv->udev)->dev;
    {
      #line 5606 
      bool branch;
      #line 5606 
      struct _ddebug __UNIQUE_ID_ddebug613 = {.modname = (char *)"rtl8xxxu", .function = (char *)"rtl8xxxu_parse_rxdesc24", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c", .format = (char *)"%s: C2H packet\n", .lineno = (unsigned int)5606U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
      #line 5606 
      branch = arch_static_branch(& __UNIQUE_ID_ddebug613.key.dd_key_false.key,(_Bool)0);
      #line 5606 
      if ((long)((long)((int)branch != 0)) != 0L) 
                                                  #line 5606 
                                                  __dynamic_dev_dbg(& __UNIQUE_ID_ddebug613,dev,(char *)"%s: C2H packet\n",(char *)"rtl8xxxu_parse_rxdesc24");
    }
    #line 5607 
    rtl8723bu_handle_c2h(priv,skb);
    #line 5608 
    return 1;
  }
  #line 5611 
  if ((unsigned int)rx_desc->phy_stats != 0U) 
                                              #line 5612 
                                              rtl8xxxu_rx_parse_phystats(priv,rx_status,phy_stats,(unsigned int)rx_desc->rxmcs);
  #line 5615 
  rx_status->mactime = (unsigned long long)rx_desc->tsfl;
  #line 5616 
  rx_status->flag |= 128U;
  #line 5618 
  if ((unsigned int)rx_desc->swdec == 0U) 
                                          #line 5619 
                                          rx_status->flag |= 2U;
  #line 5620 
  if ((unsigned int)rx_desc->crc32 != 0U) 
                                          #line 5621 
                                          rx_status->flag |= 32U;
  #line 5622 
  if ((unsigned int)rx_desc->bw != 0U) 
                                       #line 5623 
                                       rx_status->bw = (unsigned char)3U;
  #line 5625 
  if ((unsigned int)rx_desc->rxmcs > 11U) {
    #line 5626 
    rx_status->encoding = (unsigned char)1U;
    #line 5627 
    rx_status->rate_idx = (unsigned char)((unsigned int)((unsigned char)rx_desc->rxmcs) + 244U);
  }
  else 
       #line 5629 
       rx_status->rate_idx = (unsigned char)rx_desc->rxmcs;
  #line 5632 
  rx_status->freq = (unsigned short)(hw->conf.chandef.chan)->center_freq;
  #line 5633 
  rx_status->band = (unsigned char)(hw->conf.chandef.chan)->band;
  #line 5635 
  ieee80211_rx_irqsafe(hw,skb);
  #line 5636 
  return 0;
}

#line 5639  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
static void rtl8xxxu_rx_complete(struct urb *urb)
{
  #line 5642 
  void *__mptr;
  #line 5642 
  __mptr = (void *)urb;
  #line 5641 
  struct rtl8xxxu_rx_urb *rx_urb = ((struct rtl8xxxu_rx_urb *)__mptr);
  #line 5643 
  struct ieee80211_hw *hw = rx_urb->hw;
  #line 5644 
  struct rtl8xxxu_priv *priv = (struct rtl8xxxu_priv *)hw->priv;
  #line 5645 
  struct sk_buff *skb = (struct sk_buff *)urb->context;
  #line 5646 
  struct device *dev = & (priv->udev)->dev;
  #line 5648 
  skb_put(skb,urb->actual_length);
  #line 5650 
  if (urb->status == 0) {
    #line 5651 
    (*((priv->fops)->parse_rx_desc))(priv,skb);
    #line 5653 
    skb = (struct sk_buff *)0;
    #line 5654 
    rx_urb->urb.context = (void *)0;
    #line 5655 
    rtl8xxxu_queue_rx_urb(priv,rx_urb);
  }
  else {
    {
      #line 5657 
      bool branch;
      #line 5657 
      struct _ddebug __UNIQUE_ID_ddebug614 = {.modname = (char *)"rtl8xxxu", .function = (char *)"rtl8xxxu_rx_complete", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c", .format = (char *)"%s: status %i\n", .lineno = (unsigned int)5657U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
      #line 5657 
      branch = arch_static_branch(& __UNIQUE_ID_ddebug614.key.dd_key_false.key,(_Bool)0);
      #line 5657 
      if ((long)((long)((int)branch != 0)) != 0L) 
                                                  #line 5657 
                                                  __dynamic_dev_dbg(& __UNIQUE_ID_ddebug614,dev,(char *)"%s: status %i\n",(char *)"rtl8xxxu_rx_complete",urb->status);
    }
    #line 5658 
    goto cleanup;
  }
  #line 5660 
  return;
  #line 5662 
  cleanup: 
           #line 5662 
  ;
  #line 5663 
  usb_free_urb(urb);
  #line 5664 
  consume_skb(skb);
  #line 5665 
  return;
}

#line 5668  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
static int rtl8xxxu_submit_rx_urb(struct rtl8xxxu_priv *priv, struct rtl8xxxu_rx_urb *rx_urb)
{
  #line 5672 
  struct sk_buff *skb;
  #line 5673 
  int skb_size;
  #line 5674 
  int ret;
  #line 5674 
  int rx_desc_sz;
  #line 5671 
  struct rtl8xxxu_fileops *fops = priv->fops;
  #line 5676 
  rx_desc_sz = (int)fops->rx_desc_size;
  #line 5678 
  if ((unsigned int)priv->rx_buf_aggregation != 0U && fops->rx_agg_buf_size != 0) {
    #line 5679 
    skb_size = fops->rx_agg_buf_size;
    #line 5680 
    skb_size = (int)((unsigned int)(skb_size + rx_desc_sz) + 28U);
  }
  else 
       #line 5682 
       skb_size = 2352;
  #line 5685 
  skb = __netdev_alloc_skb((struct net_device *)0,(unsigned int)skb_size,3264U);
  #line 5686 
  if (skb == (struct sk_buff *)0) 
                                  #line 5687 
                                  return -12;
  #line 5689 
  memset((void *)skb->data,0,(unsigned long)rx_desc_sz);
  #line 5690 
  usb_fill_bulk_urb(& rx_urb->urb,priv->udev,priv->pipe_in,(void *)skb->data,skb_size,& rtl8xxxu_rx_complete,(void *)skb);
  #line 5692 
  usb_anchor_urb(& rx_urb->urb,& priv->rx_anchor);
  #line 5693 
  ret = cif_usb_submit_urb(& rx_urb->urb,2592U);
  #line 5694 
  if (ret != 0) 
                #line 5695 
                usb_unanchor_urb(& rx_urb->urb);
  #line 5696 
  return ret;
}

#line 5699  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
static void rtl8xxxu_int_complete(struct urb *urb)
{
  #line 5703 
  int ret;
  #line 5701 
  struct rtl8xxxu_priv *priv = (struct rtl8xxxu_priv *)urb->context;
  #line 5702 
  struct device *dev = & (priv->udev)->dev;
  #line 5705 
  if ((rtl8xxxu_debug & 16384) != 0) {
    #line 5706 
    bool branch;
    #line 5706 
    struct _ddebug __UNIQUE_ID_ddebug615 = {.modname = (char *)"rtl8xxxu", .function = (char *)"rtl8xxxu_int_complete", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c", .format = (char *)"%s: status %i\n", .lineno = (unsigned int)5706U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
    #line 5706 
    branch = arch_static_branch(& __UNIQUE_ID_ddebug615.key.dd_key_false.key,(_Bool)0);
    #line 5706 
    if ((long)((long)((int)branch != 0)) != 0L) 
                                                #line 5706 
                                                __dynamic_dev_dbg(& __UNIQUE_ID_ddebug615,dev,(char *)"%s: status %i\n",(char *)"rtl8xxxu_int_complete",urb->status);
  }
  #line 5707 
  if (urb->status == 0) {
    #line 5708 
    usb_anchor_urb(urb,& priv->int_anchor);
    #line 5709 
    ret = cif_usb_submit_urb(urb,2592U);
    #line 5710 
    if (ret != 0) 
                  #line 5711 
                  usb_unanchor_urb(urb);
  }
  else {
    #line 5713 
    bool branch_0;
    #line 5713 
    struct _ddebug __UNIQUE_ID_ddebug616 = {.modname = (char *)"rtl8xxxu", .function = (char *)"rtl8xxxu_int_complete", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c", .format = (char *)"%s: Error %i\n", .lineno = (unsigned int)5713U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
    #line 5713 
    branch_0 = arch_static_branch(& __UNIQUE_ID_ddebug616.key.dd_key_false.key,(_Bool)0);
    #line 5713 
    if ((long)((long)((int)branch_0 != 0)) != 0L) 
                                                  #line 5713 
                                                  __dynamic_dev_dbg(& __UNIQUE_ID_ddebug616,dev,(char *)"%s: Error %i\n",(char *)"rtl8xxxu_int_complete",urb->status);
  }
  #line 5715 
  return;
}

#line 5718  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
static int rtl8xxxu_submit_int_urb(struct ieee80211_hw *hw)
{
  #line 5721 
  struct urb *urb;
  #line 5722 
  u32 val32;
  #line 5723 
  int ret;
  #line 5720 
  struct rtl8xxxu_priv *priv = (struct rtl8xxxu_priv *)hw->priv;
  #line 5725 
  urb = usb_alloc_urb(0,3264U);
  #line 5726 
  if (urb == (struct urb *)0) 
                              #line 5727 
                              return -12;
  #line 5729 
  usb_fill_int_urb(urb,priv->udev,priv->pipe_interrupt,(void *)(& priv->int_buf),56,& rtl8xxxu_int_complete,(void *)priv,1);
  #line 5732 
  usb_anchor_urb(urb,& priv->int_anchor);
  #line 5733 
  ret = cif_usb_submit_urb(urb,3264U);
  #line 5734 
  if (ret != 0) {
    #line 5735 
    usb_unanchor_urb(urb);
    #line 5736 
    usb_free_urb(urb);
    #line 5737 
    goto error;
  }
  #line 5740 
  val32 = rtl8xxxu_read32(priv,(unsigned short)65080);
  #line 5741 
  val32 |= 256U;
  #line 5742 
  rtl8xxxu_write32(priv,(unsigned short)65080,val32);
  #line 5744 
  error: 
         #line 5744 
  ;
  #line 5745 
  return ret;
}

#line 5748  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
static int rtl8xxxu_add_interface(struct ieee80211_hw *hw, struct ieee80211_vif *vif)
{
  #line 5752 
  int ret;
  #line 5753 
  u8 val8;
  #line 5751 
  struct rtl8xxxu_priv *priv = (struct rtl8xxxu_priv *)hw->priv;
  #line 5755 
  switch ((unsigned int)vif->type) {
    #line 5756 
    case (unsigned int)2: 
                          #line 5756 
    ;
    #line 5757 
    if (priv->vif == (struct ieee80211_vif *)0) 
                                                #line 5758 
                                                priv->vif = vif; else 
                                                                   #line 5760 
                                                                   return -95;
    #line 5761 
    rtl8xxxu_stop_tx_beacon(priv);
    #line 5763 
    val8 = rtl8xxxu_read8(priv,(unsigned short)1360);
    #line 5764 
    val8 = (unsigned char)((unsigned int)val8 | 25U);
    #line 5766 
    rtl8xxxu_write8(priv,(unsigned short)1360,(unsigned char)((int)val8));
    #line 5767 
    ret = 0;
    #line 5768 
    break;
    #line 5769 
    default: 
             #line 5769 
    ;
    #line 5770 
    ret = -95;
  }
  #line 5773 
  rtl8xxxu_set_linktype(priv,vif->type);
  #line 5775 
  return ret;
}

#line 5778  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
static void rtl8xxxu_remove_interface(struct ieee80211_hw *hw, struct ieee80211_vif *vif)
{
  #line 5781 
  struct rtl8xxxu_priv *priv = (struct rtl8xxxu_priv *)hw->priv;
  {
    #line 5783 
    bool branch;
    #line 5783 
    struct _ddebug __UNIQUE_ID_ddebug617 = {.modname = (char *)"rtl8xxxu", .function = (char *)"rtl8xxxu_remove_interface", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c", .format = (char *)"%s\n", .lineno = (unsigned int)5783U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
    #line 5783 
    branch = arch_static_branch(& __UNIQUE_ID_ddebug617.key.dd_key_false.key,(_Bool)0);
    #line 5783 
    if ((long)((long)((int)branch != 0)) != 0L) 
                                                #line 5783 
                                                __dynamic_dev_dbg(& __UNIQUE_ID_ddebug617,& (priv->udev)->dev,(char *)"%s\n",(char *)"rtl8xxxu_remove_interface");
  }
  #line 5785 
  if (priv->vif != (struct ieee80211_vif *)0) 
                                              #line 5786 
                                              priv->vif = (struct ieee80211_vif *)0;
  #line 5787 
  return;
}

#line 5789  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
static int rtl8xxxu_config(struct ieee80211_hw *hw, u32 changed)
{
  #line 5793 
  u16 val16;
  #line 5794 
  int channel;
  #line 5795 
  bool ht40;
  #line 5791 
  struct rtl8xxxu_priv *priv = (struct rtl8xxxu_priv *)hw->priv;
  #line 5792 
  struct device *dev = & (priv->udev)->dev;
  #line 5794 
  int ret = 0;
  #line 5797 
  if ((rtl8xxxu_debug & 16) != 0) 
                                  #line 5798 
                                  _dev_info(dev,(char *)"%s: channel: %i (changed %08x chandef.width %02x)\n",(char *)"rtl8xxxu_config",(int)(hw->conf.chandef.chan)->hw_value,changed,(unsigned int)hw->conf.chandef.width);
  #line 5803 
  if ((changed & 128U) != 0U) {
    #line 5804 
    val16 = (unsigned short)(((int)hw->conf.long_frame_max_tx_count & 63) | (((int)hw->conf.short_frame_max_tx_count << 8) & 16128));
    #line 5808 
    rtl8xxxu_write16(priv,(unsigned short)1066,(unsigned short)((int)val16));
  }
  #line 5811 
  if ((changed & 64U) != 0U) {
    #line 5812 
    switch ((unsigned int)hw->conf.chandef.width) {
      #line 5813 
      case (unsigned int)0: 
                            #line 5813 
      ;
      #line 5814 
      case (unsigned int)1: 
                            #line 5814 
      ;
      #line 5815 
      ht40 = (_Bool)0;
      #line 5816 
      break;
      #line 5817 
      case (unsigned int)2: 
                            #line 5817 
      ;
      #line 5818 
      ht40 = (_Bool)1;
      #line 5819 
      break;
      #line 5820 
      default: 
               #line 5820 
      ;
      #line 5821 
      ret = -524;
      #line 5822 
      goto exit;
    }
    #line 5825 
    channel = (int)(hw->conf.chandef.chan)->hw_value;
    #line 5827 
    (*((priv->fops)->set_tx_power))(priv,channel,(_Bool)((bool)((int)ht40) != 0));
    #line 5829 
    (*((priv->fops)->config_channel))(hw);
  }
  #line 5832 
  exit: 
        #line 5832 
  ;
  #line 5833 
  return ret;
}

#line 5836  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
static int rtl8xxxu_conf_tx(struct ieee80211_hw *hw, struct ieee80211_vif *vif, u16 queue, struct ieee80211_tx_queue_params *param)
{
  #line 5842 
  u32 val32;
  #line 5843 
  u8 aifs;
  #line 5843 
  u8 acm_ctrl;
  #line 5843 
  u8 acm_bit;
  #line 5840 
  struct rtl8xxxu_priv *priv = (struct rtl8xxxu_priv *)hw->priv;
  #line 5841 
  struct device *dev = & (priv->udev)->dev;
  #line 5845 
  aifs = param->aifs;
  #line 5847 
  val32 = (unsigned int)(((int)aifs | (fls((unsigned int)param->cw_min) << 8)) | (fls((unsigned int)param->cw_max) << 12)) | ((unsigned int)param->txop << 16);
  #line 5852 
  acm_ctrl = rtl8xxxu_read8(priv,(unsigned short)1472);
  {
    #line 5853 
    bool branch;
    #line 5853 
    struct _ddebug __UNIQUE_ID_ddebug618 = {.modname = (char *)"rtl8xxxu", .function = (char *)"rtl8xxxu_conf_tx", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c", .format = (char *)"%s: IEEE80211 queue %02x val %08x, acm %i, acm_ctrl %02x\n", .lineno = (unsigned int)5853U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
    #line 5853 
    branch = arch_static_branch(& __UNIQUE_ID_ddebug618.key.dd_key_false.key,(_Bool)0);
    #line 5853 
    if ((long)((long)((int)branch != 0)) != 0L) 
                                                #line 5853 
                                                __dynamic_dev_dbg(& __UNIQUE_ID_ddebug618,dev,(char *)"%s: IEEE80211 queue %02x val %08x, acm %i, acm_ctrl %02x\n",(char *)"rtl8xxxu_conf_tx",(int)queue,val32,(int)param->acm,(int)acm_ctrl);
  }
  #line 5857 
  switch ((int)queue) {
    #line 5858 
    case 0: 
            #line 5858 
    ;
    #line 5859 
    acm_bit = (unsigned char)8U;
    #line 5860 
    rtl8xxxu_write32(priv,(unsigned short)1280,val32);
    #line 5861 
    break;
    #line 5862 
    case 1: 
            #line 5862 
    ;
    #line 5863 
    acm_bit = (unsigned char)4U;
    #line 5864 
    rtl8xxxu_write32(priv,(unsigned short)1284,val32);
    #line 5865 
    break;
    #line 5866 
    case 2: 
            #line 5866 
    ;
    #line 5867 
    acm_bit = (unsigned char)2U;
    #line 5868 
    rtl8xxxu_write32(priv,(unsigned short)1288,val32);
    #line 5869 
    break;
    #line 5870 
    case 3: 
            #line 5870 
    ;
    #line 5871 
    acm_bit = (unsigned char)1U;
    #line 5872 
    rtl8xxxu_write32(priv,(unsigned short)1292,val32);
    #line 5873 
    break;
    #line 5874 
    default: 
             #line 5874 
    ;
    #line 5875 
    acm_bit = (unsigned char)0U;
    #line 5876 
    break;
  }
  #line 5879 
  if ((int)param->acm != 0) 
                            #line 5880 
                            acm_ctrl = (unsigned char)((int)acm_ctrl | (int)acm_bit); else 
                                                                    #line 5882 
                                                                    acm_ctrl = (unsigned char)(~ ((int)acm_bit) & (int)acm_ctrl);
  #line 5883 
  rtl8xxxu_write8(priv,(unsigned short)1472,(unsigned char)((int)acm_ctrl));
  #line 5885 
  return 0;
}

#line 5888  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
static void rtl8xxxu_configure_filter(struct ieee80211_hw *hw, unsigned int changed_flags, unsigned int *total_flags, u64 multicast)
{
  #line 5892 
  struct rtl8xxxu_priv *priv = (struct rtl8xxxu_priv *)hw->priv;
  #line 5893 
  u32 rcr = rtl8xxxu_read32(priv,(unsigned short)1544);
  {
    #line 5895 
    bool branch;
    #line 5895 
    struct _ddebug __UNIQUE_ID_ddebug619 = {.modname = (char *)"rtl8xxxu", .function = (char *)"rtl8xxxu_configure_filter", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c", .format = (char *)"%s: changed_flags %08x, total_flags %08x\n", .lineno = (unsigned int)5895U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
    #line 5895 
    branch = arch_static_branch(& __UNIQUE_ID_ddebug619.key.dd_key_false.key,(_Bool)0);
    #line 5895 
    if ((long)((long)((int)branch != 0)) != 0L) 
                                                #line 5895 
                                                __dynamic_dev_dbg(& __UNIQUE_ID_ddebug619,& (priv->udev)->dev,(char *)"%s: changed_flags %08x, total_flags %08x\n",(char *)"rtl8xxxu_configure_filter",changed_flags,*total_flags);
  }
  #line 5902 
  if ((*total_flags & 4U) != 0U) 
                                 #line 5903 
                                 rcr |= 256U; else 
                                                   #line 5905 
                                                   rcr &= 4294967039U;
  #line 5911 
  if ((*total_flags & 16U) != 0U) 
                                  #line 5912 
                                  rcr &= 4294967167U; else 
                                                           #line 5914 
                                                           rcr |= 128U;
  #line 5916 
  if ((*total_flags & 32U) != 0U) 
                                  #line 5917 
                                  rcr |= 4096U; else 
                                                     #line 5919 
                                                     rcr &= 4294963199U;
  #line 5921 
  if ((*total_flags & 64U) != 0U) {
    #line 5922 
    rcr |= 1U;
    #line 5923 
    rcr &= 4294967231U;
  }
  else {
    #line 5925 
    rcr &= 4294967294U;
    #line 5926 
    rcr |= 64U;
  }
  #line 5929 
  if ((*total_flags & 128U) != 0U) 
                                   #line 5930 
                                   rcr |= 32U; else 
                                                    #line 5932 
                                                    rcr &= 4294967263U;
  #line 5938 
  rtl8xxxu_write32(priv,(unsigned short)1544,rcr);
  #line 5940 
  *total_flags &= 502U;
  #line 5941 
  return;
}

#line 5945  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
static int rtl8xxxu_set_rts_threshold(struct ieee80211_hw *hw, u32 rts)
{
  #line 5947 
  if (rts > 2347U) 
                   #line 5948 
                   return -22;
  #line 5950 
  return 0;
}

#line 5953  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
static int rtl8xxxu_set_key(struct ieee80211_hw *hw, enum set_key_cmd cmd, struct ieee80211_vif *vif, struct ieee80211_sta *sta, struct ieee80211_key_conf *key)
{
  #line 5960 
  u8 mac_addr[6U];
  #line 5961 
  u8 val8;
  #line 5962 
  u16 val16;
  #line 5963 
  u32 val32;
  #line 5958 
  struct rtl8xxxu_priv *priv = (struct rtl8xxxu_priv *)hw->priv;
  #line 5959 
  struct device *dev = & (priv->udev)->dev;
  #line 5964 
  int retval = -95;
  {
    #line 5966 
    bool branch;
    #line 5966 
    struct _ddebug __UNIQUE_ID_ddebug620 = {.modname = (char *)"rtl8xxxu", .function = (char *)"rtl8xxxu_set_key", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c", .format = (char *)"%s: cmd %02x, cipher %08x, index %i\n", .lineno = (unsigned int)5966U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
    #line 5966 
    branch = arch_static_branch(& __UNIQUE_ID_ddebug620.key.dd_key_false.key,(_Bool)0);
    #line 5966 
    if ((long)((long)((int)branch != 0)) != 0L) 
                                                #line 5966 
                                                __dynamic_dev_dbg(& __UNIQUE_ID_ddebug620,dev,(char *)"%s: cmd %02x, cipher %08x, index %i\n",(char *)"rtl8xxxu_set_key",(unsigned int)cmd,key->cipher,(int)key->keyidx);
  }
  #line 5969 
  if (vif->type != (unsigned int)NL80211_IFTYPE_STATION) 
                                                         #line 5970 
                                                         return -95;
  #line 5972 
  if ((int)key->keyidx > 3) 
                            #line 5973 
                            return -95;
  #line 5975 
  switch (key->cipher) {
    #line 5976 
    case (u32)1027073: 
                       #line 5976 
    ;
    #line 5977 
    case (u32)1027077: 
                       #line 5977 
    ;
    #line 5979 
    break;
    #line 5980 
    case (u32)1027076: 
                       #line 5980 
    ;
    #line 5981 
    key->flags = (unsigned short)((unsigned int)key->flags | 16U);
    #line 5982 
    break;
    #line 5983 
    case (u32)1027074: 
                       #line 5983 
    ;
    #line 5984 
    key->flags = (unsigned short)((unsigned int)key->flags | 4U);
    #line 5985 
    break;
    #line 5986 
    default: 
             #line 5986 
    ;
    #line 5987 
    return -95;
  }
  #line 5990 
  if (((int)key->flags & 8) != 0) {
    {
      #line 5991 
      bool branch_0;
      #line 5991 
      struct _ddebug __UNIQUE_ID_ddebug621 = {.modname = (char *)"rtl8xxxu", .function = (char *)"rtl8xxxu_set_key", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c", .format = (char *)"%s: pairwise key\n", .lineno = (unsigned int)5991U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
      #line 5991 
      branch_0 = arch_static_branch(& __UNIQUE_ID_ddebug621.key.dd_key_false.key,(_Bool)0);
      #line 5991 
      if ((long)((long)((int)branch_0 != 0)) != 0L) 
                                                    #line 5991 
                                                    __dynamic_dev_dbg(& __UNIQUE_ID_ddebug621,dev,(char *)"%s: pairwise key\n",(char *)"rtl8xxxu_set_key");
    }
    #line 5992 
    ether_addr_copy((u8 *)(& mac_addr),(u8 *)(& sta->addr));
  }
  else {
    {
      #line 5994 
      bool branch_1;
      #line 5994 
      struct _ddebug __UNIQUE_ID_ddebug622 = {.modname = (char *)"rtl8xxxu", .function = (char *)"rtl8xxxu_set_key", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c", .format = (char *)"%s: group key\n", .lineno = (unsigned int)5994U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
      #line 5994 
      branch_1 = arch_static_branch(& __UNIQUE_ID_ddebug622.key.dd_key_false.key,(_Bool)0);
      #line 5994 
      if ((long)((long)((int)branch_1 != 0)) != 0L) 
                                                    #line 5994 
                                                    __dynamic_dev_dbg(& __UNIQUE_ID_ddebug622,dev,(char *)"%s: group key\n",(char *)"rtl8xxxu_set_key");
    }
    #line 5995 
    eth_broadcast_addr((u8 *)(& mac_addr));
  }
  #line 5998 
  val16 = rtl8xxxu_read16(priv,(unsigned short)256);
  #line 5999 
  val16 = (unsigned short)((unsigned int)val16 | 512U);
  #line 6000 
  rtl8xxxu_write16(priv,(unsigned short)256,(unsigned short)((int)val16));
  #line 6002 
  val8 = (unsigned char)204U;
  #line 6004 
  val8 = (unsigned char)((unsigned int)val8 | 3U);
  #line 6005 
  rtl8xxxu_write8(priv,(unsigned short)1664,(unsigned char)((int)val8));
  #line 6007 
  switch ((unsigned int)cmd) {
    #line 6008 
    case (unsigned int)0: 
                          #line 6008 
    ;
    #line 6009 
    key->hw_key_idx = (unsigned char)key->keyidx;
    #line 6010 
    key->flags = (unsigned short)((unsigned int)key->flags | 2U);
    #line 6011 
    rtl8xxxu_cam_write(priv,key,(u8 *)(& mac_addr));
    #line 6012 
    retval = 0;
    #line 6013 
    break;
    #line 6014 
    case (unsigned int)1: 
                          #line 6014 
    ;
    #line 6015 
    rtl8xxxu_write32(priv,(unsigned short)1652,0U);
    #line 6016 
    val32 = (unsigned int)((int)key->keyidx << 3) | 2147549184U;
    #line 6018 
    rtl8xxxu_write32(priv,(unsigned short)1648,val32);
    #line 6019 
    retval = 0;
    #line 6020 
    break;
    #line 6021 
    default: 
             #line 6021 
    ;
    #line 6022 
    _dev_warn(dev,(char *)"%s: Unsupported command %02x\n",(char *)"rtl8xxxu_set_key",(unsigned int)cmd);
  }
  #line 6025 
  return retval;
}

#line 6029  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
static int rtl8xxxu_ampdu_action(struct ieee80211_hw *hw, struct ieee80211_vif *vif, struct ieee80211_ampdu_params *params)
{
  #line 6034 
  u8 ampdu_factor;
  #line 6034 
  u8 ampdu_density;
  #line 6032 
  struct rtl8xxxu_priv *priv = (struct rtl8xxxu_priv *)hw->priv;
  #line 6033 
  struct device *dev = & (priv->udev)->dev;
  #line 6035 
  struct ieee80211_sta *sta = params->sta;
  #line 6036 
  enum ieee80211_ampdu_mlme_action action = params->action;
  #line 6038 
  switch ((unsigned int)action) {
    #line 6039 
    case (unsigned int)2: 
                          #line 6039 
    ;
    {
      #line 6040 
      bool branch;
      #line 6040 
      struct _ddebug __UNIQUE_ID_ddebug623 = {.modname = (char *)"rtl8xxxu", .function = (char *)"rtl8xxxu_ampdu_action", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c", .format = (char *)"%s: IEEE80211_AMPDU_TX_START\n", .lineno = (unsigned int)6040U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
      #line 6040 
      branch = arch_static_branch(& __UNIQUE_ID_ddebug623.key.dd_key_false.key,(_Bool)0);
      #line 6040 
      if ((long)((long)((int)branch != 0)) != 0L) 
                                                  #line 6040 
                                                  __dynamic_dev_dbg(& __UNIQUE_ID_ddebug623,dev,(char *)"%s: IEEE80211_AMPDU_TX_START\n",(char *)"rtl8xxxu_ampdu_action");
    }
    #line 6041 
    ampdu_factor = sta->ht_cap.ampdu_factor;
    #line 6042 
    ampdu_density = sta->ht_cap.ampdu_density;
    #line 6043 
    rtl8xxxu_set_ampdu_factor(priv,(unsigned char)((int)ampdu_factor));
    #line 6044 
    rtl8xxxu_set_ampdu_min_space(priv,(unsigned char)((int)ampdu_density));
    {
      #line 6045 
      bool branch_0;
      #line 6045 
      struct _ddebug __UNIQUE_ID_ddebug624 = {.modname = (char *)"rtl8xxxu", .function = (char *)"rtl8xxxu_ampdu_action", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c", .format = (char *)"Changed HT: ampdu_factor %02x, ampdu_density %02x\n", .lineno = (unsigned int)6045U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
      #line 6045 
      branch_0 = arch_static_branch(& __UNIQUE_ID_ddebug624.key.dd_key_false.key,(_Bool)0);
      #line 6045 
      if ((long)((long)((int)branch_0 != 0)) != 0L) 
                                                    #line 6045 
                                                    __dynamic_dev_dbg(& __UNIQUE_ID_ddebug624,dev,(char *)"Changed HT: ampdu_factor %02x, ampdu_density %02x\n",(int)ampdu_factor,(int)ampdu_density);
    }
    #line 6048 
    break;
    #line 6049 
    case (unsigned int)4: 
                          #line 6049 
    ;
    {
      #line 6050 
      bool branch_1;
      #line 6050 
      struct _ddebug __UNIQUE_ID_ddebug625 = {.modname = (char *)"rtl8xxxu", .function = (char *)"rtl8xxxu_ampdu_action", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c", .format = (char *)"%s: IEEE80211_AMPDU_TX_STOP_FLUSH\n", .lineno = (unsigned int)6050U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
      #line 6050 
      branch_1 = arch_static_branch(& __UNIQUE_ID_ddebug625.key.dd_key_false.key,(_Bool)0);
      #line 6050 
      if ((long)((long)((int)branch_1 != 0)) != 0L) 
                                                    #line 6050 
                                                    __dynamic_dev_dbg(& __UNIQUE_ID_ddebug625,dev,(char *)"%s: IEEE80211_AMPDU_TX_STOP_FLUSH\n",(char *)"rtl8xxxu_ampdu_action");
    }
    #line 6051 
    rtl8xxxu_set_ampdu_factor(priv,(unsigned char)0);
    #line 6052 
    rtl8xxxu_set_ampdu_min_space(priv,(unsigned char)0);
    #line 6053 
    break;
    #line 6054 
    case (unsigned int)5: 
                          #line 6054 
    ;
    {
      #line 6055 
      bool branch_2;
      #line 6055 
      struct _ddebug __UNIQUE_ID_ddebug626 = {.modname = (char *)"rtl8xxxu", .function = (char *)"rtl8xxxu_ampdu_action", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c", .format = (char *)"%s: IEEE80211_AMPDU_TX_STOP_FLUSH_CONT\n", .lineno = (unsigned int)6055U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
      #line 6055 
      branch_2 = arch_static_branch(& __UNIQUE_ID_ddebug626.key.dd_key_false.key,(_Bool)0);
      #line 6055 
      if ((long)((long)((int)branch_2 != 0)) != 0L) 
                                                    #line 6055 
                                                    __dynamic_dev_dbg(& __UNIQUE_ID_ddebug626,dev,(char *)"%s: IEEE80211_AMPDU_TX_STOP_FLUSH_CONT\n",(char *)"rtl8xxxu_ampdu_action");
    }
    #line 6057 
    rtl8xxxu_set_ampdu_factor(priv,(unsigned char)0);
    #line 6058 
    rtl8xxxu_set_ampdu_min_space(priv,(unsigned char)0);
    #line 6059 
    break;
    #line 6060 
    case (unsigned int)0: 
                          #line 6060 
    ;
    {
      #line 6061 
      bool branch_3;
      #line 6061 
      struct _ddebug __UNIQUE_ID_ddebug627 = {.modname = (char *)"rtl8xxxu", .function = (char *)"rtl8xxxu_ampdu_action", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c", .format = (char *)"%s: IEEE80211_AMPDU_RX_START\n", .lineno = (unsigned int)6061U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
      #line 6061 
      branch_3 = arch_static_branch(& __UNIQUE_ID_ddebug627.key.dd_key_false.key,(_Bool)0);
      #line 6061 
      if ((long)((long)((int)branch_3 != 0)) != 0L) 
                                                    #line 6061 
                                                    __dynamic_dev_dbg(& __UNIQUE_ID_ddebug627,dev,(char *)"%s: IEEE80211_AMPDU_RX_START\n",(char *)"rtl8xxxu_ampdu_action");
    }
    #line 6062 
    break;
    #line 6063 
    case (unsigned int)1: 
                          #line 6063 
    ;
    {
      #line 6064 
      bool branch_4;
      #line 6064 
      struct _ddebug __UNIQUE_ID_ddebug628 = {.modname = (char *)"rtl8xxxu", .function = (char *)"rtl8xxxu_ampdu_action", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c", .format = (char *)"%s: IEEE80211_AMPDU_RX_STOP\n", .lineno = (unsigned int)6064U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
      #line 6064 
      branch_4 = arch_static_branch(& __UNIQUE_ID_ddebug628.key.dd_key_false.key,(_Bool)0);
      #line 6064 
      if ((long)((long)((int)branch_4 != 0)) != 0L) 
                                                    #line 6064 
                                                    __dynamic_dev_dbg(& __UNIQUE_ID_ddebug628,dev,(char *)"%s: IEEE80211_AMPDU_RX_STOP\n",(char *)"rtl8xxxu_ampdu_action");
    }
    #line 6065 
    break;
    #line 6066 
    default: 
             #line 6066 
    ;
    #line 6067 
    break;
  }
  #line 6069 
  return 0;
}

#line 6072  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
static u8 rtl8xxxu_signal_to_snr(int signal)
{
  #line 6074 
  if (signal < -100) 
                     #line 6075 
                     signal = -100;
  else 
    #line 6076 
    if (signal > 0) 
                    #line 6077 
                    signal = 0;
  #line 6078 
  return (unsigned char)((unsigned int)((unsigned char)signal) + 100U);
}

#line 6081  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
static void rtl8xxxu_refresh_rate_mask(struct rtl8xxxu_priv *priv, int signal, struct ieee80211_sta *sta)
{
  #line 6085 
  u16 wireless_mode;
  #line 6086 
  u8 rssi_level;
  #line 6086 
  u8 ratr_idx;
  #line 6087 
  u8 txbw_40mhz;
  #line 6088 
  u8 snr;
  #line 6088 
  u8 snr_thresh_high;
  #line 6088 
  u8 snr_thresh_low;
  #line 6084 
  struct ieee80211_hw *hw = priv->hw;
  #line 6089 
  u8 go_up_gap = (unsigned char)5U;
  #line 6091 
  rssi_level = priv->rssi_level;
  #line 6092 
  snr = rtl8xxxu_signal_to_snr(signal);
  #line 6093 
  snr_thresh_high = (unsigned char)50U;
  #line 6094 
  snr_thresh_low = (unsigned char)20U;
  #line 6095 
  txbw_40mhz = (unsigned char)(hw->conf.chandef.width == (unsigned int)NL80211_CHAN_WIDTH_40);
  #line 6097 
  switch ((int)rssi_level) {
    #line 6098 
    case 2: 
            #line 6098 
    ;
    #line 6099 
    snr_thresh_high = (unsigned char)((int)snr_thresh_high + (int)go_up_gap);
    #line 6100 
    break;
    #line 6101 
    case 3: 
            #line 6101 
    ;
    #line 6102 
    snr_thresh_high = (unsigned char)((int)snr_thresh_high + (int)go_up_gap);
    #line 6103 
    snr_thresh_low = (unsigned char)((int)snr_thresh_low + (int)go_up_gap);
    #line 6104 
    break;
    #line 6105 
    default: 
             #line 6105 
    ;
    #line 6106 
    break;
  }
  #line 6109 
  if ((int)snr > (int)snr_thresh_high) 
                                       #line 6110 
                                       rssi_level = (unsigned char)1U;
  else 
    #line 6111 
    if ((int)snr > (int)snr_thresh_low) 
                                        #line 6112 
                                        rssi_level = (unsigned char)2U; else 
                                                                    #line 6114 
                                                                    rssi_level = (unsigned char)3U;
  #line 6116 
  if ((int)priv->rssi_level != (int)rssi_level) {
    #line 6117 
    int sgi = 0;
    #line 6118 
    u32 rate_bitmap = 0U;
    #line 6120 
    rcu_read_lock();
    #line 6121 
    rate_bitmap = ((sta->supp_rates[0] & 4095U) | (unsigned int)((int)sta->ht_cap.mcs.rx_mask[0] << 12)) | (unsigned int)((int)sta->ht_cap.mcs.rx_mask[1] << 20);
    #line 6124 
    if (((int)sta->ht_cap.cap & 96) != 0) 
                                          #line 6126 
                                          sgi = 1;
    #line 6127 
    rcu_read_unlock();
    #line 6129 
    wireless_mode = rtl8xxxu_wireless_mode(hw,sta);
    #line 6130 
    switch ((int)wireless_mode) {
      #line 6131 
      case 1: 
              #line 6131 
      ;
      #line 6132 
      ratr_idx = (unsigned char)8U;
      #line 6133 
      if ((rate_bitmap & 12U) != 0U) 
                                     #line 6134 
                                     rate_bitmap &= 13U; else 
                                                              #line 6136 
                                                              rate_bitmap &= 15U;
      #line 6137 
      break;
      #line 6138 
      case 4: 
              #line 6138 
      ;
      #line 6139 
      case 2: 
              #line 6139 
      ;
      #line 6140 
      ratr_idx = (unsigned char)7U;
      #line 6141 
      if ((unsigned int)rssi_level == 1U) 
                                          #line 6142 
                                          rate_bitmap &= 3840U; else 
                                                                  #line 6144 
                                                                  rate_bitmap &= 4080U;
      #line 6145 
      break;
      #line 6146 
      case 3: 
              #line 6146 
      ;
      #line 6147 
      ratr_idx = (unsigned char)6U;
      #line 6148 
      if ((unsigned int)rssi_level == 1U) 
                                          #line 6149 
                                          rate_bitmap &= 3840U;
      else 
        #line 6150 
        if ((unsigned int)rssi_level == 2U) 
                                            #line 6151 
                                            rate_bitmap &= 4080U; else 
                                                                    #line 6153 
                                                                    rate_bitmap &= 4085U;
      #line 6154 
      break;
      #line 6155 
      case 8: 
              #line 6155 
      ;
      #line 6156 
      case 16: 
               #line 6156 
      ;
      #line 6157 
      case 10: 
               #line 6157 
      ;
      #line 6158 
      case 20: 
               #line 6158 
      ;
      #line 6159 
      if ((unsigned int)priv->tx_paths == 2U && (unsigned int)priv->rx_paths == 2U) 
        #line 6160 
        ratr_idx = (unsigned char)4U; else 
                                           #line 6162 
                                           ratr_idx = (unsigned char)5U;
      #line 6163 
      break;
      #line 6164 
      case 11: 
               #line 6164 
      ;
      #line 6165 
      case 9: 
              #line 6165 
      ;
      #line 6166 
      if ((unsigned int)txbw_40mhz != 0U) 
        #line 6167 
        if ((unsigned int)priv->tx_paths == 2U && (unsigned int)priv->rx_paths == 2U) 
          #line 6168 
          ratr_idx = (unsigned char)0U; else 
                                             #line 6170 
                                             ratr_idx = (unsigned char)1U;
      else 
        #line 6172 
        if ((unsigned int)priv->tx_paths == 2U && (unsigned int)priv->rx_paths == 2U) 
          #line 6173 
          ratr_idx = (unsigned char)2U; else 
                                             #line 6175 
                                             ratr_idx = (unsigned char)3U;
      #line 6178 
      if ((unsigned int)priv->tx_paths == 2U && (unsigned int)priv->rx_paths == 2U) 
        #line 6179 
        if ((unsigned int)rssi_level == 1U) 
                                            #line 6180 
                                            rate_bitmap &= 261029888U;
        else 
          #line 6181 
          if ((unsigned int)rssi_level == 2U) 
                                              #line 6182 
                                              rate_bitmap &= 261091328U;
          else 
            #line 6184 
            if ((unsigned int)txbw_40mhz != 0U) 
                                                #line 6185 
                                                rate_bitmap &= 261091349U; else 
                                                                    #line 6187 
                                                                    rate_bitmap &= 261091333U;
      else 
        #line 6190 
        if ((unsigned int)rssi_level == 1U) 
                                            #line 6191 
                                            rate_bitmap &= 983040U;
        else 
          #line 6192 
          if ((unsigned int)rssi_level == 2U) 
                                              #line 6193 
                                              rate_bitmap &= 1044480U;
          else 
            #line 6195 
            if ((unsigned int)txbw_40mhz != 0U) 
                                                #line 6196 
                                                rate_bitmap &= 1044501U; else 
                                                                    #line 6198 
                                                                    rate_bitmap &= 1044485U;
      #line 6201 
      break;
      #line 6202 
      default: 
               #line 6202 
      ;
      #line 6203 
      ratr_idx = (unsigned char)0U;
      #line 6204 
      rate_bitmap &= 268435455U;
      #line 6205 
      break;
    }
    #line 6208 
    priv->rssi_level = rssi_level;
    #line 6209 
    (*((priv->fops)->update_rate_mask))(priv,rate_bitmap,(unsigned char)((int)ratr_idx),sgi);
  }
  #line 6211 
  return;
}

#line 6213  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
static void rtl8xxxu_watchdog_callback(struct work_struct *work)
{
  #line 6218 
  void *__mptr;
  #line 6215 
  struct ieee80211_vif *vif;
  #line 6216 
  struct rtl8xxxu_priv *priv;
  #line 6218 
  __mptr = (void *)work;
  #line 6218 
  priv = ((struct rtl8xxxu_priv *)(__mptr + 18446744073709549472U));
  #line 6219 
  vif = priv->vif;
  #line 6221 
  if (vif != (struct ieee80211_vif *)0 && vif->type == (unsigned int)NL80211_IFTYPE_STATION) {
    #line 6222 
    int signal;
    #line 6223 
    struct ieee80211_sta *sta;
    #line 6225 
    rcu_read_lock();
    #line 6226 
    sta = ieee80211_find_sta(vif,vif->bss_conf.bssid);
    #line 6227 
    if (sta == (struct ieee80211_sta *)0) {
      #line 6228 
      struct device *dev = & (priv->udev)->dev;
      {
        #line 6230 
        bool branch;
        #line 6230 
        struct _ddebug __UNIQUE_ID_ddebug629 = {.modname = (char *)"rtl8xxxu", .function = (char *)"rtl8xxxu_watchdog_callback", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c", .format = (char *)"%s: no sta found\n", .lineno = (unsigned int)6230U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
        #line 6230 
        branch = arch_static_branch(& __UNIQUE_ID_ddebug629.key.dd_key_false.key,(_Bool)0);
        #line 6230 
        if ((long)((long)((int)branch != 0)) != 0L) 
                                                    #line 6230 
                                                    __dynamic_dev_dbg(& __UNIQUE_ID_ddebug629,dev,(char *)"%s: no sta found\n",(char *)"rtl8xxxu_watchdog_callback");
      }
      #line 6231 
      rcu_read_unlock();
      #line 6232 
      goto out;
    }
    #line 6234 
    rcu_read_unlock();
    #line 6236 
    signal = ieee80211_ave_rssi(vif);
    #line 6237 
    rtl8xxxu_refresh_rate_mask(priv,signal,sta);
  }
  #line 6240 
  out: 
       #line 6240 
  ;
  #line 6241 
  cif_schedule_delayed_work(& priv->ra_watchdog,500UL);
  #line 6242 
  return;
}

#line 6244  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
static int rtl8xxxu_start(struct ieee80211_hw *hw)
{
  #line 6247 
  struct rtl8xxxu_rx_urb *rx_urb;
  #line 6248 
  struct rtl8xxxu_tx_urb *tx_urb;
  #line 6249 
  unsigned long flags;
  #line 6250 
  int ret;
  #line 6250 
  int i;
  #line 6246 
  struct rtl8xxxu_priv *priv = (struct rtl8xxxu_priv *)hw->priv;
  #line 6252 
  ret = 0;
  #line 6254 
  init_usb_anchor(& priv->rx_anchor);
  #line 6255 
  init_usb_anchor(& priv->tx_anchor);
  #line 6256 
  init_usb_anchor(& priv->int_anchor);
  #line 6258 
  (*((priv->fops)->enable_rf))(priv);
  #line 6259 
  if ((unsigned int)priv->usb_interrupts != 0U) {
    #line 6260 
    ret = rtl8xxxu_submit_int_urb(hw);
    #line 6261 
    if (ret != 0) 
                  #line 6262 
                  goto exit;
  }
  #line 6265 
  i = 0;
  #line 6265 
  while (i <= 63) {
    #line 6266 
    tx_urb = (struct rtl8xxxu_tx_urb *)kmalloc(208UL,3264U);
    #line 6267 
    if (tx_urb == (struct rtl8xxxu_tx_urb *)0) {
      #line 6268 
      if (i == 0) 
                  #line 6269 
                  ret = -12;
      #line 6271 
      goto error_out;
    }
    #line 6273 
    usb_init_urb(& tx_urb->urb);
    #line 6274 
    INIT_LIST_HEAD(& tx_urb->list);
    #line 6275 
    tx_urb->hw = hw;
    #line 6276 
    list_add(& tx_urb->list,& priv->tx_urb_free_list);
    #line 6277 
    (priv->tx_urb_free_count) ++;
    #line 6265 
    i ++;
  }
  #line 6280 
  priv->tx_stopped = (_Bool)0;
  #line 6282 
  cif___ldv_spin_lock_rx_urb_lock_of_rtl8xxxu_priv(& priv->rx_urb_lock);
  #line 6283 
  priv->shutdown = (_Bool)0;
  #line 6284 
  cif_spin_unlock_irqrestore_rx_urb_lock_of_rtl8xxxu_priv(& priv->rx_urb_lock,flags);
  #line 6286 
  i = 0;
  #line 6286 
  while (i <= 31) {
    #line 6287 
    rx_urb = (struct rtl8xxxu_rx_urb *)kmalloc(208UL,3264U);
    #line 6288 
    if (rx_urb == (struct rtl8xxxu_rx_urb *)0) {
      #line 6289 
      if (i == 0) 
                  #line 6290 
                  ret = -12;
      #line 6292 
      goto error_out;
    }
    #line 6294 
    usb_init_urb(& rx_urb->urb);
    #line 6295 
    INIT_LIST_HEAD(& rx_urb->list);
    #line 6296 
    rx_urb->hw = hw;
    #line 6298 
    ret = rtl8xxxu_submit_rx_urb(priv,rx_urb);
    #line 6286 
    i ++;
  }
  #line 6301 
  cif_schedule_delayed_work(& priv->ra_watchdog,500UL);
  #line 6302 
  exit: 
        #line 6302 
  ;
  #line 6306 
  rtl8xxxu_write16(priv,(unsigned short)1700,(unsigned short)65535);
  #line 6307 
  rtl8xxxu_write16(priv,(unsigned short)1696,(unsigned short)65535);
  #line 6309 
  rtl8xxxu_write32(priv,(unsigned short)3152,1767126046U);
  #line 6311 
  return ret;
  #line 6313 
  error_out: 
             #line 6313 
  ;
  #line 6314 
  rtl8xxxu_free_tx_resources(priv);
  #line 6318 
  rtl8xxxu_write16(priv,(unsigned short)1700,(unsigned short)0);
  #line 6319 
  rtl8xxxu_write16(priv,(unsigned short)1696,(unsigned short)0);
  #line 6321 
  return ret;
}

#line 6324  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
static void rtl8xxxu_stop(struct ieee80211_hw *hw)
{
  #line 6327 
  unsigned long flags;
  #line 6326 
  struct rtl8xxxu_priv *priv = (struct rtl8xxxu_priv *)hw->priv;
  #line 6329 
  rtl8xxxu_write8(priv,(unsigned short)1314,(unsigned char)255);
  #line 6331 
  rtl8xxxu_write16(priv,(unsigned short)1696,(unsigned short)0);
  #line 6332 
  rtl8xxxu_write16(priv,(unsigned short)1700,(unsigned short)0);
  #line 6334 
  cif___ldv_spin_lock_rx_urb_lock_of_rtl8xxxu_priv(& priv->rx_urb_lock);
  #line 6335 
  priv->shutdown = (_Bool)1;
  #line 6336 
  cif_spin_unlock_irqrestore_rx_urb_lock_of_rtl8xxxu_priv(& priv->rx_urb_lock,flags);
  #line 6338 
  usb_kill_anchored_urbs(& priv->rx_anchor);
  #line 6339 
  usb_kill_anchored_urbs(& priv->tx_anchor);
  #line 6340 
  if ((unsigned int)priv->usb_interrupts != 0U) 
                                                #line 6341 
                                                usb_kill_anchored_urbs(& priv->int_anchor);
  #line 6343 
  rtl8xxxu_write8(priv,(unsigned short)1314,(unsigned char)255);
  #line 6345 
  (*((priv->fops)->disable_rf))(priv);
  #line 6350 
  if ((unsigned int)priv->usb_interrupts != 0U) 
                                                #line 6351 
                                                rtl8xxxu_write32(priv,(unsigned short)65080,0U);
  #line 6353 
  cancel_delayed_work_sync(& priv->ra_watchdog);
  #line 6355 
  rtl8xxxu_free_rx_resources(priv);
  #line 6356 
  rtl8xxxu_free_tx_resources(priv);
  #line 6357 
  return;
}

#line 6359  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
static struct ieee80211_ops rtl8xxxu_ops = {.tx = & rtl8xxxu_tx, .start = & rtl8xxxu_start, .stop = & rtl8xxxu_stop, .add_interface = & rtl8xxxu_add_interface, .remove_interface = & rtl8xxxu_remove_interface, .config = & rtl8xxxu_config, .bss_info_changed = & rtl8xxxu_bss_info_changed, .configure_filter = & rtl8xxxu_configure_filter, .set_key = & rtl8xxxu_set_key, .sw_scan_start = & rtl8xxxu_sw_scan_start, .sw_scan_complete = & rtl8xxxu_sw_scan_complete, .set_rts_threshold = & rtl8xxxu_set_rts_threshold, .conf_tx = & rtl8xxxu_conf_tx, .ampdu_action = & rtl8xxxu_ampdu_action};
#line 6376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
static int rtl8xxxu_parse_usb(struct rtl8xxxu_priv *priv, struct usb_interface *interface)
{
  #line 6379 
  struct usb_interface_descriptor *interface_desc;
  #line 6380 
  struct usb_host_interface *host_interface;
  #line 6381 
  struct usb_endpoint_descriptor *endpoint;
  #line 6383 
  int i;
  #line 6383 
  int endpoints;
  #line 6384 
  u8 dir;
  #line 6384 
  u8 xtype;
  #line 6384 
  u8 num;
  #line 6382 
  struct device *dev = & (priv->udev)->dev;
  #line 6383 
  int j = 0;
  #line 6385 
  int ret = 0;
  #line 6387 
  host_interface = interface->altsetting;
  #line 6388 
  interface_desc = & host_interface->desc;
  #line 6389 
  endpoints = (int)interface_desc->bNumEndpoints;
  #line 6391 
  i = 0;
  #line 6391 
  while (i < endpoints) {
    {
      #line 6392 
      endpoint = & (host_interface->endpoint + (unsigned long)i)->desc;
      #line 6394 
      dir = (unsigned char)((unsigned int)endpoint->bEndpointAddress & 128U);
      #line 6395 
      num = (unsigned char)usb_endpoint_num(endpoint);
      #line 6396 
      xtype = (unsigned char)usb_endpoint_type(endpoint);
      #line 6397 
      if ((rtl8xxxu_debug & 512) != 0) {
        #line 6398 
        bool branch;
        #line 6398 
        struct _ddebug __UNIQUE_ID_ddebug630 = {.modname = (char *)"rtl8xxxu", .function = (char *)"rtl8xxxu_parse_usb", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c", .format = (char *)"%s: endpoint: dir %02x, # %02x, type %02x\n", .lineno = (unsigned int)6398U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
        #line 6398 
        branch = arch_static_branch(& __UNIQUE_ID_ddebug630.key.dd_key_false.key,(_Bool)0);
        #line 6398 
        if ((long)((long)((int)branch != 0)) != 0L) 
                                                    #line 6398 
                                                    __dynamic_dev_dbg(& __UNIQUE_ID_ddebug630,dev,(char *)"%s: endpoint: dir %02x, # %02x, type %02x\n",(char *)"rtl8xxxu_parse_usb",(int)dir,(int)num,(int)xtype);
      }
      #line 6401 
      if (usb_endpoint_dir_in(endpoint) != 0) {
        #line 6401 
        if (usb_endpoint_xfer_bulk(endpoint) != 0) {
          #line 6403 
          if ((rtl8xxxu_debug & 512) != 0) {
            #line 6404 
            bool branch_0;
            #line 6404 
            struct _ddebug __UNIQUE_ID_ddebug631 = {.modname = (char *)"rtl8xxxu", .function = (char *)"rtl8xxxu_parse_usb", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c", .format = (char *)"%s: in endpoint num %i\n", .lineno = (unsigned int)6404U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
            #line 6404 
            branch_0 = arch_static_branch(& __UNIQUE_ID_ddebug631.key.dd_key_false.key,(_Bool)0);
            #line 6404 
            if ((long)((long)((int)branch_0 != 0)) != 0L) 
                                                          #line 6404 
                                                          __dynamic_dev_dbg(& __UNIQUE_ID_ddebug631,dev,(char *)"%s: in endpoint num %i\n",(char *)"rtl8xxxu_parse_usb",(int)num);
          }
          #line 6407 
          if (priv->pipe_in != 0U) {
            #line 6408 
            _dev_warn(dev,(char *)"%s: Too many IN pipes\n",(char *)"rtl8xxxu_parse_usb");
            #line 6410 
            ret = -22;
            #line 6411 
            goto exit;
          }
          #line 6414 
          priv->pipe_in = __create_pipe(priv->udev,(unsigned int)num) | 3221225600U;
        }
      }
      #line 6417 
      if (usb_endpoint_dir_in(endpoint) != 0) {
        #line 6417 
        if (usb_endpoint_xfer_int(endpoint) != 0) {
          #line 6419 
          if ((rtl8xxxu_debug & 512) != 0) {
            #line 6420 
            bool branch_1;
            #line 6420 
            struct _ddebug __UNIQUE_ID_ddebug632 = {.modname = (char *)"rtl8xxxu", .function = (char *)"rtl8xxxu_parse_usb", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c", .format = (char *)"%s: interrupt endpoint num %i\n", .lineno = (unsigned int)6420U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
            #line 6420 
            branch_1 = arch_static_branch(& __UNIQUE_ID_ddebug632.key.dd_key_false.key,(_Bool)0);
            #line 6420 
            if ((long)((long)((int)branch_1 != 0)) != 0L) 
                                                          #line 6420 
                                                          __dynamic_dev_dbg(& __UNIQUE_ID_ddebug632,dev,(char *)"%s: interrupt endpoint num %i\n",(char *)"rtl8xxxu_parse_usb",(int)num);
          }
          #line 6423 
          if (priv->pipe_interrupt != 0U) {
            #line 6424 
            _dev_warn(dev,(char *)"%s: Too many INTERRUPT pipes\n",(char *)"rtl8xxxu_parse_usb");
            #line 6426 
            ret = -22;
            #line 6427 
            goto exit;
          }
          #line 6430 
          priv->pipe_interrupt = __create_pipe(priv->udev,(unsigned int)num) | 1073741952U;
        }
      }
      #line 6433 
      if (usb_endpoint_dir_out(endpoint) != 0) {
        #line 6433 
        if (usb_endpoint_xfer_bulk(endpoint) != 0) {
          #line 6444 
          int tmp_11;
          #line 6435 
          if ((rtl8xxxu_debug & 512) != 0) {
            #line 6436 
            bool branch_2;
            #line 6436 
            struct _ddebug __UNIQUE_ID_ddebug633 = {.modname = (char *)"rtl8xxxu", .function = (char *)"rtl8xxxu_parse_usb", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c", .format = (char *)"%s: out endpoint num %i\n", .lineno = (unsigned int)6436U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
            #line 6436 
            branch_2 = arch_static_branch(& __UNIQUE_ID_ddebug633.key.dd_key_false.key,(_Bool)0);
            #line 6436 
            if ((long)((long)((int)branch_2 != 0)) != 0L) 
                                                          #line 6436 
                                                          __dynamic_dev_dbg(& __UNIQUE_ID_ddebug633,dev,(char *)"%s: out endpoint num %i\n",(char *)"rtl8xxxu_parse_usb",(int)num);
          }
          #line 6438 
          if (j > 3) {
            #line 6439 
            _dev_warn(dev,(char *)"%s: Too many OUT pipes\n",(char *)"rtl8xxxu_parse_usb");
            #line 6441 
            ret = -22;
            #line 6442 
            goto exit;
          }
          #line 6444 
          tmp_11 = j;
          #line 6444 
          j ++;
          #line 6444 
          priv->out_ep[tmp_11] = num;
        }
      }
    }
    #line 6391 
    i ++;
  }
  #line 6447 
  exit: 
        #line 6447 
  ;
  #line 6448 
  priv->nr_out_eps = j;
  #line 6449 
  return ret;
}

#line 6452  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
static int rtl8xxxu_probe(struct usb_interface *interface, struct usb_device_id *id)
{
  #line 6455 
  struct rtl8xxxu_priv *priv;
  #line 6456 
  struct ieee80211_hw *hw;
  #line 6457 
  struct usb_device *udev;
  #line 6458 
  struct ieee80211_supported_band *sband;
  #line 6459 
  int ret;
  #line 6460 
  int untested = 1;
  #line 6462 
  udev = usb_get_dev(interface_to_usbdev(interface));
  #line 6464 
  switch ((int)id->idVendor) {
    #line 6465 
    case 3034: 
               #line 6465 
    ;
    #line 6466 
    switch ((int)id->idProduct) {
      #line 6467 
      case 5924: 
                 #line 6467 
      ;
      #line 6468 
      case 33142: 
                  #line 6468 
      ;
      #line 6469 
      case 33144: 
                  #line 6469 
      ;
      #line 6470 
      case 33151: 
                  #line 6470 
      ;
      #line 6471 
      case 33163: 
                  #line 6471 
      ;
      #line 6472 
      untested = 0;
      #line 6473 
      break;
    }
    #line 6475 
    break;
    #line 6476 
    case 29586: 
                #line 6476 
    ;
    #line 6477 
    if ((unsigned int)id->idProduct == 30737U || (unsigned int)id->idProduct == 42513U) 
      #line 6478 
      untested = 0;
    #line 6479 
    break;
    #line 6480 
    case 1293: 
               #line 6480 
    ;
    #line 6481 
    if ((unsigned int)id->idProduct == 4100U) 
                                              #line 6482 
                                              untested = 0;
    #line 6483 
    break;
    #line 6484 
    case 8436: 
               #line 6484 
    ;
    #line 6485 
    if ((unsigned int)id->idProduct == 25739U) 
                                               #line 6486 
                                               untested = 0;
    #line 6487 
    break;
    #line 6488 
    case 8193: 
               #line 6488 
    ;
    #line 6489 
    if ((unsigned int)id->idProduct == 13064U) 
                                               #line 6490 
                                               untested = 0;
    #line 6491 
    break;
    #line 6492 
    case 9047: 
               #line 6492 
    ;
    #line 6493 
    if ((unsigned int)id->idProduct == 265U) 
                                             #line 6494 
                                             untested = 0;
    #line 6495 
    break;
    #line 6496 
    default: 
             #line 6496 
    ;
    #line 6497 
    break;
  }
  #line 6500 
  if (untested != 0) {
    #line 6501 
    rtl8xxxu_debug |= 8192;
    #line 6502 
    _dev_info(& udev->dev,(char *)"This Realtek USB WiFi dongle (0x%04x:0x%04x) is untested!\n",(int)id->idVendor,(int)id->idProduct);
    #line 6505 
    _dev_info(& udev->dev,(char *)"Please report results to Jes.Sorensen@gmail.com\n");
  }
  #line 6509 
  hw = cif_ieee80211_alloc_hw(2592UL,& rtl8xxxu_ops);
  #line 6510 
  if (hw == (struct ieee80211_hw *)0) {
    #line 6511 
    ret = -12;
    #line 6512 
    priv = (struct rtl8xxxu_priv *)0;
    #line 6513 
    goto exit;
  }
  #line 6516 
  priv = (struct rtl8xxxu_priv *)hw->priv;
  #line 6517 
  priv->hw = hw;
  #line 6518 
  priv->udev = udev;
  #line 6519 
  priv->fops = (struct rtl8xxxu_fileops *)id->driver_info;
  {
    #line 6520 
    struct lock_class_key __key;
    #line 6520 
    __mutex_init(& priv->usb_buf_mutex,(char *)"&priv->usb_buf_mutex",& __key);
  }
  {
    #line 6521 
    struct lock_class_key __key_0;
    #line 6521 
    __mutex_init(& priv->h2c_mutex,(char *)"&priv->h2c_mutex",& __key_0);
  }
  #line 6522 
  INIT_LIST_HEAD(& priv->tx_urb_free_list);
  #line 6523 
  spinlock_check(& priv->tx_urb_lock);
  {
    #line 6523 
    struct lock_class_key __key_1;
    #line 6523 
    __raw_spin_lock_init(& priv->tx_urb_lock.__anonCompField_spinlock_25.rlock,(char *)"&(&priv->tx_urb_lock)->rlock",& __key_1);
  }
  #line 6524 
  INIT_LIST_HEAD(& priv->rx_urb_pending_list);
  #line 6525 
  spinlock_check(& priv->rx_urb_lock);
  {
    #line 6525 
    struct lock_class_key __key_2;
    #line 6525 
    __raw_spin_lock_init(& priv->rx_urb_lock.__anonCompField_spinlock_25.rlock,(char *)"&(&priv->rx_urb_lock)->rlock",& __key_2);
  }
  {
    #line 6526 
    struct lock_class_key __key_3;
    #line 6526 
    __init_work(& priv->rx_urb_wq,0);
    #line 6526 
    atomic_long_t __constr_expr_41 = {.counter = 137438953408LL};
    #line 6526 
    priv->rx_urb_wq.data = __constr_expr_41;
    #line 6526 
    lockdep_init_map(& priv->rx_urb_wq.lockdep_map,(char *)"(work_completion)",& __key_3,0);
    #line 6526 
    INIT_LIST_HEAD(& priv->rx_urb_wq.entry);
    #line 6526 
    priv->rx_urb_wq.func = & rtl8xxxu_rx_urb_work;
  }
  {
    #line 6527 
    struct lock_class_key __key_4;
    #line 6527 
    __init_work(& priv->ra_watchdog.work,0);
    #line 6527 
    atomic_long_t __constr_expr_42 = {.counter = 137438953408LL};
    #line 6527 
    priv->ra_watchdog.work.data = __constr_expr_42;
    #line 6527 
    lockdep_init_map(& priv->ra_watchdog.work.lockdep_map,(char *)"(work_completion)",& __key_4,0);
    #line 6527 
    INIT_LIST_HEAD(& priv->ra_watchdog.work.entry);
    #line 6527 
    priv->ra_watchdog.work.func = & rtl8xxxu_watchdog_callback;
  }
  {
    #line 6527 
    struct lock_class_key __key_5;
    #line 6527 
    init_timer_key(& priv->ra_watchdog.timer,& delayed_work_timer_fn,2097152U,(char *)"&(&priv->ra_watchdog)->timer",& __key_5);
  }
  #line 6528 
  spinlock_check(& priv->c2hcmd_lock);
  {
    #line 6528 
    struct lock_class_key __key_6;
    #line 6528 
    __raw_spin_lock_init(& priv->c2hcmd_lock.__anonCompField_spinlock_25.rlock,(char *)"&(&priv->c2hcmd_lock)->rlock",& __key_6);
  }
  {
    #line 6529 
    struct lock_class_key __key_7;
    #line 6529 
    __init_work(& priv->c2hcmd_work,0);
    #line 6529 
    atomic_long_t __constr_expr_43 = {.counter = 137438953408LL};
    #line 6529 
    priv->c2hcmd_work.data = __constr_expr_43;
    #line 6529 
    lockdep_init_map(& priv->c2hcmd_work.lockdep_map,(char *)"(work_completion)",& __key_7,0);
    #line 6529 
    INIT_LIST_HEAD(& priv->c2hcmd_work.entry);
    #line 6529 
    priv->c2hcmd_work.func = & rtl8xxxu_c2hcmd_callback;
  }
  #line 6530 
  skb_queue_head_init(& priv->c2hcmd_queue);
  #line 6532 
  usb_set_intfdata(interface,(void *)hw);
  #line 6534 
  ret = rtl8xxxu_parse_usb(priv,interface);
  #line 6535 
  if (ret != 0) 
                #line 6536 
                goto exit;
  #line 6538 
  ret = rtl8xxxu_identify_chip(priv);
  #line 6539 
  if (ret != 0) {
    #line 6540 
    _dev_err(& udev->dev,(char *)"Fatal - failed to identify chip\n");
    #line 6541 
    goto exit;
  }
  #line 6544 
  ret = rtl8xxxu_read_efuse(priv);
  #line 6545 
  if (ret != 0) {
    #line 6546 
    _dev_err(& udev->dev,(char *)"Fatal - failed to read EFuse\n");
    #line 6547 
    goto exit;
  }
  #line 6550 
  ret = (*((priv->fops)->parse_efuse))(priv);
  #line 6551 
  if (ret != 0) {
    #line 6552 
    _dev_err(& udev->dev,(char *)"Fatal - failed to parse EFuse\n");
    #line 6553 
    goto exit;
  }
  #line 6556 
  rtl8xxxu_print_chipinfo(priv);
  #line 6558 
  ret = (*((priv->fops)->load_firmware))(priv);
  #line 6559 
  if (ret != 0) {
    #line 6560 
    _dev_err(& udev->dev,(char *)"Fatal - failed to load firmware\n");
    #line 6561 
    goto exit;
  }
  #line 6564 
  ret = rtl8xxxu_init_device(hw);
  #line 6565 
  if (ret != 0) 
                #line 6566 
                goto exit;
  #line 6568 
  (hw->wiphy)->max_scan_ssids = (unsigned char)1U;
  #line 6569 
  (hw->wiphy)->max_scan_ie_len = (unsigned short)2304U;
  #line 6570 
  (hw->wiphy)->interface_modes = (unsigned short)4U;
  #line 6571 
  hw->queues = (unsigned short)4U;
  #line 6573 
  sband = & rtl8xxxu_supported_band;
  #line 6574 
  sband->ht_cap.ht_supported = (_Bool)1;
  #line 6575 
  sband->ht_cap.ampdu_factor = (unsigned char)3U;
  #line 6576 
  sband->ht_cap.ampdu_density = (unsigned char)7U;
  #line 6577 
  sband->ht_cap.cap = (unsigned short)96U;
  #line 6578 
  memset((void *)(& sband->ht_cap.mcs),0,16UL);
  #line 6579 
  sband->ht_cap.mcs.rx_mask[0] = (unsigned char)255U;
  #line 6580 
  sband->ht_cap.mcs.rx_mask[4] = (unsigned char)1U;
  #line 6581 
  if ((unsigned int)priv->rf_paths > 1U) {
    #line 6582 
    sband->ht_cap.mcs.rx_mask[1] = (unsigned char)255U;
    #line 6583 
    sband->ht_cap.cap = (unsigned short)((unsigned int)sband->ht_cap.cap | 64U);
  }
  #line 6585 
  sband->ht_cap.mcs.tx_params = (unsigned char)1U;
  #line 6591 
  if ((int)rtl8xxxu_ht40_2g != 0) {
    #line 6592 
    _dev_info(& udev->dev,(char *)"Enabling HT_20_40 on the 2.4GHz band\n");
    #line 6593 
    sband->ht_cap.cap = (unsigned short)((unsigned int)sband->ht_cap.cap | 2U);
  }
  #line 6595 
  (hw->wiphy)->bands[0] = sband;
  #line 6597 
  (hw->wiphy)->rts_threshold = 2347U;
  #line 6599 
  SET_IEEE80211_DEV(priv->hw,& interface->dev);
  #line 6600 
  SET_IEEE80211_PERM_ADDR(hw,(u8 *)(& priv->mac_addr));
  #line 6602 
  hw->extra_tx_headroom = (unsigned int)(priv->fops)->tx_desc_size;
  #line 6603 
  _ieee80211_hw_set(hw,(enum ieee80211_hw_flags)IEEE80211_HW_SIGNAL_DBM);
  #line 6607 
  _ieee80211_hw_set(hw,(enum ieee80211_hw_flags)IEEE80211_HW_HAS_RATE_CONTROL);
  #line 6608 
  _ieee80211_hw_set(hw,(enum ieee80211_hw_flags)IEEE80211_HW_AMPDU_AGGREGATION);
  #line 6610 
  wiphy_ext_feature_set(hw->wiphy,(enum nl80211_ext_feature_index)NL80211_EXT_FEATURE_CQM_RSSI_LIST);
  #line 6612 
  ret = ieee80211_register_hw(priv->hw);
  #line 6613 
  if (ret != 0) {
    #line 6614 
    _dev_err(& udev->dev,(char *)"%s: Failed to register: %i\n",(char *)"rtl8xxxu_probe",ret);
    #line 6616 
    goto exit;
  }
  #line 6619 
  return 0;
  #line 6621 
  exit: 
        #line 6621 
  ;
  #line 6622 
  usb_set_intfdata(interface,(void *)0);
  #line 6624 
  if (priv != (struct rtl8xxxu_priv *)0) {
    #line 6625 
    kfree((void *)priv->fw_data);
    #line 6626 
    mutex_destroy(& priv->usb_buf_mutex);
    #line 6627 
    mutex_destroy(& priv->h2c_mutex);
  }
  #line 6629 
  usb_put_dev(udev);
  #line 6631 
  cif_ieee80211_free_hw(hw);
  #line 6633 
  return ret;
}

#line 6636  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
static void rtl8xxxu_disconnect(struct usb_interface *interface)
{
  #line 6638 
  struct rtl8xxxu_priv *priv;
  #line 6639 
  struct ieee80211_hw *hw;
  #line 6641 
  hw = (struct ieee80211_hw *)usb_get_intfdata(interface);
  #line 6642 
  priv = (struct rtl8xxxu_priv *)hw->priv;
  #line 6644 
  ieee80211_unregister_hw(hw);
  #line 6646 
  (*((priv->fops)->power_off))(priv);
  #line 6648 
  usb_set_intfdata(interface,(void *)0);
  #line 6650 
  _dev_info(& (priv->udev)->dev,(char *)"disconnecting\n");
  #line 6652 
  kfree((void *)priv->fw_data);
  #line 6653 
  mutex_destroy(& priv->usb_buf_mutex);
  #line 6654 
  mutex_destroy(& priv->h2c_mutex);
  #line 6656 
  if ((priv->udev)->state != (unsigned int)USB_STATE_NOTATTACHED) {
    #line 6657 
    _dev_info(& (priv->udev)->dev,(char *)"Device still attached, trying to reset\n");
    #line 6659 
    cif_usb_reset_device(priv->udev);
  }
  #line 6661 
  usb_put_dev(priv->udev);
  #line 6662 
  cif_ieee80211_free_hw(hw);
  #line 6663 
  return;
}

#line 6665  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
static struct usb_device_id dev_table[83U] = {{.match_flags = (unsigned short)899U, .idVendor = (unsigned short)3034U, .idProduct = (unsigned short)34596U, .bInterfaceClass = (unsigned char)255U, .bInterfaceSubClass = (unsigned char)255U, .bInterfaceProtocol = (unsigned char)255U, .driver_info = (unsigned long)(& rtl8723au_fops)}, {.match_flags = (unsigned short)899U, .idVendor = (unsigned short)3034U, .idProduct = (unsigned short)5924U, .bInterfaceClass = (unsigned char)255U, .bInterfaceSubClass = (unsigned char)255U, .bInterfaceProtocol = (unsigned char)255U, .driver_info = (unsigned long)(& rtl8723au_fops)}, {.match_flags = (unsigned short)899U, .idVendor = (unsigned short)3034U, .idProduct = (unsigned short)1828U, .bInterfaceClass = (unsigned char)255U, .bInterfaceSubClass = (unsigned char)255U, .bInterfaceProtocol = (unsigned char)255U, .driver_info = (unsigned long)(& rtl8723au_fops)}, {.match_flags = (unsigned short)899U, .idVendor = (unsigned short)3034U, .idProduct = (unsigned short)33163U, .bInterfaceClass = (unsigned char)255U, .bInterfaceSubClass = (unsigned char)255U, .bInterfaceProtocol = (unsigned char)255U, .driver_info = (unsigned long)(& rtl8192eu_fops)}, {.match_flags = (unsigned short)899U, .idVendor = (unsigned short)9047U, .idProduct = (unsigned short)264U, .bInterfaceClass = (unsigned char)255U, .bInterfaceSubClass = (unsigned char)255U, .bInterfaceProtocol = (unsigned char)255U, .driver_info = (unsigned long)(& rtl8192eu_fops)}, {.match_flags = (unsigned short)899U, .idVendor = (unsigned short)8193U, .idProduct = (unsigned short)13081U, .bInterfaceClass = (unsigned char)255U, .bInterfaceSubClass = (unsigned char)255U, .bInterfaceProtocol = (unsigned char)255U, .driver_info = (unsigned long)(& rtl8192eu_fops)}, {.match_flags = (unsigned short)899U, .idVendor = (unsigned short)9047U, .idProduct = (unsigned short)265U, .bInterfaceClass = (unsigned char)255U, .bInterfaceSubClass = (unsigned char)255U, .bInterfaceProtocol = (unsigned char)255U, .driver_info = (unsigned long)(& rtl8192eu_fops)}, {.match_flags = (unsigned short)899U, .idVendor = (unsigned short)3034U, .idProduct = (unsigned short)46880U, .bInterfaceClass = (unsigned char)255U, .bInterfaceSubClass = (unsigned char)255U, .bInterfaceProtocol = (unsigned char)255U, .driver_info = (unsigned long)(& rtl8723bu_fops)}, {.match_flags = (unsigned short)899U, .idVendor = (unsigned short)29586U, .idProduct = (unsigned short)42513U, .bInterfaceClass = (unsigned char)255U, .bInterfaceSubClass = (unsigned char)255U, .bInterfaceProtocol = (unsigned char)255U, .driver_info = (unsigned long)(& rtl8723bu_fops)}, {.match_flags = (unsigned short)899U, .idVendor = (unsigned short)3034U, .idProduct = (unsigned short)33142U, .bInterfaceClass = (unsigned char)255U, .bInterfaceSubClass = (unsigned char)255U, .bInterfaceProtocol = (unsigned char)255U, .driver_info = (unsigned long)(& rtl8192cu_fops)}, {.match_flags = (unsigned short)899U, .idVendor = (unsigned short)3034U, .idProduct = (unsigned short)33144U, .bInterfaceClass = (unsigned char)255U, .bInterfaceSubClass = (unsigned char)255U, .bInterfaceProtocol = (unsigned char)255U, .driver_info = (unsigned long)(& rtl8192cu_fops)}, {.match_flags = (unsigned short)899U, .idVendor = (unsigned short)3034U, .idProduct = (unsigned short)33151U, .bInterfaceClass = (unsigned char)255U, .bInterfaceSubClass = (unsigned char)255U, .bInterfaceProtocol = (unsigned char)255U, .driver_info = (unsigned long)(& rtl8192cu_fops)}, {.match_flags = (unsigned short)899U, .idVendor = (unsigned short)29586U, .idProduct = (unsigned short)30737U, .bInterfaceClass = (unsigned char)255U, .bInterfaceSubClass = (unsigned char)255U, .bInterfaceProtocol = (unsigned char)255U, .driver_info = (unsigned long)(& rtl8192cu_fops)}, {.match_flags = (unsigned short)899U, .idVendor = (unsigned short)1293U, .idProduct = (unsigned short)4100U, .bInterfaceClass = (unsigned char)255U, .bInterfaceSubClass = (unsigned char)255U, .bInterfaceProtocol = (unsigned char)255U, .driver_info = (unsigned long)(& rtl8192cu_fops)}, {.match_flags = (unsigned short)899U, .idVendor = (unsigned short)8436U, .idProduct = (unsigned short)25739U, .bInterfaceClass = (unsigned char)255U, .bInterfaceSubClass = (unsigned char)255U, .bInterfaceProtocol = (unsigned char)255U, .driver_info = (unsigned long)(& rtl8192cu_fops)}, {.match_flags = (unsigned short)899U, .idVendor = (unsigned short)8193U, .idProduct = (unsigned short)13064U, .bInterfaceClass = (unsigned char)255U, .bInterfaceSubClass = (unsigned char)255U, .bInterfaceProtocol = (unsigned char)255U, .driver_info = (unsigned long)(& rtl8192cu_fops)}, {.match_flags = (unsigned short)899U, .idVendor = (unsigned short)3034U, .idProduct = (unsigned short)394U, .bInterfaceClass = (unsigned char)255U, .bInterfaceSubClass = (unsigned char)255U, .bInterfaceProtocol = (unsigned char)255U, .driver_info = (unsigned long)(& rtl8192cu_fops)}, {.match_flags = (unsigned short)899U, .idVendor = (unsigned short)3034U, .idProduct = (unsigned short)33169U, .bInterfaceClass = (unsigned char)255U, .bInterfaceSubClass = (unsigned char)255U, .bInterfaceProtocol = (unsigned char)255U, .driver_info = (unsigned long)(& rtl8192cu_fops)}, {.match_flags = (unsigned short)899U, .idVendor = (unsigned short)3034U, .idProduct = (unsigned short)33136U, .bInterfaceClass = (unsigned char)255U, .bInterfaceSubClass = (unsigned char)255U, .bInterfaceProtocol = (unsigned char)255U, .driver_info = (unsigned long)(& rtl8192cu_fops)}, {.match_flags = (unsigned short)899U, .idVendor = (unsigned short)3034U, .idProduct = (unsigned short)33143U, .bInterfaceClass = (unsigned char)255U, .bInterfaceSubClass = (unsigned char)255U, .bInterfaceProtocol = (unsigned char)255U, .driver_info = (unsigned long)(& rtl8192cu_fops)}, {.match_flags = (unsigned short)899U, .idVendor = (unsigned short)3034U, .idProduct = (unsigned short)33146U, .bInterfaceClass = (unsigned char)255U, .bInterfaceSubClass = (unsigned char)255U, .bInterfaceProtocol = (unsigned char)255U, .driver_info = (unsigned long)(& rtl8192cu_fops)}, {.match_flags = (unsigned short)899U, .idVendor = (unsigned short)3034U, .idProduct = (unsigned short)33147U, .bInterfaceClass = (unsigned char)255U, .bInterfaceSubClass = (unsigned char)255U, .bInterfaceProtocol = (unsigned char)255U, .driver_info = (unsigned long)(& rtl8192cu_fops)}, {.match_flags = (unsigned short)899U, .idVendor = (unsigned short)3034U, .idProduct = (unsigned short)33149U, .bInterfaceClass = (unsigned char)255U, .bInterfaceSubClass = (unsigned char)255U, .bInterfaceProtocol = (unsigned char)255U, .driver_info = (unsigned long)(& rtl8192cu_fops)}, {.match_flags = (unsigned short)899U, .idVendor = (unsigned short)3034U, .idProduct = (unsigned short)33150U, .bInterfaceClass = (unsigned char)255U, .bInterfaceSubClass = (unsigned char)255U, .bInterfaceProtocol = (unsigned char)255U, .driver_info = (unsigned long)(& rtl8192cu_fops)}, {.match_flags = (unsigned short)899U, .idVendor = (unsigned short)3034U, .idProduct = (unsigned short)33162U, .bInterfaceClass = (unsigned char)255U, .bInterfaceSubClass = (unsigned char)255U, .bInterfaceProtocol = (unsigned char)255U, .driver_info = (unsigned long)(& rtl8192cu_fops)}, {.match_flags = (unsigned short)899U, .idVendor = (unsigned short)3034U, .idProduct = (unsigned short)12671U, .bInterfaceClass = (unsigned char)255U, .bInterfaceSubClass = (unsigned char)255U, .bInterfaceProtocol = (unsigned char)255U, .driver_info = (unsigned long)(& rtl8192cu_fops)}, {.match_flags = (unsigned short)899U, .idVendor = (unsigned short)4184U, .idProduct = (unsigned short)1585U, .bInterfaceClass = (unsigned char)255U, .bInterfaceSubClass = (unsigned char)255U, .bInterfaceProtocol = (unsigned char)255U, .driver_info = (unsigned long)(& rtl8192cu_fops)}, {.match_flags = (unsigned short)899U, .idVendor = (unsigned short)1211U, .idProduct = (unsigned short)2380U, .bInterfaceClass = (unsigned char)255U, .bInterfaceSubClass = (unsigned char)255U, .bInterfaceProtocol = (unsigned char)255U, .driver_info = (unsigned long)(& rtl8192cu_fops)}, {.match_flags = (unsigned short)899U, .idVendor = (unsigned short)1293U, .idProduct = (unsigned short)4354U, .bInterfaceClass = (unsigned char)255U, .bInterfaceSubClass = (unsigned char)255U, .bInterfaceProtocol = (unsigned char)255U, .driver_info = (unsigned long)(& rtl8192cu_fops)}, {.match_flags = (unsigned short)899U, .idVendor = (unsigned short)1784U, .idProduct = (unsigned short)57395U, .bInterfaceClass = (unsigned char)255U, .bInterfaceSubClass = (unsigned char)255U, .bInterfaceProtocol = (unsigned char)255U, .driver_info = (unsigned long)(& rtl8192cu_fops)}, {.match_flags = (unsigned short)899U, .idVendor = (unsigned short)1976U, .idProduct = (unsigned short)33161U, .bInterfaceClass = (unsigned char)255U, .bInterfaceSubClass = (unsigned char)255U, .bInterfaceProtocol = (unsigned char)255U, .driver_info = (unsigned long)(& rtl8192cu_fops)}, {.match_flags = (unsigned short)899U, .idVendor = (unsigned short)2118U, .idProduct = (unsigned short)36929U, .bInterfaceClass = (unsigned char)255U, .bInterfaceSubClass = (unsigned char)255U, .bInterfaceProtocol = (unsigned char)255U, .driver_info = (unsigned long)(& rtl8192cu_fops)}, {.match_flags = (unsigned short)899U, .idVendor = (unsigned short)2821U, .idProduct = (unsigned short)6074U, .bInterfaceClass = (unsigned char)255U, .bInterfaceSubClass = (unsigned char)255U, .bInterfaceProtocol = (unsigned char)255U, .driver_info = (unsigned long)(& rtl8192cu_fops)}, {.match_flags = (unsigned short)899U, .idVendor = (unsigned short)3034U, .idProduct = (unsigned short)7710U, .bInterfaceClass = (unsigned char)255U, .bInterfaceSubClass = (unsigned char)255U, .bInterfaceProtocol = (unsigned char)255U, .driver_info = (unsigned long)(& rtl8192cu_fops)}, {.match_flags = (unsigned short)899U, .idVendor = (unsigned short)3034U, .idProduct = (unsigned short)20616U, .bInterfaceClass = (unsigned char)255U, .bInterfaceSubClass = (unsigned char)255U, .bInterfaceProtocol = (unsigned char)255U, .driver_info = (unsigned long)(& rtl8192cu_fops)}, {.match_flags = (unsigned short)899U, .idVendor = (unsigned short)3574U, .idProduct = (unsigned short)82U, .bInterfaceClass = (unsigned char)255U, .bInterfaceSubClass = (unsigned char)255U, .bInterfaceProtocol = (unsigned char)255U, .driver_info = (unsigned long)(& rtl8192cu_fops)}, {.match_flags = (unsigned short)899U, .idVendor = (unsigned short)3574U, .idProduct = (unsigned short)92U, .bInterfaceClass = (unsigned char)255U, .bInterfaceSubClass = (unsigned char)255U, .bInterfaceProtocol = (unsigned char)255U, .driver_info = (unsigned long)(& rtl8192cu_fops)}, {.match_flags = (unsigned short)899U, .idVendor = (unsigned short)3760U, .idProduct = (unsigned short)36977U, .bInterfaceClass = (unsigned char)255U, .bInterfaceSubClass = (unsigned char)255U, .bInterfaceProtocol = (unsigned char)255U, .driver_info = (unsigned long)(& rtl8192cu_fops)}, {.match_flags = (unsigned short)899U, .idVendor = (unsigned short)4156U, .idProduct = (unsigned short)5673U, .bInterfaceClass = (unsigned char)255U, .bInterfaceSubClass = (unsigned char)255U, .bInterfaceProtocol = (unsigned char)255U, .driver_info = (unsigned long)(& rtl8192cu_fops)}, {.match_flags = (unsigned short)899U, .idVendor = (unsigned short)5075U, .idProduct = (unsigned short)13143U, .bInterfaceClass = (unsigned char)255U, .bInterfaceSubClass = (unsigned char)255U, .bInterfaceProtocol = (unsigned char)255U, .driver_info = (unsigned long)(& rtl8192cu_fops)}, {.match_flags = (unsigned short)899U, .idVendor = (unsigned short)8193U, .idProduct = (unsigned short)13067U, .bInterfaceClass = (unsigned char)255U, .bInterfaceSubClass = (unsigned char)255U, .bInterfaceProtocol = (unsigned char)255U, .driver_info = (unsigned long)(& rtl8192cu_fops)}, {.match_flags = (unsigned short)899U, .idVendor = (unsigned short)8217U, .idProduct = (unsigned short)18690U, .bInterfaceClass = (unsigned char)255U, .bInterfaceSubClass = (unsigned char)255U, .bInterfaceProtocol = (unsigned char)255U, .driver_info = (unsigned long)(& rtl8192cu_fops)}, {.match_flags = (unsigned short)899U, .idVendor = (unsigned short)8217U, .idProduct = (unsigned short)43818U, .bInterfaceClass = (unsigned char)255U, .bInterfaceSubClass = (unsigned char)255U, .bInterfaceProtocol = (unsigned char)255U, .driver_info = (unsigned long)(& rtl8192cu_fops)}, {.match_flags = (unsigned short)899U, .idVendor = (unsigned short)8217U, .idProduct = (unsigned short)43822U, .bInterfaceClass = (unsigned char)255U, .bInterfaceSubClass = (unsigned char)255U, .bInterfaceProtocol = (unsigned char)255U, .driver_info = (unsigned long)(& rtl8192cu_fops)}, {.match_flags = (unsigned short)899U, .idVendor = (unsigned short)8217U, .idProduct = (unsigned short)60695U, .bInterfaceClass = (unsigned char)255U, .bInterfaceSubClass = (unsigned char)255U, .bInterfaceProtocol = (unsigned char)255U, .driver_info = (unsigned long)(& rtl8192cu_fops)}, {.match_flags = (unsigned short)899U, .idVendor = (unsigned short)18517U, .idProduct = (unsigned short)144U, .bInterfaceClass = (unsigned char)255U, .bInterfaceSubClass = (unsigned char)255U, .bInterfaceProtocol = (unsigned char)255U, .driver_info = (unsigned long)(& rtl8192cu_fops)}, {.match_flags = (unsigned short)899U, .idVendor = (unsigned short)18518U, .idProduct = (unsigned short)145U, .bInterfaceClass = (unsigned char)255U, .bInterfaceSubClass = (unsigned char)255U, .bInterfaceProtocol = (unsigned char)255U, .driver_info = (unsigned long)(& rtl8192cu_fops)}, {.match_flags = (unsigned short)899U, .idVendor = (unsigned short)52651U, .idProduct = (unsigned short)32784U, .bInterfaceClass = (unsigned char)255U, .bInterfaceSubClass = (unsigned char)255U, .bInterfaceProtocol = (unsigned char)255U, .driver_info = (unsigned long)(& rtl8192cu_fops)}, {.match_flags = (unsigned short)899U, .idVendor = (unsigned short)1266U, .idProduct = (unsigned short)45047U, .bInterfaceClass = (unsigned char)255U, .bInterfaceSubClass = (unsigned char)255U, .bInterfaceProtocol = (unsigned char)255U, .driver_info = (unsigned long)(& rtl8192cu_fops)}, {.match_flags = (unsigned short)899U, .idVendor = (unsigned short)1266U, .idProduct = (unsigned short)45049U, .bInterfaceClass = (unsigned char)255U, .bInterfaceSubClass = (unsigned char)255U, .bInterfaceProtocol = (unsigned char)255U, .driver_info = (unsigned long)(& rtl8192cu_fops)}, {.match_flags = (unsigned short)899U, .idVendor = (unsigned short)1266U, .idProduct = (unsigned short)45050U, .bInterfaceClass = (unsigned char)255U, .bInterfaceSubClass = (unsigned char)255U, .bInterfaceProtocol = (unsigned char)255U, .driver_info = (unsigned long)(& rtl8192cu_fops)}, {.match_flags = (unsigned short)899U, .idVendor = (unsigned short)1266U, .idProduct = (unsigned short)45048U, .bInterfaceClass = (unsigned char)255U, .bInterfaceSubClass = (unsigned char)255U, .bInterfaceProtocol = (unsigned char)255U, .driver_info = (unsigned long)(& rtl8192cu_fops)}, {.match_flags = (unsigned short)899U, .idVendor = (unsigned short)1266U, .idProduct = (unsigned short)45051U, .bInterfaceClass = (unsigned char)255U, .bInterfaceSubClass = (unsigned char)255U, .bInterfaceProtocol = (unsigned char)255U, .driver_info = (unsigned long)(& rtl8192cu_fops)}, {.match_flags = (unsigned short)899U, .idVendor = (unsigned short)1266U, .idProduct = (unsigned short)45052U, .bInterfaceClass = (unsigned char)255U, .bInterfaceSubClass = (unsigned char)255U, .bInterfaceProtocol = (unsigned char)255U, .driver_info = (unsigned long)(& rtl8192cu_fops)}, {.match_flags = (unsigned short)899U, .idVendor = (unsigned short)8217U, .idProduct = (unsigned short)4609U, .bInterfaceClass = (unsigned char)255U, .bInterfaceSubClass = (unsigned char)255U, .bInterfaceProtocol = (unsigned char)255U, .driver_info = (unsigned long)(& rtl8192cu_fops)}, {.match_flags = (unsigned short)899U, .idVendor = (unsigned short)1211U, .idProduct = (unsigned short)2384U, .bInterfaceClass = (unsigned char)255U, .bInterfaceSubClass = (unsigned char)255U, .bInterfaceProtocol = (unsigned char)255U, .driver_info = (unsigned long)(& rtl8192cu_fops)}, {.match_flags = (unsigned short)899U, .idVendor = (unsigned short)1293U, .idProduct = (unsigned short)8450U, .bInterfaceClass = (unsigned char)255U, .bInterfaceSubClass = (unsigned char)255U, .bInterfaceProtocol = (unsigned char)255U, .driver_info = (unsigned long)(& rtl8192cu_fops)}, {.match_flags = (unsigned short)899U, .idVendor = (unsigned short)1293U, .idProduct = (unsigned short)8451U, .bInterfaceClass = (unsigned char)255U, .bInterfaceSubClass = (unsigned char)255U, .bInterfaceProtocol = (unsigned char)255U, .driver_info = (unsigned long)(& rtl8192cu_fops)}, {.match_flags = (unsigned short)899U, .idVendor = (unsigned short)1414U, .idProduct = (unsigned short)13343U, .bInterfaceClass = (unsigned char)255U, .bInterfaceSubClass = (unsigned char)255U, .bInterfaceProtocol = (unsigned char)255U, .driver_info = (unsigned long)(& rtl8192cu_fops)}, {.match_flags = (unsigned short)899U, .idVendor = (unsigned short)1784U, .idProduct = (unsigned short)57397U, .bInterfaceClass = (unsigned char)255U, .bInterfaceSubClass = (unsigned char)255U, .bInterfaceProtocol = (unsigned char)255U, .driver_info = (unsigned long)(& rtl8192cu_fops)}, {.match_flags = (unsigned short)899U, .idVendor = (unsigned short)2821U, .idProduct = (unsigned short)6059U, .bInterfaceClass = (unsigned char)255U, .bInterfaceSubClass = (unsigned char)255U, .bInterfaceProtocol = (unsigned char)255U, .driver_info = (unsigned long)(& rtl8192cu_fops)}, {.match_flags = (unsigned short)899U, .idVendor = (unsigned short)3574U, .idProduct = (unsigned short)97U, .bInterfaceClass = (unsigned char)255U, .bInterfaceSubClass = (unsigned char)255U, .bInterfaceProtocol = (unsigned char)255U, .driver_info = (unsigned long)(& rtl8192cu_fops)}, {.match_flags = (unsigned short)899U, .idVendor = (unsigned short)3574U, .idProduct = (unsigned short)112U, .bInterfaceClass = (unsigned char)255U, .bInterfaceSubClass = (unsigned char)255U, .bInterfaceProtocol = (unsigned char)255U, .driver_info = (unsigned long)(& rtl8192cu_fops)}, {.match_flags = (unsigned short)899U, .idVendor = (unsigned short)1929U, .idProduct = (unsigned short)365U, .bInterfaceClass = (unsigned char)255U, .bInterfaceSubClass = (unsigned char)255U, .bInterfaceProtocol = (unsigned char)255U, .driver_info = (unsigned long)(& rtl8192cu_fops)}, {.match_flags = (unsigned short)899U, .idVendor = (unsigned short)1962U, .idProduct = (unsigned short)86U, .bInterfaceClass = (unsigned char)255U, .bInterfaceSubClass = (unsigned char)255U, .bInterfaceProtocol = (unsigned char)255U, .driver_info = (unsigned long)(& rtl8192cu_fops)}, {.match_flags = (unsigned short)899U, .idVendor = (unsigned short)1976U, .idProduct = (unsigned short)33144U, .bInterfaceClass = (unsigned char)255U, .bInterfaceSubClass = (unsigned char)255U, .bInterfaceProtocol = (unsigned char)255U, .driver_info = (unsigned long)(& rtl8192cu_fops)}, {.match_flags = (unsigned short)899U, .idVendor = (unsigned short)2118U, .idProduct = (unsigned short)36897U, .bInterfaceClass = (unsigned char)255U, .bInterfaceSubClass = (unsigned char)255U, .bInterfaceProtocol = (unsigned char)255U, .driver_info = (unsigned long)(& rtl8192cu_fops)}, {.match_flags = (unsigned short)899U, .idVendor = (unsigned short)2118U, .idProduct = (unsigned short)61441U, .bInterfaceClass = (unsigned char)255U, .bInterfaceSubClass = (unsigned char)255U, .bInterfaceProtocol = (unsigned char)255U, .driver_info = (unsigned long)(& rtl8192cu_fops)}, {.match_flags = (unsigned short)899U, .idVendor = (unsigned short)3034U, .idProduct = (unsigned short)11822U, .bInterfaceClass = (unsigned char)255U, .bInterfaceSubClass = (unsigned char)255U, .bInterfaceProtocol = (unsigned char)255U, .driver_info = (unsigned long)(& rtl8192cu_fops)}, {.match_flags = (unsigned short)899U, .idVendor = (unsigned short)3686U, .idProduct = (unsigned short)25U, .bInterfaceClass = (unsigned char)255U, .bInterfaceSubClass = (unsigned char)255U, .bInterfaceProtocol = (unsigned char)255U, .driver_info = (unsigned long)(& rtl8192cu_fops)}, {.match_flags = (unsigned short)899U, .idVendor = (unsigned short)3686U, .idProduct = (unsigned short)32U, .bInterfaceClass = (unsigned char)255U, .bInterfaceSubClass = (unsigned char)255U, .bInterfaceProtocol = (unsigned char)255U, .driver_info = (unsigned long)(& rtl8192cu_fops)}, {.match_flags = (unsigned short)899U, .idVendor = (unsigned short)8193U, .idProduct = (unsigned short)13063U, .bInterfaceClass = (unsigned char)255U, .bInterfaceSubClass = (unsigned char)255U, .bInterfaceProtocol = (unsigned char)255U, .driver_info = (unsigned long)(& rtl8192cu_fops)}, {.match_flags = (unsigned short)899U, .idVendor = (unsigned short)8193U, .idProduct = (unsigned short)13065U, .bInterfaceClass = (unsigned char)255U, .bInterfaceSubClass = (unsigned char)255U, .bInterfaceProtocol = (unsigned char)255U, .driver_info = (unsigned long)(& rtl8192cu_fops)}, {.match_flags = (unsigned short)899U, .idVendor = (unsigned short)8193U, .idProduct = (unsigned short)13066U, .bInterfaceClass = (unsigned char)255U, .bInterfaceSubClass = (unsigned char)255U, .bInterfaceProtocol = (unsigned char)255U, .driver_info = (unsigned long)(& rtl8192cu_fops)}, {.match_flags = (unsigned short)899U, .idVendor = (unsigned short)8217U, .idProduct = (unsigned short)43819U, .bInterfaceClass = (unsigned char)255U, .bInterfaceSubClass = (unsigned char)255U, .bInterfaceProtocol = (unsigned char)255U, .driver_info = (unsigned long)(& rtl8192cu_fops)}, {.match_flags = (unsigned short)899U, .idVendor = (unsigned short)8436U, .idProduct = (unsigned short)25165U, .bInterfaceClass = (unsigned char)255U, .bInterfaceSubClass = (unsigned char)255U, .bInterfaceProtocol = (unsigned char)255U, .driver_info = (unsigned long)(& rtl8192cu_fops)}, {.match_flags = (unsigned short)899U, .idVendor = (unsigned short)9047U, .idProduct = (unsigned short)256U, .bInterfaceClass = (unsigned char)255U, .bInterfaceSubClass = (unsigned char)255U, .bInterfaceProtocol = (unsigned char)255U, .driver_info = (unsigned long)(& rtl8192cu_fops)}, {.match_flags = (unsigned short)899U, .idVendor = (unsigned short)18517U, .idProduct = (unsigned short)145U, .bInterfaceClass = (unsigned char)255U, .bInterfaceSubClass = (unsigned char)255U, .bInterfaceProtocol = (unsigned char)255U, .driver_info = (unsigned long)(& rtl8192cu_fops)}, {.match_flags = (unsigned short)899U, .idVendor = (unsigned short)29586U, .idProduct = (unsigned short)30754U, .bInterfaceClass = (unsigned char)255U, .bInterfaceSubClass = (unsigned char)255U, .bInterfaceProtocol = (unsigned char)255U, .driver_info = (unsigned long)(& rtl8192cu_fops)}, {.match_flags = (unsigned short)899U, .idVendor = (unsigned short)9047U, .idProduct = (unsigned short)263U, .bInterfaceClass = (unsigned char)255U, .bInterfaceSubClass = (unsigned char)255U, .bInterfaceProtocol = (unsigned char)255U, .driver_info = (unsigned long)(& rtl8192eu_fops)}, {.match_flags = (unsigned short)899U, .idVendor = (unsigned short)8217U, .idProduct = (unsigned short)43827U, .bInterfaceClass = (unsigned char)255U, .bInterfaceSubClass = (unsigned char)255U, .bInterfaceProtocol = (unsigned char)255U, .driver_info = (unsigned long)(& rtl8192eu_fops)}, {.match_flags = (unsigned short)899U, .idVendor = (unsigned short)3034U, .idProduct = (unsigned short)33164U, .bInterfaceClass = (unsigned char)255U, .bInterfaceSubClass = (unsigned char)255U, .bInterfaceProtocol = (unsigned char)255U, .driver_info = (unsigned long)(& rtl8192eu_fops)}};
#line 6846  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
static struct usb_driver rtl8xxxu_driver = {.name = (char *)"rtl8xxxu", .probe = & rtl8xxxu_probe, .disconnect = & rtl8xxxu_disconnect, .id_table = (struct usb_device_id *)(& dev_table), .no_dynamic_id = (unsigned int)1U, .disable_hub_initiated_lpm = (unsigned int)1U};
#line 6855  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
static int rtl8xxxu_module_init(void)
{
  #line 6857 
  int res;
  #line 6859 
  res = cif_usb_register_driver(& rtl8xxxu_driver,& __this_module,(char *)"rtl8xxxu");
  #line 6860 
  if (res < 0) 
               #line 6861 
               printk((char *)"\001",res);
  #line 6863 
  return res;
}

#line 6866  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
static void rtl8xxxu_module_exit(void)
{
  #line 6868 
  cif_usb_deregister(& rtl8xxxu_driver);
  #line 6869 
  return;
}

#line 6872  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c"
struct usb_device_id __mod_usb__dev_table_device_table[83U];
#line 93  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.ko/concurrency safety/0/concurrency safety/weaver/rtl8xxxu_core.i.aux"
struct usb_device_id (*emg_alias_dev_table)[83U] = & dev_table;
#line 94  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.ko/concurrency safety/0/concurrency safety/weaver/rtl8xxxu_core.i.aux"
struct usb_driver *emg_alias_rtl8xxxu_driver = & rtl8xxxu_driver;
#line 95  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.ko/concurrency safety/0/concurrency safety/weaver/rtl8xxxu_core.i.aux"
struct ieee80211_ops *emg_alias_rtl8xxxu_ops = & rtl8xxxu_ops;
#line 98 
#line 98 
struct ieee80211_hw *emg_ieee80211_alloc_hw(unsigned long arg0, struct ieee80211_ops *arg1);
#line 99 
#line 99 
void emg_ieee80211_free_hw(struct ieee80211_hw *arg0);
#line 100 
#line 100 
_Bool emg_schedule_delayed_work(struct delayed_work *arg0, unsigned long arg1);
#line 101 
#line 101 
_Bool emg_schedule_work(struct work_struct *arg0);
#line 102 
#line 102 
void emg_usb_deregister(struct usb_driver *arg0);
#line 103 
#line 103 
int emg_usb_register_driver(struct usb_driver *arg0, struct module *arg1, char *arg2);
#line 104 
#line 104 
int emg_usb_reset_device(struct usb_device *arg0);
#line 105 
#line 105 
int emg_usb_submit_urb(struct urb *arg0, unsigned int arg1);
#line 109  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.ko/concurrency safety/0/concurrency safety/weaver/rtl8xxxu_core.i.aux"
int emg_wrapper_rtl8xxxu_add_interface(struct ieee80211_hw *arg0, struct ieee80211_vif *arg1)
{
  #line 110 
  return rtl8xxxu_add_interface(arg0,arg1);
}

#line 114  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.ko/concurrency safety/0/concurrency safety/weaver/rtl8xxxu_core.i.aux"
int emg_wrapper_rtl8xxxu_ampdu_action(struct ieee80211_hw *arg0, struct ieee80211_vif *arg1, struct ieee80211_ampdu_params *arg2)
{
  #line 115 
  return rtl8xxxu_ampdu_action(arg0,arg1,arg2);
}

#line 119  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.ko/concurrency safety/0/concurrency safety/weaver/rtl8xxxu_core.i.aux"
void emg_wrapper_rtl8xxxu_bss_info_changed(struct ieee80211_hw *arg0, struct ieee80211_vif *arg1, struct ieee80211_bss_conf *arg2, unsigned int arg3)
{
  #line 120 
  rtl8xxxu_bss_info_changed(arg0,arg1,arg2,arg3);
  #line 121 
  return;
}

#line 124  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.ko/concurrency safety/0/concurrency safety/weaver/rtl8xxxu_core.i.aux"
int emg_wrapper_rtl8xxxu_conf_tx(struct ieee80211_hw *arg0, struct ieee80211_vif *arg1, unsigned short arg2, struct ieee80211_tx_queue_params *arg3)
{
  #line 125 
  return rtl8xxxu_conf_tx(arg0,arg1,(unsigned short)((int)arg2),arg3);
}

#line 129  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.ko/concurrency safety/0/concurrency safety/weaver/rtl8xxxu_core.i.aux"
int emg_wrapper_rtl8xxxu_config(struct ieee80211_hw *arg0, unsigned int arg1)
{
  #line 130 
  return rtl8xxxu_config(arg0,arg1);
}

#line 134  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.ko/concurrency safety/0/concurrency safety/weaver/rtl8xxxu_core.i.aux"
void emg_wrapper_rtl8xxxu_configure_filter(struct ieee80211_hw *arg0, unsigned int arg1, unsigned int *arg2, unsigned long long arg3)
{
  #line 135 
  rtl8xxxu_configure_filter(arg0,arg1,arg2,arg3);
  #line 136 
  return;
}

#line 139  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.ko/concurrency safety/0/concurrency safety/weaver/rtl8xxxu_core.i.aux"
void emg_wrapper_rtl8xxxu_disconnect(struct usb_interface *arg0)
{
  #line 140 
  rtl8xxxu_disconnect(arg0);
  #line 141 
  return;
}

#line 144  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.ko/concurrency safety/0/concurrency safety/weaver/rtl8xxxu_core.i.aux"
int emg_wrapper_rtl8xxxu_probe(struct usb_interface *arg0, struct usb_device_id *arg1)
{
  #line 145 
  return rtl8xxxu_probe(arg0,arg1);
}

#line 149  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.ko/concurrency safety/0/concurrency safety/weaver/rtl8xxxu_core.i.aux"
void emg_wrapper_rtl8xxxu_remove_interface(struct ieee80211_hw *arg0, struct ieee80211_vif *arg1)
{
  #line 150 
  rtl8xxxu_remove_interface(arg0,arg1);
  #line 151 
  return;
}

#line 154  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.ko/concurrency safety/0/concurrency safety/weaver/rtl8xxxu_core.i.aux"
int emg_wrapper_rtl8xxxu_set_key(struct ieee80211_hw *arg0, enum set_key_cmd arg1, struct ieee80211_vif *arg2, struct ieee80211_sta *arg3, struct ieee80211_key_conf *arg4)
{
  #line 155 
  return rtl8xxxu_set_key(arg0,arg1,arg2,arg3,arg4);
}

#line 159  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.ko/concurrency safety/0/concurrency safety/weaver/rtl8xxxu_core.i.aux"
int emg_wrapper_rtl8xxxu_set_rts_threshold(struct ieee80211_hw *arg0, unsigned int arg1)
{
  #line 160 
  return rtl8xxxu_set_rts_threshold(arg0,arg1);
}

#line 164  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.ko/concurrency safety/0/concurrency safety/weaver/rtl8xxxu_core.i.aux"
int emg_wrapper_rtl8xxxu_start(struct ieee80211_hw *arg0)
{
  #line 165 
  return rtl8xxxu_start(arg0);
}

#line 169  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.ko/concurrency safety/0/concurrency safety/weaver/rtl8xxxu_core.i.aux"
void emg_wrapper_rtl8xxxu_stop(struct ieee80211_hw *arg0)
{
  #line 170 
  rtl8xxxu_stop(arg0);
  #line 171 
  return;
}

#line 174  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.ko/concurrency safety/0/concurrency safety/weaver/rtl8xxxu_core.i.aux"
void emg_wrapper_rtl8xxxu_sw_scan_complete(struct ieee80211_hw *arg0, struct ieee80211_vif *arg1)
{
  #line 175 
  rtl8xxxu_sw_scan_complete(arg0,arg1);
  #line 176 
  return;
}

#line 179  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.ko/concurrency safety/0/concurrency safety/weaver/rtl8xxxu_core.i.aux"
void emg_wrapper_rtl8xxxu_sw_scan_start(struct ieee80211_hw *arg0, struct ieee80211_vif *arg1, unsigned char *arg2)
{
  #line 180 
  rtl8xxxu_sw_scan_start(arg0,arg1,arg2);
  #line 181 
  return;
}

#line 184  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.ko/concurrency safety/0/concurrency safety/weaver/rtl8xxxu_core.i.aux"
void emg_wrapper_rtl8xxxu_tx(struct ieee80211_hw *arg0, struct ieee80211_tx_control *arg1, struct sk_buff *arg2)
{
  #line 185 
  rtl8xxxu_tx(arg0,arg1,arg2);
  #line 186 
  return;
}

#line 189  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.ko/concurrency safety/0/concurrency safety/weaver/rtl8xxxu_core.i.aux"
void emg_rtl8xxxu_module_exit(void)
{
  #line 190 
  rtl8xxxu_module_exit();
  #line 191 
  return;
}

#line 193  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.ko/concurrency safety/0/concurrency safety/weaver/rtl8xxxu_core.i.aux"
int emg_rtl8xxxu_module_init(void)
{
  #line 194 
  return rtl8xxxu_module_init();
}

#line 226  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.ko/concurrency safety/0/concurrency safety/weaver/rtl8xxxu_core.i.aux"
static void INIT_LIST_HEAD(struct list_head *list)
{
  #line 229 
  ldv_init_list_head(list);
  #line 230 
  return;
}

#line 414  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.ko/concurrency safety/0/concurrency safety/weaver/rtl8xxxu_core.i.aux"
static void *kmalloc(size_t size, gfp_t flags)
{
  #line 417 
  return ldv_kmalloc(size,flags);
}

#line 742  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.ko/concurrency safety/0/concurrency safety/weaver/rtl8xxxu_core.i.aux"
static void *cif_kmemdup(void *src, size_t len, gfp_t gfp)
{
  #line 745 
  return ldv_kmemdup(src,len,gfp);
}

#line 749  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.ko/concurrency safety/0/concurrency safety/weaver/rtl8xxxu_core.i.aux"
static bool cif_schedule_work(struct work_struct *work)
{
  #line 753 
  return emg_schedule_work(work);
}

#line 891  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.ko/concurrency safety/0/concurrency safety/weaver/rtl8xxxu_core.i.aux"
static void cif_mutex_lock_usb_buf_mutex_of_rtl8xxxu_priv(struct mutex *lock)
{
  #line 894 
  ldv_mutex_model_lock(lock,(char *)"usb_buf_mutex_of_rtl8xxxu_priv");
  #line 895 
  return;
}

#line 898  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.ko/concurrency safety/0/concurrency safety/weaver/rtl8xxxu_core.i.aux"
static void cif_mutex_unlock_usb_buf_mutex_of_rtl8xxxu_priv(struct mutex *lock)
{
  #line 901 
  ldv_mutex_model_unlock(lock,(char *)"usb_buf_mutex_of_rtl8xxxu_priv");
  #line 902 
  return;
}

#line 905  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.ko/concurrency safety/0/concurrency safety/weaver/rtl8xxxu_core.i.aux"
static void cif_mutex_lock_h2c_mutex_of_rtl8xxxu_priv(struct mutex *lock)
{
  #line 908 
  ldv_mutex_model_lock(lock,(char *)"h2c_mutex_of_rtl8xxxu_priv");
  #line 909 
  return;
}

#line 912  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.ko/concurrency safety/0/concurrency safety/weaver/rtl8xxxu_core.i.aux"
static void cif_mutex_unlock_h2c_mutex_of_rtl8xxxu_priv(struct mutex *lock)
{
  #line 915 
  ldv_mutex_model_unlock(lock,(char *)"h2c_mutex_of_rtl8xxxu_priv");
  #line 916 
  return;
}

#line 919  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.ko/concurrency safety/0/concurrency safety/weaver/rtl8xxxu_core.i.aux"
static int cif_request_firmware(struct firmware **fw, char *name, struct device *device)
{
  #line 922 
  return ldv_request_firmware(fw);
}

#line 926  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.ko/concurrency safety/0/concurrency safety/weaver/rtl8xxxu_core.i.aux"
static void cif_release_firmware(struct firmware *fw)
{
  #line 929 
  ldv_release_firmware(fw);
  #line 930 
  return;
}

#line 933  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.ko/concurrency safety/0/concurrency safety/weaver/rtl8xxxu_core.i.aux"
static void cif___ldv_spin_lock_tx_urb_lock_of_rtl8xxxu_priv(spinlock_t *lock)
{
  #line 936 
  ldv_spin_model_lock((char *)"tx_urb_lock_of_rtl8xxxu_priv");
  #line 938 
  __ldv_spin_lock(lock);
  #line 939 
  return;
}

#line 942  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.ko/concurrency safety/0/concurrency safety/weaver/rtl8xxxu_core.i.aux"
static void cif_spin_unlock_irqrestore_tx_urb_lock_of_rtl8xxxu_priv(spinlock_t *lock, unsigned long flags)
{
  #line 945 
  ldv_spin_model_unlock((char *)"tx_urb_lock_of_rtl8xxxu_priv");
  #line 947 
  spin_unlock_irqrestore(lock,flags);
  #line 948 
  return;
}

#line 951  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.ko/concurrency safety/0/concurrency safety/weaver/rtl8xxxu_core.i.aux"
static int cif_usb_submit_urb(struct urb *urb, gfp_t mem_flags)
{
  #line 955 
  return emg_usb_submit_urb(urb,mem_flags);
}

#line 959  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.ko/concurrency safety/0/concurrency safety/weaver/rtl8xxxu_core.i.aux"
static void cif___ldv_spin_lock_rx_urb_lock_of_rtl8xxxu_priv(spinlock_t *lock)
{
  #line 962 
  ldv_spin_model_lock((char *)"rx_urb_lock_of_rtl8xxxu_priv");
  #line 964 
  __ldv_spin_lock(lock);
  #line 965 
  return;
}

#line 968  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.ko/concurrency safety/0/concurrency safety/weaver/rtl8xxxu_core.i.aux"
static void cif_spin_unlock_irqrestore_rx_urb_lock_of_rtl8xxxu_priv(spinlock_t *lock, unsigned long flags)
{
  #line 971 
  ldv_spin_model_unlock((char *)"rx_urb_lock_of_rtl8xxxu_priv");
  #line 973 
  spin_unlock_irqrestore(lock,flags);
  #line 974 
  return;
}

#line 977  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.ko/concurrency safety/0/concurrency safety/weaver/rtl8xxxu_core.i.aux"
static void cif___ldv_spin_lock_c2hcmd_lock_of_rtl8xxxu_priv(spinlock_t *lock)
{
  #line 980 
  ldv_spin_model_lock((char *)"c2hcmd_lock_of_rtl8xxxu_priv");
  #line 982 
  __ldv_spin_lock(lock);
  #line 983 
  return;
}

#line 986  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.ko/concurrency safety/0/concurrency safety/weaver/rtl8xxxu_core.i.aux"
static void cif_spin_unlock_irqrestore_c2hcmd_lock_of_rtl8xxxu_priv(spinlock_t *lock, unsigned long flags)
{
  #line 989 
  ldv_spin_model_unlock((char *)"c2hcmd_lock_of_rtl8xxxu_priv");
  #line 991 
  spin_unlock_irqrestore(lock,flags);
  #line 992 
  return;
}

#line 995  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.ko/concurrency safety/0/concurrency safety/weaver/rtl8xxxu_core.i.aux"
static bool cif_schedule_delayed_work(struct delayed_work *dwork, unsigned long delay)
{
  #line 999 
  return emg_schedule_delayed_work(dwork,delay);
}

#line 1003  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.ko/concurrency safety/0/concurrency safety/weaver/rtl8xxxu_core.i.aux"
static struct ieee80211_hw *cif_ieee80211_alloc_hw(size_t priv_data_len, struct ieee80211_ops *ops)
{
  #line 1007 
  return emg_ieee80211_alloc_hw(priv_data_len,ops);
}

#line 1011  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.ko/concurrency safety/0/concurrency safety/weaver/rtl8xxxu_core.i.aux"
static void cif_ieee80211_free_hw(struct ieee80211_hw *hw)
{
  #line 1015 
  emg_ieee80211_free_hw(hw);
  #line 1016 
  return;
}

#line 1019  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.ko/concurrency safety/0/concurrency safety/weaver/rtl8xxxu_core.i.aux"
static int cif_usb_reset_device(struct usb_device *dev)
{
  #line 1023 
  return emg_usb_reset_device(dev);
}

#line 1027  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.ko/concurrency safety/0/concurrency safety/weaver/rtl8xxxu_core.i.aux"
static int cif_usb_register_driver(struct usb_driver *ldv_func_arg1, struct module *ldv_func_arg2, char *ldv_func_arg3)
{
  #line 1031 
  return emg_usb_register_driver(ldv_func_arg1,ldv_func_arg2,ldv_func_arg3);
}

#line 1035  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.ko/concurrency safety/0/concurrency safety/weaver/rtl8xxxu_core.i.aux"
static void cif_usb_deregister(struct usb_driver *ldv_func_arg1)
{
  #line 1039 
  emg_usb_deregister(ldv_func_arg1);
  #line 1040 
  return;
}

#line 35  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_8723a.c"
static struct rtl8xxxu_power_base rtl8723a_power_base = {.reg_0e00 = 168561676U, .reg_0e04 = 33818120U, .reg_0e10 = 168561934U, .reg_0e14 = 33818120U, .reg_0e18 = 168561934U, .reg_0e1c = 33818120U, .reg_0830 = 168561676U, .reg_0834 = 33818120U, .reg_083c = 168561934U, .reg_0848 = 33818120U, .reg_084c = 168561934U, .reg_0868 = 33818120U};
#line 57  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_8723a.c"
static struct rtl8xxxu_rfregval rtl8723au_radioa_1t_init_table[142U] = {{.val = 196953U}, {.reg = (unsigned char)1U, .val = 201348U}, {.reg = (unsigned char)2U, .val = 622592U}, {.reg = (unsigned char)3U, .val = 236643U}, {.reg = (unsigned char)4U, .val = 135399U}, {.reg = (unsigned char)9U, .val = 132175U}, {.reg = (unsigned char)10U, .val = 107505U}, {.reg = (unsigned char)11U, .val = 83847U}, {.reg = (unsigned char)12U, .val = 562942U}, {.reg = (unsigned char)13U, .val = 57388U}, {.reg = (unsigned char)14U, .val = 236775U}, {.reg = (unsigned char)15U, .val = 1105U}, {.reg = (unsigned char)25U}, {.reg = (unsigned char)26U, .val = 197461U}, {.reg = (unsigned char)27U, .val = 395776U}, {.reg = (unsigned char)28U, .val = 1033080U}, {.reg = (unsigned char)29U, .val = 660048U}, {.reg = (unsigned char)30U, .val = 591U}, {.reg = (unsigned char)31U}, {.reg = (unsigned char)32U, .val = 46612U}, {.reg = (unsigned char)33U, .val = 442368U}, {.reg = (unsigned char)34U}, {.reg = (unsigned char)35U, .val = 5464U}, {.reg = (unsigned char)36U, .val = 96U}, {.reg = (unsigned char)37U, .val = 1155U}, {.reg = (unsigned char)38U, .val = 323584U}, {.reg = (unsigned char)39U, .val = 968665U}, {.reg = (unsigned char)40U, .val = 358192U}, {.reg = (unsigned char)41U, .val = 18307U}, {.reg = (unsigned char)42U, .val = 1U}, {.reg = (unsigned char)43U, .val = 135988U}, {.reg = (unsigned char)42U}, {.reg = (unsigned char)43U, .val = 84U}, {.reg = (unsigned char)42U, .val = 1U}, {.reg = (unsigned char)43U, .val = 2056U}, {.reg = (unsigned char)43U, .val = 340787U}, {.reg = (unsigned char)44U, .val = 12U}, {.reg = (unsigned char)42U, .val = 2U}, {.reg = (unsigned char)43U, .val = 2056U}, {.reg = (unsigned char)43U, .val = 373555U}, {.reg = (unsigned char)44U, .val = 13U}, {.reg = (unsigned char)42U, .val = 3U}, {.reg = (unsigned char)43U, .val = 2056U}, {.reg = (unsigned char)43U, .val = 406323U}, {.reg = (unsigned char)44U, .val = 13U}, {.reg = (unsigned char)42U, .val = 4U}, {.reg = (unsigned char)43U, .val = 2056U}, {.reg = (unsigned char)43U, .val = 439091U}, {.reg = (unsigned char)44U, .val = 13U}, {.reg = (unsigned char)42U, .val = 5U}, {.reg = (unsigned char)43U, .val = 2056U}, {.reg = (unsigned char)43U, .val = 471859U}, {.reg = (unsigned char)44U, .val = 13U}, {.reg = (unsigned char)42U, .val = 6U}, {.reg = (unsigned char)43U, .val = 1801U}, {.reg = (unsigned char)43U, .val = 373555U}, {.reg = (unsigned char)44U, .val = 13U}, {.reg = (unsigned char)42U, .val = 7U}, {.reg = (unsigned char)43U, .val = 1801U}, {.reg = (unsigned char)43U, .val = 406323U}, {.reg = (unsigned char)44U, .val = 13U}, {.reg = (unsigned char)42U, .val = 8U}, {.reg = (unsigned char)43U, .val = 1546U}, {.reg = (unsigned char)43U, .val = 308019U}, {.reg = (unsigned char)44U, .val = 13U}, {.reg = (unsigned char)42U, .val = 9U}, {.reg = (unsigned char)43U, .val = 1546U}, {.reg = (unsigned char)43U, .val = 340787U}, {.reg = (unsigned char)44U, .val = 13U}, {.reg = (unsigned char)42U, .val = 10U}, {.reg = (unsigned char)43U, .val = 1546U}, {.reg = (unsigned char)43U, .val = 373555U}, {.reg = (unsigned char)44U, .val = 13U}, {.reg = (unsigned char)42U, .val = 11U}, {.reg = (unsigned char)43U, .val = 1546U}, {.reg = (unsigned char)43U, .val = 406323U}, {.reg = (unsigned char)44U, .val = 13U}, {.reg = (unsigned char)42U, .val = 12U}, {.reg = (unsigned char)43U, .val = 1546U}, {.reg = (unsigned char)43U, .val = 439091U}, {.reg = (unsigned char)44U, .val = 13U}, {.reg = (unsigned char)42U, .val = 13U}, {.reg = (unsigned char)43U, .val = 1546U}, {.reg = (unsigned char)43U, .val = 471859U}, {.reg = (unsigned char)44U, .val = 13U}, {.reg = (unsigned char)42U, .val = 14U}, {.reg = (unsigned char)43U, .val = 1291U}, {.reg = (unsigned char)43U, .val = 419430U}, {.reg = (unsigned char)44U, .val = 26U}, {.reg = (unsigned char)42U, .val = 917504U}, {.reg = (unsigned char)16U, .val = 262159U}, {.reg = (unsigned char)17U, .val = 930300U}, {.reg = (unsigned char)16U, .val = 393231U}, {.reg = (unsigned char)17U, .val = 1047032U}, {.reg = (unsigned char)16U, .val = 131087U}, {.reg = (unsigned char)17U, .val = 132089U}, {.reg = (unsigned char)16U, .val = 196623U}, {.reg = (unsigned char)17U, .val = 1045760U}, {.reg = (unsigned char)16U}, {.reg = (unsigned char)17U}, {.reg = (unsigned char)16U, .val = 524303U}, {.reg = (unsigned char)17U, .val = 258304U}, {.reg = (unsigned char)16U, .val = 589839U}, {.reg = (unsigned char)17U, .val = 143616U}, {.reg = (unsigned char)18U, .val = 204800U}, {.reg = (unsigned char)18U, .val = 462848U}, {.reg = (unsigned char)18U, .val = 720896U}, {.reg = (unsigned char)18U, .val = 1032192U}, {.reg = (unsigned char)19U, .val = 165811U}, {.reg = (unsigned char)19U, .val = 148663U}, {.reg = (unsigned char)19U, .val = 132267U}, {.reg = (unsigned char)19U, .val = 115871U}, {.reg = (unsigned char)19U, .val = 99475U}, {.reg = (unsigned char)19U, .val = 82587U}, {.reg = (unsigned char)19U, .val = 66201U}, {.reg = (unsigned char)19U, .val = 49820U}, {.reg = (unsigned char)19U, .val = 33184U}, {.reg = (unsigned char)19U, .val = 16556U}, {.reg = (unsigned char)19U, .val = 32U}, {.reg = (unsigned char)20U, .val = 103500U}, {.reg = (unsigned char)20U, .val = 365636U}, {.reg = (unsigned char)20U, .val = 627788U}, {.reg = (unsigned char)20U, .val = 889924U}, {.reg = (unsigned char)21U, .val = 62580U}, {.reg = (unsigned char)21U, .val = 324727U}, {.reg = (unsigned char)21U, .val = 586837U}, {.reg = (unsigned char)21U, .val = 848981U}, {.reg = (unsigned char)22U, .val = 825U}, {.reg = (unsigned char)22U, .val = 262969U}, {.reg = (unsigned char)22U, .val = 525113U}, {.reg = (unsigned char)22U, .val = 787302U}, {.val = 65881U}, {.reg = (unsigned char)24U, .val = 62465U}, {.reg = (unsigned char)254U}, {.reg = (unsigned char)254U}, {.reg = (unsigned char)31U, .val = 3U}, {.reg = (unsigned char)254U}, {.reg = (unsigned char)254U}, {.reg = (unsigned char)30U, .val = 583U}, {.reg = (unsigned char)31U}, {.val = 196953U}, {.reg = (unsigned char)255U, .val = 4294967295U}};
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_8723a.c"
static int rtl8723au_parse_efuse(struct rtl8xxxu_priv *priv)
{
  #line 134 
  struct rtl8723au_efuse *efuse = & priv->efuse_wifi.efuse8723;
  #line 136 
  if ((unsigned int)efuse->rtl_id != 33065U) 
                                             #line 137 
                                             return -22;
  #line 139 
  ether_addr_copy((u8 *)(& priv->mac_addr),(u8 *)(& efuse->mac_addr));
  #line 141 
  memcpy((void *)(& priv->cck_tx_power_index_A),(void *)(& efuse->cck_tx_power_index_A),3UL);
  #line 144 
  memcpy((void *)(& priv->cck_tx_power_index_B),(void *)(& efuse->cck_tx_power_index_B),3UL);
  #line 148 
  memcpy((void *)(& priv->ht40_1s_tx_power_index_A),(void *)(& efuse->ht40_1s_tx_power_index_A),3UL);
  #line 151 
  memcpy((void *)(& priv->ht40_1s_tx_power_index_B),(void *)(& efuse->ht40_1s_tx_power_index_B),3UL);
  #line 155 
  memcpy((void *)(& priv->ht20_tx_power_index_diff),(void *)(& efuse->ht20_tx_power_index_diff),3UL);
  #line 158 
  memcpy((void *)(& priv->ofdm_tx_power_index_diff),(void *)(& efuse->ofdm_tx_power_index_diff),3UL);
  #line 162 
  memcpy((void *)(& priv->ht40_max_power_offset),(void *)(& efuse->ht40_max_power_offset),3UL);
  #line 165 
  memcpy((void *)(& priv->ht20_max_power_offset),(void *)(& efuse->ht20_max_power_offset),3UL);
  #line 169 
  if ((unsigned int)priv->efuse_wifi.efuse8723.version != 0U) {
    #line 170 
    priv->has_xtalk = (unsigned int)1U;
    #line 171 
    priv->xtalk = (unsigned char)((unsigned int)priv->efuse_wifi.efuse8723.xtal_k & 63U);
  }
  #line 174 
  priv->power_base = & rtl8723a_power_base;
  #line 176 
  _dev_info(& (priv->udev)->dev,(char *)"Vendor: %.7s\n",(u8 *)(& efuse->vendor_name));
  #line 178 
  _dev_info(& (priv->udev)->dev,(char *)"Product: %.41s\n",(u8 *)(& efuse->device_name));
  #line 180 
  return 0;
}

#line 183  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_8723a.c"
static int rtl8723au_load_firmware(struct rtl8xxxu_priv *priv)
{
  #line 185 
  char *fw_name;
  #line 186 
  int ret;
  #line 188 
  switch ((int)priv->chip_cut) {
    #line 189 
    case 0: 
            #line 189 
    ;
    #line 190 
    fw_name = (char *)"rtlwifi/rtl8723aufw_A.bin";
    #line 191 
    break;
    #line 192 
    case 1: 
            #line 192 
    ;
    #line 193 
    if ((unsigned int)priv->enable_bluetooth != 0U) 
                                                    #line 194 
                                                    fw_name = (char *)"rtlwifi/rtl8723aufw_B.bin"; else 
                                                                    #line 196 
                                                                    fw_name = (char *)"rtlwifi/rtl8723aufw_B_NoBT.bin";
    #line 198 
    break;
    #line 199 
    default: 
             #line 199 
    ;
    #line 200 
    return -22;
  }
  #line 203 
  ret = rtl8xxxu_load_firmware(priv,fw_name);
  #line 204 
  return ret;
}

#line 207  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_8723a.c"
static int rtl8723au_init_phy_rf(struct rtl8xxxu_priv *priv)
{
  #line 209 
  int ret;
  #line 211 
  ret = rtl8xxxu_init_phy_rf(priv,(struct rtl8xxxu_rfregval *)(& rtl8723au_radioa_1t_init_table),(enum rtl8xxxu_rfpath)RF_A);
  #line 214 
  rtl8xxxu_write32(priv,(unsigned short)36,58818701U);
  #line 215 
  rtl8xxxu_write32(priv,(unsigned short)40,4043308931U);
  #line 216 
  rtl8xxxu_write32(priv,(unsigned short)40,4043308930U);
  #line 217 
  rtl8xxxu_write32(priv,(unsigned short)40,4043308931U);
  #line 219 
  return ret;
}

#line 222  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_8723a.c"
static int rtl8723a_emu_to_active(struct rtl8xxxu_priv *priv)
{
  #line 224 
  u8 val8;
  #line 225 
  u32 val32;
  #line 226 
  int count;
  #line 226 
  int ret = 0;
  #line 229 
  val8 = rtl8xxxu_read8(priv,(unsigned short)32);
  #line 230 
  val8 = (unsigned char)((unsigned int)val8 | 1U);
  #line 231 
  rtl8xxxu_write8(priv,(unsigned short)32,(unsigned char)((int)val8));
  #line 234 
  val8 = rtl8xxxu_read8(priv,(unsigned short)103);
  #line 235 
  val8 = (unsigned char)((unsigned int)val8 & 239U);
  #line 236 
  rtl8xxxu_write8(priv,(unsigned short)103,(unsigned char)((int)val8));
  #line 238 
  __const_udelay(4295000UL);
  #line 241 
  val8 = rtl8xxxu_read8(priv,(unsigned short)0);
  #line 242 
  val8 = (unsigned char)((unsigned int)val8 & 223U);
  #line 243 
  rtl8xxxu_write8(priv,(unsigned short)0,(unsigned char)((int)val8));
  #line 246 
  val8 = rtl8xxxu_read8(priv,(unsigned short)5);
  #line 247 
  val8 = (unsigned char)((unsigned int)val8 & 251U);
  #line 248 
  rtl8xxxu_write8(priv,(unsigned short)5,(unsigned char)((int)val8));
  #line 251 
  count = 500;
  #line 251 
  while (count != 0) {
    #line 252 
    val32 = rtl8xxxu_read32(priv,(unsigned short)4);
    #line 253 
    if (((unsigned long)val32 & 131072UL) != 0UL) 
                                                  #line 254 
                                                  break;
    #line 256 
    __const_udelay(42950UL);
    #line 251 
    count --;
  }
  #line 259 
  if (count == 0) {
    #line 260 
    ret = -16;
    #line 261 
    goto exit;
  }
  #line 267 
  val8 = rtl8xxxu_read8(priv,(unsigned short)6);
  #line 268 
  val8 = (unsigned char)((unsigned int)val8 | 1U);
  #line 269 
  rtl8xxxu_write8(priv,(unsigned short)6,(unsigned char)((int)val8));
  #line 272 
  val8 = rtl8xxxu_read8(priv,(unsigned short)5);
  #line 273 
  val8 = (unsigned char)((unsigned int)val8 & 127U);
  #line 274 
  rtl8xxxu_write8(priv,(unsigned short)5,(unsigned char)((int)val8));
  #line 277 
  val8 = rtl8xxxu_read8(priv,(unsigned short)5);
  #line 278 
  val8 = (unsigned char)((unsigned int)val8 & 231U);
  #line 279 
  rtl8xxxu_write8(priv,(unsigned short)5,(unsigned char)((int)val8));
  #line 282 
  val32 = rtl8xxxu_read32(priv,(unsigned short)4);
  #line 283 
  val32 |= 256U;
  #line 284 
  rtl8xxxu_write32(priv,(unsigned short)4,val32);
  #line 286 
  count = 500;
  #line 286 
  while (count != 0) {
    #line 287 
    val32 = rtl8xxxu_read32(priv,(unsigned short)4);
    #line 288 
    if (((unsigned long)val32 & 256UL) == 0UL) {
      #line 289 
      ret = 0;
      #line 290 
      break;
    }
    #line 292 
    __const_udelay(42950UL);
    #line 286 
    count --;
  }
  #line 295 
  if (count == 0) {
    #line 296 
    ret = -16;
    #line 297 
    goto exit;
  }
  #line 305 
  val8 = rtl8xxxu_read8(priv,(unsigned short)78);
  #line 306 
  val8 = (unsigned char)((unsigned int)val8 | 128U);
  #line 307 
  val8 = (unsigned char)((unsigned int)val8 & 127U);
  #line 308 
  rtl8xxxu_write8(priv,(unsigned short)78,(unsigned char)((int)val8));
  #line 310 
  exit: 
        #line 310 
  ;
  #line 311 
  return ret;
}

#line 314  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_8723a.c"
static int rtl8723au_power_on(struct rtl8xxxu_priv *priv)
{
  #line 316 
  u8 val8;
  #line 317 
  u16 val16;
  #line 318 
  u32 val32;
  #line 319 
  int ret;
  #line 324 
  rtl8xxxu_write8(priv,(unsigned short)28,(unsigned char)0);
  #line 326 
  rtl8xxxu_disabled_to_emu(priv);
  #line 328 
  ret = rtl8723a_emu_to_active(priv);
  #line 329 
  if (ret != 0) 
                #line 330 
                goto exit;
  #line 335 
  val8 = rtl8xxxu_read8(priv,(unsigned short)6);
  #line 336 
  val8 = (unsigned char)((unsigned int)val8 | 8U);
  #line 337 
  rtl8xxxu_write8(priv,(unsigned short)6,(unsigned char)((int)val8));
  #line 343 
  val16 = rtl8xxxu_read16(priv,(unsigned short)256);
  #line 344 
  val16 = (unsigned short)((unsigned int)val16 | 1791U);
  #line 349 
  rtl8xxxu_write16(priv,(unsigned short)256,(unsigned short)((int)val16));
  #line 352 
  val32 = rtl8xxxu_read32(priv,(unsigned short)48);
  #line 353 
  val32 &= 2415919103U;
  #line 354 
  val32 |= 1610612736U;
  #line 355 
  rtl8xxxu_write32(priv,(unsigned short)48,val32);
  #line 356 
  exit: 
        #line 356 
  ;
  #line 357 
  return ret;
}

#line 360  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_8723a.c"
struct rtl8xxxu_fileops rtl8723au_fops = {.parse_efuse = & rtl8723au_parse_efuse, .load_firmware = & rtl8723au_load_firmware, .power_on = & rtl8723au_power_on, .power_off = & rtl8xxxu_power_off, .reset_8051 = & rtl8xxxu_reset_8051, .llt_init = & rtl8xxxu_init_llt_table, .init_phy_bb = & rtl8xxxu_gen1_init_phy_bb, .init_phy_rf = & rtl8723au_init_phy_rf, .phy_iq_calibrate = & rtl8xxxu_gen1_phy_iq_calibrate, .config_channel = & rtl8xxxu_gen1_config_channel, .parse_rx_desc = & rtl8xxxu_parse_rxdesc16, .init_aggregation = & rtl8xxxu_gen1_init_aggregation, .enable_rf = & rtl8xxxu_gen1_enable_rf, .disable_rf = & rtl8xxxu_gen1_disable_rf, .usb_quirks = & rtl8xxxu_gen1_usb_quirks, .set_tx_power = & rtl8xxxu_gen1_set_tx_power, .update_rate_mask = & rtl8xxxu_update_rate_mask, .report_connect = & rtl8xxxu_gen1_report_connect, .fill_txdesc = & rtl8xxxu_fill_txdesc_v1, .writeN_block_size = 1024, .rx_agg_buf_size = 16000, .tx_desc_size = (char)32, .rx_desc_size = (char)24, .adda_1t_init = 186328480U, .adda_1t_path_on = 198911392U, .adda_2t_path_on_a = 81470884U, .adda_2t_path_on_b = 186328484U, .trxff_boundary = (unsigned short)10239U, .pbp_rx = (unsigned char)1U, .pbp_tx = (unsigned char)1U, .mactable = (struct rtl8xxxu_reg8val *)(& rtl8xxxu_gen1_mac_init_table), .total_page_num = (unsigned char)248U, .page_num_hi = (unsigned char)12U, .page_num_lo = (unsigned char)2U, .page_num_norm = (unsigned char)2U};
#line 35  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_8723b.c"
static struct rtl8xxxu_reg8val rtl8723b_mac_init_table[104U] = {{.reg = (unsigned short)47U, .val = (unsigned char)48U}, {.reg = (unsigned short)53U}, {.reg = (unsigned short)57U, .val = (unsigned char)8U}, {.reg = (unsigned short)78U, .val = (unsigned char)224U}, {.reg = (unsigned short)100U}, {.reg = (unsigned short)103U, .val = (unsigned char)32U}, {.reg = (unsigned short)1064U, .val = (unsigned char)10U}, {.reg = (unsigned short)1065U, .val = (unsigned char)16U}, {.reg = (unsigned short)1072U}, {.reg = (unsigned short)1073U}, {.reg = (unsigned short)1074U}, {.reg = (unsigned short)1075U, .val = (unsigned char)1U}, {.reg = (unsigned short)1076U, .val = (unsigned char)4U}, {.reg = (unsigned short)1077U, .val = (unsigned char)5U}, {.reg = (unsigned short)1078U, .val = (unsigned char)7U}, {.reg = (unsigned short)1079U, .val = (unsigned char)8U}, {.reg = (unsigned short)1084U, .val = (unsigned char)4U}, {.reg = (unsigned short)1085U, .val = (unsigned char)5U}, {.reg = (unsigned short)1086U, .val = (unsigned char)7U}, {.reg = (unsigned short)1087U, .val = (unsigned char)8U}, {.reg = (unsigned short)1088U, .val = (unsigned char)93U}, {.reg = (unsigned short)1089U, .val = (unsigned char)1U}, {.reg = (unsigned short)1090U}, {.reg = (unsigned short)1092U, .val = (unsigned char)16U}, {.reg = (unsigned short)1093U}, {.reg = (unsigned short)1094U}, {.reg = (unsigned short)1095U}, {.reg = (unsigned short)1096U}, {.reg = (unsigned short)1097U, .val = (unsigned char)240U}, {.reg = (unsigned short)1098U, .val = (unsigned char)15U}, {.reg = (unsigned short)1099U, .val = (unsigned char)62U}, {.reg = (unsigned short)1100U, .val = (unsigned char)16U}, {.reg = (unsigned short)1101U}, {.reg = (unsigned short)1102U}, {.reg = (unsigned short)1103U}, {.reg = (unsigned short)1104U}, {.reg = (unsigned short)1105U, .val = (unsigned char)240U}, {.reg = (unsigned short)1106U, .val = (unsigned char)15U}, {.reg = (unsigned short)1107U}, {.reg = (unsigned short)1110U, .val = (unsigned char)94U}, {.reg = (unsigned short)1120U, .val = (unsigned char)102U}, {.reg = (unsigned short)1121U, .val = (unsigned char)102U}, {.reg = (unsigned short)1224U, .val = (unsigned char)255U}, {.reg = (unsigned short)1225U, .val = (unsigned char)8U}, {.reg = (unsigned short)1228U, .val = (unsigned char)255U}, {.reg = (unsigned short)1229U, .val = (unsigned char)255U}, {.reg = (unsigned short)1230U, .val = (unsigned char)1U}, {.reg = (unsigned short)1280U, .val = (unsigned char)38U}, {.reg = (unsigned short)1281U, .val = (unsigned char)162U}, {.reg = (unsigned short)1282U, .val = (unsigned char)47U}, {.reg = (unsigned short)1283U}, {.reg = (unsigned short)1284U, .val = (unsigned char)40U}, {.reg = (unsigned short)1285U, .val = (unsigned char)163U}, {.reg = (unsigned short)1286U, .val = (unsigned char)94U}, {.reg = (unsigned short)1287U}, {.reg = (unsigned short)1288U, .val = (unsigned char)43U}, {.reg = (unsigned short)1289U, .val = (unsigned char)164U}, {.reg = (unsigned short)1290U, .val = (unsigned char)94U}, {.reg = (unsigned short)1291U}, {.reg = (unsigned short)1292U, .val = (unsigned char)79U}, {.reg = (unsigned short)1293U, .val = (unsigned char)164U}, {.reg = (unsigned short)1294U}, {.reg = (unsigned short)1295U}, {.reg = (unsigned short)1298U, .val = (unsigned char)28U}, {.reg = (unsigned short)1300U, .val = (unsigned char)10U}, {.reg = (unsigned short)1302U, .val = (unsigned char)10U}, {.reg = (unsigned short)1317U, .val = (unsigned char)79U}, {.reg = (unsigned short)1360U, .val = (unsigned char)16U}, {.reg = (unsigned short)1361U, .val = (unsigned char)16U}, {.reg = (unsigned short)1369U, .val = (unsigned char)2U}, {.reg = (unsigned short)1372U, .val = (unsigned char)80U}, {.reg = (unsigned short)1373U, .val = (unsigned char)255U}, {.reg = (unsigned short)1541U, .val = (unsigned char)48U}, {.reg = (unsigned short)1544U, .val = (unsigned char)14U}, {.reg = (unsigned short)1545U, .val = (unsigned char)42U}, {.reg = (unsigned short)1568U, .val = (unsigned char)255U}, {.reg = (unsigned short)1569U, .val = (unsigned char)255U}, {.reg = (unsigned short)1570U, .val = (unsigned char)255U}, {.reg = (unsigned short)1571U, .val = (unsigned char)255U}, {.reg = (unsigned short)1572U, .val = (unsigned char)255U}, {.reg = (unsigned short)1573U, .val = (unsigned char)255U}, {.reg = (unsigned short)1574U, .val = (unsigned char)255U}, {.reg = (unsigned short)1575U, .val = (unsigned char)255U}, {.reg = (unsigned short)1592U, .val = (unsigned char)80U}, {.reg = (unsigned short)1596U, .val = (unsigned char)10U}, {.reg = (unsigned short)1597U, .val = (unsigned char)10U}, {.reg = (unsigned short)1598U, .val = (unsigned char)14U}, {.reg = (unsigned short)1599U, .val = (unsigned char)14U}, {.reg = (unsigned short)1600U, .val = (unsigned char)64U}, {.reg = (unsigned short)1602U, .val = (unsigned char)64U}, {.reg = (unsigned short)1603U}, {.reg = (unsigned short)1618U, .val = (unsigned char)200U}, {.reg = (unsigned short)1646U, .val = (unsigned char)5U}, {.reg = (unsigned short)1792U, .val = (unsigned char)33U}, {.reg = (unsigned short)1793U, .val = (unsigned char)67U}, {.reg = (unsigned short)1794U, .val = (unsigned char)101U}, {.reg = (unsigned short)1795U, .val = (unsigned char)135U}, {.reg = (unsigned short)1800U, .val = (unsigned char)33U}, {.reg = (unsigned short)1801U, .val = (unsigned char)67U}, {.reg = (unsigned short)1802U, .val = (unsigned char)101U}, {.reg = (unsigned short)1803U, .val = (unsigned char)135U}, {.reg = (unsigned short)1893U, .val = (unsigned char)24U}, {.reg = (unsigned short)1902U, .val = (unsigned char)4U}, {.reg = (unsigned short)65535U, .val = (unsigned char)255U}};
#line 66  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_8723b.c"
static struct rtl8xxxu_reg32val rtl8723b_phy_1t_init_table[194U] = {{.reg = (unsigned short)2048U, .val = 2147745792U}, {.reg = (unsigned short)2052U, .val = 3U}, {.reg = (unsigned short)2056U, .val = 64512U}, {.reg = (unsigned short)2060U, .val = 10U}, {.reg = (unsigned short)2064U, .val = 268440369U}, {.reg = (unsigned short)2068U, .val = 34356496U}, {.reg = (unsigned short)2072U, .val = 35652485U}, {.reg = (unsigned short)2076U}, {.reg = (unsigned short)2080U, .val = 16777472U}, {.reg = (unsigned short)2084U, .val = 1638916U}, {.reg = (unsigned short)2088U}, {.reg = (unsigned short)2092U}, {.reg = (unsigned short)2096U}, {.reg = (unsigned short)2100U}, {.reg = (unsigned short)2104U}, {.reg = (unsigned short)2108U}, {.reg = (unsigned short)2112U, .val = 65536U}, {.reg = (unsigned short)2116U}, {.reg = (unsigned short)2120U}, {.reg = (unsigned short)2124U}, {.reg = (unsigned short)2128U}, {.reg = (unsigned short)2132U}, {.reg = (unsigned short)2136U, .val = 1452937641U}, {.reg = (unsigned short)2140U, .val = 16777236U}, {.reg = (unsigned short)2144U, .val = 1727398160U}, {.reg = (unsigned short)2148U, .val = 102696521U}, {.reg = (unsigned short)2152U}, {.reg = (unsigned short)2156U, .val = 656877312U}, {.reg = (unsigned short)2160U, .val = 117442400U}, {.reg = (unsigned short)2164U, .val = 620773376U}, {.reg = (unsigned short)2168U, .val = 2056U}, {.reg = (unsigned short)2172U}, {.reg = (unsigned short)2176U, .val = 2952793116U}, {.reg = (unsigned short)2180U, .val = 1U}, {.reg = (unsigned short)2184U}, {.reg = (unsigned short)2188U, .val = 3435135168U}, {.reg = (unsigned short)2192U, .val = 2048U}, {.reg = (unsigned short)2196U, .val = 4294967294U}, {.reg = (unsigned short)2200U, .val = 1076895760U}, {.reg = (unsigned short)2204U, .val = 7364688U}, {.reg = (unsigned short)2304U}, {.reg = (unsigned short)2308U, .val = 35U}, {.reg = (unsigned short)2312U}, {.reg = (unsigned short)2316U, .val = 2165444881U}, {.reg = (unsigned short)2320U, .val = 2U}, {.reg = (unsigned short)2324U, .val = 513U}, {.reg = (unsigned short)2560U, .val = 13649864U}, {.reg = (unsigned short)2564U, .val = 2164228108U}, {.reg = (unsigned short)2568U, .val = 2357428992U}, {.reg = (unsigned short)2572U, .val = 780079631U}, {.reg = (unsigned short)2576U, .val = 2499853176U}, {.reg = (unsigned short)2580U, .val = 286576680U}, {.reg = (unsigned short)2584U, .val = 8917271U}, {.reg = (unsigned short)2588U, .val = 2299793152U}, {.reg = (unsigned short)2592U, .val = 437977088U}, {.reg = (unsigned short)2596U, .val = 151917335U}, {.reg = (unsigned short)2600U, .val = 516U}, {.reg = (unsigned short)2604U, .val = 13828096U}, {.reg = (unsigned short)2672U, .val = 270515968U}, {.reg = (unsigned short)2676U, .val = 7U}, {.reg = (unsigned short)2680U, .val = 2304U}, {.reg = (unsigned short)2684U, .val = 576390662U}, {.reg = (unsigned short)2688U, .val = 562062480U}, {.reg = (unsigned short)2860U}, {.reg = (unsigned short)3072U, .val = 1208425792U}, {.reg = (unsigned short)3076U, .val = 60839441U}, {.reg = (unsigned short)3080U, .val = 228U}, {.reg = (unsigned short)3084U, .val = 1819044972U}, {.reg = (unsigned short)3088U, .val = 142606336U}, {.reg = (unsigned short)3092U, .val = 1073742080U}, {.reg = (unsigned short)3096U, .val = 142606336U}, {.reg = (unsigned short)3100U, .val = 1073742080U}, {.reg = (unsigned short)3104U}, {.reg = (unsigned short)3108U}, {.reg = (unsigned short)3112U}, {.reg = (unsigned short)3116U}, {.reg = (unsigned short)3120U, .val = 1776921668U}, {.reg = (unsigned short)3124U, .val = 1184256687U}, {.reg = (unsigned short)3128U, .val = 1232689556U}, {.reg = (unsigned short)3132U, .val = 177706780U}, {.reg = (unsigned short)3136U, .val = 528236607U}, {.reg = (unsigned short)3140U, .val = 65719U}, {.reg = (unsigned short)3144U, .val = 3959554311U}, {.reg = (unsigned short)3148U, .val = 8323967U}, {.reg = (unsigned short)3152U, .val = 1767191584U}, {.reg = (unsigned short)3156U, .val = 1136394388U}, {.reg = (unsigned short)3160U, .val = 78153U}, {.reg = (unsigned short)3164U, .val = 2426002U}, {.reg = (unsigned short)3168U}, {.reg = (unsigned short)3172U, .val = 1897038987U}, {.reg = (unsigned short)3176U, .val = 1203768319U}, {.reg = (unsigned short)3180U, .val = 54U}, {.reg = (unsigned short)3184U, .val = 746520589U}, {.reg = (unsigned short)3188U, .val = 33951963U}, {.reg = (unsigned short)3192U, .val = 31U}, {.reg = (unsigned short)3196U, .val = 12129810U}, {.reg = (unsigned short)3200U, .val = 956301540U}, {.reg = (unsigned short)3204U, .val = 552992768U}, {.reg = (unsigned short)3208U, .val = 1073742080U}, {.reg = (unsigned short)3212U, .val = 538968064U}, {.reg = (unsigned short)3216U, .val = 134682U}, {.reg = (unsigned short)3220U}, {.reg = (unsigned short)3224U, .val = 134682U}, {.reg = (unsigned short)3228U, .val = 32639U}, {.reg = (unsigned short)3232U}, {.reg = (unsigned short)3236U, .val = 196768U}, {.reg = (unsigned short)3240U}, {.reg = (unsigned short)3244U}, {.reg = (unsigned short)3248U}, {.reg = (unsigned short)3252U}, {.reg = (unsigned short)3256U}, {.reg = (unsigned short)3260U, .val = 671088640U}, {.reg = (unsigned short)3264U}, {.reg = (unsigned short)3268U}, {.reg = (unsigned short)3272U}, {.reg = (unsigned short)3276U}, {.reg = (unsigned short)3280U}, {.reg = (unsigned short)3284U}, {.reg = (unsigned short)3288U, .val = 1689396263U}, {.reg = (unsigned short)3292U, .val = 7760178U}, {.reg = (unsigned short)3296U, .val = 2236962U}, {.reg = (unsigned short)3300U}, {.reg = (unsigned short)3304U, .val = 929317634U}, {.reg = (unsigned short)3308U, .val = 798479372U}, {.reg = (unsigned short)3328U, .val = 1856U}, {.reg = (unsigned short)3332U, .val = 1073873921U}, {.reg = (unsigned short)3336U, .val = 36991U}, {.reg = (unsigned short)3340U, .val = 536936961U}, {.reg = (unsigned short)3344U, .val = 2690855731U}, {.reg = (unsigned short)3348U, .val = 859028563U}, {.reg = (unsigned short)3352U, .val = 2056215407U}, {.reg = (unsigned short)3372U, .val = 3432487285U}, {.reg = (unsigned short)3376U}, {.reg = (unsigned short)3380U, .val = 2153807872U}, {.reg = (unsigned short)3384U}, {.reg = (unsigned short)3388U, .val = 1209171U}, {.reg = (unsigned short)3392U}, {.reg = (unsigned short)3396U}, {.reg = (unsigned short)3400U}, {.reg = (unsigned short)3404U}, {.reg = (unsigned short)3408U, .val = 1681331210U}, {.reg = (unsigned short)3412U}, {.reg = (unsigned short)3416U, .val = 642U}, {.reg = (unsigned short)3420U, .val = 805511268U}, {.reg = (unsigned short)3424U, .val = 1179901544U}, {.reg = (unsigned short)3428U, .val = 72452668U}, {.reg = (unsigned short)3432U, .val = 8449U}, {.reg = (unsigned short)3436U, .val = 706747414U}, {.reg = (unsigned short)3440U, .val = 403846702U}, {.reg = (unsigned short)3444U, .val = 841753120U}, {.reg = (unsigned short)3448U, .val = 932900U}, {.reg = (unsigned short)3584U, .val = 757935405U}, {.reg = (unsigned short)3588U, .val = 757935405U}, {.reg = (unsigned short)3592U, .val = 59778861U}, {.reg = (unsigned short)3600U, .val = 757935405U}, {.reg = (unsigned short)3604U, .val = 757935405U}, {.reg = (unsigned short)3608U, .val = 757935405U}, {.reg = (unsigned short)3612U, .val = 757935405U}, {.reg = (unsigned short)3624U}, {.reg = (unsigned short)3632U, .val = 268491807U}, {.reg = (unsigned short)3636U, .val = 268471327U}, {.reg = (unsigned short)3640U, .val = 34865410U}, {.reg = (unsigned short)3644U, .val = 1746273474U}, {.reg = (unsigned short)3648U, .val = 16808960U}, {.reg = (unsigned short)3652U, .val = 16795648U}, {.reg = (unsigned short)3656U, .val = 4211081216U}, {.reg = (unsigned short)3660U, .val = 10449U}, {.reg = (unsigned short)3664U, .val = 268491807U}, {.reg = (unsigned short)3668U, .val = 268471327U}, {.reg = (unsigned short)3672U, .val = 34865410U}, {.reg = (unsigned short)3676U, .val = 672533765U}, {.reg = (unsigned short)3680U, .val = 8U}, {.reg = (unsigned short)3688U, .val = 1779030U}, {.reg = (unsigned short)3692U, .val = 12583062U}, {.reg = (unsigned short)3696U, .val = 12583062U}, {.reg = (unsigned short)3700U, .val = 16777302U}, {.reg = (unsigned short)3704U, .val = 16777236U}, {.reg = (unsigned short)3708U, .val = 16777302U}, {.reg = (unsigned short)3712U, .val = 16777236U}, {.reg = (unsigned short)3716U, .val = 12583062U}, {.reg = (unsigned short)3720U, .val = 16777302U}, {.reg = (unsigned short)3724U, .val = 12583062U}, {.reg = (unsigned short)3792U, .val = 12583062U}, {.reg = (unsigned short)3796U, .val = 12583062U}, {.reg = (unsigned short)3800U, .val = 12583062U}, {.reg = (unsigned short)3804U, .val = 214U}, {.reg = (unsigned short)3808U, .val = 214U}, {.reg = (unsigned short)3820U, .val = 29360150U}, {.reg = (unsigned short)3860U, .val = 3U}, {.reg = (unsigned short)3916U}, {.reg = (unsigned short)3840U, .val = 768U}, {.reg = (unsigned short)2080U, .val = 16777472U}, {.reg = (unsigned short)2048U, .val = 2198077440U}, {.reg = (unsigned short)65535U, .val = 4294967295U}};
#line 167  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_8723b.c"
static struct rtl8xxxu_reg32val rtl8xxx_agc_8723bu_table[132U] = {{.reg = (unsigned short)3192U, .val = 4244635649U}, {.reg = (unsigned short)3192U, .val = 4227923969U}, {.reg = (unsigned short)3192U, .val = 4211212289U}, {.reg = (unsigned short)3192U, .val = 4194500609U}, {.reg = (unsigned short)3192U, .val = 4177788929U}, {.reg = (unsigned short)3192U, .val = 4161077249U}, {.reg = (unsigned short)3192U, .val = 4144365569U}, {.reg = (unsigned short)3192U, .val = 4127653889U}, {.reg = (unsigned short)3192U, .val = 4110942209U}, {.reg = (unsigned short)3192U, .val = 4094230529U}, {.reg = (unsigned short)3192U, .val = 4077518849U}, {.reg = (unsigned short)3192U, .val = 4060807169U}, {.reg = (unsigned short)3192U, .val = 4044095489U}, {.reg = (unsigned short)3192U, .val = 4027383809U}, {.reg = (unsigned short)3192U, .val = 4010672129U}, {.reg = (unsigned short)3192U, .val = 3993960449U}, {.reg = (unsigned short)3192U, .val = 3977248769U}, {.reg = (unsigned short)3192U, .val = 3960537089U}, {.reg = (unsigned short)3192U, .val = 3943825409U}, {.reg = (unsigned short)3192U, .val = 3927113729U}, {.reg = (unsigned short)3192U, .val = 3910402049U}, {.reg = (unsigned short)3192U, .val = 3893690369U}, {.reg = (unsigned short)3192U, .val = 3876978689U}, {.reg = (unsigned short)3192U, .val = 3860267009U}, {.reg = (unsigned short)3192U, .val = 3843555329U}, {.reg = (unsigned short)3192U, .val = 3826843649U}, {.reg = (unsigned short)3192U, .val = 3810131969U}, {.reg = (unsigned short)3192U, .val = 2770010113U}, {.reg = (unsigned short)3192U, .val = 2753298433U}, {.reg = (unsigned short)3192U, .val = 2736586753U}, {.reg = (unsigned short)3192U, .val = 1730019329U}, {.reg = (unsigned short)3192U, .val = 1713307649U}, {.reg = (unsigned short)3192U, .val = 1696595969U}, {.reg = (unsigned short)3192U, .val = 1679884289U}, {.reg = (unsigned short)3192U, .val = 1663172609U}, {.reg = (unsigned short)3192U, .val = 1243807745U}, {.reg = (unsigned short)3192U, .val = 1227096065U}, {.reg = (unsigned short)3192U, .val = 1210384385U}, {.reg = (unsigned short)3192U, .val = 1193672705U}, {.reg = (unsigned short)3192U, .val = 1176961025U}, {.reg = (unsigned short)3192U, .val = 1160249345U}, {.reg = (unsigned short)3192U, .val = 1143537665U}, {.reg = (unsigned short)3192U, .val = 1126825985U}, {.reg = (unsigned short)3192U, .val = 1110114305U}, {.reg = (unsigned short)3192U, .val = 690749441U}, {.reg = (unsigned short)3192U, .val = 674037761U}, {.reg = (unsigned short)3192U, .val = 657326081U}, {.reg = (unsigned short)3192U, .val = 640614401U}, {.reg = (unsigned short)3192U, .val = 170917889U}, {.reg = (unsigned short)3192U, .val = 154206209U}, {.reg = (unsigned short)3192U, .val = 137494529U}, {.reg = (unsigned short)3192U, .val = 120782849U}, {.reg = (unsigned short)3192U, .val = 104071169U}, {.reg = (unsigned short)3192U, .val = 87359489U}, {.reg = (unsigned short)3192U, .val = 70647809U}, {.reg = (unsigned short)3192U, .val = 53936129U}, {.reg = (unsigned short)3192U, .val = 37224449U}, {.reg = (unsigned short)3192U, .val = 20512769U}, {.reg = (unsigned short)3192U, .val = 20578305U}, {.reg = (unsigned short)3192U, .val = 20643841U}, {.reg = (unsigned short)3192U, .val = 20709377U}, {.reg = (unsigned short)3192U, .val = 20774913U}, {.reg = (unsigned short)3192U, .val = 20840449U}, {.reg = (unsigned short)3192U, .val = 20905985U}, {.reg = (unsigned short)3192U, .val = 4232052737U}, {.reg = (unsigned short)3192U, .val = 4215341057U}, {.reg = (unsigned short)3192U, .val = 4198629377U}, {.reg = (unsigned short)3192U, .val = 4181917697U}, {.reg = (unsigned short)3192U, .val = 4165206017U}, {.reg = (unsigned short)3192U, .val = 4148494337U}, {.reg = (unsigned short)3192U, .val = 4131782657U}, {.reg = (unsigned short)3192U, .val = 4115070977U}, {.reg = (unsigned short)3192U, .val = 4098359297U}, {.reg = (unsigned short)3192U, .val = 4081647617U}, {.reg = (unsigned short)3192U, .val = 4064935937U}, {.reg = (unsigned short)3192U, .val = 4048224257U}, {.reg = (unsigned short)3192U, .val = 4031512577U}, {.reg = (unsigned short)3192U, .val = 4014800897U}, {.reg = (unsigned short)3192U, .val = 3998089217U}, {.reg = (unsigned short)3192U, .val = 3981377537U}, {.reg = (unsigned short)3192U, .val = 3964665857U}, {.reg = (unsigned short)3192U, .val = 3947954177U}, {.reg = (unsigned short)3192U, .val = 3931242497U}, {.reg = (unsigned short)3192U, .val = 3914530817U}, {.reg = (unsigned short)3192U, .val = 3897819137U}, {.reg = (unsigned short)3192U, .val = 3881107457U}, {.reg = (unsigned short)3192U, .val = 3864395777U}, {.reg = (unsigned short)3192U, .val = 3847684097U}, {.reg = (unsigned short)3192U, .val = 3830972417U}, {.reg = (unsigned short)3192U, .val = 3814260737U}, {.reg = (unsigned short)3192U, .val = 2790916097U}, {.reg = (unsigned short)3192U, .val = 2774204417U}, {.reg = (unsigned short)3192U, .val = 2757492737U}, {.reg = (unsigned short)3192U, .val = 2740781057U}, {.reg = (unsigned short)3192U, .val = 1734213633U}, {.reg = (unsigned short)3192U, .val = 1717501953U}, {.reg = (unsigned short)3192U, .val = 1700790273U}, {.reg = (unsigned short)3192U, .val = 1684078593U}, {.reg = (unsigned short)3192U, .val = 1667366913U}, {.reg = (unsigned short)3192U, .val = 1650655233U}, {.reg = (unsigned short)3192U, .val = 1633943553U}, {.reg = (unsigned short)3192U, .val = 1214578689U}, {.reg = (unsigned short)3192U, .val = 1197867009U}, {.reg = (unsigned short)3192U, .val = 1181155329U}, {.reg = (unsigned short)3192U, .val = 1164443649U}, {.reg = (unsigned short)3192U, .val = 1147731969U}, {.reg = (unsigned short)3192U, .val = 1131020289U}, {.reg = (unsigned short)3192U, .val = 1114308609U}, {.reg = (unsigned short)3192U, .val = 678166529U}, {.reg = (unsigned short)3192U, .val = 661454849U}, {.reg = (unsigned short)3192U, .val = 644743169U}, {.reg = (unsigned short)3192U, .val = 628031489U}, {.reg = (unsigned short)3192U, .val = 611319809U}, {.reg = (unsigned short)3192U, .val = 158400513U}, {.reg = (unsigned short)3192U, .val = 141688833U}, {.reg = (unsigned short)3192U, .val = 124977153U}, {.reg = (unsigned short)3192U, .val = 108265473U}, {.reg = (unsigned short)3192U, .val = 91553793U}, {.reg = (unsigned short)3192U, .val = 74842113U}, {.reg = (unsigned short)3192U, .val = 58130433U}, {.reg = (unsigned short)3192U, .val = 41418753U}, {.reg = (unsigned short)3192U, .val = 24707073U}, {.reg = (unsigned short)3192U, .val = 24772609U}, {.reg = (unsigned short)3192U, .val = 24838145U}, {.reg = (unsigned short)3192U, .val = 24903681U}, {.reg = (unsigned short)3192U, .val = 24969217U}, {.reg = (unsigned short)3192U, .val = 25034753U}, {.reg = (unsigned short)3192U, .val = 25100289U}, {.reg = (unsigned short)3152U, .val = 1767191586U}, {.reg = (unsigned short)3152U, .val = 1767191584U}, {.reg = (unsigned short)2084U, .val = 3736068U}, {.reg = (unsigned short)65535U, .val = 4294967295U}};
#line 238  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_8723b.c"
static struct rtl8xxxu_rfregval rtl8723bu_radioa_1t_init_table[109U] = {{.val = 65536U}, {.reg = (unsigned char)176U, .val = 917472U}, {.reg = (unsigned char)254U}, {.reg = (unsigned char)254U}, {.reg = (unsigned char)254U}, {.reg = (unsigned char)177U, .val = 24U}, {.reg = (unsigned char)254U}, {.reg = (unsigned char)254U}, {.reg = (unsigned char)254U}, {.reg = (unsigned char)178U, .val = 543744U}, {.reg = (unsigned char)181U, .val = 53964U}, {.reg = (unsigned char)182U, .val = 599466U}, {.reg = (unsigned char)183U, .val = 16U}, {.reg = (unsigned char)184U, .val = 36991U}, {.reg = (unsigned char)92U, .val = 2U}, {.reg = (unsigned char)124U, .val = 2U}, {.reg = (unsigned char)126U, .val = 5U}, {.reg = (unsigned char)139U, .val = 457728U}, {.reg = (unsigned char)176U, .val = 1047024U}, {.reg = (unsigned char)28U, .val = 473554U}, {.reg = (unsigned char)30U}, {.reg = (unsigned char)223U, .val = 1920U}, {.reg = (unsigned char)80U, .val = 422965U}, {.reg = (unsigned char)81U, .val = 438350U}, {.reg = (unsigned char)82U, .val = 2002U}, {.reg = (unsigned char)83U}, {.reg = (unsigned char)84U, .val = 328704U}, {.reg = (unsigned char)85U, .val = 262766U}, {.reg = (unsigned char)221U, .val = 76U}, {.reg = (unsigned char)112U, .val = 422965U}, {.reg = (unsigned char)113U, .val = 438350U}, {.reg = (unsigned char)114U, .val = 2002U}, {.reg = (unsigned char)115U}, {.reg = (unsigned char)116U, .val = 328704U}, {.reg = (unsigned char)117U, .val = 262766U}, {.reg = (unsigned char)239U, .val = 256U}, {.reg = (unsigned char)52U, .val = 44503U}, {.reg = (unsigned char)53U, .val = 23552U}, {.reg = (unsigned char)52U, .val = 40404U}, {.reg = (unsigned char)53U, .val = 20480U}, {.reg = (unsigned char)52U, .val = 36305U}, {.reg = (unsigned char)53U, .val = 17408U}, {.reg = (unsigned char)52U, .val = 32206U}, {.reg = (unsigned char)53U, .val = 14336U}, {.reg = (unsigned char)52U, .val = 27857U}, {.reg = (unsigned char)53U, .val = 17408U}, {.reg = (unsigned char)52U, .val = 23758U}, {.reg = (unsigned char)53U, .val = 14336U}, {.reg = (unsigned char)52U, .val = 18638U}, {.reg = (unsigned char)53U, .val = 17408U}, {.reg = (unsigned char)52U, .val = 13518U}, {.reg = (unsigned char)53U, .val = 14336U}, {.reg = (unsigned char)52U, .val = 9297U}, {.reg = (unsigned char)53U, .val = 17408U}, {.reg = (unsigned char)52U, .val = 5198U}, {.reg = (unsigned char)53U, .val = 14336U}, {.reg = (unsigned char)52U, .val = 81U}, {.reg = (unsigned char)53U, .val = 17408U}, {.reg = (unsigned char)239U}, {.reg = (unsigned char)239U, .val = 256U}, {.reg = (unsigned char)237U, .val = 16U}, {.reg = (unsigned char)68U, .val = 44503U}, {.reg = (unsigned char)68U, .val = 40404U}, {.reg = (unsigned char)68U, .val = 36305U}, {.reg = (unsigned char)68U, .val = 32206U}, {.reg = (unsigned char)68U, .val = 27841U}, {.reg = (unsigned char)68U, .val = 23758U}, {.reg = (unsigned char)68U, .val = 17617U}, {.reg = (unsigned char)68U, .val = 13518U}, {.reg = (unsigned char)68U, .val = 9297U}, {.reg = (unsigned char)68U, .val = 5198U}, {.reg = (unsigned char)68U, .val = 81U}, {.reg = (unsigned char)239U}, {.reg = (unsigned char)237U}, {.reg = (unsigned char)127U, .val = 131200U}, {.reg = (unsigned char)239U, .val = 8192U}, {.reg = (unsigned char)59U, .val = 229615U}, {.reg = (unsigned char)59U, .val = 197374U}, {.reg = (unsigned char)59U, .val = 167142U}, {.reg = (unsigned char)59U, .val = 131260U}, {.reg = (unsigned char)59U, .val = 100517U}, {.reg = (unsigned char)59U, .val = 69564U}, {.reg = (unsigned char)59U, .val = 36721U}, {.reg = (unsigned char)59U, .val = 2304U}, {.reg = (unsigned char)239U}, {.reg = (unsigned char)237U, .val = 1U}, {.reg = (unsigned char)64U, .val = 229615U}, {.reg = (unsigned char)64U, .val = 197374U}, {.reg = (unsigned char)64U, .val = 167142U}, {.reg = (unsigned char)64U, .val = 131260U}, {.reg = (unsigned char)64U, .val = 100517U}, {.reg = (unsigned char)64U, .val = 69564U}, {.reg = (unsigned char)64U, .val = 36721U}, {.reg = (unsigned char)64U, .val = 2304U}, {.reg = (unsigned char)237U}, {.reg = (unsigned char)130U, .val = 524288U}, {.reg = (unsigned char)131U, .val = 32768U}, {.reg = (unsigned char)132U, .val = 298368U}, {.reg = (unsigned char)133U, .val = 425984U}, {.reg = (unsigned char)162U, .val = 524288U}, {.reg = (unsigned char)163U, .val = 32768U}, {.reg = (unsigned char)164U, .val = 298368U}, {.reg = (unsigned char)165U, .val = 425984U}, {.reg = (unsigned char)237U, .val = 2U}, {.reg = (unsigned char)239U, .val = 2U}, {.reg = (unsigned char)86U, .val = 50U}, {.reg = (unsigned char)118U, .val = 50U}, {.reg = (unsigned char)1U, .val = 1920U}, {.reg = (unsigned char)255U, .val = 4294967295U}};
#line 307  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_8723b.c"
static void rtl8723bu_write_btreg(struct rtl8xxxu_priv *priv, u8 reg, u8 data)
{
  #line 309 
  struct h2c_cmd h2c;
  #line 310 
  int reqnum = 0;
  #line 312 
  memset((void *)(& h2c),0,8UL);
  #line 313 
  h2c.__anonCompField_h2c_cmd_197.bt_mp_oper.cmd = (unsigned char)103U;
  #line 314 
  h2c.__anonCompField_h2c_cmd_197.bt_mp_oper.operreq = (unsigned char)((int)((unsigned char)reqnum) << 4U);
  #line 315 
  h2c.__anonCompField_h2c_cmd_197.bt_mp_oper.opcode = (unsigned char)13U;
  #line 316 
  h2c.__anonCompField_h2c_cmd_197.bt_mp_oper.data = data;
  #line 317 
  rtl8xxxu_gen2_h2c_cmd(priv,& h2c,5);
  #line 319 
  reqnum ++;
  #line 320 
  memset((void *)(& h2c),0,8UL);
  #line 321 
  h2c.__anonCompField_h2c_cmd_197.bt_mp_oper.cmd = (unsigned char)103U;
  #line 322 
  h2c.__anonCompField_h2c_cmd_197.bt_mp_oper.operreq = (unsigned char)((int)((unsigned char)reqnum) << 4U);
  #line 323 
  h2c.__anonCompField_h2c_cmd_197.bt_mp_oper.opcode = (unsigned char)13U;
  #line 324 
  h2c.__anonCompField_h2c_cmd_197.bt_mp_oper.addr = reg;
  #line 325 
  rtl8xxxu_gen2_h2c_cmd(priv,& h2c,5);
  #line 326 
  return;
}

#line 328  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_8723b.c"
static void rtl8723bu_reset_8051(struct rtl8xxxu_priv *priv)
{
  #line 330 
  u8 val8;
  #line 331 
  u16 sys_func;
  #line 333 
  val8 = rtl8xxxu_read8(priv,(unsigned short)28);
  #line 334 
  val8 = (unsigned char)((unsigned int)val8 & 253U);
  #line 335 
  rtl8xxxu_write8(priv,(unsigned short)28,(unsigned char)((int)val8));
  #line 337 
  val8 = rtl8xxxu_read8(priv,(unsigned short)29);
  #line 338 
  val8 = (unsigned char)((unsigned int)val8 & 254U);
  #line 339 
  rtl8xxxu_write8(priv,(unsigned short)29,(unsigned char)((int)val8));
  #line 341 
  sys_func = rtl8xxxu_read16(priv,(unsigned short)2);
  #line 342 
  sys_func = (unsigned short)((unsigned int)sys_func & 64511U);
  #line 343 
  rtl8xxxu_write16(priv,(unsigned short)2,(unsigned short)((int)sys_func));
  #line 345 
  val8 = rtl8xxxu_read8(priv,(unsigned short)28);
  #line 346 
  val8 = (unsigned char)((unsigned int)val8 & 253U);
  #line 347 
  rtl8xxxu_write8(priv,(unsigned short)28,(unsigned char)((int)val8));
  #line 349 
  val8 = rtl8xxxu_read8(priv,(unsigned short)29);
  #line 350 
  val8 = (unsigned char)((unsigned int)val8 | 1U);
  #line 351 
  rtl8xxxu_write8(priv,(unsigned short)29,(unsigned char)((int)val8));
  #line 353 
  sys_func = (unsigned short)((unsigned int)sys_func | 1024U);
  #line 354 
  rtl8xxxu_write16(priv,(unsigned short)2,(unsigned short)((int)sys_func));
  #line 355 
  return;
}

#line 358  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_8723b.c"
static void rtl8723b_set_tx_power(struct rtl8xxxu_priv *priv, int channel, bool ht40)
{
  #line 360 
  u32 val32;
  #line 360 
  u32 ofdm;
  #line 360 
  u32 mcs;
  #line 361 
  u8 cck;
  #line 361 
  u8 ofdmbase;
  #line 361 
  u8 mcsbase;
  #line 362 
  int group;
  #line 362 
  int tx_idx;
  #line 364 
  tx_idx = 0;
  #line 365 
  group = rtl8xxxu_gen2_channel_to_group(channel);
  #line 367 
  cck = priv->cck_tx_power_index_B[group];
  #line 368 
  val32 = rtl8xxxu_read32(priv,(unsigned short)3592);
  #line 369 
  val32 &= 4294902015U;
  #line 370 
  val32 = (unsigned int)((int)cck << 8) | val32;
  #line 371 
  rtl8xxxu_write32(priv,(unsigned short)3592,val32);
  #line 373 
  val32 = rtl8xxxu_read32(priv,(unsigned short)2156);
  #line 374 
  val32 &= 255U;
  #line 375 
  val32 = (unsigned int)((((int)cck << 8) | ((int)cck << 16)) | ((int)cck << 24)) | val32;
  #line 376 
  rtl8xxxu_write32(priv,(unsigned short)2156,val32);
  #line 378 
  ofdmbase = priv->ht40_1s_tx_power_index_B[group];
  #line 379 
  ofdmbase = (unsigned char)((int)((unsigned char)priv->ofdm_tx_power_diff[tx_idx].b) + (int)ofdmbase);
  #line 380 
  ofdm = (unsigned int)((((int)ofdmbase | ((int)ofdmbase << 8)) | ((int)ofdmbase << 16)) | ((int)ofdmbase << 24));
  #line 382 
  rtl8xxxu_write32(priv,(unsigned short)3584,ofdm);
  #line 383 
  rtl8xxxu_write32(priv,(unsigned short)3588,ofdm);
  #line 385 
  mcsbase = priv->ht40_1s_tx_power_index_B[group];
  #line 386 
  if ((int)ht40 != 0) {
    #line 387 
    int tmp;
    #line 387 
    tmp = tx_idx;
    #line 387 
    tx_idx ++;
    #line 387 
    mcsbase = (unsigned char)((int)((unsigned char)priv->ht40_tx_power_diff[tmp].b) + (int)mcsbase);
  }
  else {
    #line 389 
    int tmp_0;
    #line 389 
    tmp_0 = tx_idx;
    #line 389 
    tx_idx ++;
    #line 389 
    mcsbase = (unsigned char)((int)((unsigned char)priv->ht20_tx_power_diff[tmp_0].b) + (int)mcsbase);
  }
  #line 390 
  mcs = (unsigned int)((((int)mcsbase | ((int)mcsbase << 8)) | ((int)mcsbase << 16)) | ((int)mcsbase << 24));
  #line 392 
  rtl8xxxu_write32(priv,(unsigned short)3600,mcs);
  #line 393 
  rtl8xxxu_write32(priv,(unsigned short)3604,mcs);
  #line 394 
  return;
}

#line 396  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_8723b.c"
static int rtl8723bu_parse_efuse(struct rtl8xxxu_priv *priv)
{
  #line 399 
  int i;
  #line 398 
  struct rtl8723bu_efuse *efuse = & priv->efuse_wifi.efuse8723bu;
  #line 401 
  if ((unsigned int)efuse->rtl_id != 33065U) 
                                             #line 402 
                                             return -22;
  #line 404 
  ether_addr_copy((u8 *)(& priv->mac_addr),(u8 *)(& efuse->mac_addr));
  #line 406 
  memcpy((void *)(& priv->cck_tx_power_index_A),(void *)(& efuse->tx_power_index_A.cck_base),6UL);
  #line 408 
  memcpy((void *)(& priv->cck_tx_power_index_B),(void *)(& efuse->tx_power_index_B.cck_base),6UL);
  #line 411 
  memcpy((void *)(& priv->ht40_1s_tx_power_index_A),(void *)(& efuse->tx_power_index_A.ht40_base),5UL);
  #line 414 
  memcpy((void *)(& priv->ht40_1s_tx_power_index_B),(void *)(& efuse->tx_power_index_B.ht40_base),5UL);
  #line 418 
  priv->ofdm_tx_power_diff[0].a = efuse->tx_power_index_A.ht20_ofdm_1s_diff.a;
  #line 420 
  priv->ofdm_tx_power_diff[0].b = efuse->tx_power_index_B.ht20_ofdm_1s_diff.a;
  #line 423 
  priv->ht20_tx_power_diff[0].a = efuse->tx_power_index_A.ht20_ofdm_1s_diff.b;
  #line 425 
  priv->ht20_tx_power_diff[0].b = efuse->tx_power_index_B.ht20_ofdm_1s_diff.b;
  #line 428 
  priv->ht40_tx_power_diff[0].a = (int)0;
  #line 429 
  priv->ht40_tx_power_diff[0].b = (int)0;
  #line 431 
  i = 1;
  #line 431 
  while (i <= 3) {
    #line 432 
    priv->ofdm_tx_power_diff[i].a = efuse->tx_power_index_A.pwr_diff[i + -1].ofdm;
    #line 434 
    priv->ofdm_tx_power_diff[i].b = efuse->tx_power_index_B.pwr_diff[i + -1].ofdm;
    #line 437 
    priv->ht20_tx_power_diff[i].a = efuse->tx_power_index_A.pwr_diff[i + -1].ht20;
    #line 439 
    priv->ht20_tx_power_diff[i].b = efuse->tx_power_index_B.pwr_diff[i + -1].ht20;
    #line 442 
    priv->ht40_tx_power_diff[i].a = efuse->tx_power_index_A.pwr_diff[i + -1].ht40;
    #line 444 
    priv->ht40_tx_power_diff[i].b = efuse->tx_power_index_B.pwr_diff[i + -1].ht40;
    #line 431 
    i ++;
  }
  #line 448 
  priv->has_xtalk = (unsigned int)1U;
  #line 449 
  priv->xtalk = (unsigned char)((unsigned int)priv->efuse_wifi.efuse8723bu.xtal_k & 63U);
  #line 451 
  _dev_info(& (priv->udev)->dev,(char *)"Vendor: %.7s\n",(u8 *)(& efuse->vendor_name));
  #line 452 
  _dev_info(& (priv->udev)->dev,(char *)"Product: %.41s\n",(u8 *)(& efuse->device_name));
  #line 454 
  if ((rtl8xxxu_debug & 8192) != 0) {
    #line 455 
    int i_0;
    #line 456 
    unsigned char *raw = (unsigned char *)(& priv->efuse_wifi.raw);
    #line 458 
    _dev_info(& (priv->udev)->dev,(char *)"%s: dumping efuse (0x%02zx bytes):\n",(char *)"rtl8723bu_parse_efuse",512UL);
    #line 461 
    i_0 = 0;
    #line 461 
    while ((unsigned int)i_0 <= 511U) {
      #line 462 
      _dev_info(& (priv->udev)->dev,(char *)"%02x: %8ph\n",i_0,raw + (unsigned long)i_0);
      #line 461 
      i_0 += 8;
    }
  }
  #line 465 
  return 0;
}

#line 468  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_8723b.c"
static int rtl8723bu_load_firmware(struct rtl8xxxu_priv *priv)
{
  #line 470 
  char *fw_name;
  #line 471 
  int ret;
  #line 473 
  if ((unsigned int)priv->enable_bluetooth != 0U) 
                                                  #line 474 
                                                  fw_name = (char *)"rtlwifi/rtl8723bu_bt.bin"; else 
                                                                    #line 476 
                                                                    fw_name = (char *)"rtlwifi/rtl8723bu_nic.bin";
  #line 478 
  ret = rtl8xxxu_load_firmware(priv,fw_name);
  #line 479 
  return ret;
}

#line 482  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_8723b.c"
static void rtl8723bu_init_phy_bb(struct rtl8xxxu_priv *priv)
{
  #line 484 
  u8 val8;
  #line 485 
  u16 val16;
  #line 487 
  val16 = rtl8xxxu_read16(priv,(unsigned short)2);
  #line 488 
  val16 = (unsigned short)((unsigned int)val16 | 8195U);
  #line 489 
  rtl8xxxu_write16(priv,(unsigned short)2,(unsigned short)((int)val16));
  #line 491 
  rtl8xxxu_write32(priv,(unsigned short)2376,0U);
  #line 494 
  val8 = (unsigned char)7U;
  #line 495 
  rtl8xxxu_write8(priv,(unsigned short)31,(unsigned char)((int)val8));
  #line 498 
  rtl8xxxu_write8(priv,(unsigned short)2,(unsigned char)227);
  #line 499 
  rtl8xxxu_write8(priv,(unsigned short)37,(unsigned char)128);
  #line 500 
  rtl8xxxu_init_phy_regs(priv,(struct rtl8xxxu_reg32val *)(& rtl8723b_phy_1t_init_table));
  #line 502 
  rtl8xxxu_init_phy_regs(priv,(struct rtl8xxxu_reg32val *)(& rtl8xxx_agc_8723bu_table));
  #line 503 
  return;
}

#line 505  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_8723b.c"
static int rtl8723bu_init_phy_rf(struct rtl8xxxu_priv *priv)
{
  #line 507 
  int ret;
  #line 509 
  ret = rtl8xxxu_init_phy_rf(priv,(struct rtl8xxxu_rfregval *)(& rtl8723bu_radioa_1t_init_table),(enum rtl8xxxu_rfpath)RF_A);
  #line 513 
  rtl8xxxu_write_rfreg(priv,(enum rtl8xxxu_rfpath)RF_A,(unsigned char)176,916448U);
  #line 514 
  rtl8xxxu_write_rfreg(priv,(enum rtl8xxxu_rfpath)RF_A,(unsigned char)24,35841U);
  #line 515 
  msleep(200U);
  #line 516 
  rtl8xxxu_write_rfreg(priv,(enum rtl8xxxu_rfpath)RF_A,(unsigned char)176,917472U);
  #line 518 
  return ret;
}

#line 521  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_8723b.c"
static void rtl8723bu_phy_init_antenna_selection(struct rtl8xxxu_priv *priv)
{
  #line 523 
  u32 val32;
  #line 525 
  val32 = rtl8xxxu_read32(priv,(unsigned short)100);
  #line 526 
  val32 &= 4277141503U;
  #line 527 
  rtl8xxxu_write32(priv,(unsigned short)100,val32);
  #line 529 
  val32 = rtl8xxxu_read32(priv,(unsigned short)64);
  #line 530 
  val32 &= 4294967279U;
  #line 531 
  rtl8xxxu_write32(priv,(unsigned short)64,val32);
  #line 533 
  val32 = rtl8xxxu_read32(priv,(unsigned short)64);
  #line 534 
  val32 |= 8U;
  #line 535 
  rtl8xxxu_write32(priv,(unsigned short)64,val32);
  #line 537 
  val32 = rtl8xxxu_read32(priv,(unsigned short)76);
  #line 538 
  val32 |= 16777216U;
  #line 539 
  rtl8xxxu_write32(priv,(unsigned short)76,val32);
  #line 541 
  val32 = rtl8xxxu_read32(priv,(unsigned short)76);
  #line 542 
  val32 &= 4286578687U;
  #line 543 
  rtl8xxxu_write32(priv,(unsigned short)76,val32);
  #line 545 
  val32 = rtl8xxxu_read32(priv,(unsigned short)2372);
  #line 546 
  val32 |= 3U;
  #line 547 
  rtl8xxxu_write32(priv,(unsigned short)2372,val32);
  #line 549 
  val32 = rtl8xxxu_read32(priv,(unsigned short)2352);
  #line 550 
  val32 &= 4294967040U;
  #line 551 
  val32 |= 119U;
  #line 552 
  rtl8xxxu_write32(priv,(unsigned short)2352,val32);
  #line 554 
  val32 = rtl8xxxu_read32(priv,(unsigned short)56);
  #line 555 
  val32 |= 2048U;
  #line 556 
  rtl8xxxu_write32(priv,(unsigned short)56,val32);
  #line 557 
  return;
}

#line 559  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_8723b.c"
static int rtl8723bu_iqk_path_a(struct rtl8xxxu_priv *priv)
{
  #line 561 
  u32 reg_eac;
  #line 561 
  u32 reg_e94;
  #line 561 
  u32 reg_e9c;
  #line 561 
  u32 path_sel;
  #line 561 
  u32 val32;
  #line 562 
  int result = 0;
  #line 564 
  path_sel = rtl8xxxu_read32(priv,(unsigned short)2376);
  #line 569 
  val32 = rtl8xxxu_read32(priv,(unsigned short)3624);
  #line 570 
  val32 &= 255U;
  #line 571 
  rtl8xxxu_write32(priv,(unsigned short)3624,val32);
  #line 576 
  val32 = rtl8xxxu_read_rfreg(priv,(enum rtl8xxxu_rfpath)RF_A,(unsigned char)239);
  #line 577 
  val32 |= 524288U;
  #line 578 
  rtl8xxxu_write_rfreg(priv,(enum rtl8xxxu_rfpath)RF_A,(unsigned char)239,val32);
  #line 579 
  rtl8xxxu_write_rfreg(priv,(enum rtl8xxxu_rfpath)RF_A,(unsigned char)48,131072U);
  #line 580 
  rtl8xxxu_write_rfreg(priv,(enum rtl8xxxu_rfpath)RF_A,(unsigned char)49,63U);
  #line 581 
  rtl8xxxu_write_rfreg(priv,(enum rtl8xxxu_rfpath)RF_A,(unsigned char)50,819079U);
  #line 586 
  rtl8xxxu_write32(priv,(unsigned short)3648,16808960U);
  #line 587 
  rtl8xxxu_write32(priv,(unsigned short)3652,16795648U);
  #line 590 
  rtl8xxxu_write32(priv,(unsigned short)3632,402689052U);
  #line 591 
  rtl8xxxu_write32(priv,(unsigned short)3636,939559964U);
  #line 592 
  rtl8xxxu_write32(priv,(unsigned short)3664,939559964U);
  #line 593 
  rtl8xxxu_write32(priv,(unsigned short)3668,939559964U);
  #line 595 
  rtl8xxxu_write32(priv,(unsigned short)3640,2182349802U);
  #line 596 
  rtl8xxxu_write32(priv,(unsigned short)3644,672202752U);
  #line 597 
  rtl8xxxu_write32(priv,(unsigned short)3672,2182152192U);
  #line 598 
  rtl8xxxu_write32(priv,(unsigned short)3676,672202752U);
  #line 601 
  rtl8xxxu_write32(priv,(unsigned short)3660,4598033U);
  #line 606 
  val32 = rtl8xxxu_read32(priv,(unsigned short)3624);
  #line 607 
  val32 &= 255U;
  #line 608 
  val32 |= 2155872256U;
  #line 609 
  rtl8xxxu_write32(priv,(unsigned short)3624,val32);
  #line 615 
  if ((unsigned int)priv->rf_paths > 1U) 
                                         #line 616 
                                         rtl8xxxu_write32(priv,(unsigned short)2376,0U); else 
                                                                    #line 618 
                                                                    rtl8xxxu_write32(priv,(unsigned short)2376,640U);
  #line 624 
  rtl8xxxu_write32(priv,(unsigned short)1892,2048U);
  #line 627 
  rtl8xxxu_write32(priv,(unsigned short)3656,4177526784U);
  #line 628 
  rtl8xxxu_write32(priv,(unsigned short)3656,4160749568U);
  #line 630 
  __const_udelay(4295000UL);
  #line 633 
  rtl8xxxu_write32(priv,(unsigned short)2376,path_sel);
  #line 642 
  val32 = rtl8xxxu_read32(priv,(unsigned short)3624);
  #line 643 
  val32 &= 255U;
  #line 644 
  rtl8xxxu_write32(priv,(unsigned short)3624,val32);
  #line 647 
  reg_eac = rtl8xxxu_read32(priv,(unsigned short)3756);
  #line 648 
  reg_e94 = rtl8xxxu_read32(priv,(unsigned short)3732);
  #line 649 
  reg_e9c = rtl8xxxu_read32(priv,(unsigned short)3740);
  #line 651 
  val32 = (reg_e9c >> 16) & 1023U;
  #line 652 
  if ((val32 & 512U) != 0U) 
                            #line 653 
                            val32 = 1024U - val32;
  #line 655 
  if (((((((unsigned long)reg_eac & 268435456UL) == 0UL && (reg_e94 & 67043328U) != 21102592U) && (reg_e9c & 67043328U) != 4325376U) && (reg_e94 & 67043328U) <= 17825791U) && (reg_e94 & 67043328U) > 15728640U) && val32 <= 14U) 
    #line 661 
    result |= 1;
  #line 665 
  out: 
       #line 665 
  ;
  #line 666 
  return result;
}

#line 669  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_8723b.c"
static int rtl8723bu_rx_iqk_path_a(struct rtl8xxxu_priv *priv)
{
  #line 671 
  u32 reg_ea4;
  #line 671 
  u32 reg_eac;
  #line 671 
  u32 reg_e94;
  #line 671 
  u32 reg_e9c;
  #line 671 
  u32 path_sel;
  #line 671 
  u32 val32;
  #line 672 
  int result = 0;
  #line 674 
  path_sel = rtl8xxxu_read32(priv,(unsigned short)2376);
  #line 679 
  val32 = rtl8xxxu_read32(priv,(unsigned short)3624);
  #line 680 
  val32 &= 255U;
  #line 681 
  rtl8xxxu_write32(priv,(unsigned short)3624,val32);
  #line 686 
  val32 = rtl8xxxu_read_rfreg(priv,(enum rtl8xxxu_rfpath)RF_A,(unsigned char)239);
  #line 687 
  val32 |= 524288U;
  #line 688 
  rtl8xxxu_write_rfreg(priv,(enum rtl8xxxu_rfpath)RF_A,(unsigned char)239,val32);
  #line 689 
  rtl8xxxu_write_rfreg(priv,(enum rtl8xxxu_rfpath)RF_A,(unsigned char)48,196608U);
  #line 690 
  rtl8xxxu_write_rfreg(priv,(enum rtl8xxxu_rfpath)RF_A,(unsigned char)49,31U);
  #line 691 
  rtl8xxxu_write_rfreg(priv,(enum rtl8xxxu_rfpath)RF_A,(unsigned char)50,1015735U);
  #line 696 
  rtl8xxxu_write32(priv,(unsigned short)3648,16808960U);
  #line 697 
  rtl8xxxu_write32(priv,(unsigned short)3652,16795648U);
  #line 700 
  rtl8xxxu_write32(priv,(unsigned short)3632,402689052U);
  #line 701 
  rtl8xxxu_write32(priv,(unsigned short)3636,939559964U);
  #line 702 
  rtl8xxxu_write32(priv,(unsigned short)3664,939559964U);
  #line 703 
  rtl8xxxu_write32(priv,(unsigned short)3668,939559964U);
  #line 705 
  rtl8xxxu_write32(priv,(unsigned short)3640,2182483952U);
  #line 706 
  rtl8xxxu_write32(priv,(unsigned short)3644,672202752U);
  #line 707 
  rtl8xxxu_write32(priv,(unsigned short)3672,2182152192U);
  #line 708 
  rtl8xxxu_write32(priv,(unsigned short)3676,672202752U);
  #line 711 
  rtl8xxxu_write32(priv,(unsigned short)3660,4630801U);
  #line 716 
  val32 = rtl8xxxu_read32(priv,(unsigned short)3624);
  #line 717 
  val32 &= 255U;
  #line 718 
  val32 |= 2155872256U;
  #line 719 
  rtl8xxxu_write32(priv,(unsigned short)3624,val32);
  #line 725 
  if ((unsigned int)priv->rf_paths > 1U) 
                                         #line 726 
                                         rtl8xxxu_write32(priv,(unsigned short)2376,0U); else 
                                                                    #line 728 
                                                                    rtl8xxxu_write32(priv,(unsigned short)2376,640U);
  #line 734 
  rtl8xxxu_write32(priv,(unsigned short)1892,2048U);
  #line 737 
  rtl8xxxu_write32(priv,(unsigned short)3656,4177526784U);
  #line 738 
  rtl8xxxu_write32(priv,(unsigned short)3656,4160749568U);
  #line 740 
  __const_udelay(4295000UL);
  #line 743 
  rtl8xxxu_write32(priv,(unsigned short)2376,path_sel);
  #line 752 
  val32 = rtl8xxxu_read32(priv,(unsigned short)3624);
  #line 753 
  val32 &= 255U;
  #line 754 
  rtl8xxxu_write32(priv,(unsigned short)3624,val32);
  #line 757 
  reg_eac = rtl8xxxu_read32(priv,(unsigned short)3756);
  #line 758 
  reg_e94 = rtl8xxxu_read32(priv,(unsigned short)3732);
  #line 759 
  reg_e9c = rtl8xxxu_read32(priv,(unsigned short)3740);
  #line 761 
  val32 = (reg_e9c >> 16) & 1023U;
  #line 762 
  if ((val32 & 512U) != 0U) 
                            #line 763 
                            val32 = 1024U - val32;
  #line 765 
  if (((((((unsigned long)reg_eac & 268435456UL) == 0UL && (reg_e94 & 67043328U) != 21102592U) && (reg_e9c & 67043328U) != 4325376U) && (reg_e94 & 67043328U) <= 17825791U) && (reg_e94 & 67043328U) > 15728640U) && val32 <= 14U) 
    #line 771 
    result |= 1; else 
                      #line 773 
                      goto out;
  #line 775 
  val32 = ((reg_e94 & 67043328U) | ((reg_e9c >> 16) & 1023U)) | 2147515392U;
  #line 777 
  rtl8xxxu_write32(priv,(unsigned short)3648,val32);
  #line 782 
  val32 = rtl8xxxu_read32(priv,(unsigned short)3624);
  #line 783 
  val32 &= 255U;
  #line 784 
  rtl8xxxu_write32(priv,(unsigned short)3624,val32);
  #line 785 
  val32 = rtl8xxxu_read_rfreg(priv,(enum rtl8xxxu_rfpath)RF_A,(unsigned char)239);
  #line 786 
  val32 |= 524288U;
  #line 787 
  rtl8xxxu_write_rfreg(priv,(enum rtl8xxxu_rfpath)RF_A,(unsigned char)239,val32);
  #line 788 
  rtl8xxxu_write_rfreg(priv,(enum rtl8xxxu_rfpath)RF_A,(unsigned char)48,196608U);
  #line 789 
  rtl8xxxu_write_rfreg(priv,(enum rtl8xxxu_rfpath)RF_A,(unsigned char)49,31U);
  #line 790 
  rtl8xxxu_write_rfreg(priv,(enum rtl8xxxu_rfpath)RF_A,(unsigned char)50,1015159U);
  #line 795 
  rtl8xxxu_write_rfreg(priv,(enum rtl8xxxu_rfpath)RF_A,(unsigned char)223,3968U);
  #line 796 
  rtl8xxxu_write_rfreg(priv,(enum rtl8xxxu_rfpath)RF_A,(unsigned char)85,262687U);
  #line 801 
  rtl8xxxu_write32(priv,(unsigned short)3652,16795648U);
  #line 804 
  rtl8xxxu_write32(priv,(unsigned short)3632,939559964U);
  #line 805 
  rtl8xxxu_write32(priv,(unsigned short)3636,402689052U);
  #line 806 
  rtl8xxxu_write32(priv,(unsigned short)3664,939559964U);
  #line 807 
  rtl8xxxu_write32(priv,(unsigned short)3668,939559964U);
  #line 809 
  rtl8xxxu_write32(priv,(unsigned short)3640,2182152192U);
  #line 810 
  rtl8xxxu_write32(priv,(unsigned short)3644,672530463U);
  #line 811 
  rtl8xxxu_write32(priv,(unsigned short)3672,2182152192U);
  #line 812 
  rtl8xxxu_write32(priv,(unsigned short)3676,672202752U);
  #line 815 
  rtl8xxxu_write32(priv,(unsigned short)3660,4630737U);
  #line 820 
  val32 = rtl8xxxu_read32(priv,(unsigned short)3624);
  #line 821 
  val32 &= 255U;
  #line 822 
  val32 |= 2155872256U;
  #line 823 
  rtl8xxxu_write32(priv,(unsigned short)3624,val32);
  #line 825 
  if ((unsigned int)priv->rf_paths > 1U) 
                                         #line 826 
                                         rtl8xxxu_write32(priv,(unsigned short)2376,0U); else 
                                                                    #line 828 
                                                                    rtl8xxxu_write32(priv,(unsigned short)2376,640U);
  #line 833 
  rtl8xxxu_write32(priv,(unsigned short)1892,2048U);
  #line 836 
  rtl8xxxu_write32(priv,(unsigned short)3656,4177526784U);
  #line 837 
  rtl8xxxu_write32(priv,(unsigned short)3656,4160749568U);
  #line 839 
  __const_udelay(4295000UL);
  #line 842 
  rtl8xxxu_write32(priv,(unsigned short)2376,path_sel);
  #line 851 
  val32 = rtl8xxxu_read32(priv,(unsigned short)3624);
  #line 852 
  val32 &= 255U;
  #line 853 
  rtl8xxxu_write32(priv,(unsigned short)3624,val32);
  #line 856 
  reg_eac = rtl8xxxu_read32(priv,(unsigned short)3756);
  #line 857 
  reg_ea4 = rtl8xxxu_read32(priv,(unsigned short)3748);
  #line 859 
  rtl8xxxu_write_rfreg(priv,(enum rtl8xxxu_rfpath)RF_A,(unsigned char)223,1920U);
  #line 861 
  val32 = (reg_eac >> 16) & 1023U;
  #line 862 
  if ((val32 & 512U) != 0U) 
                            #line 863 
                            val32 = 1024U - val32;
  #line 865 
  if (((((((unsigned long)reg_eac & 134217728UL) == 0UL && (reg_ea4 & 67043328U) != 20054016U) && (reg_eac & 67043328U) != 3538944U) && (reg_ea4 & 67043328U) <= 17825791U) && (reg_ea4 & 67043328U) > 15728640U) && val32 <= 14U) 
    #line 871 
    result |= 2;
  #line 874 
  out: 
       #line 874 
  ;
  #line 875 
  return result;
}

#line 878  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_8723b.c"
static void rtl8723bu_phy_iqcalibrate(struct rtl8xxxu_priv *priv, int (*result)[8U], int t)
{
  #line 882 
  u32 i;
  #line 882 
  u32 val32;
  #line 883 
  int path_a_ok;
  #line 881 
  struct device *dev = & (priv->udev)->dev;
  #line 884 
  int retry = 2;
  #line 885 
  u32 adda_regs[16U] = {2140U, 3692U, 3696U, 3700U, 3704U, 3708U, 3712U, 3716U, 3720U, 3724U, 3792U, 3796U, 3800U, 3804U, 3808U, 3820U};
  #line 895 
  u32 iqk_mac_regs[4U] = {1314U, 1360U, 1361U, 64U};
  #line 899 
  u32 iqk_bb_regs[9U] = {3076U, 3080U, 2164U, 2920U, 2924U, 2160U, 2144U, 2148U, 2048U};
  #line 905 
  u8 xa_agc = (unsigned char)rtl8xxxu_read32(priv,(unsigned short)3152);
  #line 906 
  u8 xb_agc = (unsigned char)rtl8xxxu_read32(priv,(unsigned short)3160);
  #line 913 
  if (t == 0) {
    #line 915 
    rtl8xxxu_save_regs(priv,(u32 *)(& adda_regs),(u32 *)(& priv->adda_backup),16);
    #line 917 
    rtl8xxxu_save_mac_regs(priv,(u32 *)(& iqk_mac_regs),(u32 *)(& priv->mac_backup));
    #line 918 
    rtl8xxxu_save_regs(priv,(u32 *)(& iqk_bb_regs),(u32 *)(& priv->bb_backup),9);
  }
  #line 922 
  rtl8xxxu_path_adda_on(priv,(u32 *)(& adda_regs),(_Bool)1);
  #line 925 
  rtl8xxxu_mac_calibration(priv,(u32 *)(& iqk_mac_regs),(u32 *)(& priv->mac_backup));
  #line 927 
  val32 = rtl8xxxu_read32(priv,(unsigned short)2564);
  #line 928 
  val32 |= 251658240U;
  #line 929 
  rtl8xxxu_write32(priv,(unsigned short)2564,val32);
  #line 931 
  rtl8xxxu_write32(priv,(unsigned short)3076,60839424U);
  #line 932 
  rtl8xxxu_write32(priv,(unsigned short)3080,524516U);
  #line 933 
  rtl8xxxu_write32(priv,(unsigned short)2164,572538880U);
  #line 939 
  val32 = rtl8xxxu_read32(priv,(unsigned short)3624);
  #line 940 
  val32 &= 255U;
  #line 941 
  rtl8xxxu_write32(priv,(unsigned short)3624,val32);
  #line 943 
  val32 = rtl8xxxu_read_rfreg(priv,(enum rtl8xxxu_rfpath)RF_A,(unsigned char)239);
  #line 944 
  val32 |= 524288U;
  #line 945 
  rtl8xxxu_write_rfreg(priv,(enum rtl8xxxu_rfpath)RF_A,(unsigned char)239,val32);
  #line 947 
  rtl8xxxu_write_rfreg(priv,(enum rtl8xxxu_rfpath)RF_A,(unsigned char)48,196608U);
  #line 948 
  rtl8xxxu_write_rfreg(priv,(enum rtl8xxxu_rfpath)RF_A,(unsigned char)49,31U);
  #line 949 
  rtl8xxxu_write_rfreg(priv,(enum rtl8xxxu_rfpath)RF_A,(unsigned char)50,1015735U);
  #line 951 
  val32 = rtl8xxxu_read_rfreg(priv,(enum rtl8xxxu_rfpath)RF_A,(unsigned char)237);
  #line 952 
  val32 |= 32U;
  #line 953 
  rtl8xxxu_write_rfreg(priv,(enum rtl8xxxu_rfpath)RF_A,(unsigned char)237,val32);
  #line 955 
  rtl8xxxu_write_rfreg(priv,(enum rtl8xxxu_rfpath)RF_A,(unsigned char)67,397245U);
  #line 957 
  i = 0U;
  #line 957 
  while (i < (unsigned int)retry) {
    #line 958 
    path_a_ok = rtl8723bu_iqk_path_a(priv);
    #line 959 
    if (path_a_ok == 1) {
      #line 960 
      val32 = rtl8xxxu_read32(priv,(unsigned short)3624);
      #line 961 
      val32 &= 255U;
      #line 962 
      rtl8xxxu_write32(priv,(unsigned short)3624,val32);
      #line 964 
      val32 = rtl8xxxu_read32(priv,(unsigned short)3732);
      #line 966 
      (*(result + (unsigned long)t))[0] = (int)(val32 >> 16) & 1023;
      #line 967 
      val32 = rtl8xxxu_read32(priv,(unsigned short)3740);
      #line 969 
      (*(result + (unsigned long)t))[1] = (int)(val32 >> 16) & 1023;
      #line 971 
      break;
    }
    #line 957 
    i ++;
  }
  #line 975 
  if (path_a_ok == 0) {
    #line 976 
    bool branch;
    #line 976 
    struct _ddebug __UNIQUE_ID_ddebug560 = {.modname = (char *)"rtl8xxxu", .function = (char *)"rtl8723bu_phy_iqcalibrate", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_8723b.c", .format = (char *)"%s: Path A TX IQK failed!\n", .lineno = (unsigned int)976U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
    #line 976 
    branch = arch_static_branch(& __UNIQUE_ID_ddebug560.key.dd_key_false.key,(_Bool)0);
    #line 976 
    if ((long)((long)((int)branch != 0)) != 0L) 
                                                #line 976 
                                                __dynamic_dev_dbg(& __UNIQUE_ID_ddebug560,dev,(char *)"%s: Path A TX IQK failed!\n",(char *)"rtl8723bu_phy_iqcalibrate");
  }
  #line 978 
  i = 0U;
  #line 978 
  while (i < (unsigned int)retry) {
    #line 979 
    path_a_ok = rtl8723bu_rx_iqk_path_a(priv);
    #line 980 
    if (path_a_ok == 3) {
      #line 981 
      val32 = rtl8xxxu_read32(priv,(unsigned short)3748);
      #line 983 
      (*(result + (unsigned long)t))[2] = (int)(val32 >> 16) & 1023;
      #line 984 
      val32 = rtl8xxxu_read32(priv,(unsigned short)3756);
      #line 986 
      (*(result + (unsigned long)t))[3] = (int)(val32 >> 16) & 1023;
      #line 988 
      break;
    }
    #line 978 
    i ++;
  }
  #line 992 
  if (path_a_ok == 0) {
    #line 993 
    bool branch_0;
    #line 993 
    struct _ddebug __UNIQUE_ID_ddebug561 = {.modname = (char *)"rtl8xxxu", .function = (char *)"rtl8723bu_phy_iqcalibrate", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_8723b.c", .format = (char *)"%s: Path A RX IQK failed!\n", .lineno = (unsigned int)993U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
    #line 993 
    branch_0 = arch_static_branch(& __UNIQUE_ID_ddebug561.key.dd_key_false.key,(_Bool)0);
    #line 993 
    if ((long)((long)((int)branch_0 != 0)) != 0L) 
                                                  #line 993 
                                                  __dynamic_dev_dbg(& __UNIQUE_ID_ddebug561,dev,(char *)"%s: Path A RX IQK failed!\n",(char *)"rtl8723bu_phy_iqcalibrate");
  }
  #line 995 
  if ((unsigned int)priv->tx_paths > 1U) 
                                         #line 997 
                                         _dev_warn(dev,(char *)"%s: Path B not supported\n",(char *)"rtl8723bu_phy_iqcalibrate");
  #line 1049 
  val32 = rtl8xxxu_read32(priv,(unsigned short)3624);
  #line 1050 
  val32 &= 255U;
  #line 1051 
  rtl8xxxu_write32(priv,(unsigned short)3624,val32);
  #line 1053 
  if (t != 0) {
    #line 1055 
    rtl8xxxu_restore_regs(priv,(u32 *)(& adda_regs),(u32 *)(& priv->adda_backup),16);
    #line 1059 
    rtl8xxxu_restore_mac_regs(priv,(u32 *)(& iqk_mac_regs),(u32 *)(& priv->mac_backup));
    #line 1062 
    rtl8xxxu_restore_regs(priv,(u32 *)(& iqk_bb_regs),(u32 *)(& priv->bb_backup),9);
    #line 1066 
    val32 = rtl8xxxu_read32(priv,(unsigned short)3152);
    #line 1067 
    val32 &= 4294967040U;
    #line 1068 
    rtl8xxxu_write32(priv,(unsigned short)3152,val32 | 80U);
    #line 1069 
    rtl8xxxu_write32(priv,(unsigned short)3152,(unsigned int)xa_agc | val32);
    #line 1071 
    if ((unsigned int)priv->tx_paths > 1U) {
      #line 1072 
      val32 = rtl8xxxu_read32(priv,(unsigned short)3160);
      #line 1073 
      val32 &= 4294967040U;
      #line 1074 
      rtl8xxxu_write32(priv,(unsigned short)3160,val32 | 80U);
      #line 1076 
      rtl8xxxu_write32(priv,(unsigned short)3160,(unsigned int)xb_agc | val32);
    }
    #line 1081 
    rtl8xxxu_write32(priv,(unsigned short)3632,16813056U);
    #line 1082 
    rtl8xxxu_write32(priv,(unsigned short)3636,16813056U);
  }
  #line 1084 
  return;
}

#line 1086  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_8723b.c"
static void rtl8723bu_phy_iq_calibrate(struct rtl8xxxu_priv *priv)
{
  #line 1089 
  int result[4U][8U];
  #line 1090 
  int i;
  #line 1090 
  int candidate;
  #line 1091 
  bool path_a_ok;
  #line 1091 
  bool path_b_ok;
  #line 1092 
  u32 reg_e94;
  #line 1092 
  u32 reg_e9c;
  #line 1092 
  u32 reg_ea4;
  #line 1092 
  u32 reg_eac;
  #line 1093 
  u32 reg_eb4;
  #line 1093 
  u32 reg_ebc;
  #line 1093 
  u32 reg_ec4;
  #line 1093 
  u32 reg_ecc;
  #line 1094 
  u32 val32;
  #line 1094 
  u32 bt_control;
  #line 1096 
  bool simu;
  #line 1088 
  struct device *dev = & (priv->udev)->dev;
  #line 1095 
  s32 reg_tmp = 0;
  #line 1098 
  rtl8xxxu_gen2_prepare_calibrate(priv,(unsigned char)1);
  #line 1100 
  memset((void *)(& result),0,128UL);
  #line 1101 
  candidate = -1;
  #line 1103 
  path_a_ok = (_Bool)0;
  #line 1104 
  path_b_ok = (_Bool)0;
  #line 1106 
  bt_control = rtl8xxxu_read32(priv,(unsigned short)1892);
  #line 1108 
  i = 0;
  #line 1108 
  while (i <= 2) {
    #line 1109 
    rtl8723bu_phy_iqcalibrate(priv,(int (*)[8U])(& result),i);
    #line 1111 
    if (i == 1) {
      #line 1112 
      simu = rtl8xxxu_gen2_simularity_compare(priv,(int (*)[8U])(& result),0,1);
      #line 1114 
      if ((int)simu != 0) {
        #line 1115 
        candidate = 0;
        #line 1116 
        break;
      }
    }
    #line 1120 
    if (i == 2) {
      #line 1121 
      simu = rtl8xxxu_gen2_simularity_compare(priv,(int (*)[8U])(& result),0,2);
      #line 1123 
      if ((int)simu != 0) {
        #line 1124 
        candidate = 0;
        #line 1125 
        break;
      }
      #line 1128 
      simu = rtl8xxxu_gen2_simularity_compare(priv,(int (*)[8U])(& result),1,2);
      #line 1130 
      if ((int)simu != 0) 
                          #line 1131 
                          candidate = 1;
      else {
        #line 1133 
        i = 0;
        #line 1133 
        while (i <= 7) {
          #line 1134 
          reg_tmp = result[3][i] + reg_tmp;
          #line 1133 
          i ++;
        }
        #line 1136 
        if (reg_tmp != 0) 
                          #line 1137 
                          candidate = 3; else 
                                              #line 1139 
                                              candidate = -1;
      }
    }
    #line 1108 
    i ++;
  }
  #line 1144 
  i = 0;
  #line 1144 
  while (i <= 3) {
    #line 1145 
    reg_e94 = (unsigned int)result[i][0];
    #line 1146 
    reg_e9c = (unsigned int)result[i][1];
    #line 1147 
    reg_ea4 = (unsigned int)result[i][2];
    #line 1148 
    reg_eac = (unsigned int)result[i][3];
    #line 1149 
    reg_eb4 = (unsigned int)result[i][4];
    #line 1150 
    reg_ebc = (unsigned int)result[i][5];
    #line 1151 
    reg_ec4 = (unsigned int)result[i][6];
    #line 1152 
    reg_ecc = (unsigned int)result[i][7];
    #line 1144 
    i ++;
  }
  #line 1155 
  if (candidate >= 0) {
    #line 1156 
    reg_e94 = (unsigned int)result[candidate][0];
    #line 1157 
    priv->rege94 = reg_e94;
    #line 1158 
    reg_e9c = (unsigned int)result[candidate][1];
    #line 1159 
    priv->rege9c = reg_e9c;
    #line 1160 
    reg_ea4 = (unsigned int)result[candidate][2];
    #line 1161 
    reg_eac = (unsigned int)result[candidate][3];
    #line 1162 
    reg_eb4 = (unsigned int)result[candidate][4];
    #line 1163 
    priv->regeb4 = reg_eb4;
    #line 1164 
    reg_ebc = (unsigned int)result[candidate][5];
    #line 1165 
    priv->regebc = reg_ebc;
    #line 1166 
    reg_ec4 = (unsigned int)result[candidate][6];
    #line 1167 
    reg_ecc = (unsigned int)result[candidate][7];
    {
      #line 1168 
      bool branch;
      #line 1168 
      struct _ddebug __UNIQUE_ID_ddebug562 = {.modname = (char *)"rtl8xxxu", .function = (char *)"rtl8723bu_phy_iq_calibrate", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_8723b.c", .format = (char *)"%s: candidate is %x\n", .lineno = (unsigned int)1168U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
      #line 1168 
      branch = arch_static_branch(& __UNIQUE_ID_ddebug562.key.dd_key_false.key,(_Bool)0);
      #line 1168 
      if ((long)((long)((int)branch != 0)) != 0L) 
                                                  #line 1168 
                                                  __dynamic_dev_dbg(& __UNIQUE_ID_ddebug562,dev,(char *)"%s: candidate is %x\n",(char *)"rtl8723bu_phy_iq_calibrate",candidate);
    }
    {
      #line 1169 
      bool branch_0;
      #line 1169 
      struct _ddebug __UNIQUE_ID_ddebug563 = {.modname = (char *)"rtl8xxxu", .function = (char *)"rtl8723bu_phy_iq_calibrate", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_8723b.c", .format = (char *)"%s: e94 =%x e9c=%x ea4=%x eac=%x eb4=%x ebc=%x ec4=%x ecc=%x\n", .lineno = (unsigned int)1169U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
      #line 1169 
      branch_0 = arch_static_branch(& __UNIQUE_ID_ddebug563.key.dd_key_false.key,(_Bool)0);
      #line 1169 
      if ((long)((long)((int)branch_0 != 0)) != 0L) 
                                                    #line 1169 
                                                    __dynamic_dev_dbg(& __UNIQUE_ID_ddebug563,dev,(char *)"%s: e94 =%x e9c=%x ea4=%x eac=%x eb4=%x ebc=%x ec4=%x ecc=%x\n",(char *)"rtl8723bu_phy_iq_calibrate",reg_e94,reg_e9c,reg_ea4,reg_eac,reg_eb4,reg_ebc,reg_ec4,reg_ecc);
    }
    #line 1173 
    path_a_ok = (_Bool)1;
    #line 1174 
    path_b_ok = (_Bool)1;
  }
  else {
    #line 1176 
    priv->regeb4 = 256U;
    #line 1176 
    priv->rege94 = 256U;
    #line 1176 
    reg_eb4 = 256U;
    #line 1176 
    reg_e94 = reg_eb4;
    #line 1177 
    priv->regebc = 0U;
    #line 1177 
    priv->rege9c = 0U;
    #line 1177 
    reg_ebc = 0U;
    #line 1177 
    reg_e9c = reg_ebc;
  }
  #line 1180 
  if (reg_e94 != 0U && candidate >= 0) 
                                       #line 1181 
                                       rtl8xxxu_fill_iqk_matrix_a(priv,(_Bool)((bool)((int)path_a_ok) != 0),(int (*)[8U])(& result),candidate,(_Bool)(reg_ea4 == 0U));
  #line 1184 
  if ((unsigned int)priv->tx_paths > 1U && reg_eb4 != 0U) 
                                                          #line 1185 
                                                          rtl8xxxu_fill_iqk_matrix_b(priv,(_Bool)((bool)((int)path_b_ok) != 0),(int (*)[8U])(& result),candidate,(_Bool)(reg_ec4 == 0U));
  #line 1188 
  rtl8xxxu_save_regs(priv,(u32 *)(& rtl8xxxu_iqk_phy_iq_bb_reg),(u32 *)(& priv->bb_recovery_backup),9);
  #line 1191 
  rtl8xxxu_write32(priv,(unsigned short)1892,bt_control);
  #line 1193 
  val32 = rtl8xxxu_read_rfreg(priv,(enum rtl8xxxu_rfpath)RF_A,(unsigned char)239);
  #line 1194 
  val32 |= 524288U;
  #line 1195 
  rtl8xxxu_write_rfreg(priv,(enum rtl8xxxu_rfpath)RF_A,(unsigned char)239,val32);
  #line 1196 
  rtl8xxxu_write_rfreg(priv,(enum rtl8xxxu_rfpath)RF_A,(unsigned char)48,98304U);
  #line 1197 
  rtl8xxxu_write_rfreg(priv,(enum rtl8xxxu_rfpath)RF_A,(unsigned char)49,31U);
  #line 1198 
  rtl8xxxu_write_rfreg(priv,(enum rtl8xxxu_rfpath)RF_A,(unsigned char)50,942455U);
  #line 1199 
  val32 = rtl8xxxu_read_rfreg(priv,(enum rtl8xxxu_rfpath)RF_A,(unsigned char)237);
  #line 1200 
  val32 |= 32U;
  #line 1201 
  rtl8xxxu_write_rfreg(priv,(enum rtl8xxxu_rfpath)RF_A,(unsigned char)237,val32);
  #line 1202 
  rtl8xxxu_write_rfreg(priv,(enum rtl8xxxu_rfpath)RF_A,(unsigned char)67,196797U);
  #line 1204 
  if ((unsigned int)priv->rf_paths > 1U) {
    #line 1205 
    bool branch_1;
    #line 1205 
    struct _ddebug __UNIQUE_ID_ddebug564 = {.modname = (char *)"rtl8xxxu", .function = (char *)"rtl8723bu_phy_iq_calibrate", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_8723b.c", .format = (char *)"%s: 8723BU 2T not supported\n", .lineno = (unsigned int)1205U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
    #line 1205 
    branch_1 = arch_static_branch(& __UNIQUE_ID_ddebug564.key.dd_key_false.key,(_Bool)0);
    #line 1205 
    if ((long)((long)((int)branch_1 != 0)) != 0L) 
                                                  #line 1205 
                                                  __dynamic_dev_dbg(& __UNIQUE_ID_ddebug564,dev,(char *)"%s: 8723BU 2T not supported\n",(char *)"rtl8723bu_phy_iq_calibrate");
  }
  #line 1207 
  rtl8xxxu_gen2_prepare_calibrate(priv,(unsigned char)0);
  #line 1208 
  return;
}

#line 1210  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_8723b.c"
static int rtl8723bu_active_to_emu(struct rtl8xxxu_priv *priv)
{
  #line 1212 
  u8 val8;
  #line 1213 
  u16 val16;
  #line 1214 
  u32 val32;
  #line 1215 
  int count;
  #line 1215 
  int ret = 0;
  #line 1218 
  rtl8xxxu_write8(priv,(unsigned short)31,(unsigned char)0);
  #line 1221 
  val16 = rtl8xxxu_read16(priv,(unsigned short)72);
  #line 1222 
  val16 = (unsigned short)((unsigned int)val16 & 65023U);
  #line 1223 
  rtl8xxxu_write16(priv,(unsigned short)72,(unsigned short)((int)val16));
  #line 1226 
  val32 = rtl8xxxu_read32(priv,(unsigned short)4);
  #line 1227 
  val32 |= 65536U;
  #line 1228 
  rtl8xxxu_write32(priv,(unsigned short)4,val32);
  #line 1231 
  val8 = rtl8xxxu_read8(priv,(unsigned short)5);
  #line 1232 
  val8 = (unsigned char)((unsigned int)val8 | 2U);
  #line 1233 
  rtl8xxxu_write8(priv,(unsigned short)5,(unsigned char)((int)val8));
  #line 1235 
  count = 500;
  #line 1235 
  while (count != 0) {
    #line 1236 
    val8 = rtl8xxxu_read8(priv,(unsigned short)5);
    #line 1237 
    if (((unsigned long)val8 & 2UL) == 0UL) 
                                            #line 1238 
                                            break;
    #line 1239 
    __const_udelay(42950UL);
    #line 1235 
    count --;
  }
  #line 1242 
  if (count == 0) {
    #line 1243 
    _dev_warn(& (priv->udev)->dev,(char *)"%s: Disabling MAC timed out\n",(char *)"rtl8723bu_active_to_emu");
    #line 1245 
    ret = -16;
    #line 1246 
    goto exit;
  }
  #line 1250 
  val8 = rtl8xxxu_read8(priv,(unsigned short)16);
  #line 1251 
  val8 = (unsigned char)((unsigned int)val8 & 191U);
  #line 1252 
  rtl8xxxu_write8(priv,(unsigned short)16,(unsigned char)((int)val8));
  #line 1255 
  val8 = rtl8xxxu_read8(priv,(unsigned short)0);
  #line 1256 
  val8 = (unsigned char)((unsigned int)val8 | 32U);
  #line 1257 
  rtl8xxxu_write8(priv,(unsigned short)0,(unsigned char)((int)val8));
  #line 1260 
  val8 = rtl8xxxu_read8(priv,(unsigned short)32);
  #line 1261 
  val8 = (unsigned char)((unsigned int)val8 & 254U);
  #line 1262 
  rtl8xxxu_write8(priv,(unsigned short)32,(unsigned char)((int)val8));
  #line 1264 
  exit: 
        #line 1264 
  ;
  #line 1265 
  return ret;
}

#line 1268  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_8723b.c"
static int rtl8723b_emu_to_active(struct rtl8xxxu_priv *priv)
{
  #line 1270 
  u8 val8;
  #line 1271 
  u32 val32;
  #line 1272 
  int count;
  #line 1272 
  int ret = 0;
  #line 1275 
  val8 = rtl8xxxu_read8(priv,(unsigned short)32);
  #line 1276 
  val8 = (unsigned char)((unsigned int)val8 | 1U);
  #line 1277 
  rtl8xxxu_write8(priv,(unsigned short)32,(unsigned char)((int)val8));
  #line 1280 
  val8 = rtl8xxxu_read8(priv,(unsigned short)103);
  #line 1281 
  val8 = (unsigned char)((unsigned int)val8 & 239U);
  #line 1282 
  rtl8xxxu_write8(priv,(unsigned short)103,(unsigned char)((int)val8));
  #line 1284 
  __const_udelay(4295000UL);
  #line 1287 
  val8 = rtl8xxxu_read8(priv,(unsigned short)0);
  #line 1288 
  val8 = (unsigned char)((unsigned int)val8 & 223U);
  #line 1289 
  rtl8xxxu_write8(priv,(unsigned short)0,(unsigned char)((int)val8));
  #line 1292 
  val32 = (unsigned int)rtl8xxxu_read8(priv,(unsigned short)4);
  #line 1293 
  val32 &= 4294966271U;
  #line 1294 
  rtl8xxxu_write32(priv,(unsigned short)4,val32);
  #line 1297 
  count = 500;
  #line 1297 
  while (count != 0) {
    #line 1298 
    val32 = rtl8xxxu_read32(priv,(unsigned short)4);
    #line 1299 
    if (((unsigned long)val32 & 131072UL) != 0UL) 
                                                  #line 1300 
                                                  break;
    #line 1302 
    __const_udelay(42950UL);
    #line 1297 
    count --;
  }
  #line 1305 
  if (count == 0) {
    #line 1306 
    ret = -16;
    #line 1307 
    goto exit;
  }
  #line 1313 
  val32 = rtl8xxxu_read32(priv,(unsigned short)4);
  #line 1314 
  val32 |= 65536U;
  #line 1315 
  rtl8xxxu_write32(priv,(unsigned short)4,val32);
  #line 1318 
  val32 = rtl8xxxu_read32(priv,(unsigned short)4);
  #line 1319 
  val32 &= 4294934527U;
  #line 1320 
  rtl8xxxu_write32(priv,(unsigned short)4,val32);
  #line 1323 
  val32 = rtl8xxxu_read32(priv,(unsigned short)4);
  #line 1324 
  val32 &= 4294961151U;
  #line 1325 
  rtl8xxxu_write32(priv,(unsigned short)4,val32);
  #line 1328 
  val32 = rtl8xxxu_read32(priv,(unsigned short)4);
  #line 1329 
  val32 |= 256U;
  #line 1330 
  rtl8xxxu_write32(priv,(unsigned short)4,val32);
  #line 1332 
  count = 500;
  #line 1332 
  while (count != 0) {
    #line 1333 
    val32 = rtl8xxxu_read32(priv,(unsigned short)4);
    #line 1334 
    if (((unsigned long)val32 & 256UL) == 0UL) {
      #line 1335 
      ret = 0;
      #line 1336 
      break;
    }
    #line 1338 
    __const_udelay(42950UL);
    #line 1332 
    count --;
  }
  #line 1341 
  if (count == 0) {
    #line 1342 
    ret = -16;
    #line 1343 
    goto exit;
  }
  #line 1347 
  val8 = rtl8xxxu_read8(priv,(unsigned short)16);
  #line 1348 
  val8 = (unsigned char)((unsigned int)val8 | 64U);
  #line 1349 
  rtl8xxxu_write8(priv,(unsigned short)16,(unsigned char)((int)val8));
  #line 1352 
  val8 = rtl8xxxu_read8(priv,(unsigned short)73);
  #line 1353 
  val8 = (unsigned char)((unsigned int)val8 | 2U);
  #line 1354 
  rtl8xxxu_write8(priv,(unsigned short)73,(unsigned char)((int)val8));
  #line 1357 
  val8 = rtl8xxxu_read8(priv,(unsigned short)99);
  #line 1358 
  val8 = (unsigned char)((unsigned int)val8 | 2U);
  #line 1359 
  rtl8xxxu_write8(priv,(unsigned short)99,(unsigned char)((int)val8));
  #line 1362 
  val8 = rtl8xxxu_read8(priv,(unsigned short)98);
  #line 1363 
  val8 = (unsigned char)((unsigned int)val8 & 253U);
  #line 1364 
  rtl8xxxu_write8(priv,(unsigned short)98,(unsigned char)((int)val8));
  #line 1367 
  val8 = rtl8xxxu_read8(priv,(unsigned short)88);
  #line 1368 
  val8 = (unsigned char)((unsigned int)val8 | 1U);
  #line 1369 
  rtl8xxxu_write8(priv,(unsigned short)88,(unsigned char)((int)val8));
  #line 1372 
  val8 = rtl8xxxu_read8(priv,(unsigned short)90);
  #line 1373 
  val8 = (unsigned char)((unsigned int)val8 | 2U);
  #line 1374 
  rtl8xxxu_write8(priv,(unsigned short)90,(unsigned char)((int)val8));
  #line 1376 
  val8 = rtl8xxxu_read8(priv,(unsigned short)104);
  #line 1377 
  val8 = (unsigned char)((unsigned int)val8 | 8U);
  #line 1378 
  rtl8xxxu_write8(priv,(unsigned short)104,(unsigned char)((int)val8));
  #line 1381 
  val8 = rtl8xxxu_read8(priv,(unsigned short)105);
  #line 1382 
  val8 = (unsigned char)((unsigned int)val8 | 64U);
  #line 1383 
  rtl8xxxu_write8(priv,(unsigned short)105,(unsigned char)((int)val8));
  #line 1385 
  exit: 
        #line 1385 
  ;
  #line 1386 
  return ret;
}

#line 1389  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_8723b.c"
static int rtl8723bu_power_on(struct rtl8xxxu_priv *priv)
{
  #line 1391 
  u8 val8;
  #line 1392 
  u16 val16;
  #line 1393 
  u32 val32;
  #line 1394 
  int ret;
  #line 1396 
  rtl8xxxu_disabled_to_emu(priv);
  #line 1398 
  ret = rtl8723b_emu_to_active(priv);
  #line 1399 
  if (ret != 0) 
                #line 1400 
                goto exit;
  #line 1406 
  val16 = rtl8xxxu_read16(priv,(unsigned short)256);
  #line 1407 
  val16 = (unsigned short)((unsigned int)val16 | 1791U);
  #line 1412 
  rtl8xxxu_write16(priv,(unsigned short)256,(unsigned short)((int)val16));
  #line 1418 
  rtl8xxxu_write8(priv,(unsigned short)103,(unsigned char)32);
  #line 1420 
  val16 = rtl8xxxu_read16(priv,(unsigned short)2);
  #line 1421 
  val16 = (unsigned short)((unsigned int)val16 | 3U);
  #line 1422 
  rtl8xxxu_write16(priv,(unsigned short)2,(unsigned short)((int)val16));
  #line 1424 
  rtl8xxxu_write8(priv,(unsigned short)1893,(unsigned char)24);
  #line 1425 
  rtl8xxxu_write8(priv,(unsigned short)1902,(unsigned char)4);
  #line 1426 
  rtl8xxxu_write32(priv,(unsigned short)2376,0U);
  #line 1428 
  rtl8xxxu_write8(priv,(unsigned short)65032,(unsigned char)1);
  #line 1430 
  val16 = rtl8xxxu_read16(priv,(unsigned short)56);
  #line 1431 
  val16 = (unsigned short)((unsigned int)val16 | 2048U);
  #line 1432 
  rtl8xxxu_write16(priv,(unsigned short)56,(unsigned short)((int)val16));
  #line 1434 
  val32 = rtl8xxxu_read32(priv,(unsigned short)76);
  #line 1435 
  val32 |= 8388608U;
  #line 1436 
  rtl8xxxu_write32(priv,(unsigned short)76,val32);
  #line 1438 
  val8 = rtl8xxxu_read8(priv,(unsigned short)100);
  #line 1439 
  val8 = (unsigned char)((unsigned int)val8 & 254U);
  #line 1440 
  rtl8xxxu_write8(priv,(unsigned short)100,(unsigned char)((int)val8));
  #line 1441 
  exit: 
        #line 1441 
  ;
  #line 1442 
  return ret;
}

#line 1445  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_8723b.c"
static void rtl8723bu_power_off(struct rtl8xxxu_priv *priv)
{
  #line 1447 
  u8 val8;
  #line 1448 
  u16 val16;
  #line 1450 
  rtl8xxxu_flush_fifo(priv);
  #line 1455 
  val8 = rtl8xxxu_read8(priv,(unsigned short)1260);
  #line 1456 
  val8 = (unsigned char)((unsigned int)val8 & 253U);
  #line 1457 
  rtl8xxxu_write8(priv,(unsigned short)1260,(unsigned char)((int)val8));
  #line 1459 
  rtl8xxxu_write8(priv,(unsigned short)256,(unsigned char)0);
  #line 1461 
  rtl8xxxu_active_to_lps(priv);
  #line 1464 
  if (((unsigned long)rtl8xxxu_read8(priv,(unsigned short)128) & 128UL) != 0UL) 
    #line 1465 
    rtl8xxxu_firmware_self_reset(priv);
  #line 1468 
  val16 = rtl8xxxu_read16(priv,(unsigned short)2);
  #line 1469 
  val16 = (unsigned short)((unsigned int)val16 & 64511U);
  #line 1470 
  rtl8xxxu_write16(priv,(unsigned short)2,(unsigned short)((int)val16));
  #line 1473 
  rtl8xxxu_write8(priv,(unsigned short)128,(unsigned char)0);
  #line 1475 
  rtl8723bu_active_to_emu(priv);
  #line 1477 
  val8 = rtl8xxxu_read8(priv,(unsigned short)5);
  #line 1478 
  val8 = (unsigned char)((unsigned int)val8 | 8U);
  #line 1479 
  rtl8xxxu_write8(priv,(unsigned short)5,(unsigned char)((int)val8));
  #line 1482 
  val8 = rtl8xxxu_read8(priv,(unsigned short)74);
  #line 1483 
  val8 = (unsigned char)((unsigned int)val8 | 1U);
  #line 1484 
  rtl8xxxu_write8(priv,(unsigned short)74,(unsigned char)((int)val8));
  #line 1485 
  return;
}

#line 1487  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_8723b.c"
static void rtl8723b_enable_rf(struct rtl8xxxu_priv *priv)
{
  #line 1489 
  struct h2c_cmd h2c;
  #line 1490 
  u32 val32;
  #line 1491 
  u8 val8;
  #line 1493 
  val32 = rtl8xxxu_read32(priv,(unsigned short)3696);
  #line 1494 
  val32 |= 12582912U;
  #line 1495 
  rtl8xxxu_write32(priv,(unsigned short)3696,val32);
  #line 1501 
  rtl8xxxu_write8(priv,(unsigned short)1936,(unsigned char)5);
  #line 1507 
  rtl8xxxu_write8(priv,(unsigned short)1912,(unsigned char)1);
  #line 1509 
  val8 = rtl8xxxu_read8(priv,(unsigned short)64);
  #line 1510 
  val8 = (unsigned char)((unsigned int)val8 | 32U);
  #line 1511 
  rtl8xxxu_write8(priv,(unsigned short)64,(unsigned char)((int)val8));
  #line 1513 
  rtl8xxxu_write_rfreg(priv,(enum rtl8xxxu_rfpath)RF_A,(unsigned char)1,1920U);
  #line 1515 
  rtl8723bu_write_btreg(priv,(unsigned char)60,(unsigned char)21);
  #line 1520 
  memset((void *)(& h2c),0,8UL);
  #line 1521 
  h2c.__anonCompField_h2c_cmd_197.bt_grant.cmd = (unsigned char)110U;
  #line 1522 
  h2c.__anonCompField_h2c_cmd_197.bt_grant.data = (unsigned char)0U;
  #line 1523 
  rtl8xxxu_gen2_h2c_cmd(priv,& h2c,2);
  #line 1528 
  rtl8xxxu_write8(priv,(unsigned short)1902,(unsigned char)12);
  #line 1533 
  val8 = rtl8xxxu_read8(priv,(unsigned short)103);
  #line 1534 
  val8 = (unsigned char)((unsigned int)val8 | 32U);
  #line 1535 
  rtl8xxxu_write8(priv,(unsigned short)103,(unsigned char)((int)val8));
  #line 1537 
  val32 = rtl8xxxu_read32(priv,(unsigned short)56);
  #line 1538 
  val32 |= 2048U;
  #line 1539 
  rtl8xxxu_write32(priv,(unsigned short)56,val32);
  #line 1544 
  rtl8xxxu_write8(priv,(unsigned short)2420,(unsigned char)255);
  #line 1546 
  val32 = rtl8xxxu_read32(priv,(unsigned short)2372);
  #line 1547 
  val32 |= 3U;
  #line 1548 
  rtl8xxxu_write32(priv,(unsigned short)2372,val32);
  #line 1550 
  rtl8xxxu_write8(priv,(unsigned short)2352,(unsigned char)119);
  #line 1552 
  val32 = rtl8xxxu_read32(priv,(unsigned short)76);
  #line 1553 
  val32 &= 4278190079U;
  #line 1554 
  val32 |= 8388608U;
  #line 1555 
  rtl8xxxu_write32(priv,(unsigned short)76,val32);
  #line 1560 
  val8 = rtl8xxxu_read8(priv,(unsigned short)100);
  #line 1561 
  val8 = (unsigned char)((unsigned int)val8 & 254U);
  #line 1562 
  rtl8xxxu_write8(priv,(unsigned short)100,(unsigned char)((int)val8));
  #line 1564 
  memset((void *)(& h2c),0,8UL);
  #line 1565 
  h2c.__anonCompField_h2c_cmd_197.ant_sel_rsv.cmd = (unsigned char)101U;
  #line 1566 
  h2c.__anonCompField_h2c_cmd_197.ant_sel_rsv.ant_inverse = (unsigned char)1U;
  #line 1567 
  h2c.__anonCompField_h2c_cmd_197.ant_sel_rsv.int_switch_type = (unsigned char)0U;
  #line 1568 
  rtl8xxxu_gen2_h2c_cmd(priv,& h2c,3);
  #line 1578 
  rtl8xxxu_write32(priv,(unsigned short)2376,128U);
  #line 1583 
  rtl8723bu_set_ps_tdma(priv,(unsigned char)8,(unsigned char)0,(unsigned char)0,(unsigned char)0,(unsigned char)0);
  #line 1585 
  rtl8xxxu_write32(priv,(unsigned short)1728,1431655765U);
  #line 1586 
  rtl8xxxu_write32(priv,(unsigned short)1732,1431655765U);
  #line 1587 
  rtl8xxxu_write32(priv,(unsigned short)1736,16777215U);
  #line 1588 
  rtl8xxxu_write8(priv,(unsigned short)1740,(unsigned char)3);
  #line 1590 
  memset((void *)(& h2c),0,8UL);
  #line 1591 
  h2c.__anonCompField_h2c_cmd_197.bt_info.cmd = (unsigned char)97U;
  #line 1592 
  h2c.__anonCompField_h2c_cmd_197.bt_info.data = (unsigned char)1U;
  #line 1593 
  rtl8xxxu_gen2_h2c_cmd(priv,& h2c,2);
  #line 1595 
  memset((void *)(& h2c),0,8UL);
  #line 1596 
  h2c.__anonCompField_h2c_cmd_197.ignore_wlan.cmd = (unsigned char)99U;
  #line 1597 
  h2c.__anonCompField_h2c_cmd_197.ignore_wlan.data = (unsigned char)0U;
  #line 1598 
  rtl8xxxu_gen2_h2c_cmd(priv,& h2c,2);
  #line 1599 
  return;
}

#line 1601  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_8723b.c"
static void rtl8723bu_init_aggregation(struct rtl8xxxu_priv *priv)
{
  #line 1603 
  u32 agg_rx;
  #line 1604 
  u8 agg_ctrl;
  #line 1609 
  agg_ctrl = rtl8xxxu_read8(priv,(unsigned short)268);
  #line 1610 
  agg_ctrl = (unsigned char)((unsigned int)agg_ctrl & 251U);
  #line 1612 
  agg_rx = rtl8xxxu_read32(priv,(unsigned short)640);
  #line 1613 
  agg_rx &= 2147483647U;
  #line 1614 
  agg_rx &= 4294902000U;
  #line 1616 
  rtl8xxxu_write8(priv,(unsigned short)268,(unsigned char)((int)agg_ctrl));
  #line 1617 
  rtl8xxxu_write32(priv,(unsigned short)640,agg_rx);
  #line 1618 
  return;
}

#line 1620  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_8723b.c"
static void rtl8723bu_init_statistics(struct rtl8xxxu_priv *priv)
{
  #line 1622 
  u32 val32;
  #line 1625 
  rtl8xxxu_write16(priv,(unsigned short)2198,(unsigned short)10000);
  #line 1626 
  rtl8xxxu_write16(priv,(unsigned short)2194,(unsigned short)65535);
  #line 1627 
  rtl8xxxu_write32(priv,(unsigned short)2200,4294967122U);
  #line 1628 
  rtl8xxxu_write32(priv,(unsigned short)2204,4294967295U);
  #line 1630 
  val32 = rtl8xxxu_read32(priv,(unsigned short)3624);
  #line 1631 
  val32 |= 255U;
  #line 1632 
  rtl8xxxu_write32(priv,(unsigned short)3624,val32);
  #line 1634 
  val32 = rtl8xxxu_read32(priv,(unsigned short)2192);
  #line 1635 
  val32 |= 1792U;
  #line 1636 
  rtl8xxxu_write32(priv,(unsigned short)2192,val32);
  #line 1638 
  val32 = rtl8xxxu_read32(priv,(unsigned short)3084);
  #line 1639 
  val32 |= 128U;
  #line 1640 
  rtl8xxxu_write32(priv,(unsigned short)3084,val32);
  #line 1641 
  return;
}

#line 1643  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_8723b.c"
struct rtl8xxxu_fileops rtl8723bu_fops = {.parse_efuse = & rtl8723bu_parse_efuse, .load_firmware = & rtl8723bu_load_firmware, .power_on = & rtl8723bu_power_on, .power_off = & rtl8723bu_power_off, .reset_8051 = & rtl8723bu_reset_8051, .llt_init = & rtl8xxxu_auto_llt_table, .init_phy_bb = & rtl8723bu_init_phy_bb, .init_phy_rf = & rtl8723bu_init_phy_rf, .phy_init_antenna_selection = & rtl8723bu_phy_init_antenna_selection, .phy_iq_calibrate = & rtl8723bu_phy_iq_calibrate, .config_channel = & rtl8xxxu_gen2_config_channel, .parse_rx_desc = & rtl8xxxu_parse_rxdesc24, .init_aggregation = & rtl8723bu_init_aggregation, .init_statistics = & rtl8723bu_init_statistics, .enable_rf = & rtl8723b_enable_rf, .disable_rf = & rtl8xxxu_gen2_disable_rf, .usb_quirks = & rtl8xxxu_gen2_usb_quirks, .set_tx_power = & rtl8723b_set_tx_power, .update_rate_mask = & rtl8xxxu_gen2_update_rate_mask, .report_connect = & rtl8xxxu_gen2_report_connect, .fill_txdesc = & rtl8xxxu_fill_txdesc_v2, .writeN_block_size = 1024, .tx_desc_size = (char)40, .rx_desc_size = (char)24, .has_s0s1 = (unsigned char)1U, .has_tx_report = (unsigned char)1U, .gen2_thermal_meter = (unsigned char)1U, .needs_full_init = (unsigned char)1U, .adda_1t_init = 29360148U, .adda_1t_path_on = 29360148U, .adda_2t_path_on_a = 29360148U, .adda_2t_path_on_b = 29360148U, .trxff_boundary = (unsigned short)16255U, .pbp_rx = (unsigned char)2U, .pbp_tx = (unsigned char)2U, .mactable = (struct rtl8xxxu_reg8val *)(& rtl8723b_mac_init_table), .total_page_num = (unsigned char)247U, .page_num_hi = (unsigned char)12U, .page_num_lo = (unsigned char)2U, .page_num_norm = (unsigned char)2U};
#line 20  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/common/inline_asm.c"
void ldv_inline_asm(void)
{
  #line 24 
  return;
}

#line 20  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
void ldv_atomic_add(int i, atomic_t *v)
{
  #line 22 
  v->counter += i;
  #line 23 
  return;
}

#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
void ldv_atomic_sub(int i, atomic_t *v)
{
  #line 27 
  v->counter -= i;
  #line 28 
  return;
}

#line 30  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
int ldv_atomic_sub_and_test(int i, atomic_t *v)
{
  #line 32 
  v->counter -= i;
  #line 33 
  if (v->counter != 0) 
                       #line 34 
                       return 0;
  #line 36 
  return 1;
}

#line 39  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
void ldv_atomic_inc(atomic_t *v)
{
  #line 41 
  (v->counter) ++;
  #line 42 
  return;
}

#line 44  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
void ldv_atomic_dec(atomic_t *v)
{
  #line 46 
  (v->counter) --;
  #line 47 
  return;
}

#line 49  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
int ldv_atomic_dec_and_test(atomic_t *v)
{
  #line 51 
  (v->counter) --;
  #line 52 
  if (v->counter != 0) 
                       #line 53 
                       return 0;
  #line 55 
  return 1;
}

#line 58  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
int ldv_atomic_inc_and_test(atomic_t *v)
{
  #line 60 
  (v->counter) ++;
  #line 61 
  if (v->counter != 0) 
                       #line 62 
                       return 0;
  #line 64 
  return 1;
}

#line 67  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
int ldv_atomic_add_return(int i, atomic_t *v)
{
  #line 69 
  v->counter += i;
  #line 70 
  return v->counter;
}

#line 73  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
int ldv_atomic_add_negative(int i, atomic_t *v)
{
  #line 75 
  v->counter += i;
  #line 76 
  return v->counter < 0;
}

#line 79  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
int ldv_atomic_inc_short(short *v)
{
  #line 81 
  *v = (short)((unsigned int)*v + 1U);
  #line 82 
  return (int)*v;
}

#line 20  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/current.c"
static struct task_struct ldv_current;
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/current.c"
struct task_struct *ldv_get_current(void)
{
  #line 28 
  ldv_current.pid = 1;
  #line 29 
  return & ldv_current;
}

#line 32  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 28  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
void ldv_switch_to_interrupt_context(void);
#line 42  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 34  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
void ldv_switch_to_process_context(void);
#line 50  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 40  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
bool ldv_in_interrupt_context(void);
#line 112  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 55  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
int ldv_post_init(int init_ret_val);
#line 132  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 61  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
int ldv_post_probe(int probe_ret_val);
#line 133  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 133 
void ldv_check_return_value_probe(int);
#line 141 
#line 68  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
int ldv_filter_err_code(int ret_val);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/common.h"
#line 23 
void __VERIFIER_assume(int);
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
static bool __ldv_in_interrupt_context = (_Bool)0;
#line 28  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
void ldv_switch_to_interrupt_context(void)
{
  #line 31 
  __ldv_in_interrupt_context = (_Bool)1;
  #line 32 
  return;
}

#line 34  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
void ldv_switch_to_process_context(void)
{
  #line 37 
  __ldv_in_interrupt_context = (_Bool)0;
  #line 38 
  return;
}

#line 40  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
bool ldv_in_interrupt_context(void)
{
  #line 42 
  return __ldv_in_interrupt_context;
}

#line 45  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
static int ldv_filter_positive_int(int val)
{
  #line 47 
  __VERIFIER_assume(val <= 0);
  #line 48 
  return val;
}

#line 55  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
int ldv_post_init(int init_ret_val)
{
  #line 57 
  return ldv_filter_positive_int(init_ret_val);
}

#line 61  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
int ldv_post_probe(int probe_ret_val)
{
  #line 63 
  ldv_check_return_value_probe(probe_ret_val);
  #line 64 
  return ldv_filter_positive_int(probe_ret_val);
}

#line 68  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
int ldv_filter_err_code(int ret_val)
{
  #line 70 
  return ldv_filter_positive_int(ret_val);
}

#line 28  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/common/list.h"
#line 28 
void ldv_save_allocated_memory_to_list(void *);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/device.h"
#line 29  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
void *ldv_dev_get_drvdata(struct device *dev);
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/device.h"
#line 43  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
int ldv_dev_set_drvdata(struct device *dev, void *data);
#line 57  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 57 
void *ldv_xzalloc(size_t size);
#line 29  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
void *ldv_dev_get_drvdata(struct device *dev)
{
  #line 31 
  if (dev != (struct device *)0 && dev->p != (struct device_private *)0) 
    #line 32 
    return (dev->p)->driver_data;
  #line 34 
  return (void *)0;
}

#line 43  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
int ldv_dev_set_drvdata(struct device *dev, void *data)
{
  #line 45 
  dev->p = (struct device_private *)ldv_xzalloc(8UL);
  #line 46 
  ldv_save_allocated_memory_to_list((void *)dev->p);
  #line 47 
  (dev->p)->driver_data = data;
  #line 49 
  return 0;
}

#line 156  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 156 
void ldv_check_alloc_flags(gfp_t);
#line 48  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 48 
void *ldv_malloc(size_t size);
#line 49 
#line 49 
void *ldv_calloc(size_t nmemb, size_t size);
#line 50 
#line 50 
void *ldv_zalloc(size_t size);
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/devres.c"
void *ldv_devm_kmalloc(size_t size, gfp_t flags)
{
  #line 26 
  void *res;
  #line 28 
  ldv_check_alloc_flags(flags);
  #line 29 
  res = ldv_malloc(size);
  #line 30 
  ldv_save_allocated_memory_to_list(res);
  #line 32 
  return res;
}

#line 35  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/devres.c"
void *ldv_devm_kzalloc(size_t size, gfp_t flags)
{
  #line 37 
  void *res;
  #line 39 
  ldv_check_alloc_flags(flags);
  #line 40 
  res = ldv_zalloc(size);
  #line 41 
  ldv_save_allocated_memory_to_list(res);
  #line 43 
  return res;
}

#line 46  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/devres.c"
void *ldv_devm_kmalloc_array(size_t n, size_t size, gfp_t flags)
{
  #line 48 
  void *res;
  #line 50 
  ldv_check_alloc_flags(flags);
  #line 51 
  res = ldv_malloc(n * size);
  #line 52 
  ldv_save_allocated_memory_to_list(res);
  #line 54 
  return res;
}

#line 57  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/devres.c"
void *ldv_devm_kcalloc(size_t n, size_t size, gfp_t flags)
{
  #line 59 
  void *res;
  #line 61 
  ldv_check_alloc_flags(flags);
  #line 62 
  res = ldv_calloc(n,size);
  #line 63 
  ldv_save_allocated_memory_to_list(res);
  #line 65 
  return res;
}

#line 51  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 51 
void ldv_free(void *s);
#line 59 
#line 59 
void *ldv_malloc_unknown_size(void);
#line 31  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 31 
int ldv_undef_int_positive(void);
#line 40 
#line 40 
int ldv_undef_int_nonpositive(void);
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/firmware_loader.c"
int ldv_request_firmware(struct firmware **fw)
{
  #line 27 
  int retval;
  #line 26 
  struct firmware *_fw = (struct firmware *)0;
  #line 29 
  retval = ldv_undef_int_nonpositive();
  #line 31 
  if (retval == 0) {
    #line 33 
    _fw = (struct firmware *)ldv_xzalloc(32UL);
    #line 34 
    _fw->data = (u8 *)ldv_malloc_unknown_size();
    #line 35 
    __VERIFIER_assume(_fw->data != (u8 *)0U);
    #line 36 
    _fw->size = (unsigned long)ldv_undef_int_positive();
  }
  #line 39 
  *fw = _fw;
  #line 41 
  return retval;
}

#line 44  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/firmware_loader.c"
void ldv_release_firmware(struct firmware *fw)
{
  #line 46 
  if (fw != (struct firmware *)0) {
    #line 48 
    ldv_free((void *)fw->data);
    #line 49 
    ldv_free((void *)fw);
  }
  #line 51 
  return;
}

#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/i2c.h"
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/i2c/i2c-core-smbus.c"
s32 ldv_i2c_smbus_read_block_data(u8 *values);
#line 55  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 55 
void *ldv_xmalloc(size_t size);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 23 
int ldv_undef_int(void);
#line 34 
#line 34 
int ldv_undef_int_negative(void);
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/i2c/i2c-core-smbus.c"
s32 ldv_i2c_smbus_read_block_data(u8 *values)
{
  #line 27 
  __u8 size;
  #line 28 
  char *bytes;
  #line 30 
  if (ldv_undef_int() != 0) {
    #line 33 
    size = (unsigned char)ldv_undef_int_positive();
    #line 35 
    __VERIFIER_assume((unsigned int)size <= 32U);
    #line 37 
    bytes = (char *)ldv_xmalloc((unsigned long)size);
    #line 39 
    memcpy((void *)values,(void *)bytes,(unsigned long)size);
    #line 40 
    ldv_free((void *)bytes);
    #line 42 
    return (int)size;
  }
  else {
    #line 46 
    return ldv_undef_int_negative();
  }
}

#line 988  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
__inline static void v4l2_set_subdevdata(struct v4l2_subdev *sd, void *p)
{
  #line 990 
  sd->dev_priv = p;
  #line 991 
  return;
}

#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/media/v4l2-common.h"
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/media/v4l2-core/v4l2-i2c.c"
void ldv_v4l2_i2c_subdev_init(struct v4l2_subdev *sd, struct i2c_client *client, struct v4l2_subdev_ops *ops);
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/media/v4l2-core/v4l2-i2c.c"
void ldv_v4l2_i2c_subdev_init(struct v4l2_subdev *sd, struct i2c_client *client, struct v4l2_subdev_ops *ops)
{
  #line 26 
  sd->ops = ops;
  #line 27 
  v4l2_set_subdevdata(sd,(void *)client);
  #line 28 
  ldv_dev_set_drvdata(& client->dev,(void *)sd);
  #line 29 
  return;
}

#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/spi.c"
struct spi_controller *ldv_spi_alloc_master(struct device *host, unsigned int size)
{
  #line 25 
  struct spi_controller *master;
  #line 27 
  master = (struct spi_controller *)ldv_zalloc((unsigned long)size + 2936UL);
  #line 29 
  if (master == (struct spi_controller *)0) 
                                            #line 30 
                                            return (struct spi_controller *)0;
  #line 32 
  ldv_dev_set_drvdata(& master->dev,(void *)(master + 1U));
  #line 34 
  return master;
}

#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/fb.h"
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/video/fbdev/core/fbsysfs.c"
struct fb_info *ldv_framebuffer_alloc(size_t size);
#line 26  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/fb.h"
#line 38  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/video/fbdev/core/fbsysfs.c"
void ldv_framebuffer_release(struct fb_info *info);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/video/fbdev/core/fbsysfs.c"
struct fb_info *ldv_framebuffer_alloc(size_t size)
{
  #line 25 
  struct fb_info *info;
  #line 27 
  info = (struct fb_info *)ldv_zalloc(size + 1568UL);
  #line 29 
  if (info == (struct fb_info *)0) 
                                   #line 30 
                                   return (struct fb_info *)0;
  #line 32 
  if (size != 0UL) 
                   #line 33 
                   info->par = (void *)((char *)info + 1568UL);
  #line 35 
  return info;
}

#line 38  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/video/fbdev/core/fbsysfs.c"
void ldv_framebuffer_release(struct fb_info *info)
{
  #line 40 
  if (info == (struct fb_info *)0) 
                                   #line 41 
                                   return;
  #line 44 
  ldv_free((void *)info->apertures);
  #line 46 
  ldv_free((void *)info);
  #line 47 
  return;
}

#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/err.h"
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/err.c"
bool ldv_is_err(void *ptr);
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/err.h"
#line 59  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/err.c"
bool ldv_is_err_or_null(void *ptr);
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/err.h"
#line 35  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/err.c"
void *ldv_err_ptr(long error);
#line 26  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/err.h"
#line 47  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_ptr_err(void *ptr);
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/err.c"
bool ldv_is_err(void *ptr)
{
  #line 29 
  if ((unsigned long)ptr > 18446744073709547520UL) 
                                                   #line 30 
                                                   return (_Bool)1; else 
                                                                    #line 32 
                                                                    return (_Bool)0;
}

#line 35  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/err.c"
void *ldv_err_ptr(long error)
{
  #line 37 
  unsigned long result;
  #line 39 
  __VERIFIER_assume(error < 0L);
  #line 40 
  __VERIFIER_assume(error >= -4095L);
  #line 41 
  result = 18446744073709547520UL - (unsigned long)error;
  #line 42 
  __VERIFIER_assume(result > 18446744073709547520UL);
  #line 44 
  return (void *)result;
}

#line 47  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_ptr_err(void *ptr)
{
  #line 49 
  long result;
  #line 51 
  __VERIFIER_assume((unsigned long)ptr > 18446744073709547520UL);
  #line 52 
  result = (long)(18446744073709547520UL - (unsigned long)ptr);
  #line 53 
  __VERIFIER_assume(result < 0L);
  #line 54 
  __VERIFIER_assume(result >= -4095L);
  #line 56 
  return result;
}

#line 59  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/err.c"
bool ldv_is_err_or_null(void *ptr)
{
  #line 61 
  int tmp_0;
  #line 61 
  if (ptr == (void *)0) 
                        #line 61 
                        tmp_0 = 1;
  else {
    #line 61 
    if ((int)ldv_is_err(ptr) != 0) 
                                   #line 61 
                                   tmp_0 = 1; else 
                                                   #line 61 
                                                   tmp_0 = 0;
  }
  #line 61 
  return (_Bool)(tmp_0 != 0);
}

#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/panic.h"
#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/kernel/panic.c"
void ldv_panic(void);
#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/kernel/panic.c"
void ldv_panic(void)
{
  #line 23 
  __VERIFIER_assume(0);
  #line 24 
  return;
}

#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/bitmap.h"
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_set_bit(long nr, unsigned long *addr);
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/bitmap.h"
#line 27  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_clear_bit(long nr, unsigned long *addr);
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/bitmap.h"
#line 32  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_bitmap_set(unsigned long *map, unsigned int start, int nbits);
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/bitmap.h"
#line 52  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_bitmap_clear(unsigned long *map, unsigned int start, int nbits);
#line 27  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/bitmap.h"
#line 72  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_bitmap_zero(unsigned long *dst, unsigned int nbits);
#line 29  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/bitmap.h"
#line 78  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
unsigned long ldv_bitmap_find_next_zero_area(unsigned long *map, unsigned long size, unsigned long start, unsigned int nr, unsigned long align_mask);
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/find_bit.h"
#line 22 
unsigned long ldv_find_next_bit(unsigned long *addr, unsigned long size, unsigned long offset);
#line 23 
#line 23 
unsigned long ldv_find_next_zero_bit(unsigned long *addr, unsigned long size, unsigned long offset);
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_set_bit(long nr, unsigned long *addr)
{
  #line 24 
  *(addr + (unsigned long)nr / 64UL) |= 1UL << ((unsigned long)nr & 63UL);
  #line 25 
  return;
}

#line 27  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_clear_bit(long nr, unsigned long *addr)
{
  #line 29 
  *(addr + (unsigned long)nr / 64UL) &= ~ (1UL << ((unsigned long)nr & 63UL));
  #line 30 
  return;
}

#line 32  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_bitmap_set(unsigned long *map, unsigned int start, int nbits)
{
  #line 34 
  unsigned long *p = map + (unsigned long)(start / 64U);
  #line 35 
  unsigned int size = start + (unsigned int)nbits;
  #line 36 
  int bits_to_set = (int)(64U - (start & 63U));
  #line 37 
  unsigned long mask_to_set = 18446744073709551615UL << ((unsigned long)start & 63UL);
  #line 39 
  while (nbits - bits_to_set >= 0) {
    #line 40 
    *p |= mask_to_set;
    #line 41 
    nbits -= bits_to_set;
    #line 42 
    bits_to_set = 64;
    #line 43 
    mask_to_set = 18446744073709551615UL;
    #line 44 
    p ++;
  }
  #line 46 
  if (nbits != 0) {
    #line 47 
    mask_to_set = (18446744073709551615UL >> ((unsigned long)(- size) & 63UL)) & mask_to_set;
    #line 48 
    *p |= mask_to_set;
  }
  #line 50 
  return;
}

#line 52  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_bitmap_clear(unsigned long *map, unsigned int start, int nbits)
{
  #line 54 
  unsigned long *p = map + (unsigned long)(start / 64U);
  #line 55 
  unsigned int size = start + (unsigned int)nbits;
  #line 56 
  int bits_to_clear = (int)(64U - (start & 63U));
  #line 57 
  unsigned long mask_to_clear = 18446744073709551615UL << ((unsigned long)start & 63UL);
  #line 59 
  while (nbits - bits_to_clear >= 0) {
    #line 60 
    *p &= ~ mask_to_clear;
    #line 61 
    nbits -= bits_to_clear;
    #line 62 
    bits_to_clear = 64;
    #line 63 
    mask_to_clear = 18446744073709551615UL;
    #line 64 
    p ++;
  }
  #line 66 
  if (nbits != 0) {
    #line 67 
    mask_to_clear = (18446744073709551615UL >> ((unsigned long)(- size) & 63UL)) & mask_to_clear;
    #line 68 
    *p &= ~ mask_to_clear;
  }
  #line 70 
  return;
}

#line 72  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_bitmap_zero(unsigned long *dst, unsigned int nbits)
{
  #line 74 
  unsigned int len = (unsigned int)(((unsigned long)nbits + 63UL) / 64UL) * 8U;
  #line 75 
  memset((void *)dst,0,(unsigned long)len);
  #line 76 
  return;
}

#line 78  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
unsigned long ldv_bitmap_find_next_zero_area(unsigned long *map, unsigned long size, unsigned long start, unsigned int nr, unsigned long align_mask)
{
  #line 80 
  unsigned long index;
  #line 80 
  unsigned long end;
  #line 80 
  unsigned long i;
  #line 82 
  again: 
         #line 82 
  ;
  #line 83 
  index = ldv_find_next_zero_bit(map,size,start);
  #line 84 
  index = (index + align_mask) & ~ align_mask;
  #line 85 
  end = (unsigned long)nr + index;
  #line 87 
  if (end > size) 
                  #line 88 
                  return end;
  #line 90 
  i = ldv_find_next_bit(map,end,index);
  #line 92 
  if (i < end) {
    #line 93 
    start = i + 1UL;
    #line 94 
    goto again;
  }
  #line 97 
  return index;
}

#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/find_bit.h"
#line 68  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/find_bit.common.c"
unsigned long ldv_find_first_bit(unsigned long *addr, unsigned long size);
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/find_bit.h"
#line 25 
void ldv_check_find_bit_offset(unsigned long, unsigned long);
#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/find_bit.common.c"
static unsigned long ldv_ffs(unsigned long word)
{
  #line 23 
  int num = 0;
  #line 25 
  if ((word & 4294967295UL) == 0UL) {
    #line 26 
    num += 32;
    #line 27 
    word >>= 32;
  }
  #line 29 
  if ((word & 65535UL) == 0UL) {
    #line 30 
    num += 16;
    #line 31 
    word >>= 16;
  }
  #line 33 
  if ((word & 255UL) == 0UL) {
    #line 34 
    num += 8;
    #line 35 
    word >>= 8;
  }
  #line 37 
  if ((word & 15UL) == 0UL) {
    #line 38 
    num += 4;
    #line 39 
    word >>= 4;
  }
  #line 41 
  if ((word & 3UL) == 0UL) {
    #line 42 
    num += 2;
    #line 43 
    word >>= 2;
  }
  #line 45 
  if ((word & 1UL) == 0UL) 
                           #line 46 
                           num ++;
  #line 48 
  return (unsigned long)num;
}

#line 51  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/find_bit.common.c"
static unsigned long ldv_min(unsigned long a, unsigned long b)
{
  #line 53 
  if (a < b) 
             #line 54 
             return a;
  #line 56 
  return b;
}

#line 59  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/find_bit.common.c"
static unsigned long ldv_restrict_find_bit_res(unsigned long res, unsigned long size)
{
  #line 62 
  __VERIFIER_assume(1);
  #line 63 
  __VERIFIER_assume(res <= size);
  #line 65 
  return res;
}

#line 68  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/find_bit.common.c"
unsigned long ldv_find_first_bit(unsigned long *addr, unsigned long size)
{
  #line 70 
  unsigned long i;
  #line 72 
  i = 0UL;
  #line 72 
  while (i * 64UL < size) {
    #line 73 
    if (*(addr + i) != 0UL) {
      #line 74 
      ;
      #line 74 
      ;
      #line 74 
      ;
      #line 74 
      return ldv_restrict_find_bit_res(ldv_min(i * 64UL + ldv_ffs(*(addr + i)),size),
                                  size);
    }
    #line 72 
    i ++;
  }
  #line 76 
  return size;
}

#line 79  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/find_bit.common.c"
unsigned long ldv_find_next_bit(unsigned long *addr, unsigned long size, unsigned long offset)
{
  #line 81 
  unsigned long tmp;
  #line 83 
  ldv_check_find_bit_offset(size,offset);
  #line 85 
  tmp = *(addr + offset / 64UL);
  #line 86 
  tmp = (unsigned long)((18446744073709551615ULL << (offset & 63UL)) & (unsigned long long)tmp);
  #line 87 
  offset &= 18446744073709551552UL;
  #line 89 
  while (tmp == 0UL) {
    #line 90 
    offset += 64UL;
    #line 91 
    if (offset >= size) 
                        #line 92 
                        return size;
    #line 94 
    tmp = *(addr + offset / 64UL);
  }
  #line 97 
  ;
  #line 97 
  ;
  #line 97 
  ;
  #line 97 
  return ldv_restrict_find_bit_res(ldv_min(ldv_ffs(tmp) + offset,size),size);
}

#line 100  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/find_bit.common.c"
unsigned long ldv_find_next_zero_bit(unsigned long *addr, unsigned long size, unsigned long offset)
{
  #line 102 
  unsigned long tmp;
  #line 104 
  ldv_check_find_bit_offset(size,offset);
  #line 106 
  tmp = *(addr + offset / 64UL);
  #line 107 
  tmp = ~ tmp;
  #line 108 
  tmp = (unsigned long)((18446744073709551615ULL << (offset & 63UL)) & (unsigned long long)tmp);
  #line 109 
  offset &= 18446744073709551552UL;
  #line 111 
  while (tmp == 0UL) {
    #line 112 
    offset += 64UL;
    #line 113 
    if (offset >= size) 
                        #line 114 
                        return size;
    #line 116 
    tmp = *(addr + offset / 64UL);
    #line 117 
    tmp = ~ tmp;
  }
  #line 120 
  ;
  #line 120 
  ;
  #line 120 
  ;
  #line 120 
  return ldv_restrict_find_bit_res(ldv_min(ldv_ffs(tmp) + offset,size),size);
}

#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/string.h"
#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
size_t ldv_strlen(char *s);
#line 26  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/string.h"
#line 31  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
int ldv_strcmp(char *cs, char *ct);
#line 27  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/string.h"
#line 40  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
int ldv_strncmp(char *cs, char *ct, __kernel_size_t count);
#line 28  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/string.h"
#line 70  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
char *ldv_strstr(char *cs, char *ct);
#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
size_t ldv_strlen(char *s)
{
  #line 23 
  unsigned int len = 0U;
  #line 25 
  while ((int)*s != 0) {
    #line 26 
    len ++;
    #line 25 
    s ++;
  }
  #line 28 
  return (unsigned long)len;
}

#line 31  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
int ldv_strcmp(char *cs, char *ct)
{
  #line 33 
  while ((int)*cs != 0 && (int)*ct != 0) {
    #line 34 
    if ((int)*cs != (int)*ct) 
                              #line 35 
                              break;
    #line 33 
    cs ++;
    #line 33 
    ct ++;
  }
  #line 37 
  return (int)*cs - (int)*ct;
}

#line 40  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
int ldv_strncmp(char *cs, char *ct, __kernel_size_t count)
{
  #line 42 
  if (count == 0UL) 
                    #line 43 
                    return 0;
  #line 45 
  while ((int)*cs != 0 && (int)*ct != 0) {
    #line 46 
    if ((int)*cs != (int)*ct) 
                              #line 47 
                              break;
    #line 49 
    count --;
    #line 51 
    if (count == 0UL) 
                      #line 52 
                      break;
    #line 45 
    cs ++;
    #line 45 
    ct ++;
  }
  #line 55 
  return (int)*cs - (int)*ct;
}

#line 58  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
int ldv_memcmp(void *cs, void *ct, size_t count)
{
  #line 60 
  unsigned char *su1;
  #line 60 
  unsigned char *su2;
  #line 61 
  int res = 0;
  #line 63 
  su1 = (unsigned char *)cs;
  #line 63 
  su2 = (unsigned char *)ct;
  #line 63 
  while (count != 0UL) {
    #line 64 
    res = (int)*su1 - (int)*su2;
    #line 64 
    if (res != 0) 
                  #line 65 
                  break;
    #line 63 
    su1 ++;
    #line 63 
    su2 ++;
    #line 63 
    count --;
  }
  #line 67 
  return res;
}

#line 70  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
char *ldv_strstr(char *cs, char *ct)
{
  #line 72 
  size_t cs_len;
  #line 72 
  size_t ct_len;
  #line 74 
  cs_len = ldv_strlen(cs);
  #line 75 
  ct_len = ldv_strlen(ct);
  #line 77 
  while (cs_len >= ct_len) {
    #line 78 
    if (ldv_memcmp((void *)cs,(void *)ct,ct_len) == 0) 
                                                       #line 79 
                                                       return cs;
    #line 81 
    cs_len --;
    #line 82 
    cs ++;
  }
  #line 85 
  return (char *)0;
}

#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/list.c"
void ldv_init_list_head(struct list_head *list)
{
  #line 23 
  list->next = list;
  #line 24 
  list->prev = list;
  #line 25 
  return;
}

#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 33  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kzalloc(size_t size, gfp_t flags);
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 53  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags);
#line 26  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 43  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags);
#line 30  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 69  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
struct kmem_cache *ldv_kmem_cache_create(char *name, unsigned int size);
#line 31  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 85  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmem_cache_alloc(struct kmem_cache *cachep, gfp_t flags);
#line 32  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 90  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmem_cache_zalloc(struct kmem_cache *cachep, gfp_t flags);
#line 33  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 95  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void ldv_kmem_cache_free(struct kmem_cache *cachep, void *objp);
#line 34  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 100  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void ldv_kmem_cache_destroy(struct kmem_cache *cachep);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc(size_t size, gfp_t flags)
{
  #line 25 
  void *res;
  #line 27 
  ldv_check_alloc_flags(flags);
  #line 28 
  res = ldv_malloc(size);
  #line 30 
  return res;
}

#line 33  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kzalloc(size_t size, gfp_t flags)
{
  #line 35 
  void *res;
  #line 37 
  ldv_check_alloc_flags(flags);
  #line 38 
  res = ldv_zalloc(size);
  #line 40 
  return res;
}

#line 43  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags)
{
  #line 45 
  void *res;
  #line 47 
  ldv_check_alloc_flags(flags);
  #line 48 
  res = ldv_malloc(n * size);
  #line 50 
  return res;
}

#line 53  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags)
{
  #line 55 
  void *res;
  #line 57 
  ldv_check_alloc_flags(flags);
  #line 58 
  res = ldv_calloc(n,size);
  #line 60 
  return res;
}

#line 69  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
struct kmem_cache *ldv_kmem_cache_create(char *name, unsigned int size)
{
  #line 71 
  struct kmem_cache *res;
  #line 72 
  struct ldv_kmem_cache *ldv_res;
  #line 74 
  res = (struct kmem_cache *)ldv_zalloc(16UL);
  #line 76 
  if (res != (struct kmem_cache *)0) {
    #line 77 
    ldv_res = (struct ldv_kmem_cache *)res;
    #line 78 
    ldv_res->name = name;
    #line 79 
    ldv_res->size = size;
  }
  #line 82 
  return res;
}

#line 85  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmem_cache_alloc(struct kmem_cache *cachep, gfp_t flags)
{
  #line 87 
  return ldv_kmalloc((unsigned long)((struct ldv_kmem_cache *)cachep)->size,
                  flags);
}

#line 90  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmem_cache_zalloc(struct kmem_cache *cachep, gfp_t flags)
{
  #line 92 
  return ldv_kzalloc((unsigned long)((struct ldv_kmem_cache *)cachep)->size,
                  flags);
}

#line 95  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void ldv_kmem_cache_free(struct kmem_cache *cachep, void *objp)
{
  #line 97 
  ldv_free(objp);
  #line 98 
  return;
}

#line 100  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void ldv_kmem_cache_destroy(struct kmem_cache *cachep)
{
  #line 102 
  ldv_free((void *)cachep);
  #line 103 
  return;
}

#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/util.c"
void *ldv_kmemdup(void *src, size_t len, gfp_t gfp)
{
  #line 25 
  void *res;
  #line 27 
  ldv_check_alloc_flags(gfp);
  #line 28 
  res = ldv_malloc(len);
  #line 30 
  if (res != (void *)0) 
                        #line 31 
                        memcpy(res,src,len);
  #line 33 
  return res;
}

#line 162  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 162 
void ldv_check_alloc_nonatomic(void);
#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/vmalloc.h"
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/vmalloc.c"
void *ldv_vmalloc(unsigned long size);
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/vmalloc.h"
#line 33  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/vmalloc.c"
void *ldv_vzalloc(unsigned long size);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/vmalloc.h"
#line 43  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/vmalloc.c"
void ldv_vfree(void *addr);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/vmalloc.c"
void *ldv_vmalloc(unsigned long size)
{
  #line 25 
  void *res;
  #line 27 
  ldv_check_alloc_nonatomic();
  #line 28 
  res = ldv_malloc(size);
  #line 30 
  return res;
}

#line 33  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/vmalloc.c"
void *ldv_vzalloc(unsigned long size)
{
  #line 35 
  void *res;
  #line 37 
  ldv_check_alloc_nonatomic();
  #line 38 
  res = ldv_zalloc(size);
  #line 40 
  return res;
}

#line 43  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/vmalloc.c"
void ldv_vfree(void *addr)
{
  #line 45 
  ldv_free(addr);
  #line 46 
  return;
}

#line 28  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 28 
void *malloc(size_t);
#line 29 
#line 29 
void *calloc(size_t, size_t);
#line 30 
#line 30 
void free(void *);
#line 45 
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
unsigned int ldv_is_memory_alloc_failures;
#line 56  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 63  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xcalloc(size_t nmemb, size_t size);
#line 60  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 88  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc_unknown_size(void);
#line 61  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 97  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc_unknown_size(void);
#line 64  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc(size_t size);
#line 65  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 37  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc(size_t nmemb, size_t size);
#line 66  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 42  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc(size_t size);
#line 67  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 47  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void ldv_reference_free(void *s);
#line 69  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 52  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_realloc(void *ptr, size_t size);
#line 71  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 80  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc(size_t size);
#line 72  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 90  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xcalloc(size_t nmemb, size_t size);
#line 73  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 100  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xzalloc(size_t size);
#line 75  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 110  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc_unknown_size(void);
#line 76  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 124  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc_unknown_size(void);
#line 77  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 139  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc_unknown_size(void);
#line 83  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 106  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc_unknown_size(size_t size);
#line 85  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 144  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size);
#line 87  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 87 
void *external_allocated_data(void);
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
unsigned int ldv_is_memory_alloc_failures = 1U;
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc(size_t size)
{
  #line 26 
  void *res;
  #line 28 
  if (ldv_is_memory_alloc_failures != 0U) {
    #line 28 
    if (ldv_undef_int() != 0) 
                              #line 29 
                              return (void *)0;
  }
  #line 32 
  res = malloc(size);
  #line 33 
  __VERIFIER_assume(res != (void *)0);
  #line 34 
  return res;
}

#line 37  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc(size_t nmemb, size_t size)
{
  #line 39 
  return calloc(nmemb,size);
}

#line 42  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc(size_t size)
{
  #line 44 
  return calloc(1UL,size);
}

#line 47  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void ldv_reference_free(void *s)
{
  #line 49 
  free(s);
  #line 50 
  return;
}

#line 52  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_realloc(void *ptr, size_t size)
{
  #line 54 
  void *res;
  #line 56 
  if (ptr != (void *)0 && size == 0UL) {
    #line 57 
    free(ptr);
    #line 58 
    return (void *)0;
  }
  #line 61 
  if (ptr == (void *)0) {
    #line 62 
    res = malloc(size);
    #line 63 
    return res;
  }
  #line 66 
  if (ldv_undef_int() != 0) {
    #line 68 
    res = malloc(size);
    #line 69 
    __VERIFIER_assume(res != (void *)0);
    #line 71 
    memcpy(res,ptr,size);
    #line 72 
    free(ptr);
    #line 74 
    return res;
  }
  else 
       #line 77 
       return (void *)0;
}

#line 80  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc(size_t size)
{
  #line 82 
  void *res;
  #line 84 
  res = malloc(size);
  #line 85 
  __VERIFIER_assume(res != (void *)0);
  #line 87 
  return res;
}

#line 90  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xcalloc(size_t nmemb, size_t size)
{
  #line 92 
  void *res;
  #line 94 
  res = calloc(nmemb,size);
  #line 95 
  __VERIFIER_assume(res != (void *)0);
  #line 97 
  return res;
}

#line 100  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xzalloc(size_t size)
{
  #line 102 
  void *res;
  #line 104 
  res = calloc(1UL,size);
  #line 105 
  __VERIFIER_assume(res != (void *)0);
  #line 107 
  return res;
}

#line 110  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc_unknown_size(void)
{
  #line 112 
  void *res;
  #line 114 
  if (ldv_undef_int() != 0) {
    #line 116 
    res = external_allocated_data();
    #line 117 
    __VERIFIER_assume(res != (void *)0);
    #line 118 
    return res;
  }
  else 
       #line 121 
       return (void *)0;
}

#line 124  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc_unknown_size(void)
{
  #line 126 
  void *res;
  #line 128 
  if (ldv_undef_int() != 0) {
    #line 130 
    res = external_allocated_data();
    #line 131 
    memset(res,0,8UL);
    #line 132 
    __VERIFIER_assume(res != (void *)0);
    #line 133 
    return res;
  }
  else 
       #line 136 
       return (void *)0;
}

#line 139  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc_unknown_size(void)
{
  #line 141 
  return ldv_reference_calloc_unknown_size();
}

#line 144  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size)
{
  #line 146 
  void *res;
  #line 149 
  res = external_allocated_data();
  #line 150 
  __VERIFIER_assume(res != (void *)0);
  #line 152 
  return res;
}

#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc(size_t size)
{
  #line 25 
  void *res;
  #line 26 
  res = ldv_reference_malloc(size);
  #line 27 
  if (res != (void *)0) {
    #line 28 
    int tmp_0;
    #line 28 
    if (ldv_is_err(res)) 
                         #line 28 
                         tmp_0 = 0; else 
                                         #line 28 
                                         tmp_0 = 1;
    #line 28 
    __VERIFIER_assume(tmp_0);
  }
  #line 29 
  return res;
}

#line 32  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc(size_t nmemb, size_t size)
{
  #line 34 
  void *res;
  #line 35 
  res = ldv_reference_calloc(nmemb,size);
  #line 36 
  if (res != (void *)0) {
    #line 37 
    int tmp_0;
    #line 37 
    if (ldv_is_err(res)) 
                         #line 37 
                         tmp_0 = 0; else 
                                         #line 37 
                                         tmp_0 = 1;
    #line 37 
    __VERIFIER_assume(tmp_0);
  }
  #line 38 
  return res;
}

#line 41  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc(size_t size)
{
  #line 43 
  void *res;
  #line 44 
  res = ldv_reference_zalloc(size);
  #line 45 
  if (res != (void *)0) {
    #line 46 
    int tmp_0;
    #line 46 
    if (ldv_is_err(res)) 
                         #line 46 
                         tmp_0 = 0; else 
                                         #line 46 
                                         tmp_0 = 1;
    #line 46 
    __VERIFIER_assume(tmp_0);
  }
  #line 47 
  return res;
}

#line 50  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void ldv_free(void *s)
{
  #line 52 
  ldv_reference_free(s);
  #line 53 
  return;
}

#line 55  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc(size_t size)
{
  #line 57 
  void *res;
  #line 59 
  int tmp_0;
  #line 58 
  res = ldv_reference_xmalloc(size);
  #line 59 
  if (ldv_is_err(res)) 
                       #line 59 
                       tmp_0 = 0; else 
                                       #line 59 
                                       tmp_0 = 1;
  #line 59 
  __VERIFIER_assume(tmp_0);
  #line 60 
  return res;
}

#line 63  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xcalloc(size_t nmemb, size_t size)
{
  #line 65 
  void *res;
  #line 67 
  int tmp_0;
  #line 66 
  res = ldv_reference_xcalloc(nmemb,size);
  #line 67 
  if (ldv_is_err(res)) 
                       #line 67 
                       tmp_0 = 0; else 
                                       #line 67 
                                       tmp_0 = 1;
  #line 67 
  __VERIFIER_assume(tmp_0);
  #line 68 
  return res;
}

#line 71  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xzalloc(size_t size)
{
  #line 73 
  void *res;
  #line 75 
  int tmp_0;
  #line 74 
  res = ldv_reference_xzalloc(size);
  #line 75 
  if (ldv_is_err(res)) 
                       #line 75 
                       tmp_0 = 0; else 
                                       #line 75 
                                       tmp_0 = 1;
  #line 75 
  __VERIFIER_assume(tmp_0);
  #line 76 
  return res;
}

#line 79  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc_unknown_size(void)
{
  #line 81 
  void *res;
  #line 82 
  res = ldv_reference_malloc_unknown_size();
  #line 83 
  if (res != (void *)0) {
    #line 84 
    int tmp_0;
    #line 84 
    if (ldv_is_err(res)) 
                         #line 84 
                         tmp_0 = 0; else 
                                         #line 84 
                                         tmp_0 = 1;
    #line 84 
    __VERIFIER_assume(tmp_0);
  }
  #line 85 
  return res;
}

#line 88  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc_unknown_size(void)
{
  #line 90 
  void *res;
  #line 91 
  res = ldv_reference_calloc_unknown_size();
  #line 92 
  if (res != (void *)0) {
    #line 93 
    int tmp_0;
    #line 93 
    if (ldv_is_err(res)) 
                         #line 93 
                         tmp_0 = 0; else 
                                         #line 93 
                                         tmp_0 = 1;
    #line 93 
    __VERIFIER_assume(tmp_0);
  }
  #line 94 
  return res;
}

#line 97  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc_unknown_size(void)
{
  #line 99 
  void *res;
  #line 100 
  res = ldv_reference_zalloc_unknown_size();
  #line 101 
  if (res != (void *)0) {
    #line 102 
    int tmp_0;
    #line 102 
    if (ldv_is_err(res)) 
                         #line 102 
                         tmp_0 = 0; else 
                                         #line 102 
                                         tmp_0 = 1;
    #line 102 
    __VERIFIER_assume(tmp_0);
  }
  #line 103 
  return res;
}

#line 106  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc_unknown_size(size_t size)
{
  #line 108 
  void *res;
  #line 110 
  int tmp_0;
  #line 109 
  res = ldv_reference_xmalloc_unknown_size(size);
  #line 110 
  if (ldv_is_err(res)) 
                       #line 110 
                       tmp_0 = 0; else 
                                       #line 110 
                                       tmp_0 = 1;
  #line 110 
  __VERIFIER_assume(tmp_0);
  #line 111 
  return res;
}

/* compiler builtin: 
   long __builtin_expect(long exp, long c);   */
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/common.h"
#line 22 
void __VERIFIER_error(void);
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/common.h"
long __builtin_expect(long exp, long c)
{
  #line 26 
  return exp;
}

#line 35  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/gcc.c"
void __builtin_trap(void)
{
  #line 37 
  __VERIFIER_error();
  #line 38 
  return;
}

#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 53  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
long ldv_undef_long(void);
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 61  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned int ldv_undef_uint(void);
#line 26  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 77  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long ldv_undef_ulong(void);
#line 27  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 85  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long long ldv_undef_ulonglong(void);
#line 28  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 69  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr(void);
#line 37  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 111  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_nonnegative(void);
#line 43  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 129  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr_non_null(void);
#line 54  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 139  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int __ldv_undef_int_range(int begin, int end);
#line 56  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 151  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int __ldv_undef_int_range2(int begin, int end);
#line 29 
#line 29 
int __VERIFIER_nondet_int(void);
#line 31 
#line 31 
long __VERIFIER_nondet_long(void);
#line 38 
#line 38 
unsigned int __VERIFIER_nondet_uint(void);
#line 41 
#line 41 
unsigned long __VERIFIER_nondet_ulong(void);
#line 42 
#line 42 
unsigned long long __VERIFIER_nondet_ulonglong(void);
#line 43 
#line 43 
void *__VERIFIER_nondet_pointer(void);
#line 45  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int(void)
{
  #line 48 
  int undef_int = __VERIFIER_nondet_int();
  #line 50 
  return undef_int;
}

#line 53  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
long ldv_undef_long(void)
{
  #line 56 
  long undef_long = __VERIFIER_nondet_long();
  #line 58 
  return undef_long;
}

#line 61  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned int ldv_undef_uint(void)
{
  #line 64 
  unsigned int undef_uint = __VERIFIER_nondet_uint();
  #line 66 
  return undef_uint;
}

#line 69  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr(void)
{
  #line 72 
  void *undef_ptr = __VERIFIER_nondet_pointer();
  #line 74 
  return undef_ptr;
}

#line 77  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long ldv_undef_ulong(void)
{
  #line 80 
  unsigned long undef_ulong = __VERIFIER_nondet_ulong();
  #line 82 
  return undef_ulong;
}

#line 85  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long long ldv_undef_ulonglong(void)
{
  #line 88 
  unsigned long long undef_ulonglong = __VERIFIER_nondet_ulonglong();
  #line 90 
  return undef_ulonglong;
}

#line 93  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_positive(void)
{
  #line 95 
  int ret = ldv_undef_int();
  #line 97 
  __VERIFIER_assume(ret > 0);
  #line 99 
  return ret;
}

#line 102  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_negative(void)
{
  #line 104 
  int ret = ldv_undef_int();
  #line 106 
  __VERIFIER_assume(ret < 0);
  #line 108 
  return ret;
}

#line 111  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_nonnegative(void)
{
  #line 113 
  int ret = ldv_undef_int();
  #line 115 
  __VERIFIER_assume(ret >= 0);
  #line 117 
  return ret;
}

#line 120  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_nonpositive(void)
{
  #line 122 
  int ret = ldv_undef_int();
  #line 124 
  __VERIFIER_assume(ret <= 0);
  #line 126 
  return ret;
}

#line 129  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr_non_null(void)
{
  #line 131 
  void *ret = ldv_undef_ptr();
  #line 133 
  __VERIFIER_assume(ret != (void *)0);
  #line 135 
  return ret;
}

#line 139  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int __ldv_undef_int_range(int begin, int end)
{
  #line 141 
  int ret;
  #line 143 
  ret = ldv_undef_int();
  #line 144 
  __VERIFIER_assume(ret >= begin);
  #line 145 
  __VERIFIER_assume(ret <= end);
  #line 147 
  return ret;
}

#line 151  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int __ldv_undef_int_range2(int begin, int end)
{
  #line 153 
  int ret;
  #line 155 
  ret = begin;
  #line 155 
  while (ret < end) {
    #line 156 
    if (ldv_undef_int() != 0) 
                              #line 157 
                              break;
    #line 155 
    ret ++;
  }
  #line 159 
  return ret;
}

#line 62  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 62 
void ldv_initialize(void);
#line 87 
#line 87 
void ldv_failed_usb_register_driver(void);
#line 123 
#line 123 
void ldv_pre_probe(void);
#line 35  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/thread.h"
#line 35 
int pthread_create(pthread_t *, pthread_attr_t *, void *(*)(void *), void *);
#line 39 
#line 39 
int pthread_join(pthread_t, void **);
#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rtnetlink.h"
#line 33 
void rtnl_lock(void);
#line 34 
#line 34 
void rtnl_unlock(void);
#line 52  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.ko/concurrency safety/emg/0/environment_model.c"
#line 86 
void emg_dispatch_deregister_3(struct ieee80211_hw *arg0);
#line 53 
#line 95 
void emg_dispatch_deregister_6(struct usb_driver *arg0);
#line 54 
#line 75 
void emg_dispatch_register_2(struct ieee80211_hw *arg0);
#line 55 
#line 104 
void emg_dispatch_register_7(struct usb_driver *arg0);
#line 56 
#line 843 
void *emg_entry_point_insmod(void *arg0);
#line 59 
#line 115 
void *emg_ieee80211_ieee80211_scenario_rtl8xxxu_ops(void *arg0);
#line 66 
#line 470 
void *emg_usb_usb_scenario_rtl8xxxu_driver(void *arg0);
#line 67 
#line 872 
int main(void);
#line 70  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.ko/concurrency safety/emg/0/environment_model.c"
pthread_t emg_thread_10;
#line 71  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.ko/concurrency safety/emg/0/environment_model.c"
pthread_t emg_thread_11;
#line 75  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.ko/concurrency safety/emg/0/environment_model.c"
void emg_dispatch_register_2(struct ieee80211_hw *arg0)
{
  #line 76 
  int ret;
  #line 77 
  struct emg_struct_ieee80211_scenario_rtl8xxxu_ops_10 *cf_arg_10;
  #line 78 
  cf_arg_10 = (struct emg_struct_ieee80211_scenario_rtl8xxxu_ops_10 *)ldv_xmalloc(16UL);
  #line 79 
  cf_arg_10->arg0 = arg0;
  #line 80 
  ret = pthread_create(& emg_thread_10,(pthread_attr_t *)0,& emg_ieee80211_ieee80211_scenario_rtl8xxxu_ops,(void *)cf_arg_10);
  #line 81 
  __VERIFIER_assume(ret == 0);
  #line 82 
  return;
}

#line 86  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.ko/concurrency safety/emg/0/environment_model.c"
void emg_dispatch_deregister_3(struct ieee80211_hw *arg0)
{
  #line 87 
  int ret;
  #line 88 
  struct emg_struct_ieee80211_scenario_rtl8xxxu_ops_10 *cf_arg_10;
  #line 89 
  ret = pthread_join(emg_thread_10,(void **)0);
  #line 90 
  __VERIFIER_assume(ret == 0);
  #line 91 
  return;
}

#line 95  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.ko/concurrency safety/emg/0/environment_model.c"
void emg_dispatch_deregister_6(struct usb_driver *arg0)
{
  #line 96 
  int ret;
  #line 97 
  struct emg_struct_usb_scenario_rtl8xxxu_driver_11 *cf_arg_11;
  #line 98 
  ret = pthread_join(emg_thread_11,(void **)0);
  #line 99 
  __VERIFIER_assume(ret == 0);
  #line 100 
  return;
}

#line 104  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.ko/concurrency safety/emg/0/environment_model.c"
void emg_dispatch_register_7(struct usb_driver *arg0)
{
  #line 105 
  int ret;
  #line 106 
  struct emg_struct_usb_scenario_rtl8xxxu_driver_11 *cf_arg_11;
  #line 107 
  cf_arg_11 = (struct emg_struct_usb_scenario_rtl8xxxu_driver_11 *)ldv_xmalloc(16UL);
  #line 108 
  cf_arg_11->arg0 = arg0;
  #line 109 
  ret = pthread_create(& emg_thread_11,(pthread_attr_t *)0,& emg_usb_usb_scenario_rtl8xxxu_driver,(void *)cf_arg_11);
  #line 110 
  __VERIFIER_assume(ret == 0);
  #line 111 
  return;
}

#line 115  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.ko/concurrency safety/emg/0/environment_model.c"
void *emg_ieee80211_ieee80211_scenario_rtl8xxxu_ops(void *arg0)
{
  #line 118 
  struct ieee80211_ops *emg_10_container;
  #line 119 
  struct ieee80211_vif *emg_10_emg_param_1_0;
  #line 120 
  struct ieee80211_vif *emg_10_emg_param_1_1;
  #line 121 
  unsigned int emg_10_emg_param_1_10;
  #line 122 
  struct ieee80211_vif *emg_10_emg_param_1_13;
  #line 123 
  enum set_key_cmd *emg_10_emg_param_1_14;
  #line 124 
  unsigned int emg_10_emg_param_1_18;
  #line 125 
  struct ieee80211_vif *emg_10_emg_param_1_19;
  #line 126 
  struct ieee80211_vif *emg_10_emg_param_1_20;
  #line 127 
  struct ieee80211_tx_control *emg_10_emg_param_1_22;
  #line 128 
  struct cfg80211_wowlan *emg_10_emg_param_1_24;
  #line 129 
  struct ieee80211_vif *emg_10_emg_param_1_3;
  #line 130 
  struct ieee80211_vif *emg_10_emg_param_1_6;
  #line 131 
  unsigned int emg_10_emg_param_1_9;
  #line 132 
  unsigned int *emg_10_emg_param_2_11;
  #line 133 
  struct ieee80211_vif *emg_10_emg_param_2_15;
  #line 134 
  struct ieee80211_ampdu_params *emg_10_emg_param_2_2;
  #line 135 
  unsigned char *emg_10_emg_param_2_21;
  #line 136 
  struct sk_buff *emg_10_emg_param_2_23;
  #line 137 
  struct ieee80211_bss_conf *emg_10_emg_param_2_4;
  #line 138 
  unsigned short emg_10_emg_param_2_7;
  #line 139 
  unsigned long long emg_10_emg_param_3_12;
  #line 140 
  struct ieee80211_sta *emg_10_emg_param_3_16;
  #line 141 
  unsigned int emg_10_emg_param_3_5;
  #line 142 
  struct ieee80211_tx_queue_params *emg_10_emg_param_3_8;
  #line 143 
  struct ieee80211_key_conf *emg_10_emg_param_4_17;
  #line 144 
  struct ieee80211_hw *emg_10_resource;
  #line 145 
  int emg_10_ret;
  #line 146 
  int emg_repeat_cnt_main_10_1 = 1;
  #line 147 
  int emg_repeat_cnt_main_10_0 = 1;
  #line 148 
  int emg_repeat_cnt_started_10_1 = 1;
  #line 149 
  int emg_repeat_cnt_started_10_0 = 1;
  #line 151 
  struct emg_struct_ieee80211_scenario_rtl8xxxu_ops_10 *data = (struct emg_struct_ieee80211_scenario_rtl8xxxu_ops_10 *)arg0;
  #line 155 
  emg_10_ret = ldv_undef_int();
  #line 156 
  emg_10_container = emg_alias_rtl8xxxu_ops;
  #line 157 
  emg_10_ret = ldv_undef_int();
  #line 160 
  if (data != (struct emg_struct_ieee80211_scenario_rtl8xxxu_ops_10 *)0) {
    #line 161 
    emg_10_resource = data->arg0;
    #line 162 
    ldv_free((void *)data);
  }
  #line 167 
  goto emg_main_10;
  #line 171 
  return (void *)0;
  #line 174 
  emg_main_10: 
               #line 174 
  ;
  #line 175 
  if (ldv_undef_int() != 0) {
    #line 178 
    rtnl_lock();
    #line 182 
    emg_10_ret = emg_wrapper_rtl8xxxu_start(emg_10_resource);
    #line 187 
    emg_10_ret = ldv_filter_err_code(emg_10_ret);
    #line 188 
    rtnl_unlock();
    #line 191 
    if (ldv_undef_int() != 0) {
      #line 193 
      __VERIFIER_assume(emg_10_ret == 0);
      #line 197 
      goto emg_started_10;
    }
    else 
         #line 202 
         __VERIFIER_assume(emg_10_ret != 0);
    #line 206 
    if (emg_repeat_cnt_main_10_0 > 0) {
      #line 207 
      emg_repeat_cnt_main_10_0 --;
      #line 209 
      goto emg_main_10;
    }
    else 
         #line 211 
         __VERIFIER_assume(0);
  }
  #line 221 
  return (void *)0;
  #line 224 
  emg_started_10: 
                  #line 224 
  ;
  #line 225 
  switch (ldv_undef_int()) {
    #line 226 
    case 0: 
            #line 226 
    ;
    #line 228 
    emg_10_emg_param_1_22 = (struct ieee80211_tx_control *)ldv_xmalloc_unknown_size(0UL);
    #line 228 
    emg_10_emg_param_1_22 = emg_10_emg_param_1_22;
    #line 229 
    emg_10_emg_param_2_23 = (struct sk_buff *)ldv_xmalloc_unknown_size(0UL);
    #line 229 
    emg_10_emg_param_2_23 = emg_10_emg_param_2_23;
    #line 233 
    emg_wrapper_rtl8xxxu_tx(emg_10_resource,emg_10_emg_param_1_22,emg_10_emg_param_2_23);
    #line 237 
    ldv_free((void *)emg_10_emg_param_1_22);
    #line 238 
    ldv_free((void *)emg_10_emg_param_2_23);
    #line 240 
    break;
    #line 242 
    case 1: 
            #line 242 
    ;
    #line 244 
    emg_10_emg_param_1_20 = (struct ieee80211_vif *)ldv_xmalloc_unknown_size(0UL);
    #line 244 
    emg_10_emg_param_1_20 = emg_10_emg_param_1_20;
    #line 245 
    emg_10_emg_param_2_21 = (unsigned char *)ldv_xmalloc_unknown_size(0UL);
    #line 245 
    emg_10_emg_param_2_21 = emg_10_emg_param_2_21;
    #line 249 
    emg_wrapper_rtl8xxxu_sw_scan_start(emg_10_resource,emg_10_emg_param_1_20,emg_10_emg_param_2_21);
    #line 253 
    ldv_free((void *)emg_10_emg_param_1_20);
    #line 254 
    ldv_free((void *)emg_10_emg_param_2_21);
    #line 256 
    break;
    #line 258 
    case 2: 
            #line 258 
    ;
    #line 260 
    emg_10_emg_param_1_19 = (struct ieee80211_vif *)ldv_xmalloc_unknown_size(0UL);
    #line 260 
    emg_10_emg_param_1_19 = emg_10_emg_param_1_19;
    #line 264 
    emg_wrapper_rtl8xxxu_sw_scan_complete(emg_10_resource,emg_10_emg_param_1_19);
    #line 268 
    ldv_free((void *)emg_10_emg_param_1_19);
    #line 270 
    break;
    #line 272 
    case 3: 
            #line 272 
    ;
    #line 274 
    emg_wrapper_rtl8xxxu_set_rts_threshold(emg_10_resource,emg_10_emg_param_1_18);
    #line 276 
    break;
    #line 278 
    case 4: 
            #line 278 
    ;
    #line 280 
    emg_10_emg_param_1_14 = (enum set_key_cmd *)ldv_xmalloc_unknown_size(0UL);
    #line 280 
    emg_10_emg_param_1_14 = emg_10_emg_param_1_14;
    #line 281 
    emg_10_emg_param_2_15 = (struct ieee80211_vif *)ldv_xmalloc_unknown_size(0UL);
    #line 281 
    emg_10_emg_param_2_15 = emg_10_emg_param_2_15;
    #line 282 
    emg_10_emg_param_3_16 = (struct ieee80211_sta *)ldv_xmalloc_unknown_size(0UL);
    #line 282 
    emg_10_emg_param_3_16 = emg_10_emg_param_3_16;
    #line 283 
    emg_10_emg_param_4_17 = (struct ieee80211_key_conf *)ldv_xmalloc_unknown_size(0UL);
    #line 283 
    emg_10_emg_param_4_17 = emg_10_emg_param_4_17;
    #line 287 
    emg_wrapper_rtl8xxxu_set_key(emg_10_resource,*emg_10_emg_param_1_14,emg_10_emg_param_2_15,emg_10_emg_param_3_16,emg_10_emg_param_4_17);
    #line 291 
    ldv_free((void *)emg_10_emg_param_1_14);
    #line 292 
    ldv_free((void *)emg_10_emg_param_2_15);
    #line 293 
    ldv_free((void *)emg_10_emg_param_3_16);
    #line 294 
    ldv_free((void *)emg_10_emg_param_4_17);
    #line 296 
    break;
    #line 298 
    case 5: 
            #line 298 
    ;
    #line 300 
    emg_10_emg_param_1_13 = (struct ieee80211_vif *)ldv_xmalloc_unknown_size(0UL);
    #line 300 
    emg_10_emg_param_1_13 = emg_10_emg_param_1_13;
    #line 304 
    emg_wrapper_rtl8xxxu_remove_interface(emg_10_resource,emg_10_emg_param_1_13);
    #line 308 
    ldv_free((void *)emg_10_emg_param_1_13);
    #line 310 
    break;
    #line 312 
    case 6: 
            #line 312 
    ;
    #line 314 
    emg_10_emg_param_2_11 = (unsigned int *)ldv_xmalloc_unknown_size(0UL);
    #line 314 
    emg_10_emg_param_2_11 = emg_10_emg_param_2_11;
    #line 318 
    emg_wrapper_rtl8xxxu_configure_filter(emg_10_resource,emg_10_emg_param_1_10,emg_10_emg_param_2_11,emg_10_emg_param_3_12);
    #line 322 
    ldv_free((void *)emg_10_emg_param_2_11);
    #line 324 
    break;
    #line 326 
    case 7: 
            #line 326 
    ;
    #line 328 
    emg_wrapper_rtl8xxxu_config(emg_10_resource,emg_10_emg_param_1_9);
    #line 330 
    break;
    #line 332 
    case 8: 
            #line 332 
    ;
    #line 334 
    emg_10_emg_param_1_6 = (struct ieee80211_vif *)ldv_xmalloc_unknown_size(0UL);
    #line 334 
    emg_10_emg_param_1_6 = emg_10_emg_param_1_6;
    #line 335 
    emg_10_emg_param_3_8 = (struct ieee80211_tx_queue_params *)ldv_xmalloc_unknown_size(0UL);
    #line 335 
    emg_10_emg_param_3_8 = emg_10_emg_param_3_8;
    #line 339 
    emg_wrapper_rtl8xxxu_conf_tx(emg_10_resource,emg_10_emg_param_1_6,(unsigned short)((int)emg_10_emg_param_2_7),emg_10_emg_param_3_8);
    #line 343 
    ldv_free((void *)emg_10_emg_param_1_6);
    #line 344 
    ldv_free((void *)emg_10_emg_param_3_8);
    #line 346 
    break;
    #line 348 
    case 9: 
            #line 348 
    ;
    #line 350 
    emg_10_emg_param_1_3 = (struct ieee80211_vif *)ldv_xmalloc_unknown_size(0UL);
    #line 350 
    emg_10_emg_param_1_3 = emg_10_emg_param_1_3;
    #line 351 
    emg_10_emg_param_2_4 = (struct ieee80211_bss_conf *)ldv_xmalloc_unknown_size(0UL);
    #line 351 
    emg_10_emg_param_2_4 = emg_10_emg_param_2_4;
    #line 355 
    emg_wrapper_rtl8xxxu_bss_info_changed(emg_10_resource,emg_10_emg_param_1_3,emg_10_emg_param_2_4,emg_10_emg_param_3_5);
    #line 359 
    ldv_free((void *)emg_10_emg_param_1_3);
    #line 360 
    ldv_free((void *)emg_10_emg_param_2_4);
    #line 362 
    break;
    #line 364 
    case 10: 
             #line 364 
    ;
    #line 366 
    emg_10_emg_param_1_1 = (struct ieee80211_vif *)ldv_xmalloc_unknown_size(0UL);
    #line 366 
    emg_10_emg_param_1_1 = emg_10_emg_param_1_1;
    #line 367 
    emg_10_emg_param_2_2 = (struct ieee80211_ampdu_params *)ldv_xmalloc_unknown_size(0UL);
    #line 367 
    emg_10_emg_param_2_2 = emg_10_emg_param_2_2;
    #line 371 
    emg_wrapper_rtl8xxxu_ampdu_action(emg_10_resource,emg_10_emg_param_1_1,emg_10_emg_param_2_2);
    #line 375 
    ldv_free((void *)emg_10_emg_param_1_1);
    #line 376 
    ldv_free((void *)emg_10_emg_param_2_2);
    #line 378 
    break;
    #line 380 
    case 11: 
             #line 380 
    ;
    #line 382 
    emg_10_emg_param_1_24 = (struct cfg80211_wowlan *)ldv_xmalloc_unknown_size(0UL);
    #line 382 
    emg_10_emg_param_1_24 = emg_10_emg_param_1_24;
    #line 386 
    if (emg_10_container->suspend != (int (*)(struct ieee80211_hw *, struct cfg80211_wowlan *))0) 
      #line 387 
      (*(emg_10_container->suspend))(emg_10_resource,emg_10_emg_param_1_24);
    #line 392 
    ldv_free((void *)emg_10_emg_param_1_24);
    #line 396 
    if (emg_10_container->resume != (int (*)(struct ieee80211_hw *))0) 
      #line 397 
      (*(emg_10_container->resume))(emg_10_resource);
    #line 401 
    if (emg_repeat_cnt_started_10_1 > 0) {
      #line 402 
      emg_repeat_cnt_started_10_1 --;
      #line 404 
      goto emg_started_10;
    }
    else 
         #line 406 
         __VERIFIER_assume(0);
    #line 410 
    break;
    #line 412 
    case 12: 
             #line 412 
    ;
    #line 414 
    emg_10_emg_param_1_0 = (struct ieee80211_vif *)ldv_xmalloc_unknown_size(0UL);
    #line 414 
    emg_10_emg_param_1_0 = emg_10_emg_param_1_0;
    #line 418 
    emg_wrapper_rtl8xxxu_add_interface(emg_10_resource,emg_10_emg_param_1_0);
    #line 422 
    ldv_free((void *)emg_10_emg_param_1_0);
    #line 425 
    if (emg_repeat_cnt_started_10_0 > 0) {
      #line 426 
      emg_repeat_cnt_started_10_0 --;
      #line 428 
      goto emg_started_10;
    }
    else 
         #line 430 
         __VERIFIER_assume(0);
    #line 434 
    break;
    #line 436 
    case 13: 
             #line 436 
    ;
    #line 439 
    rtnl_lock();
    #line 443 
    emg_wrapper_rtl8xxxu_stop(emg_10_resource);
    #line 448 
    rtnl_unlock();
    #line 451 
    if (emg_repeat_cnt_main_10_1 > 0) {
      #line 452 
      emg_repeat_cnt_main_10_1 --;
      #line 454 
      goto emg_main_10;
    }
    else 
         #line 456 
         __VERIFIER_assume(0);
    #line 460 
    break;
    #line 462 
    default: 
             #line 462 
    ;
    #line 462 
    __VERIFIER_assume(0);
  }
  #line 465 
  return (void *)0;
}

#line 470  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.ko/concurrency safety/emg/0/environment_model.c"
void *emg_usb_usb_scenario_rtl8xxxu_driver(void *arg0)
{
  #line 473 
  int emg_11_choice;
  #line 474 
  struct usb_driver *emg_11_container;
  #line 475 
  struct usb_device_id *emg_11_device_id;
  #line 476 
  struct pm_message *emg_11_emg_param_1_0;
  #line 477 
  int emg_11_probe_retval;
  #line 478 
  struct usb_interface *emg_11_resource;
  #line 479 
  struct usb_device *emg_11_usb_device;
  #line 480 
  int emg_repeat_cnt_manage_interface_11 = 1;
  #line 482 
  struct emg_struct_usb_scenario_rtl8xxxu_driver_11 *data = (struct emg_struct_usb_scenario_rtl8xxxu_driver_11 *)arg0;
  #line 486 
  emg_11_choice = 0;
  #line 487 
  emg_11_probe_retval = ldv_undef_int();
  #line 488 
  emg_11_choice = 0;
  #line 489 
  emg_11_container = emg_alias_rtl8xxxu_driver;
  #line 490 
  emg_11_probe_retval = ldv_undef_int();
  #line 492 
  __VERIFIER_assume(data->arg0 == emg_alias_rtl8xxxu_driver);
  #line 494 
  if (data != (struct emg_struct_usb_scenario_rtl8xxxu_driver_11 *)0) {
    #line 495 
    emg_11_container = data->arg0;
    #line 496 
    ldv_free((void *)data);
  }
  #line 501 
  emg_11_resource = (struct usb_interface *)ldv_xmalloc(1704UL);
  #line 502 
  emg_11_usb_device = (struct usb_device *)ldv_xmalloc(2200UL);
  #line 503 
  emg_11_resource->dev.parent = & emg_11_usb_device->dev;
  #line 504 
  emg_11_choice = __ldv_undef_int_range(0,82);
  #line 505 
  emg_11_device_id = emg_11_container->id_table + (unsigned long)emg_11_choice;
  #line 509 
  goto emg_manage_interface_11;
  #line 513 
  return (void *)0;
  #line 516 
  emg_manage_interface_11: 
                           #line 516 
  ;
  #line 517 
  if (ldv_undef_int() != 0) {
    #line 520 
    ldv_pre_probe();
    #line 524 
    emg_11_probe_retval = emg_wrapper_rtl8xxxu_probe(emg_11_resource,emg_11_device_id);
    #line 529 
    emg_11_probe_retval = ldv_post_probe(emg_11_probe_retval);
    #line 532 
    if (ldv_undef_int() != 0) {
      #line 534 
      __VERIFIER_assume(emg_11_probe_retval == 0);
      #line 537 
      switch (ldv_undef_int()) {
        #line 538 
        case 0: 
                #line 538 
        ;
        #line 544 
        if (emg_11_container->pre_reset != (int (*)(struct usb_interface *))0) 
          #line 545 
          (*(emg_11_container->pre_reset))(emg_11_resource);
        #line 550 
        if (emg_11_container->post_reset != (int (*)(struct usb_interface *))0) 
          #line 551 
          (*(emg_11_container->post_reset))(emg_11_resource);
        #line 554 
        break;
        #line 556 
        case 1: 
                #line 556 
        ;
        #line 558 
        emg_11_emg_param_1_0 = (struct pm_message *)ldv_xmalloc_unknown_size(0UL);
        #line 558 
        emg_11_emg_param_1_0 = emg_11_emg_param_1_0;
        #line 562 
        if (emg_11_container->suspend != (int (*)(struct usb_interface *, pm_message_t ))0) 
          #line 563 
          (*(emg_11_container->suspend))(emg_11_resource,*emg_11_emg_param_1_0);
        #line 568 
        ldv_free((void *)emg_11_emg_param_1_0);
        #line 571 
        if (ldv_undef_int() != 0) {
          #line 573 
          if (emg_11_container->resume != (int (*)(struct usb_interface *))0) 
            #line 574 
            (*(emg_11_container->resume))(emg_11_resource);
        }
        else 
          #line 579 
          if (emg_11_container->reset_resume != (int (*)(struct usb_interface *))0) 
            #line 580 
            (*(emg_11_container->reset_resume))(emg_11_resource);
        #line 584 
        break;
        #line 586 
        case 2: 
                #line 586 
        ;
        #line 590 
        break;
        #line 592 
        case 3: 
                #line 592 
        ;
        #line 595 
        break;
        #line 597 
        default: 
                 #line 597 
        ;
        #line 597 
        __VERIFIER_assume(0);
      }
      #line 601 
      emg_wrapper_rtl8xxxu_disconnect(emg_11_resource);
    }
    else 
         #line 605 
         __VERIFIER_assume(emg_11_probe_retval != 0);
    #line 609 
    if (emg_repeat_cnt_manage_interface_11 > 0) {
      #line 610 
      emg_repeat_cnt_manage_interface_11 --;
      #line 612 
      goto emg_manage_interface_11;
    }
    else 
         #line 614 
         __VERIFIER_assume(0);
  }
  else {
    #line 620 
    ldv_free((void *)emg_11_resource);
    #line 621 
    ldv_free((void *)emg_11_usb_device);
  }
  #line 629 
  return (void *)0;
}

#line 634  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.ko/concurrency safety/emg/0/environment_model.c"
struct ieee80211_hw *emg_ieee80211_alloc_hw(unsigned long arg0, struct ieee80211_ops *arg1)
{
  #line 637 
  struct ieee80211_hw *emg_2_ieee80211_hw;
  #line 638 
  struct ieee80211_ops *emg_2_ieee80211_ops;
  #line 640 
  emg_2_ieee80211_ops = emg_alias_rtl8xxxu_ops;
  #line 641 
  if (ldv_undef_int() != 0) {
    #line 643 
    emg_2_ieee80211_ops = arg1;
    #line 644 
    emg_2_ieee80211_hw = (struct ieee80211_hw *)ldv_xmalloc(184UL);
    #line 648 
    emg_dispatch_register_2(emg_2_ieee80211_hw);
    #line 652 
    return emg_2_ieee80211_hw;
  }
  else 
       #line 656 
       return (struct ieee80211_hw *)0;
}

#line 664  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.ko/concurrency safety/emg/0/environment_model.c"
void emg_ieee80211_free_hw(struct ieee80211_hw *arg0)
{
  #line 667 
  struct ieee80211_hw *emg_3_ieee80211_hw;
  #line 670 
  emg_dispatch_deregister_3(emg_3_ieee80211_hw);
  #line 674 
  ldv_free((void *)emg_3_ieee80211_hw);
  #line 677 
  return;
}

#line 682  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.ko/concurrency safety/emg/0/environment_model.c"
_Bool emg_schedule_delayed_work(struct delayed_work *arg0, unsigned long arg1)
{
  #line 685 
  struct delayed_work *emg_4_delayed_work;
  #line 686 
  struct work_struct *emg_4_emg_param_0_0;
  #line 688 
  if (ldv_undef_int() != 0) {
    #line 690 
    emg_4_delayed_work = arg0;
    #line 694 
    emg_4_emg_param_0_0 = (struct work_struct *)ldv_xmalloc_unknown_size(0UL);
    #line 694 
    emg_4_emg_param_0_0 = emg_4_emg_param_0_0;
    #line 698 
    if (emg_4_delayed_work->work.func != (void (*)(struct work_struct *))0) 
      #line 699 
      (*(emg_4_delayed_work->work.func))(emg_4_emg_param_0_0);
    #line 704 
    ldv_free((void *)emg_4_emg_param_0_0);
    #line 708 
    return (_Bool)1;
  }
  else 
       #line 712 
       return (_Bool)0;
}

#line 720  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.ko/concurrency safety/emg/0/environment_model.c"
_Bool emg_schedule_work(struct work_struct *arg0)
{
  #line 723 
  struct work_struct *emg_5_work_struct;
  #line 725 
  if (ldv_undef_int() != 0) {
    #line 727 
    emg_5_work_struct = arg0;
    #line 731 
    if (emg_5_work_struct->func != (void (*)(struct work_struct *))0) 
      #line 732 
      (*(emg_5_work_struct->func))(emg_5_work_struct);
    #line 737 
    return (_Bool)1;
  }
  else 
       #line 741 
       return (_Bool)0;
}

#line 749  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.ko/concurrency safety/emg/0/environment_model.c"
void emg_usb_deregister(struct usb_driver *arg0)
{
  #line 752 
  struct usb_driver *emg_6_usb_driver;
  #line 754 
  emg_6_usb_driver = emg_alias_rtl8xxxu_driver;
  #line 756 
  emg_6_usb_driver = arg0;
  #line 760 
  emg_dispatch_deregister_6(emg_6_usb_driver);
  #line 763 
  return;
}

#line 768  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.ko/concurrency safety/emg/0/environment_model.c"
int emg_usb_register_driver(struct usb_driver *arg0, struct module *arg1, char *arg2)
{
  #line 771 
  struct usb_driver *emg_7_usb_driver;
  #line 773 
  emg_7_usb_driver = emg_alias_rtl8xxxu_driver;
  #line 774 
  if (ldv_undef_int() != 0) {
    #line 776 
    emg_7_usb_driver = arg0;
    #line 780 
    emg_dispatch_register_7(emg_7_usb_driver);
    #line 784 
    return 0;
  }
  else {
    #line 788 
    ldv_failed_usb_register_driver();
    #line 789 
    return ldv_undef_int_negative();
  }
}

#line 797  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.ko/concurrency safety/emg/0/environment_model.c"
int emg_usb_reset_device(struct usb_device *arg0)
{
  #line 806 
  return 0;
}

#line 813  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.ko/concurrency safety/emg/0/environment_model.c"
int emg_usb_submit_urb(struct urb *arg0, unsigned int arg1)
{
  #line 816 
  struct urb *emg_9_urb;
  #line 818 
  if (ldv_undef_int() != 0) {
    #line 820 
    emg_9_urb = arg0;
    #line 821 
    ldv_check_alloc_flags(arg1);
    #line 825 
    if (emg_9_urb->complete != (void (*)(struct urb *))0) 
                                                          #line 826 
                                                          (*(emg_9_urb->complete))(emg_9_urb);
    #line 831 
    return (int)((long)ldv_malloc_unknown_size());
  }
  else 
       #line 835 
       return 0;
}

#line 843  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.ko/concurrency safety/emg/0/environment_model.c"
void *emg_entry_point_insmod(void *arg0)
{
  #line 846 
  int emg_1_ret;
  #line 849 
  emg_1_ret = emg_rtl8xxxu_module_init();
  #line 850 
  emg_1_ret = ldv_post_init(emg_1_ret);
  #line 853 
  if (ldv_undef_int() != 0) {
    #line 855 
    __VERIFIER_assume(emg_1_ret == 0);
    #line 859 
    emg_rtl8xxxu_module_exit();
  }
  else 
       #line 863 
       __VERIFIER_assume(emg_1_ret != 0);
  #line 867 
  return (void *)0;
}

#line 872  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu.ko/concurrency safety/emg/0/environment_model.c"
int main(void)
{
  #line 874 
  ldv_initialize();
  #line 876 
  emg_entry_point_insmod((void *)0);
  #line 878 
  return 0;
}

