/* Generated by Frama-C */
#line 106  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/compiler_types.h"
typedef signed char __s8;
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/int-ll64.h"
typedef unsigned char __u8;
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/int-ll64.h"
typedef short __s16;
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/int-ll64.h"
typedef unsigned short __u16;
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/int-ll64.h"
typedef int __s32;
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/int-ll64.h"
typedef unsigned int __u32;
#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/int-ll64.h"
typedef long long __s64;
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/int-ll64.h"
typedef unsigned long long __u64;
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/int-ll64.h"
typedef __s8 s8;
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/int-ll64.h"
typedef __u8 u8;
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/int-ll64.h"
typedef __s16 s16;
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/int-ll64.h"
typedef __u16 u16;
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/int-ll64.h"
typedef __s32 s32;
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/int-ll64.h"
typedef __u32 u32;
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/int-ll64.h"
typedef __s64 s64;
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/int-ll64.h"
typedef __u64 u64;
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/uapi/asm/posix_types_64.h"
typedef long __kernel_long_t;
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef unsigned long __kernel_ulong_t;
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_pid_t;
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_uid32_t;
#line 50  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_gid32_t;
#line 51  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef __kernel_ulong_t __kernel_size_t;
#line 73  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_ssize_t;
#line 88  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef long long __kernel_loff_t;
#line 91  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef long long __kernel_time64_t;
#line 92  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_clock_t;
#line 93  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_timer_t;
#line 94  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_clockid_t;
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef __u16 __le16;
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/types.h"
typedef __u16 __be16;
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/types.h"
typedef __u32 __le32;
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/types.h"
typedef __u32 __be32;
#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/types.h"
typedef __u64 __le64;
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/types.h"
typedef __u64 __be64;
#line 37  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/types.h"
typedef __u32 __wsum;
#line 38  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/types.h"
typedef unsigned int __poll_t;
#line 53  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/types.h"
typedef u32 __kernel_dev_t;
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef __kernel_dev_t dev_t;
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef unsigned short umode_t;
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef __kernel_pid_t pid_t;
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef __kernel_clockid_t clockid_t;
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef _Bool bool;
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef __kernel_uid32_t uid_t;
#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef __kernel_gid32_t gid_t;
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef __kernel_loff_t loff_t;
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef __kernel_size_t size_t;
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef __kernel_ssize_t ssize_t;
#line 101  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef s16 int16_t;
#line 103  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef s32 int32_t;
#line 109  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef u32 uint32_t;
#line 115  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef u64 sector_t;
#line 131  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef u64 blkcnt_t;
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef u64 dma_addr_t;
#line 149  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef unsigned int gfp_t;
#line 154  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef unsigned int slab_flags_t;
#line 155  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef unsigned int fmode_t;
#line 156  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef u64 phys_addr_t;
#line 159  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef phys_addr_t resource_size_t;
#line 170  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
struct __anonstruct_atomic_t_6 {
   int counter ;
};
#line 170  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef struct __anonstruct_atomic_t_6 atomic_t;
#line 174  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
struct __anonstruct_atomic64_t_7 {
   s64 counter ;
};
#line 174  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef struct __anonstruct_atomic64_t_7 atomic64_t;
#line 181  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
struct list_head {
   struct list_head *next ;
   struct list_head *prev ;
};
#line 185 
struct hlist_node;
#line 185  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
struct hlist_head {
   struct hlist_node *first ;
};
#line 189  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
struct hlist_node {
   struct hlist_node *next ;
   struct hlist_node **pprev ;
};
#line 219  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
struct callback_head {
   struct callback_head *next ;
   void (*func)(struct callback_head *) ;
} __attribute__((__aligned__(8)));
#line 14  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/usb.i.aux"
struct task_struct;
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/export.h"
struct module;
#line 60  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/export.h"
struct kernel_symbol {
   int value_offset ;
   int name_offset ;
   int namespace_offset ;
};
#line 136  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/init.h"
typedef void (*ctor_fn_t)(void);
#line 139 
struct file_system_type;
#line 83  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/printk.h"
struct ctl_table;
#line 87  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jump_label.h"
struct jump_entry;
#line 87 
struct static_key_mod;
#line 87  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jump_label.h"
union __anonunion_8 {
   unsigned long type ;
   struct jump_entry *entries ;
   struct static_key_mod *next ;
};
#line 87  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jump_label.h"
struct static_key {
   atomic_t enabled ;
   union __anonunion_8 __anonCompField_static_key_4 ;
};
#line 122  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jump_label.h"
struct jump_entry {
   s32 code ;
   s32 target ;
   long key ;
};
#line 346  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jump_label.h"
struct static_key_true {
   struct static_key key ;
};
#line 350  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jump_label.h"
struct static_key_false {
   struct static_key key ;
};
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dynamic_debug.h"
union __anonunion_key_9 {
   struct static_key_true dd_key_true ;
   struct static_key_false dd_key_false ;
};
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dynamic_debug.h"
struct _ddebug {
   char *modname ;
   char *function ;
   char *filename ;
   char *format ;
   unsigned int lineno : 18 ;
   unsigned int flags : 8 ;
   union __anonunion_key_9 key ;
} __attribute__((__aligned__(8)));
#line 59 
struct device;
#line 65 
struct net_device;
#line 476  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/printk.h"
struct file_operations;
#line 87  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/div64.h"
struct completion;
#line 88 
struct pt_regs;
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/bug.h"
struct bug_entry {
   int bug_addr_disp ;
   int file_disp ;
   unsigned short line ;
   unsigned short flags ;
};
#line 188  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/math64.h"
typedef __s64 time64_t;
#line 7  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/time_types.h"
struct __kernel_timespec {
   __kernel_time64_t tv_sec ;
   long long tv_nsec ;
};
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/time64.h"
struct timespec64 {
   time64_t tv_sec ;
   long tv_nsec ;
};
#line 165 
struct old_timespec32;
#line 166 
struct pollfd;
#line 167 
enum timespec_type {
    TT_NONE = 0,
    TT_NATIVE = 1,
    TT_COMPAT = 2
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/restart_block.h"
struct __anonstruct_futex_27 {
   u32 *uaddr ;
   u32 val ;
   u32 flags ;
   u32 bitset ;
   u64 time ;
   u32 *uaddr2 ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/restart_block.h"
union __anonunion_29 {
   struct __kernel_timespec *rmtp ;
   struct old_timespec32 *compat_rmtp ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/restart_block.h"
struct __anonstruct_nanosleep_28 {
   clockid_t clockid ;
   enum timespec_type type ;
   union __anonunion_29 __anonCompField___anonstruct_nanosleep_28_5 ;
   u64 expires ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/restart_block.h"
struct __anonstruct_poll_30 {
   struct pollfd *ufds ;
   int nfds ;
   int has_timeout ;
   unsigned long tv_sec ;
   unsigned long tv_nsec ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/restart_block.h"
union __anonunion_26 {
   struct __anonstruct_futex_27 futex ;
   struct __anonstruct_nanosleep_28 nanosleep ;
   struct __anonstruct_poll_30 poll ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/restart_block.h"
struct restart_block {
   long (*fn)(struct restart_block *) ;
   union __anonunion_26 __anonCompField_restart_block_6 ;
};
#line 58  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/page_64.h"
struct page;
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/getorder.h"
struct mm_struct;
#line 49 
struct io_bitmap;
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/ptrace.h"
struct pt_regs {
   unsigned long r15 ;
   unsigned long r14 ;
   unsigned long r13 ;
   unsigned long r12 ;
   unsigned long bp ;
   unsigned long bx ;
   unsigned long r11 ;
   unsigned long r10 ;
   unsigned long r9 ;
   unsigned long r8 ;
   unsigned long ax ;
   unsigned long cx ;
   unsigned long dx ;
   unsigned long si ;
   unsigned long di ;
   unsigned long orig_ax ;
   unsigned long ip ;
   unsigned long cs ;
   unsigned long flags ;
   unsigned long sp ;
   unsigned long ss ;
};
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/desc_defs.h"
struct desc_struct {
   u16 limit0 ;
   u16 base0 ;
   u16 base1 : 8 ;
   u16 type : 4 ;
   u16 s : 1 ;
   u16 dpl : 2 ;
   u16 p : 1 ;
   u16 limit1 : 4 ;
   u16 avl : 1 ;
   u16 l : 1 ;
   u16 d : 1 ;
   u16 g : 1 ;
   u16 base2 : 8 ;
} __attribute__((__packed__));
#line 119  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/desc_defs.h"
typedef unsigned long pteval_t;
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pmdval_t;
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pudval_t;
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgdval_t;
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgprotval_t;
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_64_types.h"
struct __anonstruct_pte_t_53 {
   pteval_t pte ;
};
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_64_types.h"
typedef struct __anonstruct_pte_t_53 pte_t;
#line 265  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
struct pgprot {
   pgprotval_t pgprot ;
};
#line 267  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
typedef struct pgprot pgprot_t;
#line 266  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
struct __anonstruct_pgd_t_54 {
   pgdval_t pgd ;
};
#line 266  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
typedef struct __anonstruct_pgd_t_54 pgd_t;
#line 319  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
struct __anonstruct_pud_t_56 {
   pudval_t pud ;
};
#line 319  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
typedef struct __anonstruct_pud_t_56 pud_t;
#line 345  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
struct __anonstruct_pmd_t_57 {
   pmdval_t pmd ;
};
#line 345  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
typedef struct __anonstruct_pmd_t_57 pmd_t;
#line 505  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
typedef struct page *pgtable_t;
#line 519 
struct file;
#line 530 
struct seq_file;
#line 360  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/nospec-branch.h"
struct thread_struct;
#line 362 
struct cpumask;
#line 365 
struct vm_area_struct;
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qspinlock_types.h"
struct __anonstruct_59 {
   u8 locked ;
   u8 pending ;
};
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qspinlock_types.h"
struct __anonstruct_60 {
   u16 locked_pending ;
   u16 tail ;
};
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qspinlock_types.h"
union __anonunion_58 {
   atomic_t val ;
   struct __anonstruct_59 __anonCompField___anonunion_58_7 ;
   struct __anonstruct_60 __anonCompField___anonunion_58_8 ;
};
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qspinlock_types.h"
struct qspinlock {
   union __anonunion_58 __anonCompField_qspinlock_9 ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qspinlock_types.h"
typedef struct qspinlock arch_spinlock_t;
#line 13  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qrwlock_types.h"
struct __anonstruct_62 {
   u8 wlocked ;
   u8 __lstate[3U] ;
};
#line 13  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qrwlock_types.h"
union __anonunion_61 {
   atomic_t cnts ;
   struct __anonstruct_62 __anonCompField___anonunion_61_10 ;
};
#line 13  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qrwlock_types.h"
struct qrwlock {
   union __anonunion_61 __anonCompField_qrwlock_11 ;
   arch_spinlock_t wait_lock ;
};
#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qrwlock_types.h"
typedef struct qrwlock arch_rwlock_t;
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/math_emu.h"
struct math_emu_info {
   long ___orig_eip ;
   struct pt_regs *regs ;
};
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/atomic.h"
union __anonunion___u_67 {
   int __val ;
   char __c[1U] ;
};
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/atomic.h"
union __anonunion___u_69 {
   int __val ;
   char __c[1U] ;
};
#line 2288  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/atomic-fallback.h"
typedef atomic64_t atomic_long_t;
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cpumask.h"
struct cpumask {
   unsigned long bits[128U] ;
};
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cpumask.h"
typedef struct cpumask cpumask_t;
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/tracepoint-defs.h"
struct tracepoint_func {
   void *func ;
   void *data ;
   int prio ;
};
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/tracepoint-defs.h"
struct tracepoint {
   char *name ;
   struct static_key key ;
   int (*regfunc)(void) ;
   void (*unregfunc)(void) ;
   struct tracepoint_func *funcs ;
};
#line 37  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/tracepoint-defs.h"
typedef int tracepoint_ptr_t;
#line 44  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/tracepoint-defs.h"
struct bpf_raw_event_map {
   struct tracepoint *tp ;
   void *bpf_func ;
   u32 num_args ;
   u32 writable_size ;
} __attribute__((__aligned__(32)));
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
struct fregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u32 status ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_90 {
   u64 rip ;
   u64 rdp ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_91 {
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
union __anonunion_89 {
   struct __anonstruct_90 __anonCompField___anonunion_89_17 ;
   struct __anonstruct_91 __anonCompField___anonunion_89_18 ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
union __anonunion_92 {
   u32 padding1[12U] ;
   u32 sw_reserved[12U] ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
struct fxregs_state {
   u16 cwd ;
   u16 swd ;
   u16 twd ;
   u16 fop ;
   union __anonunion_89 __anonCompField_fxregs_state_19 ;
   u32 mxcsr ;
   u32 mxcsr_mask ;
   u32 st_space[32U] ;
   u32 xmm_space[64U] ;
   u32 padding[12U] ;
   union __anonunion_92 __anonCompField_fxregs_state_20 ;
} __attribute__((__aligned__(16)));
#line 79  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
struct swregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u8 ftop ;
   u8 changed ;
   u8 lookahead ;
   u8 no_update ;
   u8 rm ;
   u8 alimit ;
   struct math_emu_info *info ;
   u32 entry_eip ;
};
#line 232  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
struct xstate_header {
   u64 xfeatures ;
   u64 xcomp_bv ;
   u64 reserved[6U] ;
} __attribute__((__packed__));
#line 253  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
struct xregs_state {
   struct fxregs_state i387 ;
   struct xstate_header header ;
   u8 extended_state_area[0U] ;
} __attribute__((__packed__, __aligned__(64)));
#line 268  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
union fpregs_state {
   struct fregs_state fsave ;
   struct fxregs_state fxsave ;
   struct swregs_state soft ;
   struct xregs_state xsave ;
   u8 __padding[4096U] ;
};
#line 281  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
struct fpu {
   unsigned int last_cpu ;
   unsigned long avx512_timestamp ;
   union fpregs_state state ;
};
#line 73  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/orc_types.h"
struct orc_entry {
   s16 sp_offset ;
   s16 bp_offset ;
   unsigned int sp_reg : 4 ;
   unsigned int bp_reg : 4 ;
   unsigned int type : 2 ;
   unsigned int end : 1 ;
} __attribute__((__packed__));
#line 180  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/processor.h"
struct seq_operations;
#line 478 
struct perf_event;
#line 479  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/processor.h"
struct __anonstruct_mm_segment_t_95 {
   unsigned long seg ;
};
#line 479  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/processor.h"
typedef struct __anonstruct_mm_segment_t_95 mm_segment_t;
#line 485  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/processor.h"
struct thread_struct {
   struct desc_struct tls_array[3U] ;
   unsigned long sp ;
   unsigned short es ;
   unsigned short ds ;
   unsigned short fsindex ;
   unsigned short gsindex ;
   unsigned long fsbase ;
   unsigned long gsbase ;
   struct perf_event *ptrace_bps[4U] ;
   unsigned long debugreg6 ;
   unsigned long ptrace_dr7 ;
   unsigned long cr2 ;
   unsigned long trap_nr ;
   unsigned long error_code ;
   struct io_bitmap *io_bitmap ;
   unsigned long iopl_emul ;
   mm_segment_t addr_limit ;
   unsigned int sig_on_uaccess_err : 1 ;
   unsigned int uaccess_err : 1 ;
   struct fpu fpu ;
};
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/thread_info.h"
struct thread_info {
   unsigned long flags ;
   u32 status ;
};
#line 35  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bottom_half.h"
struct lockdep_map;
#line 55  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockdep.h"
struct lockdep_subclass_key {
   char __one_byte ;
} __attribute__((__packed__));
#line 60  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockdep.h"
union __anonunion_96 {
   struct hlist_node hash_entry ;
   struct lockdep_subclass_key subkeys[8U] ;
};
#line 60  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockdep.h"
struct lock_class_key {
   union __anonunion_96 __anonCompField_lock_class_key_23 ;
};
#line 68 
struct lock_trace;
#line 77  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockdep.h"
struct lock_class {
   struct hlist_node hash_entry ;
   struct list_head lock_entry ;
   struct list_head locks_after ;
   struct list_head locks_before ;
   struct lockdep_subclass_key *key ;
   unsigned int subclass ;
   unsigned int dep_gen_id ;
   unsigned long usage_mask ;
   struct lock_trace *usage_traces[9U] ;
   int name_version ;
   char *name ;
   unsigned long contention_point[4U] ;
   unsigned long contending_point[4U] ;
};
#line 157  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockdep.h"
struct lockdep_map {
   struct lock_class_key *key ;
   struct lock_class *class_cache[2U] ;
   char *name ;
   int cpu ;
   unsigned long ip ;
};
#line 226  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockdep.h"
struct held_lock {
   u64 prev_chain_key ;
   unsigned long acquire_ip ;
   struct lockdep_map *instance ;
   struct lockdep_map *nest_lock ;
   u64 waittime_stamp ;
   u64 holdtime_stamp ;
   unsigned int class_idx : 13 ;
   unsigned int irq_context : 2 ;
   unsigned int trylock : 1 ;
   unsigned int read : 2 ;
   unsigned int check : 1 ;
   unsigned int hardirqs_off : 1 ;
   unsigned int references : 12 ;
   unsigned int pin_count ;
};
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_types.h"
struct raw_spinlock {
   arch_spinlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_types.h"
typedef struct raw_spinlock raw_spinlock_t;
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_types.h"
struct __anonstruct_98 {
   u8 __padding[24U] ;
   struct lockdep_map dep_map ;
};
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_types.h"
union __anonunion_97 {
   struct raw_spinlock rlock ;
   struct __anonstruct_98 __anonCompField___anonunion_97_24 ;
};
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_types.h"
struct spinlock {
   union __anonunion_97 __anonCompField_spinlock_25 ;
};
#line 73  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_types.h"
typedef struct spinlock spinlock_t;
#line 74  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_types.h"
struct __anonstruct_rwlock_t_99 {
   arch_rwlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};
#line 74  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_types.h"
typedef struct __anonstruct_rwlock_t_99 rwlock_t;
#line 57  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
struct mutex;
#line 31  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/device.h"
struct firmware;
#line 27  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
struct kmem_cache;
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/seqlock.h"
struct seqcount {
   unsigned int sequence ;
   struct lockdep_map dep_map ;
};
#line 53  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/seqlock.h"
typedef struct seqcount seqcount_t;
#line 403  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/seqlock.h"
struct __anonstruct_seqlock_t_112 {
   struct seqcount seqcount ;
   spinlock_t lock ;
};
#line 403  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/seqlock.h"
typedef struct __anonstruct_seqlock_t_112 seqlock_t;
#line 161  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timex.h"
typedef s32 old_time32_t;
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/time32.h"
struct old_timespec32 {
   old_time32_t tv_sec ;
   s32 tv_nsec ;
};
#line 84  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/highuid.h"
struct user_namespace;
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uidgid.h"
struct __anonstruct_kuid_t_113 {
   uid_t val ;
};
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uidgid.h"
typedef struct __anonstruct_kuid_t_113 kuid_t;
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uidgid.h"
struct __anonstruct_kgid_t_114 {
   gid_t val ;
};
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uidgid.h"
typedef struct __anonstruct_kgid_t_114 kgid_t;
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/stat.h"
struct kstat {
   u32 result_mask ;
   umode_t mode ;
   unsigned int nlink ;
   uint32_t blksize ;
   u64 attributes ;
   u64 attributes_mask ;
   u64 ino ;
   dev_t dev ;
   dev_t rdev ;
   kuid_t uid ;
   kgid_t gid ;
   loff_t size ;
   struct timespec64 atime ;
   struct timespec64 mtime ;
   struct timespec64 ctime ;
   struct timespec64 btime ;
   u64 blocks ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/wait.h"
struct wait_queue_head {
   spinlock_t lock ;
   struct list_head head ;
};
#line 38  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/wait.h"
typedef struct wait_queue_head wait_queue_head_t;
#line 1133  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/wait.h"
struct __anonstruct_nodemask_t_115 {
   unsigned long bits[16U] ;
};
#line 1133  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/wait.h"
typedef struct __anonstruct_nodemask_t_115 nodemask_t;
#line 7  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/tlbbatch.h"
struct arch_tlbflush_unmap_batch {
   struct cpumask cpumask ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types_task.h"
struct vmacache {
   u64 seqnum ;
   struct vm_area_struct *vmas[4U] ;
};
#line 54  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types_task.h"
struct task_rss_stat {
   int events ;
   int count[4U] ;
};
#line 60  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types_task.h"
struct mm_rss_stat {
   atomic_long_t count[4U] ;
};
#line 64  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types_task.h"
struct page_frag {
   struct page *page ;
   __u32 offset ;
   __u32 size ;
};
#line 76  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types_task.h"
struct tlbflush_unmap_batch {
   struct arch_tlbflush_unmap_batch arch ;
   bool flush_required ;
   bool writable ;
};
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rbtree.h"
struct rb_node {
   unsigned long __rb_parent_color ;
   struct rb_node *rb_right ;
   struct rb_node *rb_left ;
} __attribute__((__aligned__(8)));
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rbtree.h"
struct rb_root {
   struct rb_node *rb_node ;
};
#line 125  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rbtree.h"
struct rb_root_cached {
   struct rb_root rb_root ;
   struct rb_node *rb_leftmost ;
};
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/osq_lock.h"
struct optimistic_spin_queue {
   atomic_t tail ;
};
#line 35  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rwsem.h"
struct rw_semaphore {
   atomic_long_t count ;
   atomic_long_t owner ;
   struct optimistic_spin_queue osq ;
   raw_spinlock_t wait_lock ;
   struct list_head wait_list ;
   void *magic ;
   struct lockdep_map dep_map ;
};
#line 26  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/completion.h"
struct completion {
   unsigned int done ;
   wait_queue_head_t wait ;
};
#line 120 
struct inode;
#line 121 
struct notifier_block;
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uprobes.h"
struct ww_acquire_ctx;
#line 53  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mutex.h"
struct mutex {
   atomic_long_t owner ;
   spinlock_t wait_lock ;
   struct optimistic_spin_queue osq ;
   struct list_head wait_list ;
   void *magic ;
   struct lockdep_map dep_map ;
};
#line 72  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mutex.h"
struct mutex_waiter {
   struct list_head list ;
   struct task_struct *task ;
   struct ww_acquire_ctx *ww_ctx ;
   void *magic ;
};
#line 461  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jiffies.h"
typedef s64 ktime_t;
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
struct timer_list {
   struct hlist_node entry ;
   unsigned long expires ;
   void (*function)(struct timer_list *) ;
   u32 flags ;
   struct lockdep_map lockdep_map ;
};
#line 196 
struct hrtimer;
#line 197 
enum hrtimer_restart;
#line 221 
struct workqueue_struct;
#line 222 
struct work_struct;
#line 102  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/workqueue.h"
struct work_struct {
   atomic_long_t data ;
   struct list_head entry ;
   void (*func)(struct work_struct *) ;
   struct lockdep_map lockdep_map ;
};
#line 115  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/workqueue.h"
struct delayed_work {
   struct work_struct work ;
   struct timer_list timer ;
   struct workqueue_struct *wq ;
   int cpu ;
};
#line 124  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/workqueue.h"
struct rcu_work {
   struct work_struct work ;
   struct callback_head rcu ;
   struct workqueue_struct *wq ;
};
#line 67  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rcu_segcblist.h"
struct rcu_segcblist {
   struct callback_head *head ;
   struct callback_head **tails[4U] ;
   unsigned long gp_seq[4U] ;
   atomic_long_t len ;
   long len_lazy ;
   u8 enabled ;
   u8 offloaded ;
};
#line 80 
struct srcu_struct;
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/srcu.h"
struct srcu_node;
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/srcutree.h"
struct srcu_data {
   unsigned long srcu_lock_count[2U] ;
   unsigned long srcu_unlock_count[2U] ;
   spinlock_t lock ;
   struct rcu_segcblist srcu_cblist ;
   unsigned long srcu_gp_seq_needed ;
   unsigned long srcu_gp_seq_needed_exp ;
   bool srcu_cblist_invoking ;
   struct timer_list delay_work ;
   struct work_struct work ;
   struct callback_head srcu_barrier_head ;
   struct srcu_node *mynode ;
   unsigned long grpmask ;
   int cpu ;
   struct srcu_struct *ssp ;
};
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/srcutree.h"
struct srcu_node {
   spinlock_t lock ;
   unsigned long srcu_have_cbs[4U] ;
   unsigned long srcu_data_have_cbs[4U] ;
   unsigned long srcu_gp_seq_needed_exp ;
   struct srcu_node *srcu_parent ;
   int grplo ;
   int grphi ;
};
#line 64  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/srcutree.h"
struct srcu_struct {
   struct srcu_node node[521U] ;
   struct srcu_node *level[4U] ;
   struct mutex srcu_cb_mutex ;
   spinlock_t lock ;
   struct mutex srcu_gp_mutex ;
   unsigned int srcu_idx ;
   unsigned long srcu_gp_seq ;
   unsigned long srcu_gp_seq_needed ;
   unsigned long srcu_gp_seq_needed_exp ;
   unsigned long srcu_last_gp_end ;
   struct srcu_data *sda ;
   unsigned long srcu_barrier_seq ;
   struct mutex srcu_barrier_mutex ;
   struct completion srcu_barrier_completion ;
   atomic_t srcu_barrier_cpu_cnt ;
   struct delayed_work work ;
   struct lockdep_map dep_map ;
};
#line 54  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/notifier.h"
struct notifier_block {
   int (*notifier_call)(struct notifier_block *, unsigned long , void *) ;
   struct notifier_block *next ;
   int priority ;
};
#line 70  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/notifier.h"
struct raw_notifier_head {
   struct notifier_block *head ;
};
#line 50  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/uprobes.h"
struct arch_uprobe_task {
   unsigned long saved_scratch_register ;
   unsigned int saved_trap_nr ;
   unsigned int saved_tf ;
};
#line 57 
enum uprobe_task_state {
    UTASK_RUNNING = 0,
    UTASK_SSTEP = 1,
    UTASK_SSTEP_ACK = 2,
    UTASK_SSTEP_TRAPPED = 3
};
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uprobes.h"
struct __anonstruct_128 {
   struct arch_uprobe_task autask ;
   unsigned long vaddr ;
};
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uprobes.h"
struct __anonstruct_129 {
   struct callback_head dup_xol_work ;
   unsigned long dup_xol_addr ;
};
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uprobes.h"
union __anonunion_127 {
   struct __anonstruct_128 __anonCompField___anonunion_127_28 ;
   struct __anonstruct_129 __anonCompField___anonunion_127_29 ;
};
#line 61 
struct uprobe;
#line 61 
struct return_instance;
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uprobes.h"
struct uprobe_task {
   enum uprobe_task_state state ;
   union __anonunion_127 __anonCompField_uprobe_task_30 ;
   struct uprobe *active_uprobe ;
   unsigned long xol_vaddr ;
   struct return_instance *return_instances ;
   unsigned int depth ;
};
#line 83  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uprobes.h"
struct return_instance {
   struct uprobe *uprobe ;
   unsigned long func ;
   unsigned long stack ;
   unsigned long orig_ret_vaddr ;
   bool chained ;
   struct return_instance *next ;
};
#line 98 
struct xol_area;
#line 101  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uprobes.h"
struct uprobes_state {
   struct xol_area *xol_area ;
};
#line 140 
struct ldt_struct;
#line 140 
struct vdso_image;
#line 140  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uprobes.h"
struct __anonstruct_mm_context_t_130 {
   u64 ctx_id ;
   atomic64_t tlb_gen ;
   struct rw_semaphore ldt_usr_sem ;
   struct ldt_struct *ldt ;
   unsigned short ia32_compat ;
   struct mutex lock ;
   void *vdso ;
   struct vdso_image *vdso_image ;
   atomic_t perf_rdpmc_allowed ;
   u16 pkey_allocation_map ;
   s16 execute_only_pkey ;
   void *bd_addr ;
};
#line 140  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uprobes.h"
typedef struct __anonstruct_mm_context_t_130 mm_context_t;
#line 66  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
struct address_space;
#line 67 
struct mem_cgroup;
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
struct __anonstruct_132 {
   struct list_head lru ;
   struct address_space *mapping ;
   unsigned long index ;
   unsigned long private ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
struct __anonstruct_133 {
   dma_addr_t dma_addr ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
struct __anonstruct_136 {
   struct page *next ;
   int pages ;
   int pobjects ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
union __anonunion_135 {
   struct list_head slab_list ;
   struct __anonstruct_136 __anonCompField___anonunion_135_33 ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
struct __anonstruct_138 {
   unsigned int inuse : 16 ;
   unsigned int objects : 15 ;
   unsigned int frozen : 1 ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
union __anonunion_137 {
   void *s_mem ;
   unsigned long counters ;
   struct __anonstruct_138 __anonCompField___anonunion_137_35 ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
struct __anonstruct_134 {
   union __anonunion_135 __anonCompField___anonstruct_134_34 ;
   struct kmem_cache *slab_cache ;
   void *freelist ;
   union __anonunion_137 __anonCompField___anonstruct_134_36 ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
struct __anonstruct_139 {
   unsigned long compound_head ;
   unsigned char compound_dtor ;
   unsigned char compound_order ;
   atomic_t compound_mapcount ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
struct __anonstruct_140 {
   unsigned long _compound_pad_1 ;
   unsigned long _compound_pad_2 ;
   struct list_head deferred_list ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
union __anonunion_142 {
   struct mm_struct *pt_mm ;
   atomic_t pt_frag_refcount ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
struct __anonstruct_141 {
   unsigned long _pt_pad_1 ;
   pgtable_t pmd_huge_pte ;
   unsigned long _pt_pad_2 ;
   union __anonunion_142 __anonCompField___anonstruct_141_40 ;
   spinlock_t *ptl ;
};
#line 68 
struct dev_pagemap;
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
struct __anonstruct_143 {
   struct dev_pagemap *pgmap ;
   void *zone_device_data ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
union __anonunion_131 {
   struct __anonstruct_132 __anonCompField___anonunion_131_31 ;
   struct __anonstruct_133 __anonCompField___anonunion_131_32 ;
   struct __anonstruct_134 __anonCompField___anonunion_131_37 ;
   struct __anonstruct_139 __anonCompField___anonunion_131_38 ;
   struct __anonstruct_140 __anonCompField___anonunion_131_39 ;
   struct __anonstruct_141 __anonCompField___anonunion_131_41 ;
   struct __anonstruct_143 __anonCompField___anonunion_131_42 ;
   struct callback_head callback_head ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
union __anonunion_144 {
   atomic_t _mapcount ;
   unsigned int page_type ;
   unsigned int active ;
   int units ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
struct page {
   unsigned long flags ;
   union __anonunion_131 __anonCompField_page_43 ;
   union __anonunion_144 __anonCompField_page_44 ;
   atomic_t _refcount ;
   struct mem_cgroup *mem_cgroup ;
} __attribute__((__aligned__(16)));
#line 278  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct userfaultfd_ctx;
#line 278  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct vm_userfaultfd_ctx {
   struct userfaultfd_ctx *ctx ;
};
#line 292  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct __anonstruct_shared_145 {
   struct rb_node rb ;
   unsigned long rb_subtree_last ;
};
#line 292 
struct anon_vma;
#line 292 
struct vm_operations_struct;
#line 292 
struct mempolicy;
#line 292  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct vm_area_struct {
   unsigned long vm_start ;
   unsigned long vm_end ;
   struct vm_area_struct *vm_next ;
   struct vm_area_struct *vm_prev ;
   struct rb_node vm_rb ;
   unsigned long rb_subtree_gap ;
   struct mm_struct *vm_mm ;
   pgprot_t vm_page_prot ;
   unsigned long vm_flags ;
   struct __anonstruct_shared_145 shared ;
   struct list_head anon_vma_chain ;
   struct anon_vma *anon_vma ;
   struct vm_operations_struct *vm_ops ;
   unsigned long vm_pgoff ;
   struct file *vm_file ;
   void *vm_private_data ;
   atomic_long_t swap_readahead_info ;
   struct mempolicy *vm_policy ;
   struct vm_userfaultfd_ctx vm_userfaultfd_ctx ;
} __attribute__((__designated_init__));
#line 358  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct core_thread {
   struct task_struct *task ;
   struct core_thread *next ;
};
#line 363  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct core_state {
   atomic_t nr_threads ;
   struct core_thread dumper ;
   struct completion startup ;
};
#line 368 
struct kioctx_table;
#line 370 
struct linux_binfmt;
#line 370 
struct mmu_notifier_mm;
#line 370  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct __anonstruct_146 {
   struct vm_area_struct *mmap ;
   struct rb_root mm_rb ;
   u64 vmacache_seqnum ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   unsigned long mmap_base ;
   unsigned long mmap_legacy_base ;
   unsigned long mmap_compat_base ;
   unsigned long mmap_compat_legacy_base ;
   unsigned long task_size ;
   unsigned long highest_vm_end ;
   pgd_t *pgd ;
   atomic_t membarrier_state ;
   atomic_t mm_users ;
   atomic_t mm_count ;
   atomic_long_t pgtables_bytes ;
   int map_count ;
   spinlock_t page_table_lock ;
   struct rw_semaphore mmap_sem ;
   struct list_head mmlist ;
   unsigned long hiwater_rss ;
   unsigned long hiwater_vm ;
   unsigned long total_vm ;
   unsigned long locked_vm ;
   atomic64_t pinned_vm ;
   unsigned long data_vm ;
   unsigned long exec_vm ;
   unsigned long stack_vm ;
   unsigned long def_flags ;
   spinlock_t arg_lock ;
   unsigned long start_code ;
   unsigned long end_code ;
   unsigned long start_data ;
   unsigned long end_data ;
   unsigned long start_brk ;
   unsigned long brk ;
   unsigned long start_stack ;
   unsigned long arg_start ;
   unsigned long arg_end ;
   unsigned long env_start ;
   unsigned long env_end ;
   unsigned long saved_auxv[46U] ;
   struct mm_rss_stat rss_stat ;
   struct linux_binfmt *binfmt ;
   mm_context_t context ;
   unsigned long flags ;
   struct core_state *core_state ;
   spinlock_t ioctx_lock ;
   struct kioctx_table *ioctx_table ;
   struct task_struct *owner ;
   struct user_namespace *user_ns ;
   struct file *exe_file ;
   struct mmu_notifier_mm *mmu_notifier_mm ;
   unsigned long numa_next_scan ;
   unsigned long numa_scan_offset ;
   int numa_scan_seq ;
   atomic_t tlb_flush_pending ;
   bool tlb_flush_batched ;
   struct uprobes_state uprobes_state ;
   atomic_long_t hugetlb_usage ;
   struct work_struct async_put_work ;
} __attribute__((__designated_init__));
#line 370  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct mm_struct {
   struct __anonstruct_146 __anonCompField_mm_struct_45 ;
   unsigned long cpu_bitmap[] ;
};
#line 642 
struct vm_fault;
#line 643  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
typedef unsigned int vm_fault_t;
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct free_area {
   struct list_head free_list[6U] ;
   unsigned long nr_free ;
};
#line 158 
struct pglist_data;
#line 168  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct zone_padding {
   char x[0U] ;
} __attribute__((__aligned__(4096)));
#line 285  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct zone_reclaim_stat {
   unsigned long recent_rotated[2U] ;
   unsigned long recent_scanned[2U] ;
};
#line 304  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct lruvec {
   struct list_head lists[5U] ;
   struct zone_reclaim_stat reclaim_stat ;
   atomic_long_t inactive_age ;
   unsigned long refaults ;
   unsigned long flags ;
   struct pglist_data *pgdat ;
};
#line 316  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
typedef unsigned int isolate_mode_t;
#line 340  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct per_cpu_pages {
   int count ;
   int high ;
   int batch ;
   struct list_head lists[3U] ;
};
#line 349  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct per_cpu_pageset {
   struct per_cpu_pages pcp ;
   s8 expire ;
   u16 vm_numa_stat_diff[6U] ;
   s8 stat_threshold ;
   s8 vm_stat_diff[13U] ;
};
#line 361  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct per_cpu_nodestat {
   s8 stat_threshold ;
   s8 vm_node_stat_diff[32U] ;
};
#line 365 
enum zone_type {
    ZONE_DMA = 0,
    ZONE_DMA32 = 1,
    ZONE_NORMAL = 2,
    ZONE_MOVABLE = 3,
    ZONE_DEVICE = 4,
    __MAX_NR_ZONES = 5
};
#line 432  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct zone {
   unsigned long _watermark[3U] ;
   unsigned long watermark_boost ;
   unsigned long nr_reserved_highatomic ;
   long lowmem_reserve[5U] ;
   int node ;
   struct pglist_data *zone_pgdat ;
   struct per_cpu_pageset *pageset ;
   unsigned long zone_start_pfn ;
   atomic_long_t managed_pages ;
   unsigned long spanned_pages ;
   unsigned long present_pages ;
   char *name ;
   unsigned long nr_isolate_pageblock ;
   seqlock_t span_seqlock ;
   int initialized ;
   struct zone_padding _pad1_ ;
   struct free_area free_area[11U] ;
   unsigned long flags ;
   spinlock_t lock ;
   struct zone_padding _pad2_ ;
   unsigned long percpu_drift_mark ;
   unsigned long compact_cached_free_pfn ;
   unsigned long compact_cached_migrate_pfn[2U] ;
   unsigned long compact_init_migrate_pfn ;
   unsigned long compact_init_free_pfn ;
   unsigned int compact_considered ;
   unsigned int compact_defer_shift ;
   int compact_order_failed ;
   bool compact_blockskip_flush ;
   bool contiguous ;
   struct zone_padding _pad3_ ;
   atomic_long_t vm_stat[13U] ;
   atomic_long_t vm_numa_stat[6U] ;
} __attribute__((__aligned__(4096)));
#line 665  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct zoneref {
   struct zone *zone ;
   int zone_idx ;
};
#line 684  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct zonelist {
   struct zoneref _zonerefs[5121U] ;
};
#line 694  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct deferred_split {
   spinlock_t split_queue_lock ;
   struct list_head split_queue ;
   unsigned long split_queue_len ;
};
#line 710  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct pglist_data {
   struct zone node_zones[5U] ;
   struct zonelist node_zonelists[2U] ;
   int nr_zones ;
   spinlock_t node_size_lock ;
   unsigned long node_start_pfn ;
   unsigned long node_present_pages ;
   unsigned long node_spanned_pages ;
   int node_id ;
   wait_queue_head_t kswapd_wait ;
   wait_queue_head_t pfmemalloc_wait ;
   struct task_struct *kswapd ;
   int kswapd_order ;
   enum zone_type kswapd_classzone_idx ;
   int kswapd_failures ;
   int kcompactd_max_order ;
   enum zone_type kcompactd_classzone_idx ;
   wait_queue_head_t kcompactd_wait ;
   struct task_struct *kcompactd ;
   unsigned long totalreserve_pages ;
   unsigned long min_unmapped_pages ;
   unsigned long min_slab_pages ;
   struct zone_padding _pad1_ ;
   spinlock_t lru_lock ;
   unsigned long first_deferred_pfn ;
   struct deferred_split deferred_split_queue ;
   struct lruvec __lruvec ;
   unsigned long flags ;
   struct zone_padding _pad2_ ;
   struct per_cpu_nodestat *per_cpu_nodestats ;
   atomic_long_t vm_stat[32U] ;
};
#line 824 
struct resource;
#line 825 
struct vmem_altmap;
#line 440  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/io.h"
struct fwnode_operations;
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fwnode.h"
struct fwnode_handle {
   struct fwnode_handle *secondary ;
   struct fwnode_operations *ops ;
   struct device *dev ;
};
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fwnode.h"
struct fwnode_endpoint {
   unsigned int port ;
   unsigned int id ;
   struct fwnode_handle *local_fwnode ;
};
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fwnode.h"
struct fwnode_reference_args {
   struct fwnode_handle *fwnode ;
   unsigned int nargs ;
   u64 args[8U] ;
};
#line 110  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fwnode.h"
struct fwnode_operations {
   struct fwnode_handle *(*get)(struct fwnode_handle *) ;
   void (*put)(struct fwnode_handle *) ;
   bool (*device_is_available)(struct fwnode_handle *) ;
   void *(*device_get_match_data)(struct fwnode_handle *, struct device *) ;
   bool (*property_present)(struct fwnode_handle *, char *) ;
   int (*property_read_int_array)(struct fwnode_handle *, char *, unsigned int , void *, size_t ) ;
   int (*property_read_string_array)(struct fwnode_handle *, char *, char **, size_t ) ;
   char *(*get_name)(struct fwnode_handle *) ;
   char *(*get_name_prefix)(struct fwnode_handle *) ;
   struct fwnode_handle *(*get_parent)(struct fwnode_handle *) ;
   struct fwnode_handle *(*get_next_child_node)(struct fwnode_handle *, struct fwnode_handle *) ;
   struct fwnode_handle *(*get_named_child_node)(struct fwnode_handle *, char *) ;
   int (*get_reference_args)(struct fwnode_handle *, char *, char *, unsigned int , unsigned int , struct fwnode_reference_args *) ;
   struct fwnode_handle *(*graph_get_next_endpoint)(struct fwnode_handle *, struct fwnode_handle *) ;
   struct fwnode_handle *(*graph_get_remote_endpoint)(struct fwnode_handle *) ;
   struct fwnode_handle *(*graph_get_port_parent)(struct fwnode_handle *) ;
   int (*graph_parse_endpoint)(struct fwnode_handle *, struct fwnode_endpoint *) ;
   int (*add_links)(struct fwnode_handle *, struct device *) ;
};
#line 54  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/llist.h"
struct llist_node;
#line 58  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/llist.h"
struct llist_node {
   struct llist_node *next ;
};
#line 53  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/vmalloc.h"
struct vm_struct {
   struct vm_struct *next ;
   void *addr ;
   unsigned long size ;
   unsigned long flags ;
   struct page **pages ;
   unsigned int nr_pages ;
   phys_addr_t phys_addr ;
   void *caller ;
};
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/smp.h"
struct __call_single_data {
   struct llist_node llist ;
   void (*func)(void *) ;
   void *info ;
   unsigned int flags ;
};
#line 822  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/sysctl.h"
struct nsproxy;
#line 823 
struct ctl_table_root;
#line 824 
struct ctl_table_header;
#line 825 
struct ctl_dir;
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
typedef int proc_handler(struct ctl_table *, int , void *, size_t *, loff_t *);
#line 105  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
struct ctl_table_poll {
   atomic_t event ;
   wait_queue_head_t wait ;
};
#line 123  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
struct ctl_table {
   char *procname ;
   void *data ;
   int maxlen ;
   umode_t mode ;
   struct ctl_table *child ;
   proc_handler *proc_handler ;
   struct ctl_table_poll *poll ;
   void *extra1 ;
   void *extra2 ;
} __attribute__((__designated_init__));
#line 135  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
struct ctl_node {
   struct rb_node node ;
   struct ctl_table_header *header ;
};
#line 142  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
struct __anonstruct_237 {
   struct ctl_table *ctl_table ;
   int used ;
   int count ;
   int nreg ;
};
#line 142  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
union __anonunion_236 {
   struct __anonstruct_237 __anonCompField___anonunion_236_47 ;
   struct callback_head rcu ;
};
#line 142 
struct ctl_table_set;
#line 142  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
struct ctl_table_header {
   union __anonunion_236 __anonCompField_ctl_table_header_48 ;
   struct completion *unregistering ;
   struct ctl_table *ctl_table_arg ;
   struct ctl_table_root *root ;
   struct ctl_table_set *set ;
   struct ctl_dir *parent ;
   struct ctl_node *node ;
   struct hlist_head inodes ;
};
#line 161  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
struct ctl_dir {
   struct ctl_table_header header ;
   struct rb_root root ;
};
#line 167  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
struct ctl_table_set {
   int (*is_seen)(struct ctl_table_set *) ;
   struct ctl_dir dir ;
};
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
struct ctl_table_root {
   struct ctl_table_set default_set ;
   struct ctl_table_set *(*lookup)(struct ctl_table_root *) ;
   void (*set_ownership)(struct ctl_table_header *, struct ctl_table *, kuid_t *, kgid_t *) ;
   int (*permissions)(struct ctl_table_header *, struct ctl_table *) ;
};
#line 242 
struct cred;
#line 13  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/vdso.h"
struct vdso_image {
   void *data ;
   unsigned long size ;
   unsigned long alt ;
   unsigned long alt_len ;
   long sym_vvar_start ;
   long sym_vvar_page ;
   long sym_pvclock_page ;
   long sym_hvclock_page ;
   long sym_VDSO32_NOTE_MASK ;
   long sym___kernel_sigreturn ;
   long sym___kernel_rt_sigreturn ;
   long sym___kernel_vsyscall ;
   long sym_int80_landing_pad ;
};
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
typedef __u64 Elf64_Addr;
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
typedef __u16 Elf64_Half;
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
typedef __u64 Elf64_Off;
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
typedef __u32 Elf64_Word;
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
typedef __u64 Elf64_Xword;
#line 192  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
struct elf64_sym {
   Elf64_Word st_name ;
   unsigned char st_info ;
   unsigned char st_other ;
   Elf64_Half st_shndx ;
   Elf64_Addr st_value ;
   Elf64_Xword st_size ;
};
#line 200  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
typedef struct elf64_sym Elf64_Sym;
#line 221  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
struct elf64_hdr {
   unsigned char e_ident[16U] ;
   Elf64_Half e_type ;
   Elf64_Half e_machine ;
   Elf64_Word e_version ;
   Elf64_Addr e_entry ;
   Elf64_Off e_phoff ;
   Elf64_Off e_shoff ;
   Elf64_Word e_flags ;
   Elf64_Half e_ehsize ;
   Elf64_Half e_phentsize ;
   Elf64_Half e_phnum ;
   Elf64_Half e_shentsize ;
   Elf64_Half e_shnum ;
   Elf64_Half e_shstrndx ;
};
#line 237  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
typedef struct elf64_hdr Elf64_Ehdr;
#line 316  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
struct elf64_shdr {
   Elf64_Word sh_name ;
   Elf64_Word sh_type ;
   Elf64_Xword sh_flags ;
   Elf64_Addr sh_addr ;
   Elf64_Off sh_offset ;
   Elf64_Xword sh_size ;
   Elf64_Word sh_link ;
   Elf64_Word sh_info ;
   Elf64_Xword sh_addralign ;
   Elf64_Xword sh_entsize ;
};
#line 328  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
typedef struct elf64_shdr Elf64_Shdr;
#line 292  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/xarray.h"
struct xarray {
   spinlock_t xa_lock ;
   gfp_t xa_flags ;
   void *xa_head ;
};
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/idr.h"
struct idr {
   struct xarray idr_rt ;
   unsigned int idr_base ;
   unsigned int idr_next ;
};
#line 322 
struct dentry;
#line 323 
struct iattr;
#line 324 
struct super_block;
#line 325 
struct poll_table_struct;
#line 326 
struct fs_context;
#line 328 
struct kernfs_open_node;
#line 329 
struct kernfs_iattrs;
#line 84  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_root;
#line 84  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_elem_dir {
   unsigned long subdirs ;
   struct rb_root children ;
   struct kernfs_root *root ;
};
#line 96 
struct kernfs_node;
#line 96  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_elem_symlink {
   struct kernfs_node *target_kn ;
};
#line 100 
struct kernfs_ops;
#line 100  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_elem_attr {
   struct kernfs_ops *ops ;
   struct kernfs_open_node *open ;
   loff_t size ;
   struct kernfs_node *notify_next ;
};
#line 116  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
union __anonunion_256 {
   struct kernfs_elem_dir dir ;
   struct kernfs_elem_symlink symlink ;
   struct kernfs_elem_attr attr ;
};
#line 116  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_node {
   atomic_t count ;
   atomic_t active ;
   struct lockdep_map dep_map ;
   struct kernfs_node *parent ;
   char *name ;
   struct rb_node rb ;
   void *ns ;
   unsigned int hash ;
   union __anonunion_256 __anonCompField_kernfs_node_51 ;
   void *priv ;
   u64 id ;
   unsigned short flags ;
   umode_t mode ;
   struct kernfs_iattrs *iattr ;
};
#line 161  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_syscall_ops {
   int (*show_options)(struct seq_file *, struct kernfs_root *) ;
   int (*mkdir)(struct kernfs_node *, char *, umode_t ) ;
   int (*rmdir)(struct kernfs_node *) ;
   int (*rename)(struct kernfs_node *, struct kernfs_node *, char *) ;
   int (*show_path)(struct seq_file *, struct kernfs_node *, struct kernfs_root *) ;
};
#line 173  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_root {
   struct kernfs_node *kn ;
   unsigned int flags ;
   struct idr ino_idr ;
   u32 last_id_lowbits ;
   u32 id_highbits ;
   struct kernfs_syscall_ops *syscall_ops ;
   struct list_head supers ;
   wait_queue_head_t deactivate_waitq ;
};
#line 190  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_open_file {
   struct kernfs_node *kn ;
   struct file *file ;
   struct seq_file *seq_file ;
   void *priv ;
   struct mutex mutex ;
   struct mutex prealloc_mutex ;
   int event ;
   struct list_head list ;
   char *prealloc_buf ;
   size_t atomic_write_len ;
   bool mmapped : 1 ;
   bool released : 1 ;
   struct vm_operations_struct *vm_ops ;
};
#line 210  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_ops {
   int (*open)(struct kernfs_open_file *) ;
   void (*release)(struct kernfs_open_file *) ;
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   ssize_t (*read)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   size_t atomic_write_len ;
   bool prealloc ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   __poll_t (*poll)(struct kernfs_open_file *, struct poll_table_struct *) ;
   int (*mmap)(struct kernfs_open_file *, struct vm_area_struct *) ;
   struct lock_class_key lockdep_key ;
};
#line 595 
struct sock;
#line 596 
struct kobject;
#line 597 
enum kobj_ns_type {
    KOBJ_NS_TYPE_NONE = 0,
    KOBJ_NS_TYPE_NET = 1,
    KOBJ_NS_TYPES = 2
};
#line 39  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kobject_ns.h"
struct kobj_ns_type_operations {
   enum kobj_ns_type type ;
   bool (*current_may_mount)(void) ;
   void *(*grab_current_ns)(void) ;
   void *(*netlink_ns)(struct sock *) ;
   void *(*initial_ns)(void) ;
   void (*drop_ns)(void *) ;
};
#line 58 
struct bin_attribute;
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysfs.h"
struct attribute {
   char *name ;
   umode_t mode ;
   bool ignore_lockdep : 1 ;
   struct lock_class_key *key ;
   struct lock_class_key skey ;
};
#line 84  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysfs.h"
struct attribute_group {
   char *name ;
   umode_t (*is_visible)(struct kobject *, struct attribute *, int ) ;
   umode_t (*is_bin_visible)(struct kobject *, struct bin_attribute *, int ) ;
   struct attribute **attrs ;
   struct bin_attribute **bin_attrs ;
};
#line 161  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysfs.h"
struct bin_attribute {
   struct attribute attr ;
   size_t size ;
   void *private ;
   ssize_t (*read)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   ssize_t (*write)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   int (*mmap)(struct file *, struct kobject *, struct bin_attribute *, struct vm_area_struct *) ;
};
#line 223  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysfs.h"
struct sysfs_ops {
   ssize_t (*show)(struct kobject *, struct attribute *, char *) ;
   ssize_t (*store)(struct kobject *, struct attribute *, char *, size_t ) ;
};
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/refcount.h"
struct refcount_struct {
   atomic_t refs ;
};
#line 101  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/refcount.h"
typedef struct refcount_struct refcount_t;
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kref.h"
struct kref {
   refcount_t refcount ;
};
#line 65  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kobject.h"
struct kset;
#line 65 
struct kobj_type;
#line 65  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kobject.h"
struct kobject {
   char *name ;
   struct list_head entry ;
   struct kobject *parent ;
   struct kset *kset ;
   struct kobj_type *ktype ;
   struct kernfs_node *sd ;
   struct kref kref ;
   struct delayed_work release ;
   unsigned int state_initialized : 1 ;
   unsigned int state_in_sysfs : 1 ;
   unsigned int state_add_uevent_sent : 1 ;
   unsigned int state_remove_uevent_sent : 1 ;
   unsigned int uevent_suppress : 1 ;
};
#line 139  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kobject.h"
struct kobj_type {
   void (*release)(struct kobject *) ;
   struct sysfs_ops *sysfs_ops ;
   struct attribute **default_attrs ;
   struct attribute_group **default_groups ;
   struct kobj_ns_type_operations *(*child_ns_type)(struct kobject *) ;
   void *(*namespace)(struct kobject *) ;
   void (*get_ownership)(struct kobject *, kuid_t *, kgid_t *) ;
};
#line 149  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kobject.h"
struct kobj_uevent_env {
   char *argv[3U] ;
   char *envp[32U] ;
   int envp_idx ;
   char buf[2048U] ;
   int buflen ;
};
#line 157  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kobject.h"
struct kset_uevent_ops {
   int (*filter)(struct kset *, struct kobject *) ;
   char *(*name)(struct kset *, struct kobject *) ;
   int (*uevent)(struct kset *, struct kobject *, struct kobj_uevent_env *) ;
};
#line 193  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kobject.h"
struct kset {
   struct list_head list ;
   spinlock_t list_lock ;
   struct kobject kobj ;
   struct kset_uevent_ops *uevent_ops ;
} __attribute__((__designated_init__));
#line 247 
struct kernel_param;
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/moduleparam.h"
struct kernel_param_ops {
   unsigned int flags ;
   int (*set)(char *, struct kernel_param *) ;
   int (*get)(char *, struct kernel_param *) ;
   void (*free)(void *) ;
};
#line 69 
struct kparam_string;
#line 69 
struct kparam_array;
#line 69  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/moduleparam.h"
union __anonunion_259 {
   void *arg ;
   struct kparam_string *str ;
   struct kparam_array *arr ;
};
#line 69  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/moduleparam.h"
struct kernel_param {
   char *name ;
   struct module *mod ;
   struct kernel_param_ops *ops ;
   u16 perm ;
   s8 level ;
   u8 flags ;
   union __anonunion_259 __anonCompField_kernel_param_52 ;
};
#line 86  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/moduleparam.h"
struct kparam_string {
   unsigned int maxlen ;
   char *string ;
};
#line 92  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/moduleparam.h"
struct kparam_array {
   unsigned int max ;
   unsigned int elemsize ;
   unsigned int *num ;
   struct kernel_param_ops *ops ;
   void *elem ;
};
#line 40  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rbtree_latch.h"
struct latch_tree_node {
   struct rb_node node[2U] ;
};
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/error-injection.h"
struct error_injection_entry {
   unsigned long addr ;
   int etype ;
};
#line 8  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/module.h"
struct mod_arch_specific {
   unsigned int num_orcs ;
   int *orc_unwind_ip ;
   struct orc_entry *orc_unwind ;
};
#line 41  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
struct exception_table_entry;
#line 45 
struct module_param_attrs;
#line 45  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
struct module_kobject {
   struct kobject kobj ;
   struct module *mod ;
   struct kobject *drivers_dir ;
   struct module_param_attrs *mp ;
   struct completion *kobj_completion ;
} __attribute__((__designated_init__));
#line 53  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
struct module_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct module_attribute *, struct module_kobject *, char *) ;
   ssize_t (*store)(struct module_attribute *, struct module_kobject *, char *, size_t ) ;
   void (*setup)(struct module *, char *) ;
   int (*test)(struct module *) ;
   void (*free)(struct module *) ;
};
#line 297 
enum module_state {
    MODULE_STATE_LIVE = 0,
    MODULE_STATE_COMING = 1,
    MODULE_STATE_GOING = 2,
    MODULE_STATE_UNFORMED = 3
};
#line 305  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
struct mod_tree_node {
   struct module *mod ;
   struct latch_tree_node node ;
};
#line 310  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
struct module_layout {
   void *base ;
   unsigned int size ;
   unsigned int text_size ;
   unsigned int ro_size ;
   unsigned int ro_after_init_size ;
   struct mod_tree_node mtn ;
};
#line 334  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
struct mod_kallsyms {
   Elf64_Sym *symtab ;
   unsigned int num_symtab ;
   char *strtab ;
   char *typetab ;
};
#line 342  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
struct klp_modinfo {
   Elf64_Ehdr hdr ;
   Elf64_Shdr *sechdrs ;
   char *secstrings ;
   unsigned int symndx ;
};
#line 350 
struct module_sect_attrs;
#line 350 
struct module_notes_attrs;
#line 350 
struct trace_event_call;
#line 350 
struct trace_eval_map;
#line 350  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
struct module {
   enum module_state state ;
   struct list_head list ;
   char name[56U] ;
   struct module_kobject mkobj ;
   struct module_attribute *modinfo_attrs ;
   char *version ;
   char *srcversion ;
   struct kobject *holders_dir ;
   struct kernel_symbol *syms ;
   s32 *crcs ;
   unsigned int num_syms ;
   struct mutex param_lock ;
   struct kernel_param *kp ;
   unsigned int num_kp ;
   unsigned int num_gpl_syms ;
   struct kernel_symbol *gpl_syms ;
   s32 *gpl_crcs ;
   struct kernel_symbol *unused_syms ;
   s32 *unused_crcs ;
   unsigned int num_unused_syms ;
   unsigned int num_unused_gpl_syms ;
   struct kernel_symbol *unused_gpl_syms ;
   s32 *unused_gpl_crcs ;
   bool sig_ok ;
   bool async_probe_requested ;
   struct kernel_symbol *gpl_future_syms ;
   s32 *gpl_future_crcs ;
   unsigned int num_gpl_future_syms ;
   unsigned int num_exentries ;
   struct exception_table_entry *extable ;
   int (*init)(void) ;
   struct module_layout core_layout ;
   struct module_layout init_layout ;
   struct mod_arch_specific arch ;
   unsigned long taints ;
   unsigned int num_bugs ;
   struct list_head bug_list ;
   struct bug_entry *bug_table ;
   struct mod_kallsyms *kallsyms ;
   struct mod_kallsyms core_kallsyms ;
   struct module_sect_attrs *sect_attrs ;
   struct module_notes_attrs *notes_attrs ;
   char *args ;
   void *percpu ;
   unsigned int percpu_size ;
   unsigned int num_tracepoints ;
   tracepoint_ptr_t *tracepoints_ptrs ;
   unsigned int num_srcu_structs ;
   struct srcu_struct **srcu_struct_ptrs ;
   unsigned int num_bpf_raw_events ;
   struct bpf_raw_event_map *bpf_raw_events ;
   struct jump_entry *jump_entries ;
   unsigned int num_jump_entries ;
   unsigned int num_trace_bprintk_fmt ;
   char **trace_bprintk_fmt_start ;
   struct trace_event_call **trace_events ;
   unsigned int num_trace_events ;
   struct trace_eval_map **trace_evals ;
   unsigned int num_trace_evals ;
   unsigned int num_ftrace_callsites ;
   unsigned long *ftrace_callsites ;
   bool klp ;
   bool klp_alive ;
   struct klp_modinfo *klp_info ;
   struct list_head source_list ;
   struct list_head target_list ;
   void (*exit)(void) ;
   atomic_t refcnt ;
   ctor_fn_t *ctors ;
   unsigned int num_ctors ;
   struct error_injection_entry *ei_funcs ;
   unsigned int num_ei_funcs ;
} __attribute__((__designated_init__, __aligned__(64)));
#line 892 
struct percpu_ref;
#line 893  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
typedef void percpu_ref_func_t(struct percpu_ref *);
#line 95  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/percpu-refcount.h"
struct percpu_ref {
   atomic_long_t count ;
   unsigned long percpu_count_ptr ;
   percpu_ref_func_t *release ;
   percpu_ref_func_t *confirm_switch ;
   bool force_atomic : 1 ;
   bool allow_reinit : 1 ;
   struct callback_head rcu ;
};
#line 628  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rculist.h"
enum pid_type {
    PIDTYPE_PID = 0,
    PIDTYPE_TGID = 1,
    PIDTYPE_PGID = 2,
    PIDTYPE_SID = 3,
    PIDTYPE_MAX = 4
};
#line 54  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pid.h"
struct pid_namespace;
#line 54  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pid.h"
struct upid {
   int nr ;
   struct pid_namespace *ns ;
};
#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pid.h"
struct pid {
   refcount_t count ;
   unsigned int level ;
   struct hlist_head tasks[4U] ;
   wait_queue_head_t wait_pidfd ;
   struct callback_head rcu ;
   struct upid numbers[1U] ;
};
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable-types.h"
struct rhash_head {
   struct rhash_head *next ;
};
#line 25 
struct bucket_table;
#line 33 
struct rhashtable;
#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable-types.h"
struct rhashtable_compare_arg {
   struct rhashtable *ht ;
   void *key ;
};
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable-types.h"
struct rhashtable_params {
   u16 nelem_hint ;
   u16 key_len ;
   u16 key_offset ;
   u16 head_offset ;
   unsigned int max_size ;
   u16 min_size ;
   bool automatic_shrinking ;
   u32 (*hashfn)(void *, u32 , u32 ) ;
   u32 (*obj_hashfn)(void *, u32 , u32 ) ;
   int (*obj_cmpfn)(struct rhashtable_compare_arg *, void *) ;
};
#line 81  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable-types.h"
struct rhashtable {
   struct bucket_table *tbl ;
   unsigned int key_len ;
   unsigned int max_elems ;
   struct rhashtable_params p ;
   bool rhlist ;
   struct work_struct run_work ;
   struct mutex mutex ;
   spinlock_t lock ;
   atomic_t nelems ;
};
#line 67  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/sem.h"
struct sem_undo_list;
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sem.h"
struct sysv_sem {
   struct sem_undo_list *undo_list ;
};
#line 13  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/shm.h"
struct sysv_shm {
   struct list_head shm_clist ;
};
#line 83  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/plist.h"
struct plist_node {
   int prio ;
   struct list_head prio_list ;
   struct list_head node_list ;
};
#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timerqueue.h"
struct timerqueue_node {
   struct rb_node node ;
   ktime_t expires ;
};
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timerqueue.h"
struct timerqueue_head {
   struct rb_root_cached rb_root ;
};
#line 60 
struct hrtimer_clock_base;
#line 61 
struct hrtimer_cpu_base;
#line 80 
enum hrtimer_restart {
    HRTIMER_NORESTART = 0,
    HRTIMER_RESTART = 1
};
#line 117  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/hrtimer.h"
struct hrtimer {
   struct timerqueue_node node ;
   ktime_t _softexpires ;
   enum hrtimer_restart (*function)(struct hrtimer *) ;
   struct hrtimer_clock_base *base ;
   u8 state ;
   u8 is_rel ;
   u8 is_soft ;
   u8 is_hard ;
};
#line 158  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/hrtimer.h"
struct hrtimer_clock_base {
   struct hrtimer_cpu_base *cpu_base ;
   unsigned int index ;
   clockid_t clockid ;
   seqcount_t seq ;
   struct hrtimer *running ;
   struct timerqueue_head active ;
   ktime_t (*get_time)(void) ;
   ktime_t offset ;
} __attribute__((__aligned__(64)));
#line 213  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/hrtimer.h"
struct hrtimer_cpu_base {
   raw_spinlock_t lock ;
   unsigned int cpu ;
   unsigned int active_bases ;
   unsigned int clock_was_set_seq ;
   unsigned int hres_active : 1 ;
   unsigned int in_hrtirq : 1 ;
   unsigned int hang_detected : 1 ;
   unsigned int softirq_activated : 1 ;
   unsigned int nr_events ;
   unsigned short nr_retries ;
   unsigned short nr_hangs ;
   unsigned int max_hang_time ;
   ktime_t expires_next ;
   struct hrtimer *next_timer ;
   ktime_t softirq_expires_next ;
   struct hrtimer *softirq_next_timer ;
   struct hrtimer_clock_base clock_base[8U] ;
} __attribute__((__aligned__(64)));
#line 40  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/seccomp.h"
struct seccomp_filter;
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/seccomp.h"
struct seccomp {
   int mode ;
   struct seccomp_filter *filter ;
};
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/resource.h"
struct rlimit {
   __kernel_ulong_t rlim_cur ;
   __kernel_ulong_t rlim_max ;
};
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/latencytop.h"
struct latency_record {
   unsigned long backtrace[12U] ;
   unsigned int count ;
   unsigned long time ;
   unsigned long max ;
};
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched/types.h"
struct task_cputime {
   u64 stime ;
   u64 utime ;
   unsigned long long sum_exec_runtime ;
};
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/signal.h"
struct __anonstruct_sigset_t_306 {
   unsigned long sig[1U] ;
};
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/signal.h"
typedef struct __anonstruct_sigset_t_306 sigset_t;
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/signal.h"
typedef void __signalfn_t(int );
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/signal-defs.h"
typedef __signalfn_t *__sighandler_t;
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/signal-defs.h"
typedef void __restorefn_t(void);
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/signal-defs.h"
typedef __restorefn_t *__sigrestore_t;
#line 8  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
union sigval {
   int sival_int ;
   void *sival_ptr ;
};
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
typedef union sigval sigval_t;
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__kill_307 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__timer_308 {
   __kernel_timer_t _tid ;
   int _overrun ;
   sigval_t _sigval ;
   int _sys_private ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__rt_309 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   sigval_t _sigval ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigchld_310 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   int _status ;
   __kernel_clock_t _utime ;
   __kernel_clock_t _stime ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__addr_bnd_313 {
   char _dummy_bnd[8U] ;
   void *_lower ;
   void *_upper ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__addr_pkey_314 {
   char _dummy_pkey[8U] ;
   __u32 _pkey ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
union __anonunion_312 {
   short _addr_lsb ;
   struct __anonstruct__addr_bnd_313 _addr_bnd ;
   struct __anonstruct__addr_pkey_314 _addr_pkey ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigfault_311 {
   void *_addr ;
   union __anonunion_312 __anonCompField___anonstruct__sigfault_311_53 ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigpoll_315 {
   long _band ;
   int _fd ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigsys_316 {
   void *_call_addr ;
   int _syscall ;
   unsigned int _arch ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
union __sifields {
   struct __anonstruct__kill_307 _kill ;
   struct __anonstruct__timer_308 _timer ;
   struct __anonstruct__rt_309 _rt ;
   struct __anonstruct__sigchld_310 _sigchld ;
   struct __anonstruct__sigfault_311 _sigfault ;
   struct __anonstruct__sigpoll_315 _sigpoll ;
   struct __anonstruct__sigsys_316 _sigsys ;
};
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/signal_types.h"
struct __anonstruct_321 {
   int si_signo ;
   int si_errno ;
   int si_code ;
   union __sifields _sifields ;
};
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/signal_types.h"
struct kernel_siginfo {
   struct __anonstruct_321 __anonCompField_kernel_siginfo_56 ;
};
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/signal_types.h"
typedef struct kernel_siginfo kernel_siginfo_t;
#line 20 
struct user_struct;
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/signal_types.h"
struct sigpending {
   struct list_head list ;
   sigset_t signal ;
};
#line 35  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/signal_types.h"
struct sigaction {
   __sighandler_t sa_handler ;
   unsigned long sa_flags ;
   __sigrestore_t sa_restorer ;
   sigset_t sa_mask ;
};
#line 49  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/signal_types.h"
struct k_sigaction {
   struct sigaction sa ;
};
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/task_io_accounting.h"
struct task_io_accounting {
   u64 rchar ;
   u64 wchar ;
   u64 syscr ;
   u64 syscw ;
   u64 read_bytes ;
   u64 write_bytes ;
   u64 cancelled_write_bytes ;
};
#line 107  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/posix-timers.h"
struct posix_cputimer_base {
   u64 nextevt ;
   struct timerqueue_head tqhead ;
};
#line 122  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/posix-timers.h"
struct posix_cputimers {
   struct posix_cputimer_base bases[3U] ;
   unsigned int timers_active ;
   unsigned int expiry_active ;
};
#line 193 
struct signal_struct;
#line 62  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/rseq.h"
union __anonunion_rseq_cs_326 {
   __u64 ptr64 ;
   __u64 ptr ;
};
#line 62  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/rseq.h"
struct rseq {
   __u32 cpu_id_start ;
   __u32 cpu_id ;
   union __anonunion_rseq_cs_326 rseq_cs ;
   __u32 flags ;
} __attribute__((__aligned__(32)));
#line 146 
struct audit_context;
#line 147 
struct backing_dev_info;
#line 148 
struct bio_list;
#line 149 
struct blk_plug;
#line 150 
struct capture_control;
#line 151 
struct cfs_rq;
#line 152 
struct fs_struct;
#line 153 
struct futex_pi_state;
#line 154 
struct io_context;
#line 155 
struct nameidata;
#line 156 
struct perf_event_context;
#line 157 
struct pipe_inode_info;
#line 159 
struct reclaim_state;
#line 160 
struct robust_list_head;
#line 165 
struct sighand_struct;
#line 166 
struct task_delay_info;
#line 167 
struct task_group;
#line 242  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct prev_cputime {
   u64 utime ;
   u64 stime ;
   raw_spinlock_t lock ;
};
#line 290  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct sched_info {
   unsigned long pcount ;
   unsigned long long run_delay ;
   unsigned long long last_arrival ;
   unsigned long long last_queued ;
};
#line 325  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct load_weight {
   unsigned long weight ;
   u32 inv_weight ;
};
#line 352  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct util_est {
   unsigned int enqueued ;
   unsigned int ewma ;
} __attribute__((__aligned__(8)));
#line 401  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct sched_avg {
   u64 last_update_time ;
   u64 load_sum ;
   u64 runnable_load_sum ;
   u32 util_sum ;
   u32 period_contrib ;
   unsigned long load_avg ;
   unsigned long runnable_load_avg ;
   unsigned long util_avg ;
   struct util_est util_est ;
} __attribute__((__aligned__(64)));
#line 413  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct sched_statistics {
   u64 wait_start ;
   u64 wait_max ;
   u64 wait_count ;
   u64 wait_sum ;
   u64 iowait_count ;
   u64 iowait_sum ;
   u64 sleep_start ;
   u64 sleep_max ;
   s64 sum_sleep_runtime ;
   u64 block_start ;
   u64 block_max ;
   u64 exec_max ;
   u64 slice_max ;
   u64 nr_migrations_cold ;
   u64 nr_failed_migrations_affine ;
   u64 nr_failed_migrations_running ;
   u64 nr_failed_migrations_hot ;
   u64 nr_forced_migrations ;
   u64 nr_wakeups ;
   u64 nr_wakeups_sync ;
   u64 nr_wakeups_migrate ;
   u64 nr_wakeups_local ;
   u64 nr_wakeups_remote ;
   u64 nr_wakeups_affine ;
   u64 nr_wakeups_affine_attempts ;
   u64 nr_wakeups_passive ;
   u64 nr_wakeups_idle ;
};
#line 449  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct sched_entity {
   struct load_weight load ;
   unsigned long runnable_weight ;
   struct rb_node run_node ;
   struct list_head group_node ;
   unsigned int on_rq ;
   u64 exec_start ;
   u64 sum_exec_runtime ;
   u64 vruntime ;
   u64 prev_sum_exec_runtime ;
   u64 nr_migrations ;
   struct sched_statistics statistics ;
   int depth ;
   struct sched_entity *parent ;
   struct cfs_rq *cfs_rq ;
   struct cfs_rq *my_q ;
   struct sched_avg avg ;
};
#line 486 
struct rt_rq;
#line 486  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct sched_rt_entity {
   struct list_head run_list ;
   unsigned long timeout ;
   unsigned long watchdog_stamp ;
   unsigned int time_slice ;
   unsigned short on_rq ;
   unsigned short on_list ;
   struct sched_rt_entity *back ;
   struct sched_rt_entity *parent ;
   struct rt_rq *rt_rq ;
   struct rt_rq *my_q ;
} __attribute__((__designated_init__));
#line 504  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct sched_dl_entity {
   struct rb_node rb_node ;
   u64 dl_runtime ;
   u64 dl_deadline ;
   u64 dl_period ;
   u64 dl_bw ;
   u64 dl_density ;
   s64 runtime ;
   u64 deadline ;
   unsigned int flags ;
   unsigned int dl_throttled : 1 ;
   unsigned int dl_boosted : 1 ;
   unsigned int dl_yielded : 1 ;
   unsigned int dl_non_contending : 1 ;
   unsigned int dl_overrun : 1 ;
   struct hrtimer dl_timer ;
   struct hrtimer inactive_timer ;
};
#line 600  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct uclamp_se {
   unsigned int value : 11 ;
   unsigned int bucket_id : 3 ;
   unsigned int active : 1 ;
   unsigned int user_defined : 1 ;
};
#line 625  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct wake_q_node {
   struct wake_q_node *next ;
};
#line 629 
struct sched_class;
#line 629 
struct key;
#line 629 
struct files_struct;
#line 629 
struct rt_mutex_waiter;
#line 629 
struct css_set;
#line 629 
struct compat_robust_list_head;
#line 629 
struct numa_group;
#line 629  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
union __anonunion_328 {
   refcount_t rcu_users ;
   struct callback_head rcu ;
};
#line 629 
struct ftrace_ret_stack;
#line 629 
struct kcov;
#line 629 
struct request_queue;
#line 629  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct task_struct {
   struct thread_info thread_info ;
   long state ;
   void *stack ;
   refcount_t usage ;
   unsigned int flags ;
   unsigned int ptrace ;
   struct llist_node wake_entry ;
   int on_cpu ;
   unsigned int cpu ;
   unsigned int wakee_flips ;
   unsigned long wakee_flip_decay_ts ;
   struct task_struct *last_wakee ;
   int recent_used_cpu ;
   int wake_cpu ;
   int on_rq ;
   int prio ;
   int static_prio ;
   int normal_prio ;
   unsigned int rt_priority ;
   struct sched_class *sched_class ;
   struct sched_entity se ;
   struct sched_rt_entity rt ;
   struct task_group *sched_task_group ;
   struct sched_dl_entity dl ;
   struct uclamp_se uclamp_req[2U] ;
   struct uclamp_se uclamp[2U] ;
   struct hlist_head preempt_notifiers ;
   unsigned int btrace_seq ;
   unsigned int policy ;
   int nr_cpus_allowed ;
   cpumask_t *cpus_ptr ;
   cpumask_t cpus_mask ;
   unsigned long rcu_tasks_nvcsw ;
   u8 rcu_tasks_holdout ;
   u8 rcu_tasks_idx ;
   int rcu_tasks_idle_cpu ;
   struct list_head rcu_tasks_holdout_list ;
   struct sched_info sched_info ;
   struct list_head tasks ;
   struct plist_node pushable_tasks ;
   struct rb_node pushable_dl_tasks ;
   struct mm_struct *mm ;
   struct mm_struct *active_mm ;
   struct vmacache vmacache ;
   struct task_rss_stat rss_stat ;
   int exit_state ;
   int exit_code ;
   int exit_signal ;
   int pdeath_signal ;
   unsigned long jobctl ;
   unsigned int personality ;
   unsigned int sched_reset_on_fork : 1 ;
   unsigned int sched_contributes_to_load : 1 ;
   unsigned int sched_migrated : 1 ;
   unsigned int sched_remote_wakeup : 1 ;
   unsigned int sched_psi_wake_requeue : 1 ;
   unsigned int  ;
   unsigned int in_execve : 1 ;
   unsigned int in_iowait : 1 ;
   unsigned int restore_sigmask : 1 ;
   unsigned int in_user_fault : 1 ;
   unsigned int brk_randomized : 1 ;
   unsigned int no_cgroup_migration : 1 ;
   unsigned int frozen : 1 ;
   unsigned int use_memdelay : 1 ;
   unsigned long atomic_flags ;
   struct restart_block restart_block ;
   pid_t pid ;
   pid_t tgid ;
   unsigned long stack_canary ;
   struct task_struct *real_parent ;
   struct task_struct *parent ;
   struct list_head children ;
   struct list_head sibling ;
   struct task_struct *group_leader ;
   struct list_head ptraced ;
   struct list_head ptrace_entry ;
   struct pid *thread_pid ;
   struct hlist_node pid_links[4U] ;
   struct list_head thread_group ;
   struct list_head thread_node ;
   struct completion *vfork_done ;
   int *set_child_tid ;
   int *clear_child_tid ;
   u64 utime ;
   u64 stime ;
   u64 gtime ;
   struct prev_cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   u64 start_time ;
   u64 start_boottime ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   struct posix_cputimers posix_cputimers ;
   struct cred *ptracer_cred ;
   struct cred *real_cred ;
   struct cred *cred ;
   struct key *cached_requested_key ;
   char comm[16U] ;
   struct nameidata *nameidata ;
   struct sysv_sem sysvsem ;
   struct sysv_shm sysvshm ;
   unsigned long last_switch_count ;
   unsigned long last_switch_time ;
   struct fs_struct *fs ;
   struct files_struct *files ;
   struct nsproxy *nsproxy ;
   struct signal_struct *signal ;
   struct sighand_struct *sighand ;
   sigset_t blocked ;
   sigset_t real_blocked ;
   sigset_t saved_sigmask ;
   struct sigpending pending ;
   unsigned long sas_ss_sp ;
   size_t sas_ss_size ;
   unsigned int sas_ss_flags ;
   struct callback_head *task_works ;
   struct audit_context *audit_context ;
   kuid_t loginuid ;
   unsigned int sessionid ;
   struct seccomp seccomp ;
   u32 parent_exec_id ;
   u32 self_exec_id ;
   spinlock_t alloc_lock ;
   raw_spinlock_t pi_lock ;
   struct wake_q_node wake_q ;
   struct rb_root_cached pi_waiters ;
   struct task_struct *pi_top_task ;
   struct rt_mutex_waiter *pi_blocked_on ;
   struct mutex_waiter *blocked_on ;
   int non_block_count ;
   unsigned int irq_events ;
   unsigned long hardirq_enable_ip ;
   unsigned long hardirq_disable_ip ;
   unsigned int hardirq_enable_event ;
   unsigned int hardirq_disable_event ;
   int hardirqs_enabled ;
   int hardirq_context ;
   unsigned long softirq_disable_ip ;
   unsigned long softirq_enable_ip ;
   unsigned int softirq_disable_event ;
   unsigned int softirq_enable_event ;
   int softirqs_enabled ;
   int softirq_context ;
   u64 curr_chain_key ;
   int lockdep_depth ;
   unsigned int lockdep_recursion ;
   struct held_lock held_locks[48U] ;
   unsigned int in_ubsan ;
   void *journal_info ;
   struct bio_list *bio_list ;
   struct blk_plug *plug ;
   struct reclaim_state *reclaim_state ;
   struct backing_dev_info *backing_dev_info ;
   struct io_context *io_context ;
   struct capture_control *capture_control ;
   unsigned long ptrace_message ;
   kernel_siginfo_t *last_siginfo ;
   struct task_io_accounting ioac ;
   unsigned int psi_flags ;
   u64 acct_rss_mem1 ;
   u64 acct_vm_mem1 ;
   u64 acct_timexpd ;
   nodemask_t mems_allowed ;
   seqcount_t mems_allowed_seq ;
   int cpuset_mem_spread_rotor ;
   int cpuset_slab_spread_rotor ;
   struct css_set *cgroups ;
   struct list_head cg_list ;
   u32 closid ;
   u32 rmid ;
   struct robust_list_head *robust_list ;
   struct compat_robust_list_head *compat_robust_list ;
   struct list_head pi_state_list ;
   struct futex_pi_state *pi_state_cache ;
   struct mutex futex_exit_mutex ;
   unsigned int futex_state ;
   struct perf_event_context *perf_event_ctxp[2U] ;
   struct mutex perf_event_mutex ;
   struct list_head perf_event_list ;
   struct mempolicy *mempolicy ;
   short il_prev ;
   short pref_node_fork ;
   int numa_scan_seq ;
   unsigned int numa_scan_period ;
   unsigned int numa_scan_period_max ;
   int numa_preferred_nid ;
   unsigned long numa_migrate_retry ;
   u64 node_stamp ;
   u64 last_task_numa_placement ;
   u64 last_sum_exec_runtime ;
   struct callback_head numa_work ;
   struct numa_group *numa_group ;
   unsigned long *numa_faults ;
   unsigned long total_numa_faults ;
   unsigned long numa_faults_locality[3U] ;
   unsigned long numa_pages_migrated ;
   struct rseq *rseq ;
   u32 rseq_sig ;
   unsigned long rseq_event_mask ;
   struct tlbflush_unmap_batch tlb_ubc ;
   union __anonunion_328 __anonCompField_task_struct_58 ;
   struct pipe_inode_info *splice_pipe ;
   struct page_frag task_frag ;
   struct task_delay_info *delays ;
   int make_it_fail ;
   unsigned int fail_nth ;
   int nr_dirtied ;
   int nr_dirtied_pause ;
   unsigned long dirty_paused_when ;
   int latency_record_count ;
   struct latency_record latency_record[32U] ;
   u64 timer_slack_ns ;
   u64 default_timer_slack_ns ;
   unsigned int kasan_depth ;
   int curr_ret_stack ;
   int curr_ret_depth ;
   struct ftrace_ret_stack *ret_stack ;
   unsigned long long ftrace_timestamp ;
   atomic_t trace_overrun ;
   atomic_t tracing_graph_pause ;
   unsigned long trace ;
   unsigned long trace_recursion ;
   unsigned int kcov_mode ;
   unsigned int kcov_size ;
   void *kcov_area ;
   struct kcov *kcov ;
   u64 kcov_handle ;
   int kcov_sequence ;
   struct mem_cgroup *memcg_in_oom ;
   gfp_t memcg_oom_gfp_mask ;
   int memcg_oom_order ;
   unsigned int memcg_nr_pages_over_high ;
   struct mem_cgroup *active_memcg ;
   struct request_queue *throttle_queue ;
   struct uprobe_task *utask ;
   unsigned int sequential_io ;
   unsigned int sequential_io_avg ;
   unsigned long task_state_change ;
   int pagefault_disabled ;
   struct task_struct *oom_reaper_list ;
   struct vm_struct *stack_vm_area ;
   refcount_t stack_refcount ;
   int patch_state ;
   void *security ;
   struct thread_struct thread ;
};
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/extable.h"
struct exception_table_entry {
   int insn ;
   int fixup ;
   int handler ;
};
#line 36  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/uuid.h"
struct __anonstruct_uuid_t_404 {
   __u8 b[16U] ;
};
#line 36  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/uuid.h"
typedef struct __anonstruct_uuid_t_404 uuid_t;
#line 87  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uuid.h"
typedef unsigned long kernel_ulong_t;
#line 121  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mod_devicetable.h"
struct usb_device_id {
   __u16 match_flags ;
   __u16 idVendor ;
   __u16 idProduct ;
   __u16 bcdDevice_lo ;
   __u16 bcdDevice_hi ;
   __u8 bDeviceClass ;
   __u8 bDeviceSubClass ;
   __u8 bDeviceProtocol ;
   __u8 bInterfaceClass ;
   __u8 bInterfaceSubClass ;
   __u8 bInterfaceProtocol ;
   __u8 bInterfaceNumber ;
   kernel_ulong_t driver_info ;
};
#line 210  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mod_devicetable.h"
struct acpi_device_id {
   __u8 id[9U] ;
   kernel_ulong_t driver_data ;
   __u32 cls ;
   __u32 cls_msk ;
};
#line 260  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mod_devicetable.h"
struct of_device_id {
   char name[32U] ;
   char type[32U] ;
   char compatible[128U] ;
   void *data ;
};
#line 340  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mod_devicetable.h"
struct input_device_id {
   kernel_ulong_t flags ;
   __u16 bustype ;
   __u16 vendor ;
   __u16 product ;
   __u16 version ;
   kernel_ulong_t evbit[1U] ;
   kernel_ulong_t keybit[12U] ;
   kernel_ulong_t relbit[1U] ;
   kernel_ulong_t absbit[1U] ;
   kernel_ulong_t mscbit[1U] ;
   kernel_ulong_t ledbit[1U] ;
   kernel_ulong_t sndbit[1U] ;
   kernel_ulong_t ffbit[2U] ;
   kernel_ulong_t swbit[1U] ;
   kernel_ulong_t propbit[1U] ;
   kernel_ulong_t driver_info ;
};
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ioport.h"
struct resource {
   resource_size_t start ;
   resource_size_t end ;
   char *name ;
   unsigned long flags ;
   unsigned long desc ;
   struct resource *parent ;
   struct resource *sibling ;
   struct resource *child ;
};
#line 50  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pm.h"
struct pm_message {
   int event ;
};
#line 53  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pm.h"
typedef struct pm_message pm_message_t;
#line 278  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pm.h"
struct dev_pm_ops {
   int (*prepare)(struct device *) ;
   void (*complete)(struct device *) ;
   int (*suspend)(struct device *) ;
   int (*resume)(struct device *) ;
   int (*freeze)(struct device *) ;
   int (*thaw)(struct device *) ;
   int (*poweroff)(struct device *) ;
   int (*restore)(struct device *) ;
   int (*suspend_late)(struct device *) ;
   int (*resume_early)(struct device *) ;
   int (*freeze_late)(struct device *) ;
   int (*thaw_early)(struct device *) ;
   int (*poweroff_late)(struct device *) ;
   int (*restore_early)(struct device *) ;
   int (*suspend_noirq)(struct device *) ;
   int (*resume_noirq)(struct device *) ;
   int (*freeze_noirq)(struct device *) ;
   int (*thaw_noirq)(struct device *) ;
   int (*poweroff_noirq)(struct device *) ;
   int (*restore_noirq)(struct device *) ;
   int (*runtime_suspend)(struct device *) ;
   int (*runtime_resume)(struct device *) ;
   int (*runtime_idle)(struct device *) ;
};
#line 303 
enum rpm_status {
    RPM_ACTIVE = 0,
    RPM_RESUMING = 1,
    RPM_SUSPENDED = 2,
    RPM_SUSPENDING = 3
};
#line 310 
enum rpm_request {
    RPM_REQ_NONE = 0,
    RPM_REQ_IDLE = 1,
    RPM_REQ_SUSPEND = 2,
    RPM_REQ_AUTOSUSPEND = 3,
    RPM_REQ_RESUME = 4
};
#line 318 
struct wakeup_source;
#line 319 
struct wake_irq;
#line 320 
struct pm_domain_data;
#line 530  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pm.h"
struct pm_subsys_data {
   spinlock_t lock ;
   unsigned int refcount ;
   struct list_head clock_list ;
   struct pm_domain_data *domain_data ;
};
#line 573 
struct dev_pm_qos;
#line 573  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pm.h"
struct dev_pm_info {
   pm_message_t power_state ;
   unsigned int can_wakeup : 1 ;
   unsigned int async_suspend : 1 ;
   bool in_dpm_list : 1 ;
   bool is_prepared : 1 ;
   bool is_suspended : 1 ;
   bool is_noirq_suspended : 1 ;
   bool is_late_suspended : 1 ;
   bool no_pm : 1 ;
   bool early_init : 1 ;
   bool direct_complete : 1 ;
   u32 driver_flags ;
   spinlock_t lock ;
   struct list_head entry ;
   struct completion completion ;
   struct wakeup_source *wakeup ;
   bool wakeup_path : 1 ;
   bool syscore : 1 ;
   bool no_pm_callbacks : 1 ;
   unsigned int must_resume : 1 ;
   unsigned int may_skip_resume : 1 ;
   struct hrtimer suspend_timer ;
   unsigned long timer_expires ;
   struct work_struct work ;
   wait_queue_head_t wait_queue ;
   struct wake_irq *wakeirq ;
   atomic_t usage_count ;
   atomic_t child_count ;
   unsigned int disable_depth : 3 ;
   unsigned int idle_notification : 1 ;
   unsigned int request_pending : 1 ;
   unsigned int deferred_resume : 1 ;
   unsigned int runtime_auto : 1 ;
   bool ignore_children : 1 ;
   unsigned int no_callbacks : 1 ;
   unsigned int irq_safe : 1 ;
   unsigned int use_autosuspend : 1 ;
   unsigned int timer_autosuspends : 1 ;
   unsigned int memalloc_noio : 1 ;
   unsigned int links_count ;
   enum rpm_request request ;
   enum rpm_status runtime_status ;
   int runtime_error ;
   int autosuspend_delay ;
   u64 last_busy ;
   u64 active_time ;
   u64 suspended_time ;
   u64 accounting_timestamp ;
   struct pm_subsys_data *subsys_data ;
   void (*set_latency_tolerance)(struct device *, s32 ) ;
   struct dev_pm_qos *qos ;
};
#line 650  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pm.h"
struct dev_pm_domain {
   struct dev_pm_ops ops ;
   int (*start)(struct device *) ;
   void (*detach)(struct device *, bool ) ;
   int (*activate)(struct device *) ;
   void (*sync)(struct device *) ;
   void (*dismiss)(struct device *) ;
};
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ratelimit.h"
struct ratelimit_state {
   raw_spinlock_t lock ;
   int interval ;
   int burst ;
   int printed ;
   int missed ;
   unsigned long begin ;
   unsigned long flags ;
};
#line 5  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/device.h"
struct dev_archdata {
   void *iommu ;
};
#line 12 
struct dma_map_ops;
#line 23 
struct device_driver;
#line 24 
struct driver_private;
#line 25 
struct class;
#line 26 
struct subsys_private;
#line 27 
struct bus_type;
#line 28 
struct iommu_ops;
#line 29 
struct iommu_group;
#line 30 
struct iommu_fwspec;
#line 31 
struct dev_pin_info;
#line 32 
struct iommu_param;
#line 122  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
struct bus_type {
   char *name ;
   char *dev_name ;
   struct device *dev_root ;
   struct attribute_group **bus_groups ;
   struct attribute_group **dev_groups ;
   struct attribute_group **drv_groups ;
   int (*match)(struct device *, struct device_driver *) ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   int (*probe)(struct device *) ;
   void (*sync_state)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*online)(struct device *) ;
   int (*offline)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   int (*num_vf)(struct device *) ;
   int (*dma_configure)(struct device *) ;
   struct dev_pm_ops *pm ;
   struct iommu_ops *iommu_ops ;
   struct subsys_private *p ;
   struct lock_class_key lock_key ;
   bool need_parent_lock ;
};
#line 164 
struct device_type;
#line 309 
enum probe_type {
    PROBE_DEFAULT_STRATEGY = 0,
    PROBE_PREFER_ASYNCHRONOUS = 1,
    PROBE_FORCE_SYNCHRONOUS = 2
};
#line 383  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
struct device_driver {
   char *name ;
   struct bus_type *bus ;
   struct module *owner ;
   char *mod_name ;
   bool suppress_bind_attrs ;
   enum probe_type probe_type ;
   struct of_device_id *of_match_table ;
   struct acpi_device_id *acpi_match_table ;
   int (*probe)(struct device *) ;
   void (*sync_state)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct attribute_group **groups ;
   struct attribute_group **dev_groups ;
   struct dev_pm_ops *pm ;
   void (*coredump)(struct device *) ;
   struct driver_private *p ;
};
#line 589  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
struct class {
   char *name ;
   struct module *owner ;
   struct attribute_group **class_groups ;
   struct attribute_group **dev_groups ;
   struct kobject *dev_kobj ;
   int (*dev_uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *) ;
   void (*class_release)(struct class *) ;
   void (*dev_release)(struct device *) ;
   int (*shutdown_pre)(struct device *) ;
   struct kobj_ns_type_operations *ns_type ;
   void *(*namespace)(struct device *) ;
   void (*get_ownership)(struct device *, kuid_t *, kgid_t *) ;
   struct dev_pm_ops *pm ;
   struct subsys_private *p ;
};
#line 809  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
struct device_type {
   char *name ;
   struct attribute_group **groups ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *, kuid_t *, kgid_t *) ;
   void (*release)(struct device *) ;
   struct dev_pm_ops *pm ;
};
#line 1008  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
struct device_dma_parameters {
   unsigned int max_segment_size ;
   unsigned long segment_boundary_mask ;
};
#line 1139 
enum dl_dev_state {
    DL_DEV_NO_DRIVER = 0,
    DL_DEV_PROBING = 1,
    DL_DEV_DRIVER_BOUND = 2,
    DL_DEV_UNBINDING = 3
};
#line 1164  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
struct dev_links_info {
   struct list_head suppliers ;
   struct list_head consumers ;
   struct list_head needs_suppliers ;
   struct list_head defer_sync ;
   bool need_for_probe ;
   enum dl_dev_state status ;
};
#line 1259 
struct dma_coherent_mem;
#line 1259 
struct cma;
#line 1259  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
struct device {
   struct kobject kobj ;
   struct device *parent ;
   struct device_private *p ;
   char *init_name ;
   struct device_type *type ;
   struct bus_type *bus ;
   struct device_driver *driver ;
   void *platform_data ;
   void *driver_data ;
   struct mutex lockdep_mutex ;
   struct mutex mutex ;
   struct dev_links_info links ;
   struct dev_pm_info power ;
   struct dev_pm_domain *pm_domain ;
   struct irq_domain *msi_domain ;
   struct dev_pin_info *pins ;
   struct list_head msi_list ;
   struct dma_map_ops *dma_ops ;
   u64 *dma_mask ;
   u64 coherent_dma_mask ;
   u64 bus_dma_limit ;
   unsigned long dma_pfn_offset ;
   struct device_dma_parameters *dma_parms ;
   struct list_head dma_pools ;
   struct dma_coherent_mem *dma_mem ;
   struct cma *cma_area ;
   struct dev_archdata archdata ;
   struct device_node *of_node ;
   struct fwnode_handle *fwnode ;
   int numa_node ;
   dev_t devt ;
   u32 id ;
   spinlock_t devres_lock ;
   struct list_head devres_head ;
   struct class *class ;
   struct attribute_group **groups ;
   void (*release)(struct device *) ;
   struct iommu_group *iommu_group ;
   struct iommu_fwspec *iommu_fwspec ;
   struct iommu_param *iommu_param ;
   bool offline_disabled : 1 ;
   bool offline : 1 ;
   bool of_node_reused : 1 ;
   bool state_synced : 1 ;
};
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pm_wakeup.h"
struct wakeup_source {
   char *name ;
   int id ;
   struct list_head entry ;
   spinlock_t lock ;
   struct wake_irq *wakeirq ;
   struct timer_list timer ;
   unsigned long timer_expires ;
   ktime_t total_time ;
   ktime_t max_time ;
   ktime_t last_time ;
   ktime_t start_prevent_time ;
   ktime_t prevent_sleep_time ;
   unsigned long event_count ;
   unsigned long active_count ;
   unsigned long relax_count ;
   unsigned long expire_count ;
   unsigned long wakeup_count ;
   struct device *dev ;
   bool active : 1 ;
   bool autosleep_enabled : 1 ;
};
#line 289  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
struct usb_device_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __le16 bcdUSB ;
   __u8 bDeviceClass ;
   __u8 bDeviceSubClass ;
   __u8 bDeviceProtocol ;
   __u8 bMaxPacketSize0 ;
   __le16 idVendor ;
   __le16 idProduct ;
   __le16 bcdDevice ;
   __u8 iManufacturer ;
   __u8 iProduct ;
   __u8 iSerialNumber ;
   __u8 bNumConfigurations ;
} __attribute__((__packed__));
#line 345  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
struct usb_config_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __le16 wTotalLength ;
   __u8 bNumInterfaces ;
   __u8 bConfigurationValue ;
   __u8 iConfiguration ;
   __u8 bmAttributes ;
   __u8 bMaxPower ;
} __attribute__((__packed__));
#line 382  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
struct usb_interface_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __u8 bInterfaceNumber ;
   __u8 bAlternateSetting ;
   __u8 bNumEndpoints ;
   __u8 bInterfaceClass ;
   __u8 bInterfaceSubClass ;
   __u8 bInterfaceProtocol ;
   __u8 iInterface ;
} __attribute__((__packed__));
#line 400  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
struct usb_endpoint_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __u8 bEndpointAddress ;
   __u8 bmAttributes ;
   __le16 wMaxPacketSize ;
   __u8 bInterval ;
   __u8 bRefresh ;
   __u8 bSynchAddress ;
} __attribute__((__packed__));
#line 670  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
struct usb_ssp_isoc_ep_comp_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __le16 wReseved ;
   __le32 dwBytesPerInterval ;
} __attribute__((__packed__));
#line 682  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
struct usb_ss_ep_comp_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __u8 bMaxBurst ;
   __u8 bmAttributes ;
   __le16 wBytesPerInterval ;
} __attribute__((__packed__));
#line 776  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
struct usb_interface_assoc_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __u8 bFirstInterface ;
   __u8 bInterfaceCount ;
   __u8 bFunctionClass ;
   __u8 bFunctionSubClass ;
   __u8 bFunctionProtocol ;
   __u8 iFunction ;
} __attribute__((__packed__));
#line 837  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
struct usb_bos_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __le16 wTotalLength ;
   __u8 bNumDeviceCaps ;
} __attribute__((__packed__));
#line 888  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
struct usb_ext_cap_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __u8 bDevCapabilityType ;
   __le32 bmAttributes ;
} __attribute__((__packed__));
#line 910  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
struct usb_ss_cap_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __u8 bDevCapabilityType ;
   __u8 bmAttributes ;
   __le16 wSpeedSupported ;
   __u8 bFunctionalitySupport ;
   __u8 bU1devExitLat ;
   __le16 bU2DevExitLat ;
} __attribute__((__packed__));
#line 933  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
struct usb_ss_container_id_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __u8 bDevCapabilityType ;
   __u8 bReserved ;
   __u8 ContainerID[16U] ;
} __attribute__((__packed__));
#line 948  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
struct usb_ssp_cap_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __u8 bDevCapabilityType ;
   __u8 bReserved ;
   __le32 bmAttributes ;
   __le16 wFunctionalitySupport ;
   __le16 wReserved ;
   __le32 bmSublinkSpeedAttr[1U] ;
} __attribute__((__packed__));
#line 1073  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
struct usb_ptm_cap_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __u8 bDevCapabilityType ;
} __attribute__((__packed__));
#line 1134 
enum usb_device_speed {
    USB_SPEED_UNKNOWN = 0,
    USB_SPEED_LOW = 1,
    USB_SPEED_FULL = 2,
    USB_SPEED_HIGH = 3,
    USB_SPEED_WIRELESS = 4,
    USB_SPEED_SUPER = 5,
    USB_SPEED_SUPER_PLUS = 6
};
#line 1144 
enum usb_device_state {
    USB_STATE_NOTATTACHED = 0,
    USB_STATE_ATTACHED = 1,
    USB_STATE_POWERED = 2,
    USB_STATE_RECONNECTING = 3,
    USB_STATE_UNAUTHENTICATED = 4,
    USB_STATE_DEFAULT = 5,
    USB_STATE_ADDRESS = 6,
    USB_STATE_CONFIGURED = 7,
    USB_STATE_SUSPENDED = 8
};
#line 110  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/interrupt.h"
struct proc_dir_entry;
#line 604  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/interrupt.h"
struct tasklet_struct {
   struct tasklet_struct *next ;
   unsigned long state ;
   atomic_t count ;
   void (*func)(unsigned long ) ;
   unsigned long data ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_bl.h"
struct hlist_bl_node;
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_bl.h"
struct hlist_bl_head {
   struct hlist_bl_node *first ;
};
#line 38  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_bl.h"
struct hlist_bl_node {
   struct hlist_bl_node *next ;
   struct hlist_bl_node **pprev ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockref.h"
struct __anonstruct_419 {
   spinlock_t lock ;
   int count ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockref.h"
union __anonunion_418 {
   struct __anonstruct_419 __anonCompField___anonunion_418_59 ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockref.h"
struct lockref {
   union __anonunion_418 __anonCompField_lockref_60 ;
};
#line 78  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/stringhash.h"
struct path;
#line 79 
struct vfsmount;
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dcache.h"
struct __anonstruct_421 {
   u32 hash ;
   u32 len ;
};
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dcache.h"
union __anonunion_420 {
   struct __anonstruct_421 __anonCompField___anonunion_420_61 ;
   u64 hash_len ;
};
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dcache.h"
struct qstr {
   union __anonunion_420 __anonCompField_qstr_62 ;
   unsigned char *name ;
};
#line 89 
struct dentry_operations;
#line 89  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dcache.h"
union __anonunion_422 {
   struct list_head d_lru ;
   wait_queue_head_t *d_wait ;
};
#line 89  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dcache.h"
union __anonunion_d_u_423 {
   struct hlist_node d_alias ;
   struct hlist_bl_node d_in_lookup_hash ;
   struct callback_head d_rcu ;
};
#line 89  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dcache.h"
struct dentry {
   unsigned int d_flags ;
   seqcount_t d_seq ;
   struct hlist_bl_node d_hash ;
   struct dentry *d_parent ;
   struct qstr d_name ;
   struct inode *d_inode ;
   unsigned char d_iname[32U] ;
   struct lockref d_lockref ;
   struct dentry_operations *d_op ;
   struct super_block *d_sb ;
   unsigned long d_time ;
   void *d_fsdata ;
   union __anonunion_422 __anonCompField_dentry_63 ;
   struct list_head d_child ;
   struct list_head d_subdirs ;
   union __anonunion_d_u_423 d_u ;
} __attribute__((__designated_init__));
#line 135  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dcache.h"
struct dentry_operations {
   int (*d_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_weak_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_hash)(struct dentry *, struct qstr *) ;
   int (*d_compare)(struct dentry *, unsigned int , char *, struct qstr *) ;
   int (*d_delete)(struct dentry *) ;
   int (*d_init)(struct dentry *) ;
   void (*d_release)(struct dentry *) ;
   void (*d_prune)(struct dentry *) ;
   void (*d_iput)(struct dentry *, struct inode *) ;
   char *(*d_dname)(struct dentry *, char *, int ) ;
   struct vfsmount *(*d_automount)(struct path *) ;
   int (*d_manage)(struct path *, bool ) ;
   struct dentry *(*d_real)(struct dentry *, struct inode *) ;
} __attribute__((__aligned__(64)));
#line 8  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/path.h"
struct path {
   struct vfsmount *mnt ;
   struct dentry *dentry ;
} __attribute__((__designated_init__));
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/shrinker.h"
struct shrink_control {
   gfp_t gfp_mask ;
   int nid ;
   unsigned long nr_to_scan ;
   unsigned long nr_scanned ;
   struct mem_cgroup *memcg ;
};
#line 60  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/shrinker.h"
struct shrinker {
   unsigned long (*count_objects)(struct shrinker *, struct shrink_control *) ;
   unsigned long (*scan_objects)(struct shrinker *, struct shrink_control *) ;
   long batch ;
   int seeks ;
   unsigned int flags ;
   struct list_head list ;
   int id ;
   atomic_long_t *nr_deferred ;
};
#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_lru.h"
struct list_lru_one {
   struct list_head list ;
   long nr_items ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_lru.h"
struct list_lru_memcg {
   struct callback_head rcu ;
   struct list_lru_one *lru[0U] ;
};
#line 40  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_lru.h"
struct list_lru_node {
   spinlock_t lock ;
   struct list_lru_one lru ;
   struct list_lru_memcg *memcg_lrus ;
   long nr_items ;
} __attribute__((__aligned__(64)));
#line 52  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_lru.h"
struct list_lru {
   struct list_lru_node *node ;
   struct list_head list ;
   int shrinker_id ;
   bool memcg_aware ;
};
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/capability.h"
struct kernel_cap_struct {
   __u32 cap[2U] ;
};
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/capability.h"
typedef struct kernel_cap_struct kernel_cap_t;
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fiemap.h"
struct fiemap_extent {
   __u64 fe_logical ;
   __u64 fe_physical ;
   __u64 fe_length ;
   __u64 fe_reserved64[2U] ;
   __u32 fe_flags ;
   __u32 fe_reserved[3U] ;
};
#line 39 
enum migrate_mode {
    MIGRATE_ASYNC = 0,
    MIGRATE_SYNC_LIGHT = 1,
    MIGRATE_SYNC = 2,
    MIGRATE_SYNC_NO_COPY = 3
};
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rcuwait.h"
struct rcuwait {
   struct task_struct *task ;
};
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rcu_sync.h"
struct rcu_sync {
   int gp_state ;
   int gp_count ;
   wait_queue_head_t gp_wait ;
   struct callback_head cb_head ;
};
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/percpu-rwsem.h"
struct percpu_rw_semaphore {
   struct rcu_sync rss ;
   unsigned int *read_count ;
   struct rw_semaphore rw_sem ;
   struct rcuwait writer ;
   int readers_block ;
};
#line 10  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/delayed_call.h"
struct delayed_call {
   void (*fn)(void *) ;
   void *arg ;
};
#line 35  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/delayed_call.h"
typedef u32 errseq_t;
#line 72  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/iocontext.h"
union __anonunion_430 {
   struct list_head q_node ;
   struct kmem_cache *__rcu_icq_cache ;
};
#line 72  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/iocontext.h"
union __anonunion_431 {
   struct hlist_node ioc_node ;
   struct callback_head __rcu_head ;
};
#line 72  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/iocontext.h"
struct io_cq {
   struct request_queue *q ;
   struct io_context *ioc ;
   union __anonunion_430 __anonCompField_io_cq_64 ;
   union __anonunion_431 __anonCompField_io_cq_65 ;
   unsigned int flags ;
};
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/iocontext.h"
struct io_context {
   atomic_long_t refcount ;
   atomic_t active_ref ;
   atomic_t nr_tasks ;
   spinlock_t lock ;
   unsigned short ioprio ;
   int nr_batch_requests ;
   unsigned long last_waited ;
   struct xarray icq_tree ;
   struct io_cq *icq_hint ;
   struct hlist_head icq_list ;
   struct work_struct release_work ;
};
#line 286  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fs.h"
struct bdi_writeback;
#line 287 
struct bio;
#line 288 
struct export_operations;
#line 289 
struct hd_geometry;
#line 290 
struct iovec;
#line 291 
struct kiocb;
#line 292 
struct kstatfs;
#line 293 
struct swap_info_struct;
#line 294 
struct iov_iter;
#line 295 
struct fscrypt_info;
#line 296 
struct fscrypt_operations;
#line 297 
struct fsverity_info;
#line 298 
struct fsverity_operations;
#line 299 
struct fs_parameter_description;
#line 224  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct iattr {
   unsigned int ia_valid ;
   umode_t ia_mode ;
   kuid_t ia_uid ;
   kgid_t ia_gid ;
   loff_t ia_size ;
   struct timespec64 ia_atime ;
   struct timespec64 ia_mtime ;
   struct timespec64 ia_ctime ;
   struct file *ia_file ;
};
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/percpu_counter.h"
struct percpu_counter {
   raw_spinlock_t lock ;
   s64 count ;
   struct list_head list ;
   s32 *counters ;
};
#line 214  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dqblk_xfs.h"
struct dquot;
#line 215 
struct kqid;
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/projid.h"
typedef __kernel_uid32_t projid_t;
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/projid.h"
struct __anonstruct_kprojid_t_432 {
   projid_t val ;
};
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/projid.h"
typedef struct __anonstruct_kprojid_t_432 kprojid_t;
#line 180  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/quota.h"
enum quota_type {
    USRQUOTA = 0,
    GRPQUOTA = 1,
    PRJQUOTA = 2
};
#line 66  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
typedef long long qsize_t;
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
union __anonunion_433 {
   kuid_t uid ;
   kgid_t gid ;
   kprojid_t projid ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct kqid {
   union __anonunion_433 __anonCompField_kqid_66 ;
   enum quota_type type ;
};
#line 205  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct mem_dqblk {
   qsize_t dqb_bhardlimit ;
   qsize_t dqb_bsoftlimit ;
   qsize_t dqb_curspace ;
   qsize_t dqb_rsvspace ;
   qsize_t dqb_ihardlimit ;
   qsize_t dqb_isoftlimit ;
   qsize_t dqb_curinodes ;
   time64_t dqb_btime ;
   time64_t dqb_itime ;
};
#line 216 
struct quota_format_type;
#line 222  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct mem_dqinfo {
   struct quota_format_type *dqi_format ;
   int dqi_fmt_id ;
   struct list_head dqi_dirty_list ;
   unsigned long dqi_flags ;
   unsigned int dqi_bgrace ;
   unsigned int dqi_igrace ;
   qsize_t dqi_max_spc_limit ;
   qsize_t dqi_max_ino_limit ;
   void *dqi_priv ;
};
#line 294  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct dquot {
   struct hlist_node dq_hash ;
   struct list_head dq_inuse ;
   struct list_head dq_free ;
   struct list_head dq_dirty ;
   struct mutex dq_lock ;
   spinlock_t dq_dqb_lock ;
   atomic_t dq_count ;
   struct super_block *dq_sb ;
   struct kqid dq_id ;
   loff_t dq_off ;
   unsigned long dq_flags ;
   struct mem_dqblk dq_dqb ;
};
#line 310  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct quota_format_ops {
   int (*check_quota_file)(struct super_block *, int ) ;
   int (*read_file_info)(struct super_block *, int ) ;
   int (*write_file_info)(struct super_block *, int ) ;
   int (*free_file_info)(struct super_block *, int ) ;
   int (*read_dqblk)(struct dquot *) ;
   int (*commit_dqblk)(struct dquot *) ;
   int (*release_dqblk)(struct dquot *) ;
   int (*get_next_id)(struct super_block *, struct kqid *) ;
};
#line 322  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct dquot_operations {
   int (*write_dquot)(struct dquot *) ;
   struct dquot *(*alloc_dquot)(struct super_block *, int ) ;
   void (*destroy_dquot)(struct dquot *) ;
   int (*acquire_dquot)(struct dquot *) ;
   int (*release_dquot)(struct dquot *) ;
   int (*mark_dirty)(struct dquot *) ;
   int (*write_info)(struct super_block *, int ) ;
   qsize_t *(*get_reserved_space)(struct inode *) ;
   int (*get_projid)(struct inode *, kprojid_t *) ;
   int (*get_inode_usage)(struct inode *, qsize_t *) ;
   int (*get_next_id)(struct super_block *, struct kqid *) ;
};
#line 343  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct qc_dqblk {
   int d_fieldmask ;
   u64 d_spc_hardlimit ;
   u64 d_spc_softlimit ;
   u64 d_ino_hardlimit ;
   u64 d_ino_softlimit ;
   u64 d_space ;
   u64 d_ino_count ;
   s64 d_ino_timer ;
   s64 d_spc_timer ;
   int d_ino_warns ;
   int d_spc_warns ;
   u64 d_rt_spc_hardlimit ;
   u64 d_rt_spc_softlimit ;
   u64 d_rt_space ;
   s64 d_rt_spc_timer ;
   int d_rt_spc_warns ;
};
#line 395  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct qc_type_state {
   unsigned int flags ;
   unsigned int spc_timelimit ;
   unsigned int ino_timelimit ;
   unsigned int rt_spc_timelimit ;
   unsigned int spc_warnlimit ;
   unsigned int ino_warnlimit ;
   unsigned int rt_spc_warnlimit ;
   unsigned long long ino ;
   blkcnt_t blocks ;
   blkcnt_t nextents ;
};
#line 409  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct qc_state {
   unsigned int s_incoredqs ;
   struct qc_type_state s_state[3U] ;
};
#line 415  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct qc_info {
   int i_fieldmask ;
   unsigned int i_flags ;
   unsigned int i_spc_timelimit ;
   unsigned int i_ino_timelimit ;
   unsigned int i_rt_spc_timelimit ;
   unsigned int i_spc_warnlimit ;
   unsigned int i_ino_warnlimit ;
   unsigned int i_rt_spc_warnlimit ;
};
#line 428  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct quotactl_ops {
   int (*quota_on)(struct super_block *, int , int , struct path *) ;
   int (*quota_off)(struct super_block *, int ) ;
   int (*quota_enable)(struct super_block *, unsigned int ) ;
   int (*quota_disable)(struct super_block *, unsigned int ) ;
   int (*quota_sync)(struct super_block *, int ) ;
   int (*set_info)(struct super_block *, int , struct qc_info *) ;
   int (*get_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*get_nextdqblk)(struct super_block *, struct kqid *, struct qc_dqblk *) ;
   int (*set_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*get_state)(struct super_block *, struct qc_state *) ;
   int (*rm_xquota)(struct super_block *, unsigned int ) ;
};
#line 443  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct quota_format_type {
   int qf_fmt_id ;
   struct quota_format_ops *qf_ops ;
   struct module *qf_owner ;
   struct quota_format_type *qf_next ;
};
#line 518  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct quota_info {
   unsigned int flags ;
   struct rw_semaphore dqio_sem ;
   struct inode *files[3U] ;
   struct mem_dqinfo info[3U] ;
   struct quota_format_ops *ops[3U] ;
};
#line 538 
struct writeback_control;
#line 539 
enum rw_hint {
    WRITE_LIFE_NOT_SET = 0,
    WRITE_LIFE_NONE = 1,
    WRITE_LIFE_SHORT = 2,
    WRITE_LIFE_MEDIUM = 3,
    WRITE_LIFE_LONG = 4,
    WRITE_LIFE_EXTREME = 5
};
#line 318  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct kiocb {
   struct file *ki_filp ;
   loff_t ki_pos ;
   void (*ki_complete)(struct kiocb *, long , long ) ;
   void *private ;
   int ki_flags ;
   u16 ki_hint ;
   u16 ki_ioprio ;
   unsigned int ki_cookie ;
};
#line 339  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
union __anonunion_arg_435 {
   char *buf ;
   void *data ;
};
#line 339  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct __anonstruct_read_descriptor_t_434 {
   size_t written ;
   size_t count ;
   union __anonunion_arg_435 arg ;
   int error ;
};
#line 339  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
typedef struct __anonstruct_read_descriptor_t_434 read_descriptor_t;
#line 362  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct address_space_operations {
   int (*writepage)(struct page *, struct writeback_control *) ;
   int (*readpage)(struct file *, struct page *) ;
   int (*writepages)(struct address_space *, struct writeback_control *) ;
   int (*set_page_dirty)(struct page *) ;
   int (*readpages)(struct file *, struct address_space *, struct list_head *, unsigned int ) ;
   int (*write_begin)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page **, void **) ;
   int (*write_end)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page *, void *) ;
   sector_t (*bmap)(struct address_space *, sector_t ) ;
   void (*invalidatepage)(struct page *, unsigned int , unsigned int ) ;
   int (*releasepage)(struct page *, gfp_t ) ;
   void (*freepage)(struct page *) ;
   ssize_t (*direct_IO)(struct kiocb *, struct iov_iter *) ;
   int (*migratepage)(struct address_space *, struct page *, struct page *, enum migrate_mode ) ;
   bool (*isolate_page)(struct page *, isolate_mode_t ) ;
   void (*putback_page)(struct page *) ;
   int (*launder_page)(struct page *) ;
   int (*is_partially_uptodate)(struct page *, unsigned long , unsigned long ) ;
   void (*is_dirty_writeback)(struct page *, bool *, bool *) ;
   int (*error_remove_page)(struct address_space *, struct page *) ;
   int (*swap_activate)(struct swap_info_struct *, struct file *, sector_t *) ;
   void (*swap_deactivate)(struct file *) ;
};
#line 445  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct address_space {
   struct inode *host ;
   struct xarray i_pages ;
   gfp_t gfp_mask ;
   atomic_t i_mmap_writable ;
   atomic_t nr_thps ;
   struct rb_root_cached i_mmap ;
   struct rw_semaphore i_mmap_rwsem ;
   unsigned long nrpages ;
   unsigned long nrexceptional ;
   unsigned long writeback_index ;
   struct address_space_operations *a_ops ;
   unsigned long flags ;
   errseq_t wb_err ;
   spinlock_t private_lock ;
   struct list_head private_list ;
   void *private_data ;
} __attribute__((__designated_init__, __aligned__(8)));
#line 473 
struct hd_struct;
#line 473 
struct gendisk;
#line 473  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct block_device {
   dev_t bd_dev ;
   int bd_openers ;
   struct inode *bd_inode ;
   struct super_block *bd_super ;
   struct mutex bd_mutex ;
   void *bd_claiming ;
   void *bd_holder ;
   int bd_holders ;
   bool bd_write_holder ;
   struct list_head bd_holder_disks ;
   struct block_device *bd_contains ;
   unsigned int bd_block_size ;
   u8 bd_partno ;
   struct hd_struct *bd_part ;
   unsigned int bd_part_count ;
   int bd_invalidated ;
   struct gendisk *bd_disk ;
   struct request_queue *bd_queue ;
   struct backing_dev_info *bd_bdi ;
   struct list_head bd_list ;
   unsigned long bd_private ;
   int bd_fsfreeze_count ;
   struct mutex bd_fsfreeze_mutex ;
} __attribute__((__designated_init__));
#line 587 
struct posix_acl;
#line 614 
struct fsnotify_mark_connector;
#line 628 
struct inode_operations;
#line 628  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
union __anonunion_438 {
   unsigned int i_nlink ;
   unsigned int __i_nlink ;
};
#line 628  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
union __anonunion_439 {
   struct hlist_head i_dentry ;
   struct callback_head i_rcu ;
};
#line 628  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
union __anonunion_440 {
   struct file_operations *i_fop ;
   void (*free_inode)(struct inode *) ;
};
#line 628 
struct file_lock_context;
#line 628  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
union __anonunion_441 {
   struct pipe_inode_info *i_pipe ;
   struct block_device *i_bdev ;
   struct cdev *i_cdev ;
   char *i_link ;
   unsigned int i_dir_seq ;
};
#line 628  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct inode {
   umode_t i_mode ;
   unsigned short i_opflags ;
   kuid_t i_uid ;
   kgid_t i_gid ;
   unsigned int i_flags ;
   struct posix_acl *i_acl ;
   struct posix_acl *i_default_acl ;
   struct inode_operations *i_op ;
   struct super_block *i_sb ;
   struct address_space *i_mapping ;
   void *i_security ;
   unsigned long i_ino ;
   union __anonunion_438 __anonCompField_inode_67 ;
   dev_t i_rdev ;
   loff_t i_size ;
   struct timespec64 i_atime ;
   struct timespec64 i_mtime ;
   struct timespec64 i_ctime ;
   spinlock_t i_lock ;
   unsigned short i_bytes ;
   u8 i_blkbits ;
   u8 i_write_hint ;
   blkcnt_t i_blocks ;
   unsigned long i_state ;
   struct rw_semaphore i_rwsem ;
   unsigned long dirtied_when ;
   unsigned long dirtied_time_when ;
   struct hlist_node i_hash ;
   struct list_head i_io_list ;
   struct bdi_writeback *i_wb ;
   int i_wb_frn_winner ;
   u16 i_wb_frn_avg_time ;
   u16 i_wb_frn_history ;
   struct list_head i_lru ;
   struct list_head i_sb_list ;
   struct list_head i_wb_list ;
   union __anonunion_439 __anonCompField_inode_68 ;
   atomic64_t i_version ;
   atomic_t i_count ;
   atomic_t i_dio_count ;
   atomic_t i_writecount ;
   atomic_t i_readcount ;
   union __anonunion_440 __anonCompField_inode_69 ;
   struct file_lock_context *i_flctx ;
   struct address_space i_data ;
   struct list_head i_devices ;
   union __anonunion_441 __anonCompField_inode_70 ;
   __u32 i_generation ;
   __u32 i_fsnotify_mask ;
   struct fsnotify_mark_connector *i_fsnotify_marks ;
   struct fscrypt_info *i_crypt_info ;
   struct fsverity_info *i_verity_info ;
   void *i_private ;
} __attribute__((__designated_init__));
#line 904  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct fown_struct {
   rwlock_t lock ;
   struct pid *pid ;
   enum pid_type pid_type ;
   kuid_t uid ;
   kuid_t euid ;
   int signum ;
};
#line 915  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct file_ra_state {
   unsigned long start ;
   unsigned int size ;
   unsigned int async_size ;
   unsigned int ra_pages ;
   unsigned int mmap_miss ;
   loff_t prev_pos ;
};
#line 935  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
union __anonunion_f_u_442 {
   struct llist_node fu_llist ;
   struct callback_head fu_rcuhead ;
};
#line 935  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct file {
   union __anonunion_f_u_442 f_u ;
   struct path f_path ;
   struct inode *f_inode ;
   struct file_operations *f_op ;
   spinlock_t f_lock ;
   enum rw_hint f_write_hint ;
   atomic_long_t f_count ;
   unsigned int f_flags ;
   fmode_t f_mode ;
   struct mutex f_pos_lock ;
   loff_t f_pos ;
   struct fown_struct f_owner ;
   struct cred *f_cred ;
   struct file_ra_state f_ra ;
   u64 f_version ;
   void *f_security ;
   void *private_data ;
   struct list_head f_ep_links ;
   struct list_head f_tfile_llink ;
   struct address_space *f_mapping ;
   errseq_t f_wb_err ;
} __attribute__((__designated_init__, __aligned__(4)));
#line 988  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
typedef void *fl_owner_t;
#line 1026 
struct file_lock;
#line 1029  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct file_lock_operations {
   void (*fl_copy_lock)(struct file_lock *, struct file_lock *) ;
   void (*fl_release_private)(struct file_lock *) ;
};
#line 1034  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct lock_manager_operations {
   fl_owner_t (*lm_get_owner)(fl_owner_t ) ;
   void (*lm_put_owner)(fl_owner_t ) ;
   void (*lm_notify)(struct file_lock *) ;
   int (*lm_grant)(struct file_lock *, int ) ;
   bool (*lm_break)(struct file_lock *) ;
   int (*lm_change)(struct file_lock *, int , struct list_head *) ;
   void (*lm_setup)(struct file_lock *, void **) ;
};
#line 1052 
struct net;
#line 1058 
struct nlm_lockowner;
#line 10  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/nfs_fs_i.h"
struct nfs_lock_info {
   u32 state ;
   struct nlm_lockowner *owner ;
   struct list_head list ;
};
#line 15 
struct nfs4_lock_state;
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/nfs_fs_i.h"
struct nfs4_lock_info {
   struct nfs4_lock_state *owner ;
};
#line 1079  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct fasync_struct;
#line 1079  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct __anonstruct_afs_444 {
   struct list_head link ;
   int state ;
   unsigned int debug_id ;
};
#line 1079  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
union __anonunion_fl_u_443 {
   struct nfs_lock_info nfs_fl ;
   struct nfs4_lock_info nfs4_fl ;
   struct __anonstruct_afs_444 afs ;
};
#line 1079  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct file_lock {
   struct file_lock *fl_blocker ;
   struct list_head fl_list ;
   struct hlist_node fl_link ;
   struct list_head fl_blocked_requests ;
   struct list_head fl_blocked_member ;
   fl_owner_t fl_owner ;
   unsigned int fl_flags ;
   unsigned char fl_type ;
   unsigned int fl_pid ;
   int fl_link_cpu ;
   wait_queue_head_t fl_wait ;
   struct file *fl_file ;
   loff_t fl_start ;
   loff_t fl_end ;
   struct fasync_struct *fl_fasync ;
   unsigned long fl_break_time ;
   unsigned long fl_downgrade_time ;
   struct file_lock_operations *fl_ops ;
   struct lock_manager_operations *fl_lmops ;
   union __anonunion_fl_u_443 fl_u ;
} __attribute__((__designated_init__));
#line 1117  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct file_lock_context {
   spinlock_t flc_lock ;
   struct list_head flc_flock ;
   struct list_head flc_posix ;
   struct list_head flc_lease ;
};
#line 1331  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct fasync_struct {
   rwlock_t fa_lock ;
   int magic ;
   int fa_fd ;
   struct fasync_struct *fa_next ;
   struct file *fa_file ;
   struct callback_head fa_rcu ;
};
#line 1418  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct sb_writers {
   int frozen ;
   wait_queue_head_t wait_unfrozen ;
   struct percpu_rw_semaphore rw_sem[3U] ;
};
#line 1424 
struct super_operations;
#line 1424 
struct xattr_handler;
#line 1424 
struct mtd_info;
#line 1424  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct super_block {
   struct list_head s_list ;
   dev_t s_dev ;
   unsigned char s_blocksize_bits ;
   unsigned long s_blocksize ;
   loff_t s_maxbytes ;
   struct file_system_type *s_type ;
   struct super_operations *s_op ;
   struct dquot_operations *dq_op ;
   struct quotactl_ops *s_qcop ;
   struct export_operations *s_export_op ;
   unsigned long s_flags ;
   unsigned long s_iflags ;
   unsigned long s_magic ;
   struct dentry *s_root ;
   struct rw_semaphore s_umount ;
   int s_count ;
   atomic_t s_active ;
   void *s_security ;
   struct xattr_handler **s_xattr ;
   struct fscrypt_operations *s_cop ;
   struct key *s_master_keys ;
   struct fsverity_operations *s_vop ;
   struct hlist_bl_head s_roots ;
   struct list_head s_mounts ;
   struct block_device *s_bdev ;
   struct backing_dev_info *s_bdi ;
   struct mtd_info *s_mtd ;
   struct hlist_node s_instances ;
   unsigned int s_quota_types ;
   struct quota_info s_dquot ;
   struct sb_writers s_writers ;
   void *s_fs_info ;
   u32 s_time_gran ;
   time64_t s_time_min ;
   time64_t s_time_max ;
   __u32 s_fsnotify_mask ;
   struct fsnotify_mark_connector *s_fsnotify_marks ;
   char s_id[32U] ;
   uuid_t s_uuid ;
   unsigned int s_max_links ;
   fmode_t s_mode ;
   struct mutex s_vfs_rename_mutex ;
   char *s_subtype ;
   struct dentry_operations *s_d_op ;
   int cleancache_poolid ;
   struct shrinker s_shrink ;
   atomic_long_t s_remove_count ;
   atomic_long_t s_fsnotify_inode_refs ;
   int s_readonly_remount ;
   struct workqueue_struct *s_dio_done_wq ;
   struct hlist_head s_pins ;
   struct user_namespace *s_user_ns ;
   struct list_lru s_dentry_lru ;
   struct list_lru s_inode_lru ;
   struct callback_head rcu ;
   struct work_struct destroy_work ;
   struct mutex s_sync_lock ;
   int s_stack_depth ;
   spinlock_t s_inode_list_lock ;
   struct list_head s_inodes ;
   spinlock_t s_inode_wblist_lock ;
   struct list_head s_inodes_wb ;
} __attribute__((__designated_init__));
#line 1746  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct fiemap_extent_info {
   unsigned int fi_flags ;
   unsigned int fi_extents_mapped ;
   unsigned int fi_extents_max ;
   struct fiemap_extent *fi_extents_start ;
};
#line 1756 
struct dir_context;
#line 1767  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct dir_context {
   int (*actor)(struct dir_context *, char *, int , loff_t , u64 , unsigned int ) ;
   loff_t pos ;
};
#line 1771 
struct block_device_operations;
#line 1821  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct file_operations {
   struct module *owner ;
   loff_t (*llseek)(struct file *, loff_t , int ) ;
   ssize_t (*read)(struct file *, char *, size_t , loff_t *) ;
   ssize_t (*write)(struct file *, char *, size_t , loff_t *) ;
   ssize_t (*read_iter)(struct kiocb *, struct iov_iter *) ;
   ssize_t (*write_iter)(struct kiocb *, struct iov_iter *) ;
   int (*iopoll)(struct kiocb *, bool ) ;
   int (*iterate)(struct file *, struct dir_context *) ;
   int (*iterate_shared)(struct file *, struct dir_context *) ;
   __poll_t (*poll)(struct file *, struct poll_table_struct *) ;
   long (*unlocked_ioctl)(struct file *, unsigned int , unsigned long ) ;
   long (*compat_ioctl)(struct file *, unsigned int , unsigned long ) ;
   int (*mmap)(struct file *, struct vm_area_struct *) ;
   unsigned long mmap_supported_flags ;
   int (*open)(struct inode *, struct file *) ;
   int (*flush)(struct file *, fl_owner_t ) ;
   int (*release)(struct inode *, struct file *) ;
   int (*fsync)(struct file *, loff_t , loff_t , int ) ;
   int (*fasync)(int , struct file *, int ) ;
   int (*lock)(struct file *, int , struct file_lock *) ;
   ssize_t (*sendpage)(struct file *, struct page *, int , size_t , loff_t *, int ) ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   int (*check_flags)(int ) ;
   int (*flock)(struct file *, int , struct file_lock *) ;
   ssize_t (*splice_write)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ) ;
   ssize_t (*splice_read)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ) ;
   int (*setlease)(struct file *, long , struct file_lock **, void **) ;
   long (*fallocate)(struct file *, int , loff_t , loff_t ) ;
   void (*show_fdinfo)(struct seq_file *, struct file *) ;
   ssize_t (*copy_file_range)(struct file *, loff_t , struct file *, loff_t , size_t , unsigned int ) ;
   loff_t (*remap_file_range)(struct file *, loff_t , struct file *, loff_t , loff_t , unsigned int ) ;
   int (*fadvise)(struct file *, loff_t , loff_t , int ) ;
} __attribute__((__designated_init__));
#line 1863  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct inode_operations {
   struct dentry *(*lookup)(struct inode *, struct dentry *, unsigned int ) ;
   char *(*get_link)(struct dentry *, struct inode *, struct delayed_call *) ;
   int (*permission)(struct inode *, int ) ;
   struct posix_acl *(*get_acl)(struct inode *, int ) ;
   int (*readlink)(struct dentry *, char *, int ) ;
   int (*create)(struct inode *, struct dentry *, umode_t , bool ) ;
   int (*link)(struct dentry *, struct inode *, struct dentry *) ;
   int (*unlink)(struct inode *, struct dentry *) ;
   int (*symlink)(struct inode *, struct dentry *, char *) ;
   int (*mkdir)(struct inode *, struct dentry *, umode_t ) ;
   int (*rmdir)(struct inode *, struct dentry *) ;
   int (*mknod)(struct inode *, struct dentry *, umode_t , dev_t ) ;
   int (*rename)(struct inode *, struct dentry *, struct inode *, struct dentry *, unsigned int ) ;
   int (*setattr)(struct dentry *, struct iattr *) ;
   int (*getattr)(struct path *, struct kstat *, u32 , unsigned int ) ;
   ssize_t (*listxattr)(struct dentry *, char *, size_t ) ;
   int (*fiemap)(struct inode *, struct fiemap_extent_info *, u64 , u64 ) ;
   int (*update_time)(struct inode *, struct timespec64 *, int ) ;
   int (*atomic_open)(struct inode *, struct dentry *, struct file *, unsigned int , umode_t ) ;
   int (*tmpfile)(struct inode *, struct dentry *, umode_t ) ;
   int (*set_acl)(struct inode *, struct posix_acl *, int ) ;
} __attribute__((__aligned__(64)));
#line 1942  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct super_operations {
   struct inode *(*alloc_inode)(struct super_block *) ;
   void (*destroy_inode)(struct inode *) ;
   void (*free_inode)(struct inode *) ;
   void (*dirty_inode)(struct inode *, int ) ;
   int (*write_inode)(struct inode *, struct writeback_control *) ;
   int (*drop_inode)(struct inode *) ;
   void (*evict_inode)(struct inode *) ;
   void (*put_super)(struct super_block *) ;
   int (*sync_fs)(struct super_block *, int ) ;
   int (*freeze_super)(struct super_block *) ;
   int (*freeze_fs)(struct super_block *) ;
   int (*thaw_super)(struct super_block *) ;
   int (*unfreeze_fs)(struct super_block *) ;
   int (*statfs)(struct dentry *, struct kstatfs *) ;
   int (*remount_fs)(struct super_block *, int *, char *) ;
   void (*umount_begin)(struct super_block *) ;
   int (*show_options)(struct seq_file *, struct dentry *) ;
   int (*show_devname)(struct seq_file *, struct dentry *) ;
   int (*show_path)(struct seq_file *, struct dentry *) ;
   int (*show_stats)(struct seq_file *, struct dentry *) ;
   ssize_t (*quota_read)(struct super_block *, int , char *, size_t , loff_t ) ;
   ssize_t (*quota_write)(struct super_block *, int , char *, size_t , loff_t ) ;
   struct dquot **(*get_dquots)(struct inode *) ;
   int (*bdev_try_to_free_page)(struct super_block *, struct page *, gfp_t ) ;
   long (*nr_cached_objects)(struct super_block *, struct shrink_control *) ;
   long (*free_cached_objects)(struct super_block *, struct shrink_control *) ;
};
#line 2217  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct file_system_type {
   char *name ;
   int fs_flags ;
   int (*init_fs_context)(struct fs_context *) ;
   struct fs_parameter_description *parameters ;
   struct dentry *(*mount)(struct file_system_type *, int , char *, void *) ;
   void (*kill_sb)(struct super_block *) ;
   struct module *owner ;
   struct file_system_type *next ;
   struct hlist_head fs_supers ;
   struct lock_class_key s_lock_key ;
   struct lock_class_key s_umount_key ;
   struct lock_class_key s_vfs_rename_key ;
   struct lock_class_key s_writers_key[3U] ;
   struct lock_class_key i_lock_key ;
   struct lock_class_key i_mutex_key ;
   struct lock_class_key i_mutex_dir_key ;
};
#line 279  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pm_runtime.h"
struct usb_device;
#line 280 
struct usb_driver;
#line 281 
struct wusb_dev;
#line 282 
struct ep_device;
#line 67  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb_host_endpoint {
   struct usb_endpoint_descriptor desc ;
   struct usb_ss_ep_comp_descriptor ss_ep_comp ;
   struct usb_ssp_isoc_ep_comp_descriptor ssp_isoc_ep_comp ;
   struct list_head urb_list ;
   void *hcpriv ;
   struct ep_device *ep_dev ;
   unsigned char *extra ;
   int extralen ;
   int enabled ;
   int streams ;
};
#line 82  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb_host_interface {
   struct usb_interface_descriptor desc ;
   int extralen ;
   unsigned char *extra ;
   struct usb_host_endpoint *endpoint ;
   char *string ;
};
#line 95 
enum usb_interface_condition {
    USB_INTERFACE_UNBOUND = 0,
    USB_INTERFACE_BINDING = 1,
    USB_INTERFACE_BOUND = 2,
    USB_INTERFACE_UNBINDING = 3
};
#line 232  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb_interface {
   struct usb_host_interface *altsetting ;
   struct usb_host_interface *cur_altsetting ;
   unsigned int num_altsetting ;
   struct usb_interface_assoc_descriptor *intf_assoc ;
   int minor ;
   enum usb_interface_condition condition ;
   unsigned int sysfs_files_created : 1 ;
   unsigned int ep_devs_created : 1 ;
   unsigned int unregistering : 1 ;
   unsigned int needs_remote_wakeup : 1 ;
   unsigned int needs_altsetting0 : 1 ;
   unsigned int needs_binding : 1 ;
   unsigned int resetting_device : 1 ;
   unsigned int authorized : 1 ;
   struct device dev ;
   struct device *usb_dev ;
   struct work_struct reset_ws ;
};
#line 322  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb_interface_cache {
   unsigned int num_altsetting ;
   struct kref ref ;
   struct usb_host_interface altsetting[0U] ;
};
#line 374  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb_host_config {
   struct usb_config_descriptor desc ;
   char *string ;
   struct usb_interface_assoc_descriptor *intf_assoc[16U] ;
   struct usb_interface *interface[32U] ;
   struct usb_interface_cache *intf_cache[32U] ;
   unsigned char *extra ;
   int extralen ;
};
#line 396  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb_host_bos {
   struct usb_bos_descriptor *desc ;
   struct usb_ext_cap_descriptor *ext_cap ;
   struct usb_ss_cap_descriptor *ss_cap ;
   struct usb_ssp_cap_descriptor *ssp_cap ;
   struct usb_ss_container_id_descriptor *ss_id ;
   struct usb_ptm_cap_descriptor *ptm_cap ;
};
#line 417  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb_devmap {
   unsigned long devicemap[2U] ;
};
#line 424 
struct mon_bus;
#line 424  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb_bus {
   struct device *controller ;
   struct device *sysdev ;
   int busnum ;
   char *bus_name ;
   u8 uses_pio_for_control ;
   u8 otg_port ;
   unsigned int is_b_host : 1 ;
   unsigned int b_hnp_enable : 1 ;
   unsigned int no_stop_on_short : 1 ;
   unsigned int no_sg_constraint : 1 ;
   unsigned int sg_tablesize ;
   int devnum_next ;
   struct mutex devnum_next_mutex ;
   struct usb_devmap devmap ;
   struct usb_device *root_hub ;
   struct usb_bus *hs_companion ;
   int bandwidth_allocated ;
   int bandwidth_int_reqs ;
   int bandwidth_isoc_reqs ;
   unsigned int resuming_ports ;
   struct mon_bus *mon_bus ;
   int monitored ;
};
#line 469 
struct usb_tt;
#line 470 
enum usb_device_removable {
    USB_DEVICE_REMOVABLE_UNKNOWN = 0,
    USB_DEVICE_REMOVABLE = 1,
    USB_DEVICE_FIXED = 2
};
#line 502  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb2_lpm_parameters {
   unsigned int besl ;
   int timeout ;
};
#line 522  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb3_lpm_parameters {
   unsigned int mel ;
   unsigned int pel ;
   unsigned int sel ;
   int timeout ;
};
#line 631  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb_device {
   int devnum ;
   char devpath[16U] ;
   u32 route ;
   enum usb_device_state state ;
   enum usb_device_speed speed ;
   unsigned int rx_lanes ;
   unsigned int tx_lanes ;
   struct usb_tt *tt ;
   int ttport ;
   unsigned int toggle[2U] ;
   struct usb_device *parent ;
   struct usb_bus *bus ;
   struct usb_host_endpoint ep0 ;
   struct device dev ;
   struct usb_device_descriptor descriptor ;
   struct usb_host_bos *bos ;
   struct usb_host_config *config ;
   struct usb_host_config *actconfig ;
   struct usb_host_endpoint *ep_in[16U] ;
   struct usb_host_endpoint *ep_out[16U] ;
   char **rawdescriptors ;
   unsigned short bus_mA ;
   u8 portnum ;
   u8 level ;
   u8 devaddr ;
   unsigned int can_submit : 1 ;
   unsigned int persist_enabled : 1 ;
   unsigned int have_langid : 1 ;
   unsigned int authorized : 1 ;
   unsigned int authenticated : 1 ;
   unsigned int wusb : 1 ;
   unsigned int lpm_capable : 1 ;
   unsigned int usb2_hw_lpm_capable : 1 ;
   unsigned int usb2_hw_lpm_besl_capable : 1 ;
   unsigned int usb2_hw_lpm_enabled : 1 ;
   unsigned int usb2_hw_lpm_allowed : 1 ;
   unsigned int usb3_lpm_u1_enabled : 1 ;
   unsigned int usb3_lpm_u2_enabled : 1 ;
   int string_langid ;
   char *product ;
   char *manufacturer ;
   char *serial ;
   struct list_head filelist ;
   int maxchild ;
   u32 quirks ;
   atomic_t urbnum ;
   unsigned long active_duration ;
   unsigned long connect_time ;
   unsigned int do_remote_wakeup : 1 ;
   unsigned int reset_resume : 1 ;
   unsigned int port_is_suspended : 1 ;
   struct wusb_dev *wusb_dev ;
   int slot_id ;
   enum usb_device_removable removable ;
   struct usb2_lpm_parameters l1_params ;
   struct usb3_lpm_parameters u1_params ;
   struct usb3_lpm_parameters u2_params ;
   unsigned int lpm_disable_count ;
   u16 hub_delay ;
};
#line 1090  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb_dynids {
   spinlock_t lock ;
   struct list_head list ;
};
#line 1112  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usbdrv_wrap {
   struct device_driver driver ;
   int for_devices ;
};
#line 1183  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb_driver {
   char *name ;
   int (*probe)(struct usb_interface *, struct usb_device_id *) ;
   void (*disconnect)(struct usb_interface *) ;
   int (*unlocked_ioctl)(struct usb_interface *, unsigned int , void *) ;
   int (*suspend)(struct usb_interface *, pm_message_t ) ;
   int (*resume)(struct usb_interface *) ;
   int (*reset_resume)(struct usb_interface *) ;
   int (*pre_reset)(struct usb_interface *) ;
   int (*post_reset)(struct usb_interface *) ;
   struct usb_device_id *id_table ;
   struct attribute_group **dev_groups ;
   struct usb_dynids dynids ;
   struct usbdrv_wrap drvwrap ;
   unsigned int no_dynamic_id : 1 ;
   unsigned int supports_autosuspend : 1 ;
   unsigned int disable_hub_initiated_lpm : 1 ;
   unsigned int soft_unbind : 1 ;
};
#line 1340  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb_iso_packet_descriptor {
   unsigned int offset ;
   unsigned int length ;
   unsigned int actual_length ;
   int status ;
};
#line 1346 
struct urb;
#line 1349  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb_anchor {
   struct list_head urb_list ;
   wait_queue_head_t wait ;
   spinlock_t lock ;
   atomic_t suspend_wakeups ;
   unsigned int poisoned : 1 ;
};
#line 1550 
struct scatterlist;
#line 1550  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct urb {
   struct kref kref ;
   int unlinked ;
   void *hcpriv ;
   atomic_t use_count ;
   atomic_t reject ;
   struct list_head urb_list ;
   struct list_head anchor_list ;
   struct usb_anchor *anchor ;
   struct usb_device *dev ;
   struct usb_host_endpoint *ep ;
   unsigned int pipe ;
   unsigned int stream_id ;
   int status ;
   unsigned int transfer_flags ;
   void *transfer_buffer ;
   dma_addr_t transfer_dma ;
   struct scatterlist *sg ;
   int num_mapped_sgs ;
   int num_sgs ;
   u32 transfer_buffer_length ;
   u32 actual_length ;
   unsigned char *setup_packet ;
   dma_addr_t setup_dma ;
   int start_frame ;
   int number_of_packets ;
   int interval ;
   int error_count ;
   void *context ;
   void (*complete)(struct urb *) ;
   struct usb_iso_packet_descriptor iso_frame_desc[0U] ;
};
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/firmware.h"
struct firmware {
   size_t size ;
   u8 *data ;
   struct page **pages ;
   void *priv ;
};
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memremap.h"
struct vmem_altmap {
   unsigned long base_pfn ;
   unsigned long end_pfn ;
   unsigned long reserve ;
   unsigned long free ;
   unsigned long align ;
   unsigned long alloc ;
};
#line 26 
enum memory_type {
    MEMORY_DEVICE_PRIVATE = 1,
    MEMORY_DEVICE_FS_DAX = 2,
    MEMORY_DEVICE_DEVDAX = 3,
    MEMORY_DEVICE_PCI_P2PDMA = 4
};
#line 67  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memremap.h"
struct dev_pagemap_ops {
   void (*page_free)(struct page *) ;
   void (*kill)(struct dev_pagemap *) ;
   void (*cleanup)(struct dev_pagemap *) ;
   vm_fault_t (*migrate_to_ram)(struct vm_fault *) ;
};
#line 107  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memremap.h"
struct dev_pagemap {
   struct vmem_altmap altmap ;
   struct resource res ;
   struct percpu_ref *ref ;
   struct percpu_ref internal_ref ;
   struct completion done ;
   enum memory_type type ;
   unsigned int flags ;
   struct dev_pagemap_ops *ops ;
};
#line 417  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm.h"
struct vm_fault {
   struct vm_area_struct *vma ;
   unsigned int flags ;
   gfp_t gfp_mask ;
   unsigned long pgoff ;
   unsigned long address ;
   pmd_t *pmd ;
   pud_t *pud ;
   pte_t orig_pte ;
   struct page *cow_page ;
   struct mem_cgroup *memcg ;
   struct page *page ;
   pte_t *pte ;
   spinlock_t *ptl ;
   pgtable_t prealloc_pte ;
};
#line 448 
enum page_entry_size {
    PE_SIZE_PTE = 0,
    PE_SIZE_PMD = 1,
    PE_SIZE_PUD = 2
};
#line 467  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm.h"
struct vm_operations_struct {
   void (*open)(struct vm_area_struct *) ;
   void (*close)(struct vm_area_struct *) ;
   int (*split)(struct vm_area_struct *, unsigned long ) ;
   int (*mremap)(struct vm_area_struct *) ;
   vm_fault_t (*fault)(struct vm_fault *) ;
   vm_fault_t (*huge_fault)(struct vm_fault *, enum page_entry_size ) ;
   void (*map_pages)(struct vm_fault *, unsigned long , unsigned long ) ;
   unsigned long (*pagesize)(struct vm_area_struct *) ;
   vm_fault_t (*page_mkwrite)(struct vm_fault *) ;
   vm_fault_t (*pfn_mkwrite)(struct vm_fault *) ;
   int (*access)(struct vm_area_struct *, unsigned long , void *, int , int ) ;
   char *(*name)(struct vm_area_struct *) ;
   int (*set_policy)(struct vm_area_struct *, struct mempolicy *) ;
   struct mempolicy *(*get_policy)(struct vm_area_struct *, unsigned long ) ;
   struct page *(*find_special_page)(struct vm_area_struct *, unsigned long ) ;
};
#line 1565 
struct kvec;
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bvec.h"
struct bio_vec {
   struct page *bv_page ;
   unsigned int bv_len ;
   unsigned int bv_offset ;
};
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bvec.h"
struct bvec_iter {
   sector_t bi_sector ;
   unsigned int bi_size ;
   unsigned int bi_idx ;
   unsigned int bi_bvec_done ;
};
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/uio.h"
struct iovec {
   void *iov_base ;
   __kernel_size_t iov_len ;
};
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uio.h"
struct kvec {
   void *iov_base ;
   size_t iov_len ;
};
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uio.h"
union __anonunion_460 {
   struct iovec *iov ;
   struct kvec *kvec ;
   struct bio_vec *bvec ;
   struct pipe_inode_info *pipe ;
};
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uio.h"
struct __anonstruct_462 {
   unsigned int head ;
   unsigned int start_head ;
};
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uio.h"
union __anonunion_461 {
   unsigned long nr_segs ;
   struct __anonstruct_462 __anonCompField___anonunion_461_72 ;
};
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uio.h"
struct iov_iter {
   unsigned int type ;
   size_t iov_offset ;
   size_t count ;
   union __anonunion_460 __anonCompField_iov_iter_71 ;
   union __anonunion_461 __anonCompField_iov_iter_73 ;
};
#line 285  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uio.h"
typedef unsigned short __kernel_sa_family_t;
#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/socket.h"
struct socket;
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/socket.h"
typedef __kernel_sa_family_t sa_family_t;
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/socket.h"
struct sockaddr {
   sa_family_t sa_family ;
   char sa_data[14U] ;
};
#line 49  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/socket.h"
struct msghdr {
   void *msg_name ;
   int msg_namelen ;
   struct iov_iter msg_iter ;
   void *msg_control ;
   __kernel_size_t msg_controllen ;
   unsigned int msg_flags ;
   struct kiocb *msg_iocb ;
};
#line 422 
struct ns_common;
#line 201  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/random.h"
enum ldv_10519 {
    SS_FREE = 0,
    SS_UNCONNECTED = 1,
    SS_CONNECTING = 2,
    SS_CONNECTED = 3,
    SS_DISCONNECTING = 4
};
#line 209  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/random.h"
typedef enum ldv_10519 socket_state;
#line 94  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/net.h"
struct socket_wq {
   wait_queue_head_t wait ;
   struct fasync_struct *fasync_list ;
   unsigned long flags ;
   struct callback_head rcu ;
} __attribute__((__aligned__(64)));
#line 112 
struct proto_ops;
#line 112  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/net.h"
struct socket {
   socket_state state ;
   short type ;
   unsigned long flags ;
   struct file *file ;
   struct sock *sk ;
   struct proto_ops *ops ;
   struct socket_wq wq ;
};
#line 125 
struct sk_buff;
#line 135  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/net.h"
struct proto_ops {
   int family ;
   struct module *owner ;
   int (*release)(struct socket *) ;
   int (*bind)(struct socket *, struct sockaddr *, int ) ;
   int (*connect)(struct socket *, struct sockaddr *, int , int ) ;
   int (*socketpair)(struct socket *, struct socket *) ;
   int (*accept)(struct socket *, struct socket *, int , bool ) ;
   int (*getname)(struct socket *, struct sockaddr *, int ) ;
   __poll_t (*poll)(struct file *, struct socket *, struct poll_table_struct *) ;
   int (*ioctl)(struct socket *, unsigned int , unsigned long ) ;
   int (*compat_ioctl)(struct socket *, unsigned int , unsigned long ) ;
   int (*gettstamp)(struct socket *, void *, bool , bool ) ;
   int (*listen)(struct socket *, int ) ;
   int (*shutdown)(struct socket *, int ) ;
   int (*setsockopt)(struct socket *, int , int , char *, unsigned int ) ;
   int (*getsockopt)(struct socket *, int , int , char *, int *) ;
   int (*compat_setsockopt)(struct socket *, int , int , char *, unsigned int ) ;
   int (*compat_getsockopt)(struct socket *, int , int , char *, int *) ;
   int (*sendmsg)(struct socket *, struct msghdr *, size_t ) ;
   int (*recvmsg)(struct socket *, struct msghdr *, size_t , int ) ;
   int (*mmap)(struct file *, struct socket *, struct vm_area_struct *) ;
   ssize_t (*sendpage)(struct socket *, struct page *, int , size_t , int ) ;
   ssize_t (*splice_read)(struct socket *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ) ;
   int (*set_peek_off)(struct sock *, int ) ;
   int (*peek_len)(struct socket *) ;
   int (*read_sock)(struct sock *, read_descriptor_t *, int (*)(read_descriptor_t *, struct sk_buff *, unsigned int , size_t )) ;
   int (*sendpage_locked)(struct sock *, struct page *, int , size_t , int ) ;
   int (*sendmsg_locked)(struct sock *, struct msghdr *, size_t ) ;
   int (*set_rcvlowat)(struct sock *, int ) ;
};
#line 162  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/checksum_64.h"
struct in6_addr;
#line 71  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dma-debug.h"
enum dma_data_direction {
    DMA_BIDIRECTIONAL = 0,
    DMA_TO_DEVICE = 1,
    DMA_FROM_DEVICE = 2,
    DMA_NONE = 3
};
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/scatterlist.h"
struct scatterlist {
   unsigned long page_link ;
   unsigned int offset ;
   unsigned int length ;
   dma_addr_t dma_address ;
   unsigned int dma_length ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/scatterlist.h"
struct sg_table {
   struct scatterlist *sgl ;
   unsigned int nents ;
   unsigned int orig_nents ;
};
#line 76  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dma-mapping.h"
struct dma_map_ops {
   void *(*alloc)(struct device *, size_t , dma_addr_t *, gfp_t , unsigned long ) ;
   void (*free)(struct device *, size_t , void *, dma_addr_t , unsigned long ) ;
   int (*mmap)(struct device *, struct vm_area_struct *, void *, dma_addr_t , size_t , unsigned long ) ;
   int (*get_sgtable)(struct device *, struct sg_table *, void *, dma_addr_t , size_t , unsigned long ) ;
   dma_addr_t (*map_page)(struct device *, struct page *, unsigned long , size_t , enum dma_data_direction , unsigned long ) ;
   void (*unmap_page)(struct device *, dma_addr_t , size_t , enum dma_data_direction , unsigned long ) ;
   int (*map_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , unsigned long ) ;
   void (*unmap_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , unsigned long ) ;
   dma_addr_t (*map_resource)(struct device *, phys_addr_t , size_t , enum dma_data_direction , unsigned long ) ;
   void (*unmap_resource)(struct device *, dma_addr_t , size_t , enum dma_data_direction , unsigned long ) ;
   void (*sync_single_for_cpu)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_single_for_device)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_sg_for_cpu)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   void (*sync_sg_for_device)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   void (*cache_sync)(struct device *, void *, size_t , enum dma_data_direction ) ;
   int (*dma_supported)(struct device *, u64 ) ;
   u64 (*get_required_mask)(struct device *) ;
   size_t (*max_mapping_size)(struct device *) ;
   unsigned long (*get_merge_boundary)(struct device *) ;
};
#line 803  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dma-mapping.h"
typedef u64 netdev_features_t;
#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/in6.h"
union __anonunion_in6_u_481 {
   __u8 u6_addr8[16U] ;
   __be16 u6_addr16[8U] ;
   __be32 u6_addr32[4U] ;
};
#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/in6.h"
struct in6_addr {
   union __anonunion_in6_u_481 in6_u ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/in6.h"
struct __anonstruct_siphash_key_t_482 {
   u64 key[2U] ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/in6.h"
typedef struct __anonstruct_siphash_key_t_482 siphash_key_t;
#line 163  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if_ether.h"
struct ethhdr {
   unsigned char h_dest[6U] ;
   unsigned char h_source[6U] ;
   __be16 h_proto ;
} __attribute__((__packed__));
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pipe_fs_i.h"
struct pipe_buf_operations;
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pipe_fs_i.h"
struct pipe_buffer {
   struct page *page ;
   unsigned int offset ;
   unsigned int len ;
   struct pipe_buf_operations *ops ;
   unsigned int flags ;
   unsigned long private ;
};
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pipe_fs_i.h"
struct pipe_inode_info {
   struct mutex mutex ;
   wait_queue_head_t wait ;
   unsigned int head ;
   unsigned int tail ;
   unsigned int max_usage ;
   unsigned int ring_size ;
   unsigned int readers ;
   unsigned int writers ;
   unsigned int files ;
   unsigned int r_counter ;
   unsigned int w_counter ;
   struct page *tmp_page ;
   struct fasync_struct *fasync_readers ;
   struct fasync_struct *fasync_writers ;
   struct pipe_buffer *bufs ;
   struct user_struct *user ;
};
#line 77  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pipe_fs_i.h"
struct pipe_buf_operations {
   int (*confirm)(struct pipe_inode_info *, struct pipe_buffer *) ;
   void (*release)(struct pipe_inode_info *, struct pipe_buffer *) ;
   int (*steal)(struct pipe_inode_info *, struct pipe_buffer *) ;
   bool (*get)(struct pipe_inode_info *, struct pipe_buffer *) ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct flowi_tunnel {
   __be64 tun_id ;
};
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct flowi_common {
   int flowic_oif ;
   int flowic_iif ;
   __u32 flowic_mark ;
   __u8 flowic_tos ;
   __u8 flowic_scope ;
   __u8 flowic_proto ;
   __u8 flowic_flags ;
   __u32 flowic_secid ;
   kuid_t flowic_uid ;
   struct flowi_tunnel flowic_tun_key ;
   __u32 flowic_multipath_hash ;
};
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct __anonstruct_ports_493 {
   __be16 dport ;
   __be16 sport ;
};
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct __anonstruct_icmpt_494 {
   __u8 type ;
   __u8 code ;
};
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct __anonstruct_dnports_495 {
   __le16 dport ;
   __le16 sport ;
};
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct __anonstruct_mht_496 {
   __u8 type ;
};
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
union flowi_uli {
   struct __anonstruct_ports_493 ports ;
   struct __anonstruct_icmpt_494 icmpt ;
   struct __anonstruct_dnports_495 dnports ;
   __be32 spi ;
   __be32 gre_key ;
   struct __anonstruct_mht_496 mht ;
};
#line 70  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct flowi4 {
   struct flowi_common __fl_common ;
   __be32 saddr ;
   __be32 daddr ;
   union flowi_uli uli ;
} __attribute__((__aligned__(8)));
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct flowi6 {
   struct flowi_common __fl_common ;
   struct in6_addr daddr ;
   struct in6_addr saddr ;
   __be32 flowlabel ;
   union flowi_uli uli ;
   __u32 mp_hash ;
} __attribute__((__aligned__(8)));
#line 158  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct flowidn {
   struct flowi_common __fl_common ;
   __le16 daddr ;
   __le16 saddr ;
   union flowi_uli uli ;
} __attribute__((__aligned__(8)));
#line 173  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
union __anonunion_u_497 {
   struct flowi_common __fl_common ;
   struct flowi4 ip4 ;
   struct flowi6 ip6 ;
   struct flowidn dn ;
};
#line 173  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct flowi {
   union __anonunion_u_497 u ;
} __attribute__((__aligned__(8)));
#line 8  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netfilter/nf_conntrack_common.h"
struct ip_conntrack_stat {
   unsigned int found ;
   unsigned int invalid ;
   unsigned int ignore ;
   unsigned int insert ;
   unsigned int insert_failed ;
   unsigned int drop ;
   unsigned int early_drop ;
   unsigned int error ;
   unsigned int expect_new ;
   unsigned int expect_create ;
   unsigned int expect_delete ;
   unsigned int search_restart ;
};
#line 42 
struct bpf_prog;
#line 43 
union bpf_attr;
#line 44 
struct skb_ext;
#line 289  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
struct sk_buff_head {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   __u32 qlen ;
   spinlock_t lock ;
};
#line 562  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
typedef unsigned int sk_buff_data_t;
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_504 {
   struct net_device *dev ;
   unsigned long dev_scratch ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
struct __anonstruct_503 {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   union __anonunion_504 __anonCompField___anonstruct_503_88 ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_502 {
   struct __anonstruct_503 __anonCompField___anonunion_502_89 ;
   struct rb_node rbnode ;
   struct list_head list ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_505 {
   struct sock *sk ;
   int ip_defrag_offset ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_506 {
   ktime_t tstamp ;
   u64 skb_mstamp_ns ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
struct __anonstruct_508 {
   unsigned long _skb_refdst ;
   void (*destructor)(struct sk_buff *) ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_507 {
   struct __anonstruct_508 __anonCompField___anonunion_507_93 ;
   struct list_head tcp_tsorted_anchor ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
struct __anonstruct_510 {
   __u16 csum_start ;
   __u16 csum_offset ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_509 {
   __wsum csum ;
   struct __anonstruct_510 __anonCompField___anonunion_509_95 ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_511 {
   unsigned int napi_id ;
   unsigned int sender_cpu ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_512 {
   __u32 mark ;
   __u32 reserved_tailroom ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_513 {
   __be16 inner_protocol ;
   __u8 inner_ipproto ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
struct sk_buff {
   union __anonunion_502 __anonCompField_sk_buff_90 ;
   union __anonunion_505 __anonCompField_sk_buff_91 ;
   union __anonunion_506 __anonCompField_sk_buff_92 ;
   char cb[48U] ;
   union __anonunion_507 __anonCompField_sk_buff_94 ;
   unsigned long _nfct ;
   unsigned int len ;
   unsigned int data_len ;
   __u16 mac_len ;
   __u16 hdr_len ;
   __u16 queue_mapping ;
   __u8 __cloned_offset[0U] ;
   __u8 cloned : 1 ;
   __u8 nohdr : 1 ;
   __u8 fclone : 2 ;
   __u8 peeked : 1 ;
   __u8 head_frag : 1 ;
   __u8 pfmemalloc : 1 ;
   __u8 active_extensions ;
   __u32 headers_start[0U] ;
   __u8 __pkt_type_offset[0U] ;
   __u8 pkt_type : 3 ;
   __u8 ignore_df : 1 ;
   __u8 nf_trace : 1 ;
   __u8 ip_summed : 2 ;
   __u8 ooo_okay : 1 ;
   __u8 l4_hash : 1 ;
   __u8 sw_hash : 1 ;
   __u8 wifi_acked_valid : 1 ;
   __u8 wifi_acked : 1 ;
   __u8 no_fcs : 1 ;
   __u8 encapsulation : 1 ;
   __u8 encap_hdr_csum : 1 ;
   __u8 csum_valid : 1 ;
   __u8 __pkt_vlan_present_offset[0U] ;
   __u8 vlan_present : 1 ;
   __u8 csum_complete_sw : 1 ;
   __u8 csum_level : 2 ;
   __u8 csum_not_inet : 1 ;
   __u8 dst_pending_confirm : 1 ;
   __u8 ndisc_nodetype : 2 ;
   __u8 ipvs_property : 1 ;
   __u8 inner_protocol_type : 1 ;
   __u8 remcsum_offload : 1 ;
   __u8 offload_fwd_mark : 1 ;
   __u8 offload_l3_fwd_mark : 1 ;
   __u8 tc_skip_classify : 1 ;
   __u8 tc_at_ingress : 1 ;
   __u8 tc_redirected : 1 ;
   __u8 tc_from_ingress : 1 ;
   __u8 decrypted : 1 ;
   __u16 tc_index ;
   union __anonunion_509 __anonCompField_sk_buff_96 ;
   __u32 priority ;
   int skb_iif ;
   __u32 hash ;
   __be16 vlan_proto ;
   __u16 vlan_tci ;
   union __anonunion_511 __anonCompField_sk_buff_97 ;
   __u32 secmark ;
   union __anonunion_512 __anonCompField_sk_buff_98 ;
   union __anonunion_513 __anonCompField_sk_buff_99 ;
   __u16 inner_transport_header ;
   __u16 inner_network_header ;
   __u16 inner_mac_header ;
   __be16 protocol ;
   __u16 transport_header ;
   __u16 network_header ;
   __u16 mac_header ;
   __u32 headers_end[0U] ;
   sk_buff_data_t tail ;
   sk_buff_data_t end ;
   unsigned char *head ;
   unsigned char *data ;
   unsigned int truesize ;
   refcount_t users ;
   struct skb_ext *extensions ;
};
#line 920 
struct dst_entry;
#line 4108  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
struct skb_ext {
   refcount_t refcnt ;
   u8 offset[3U] ;
   u8 chunks ;
   char data[0U] ;
};
#line 41  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dynamic_queue_limits.h"
struct dql {
   unsigned int num_queued ;
   unsigned int adj_limit ;
   unsigned int last_obj_cnt ;
   unsigned int limit ;
   unsigned int num_completed ;
   unsigned int prev_ovlimit ;
   unsigned int prev_num_queued ;
   unsigned int prev_last_obj_cnt ;
   unsigned int lowest_slack ;
   unsigned long slack_start_time ;
   unsigned int max_limit ;
   unsigned int min_limit ;
   unsigned int slack_hold_time ;
};
#line 103  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dynamic_queue_limits.h"
struct __anonstruct_sync_serial_settings_543 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
};
#line 103  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dynamic_queue_limits.h"
typedef struct __anonstruct_sync_serial_settings_543 sync_serial_settings;
#line 45  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_te1_settings_544 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
   unsigned int slot_map ;
};
#line 45  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_te1_settings_544 te1_settings;
#line 52  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_raw_hdlc_proto_545 {
   unsigned short encoding ;
   unsigned short parity ;
};
#line 52  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_raw_hdlc_proto_545 raw_hdlc_proto;
#line 57  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_546 {
   unsigned int t391 ;
   unsigned int t392 ;
   unsigned int n391 ;
   unsigned int n392 ;
   unsigned int n393 ;
   unsigned short lmi ;
   unsigned short dce ;
};
#line 57  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_546 fr_proto;
#line 67  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_547 {
   unsigned int dlci ;
};
#line 67  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_547 fr_proto_pvc;
#line 71  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_info_548 {
   unsigned int dlci ;
   char master[16U] ;
};
#line 71  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_info_548 fr_proto_pvc_info;
#line 76  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_cisco_proto_549 {
   unsigned int interval ;
   unsigned int timeout ;
};
#line 76  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_cisco_proto_549 cisco_proto;
#line 195  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if.h"
struct ifmap {
   unsigned long mem_start ;
   unsigned long mem_end ;
   unsigned short base_addr ;
   unsigned char irq ;
   unsigned char dma ;
   unsigned char port ;
};
#line 206  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if.h"
union __anonunion_ifs_ifsu_550 {
   raw_hdlc_proto *raw_hdlc ;
   cisco_proto *cisco ;
   fr_proto *fr ;
   fr_proto_pvc *fr_pvc ;
   fr_proto_pvc_info *fr_pvc_info ;
   sync_serial_settings *sync ;
   te1_settings *te1 ;
};
#line 206  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if.h"
struct if_settings {
   unsigned int type ;
   unsigned int size ;
   union __anonunion_ifs_ifsu_550 ifs_ifsu ;
};
#line 232  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if.h"
union __anonunion_ifr_ifrn_551 {
   char ifrn_name[16U] ;
};
#line 232  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if.h"
union __anonunion_ifr_ifru_552 {
   struct sockaddr ifru_addr ;
   struct sockaddr ifru_dstaddr ;
   struct sockaddr ifru_broadaddr ;
   struct sockaddr ifru_netmask ;
   struct sockaddr ifru_hwaddr ;
   short ifru_flags ;
   int ifru_ivalue ;
   int ifru_mtu ;
   struct ifmap ifru_map ;
   char ifru_slave[16U] ;
   char ifru_newname[16U] ;
   void *ifru_data ;
   struct if_settings ifru_settings ;
};
#line 232  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if.h"
struct ifreq {
   union __anonunion_ifr_ifrn_551 ifr_ifrn ;
   union __anonunion_ifr_ifru_552 ifr_ifru ;
};
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/compat.h"
typedef s32 compat_long_t;
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/compat.h"
typedef u32 compat_uptr_t;
#line 367  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/compat.h"
struct compat_robust_list {
   compat_uptr_t next ;
};
#line 371  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/compat.h"
struct compat_robust_list_head {
   struct compat_robust_list list ;
   compat_long_t futex_offset ;
   compat_uptr_t list_op_pending ;
};
#line 177  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_drvinfo {
   __u32 cmd ;
   char driver[32U] ;
   char version[32U] ;
   char fw_version[32U] ;
   char bus_info[32U] ;
   char erom_version[32U] ;
   char reserved2[12U] ;
   __u32 n_priv_flags ;
   __u32 n_stats ;
   __u32 testinfo_len ;
   __u32 eedump_len ;
   __u32 regdump_len ;
};
#line 203  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_wolinfo {
   __u32 cmd ;
   __u32 supported ;
   __u32 wolopts ;
   __u8 sopass[6U] ;
};
#line 244  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_tunable {
   __u32 cmd ;
   __u32 id ;
   __u32 type_id ;
   __u32 len ;
   void *data[0U] ;
};
#line 310  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_regs {
   __u32 cmd ;
   __u32 version ;
   __u32 len ;
   __u8 data[0U] ;
};
#line 335  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_eeprom {
   __u32 cmd ;
   __u32 magic ;
   __u32 offset ;
   __u32 len ;
   __u8 data[0U] ;
};
#line 360  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_eee {
   __u32 cmd ;
   __u32 supported ;
   __u32 advertised ;
   __u32 lp_advertised ;
   __u32 eee_active ;
   __u32 eee_enabled ;
   __u32 tx_lpi_enabled ;
   __u32 tx_lpi_timer ;
   __u32 reserved[2U] ;
};
#line 382  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_modinfo {
   __u32 cmd ;
   __u32 type ;
   __u32 eeprom_len ;
   __u32 reserved[8U] ;
};
#line 462  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_coalesce {
   __u32 cmd ;
   __u32 rx_coalesce_usecs ;
   __u32 rx_max_coalesced_frames ;
   __u32 rx_coalesce_usecs_irq ;
   __u32 rx_max_coalesced_frames_irq ;
   __u32 tx_coalesce_usecs ;
   __u32 tx_max_coalesced_frames ;
   __u32 tx_coalesce_usecs_irq ;
   __u32 tx_max_coalesced_frames_irq ;
   __u32 stats_block_coalesce_usecs ;
   __u32 use_adaptive_rx_coalesce ;
   __u32 use_adaptive_tx_coalesce ;
   __u32 pkt_rate_low ;
   __u32 rx_coalesce_usecs_low ;
   __u32 rx_max_coalesced_frames_low ;
   __u32 tx_coalesce_usecs_low ;
   __u32 tx_max_coalesced_frames_low ;
   __u32 pkt_rate_high ;
   __u32 rx_coalesce_usecs_high ;
   __u32 rx_max_coalesced_frames_high ;
   __u32 tx_coalesce_usecs_high ;
   __u32 tx_max_coalesced_frames_high ;
   __u32 rate_sample_interval ;
};
#line 513  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_ringparam {
   __u32 cmd ;
   __u32 rx_max_pending ;
   __u32 rx_mini_max_pending ;
   __u32 rx_jumbo_max_pending ;
   __u32 tx_max_pending ;
   __u32 rx_pending ;
   __u32 rx_mini_pending ;
   __u32 rx_jumbo_pending ;
   __u32 tx_pending ;
};
#line 541  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_channels {
   __u32 cmd ;
   __u32 max_rx ;
   __u32 max_tx ;
   __u32 max_other ;
   __u32 max_combined ;
   __u32 rx_count ;
   __u32 tx_count ;
   __u32 other_count ;
   __u32 combined_count ;
};
#line 575  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_pauseparam {
   __u32 cmd ;
   __u32 autoneg ;
   __u32 rx_pause ;
   __u32 tx_pause ;
};
#line 683  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_test {
   __u32 cmd ;
   __u32 flags ;
   __u32 reserved ;
   __u32 len ;
   __u64 data[0U] ;
};
#line 702  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_stats {
   __u32 cmd ;
   __u32 n_stats ;
   __u64 data[0U] ;
};
#line 758  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_tcpip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be16 psrc ;
   __be16 pdst ;
   __u8 tos ;
};
#line 775  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_ah_espip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 spi ;
   __u8 tos ;
};
#line 793  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_usrip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 l4_4_bytes ;
   __u8 tos ;
   __u8 ip_ver ;
   __u8 proto ;
};
#line 812  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_tcpip6_spec {
   __be32 ip6src[4U] ;
   __be32 ip6dst[4U] ;
   __be16 psrc ;
   __be16 pdst ;
   __u8 tclass ;
};
#line 829  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_ah_espip6_spec {
   __be32 ip6src[4U] ;
   __be32 ip6dst[4U] ;
   __be32 spi ;
   __u8 tclass ;
};
#line 844  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_usrip6_spec {
   __be32 ip6src[4U] ;
   __be32 ip6dst[4U] ;
   __be32 l4_4_bytes ;
   __u8 tclass ;
   __u8 l4_proto ;
};
#line 852  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
union ethtool_flow_union {
   struct ethtool_tcpip4_spec tcp_ip4_spec ;
   struct ethtool_tcpip4_spec udp_ip4_spec ;
   struct ethtool_tcpip4_spec sctp_ip4_spec ;
   struct ethtool_ah_espip4_spec ah_ip4_spec ;
   struct ethtool_ah_espip4_spec esp_ip4_spec ;
   struct ethtool_usrip4_spec usr_ip4_spec ;
   struct ethtool_tcpip6_spec tcp_ip6_spec ;
   struct ethtool_tcpip6_spec udp_ip6_spec ;
   struct ethtool_tcpip6_spec sctp_ip6_spec ;
   struct ethtool_ah_espip6_spec ah_ip6_spec ;
   struct ethtool_ah_espip6_spec esp_ip6_spec ;
   struct ethtool_usrip6_spec usr_ip6_spec ;
   struct ethhdr ether_spec ;
   __u8 hdata[52U] ;
};
#line 880  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_flow_ext {
   __u8 padding[2U] ;
   unsigned char h_dest[6U] ;
   __be16 vlan_etype ;
   __be16 vlan_tci ;
   __be32 data[2U] ;
};
#line 905  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_rx_flow_spec {
   __u32 flow_type ;
   union ethtool_flow_union h_u ;
   struct ethtool_flow_ext h_ext ;
   union ethtool_flow_union m_u ;
   struct ethtool_flow_ext m_ext ;
   __u64 ring_cookie ;
   __u32 location ;
};
#line 1001  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
union __anonunion_571 {
   __u32 rule_cnt ;
   __u32 rss_context ;
};
#line 1001  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_rxnfc {
   __u32 cmd ;
   __u32 flow_type ;
   __u64 data ;
   struct ethtool_rx_flow_spec fs ;
   union __anonunion_571 __anonCompField_ethtool_rxnfc_102 ;
   __u32 rule_locs[0U] ;
};
#line 1130  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_flash {
   __u32 cmd ;
   __u32 region ;
   char data[128U] ;
};
#line 1150  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_dump {
   __u32 cmd ;
   __u32 version ;
   __u32 flag ;
   __u32 len ;
   __u8 data[0U] ;
};
#line 1230  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_ts_info {
   __u32 cmd ;
   __u32 so_timestamping ;
   __s32 phc_index ;
   __u32 tx_types ;
   __u32 tx_reserved[3U] ;
   __u32 rx_filters ;
   __u32 rx_reserved[3U] ;
};
#line 1302  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_fecparam {
   __u32 cmd ;
   __u32 active_fec ;
   __u32 fec ;
   __u32 reserved ;
};
#line 1876  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_link_settings {
   __u32 cmd ;
   __u32 speed ;
   __u8 duplex ;
   __u8 port ;
   __u8 phy_address ;
   __u8 autoneg ;
   __u8 mdio_support ;
   __u8 eth_tp_mdix ;
   __u8 eth_tp_mdix_ctrl ;
   __s8 link_mode_masks_nwords ;
   __u8 transceiver ;
   __u8 reserved1[3U] ;
   __u32 reserved[7U] ;
   __u32 link_mode_masks[0U] ;
};
#line 40  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ethtool.h"
enum ethtool_phys_id_state {
    ETHTOOL_ID_INACTIVE = 0,
    ETHTOOL_ID_ACTIVE = 1,
    ETHTOOL_ID_ON = 2,
    ETHTOOL_ID_OFF = 3
};
#line 108  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ethtool.h"
struct __anonstruct_link_modes_574 {
   unsigned long supported[2U] ;
   unsigned long advertising[2U] ;
   unsigned long lp_advertising[2U] ;
};
#line 108  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ethtool.h"
struct ethtool_link_ksettings {
   struct ethtool_link_settings base ;
   struct __anonstruct_link_modes_574 link_modes ;
};
#line 325  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ethtool.h"
struct ethtool_ops {
   void (*get_drvinfo)(struct net_device *, struct ethtool_drvinfo *) ;
   int (*get_regs_len)(struct net_device *) ;
   void (*get_regs)(struct net_device *, struct ethtool_regs *, void *) ;
   void (*get_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   int (*set_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   u32 (*get_msglevel)(struct net_device *) ;
   void (*set_msglevel)(struct net_device *, u32 ) ;
   int (*nway_reset)(struct net_device *) ;
   u32 (*get_link)(struct net_device *) ;
   int (*get_eeprom_len)(struct net_device *) ;
   int (*get_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*set_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   int (*set_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   void (*get_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   int (*set_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   void (*get_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   int (*set_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   void (*self_test)(struct net_device *, struct ethtool_test *, u64 *) ;
   void (*get_strings)(struct net_device *, u32 , u8 *) ;
   int (*set_phys_id)(struct net_device *, enum ethtool_phys_id_state ) ;
   void (*get_ethtool_stats)(struct net_device *, struct ethtool_stats *, u64 *) ;
   int (*begin)(struct net_device *) ;
   void (*complete)(struct net_device *) ;
   u32 (*get_priv_flags)(struct net_device *) ;
   int (*set_priv_flags)(struct net_device *, u32 ) ;
   int (*get_sset_count)(struct net_device *, int ) ;
   int (*get_rxnfc)(struct net_device *, struct ethtool_rxnfc *, u32 *) ;
   int (*set_rxnfc)(struct net_device *, struct ethtool_rxnfc *) ;
   int (*flash_device)(struct net_device *, struct ethtool_flash *) ;
   int (*reset)(struct net_device *, u32 *) ;
   u32 (*get_rxfh_key_size)(struct net_device *) ;
   u32 (*get_rxfh_indir_size)(struct net_device *) ;
   int (*get_rxfh)(struct net_device *, u32 *, u8 *, u8 *) ;
   int (*set_rxfh)(struct net_device *, u32 *, u8 *, u8 ) ;
   int (*get_rxfh_context)(struct net_device *, u32 *, u8 *, u8 *, u32 ) ;
   int (*set_rxfh_context)(struct net_device *, u32 *, u8 *, u8 , u32 *, bool ) ;
   void (*get_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*set_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*get_dump_flag)(struct net_device *, struct ethtool_dump *) ;
   int (*get_dump_data)(struct net_device *, struct ethtool_dump *, void *) ;
   int (*set_dump)(struct net_device *, struct ethtool_dump *) ;
   int (*get_ts_info)(struct net_device *, struct ethtool_ts_info *) ;
   int (*get_module_info)(struct net_device *, struct ethtool_modinfo *) ;
   int (*get_module_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*set_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*get_tunable)(struct net_device *, struct ethtool_tunable *, void *) ;
   int (*set_tunable)(struct net_device *, struct ethtool_tunable *, void *) ;
   int (*get_per_queue_coalesce)(struct net_device *, u32 , struct ethtool_coalesce *) ;
   int (*set_per_queue_coalesce)(struct net_device *, u32 , struct ethtool_coalesce *) ;
   int (*get_link_ksettings)(struct net_device *, struct ethtool_link_ksettings *) ;
   int (*set_link_ksettings)(struct net_device *, struct ethtool_link_ksettings *) ;
   int (*get_fecparam)(struct net_device *, struct ethtool_fecparam *) ;
   int (*set_fecparam)(struct net_device *, struct ethtool_fecparam *) ;
   void (*get_ethtool_phy_stats)(struct net_device *, struct ethtool_stats *, u64 *) ;
};
#line 422 
struct prot_inuse;
#line 8  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/core.h"
struct netns_core {
   struct ctl_table_header *sysctl_hdr ;
   int sysctl_somaxconn ;
   int *sock_inuse ;
   struct prot_inuse *prot_inuse ;
};
#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct u64_stats_sync {
   };
#line 36  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct __anonstruct_local_t_575 {
   atomic_long_t a ;
};
#line 36  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
typedef struct __anonstruct_local_t_575 local_t;
#line 119  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/local.h"
struct __anonstruct_local64_t_576 {
   local_t a ;
};
#line 119  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/local.h"
typedef struct __anonstruct_local64_t_576 local64_t;
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/local64.h"
struct __anonstruct_u64_stats_t_577 {
   local64_t v ;
};
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/local64.h"
typedef struct __anonstruct_u64_stats_t_577 u64_stats_t;
#line 51  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct ipstats_mib {
   u64 mibs[37U] ;
   struct u64_stats_sync syncp ;
};
#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct icmp_mib {
   unsigned long mibs[28U] ;
};
#line 64  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct icmpmsg_mib {
   atomic_long_t mibs[512U] ;
};
#line 71  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct icmpv6_mib {
   unsigned long mibs[6U] ;
};
#line 81  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct icmpv6msg_mib {
   atomic_long_t mibs[512U] ;
};
#line 92  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct tcp_mib {
   unsigned long mibs[16U] ;
};
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct udp_mib {
   unsigned long mibs[9U] ;
};
#line 104  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct linux_mib {
   unsigned long mibs[120U] ;
};
#line 110  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct linux_xfrm_mib {
   unsigned long mibs[29U] ;
};
#line 116  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct linux_tls_mib {
   unsigned long mibs[11U] ;
};
#line 7  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/mib.h"
struct netns_mib {
   struct tcp_mib *tcp_statistics ;
   struct ipstats_mib *ip_statistics ;
   struct linux_mib *net_statistics ;
   struct udp_mib *udp_statistics ;
   struct udp_mib *udplite_statistics ;
   struct icmp_mib *icmp_statistics ;
   struct icmpmsg_mib *icmpmsg_statistics ;
   struct proc_dir_entry *proc_net_devsnmp6 ;
   struct udp_mib *udp_stats_in6 ;
   struct udp_mib *udplite_stats_in6 ;
   struct ipstats_mib *ipv6_statistics ;
   struct icmpv6_mib *icmpv6_statistics ;
   struct icmpv6msg_mib *icmpv6msg_statistics ;
   struct linux_xfrm_mib *xfrm_statistics ;
   struct linux_tls_mib *tls_statistics ;
};
#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/unix.h"
struct netns_unix {
   int sysctl_max_dgram_qlen ;
   struct ctl_table_header *ctl ;
};
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/packet.h"
struct netns_packet {
   struct mutex sklist_lock ;
   struct hlist_head sklist ;
};
#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/inet_frag.h"
struct inet_frags;
#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/inet_frag.h"
struct fqdir {
   long high_thresh ;
   long low_thresh ;
   int timeout ;
   int max_dist ;
   struct inet_frags *f ;
   struct net *net ;
   bool dead ;
   struct rhashtable rhashtable ;
   atomic_long_t mem ;
   struct work_struct destroy_work ;
};
#line 41  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/inet_frag.h"
struct frag_v4_compare_key {
   __be32 saddr ;
   __be32 daddr ;
   u32 user ;
   u32 vif ;
   __be16 id ;
   u16 protocol ;
};
#line 50  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/inet_frag.h"
struct frag_v6_compare_key {
   struct in6_addr saddr ;
   struct in6_addr daddr ;
   u32 user ;
   __be32 id ;
   u32 iif ;
};
#line 77  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/inet_frag.h"
union __anonunion_key_578 {
   struct frag_v4_compare_key v4 ;
   struct frag_v6_compare_key v6 ;
};
#line 77  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/inet_frag.h"
struct inet_frag_queue {
   struct rhash_head node ;
   union __anonunion_key_578 key ;
   struct timer_list timer ;
   spinlock_t lock ;
   refcount_t refcnt ;
   struct rb_root rb_fragments ;
   struct sk_buff *fragments_tail ;
   struct sk_buff *last_run_head ;
   ktime_t stamp ;
   int len ;
   int meat ;
   __u8 flags ;
   u16 max_size ;
   struct fqdir *fqdir ;
   struct callback_head rcu ;
};
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/inet_frag.h"
struct inet_frags {
   unsigned int qsize ;
   void (*constructor)(struct inet_frag_queue *, void *) ;
   void (*destructor)(struct inet_frag_queue *) ;
   void (*frag_expire)(struct timer_list *) ;
   struct kmem_cache *frags_cachep ;
   char *frags_cache_name ;
   struct rhashtable_params rhash_params ;
   refcount_t refcnt ;
   struct completion completion ;
};
#line 177 
struct ipv4_devconf;
#line 178 
struct fib_rules_ops;
#line 179 
struct fib_table;
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ipv4.h"
struct local_ports {
   seqlock_t lock ;
   int range[2U] ;
   bool warned ;
};
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ipv4.h"
struct ping_group_range {
   seqlock_t lock ;
   kgid_t range[2U] ;
};
#line 31 
struct inet_hashinfo;
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ipv4.h"
struct inet_timewait_death_row {
   atomic_t tw_count ;
   struct inet_hashinfo *hashinfo ;
   int sysctl_max_tw_buckets ;
};
#line 40 
struct tcp_fastopen_context;
#line 43 
struct ip_ra_chain;
#line 43 
struct inet_peer_base;
#line 43 
struct xt_table;
#line 43 
struct tcp_congestion_ops;
#line 43 
struct fib_notifier_ops;
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ipv4.h"
struct netns_ipv4 {
   struct ctl_table_header *forw_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *ipv4_hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *xfrm4_hdr ;
   struct ipv4_devconf *devconf_all ;
   struct ipv4_devconf *devconf_dflt ;
   struct ip_ra_chain *ra_chain ;
   struct mutex ra_mutex ;
   struct fib_rules_ops *rules_ops ;
   bool fib_has_custom_rules ;
   unsigned int fib_rules_require_fldissect ;
   struct fib_table *fib_main ;
   struct fib_table *fib_default ;
   bool fib_has_custom_local_routes ;
   int fib_num_tclassid_users ;
   struct hlist_head *fib_table_hash ;
   bool fib_offload_disabled ;
   struct sock *fibnl ;
   struct sock **icmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct inet_peer_base *peers ;
   struct sock **tcp_sk ;
   struct fqdir *fqdir ;
   struct xt_table *iptable_filter ;
   struct xt_table *iptable_mangle ;
   struct xt_table *iptable_raw ;
   struct xt_table *arptable_filter ;
   struct xt_table *iptable_security ;
   struct xt_table *nat_table ;
   int sysctl_icmp_echo_ignore_all ;
   int sysctl_icmp_echo_ignore_broadcasts ;
   int sysctl_icmp_ignore_bogus_error_responses ;
   int sysctl_icmp_ratelimit ;
   int sysctl_icmp_ratemask ;
   int sysctl_icmp_errors_use_inbound_ifaddr ;
   struct local_ports ip_local_ports ;
   int sysctl_tcp_ecn ;
   int sysctl_tcp_ecn_fallback ;
   int sysctl_ip_default_ttl ;
   int sysctl_ip_no_pmtu_disc ;
   int sysctl_ip_fwd_use_pmtu ;
   int sysctl_ip_fwd_update_priority ;
   int sysctl_ip_nonlocal_bind ;
   int sysctl_ip_dynaddr ;
   int sysctl_ip_early_demux ;
   int sysctl_raw_l3mdev_accept ;
   int sysctl_tcp_early_demux ;
   int sysctl_udp_early_demux ;
   int sysctl_fwmark_reflect ;
   int sysctl_tcp_fwmark_accept ;
   int sysctl_tcp_l3mdev_accept ;
   int sysctl_tcp_mtu_probing ;
   int sysctl_tcp_mtu_probe_floor ;
   int sysctl_tcp_base_mss ;
   int sysctl_tcp_min_snd_mss ;
   int sysctl_tcp_probe_threshold ;
   u32 sysctl_tcp_probe_interval ;
   int sysctl_tcp_keepalive_time ;
   int sysctl_tcp_keepalive_probes ;
   int sysctl_tcp_keepalive_intvl ;
   int sysctl_tcp_syn_retries ;
   int sysctl_tcp_synack_retries ;
   int sysctl_tcp_syncookies ;
   int sysctl_tcp_reordering ;
   int sysctl_tcp_retries1 ;
   int sysctl_tcp_retries2 ;
   int sysctl_tcp_orphan_retries ;
   int sysctl_tcp_fin_timeout ;
   unsigned int sysctl_tcp_notsent_lowat ;
   int sysctl_tcp_tw_reuse ;
   int sysctl_tcp_sack ;
   int sysctl_tcp_window_scaling ;
   int sysctl_tcp_timestamps ;
   int sysctl_tcp_early_retrans ;
   int sysctl_tcp_recovery ;
   int sysctl_tcp_thin_linear_timeouts ;
   int sysctl_tcp_slow_start_after_idle ;
   int sysctl_tcp_retrans_collapse ;
   int sysctl_tcp_stdurg ;
   int sysctl_tcp_rfc1337 ;
   int sysctl_tcp_abort_on_overflow ;
   int sysctl_tcp_fack ;
   int sysctl_tcp_max_reordering ;
   int sysctl_tcp_dsack ;
   int sysctl_tcp_app_win ;
   int sysctl_tcp_adv_win_scale ;
   int sysctl_tcp_frto ;
   int sysctl_tcp_nometrics_save ;
   int sysctl_tcp_moderate_rcvbuf ;
   int sysctl_tcp_tso_win_divisor ;
   int sysctl_tcp_workaround_signed_windows ;
   int sysctl_tcp_limit_output_bytes ;
   int sysctl_tcp_challenge_ack_limit ;
   int sysctl_tcp_min_tso_segs ;
   int sysctl_tcp_min_rtt_wlen ;
   int sysctl_tcp_autocorking ;
   int sysctl_tcp_invalid_ratelimit ;
   int sysctl_tcp_pacing_ss_ratio ;
   int sysctl_tcp_pacing_ca_ratio ;
   int sysctl_tcp_wmem[3U] ;
   int sysctl_tcp_rmem[3U] ;
   int sysctl_tcp_comp_sack_nr ;
   unsigned long sysctl_tcp_comp_sack_delay_ns ;
   struct inet_timewait_death_row tcp_death_row ;
   int sysctl_max_syn_backlog ;
   int sysctl_tcp_fastopen ;
   struct tcp_congestion_ops *tcp_congestion_control ;
   struct tcp_fastopen_context *tcp_fastopen_ctx ;
   spinlock_t tcp_fastopen_ctx_lock ;
   unsigned int sysctl_tcp_fastopen_blackhole_timeout ;
   atomic_t tfo_active_disable_times ;
   unsigned long tfo_active_disable_stamp ;
   int sysctl_udp_wmem_min ;
   int sysctl_udp_rmem_min ;
   int sysctl_udp_l3mdev_accept ;
   int sysctl_igmp_max_memberships ;
   int sysctl_igmp_max_msf ;
   int sysctl_igmp_llm_reports ;
   int sysctl_igmp_qrv ;
   struct ping_group_range ping_group_range ;
   atomic_t dev_addr_genid ;
   unsigned long *sysctl_local_reserved_ports ;
   int sysctl_ip_prot_sock ;
   struct list_head mr_tables ;
   struct fib_rules_ops *mr_rules_ops ;
   int sysctl_fib_multipath_use_neigh ;
   int sysctl_fib_multipath_hash_policy ;
   struct fib_notifier_ops *notifier_ops ;
   unsigned int fib_seq ;
   struct fib_notifier_ops *ipmr_notifier_ops ;
   unsigned int ipmr_seq ;
   atomic_t rt_genid ;
   siphash_key_t ip_id_key ;
};
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/dst_ops.h"
struct neighbour;
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/dst_ops.h"
struct dst_ops {
   unsigned short family ;
   unsigned int gc_thresh ;
   int (*gc)(struct dst_ops *) ;
   struct dst_entry *(*check)(struct dst_entry *, __u32 ) ;
   unsigned int (*default_advmss)(struct dst_entry *) ;
   unsigned int (*mtu)(struct dst_entry *) ;
   u32 *(*cow_metrics)(struct dst_entry *, unsigned long ) ;
   void (*destroy)(struct dst_entry *) ;
   void (*ifdown)(struct dst_entry *, struct net_device *, int ) ;
   struct dst_entry *(*negative_advice)(struct dst_entry *) ;
   void (*link_failure)(struct sk_buff *) ;
   void (*update_pmtu)(struct dst_entry *, struct sock *, struct sk_buff *, u32 , bool ) ;
   void (*redirect)(struct dst_entry *, struct sock *, struct sk_buff *) ;
   int (*local_out)(struct net *, struct sock *, struct sk_buff *) ;
   struct neighbour *(*neigh_lookup)(struct dst_entry *, struct sk_buff *, void *) ;
   void (*confirm_neigh)(struct dst_entry *, void *) ;
   struct kmem_cache *kmem_cachep ;
   struct percpu_counter pcpuc_entries ;
};
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ipv6.h"
struct netns_sysctl_ipv6 {
   struct ctl_table_header *hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *icmp_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *xfrm6_hdr ;
   int bindv6only ;
   int flush_delay ;
   int ip6_rt_max_size ;
   int ip6_rt_gc_min_interval ;
   int ip6_rt_gc_timeout ;
   int ip6_rt_gc_interval ;
   int ip6_rt_gc_elasticity ;
   int ip6_rt_mtu_expires ;
   int ip6_rt_min_advmss ;
   int multipath_hash_policy ;
   int flowlabel_consistency ;
   int auto_flowlabels ;
   int icmpv6_time ;
   int icmpv6_echo_ignore_all ;
   int icmpv6_echo_ignore_multicast ;
   int icmpv6_echo_ignore_anycast ;
   unsigned long icmpv6_ratemask[4U] ;
   unsigned long *icmpv6_ratemask_ptr ;
   int anycast_src_echo_reply ;
   int ip_nonlocal_bind ;
   int fwmark_reflect ;
   int idgen_retries ;
   int idgen_delay ;
   int flowlabel_state_ranges ;
   int flowlabel_reflect ;
   int max_dst_opts_cnt ;
   int max_hbh_opts_cnt ;
   int max_dst_opts_len ;
   int max_hbh_opts_len ;
   int seg6_flowlabel ;
   bool skip_notify_on_dev_down ;
};
#line 56 
struct ipv6_devconf;
#line 56 
struct fib6_info;
#line 56 
struct rt6_info;
#line 56 
struct rt6_statistics;
#line 56 
struct fib6_table;
#line 56 
struct seg6_pernet_data;
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ipv6.h"
struct __anonstruct_ip6addrlbl_table_580 {
   struct hlist_head head ;
   spinlock_t lock ;
   u32 seq ;
};
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ipv6.h"
struct netns_ipv6 {
   struct netns_sysctl_ipv6 sysctl ;
   struct ipv6_devconf *devconf_all ;
   struct ipv6_devconf *devconf_dflt ;
   struct inet_peer_base *peers ;
   struct fqdir *fqdir ;
   struct xt_table *ip6table_filter ;
   struct xt_table *ip6table_mangle ;
   struct xt_table *ip6table_raw ;
   struct xt_table *ip6table_security ;
   struct xt_table *ip6table_nat ;
   struct fib6_info *fib6_null_entry ;
   struct rt6_info *ip6_null_entry ;
   struct rt6_statistics *rt6_stats ;
   struct timer_list ip6_fib_timer ;
   struct hlist_head *fib_table_hash ;
   struct fib6_table *fib6_main_tbl ;
   struct list_head fib6_walkers ;
   struct dst_ops ip6_dst_ops ;
   rwlock_t fib6_walker_lock ;
   spinlock_t fib6_gc_lock ;
   unsigned int ip6_rt_gc_expire ;
   unsigned long ip6_rt_last_gc ;
   unsigned int fib6_rules_require_fldissect ;
   bool fib6_has_custom_rules ;
   unsigned int fib6_routes_require_src ;
   struct rt6_info *ip6_prohibit_entry ;
   struct rt6_info *ip6_blk_hole_entry ;
   struct fib6_table *fib6_local_tbl ;
   struct fib_rules_ops *fib6_rules_ops ;
   struct sock **icmp_sk ;
   struct sock *ndisc_sk ;
   struct sock *tcp_sk ;
   struct sock *igmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct list_head mr6_tables ;
   struct fib_rules_ops *mr6_rules_ops ;
   atomic_t dev_addr_genid ;
   atomic_t fib6_sernum ;
   struct seg6_pernet_data *seg6_data ;
   struct fib_notifier_ops *notifier_ops ;
   struct fib_notifier_ops *ip6mr_notifier_ops ;
   unsigned int ipmr_seq ;
   struct __anonstruct_ip6addrlbl_table_580 ip6addrlbl_table ;
};
#line 121  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ipv6.h"
struct netns_nf_frag {
   struct fqdir *fqdir ;
};
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/nexthop.h"
struct netns_nexthop {
   struct rb_root rb_root ;
   struct hlist_head *devhash ;
   unsigned int seq ;
   u32 last_id_allocated ;
};
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ieee802154_6lowpan.h"
struct netns_sysctl_lowpan {
   struct ctl_table_header *frags_hdr ;
};
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ieee802154_6lowpan.h"
struct netns_ieee802154_lowpan {
   struct netns_sysctl_lowpan sysctl ;
   struct fqdir *fqdir ;
};
#line 21 
struct sctp_mib;
#line 10  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/sctp.h"
struct netns_sctp {
   struct sctp_mib *sctp_statistics ;
   struct proc_dir_entry *proc_net_sctp ;
   struct ctl_table_header *sysctl_header ;
   struct sock *ctl_sock ;
   struct list_head local_addr_list ;
   struct list_head addr_waitq ;
   struct timer_list addr_wq_timer ;
   struct list_head auto_asconf_splist ;
   spinlock_t addr_wq_lock ;
   spinlock_t local_addr_lock ;
   unsigned int rto_initial ;
   unsigned int rto_min ;
   unsigned int rto_max ;
   int rto_alpha ;
   int rto_beta ;
   int max_burst ;
   int cookie_preserve_enable ;
   char *sctp_hmac_alg ;
   unsigned int valid_cookie_life ;
   unsigned int sack_timeout ;
   unsigned int hb_interval ;
   int max_retrans_association ;
   int max_retrans_path ;
   int max_retrans_init ;
   int pf_retrans ;
   int ps_retrans ;
   int pf_enable ;
   int pf_expose ;
   int sndbuf_policy ;
   int rcvbuf_policy ;
   int default_auto_asconf ;
   int addip_enable ;
   int addip_noauth ;
   int prsctp_enable ;
   int reconf_enable ;
   int auth_enable ;
   int intl_enable ;
   int ecn_enable ;
   int scope_policy ;
   int rwnd_upd_shift ;
   unsigned long max_autoclose ;
};
#line 7  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/dccp.h"
struct netns_dccp {
   struct sock *v4_ctl_sk ;
   struct sock *v6_ctl_sk ;
};
#line 75  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/netfilter.h"
struct nf_logger;
#line 76 
struct nf_queue_handler;
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/netfilter.h"
struct nf_hook_entries;
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/netfilter.h"
struct netns_nf {
   struct proc_dir_entry *proc_netfilter ;
   struct nf_queue_handler *queue_handler ;
   struct nf_logger *nf_loggers[13U] ;
   struct ctl_table_header *nf_log_dir_header ;
   struct nf_hook_entries *hooks_ipv4[5U] ;
   struct nf_hook_entries *hooks_ipv6[5U] ;
   struct nf_hook_entries *hooks_arp[3U] ;
   struct nf_hook_entries *hooks_bridge[5U] ;
   struct nf_hook_entries *hooks_decnet[7U] ;
   bool defrag_ipv4 ;
   bool defrag_ipv6 ;
};
#line 37 
struct ebt_table;
#line 10  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/x_tables.h"
struct netns_xt {
   struct list_head tables[13U] ;
   bool notrack_deprecated_warning ;
   bool clusterip_deprecated_warning ;
   struct ebt_table *broute_table ;
   struct ebt_table *frame_filter ;
   struct ebt_table *frame_nat ;
};
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_nulls.h"
struct hlist_nulls_node;
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_nulls.h"
struct hlist_nulls_head {
   struct hlist_nulls_node *first ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_nulls.h"
struct hlist_nulls_node {
   struct hlist_nulls_node *next ;
   struct hlist_nulls_node **pprev ;
};
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct nf_generic_net {
   unsigned int timeout ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct nf_tcp_net {
   unsigned int timeouts[14U] ;
   int tcp_loose ;
   int tcp_be_liberal ;
   int tcp_max_retrans ;
};
#line 38  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct nf_udp_net {
   unsigned int timeouts[2U] ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct nf_icmp_net {
   unsigned int timeout ;
};
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct nf_dccp_net {
   int dccp_loose ;
   unsigned int dccp_timeout[10U] ;
};
#line 54  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct nf_sctp_net {
   unsigned int timeouts[10U] ;
};
#line 66  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct nf_gre_net {
   struct list_head keymap_list ;
   unsigned int timeouts[2U] ;
};
#line 72  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct nf_ip_net {
   struct nf_generic_net generic ;
   struct nf_tcp_net tcp ;
   struct nf_udp_net udp ;
   struct nf_icmp_net icmp ;
   struct nf_icmp_net icmpv6 ;
   struct nf_dccp_net dccp ;
   struct nf_sctp_net sctp ;
   struct nf_gre_net gre ;
};
#line 89  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct ct_pcpu {
   spinlock_t lock ;
   struct hlist_nulls_head unconfirmed ;
   struct hlist_nulls_head dying ;
};
#line 95 
struct nf_ct_event_notifier;
#line 95 
struct nf_exp_event_notifier;
#line 95  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct netns_ct {
   atomic_t count ;
   unsigned int expect_count ;
   struct delayed_work ecache_dwork ;
   bool ecache_dwork_pending ;
   bool auto_assign_helper_warned ;
   struct ctl_table_header *sysctl_header ;
   unsigned int sysctl_log_invalid ;
   int sysctl_events ;
   int sysctl_acct ;
   int sysctl_auto_assign_helper ;
   int sysctl_tstamp ;
   int sysctl_checksum ;
   struct ct_pcpu *pcpu_lists ;
   struct ip_conntrack_stat *stat ;
   struct nf_ct_event_notifier *nf_conntrack_event_cb ;
   struct nf_exp_event_notifier *nf_expect_event_cb ;
   struct nf_ip_net nf_ct_proto ;
   unsigned int labels_used ;
};
#line 7  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/nftables.h"
struct netns_nftables {
   struct list_head tables ;
   struct list_head commit_list ;
   struct list_head module_list ;
   struct mutex commit_mutex ;
   unsigned int base_seq ;
   u8 gencursor ;
   u8 validate_state ;
};
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/xfrm.h"
struct xfrm_policy_hash {
   struct hlist_head *table ;
   unsigned int hmask ;
   u8 dbits4 ;
   u8 sbits4 ;
   u8 dbits6 ;
   u8 sbits6 ;
};
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/xfrm.h"
struct xfrm_policy_hthresh {
   struct work_struct work ;
   seqlock_t lock ;
   u8 lbits4 ;
   u8 rbits4 ;
   u8 lbits6 ;
   u8 rbits6 ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/xfrm.h"
struct netns_xfrm {
   struct list_head state_all ;
   struct hlist_head *state_bydst ;
   struct hlist_head *state_bysrc ;
   struct hlist_head *state_byspi ;
   unsigned int state_hmask ;
   unsigned int state_num ;
   struct work_struct state_hash_work ;
   struct list_head policy_all ;
   struct hlist_head *policy_byidx ;
   unsigned int policy_idx_hmask ;
   struct hlist_head policy_inexact[3U] ;
   struct xfrm_policy_hash policy_bydst[3U] ;
   unsigned int policy_count[6U] ;
   struct work_struct policy_hash_work ;
   struct xfrm_policy_hthresh policy_hthresh ;
   struct list_head inexact_bins ;
   struct sock *nlsk ;
   struct sock *nlsk_stash ;
   u32 sysctl_aevent_etime ;
   u32 sysctl_aevent_rseqth ;
   int sysctl_larval_drop ;
   u32 sysctl_acq_expires ;
   struct ctl_table_header *sysctl_hdr ;
   struct dst_ops xfrm4_dst_ops ;
   struct dst_ops xfrm6_dst_ops ;
   spinlock_t xfrm_state_lock ;
   spinlock_t xfrm_policy_lock ;
   struct mutex xfrm_cfg_mutex ;
};
#line 79 
struct mpls_route;
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/mpls.h"
struct netns_mpls {
   int ip_ttl_propagate ;
   int default_ttl ;
   size_t platform_labels ;
   struct mpls_route **platform_label ;
   struct ctl_table_header *ctl ;
};
#line 20 
struct can_dev_rcv_lists;
#line 21 
struct can_pkg_stats;
#line 22 
struct can_rcv_lists_stats;
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/can.h"
struct netns_can {
   struct proc_dir_entry *proc_dir ;
   struct proc_dir_entry *pde_version ;
   struct proc_dir_entry *pde_stats ;
   struct proc_dir_entry *pde_reset_stats ;
   struct proc_dir_entry *pde_rcvlist_all ;
   struct proc_dir_entry *pde_rcvlist_fil ;
   struct proc_dir_entry *pde_rcvlist_inv ;
   struct proc_dir_entry *pde_rcvlist_sff ;
   struct proc_dir_entry *pde_rcvlist_eff ;
   struct proc_dir_entry *pde_rcvlist_err ;
   struct proc_dir_entry *bcmproc_dir ;
   struct can_dev_rcv_lists *rx_alldev_list ;
   spinlock_t rcvlists_lock ;
   struct timer_list stattimer ;
   struct can_pkg_stats *pkg_stats ;
   struct can_rcv_lists_stats *rcv_lists_stats ;
   struct hlist_head cgw_list ;
};
#line 8  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/xdp.h"
struct netns_xdp {
   struct mutex lock ;
   struct hlist_head list ;
};
#line 12 
struct proc_ns_operations;
#line 7  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ns_common.h"
struct ns_common {
   atomic_long_t stashed ;
   struct proc_ns_operations *ops ;
   unsigned int inum ;
};
#line 12 
struct net_generic;
#line 13 
struct uevent_sock;
#line 14 
struct netns_ipvs;
#line 55  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/net_namespace.h"
struct key_tag;
#line 55 
struct ucounts;
#line 55  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/net_namespace.h"
struct net {
   refcount_t passive ;
   refcount_t count ;
   spinlock_t rules_mod_lock ;
   unsigned int dev_unreg_count ;
   unsigned int dev_base_seq ;
   int ifindex ;
   spinlock_t nsid_lock ;
   atomic_t fnhe_genid ;
   struct list_head list ;
   struct list_head exit_list ;
   struct llist_node cleanup_list ;
   struct key_tag *key_domain ;
   struct user_namespace *user_ns ;
   struct ucounts *ucounts ;
   struct idr netns_ids ;
   struct ns_common ns ;
   struct list_head dev_base_head ;
   struct proc_dir_entry *proc_net ;
   struct proc_dir_entry *proc_net_stat ;
   struct ctl_table_set sysctls ;
   struct sock *rtnl ;
   struct sock *genl_sock ;
   struct uevent_sock *uevent_sock ;
   struct hlist_head *dev_name_head ;
   struct hlist_head *dev_index_head ;
   struct raw_notifier_head netdev_chain ;
   u32 hash_mix ;
   struct net_device *loopback_dev ;
   struct list_head rules_ops ;
   struct netns_core core ;
   struct netns_mib mib ;
   struct netns_packet packet ;
   struct netns_unix unx ;
   struct netns_nexthop nexthop ;
   struct netns_ipv4 ipv4 ;
   struct netns_ipv6 ipv6 ;
   struct netns_ieee802154_lowpan ieee802154_lowpan ;
   struct netns_sctp sctp ;
   struct netns_dccp dccp ;
   struct netns_nf nf ;
   struct netns_xt xt ;
   struct netns_ct ct ;
   struct netns_nftables nft ;
   struct netns_nf_frag nf_frag ;
   struct ctl_table_header *nf_frag_frags_hdr ;
   struct sock *nfnl ;
   struct sock *nfnl_stash ;
   struct list_head nfnl_acct_list ;
   struct list_head nfct_timeout_list ;
   struct sk_buff_head wext_nlevents ;
   struct net_generic *gen ;
   struct bpf_prog *flow_dissector_prog ;
   struct netns_xfrm xfrm ;
   struct netns_ipvs *ipvs ;
   struct netns_mpls mpls ;
   struct netns_can can ;
   struct netns_xdp xdp ;
   struct sock *crypto_nlsk ;
   struct sock *diag_nlsk ;
} __attribute__((__designated_init__));
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/assoc_array.h"
struct assoc_array_ptr;
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/assoc_array.h"
struct assoc_array {
   struct assoc_array_ptr *root ;
   unsigned long nr_leaves_on_tree ;
};
#line 83  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/assoc_array.h"
typedef int32_t key_serial_t;
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
typedef uint32_t key_perm_t;
#line 32 
struct key_type;
#line 85  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
struct key_tag {
   struct callback_head rcu ;
   refcount_t usage ;
   bool removed ;
};
#line 91  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
struct __anonstruct_593 {
   u16 desc_len ;
   char desc[6U] ;
};
#line 91  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
union __anonunion_592 {
   struct __anonstruct_593 __anonCompField___anonunion_592_103 ;
   unsigned long x ;
};
#line 91  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
struct keyring_index_key {
   unsigned long hash ;
   union __anonunion_592 __anonCompField_keyring_index_key_104 ;
   struct key_type *type ;
   struct key_tag *domain_tag ;
   char *description ;
};
#line 111  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
union key_payload {
   void *rcu_data0 ;
   void *data[4U] ;
};
#line 153  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
struct key_restriction {
   int (*check)(struct key *, struct key_type *, union key_payload *, struct key *) ;
   struct key *key ;
   struct key_type *keytype ;
};
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
union __anonunion_594 {
   struct list_head graveyard_link ;
   struct rb_node serial_node ;
};
#line 172 
struct key_user;
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
union __anonunion_595 {
   time64_t expiry ;
   time64_t revoked_at ;
};
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
struct __anonstruct_597 {
   unsigned long hash ;
   unsigned long len_desc ;
   struct key_type *type ;
   struct key_tag *domain_tag ;
   char *description ;
};
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
union __anonunion_596 {
   struct keyring_index_key index_key ;
   struct __anonstruct_597 __anonCompField___anonunion_596_107 ;
};
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
struct __anonstruct_599 {
   struct list_head name_link ;
   struct assoc_array keys ;
};
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
union __anonunion_598 {
   union key_payload payload ;
   struct __anonstruct_599 __anonCompField___anonunion_598_109 ;
};
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
struct key {
   refcount_t usage ;
   key_serial_t serial ;
   union __anonunion_594 __anonCompField_key_105 ;
   struct rw_semaphore sem ;
   struct key_user *user ;
   void *security ;
   union __anonunion_595 __anonCompField_key_106 ;
   time64_t last_used_at ;
   kuid_t uid ;
   kgid_t gid ;
   key_perm_t perm ;
   unsigned short quotalen ;
   unsigned short datalen ;
   short state ;
   unsigned long flags ;
   union __anonunion_596 __anonCompField_key_108 ;
   union __anonunion_598 __anonCompField_key_110 ;
   struct key_restriction *restrict_link ;
};
#line 13  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched/user.h"
struct user_struct {
   refcount_t __count ;
   atomic_t processes ;
   atomic_t sigpending ;
   atomic_t fanotify_listeners ;
   atomic_long_t epoll_watches ;
   unsigned long mq_bytes ;
   unsigned long locked_shm ;
   unsigned long unix_inflight ;
   atomic_long_t pipe_bufs ;
   struct hlist_node uidhash_node ;
   kuid_t uid ;
   atomic_long_t locked_vm ;
   struct ratelimit_state ratelimit ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cred.h"
struct group_info {
   atomic_t usage ;
   int ngroups ;
   kgid_t gid[0U] ;
} __attribute__((__designated_init__));
#line 111  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cred.h"
union __anonunion_602 {
   int non_rcu ;
   struct callback_head rcu ;
};
#line 111  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cred.h"
struct cred {
   atomic_t usage ;
   atomic_t subscribers ;
   void *put_addr ;
   unsigned int magic ;
   kuid_t uid ;
   kgid_t gid ;
   kuid_t suid ;
   kgid_t sgid ;
   kuid_t euid ;
   kgid_t egid ;
   kuid_t fsuid ;
   kgid_t fsgid ;
   unsigned int securebits ;
   kernel_cap_t cap_inheritable ;
   kernel_cap_t cap_permitted ;
   kernel_cap_t cap_effective ;
   kernel_cap_t cap_bset ;
   kernel_cap_t cap_ambient ;
   unsigned char jit_keyring ;
   struct key *session_keyring ;
   struct key *process_keyring ;
   struct key *thread_keyring ;
   struct key *request_key_auth ;
   void *security ;
   struct user_struct *user ;
   struct user_namespace *user_ns ;
   struct group_info *group_info ;
   union __anonunion_602 __anonCompField_cred_111 ;
} __attribute__((__designated_init__));
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/seq_file.h"
struct seq_file {
   char *buf ;
   size_t size ;
   size_t from ;
   size_t count ;
   size_t pad_until ;
   loff_t index ;
   loff_t read_pos ;
   u64 version ;
   struct mutex lock ;
   struct seq_operations *op ;
   int poll_event ;
   struct file *file ;
   void *private ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/seq_file.h"
struct seq_operations {
   void *(*start)(struct seq_file *, loff_t *) ;
   void (*stop)(struct seq_file *, void *) ;
   void *(*next)(struct seq_file *, void *, loff_t *) ;
   int (*show)(struct seq_file *, void *) ;
};
#line 275  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/net_namespace.h"
struct __anonstruct_possible_net_t_603 {
   struct net *net ;
};
#line 275  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/net_namespace.h"
typedef struct __anonstruct_possible_net_t_603 possible_net_t;
#line 58  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct ieee_ets {
   __u8 willing ;
   __u8 ets_cap ;
   __u8 cbs ;
   __u8 tc_tx_bw[8U] ;
   __u8 tc_rx_bw[8U] ;
   __u8 tc_tsa[8U] ;
   __u8 prio_tc[8U] ;
   __u8 tc_reco_bw[8U] ;
   __u8 tc_reco_tsa[8U] ;
   __u8 reco_prio_tc[8U] ;
};
#line 78  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct ieee_maxrate {
   __u64 tc_maxrate[8U] ;
};
#line 119  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct ieee_qcn {
   __u8 rpg_enable[8U] ;
   __u32 rppp_max_rps[8U] ;
   __u32 rpg_time_reset[8U] ;
   __u32 rpg_byte_reset[8U] ;
   __u32 rpg_threshold[8U] ;
   __u32 rpg_max_rate[8U] ;
   __u32 rpg_ai_rate[8U] ;
   __u32 rpg_hai_rate[8U] ;
   __u32 rpg_gd[8U] ;
   __u32 rpg_min_dec_fac[8U] ;
   __u32 rpg_min_rate[8U] ;
   __u32 cndd_state_machine[8U] ;
};
#line 141  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct ieee_qcn_stats {
   __u64 rppp_rp_centiseconds[8U] ;
   __u32 rppp_created_rps[8U] ;
};
#line 157  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct ieee_pfc {
   __u8 pfc_cap ;
   __u8 pfc_en ;
   __u8 mbc ;
   __u16 delay ;
   __u64 requests[8U] ;
   __u64 indications[8U] ;
};
#line 168  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct dcbnl_buffer {
   __u8 prio2buffer[8U] ;
   __u32 buffer_size[8U] ;
   __u32 total_size ;
};
#line 190  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct cee_pg {
   __u8 willing ;
   __u8 error ;
   __u8 pg_en ;
   __u8 tcs_supported ;
   __u8 pg_bw[8U] ;
   __u8 prio_pg[8U] ;
};
#line 207  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct cee_pfc {
   __u8 willing ;
   __u8 error ;
   __u8 pfc_en ;
   __u8 tcs_supported ;
};
#line 244  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct dcb_app {
   __u8 selector ;
   __u8 priority ;
   __u16 protocol ;
};
#line 259  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct dcb_peer_app_info {
   __u8 willing ;
   __u8 error ;
};
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/dcbnl.h"
struct dcbnl_rtnl_ops {
   int (*ieee_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_setets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_getmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_setmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_getqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_setqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_getqcnstats)(struct net_device *, struct ieee_qcn_stats *) ;
   int (*ieee_getpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_setpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_getapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_setapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_delapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_peer_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_peer_getpfc)(struct net_device *, struct ieee_pfc *) ;
   u8 (*getstate)(struct net_device *) ;
   u8 (*setstate)(struct net_device *, u8 ) ;
   void (*getpermhwaddr)(struct net_device *, u8 *) ;
   void (*setpgtccfgtx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgtx)(struct net_device *, int , u8 ) ;
   void (*setpgtccfgrx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgrx)(struct net_device *, int , u8 ) ;
   void (*getpgtccfgtx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgtx)(struct net_device *, int , u8 *) ;
   void (*getpgtccfgrx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgrx)(struct net_device *, int , u8 *) ;
   void (*setpfccfg)(struct net_device *, int , u8 ) ;
   void (*getpfccfg)(struct net_device *, int , u8 *) ;
   u8 (*setall)(struct net_device *) ;
   u8 (*getcap)(struct net_device *, int , u8 *) ;
   int (*getnumtcs)(struct net_device *, int , u8 *) ;
   int (*setnumtcs)(struct net_device *, int , u8 ) ;
   u8 (*getpfcstate)(struct net_device *) ;
   void (*setpfcstate)(struct net_device *, u8 ) ;
   void (*getbcncfg)(struct net_device *, int , u32 *) ;
   void (*setbcncfg)(struct net_device *, int , u32 ) ;
   void (*getbcnrp)(struct net_device *, int , u8 *) ;
   void (*setbcnrp)(struct net_device *, int , u8 ) ;
   int (*setapp)(struct net_device *, u8 , u16 , u8 ) ;
   int (*getapp)(struct net_device *, u8 , u16 ) ;
   u8 (*getfeatcfg)(struct net_device *, int , u8 *) ;
   u8 (*setfeatcfg)(struct net_device *, int , u8 ) ;
   u8 (*getdcbx)(struct net_device *) ;
   u8 (*setdcbx)(struct net_device *, u8 ) ;
   int (*peer_getappinfo)(struct net_device *, struct dcb_peer_app_info *, u16 *) ;
   int (*peer_getapptable)(struct net_device *, struct dcb_app *) ;
   int (*cee_peer_getpg)(struct net_device *, struct cee_pg *) ;
   int (*cee_peer_getpfc)(struct net_device *, struct cee_pfc *) ;
   int (*dcbnl_getbuffer)(struct net_device *, struct dcbnl_buffer *) ;
   int (*dcbnl_setbuffer)(struct net_device *, struct dcbnl_buffer *) ;
};
#line 41  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/taskstats.h"
struct taskstats {
   __u16 version ;
   __u32 ac_exitcode ;
   __u8 ac_flag ;
   __u8 ac_nice ;
   __u64 cpu_count ;
   __u64 cpu_delay_total ;
   __u64 blkio_count ;
   __u64 blkio_delay_total ;
   __u64 swapin_count ;
   __u64 swapin_delay_total ;
   __u64 cpu_run_real_total ;
   __u64 cpu_run_virtual_total ;
   char ac_comm[32U] ;
   __u8 ac_sched ;
   __u8 ac_pad[3U] ;
   __u32 ac_uid ;
   __u32 ac_gid ;
   __u32 ac_pid ;
   __u32 ac_ppid ;
   __u32 ac_btime ;
   __u64 ac_etime ;
   __u64 ac_utime ;
   __u64 ac_stime ;
   __u64 ac_minflt ;
   __u64 ac_majflt ;
   __u64 coremem ;
   __u64 virtmem ;
   __u64 hiwater_rss ;
   __u64 hiwater_vm ;
   __u64 read_char ;
   __u64 write_char ;
   __u64 read_syscalls ;
   __u64 write_syscalls ;
   __u64 read_bytes ;
   __u64 write_bytes ;
   __u64 cancelled_write_bytes ;
   __u64 nvcsw ;
   __u64 nivcsw ;
   __u64 ac_utimescaled ;
   __u64 ac_stimescaled ;
   __u64 cpu_scaled_run_real_total ;
   __u64 freepages_count ;
   __u64 freepages_delay_total ;
   __u64 thrashing_count ;
   __u64 thrashing_delay_total ;
};
#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/cgroupstats.h"
struct mnt_namespace;
#line 60 
struct uts_namespace;
#line 61 
struct ipc_namespace;
#line 62 
struct cgroup_namespace;
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/nsproxy.h"
struct nsproxy {
   atomic_t count ;
   struct uts_namespace *uts_ns ;
   struct ipc_namespace *ipc_ns ;
   struct mnt_namespace *mnt_ns ;
   struct pid_namespace *pid_ns_for_children ;
   struct net *net_ns ;
   struct cgroup_namespace *cgroup_ns ;
};
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/user_namespace.h"
struct uid_gid_extent {
   u32 first ;
   u32 lower_first ;
   u32 count ;
};
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/user_namespace.h"
struct __anonstruct_605 {
   struct uid_gid_extent *forward ;
   struct uid_gid_extent *reverse ;
};
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/user_namespace.h"
union __anonunion_604 {
   struct uid_gid_extent extent[5U] ;
   struct __anonstruct_605 __anonCompField___anonunion_604_112 ;
};
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/user_namespace.h"
struct uid_gid_map {
   u32 nr_extents ;
   union __anonunion_604 __anonCompField_uid_gid_map_113 ;
};
#line 55  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/user_namespace.h"
struct user_namespace {
   struct uid_gid_map uid_map ;
   struct uid_gid_map gid_map ;
   struct uid_gid_map projid_map ;
   atomic_t count ;
   struct user_namespace *parent ;
   int level ;
   kuid_t owner ;
   kgid_t group ;
   struct ns_common ns ;
   unsigned long flags ;
   struct list_head keyring_name_list ;
   struct key *user_keyring_register ;
   struct rw_semaphore keyring_sem ;
   struct key *persistent_keyring_register ;
   struct work_struct work ;
   struct ctl_table_set set ;
   struct ctl_table_header *sysctls ;
   struct ucounts *ucounts ;
   int ucount_max[9U] ;
} __attribute__((__designated_init__));
#line 91  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/user_namespace.h"
struct ucounts {
   struct hlist_node node ;
   struct user_namespace *ns ;
   kuid_t uid ;
   int count ;
   atomic_t ucount[9U] ;
};
#line 65  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct bpf_insn {
   __u8 code ;
   __u8 dst_reg : 4 ;
   __u8 src_reg : 4 ;
   __s16 off ;
   __s32 imm ;
};
#line 79  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct bpf_cgroup_storage_key {
   __u64 cgroup_inode_id ;
   __u32 attach_type ;
};
#line 110 
enum bpf_map_type {
    BPF_MAP_TYPE_UNSPEC = 0,
    BPF_MAP_TYPE_HASH = 1,
    BPF_MAP_TYPE_ARRAY = 2,
    BPF_MAP_TYPE_PROG_ARRAY = 3,
    BPF_MAP_TYPE_PERF_EVENT_ARRAY = 4,
    BPF_MAP_TYPE_PERCPU_HASH = 5,
    BPF_MAP_TYPE_PERCPU_ARRAY = 6,
    BPF_MAP_TYPE_STACK_TRACE = 7,
    BPF_MAP_TYPE_CGROUP_ARRAY = 8,
    BPF_MAP_TYPE_LRU_HASH = 9,
    BPF_MAP_TYPE_LRU_PERCPU_HASH = 10,
    BPF_MAP_TYPE_LPM_TRIE = 11,
    BPF_MAP_TYPE_ARRAY_OF_MAPS = 12,
    BPF_MAP_TYPE_HASH_OF_MAPS = 13,
    BPF_MAP_TYPE_DEVMAP = 14,
    BPF_MAP_TYPE_SOCKMAP = 15,
    BPF_MAP_TYPE_CPUMAP = 16,
    BPF_MAP_TYPE_XSKMAP = 17,
    BPF_MAP_TYPE_SOCKHASH = 18,
    BPF_MAP_TYPE_CGROUP_STORAGE = 19,
    BPF_MAP_TYPE_REUSEPORT_SOCKARRAY = 20,
    BPF_MAP_TYPE_PERCPU_CGROUP_STORAGE = 21,
    BPF_MAP_TYPE_QUEUE = 22,
    BPF_MAP_TYPE_STACK = 23,
    BPF_MAP_TYPE_SK_STORAGE = 24,
    BPF_MAP_TYPE_DEVMAP_HASH = 25
};
#line 139 
enum bpf_prog_type {
    BPF_PROG_TYPE_UNSPEC = 0,
    BPF_PROG_TYPE_SOCKET_FILTER = 1,
    BPF_PROG_TYPE_KPROBE = 2,
    BPF_PROG_TYPE_SCHED_CLS = 3,
    BPF_PROG_TYPE_SCHED_ACT = 4,
    BPF_PROG_TYPE_TRACEPOINT = 5,
    BPF_PROG_TYPE_XDP = 6,
    BPF_PROG_TYPE_PERF_EVENT = 7,
    BPF_PROG_TYPE_CGROUP_SKB = 8,
    BPF_PROG_TYPE_CGROUP_SOCK = 9,
    BPF_PROG_TYPE_LWT_IN = 10,
    BPF_PROG_TYPE_LWT_OUT = 11,
    BPF_PROG_TYPE_LWT_XMIT = 12,
    BPF_PROG_TYPE_SOCK_OPS = 13,
    BPF_PROG_TYPE_SK_SKB = 14,
    BPF_PROG_TYPE_CGROUP_DEVICE = 15,
    BPF_PROG_TYPE_SK_MSG = 16,
    BPF_PROG_TYPE_RAW_TRACEPOINT = 17,
    BPF_PROG_TYPE_CGROUP_SOCK_ADDR = 18,
    BPF_PROG_TYPE_LWT_SEG6LOCAL = 19,
    BPF_PROG_TYPE_LIRC_MODE2 = 20,
    BPF_PROG_TYPE_SK_REUSEPORT = 21,
    BPF_PROG_TYPE_FLOW_DISSECTOR = 22,
    BPF_PROG_TYPE_CGROUP_SYSCTL = 23,
    BPF_PROG_TYPE_RAW_TRACEPOINT_WRITABLE = 24,
    BPF_PROG_TYPE_CGROUP_SOCKOPT = 25,
    BPF_PROG_TYPE_TRACING = 26
};
#line 169 
enum bpf_attach_type {
    BPF_CGROUP_INET_INGRESS = 0,
    BPF_CGROUP_INET_EGRESS = 1,
    BPF_CGROUP_INET_SOCK_CREATE = 2,
    BPF_CGROUP_SOCK_OPS = 3,
    BPF_SK_SKB_STREAM_PARSER = 4,
    BPF_SK_SKB_STREAM_VERDICT = 5,
    BPF_CGROUP_DEVICE = 6,
    BPF_SK_MSG_VERDICT = 7,
    BPF_CGROUP_INET4_BIND = 8,
    BPF_CGROUP_INET6_BIND = 9,
    BPF_CGROUP_INET4_CONNECT = 10,
    BPF_CGROUP_INET6_CONNECT = 11,
    BPF_CGROUP_INET4_POST_BIND = 12,
    BPF_CGROUP_INET6_POST_BIND = 13,
    BPF_CGROUP_UDP4_SENDMSG = 14,
    BPF_CGROUP_UDP6_SENDMSG = 15,
    BPF_LIRC_MODE2 = 16,
    BPF_FLOW_DISSECTOR = 17,
    BPF_CGROUP_SYSCTL = 18,
    BPF_CGROUP_UDP4_RECVMSG = 19,
    BPF_CGROUP_UDP6_RECVMSG = 20,
    BPF_CGROUP_GETSOCKOPT = 21,
    BPF_CGROUP_SETSOCKOPT = 22,
    BPF_TRACE_RAW_TP = 23,
    BPF_TRACE_FENTRY = 24,
    BPF_TRACE_FEXIT = 25,
    __MAX_BPF_ATTACH_TYPE = 26
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_607 {
   __u32 map_type ;
   __u32 key_size ;
   __u32 value_size ;
   __u32 max_entries ;
   __u32 map_flags ;
   __u32 inner_map_fd ;
   __u32 numa_node ;
   char map_name[16U] ;
   __u32 map_ifindex ;
   __u32 btf_fd ;
   __u32 btf_key_type_id ;
   __u32 btf_value_type_id ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
union __anonunion_609 {
   __u64 value ;
   __u64 next_key ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_608 {
   __u32 map_fd ;
   __u64 key ;
   union __anonunion_609 __anonCompField___anonstruct_608_116 ;
   __u64 flags ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_610 {
   __u32 prog_type ;
   __u32 insn_cnt ;
   __u64 insns ;
   __u64 license ;
   __u32 log_level ;
   __u32 log_size ;
   __u64 log_buf ;
   __u32 kern_version ;
   __u32 prog_flags ;
   char prog_name[16U] ;
   __u32 prog_ifindex ;
   __u32 expected_attach_type ;
   __u32 prog_btf_fd ;
   __u32 func_info_rec_size ;
   __u64 func_info ;
   __u32 func_info_cnt ;
   __u32 line_info_rec_size ;
   __u64 line_info ;
   __u32 line_info_cnt ;
   __u32 attach_btf_id ;
   __u32 attach_prog_fd ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_611 {
   __u64 pathname ;
   __u32 bpf_fd ;
   __u32 file_flags ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_612 {
   __u32 target_fd ;
   __u32 attach_bpf_fd ;
   __u32 attach_type ;
   __u32 attach_flags ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_test_613 {
   __u32 prog_fd ;
   __u32 retval ;
   __u32 data_size_in ;
   __u32 data_size_out ;
   __u64 data_in ;
   __u64 data_out ;
   __u32 repeat ;
   __u32 duration ;
   __u32 ctx_size_in ;
   __u32 ctx_size_out ;
   __u64 ctx_in ;
   __u64 ctx_out ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
union __anonunion_615 {
   __u32 start_id ;
   __u32 prog_id ;
   __u32 map_id ;
   __u32 btf_id ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_614 {
   union __anonunion_615 __anonCompField___anonstruct_614_121 ;
   __u32 next_id ;
   __u32 open_flags ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_info_616 {
   __u32 bpf_fd ;
   __u32 info_len ;
   __u64 info ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_query_617 {
   __u32 target_fd ;
   __u32 attach_type ;
   __u32 query_flags ;
   __u32 attach_flags ;
   __u64 prog_ids ;
   __u32 prog_cnt ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_raw_tracepoint_618 {
   __u64 name ;
   __u32 prog_fd ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_619 {
   __u64 btf ;
   __u64 btf_log_buf ;
   __u32 btf_size ;
   __u32 btf_log_size ;
   __u32 btf_log_level ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_task_fd_query_620 {
   __u32 pid ;
   __u32 fd ;
   __u32 flags ;
   __u32 buf_len ;
   __u64 buf ;
   __u32 prog_id ;
   __u32 fd_type ;
   __u64 probe_offset ;
   __u64 probe_addr ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
union bpf_attr {
   struct __anonstruct_607 __anonCompField_bpf_attr_115 ;
   struct __anonstruct_608 __anonCompField_bpf_attr_117 ;
   struct __anonstruct_610 __anonCompField_bpf_attr_118 ;
   struct __anonstruct_611 __anonCompField_bpf_attr_119 ;
   struct __anonstruct_612 __anonCompField_bpf_attr_120 ;
   struct __anonstruct_test_613 test ;
   struct __anonstruct_614 __anonCompField_bpf_attr_122 ;
   struct __anonstruct_info_616 info ;
   struct __anonstruct_query_617 query ;
   struct __anonstruct_raw_tracepoint_618 raw_tracepoint ;
   struct __anonstruct_619 __anonCompField_bpf_attr_123 ;
   struct __anonstruct_task_fd_query_620 task_fd_query ;
} __attribute__((__aligned__(8)));
#line 3653  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct bpf_func_info {
   __u32 insn_off ;
   __u32 type_id ;
};
#line 3661  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct bpf_line_info {
   __u32 insn_off ;
   __u32 file_name_off ;
   __u32 line_off ;
   __u32 line_col ;
};
#line 95  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/file.h"
struct bpf_prog_aux;
#line 96 
struct bpf_map;
#line 97 
struct btf;
#line 98 
struct btf_type;
#line 37  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_map_ops {
   int (*map_alloc_check)(union bpf_attr *) ;
   struct bpf_map *(*map_alloc)(union bpf_attr *) ;
   void (*map_release)(struct bpf_map *, struct file *) ;
   void (*map_free)(struct bpf_map *) ;
   int (*map_get_next_key)(struct bpf_map *, void *, void *) ;
   void (*map_release_uref)(struct bpf_map *) ;
   void *(*map_lookup_elem_sys_only)(struct bpf_map *, void *) ;
   void *(*map_lookup_elem)(struct bpf_map *, void *) ;
   int (*map_update_elem)(struct bpf_map *, void *, void *, u64 ) ;
   int (*map_delete_elem)(struct bpf_map *, void *) ;
   int (*map_push_elem)(struct bpf_map *, void *, u64 ) ;
   int (*map_pop_elem)(struct bpf_map *, void *) ;
   int (*map_peek_elem)(struct bpf_map *, void *) ;
   void *(*map_fd_get_ptr)(struct bpf_map *, struct file *, int ) ;
   void (*map_fd_put_ptr)(void *) ;
   u32 (*map_gen_lookup)(struct bpf_map *, struct bpf_insn *) ;
   u32 (*map_fd_sys_lookup_elem)(void *) ;
   void (*map_seq_show_elem)(struct bpf_map *, void *, struct seq_file *) ;
   int (*map_check_btf)(struct bpf_map *, struct btf *, struct btf_type *, struct btf_type *) ;
   int (*map_poke_track)(struct bpf_map *, struct bpf_prog_aux *) ;
   void (*map_poke_untrack)(struct bpf_map *, struct bpf_prog_aux *) ;
   void (*map_poke_run)(struct bpf_map *, u32 , struct bpf_prog *, struct bpf_prog *) ;
   int (*map_direct_value_addr)(struct bpf_map *, u64 *, u32 ) ;
   int (*map_direct_value_meta)(struct bpf_map *, u64 , u32 *) ;
   int (*map_mmap)(struct bpf_map *, struct vm_area_struct *) ;
};
#line 82  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_map_memory {
   u32 pages ;
   struct user_struct *user ;
};
#line 87  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_map {
   struct bpf_map_ops *ops ;
   struct bpf_map *inner_map_meta ;
   void *security ;
   enum bpf_map_type map_type ;
   u32 key_size ;
   u32 value_size ;
   u32 max_entries ;
   u32 map_flags ;
   int spin_lock_off ;
   u32 id ;
   int numa_node ;
   u32 btf_key_type_id ;
   u32 btf_value_type_id ;
   struct btf *btf ;
   struct bpf_map_memory memory ;
   char name[16U] ;
   bool unpriv_array ;
   bool frozen ;
   atomic64_t refcnt ;
   atomic64_t usercnt ;
   struct work_struct work ;
   struct mutex freeze_mutex ;
   u64 writecnt ;
};
#line 151 
struct bpf_offload_dev;
#line 152 
struct bpf_offloaded_map;
#line 156  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_map_dev_ops {
   int (*map_get_next_key)(struct bpf_offloaded_map *, void *, void *) ;
   int (*map_lookup_elem)(struct bpf_offloaded_map *, void *, void *) ;
   int (*map_update_elem)(struct bpf_offloaded_map *, void *, void *, u64 ) ;
   int (*map_delete_elem)(struct bpf_offloaded_map *, void *) ;
};
#line 166  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_offloaded_map {
   struct bpf_map map ;
   struct net_device *netdev ;
   struct bpf_map_dev_ops *dev_ops ;
   void *dev_priv ;
   struct list_head offloads ;
};
#line 327  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_prog_ops {
   int (*test_run)(struct bpf_prog *, union bpf_attr *, union bpf_attr *) ;
};
#line 369  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_prog_offload {
   struct bpf_prog *prog ;
   struct net_device *netdev ;
   struct bpf_offload_dev *offdev ;
   void *dev_priv ;
   struct list_head offloads ;
   bool dev_state ;
   bool opt_failed ;
   void *jited_image ;
   u32 jited_len ;
};
#line 394  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_prog_stats {
   u64 cnt ;
   u64 nsecs ;
   struct u64_stats_sync syncp ;
} __attribute__((__aligned__(16)));
#line 400  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct btf_func_model {
   u8 ret_size ;
   u8 nr_args ;
   u8 arg_size[12U] ;
};
#line 447 
enum bpf_tramp_prog_type {
    BPF_TRAMP_FENTRY = 0,
    BPF_TRAMP_FEXIT = 1,
    BPF_TRAMP_MAX = 2
};
#line 454  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct __anonstruct_func_647 {
   struct btf_func_model model ;
   void *addr ;
   bool ftrace_managed ;
};
#line 454  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_trampoline {
   struct hlist_node hlist ;
   struct mutex mutex ;
   refcount_t refcnt ;
   u64 key ;
   struct __anonstruct_func_647 func ;
   struct hlist_head progs_hlist[2U] ;
   int progs_cnt[2U] ;
   void *image ;
   u64 selector ;
};
#line 495  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_func_info_aux {
   bool unreliable ;
};
#line 504  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct __anonstruct_tail_call_649 {
   struct bpf_map *map ;
   u32 key ;
};
#line 504  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
union __anonunion_648 {
   struct __anonstruct_tail_call_649 tail_call ;
};
#line 504  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_jit_poke_descriptor {
   void *ip ;
   union __anonunion_648 __anonCompField_bpf_jit_poke_descriptor_148 ;
   bool ip_stable ;
   u8 adj_off ;
   u16 reason ;
};
#line 517  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
union __anonunion_650 {
   struct work_struct work ;
   struct callback_head rcu ;
};
#line 517  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_prog_aux {
   atomic64_t refcnt ;
   u32 used_map_cnt ;
   u32 max_ctx_offset ;
   u32 max_pkt_offset ;
   u32 max_tp_access ;
   u32 stack_depth ;
   u32 id ;
   u32 func_cnt ;
   u32 func_idx ;
   u32 attach_btf_id ;
   struct bpf_prog *linked_prog ;
   bool verifier_zext ;
   bool offload_requested ;
   bool attach_btf_trace ;
   bool func_proto_unreliable ;
   enum bpf_tramp_prog_type trampoline_prog_type ;
   struct bpf_trampoline *trampoline ;
   struct hlist_node tramp_hlist ;
   struct btf_type *attach_func_proto ;
   char *attach_func_name ;
   struct bpf_prog **func ;
   void *jit_data ;
   struct bpf_jit_poke_descriptor *poke_tab ;
   u32 size_poke_tab ;
   struct latch_tree_node ksym_tnode ;
   struct list_head ksym_lnode ;
   struct bpf_prog_ops *ops ;
   struct bpf_map **used_maps ;
   struct bpf_prog *prog ;
   struct user_struct *user ;
   u64 load_time ;
   struct bpf_map *cgroup_storage[2U] ;
   char name[16U] ;
   void *security ;
   struct bpf_prog_offload *offload ;
   struct btf *btf ;
   struct bpf_func_info *func_info ;
   struct bpf_func_info_aux *func_info_aux ;
   struct bpf_line_info *linfo ;
   void **jited_linfo ;
   u32 func_info_cnt ;
   u32 nr_linfo ;
   u32 linfo_idx ;
   u32 num_exentries ;
   struct exception_table_entry *extable ;
   struct bpf_prog_stats *stats ;
   union __anonunion_650 __anonCompField_bpf_prog_aux_149 ;
};
#line 686 
struct bpf_cgroup_storage;
#line 686  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_prog_array_item {
   struct bpf_prog *prog ;
   struct bpf_cgroup_storage *cgroup_storage[2U] ;
};
#line 691  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_prog_array {
   struct callback_head rcu ;
   struct bpf_prog_array_item items[0U] ;
};
#line 1335 
struct cgroup;
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf-cgroup.h"
struct bpf_cgroup_storage_map;
#line 37  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf-cgroup.h"
struct bpf_storage_buffer {
   struct callback_head rcu ;
   char data[0U] ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf-cgroup.h"
union __anonunion_652 {
   struct bpf_storage_buffer *buf ;
   void *percpu_buf ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf-cgroup.h"
struct bpf_cgroup_storage {
   union __anonunion_652 __anonCompField_bpf_cgroup_storage_151 ;
   struct bpf_cgroup_storage_map *map ;
   struct bpf_cgroup_storage_key key ;
   struct list_head list ;
   struct rb_node node ;
   struct callback_head rcu ;
};
#line 62  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf-cgroup.h"
struct cgroup_bpf {
   struct bpf_prog_array *effective[26U] ;
   struct list_head progs[26U] ;
   u32 flags[26U] ;
   struct bpf_prog_array *inactive ;
   struct percpu_ref refcnt ;
   struct work_struct release_work ;
};
#line 69  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kthread.h"
struct kthread_work;
#line 86  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kthread.h"
struct kthread_worker {
   unsigned int flags ;
   raw_spinlock_t lock ;
   struct list_head work_list ;
   struct list_head delayed_work_list ;
   struct task_struct *task ;
   struct kthread_work *current_work ;
};
#line 95  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kthread.h"
struct kthread_work {
   struct list_head node ;
   void (*func)(struct kthread_work *) ;
   struct kthread_worker *worker ;
   int canceling ;
};
#line 103  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kthread.h"
struct kthread_delayed_work {
   struct kthread_work work ;
   struct timer_list timer ;
};
#line 199 
struct cgroup_subsys_state;
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/psi_types.h"
struct psi_group_cpu {
   seqcount_t seq ;
   unsigned int tasks[3U] ;
   u32 state_mask ;
   u32 times[6U] ;
   u64 state_start ;
   u32 times_prev[2U][6U] ;
};
#line 96 
struct psi_group;
#line 128  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/psi_types.h"
struct psi_group {
   struct mutex avgs_lock ;
   struct psi_group_cpu *pcpu ;
   u64 avg_total[5U] ;
   u64 avg_last_update ;
   u64 avg_next_update ;
   struct delayed_work avgs_work ;
   u64 total[2U][5U] ;
   unsigned long avg[5U][3U] ;
   atomic_t poll_scheduled ;
   struct kthread_worker *poll_kworker ;
   struct kthread_delayed_work poll_work ;
   struct mutex trigger_lock ;
   struct list_head triggers ;
   u32 nr_triggers[5U] ;
   u32 poll_states ;
   u64 poll_min_period ;
   u64 polling_total[5U] ;
   u64 polling_next_update ;
   u64 polling_until ;
};
#line 166 
struct cgroup_root;
#line 167 
struct cgroup_subsys;
#line 168 
struct cgroup_taskset;
#line 119  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cgroup_file {
   struct kernfs_node *kn ;
   unsigned long notified_at ;
   struct timer_list notify_timer ;
};
#line 133  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cgroup_subsys_state {
   struct cgroup *cgroup ;
   struct cgroup_subsys *ss ;
   struct percpu_ref refcnt ;
   struct list_head sibling ;
   struct list_head children ;
   struct list_head rstat_css_node ;
   int id ;
   unsigned int flags ;
   u64 serial_nr ;
   atomic_t online_cnt ;
   struct work_struct destroy_work ;
   struct rcu_work destroy_rwork ;
   struct cgroup_subsys_state *parent ;
};
#line 190  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct css_set {
   struct cgroup_subsys_state *subsys[14U] ;
   refcount_t refcount ;
   struct css_set *dom_cset ;
   struct cgroup *dfl_cgrp ;
   int nr_tasks ;
   struct list_head tasks ;
   struct list_head mg_tasks ;
   struct list_head dying_tasks ;
   struct list_head task_iters ;
   struct list_head e_cset_node[14U] ;
   struct list_head threaded_csets ;
   struct list_head threaded_csets_node ;
   struct hlist_node hlist ;
   struct list_head cgrp_links ;
   struct list_head mg_preload_node ;
   struct list_head mg_node ;
   struct cgroup *mg_src_cgrp ;
   struct cgroup *mg_dst_cgrp ;
   struct css_set *mg_dst_cset ;
   bool dead ;
   struct callback_head callback_head ;
};
#line 279  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cgroup_base_stat {
   struct task_cputime cputime ;
};
#line 303  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cgroup_rstat_cpu {
   struct u64_stats_sync bsync ;
   struct cgroup_base_stat bstat ;
   struct cgroup_base_stat last_bstat ;
   struct cgroup *updated_children ;
   struct cgroup *updated_next ;
};
#line 332  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cgroup_freezer_state {
   bool freeze ;
   int e_freeze ;
   int nr_frozen_descendants ;
   int nr_frozen_tasks ;
};
#line 351  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cgroup {
   struct cgroup_subsys_state self ;
   unsigned long flags ;
   int level ;
   int max_depth ;
   int nr_descendants ;
   int nr_dying_descendants ;
   int max_descendants ;
   int nr_populated_csets ;
   int nr_populated_domain_children ;
   int nr_populated_threaded_children ;
   int nr_threaded_children ;
   struct kernfs_node *kn ;
   struct cgroup_file procs_file ;
   struct cgroup_file events_file ;
   u16 subtree_control ;
   u16 subtree_ss_mask ;
   u16 old_subtree_control ;
   u16 old_subtree_ss_mask ;
   struct cgroup_subsys_state *subsys[14U] ;
   struct cgroup_root *root ;
   struct list_head cset_links ;
   struct list_head e_csets[14U] ;
   struct cgroup *dom_cgrp ;
   struct cgroup *old_dom_cgrp ;
   struct cgroup_rstat_cpu *rstat_cpu ;
   struct list_head rstat_css_list ;
   struct cgroup_base_stat last_bstat ;
   struct cgroup_base_stat bstat ;
   struct prev_cputime prev_cputime ;
   struct list_head pidlists ;
   struct mutex pidlist_mutex ;
   wait_queue_head_t offline_waitq ;
   struct work_struct release_agent_work ;
   struct psi_group psi ;
   struct cgroup_bpf bpf ;
   atomic_t congestion_count ;
   struct cgroup_freezer_state freezer ;
   u64 ancestor_ids[] ;
};
#line 489  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cgroup_root {
   struct kernfs_root *kf_root ;
   unsigned int subsys_mask ;
   int hierarchy_id ;
   struct cgroup cgrp ;
   u64 cgrp_ancestor_id_storage ;
   atomic_t nr_cgrps ;
   struct list_head root_list ;
   unsigned int flags ;
   char release_agent_path[4096U] ;
   char name[64U] ;
};
#line 527  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cftype {
   char name[64U] ;
   unsigned long private ;
   size_t max_write_len ;
   unsigned int flags ;
   unsigned int file_offset ;
   struct cgroup_subsys *ss ;
   struct list_head node ;
   struct kernfs_ops *kf_ops ;
   int (*open)(struct kernfs_open_file *) ;
   void (*release)(struct kernfs_open_file *) ;
   u64 (*read_u64)(struct cgroup_subsys_state *, struct cftype *) ;
   s64 (*read_s64)(struct cgroup_subsys_state *, struct cftype *) ;
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   int (*write_u64)(struct cgroup_subsys_state *, struct cftype *, u64 ) ;
   int (*write_s64)(struct cgroup_subsys_state *, struct cftype *, s64 ) ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   __poll_t (*poll)(struct kernfs_open_file *, struct poll_table_struct *) ;
   struct lock_class_key lockdep_key ;
};
#line 616  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cgroup_subsys {
   struct cgroup_subsys_state *(*css_alloc)(struct cgroup_subsys_state *) ;
   int (*css_online)(struct cgroup_subsys_state *) ;
   void (*css_offline)(struct cgroup_subsys_state *) ;
   void (*css_released)(struct cgroup_subsys_state *) ;
   void (*css_free)(struct cgroup_subsys_state *) ;
   void (*css_reset)(struct cgroup_subsys_state *) ;
   void (*css_rstat_flush)(struct cgroup_subsys_state *, int ) ;
   int (*css_extra_stat_show)(struct seq_file *, struct cgroup_subsys_state *) ;
   int (*can_attach)(struct cgroup_taskset *) ;
   void (*cancel_attach)(struct cgroup_taskset *) ;
   void (*attach)(struct cgroup_taskset *) ;
   void (*post_attach)(void) ;
   int (*can_fork)(struct task_struct *) ;
   void (*cancel_fork)(struct task_struct *) ;
   void (*fork)(struct task_struct *) ;
   void (*exit)(struct task_struct *) ;
   void (*release)(struct task_struct *) ;
   void (*bind)(struct cgroup_subsys_state *) ;
   bool early_init : 1 ;
   bool implicit_on_dfl : 1 ;
   bool threaded : 1 ;
   bool broken_hierarchy : 1 ;
   bool warned_broken_hierarchy : 1 ;
   int id ;
   char *name ;
   char *legacy_name ;
   struct cgroup_root *root ;
   struct idr css_idr ;
   struct list_head cfts ;
   struct cftype *dfl_cftypes ;
   struct cftype *legacy_cftypes ;
   unsigned int depends_on ;
};
#line 783  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct __anonstruct_654 {
   u8 is_data ;
   u8 padding ;
   u16 prioidx ;
   u32 classid ;
} __attribute__((__packed__));
#line 783  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
union __anonunion_653 {
   struct __anonstruct_654 __anonCompField___anonunion_653_152 ;
   u64 val ;
};
#line 783  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct sock_cgroup_data {
   union __anonunion_653 __anonCompField_sock_cgroup_data_153 ;
};
#line 848  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup.h"
struct cgroup_namespace {
   refcount_t count ;
   struct ns_common ns ;
   struct user_namespace *user_ns ;
   struct ucounts *ucounts ;
   struct css_set *root_cset ;
};
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netprio_cgroup.h"
struct netprio_map {
   struct callback_head rcu ;
   u32 priomap_len ;
   u32 priomap[] ;
};
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/xdp.h"
struct xdp_mem_info {
   u32 type ;
   u32 id ;
};
#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/xdp.h"
struct xdp_rxq_info {
   struct net_device *dev ;
   u32 queue_index ;
   u32 reg_state ;
   struct xdp_mem_info mem ;
} __attribute__((__aligned__(64)));
#line 75  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/xdp.h"
struct xdp_frame {
   void *data ;
   u16 len ;
   u16 headroom ;
   u16 metasize ;
   struct xdp_mem_info mem ;
   struct net_device *dev_rx ;
};
#line 175 
struct netdev_bpf;
#line 160  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/security.h"
struct xfrm_policy;
#line 161 
struct xfrm_state;
#line 178 
struct request_sock;
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched/signal.h"
struct sighand_struct {
   spinlock_t siglock ;
   refcount_t count ;
   wait_queue_head_t signalfd_wqh ;
   struct k_sigaction action[64U] ;
};
#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched/signal.h"
struct pacct_struct {
   int ac_flag ;
   long ac_exitcode ;
   unsigned long ac_mem ;
   u64 ac_utime ;
   u64 ac_stime ;
   unsigned long ac_minflt ;
   unsigned long ac_majflt ;
};
#line 36  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched/signal.h"
struct cpu_itimer {
   u64 expires ;
   u64 incr ;
};
#line 45  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched/signal.h"
struct task_cputime_atomic {
   atomic64_t utime ;
   atomic64_t stime ;
   atomic64_t sum_exec_runtime ;
};
#line 64  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched/signal.h"
struct thread_group_cputimer {
   struct task_cputime_atomic cputime_atomic ;
};
#line 80 
struct tty_struct;
#line 80 
struct autogroup;
#line 80 
struct tty_audit_buf;
#line 80  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched/signal.h"
struct signal_struct {
   refcount_t sigcnt ;
   atomic_t live ;
   int nr_threads ;
   struct list_head thread_head ;
   wait_queue_head_t wait_chldexit ;
   struct task_struct *curr_target ;
   struct sigpending shared_pending ;
   struct hlist_head multiprocess ;
   int group_exit_code ;
   int notify_count ;
   struct task_struct *group_exit_task ;
   int group_stop_count ;
   unsigned int flags ;
   unsigned int is_child_subreaper : 1 ;
   unsigned int has_child_subreaper : 1 ;
   int posix_timer_id ;
   struct list_head posix_timers ;
   struct hrtimer real_timer ;
   ktime_t it_real_incr ;
   struct cpu_itimer it[2U] ;
   struct thread_group_cputimer cputimer ;
   struct posix_cputimers posix_cputimers ;
   struct pid *pids[4U] ;
   struct pid *tty_old_pgrp ;
   int leader ;
   struct tty_struct *tty ;
   struct autogroup *autogroup ;
   seqlock_t stats_lock ;
   u64 utime ;
   u64 stime ;
   u64 cutime ;
   u64 cstime ;
   u64 gtime ;
   u64 cgtime ;
   struct prev_cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   unsigned long cnvcsw ;
   unsigned long cnivcsw ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   unsigned long cmin_flt ;
   unsigned long cmaj_flt ;
   unsigned long inblock ;
   unsigned long oublock ;
   unsigned long cinblock ;
   unsigned long coublock ;
   unsigned long maxrss ;
   unsigned long cmaxrss ;
   struct task_io_accounting ioac ;
   unsigned long long sum_sched_runtime ;
   struct rlimit rlim[16U] ;
   struct pacct_struct pacct ;
   struct taskstats *stats ;
   unsigned int audit_tty ;
   struct tty_audit_buf *tty_audit_buf ;
   bool oom_flag_origin ;
   short oom_score_adj ;
   short oom_score_adj_min ;
   struct mm_struct *oom_mm ;
   struct mutex cred_guard_mutex ;
} __attribute__((__designated_init__));
#line 44  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/netlink.h"
struct nlmsghdr {
   __u32 nlmsg_len ;
   __u16 nlmsg_type ;
   __u16 nlmsg_flags ;
   __u32 nlmsg_seq ;
   __u32 nlmsg_pid ;
};
#line 211  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/netlink.h"
struct nlattr {
   __u16 nla_len ;
   __u16 nla_type ;
};
#line 74  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netlink.h"
struct netlink_ext_ack {
   char *_msg ;
   struct nlattr *bad_attr ;
   u8 cookie[20U] ;
   u8 cookie_len ;
};
#line 180  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netlink.h"
union __anonunion_677 {
   u8 ctx[48U] ;
   long args[6U] ;
};
#line 180  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netlink.h"
struct netlink_callback {
   struct sk_buff *skb ;
   struct nlmsghdr *nlh ;
   int (*dump)(struct sk_buff *, struct netlink_callback *) ;
   int (*done)(struct netlink_callback *) ;
   void *data ;
   struct module *module ;
   struct netlink_ext_ack *extack ;
   u16 family ;
   u16 min_dump_alloc ;
   bool strict_check ;
   u16 answer_flags ;
   unsigned int prev_seq ;
   unsigned int seq ;
   union __anonunion_677 __anonCompField_netlink_callback_154 ;
};
#line 8  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/neighbour.h"
struct ndmsg {
   __u8 ndm_family ;
   __u8 ndm_pad1 ;
   __u16 ndm_pad2 ;
   __s32 ndm_ifindex ;
   __u16 ndm_state ;
   __u8 ndm_flags ;
   __u8 ndm_type ;
};
#line 44  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if_link.h"
struct rtnl_link_stats64 {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 rx_errors ;
   __u64 tx_errors ;
   __u64 rx_dropped ;
   __u64 tx_dropped ;
   __u64 multicast ;
   __u64 collisions ;
   __u64 rx_length_errors ;
   __u64 rx_over_errors ;
   __u64 rx_crc_errors ;
   __u64 rx_frame_errors ;
   __u64 rx_fifo_errors ;
   __u64 rx_missed_errors ;
   __u64 tx_aborted_errors ;
   __u64 tx_carrier_errors ;
   __u64 tx_fifo_errors ;
   __u64 tx_heartbeat_errors ;
   __u64 tx_window_errors ;
   __u64 rx_compressed ;
   __u64 tx_compressed ;
   __u64 rx_nohandler ;
};
#line 753  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if_link.h"
struct ifla_vf_guid {
   __u32 vf ;
   __u64 guid ;
};
#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/if_link.h"
struct ifla_vf_stats {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 broadcast ;
   __u64 multicast ;
   __u64 rx_dropped ;
   __u64 tx_dropped ;
};
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/if_link.h"
struct ifla_vf_info {
   __u32 vf ;
   __u8 mac[32U] ;
   __u32 vlan ;
   __u32 qos ;
   __u32 spoofchk ;
   __u32 linkstate ;
   __u32 min_tx_rate ;
   __u32 max_tx_rate ;
   __u32 rss_query_en ;
   __u32 trusted ;
   __be16 vlan_proto ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/pkt_sched.h"
struct tc_stats {
   __u64 bytes ;
   __u32 packets ;
   __u32 drops ;
   __u32 overlimits ;
   __u32 bps ;
   __u32 pps ;
   __u32 qlen ;
   __u32 backlog ;
};
#line 102  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/pkt_sched.h"
struct tc_sizespec {
   unsigned char cell_log ;
   unsigned char size_log ;
   short cell_align ;
   int overhead ;
   unsigned int linklayer ;
   unsigned int mpu ;
   unsigned int mtu ;
   unsigned int tsize ;
};
#line 118  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/hashtable.h"
struct netpoll_info;
#line 119 
struct phy_device;
#line 120 
struct dsa_port;
#line 121 
struct sfp_bus;
#line 122 
struct wireless_dev;
#line 123 
struct wpan_dev;
#line 124 
struct mpls_dev;
#line 125 
struct udp_tunnel_info;
#line 69  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
enum netdev_tx {
    __NETDEV_TX_MIN = -2147483648,
    NETDEV_TX_OK = 0,
    NETDEV_TX_BUSY = 16
};
#line 75  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
typedef enum netdev_tx netdev_tx_t;
#line 161  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct net_device_stats {
   unsigned long rx_packets ;
   unsigned long tx_packets ;
   unsigned long rx_bytes ;
   unsigned long tx_bytes ;
   unsigned long rx_errors ;
   unsigned long tx_errors ;
   unsigned long rx_dropped ;
   unsigned long tx_dropped ;
   unsigned long multicast ;
   unsigned long collisions ;
   unsigned long rx_length_errors ;
   unsigned long rx_over_errors ;
   unsigned long rx_crc_errors ;
   unsigned long rx_frame_errors ;
   unsigned long rx_fifo_errors ;
   unsigned long rx_missed_errors ;
   unsigned long tx_aborted_errors ;
   unsigned long tx_carrier_errors ;
   unsigned long tx_fifo_errors ;
   unsigned long tx_heartbeat_errors ;
   unsigned long tx_window_errors ;
   unsigned long rx_compressed ;
   unsigned long tx_compressed ;
};
#line 195 
struct neigh_parms;
#line 217  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_hw_addr_list {
   struct list_head list ;
   int count ;
};
#line 237  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct hh_cache {
   unsigned int hh_len ;
   seqlock_t hh_lock ;
   unsigned long hh_data[16U] ;
};
#line 263  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct header_ops {
   int (*create)(struct sk_buff *, struct net_device *, unsigned short , void *, void *, unsigned int ) ;
   int (*parse)(struct sk_buff *, unsigned char *) ;
   int (*cache)(struct neighbour *, struct hh_cache *, __be16 ) ;
   void (*cache_update)(struct hh_cache *, struct net_device *, unsigned char *) ;
   bool (*validate)(char *, unsigned int ) ;
   __be16 (*parse_protocol)(struct sk_buff *) ;
};
#line 372 
enum rx_handler_result {
    RX_HANDLER_CONSUMED = 0,
    RX_HANDLER_ANOTHER = 1,
    RX_HANDLER_EXACT = 2,
    RX_HANDLER_PASS = 3
};
#line 379  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
typedef enum rx_handler_result rx_handler_result_t;
#line 421  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
typedef rx_handler_result_t rx_handler_func_t(struct sk_buff **);
#line 589 
struct Qdisc;
#line 589 
struct xdp_umem;
#line 589  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_queue {
   struct net_device *dev ;
   struct Qdisc *qdisc ;
   struct Qdisc *qdisc_sleeping ;
   struct kobject kobj ;
   int numa_node ;
   unsigned long tx_maxrate ;
   unsigned long trans_timeout ;
   struct net_device *sb_dev ;
   struct xdp_umem *umem ;
   spinlock_t _xmit_lock ;
   int xmit_lock_owner ;
   unsigned long trans_start ;
   unsigned long state ;
   struct dql dql ;
} __attribute__((__aligned__(64)));
#line 662  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct rps_map {
   unsigned int len ;
   struct callback_head rcu ;
   u16 cpus[0U] ;
};
#line 674  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct rps_dev_flow {
   u16 cpu ;
   u16 filter ;
   unsigned int last_qtail ;
};
#line 684  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct rps_dev_flow_table {
   unsigned int mask ;
   struct callback_head rcu ;
   struct rps_dev_flow flows[0U] ;
};
#line 736  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_rx_queue {
   struct rps_map *rps_map ;
   struct rps_dev_flow_table *rps_flow_table ;
   struct kobject kobj ;
   struct net_device *dev ;
   struct xdp_rxq_info xdp_rxq ;
   struct xdp_umem *umem ;
} __attribute__((__aligned__(64)));
#line 764  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct xps_map {
   unsigned int len ;
   unsigned int alloc_len ;
   struct callback_head rcu ;
   u16 queues[0U] ;
};
#line 777  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct xps_dev_maps {
   struct callback_head rcu ;
   struct xps_map *attr_map[0U] ;
};
#line 793  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_tc_txq {
   u16 count ;
   u16 offset ;
};
#line 803  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_fcoe_hbainfo {
   char manufacturer[64U] ;
   char serial_number[64U] ;
   char hardware_version[64U] ;
   char driver_version[64U] ;
   char optionrom_version[64U] ;
   char firmware_version[64U] ;
   char model[256U] ;
   char model_description[256U] ;
};
#line 820  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_phys_item_id {
   unsigned char id[32U] ;
   unsigned char id_len ;
};
#line 833 
enum tc_setup_type {
    TC_SETUP_QDISC_MQPRIO = 0,
    TC_SETUP_CLSU32 = 1,
    TC_SETUP_CLSFLOWER = 2,
    TC_SETUP_CLSMATCHALL = 3,
    TC_SETUP_CLSBPF = 4,
    TC_SETUP_BLOCK = 5,
    TC_SETUP_QDISC_CBS = 6,
    TC_SETUP_QDISC_RED = 7,
    TC_SETUP_QDISC_PRIO = 8,
    TC_SETUP_QDISC_MQ = 9,
    TC_SETUP_QDISC_ETF = 10,
    TC_SETUP_ROOT_QDISC = 11,
    TC_SETUP_QDISC_GRED = 12,
    TC_SETUP_QDISC_TAPRIO = 13,
    TC_SETUP_FT = 14
};
#line 851 
enum bpf_netdev_command {
    XDP_SETUP_PROG = 0,
    XDP_SETUP_PROG_HW = 1,
    XDP_QUERY_PROG = 2,
    XDP_QUERY_PROG_HW = 3,
    BPF_OFFLOAD_MAP_ALLOC = 4,
    BPF_OFFLOAD_MAP_FREE = 5,
    XDP_SETUP_XSK_UMEM = 6
};
#line 879  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct __anonstruct_682 {
   u32 flags ;
   struct bpf_prog *prog ;
   struct netlink_ext_ack *extack ;
};
#line 879  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct __anonstruct_683 {
   u32 prog_id ;
   u32 prog_flags ;
};
#line 879  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct __anonstruct_684 {
   struct bpf_offloaded_map *offmap ;
};
#line 879  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct __anonstruct_xsk_685 {
   struct xdp_umem *umem ;
   u16 queue_id ;
};
#line 879  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
union __anonunion_681 {
   struct __anonstruct_682 __anonCompField___anonunion_681_156 ;
   struct __anonstruct_683 __anonCompField___anonunion_681_157 ;
   struct __anonstruct_684 __anonCompField___anonunion_681_158 ;
   struct __anonstruct_xsk_685 xsk ;
};
#line 879  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_bpf {
   enum bpf_netdev_command command ;
   union __anonunion_681 __anonCompField_netdev_bpf_159 ;
};
#line 911  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct xfrmdev_ops {
   int (*xdo_dev_state_add)(struct xfrm_state *) ;
   void (*xdo_dev_state_delete)(struct xfrm_state *) ;
   void (*xdo_dev_state_free)(struct xfrm_state *) ;
   bool (*xdo_dev_offload_ok)(struct sk_buff *, struct xfrm_state *) ;
   void (*xdo_dev_state_advance_esn)(struct xfrm_state *) ;
};
#line 921  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct dev_ifalias {
   struct callback_head rcuhead ;
   char ifalias[] ;
};
#line 926 
struct tlsdev_ops;
#line 929  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_name_node {
   struct hlist_node hlist ;
   struct list_head list ;
   struct net_device *dev ;
   char *name ;
};
#line 1257 
struct devlink_port;
#line 1257  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct net_device_ops {
   int (*ndo_init)(struct net_device *) ;
   void (*ndo_uninit)(struct net_device *) ;
   int (*ndo_open)(struct net_device *) ;
   int (*ndo_stop)(struct net_device *) ;
   netdev_tx_t (*ndo_start_xmit)(struct sk_buff *, struct net_device *) ;
   netdev_features_t (*ndo_features_check)(struct sk_buff *, struct net_device *, netdev_features_t ) ;
   u16 (*ndo_select_queue)(struct net_device *, struct sk_buff *, struct net_device *) ;
   void (*ndo_change_rx_flags)(struct net_device *, int ) ;
   void (*ndo_set_rx_mode)(struct net_device *) ;
   int (*ndo_set_mac_address)(struct net_device *, void *) ;
   int (*ndo_validate_addr)(struct net_device *) ;
   int (*ndo_do_ioctl)(struct net_device *, struct ifreq *, int ) ;
   int (*ndo_set_config)(struct net_device *, struct ifmap *) ;
   int (*ndo_change_mtu)(struct net_device *, int ) ;
   int (*ndo_neigh_setup)(struct net_device *, struct neigh_parms *) ;
   void (*ndo_tx_timeout)(struct net_device *) ;
   void (*ndo_get_stats64)(struct net_device *, struct rtnl_link_stats64 *) ;
   bool (*ndo_has_offload_stats)(struct net_device *, int ) ;
   int (*ndo_get_offload_stats)(int , struct net_device *, void *) ;
   struct net_device_stats *(*ndo_get_stats)(struct net_device *) ;
   int (*ndo_vlan_rx_add_vid)(struct net_device *, __be16 , u16 ) ;
   int (*ndo_vlan_rx_kill_vid)(struct net_device *, __be16 , u16 ) ;
   void (*ndo_poll_controller)(struct net_device *) ;
   int (*ndo_netpoll_setup)(struct net_device *, struct netpoll_info *) ;
   void (*ndo_netpoll_cleanup)(struct net_device *) ;
   int (*ndo_set_vf_mac)(struct net_device *, int , u8 *) ;
   int (*ndo_set_vf_vlan)(struct net_device *, int , u16 , u8 , __be16 ) ;
   int (*ndo_set_vf_rate)(struct net_device *, int , int , int ) ;
   int (*ndo_set_vf_spoofchk)(struct net_device *, int , bool ) ;
   int (*ndo_set_vf_trust)(struct net_device *, int , bool ) ;
   int (*ndo_get_vf_config)(struct net_device *, int , struct ifla_vf_info *) ;
   int (*ndo_set_vf_link_state)(struct net_device *, int , int ) ;
   int (*ndo_get_vf_stats)(struct net_device *, int , struct ifla_vf_stats *) ;
   int (*ndo_set_vf_port)(struct net_device *, int , struct nlattr **) ;
   int (*ndo_get_vf_port)(struct net_device *, int , struct sk_buff *) ;
   int (*ndo_get_vf_guid)(struct net_device *, int , struct ifla_vf_guid *, struct ifla_vf_guid *) ;
   int (*ndo_set_vf_guid)(struct net_device *, int , u64 , int ) ;
   int (*ndo_set_vf_rss_query_en)(struct net_device *, int , bool ) ;
   int (*ndo_setup_tc)(struct net_device *, enum tc_setup_type , void *) ;
   int (*ndo_fcoe_enable)(struct net_device *) ;
   int (*ndo_fcoe_disable)(struct net_device *) ;
   int (*ndo_fcoe_ddp_setup)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_ddp_done)(struct net_device *, u16 ) ;
   int (*ndo_fcoe_ddp_target)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_get_hbainfo)(struct net_device *, struct netdev_fcoe_hbainfo *) ;
   int (*ndo_fcoe_get_wwn)(struct net_device *, u64 *, int ) ;
   int (*ndo_rx_flow_steer)(struct net_device *, struct sk_buff *, u16 , u32 ) ;
   int (*ndo_add_slave)(struct net_device *, struct net_device *, struct netlink_ext_ack *) ;
   int (*ndo_del_slave)(struct net_device *, struct net_device *) ;
   netdev_features_t (*ndo_fix_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_set_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_neigh_construct)(struct net_device *, struct neighbour *) ;
   void (*ndo_neigh_destroy)(struct net_device *, struct neighbour *) ;
   int (*ndo_fdb_add)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char *, u16 , u16 , struct netlink_ext_ack *) ;
   int (*ndo_fdb_del)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char *, u16 ) ;
   int (*ndo_fdb_dump)(struct sk_buff *, struct netlink_callback *, struct net_device *, struct net_device *, int *) ;
   int (*ndo_fdb_get)(struct sk_buff *, struct nlattr **, struct net_device *, unsigned char *, u16 , u32 , u32 , struct netlink_ext_ack *) ;
   int (*ndo_bridge_setlink)(struct net_device *, struct nlmsghdr *, u16 , struct netlink_ext_ack *) ;
   int (*ndo_bridge_getlink)(struct sk_buff *, u32 , u32 , struct net_device *, u32 , int ) ;
   int (*ndo_bridge_dellink)(struct net_device *, struct nlmsghdr *, u16 ) ;
   int (*ndo_change_carrier)(struct net_device *, bool ) ;
   int (*ndo_get_phys_port_id)(struct net_device *, struct netdev_phys_item_id *) ;
   int (*ndo_get_port_parent_id)(struct net_device *, struct netdev_phys_item_id *) ;
   int (*ndo_get_phys_port_name)(struct net_device *, char *, size_t ) ;
   void (*ndo_udp_tunnel_add)(struct net_device *, struct udp_tunnel_info *) ;
   void (*ndo_udp_tunnel_del)(struct net_device *, struct udp_tunnel_info *) ;
   void *(*ndo_dfwd_add_station)(struct net_device *, struct net_device *) ;
   void (*ndo_dfwd_del_station)(struct net_device *, void *) ;
   int (*ndo_set_tx_maxrate)(struct net_device *, int , u32 ) ;
   int (*ndo_get_iflink)(struct net_device *) ;
   int (*ndo_change_proto_down)(struct net_device *, bool ) ;
   int (*ndo_fill_metadata_dst)(struct net_device *, struct sk_buff *) ;
   void (*ndo_set_rx_headroom)(struct net_device *, int ) ;
   int (*ndo_bpf)(struct net_device *, struct netdev_bpf *) ;
   int (*ndo_xdp_xmit)(struct net_device *, int , struct xdp_frame **, u32 ) ;
   int (*ndo_xsk_wakeup)(struct net_device *, u32 , u32 ) ;
   struct devlink_port *(*ndo_get_devlink_port)(struct net_device *) ;
};
#line 1492 
enum ldv_15068 {
    NETREG_UNINITIALIZED = 0,
    NETREG_REGISTERED = 1,
    NETREG_UNREGISTERING = 2,
    NETREG_UNREGISTERED = 3,
    NETREG_RELEASED = 4,
    NETREG_DUMMY = 5
};
#line 1501 
enum ldv_15069 {
    RTNL_LINK_INITIALIZED = 0,
    RTNL_LINK_INITIALIZING = 1
};
#line 1795  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct __anonstruct_adj_list_686 {
   struct list_head upper ;
   struct list_head lower ;
};
#line 1795 
struct iw_handler_def;
#line 1795 
struct iw_public_data;
#line 1795 
struct l3mdev_ops;
#line 1795 
struct ndisc_ops;
#line 1795 
struct vlan_info;
#line 1795 
struct tipc_bearer;
#line 1795 
struct in_device;
#line 1795 
struct dn_dev;
#line 1795 
struct inet6_dev;
#line 1795 
struct mini_Qdisc;
#line 1795 
struct cpu_rmap;
#line 1795 
struct pcpu_lstats;
#line 1795 
struct pcpu_sw_netstats;
#line 1795 
struct pcpu_dstats;
#line 1795  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
union __anonunion_687 {
   void *ml_priv ;
   struct pcpu_lstats *lstats ;
   struct pcpu_sw_netstats *tstats ;
   struct pcpu_dstats *dstats ;
};
#line 1795 
struct garp_port;
#line 1795 
struct mrp_port;
#line 1795 
struct rtnl_link_ops;
#line 1795  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct net_device {
   char name[16U] ;
   struct netdev_name_node *name_node ;
   struct dev_ifalias *ifalias ;
   unsigned long mem_end ;
   unsigned long mem_start ;
   unsigned long base_addr ;
   int irq ;
   unsigned long state ;
   struct list_head dev_list ;
   struct list_head napi_list ;
   struct list_head unreg_list ;
   struct list_head close_list ;
   struct list_head ptype_all ;
   struct list_head ptype_specific ;
   struct __anonstruct_adj_list_686 adj_list ;
   netdev_features_t features ;
   netdev_features_t hw_features ;
   netdev_features_t wanted_features ;
   netdev_features_t vlan_features ;
   netdev_features_t hw_enc_features ;
   netdev_features_t mpls_features ;
   netdev_features_t gso_partial_features ;
   int ifindex ;
   int group ;
   struct net_device_stats stats ;
   atomic_long_t rx_dropped ;
   atomic_long_t tx_dropped ;
   atomic_long_t rx_nohandler ;
   atomic_t carrier_up_count ;
   atomic_t carrier_down_count ;
   struct iw_handler_def *wireless_handlers ;
   struct iw_public_data *wireless_data ;
   struct net_device_ops *netdev_ops ;
   struct ethtool_ops *ethtool_ops ;
   struct l3mdev_ops *l3mdev_ops ;
   struct ndisc_ops *ndisc_ops ;
   struct xfrmdev_ops *xfrmdev_ops ;
   struct tlsdev_ops *tlsdev_ops ;
   struct header_ops *header_ops ;
   unsigned int flags ;
   unsigned int priv_flags ;
   unsigned short gflags ;
   unsigned short padded ;
   unsigned char operstate ;
   unsigned char link_mode ;
   unsigned char if_port ;
   unsigned char dma ;
   unsigned int mtu ;
   unsigned int min_mtu ;
   unsigned int max_mtu ;
   unsigned short type ;
   unsigned short hard_header_len ;
   unsigned char min_header_len ;
   unsigned short needed_headroom ;
   unsigned short needed_tailroom ;
   unsigned char perm_addr[32U] ;
   unsigned char addr_assign_type ;
   unsigned char addr_len ;
   unsigned char upper_level ;
   unsigned char lower_level ;
   unsigned short neigh_priv_len ;
   unsigned short dev_id ;
   unsigned short dev_port ;
   spinlock_t addr_list_lock ;
   unsigned char name_assign_type ;
   bool uc_promisc ;
   struct netdev_hw_addr_list uc ;
   struct netdev_hw_addr_list mc ;
   struct netdev_hw_addr_list dev_addrs ;
   struct kset *queues_kset ;
   unsigned int promiscuity ;
   unsigned int allmulti ;
   struct vlan_info *vlan_info ;
   struct dsa_port *dsa_ptr ;
   struct tipc_bearer *tipc_ptr ;
   void *atalk_ptr ;
   struct in_device *ip_ptr ;
   struct dn_dev *dn_ptr ;
   struct inet6_dev *ip6_ptr ;
   void *ax25_ptr ;
   struct wireless_dev *ieee80211_ptr ;
   struct wpan_dev *ieee802154_ptr ;
   struct mpls_dev *mpls_ptr ;
   unsigned char *dev_addr ;
   struct netdev_rx_queue *_rx ;
   unsigned int num_rx_queues ;
   unsigned int real_num_rx_queues ;
   struct bpf_prog *xdp_prog ;
   unsigned long gro_flush_timeout ;
   rx_handler_func_t *rx_handler ;
   void *rx_handler_data ;
   struct mini_Qdisc *miniq_ingress ;
   struct netdev_queue *ingress_queue ;
   struct nf_hook_entries *nf_hooks_ingress ;
   unsigned char broadcast[32U] ;
   struct cpu_rmap *rx_cpu_rmap ;
   struct hlist_node index_hlist ;
   struct netdev_queue *_tx ;
   unsigned int num_tx_queues ;
   unsigned int real_num_tx_queues ;
   struct Qdisc *qdisc ;
   struct hlist_head qdisc_hash[16U] ;
   unsigned int tx_queue_len ;
   spinlock_t tx_global_lock ;
   int watchdog_timeo ;
   struct xps_dev_maps *xps_cpus_map ;
   struct xps_dev_maps *xps_rxqs_map ;
   struct mini_Qdisc *miniq_egress ;
   struct timer_list watchdog_timer ;
   int *pcpu_refcnt ;
   struct list_head todo_list ;
   struct list_head link_watch_list ;
   enum ldv_15068 reg_state : 8 ;
   bool dismantle ;
   enum ldv_15069 rtnl_link_state : 16 ;
   bool needs_free_netdev ;
   void (*priv_destructor)(struct net_device *) ;
   struct netpoll_info *npinfo ;
   possible_net_t nd_net ;
   union __anonunion_687 __anonCompField_net_device_160 ;
   struct garp_port *garp_port ;
   struct mrp_port *mrp_port ;
   struct device dev ;
   struct attribute_group *sysfs_groups[4U] ;
   struct attribute_group *sysfs_rx_queue_group ;
   struct rtnl_link_ops *rtnl_link_ops ;
   unsigned int gso_max_size ;
   u16 gso_max_segs ;
   struct dcbnl_rtnl_ops *dcbnl_ops ;
   s16 num_tc ;
   struct netdev_tc_txq tc_to_txq[16U] ;
   u8 prio_tc_map[16U] ;
   unsigned int fcoe_ddp_xid ;
   struct netprio_map *priomap ;
   struct phy_device *phydev ;
   struct sfp_bus *sfp_bus ;
   struct lock_class_key qdisc_tx_busylock_key ;
   struct lock_class_key qdisc_running_key ;
   struct lock_class_key qdisc_xmit_lock_key ;
   struct lock_class_key addr_list_lock_key ;
   bool proto_down ;
   unsigned int wol_enabled : 1 ;
};
#line 2400  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct pcpu_sw_netstats {
   u64 rx_packets ;
   u64 rx_bytes ;
   u64 tx_packets ;
   u64 tx_bytes ;
   struct u64_stats_sync syncp ;
} __attribute__((__aligned__(32)));
#line 2408  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct pcpu_lstats {
   u64_stats_t packets ;
   u64_stats_t bytes ;
   struct u64_stats_sync syncp ;
} __attribute__((__aligned__(16)));
#line 3610 
enum skb_free_reason {
    SKB_REASON_CONSUMED = 0,
    SKB_REASON_DROPPED = 1
};
#line 1227  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct ieee80211_p2p_noa_desc {
   u8 count ;
   __le32 duration ;
   __le32 interval ;
   __le32 start_time ;
} __attribute__((__packed__));
#line 1234  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct ieee80211_p2p_noa_attr {
   u8 index ;
   u8 oppps_ctwindow ;
   struct ieee80211_p2p_noa_desc desc[4U] ;
} __attribute__((__packed__));
#line 1276  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct ieee80211_mcs_info {
   u8 rx_mask[10U] ;
   __le16 rx_highest ;
   u8 tx_params ;
   u8 reserved[3U] ;
} __attribute__((__packed__));
#line 1310  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct ieee80211_ht_cap {
   __le16 cap_info ;
   u8 ampdu_params_info ;
   struct ieee80211_mcs_info mcs ;
   __le16 extended_ht_cap_info ;
   __le32 tx_BF_cap_info ;
   u8 antenna_selection_info ;
} __attribute__((__packed__));
#line 1483  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct ieee80211_vht_mcs_info {
   __le16 rx_mcs_map ;
   __le16 rx_highest ;
   __le16 tx_mcs_map ;
   __le16 tx_highest ;
} __attribute__((__packed__));
#line 1526  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct ieee80211_vht_cap {
   __le32 vht_cap_info ;
   struct ieee80211_vht_mcs_info supp_mcs ;
} __attribute__((__packed__));
#line 1569  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct ieee80211_he_cap_elem {
   u8 mac_cap_info[6U] ;
   u8 phy_cap_info[11U] ;
} __attribute__((__packed__));
#line 1616  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct ieee80211_he_mcs_nss_supp {
   __le16 rx_mcs_80 ;
   __le16 tx_mcs_80 ;
   __le16 rx_mcs_160 ;
   __le16 tx_mcs_160 ;
   __le16 rx_mcs_80p80 ;
   __le16 tx_mcs_80p80 ;
} __attribute__((__packed__));
#line 1631  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct ieee80211_he_operation {
   __le32 he_oper_params ;
   __le16 he_mcs_nss_set ;
   u8 optional[0U] ;
} __attribute__((__packed__));
#line 1656  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct ieee80211_he_mu_edca_param_ac_rec {
   u8 aifsn ;
   u8 ecw_min_max ;
   u8 mu_edca_timer ;
} __attribute__((__packed__));
#line 811  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/debugfs.h"
enum nl80211_iftype {
    NL80211_IFTYPE_UNSPECIFIED = 0,
    NL80211_IFTYPE_ADHOC = 1,
    NL80211_IFTYPE_STATION = 2,
    NL80211_IFTYPE_AP = 3,
    NL80211_IFTYPE_AP_VLAN = 4,
    NL80211_IFTYPE_WDS = 5,
    NL80211_IFTYPE_MONITOR = 6,
    NL80211_IFTYPE_MESH_POINT = 7,
    NL80211_IFTYPE_P2P_CLIENT = 8,
    NL80211_IFTYPE_P2P_GO = 9,
    NL80211_IFTYPE_P2P_DEVICE = 10,
    NL80211_IFTYPE_OCB = 11,
    NL80211_IFTYPE_NAN = 12,
    NUM_NL80211_IFTYPES = 13,
    NL80211_IFTYPE_MAX = 12
};
#line 3263  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/nl80211.h"
enum nl80211_reg_initiator {
    NL80211_REGDOM_SET_BY_CORE = 0,
    NL80211_REGDOM_SET_BY_USER = 1,
    NL80211_REGDOM_SET_BY_DRIVER = 2,
    NL80211_REGDOM_SET_BY_COUNTRY_IE = 3
};
#line 3320 
enum nl80211_dfs_regions {
    NL80211_DFS_UNSET = 0,
    NL80211_DFS_FCC = 1,
    NL80211_DFS_ETSI = 2,
    NL80211_DFS_JP = 3
};
#line 3327 
enum nl80211_user_reg_hint_type {
    NL80211_USER_REG_HINT_USER = 0,
    NL80211_USER_REG_HINT_CELL_BASE = 1,
    NL80211_USER_REG_HINT_INDOOR = 2
};
#line 3446 
enum nl80211_key_mode {
    NL80211_KEY_RX_TX = 0,
    NL80211_KEY_NO_TX = 1,
    NL80211_KEY_SET_TX = 2
};
#line 3452 
enum nl80211_chan_width {
    NL80211_CHAN_WIDTH_20_NOHT = 0,
    NL80211_CHAN_WIDTH_20 = 1,
    NL80211_CHAN_WIDTH_40 = 2,
    NL80211_CHAN_WIDTH_80 = 3,
    NL80211_CHAN_WIDTH_80P80 = 4,
    NL80211_CHAN_WIDTH_160 = 5,
    NL80211_CHAN_WIDTH_5 = 6,
    NL80211_CHAN_WIDTH_10 = 7
};
#line 3463 
enum nl80211_bss_scan_width {
    NL80211_BSS_CHAN_WIDTH_20 = 0,
    NL80211_BSS_CHAN_WIDTH_10 = 1,
    NL80211_BSS_CHAN_WIDTH_5 = 2
};
#line 3500 
enum nl80211_auth_type {
    NL80211_AUTHTYPE_OPEN_SYSTEM = 0,
    NL80211_AUTHTYPE_SHARED_KEY = 1,
    NL80211_AUTHTYPE_FT = 2,
    NL80211_AUTHTYPE_NETWORK_EAP = 3,
    NL80211_AUTHTYPE_SAE = 4,
    NL80211_AUTHTYPE_FILS_SK = 5,
    NL80211_AUTHTYPE_FILS_SK_PFS = 6,
    NL80211_AUTHTYPE_FILS_PK = 7,
    __NL80211_AUTHTYPE_NUM = 8,
    NL80211_AUTHTYPE_MAX = 7,
    NL80211_AUTHTYPE_AUTOMATIC = 8
};
#line 3521 
enum nl80211_mfp {
    NL80211_MFP_NO = 0,
    NL80211_MFP_REQUIRED = 1,
    NL80211_MFP_OPTIONAL = 2
};
#line 4599 
enum nl80211_band {
    NL80211_BAND_2GHZ = 0,
    NL80211_BAND_5GHZ = 1,
    NL80211_BAND_60GHZ = 2,
    NL80211_BAND_6GHZ = 3,
    NUM_NL80211_BANDS = 4
};
#line 4633 
enum nl80211_tx_power_setting {
    NL80211_TX_POWER_AUTOMATIC = 0,
    NL80211_TX_POWER_LIMITED = 1,
    NL80211_TX_POWER_FIXED = 2
};
#line 4914  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/nl80211.h"
struct nl80211_wowlan_tcp_data_seq {
   __u32 start ;
   __u32 offset ;
   __u32 len ;
};
#line 4925  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/nl80211.h"
struct nl80211_wowlan_tcp_data_token {
   __u32 offset ;
   __u32 len ;
   __u8 token_stream[] ;
};
#line 4936  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/nl80211.h"
struct nl80211_wowlan_tcp_data_token_feature {
   __u32 min_len ;
   __u32 max_len ;
   __u32 bufsize ;
};
#line 5237 
enum nl80211_dfs_state {
    NL80211_DFS_USABLE = 0,
    NL80211_DFS_UNAVAILABLE = 1,
    NL80211_DFS_AVAILABLE = 2
};
#line 5847  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/nl80211.h"
struct nl80211_vendor_cmd_info {
   __u32 vendor_id ;
   __u32 subcmd ;
};
#line 5903 
enum nl80211_bss_select_attr {
    __NL80211_BSS_SELECT_ATTR_INVALID = 0,
    NL80211_BSS_SELECT_ATTR_RSSI = 1,
    NL80211_BSS_SELECT_ATTR_BAND_PREF = 2,
    NL80211_BSS_SELECT_ATTR_RSSI_ADJUST = 3,
    __NL80211_BSS_SELECT_ATTR_AFTER_LAST = 4,
    NL80211_BSS_SELECT_ATTR_MAX = 3
};
#line 6138 
enum environment_cap {
    ENVIRON_ANY = 0,
    ENVIRON_INDOOR = 1,
    ENVIRON_OUTDOOR = 2
};
#line 77  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/regulatory.h"
struct regulatory_request {
   struct callback_head callback_head ;
   int wiphy_idx ;
   enum nl80211_reg_initiator initiator ;
   enum nl80211_user_reg_hint_type user_reg_hint_type ;
   char alpha2[3U] ;
   enum nl80211_dfs_regions dfs_region ;
   bool intersect ;
   bool processed ;
   enum environment_cap country_ie_env ;
   struct list_head list ;
};
#line 181  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/regulatory.h"
struct ieee80211_freq_range {
   u32 start_freq_khz ;
   u32 end_freq_khz ;
   u32 max_bandwidth_khz ;
};
#line 187  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/regulatory.h"
struct ieee80211_power_rule {
   u32 max_antenna_gain ;
   u32 max_eirp ;
};
#line 205  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/regulatory.h"
struct ieee80211_wmm_ac {
   u16 cw_min ;
   u16 cw_max ;
   u16 cot ;
   u8 aifsn ;
};
#line 212  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/regulatory.h"
struct ieee80211_wmm_rule {
   struct ieee80211_wmm_ac client[4U] ;
   struct ieee80211_wmm_ac ap[4U] ;
};
#line 217  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/regulatory.h"
struct ieee80211_reg_rule {
   struct ieee80211_freq_range freq_range ;
   struct ieee80211_power_rule power_rule ;
   struct ieee80211_wmm_rule wmm_rule ;
   u32 flags ;
   u32 dfs_cac_ms ;
   bool has_wmm ;
};
#line 226  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/regulatory.h"
struct ieee80211_regdomain {
   struct callback_head callback_head ;
   u32 n_reg_rules ;
   char alpha2[3U] ;
   enum nl80211_dfs_regions dfs_region ;
   struct ieee80211_reg_rule reg_rules[] ;
};
#line 233 
struct wiphy;
#line 147  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct ieee80211_channel {
   enum nl80211_band band ;
   u32 center_freq ;
   u16 hw_value ;
   u32 flags ;
   int max_antenna_gain ;
   int max_power ;
   int max_reg_power ;
   bool beacon_found ;
   u32 orig_flags ;
   int orig_mag ;
   int orig_mpwr ;
   enum nl80211_dfs_state dfs_state ;
   unsigned long dfs_state_entered ;
   unsigned int dfs_cac_ms ;
};
#line 172 
enum ieee80211_bss_type {
    IEEE80211_BSS_TYPE_ESS = 0,
    IEEE80211_BSS_TYPE_PBSS = 1,
    IEEE80211_BSS_TYPE_IBSS = 2,
    IEEE80211_BSS_TYPE_MBSS = 3,
    IEEE80211_BSS_TYPE_ANY = 4
};
#line 243  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct ieee80211_rate {
   u32 flags ;
   u16 bitrate ;
   u16 hw_value ;
   u16 hw_value_short ;
};
#line 256  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct ieee80211_he_obss_pd {
   bool enable ;
   u8 min_offset ;
   u8 max_offset ;
};
#line 274  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct ieee80211_sta_ht_cap {
   u16 cap ;
   bool ht_supported ;
   u8 ampdu_factor ;
   u8 ampdu_density ;
   struct ieee80211_mcs_info mcs ;
};
#line 292  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct ieee80211_sta_vht_cap {
   bool vht_supported ;
   u32 cap ;
   struct ieee80211_vht_mcs_info vht_mcs ;
};
#line 311  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct ieee80211_sta_he_cap {
   bool has_he ;
   struct ieee80211_he_cap_elem he_cap_elem ;
   struct ieee80211_he_mcs_nss_supp he_mcs_nss_supp ;
   u8 ppe_thres[25U] ;
};
#line 328  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct ieee80211_sband_iftype_data {
   u16 types_mask ;
   struct ieee80211_sta_he_cap he_cap ;
};
#line 332 
enum ieee80211_edmg_bw_config {
    IEEE80211_EDMG_BW_CONFIG_4 = 4,
    IEEE80211_EDMG_BW_CONFIG_5 = 5,
    IEEE80211_EDMG_BW_CONFIG_6 = 6,
    IEEE80211_EDMG_BW_CONFIG_7 = 7,
    IEEE80211_EDMG_BW_CONFIG_8 = 8,
    IEEE80211_EDMG_BW_CONFIG_9 = 9,
    IEEE80211_EDMG_BW_CONFIG_10 = 10,
    IEEE80211_EDMG_BW_CONFIG_11 = 11,
    IEEE80211_EDMG_BW_CONFIG_12 = 12,
    IEEE80211_EDMG_BW_CONFIG_13 = 13,
    IEEE80211_EDMG_BW_CONFIG_14 = 14,
    IEEE80211_EDMG_BW_CONFIG_15 = 15
};
#line 382  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct ieee80211_edmg {
   u8 channels ;
   enum ieee80211_edmg_bw_config bw_config ;
};
#line 410  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct ieee80211_supported_band {
   struct ieee80211_channel *channels ;
   struct ieee80211_rate *bitrates ;
   enum nl80211_band band ;
   int n_channels ;
   int n_bitrates ;
   struct ieee80211_sta_ht_cap ht_cap ;
   struct ieee80211_sta_vht_cap vht_cap ;
   struct ieee80211_edmg edmg_cap ;
   u16 n_iftype_data ;
   struct ieee80211_sband_iftype_data *iftype_data ;
};
#line 571  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct key_params {
   u8 *key ;
   u8 *seq ;
   int key_len ;
   int seq_len ;
   u16 vlan_id ;
   u32 cipher ;
   enum nl80211_key_mode mode ;
};
#line 593  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_chan_def {
   struct ieee80211_channel *chan ;
   enum nl80211_chan_width width ;
   u32 center_freq1 ;
   u32 center_freq2 ;
   struct ieee80211_edmg edmg ;
};
#line 811  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct survey_info {
   struct ieee80211_channel *channel ;
   u64 time ;
   u64 time_busy ;
   u64 time_ext_busy ;
   u64 time_rx ;
   u64 time_tx ;
   u64 time_scan ;
   u64 time_bss_rx ;
   u32 filled ;
   s8 noise ;
};
#line 853  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_crypto_settings {
   u32 wpa_versions ;
   u32 cipher_group ;
   int n_ciphers_pairwise ;
   u32 ciphers_pairwise[5U] ;
   int n_akm_suites ;
   u32 akm_suites[2U] ;
   bool control_port ;
   __be16 control_port_ethertype ;
   bool control_port_no_encrypt ;
   bool control_port_over_nl80211 ;
   struct key_params *wep_keys ;
   int wep_tx_key ;
   u8 *psk ;
   u8 *sae_pwd ;
   u8 sae_pwd_len ;
};
#line 917  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct mac_address {
   u8 addr[6U] ;
};
#line 1885  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_ssid {
   u8 ssid[32U] ;
   u8 ssid_len ;
};
#line 1991  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_match_set {
   struct cfg80211_ssid ssid ;
   u8 bssid[6U] ;
   s32 rssi_thold ;
   s32 per_band_rssi_thold[4U] ;
};
#line 2007  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_sched_scan_plan {
   u32 interval ;
   u32 iterations ;
};
#line 2018  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_bss_select_adjust {
   enum nl80211_band band ;
   s8 delta ;
};
#line 2073  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_sched_scan_request {
   u64 reqid ;
   struct cfg80211_ssid *ssids ;
   int n_ssids ;
   u32 n_channels ;
   enum nl80211_bss_scan_width scan_width ;
   u8 *ie ;
   size_t ie_len ;
   u32 flags ;
   struct cfg80211_match_set *match_sets ;
   int n_match_sets ;
   s32 min_rssi_thold ;
   u32 delay ;
   struct cfg80211_sched_scan_plan *scan_plans ;
   int n_scan_plans ;
   u8 mac_addr[6U] ;
   u8 mac_addr_mask[6U] ;
   bool relative_rssi_set ;
   s8 relative_rssi ;
   struct cfg80211_bss_select_adjust rssi_adjust ;
   struct wiphy *wiphy ;
   struct net_device *dev ;
   unsigned long scan_start ;
   bool report_results ;
   struct callback_head callback_head ;
   u32 owner_nlportid ;
   bool nl_owner_dead ;
   struct list_head list ;
   struct ieee80211_channel *channels[0U] ;
};
#line 2109 
enum cfg80211_signal_type {
    CFG80211_SIGNAL_TYPE_NONE = 0,
    CFG80211_SIGNAL_TYPE_MBM = 1,
    CFG80211_SIGNAL_TYPE_UNSPEC = 2
};
#line 2432  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_ibss_params {
   u8 *ssid ;
   u8 *bssid ;
   struct cfg80211_chan_def chandef ;
   u8 *ie ;
   u8 ssid_len ;
   u8 ie_len ;
   u16 beacon_interval ;
   u32 basic_rates ;
   bool channel_fixed ;
   bool privacy ;
   bool control_port ;
   bool control_port_over_nl80211 ;
   bool userspace_handles_dfs ;
   int mcast_rate[4U] ;
   struct ieee80211_ht_cap ht_capa ;
   struct ieee80211_ht_cap ht_capa_mask ;
   struct key_params *wep_keys ;
   int wep_tx_key ;
};
#line 2460  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
union __anonunion_param_740 {
   enum nl80211_band band_pref ;
   struct cfg80211_bss_select_adjust adjust ;
};
#line 2460  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_bss_selection {
   enum nl80211_bss_select_attr behaviour ;
   union __anonunion_param_740 param ;
};
#line 2531  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_connect_params {
   struct ieee80211_channel *channel ;
   struct ieee80211_channel *channel_hint ;
   u8 *bssid ;
   u8 *bssid_hint ;
   u8 *ssid ;
   size_t ssid_len ;
   enum nl80211_auth_type auth_type ;
   u8 *ie ;
   size_t ie_len ;
   bool privacy ;
   enum nl80211_mfp mfp ;
   struct cfg80211_crypto_settings crypto ;
   u8 *key ;
   u8 key_len ;
   u8 key_idx ;
   u32 flags ;
   int bg_scan_period ;
   struct ieee80211_ht_cap ht_capa ;
   struct ieee80211_ht_cap ht_capa_mask ;
   struct ieee80211_vht_cap vht_capa ;
   struct ieee80211_vht_cap vht_capa_mask ;
   bool pbss ;
   struct cfg80211_bss_selection bss_select ;
   u8 *prev_bssid ;
   u8 *fils_erp_username ;
   size_t fils_erp_username_len ;
   u8 *fils_erp_realm ;
   size_t fils_erp_realm_len ;
   u16 fils_erp_next_seq_num ;
   u8 *fils_erp_rrk ;
   size_t fils_erp_rrk_len ;
   bool want_1x ;
   struct ieee80211_edmg edmg ;
};
#line 2656  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_pkt_pattern {
   u8 *mask ;
   u8 *pattern ;
   int pattern_len ;
   int pkt_offset ;
};
#line 2681  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_wowlan_tcp {
   struct socket *sock ;
   __be32 src ;
   __be32 dst ;
   u16 src_port ;
   u16 dst_port ;
   u8 dst_mac[6U] ;
   int payload_len ;
   u8 *payload ;
   struct nl80211_wowlan_tcp_data_seq payload_seq ;
   u32 data_interval ;
   u32 wake_len ;
   u8 *wake_data ;
   u8 *wake_mask ;
   u32 tokens_size ;
   struct nl80211_wowlan_tcp_data_token payload_tok ;
};
#line 2715  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_wowlan {
   bool any ;
   bool disconnect ;
   bool magic_pkt ;
   bool gtk_rekey_failure ;
   bool eap_identity_req ;
   bool four_way_handshake ;
   bool rfkill_release ;
   struct cfg80211_pkt_pattern *patterns ;
   struct cfg80211_wowlan_tcp *tcp ;
   int n_patterns ;
   struct cfg80211_sched_scan_request *nd_config ;
};
#line 4043  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct ieee80211_iface_limit {
   u16 max ;
   u16 types ;
};
#line 4107  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct ieee80211_iface_combination {
   struct ieee80211_iface_limit *limits ;
   u32 num_different_channels ;
   u16 max_interfaces ;
   u8 n_limits ;
   bool beacon_int_infra_match ;
   u8 radar_detect_widths ;
   u8 radar_detect_regions ;
   u32 beacon_int_min_gcd ;
};
#line 4165  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct ieee80211_txrx_stypes {
   u16 tx ;
   u16 rx ;
};
#line 4198  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct wiphy_wowlan_tcp_support {
   struct nl80211_wowlan_tcp_data_token_feature *tok ;
   u32 data_payload_max ;
   u32 data_interval_max ;
   u32 wake_payload_max ;
   bool seq ;
};
#line 4221  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct wiphy_wowlan_support {
   u32 flags ;
   int n_patterns ;
   int pattern_max_len ;
   int pattern_min_len ;
   int max_pkt_offset ;
   int max_nd_match_sets ;
   struct wiphy_wowlan_tcp_support *tcp ;
};
#line 4241  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct wiphy_coalesce_support {
   int n_rules ;
   int max_delay ;
   int n_patterns ;
   int pattern_max_len ;
   int pattern_min_len ;
   int max_pkt_offset ;
};
#line 4312 
struct nla_policy;
#line 4312  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct wiphy_vendor_command {
   struct nl80211_vendor_cmd_info info ;
   u32 flags ;
   int (*doit)(struct wiphy *, struct wireless_dev *, void *, int ) ;
   int (*dumpit)(struct wiphy *, struct wireless_dev *, struct sk_buff *, void *, int , unsigned long *) ;
   struct nla_policy *policy ;
   unsigned int maxattr ;
};
#line 4335  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct wiphy_iftype_ext_capab {
   enum nl80211_iftype iftype ;
   u8 *extended_capabilities ;
   u8 *extended_capabilities_mask ;
   u8 extended_capabilities_len ;
};
#line 4360  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct __anonstruct_ftm_742 {
   u32 preambles ;
   u32 bandwidths ;
   s8 max_bursts_exponent ;
   u8 max_ftms_per_burst ;
   u8 supported : 1 ;
   u8 asap : 1 ;
   u8 non_asap : 1 ;
   u8 request_lci : 1 ;
   u8 request_civicloc : 1 ;
};
#line 4360  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_pmsr_capabilities {
   unsigned int max_peers ;
   u8 report_ap_tsf : 1 ;
   u8 randomize_mac_addr : 1 ;
   struct __anonstruct_ftm_742 ftm ;
};
#line 4552  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct wiphy {
   u8 perm_addr[6U] ;
   u8 addr_mask[6U] ;
   struct mac_address *addresses ;
   struct ieee80211_txrx_stypes *mgmt_stypes ;
   struct ieee80211_iface_combination *iface_combinations ;
   int n_iface_combinations ;
   u16 software_iftypes ;
   u16 n_addresses ;
   u16 interface_modes ;
   u16 max_acl_mac_addrs ;
   u32 flags ;
   u32 regulatory_flags ;
   u32 features ;
   u8 ext_features[6U] ;
   u32 ap_sme_capa ;
   enum cfg80211_signal_type signal_type ;
   int bss_priv_size ;
   u8 max_scan_ssids ;
   u8 max_sched_scan_reqs ;
   u8 max_sched_scan_ssids ;
   u8 max_match_sets ;
   u16 max_scan_ie_len ;
   u16 max_sched_scan_ie_len ;
   u32 max_sched_scan_plans ;
   u32 max_sched_scan_plan_interval ;
   u32 max_sched_scan_plan_iterations ;
   int n_cipher_suites ;
   u32 *cipher_suites ;
   int n_akm_suites ;
   u32 *akm_suites ;
   u8 retry_short ;
   u8 retry_long ;
   u32 frag_threshold ;
   u32 rts_threshold ;
   u8 coverage_class ;
   char fw_version[32U] ;
   u32 hw_version ;
   struct wiphy_wowlan_support *wowlan ;
   struct cfg80211_wowlan *wowlan_config ;
   u16 max_remain_on_channel_duration ;
   u8 max_num_pmkids ;
   u32 available_antennas_tx ;
   u32 available_antennas_rx ;
   u32 probe_resp_offload ;
   u8 *extended_capabilities ;
   u8 *extended_capabilities_mask ;
   u8 extended_capabilities_len ;
   struct wiphy_iftype_ext_capab *iftype_ext_capab ;
   unsigned int num_iftype_ext_capab ;
   void *privid ;
   struct ieee80211_supported_band *bands[4U] ;
   void (*reg_notifier)(struct wiphy *, struct regulatory_request *) ;
   struct ieee80211_regdomain *regd ;
   struct device dev ;
   bool registered ;
   struct dentry *debugfsdir ;
   struct ieee80211_ht_cap *ht_capa_mod_mask ;
   struct ieee80211_vht_cap *vht_capa_mod_mask ;
   struct list_head wdev_list ;
   possible_net_t _net ;
   struct iw_handler_def *wext ;
   struct wiphy_coalesce_support *coalesce ;
   struct wiphy_vendor_command *vendor_commands ;
   struct nl80211_vendor_cmd_info *vendor_events ;
   int n_vendor_commands ;
   int n_vendor_events ;
   u16 max_ap_assoc_sta ;
   u8 max_num_csa_counters ;
   u8 max_adj_channel_rssi_comp ;
   u32 bss_select_support ;
   u8 nan_supported_bands ;
   u32 txq_limit ;
   u32 txq_memory_limit ;
   u32 txq_quantum ;
   u8 support_mbssid : 1 ;
   u8 support_only_he_mbssid : 1 ;
   struct cfg80211_pmsr_capabilities *pmsr_capa ;
   char priv[0U] ;
};
#line 4826 
struct cfg80211_conn;
#line 4827 
struct cfg80211_internal_bss;
#line 4828 
struct cfg80211_cached_keys;
#line 4829 
struct cfg80211_cqm_config;
#line 4912  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct __anonstruct_wext_743 {
   struct cfg80211_ibss_params ibss ;
   struct cfg80211_connect_params connect ;
   struct cfg80211_cached_keys *keys ;
   u8 *ie ;
   size_t ie_len ;
   u8 bssid[6U] ;
   u8 prev_bssid[6U] ;
   u8 ssid[32U] ;
   s8 default_key ;
   s8 default_mgmt_key ;
   bool prev_bssid_valid ;
};
#line 4912  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct wireless_dev {
   struct wiphy *wiphy ;
   enum nl80211_iftype iftype ;
   struct list_head list ;
   struct net_device *netdev ;
   u32 identifier ;
   struct list_head mgmt_registrations ;
   spinlock_t mgmt_registrations_lock ;
   struct mutex mtx ;
   bool use_4addr ;
   bool is_running ;
   u8 address[6U] ;
   u8 ssid[32U] ;
   u8 ssid_len ;
   u8 mesh_id_len ;
   u8 mesh_id_up_len ;
   struct cfg80211_conn *conn ;
   struct cfg80211_cached_keys *connect_keys ;
   enum ieee80211_bss_type conn_bss_type ;
   u32 conn_owner_nlportid ;
   struct work_struct disconnect_wk ;
   u8 disconnect_bssid[6U] ;
   struct list_head event_list ;
   spinlock_t event_lock ;
   struct cfg80211_internal_bss *current_bss ;
   struct cfg80211_chan_def preset_chandef ;
   struct cfg80211_chan_def chandef ;
   bool ibss_fixed ;
   bool ibss_dfs_possible ;
   bool ps ;
   int ps_timeout ;
   int beacon_interval ;
   u32 ap_unexpected_nlportid ;
   u32 owner_nlportid ;
   bool nl_owner_dead ;
   bool cac_started ;
   unsigned long cac_start_time ;
   unsigned int cac_time_ms ;
   struct __anonstruct_wext_743 wext ;
   struct cfg80211_cqm_config *cqm_config ;
   struct list_head pmsr_list ;
   spinlock_t pmsr_lock ;
   struct work_struct pmsr_free_wk ;
};
#line 567  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/rtnetlink.h"
struct tcmsg {
   unsigned char tcm_family ;
   unsigned char tcm__pad1 ;
   unsigned short tcm__pad2 ;
   int tcm_ifindex ;
   __u32 tcm_handle ;
   __u32 tcm_parent ;
   __u32 tcm_info ;
};
#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/gen_stats.h"
struct gnet_stats_queue {
   __u32 qlen ;
   __u32 backlog ;
   __u32 drops ;
   __u32 requeues ;
   __u32 overlimits ;
};
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/gen_stats.h"
struct gnet_stats_basic_packed {
   __u64 bytes ;
   __u64 packets ;
};
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/gen_stats.h"
struct gnet_stats_basic_cpu {
   struct gnet_stats_basic_packed bstats ;
   struct u64_stats_sync syncp ;
} __attribute__((__aligned__(16)));
#line 20 
struct net_rate_estimator;
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/gen_stats.h"
struct gnet_dump {
   spinlock_t *lock ;
   struct sk_buff *skb ;
   struct nlattr *tail ;
   int compat_tc_stats ;
   int compat_xstats ;
   int padattr ;
   void *xstats ;
   int xstats_len ;
   struct tc_stats tc_stats ;
};
#line 291  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netlink.h"
struct __anonstruct_751 {
   s16 min ;
   s16 max ;
};
#line 291  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netlink.h"
union __anonunion_750 {
   void *validation_data ;
   struct __anonstruct_751 __anonCompField___anonunion_750_163 ;
   int (*validate)(struct nlattr *, struct netlink_ext_ack *) ;
   u16 strict_start_type ;
};
#line 291  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netlink.h"
struct nla_policy {
   u8 type ;
   u8 validation_type ;
   u16 len ;
   union __anonunion_750 __anonCompField_nla_policy_164 ;
};
#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/rtnetlink.h"
struct rtnl_link_ops {
   struct list_head list ;
   char *kind ;
   size_t priv_size ;
   void (*setup)(struct net_device *) ;
   unsigned int maxtype ;
   struct nla_policy *policy ;
   int (*validate)(struct nlattr **, struct nlattr **, struct netlink_ext_ack *) ;
   int (*newlink)(struct net *, struct net_device *, struct nlattr **, struct nlattr **, struct netlink_ext_ack *) ;
   int (*changelink)(struct net_device *, struct nlattr **, struct nlattr **, struct netlink_ext_ack *) ;
   void (*dellink)(struct net_device *, struct list_head *) ;
   size_t (*get_size)(struct net_device *) ;
   int (*fill_info)(struct sk_buff *, struct net_device *) ;
   size_t (*get_xstats_size)(struct net_device *) ;
   int (*fill_xstats)(struct sk_buff *, struct net_device *) ;
   unsigned int (*get_num_tx_queues)(void) ;
   unsigned int (*get_num_rx_queues)(void) ;
   unsigned int slave_maxtype ;
   struct nla_policy *slave_policy ;
   int (*slave_changelink)(struct net_device *, struct net_device *, struct nlattr **, struct nlattr **, struct netlink_ext_ack *) ;
   size_t (*get_slave_size)(struct net_device *, struct net_device *) ;
   int (*fill_slave_info)(struct sk_buff *, struct net_device *, struct net_device *) ;
   struct net *(*get_link_net)(struct net_device *) ;
   size_t (*get_linkxstats_size)(struct net_device *, int ) ;
   int (*fill_linkxstats)(struct sk_buff *, struct net_device *, int *, int ) ;
};
#line 173  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jhash.h"
struct rhash_lock_head {
   };
#line 76  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable.h"
struct bucket_table {
   unsigned int size ;
   unsigned int nest ;
   u32 hash_rnd ;
   struct list_head walkers ;
   struct callback_head rcu ;
   struct bucket_table *future_tbl ;
   struct lockdep_map dep_map ;
   struct rhash_lock_head *buckets[] ;
};
#line 281  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow_offload.h"
struct flow_block {
   struct list_head cb_list ;
};
#line 298  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow_offload.h"
typedef int flow_setup_cb_t(enum tc_setup_type , void *, void *);
#line 412 
struct Qdisc_ops;
#line 413 
struct qdisc_walker;
#line 414 
struct tcf_walker;
#line 41  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct qdisc_size_table {
   struct callback_head rcu ;
   struct list_head list ;
   struct tc_sizespec szopts ;
   int refcnt ;
   u16 data[] ;
};
#line 50  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct qdisc_skb_head {
   struct sk_buff *head ;
   struct sk_buff *tail ;
   __u32 qlen ;
   spinlock_t lock ;
};
#line 57  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct Qdisc {
   int (*enqueue)(struct sk_buff *, struct Qdisc *, struct sk_buff **) ;
   struct sk_buff *(*dequeue)(struct Qdisc *) ;
   unsigned int flags ;
   u32 limit ;
   struct Qdisc_ops *ops ;
   struct qdisc_size_table *stab ;
   struct hlist_node hash ;
   u32 handle ;
   u32 parent ;
   struct netdev_queue *dev_queue ;
   struct net_rate_estimator *rate_est ;
   struct gnet_stats_basic_cpu *cpu_bstats ;
   struct gnet_stats_queue *cpu_qstats ;
   int padded ;
   refcount_t refcnt ;
   struct sk_buff_head gso_skb ;
   struct qdisc_skb_head q ;
   struct gnet_stats_basic_packed bstats ;
   seqcount_t running ;
   struct gnet_stats_queue qstats ;
   unsigned long state ;
   struct Qdisc *next_sched ;
   struct sk_buff_head skb_bad_txq ;
   spinlock_t busylock ;
   spinlock_t seqlock ;
   bool empty ;
   struct callback_head rcu ;
};
#line 195 
struct tcf_block;
#line 195  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct Qdisc_class_ops {
   unsigned int flags ;
   struct netdev_queue *(*select_queue)(struct Qdisc *, struct tcmsg *) ;
   int (*graft)(struct Qdisc *, unsigned long , struct Qdisc *, struct Qdisc **, struct netlink_ext_ack *) ;
   struct Qdisc *(*leaf)(struct Qdisc *, unsigned long ) ;
   void (*qlen_notify)(struct Qdisc *, unsigned long ) ;
   unsigned long (*find)(struct Qdisc *, u32 ) ;
   int (*change)(struct Qdisc *, u32 , u32 , struct nlattr **, unsigned long *, struct netlink_ext_ack *) ;
   int (*delete)(struct Qdisc *, unsigned long ) ;
   void (*walk)(struct Qdisc *, struct qdisc_walker *) ;
   struct tcf_block *(*tcf_block)(struct Qdisc *, unsigned long , struct netlink_ext_ack *) ;
   unsigned long (*bind_tcf)(struct Qdisc *, unsigned long , u32 ) ;
   void (*unbind_tcf)(struct Qdisc *, unsigned long ) ;
   int (*dump)(struct Qdisc *, unsigned long , struct sk_buff *, struct tcmsg *) ;
   int (*dump_stats)(struct Qdisc *, unsigned long , struct gnet_dump *) ;
};
#line 235  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct Qdisc_ops {
   struct Qdisc_ops *next ;
   struct Qdisc_class_ops *cl_ops ;
   char id[16U] ;
   int priv_size ;
   unsigned int static_flags ;
   int (*enqueue)(struct sk_buff *, struct Qdisc *, struct sk_buff **) ;
   struct sk_buff *(*dequeue)(struct Qdisc *) ;
   struct sk_buff *(*peek)(struct Qdisc *) ;
   int (*init)(struct Qdisc *, struct nlattr *, struct netlink_ext_ack *) ;
   void (*reset)(struct Qdisc *) ;
   void (*destroy)(struct Qdisc *) ;
   int (*change)(struct Qdisc *, struct nlattr *, struct netlink_ext_ack *) ;
   void (*attach)(struct Qdisc *) ;
   int (*change_tx_queue_len)(struct Qdisc *, unsigned int ) ;
   int (*dump)(struct Qdisc *, struct sk_buff *) ;
   int (*dump_stats)(struct Qdisc *, struct gnet_dump *) ;
   void (*ingress_block_set)(struct Qdisc *, u32 ) ;
   void (*egress_block_set)(struct Qdisc *, u32 ) ;
   u32 (*ingress_block_get)(struct Qdisc *) ;
   u32 (*egress_block_get)(struct Qdisc *) ;
   struct module *owner ;
};
#line 272  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct __anonstruct_825 {
   unsigned long class ;
   u32 classid ;
};
#line 272 
struct tcf_proto;
#line 272  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct __anonstruct_826 {
   bool ingress ;
   struct gnet_stats_queue *qstats ;
};
#line 272  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
union __anonunion_824 {
   struct __anonstruct_825 __anonCompField___anonunion_824_166 ;
   struct tcf_proto *goto_tp ;
   struct __anonstruct_826 __anonCompField___anonunion_824_167 ;
};
#line 272  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct tcf_result {
   union __anonunion_824 __anonCompField_tcf_result_168 ;
};
#line 287 
struct tcf_chain;
#line 290  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct tcf_proto_ops {
   struct list_head head ;
   char kind[16U] ;
   int (*classify)(struct sk_buff *, struct tcf_proto *, struct tcf_result *) ;
   int (*init)(struct tcf_proto *) ;
   void (*destroy)(struct tcf_proto *, bool , struct netlink_ext_ack *) ;
   void *(*get)(struct tcf_proto *, u32 ) ;
   void (*put)(struct tcf_proto *, void *) ;
   int (*change)(struct net *, struct sk_buff *, struct tcf_proto *, unsigned long , u32 , struct nlattr **, void **, bool , bool , struct netlink_ext_ack *) ;
   int (*delete)(struct tcf_proto *, void *, bool *, bool , struct netlink_ext_ack *) ;
   bool (*delete_empty)(struct tcf_proto *) ;
   void (*walk)(struct tcf_proto *, struct tcf_walker *, bool ) ;
   int (*reoffload)(struct tcf_proto *, bool , flow_setup_cb_t *, void *, struct netlink_ext_ack *) ;
   void (*hw_add)(struct tcf_proto *, void *) ;
   void (*hw_del)(struct tcf_proto *, void *) ;
   void (*bind_class)(void *, u32 , unsigned long ) ;
   void *(*tmplt_create)(struct net *, struct tcf_chain *, struct nlattr **, struct netlink_ext_ack *) ;
   void (*tmplt_destroy)(void *) ;
   int (*dump)(struct net *, struct tcf_proto *, void *, struct sk_buff *, struct tcmsg *, bool ) ;
   int (*tmplt_dump)(struct sk_buff *, struct net *, void *) ;
   struct module *owner ;
   int flags ;
};
#line 348  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct tcf_proto {
   struct tcf_proto *next ;
   void *root ;
   int (*classify)(struct sk_buff *, struct tcf_proto *, struct tcf_result *) ;
   __be16 protocol ;
   u32 prio ;
   void *data ;
   struct tcf_proto_ops *ops ;
   struct tcf_chain *chain ;
   spinlock_t lock ;
   bool deleting ;
   refcount_t refcnt ;
   struct callback_head rcu ;
   struct hlist_node destroy_ht_node ;
};
#line 386  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct tcf_chain {
   struct mutex filter_chain_lock ;
   struct tcf_proto *filter_chain ;
   struct list_head list ;
   struct tcf_block *block ;
   u32 index ;
   unsigned int refcnt ;
   unsigned int action_refcnt ;
   bool explicitly_created ;
   bool flushing ;
   struct tcf_proto_ops *tmplt_ops ;
   void *tmplt_priv ;
   struct callback_head rcu ;
};
#line 402  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct __anonstruct_chain0_828 {
   struct tcf_chain *chain ;
   struct list_head filter_chain_list ;
};
#line 402  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct tcf_block {
   struct mutex lock ;
   struct list_head chain_list ;
   u32 index ;
   refcount_t refcnt ;
   struct net *net ;
   struct Qdisc *q ;
   struct rw_semaphore cb_lock ;
   struct flow_block flow_block ;
   struct list_head owner_list ;
   bool keep_dst ;
   atomic_t offloadcnt ;
   unsigned int nooffloaddevcnt ;
   unsigned int lockeddevcnt ;
   struct __anonstruct_chain0_828 chain0 ;
   struct callback_head rcu ;
   struct hlist_head proto_destroy_ht[128U] ;
   struct mutex proto_destroy_lock ;
};
#line 1269  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct mini_Qdisc {
   struct tcf_proto *filter_list ;
   struct gnet_stats_basic_cpu *cpu_bstats ;
   struct gnet_stats_queue *cpu_qstats ;
   struct callback_head rcu ;
};
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/pkt_sched.h"
struct qdisc_walker {
   int stop ;
   int skip ;
   int count ;
   int (*fn)(struct Qdisc *, unsigned long , struct qdisc_walker *) ;
};
#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/page_counter.h"
struct page_counter {
   atomic_long_t usage ;
   unsigned long min ;
   unsigned long low ;
   unsigned long max ;
   struct page_counter *parent ;
   unsigned long emin ;
   atomic_long_t min_usage ;
   atomic_long_t children_min_usage ;
   unsigned long elow ;
   atomic_long_t low_usage ;
   atomic_long_t children_low_usage ;
   unsigned long watermark ;
   unsigned long failcnt ;
};
#line 66 
struct eventfd_ctx;
#line 13  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/vmpressure.h"
struct vmpressure {
   unsigned long scanned ;
   unsigned long reclaimed ;
   unsigned long tree_scanned ;
   unsigned long tree_reclaimed ;
   spinlock_t sr_lock ;
   struct list_head events ;
   struct mutex events_lock ;
   struct work_struct work ;
};
#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/flex_proportions.h"
struct fprop_global {
   struct percpu_counter events ;
   unsigned int period ;
   seqcount_t sequence ;
};
#line 76  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/flex_proportions.h"
struct fprop_local_percpu {
   struct percpu_counter events ;
   unsigned int period ;
   raw_spinlock_t lock ;
};
#line 116  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/flex_proportions.h"
typedef int congested_fn(void *, int );
#line 45  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backing-dev-defs.h"
enum wb_reason {
    WB_REASON_BACKGROUND = 0,
    WB_REASON_VMSCAN = 1,
    WB_REASON_SYNC = 2,
    WB_REASON_PERIODIC = 3,
    WB_REASON_LAPTOP_TIMER = 4,
    WB_REASON_FREE_MORE_MEM = 5,
    WB_REASON_FS_FREE_SPACE = 6,
    WB_REASON_FORKER_THREAD = 7,
    WB_REASON_FOREIGN_FLUSH = 8,
    WB_REASON_MAX = 9
};
#line 71  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backing-dev-defs.h"
struct wb_completion {
   atomic_t cnt ;
   wait_queue_head_t *waitq ;
};
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backing-dev-defs.h"
struct bdi_writeback_congested {
   unsigned long state ;
   refcount_t refcnt ;
   struct backing_dev_info *__bdi ;
   int blkcg_id ;
   struct rb_node rb_node ;
};
#line 130  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backing-dev-defs.h"
union __anonunion_841 {
   struct work_struct release_work ;
   struct callback_head rcu ;
};
#line 130  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backing-dev-defs.h"
struct bdi_writeback {
   struct backing_dev_info *bdi ;
   unsigned long state ;
   unsigned long last_old_flush ;
   struct list_head b_dirty ;
   struct list_head b_io ;
   struct list_head b_more_io ;
   struct list_head b_dirty_time ;
   spinlock_t list_lock ;
   struct percpu_counter stat[4U] ;
   struct bdi_writeback_congested *congested ;
   unsigned long bw_time_stamp ;
   unsigned long dirtied_stamp ;
   unsigned long written_stamp ;
   unsigned long write_bandwidth ;
   unsigned long avg_write_bandwidth ;
   unsigned long dirty_ratelimit ;
   unsigned long balanced_dirty_ratelimit ;
   struct fprop_local_percpu completions ;
   int dirty_exceeded ;
   enum wb_reason start_all_reason ;
   spinlock_t work_lock ;
   struct list_head work_list ;
   struct delayed_work dwork ;
   unsigned long dirty_sleep ;
   struct list_head bdi_node ;
   struct percpu_ref refcnt ;
   struct fprop_local_percpu memcg_completions ;
   struct cgroup_subsys_state *memcg_css ;
   struct cgroup_subsys_state *blkcg_css ;
   struct list_head memcg_node ;
   struct list_head blkcg_node ;
   union __anonunion_841 __anonCompField_bdi_writeback_170 ;
};
#line 188  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backing-dev-defs.h"
struct backing_dev_info {
   u64 id ;
   struct rb_node rb_node ;
   struct list_head bdi_list ;
   unsigned long ra_pages ;
   unsigned long io_pages ;
   congested_fn *congested_fn ;
   void *congested_data ;
   char *name ;
   struct kref refcnt ;
   unsigned int capabilities ;
   unsigned int min_ratio ;
   unsigned int max_ratio ;
   unsigned int max_prop_frac ;
   atomic_long_t tot_write_bandwidth ;
   struct bdi_writeback wb ;
   struct list_head wb_list ;
   struct xarray cgwb_tree ;
   struct rb_root cgwb_congested_tree ;
   struct mutex cgwb_release_mutex ;
   struct rw_semaphore wb_switch_rwsem ;
   wait_queue_head_t wb_waitq ;
   struct device *dev ;
   struct device *owner ;
   struct timer_list laptop_mode_wb_timer ;
   struct dentry *debug_dir ;
};
#line 306 
struct bio_set;
#line 307 
struct bio_integrity_payload;
#line 308  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backing-dev-defs.h"
typedef void bio_end_io_t(struct bio *);
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk_types.h"
typedef u8 blk_status_t;
#line 112  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk_types.h"
struct bio_issue {
   u64 value ;
};
#line 144 
struct blkcg_gq;
#line 144  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk_types.h"
union __anonunion_842 {
   struct bio_integrity_payload *bi_integrity ;
};
#line 144  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk_types.h"
struct bio {
   struct bio *bi_next ;
   struct gendisk *bi_disk ;
   unsigned int bi_opf ;
   unsigned short bi_flags ;
   unsigned short bi_ioprio ;
   unsigned short bi_write_hint ;
   blk_status_t bi_status ;
   u8 bi_partno ;
   atomic_t __bi_remaining ;
   struct bvec_iter bi_iter ;
   bio_end_io_t *bi_end_io ;
   void *bi_private ;
   struct blkcg_gq *bi_blkg ;
   struct bio_issue bi_issue ;
   u64 bi_iocost_cost ;
   union __anonunion_842 __anonCompField_bio_171 ;
   unsigned short bi_vcnt ;
   unsigned short bi_max_vecs ;
   atomic_t __bi_cnt ;
   struct bio_vec *bi_io_vec ;
   struct bio_set *bi_pool ;
   struct bio_vec bi_inline_vecs[0U] ;
};
#line 452  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk_types.h"
typedef unsigned int blk_qc_t;
#line 479  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk_types.h"
struct blk_rq_stat {
   u64 mean ;
   u64 min ;
   u64 max ;
   u32 nr_samples ;
   u64 batch ;
};
#line 86  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/genhd.h"
struct disk_stats {
   u64 nsecs[4U] ;
   unsigned long sectors[4U] ;
   unsigned long ios[4U] ;
   unsigned long merges[4U] ;
   unsigned long io_ticks ;
   unsigned long time_in_queue ;
   local_t in_flight[2U] ;
};
#line 103  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/genhd.h"
struct partition_meta_info {
   char uuid[37U] ;
   u8 volname[64U] ;
};
#line 108  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/genhd.h"
struct hd_struct {
   sector_t start_sect ;
   sector_t nr_sects ;
   seqcount_t nr_sects_seq ;
   sector_t alignment_offset ;
   unsigned int discard_alignment ;
   struct device __dev ;
   struct kobject *holder_dir ;
   int policy ;
   int partno ;
   struct partition_meta_info *info ;
   int make_it_fail ;
   unsigned long stamp ;
   struct disk_stats *dkstats ;
   struct percpu_ref ref ;
   struct rcu_work rcu_work ;
};
#line 160  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/genhd.h"
struct disk_part_tbl {
   struct callback_head callback_head ;
   int len ;
   struct hd_struct *last_lookup ;
   struct hd_struct *part[] ;
};
#line 166 
struct disk_events;
#line 167 
struct badblocks;
#line 172 
struct blk_integrity_profile;
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/genhd.h"
struct blk_integrity {
   struct blk_integrity_profile *profile ;
   unsigned char flags ;
   unsigned char tuple_size ;
   unsigned char interval_exp ;
   unsigned char tag_size ;
};
#line 182 
struct timer_rand_state;
#line 182  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/genhd.h"
struct gendisk {
   int major ;
   int first_minor ;
   int minors ;
   char disk_name[32U] ;
   char *(*devnode)(struct gendisk *, umode_t *) ;
   unsigned short events ;
   unsigned short event_flags ;
   struct disk_part_tbl *part_tbl ;
   struct hd_struct part0 ;
   struct block_device_operations *fops ;
   struct request_queue *queue ;
   void *private_data ;
   int flags ;
   struct rw_semaphore lookup_sem ;
   struct kobject *slave_dir ;
   struct timer_rand_state *random ;
   atomic_t sync_io ;
   struct disk_events *ev ;
   struct kobject integrity_kobj ;
   int node_id ;
   struct badblocks *bb ;
   struct lockdep_map lockdep_map ;
};
#line 637  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pagemap.h"
typedef void *mempool_alloc_t(gfp_t , void *);
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mempool.h"
typedef void mempool_free_t(void *, void *);
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mempool.h"
struct mempool_s {
   spinlock_t lock ;
   int min_nr ;
   int curr_nr ;
   void **elements ;
   void *pool_data ;
   mempool_alloc_t *alloc ;
   mempool_free_t *free ;
   wait_queue_head_t wait ;
};
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mempool.h"
typedef struct mempool_s mempool_t;
#line 307  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bio.h"
struct bio_integrity_payload {
   struct bio *bip_bio ;
   struct bvec_iter bip_iter ;
   unsigned short bip_slab ;
   unsigned short bip_vcnt ;
   unsigned short bip_max_vcnt ;
   unsigned short bip_flags ;
   struct bvec_iter bio_iter ;
   struct work_struct bip_work ;
   struct bio_vec *bip_vec ;
   struct bio_vec bip_inline_vecs[0U] ;
};
#line 575  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bio.h"
struct bio_list {
   struct bio *head ;
   struct bio *tail ;
};
#line 703  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bio.h"
struct bio_set {
   struct kmem_cache *bio_slab ;
   unsigned int front_pad ;
   mempool_t bio_pool ;
   mempool_t bvec_pool ;
   mempool_t bio_integrity_pool ;
   mempool_t bvec_integrity_pool ;
   spinlock_t rescue_lock ;
   struct bio_list rescue_list ;
   struct work_struct rescue_work ;
   struct workqueue_struct *rescue_workqueue ;
};
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bsg.h"
struct sg_io_v4 {
   __s32 guard ;
   __u32 protocol ;
   __u32 subprotocol ;
   __u32 request_len ;
   __u64 request ;
   __u64 request_tag ;
   __u32 request_attr ;
   __u32 request_priority ;
   __u32 request_extra ;
   __u32 max_response_len ;
   __u64 response ;
   __u32 dout_iovec_count ;
   __u32 dout_xfer_len ;
   __u32 din_iovec_count ;
   __u32 din_xfer_len ;
   __u64 dout_xferp ;
   __u64 din_xferp ;
   __u32 timeout ;
   __u32 flags ;
   __u64 usr_ptr ;
   __u32 spare_in ;
   __u32 driver_status ;
   __u32 transport_status ;
   __u32 device_status ;
   __u32 retry_delay ;
   __u32 info ;
   __u32 duration ;
   __u32 response_len ;
   __s32 din_resid ;
   __s32 dout_resid ;
   __u64 generated_tag ;
   __u32 spare_out ;
   __u32 padding ;
};
#line 65 
struct request;
#line 10  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bsg.h"
struct bsg_ops {
   int (*check_proto)(struct sg_io_v4 *) ;
   int (*fill_hdr)(struct request *, struct sg_io_v4 *, fmode_t ) ;
   int (*complete_rq)(struct request *, struct sg_io_v4 *) ;
   void (*free_rq)(struct request *) ;
};
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bsg.h"
struct bsg_class_device {
   struct device *class_dev ;
   int minor ;
   struct request_queue *queue ;
   struct bsg_ops *ops ;
};
#line 94  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/blkzoned.h"
struct blk_zone {
   __u64 start ;
   __u64 len ;
   __u64 wp ;
   __u8 type ;
   __u8 cond ;
   __u8 non_seq ;
   __u8 reset ;
   __u8 reserved[36U] ;
};
#line 134 
struct elevator_queue;
#line 135 
struct blk_trace;
#line 138 
struct blk_flush_queue;
#line 139 
struct pr_ops;
#line 140 
struct rq_qos;
#line 141 
struct blk_queue_stats;
#line 142 
struct blk_stat_callback;
#line 143  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/blkzoned.h"
typedef void rq_end_io_fn(struct request *, blk_status_t );
#line 63  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
typedef __u32 req_flags_t;
#line 67 
enum mq_rq_state {
    MQ_RQ_IDLE = 0,
    MQ_RQ_IN_FLIGHT = 1,
    MQ_RQ_COMPLETE = 2
};
#line 132 
struct blk_mq_ctx;
#line 132 
struct blk_mq_hw_ctx;
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
union __anonunion_845 {
   struct hlist_node hash ;
   struct list_head ipi_list ;
};
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
union __anonunion_846 {
   struct rb_node rb_node ;
   struct bio_vec special_vec ;
   void *completion_data ;
   int error_count ;
};
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
struct __anonstruct_elv_848 {
   struct io_cq *icq ;
   void *priv[2U] ;
};
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
struct __anonstruct_flush_849 {
   unsigned int seq ;
   struct list_head list ;
   rq_end_io_fn *saved_end_io ;
};
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
union __anonunion_847 {
   struct __anonstruct_elv_848 elv ;
   struct __anonstruct_flush_849 flush ;
};
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
union __anonunion_850 {
   struct __call_single_data csd ;
   u64 fifo_time ;
};
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
struct request {
   struct request_queue *q ;
   struct blk_mq_ctx *mq_ctx ;
   struct blk_mq_hw_ctx *mq_hctx ;
   unsigned int cmd_flags ;
   req_flags_t rq_flags ;
   int tag ;
   int internal_tag ;
   unsigned int __data_len ;
   sector_t __sector ;
   struct bio *bio ;
   struct bio *biotail ;
   struct list_head queuelist ;
   union __anonunion_845 __anonCompField_request_172 ;
   union __anonunion_846 __anonCompField_request_173 ;
   union __anonunion_847 __anonCompField_request_174 ;
   struct gendisk *rq_disk ;
   struct hd_struct *part ;
   u64 alloc_time_ns ;
   u64 start_time_ns ;
   u64 io_start_time_ns ;
   unsigned short wbt_flags ;
   unsigned short stats_sectors ;
   unsigned short nr_phys_segments ;
   unsigned short nr_integrity_segments ;
   unsigned short write_hint ;
   unsigned short ioprio ;
   unsigned int extra_len ;
   enum mq_rq_state state ;
   refcount_t ref ;
   unsigned int timeout ;
   unsigned long deadline ;
   union __anonunion_850 __anonCompField_request_175 ;
   rq_end_io_fn *end_io ;
   void *end_io_data ;
};
#line 285 
struct elevator_type;
#line 286 
struct blk_mq_debugfs_attr;
#line 287 
enum elv_merge {
    ELEVATOR_NO_MERGE = 0,
    ELEVATOR_FRONT_MERGE = 1,
    ELEVATOR_BACK_MERGE = 2,
    ELEVATOR_DISCARD_MERGE = 3
};
#line 294 
struct blk_mq_alloc_data;
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/elevator.h"
struct elevator_mq_ops {
   int (*init_sched)(struct request_queue *, struct elevator_type *) ;
   void (*exit_sched)(struct elevator_queue *) ;
   int (*init_hctx)(struct blk_mq_hw_ctx *, unsigned int ) ;
   void (*exit_hctx)(struct blk_mq_hw_ctx *, unsigned int ) ;
   void (*depth_updated)(struct blk_mq_hw_ctx *) ;
   bool (*allow_merge)(struct request_queue *, struct request *, struct bio *) ;
   bool (*bio_merge)(struct blk_mq_hw_ctx *, struct bio *, unsigned int ) ;
   int (*request_merge)(struct request_queue *, struct request **, struct bio *) ;
   void (*request_merged)(struct request_queue *, struct request *, enum elv_merge ) ;
   void (*requests_merged)(struct request_queue *, struct request *, struct request *) ;
   void (*limit_depth)(unsigned int , struct blk_mq_alloc_data *) ;
   void (*prepare_request)(struct request *, struct bio *) ;
   void (*finish_request)(struct request *) ;
   void (*insert_requests)(struct blk_mq_hw_ctx *, struct list_head *, bool ) ;
   struct request *(*dispatch_request)(struct blk_mq_hw_ctx *) ;
   bool (*has_work)(struct blk_mq_hw_ctx *) ;
   void (*completed_request)(struct request *, u64 ) ;
   void (*requeue_request)(struct request *) ;
   struct request *(*former_request)(struct request_queue *, struct request *) ;
   struct request *(*next_request)(struct request_queue *, struct request *) ;
   void (*init_icq)(struct io_cq *) ;
   void (*exit_icq)(struct io_cq *) ;
};
#line 57  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/elevator.h"
struct elv_fs_entry {
   struct attribute attr ;
   ssize_t (*show)(struct elevator_queue *, char *) ;
   ssize_t (*store)(struct elevator_queue *, char *, size_t ) ;
};
#line 66  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/elevator.h"
struct elevator_type {
   struct kmem_cache *icq_cache ;
   struct elevator_mq_ops ops ;
   size_t icq_size ;
   size_t icq_align ;
   struct elv_fs_entry *elevator_attrs ;
   char *elevator_name ;
   char *elevator_alias ;
   unsigned int elevator_features ;
   struct module *elevator_owner ;
   struct blk_mq_debugfs_attr *queue_debugfs_attrs ;
   struct blk_mq_debugfs_attr *hctx_debugfs_attrs ;
   char icq_cache_name[22U] ;
   struct list_head list ;
};
#line 101  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/elevator.h"
struct elevator_queue {
   struct elevator_type *type ;
   void *elevator_data ;
   struct kobject kobj ;
   struct mutex sysfs_lock ;
   unsigned int registered : 1 ;
   struct hlist_head hash[64U] ;
};
#line 153  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/elevator.h"
typedef blk_qc_t make_request_fn(struct request_queue *, struct bio *);
#line 291  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
typedef int dma_drain_needed_fn(struct request *);
#line 304 
enum blk_zoned_model {
    BLK_ZONED_NONE = 0,
    BLK_ZONED_HA = 1,
    BLK_ZONED_HM = 2
};
#line 320  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
struct queue_limits {
   unsigned long bounce_pfn ;
   unsigned long seg_boundary_mask ;
   unsigned long virt_boundary_mask ;
   unsigned int max_hw_sectors ;
   unsigned int max_dev_sectors ;
   unsigned int chunk_sectors ;
   unsigned int max_sectors ;
   unsigned int max_segment_size ;
   unsigned int physical_block_size ;
   unsigned int logical_block_size ;
   unsigned int alignment_offset ;
   unsigned int io_min ;
   unsigned int io_opt ;
   unsigned int max_discard_sectors ;
   unsigned int max_hw_discard_sectors ;
   unsigned int max_write_same_sectors ;
   unsigned int max_write_zeroes_sectors ;
   unsigned int discard_granularity ;
   unsigned int discard_alignment ;
   unsigned short max_segments ;
   unsigned short max_integrity_segments ;
   unsigned short max_discard_segments ;
   unsigned char misaligned ;
   unsigned char discard_misaligned ;
   unsigned char raid_partial_stripes_expensive ;
   enum blk_zoned_model zoned ;
};
#line 394 
struct blk_mq_ops;
#line 394 
struct throtl_data;
#line 394 
struct blk_mq_tag_set;
#line 394  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
struct request_queue {
   struct request *last_merge ;
   struct elevator_queue *elevator ;
   struct blk_queue_stats *stats ;
   struct rq_qos *rq_qos ;
   make_request_fn *make_request_fn ;
   dma_drain_needed_fn *dma_drain_needed ;
   struct blk_mq_ops *mq_ops ;
   struct blk_mq_ctx *queue_ctx ;
   unsigned int queue_depth ;
   struct blk_mq_hw_ctx **queue_hw_ctx ;
   unsigned int nr_hw_queues ;
   struct backing_dev_info *backing_dev_info ;
   void *queuedata ;
   unsigned long queue_flags ;
   atomic_t pm_only ;
   int id ;
   gfp_t bounce_gfp ;
   spinlock_t queue_lock ;
   struct kobject kobj ;
   struct kobject *mq_kobj ;
   struct blk_integrity integrity ;
   struct device *dev ;
   int rpm_status ;
   unsigned int nr_pending ;
   unsigned long nr_requests ;
   unsigned int dma_drain_size ;
   void *dma_drain_buffer ;
   unsigned int dma_pad_mask ;
   unsigned int dma_alignment ;
   unsigned int rq_timeout ;
   int poll_nsec ;
   struct blk_stat_callback *poll_cb ;
   struct blk_rq_stat poll_stat[16U] ;
   struct timer_list timeout ;
   struct work_struct timeout_work ;
   struct list_head icq_list ;
   unsigned long blkcg_pols[1U] ;
   struct blkcg_gq *root_blkg ;
   struct list_head blkg_list ;
   struct queue_limits limits ;
   unsigned int required_elevator_features ;
   unsigned int nr_zones ;
   unsigned long *conv_zones_bitmap ;
   unsigned long *seq_zones_wlock ;
   unsigned int sg_timeout ;
   unsigned int sg_reserved_size ;
   int node ;
   struct blk_trace *blk_trace ;
   struct mutex blk_trace_mutex ;
   struct blk_flush_queue *fq ;
   struct list_head requeue_list ;
   spinlock_t requeue_lock ;
   struct delayed_work requeue_work ;
   struct mutex sysfs_lock ;
   struct mutex sysfs_dir_lock ;
   struct list_head unused_hctx_list ;
   spinlock_t unused_hctx_lock ;
   int mq_freeze_depth ;
   struct bsg_class_device bsg_dev ;
   struct throtl_data *td ;
   struct callback_head callback_head ;
   wait_queue_head_t mq_freeze_wq ;
   struct mutex mq_freeze_lock ;
   struct percpu_ref q_usage_counter ;
   struct blk_mq_tag_set *tag_set ;
   struct list_head tag_set_list ;
   struct bio_set bio_split ;
   struct dentry *debugfs_dir ;
   struct dentry *sched_debugfs_dir ;
   struct dentry *rqos_debugfs_dir ;
   bool mq_sysfs_init_done ;
   size_t cmd_size ;
   struct work_struct release_work ;
   u64 write_hints[5U] ;
};
#line 1160  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
struct blk_plug {
   struct list_head mq_list ;
   struct list_head cb_list ;
   unsigned short rq_count ;
   bool multiple_queues ;
};
#line 1514  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
struct blk_integrity_iter {
   void *prot_buf ;
   void *data_buf ;
   sector_t seed ;
   unsigned int data_size ;
   unsigned short interval ;
   char *disk_name ;
};
#line 1522  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
typedef blk_status_t integrity_processing_fn(struct blk_integrity_iter *);
#line 1524  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
typedef void integrity_prepare_fn(struct request *);
#line 1525  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
typedef void integrity_complete_fn(struct request *, unsigned int );
#line 1527  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
struct blk_integrity_profile {
   integrity_processing_fn *generate_fn ;
   integrity_processing_fn *verify_fn ;
   integrity_prepare_fn *prepare_fn ;
   integrity_complete_fn *complete_fn ;
   char *name ;
};
#line 1693  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
struct block_device_operations {
   int (*open)(struct block_device *, fmode_t ) ;
   void (*release)(struct gendisk *, fmode_t ) ;
   int (*rw_page)(struct block_device *, sector_t , struct page *, unsigned int ) ;
   int (*ioctl)(struct block_device *, fmode_t , unsigned int , unsigned long ) ;
   int (*compat_ioctl)(struct block_device *, fmode_t , unsigned int , unsigned long ) ;
   unsigned int (*check_events)(struct gendisk *, unsigned int ) ;
   int (*media_changed)(struct gendisk *) ;
   void (*unlock_native_capacity)(struct gendisk *) ;
   int (*revalidate_disk)(struct gendisk *) ;
   int (*getgeo)(struct block_device *, struct hd_geometry *) ;
   void (*swap_slot_free_notify)(struct block_device *, unsigned long ) ;
   int (*report_zones)(struct gendisk *, sector_t , unsigned int , int (*)(struct blk_zone *, unsigned int , void *), void *) ;
   struct module *owner ;
   struct pr_ops *pr_ops ;
};
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk-cgroup.h"
struct blkcg_policy_data;
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk-cgroup.h"
struct blkcg {
   struct cgroup_subsys_state css ;
   spinlock_t lock ;
   struct xarray blkg_tree ;
   struct blkcg_gq *blkg_hint ;
   struct hlist_head blkg_list ;
   struct blkcg_policy_data *cpd[5U] ;
   struct list_head all_blkcgs_node ;
   struct list_head cgwb_list ;
   refcount_t cgwb_refcnt ;
};
#line 63  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk-cgroup.h"
struct blkg_iostat {
   u64 bytes[3U] ;
   u64 ios[3U] ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk-cgroup.h"
struct blkg_iostat_set {
   struct u64_stats_sync sync ;
   struct blkg_iostat cur ;
   struct blkg_iostat last ;
};
#line 85  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk-cgroup.h"
struct blkg_policy_data {
   struct blkcg_gq *blkg ;
   int plid ;
};
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk-cgroup.h"
struct blkcg_policy_data {
   struct blkcg *blkcg ;
   int plid ;
};
#line 105  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk-cgroup.h"
struct blkcg_gq {
   struct request_queue *q ;
   struct list_head q_node ;
   struct hlist_node blkcg_node ;
   struct blkcg *blkcg ;
   struct bdi_writeback_congested *wb_congested ;
   struct blkcg_gq *parent ;
   struct percpu_ref refcnt ;
   bool online ;
   struct blkg_iostat_set *iostat_cpu ;
   struct blkg_iostat_set iostat ;
   struct blkg_policy_data *pd[5U] ;
   spinlock_t async_bio_lock ;
   struct bio_list async_bios ;
   struct work_struct async_bio_work ;
   atomic_t use_delay ;
   atomic64_t delay_nsec ;
   atomic64_t delay_start ;
   u64 last_delay ;
   int last_use ;
   struct callback_head callback_head ;
};
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/writeback.h"
enum writeback_sync_modes {
    WB_SYNC_NONE = 0,
    WB_SYNC_ALL = 1
};
#line 51  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/writeback.h"
struct writeback_control {
   long nr_to_write ;
   long pages_skipped ;
   loff_t range_start ;
   loff_t range_end ;
   enum writeback_sync_modes sync_mode ;
   unsigned int for_kupdate : 1 ;
   unsigned int for_background : 1 ;
   unsigned int tagged_writepages : 1 ;
   unsigned int for_reclaim : 1 ;
   unsigned int range_cyclic : 1 ;
   unsigned int for_sync : 1 ;
   unsigned int no_cgroup_owner : 1 ;
   unsigned int punt_to_cgroup : 1 ;
   struct bdi_writeback *wb ;
   struct inode *inode ;
   int wb_id ;
   int wb_lcand_id ;
   int wb_tcand_id ;
   size_t wb_bytes ;
   size_t wb_lcand_bytes ;
   size_t wb_tcand_bytes ;
};
#line 129  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/writeback.h"
struct wb_domain {
   spinlock_t lock ;
   struct fprop_global completions ;
   struct timer_list period_timer ;
   unsigned long period_time ;
   unsigned long dirty_limit_tstamp ;
   unsigned long dirty_limit ;
};
#line 69  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct mem_cgroup_id {
   int id ;
   refcount_t ref ;
};
#line 86  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct memcg_vmstats_percpu {
   long stat[38U] ;
   unsigned long events[91U] ;
   unsigned long nr_page_events ;
   unsigned long targets[2U] ;
};
#line 93  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct mem_cgroup_reclaim_iter {
   struct mem_cgroup *position ;
   unsigned int generation ;
};
#line 99  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct lruvec_stat {
   long count[32U] ;
};
#line 107  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct memcg_shrinker_map {
   struct callback_head rcu ;
   unsigned long map[0U] ;
};
#line 115  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct mem_cgroup_per_node {
   struct lruvec lruvec ;
   struct lruvec_stat *lruvec_stat_local ;
   struct lruvec_stat *lruvec_stat_cpu ;
   atomic_long_t lruvec_stat[32U] ;
   unsigned long lru_zone_size[5U][5U] ;
   struct mem_cgroup_reclaim_iter iter ;
   struct memcg_shrinker_map *shrinker_map ;
   struct rb_node tree_node ;
   unsigned long usage_in_excess ;
   bool on_tree ;
   struct mem_cgroup *memcg ;
};
#line 139  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct mem_cgroup_threshold {
   struct eventfd_ctx *eventfd ;
   unsigned long threshold ;
};
#line 145  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct mem_cgroup_threshold_ary {
   int current_threshold ;
   unsigned int size ;
   struct mem_cgroup_threshold entries[0U] ;
};
#line 154  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct mem_cgroup_thresholds {
   struct mem_cgroup_threshold_ary *primary ;
   struct mem_cgroup_threshold_ary *spare ;
};
#line 164 
enum memcg_kmem_state {
    KMEM_NONE = 0,
    KMEM_ALLOCATED = 1,
    KMEM_ONLINE = 2
};
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct memcg_padding {
   char x[0U] ;
} __attribute__((__aligned__(4096)));
#line 190  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct memcg_cgwb_frn {
   u64 bdi_id ;
   int memcg_id ;
   u64 at ;
   struct wb_completion done ;
};
#line 203  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct mem_cgroup {
   struct cgroup_subsys_state css ;
   struct mem_cgroup_id id ;
   struct page_counter memory ;
   struct page_counter swap ;
   struct page_counter memsw ;
   struct page_counter kmem ;
   struct page_counter tcpmem ;
   unsigned long high ;
   struct work_struct high_work ;
   unsigned long soft_limit ;
   struct vmpressure vmpressure ;
   bool use_hierarchy ;
   bool oom_group ;
   bool oom_lock ;
   int under_oom ;
   int swappiness ;
   int oom_kill_disable ;
   struct cgroup_file events_file ;
   struct cgroup_file events_local_file ;
   struct cgroup_file swap_events_file ;
   struct mutex thresholds_lock ;
   struct mem_cgroup_thresholds thresholds ;
   struct mem_cgroup_thresholds memsw_thresholds ;
   struct list_head oom_notify ;
   unsigned long move_charge_at_immigrate ;
   spinlock_t move_lock ;
   unsigned long move_lock_flags ;
   struct memcg_padding _pad1_ ;
   atomic_t moving_account ;
   struct task_struct *move_lock_task ;
   struct memcg_vmstats_percpu *vmstats_local ;
   struct memcg_vmstats_percpu *vmstats_percpu ;
   struct memcg_padding _pad2_ ;
   atomic_long_t vmstats[38U] ;
   atomic_long_t vmevents[91U] ;
   atomic_long_t memory_events[7U] ;
   atomic_long_t memory_events_local[7U] ;
   unsigned long socket_pressure ;
   bool tcpmem_active ;
   int tcpmem_pressure ;
   int kmemcg_id ;
   enum memcg_kmem_state kmem_state ;
   struct list_head kmem_caches ;
   struct list_head cgwb_list ;
   struct wb_domain cgwb_domain ;
   struct memcg_cgwb_frn cgwb_frn[4U] ;
   struct list_head event_list ;
   spinlock_t event_list_lock ;
   struct deferred_split deferred_split_queue ;
   struct mem_cgroup_per_node *nodeinfo[0U] ;
};
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/filter.h"
struct sock_filter {
   __u16 code ;
   __u8 jt ;
   __u8 jf ;
   __u32 k ;
};
#line 35 
struct sock_reuseport;
#line 513  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/filter.h"
struct sock_fprog_kern {
   u16 len ;
   struct sock_filter *filter ;
};
#line 526  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/filter.h"
union __anonunion_866 {
   struct sock_filter insns[0U] ;
   struct bpf_insn insnsi[0U] ;
};
#line 526  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/filter.h"
struct bpf_prog {
   u16 pages ;
   u16 jited : 1 ;
   u16 jit_requested : 1 ;
   u16 gpl_compatible : 1 ;
   u16 cb_access : 1 ;
   u16 dst_needed : 1 ;
   u16 blinded : 1 ;
   u16 is_func : 1 ;
   u16 kprobe_override : 1 ;
   u16 has_callchain_buf : 1 ;
   u16 enforce_expected_attach_type : 1 ;
   enum bpf_prog_type type ;
   enum bpf_attach_type expected_attach_type ;
   u32 len ;
   u32 jited_len ;
   u8 tag[8U] ;
   struct bpf_prog_aux *aux ;
   struct sock_fprog_kern *orig_prog ;
   unsigned int (*bpf_func)(void *, struct bpf_insn *) ;
   union __anonunion_866 __anonCompField_bpf_prog_176 ;
};
#line 554  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/filter.h"
struct sk_filter {
   refcount_t refcnt ;
   struct callback_head rcu ;
   struct bpf_prog *prog ;
};
#line 36  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/poll.h"
struct pollfd {
   int fd ;
   short events ;
   short revents ;
};
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/poll.h"
struct poll_table_struct {
   void (*_qproc)(struct file *, wait_queue_head_t *, struct poll_table_struct *) ;
   __poll_t _key ;
};
#line 70  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/neighbour.h"
struct neigh_table;
#line 70  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/neighbour.h"
struct neigh_parms {
   possible_net_t net ;
   struct net_device *dev ;
   struct list_head list ;
   int (*neigh_setup)(struct neighbour *) ;
   struct neigh_table *tbl ;
   void *sysctl_table ;
   int dead ;
   refcount_t refcnt ;
   struct callback_head callback_head ;
   int reachable_time ;
   int data[13U] ;
   unsigned long data_state[1U] ;
};
#line 112  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/neighbour.h"
struct neigh_statistics {
   unsigned long allocs ;
   unsigned long destroys ;
   unsigned long hash_grows ;
   unsigned long res_failed ;
   unsigned long lookups ;
   unsigned long hits ;
   unsigned long rcv_probes_mcast ;
   unsigned long rcv_probes_ucast ;
   unsigned long periodic_gc_runs ;
   unsigned long forced_gc_runs ;
   unsigned long unres_discards ;
   unsigned long table_fulls ;
};
#line 134 
struct neigh_ops;
#line 134  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/neighbour.h"
struct neighbour {
   struct neighbour *next ;
   struct neigh_table *tbl ;
   struct neigh_parms *parms ;
   unsigned long confirmed ;
   unsigned long updated ;
   rwlock_t lock ;
   refcount_t refcnt ;
   unsigned int arp_queue_len_bytes ;
   struct sk_buff_head arp_queue ;
   struct timer_list timer ;
   unsigned long used ;
   atomic_t probes ;
   __u8 flags ;
   __u8 nud_state ;
   __u8 type ;
   __u8 dead ;
   u8 protocol ;
   seqlock_t ha_lock ;
   unsigned char ha[32U] ;
   struct hh_cache hh ;
   int (*output)(struct neighbour *, struct sk_buff *) ;
   struct neigh_ops *ops ;
   struct list_head gc_list ;
   struct callback_head rcu ;
   struct net_device *dev ;
   u8 primary_key[0U] ;
} __attribute__((__designated_init__));
#line 163  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/neighbour.h"
struct neigh_ops {
   int family ;
   void (*solicit)(struct neighbour *, struct sk_buff *) ;
   void (*error_report)(struct neighbour *, struct sk_buff *) ;
   int (*output)(struct neighbour *, struct sk_buff *) ;
   int (*connected_output)(struct neighbour *, struct sk_buff *) ;
};
#line 171  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/neighbour.h"
struct pneigh_entry {
   struct pneigh_entry *next ;
   possible_net_t net ;
   struct net_device *dev ;
   u8 flags ;
   u8 protocol ;
   u8 key[0U] ;
};
#line 186  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/neighbour.h"
struct neigh_hash_table {
   struct neighbour **hash_buckets ;
   unsigned int hash_shift ;
   __u32 hash_rnd[4U] ;
   struct callback_head rcu ;
};
#line 194  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/neighbour.h"
struct neigh_table {
   int family ;
   unsigned int entry_size ;
   unsigned int key_len ;
   __be16 protocol ;
   __u32 (*hash)(void *, struct net_device *, __u32 *) ;
   bool (*key_eq)(struct neighbour *, void *) ;
   int (*constructor)(struct neighbour *) ;
   int (*pconstructor)(struct pneigh_entry *) ;
   void (*pdestructor)(struct pneigh_entry *) ;
   void (*proxy_redo)(struct sk_buff *) ;
   bool (*allow_add)(struct net_device *, struct netlink_ext_ack *) ;
   char *id ;
   struct neigh_parms parms ;
   struct list_head parms_list ;
   int gc_interval ;
   int gc_thresh1 ;
   int gc_thresh2 ;
   int gc_thresh3 ;
   unsigned long last_flush ;
   struct delayed_work gc_work ;
   struct timer_list proxy_timer ;
   struct sk_buff_head proxy_queue ;
   atomic_t entries ;
   atomic_t gc_entries ;
   struct list_head gc_list ;
   rwlock_t lock ;
   unsigned long last_rand ;
   struct neigh_statistics *stats ;
   struct neigh_hash_table *nht ;
   struct pneigh_entry **phash_buckets ;
};
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/dst.h"
struct lwtunnel_state;
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/dst.h"
struct dst_entry {
   struct net_device *dev ;
   struct dst_ops *ops ;
   unsigned long _metrics ;
   unsigned long expires ;
   struct xfrm_state *xfrm ;
   int (*input)(struct sk_buff *) ;
   int (*output)(struct net *, struct sock *, struct sk_buff *) ;
   unsigned short flags ;
   short obsolete ;
   unsigned short header_len ;
   unsigned short trailer_len ;
   atomic_t __refcnt ;
   int __use ;
   unsigned long lastuse ;
   struct lwtunnel_state *lwtstate ;
   struct callback_head callback_head ;
   short error ;
   short __pad ;
   __u32 tclassid ;
};
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fib_rules.h"
struct fib_rule_hdr {
   __u8 family ;
   __u8 dst_len ;
   __u8 src_len ;
   __u8 tos ;
   __u8 table ;
   __u8 res1 ;
   __u8 res2 ;
   __u8 action ;
   __u32 flags ;
};
#line 38  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fib_rules.h"
struct fib_rule_port_range {
   __u16 start ;
   __u16 end ;
};
#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/fib_notifier.h"
struct fib_notifier_ops {
   int family ;
   struct list_head list ;
   unsigned int (*fib_seq_read)(struct net *) ;
   int (*fib_dump)(struct net *, struct notifier_block *, struct netlink_ext_ack *) ;
   struct module *owner ;
   struct callback_head rcu ;
};
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/fib_rules.h"
struct fib_kuid_range {
   kuid_t start ;
   kuid_t end ;
};
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/fib_rules.h"
struct fib_rule {
   struct list_head list ;
   int iifindex ;
   int oifindex ;
   u32 mark ;
   u32 mark_mask ;
   u32 flags ;
   u32 table ;
   u8 action ;
   u8 l3mdev ;
   u8 proto ;
   u8 ip_proto ;
   u32 target ;
   __be64 tun_id ;
   struct fib_rule *ctarget ;
   struct net *fr_net ;
   refcount_t refcnt ;
   u32 pref ;
   int suppress_ifgroup ;
   int suppress_prefixlen ;
   char iifname[16U] ;
   char oifname[16U] ;
   struct fib_kuid_range uid_range ;
   struct fib_rule_port_range sport_range ;
   struct fib_rule_port_range dport_range ;
   struct callback_head rcu ;
};
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/fib_rules.h"
struct fib_lookup_arg {
   void *lookup_ptr ;
   void *lookup_data ;
   void *result ;
   struct fib_rule *rule ;
   u32 table ;
   int flags ;
};
#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/fib_rules.h"
struct fib_rules_ops {
   int family ;
   struct list_head list ;
   int rule_size ;
   int addr_size ;
   int unresolved_rules ;
   int nr_goto_rules ;
   unsigned int fib_rules_seq ;
   int (*action)(struct fib_rule *, struct flowi *, int , struct fib_lookup_arg *) ;
   bool (*suppress)(struct fib_rule *, struct fib_lookup_arg *) ;
   int (*match)(struct fib_rule *, struct flowi *, int ) ;
   int (*configure)(struct fib_rule *, struct sk_buff *, struct fib_rule_hdr *, struct nlattr **, struct netlink_ext_ack *) ;
   int (*delete)(struct fib_rule *) ;
   int (*compare)(struct fib_rule *, struct fib_rule_hdr *, struct nlattr **) ;
   int (*fill)(struct fib_rule *, struct sk_buff *, struct fib_rule_hdr *) ;
   size_t (*nlmsg_payload)(struct fib_rule *) ;
   void (*flush_cache)(struct fib_rules_ops *) ;
   int nlgroup ;
   struct nla_policy *policy ;
   struct list_head rules_list ;
   struct module *owner ;
   struct net *fro_net ;
   struct callback_head rcu ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/l3mdev.h"
struct l3mdev_ops {
   u32 (*l3mdev_fib_table)(struct net_device *) ;
   struct sk_buff *(*l3mdev_l3_rcv)(struct net_device *, struct sk_buff *, u16 ) ;
   struct sk_buff *(*l3mdev_l3_out)(struct net_device *, struct sock *, struct sk_buff *, u16 ) ;
   struct dst_entry *(*l3mdev_link_scope_lookup)(struct net_device *, struct flowi6 *) ;
};
#line 202  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/l3mdev.h"
struct __anonstruct_socket_lock_t_888 {
   spinlock_t slock ;
   int owned ;
   wait_queue_head_t wq ;
   struct lockdep_map dep_map ;
};
#line 202  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/l3mdev.h"
typedef struct __anonstruct_socket_lock_t_888 socket_lock_t;
#line 108  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
struct proto;
#line 109  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
typedef __u32 __portpair;
#line 114  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
typedef __u64 __addrpair;
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
struct __anonstruct_890 {
   __be32 skc_daddr ;
   __be32 skc_rcv_saddr ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_889 {
   __addrpair skc_addrpair ;
   struct __anonstruct_890 __anonCompField___anonunion_889_178 ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_891 {
   unsigned int skc_hash ;
   __u16 skc_u16hashes[2U] ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
struct __anonstruct_893 {
   __be16 skc_dport ;
   __u16 skc_num ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_892 {
   __portpair skc_portpair ;
   struct __anonstruct_893 __anonCompField___anonunion_892_181 ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_894 {
   struct hlist_node skc_bind_node ;
   struct hlist_node skc_portaddr_node ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_895 {
   unsigned long skc_flags ;
   struct sock *skc_listener ;
   struct inet_timewait_death_row *skc_tw_dr ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_896 {
   struct hlist_node skc_node ;
   struct hlist_nulls_node skc_nulls_node ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_897 {
   int skc_incoming_cpu ;
   u32 skc_rcv_wnd ;
   u32 skc_tw_rcv_nxt ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_898 {
   u32 skc_rxhash ;
   u32 skc_window_clamp ;
   u32 skc_tw_snd_nxt ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
struct sock_common {
   union __anonunion_889 __anonCompField_sock_common_179 ;
   union __anonunion_891 __anonCompField_sock_common_180 ;
   union __anonunion_892 __anonCompField_sock_common_182 ;
   unsigned short skc_family ;
   unsigned char skc_state ;
   unsigned char skc_reuse : 4 ;
   unsigned char skc_reuseport : 1 ;
   unsigned char skc_ipv6only : 1 ;
   unsigned char skc_net_refcnt : 1 ;
   int skc_bound_dev_if ;
   union __anonunion_894 __anonCompField_sock_common_183 ;
   struct proto *skc_prot ;
   possible_net_t skc_net ;
   struct in6_addr skc_v6_daddr ;
   struct in6_addr skc_v6_rcv_saddr ;
   atomic64_t skc_cookie ;
   union __anonunion_895 __anonCompField_sock_common_184 ;
   int skc_dontcopy_begin[0U] ;
   union __anonunion_896 __anonCompField_sock_common_185 ;
   unsigned short skc_tx_queue_mapping ;
   unsigned short skc_rx_queue_mapping ;
   union __anonunion_897 __anonCompField_sock_common_186 ;
   refcount_t skc_refcnt ;
   int skc_dontcopy_end[0U] ;
   union __anonunion_898 __anonCompField_sock_common_187 ;
};
#line 231 
struct bpf_sk_storage;
#line 323  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
struct __anonstruct_sk_backlog_899 {
   atomic_t rmem_alloc ;
   int len ;
   struct sk_buff *head ;
   struct sk_buff *tail ;
};
#line 323  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_900 {
   struct socket_wq *sk_wq ;
   struct socket_wq *sk_wq_raw ;
};
#line 323  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_901 {
   struct sk_buff *sk_send_head ;
   struct rb_root tcp_rtx_queue ;
};
#line 323  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
struct sock {
   struct sock_common __sk_common ;
   socket_lock_t sk_lock ;
   atomic_t sk_drops ;
   int sk_rcvlowat ;
   struct sk_buff_head sk_error_queue ;
   struct sk_buff *sk_rx_skb_cache ;
   struct sk_buff_head sk_receive_queue ;
   struct __anonstruct_sk_backlog_899 sk_backlog ;
   int sk_forward_alloc ;
   unsigned int sk_ll_usec ;
   unsigned int sk_napi_id ;
   int sk_rcvbuf ;
   struct sk_filter *sk_filter ;
   union __anonunion_900 __anonCompField_sock_188 ;
   struct xfrm_policy *sk_policy[2U] ;
   struct dst_entry *sk_rx_dst ;
   struct dst_entry *sk_dst_cache ;
   atomic_t sk_omem_alloc ;
   int sk_sndbuf ;
   int sk_wmem_queued ;
   refcount_t sk_wmem_alloc ;
   unsigned long sk_tsq_flags ;
   union __anonunion_901 __anonCompField_sock_189 ;
   struct sk_buff *sk_tx_skb_cache ;
   struct sk_buff_head sk_write_queue ;
   __s32 sk_peek_off ;
   int sk_write_pending ;
   __u32 sk_dst_pending_confirm ;
   u32 sk_pacing_status ;
   long sk_sndtimeo ;
   struct timer_list sk_timer ;
   __u32 sk_priority ;
   __u32 sk_mark ;
   unsigned long sk_pacing_rate ;
   unsigned long sk_max_pacing_rate ;
   struct page_frag sk_frag ;
   netdev_features_t sk_route_caps ;
   netdev_features_t sk_route_nocaps ;
   netdev_features_t sk_route_forced_caps ;
   int sk_gso_type ;
   unsigned int sk_gso_max_size ;
   gfp_t sk_allocation ;
   __u32 sk_txhash ;
   unsigned int __sk_flags_offset[0U] ;
   unsigned int sk_padding : 1 ;
   unsigned int sk_kern_sock : 1 ;
   unsigned int sk_no_check_tx : 1 ;
   unsigned int sk_no_check_rx : 1 ;
   unsigned int sk_userlocks : 4 ;
   unsigned int sk_protocol : 8 ;
   unsigned int sk_type : 16 ;
   u16 sk_gso_max_segs ;
   u8 sk_pacing_shift ;
   unsigned long sk_lingertime ;
   struct proto *sk_prot_creator ;
   rwlock_t sk_callback_lock ;
   int sk_err ;
   int sk_err_soft ;
   u32 sk_ack_backlog ;
   u32 sk_max_ack_backlog ;
   kuid_t sk_uid ;
   struct pid *sk_peer_pid ;
   struct cred *sk_peer_cred ;
   long sk_rcvtimeo ;
   ktime_t sk_stamp ;
   u16 sk_tsflags ;
   u8 sk_shutdown ;
   u32 sk_tskey ;
   atomic_t sk_zckey ;
   u8 sk_clockid ;
   u8 sk_txtime_deadline_mode : 1 ;
   u8 sk_txtime_report_errors : 1 ;
   u8 sk_txtime_unused : 6 ;
   struct socket *sk_socket ;
   void *sk_user_data ;
   void *sk_security ;
   struct sock_cgroup_data sk_cgrp_data ;
   struct mem_cgroup *sk_memcg ;
   void (*sk_state_change)(struct sock *) ;
   void (*sk_data_ready)(struct sock *) ;
   void (*sk_write_space)(struct sock *) ;
   void (*sk_error_report)(struct sock *) ;
   int (*sk_backlog_rcv)(struct sock *, struct sk_buff *) ;
   struct sk_buff *(*sk_validate_xmit_skb)(struct sock *, struct net_device *, struct sk_buff *) ;
   void (*sk_destruct)(struct sock *) ;
   struct sock_reuseport *sk_reuseport_cb ;
   struct bpf_sk_storage *sk_bpf_storage ;
   struct callback_head sk_rcu ;
};
#line 1048 
struct request_sock_ops;
#line 1049 
struct timewait_sock_ops;
#line 1050 
struct raw_hashinfo;
#line 1051 
struct smc_hashinfo;
#line 1071 
struct udp_table;
#line 1071  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_h_936 {
   struct inet_hashinfo *hashinfo ;
   struct udp_table *udp_table ;
   struct raw_hashinfo *raw_hash ;
   struct smc_hashinfo *smc_hash ;
};
#line 1071  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
struct proto {
   void (*close)(struct sock *, long ) ;
   int (*pre_connect)(struct sock *, struct sockaddr *, int ) ;
   int (*connect)(struct sock *, struct sockaddr *, int ) ;
   int (*disconnect)(struct sock *, int ) ;
   struct sock *(*accept)(struct sock *, int , int *, bool ) ;
   int (*ioctl)(struct sock *, int , unsigned long ) ;
   int (*init)(struct sock *) ;
   void (*destroy)(struct sock *) ;
   void (*shutdown)(struct sock *, int ) ;
   int (*setsockopt)(struct sock *, int , int , char *, unsigned int ) ;
   int (*getsockopt)(struct sock *, int , int , char *, int *) ;
   void (*keepalive)(struct sock *, int ) ;
   int (*compat_setsockopt)(struct sock *, int , int , char *, unsigned int ) ;
   int (*compat_getsockopt)(struct sock *, int , int , char *, int *) ;
   int (*compat_ioctl)(struct sock *, unsigned int , unsigned long ) ;
   int (*sendmsg)(struct sock *, struct msghdr *, size_t ) ;
   int (*recvmsg)(struct sock *, struct msghdr *, size_t , int , int , int *) ;
   int (*sendpage)(struct sock *, struct page *, int , size_t , int ) ;
   int (*bind)(struct sock *, struct sockaddr *, int ) ;
   int (*backlog_rcv)(struct sock *, struct sk_buff *) ;
   void (*release_cb)(struct sock *) ;
   int (*hash)(struct sock *) ;
   void (*unhash)(struct sock *) ;
   void (*rehash)(struct sock *) ;
   int (*get_port)(struct sock *, unsigned short ) ;
   unsigned int inuse_idx ;
   bool (*stream_memory_free)(struct sock *, int ) ;
   bool (*stream_memory_read)(struct sock *) ;
   void (*enter_memory_pressure)(struct sock *) ;
   void (*leave_memory_pressure)(struct sock *) ;
   atomic_long_t *memory_allocated ;
   struct percpu_counter *sockets_allocated ;
   unsigned long *memory_pressure ;
   long *sysctl_mem ;
   int *sysctl_wmem ;
   int *sysctl_rmem ;
   u32 sysctl_wmem_offset ;
   u32 sysctl_rmem_offset ;
   int max_header ;
   bool no_autobind ;
   struct kmem_cache *slab ;
   unsigned int obj_size ;
   slab_flags_t slab_flags ;
   unsigned int useroffset ;
   unsigned int usersize ;
   struct percpu_counter *orphan_count ;
   struct request_sock_ops *rsk_prot ;
   struct timewait_sock_ops *twsk_prot ;
   union __anonunion_h_936 h ;
   struct module *owner ;
   char name[32U] ;
   struct list_head node ;
   int (*diag_destroy)(struct sock *, int ) ;
} __attribute__((__designated_init__));
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/request_sock.h"
struct request_sock_ops {
   int family ;
   unsigned int obj_size ;
   struct kmem_cache *slab ;
   char *slab_name ;
   int (*rtx_syn_ack)(struct sock *, struct request_sock *) ;
   void (*send_ack)(struct sock *, struct sk_buff *, struct request_sock *) ;
   void (*send_reset)(struct sock *, struct sk_buff *) ;
   void (*destructor)(struct request_sock *) ;
   void (*syn_ack_timeout)(struct request_sock *) ;
};
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/request_sock.h"
struct request_sock {
   struct sock_common __req_common ;
   struct request_sock *dl_next ;
   u16 mss ;
   u8 num_retrans ;
   u8 cookie_ts : 1 ;
   u8 num_timeout : 7 ;
   u32 ts_recent ;
   struct timer_list rsk_timer ;
   struct request_sock_ops *rsk_ops ;
   struct sock *sk ;
   u32 *saved_syn ;
   u32 secid ;
   u32 peer_secid ;
};
#line 63  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ipv6.h"
struct ipv6_stable_secret {
   bool initialized ;
   struct in6_addr secret ;
};
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ipv6.h"
struct ipv6_devconf {
   __s32 forwarding ;
   __s32 hop_limit ;
   __s32 mtu6 ;
   __s32 accept_ra ;
   __s32 accept_redirects ;
   __s32 autoconf ;
   __s32 dad_transmits ;
   __s32 rtr_solicits ;
   __s32 rtr_solicit_interval ;
   __s32 rtr_solicit_max_interval ;
   __s32 rtr_solicit_delay ;
   __s32 force_mld_version ;
   __s32 mldv1_unsolicited_report_interval ;
   __s32 mldv2_unsolicited_report_interval ;
   __s32 use_tempaddr ;
   __s32 temp_valid_lft ;
   __s32 temp_prefered_lft ;
   __s32 regen_max_retry ;
   __s32 max_desync_factor ;
   __s32 max_addresses ;
   __s32 accept_ra_defrtr ;
   __s32 accept_ra_min_hop_limit ;
   __s32 accept_ra_pinfo ;
   __s32 ignore_routes_with_linkdown ;
   __s32 accept_ra_rtr_pref ;
   __s32 rtr_probe_interval ;
   __s32 accept_ra_rt_info_min_plen ;
   __s32 accept_ra_rt_info_max_plen ;
   __s32 proxy_ndp ;
   __s32 accept_source_route ;
   __s32 accept_ra_from_local ;
   __s32 optimistic_dad ;
   __s32 use_optimistic ;
   __s32 mc_forwarding ;
   __s32 disable_ipv6 ;
   __s32 drop_unicast_in_l2_multicast ;
   __s32 accept_dad ;
   __s32 force_tllao ;
   __s32 ndisc_notify ;
   __s32 suppress_frag_ndisc ;
   __s32 accept_ra_mtu ;
   __s32 drop_unsolicited_na ;
   struct ipv6_stable_secret stable_secret ;
   __s32 use_oif_addrs_only ;
   __s32 keep_addr_on_down ;
   __s32 seg6_enabled ;
   __s32 seg6_require_hmac ;
   __u32 enhanced_dad ;
   __u32 addr_gen_mode ;
   __s32 disable_policy ;
   __s32 ndisc_tclass ;
   struct ctl_table_header *sysctl_header ;
};
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/timewait_sock.h"
struct timewait_sock_ops {
   struct kmem_cache *twsk_slab ;
   char *twsk_slab_name ;
   unsigned int twsk_obj_size ;
   int (*twsk_unique)(struct sock *, struct sock *, void *) ;
   void (*twsk_destructor)(struct sock *) ;
};
#line 173  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_tx_queue_params {
   u16 txop ;
   u16 cw_min ;
   u16 cw_max ;
   u8 aifs ;
   bool acm ;
   bool uapsd ;
   bool mu_edca ;
   struct ieee80211_he_mu_edca_param_ac_rec mu_edca_param_rec ;
};
#line 225  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_chanctx_conf {
   struct cfg80211_chan_def def ;
   struct cfg80211_chan_def min_def ;
   u8 rx_chains_static ;
   u8 rx_chains_dynamic ;
   bool radar_enabled ;
   u8 drv_priv[0U] ;
};
#line 267 
struct ieee80211_vif;
#line 440 
struct ieee80211_sta;
#line 471  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_mu_group_data {
   u8 membership[8U] ;
   u8 position[16U] ;
};
#line 484  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_ftm_responder_params {
   u8 *lci ;
   u8 *civicloc ;
   size_t lci_len ;
   size_t civicloc_len ;
};
#line 608  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_bss_conf {
   u8 *bssid ;
   u8 bss_color ;
   u8 htc_trig_based_pkt_ext ;
   bool multi_sta_back_32bit ;
   bool uora_exists ;
   bool ack_enabled ;
   u8 uora_ocw_range ;
   u16 frame_time_rts_th ;
   bool he_support ;
   bool twt_requester ;
   bool twt_responder ;
   bool assoc ;
   bool ibss_joined ;
   bool ibss_creator ;
   u16 aid ;
   bool use_cts_prot ;
   bool use_short_preamble ;
   bool use_short_slot ;
   bool enable_beacon ;
   u8 dtim_period ;
   u16 beacon_int ;
   u16 assoc_capability ;
   u64 sync_tsf ;
   u32 sync_device_ts ;
   u8 sync_dtim_count ;
   u32 basic_rates ;
   struct ieee80211_rate *beacon_rate ;
   int mcast_rate[4U] ;
   u16 ht_operation_mode ;
   s32 cqm_rssi_thold ;
   u32 cqm_rssi_hyst ;
   s32 cqm_rssi_low ;
   s32 cqm_rssi_high ;
   struct cfg80211_chan_def chandef ;
   struct ieee80211_mu_group_data mu_group ;
   __be32 arp_addr_list[4U] ;
   int arp_addr_cnt ;
   bool qos ;
   bool idle ;
   bool ps ;
   u8 ssid[32U] ;
   size_t ssid_len ;
   bool hidden_ssid ;
   int txpower ;
   enum nl80211_tx_power_setting txpower_type ;
   struct ieee80211_p2p_noa_attr p2p_noa_attr ;
   bool allow_p2p_go_ps ;
   u16 max_idle_period ;
   bool protected_keep_alive ;
   bool ftm_responder ;
   struct ieee80211_ftm_responder_params *ftmr_params ;
   bool nontransmitted ;
   u8 transmitter_bssid[6U] ;
   u8 bssid_index ;
   u8 bssid_indicator ;
   bool ema_ap ;
   u8 profile_periodicity ;
   struct ieee80211_he_operation he_operation ;
   struct ieee80211_he_obss_pd he_obss_pd ;
};
#line 1430 
enum ieee80211_smps_mode {
    IEEE80211_SMPS_AUTOMATIC = 0,
    IEEE80211_SMPS_OFF = 1,
    IEEE80211_SMPS_STATIC = 2,
    IEEE80211_SMPS_DYNAMIC = 3,
    IEEE80211_SMPS_NUM_MODES = 4
};
#line 1522  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_conf {
   u32 flags ;
   int power_level ;
   int dynamic_ps_timeout ;
   u16 listen_interval ;
   u8 ps_dtim_period ;
   u8 long_frame_max_tx_count ;
   u8 short_frame_max_tx_count ;
   struct cfg80211_chan_def chandef ;
   bool radar_enabled ;
   enum ieee80211_smps_mode smps_mode ;
};
#line 1627 
struct ieee80211_txq;
#line 1627  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_vif {
   enum nl80211_iftype type ;
   struct ieee80211_bss_conf bss_conf ;
   u8 addr[6U] ;
   bool p2p ;
   bool csa_active ;
   bool mu_mimo_owner ;
   u8 cab_queue ;
   u8 hw_queue[4U] ;
   struct ieee80211_txq *txq ;
   struct ieee80211_chanctx_conf *chanctx_conf ;
   u32 driver_flags ;
   struct dentry *debugfs_dir ;
   unsigned int probe_req_reg ;
   bool txqs_stopped[4U] ;
   u8 drv_priv[0U] ;
};
#line 1846  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_cipher_scheme {
   u32 cipher ;
   u16 iftype ;
   u8 hdr_len ;
   u8 pn_len ;
   u8 pn_off ;
   u8 key_idx_off ;
   u8 key_idx_mask ;
   u8 key_idx_shift ;
   u8 mic_len ;
};
#line 1870 
enum ieee80211_sta_rx_bandwidth {
    IEEE80211_STA_RX_BW_20 = 0,
    IEEE80211_STA_RX_BW_40 = 1,
    IEEE80211_STA_RX_BW_80 = 2,
    IEEE80211_STA_RX_BW_160 = 3
};
#line 1915  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct __anonstruct_rate_1023 {
   s8 idx ;
   u8 count ;
   u8 count_cts ;
   u8 count_rts ;
   u16 flags ;
};
#line 1915  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_sta_rates {
   struct callback_head callback_head ;
   struct __anonstruct_rate_1023 rate[4U] ;
};
#line 1939  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_sta_txpwr {
   s16 power ;
   enum nl80211_tx_power_setting type ;
};
#line 1991  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_sta {
   u32 supp_rates[4U] ;
   u8 addr[6U] ;
   u16 aid ;
   struct ieee80211_sta_ht_cap ht_cap ;
   struct ieee80211_sta_vht_cap vht_cap ;
   struct ieee80211_sta_he_cap he_cap ;
   u16 max_rx_aggregation_subframes ;
   bool wme ;
   u8 uapsd_queues ;
   u8 max_sp ;
   u8 rx_nss ;
   enum ieee80211_sta_rx_bandwidth bandwidth ;
   enum ieee80211_smps_mode smps_mode ;
   struct ieee80211_sta_rates *rates ;
   bool tdls ;
   bool tdls_initiator ;
   bool mfp ;
   u8 max_amsdu_subframes ;
   u16 max_amsdu_len ;
   bool support_p2p_ps ;
   u16 max_rc_amsdu_len ;
   u16 max_tid_amsdu_len[16U] ;
   struct ieee80211_sta_txpwr txpwr ;
   struct ieee80211_txq *txq[17U] ;
   u8 drv_priv[0U] ;
};
#line 2074  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_txq {
   struct ieee80211_vif *vif ;
   struct ieee80211_sta *sta ;
   u8 tid ;
   u8 ac ;
   u8 drv_priv[0U] ;
};
#line 2487  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct __anonstruct_radiotap_timestamp_1024 {
   int units_pos ;
   s16 accuracy ;
};
#line 2487  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_hw {
   struct ieee80211_conf conf ;
   struct wiphy *wiphy ;
   char *rate_control_algorithm ;
   void *priv ;
   unsigned long flags[1U] ;
   unsigned int extra_tx_headroom ;
   unsigned int extra_beacon_tailroom ;
   int vif_data_size ;
   int sta_data_size ;
   int chanctx_data_size ;
   int txq_data_size ;
   u16 queues ;
   u16 max_listen_interval ;
   s8 max_signal ;
   u8 max_rates ;
   u8 max_report_rates ;
   u8 max_rate_tries ;
   u16 max_rx_aggregation_subframes ;
   u16 max_tx_aggregation_subframes ;
   u8 max_tx_fragments ;
   u8 offchannel_tx_hw_queue ;
   u8 radiotap_mcs_details ;
   u16 radiotap_vht_details ;
   struct __anonstruct_radiotap_timestamp_1024 radiotap_timestamp ;
   netdev_features_t netdev_features ;
   u8 uapsd_queues ;
   u8 uapsd_max_sp_len ;
   u8 n_cipher_schemes ;
   struct ieee80211_cipher_scheme *cipher_schemes ;
   u8 max_nan_de_entries ;
   u8 tx_sk_pacing_shift ;
   u8 weight_multiplier ;
   u32 max_mtu ;
};
#line 39  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/hw_random.h"
struct hwrng {
   char *name ;
   int (*init)(struct hwrng *) ;
   void (*cleanup)(struct hwrng *) ;
   int (*data_present)(struct hwrng *, int ) ;
   int (*data_read)(struct hwrng *, u32 *) ;
   int (*read)(struct hwrng *, void *, size_t , bool ) ;
   unsigned long priv ;
   unsigned short quality ;
   struct list_head list ;
   struct kref ref ;
   struct completion cleanup_done ;
};
#line 65 
struct led_pattern;
#line 66 
enum led_brightness {
    LED_OFF = 0,
    LED_ON = 1,
    LED_HALF = 127,
    LED_FULL = 255
};
#line 58  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/leds.h"
struct led_trigger;
#line 58  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/leds.h"
struct led_classdev {
   char *name ;
   enum led_brightness brightness ;
   enum led_brightness max_brightness ;
   int flags ;
   unsigned long work_flags ;
   void (*brightness_set)(struct led_classdev *, enum led_brightness ) ;
   int (*brightness_set_blocking)(struct led_classdev *, enum led_brightness ) ;
   enum led_brightness (*brightness_get)(struct led_classdev *) ;
   int (*blink_set)(struct led_classdev *, unsigned long *, unsigned long *) ;
   int (*pattern_set)(struct led_classdev *, struct led_pattern *, u32 , int ) ;
   int (*pattern_clear)(struct led_classdev *) ;
   struct device *dev ;
   struct attribute_group **groups ;
   struct list_head node ;
   char *default_trigger ;
   unsigned long blink_delay_on ;
   unsigned long blink_delay_off ;
   struct timer_list blink_timer ;
   int blink_brightness ;
   int new_blink_brightness ;
   void (*flash_resume)(struct led_classdev *) ;
   struct work_struct set_brightness_work ;
   int delayed_set_value ;
   struct rw_semaphore trigger_lock ;
   struct led_trigger *trigger ;
   struct list_head trig_list ;
   void *trigger_data ;
   bool activated ;
   int brightness_hw_changed ;
   struct kernfs_node *brightness_hw_changed_kn ;
   struct mutex led_access ;
};
#line 335  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/leds.h"
struct led_trigger {
   char *name ;
   int (*activate)(struct led_classdev *) ;
   void (*deactivate)(struct led_classdev *) ;
   rwlock_t leddev_list_lock ;
   struct list_head led_cdevs ;
   struct list_head next_trig ;
   struct attribute_group **groups ;
};
#line 562  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/leds.h"
struct led_pattern {
   u32 delta_t ;
   int brightness ;
};
#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/input.h"
struct input_id {
   __u16 bustype ;
   __u16 vendor ;
   __u16 product ;
   __u16 version ;
};
#line 90  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/input.h"
struct input_absinfo {
   __s32 value ;
   __s32 minimum ;
   __s32 maximum ;
   __s32 fuzz ;
   __s32 flat ;
   __s32 resolution ;
};
#line 114  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/input.h"
struct input_keymap_entry {
   __u8 flags ;
   __u8 len ;
   __u16 index ;
   __u32 keycode ;
   __u8 scancode[32U] ;
};
#line 306  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/input.h"
struct ff_replay {
   __u16 length ;
   __u16 delay ;
};
#line 316  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/input.h"
struct ff_trigger {
   __u16 button ;
   __u16 interval ;
};
#line 333  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/input.h"
struct ff_envelope {
   __u16 attack_length ;
   __u16 attack_level ;
   __u16 fade_length ;
   __u16 fade_level ;
};
#line 345  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/input.h"
struct ff_constant_effect {
   __s16 level ;
   struct ff_envelope envelope ;
};
#line 356  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/input.h"
struct ff_ramp_effect {
   __s16 start_level ;
   __s16 end_level ;
   struct ff_envelope envelope ;
};
#line 372  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/input.h"
struct ff_condition_effect {
   __u16 right_saturation ;
   __u16 left_saturation ;
   __s16 right_coeff ;
   __s16 left_coeff ;
   __u16 deadband ;
   __s16 center ;
};
#line 401  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/input.h"
struct ff_periodic_effect {
   __u16 waveform ;
   __u16 period ;
   __s16 magnitude ;
   __s16 offset ;
   __u16 phase ;
   struct ff_envelope envelope ;
   __u32 custom_len ;
   __s16 *custom_data ;
};
#line 422  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/input.h"
struct ff_rumble_effect {
   __u16 strong_magnitude ;
   __u16 weak_magnitude ;
};
#line 450  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/input.h"
union __anonunion_u_1026 {
   struct ff_constant_effect constant ;
   struct ff_ramp_effect ramp ;
   struct ff_periodic_effect periodic ;
   struct ff_condition_effect condition[2U] ;
   struct ff_rumble_effect rumble ;
};
#line 450  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/input.h"
struct ff_effect {
   __u16 type ;
   __s16 id ;
   __u16 direction ;
   struct ff_trigger trigger ;
   struct ff_replay replay ;
   union __anonunion_u_1026 u ;
};
#line 465 
struct input_dev_poller;
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/input.h"
struct input_value {
   __u16 type ;
   __u16 code ;
   __s32 value ;
};
#line 131 
struct ff_device;
#line 131 
struct input_mt;
#line 131 
struct input_handle;
#line 131  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/input.h"
struct input_dev {
   char *name ;
   char *phys ;
   char *uniq ;
   struct input_id id ;
   unsigned long propbit[1U] ;
   unsigned long evbit[1U] ;
   unsigned long keybit[12U] ;
   unsigned long relbit[1U] ;
   unsigned long absbit[1U] ;
   unsigned long mscbit[1U] ;
   unsigned long ledbit[1U] ;
   unsigned long sndbit[1U] ;
   unsigned long ffbit[2U] ;
   unsigned long swbit[1U] ;
   unsigned int hint_events_per_packet ;
   unsigned int keycodemax ;
   unsigned int keycodesize ;
   void *keycode ;
   int (*setkeycode)(struct input_dev *, struct input_keymap_entry *, unsigned int *) ;
   int (*getkeycode)(struct input_dev *, struct input_keymap_entry *) ;
   struct ff_device *ff ;
   struct input_dev_poller *poller ;
   unsigned int repeat_key ;
   struct timer_list timer ;
   int rep[2U] ;
   struct input_mt *mt ;
   struct input_absinfo *absinfo ;
   unsigned long key[12U] ;
   unsigned long led[1U] ;
   unsigned long snd[1U] ;
   unsigned long sw[1U] ;
   int (*open)(struct input_dev *) ;
   void (*close)(struct input_dev *) ;
   int (*flush)(struct input_dev *, struct file *) ;
   int (*event)(struct input_dev *, unsigned int , unsigned int , int ) ;
   struct input_handle *grab ;
   spinlock_t event_lock ;
   struct mutex mutex ;
   unsigned int users ;
   bool going_away ;
   struct device dev ;
   struct list_head h_list ;
   struct list_head node ;
   unsigned int num_vals ;
   unsigned int max_vals ;
   struct input_value *vals ;
   bool devres_managed ;
   ktime_t timestamp[3U] ;
};
#line 302  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/input.h"
struct input_handler {
   void *private ;
   void (*event)(struct input_handle *, unsigned int , unsigned int , int ) ;
   void (*events)(struct input_handle *, struct input_value *, unsigned int ) ;
   bool (*filter)(struct input_handle *, unsigned int , unsigned int , int ) ;
   bool (*match)(struct input_handler *, struct input_dev *) ;
   int (*connect)(struct input_handler *, struct input_dev *, struct input_device_id *) ;
   void (*disconnect)(struct input_handle *) ;
   void (*start)(struct input_handle *) ;
   bool legacy_minors ;
   int minor ;
   char *name ;
   struct input_device_id *id_table ;
   struct list_head h_list ;
   struct list_head node ;
};
#line 337  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/input.h"
struct input_handle {
   void *private ;
   int open ;
   char *name ;
   struct input_dev *dev ;
   struct input_handler *handler ;
   struct list_head d_node ;
   struct list_head h_node ;
};
#line 534  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/input.h"
struct ff_device {
   int (*upload)(struct input_dev *, struct ff_effect *, struct ff_effect *) ;
   int (*erase)(struct input_dev *, int ) ;
   int (*playback)(struct input_dev *, int , int ) ;
   void (*set_gain)(struct input_dev *, u16 ) ;
   void (*set_autocenter)(struct input_dev *, u16 ) ;
   void (*destroy)(struct ff_device *) ;
   void *private ;
   unsigned long ffbit[2U] ;
   struct mutex mutex ;
   int max_effects ;
   struct ff_effect *effects ;
   struct file *effect_owners[] ;
};
#line 78  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/eeprom.h"
struct spur_channel {
   __le16 spurChan ;
   u8 spurRangeLow ;
   u8 spurRangeHigh ;
} __attribute__((__packed__));
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/eeprom.h"
struct ar9170_eeprom_modal {
   __le32 antCtrlChain[2U] ;
   __le32 antCtrlCommon ;
   s8 antennaGainCh[2U] ;
   u8 switchSettling ;
   u8 txRxAttenCh[2U] ;
   u8 rxTxMarginCh[2U] ;
   s8 adcDesiredSize ;
   s8 pgaDesiredSize ;
   u8 xlnaGainCh[2U] ;
   u8 txEndToXpaOff ;
   u8 txEndToRxOn ;
   u8 txFrameToXpaOn ;
   u8 thresh62 ;
   s8 noiseFloorThreshCh[2U] ;
   u8 xpdGain ;
   u8 xpd ;
   s8 iqCalICh[2U] ;
   s8 iqCalQCh[2U] ;
   u8 pdGainOverlap ;
   u8 ob ;
   u8 db ;
   u8 xpaBiasLvl ;
   u8 pwrDecreaseFor2Chain ;
   u8 pwrDecreaseFor3Chain ;
   u8 txFrameToDataStart ;
   u8 txFrameToPaOn ;
   u8 ht40PowerIncForPdadc ;
   u8 bswAtten[2U] ;
   u8 bswMargin[2U] ;
   u8 swSettleHt40 ;
   u8 reserved[22U] ;
   struct spur_channel spur_channels[5U] ;
} __attribute__((__packed__));
#line 88  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/eeprom.h"
struct ar9170_calibration_data_per_freq {
   u8 pwr_pdg[4U][5U] ;
   u8 vpd_pdg[4U][5U] ;
} __attribute__((__packed__));
#line 101  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/eeprom.h"
struct ar9170_calibration_target_power_legacy {
   u8 freq ;
   u8 power[4U] ;
} __attribute__((__packed__));
#line 106  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/eeprom.h"
struct ar9170_calibration_target_power_ht {
   u8 freq ;
   u8 power[8U] ;
} __attribute__((__packed__));
#line 113  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/eeprom.h"
struct ar9170_calctl_edges {
   u8 channel ;
   u8 power_flags ;
} __attribute__((__packed__));
#line 121  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/eeprom.h"
struct ar9170_calctl_data {
   struct ar9170_calctl_edges control_edges[2U][8U] ;
} __attribute__((__packed__));
#line 126  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/eeprom.h"
struct ar9170_eeprom {
   __le16 length ;
   __le16 checksum ;
   __le16 version ;
   u8 operating_flags ;
   u8 misc ;
   __le16 reg_domain[2U] ;
   u8 mac_address[6U] ;
   u8 rx_mask ;
   u8 tx_mask ;
   __le16 rf_silent ;
   __le16 bluetooth_options ;
   __le16 device_capabilities ;
   __le32 build_number ;
   u8 deviceType ;
   u8 reserved[33U] ;
   u8 customer_data[64U] ;
   struct ar9170_eeprom_modal modal_header[2U] ;
   u8 cal_freq_pier_5G[8U] ;
   u8 cal_freq_pier_2G[4U] ;
   struct ar9170_calibration_data_per_freq cal_pier_data_5G[2U][8U] ;
   struct ar9170_calibration_data_per_freq cal_pier_data_2G[2U][4U] ;
   struct ar9170_calibration_target_power_legacy cal_tgt_pwr_5G[8U] ;
   struct ar9170_calibration_target_power_ht cal_tgt_pwr_5G_ht20[8U] ;
   struct ar9170_calibration_target_power_ht cal_tgt_pwr_5G_ht40[8U] ;
   struct ar9170_calibration_target_power_legacy cal_tgt_pwr_2G_cck[3U] ;
   struct ar9170_calibration_target_power_legacy cal_tgt_pwr_2G_ofdm[4U] ;
   struct ar9170_calibration_target_power_ht cal_tgt_pwr_2G_ht20[4U] ;
   struct ar9170_calibration_target_power_ht cal_tgt_pwr_2G_ht40[4U] ;
   u8 ctl_index[24U] ;
   struct ar9170_calctl_data ctl_data[24U] ;
   u8 pad ;
   __le16 subsystem_id ;
} __attribute__((__packed__));
#line 215 
enum carl9170_cmd_oids {
    CARL9170_CMD_RREG = 0,
    CARL9170_CMD_WREG = 1,
    CARL9170_CMD_ECHO = 2,
    CARL9170_CMD_SWRST = 3,
    CARL9170_CMD_REBOOT = 4,
    CARL9170_CMD_BCN_CTRL = 5,
    CARL9170_CMD_READ_TSF = 6,
    CARL9170_CMD_RX_FILTER = 7,
    CARL9170_CMD_WOL = 8,
    CARL9170_CMD_TALLY = 9,
    CARL9170_CMD_WREGB = 10,
    CARL9170_CMD_EKEY = 16,
    CARL9170_CMD_DKEY = 17,
    CARL9170_CMD_FREQUENCY = 32,
    CARL9170_CMD_RF_INIT = 33,
    CARL9170_CMD_SYNTH = 34,
    CARL9170_CMD_FREQ_START = 35,
    CARL9170_CMD_PSM = 36,
    CARL9170_CMD_ASYNC_FLAG = 64,
    CARL9170_CMD_WREG_ASYNC = 65,
    CARL9170_CMD_REBOOT_ASYNC = 68,
    CARL9170_CMD_BCN_CTRL_ASYNC = 69,
    CARL9170_CMD_PSM_ASYNC = 100,
    CARL9170_RSP_FLAG = 192,
    CARL9170_RSP_PRETBTT = 192,
    CARL9170_RSP_TXCOMP = 193,
    CARL9170_RSP_BEACON_CONFIG = 194,
    CARL9170_RSP_ATIM = 195,
    CARL9170_RSP_WATCHDOG = 198,
    CARL9170_RSP_TEXT = 202,
    CARL9170_RSP_HEXDUMP = 204,
    CARL9170_RSP_RADAR = 205,
    CARL9170_RSP_GPIO = 206,
    CARL9170_RSP_BOOT = 207
};
#line 97  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/fwcmd.h"
struct carl9170_set_key_cmd {
   __le16 user ;
   __le16 keyId ;
   __le16 type ;
   u8 macAddr[6U] ;
   u32 key[4U] ;
} __attribute__((__packed__, __aligned__(4)));
#line 106  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/fwcmd.h"
struct carl9170_disable_key_cmd {
   __le16 user ;
   __le16 padding ;
} __attribute__((__packed__, __aligned__(4)));
#line 112  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/fwcmd.h"
struct carl9170_u32_list {
   u32 vals[0U] ;
} __attribute__((__packed__));
#line 116  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/fwcmd.h"
struct carl9170_reg_list {
   __le32 regs[0U] ;
} __attribute__((__packed__));
#line 120  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/fwcmd.h"
struct __anonstruct_regs_1027 {
   __le32 addr ;
   __le32 val ;
};
#line 120  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/fwcmd.h"
struct carl9170_write_reg {
   struct __anonstruct_regs_1027 regs[0U] ;
} __attribute__((__packed__));
#line 127  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/fwcmd.h"
struct carl9170_write_reg_byte {
   __le32 addr ;
   __le32 count ;
   u8 val[0U] ;
} __attribute__((__packed__));
#line 138  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/fwcmd.h"
struct carl9170_rf_init {
   __le32 freq ;
   u8 ht_settings ;
   u8 padding2[3U] ;
   __le32 delta_slope_coeff_exp ;
   __le32 delta_slope_coeff_man ;
   __le32 delta_slope_coeff_exp_shgi ;
   __le32 delta_slope_coeff_man_shgi ;
   __le32 finiteLoopCount ;
} __attribute__((__packed__));
#line 150  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/fwcmd.h"
struct carl9170_rf_init_result {
   __le32 ret ;
} __attribute__((__packed__));
#line 161  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/fwcmd.h"
struct carl9170_psm {
   __le32 state ;
} __attribute__((__packed__));
#line 174  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/fwcmd.h"
struct carl9170_rx_filter_cmd {
   __le32 rx_filter ;
} __attribute__((__packed__));
#line 189  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/fwcmd.h"
struct carl9170_bcn_ctrl_cmd {
   __le32 vif_id ;
   __le32 mode ;
   __le32 bcn_addr ;
   __le32 bcn_len ;
} __attribute__((__packed__));
#line 200  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/fwcmd.h"
struct carl9170_wol_cmd {
   __le32 flags ;
   u8 mac[6U] ;
   u8 bssid[6U] ;
   __le32 null_interval ;
   __le32 free_for_use2 ;
   __le32 mask ;
   u8 pattern[32U] ;
} __attribute__((__packed__));
#line 215  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/fwcmd.h"
struct __anonstruct_1029 {
   u8 len ;
   u8 cmd ;
   u8 seq ;
   u8 ext ;
} __attribute__((__packed__));
#line 215  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/fwcmd.h"
union __anonunion_1028 {
   struct __anonstruct_1029 __anonCompField___anonunion_1028_197 ;
   u32 hdr_data ;
} __attribute__((__packed__));
#line 215  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/fwcmd.h"
struct carl9170_cmd_head {
   union __anonunion_1028 __anonCompField_carl9170_cmd_head_198 ;
} __attribute__((__packed__));
#line 228  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/fwcmd.h"
union __anonunion_1030 {
   struct carl9170_set_key_cmd setkey ;
   struct carl9170_disable_key_cmd disablekey ;
   struct carl9170_u32_list echo ;
   struct carl9170_reg_list rreg ;
   struct carl9170_write_reg wreg ;
   struct carl9170_write_reg_byte wregb ;
   struct carl9170_rf_init rf_init ;
   struct carl9170_psm psm ;
   struct carl9170_wol_cmd wol ;
   struct carl9170_bcn_ctrl_cmd bcn_ctrl ;
   struct carl9170_rx_filter_cmd rx_filter ;
   u8 data[60U] ;
} __attribute__((__packed__));
#line 228  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/fwcmd.h"
struct carl9170_cmd {
   struct carl9170_cmd_head hdr ;
   union __anonunion_1030 __anonCompField_carl9170_cmd_199 ;
} __attribute__((__packed__, __aligned__(4)));
#line 273  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/fwcmd.h"
struct _carl9170_tx_status {
   u8 cookie ;
   u8 info ;
} __attribute__((__packed__));
#line 293  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/fwcmd.h"
struct carl9170_gpio {
   __le32 gpio ;
} __attribute__((__packed__));
#line 298  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/fwcmd.h"
union __anonunion_1031 {
   __le32 tsf[2U] ;
   __le64 tsf_64 ;
} __attribute__((__packed__));
#line 298  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/fwcmd.h"
struct carl9170_tsf_rsp {
   union __anonunion_1031 __anonCompField_carl9170_tsf_rsp_200 ;
} __attribute__((__packed__));
#line 306  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/fwcmd.h"
struct carl9170_tally_rsp {
   __le32 active ;
   __le32 cca ;
   __le32 tx_time ;
   __le32 rx_total ;
   __le32 rx_overrun ;
   __le32 tick ;
} __attribute__((__packed__));
#line 315  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/fwcmd.h"
union __anonunion_1032 {
   struct carl9170_rf_init_result rf_init_res ;
   struct carl9170_u32_list rreg_res ;
   struct carl9170_u32_list echo ;
   struct _carl9170_tx_status _tx_status[0U] ;
   struct carl9170_gpio gpio ;
   struct carl9170_tsf_rsp tsf ;
   struct carl9170_psm psm ;
   struct carl9170_tally_rsp tally ;
   u8 data[60U] ;
} __attribute__((__packed__));
#line 315  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/fwcmd.h"
struct carl9170_rsp {
   struct carl9170_cmd_head hdr ;
   union __anonunion_1032 __anonCompField_carl9170_rsp_201 ;
} __attribute__((__packed__, __aligned__(4)));
#line 338  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/wlan.h"
struct ar9170_rx_head {
   u8 plcp[12U] ;
} __attribute__((__packed__));
#line 850  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/hw.h"
struct ar9170_stream {
   __le16 length ;
   __le16 tag ;
   u8 payload[0U] ;
} __attribute__((__packed__, __aligned__(4)));
#line 101  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/fwdesc.h"
struct carl9170fw_desc_head {
   u8 magic[4U] ;
   __le16 length ;
   u8 min_ver ;
   u8 cur_ver ;
} __attribute__((__packed__));
#line 36  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath.h"
struct ath_ani {
   bool caldone ;
   unsigned int longcal_timer ;
   unsigned int shortcal_timer ;
   unsigned int resetcal_timer ;
   unsigned int checkani_timer ;
   struct timer_list timer ;
};
#line 45  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath.h"
struct ath_cycle_counters {
   u32 cycles ;
   u32 rx_busy ;
   u32 rx_frame ;
   u32 tx_frame ;
};
#line 51 
enum ath_device_state {
    ATH_HW_UNAVAILABLE = 0,
    ATH_HW_INITIALIZED = 1
};
#line 74  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath.h"
struct reg_dmn_pair_mapping {
   u16 reg_domain ;
   u16 reg_5ghz_ctl ;
   u16 reg_2ghz_ctl ;
};
#line 80  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath.h"
struct ath_regulatory {
   char alpha2[2U] ;
   enum nl80211_dfs_regions region ;
   u16 country_code ;
   u16 max_power_level ;
   u16 current_rd ;
   int16_t power_limit ;
   struct reg_dmn_pair_mapping *regpair ;
};
#line 89 
enum ath_crypt_caps {
    ATH_CRYPT_CAP_CIPHER_AESCCM = 1,
    ATH_CRYPT_CAP_MIC_COMBINED = 2
};
#line 125  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath.h"
struct ath_ops {
   unsigned int (*read)(void *, u32 ) ;
   void (*multi_read)(void *, u32 *, u32 *, u16 ) ;
   void (*write)(void *, u32 , u32 ) ;
   void (*enable_write_buffer)(void *) ;
   void (*write_flush)(void *) ;
   u32 (*rmw)(void *, u32 , u32 , u32 ) ;
   void (*enable_rmw_buffer)(void *) ;
   void (*rmw_flush)(void *) ;
};
#line 135 
struct ath_common;
#line 136 
struct ath_bus_ops;
#line 140  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath.h"
struct ath_ps_ops {
   void (*wakeup)(struct ath_common *) ;
   void (*restore)(struct ath_common *) ;
};
#line 145  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath.h"
struct ath_common {
   void *ah ;
   void *priv ;
   struct ieee80211_hw *hw ;
   int debug_mask ;
   enum ath_device_state state ;
   unsigned long op_flags ;
   struct ath_ani ani ;
   u16 cachelsz ;
   u16 curaid ;
   u8 macaddr[6U] ;
   u8 curbssid[6U] ;
   u8 bssidmask[6U] ;
   u32 rx_bufsize ;
   u32 keymax ;
   unsigned long keymap[2U] ;
   unsigned long tkip_keymap[2U] ;
   unsigned long ccmp_keymap[2U] ;
   enum ath_crypt_caps crypt_caps ;
   unsigned int clockrate ;
   spinlock_t cc_lock ;
   struct ath_cycle_counters cc_ani ;
   struct ath_cycle_counters cc_survey ;
   struct ath_regulatory regulatory ;
   struct ath_regulatory reg_world_copy ;
   struct ath_ops *ops ;
   struct ath_bus_ops *bus_ops ;
   struct ath_ps_ops *ps_ops ;
   bool btcoex_enabled ;
   bool disable_ani ;
   bool bt_ant_diversity ;
   int last_rssi ;
   struct ieee80211_supported_band sbands[4U] ;
};
#line 106  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.h"
struct ath_stats {
   u32 hw_tx_tally_sum[3U] ;
   u32 hw_tx_tally_counter[3U] ;
   u32 hw_rx_tally_sum[8U] ;
   u32 hw_rx_tally_counter[8U] ;
   u32 hw_phy_errors_sum[6U] ;
   u32 hw_phy_errors_counter[6U] ;
   u32 hw_wlan_queue_counter[12U] ;
   u32 hw_pta_queue_counter[6U] ;
   u32 hw_ampdu_info_counter[2U] ;
};
#line 115  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.h"
struct carl9170_debug_mem_rbe {
   u32 reg ;
   u32 value ;
};
#line 122  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.h"
struct carl9170_debug {
   struct ath_stats stats ;
   struct carl9170_debug_mem_rbe ring[64U] ;
   struct mutex ring_lock ;
   unsigned int ring_head ;
   unsigned int ring_tail ;
   struct delayed_work update_tally ;
};
#line 129 
struct ar9170;
#line 72  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/carl9170.h"
enum carl9170_device_state {
    CARL9170_UNKNOWN_STATE = 0,
    CARL9170_STOPPED = 1,
    CARL9170_IDLE = 2,
    CARL9170_STARTED = 3
};
#line 79 
enum carl9170_tid_state {
    CARL9170_TID_STATE_INVALID = 0,
    CARL9170_TID_STATE_KILLED = 1,
    CARL9170_TID_STATE_SHUTDOWN = 2,
    CARL9170_TID_STATE_SUSPEND = 3,
    CARL9170_TID_STATE_PROGRESS = 4,
    CARL9170_TID_STATE_IDLE = 5,
    CARL9170_TID_STATE_XMIT = 6
};
#line 114  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/carl9170.h"
struct carl9170_sta_tid {
   struct list_head list ;
   struct list_head tmp_list ;
   spinlock_t lock ;
   unsigned int counter ;
   enum carl9170_tid_state state ;
   u8 tid ;
   u16 max ;
   u16 snx ;
   u16 hsn ;
   u16 bsn ;
   unsigned long bitmap[2U] ;
   struct sk_buff_head queue ;
   struct ieee80211_sta *sta ;
   struct ieee80211_vif *vif ;
};
#line 165  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/carl9170.h"
struct carl9170_tx_queue_stats {
   unsigned int count ;
   unsigned int limit ;
   unsigned int len ;
};
#line 171  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/carl9170.h"
struct carl9170_vif {
   unsigned int id ;
   struct ieee80211_vif *vif ;
};
#line 176  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/carl9170.h"
struct carl9170_vif_info {
   struct list_head list ;
   bool active ;
   unsigned int id ;
   struct sk_buff *beacon ;
   bool enable_beacon ;
};
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/carl9170.h"
struct carl9170_led {
   struct ar9170 *ar ;
   struct led_classdev l ;
   char name[32U] ;
   unsigned int toggled ;
   bool last_state ;
   bool registered ;
};
#line 205 
enum carl9170_restart_reasons {
    CARL9170_RR_NO_REASON = 0,
    CARL9170_RR_FATAL_FIRMWARE_ERROR = 1,
    CARL9170_RR_TOO_MANY_FIRMWARE_ERRORS = 2,
    CARL9170_RR_WATCHDOG = 3,
    CARL9170_RR_STUCK_TX = 4,
    CARL9170_RR_UNRESPONSIVE_DEVICE = 5,
    CARL9170_RR_COMMAND_TIMEOUT = 6,
    CARL9170_RR_TOO_MANY_PHY_ERRORS = 7,
    CARL9170_RR_LOST_RSP = 8,
    CARL9170_RR_INVALID_RSP = 9,
    CARL9170_RR_USER_REQUEST = 10,
    __CARL9170_RR_LAST = 11
};
#line 220 
enum carl9170_erp_modes {
    CARL9170_ERP_INVALID = 0,
    CARL9170_ERP_AUTO = 1,
    CARL9170_ERP_MAC80211 = 2,
    CARL9170_ERP_OFF = 3,
    CARL9170_ERP_CTS = 4,
    CARL9170_ERP_RTS = 5,
    __CARL9170_ERP_NUM = 6
};
#line 233  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/carl9170.h"
struct __anonstruct_fw_1036 {
   struct carl9170fw_desc_head *desc ;
   struct firmware *fw ;
   unsigned int offset ;
   unsigned int address ;
   unsigned int cmd_bufs ;
   unsigned int api_version ;
   unsigned int vif_num ;
   unsigned int err_counter ;
   unsigned int bug_counter ;
   u32 beacon_addr ;
   unsigned int beacon_max_len ;
   bool rx_stream ;
   bool tx_stream ;
   bool rx_filter ;
   bool hw_counters ;
   unsigned int mem_blocks ;
   unsigned int mem_block_size ;
   unsigned int rx_size ;
   unsigned int tx_seq_table ;
   bool ba_filter ;
   bool disable_offload_fw ;
};
#line 233  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/carl9170.h"
struct __anonstruct_tally_1037 {
   u64 active ;
   u64 cca ;
   u64 tx_time ;
   u64 rx_total ;
   u64 rx_overrun ;
};
#line 233  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/carl9170.h"
union __anonunion_1038 {
   __le32 cmd_buf[16U] ;
   struct carl9170_cmd cmd ;
   struct carl9170_rsp rsp ;
};
#line 233  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/carl9170.h"
struct __anonstruct_wps_1039 {
   bool pbc_state ;
   struct input_dev *pbc ;
   char name[32U] ;
   char phys[32U] ;
};
#line 233  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/carl9170.h"
struct __anonstruct_ps_1040 {
   unsigned int dtim_counter ;
   unsigned long last_beacon ;
   unsigned long last_action ;
   unsigned long last_slept ;
   unsigned int sleep_ms ;
   unsigned int off_override ;
   bool state ;
};
#line 233  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/carl9170.h"
struct __anonstruct_rng_1041 {
   struct hwrng rng ;
   bool initialized ;
   char name[31U] ;
   u16 cache[30U] ;
   unsigned int cache_idx ;
};
#line 233  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/carl9170.h"
struct ar9170 {
   struct ath_common common ;
   struct ieee80211_hw *hw ;
   struct mutex mutex ;
   enum carl9170_device_state state ;
   spinlock_t state_lock ;
   enum carl9170_restart_reasons last_reason ;
   bool registered ;
   struct usb_device *udev ;
   struct usb_interface *intf ;
   struct usb_anchor rx_anch ;
   struct usb_anchor rx_work ;
   struct usb_anchor rx_pool ;
   struct usb_anchor tx_wait ;
   struct usb_anchor tx_anch ;
   struct usb_anchor tx_cmd ;
   struct usb_anchor tx_err ;
   struct tasklet_struct usb_tasklet ;
   atomic_t tx_cmd_urbs ;
   atomic_t tx_anch_urbs ;
   atomic_t rx_anch_urbs ;
   atomic_t rx_work_urbs ;
   atomic_t rx_pool_urbs ;
   kernel_ulong_t features ;
   bool usb_ep_cmd_is_bulk ;
   struct completion fw_load_wait ;
   struct completion fw_boot_wait ;
   struct __anonstruct_fw_1036 fw ;
   struct ieee80211_iface_limit if_comb_limits[1U] ;
   struct ieee80211_iface_combination if_combs[1U] ;
   struct work_struct restart_work ;
   struct work_struct ping_work ;
   unsigned int restart_counter ;
   unsigned long queue_stop_timeout[4U] ;
   unsigned long max_queue_stop_timeout[4U] ;
   bool needs_full_reset ;
   bool force_usb_reset ;
   atomic_t pending_restarts ;
   struct list_head vif_list ;
   unsigned long vif_bitmap ;
   unsigned int vifs ;
   struct carl9170_vif vif_priv[7U] ;
   spinlock_t beacon_lock ;
   unsigned int global_pretbtt ;
   unsigned int global_beacon_int ;
   struct carl9170_vif_info *beacon_iter ;
   unsigned int beacon_enabled ;
   u64 usedkeys ;
   bool rx_software_decryption ;
   bool disable_offload ;
   u64 cur_mc_hash ;
   u32 cur_filter ;
   unsigned int filter_state ;
   unsigned int rx_filter_caps ;
   bool sniffer_enabled ;
   enum carl9170_erp_modes erp_mode ;
   struct ieee80211_channel *channel ;
   unsigned int num_channels ;
   int noise[4U] ;
   unsigned int chan_fail ;
   unsigned int total_chan_fail ;
   u8 heavy_clip ;
   u8 ht_settings ;
   struct __anonstruct_tally_1037 tally ;
   struct delayed_work stat_work ;
   struct survey_info *survey ;
   u8 power_5G_leg[4U] ;
   u8 power_2G_cck[4U] ;
   u8 power_2G_ofdm[4U] ;
   u8 power_5G_ht20[8U] ;
   u8 power_5G_ht40[8U] ;
   u8 power_2G_ht20[8U] ;
   u8 power_2G_ht40[8U] ;
   struct delayed_work led_work ;
   struct carl9170_led leds[2U] ;
   spinlock_t tx_stats_lock ;
   struct carl9170_tx_queue_stats tx_stats[4U] ;
   struct ieee80211_tx_queue_params edcf[5U] ;
   struct completion tx_flush ;
   int cmd_seq ;
   int readlen ;
   u8 *readbuf ;
   spinlock_t cmd_lock ;
   struct completion cmd_wait ;
   union __anonunion_1038 __anonCompField_ar9170_205 ;
   unsigned int tx_dropped ;
   unsigned int tx_ack_failures ;
   unsigned int tx_fcs_errors ;
   unsigned int rx_dropped ;
   struct ar9170_eeprom eeprom ;
   struct sk_buff_head tx_pending[4U] ;
   struct sk_buff_head tx_status[4U] ;
   struct delayed_work tx_janitor ;
   unsigned long tx_janitor_last_run ;
   bool tx_schedule ;
   struct work_struct ampdu_work ;
   spinlock_t tx_ampdu_list_lock ;
   struct carl9170_sta_tid *tx_ampdu_iter ;
   struct list_head tx_ampdu_list ;
   atomic_t tx_ampdu_upload ;
   atomic_t tx_ampdu_scheduler ;
   atomic_t tx_total_pending ;
   atomic_t tx_total_queued ;
   unsigned int tx_ampdu_list_len ;
   int current_density ;
   int current_factor ;
   bool tx_ampdu_schedule ;
   spinlock_t mem_lock ;
   unsigned long *mem_bitmap ;
   atomic_t mem_free_blocks ;
   atomic_t mem_allocs ;
   struct ar9170_rx_head rx_plcp ;
   bool rx_has_plcp ;
   struct sk_buff *rx_failover ;
   int rx_failover_missing ;
   u32 ampdu_ref ;
   struct list_head bar_list[4U] ;
   spinlock_t bar_list_lock[4U] ;
   struct __anonstruct_wps_1039 wps ;
   struct carl9170_debug debug ;
   struct dentry *debug_dir ;
   struct work_struct ps_work ;
   struct __anonstruct_ps_1040 ps ;
   struct __anonstruct_rng_1041 rng ;
};
#line 36  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef unsigned long uintptr_t;
#line 104  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef u8 uint8_t;
#line 106  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
union __anonunion___u_1060 {
   struct list_head *__val ;
   char __c[1U] ;
};
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/atomic.h"
union __anonunion___u_1112 {
   int __val ;
   char __c[1U] ;
};
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/atomic.h"
union __anonunion___u_1114 {
   int __val ;
   char __c[1U] ;
};
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 75  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rculist.h"
union __anonunion___u_1288 {
   struct list_head *__val ;
   char __c[1U] ;
};
#line 101  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/refcount.h"
enum refcount_saturation_type {
    REFCOUNT_ADD_NOT_ZERO_OVF = 0,
    REFCOUNT_ADD_OVF = 1,
    REFCOUNT_ADD_UAF = 2,
    REFCOUNT_SUB_UAF = 3,
    REFCOUNT_DEC_LEAK = 4
};
#line 1798  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion___u_1559 {
   struct sk_buff *__val ;
   char __c[1U] ;
};
#line 1867  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion___u_1561 {
   struct sk_buff *__val ;
   char __c[1U] ;
};
#line 1868  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion___u_1563 {
   struct sk_buff *__val ;
   char __c[1U] ;
};
#line 1869  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion___u_1565 {
   struct sk_buff *__val ;
   char __c[1U] ;
};
#line 1870  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion___u_1567 {
   struct sk_buff *__val ;
   char __c[1U] ;
};
#line 1881  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion___u_1569 {
   struct sk_buff *__val ;
   char __c[1U] ;
};
#line 1882  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion___u_1571 {
   struct sk_buff *__val ;
   char __c[1U] ;
};
#line 1884  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion___u_1573 {
   struct sk_buff *__val ;
   char __c[1U] ;
};
#line 1885  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion___u_1575 {
   struct sk_buff *__val ;
   char __c[1U] ;
};
#line 2026  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion___u_1577 {
   struct sk_buff *__val ;
   char __c[1U] ;
};
#line 2027  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion___u_1579 {
   struct sk_buff *__val ;
   char __c[1U] ;
};
#line 233  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct ieee80211_hdr {
   __le16 frame_control ;
   __le16 duration_id ;
   u8 addr1[6U] ;
   u8 addr2[6U] ;
   u8 addr3[6U] ;
   __le16 seq_ctrl ;
   u8 addr4[6U] ;
} __attribute__((__packed__, __aligned__(2)));
#line 1249  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct ieee80211_bar {
   __le16 frame_control ;
   __le16 duration ;
   __u8 ra[6U] ;
   __u8 ta[6U] ;
   __le16 control ;
   __le16 start_seq_num ;
} __attribute__((__packed__));
#line 246  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/inet_ecn.h"
typedef u32 codel_time_t;
#line 930  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_tx_rate {
   s8 idx ;
   u16 count : 5 ;
   u16 flags : 11 ;
} __attribute__((__packed__));
#line 1004  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct __anonstruct_2054 {
   struct ieee80211_tx_rate rates[4U] ;
   s8 rts_cts_rate_idx ;
   u8 use_rts : 1 ;
   u8 use_cts_prot : 1 ;
   u8 short_preamble : 1 ;
   u8 skip_table : 1 ;
};
#line 1004  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
union __anonunion_2053 {
   struct __anonstruct_2054 __anonCompField___anonunion_2053_192 ;
   unsigned long jiffies ;
};
#line 1004 
struct ieee80211_key_conf;
#line 1004  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct __anonstruct_control_2052 {
   union __anonunion_2053 __anonCompField___anonstruct_control_2052_193 ;
   struct ieee80211_vif *vif ;
   struct ieee80211_key_conf *hw_key ;
   u32 flags ;
   codel_time_t enqueue_time ;
};
#line 1004  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct __anonstruct_ack_2055 {
   u64 cookie ;
};
#line 1004  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct __anonstruct_status_2056 {
   struct ieee80211_tx_rate rates[4U] ;
   s32 ack_signal ;
   u8 ampdu_ack_len ;
   u8 ampdu_len ;
   u8 antenna ;
   u16 tx_time ;
   bool is_valid_ack_signal ;
   void *status_driver_data[2U] ;
};
#line 1004  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct __anonstruct_2057 {
   struct ieee80211_tx_rate driver_rates[4U] ;
   u8 pad[4U] ;
   void *rate_driver_data[3U] ;
};
#line 1004  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
union __anonunion_2051 {
   struct __anonstruct_control_2052 control ;
   struct __anonstruct_ack_2055 ack ;
   struct __anonstruct_status_2056 status ;
   struct __anonstruct_2057 __anonCompField___anonunion_2051_194 ;
   void *driver_data[5U] ;
};
#line 1004  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_tx_info {
   u32 flags ;
   u8 band ;
   u8 hw_queue ;
   u16 ack_frame_id : 6 ;
   u16 tx_time_est : 10 ;
   union __anonunion_2051 __anonCompField_ieee80211_tx_info_195 ;
};
#line 1772  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_key_conf {
   atomic64_t tx_pn ;
   u32 cipher ;
   u8 icv_len ;
   u8 iv_len ;
   u8 hw_key_idx ;
   s8 keyidx ;
   u16 flags ;
   u8 keylen ;
   u8 key[0U] ;
};
#line 2057  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_tx_control {
   struct ieee80211_sta *sta ;
};
#line 285  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/wlan.h"
struct _ar9170_tx_hwdesc {
   __le16 length ;
   __le16 mac_control ;
   __le32 phy_control ;
} __attribute__((__packed__));
#line 315  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/wlan.h"
struct _carl9170_tx_superdesc {
   __le16 len ;
   u8 rix ;
   u8 cnt ;
   u8 cookie ;
   u8 ampdu_settings ;
   u8 misc ;
   u8 padding ;
   u8 ri[4U] ;
   __le32 rr[3U] ;
} __attribute__((__packed__));
#line 327  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/wlan.h"
struct _carl9170_tx_superframe {
   struct _carl9170_tx_superdesc s ;
   struct _ar9170_tx_hwdesc f ;
   u8 frame_data[0U] ;
} __attribute__((__packed__, __aligned__(4)));
#line 471  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/carl9170.h"
struct carl9170_bar_list_entry {
   struct list_head list ;
   struct callback_head head ;
   struct sk_buff *skb ;
};
#line 477  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/carl9170.h"
struct carl9170_ba_stats {
   u8 ampdu_len ;
   u8 ampdu_ack_len ;
   bool clear ;
   bool req ;
};
#line 484  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/carl9170.h"
struct carl9170_sta_info {
   bool ht_sta ;
   bool sleeping ;
   atomic_t pending_frames ;
   unsigned int ampdu_max_len ;
   struct carl9170_sta_tid *agg[16U] ;
   struct carl9170_ba_stats stats[16U] ;
};
#line 493  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/carl9170.h"
struct carl9170_tx_info {
   unsigned long timeout ;
   struct ar9170 *ar ;
   struct kref ref ;
};
#line 121  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/tx.c"
union __anonunion___u_2092 {
   struct ieee80211_vif *__val ;
   char __c[1U] ;
};
#line 400  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/tx.c"
union __anonunion___u_2094 {
   struct carl9170_sta_tid *__val ;
   char __c[1U] ;
};
#line 458  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/tx.c"
union __anonunion___u_2096 {
   struct list_head *__val ;
   char __c[1U] ;
};
#line 458  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/tx.c"
union __anonunion___u_2098 {
   struct list_head *__val ;
   char __c[1U] ;
};
#line 612  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/tx.c"
union __anonunion___u_2100 {
   struct list_head *__val ;
   char __c[1U] ;
};
#line 612  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/tx.c"
union __anonunion___u_2102 {
   struct list_head *__val ;
   char __c[1U] ;
};
#line 1148  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/tx.c"
union __anonunion___u_2104 {
   struct carl9170_sta_tid *__val ;
   char __c[1U] ;
};
#line 1155  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/tx.c"
union __anonunion___u_2106 {
   struct list_head *__val ;
   char __c[1U] ;
};
#line 1155  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/tx.c"
union __anonunion___u_2108 {
   struct list_head *__val ;
   char __c[1U] ;
};
#line 1238  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/tx.c"
union __anonunion___u_2112 {
   struct carl9170_sta_tid *__val ;
   char __c[1U] ;
};
#line 1409  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/tx.c"
union __anonunion___u_2114 {
   struct carl9170_sta_tid *__val ;
   char __c[1U] ;
};
#line 1551  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/tx.c"
union __anonunion___u_2116 {
   struct carl9170_vif_info *__val ;
   char __c[1U] ;
};
#line 1554  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/tx.c"
union __anonunion___u_2118 {
   struct list_head *__val ;
   char __c[1U] ;
};
#line 1554  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/tx.c"
union __anonunion___u_2120 {
   struct list_head *__val ;
   char __c[1U] ;
};
#line 1563  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/tx.c"
union __anonunion___u_2122 {
   struct carl9170_vif_info *__val ;
   char __c[1U] ;
};
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/atomic.h"
union __anonunion___u_3234 {
   int __val ;
   char __c[1U] ;
};
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 3439  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/nl80211.h"
enum nl80211_channel_type {
    NL80211_CHAN_NO_HT = 0,
    NL80211_CHAN_HT20 = 1,
    NL80211_CHAN_HT40MINUS = 2,
    NL80211_CHAN_HT40PLUS = 3
};
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.h"
struct hw_stat_reg_entry {
   u32 reg ;
   char nreg[32U] ;
};
#line 652  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/carl9170.h"
union __anonunion___u_4210 {
   struct list_head *__val ;
   char __c[1U] ;
};
#line 652  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/carl9170.h"
union __anonunion___u_4212 {
   struct list_head *__val ;
   char __c[1U] ;
};
#line 51  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
struct carl9170_debugfs_fops {
   unsigned int read_bufsize ;
   umode_t attr ;
   char *(*read)(struct ar9170 *, char *, size_t , ssize_t *) ;
   ssize_t (*write)(struct ar9170 *, char *, size_t ) ;
   struct file_operations fops ;
   enum carl9170_device_state req_dev_state ;
};
#line 309  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
union __anonunion___u_4214 {
   struct list_head *__val ;
   char __c[1U] ;
};
#line 309  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
union __anonunion___u_4216 {
   struct list_head *__val ;
   char __c[1U] ;
};
#line 449  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
union __anonunion___u_4218 {
   struct list_head *__val ;
   char __c[1U] ;
};
#line 449  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
union __anonunion___u_4220 {
   struct list_head *__val ;
   char __c[1U] ;
};
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 63  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/phy.c"
struct carl9170_phy_init {
   u32 reg ;
   u32 _5ghz_20 ;
   u32 _5ghz_40 ;
   u32 _2ghz_40 ;
   u32 _2ghz_20 ;
};
#line 589  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/phy.c"
struct carl9170_rf_initvals {
   u32 reg ;
   u32 _5ghz ;
   u32 _2ghz ;
};
#line 691  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/phy.c"
struct carl9170_phy_freq_params {
   u8 coeff_exp ;
   u16 coeff_man ;
   u8 coeff_exp_shgi ;
   u16 coeff_man_shgi ;
};
#line 697 
enum carl9170_bw {
    CARL9170_BW_20 = 0,
    CARL9170_BW_40_BELOW = 1,
    CARL9170_BW_40_ABOVE = 2,
    __CARL9170_NUM_BW = 3
};
#line 706  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/phy.c"
struct carl9170_phy_freq_entry {
   u16 freq ;
   struct carl9170_phy_freq_params params[3U] ;
};
#line 1296  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/phy.c"
struct ctl_modes {
   u8 ctl_mode ;
   u8 max_power ;
   u8 *pwr_cal_data ;
   int pwr_cal_len ;
};
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/leds.h"
struct led_init_data {
   struct fwnode_handle *fwnode ;
   char *default_label ;
   char *devicename ;
   bool devname_mandatory ;
};
#line 66  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
union __anonunion___u_6366 {
   struct list_head *__val ;
   char __c[1U] ;
};
#line 106  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
union __anonunion___u_6368 {
   struct list_head *__val ;
   char __c[1U] ;
};
#line 268  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
union __anonunion___u_6370 {
   struct list_head *__val ;
   char __c[1U] ;
};
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/atomic.h"
union __anonunion___u_6420 {
   int __val ;
   char __c[1U] ;
};
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/atomic.h"
union __anonunion___u_6422 {
   int __val ;
   char __c[1U] ;
};
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 75  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rculist.h"
union __anonunion___u_6596 {
   struct list_head *__val ;
   char __c[1U] ;
};
#line 1867  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion___u_6869 {
   struct sk_buff *__val ;
   char __c[1U] ;
};
#line 1868  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion___u_6871 {
   struct sk_buff *__val ;
   char __c[1U] ;
};
#line 1869  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion___u_6873 {
   struct sk_buff *__val ;
   char __c[1U] ;
};
#line 1870  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion___u_6875 {
   struct sk_buff *__val ;
   char __c[1U] ;
};
#line 2026  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion___u_6885 {
   struct sk_buff *__val ;
   char __c[1U] ;
};
#line 2027  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion___u_6887 {
   struct sk_buff *__val ;
   char __c[1U] ;
};
#line 201  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_hw_addr {
   struct list_head list ;
   unsigned char addr[32U] ;
   unsigned char type ;
   bool global_use ;
   int sync_cnt ;
   int refcount ;
   int synced ;
   struct callback_head callback_head ;
};
#line 3039  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/nl80211.h"
struct nl80211_sta_flag_update {
   __u32 mask ;
   __u32 set ;
} __attribute__((__packed__));
#line 3362 
enum nl80211_mesh_power_mode {
    NL80211_MESH_POWER_UNKNOWN = 0,
    NL80211_MESH_POWER_ACTIVE = 1,
    NL80211_MESH_POWER_LIGHT_SLEEP = 2,
    NL80211_MESH_POWER_DEEP_SLEEP = 3,
    __NL80211_MESH_POWER_AFTER_LAST = 4,
    NL80211_MESH_POWER_MAX = 3
};
#line 4593 
enum nl80211_txrate_gi {
    NL80211_TXRATE_DEFAULT_GI = 0,
    NL80211_TXRATE_FORCE_SGI = 1,
    NL80211_TXRATE_FORCE_LGI = 2
};
#line 5133 
enum nl80211_ext_feature_index {
    NL80211_EXT_FEATURE_VHT_IBSS = 0,
    NL80211_EXT_FEATURE_RRM = 1,
    NL80211_EXT_FEATURE_MU_MIMO_AIR_SNIFFER = 2,
    NL80211_EXT_FEATURE_SCAN_START_TIME = 3,
    NL80211_EXT_FEATURE_BSS_PARENT_TSF = 4,
    NL80211_EXT_FEATURE_SET_SCAN_DWELL = 5,
    NL80211_EXT_FEATURE_BEACON_RATE_LEGACY = 6,
    NL80211_EXT_FEATURE_BEACON_RATE_HT = 7,
    NL80211_EXT_FEATURE_BEACON_RATE_VHT = 8,
    NL80211_EXT_FEATURE_FILS_STA = 9,
    NL80211_EXT_FEATURE_MGMT_TX_RANDOM_TA = 10,
    NL80211_EXT_FEATURE_MGMT_TX_RANDOM_TA_CONNECTED = 11,
    NL80211_EXT_FEATURE_SCHED_SCAN_RELATIVE_RSSI = 12,
    NL80211_EXT_FEATURE_CQM_RSSI_LIST = 13,
    NL80211_EXT_FEATURE_FILS_SK_OFFLOAD = 14,
    NL80211_EXT_FEATURE_4WAY_HANDSHAKE_STA_PSK = 15,
    NL80211_EXT_FEATURE_4WAY_HANDSHAKE_STA_1X = 16,
    NL80211_EXT_FEATURE_FILS_MAX_CHANNEL_TIME = 17,
    NL80211_EXT_FEATURE_ACCEPT_BCAST_PROBE_RESP = 18,
    NL80211_EXT_FEATURE_OCE_PROBE_REQ_HIGH_TX_RATE = 19,
    NL80211_EXT_FEATURE_OCE_PROBE_REQ_DEFERRAL_SUPPRESSION = 20,
    NL80211_EXT_FEATURE_MFP_OPTIONAL = 21,
    NL80211_EXT_FEATURE_LOW_SPAN_SCAN = 22,
    NL80211_EXT_FEATURE_LOW_POWER_SCAN = 23,
    NL80211_EXT_FEATURE_HIGH_ACCURACY_SCAN = 24,
    NL80211_EXT_FEATURE_DFS_OFFLOAD = 25,
    NL80211_EXT_FEATURE_CONTROL_PORT_OVER_NL80211 = 26,
    NL80211_EXT_FEATURE_ACK_SIGNAL_SUPPORT = 27,
    NL80211_EXT_FEATURE_DATA_ACK_SIGNAL_SUPPORT = 27,
    NL80211_EXT_FEATURE_TXQS = 28,
    NL80211_EXT_FEATURE_SCAN_RANDOM_SN = 29,
    NL80211_EXT_FEATURE_SCAN_MIN_PREQ_CONTENT = 30,
    NL80211_EXT_FEATURE_CAN_REPLACE_PTK0 = 31,
    NL80211_EXT_FEATURE_ENABLE_FTM_RESPONDER = 32,
    NL80211_EXT_FEATURE_AIRTIME_FAIRNESS = 33,
    NL80211_EXT_FEATURE_AP_PMKSA_CACHING = 34,
    NL80211_EXT_FEATURE_SCHED_SCAN_BAND_SPECIFIC_RSSI_THOLD = 35,
    NL80211_EXT_FEATURE_EXT_KEY_ID = 36,
    NL80211_EXT_FEATURE_STA_TX_PWR = 37,
    NL80211_EXT_FEATURE_SAE_OFFLOAD = 38,
    NL80211_EXT_FEATURE_VLAN_OFFLOAD = 39,
    NL80211_EXT_FEATURE_AQL = 40,
    NUM_NL80211_EXT_FEATURES = 41,
    MAX_NL80211_EXT_FEATURES = 40
};
#line 5912 
enum nl80211_nan_function_type {
    NL80211_NAN_FUNC_PUBLISH = 0,
    NL80211_NAN_FUNC_SUBSCRIBE = 1,
    NL80211_NAN_FUNC_FOLLOW_UP = 2,
    __NL80211_NAN_FUNC_TYPE_AFTER_LAST = 3,
    NL80211_NAN_FUNC_MAX_TYPE = 2
};
#line 6001 
enum nl80211_preamble {
    NL80211_PREAMBLE_LEGACY = 0,
    NL80211_PREAMBLE_HT = 1,
    NL80211_PREAMBLE_VHT = 2,
    NL80211_PREAMBLE_DMG = 3
};
#line 940  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct __anonstruct_control_7089 {
   u32 legacy ;
   u8 ht_mcs[10U] ;
   u16 vht_mcs[8U] ;
   enum nl80211_txrate_gi gi ;
};
#line 940  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_bitrate_mask {
   struct __anonstruct_control_7089 control[4U] ;
};
#line 1314  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct rate_info {
   u8 flags ;
   u8 mcs ;
   u16 legacy ;
   u8 nss ;
   u8 bw ;
   u8 he_gi ;
   u8 he_dcm ;
   u8 he_ru_alloc ;
   u8 n_bonded_ch ;
};
#line 1351  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct sta_bss_parameters {
   u8 flags ;
   u8 dtim_period ;
   u16 beacon_interval ;
};
#line 1373  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_txq_stats {
   u32 filled ;
   u32 backlog_bytes ;
   u32 backlog_packets ;
   u32 flows ;
   u32 drops ;
   u32 ecn_marks ;
   u32 overlimit ;
   u32 overmemory ;
   u32 collisions ;
   u32 tx_bytes ;
   u32 tx_packets ;
   u32 max_flows ;
};
#line 1399  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_tid_stats {
   u32 filled ;
   u64 rx_msdu ;
   u64 tx_msdu ;
   u64 tx_msdu_retries ;
   u64 tx_msdu_failed ;
   struct cfg80211_txq_stats txq_stats ;
};
#line 1476  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct station_info {
   u64 filled ;
   u32 connected_time ;
   u32 inactive_time ;
   u64 assoc_at ;
   u64 rx_bytes ;
   u64 tx_bytes ;
   u16 llid ;
   u16 plid ;
   u8 plink_state ;
   s8 signal ;
   s8 signal_avg ;
   u8 chains ;
   s8 chain_signal[4U] ;
   s8 chain_signal_avg[4U] ;
   struct rate_info txrate ;
   struct rate_info rxrate ;
   u32 rx_packets ;
   u32 tx_packets ;
   u32 tx_retries ;
   u32 tx_failed ;
   u32 rx_dropped_misc ;
   struct sta_bss_parameters bss_param ;
   struct nl80211_sta_flag_update sta_flags ;
   int generation ;
   u8 *assoc_req_ies ;
   size_t assoc_req_ies_len ;
   u32 beacon_loss_count ;
   s64 t_offset ;
   enum nl80211_mesh_power_mode local_pm ;
   enum nl80211_mesh_power_mode peer_pm ;
   enum nl80211_mesh_power_mode nonpeer_pm ;
   u32 expected_throughput ;
   u64 tx_duration ;
   u64 rx_duration ;
   u64 rx_beacon ;
   u8 rx_beacon_signal_avg ;
   u8 connected_to_gate ;
   struct cfg80211_tid_stats *pertid ;
   s8 ack_signal ;
   s8 avg_ack_signal ;
   u16 airtime_weight ;
   u32 rx_mpdu_count ;
   u32 fcs_err_count ;
   u32 airtime_link_metric ;
};
#line 1899  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_scan_info {
   u64 scan_start_tsf ;
   u8 tsf_bssid[6U] ;
   bool aborted ;
};
#line 1934  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_scan_request {
   struct cfg80211_ssid *ssids ;
   int n_ssids ;
   u32 n_channels ;
   enum nl80211_bss_scan_width scan_width ;
   u8 *ie ;
   size_t ie_len ;
   u16 duration ;
   bool duration_mandatory ;
   u32 flags ;
   u32 rates[4U] ;
   struct wireless_dev *wdev ;
   u8 mac_addr[6U] ;
   u8 mac_addr_mask[6U] ;
   u8 bssid[6U] ;
   struct wiphy *wiphy ;
   unsigned long scan_start ;
   struct cfg80211_scan_info info ;
   bool notified ;
   bool no_cck ;
   struct ieee80211_channel *channels[0U] ;
};
#line 2821  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_gtk_rekey_data {
   u8 *kek ;
   u8 *kck ;
   u8 *replay_ctr ;
};
#line 2921  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_nan_conf {
   u8 master_pref ;
   u8 bands ;
};
#line 2944  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_nan_func_filter {
   u8 *filter ;
   u8 len ;
};
#line 2978  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_nan_func {
   enum nl80211_nan_function_type type ;
   u8 service_id[6U] ;
   u8 publish_type ;
   bool close_range ;
   bool publish_bcast ;
   bool subscribe_active ;
   u8 followup_id ;
   u8 followup_reqid ;
   struct mac_address followup_dest ;
   u32 ttl ;
   u8 *serv_spec_info ;
   u8 serv_spec_info_len ;
   bool srf_include ;
   u8 *srf_bf ;
   u8 srf_bf_len ;
   u8 srf_bf_idx ;
   struct mac_address *srf_macs ;
   int srf_num_macs ;
   struct cfg80211_nan_func_filter *rx_filters ;
   struct cfg80211_nan_func_filter *tx_filters ;
   u8 num_tx_filters ;
   u8 num_rx_filters ;
   u8 instance_id ;
   u64 cookie ;
};
#line 3072  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_ftm_responder_stats {
   u32 filled ;
   u32 success_num ;
   u32 partial_num ;
   u32 failed_num ;
   u32 asap_num ;
   u32 non_asap_num ;
   u64 total_duration_ms ;
   u32 unknown_triggers_num ;
   u32 reschedule_requests_num ;
   u32 out_of_window_triggers_num ;
};
#line 3210  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_pmsr_ftm_request_peer {
   enum nl80211_preamble preamble ;
   u16 burst_period ;
   u8 requested : 1 ;
   u8 asap : 1 ;
   u8 request_lci : 1 ;
   u8 request_civicloc : 1 ;
   u8 num_bursts_exp ;
   u8 burst_duration ;
   u8 ftms_per_burst ;
   u8 ftmr_retries ;
};
#line 3230  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_pmsr_request_peer {
   u8 addr[6U] ;
   struct cfg80211_chan_def chandef ;
   u8 report_ap_tsf : 1 ;
   struct cfg80211_pmsr_ftm_request_peer ftm ;
};
#line 3253  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_pmsr_request {
   u64 cookie ;
   void *drv_data ;
   u32 n_peers ;
   u32 nl_portid ;
   u32 timeout ;
   u8 mac_addr[6U] ;
   u8 mac_addr_mask[6U] ;
   struct list_head list ;
   struct cfg80211_pmsr_request_peer peers[] ;
};
#line 184  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_low_level_stats {
   unsigned int dot11ACKFailureCount ;
   unsigned int dot11RTSFailureCount ;
   unsigned int dot11FCSErrorCount ;
   unsigned int dot11RTSSuccessCount ;
};
#line 235 
enum ieee80211_chanctx_switch_mode {
    CHANCTX_SWMODE_REASSIGN_VIF = 0,
    CHANCTX_SWMODE_SWAP_CONTEXTS = 1
};
#line 267  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_vif_chanctx_switch {
   struct ieee80211_vif *vif ;
   struct ieee80211_chanctx_conf *old_ctx ;
   struct ieee80211_chanctx_conf *new_ctx ;
};
#line 304 
enum ieee80211_event_type {
    RSSI_EVENT = 0,
    MLME_EVENT = 1,
    BAR_RX_EVENT = 2,
    BA_FRAME_TIMEOUT = 3
};
#line 311 
enum ieee80211_rssi_event_data {
    RSSI_EVENT_HIGH = 0,
    RSSI_EVENT_LOW = 1
};
#line 392  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_rssi_event {
   enum ieee80211_rssi_event_data data ;
};
#line 395 
enum ieee80211_mlme_event_data {
    AUTH_EVENT = 0,
    ASSOC_EVENT = 1,
    DEAUTH_RX_EVENT = 2,
    DEAUTH_TX_EVENT = 3
};
#line 402 
enum ieee80211_mlme_event_status {
    MLME_SUCCESS = 0,
    MLME_DENIED = 1,
    MLME_TIMEOUT = 2
};
#line 428  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_mlme_event {
   enum ieee80211_mlme_event_data data ;
   enum ieee80211_mlme_event_status status ;
   u16 reason ;
};
#line 440  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_ba_event {
   struct ieee80211_sta *sta ;
   u16 tid ;
   u16 ssn ;
};
#line 454  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
union __anonunion_u_7358 {
   struct ieee80211_rssi_event rssi ;
   struct ieee80211_mlme_event mlme ;
   struct ieee80211_ba_event ba ;
};
#line 454  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_event {
   enum ieee80211_event_type type ;
   union __anonunion_u_7358 u ;
};
#line 1106  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_scan_ies {
   u8 *ies[4U] ;
   size_t len[4U] ;
   u8 *common_ies ;
   size_t common_ie_len ;
};
#line 1556  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_channel_switch {
   u64 timestamp ;
   u32 device_timestamp ;
   bool block_tx ;
   struct cfg80211_chan_def chandef ;
   u8 count ;
   u32 delay ;
};
#line 1803  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct __anonstruct_tkip_7367 {
   u32 iv32 ;
   u16 iv16 ;
};
#line 1803  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct __anonstruct_ccmp_7368 {
   u8 pn[6U] ;
};
#line 1803  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct __anonstruct_aes_cmac_7369 {
   u8 pn[6U] ;
};
#line 1803  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct __anonstruct_aes_gmac_7370 {
   u8 pn[6U] ;
};
#line 1803  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct __anonstruct_gcmp_7371 {
   u8 pn[6U] ;
};
#line 1803  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct __anonstruct_hw_7372 {
   u8 seq[16U] ;
   u8 seq_len ;
};
#line 1803  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
union __anonunion_7366 {
   struct __anonstruct_tkip_7367 tkip ;
   struct __anonstruct_ccmp_7368 ccmp ;
   struct __anonstruct_aes_cmac_7369 aes_cmac ;
   struct __anonstruct_aes_gmac_7370 aes_gmac ;
   struct __anonstruct_gcmp_7371 gcmp ;
   struct __anonstruct_hw_7372 hw ;
};
#line 1803  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_key_seq {
   union __anonunion_7366 __anonCompField_ieee80211_key_seq_196 ;
};
#line 1857 
enum set_key_cmd {
    SET_KEY = 0,
    DISABLE_KEY = 1
};
#line 1862 
enum ieee80211_sta_state {
    IEEE80211_STA_NOTEXIST = 0,
    IEEE80211_STA_NONE = 1,
    IEEE80211_STA_AUTH = 2,
    IEEE80211_STA_ASSOC = 3,
    IEEE80211_STA_AUTHORIZED = 4
};
#line 2037 
enum sta_notify_cmd {
    STA_NOTIFY_SLEEP = 0,
    STA_NOTIFY_AWAKE = 1
};
#line 2083 
enum ieee80211_hw_flags {
    IEEE80211_HW_HAS_RATE_CONTROL = 0,
    IEEE80211_HW_RX_INCLUDES_FCS = 1,
    IEEE80211_HW_HOST_BROADCAST_PS_BUFFERING = 2,
    IEEE80211_HW_SIGNAL_UNSPEC = 3,
    IEEE80211_HW_SIGNAL_DBM = 4,
    IEEE80211_HW_NEED_DTIM_BEFORE_ASSOC = 5,
    IEEE80211_HW_SPECTRUM_MGMT = 6,
    IEEE80211_HW_AMPDU_AGGREGATION = 7,
    IEEE80211_HW_SUPPORTS_PS = 8,
    IEEE80211_HW_PS_NULLFUNC_STACK = 9,
    IEEE80211_HW_SUPPORTS_DYNAMIC_PS = 10,
    IEEE80211_HW_MFP_CAPABLE = 11,
    IEEE80211_HW_WANT_MONITOR_VIF = 12,
    IEEE80211_HW_NO_AUTO_VIF = 13,
    IEEE80211_HW_SW_CRYPTO_CONTROL = 14,
    IEEE80211_HW_SUPPORT_FAST_XMIT = 15,
    IEEE80211_HW_REPORTS_TX_ACK_STATUS = 16,
    IEEE80211_HW_CONNECTION_MONITOR = 17,
    IEEE80211_HW_QUEUE_CONTROL = 18,
    IEEE80211_HW_SUPPORTS_PER_STA_GTK = 19,
    IEEE80211_HW_AP_LINK_PS = 20,
    IEEE80211_HW_TX_AMPDU_SETUP_IN_HW = 21,
    IEEE80211_HW_SUPPORTS_RC_TABLE = 22,
    IEEE80211_HW_P2P_DEV_ADDR_FOR_INTF = 23,
    IEEE80211_HW_TIMING_BEACON_ONLY = 24,
    IEEE80211_HW_SUPPORTS_HT_CCK_RATES = 25,
    IEEE80211_HW_CHANCTX_STA_CSA = 26,
    IEEE80211_HW_SUPPORTS_CLONED_SKBS = 27,
    IEEE80211_HW_SINGLE_SCAN_ON_ALL_BANDS = 28,
    IEEE80211_HW_TDLS_WIDER_BW = 29,
    IEEE80211_HW_SUPPORTS_AMSDU_IN_AMPDU = 30,
    IEEE80211_HW_BEACON_TX_STATUS = 31,
    IEEE80211_HW_NEEDS_UNIQUE_STA_ADDR = 32,
    IEEE80211_HW_SUPPORTS_REORDERING_BUFFER = 33,
    IEEE80211_HW_USES_RSS = 34,
    IEEE80211_HW_TX_AMSDU = 35,
    IEEE80211_HW_TX_FRAG_LIST = 36,
    IEEE80211_HW_REPORTS_LOW_ACK = 37,
    IEEE80211_HW_SUPPORTS_TX_FRAG = 38,
    IEEE80211_HW_SUPPORTS_TDLS_BUFFER_STA = 39,
    IEEE80211_HW_DEAUTH_NEED_MGD_TX_PREP = 40,
    IEEE80211_HW_DOESNT_SUPPORT_QOS_NDP = 41,
    IEEE80211_HW_BUFF_MMPDU_TXQ = 42,
    IEEE80211_HW_SUPPORTS_VHT_EXT_NSS_BW = 43,
    IEEE80211_HW_STA_MMPDU_TXQ = 44,
    IEEE80211_HW_TX_STATUS_NO_AMPDU_LEN = 45,
    IEEE80211_HW_SUPPORTS_MULTI_BSSID = 46,
    IEEE80211_HW_SUPPORTS_ONLY_HE_MULTI_BSSID = 47,
    IEEE80211_HW_AMPDU_KEYBORDER_SUPPORT = 48,
    NUM_IEEE80211_HW_FLAGS = 49
};
#line 2546  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_scan_request {
   struct ieee80211_scan_ies ies ;
   struct cfg80211_scan_request req ;
};
#line 2566  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_tdls_ch_sw_params {
   struct ieee80211_sta *sta ;
   struct cfg80211_chan_def *chandef ;
   u8 action_code ;
   u32 status ;
   u32 timestamp ;
   u16 switch_time ;
   u16 switch_timeout ;
   struct sk_buff *tmpl_skb ;
   u32 ch_sw_tm_ie ;
};
#line 2662 
enum ieee80211_ampdu_mlme_action {
    IEEE80211_AMPDU_RX_START = 0,
    IEEE80211_AMPDU_RX_STOP = 1,
    IEEE80211_AMPDU_TX_START = 2,
    IEEE80211_AMPDU_TX_STOP_CONT = 3,
    IEEE80211_AMPDU_TX_STOP_FLUSH = 4,
    IEEE80211_AMPDU_TX_STOP_FLUSH_CONT = 5,
    IEEE80211_AMPDU_TX_OPERATIONAL = 6
};
#line 3161  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_ampdu_params {
   enum ieee80211_ampdu_mlme_action action ;
   struct ieee80211_sta *sta ;
   u16 tid ;
   u16 ssn ;
   u16 buf_size ;
   bool amsdu ;
   u16 timeout ;
};
#line 3170 
enum ieee80211_frame_release_type {
    IEEE80211_FRAME_RELEASE_PSPOLL = 0,
    IEEE80211_FRAME_RELEASE_UAPSD = 1
};
#line 3182 
enum ieee80211_roc_type {
    IEEE80211_ROC_TYPE_NORMAL = 0,
    IEEE80211_ROC_TYPE_MGMT_TX = 1
};
#line 3187 
enum ieee80211_reconfig_type {
    IEEE80211_RECONFIG_TYPE_RESTART = 0,
    IEEE80211_RECONFIG_TYPE_SUSPEND = 1
};
#line 3778  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_ops {
   void (*tx)(struct ieee80211_hw *, struct ieee80211_tx_control *, struct sk_buff *) ;
   int (*start)(struct ieee80211_hw *) ;
   void (*stop)(struct ieee80211_hw *) ;
   int (*suspend)(struct ieee80211_hw *, struct cfg80211_wowlan *) ;
   int (*resume)(struct ieee80211_hw *) ;
   void (*set_wakeup)(struct ieee80211_hw *, bool ) ;
   int (*add_interface)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   int (*change_interface)(struct ieee80211_hw *, struct ieee80211_vif *, enum nl80211_iftype , bool ) ;
   void (*remove_interface)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   int (*config)(struct ieee80211_hw *, u32 ) ;
   void (*bss_info_changed)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_bss_conf *, u32 ) ;
   int (*start_ap)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   void (*stop_ap)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   u64 (*prepare_multicast)(struct ieee80211_hw *, struct netdev_hw_addr_list *) ;
   void (*configure_filter)(struct ieee80211_hw *, unsigned int , unsigned int *, u64 ) ;
   void (*config_iface_filter)(struct ieee80211_hw *, struct ieee80211_vif *, unsigned int , unsigned int ) ;
   int (*set_tim)(struct ieee80211_hw *, struct ieee80211_sta *, bool ) ;
   int (*set_key)(struct ieee80211_hw *, enum set_key_cmd , struct ieee80211_vif *, struct ieee80211_sta *, struct ieee80211_key_conf *) ;
   void (*update_tkip_key)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_key_conf *, struct ieee80211_sta *, u32 , u16 *) ;
   void (*set_rekey_data)(struct ieee80211_hw *, struct ieee80211_vif *, struct cfg80211_gtk_rekey_data *) ;
   void (*set_default_unicast_key)(struct ieee80211_hw *, struct ieee80211_vif *, int ) ;
   int (*hw_scan)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_scan_request *) ;
   void (*cancel_hw_scan)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   int (*sched_scan_start)(struct ieee80211_hw *, struct ieee80211_vif *, struct cfg80211_sched_scan_request *, struct ieee80211_scan_ies *) ;
   int (*sched_scan_stop)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   void (*sw_scan_start)(struct ieee80211_hw *, struct ieee80211_vif *, u8 *) ;
   void (*sw_scan_complete)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   int (*get_stats)(struct ieee80211_hw *, struct ieee80211_low_level_stats *) ;
   void (*get_key_seq)(struct ieee80211_hw *, struct ieee80211_key_conf *, struct ieee80211_key_seq *) ;
   int (*set_frag_threshold)(struct ieee80211_hw *, u32 ) ;
   int (*set_rts_threshold)(struct ieee80211_hw *, u32 ) ;
   int (*sta_add)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *) ;
   int (*sta_remove)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *) ;
   void (*sta_add_debugfs)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *, struct dentry *) ;
   void (*sta_notify)(struct ieee80211_hw *, struct ieee80211_vif *, enum sta_notify_cmd , struct ieee80211_sta *) ;
   int (*sta_set_txpwr)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *) ;
   int (*sta_state)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *, enum ieee80211_sta_state , enum ieee80211_sta_state ) ;
   void (*sta_pre_rcu_remove)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *) ;
   void (*sta_rc_update)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *, u32 ) ;
   void (*sta_rate_tbl_update)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *) ;
   void (*sta_statistics)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *, struct station_info *) ;
   int (*conf_tx)(struct ieee80211_hw *, struct ieee80211_vif *, u16 , struct ieee80211_tx_queue_params *) ;
   u64 (*get_tsf)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   void (*set_tsf)(struct ieee80211_hw *, struct ieee80211_vif *, u64 ) ;
   void (*offset_tsf)(struct ieee80211_hw *, struct ieee80211_vif *, s64 ) ;
   void (*reset_tsf)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   int (*tx_last_beacon)(struct ieee80211_hw *) ;
   int (*ampdu_action)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_ampdu_params *) ;
   int (*get_survey)(struct ieee80211_hw *, int , struct survey_info *) ;
   void (*rfkill_poll)(struct ieee80211_hw *) ;
   void (*set_coverage_class)(struct ieee80211_hw *, s16 ) ;
   int (*testmode_cmd)(struct ieee80211_hw *, struct ieee80211_vif *, void *, int ) ;
   int (*testmode_dump)(struct ieee80211_hw *, struct sk_buff *, struct netlink_callback *, void *, int ) ;
   void (*flush)(struct ieee80211_hw *, struct ieee80211_vif *, u32 , bool ) ;
   void (*channel_switch)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_channel_switch *) ;
   int (*set_antenna)(struct ieee80211_hw *, u32 , u32 ) ;
   int (*get_antenna)(struct ieee80211_hw *, u32 *, u32 *) ;
   int (*remain_on_channel)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_channel *, int , enum ieee80211_roc_type ) ;
   int (*cancel_remain_on_channel)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   int (*set_ringparam)(struct ieee80211_hw *, u32 , u32 ) ;
   void (*get_ringparam)(struct ieee80211_hw *, u32 *, u32 *, u32 *, u32 *) ;
   bool (*tx_frames_pending)(struct ieee80211_hw *) ;
   int (*set_bitrate_mask)(struct ieee80211_hw *, struct ieee80211_vif *, struct cfg80211_bitrate_mask *) ;
   void (*event_callback)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_event *) ;
   void (*allow_buffered_frames)(struct ieee80211_hw *, struct ieee80211_sta *, u16 , int , enum ieee80211_frame_release_type , bool ) ;
   void (*release_buffered_frames)(struct ieee80211_hw *, struct ieee80211_sta *, u16 , int , enum ieee80211_frame_release_type , bool ) ;
   int (*get_et_sset_count)(struct ieee80211_hw *, struct ieee80211_vif *, int ) ;
   void (*get_et_stats)(struct ieee80211_hw *, struct ieee80211_vif *, struct ethtool_stats *, u64 *) ;
   void (*get_et_strings)(struct ieee80211_hw *, struct ieee80211_vif *, u32 , u8 *) ;
   void (*mgd_prepare_tx)(struct ieee80211_hw *, struct ieee80211_vif *, u16 ) ;
   void (*mgd_protect_tdls_discover)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   int (*add_chanctx)(struct ieee80211_hw *, struct ieee80211_chanctx_conf *) ;
   void (*remove_chanctx)(struct ieee80211_hw *, struct ieee80211_chanctx_conf *) ;
   void (*change_chanctx)(struct ieee80211_hw *, struct ieee80211_chanctx_conf *, u32 ) ;
   int (*assign_vif_chanctx)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_chanctx_conf *) ;
   void (*unassign_vif_chanctx)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_chanctx_conf *) ;
   int (*switch_vif_chanctx)(struct ieee80211_hw *, struct ieee80211_vif_chanctx_switch *, int , enum ieee80211_chanctx_switch_mode ) ;
   void (*reconfig_complete)(struct ieee80211_hw *, enum ieee80211_reconfig_type ) ;
   void (*ipv6_addr_change)(struct ieee80211_hw *, struct ieee80211_vif *, struct inet6_dev *) ;
   void (*channel_switch_beacon)(struct ieee80211_hw *, struct ieee80211_vif *, struct cfg80211_chan_def *) ;
   int (*pre_channel_switch)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_channel_switch *) ;
   int (*post_channel_switch)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   void (*abort_channel_switch)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   void (*channel_switch_rx_beacon)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_channel_switch *) ;
   int (*join_ibss)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   void (*leave_ibss)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   u32 (*get_expected_throughput)(struct ieee80211_hw *, struct ieee80211_sta *) ;
   int (*get_txpower)(struct ieee80211_hw *, struct ieee80211_vif *, int *) ;
   int (*tdls_channel_switch)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *, u8 , struct cfg80211_chan_def *, struct sk_buff *, u32 ) ;
   void (*tdls_cancel_channel_switch)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *) ;
   void (*tdls_recv_channel_switch)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_tdls_ch_sw_params *) ;
   void (*wake_tx_queue)(struct ieee80211_hw *, struct ieee80211_txq *) ;
   void (*sync_rx_queues)(struct ieee80211_hw *) ;
   int (*start_nan)(struct ieee80211_hw *, struct ieee80211_vif *, struct cfg80211_nan_conf *) ;
   int (*stop_nan)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   int (*nan_change_conf)(struct ieee80211_hw *, struct ieee80211_vif *, struct cfg80211_nan_conf *, u32 ) ;
   int (*add_nan_func)(struct ieee80211_hw *, struct ieee80211_vif *, struct cfg80211_nan_func *) ;
   void (*del_nan_func)(struct ieee80211_hw *, struct ieee80211_vif *, u8 ) ;
   bool (*can_aggregate_in_amsdu)(struct ieee80211_hw *, struct sk_buff *, struct sk_buff *) ;
   int (*get_ftm_responder_stats)(struct ieee80211_hw *, struct ieee80211_vif *, struct cfg80211_ftm_responder_stats *) ;
   int (*start_pmsr)(struct ieee80211_hw *, struct ieee80211_vif *, struct cfg80211_pmsr_request *) ;
   void (*abort_pmsr)(struct ieee80211_hw *, struct ieee80211_vif *, struct cfg80211_pmsr_request *) ;
};
#line 652  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/carl9170.h"
union __anonunion___u_7396 {
   struct list_head *__val ;
   char __c[1U] ;
};
#line 652  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/carl9170.h"
union __anonunion___u_7398 {
   struct list_head *__val ;
   char __c[1U] ;
};
#line 190  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/main.c"
union __anonunion___u_7400 {
   struct list_head *__val ;
   char __c[1U] ;
};
#line 190  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/main.c"
union __anonunion___u_7402 {
   struct list_head *__val ;
   char __c[1U] ;
};
#line 201  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/main.c"
union __anonunion___u_7406 {
   struct carl9170_sta_tid *__val ;
   char __c[1U] ;
};
#line 259  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/main.c"
union __anonunion___u_7408 {
   struct list_head *__val ;
   char __c[1U] ;
};
#line 259  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/main.c"
union __anonunion___u_7410 {
   struct list_head *__val ;
   char __c[1U] ;
};
#line 314  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/main.c"
union __anonunion___u_7412 {
   struct list_head *__val ;
   char __c[1U] ;
};
#line 314  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/main.c"
union __anonunion___u_7414 {
   struct list_head *__val ;
   char __c[1U] ;
};
#line 453  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/main.c"
union __anonunion___u_7416 {
   struct carl9170_vif_info *__val ;
   char __c[1U] ;
};
#line 704  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/main.c"
union __anonunion___u_7420 {
   struct ieee80211_vif *__val ;
   char __c[1U] ;
};
#line 710  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/main.c"
union __anonunion___u_7424 {
   struct carl9170_vif_info *__val ;
   char __c[1U] ;
};
#line 750  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/main.c"
union __anonunion___u_7426 {
   struct ieee80211_vif *__val ;
   char __c[1U] ;
};
#line 788  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/main.c"
union __anonunion___u_7428 {
   struct ieee80211_vif *__val ;
   char __c[1U] ;
};
#line 1070  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/main.c"
union __anonunion___u_7430 {
   struct list_head *__val ;
   char __c[1U] ;
};
#line 1070  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/main.c"
union __anonunion___u_7432 {
   struct list_head *__val ;
   char __c[1U] ;
};
#line 1335  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/main.c"
union __anonunion___u_7435 {
   struct carl9170_sta_tid *__val ;
   char __c[1U] ;
};
#line 1361  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/main.c"
union __anonunion___u_7438 {
   struct carl9170_sta_tid *__val ;
   char __c[1U] ;
};
#line 1362  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/main.c"
union __anonunion___u_7440 {
   struct carl9170_sta_tid *__val ;
   char __c[1U] ;
};
#line 1449  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/main.c"
union __anonunion___u_7444 {
   struct carl9170_sta_tid *__val ;
   char __c[1U] ;
};
#line 1458  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/main.c"
union __anonunion___u_7446 {
   struct carl9170_sta_tid *__val ;
   char __c[1U] ;
};
#line 1466  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/main.c"
union __anonunion___u_7448 {
   struct carl9170_sta_tid *__val ;
   char __c[1U] ;
};
#line 1475  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/main.c"
union __anonunion___u_7450 {
   struct carl9170_sta_tid *__val ;
   char __c[1U] ;
};
#line 1833  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/main.c"
union __anonunion___u_7458 {
   struct carl9170_sta_tid *__val ;
   char __c[1U] ;
};
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 652  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/carl9170.h"
union __anonunion___u_8501 {
   struct list_head *__val ;
   char __c[1U] ;
};
#line 652  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/carl9170.h"
union __anonunion___u_8503 {
   struct list_head *__val ;
   char __c[1U] ;
};
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/atomic.h"
union __anonunion___u_8572 {
   int __val ;
   char __c[1U] ;
};
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 112  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/fwdesc.h"
struct carl9170fw_otus_desc {
   struct carl9170fw_desc_head head ;
   __le32 feature_set ;
   __le32 fw_address ;
   __le32 bcn_addr ;
   __le16 bcn_len ;
   __le16 miniboot_size ;
   __le16 tx_frag_len ;
   __le16 rx_max_frame_len ;
   u8 tx_descs ;
   u8 cmd_bufs ;
   u8 api_ver ;
   u8 vif_num ;
} __attribute__((__packed__));
#line 133  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/fwdesc.h"
struct carl9170fw_motd_desc {
   struct carl9170fw_desc_head head ;
   __le32 fw_year_month_day ;
   char desc[24U] ;
   char release[20U] ;
} __attribute__((__packed__));
#line 175  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/fwdesc.h"
struct carl9170fw_chk_desc {
   struct carl9170fw_desc_head head ;
   __le32 fw_crc32 ;
   __le32 hdr_crc32 ;
} __attribute__((__packed__));
#line 185  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/fwdesc.h"
struct carl9170fw_txsq_desc {
   struct carl9170fw_desc_head head ;
   __le32 seq_table_addr ;
} __attribute__((__packed__));
#line 205  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/fwdesc.h"
struct carl9170fw_last_desc {
   struct carl9170fw_desc_head head ;
} __attribute__((__packed__));
#line 106  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
union __anonunion___u_9565 {
   struct list_head *__val ;
   char __c[1U] ;
};
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 41  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netfilter/nf_conntrack_common.h"
struct napi_struct;
#line 302  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct gro_list {
   struct list_head list ;
   int count ;
};
#line 316  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct napi_struct {
   struct list_head poll_list ;
   unsigned long state ;
   int weight ;
   unsigned long gro_bitmask ;
   int (*poll)(struct napi_struct *, int ) ;
   int poll_owner ;
   struct net_device *dev ;
   struct gro_list gro_hash[8U] ;
   struct sk_buff *skb ;
   struct list_head rx_list ;
   int rx_count ;
   struct hrtimer timer ;
   struct list_head dev_list ;
   struct hlist_node napi_hash_node ;
   unsigned int napi_id ;
};
#line 706  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct ieee80211_msrment_ie {
   u8 token ;
   u8 mode ;
   u8 type ;
   u8 request[0U] ;
} __attribute__((__packed__));
#line 729  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct ieee80211_ext_chansw_ie {
   u8 mode ;
   u8 new_operating_class ;
   u8 new_ch_num ;
   u8 count ;
} __attribute__((__packed__));
#line 771  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct ieee80211_tim_ie {
   u8 dtim_count ;
   u8 dtim_period ;
   u8 bitmap_ctrl ;
   u8 virtual_map[1U] ;
} __attribute__((__packed__));
#line 879  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct ieee80211_tpc_report_ie {
   u8 tx_power ;
   u8 link_margin ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_auth_10246 {
   __le16 auth_alg ;
   __le16 auth_transaction ;
   __le16 status_code ;
   u8 variable[0U] ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_deauth_10247 {
   __le16 reason_code ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_assoc_req_10248 {
   __le16 capab_info ;
   __le16 listen_interval ;
   u8 variable[0U] ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_assoc_resp_10249 {
   __le16 capab_info ;
   __le16 status_code ;
   __le16 aid ;
   u8 variable[0U] ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_reassoc_resp_10250 {
   __le16 capab_info ;
   __le16 status_code ;
   __le16 aid ;
   u8 variable[0U] ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_reassoc_req_10251 {
   __le16 capab_info ;
   __le16 listen_interval ;
   u8 current_ap[6U] ;
   u8 variable[0U] ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_disassoc_10252 {
   __le16 reason_code ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_beacon_10253 {
   __le64 timestamp ;
   __le16 beacon_int ;
   __le16 capab_info ;
   u8 variable[0U] ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_probe_req_10254 {
   u8 variable[0U] ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_probe_resp_10255 {
   __le64 timestamp ;
   __le16 beacon_int ;
   __le16 capab_info ;
   u8 variable[0U] ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_wme_action_10258 {
   u8 action_code ;
   u8 dialog_token ;
   u8 status_code ;
   u8 variable[0U] ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_chan_switch_10259 {
   u8 action_code ;
   u8 variable[0U] ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_ext_chan_switch_10260 {
   u8 action_code ;
   struct ieee80211_ext_chansw_ie data ;
   u8 variable[0U] ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_measurement_10261 {
   u8 action_code ;
   u8 dialog_token ;
   u8 element_id ;
   u8 length ;
   struct ieee80211_msrment_ie msr_elem ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_addba_req_10262 {
   u8 action_code ;
   u8 dialog_token ;
   __le16 capab ;
   __le16 timeout ;
   __le16 start_seq_num ;
   u8 variable[0U] ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_addba_resp_10263 {
   u8 action_code ;
   u8 dialog_token ;
   __le16 status ;
   __le16 capab ;
   __le16 timeout ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_delba_10264 {
   u8 action_code ;
   __le16 params ;
   __le16 reason_code ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_self_prot_10265 {
   u8 action_code ;
   u8 variable[0U] ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_mesh_action_10266 {
   u8 action_code ;
   u8 variable[0U] ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_sa_query_10267 {
   u8 action ;
   u8 trans_id[2U] ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_ht_smps_10268 {
   u8 action ;
   u8 smps_control ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_ht_notify_cw_10269 {
   u8 action_code ;
   u8 chanwidth ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_tdls_discover_resp_10270 {
   u8 action_code ;
   u8 dialog_token ;
   __le16 capability ;
   u8 variable[0U] ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_vht_opmode_notif_10271 {
   u8 action_code ;
   u8 operating_mode ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_vht_group_notif_10272 {
   u8 action_code ;
   u8 membership[8U] ;
   u8 position[16U] ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_tpc_report_10273 {
   u8 action_code ;
   u8 dialog_token ;
   u8 tpc_elem_id ;
   u8 tpc_elem_length ;
   struct ieee80211_tpc_report_ie tpc ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_ftm_10274 {
   u8 action_code ;
   u8 dialog_token ;
   u8 follow_up ;
   u8 tod[6U] ;
   u8 toa[6U] ;
   __le16 tod_error ;
   __le16 toa_error ;
   u8 variable[0U] ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
union __anonunion_u_10257 {
   struct __anonstruct_wme_action_10258 wme_action ;
   struct __anonstruct_chan_switch_10259 chan_switch ;
   struct __anonstruct_ext_chan_switch_10260 ext_chan_switch ;
   struct __anonstruct_measurement_10261 measurement ;
   struct __anonstruct_addba_req_10262 addba_req ;
   struct __anonstruct_addba_resp_10263 addba_resp ;
   struct __anonstruct_delba_10264 delba ;
   struct __anonstruct_self_prot_10265 self_prot ;
   struct __anonstruct_mesh_action_10266 mesh_action ;
   struct __anonstruct_sa_query_10267 sa_query ;
   struct __anonstruct_ht_smps_10268 ht_smps ;
   struct __anonstruct_ht_notify_cw_10269 ht_notify_cw ;
   struct __anonstruct_tdls_discover_resp_10270 tdls_discover_resp ;
   struct __anonstruct_vht_opmode_notif_10271 vht_opmode_notif ;
   struct __anonstruct_vht_group_notif_10272 vht_group_notif ;
   struct __anonstruct_tpc_report_10273 tpc_report ;
   struct __anonstruct_ftm_10274 ftm ;
};
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_action_10256 {
   u8 category ;
   union __anonunion_u_10257 u ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
union __anonunion_u_10245 {
   struct __anonstruct_auth_10246 auth ;
   struct __anonstruct_deauth_10247 deauth ;
   struct __anonstruct_assoc_req_10248 assoc_req ;
   struct __anonstruct_assoc_resp_10249 assoc_resp ;
   struct __anonstruct_reassoc_resp_10250 reassoc_resp ;
   struct __anonstruct_reassoc_req_10251 reassoc_req ;
   struct __anonstruct_disassoc_10252 disassoc ;
   struct __anonstruct_beacon_10253 beacon ;
   struct __anonstruct_probe_req_10254 probe_req ;
   struct __anonstruct_probe_resp_10255 probe_resp ;
   struct __anonstruct_action_10256 action ;
};
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct ieee80211_mgmt {
   __le16 frame_control ;
   __le16 duration ;
   u8 da[6U] ;
   u8 sa[6U] ;
   u8 bssid[6U] ;
   __le16 seq_ctrl ;
   union __anonunion_u_10245 u ;
} __attribute__((__packed__, __aligned__(2)));
#line 1119  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_rx_status;
#line 1358  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_rx_status {
   u64 mactime ;
   u64 boottime_ns ;
   u32 device_timestamp ;
   u32 ampdu_reference ;
   u32 flag ;
   u16 freq ;
   u8 enc_flags ;
   u8 encoding : 2 ;
   u8 bw : 3 ;
   u8 he_ru : 3 ;
   u8 he_gi : 2 ;
   u8 he_dcm : 1 ;
   u8 rate_idx ;
   u8 nss ;
   u8 rx_flags ;
   u8 band ;
   u8 antenna ;
   s8 signal ;
   u8 chains ;
   s8 chain_signal[4U] ;
   u8 ampdu_delimiter_crc ;
   u8 zero_length_psdu_type ;
};
#line 344  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/wlan.h"
struct __anonstruct_10584 {
   u8 rssi_ant0 ;
   u8 rssi_ant1 ;
   u8 rssi_ant2 ;
   u8 rssi_ant0x ;
   u8 rssi_ant1x ;
   u8 rssi_ant2x ;
   u8 rssi_combined ;
} __attribute__((__packed__));
#line 344  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/wlan.h"
union __anonunion_10583 {
   struct __anonstruct_10584 __anonCompField___anonunion_10583_202 ;
   u8 rssi[7U] ;
} __attribute__((__packed__));
#line 344  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/wlan.h"
struct ar9170_rx_phystatus {
   union __anonunion_10583 __anonCompField_ar9170_rx_phystatus_203 ;
   u8 evm_stream0[6U] ;
   u8 evm_stream1[6U] ;
   u8 phy_err ;
} __attribute__((__packed__));
#line 360  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/wlan.h"
struct ar9170_rx_macstatus {
   u8 SAidx ;
   u8 DAidx ;
   u8 error ;
   u8 status ;
} __attribute__((__packed__));
#line 652  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/carl9170.h"
union __anonunion___u_10593 {
   struct list_head *__val ;
   char __c[1U] ;
};
#line 652  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/carl9170.h"
union __anonunion___u_10595 {
   struct list_head *__val ;
   char __c[1U] ;
};
#line 590  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/rx.c"
union __anonunion___u_10597 {
   struct list_head *__val ;
   char __c[1U] ;
};
#line 590  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/rx.c"
union __anonunion___u_10599 {
   struct list_head *__val ;
   char __c[1U] ;
};
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 197 
enum hrtimer_restart;
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
struct device_private {
   void *driver_data ;
};
#line 164  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef unsigned long irq_hw_number_t;
#line 303  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ioport.h"
struct irq_data;
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 244  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/idr.h"
struct ida {
   struct xarray xa ;
};
#line 439  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/property.h"
typedef u32 phandle;
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/of.h"
struct property {
   char *name ;
   int length ;
   void *value ;
   struct property *next ;
   unsigned long _flags ;
   struct bin_attribute attr ;
};
#line 51  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/of.h"
struct device_node {
   char *name ;
   phandle phandle ;
   char *full_name ;
   struct fwnode_handle fwnode ;
   struct property *properties ;
   struct property *deadprops ;
   struct device_node *parent ;
   struct device_node *child ;
   struct device_node *sibling ;
   struct kobject kobj ;
   unsigned long _flags ;
   void *data ;
};
#line 63  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/irqdomain.h"
struct irq_fwspec {
   struct fwnode_handle *fwnode ;
   int param_count ;
   u32 param[16U] ;
};
#line 68 
enum irq_domain_bus_token {
    DOMAIN_BUS_ANY = 0,
    DOMAIN_BUS_WIRED = 1,
    DOMAIN_BUS_GENERIC_MSI = 2,
    DOMAIN_BUS_PCI_MSI = 3,
    DOMAIN_BUS_PLATFORM_MSI = 4,
    DOMAIN_BUS_NEXUS = 5,
    DOMAIN_BUS_IPI = 6,
    DOMAIN_BUS_FSL_MC_MSI = 7,
    DOMAIN_BUS_TI_SCI_INTA_MSI = 8,
    DOMAIN_BUS_WAKEUP = 9
};
#line 104  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/irqdomain.h"
struct irq_domain_ops {
   int (*match)(struct irq_domain *, struct device_node *, enum irq_domain_bus_token ) ;
   int (*select)(struct irq_domain *, struct irq_fwspec *, enum irq_domain_bus_token ) ;
   int (*map)(struct irq_domain *, unsigned int , irq_hw_number_t ) ;
   void (*unmap)(struct irq_domain *, unsigned int ) ;
   int (*xlate)(struct irq_domain *, struct device_node *, u32 *, unsigned int , unsigned long *, unsigned int *) ;
   int (*alloc)(struct irq_domain *, unsigned int , unsigned int , void *) ;
   void (*free)(struct irq_domain *, unsigned int , unsigned int ) ;
   int (*activate)(struct irq_domain *, struct irq_data *, bool ) ;
   void (*deactivate)(struct irq_domain *, struct irq_data *) ;
   int (*translate)(struct irq_domain *, struct irq_fwspec *, unsigned long *, unsigned int *) ;
   void (*debug_show)(struct seq_file *, struct irq_domain *, struct irq_data *, int ) ;
};
#line 132 
struct irq_domain_chip_generic;
#line 161  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/irqdomain.h"
struct irq_domain {
   struct list_head link ;
   char *name ;
   struct irq_domain_ops *ops ;
   void *host_data ;
   unsigned int flags ;
   unsigned int mapcount ;
   struct fwnode_handle *fwnode ;
   enum irq_domain_bus_token bus_token ;
   struct irq_domain_chip_generic *gc ;
   struct irq_domain *parent ;
   struct dentry *debugfs_file ;
   irq_hw_number_t hwirq_max ;
   unsigned int revmap_direct_max_irq ;
   unsigned int revmap_size ;
   struct xarray revmap_tree ;
   struct mutex revmap_tree_mutex ;
   unsigned int linear_revmap[] ;
};
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rtmutex.h"
struct rt_mutex {
   raw_spinlock_t wait_lock ;
   struct rb_root_cached waiters ;
   struct task_struct *owner ;
   int save_state ;
   char *name ;
   char *file ;
   int line ;
   void *magic ;
   struct lockdep_map dep_map ;
};
#line 69  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/i2c.h"
struct i2c_msg {
   __u16 addr ;
   __u16 flags ;
   __u16 len ;
   __u8 *buf ;
};
#line 135  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/i2c.h"
union i2c_smbus_data {
   __u8 byte ;
   __u16 word ;
   __u8 block[34U] ;
};
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/i2c.h"
struct i2c_algorithm;
#line 28 
struct i2c_adapter;
#line 29 
struct i2c_client;
#line 33 
enum i2c_slave_event;
#line 33 
enum i2c_slave_event;
#line 314  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/i2c.h"
struct i2c_client {
   unsigned short flags ;
   unsigned short addr ;
   char name[20U] ;
   struct i2c_adapter *adapter ;
   struct device dev ;
   int init_irq ;
   int irq ;
   struct list_head detected ;
   int (*slave_cb)(struct i2c_client *, enum i2c_slave_event , u8 *) ;
};
#line 360 
enum i2c_slave_event {
    I2C_SLAVE_READ_REQUESTED = 0,
    I2C_SLAVE_WRITE_REQUESTED = 1,
    I2C_SLAVE_READ_PROCESSED = 2,
    I2C_SLAVE_WRITE_RECEIVED = 3,
    I2C_SLAVE_STOP = 4
};
#line 527  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/i2c.h"
struct i2c_algorithm {
   int (*master_xfer)(struct i2c_adapter *, struct i2c_msg *, int ) ;
   int (*master_xfer_atomic)(struct i2c_adapter *, struct i2c_msg *, int ) ;
   int (*smbus_xfer)(struct i2c_adapter *, u16 , unsigned short , char , u8 , int , union i2c_smbus_data *) ;
   int (*smbus_xfer_atomic)(struct i2c_adapter *, u16 , unsigned short , char , u8 , int , union i2c_smbus_data *) ;
   u32 (*functionality)(struct i2c_adapter *) ;
   int (*reg_slave)(struct i2c_client *) ;
   int (*unreg_slave)(struct i2c_client *) ;
};
#line 565  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/i2c.h"
struct i2c_lock_operations {
   void (*lock_bus)(struct i2c_adapter *, unsigned int ) ;
   int (*trylock_bus)(struct i2c_adapter *, unsigned int ) ;
   void (*unlock_bus)(struct i2c_adapter *, unsigned int ) ;
};
#line 618 
struct gpio_desc;
#line 618  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/i2c.h"
struct i2c_bus_recovery_info {
   int (*recover_bus)(struct i2c_adapter *) ;
   int (*get_scl)(struct i2c_adapter *) ;
   void (*set_scl)(struct i2c_adapter *, int ) ;
   int (*get_sda)(struct i2c_adapter *) ;
   void (*set_sda)(struct i2c_adapter *, int ) ;
   int (*get_bus_free)(struct i2c_adapter *) ;
   void (*prepare_recovery)(struct i2c_adapter *) ;
   void (*unprepare_recovery)(struct i2c_adapter *) ;
   struct gpio_desc *scl_gpiod ;
   struct gpio_desc *sda_gpiod ;
};
#line 661  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/i2c.h"
struct i2c_adapter_quirks {
   u64 flags ;
   int max_num_msgs ;
   u16 max_write_len ;
   u16 max_read_len ;
   u16 max_comb_1st_msg_len ;
   u16 max_comb_2nd_msg_len ;
};
#line 692  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/i2c.h"
struct i2c_adapter {
   struct module *owner ;
   unsigned int class ;
   struct i2c_algorithm *algo ;
   void *algo_data ;
   struct i2c_lock_operations *lock_ops ;
   struct rt_mutex bus_lock ;
   struct rt_mutex mux_lock ;
   int timeout ;
   int retries ;
   struct device dev ;
   unsigned long locked_flags ;
   int nr ;
   char name[48U] ;
   struct completion dev_released ;
   struct mutex userspace_clients_lock ;
   struct list_head userspace_clients ;
   struct i2c_bus_recovery_info *bus_recovery_info ;
   struct i2c_adapter_quirks *quirks ;
   struct irq_domain *host_notify_domain ;
};
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cdev.h"
struct cdev {
   struct kobject kobj ;
   struct module *owner ;
   struct file_operations *ops ;
   struct list_head list ;
   dev_t dev ;
   unsigned int count ;
} __attribute__((__designated_init__));
#line 87  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/v4l2-common.h"
struct v4l2_edid {
   __u32 pad ;
   __u32 start_block ;
   __u32 blocks ;
   __u32 reserved[5U] ;
   __u8 *edid ;
};
#line 754 
enum v4l2_priority {
    V4L2_PRIORITY_UNSET = 0,
    V4L2_PRIORITY_BACKGROUND = 1,
    V4L2_PRIORITY_INTERACTIVE = 2,
    V4L2_PRIORITY_RECORD = 3,
    V4L2_PRIORITY_DEFAULT = 2
};
#line 413  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_rect {
   __s32 left ;
   __s32 top ;
   __u32 width ;
   __u32 height ;
};
#line 420  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_fract {
   __u32 numerator ;
   __u32 denominator ;
};
#line 1212  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
typedef __u64 v4l2_std_id;
#line 1394  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_bt_timings {
   __u32 width ;
   __u32 height ;
   __u32 interlaced ;
   __u32 polarities ;
   __u64 pixelclock ;
   __u32 hfrontporch ;
   __u32 hsync ;
   __u32 hbackporch ;
   __u32 vfrontporch ;
   __u32 vsync ;
   __u32 vbackporch ;
   __u32 il_vfrontporch ;
   __u32 il_vsync ;
   __u32 il_vbackporch ;
   __u32 standards ;
   __u32 flags ;
   struct v4l2_fract picture_aspect ;
   __u8 cea861_vic ;
   __u8 hdmi_vic ;
   __u8 reserved[46U] ;
} __attribute__((__packed__));
#line 1517  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
union __anonunion_12378 {
   struct v4l2_bt_timings bt ;
   __u32 reserved[32U] ;
};
#line 1517  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_dv_timings {
   __u32 type ;
   union __anonunion_12378 __anonCompField_v4l2_dv_timings_77 ;
} __attribute__((__packed__));
#line 1536  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_enum_dv_timings {
   __u32 index ;
   __u32 pad ;
   __u32 reserved[2U] ;
   struct v4l2_dv_timings timings ;
};
#line 1554  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_bt_timings_cap {
   __u32 min_width ;
   __u32 max_width ;
   __u32 min_height ;
   __u32 max_height ;
   __u64 min_pixelclock ;
   __u64 max_pixelclock ;
   __u32 standards ;
   __u32 capabilities ;
   __u32 reserved[16U] ;
} __attribute__((__packed__));
#line 1581  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
union __anonunion_12379 {
   struct v4l2_bt_timings_cap bt ;
   __u32 raw_data[32U] ;
};
#line 1581  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_dv_timings_cap {
   __u32 type ;
   __u32 pad ;
   __u32 reserved[2U] ;
   union __anonunion_12379 __anonCompField_v4l2_dv_timings_cap_78 ;
};
#line 1803  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_tuner {
   __u32 index ;
   __u8 name[32U] ;
   __u32 type ;
   __u32 capability ;
   __u32 rangelow ;
   __u32 rangehigh ;
   __u32 rxsubchans ;
   __u32 audmode ;
   __s32 signal ;
   __s32 afc ;
   __u32 reserved[4U] ;
};
#line 1817  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_modulator {
   __u32 index ;
   __u8 name[32U] ;
   __u32 capability ;
   __u32 rangelow ;
   __u32 rangehigh ;
   __u32 txsubchans ;
   __u32 type ;
   __u32 reserved[3U] ;
};
#line 1860  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_frequency {
   __u32 tuner ;
   __u32 type ;
   __u32 frequency ;
   __u32 reserved[8U] ;
};
#line 1871  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_frequency_band {
   __u32 tuner ;
   __u32 type ;
   __u32 index ;
   __u32 capability ;
   __u32 rangelow ;
   __u32 rangehigh ;
   __u32 modulation ;
   __u32 reserved[9U] ;
};
#line 2043  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_vbi_format {
   __u32 sampling_rate ;
   __u32 offset ;
   __u32 samples_per_line ;
   __u32 sample_format ;
   __s32 start[2U] ;
   __u32 count[2U] ;
   __u32 flags ;
   __u32 reserved[2U] ;
};
#line 2071  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_sliced_vbi_format {
   __u16 service_set ;
   __u16 service_lines[2U][24U] ;
   __u32 io_size ;
   __u32 reserved[2U] ;
};
#line 2095  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_sliced_vbi_cap {
   __u16 service_set ;
   __u16 service_lines[2U][24U] ;
   __u32 type ;
   __u32 reserved[3U] ;
};
#line 2106  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_sliced_vbi_data {
   __u32 id ;
   __u32 field ;
   __u32 line ;
   __u32 reserved ;
   __u8 data[48U] ;
};
#line 2350  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_event_subscription {
   __u32 type ;
   __u32 id ;
   __u32 flags ;
   __u32 reserved[5U] ;
};
#line 2375  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
union __anonunion_12395 {
   __u32 addr ;
   char name[32U] ;
};
#line 2375  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_dbg_match {
   __u32 type ;
   union __anonunion_12395 __anonCompField_v4l2_dbg_match_87 ;
} __attribute__((__packed__));
#line 2383  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_dbg_register {
   struct v4l2_dbg_match match ;
   __u32 size ;
   __u64 reg ;
   __u64 val ;
} __attribute__((__packed__));
#line 57  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_device;
#line 57  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_gobj {
   struct media_device *mdev ;
   u32 id ;
   struct list_head list ;
};
#line 72  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_entity_enum {
   unsigned long *bmap ;
   int idx_max ;
};
#line 88 
struct media_entity;
#line 88  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct __anonstruct_stack_12399 {
   struct media_entity *entity ;
   struct list_head *link ;
};
#line 88  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_graph {
   struct __anonstruct_stack_12399 stack[16U] ;
   struct media_entity_enum ent_enum ;
   int top ;
};
#line 104  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_pipeline {
   int streaming_count ;
   struct media_graph graph ;
};
#line 132 
struct media_pad;
#line 132 
struct media_interface;
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
union __anonunion_12400 {
   struct media_gobj *gobj0 ;
   struct media_pad *source ;
   struct media_interface *intf ;
};
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
union __anonunion_12401 {
   struct media_gobj *gobj1 ;
   struct media_pad *sink ;
   struct media_entity *entity ;
};
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_link {
   struct media_gobj graph_obj ;
   struct list_head list ;
   union __anonunion_12400 __anonCompField_media_link_90 ;
   union __anonunion_12401 __anonCompField_media_link_91 ;
   struct media_link *reverse ;
   unsigned long flags ;
   bool is_backlink ;
};
#line 149 
enum media_pad_signal_type {
    PAD_SIGNAL_DEFAULT = 0,
    PAD_SIGNAL_ANALOG = 1,
    PAD_SIGNAL_DV = 2,
    PAD_SIGNAL_AUDIO = 3
};
#line 189  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_pad {
   struct media_gobj graph_obj ;
   struct media_entity *entity ;
   u16 index ;
   enum media_pad_signal_type sig_type ;
   unsigned long flags ;
};
#line 214  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_entity_operations {
   int (*get_fwnode_pad)(struct fwnode_endpoint *) ;
   int (*link_setup)(struct media_entity *, struct media_pad *, struct media_pad *, u32 ) ;
   int (*link_validate)(struct media_link *) ;
};
#line 221 
enum media_entity_type {
    MEDIA_ENTITY_TYPE_BASE = 0,
    MEDIA_ENTITY_TYPE_VIDEO_DEVICE = 1,
    MEDIA_ENTITY_TYPE_V4L2_SUBDEV = 2
};
#line 289  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct __anonstruct_dev_12403 {
   u32 major ;
   u32 minor ;
};
#line 289  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
union __anonunion_info_12402 {
   struct __anonstruct_dev_12403 dev ;
};
#line 289  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_entity {
   struct media_gobj graph_obj ;
   char *name ;
   enum media_entity_type obj_type ;
   u32 function ;
   unsigned long flags ;
   u16 num_pads ;
   u16 num_links ;
   u16 num_backlinks ;
   int internal_idx ;
   struct media_pad *pads ;
   struct list_head links ;
   struct media_entity_operations *ops ;
   int stream_count ;
   int use_count ;
   struct media_pipeline *pipe ;
   union __anonunion_info_12402 info ;
};
#line 335  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_interface {
   struct media_gobj graph_obj ;
   struct list_head links ;
   u32 type ;
   u32 flags ;
};
#line 349  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_intf_devnode {
   struct media_interface intf ;
   u32 major ;
   u32 minor ;
};
#line 1087 
enum vfl_devnode_type {
    VFL_TYPE_GRABBER = 0,
    VFL_TYPE_VBI = 1,
    VFL_TYPE_RADIO = 2,
    VFL_TYPE_SUBDEV = 3,
    VFL_TYPE_SDR = 4,
    VFL_TYPE_TOUCH = 5,
    VFL_TYPE_MAX = 6
};
#line 1097 
enum vfl_devnode_direction {
    VFL_DIR_RX = 0,
    VFL_DIR_TX = 1,
    VFL_DIR_M2M = 2
};
#line 1104 
struct video_device;
#line 1105 
struct v4l2_device;
#line 1106 
struct v4l2_ctrl_handler;
#line 104  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-dev.h"
struct v4l2_prio_state {
   atomic_t prios[4U] ;
};
#line 193  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-dev.h"
struct v4l2_file_operations {
   struct module *owner ;
   ssize_t (*read)(struct file *, char *, size_t , loff_t *) ;
   ssize_t (*write)(struct file *, char *, size_t , loff_t *) ;
   __poll_t (*poll)(struct file *, struct poll_table_struct *) ;
   long (*unlocked_ioctl)(struct file *, unsigned int , unsigned long ) ;
   long (*compat_ioctl32)(struct file *, unsigned int , unsigned long ) ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   int (*mmap)(struct file *, struct vm_area_struct *) ;
   int (*open)(struct file *) ;
   int (*release)(struct file *) ;
};
#line 256 
struct vb2_queue;
#line 256 
struct v4l2_ioctl_ops;
#line 256  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-dev.h"
struct video_device {
   struct media_entity entity ;
   struct media_intf_devnode *intf_devnode ;
   struct media_pipeline pipe ;
   struct v4l2_file_operations *fops ;
   u32 device_caps ;
   struct device dev ;
   struct cdev *cdev ;
   struct v4l2_device *v4l2_dev ;
   struct device *dev_parent ;
   struct v4l2_ctrl_handler *ctrl_handler ;
   struct vb2_queue *queue ;
   struct v4l2_prio_state *prio ;
   char name[32U] ;
   enum vfl_devnode_type vfl_type ;
   enum vfl_devnode_direction vfl_dir ;
   int minor ;
   u16 num ;
   unsigned long flags ;
   int index ;
   spinlock_t fh_lock ;
   struct list_head fh_list ;
   int dev_debug ;
   v4l2_std_id tvnorms ;
   void (*release)(struct video_device *) ;
   struct v4l2_ioctl_ops *ioctl_ops ;
   unsigned long valid_ioctls[3U] ;
   struct mutex *lock ;
};
#line 95  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-common.h"
struct v4l2_subdev;
#line 96 
struct v4l2_subdev_ops;
#line 335  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-common.h"
struct v4l2_priv_tun_config {
   int tuner ;
   void *priv ;
};
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-devnode.h"
struct media_file_operations {
   struct module *owner ;
   ssize_t (*read)(struct file *, char *, size_t , loff_t *) ;
   ssize_t (*write)(struct file *, char *, size_t , loff_t *) ;
   __poll_t (*poll)(struct file *, struct poll_table_struct *) ;
   long (*ioctl)(struct file *, unsigned int , unsigned long ) ;
   long (*compat_ioctl)(struct file *, unsigned int , unsigned long ) ;
   int (*open)(struct file *) ;
   int (*release)(struct file *) ;
};
#line 75  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-devnode.h"
struct media_devnode {
   struct media_device *media_dev ;
   struct media_file_operations *fops ;
   struct device dev ;
   struct cdev cdev ;
   struct device *parent ;
   int minor ;
   unsigned long flags ;
   void (*release)(struct media_devnode *) ;
};
#line 65  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-device.h"
struct media_request;
#line 65  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-device.h"
struct media_device_ops {
   int (*link_notify)(struct media_link *, u32 , unsigned int ) ;
   struct media_request *(*req_alloc)(struct media_device *) ;
   void (*req_free)(struct media_request *) ;
   int (*req_validate)(struct media_request *) ;
   void (*req_queue)(struct media_request *) ;
};
#line 144  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-device.h"
struct media_device {
   struct device *dev ;
   struct media_devnode *devnode ;
   char model[32U] ;
   char driver_name[32U] ;
   char serial[40U] ;
   char bus_info[32U] ;
   u32 hw_revision ;
   u64 topology_version ;
   u32 id ;
   struct ida entity_internal_idx ;
   int entity_internal_idx_max ;
   struct list_head entities ;
   struct list_head interfaces ;
   struct list_head pads ;
   struct list_head links ;
   struct list_head entity_notify ;
   struct mutex graph_mutex ;
   struct media_graph pm_count_walk ;
   void *source_priv ;
   int (*enable_source)(struct media_entity *, struct media_pipeline *) ;
   void (*disable_source)(struct media_entity *) ;
   struct media_device_ops *ops ;
   struct mutex req_queue_mutex ;
   atomic_t request_id ;
};
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/v4l2-mediabus.h"
struct v4l2_mbus_framefmt {
   __u32 width ;
   __u32 height ;
   __u32 code ;
   __u32 field ;
   __u32 colorspace ;
   __u16 ycbcr_enc ;
   __u16 quantization ;
   __u16 xfer_func ;
   __u16 reserved[11U] ;
};
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/v4l2-subdev.h"
struct v4l2_subdev_format {
   __u32 which ;
   __u32 pad ;
   struct v4l2_mbus_framefmt format ;
   __u32 reserved[8U] ;
};
#line 75  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/v4l2-subdev.h"
struct v4l2_subdev_mbus_code_enum {
   __u32 pad ;
   __u32 index ;
   __u32 code ;
   __u32 which ;
   __u32 reserved[8U] ;
};
#line 90  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/v4l2-subdev.h"
struct v4l2_subdev_frame_size_enum {
   __u32 index ;
   __u32 pad ;
   __u32 code ;
   __u32 min_width ;
   __u32 max_width ;
   __u32 min_height ;
   __u32 max_height ;
   __u32 which ;
   __u32 reserved[8U] ;
};
#line 107  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/v4l2-subdev.h"
struct v4l2_subdev_frame_interval {
   __u32 pad ;
   struct v4l2_fract interval ;
   __u32 reserved[9U] ;
};
#line 123  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/v4l2-subdev.h"
struct v4l2_subdev_frame_interval_enum {
   __u32 index ;
   __u32 pad ;
   __u32 code ;
   __u32 width ;
   __u32 height ;
   struct v4l2_fract interval ;
   __u32 which ;
   __u32 reserved[8U] ;
};
#line 149  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/v4l2-subdev.h"
struct v4l2_subdev_selection {
   __u32 which ;
   __u32 pad ;
   __u32 target ;
   __u32 flags ;
   struct v4l2_rect r ;
   __u32 reserved[8U] ;
};
#line 157 
struct v4l2_async_notifier;
#line 158 
enum v4l2_async_match_type {
    V4L2_ASYNC_MATCH_CUSTOM = 0,
    V4L2_ASYNC_MATCH_DEVNAME = 1,
    V4L2_ASYNC_MATCH_I2C = 2,
    V4L2_ASYNC_MATCH_FWNODE = 3
};
#line 79  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-async.h"
struct __anonstruct_i2c_12417 {
   int adapter_id ;
   unsigned short address ;
};
#line 79  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-async.h"
struct __anonstruct_custom_12418 {
   bool (*match)(struct device *, struct v4l2_async_subdev *) ;
   void *priv ;
};
#line 79  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-async.h"
union __anonunion_match_12416 {
   struct fwnode_handle *fwnode ;
   char *device_name ;
   struct __anonstruct_i2c_12417 i2c ;
   struct __anonstruct_custom_12418 custom ;
};
#line 79  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-async.h"
struct v4l2_async_subdev {
   enum v4l2_async_match_type match_type ;
   union __anonunion_match_12416 match ;
   struct list_head list ;
   struct list_head asd_list ;
};
#line 107  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-async.h"
struct v4l2_async_notifier_operations {
   int (*bound)(struct v4l2_async_notifier *, struct v4l2_subdev *, struct v4l2_async_subdev *) ;
   int (*complete)(struct v4l2_async_notifier *) ;
   void (*unbind)(struct v4l2_async_notifier *, struct v4l2_subdev *, struct v4l2_async_subdev *) ;
};
#line 129  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-async.h"
struct v4l2_async_notifier {
   struct v4l2_async_notifier_operations *ops ;
   struct v4l2_device *v4l2_dev ;
   struct v4l2_subdev *sd ;
   struct v4l2_async_notifier *parent ;
   struct list_head asd_list ;
   struct list_head waiting ;
   struct list_head done ;
   struct list_head list ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-fh.h"
struct v4l2_m2m_ctx;
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-fh.h"
struct v4l2_fh {
   struct list_head list ;
   struct video_device *vdev ;
   struct v4l2_ctrl_handler *ctrl_handler ;
   enum v4l2_priority prio ;
   wait_queue_head_t wait ;
   struct mutex subscribe_lock ;
   struct list_head subscribed ;
   struct list_head available ;
   unsigned int navailable ;
   u32 sequence ;
   struct v4l2_m2m_ctx *m2m_ctx ;
};
#line 162 
enum v4l2_mbus_type {
    V4L2_MBUS_UNKNOWN = 0,
    V4L2_MBUS_PARALLEL = 1,
    V4L2_MBUS_BT656 = 2,
    V4L2_MBUS_CSI1 = 3,
    V4L2_MBUS_CCP2 = 4,
    V4L2_MBUS_CSI2_DPHY = 5,
    V4L2_MBUS_CSI2_CPHY = 6
};
#line 97  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-mediabus.h"
struct v4l2_mbus_config {
   enum v4l2_mbus_type type ;
   unsigned int flags ;
};
#line 184 
struct v4l2_subdev_fh;
#line 185 
struct tuner_setup;
#line 186 
struct v4l2_mbus_frame_desc;
#line 52  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_decode_vbi_line {
   u32 is_second_field ;
   u8 *p ;
   u32 line ;
   u32 type ;
};
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_io_pin_config {
   u32 flags ;
   u8 pin ;
   u8 function ;
   u8 value ;
   u8 strength ;
};
#line 188  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_core_ops {
   int (*log_status)(struct v4l2_subdev *) ;
   int (*s_io_pin_config)(struct v4l2_subdev *, size_t , struct v4l2_subdev_io_pin_config *) ;
   int (*init)(struct v4l2_subdev *, u32 ) ;
   int (*load_fw)(struct v4l2_subdev *) ;
   int (*reset)(struct v4l2_subdev *, u32 ) ;
   int (*s_gpio)(struct v4l2_subdev *, u32 ) ;
   long (*ioctl)(struct v4l2_subdev *, unsigned int , void *) ;
   long (*compat_ioctl32)(struct v4l2_subdev *, unsigned int , unsigned long ) ;
   int (*g_register)(struct v4l2_subdev *, struct v4l2_dbg_register *) ;
   int (*s_register)(struct v4l2_subdev *, struct v4l2_dbg_register *) ;
   int (*s_power)(struct v4l2_subdev *, int ) ;
   int (*interrupt_service_routine)(struct v4l2_subdev *, u32 , bool *) ;
   int (*subscribe_event)(struct v4l2_subdev *, struct v4l2_fh *, struct v4l2_event_subscription *) ;
   int (*unsubscribe_event)(struct v4l2_subdev *, struct v4l2_fh *, struct v4l2_event_subscription *) ;
};
#line 264  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_tuner_ops {
   int (*standby)(struct v4l2_subdev *) ;
   int (*s_radio)(struct v4l2_subdev *) ;
   int (*s_frequency)(struct v4l2_subdev *, struct v4l2_frequency *) ;
   int (*g_frequency)(struct v4l2_subdev *, struct v4l2_frequency *) ;
   int (*enum_freq_bands)(struct v4l2_subdev *, struct v4l2_frequency_band *) ;
   int (*g_tuner)(struct v4l2_subdev *, struct v4l2_tuner *) ;
   int (*s_tuner)(struct v4l2_subdev *, struct v4l2_tuner *) ;
   int (*g_modulator)(struct v4l2_subdev *, struct v4l2_modulator *) ;
   int (*s_modulator)(struct v4l2_subdev *, struct v4l2_modulator *) ;
   int (*s_type_addr)(struct v4l2_subdev *, struct tuner_setup *) ;
   int (*s_config)(struct v4l2_subdev *, struct v4l2_priv_tun_config *) ;
};
#line 304  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_audio_ops {
   int (*s_clock_freq)(struct v4l2_subdev *, u32 ) ;
   int (*s_i2s_clock_freq)(struct v4l2_subdev *, u32 ) ;
   int (*s_routing)(struct v4l2_subdev *, u32 , u32 , u32 ) ;
   int (*s_stream)(struct v4l2_subdev *, int ) ;
};
#line 310 
enum v4l2_mbus_frame_desc_flags {
    V4L2_MBUS_FRAME_DESC_FL_LEN_MAX = 1,
    V4L2_MBUS_FRAME_DESC_FL_BLOB = 2
};
#line 335  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_mbus_frame_desc_entry {
   enum v4l2_mbus_frame_desc_flags flags ;
   u32 pixelcode ;
   u32 length ;
};
#line 348  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_mbus_frame_desc {
   struct v4l2_mbus_frame_desc_entry entry[4U] ;
   unsigned short num_entries ;
};
#line 415  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_video_ops {
   int (*s_routing)(struct v4l2_subdev *, u32 , u32 , u32 ) ;
   int (*s_crystal_freq)(struct v4l2_subdev *, u32 , u32 ) ;
   int (*g_std)(struct v4l2_subdev *, v4l2_std_id *) ;
   int (*s_std)(struct v4l2_subdev *, v4l2_std_id ) ;
   int (*s_std_output)(struct v4l2_subdev *, v4l2_std_id ) ;
   int (*g_std_output)(struct v4l2_subdev *, v4l2_std_id *) ;
   int (*querystd)(struct v4l2_subdev *, v4l2_std_id *) ;
   int (*g_tvnorms)(struct v4l2_subdev *, v4l2_std_id *) ;
   int (*g_tvnorms_output)(struct v4l2_subdev *, v4l2_std_id *) ;
   int (*g_input_status)(struct v4l2_subdev *, u32 *) ;
   int (*s_stream)(struct v4l2_subdev *, int ) ;
   int (*g_pixelaspect)(struct v4l2_subdev *, struct v4l2_fract *) ;
   int (*g_frame_interval)(struct v4l2_subdev *, struct v4l2_subdev_frame_interval *) ;
   int (*s_frame_interval)(struct v4l2_subdev *, struct v4l2_subdev_frame_interval *) ;
   int (*s_dv_timings)(struct v4l2_subdev *, struct v4l2_dv_timings *) ;
   int (*g_dv_timings)(struct v4l2_subdev *, struct v4l2_dv_timings *) ;
   int (*query_dv_timings)(struct v4l2_subdev *, struct v4l2_dv_timings *) ;
   int (*g_mbus_config)(struct v4l2_subdev *, struct v4l2_mbus_config *) ;
   int (*s_mbus_config)(struct v4l2_subdev *, struct v4l2_mbus_config *) ;
   int (*s_rx_buffer)(struct v4l2_subdev *, void *, unsigned int *) ;
};
#line 481  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_vbi_ops {
   int (*decode_vbi_line)(struct v4l2_subdev *, struct v4l2_decode_vbi_line *) ;
   int (*s_vbi_data)(struct v4l2_subdev *, struct v4l2_sliced_vbi_data *) ;
   int (*g_vbi_data)(struct v4l2_subdev *, struct v4l2_sliced_vbi_data *) ;
   int (*g_sliced_vbi_cap)(struct v4l2_subdev *, struct v4l2_sliced_vbi_cap *) ;
   int (*s_raw_fmt)(struct v4l2_subdev *, struct v4l2_vbi_format *) ;
   int (*g_sliced_fmt)(struct v4l2_subdev *, struct v4l2_sliced_vbi_format *) ;
   int (*s_sliced_fmt)(struct v4l2_subdev *, struct v4l2_sliced_vbi_format *) ;
};
#line 501  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_sensor_ops {
   int (*g_skip_top_lines)(struct v4l2_subdev *, u32 *) ;
   int (*g_skip_frames)(struct v4l2_subdev *, u32 *) ;
};
#line 505 
enum v4l2_subdev_ir_mode {
    V4L2_SUBDEV_IR_MODE_PULSE_WIDTH = 0
};
#line 540  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_ir_parameters {
   unsigned int bytes_per_data_element ;
   enum v4l2_subdev_ir_mode mode ;
   bool enable ;
   bool interrupt_enable ;
   bool shutdown ;
   bool modulation ;
   u32 max_pulse_width ;
   unsigned int carrier_freq ;
   unsigned int duty_cycle ;
   bool invert_level ;
   bool invert_carrier_sense ;
   u32 noise_filter_min_width ;
   unsigned int carrier_range_lower ;
   unsigned int carrier_range_upper ;
   u32 resolution ;
};
#line 599  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_ir_ops {
   int (*rx_read)(struct v4l2_subdev *, u8 *, size_t , ssize_t *) ;
   int (*rx_g_parameters)(struct v4l2_subdev *, struct v4l2_subdev_ir_parameters *) ;
   int (*rx_s_parameters)(struct v4l2_subdev *, struct v4l2_subdev_ir_parameters *) ;
   int (*tx_write)(struct v4l2_subdev *, u8 *, size_t , ssize_t *) ;
   int (*tx_g_parameters)(struct v4l2_subdev *, struct v4l2_subdev_ir_parameters *) ;
   int (*tx_s_parameters)(struct v4l2_subdev *, struct v4l2_subdev_ir_parameters *) ;
};
#line 630  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_pad_config {
   struct v4l2_mbus_framefmt try_fmt ;
   struct v4l2_rect try_crop ;
   struct v4l2_rect try_compose ;
};
#line 674  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_pad_ops {
   int (*init_cfg)(struct v4l2_subdev *, struct v4l2_subdev_pad_config *) ;
   int (*enum_mbus_code)(struct v4l2_subdev *, struct v4l2_subdev_pad_config *, struct v4l2_subdev_mbus_code_enum *) ;
   int (*enum_frame_size)(struct v4l2_subdev *, struct v4l2_subdev_pad_config *, struct v4l2_subdev_frame_size_enum *) ;
   int (*enum_frame_interval)(struct v4l2_subdev *, struct v4l2_subdev_pad_config *, struct v4l2_subdev_frame_interval_enum *) ;
   int (*get_fmt)(struct v4l2_subdev *, struct v4l2_subdev_pad_config *, struct v4l2_subdev_format *) ;
   int (*set_fmt)(struct v4l2_subdev *, struct v4l2_subdev_pad_config *, struct v4l2_subdev_format *) ;
   int (*get_selection)(struct v4l2_subdev *, struct v4l2_subdev_pad_config *, struct v4l2_subdev_selection *) ;
   int (*set_selection)(struct v4l2_subdev *, struct v4l2_subdev_pad_config *, struct v4l2_subdev_selection *) ;
   int (*get_edid)(struct v4l2_subdev *, struct v4l2_edid *) ;
   int (*set_edid)(struct v4l2_subdev *, struct v4l2_edid *) ;
   int (*dv_timings_cap)(struct v4l2_subdev *, struct v4l2_dv_timings_cap *) ;
   int (*enum_dv_timings)(struct v4l2_subdev *, struct v4l2_enum_dv_timings *) ;
   int (*link_validate)(struct v4l2_subdev *, struct media_link *, struct v4l2_subdev_format *, struct v4l2_subdev_format *) ;
   int (*get_frame_desc)(struct v4l2_subdev *, unsigned int , struct v4l2_mbus_frame_desc *) ;
   int (*set_frame_desc)(struct v4l2_subdev *, unsigned int , struct v4l2_mbus_frame_desc *) ;
};
#line 727  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_ops {
   struct v4l2_subdev_core_ops *core ;
   struct v4l2_subdev_tuner_ops *tuner ;
   struct v4l2_subdev_audio_ops *audio ;
   struct v4l2_subdev_video_ops *video ;
   struct v4l2_subdev_vbi_ops *vbi ;
   struct v4l2_subdev_ir_ops *ir ;
   struct v4l2_subdev_sensor_ops *sensor ;
   struct v4l2_subdev_pad_ops *pad ;
};
#line 765  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_internal_ops {
   int (*registered)(struct v4l2_subdev *) ;
   void (*unregistered)(struct v4l2_subdev *) ;
   int (*open)(struct v4l2_subdev *, struct v4l2_subdev_fh *) ;
   int (*close)(struct v4l2_subdev *, struct v4l2_subdev_fh *) ;
   void (*release)(struct v4l2_subdev *) ;
};
#line 772 
struct regulator_bulk_data;
#line 797  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_platform_data {
   struct regulator_bulk_data *regulators ;
   int num_regulators ;
   void *host_priv ;
};
#line 848  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev {
   struct media_entity entity ;
   struct list_head list ;
   struct module *owner ;
   bool owner_v4l2_dev ;
   u32 flags ;
   struct v4l2_device *v4l2_dev ;
   struct v4l2_subdev_ops *ops ;
   struct v4l2_subdev_internal_ops *internal_ops ;
   struct v4l2_ctrl_handler *ctrl_handler ;
   char name[32U] ;
   u32 grp_id ;
   void *dev_priv ;
   void *host_priv ;
   struct video_device *devnode ;
   struct device *dev ;
   struct fwnode_handle *fwnode ;
   struct list_head async_list ;
   struct v4l2_async_subdev *asd ;
   struct v4l2_async_notifier *notifier ;
   struct v4l2_async_notifier *subdev_notifier ;
   struct v4l2_subdev_platform_data *pdata ;
};
#line 906  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_fh {
   struct v4l2_fh vfh ;
   struct module *owner ;
   struct v4l2_subdev_pad_config *pad ;
};
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-device.h"
struct v4l2_device {
   struct device *dev ;
   struct media_device *mdev ;
   struct list_head subdevs ;
   spinlock_t lock ;
   char name[36U] ;
   void (*notify)(struct v4l2_subdev *, unsigned int , void *) ;
   struct v4l2_ctrl_handler *ctrl_handler ;
   struct v4l2_prio_state prio ;
   struct kref ref ;
   void (*release)(struct v4l2_device *) ;
};
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ptp_clock_kernel.h"
struct ptp_system_timestamp {
   struct timespec64 pre_ts ;
   struct timespec64 post_ts ;
};
#line 277 
struct dma_chan;
#line 279 
struct spi_controller;
#line 280 
struct spi_transfer;
#line 281 
struct spi_controller_mem_ops;
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spi/spi.h"
struct spi_statistics {
   spinlock_t lock ;
   unsigned long messages ;
   unsigned long transfers ;
   unsigned long errors ;
   unsigned long timedout ;
   unsigned long spi_sync ;
   unsigned long spi_sync_immediate ;
   unsigned long spi_async ;
   unsigned long long bytes ;
   unsigned long long bytes_rx ;
   unsigned long long bytes_tx ;
   unsigned long transfer_bytes_histo[17U] ;
   unsigned long transfers_split_maxsize ;
};
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spi/spi.h"
struct spi_delay {
   u16 value ;
   u8 unit ;
};
#line 157  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spi/spi.h"
struct spi_device {
   struct device dev ;
   struct spi_controller *controller ;
   struct spi_controller *master ;
   u32 max_speed_hz ;
   u8 chip_select ;
   u8 bits_per_word ;
   bool rt ;
   u32 mode ;
   int irq ;
   void *controller_state ;
   void *controller_data ;
   char modalias[32U] ;
   char *driver_override ;
   int cs_gpio ;
   struct gpio_desc *cs_gpiod ;
   struct spi_delay word_delay ;
   struct spi_statistics statistics ;
};
#line 247 
struct spi_message;
#line 452  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spi/spi.h"
struct spi_controller {
   struct device dev ;
   struct list_head list ;
   s16 bus_num ;
   u16 num_chipselect ;
   u16 dma_alignment ;
   u32 mode_bits ;
   u32 bits_per_word_mask ;
   u32 min_speed_hz ;
   u32 max_speed_hz ;
   u16 flags ;
   bool slave ;
   size_t (*max_transfer_size)(struct spi_device *) ;
   size_t (*max_message_size)(struct spi_device *) ;
   struct mutex io_mutex ;
   spinlock_t bus_lock_spinlock ;
   struct mutex bus_lock_mutex ;
   bool bus_lock_flag ;
   int (*setup)(struct spi_device *) ;
   int (*set_cs_timing)(struct spi_device *, struct spi_delay *, struct spi_delay *, struct spi_delay *) ;
   int (*transfer)(struct spi_device *, struct spi_message *) ;
   void (*cleanup)(struct spi_device *) ;
   bool (*can_dma)(struct spi_controller *, struct spi_device *, struct spi_transfer *) ;
   bool queued ;
   struct kthread_worker kworker ;
   struct task_struct *kworker_task ;
   struct kthread_work pump_messages ;
   spinlock_t queue_lock ;
   struct list_head queue ;
   struct spi_message *cur_msg ;
   bool idling ;
   bool busy ;
   bool running ;
   bool rt ;
   bool auto_runtime_pm ;
   bool cur_msg_prepared ;
   bool cur_msg_mapped ;
   struct completion xfer_completion ;
   size_t max_dma_len ;
   int (*prepare_transfer_hardware)(struct spi_controller *) ;
   int (*transfer_one_message)(struct spi_controller *, struct spi_message *) ;
   int (*unprepare_transfer_hardware)(struct spi_controller *) ;
   int (*prepare_message)(struct spi_controller *, struct spi_message *) ;
   int (*unprepare_message)(struct spi_controller *, struct spi_message *) ;
   int (*slave_abort)(struct spi_controller *) ;
   void (*set_cs)(struct spi_device *, bool ) ;
   int (*transfer_one)(struct spi_controller *, struct spi_device *, struct spi_transfer *) ;
   void (*handle_err)(struct spi_controller *, struct spi_message *) ;
   struct spi_controller_mem_ops *mem_ops ;
   struct spi_delay cs_setup ;
   struct spi_delay cs_hold ;
   struct spi_delay cs_inactive ;
   int *cs_gpios ;
   struct gpio_desc **cs_gpiods ;
   bool use_gpio_descriptors ;
   struct spi_statistics statistics ;
   struct dma_chan *dma_tx ;
   struct dma_chan *dma_rx ;
   void *dummy_rx ;
   void *dummy_tx ;
   int (*fw_translate_cs)(struct spi_controller *, unsigned int ) ;
   bool ptp_sts_supported ;
   unsigned long irq_flags ;
};
#line 890  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spi/spi.h"
struct spi_transfer {
   void *tx_buf ;
   void *rx_buf ;
   unsigned int len ;
   dma_addr_t tx_dma ;
   dma_addr_t rx_dma ;
   struct sg_table tx_sg ;
   struct sg_table rx_sg ;
   unsigned int cs_change : 1 ;
   unsigned int tx_nbits : 3 ;
   unsigned int rx_nbits : 3 ;
   u8 bits_per_word ;
   u16 delay_usecs ;
   struct spi_delay delay ;
   struct spi_delay cs_change_delay ;
   struct spi_delay word_delay ;
   u32 speed_hz ;
   u32 effective_speed_hz ;
   unsigned int ptp_sts_word_pre ;
   unsigned int ptp_sts_word_post ;
   struct ptp_system_timestamp *ptp_sts ;
   bool timestamped_pre ;
   bool timestamped_post ;
   struct list_head transfer_list ;
};
#line 961  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spi/spi.h"
struct spi_message {
   struct list_head transfers ;
   struct spi_device *spi ;
   unsigned int is_dma_mapped : 1 ;
   void (*complete)(void *) ;
   void *context ;
   unsigned int frame_length ;
   unsigned int actual_length ;
   int status ;
   struct list_head queue ;
   void *state ;
   struct list_head resources ;
};
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 157  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fb_fix_screeninfo {
   char id[16U] ;
   unsigned long smem_start ;
   __u32 smem_len ;
   __u32 type ;
   __u32 type_aux ;
   __u32 visual ;
   __u16 xpanstep ;
   __u16 ypanstep ;
   __u16 ywrapstep ;
   __u32 line_length ;
   unsigned long mmio_start ;
   __u32 mmio_len ;
   __u32 accel ;
   __u16 capabilities ;
   __u16 reserved[2U] ;
};
#line 188  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fb_bitfield {
   __u32 offset ;
   __u32 length ;
   __u32 msb_right ;
};
#line 241  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fb_var_screeninfo {
   __u32 xres ;
   __u32 yres ;
   __u32 xres_virtual ;
   __u32 yres_virtual ;
   __u32 xoffset ;
   __u32 yoffset ;
   __u32 bits_per_pixel ;
   __u32 grayscale ;
   struct fb_bitfield red ;
   struct fb_bitfield green ;
   struct fb_bitfield blue ;
   struct fb_bitfield transp ;
   __u32 nonstd ;
   __u32 activate ;
   __u32 height ;
   __u32 width ;
   __u32 accel_flags ;
   __u32 pixclock ;
   __u32 left_margin ;
   __u32 right_margin ;
   __u32 upper_margin ;
   __u32 lower_margin ;
   __u32 hsync_len ;
   __u32 vsync_len ;
   __u32 sync ;
   __u32 vmode ;
   __u32 rotate ;
   __u32 colorspace ;
   __u32 reserved[4U] ;
};
#line 281  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fb_cmap {
   __u32 start ;
   __u32 len ;
   __u16 *red ;
   __u16 *green ;
   __u16 *blue ;
   __u16 *transp ;
};
#line 341  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fb_copyarea {
   __u32 dx ;
   __u32 dy ;
   __u32 width ;
   __u32 height ;
   __u32 sx ;
   __u32 sy ;
};
#line 350  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fb_fillrect {
   __u32 dx ;
   __u32 dy ;
   __u32 width ;
   __u32 height ;
   __u32 color ;
   __u32 rop ;
};
#line 359  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fb_image {
   __u32 dx ;
   __u32 dy ;
   __u32 width ;
   __u32 height ;
   __u32 fg_color ;
   __u32 bg_color ;
   __u8 depth ;
   char *data ;
   struct fb_cmap cmap ;
};
#line 383  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fbcurpos {
   __u16 x ;
   __u16 y ;
};
#line 387  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fb_cursor {
   __u16 set ;
   __u16 enable ;
   __u16 rop ;
   char *mask ;
   struct fbcurpos hot ;
   struct fb_image image ;
};
#line 400 
enum backlight_type {
    BACKLIGHT_RAW = 1,
    BACKLIGHT_PLATFORM = 2,
    BACKLIGHT_FIRMWARE = 3,
    BACKLIGHT_TYPE_MAX = 4
};
#line 412 
enum backlight_scale {
    BACKLIGHT_SCALE_UNKNOWN = 0,
    BACKLIGHT_SCALE_LINEAR = 1,
    BACKLIGHT_SCALE_NON_LINEAR = 2
};
#line 418 
struct backlight_device;
#line 419 
struct fb_info;
#line 58  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backlight.h"
struct backlight_ops {
   unsigned int options ;
   int (*update_status)(struct backlight_device *) ;
   int (*get_brightness)(struct backlight_device *) ;
   int (*check_fb)(struct backlight_device *, struct fb_info *) ;
};
#line 74  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backlight.h"
struct backlight_properties {
   int brightness ;
   int max_brightness ;
   int power ;
   int fb_blank ;
   enum backlight_type type ;
   unsigned int state ;
   enum backlight_scale scale ;
};
#line 97  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backlight.h"
struct backlight_device {
   struct backlight_properties props ;
   struct mutex update_lock ;
   struct mutex ops_lock ;
   struct backlight_ops *ops ;
   struct notifier_block fb_notif ;
   struct list_head entry ;
   struct device dev ;
   bool fb_bl_on[32U] ;
   int use_count ;
};
#line 52  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_chroma {
   __u32 redx ;
   __u32 greenx ;
   __u32 bluex ;
   __u32 whitex ;
   __u32 redy ;
   __u32 greeny ;
   __u32 bluey ;
   __u32 whitey ;
};
#line 63 
struct fb_videomode;
#line 63  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_monspecs {
   struct fb_chroma chroma ;
   struct fb_videomode *modedb ;
   __u8 manufacturer[4U] ;
   __u8 monitor[14U] ;
   __u8 serial_no[14U] ;
   __u8 ascii[14U] ;
   __u32 modedb_len ;
   __u32 model ;
   __u32 serial ;
   __u32 year ;
   __u32 week ;
   __u32 hfmin ;
   __u32 hfmax ;
   __u32 dclkmin ;
   __u32 dclkmax ;
   __u16 input ;
   __u16 dpms ;
   __u16 signal ;
   __u16 vfmin ;
   __u16 vfmax ;
   __u16 gamma ;
   __u16 gtf : 1 ;
   __u16 misc ;
   __u8 version ;
   __u8 revision ;
   __u8 max_x ;
   __u8 max_y ;
};
#line 144  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_blit_caps {
   u32 x ;
   u32 y ;
   u32 len ;
   u32 flags ;
};
#line 185  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_pixmap {
   u8 *addr ;
   u32 size ;
   u32 offset ;
   u32 buf_align ;
   u32 scan_align ;
   u32 access_align ;
   u32 flags ;
   u32 blit_x ;
   u32 blit_y ;
   void (*writeio)(struct fb_info *, void *, void *, unsigned int ) ;
   void (*readio)(struct fb_info *, void *, void *, unsigned int ) ;
};
#line 203  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_deferred_io {
   unsigned long delay ;
   struct mutex lock ;
   struct list_head pagelist ;
   void (*first_io)(struct fb_info *) ;
   void (*deferred_io)(struct fb_info *, struct list_head *) ;
};
#line 228  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_ops {
   struct module *owner ;
   int (*fb_open)(struct fb_info *, int ) ;
   int (*fb_release)(struct fb_info *, int ) ;
   ssize_t (*fb_read)(struct fb_info *, char *, size_t , loff_t *) ;
   ssize_t (*fb_write)(struct fb_info *, char *, size_t , loff_t *) ;
   int (*fb_check_var)(struct fb_var_screeninfo *, struct fb_info *) ;
   int (*fb_set_par)(struct fb_info *) ;
   int (*fb_setcolreg)(unsigned int , unsigned int , unsigned int , unsigned int , unsigned int , struct fb_info *) ;
   int (*fb_setcmap)(struct fb_cmap *, struct fb_info *) ;
   int (*fb_blank)(int , struct fb_info *) ;
   int (*fb_pan_display)(struct fb_var_screeninfo *, struct fb_info *) ;
   void (*fb_fillrect)(struct fb_info *, struct fb_fillrect *) ;
   void (*fb_copyarea)(struct fb_info *, struct fb_copyarea *) ;
   void (*fb_imageblit)(struct fb_info *, struct fb_image *) ;
   int (*fb_cursor)(struct fb_info *, struct fb_cursor *) ;
   int (*fb_sync)(struct fb_info *) ;
   int (*fb_ioctl)(struct fb_info *, unsigned int , unsigned long ) ;
   int (*fb_compat_ioctl)(struct fb_info *, unsigned int , unsigned long ) ;
   int (*fb_mmap)(struct fb_info *, struct vm_area_struct *) ;
   void (*fb_get_caps)(struct fb_info *, struct fb_blit_caps *, struct fb_var_screeninfo *) ;
   void (*fb_destroy)(struct fb_info *) ;
   int (*fb_debug_enter)(struct fb_info *) ;
   int (*fb_debug_leave)(struct fb_info *) ;
};
#line 306  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_tilemap {
   __u32 width ;
   __u32 height ;
   __u32 depth ;
   __u32 length ;
   __u8 *data ;
};
#line 315  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_tilerect {
   __u32 sx ;
   __u32 sy ;
   __u32 width ;
   __u32 height ;
   __u32 index ;
   __u32 fg ;
   __u32 bg ;
   __u32 rop ;
};
#line 326  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_tilearea {
   __u32 sx ;
   __u32 sy ;
   __u32 dx ;
   __u32 dy ;
   __u32 width ;
   __u32 height ;
};
#line 335  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_tileblit {
   __u32 sx ;
   __u32 sy ;
   __u32 width ;
   __u32 height ;
   __u32 fg ;
   __u32 bg ;
   __u32 length ;
   __u32 *indices ;
};
#line 346  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_tilecursor {
   __u32 sx ;
   __u32 sy ;
   __u32 mode ;
   __u32 shape ;
   __u32 fg ;
   __u32 bg ;
};
#line 355  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_tile_ops {
   void (*fb_settile)(struct fb_info *, struct fb_tilemap *) ;
   void (*fb_tilecopy)(struct fb_info *, struct fb_tilearea *) ;
   void (*fb_tilefill)(struct fb_info *, struct fb_tilerect *) ;
   void (*fb_tileblit)(struct fb_info *, struct fb_tileblit *) ;
   void (*fb_tilecursor)(struct fb_info *, struct fb_tilecursor *) ;
   int (*fb_get_tilemax)(struct fb_info *) ;
};
#line 499  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct aperture {
   resource_size_t base ;
   resource_size_t size ;
};
#line 497  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct apertures_struct {
   unsigned int count ;
   struct aperture ranges[0U] ;
};
#line 439  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
union __anonunion_13319 {
   char *screen_base ;
   char *screen_buffer ;
};
#line 439  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_info {
   atomic_t count ;
   int node ;
   int flags ;
   int fbcon_rotate_hint ;
   struct mutex lock ;
   struct mutex mm_lock ;
   struct fb_var_screeninfo var ;
   struct fb_fix_screeninfo fix ;
   struct fb_monspecs monspecs ;
   struct work_struct queue ;
   struct fb_pixmap pixmap ;
   struct fb_pixmap sprite ;
   struct fb_cmap cmap ;
   struct list_head modelist ;
   struct fb_videomode *mode ;
   struct backlight_device *bl_dev ;
   struct mutex bl_curve_mutex ;
   u8 bl_curve[128U] ;
   struct delayed_work deferred_work ;
   struct fb_deferred_io *fbdefio ;
   struct fb_ops *fbops ;
   struct device *device ;
   struct device *dev ;
   int class_flag ;
   struct fb_tile_ops *tileops ;
   union __anonunion_13319 __anonCompField_fb_info_73 ;
   unsigned long screen_size ;
   void *pseudo_palette ;
   u32 state ;
   void *fbcon_par ;
   void *par ;
   struct apertures_struct *apertures ;
   bool skip_vt_switch ;
};
#line 767  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_videomode {
   char *name ;
   u32 refresh ;
   u32 xres ;
   u32 yres ;
   u32 pixclock ;
   u32 left_margin ;
   u32 right_margin ;
   u32 upper_margin ;
   u32 lower_margin ;
   u32 hsync_len ;
   u32 vsync_len ;
   u32 sync ;
   u32 vmode ;
   u32 flag ;
};
#line 63  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
struct ldv_kmem_cache {
   char *name ;
   unsigned int size ;
};
#line 88  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
typedef unsigned long pthread_t;
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/thread.h"
union pthread_attr_t {
   char __size[56U] ;
   long __align ;
};
#line 30  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/thread.h"
typedef union pthread_attr_t pthread_attr_t;
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/emg/0/environment_model.c"
struct emg_struct_character_driver_scenario_carl9170_debugfs_read_13 {
   struct file_operations *arg0 ;
   int signal_pending ;
};
#line 26  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/emg/0/environment_model.c"
struct emg_struct_ieee80211_scenario_carl9170_ops_14 {
   struct ieee80211_hw *arg0 ;
   int signal_pending ;
};
#line 31  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/emg/0/environment_model.c"
struct emg_struct_usb_scenario_carl9170_driver_15 {
   struct usb_driver *arg0 ;
   int signal_pending ;
};
/* compiler builtin: 
   void *__builtin_memcpy(void *, void const *, unsigned long);   */
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/common/inline_asm.h"
#line 22 
void ldv_inline_asm(void);
#line 7  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/usb.i.aux"
#line 7 
void ldv_atomic_inc(atomic_t *v);
#line 8 
#line 8 
void ldv_atomic_dec(atomic_t *v);
#line 11 
#line 11 
int ldv_atomic_add_return(int i, atomic_t *v);
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/export.h"
#line 16 
extern struct module __this_module;
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/compiler.h"
__inline static void __read_once_size(void *p, void *res, int size)
{
  #line 199 
  switch (size) {
    #line 199 
    case 1: 
            #line 199 
    ;
    #line 199 
    *((__u8 *)res) = *((__u8 *)p);
    #line 199 
    break;
    #line 199 
    case 2: 
            #line 199 
    ;
    #line 199 
    *((__u16 *)res) = *((__u16 *)p);
    #line 199 
    break;
    #line 199 
    case 4: 
            #line 199 
    ;
    #line 199 
    *((__u32 *)res) = *((__u32 *)p);
    #line 199 
    break;
    #line 199 
    case 8: 
            #line 199 
    ;
    #line 199 
    *((__u64 *)res) = *((__u64 *)p);
    #line 199 
    break;
    #line 199 
    default: 
             #line 199 
    ;
    #line 200 
    ldv_inline_asm();
    #line 199 
    __builtin_memcpy(res,(void const *)p,(unsigned long)size);
    #line 200 
    ldv_inline_asm();
  }
  #line 203 
  return;
}

#line 220  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/compiler.h"
__inline static void __write_once_size(void *p, void *res, int size)
{
  #line 222 
  switch (size) {
    #line 223 
    case 1: 
            #line 223 
    ;
    #line 223 
    *((__u8 *)p) = *((__u8 *)res);
    #line 223 
    break;
    #line 224 
    case 2: 
            #line 224 
    ;
    #line 224 
    *((__u16 *)p) = *((__u16 *)res);
    #line 224 
    break;
    #line 225 
    case 4: 
            #line 225 
    ;
    #line 225 
    *((__u32 *)p) = *((__u32 *)res);
    #line 225 
    break;
    #line 226 
    case 8: 
            #line 226 
    ;
    #line 226 
    *((__u64 *)p) = *((__u64 *)res);
    #line 226 
    break;
    #line 227 
    default: 
             #line 227 
    ;
    #line 228 
    ldv_inline_asm();
    #line 229 
    __builtin_memcpy(p,(void const *)res,(unsigned long)size);
    #line 230 
    ldv_inline_asm();
  }
  #line 232 
  return;
}

#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kasan-checks.h"
__inline static bool kasan_check_read(void *p, unsigned int size)
{
  #line 36 
  return (_Bool)1;
}

#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/jump_label.h"
__inline static bool arch_static_branch(struct static_key *key, bool branch)
{
  #line 27 
  ldv_inline_asm();
  #line 28 
  ldv_inline_asm();
  #line 34 
  return (_Bool)0;
  #line 35 
  l_yes: 
         #line 35 
  ;
  #line 36 
  return (_Bool)1;
}

#line 487  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/printk.h"
#line 487 
void print_hex_dump(char *, char *, int, int, int, void *, size_t, bool);
#line 204  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernel.h"
#line 204 
void __might_sleep(char *, int, int);
#line 26  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
#line 168  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/usb.i.aux"
static void INIT_LIST_HEAD(struct list_head *list);
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/string_64.h"
#line 14 
void *memcpy(void *, void *, size_t);
#line 18 
#line 18 
void *memset(void *, int, size_t);
#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/cmpxchg_64.h"
__inline static int arch_atomic_read(atomic_t *v)
{
  #line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/atomic.h"
  union __anonunion___u_67 __u;
  #line 31 
  __read_once_size((void *)(& v->counter),(void *)(& __u.__c),4);
  #line 31 
  return (__u.__val);
}

#line 41  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/atomic.h"
__inline static void arch_atomic_set(atomic_t *v, int i)
{
  #line 44 
  union __anonunion___u_69 __u = {.__val = i};
  #line 43 
  __write_once_size((void *)(& v->counter),(void *)(& __u.__c),4);
  #line 43 
  int tmp = __u.__val;
  #line 45 
  return;
}

#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/atomic-instrumented.h"
__inline static int atomic_read(atomic_t *v)
{
  #line 26 
  kasan_check_read((void *)v,4U);
  #line 27 
  return arch_atomic_read(v);
}

#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/atomic-instrumented.h"
__inline static void atomic_set(atomic_t *v, int i)
{
  #line 44 
  kasan_check_read((void *)v,4U);
  #line 45 
  arch_atomic_set(v,i);
  #line 46 
  return;
}

#line 69 
#line 203  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/usb.i.aux"
static int atomic_add_return(int i, atomic_t *v);
#line 237  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/atomic-instrumented.h"
#line 217  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/usb.i.aux"
static void atomic_inc(atomic_t *v);
#line 327  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/atomic-instrumented.h"
#line 224  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/usb.i.aux"
static void atomic_dec(atomic_t *v);
#line 282  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/atomic-fallback.h"
__inline static int atomic_inc_return(atomic_t *v)
{
  #line 284 
  return atomic_add_return(1,v);
}

#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/err.h"
#line 245  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/usb.i.aux"
static long PTR_ERR(void *ptr);
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/err.h"
#line 252  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/usb.i.aux"
static bool IS_ERR(void *ptr);
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/irqflags.h"
#line 20 
unsigned long native_save_fl(void);
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/irqflags.h"
unsigned long native_save_fl(void)
{
  #line 22 
  unsigned long flags;
  #line 23 
  ldv_inline_asm();
  #line 35 
  return flags;
}

#line 38 
#line 39 
void native_restore_fl(unsigned long flags);
#line 39  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/irqflags.h"
void native_restore_fl(unsigned long flags)
{
  #line 41 
  ldv_inline_asm();
  #line 42 
  return;
}

#line 95  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
#line 95 
void __raw_spin_lock_init(raw_spinlock_t *, char *, struct lock_class_key *);
#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_api_smp.h"
#line 28 
void _raw_spin_lock_bh(raw_spinlock_t *);
#line 40 
#line 40 
void _raw_spin_unlock_bh(raw_spinlock_t *);
#line 43 
#line 43 
void _raw_spin_unlock_irqrestore(raw_spinlock_t *, unsigned long);
#line 325  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
__inline static raw_spinlock_t *spinlock_check(spinlock_t *lock)
{
  #line 327 
  return & lock->__anonCompField_spinlock_25.rlock;
}

#line 341  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
static void spin_lock_bh(spinlock_t *lock)
{
  #line 343 
  _raw_spin_lock_bh(& lock->__anonCompField_spinlock_25.rlock);
  #line 344 
  return;
}

#line 345 
#line 859  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/usb.i.aux"
static void cif_spin_lock_bh_cmd_lock_of_ar9170(spinlock_t *lock);
#line 381  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
static void spin_unlock_bh(spinlock_t *lock)
{
  #line 383 
  _raw_spin_unlock_bh(& lock->__anonCompField_spinlock_25.rlock);
  #line 384 
  return;
}

#line 385 
#line 868  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/usb.i.aux"
static void cif_spin_unlock_bh_cmd_lock_of_ar9170(spinlock_t *lock);
#line 391  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
static void spin_unlock_irqrestore(spinlock_t *lock, unsigned long flags)
{
  {
    #line 393 
    unsigned long __dummy;
    #line 393 
    unsigned long __dummy2;
    }
  #line 393 
  _raw_spin_unlock_irqrestore(& lock->__anonCompField_spinlock_25.rlock,flags);
  #line 395 
  return;
}

#line 395 
#line 834  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/usb.i.aux"
static void cif_spin_unlock_irqrestore_state_lock_of_ar9170(spinlock_t *lock, unsigned long flags);
#line 26 
#line 466 
static void cif_mutex_lock_mutex_of_device(struct mutex *lock);
#line 26 
#line 892 
static void cif_mutex_lock_mutex_of_ar9170(struct mutex *lock);
#line 29 
#line 29 
void ldv_mutex_model_lock(struct mutex *, char *);
#line 31 
#line 31 
void ldv_mutex_model_unlock(struct mutex *, char *);
#line 33 
#line 33 
void __ldv_spin_lock(spinlock_t *);
#line 35 
#line 825 
static void cif___ldv_spin_lock_state_lock_of_ar9170(spinlock_t *lock);
#line 40 
#line 40 
void ldv_spin_model_lock(char *);
#line 41 
#line 41 
void ldv_spin_model_unlock(char *);
#line 52 
#line 52 
void ldv_release_firmware(struct firmware *fw);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/err.h"
#line 23 
bool ldv_is_err(void *ptr);
#line 26 
#line 26 
long ldv_ptr_err(void *ptr);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/list.h"
#line 23 
void ldv_init_list_head(struct list_head *list);
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 24 
void *ldv_kmalloc(size_t size, gfp_t flags);
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/wait.h"
#line 61 
void __init_waitqueue_head(struct wait_queue_head *, char *, struct lock_class_key *);
#line 85  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/completion.h"
__inline static void __init_completion(struct completion *x)
{
  #line 87 
  x->done = 0U;
  {
    #line 88 
    struct lock_class_key __key;
    #line 88 
    __init_waitqueue_head(& x->wait,(char *)"&x->wait",& __key);
  }
  #line 90 
  return;
}

#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/completion.h"
__inline static void reinit_completion(struct completion *x)
{
  #line 100 
  x->done = 0U;
  #line 101 
  return;
}

#line 103 
#line 103 
void wait_for_completion(struct completion *);
#line 107 
#line 107 
unsigned long wait_for_completion_timeout(struct completion *, unsigned long);
#line 118 
#line 118 
void complete(struct completion *);
#line 185  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mutex.h"
#line 511  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/usb.i.aux"
static void cif_mutex_unlock_mutex_of_device(struct mutex *lock);
#line 185  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mutex.h"
#line 899  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/usb.i.aux"
static void cif_mutex_unlock_mutex_of_ar9170(struct mutex *lock);
#line 189  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/slab.h"
#line 189 
void kfree(void *);
#line 542 
#line 410  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/usb.i.aux"
static void *kmalloc(size_t size, gfp_t flags);
#line 1417  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
__inline static void *dev_get_drvdata(struct device *dev)
{
  #line 1419 
  return dev->driver_data;
}

#line 1422  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
__inline static void dev_set_drvdata(struct device *dev, void *data)
{
  #line 1424 
  dev->driver_data = data;
  #line 1425 
  return;
}

#line 1491  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
__inline static void device_lock(struct device *dev)
{
  #line 1493 
  cif_mutex_lock_mutex_of_device(& dev->mutex);
  #line 1494 
  return;
}

#line 1506  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
__inline static void device_unlock(struct device *dev)
{
  #line 1508 
  cif_mutex_unlock_mutex_of_device(& dev->mutex);
  #line 1509 
  return;
}

#line 1712 
#line 1712 
void _dev_err(struct device *, char * , ...);
#line 462  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
__inline static int usb_endpoint_num(struct usb_endpoint_descriptor *epd)
{
  #line 464 
  return (int)epd->bEndpointAddress & 15;
}

#line 474  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
__inline static int usb_endpoint_type(struct usb_endpoint_descriptor *epd)
{
  #line 476 
  return (int)epd->bmAttributes & 3;
}

#line 496  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
__inline static int usb_endpoint_dir_out(struct usb_endpoint_descriptor *epd)
{
  #line 499 
  return ((int)epd->bEndpointAddress & 128) == 0;
}

#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/delay.h"
#line 59 
void msleep(unsigned int);
#line 655  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/interrupt.h"
#line 884  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/usb.i.aux"
static void cif_tasklet_schedule(struct tasklet_struct *t);
#line 663  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/interrupt.h"
#line 851  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/usb.i.aux"
static void cif_tasklet_hi_schedule(struct tasklet_struct *t);
#line 683  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/interrupt.h"
#line 683 
void tasklet_kill(struct tasklet_struct *);
#line 687 
#line 914  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/usb.i.aux"
static void cif_tasklet_init(struct tasklet_struct *t, void (*func)(unsigned long ), unsigned long data);
#line 263  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
__inline static void *usb_get_intfdata(struct usb_interface *intf)
{
  #line 265 
  return dev_get_drvdata(& intf->dev);
}

#line 268  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
__inline static void usb_set_intfdata(struct usb_interface *intf, void *data)
{
  #line 270 
  dev_set_drvdata(& intf->dev,data);
  #line 271 
  return;
}

#line 273 
#line 273 
struct usb_interface *usb_get_intf(struct usb_interface *);
#line 274 
#line 274 
void usb_put_intf(struct usb_interface *);
#line 714  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
__inline static struct usb_device *interface_to_usbdev(struct usb_interface *intf)
{
  #line 716 
  void *__mptr;
  #line 716 
  __mptr = (void *)intf->dev.parent;
  #line 716 
  return ((struct usb_device *)(__mptr + 18446744073709551456U));
}

#line 746 
#line 906  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/usb.i.aux"
static int cif_usb_reset_device(struct usb_device *dev);
#line 745  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
#line 745 
void usb_queue_reset_device(struct usb_interface *);
#line 861 
#line 861 
void usb_driver_release_interface(struct usb_driver *, struct usb_interface *);
#line 871 
#line 871 
struct usb_interface *usb_ifnum_to_if(struct usb_device *, unsigned int);
#line 1276 
#line 922  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/usb.i.aux"
static int cif_usb_register_driver(struct usb_driver *ldv_func_arg1, struct module *ldv_func_arg2, char *ldv_func_arg3);
#line 1282  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
#line 930  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/usb.i.aux"
static void cif_usb_deregister(struct usb_driver *ldv_func_arg1);
#line 1357  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
__inline static void init_usb_anchor(struct usb_anchor *anchor)
{
  #line 1359 
  memset((void *)anchor,0,184UL);
  #line 1360 
  INIT_LIST_HEAD(& anchor->urb_list);
  {
    #line 1361 
    struct lock_class_key __key;
    #line 1361 
    __init_waitqueue_head(& anchor->wait,(char *)"&anchor->wait",& __key);
  }
  #line 1362 
  spinlock_check(& anchor->lock);
  {
    #line 1362 
    struct lock_class_key __key_0;
    #line 1362 
    __raw_spin_lock_init(& anchor->lock.__anonCompField_spinlock_25.rlock,(char *)"&(&anchor->lock)->rlock",& __key_0);
  }
  #line 1365 
  return;
}

#line 1636  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
__inline static void usb_fill_bulk_urb(struct urb *urb, struct usb_device *dev, unsigned int pipe, void *transfer_buffer, int buffer_length, void (*complete_fn)(struct urb *), void *context)
{
  #line 1644 
  urb->dev = dev;
  #line 1645 
  urb->pipe = pipe;
  #line 1646 
  urb->transfer_buffer = transfer_buffer;
  #line 1647 
  urb->transfer_buffer_length = (unsigned int)buffer_length;
  #line 1648 
  urb->complete = complete_fn;
  #line 1649 
  urb->context = context;
  #line 1650 
  return;
}

#line 1677  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
__inline static void usb_fill_int_urb(struct urb *urb, struct usb_device *dev, unsigned int pipe, void *transfer_buffer, int buffer_length, void (*complete_fn)(struct urb *), void *context, int interval)
{
  #line 1686 
  urb->dev = dev;
  #line 1687 
  urb->pipe = pipe;
  #line 1688 
  urb->transfer_buffer = transfer_buffer;
  #line 1689 
  urb->transfer_buffer_length = (unsigned int)buffer_length;
  #line 1690 
  urb->complete = complete_fn;
  #line 1691 
  urb->context = context;
  #line 1693 
  if (dev->speed == (unsigned int)USB_SPEED_HIGH || dev->speed > (unsigned int)USB_SPEED_WIRELESS) {
    #line 1695 
    int __UNIQUE_ID___x367;
    #line 1695 
    int tmp_1;
    {
      #line 1695 
      int __UNIQUE_ID___x365;
      #line 1695 
      int tmp;
      {
        #line 1695 
        __UNIQUE_ID___x365 = interval;
        #line 1695 
        int __UNIQUE_ID___y366 = 1;
        #line 1695 
        if (__UNIQUE_ID___x365 > __UNIQUE_ID___y366) 
                                                     #line 1695 
                                                     tmp = __UNIQUE_ID___x365; else 
                                                                    #line 1695 
                                                                    tmp = __UNIQUE_ID___y366;
        }
      #line 1695 
      __UNIQUE_ID___x367 = tmp;
      #line 1695 
      int __UNIQUE_ID___y368 = 16;
      #line 1695 
      if (__UNIQUE_ID___x367 < __UNIQUE_ID___y368) 
                                                   #line 1695 
                                                   tmp_1 = __UNIQUE_ID___x367; else 
                                                                    #line 1695 
                                                                    tmp_1 = __UNIQUE_ID___y368;
      }
    #line 1695 
    interval = tmp_1;
    #line 1697 
    urb->interval = 1 << (interval + -1);
  }
  else 
       #line 1699 
       urb->interval = interval;
  #line 1702 
  urb->start_frame = -1;
  #line 1703 
  return;
}

#line 1706 
#line 1706 
struct urb *usb_alloc_urb(int, gfp_t);
#line 1707 
#line 1707 
void usb_free_urb(struct urb *);
#line 1711 
#line 843  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/usb.i.aux"
static int cif_usb_submit_urb(struct urb *urb, gfp_t mem_flags);
#line 1715  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
#line 1715 
void usb_kill_anchored_urbs(struct usb_anchor *);
#line 1716 
#line 1716 
void usb_poison_anchored_urbs(struct usb_anchor *);
#line 1717 
#line 1717 
void usb_unpoison_anchored_urbs(struct usb_anchor *);
#line 1721 
#line 1721 
void usb_anchor_urb(struct urb *, struct usb_anchor *);
#line 1722 
#line 1722 
void usb_unanchor_urb(struct urb *);
#line 1723 
#line 1723 
int usb_wait_anchor_empty_timeout(struct usb_anchor *, unsigned int);
#line 1725 
#line 1725 
struct urb *usb_get_from_anchor(struct usb_anchor *);
#line 1726 
#line 1726 
void usb_scuttle_anchored_urbs(struct usb_anchor *);
#line 1783 
#line 1783 
int usb_control_msg(struct usb_device *, unsigned int, __u8, __u8, __u16, __u16, void *, __u16, int);
#line 1925  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
__inline static unsigned int __create_pipe(struct usb_device *dev, unsigned int endpoint)
{
  #line 1928 
  return (unsigned int)(dev->devnum << 8) | (endpoint << 15);
}

#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/firmware.h"
#line 47 
int request_firmware_nowait(struct module *, bool, char *, struct device *, gfp_t, void *, void (*)(struct firmware *, void *));
#line 57 
#line 877  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/usb.i.aux"
static void cif_release_firmware(struct firmware *fw);
#line 244  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/net.h"
#line 244 
int net_ratelimit(void);
#line 3616  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
#line 3616 
void __dev_kfree_skb_irq(struct sk_buff *, enum skb_free_reason);
#line 3638  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
__inline static void dev_kfree_skb_irq(struct sk_buff *skb)
{
  #line 3640 
  __dev_kfree_skb_irq(skb,(enum skb_free_reason)SKB_REASON_DROPPED);
  #line 3641 
  return;
}

#line 4738  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
__inline static void set_wiphy_dev(struct wiphy *wiphy, struct device *dev)
{
  #line 4740 
  wiphy->dev.parent = dev;
  #line 4741 
  return;
}

#line 2599  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
__inline static void SET_IEEE80211_DEV(struct ieee80211_hw *hw, struct device *dev)
{
  #line 2601 
  set_wiphy_dev(hw->wiphy,dev);
  #line 2602 
  return;
}

#line 5371 
#line 5371 
void ieee80211_queue_work(struct ieee80211_hw *, struct work_struct *);
#line 504  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/carl9170.h"
__inline static void __carl9170_set_state(struct ar9170 *ar, enum carl9170_device_state newstate)
{
  #line 507 
  ar->state = newstate;
  #line 508 
  return;
}

#line 510  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/carl9170.h"
__inline static void carl9170_set_state(struct ar9170 *ar, enum carl9170_device_state newstate)
{
  #line 513 
  unsigned long flags;
  #line 515 
  cif___ldv_spin_lock_state_lock_of_ar9170(& ar->state_lock);
  #line 516 
  __carl9170_set_state(ar,newstate);
  #line 517 
  cif_spin_unlock_irqrestore_state_lock_of_ar9170(& ar->state_lock,flags);
  #line 518 
  return;
}

#line 520  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/carl9170.h"
__inline static void carl9170_set_state_when(struct ar9170 *ar, enum carl9170_device_state min, enum carl9170_device_state newstate)
{
  #line 523 
  unsigned long flags;
  #line 525 
  cif___ldv_spin_lock_state_lock_of_ar9170(& ar->state_lock);
  #line 526 
  if (ar->state >= min) 
                        #line 527 
                        __carl9170_set_state(ar,newstate);
  #line 528 
  cif_spin_unlock_irqrestore_state_lock_of_ar9170(& ar->state_lock,flags);
  #line 529 
  return;
}

#line 532 
#line 532 
void *carl9170_alloc(size_t priv_size);
#line 533 
#line 533 
int carl9170_register(struct ar9170 *ar);
#line 534 
#line 534 
void carl9170_unregister(struct ar9170 *ar);
#line 535 
#line 535 
void carl9170_free(struct ar9170 *ar);
#line 536 
#line 536 
void carl9170_restart(struct ar9170 *ar, enum carl9170_restart_reasons r);
#line 540 
#line 793  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/usb.c"
int carl9170_usb_open(struct ar9170 *ar);
#line 541  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/carl9170.h"
#line 767  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/usb.c"
void carl9170_usb_stop(struct ar9170 *ar);
#line 542  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/carl9170.h"
#line 715  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/usb.c"
void carl9170_usb_tx(struct ar9170 *ar, struct sk_buff *skb);
#line 543  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/carl9170.h"
#line 367  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/usb.c"
void carl9170_usb_handle_tx_err(struct ar9170 *ar);
#line 544  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/carl9170.h"
#line 652  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/usb.c"
int carl9170_exec_cmd(struct ar9170 *ar, enum carl9170_cmd_oids cmd, unsigned int plen, void *payload, unsigned int outlen, void *out);
#line 546  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/carl9170.h"
#line 604  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/usb.c"
int __carl9170_exec_cmd(struct ar9170 *ar, struct carl9170_cmd *cmd, bool free_buf);
#line 548  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/carl9170.h"
#line 866  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/usb.c"
int carl9170_usb_restart(struct ar9170 *ar);
#line 549  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/carl9170.h"
#line 908  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/usb.c"
void carl9170_usb_reset(struct ar9170 *ar);
#line 571  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/carl9170.h"
#line 571 
void carl9170_rx(struct ar9170 *ar, void *buf, unsigned int len);
#line 572 
#line 572 
void carl9170_handle_command_response(struct ar9170 *ar, void *buf, u32 len);
#line 583 
#line 583 
void carl9170_tx_callback(struct ar9170 *ar, struct sk_buff *skb);
#line 584 
#line 584 
void carl9170_tx_drop(struct ar9170 *ar, struct sk_buff *skb);
#line 585 
#line 585 
void carl9170_tx_scheduler(struct ar9170 *ar);
#line 604 
#line 604 
int carl9170_parse_firmware(struct ar9170 *ar);
#line 49  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/cmd.h"
#line 49 
int carl9170_echo_test(struct ar9170 *ar, u32 v);
#line 50 
#line 50 
int carl9170_reboot(struct ar9170 *ar);
#line 67  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/usb.c"
static struct usb_device_id carl9170_usb_ids[29U] = {{.match_flags = (unsigned short)3U, .idVendor = (unsigned short)3315U, .idProduct = (unsigned short)37232U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)3315U, .idProduct = (unsigned short)4097U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)3315U, .idProduct = (unsigned short)4098U, .driver_info = 3UL}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)3315U, .idProduct = (unsigned short)4112U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)3315U, .idProduct = (unsigned short)4113U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)51918U, .idProduct = (unsigned short)768U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)2001U, .idProduct = (unsigned short)15376U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)2001U, .idProduct = (unsigned short)14857U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)2001U, .idProduct = (unsigned short)14863U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)2118U, .idProduct = (unsigned short)36928U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)2118U, .idProduct = (unsigned short)36880U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)2118U, .idProduct = (unsigned short)36865U, .driver_info = 2UL}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)2766U, .idProduct = (unsigned short)4641U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)5173U, .idProduct = (unsigned short)2052U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)5173U, .idProduct = (unsigned short)806U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)1414U, .idProduct = (unsigned short)13335U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)3294U, .idProduct = (unsigned short)35U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)3294U, .idProduct = (unsigned short)38U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)3294U, .idProduct = (unsigned short)39U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)2106U, .idProduct = (unsigned short)62754U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)8217U, .idProduct = (unsigned short)21252U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)1211U, .idProduct = (unsigned short)2367U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)1033U, .idProduct = (unsigned short)585U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)1033U, .idProduct = (unsigned short)692U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)1404U, .idProduct = (unsigned short)33793U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)1404U, .idProduct = (unsigned short)33794U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)5736U, .idProduct = (unsigned short)4608U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)7029U, .idProduct = (unsigned short)37232U}};
#line 129  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/usb.c"
struct usb_device_id __mod_usb__carl9170_usb_ids_device_table[29U];
#line 131 
#line 1179 
static struct usb_driver carl9170_driver;
#line 133  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/usb.c"
static void carl9170_usb_submit_data_urb(struct ar9170 *ar)
{
  #line 135 
  struct urb *urb;
  #line 136 
  int err;
  #line 138 
  if (atomic_inc_return(& ar->tx_anch_urbs) > 8) 
                                                 #line 139 
                                                 goto err_acc;
  #line 141 
  urb = usb_get_from_anchor(& ar->tx_wait);
  #line 142 
  if (urb == (struct urb *)0) 
                              #line 143 
                              goto err_acc;
  #line 145 
  usb_anchor_urb(urb,& ar->tx_anch);
  #line 147 
  err = cif_usb_submit_urb(urb,2592U);
  #line 148 
  if ((long)(err != 0) != 0L) {
    #line 149 
    if (net_ratelimit() != 0) 
                              #line 150 
                              _dev_err(& (ar->udev)->dev,(char *)"tx submit failed (%d)\n",urb->status);
    #line 154 
    usb_unanchor_urb(urb);
    #line 155 
    usb_anchor_urb(urb,& ar->tx_err);
  }
  #line 158 
  usb_free_urb(urb);
  #line 160 
  if ((long)(err == 0) != 0L) 
                              #line 161 
                              return;
  #line 163 
  err_acc: 
           #line 163 
  ;
  #line 164 
  atomic_dec(& ar->tx_anch_urbs);
  #line 165 
  return;
}

#line 167  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/usb.c"
static void carl9170_usb_tx_data_complete(struct urb *urb)
{
  #line 171 
  int __ret_warn_on;
  #line 169 
  struct ar9170 *ar = (struct ar9170 *)usb_get_intfdata(usb_ifnum_to_if(urb->dev,0U));
  #line 171 
  __ret_warn_on = ar == (struct ar9170 *)0;
  #line 171 
  if ((long)(__ret_warn_on != 0) != 0L) {
    #line 172 
    ldv_inline_asm();
    #line 173 
    ldv_inline_asm();
  }
  #line 171 
  if ((long)((long)(__ret_warn_on != 0)) != 0L) {
    #line 172 
    dev_kfree_skb_irq((struct sk_buff *)urb->context);
    #line 173 
    return;
  }
  #line 176 
  atomic_dec(& ar->tx_anch_urbs);
  #line 178 
  switch (urb->status) {
    #line 180 
    case 0: 
            #line 180 
    ;
    #line 181 
    carl9170_tx_callback(ar,(struct sk_buff *)urb->context);
    #line 182 
    break;
    #line 185 
    case -2: 
             #line 185 
    ;
    #line 186 
    case -104: 
               #line 186 
    ;
    #line 187 
    case -19: 
              #line 187 
    ;
    #line 188 
    case -108: 
               #line 188 
    ;
    #line 194 
    usb_anchor_urb(urb,& ar->tx_err);
    #line 195 
    return;
    #line 198 
    default: 
             #line 198 
    ;
    #line 199 
    if (net_ratelimit() != 0) 
                              #line 200 
                              _dev_err(& (ar->udev)->dev,(char *)"tx failed (%d)\n",urb->status);
    #line 204 
    usb_anchor_urb(urb,& ar->tx_err);
    #line 205 
    break;
  }
  #line 208 
  if ((long)(ar->state > (unsigned int)CARL9170_IDLE) != 0L) 
                                                             #line 209 
                                                             carl9170_usb_submit_data_urb(ar);
  #line 210 
  return;
}

#line 212  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/usb.c"
static int carl9170_usb_submit_cmd_urb(struct ar9170 *ar)
{
  #line 214 
  struct urb *urb;
  #line 215 
  int err;
  #line 217 
  if (atomic_inc_return(& ar->tx_cmd_urbs) != 1) {
    #line 218 
    atomic_dec(& ar->tx_cmd_urbs);
    #line 219 
    return 0;
  }
  #line 222 
  urb = usb_get_from_anchor(& ar->tx_cmd);
  #line 223 
  if (urb == (struct urb *)0) {
    #line 224 
    atomic_dec(& ar->tx_cmd_urbs);
    #line 225 
    return 0;
  }
  #line 228 
  usb_anchor_urb(urb,& ar->tx_anch);
  #line 229 
  err = cif_usb_submit_urb(urb,2592U);
  #line 230 
  if ((long)(err != 0) != 0L) {
    #line 231 
    usb_unanchor_urb(urb);
    #line 232 
    atomic_dec(& ar->tx_cmd_urbs);
  }
  #line 234 
  usb_free_urb(urb);
  #line 236 
  return err;
}

#line 239  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/usb.c"
static void carl9170_usb_cmd_complete(struct urb *urb)
{
  #line 244 
  int __ret_warn_on;
  #line 241 
  struct ar9170 *ar = (struct ar9170 *)urb->context;
  #line 242 
  int err = 0;
  #line 244 
  __ret_warn_on = ar == (struct ar9170 *)0;
  #line 244 
  if ((long)(__ret_warn_on != 0) != 0L) {
    #line 245 
    ldv_inline_asm();
    #line 246 
    ldv_inline_asm();
  }
  #line 244 
  if ((long)((long)(__ret_warn_on != 0)) != 0L) 
                                                #line 245 
                                                return;
  #line 247 
  atomic_dec(& ar->tx_cmd_urbs);
  #line 249 
  switch (urb->status) {
    #line 251 
    case 0: 
            #line 251 
    ;
    #line 252 
    break;
    #line 255 
    case -2: 
             #line 255 
    ;
    #line 256 
    case -104: 
               #line 256 
    ;
    #line 257 
    case -19: 
              #line 257 
    ;
    #line 258 
    case -108: 
               #line 258 
    ;
    #line 259 
    return;
    #line 261 
    default: 
             #line 261 
    ;
    #line 262 
    err = urb->status;
    #line 263 
    break;
  }
  #line 266 
  if (ar->state == (unsigned int)CARL9170_UNKNOWN_STATE) 
                                                         #line 267 
                                                         return;
  #line 269 
  if (err != 0) 
                #line 270 
                _dev_err(& (ar->udev)->dev,(char *)"submit cmd cb failed (%d).\n",err);
  #line 272 
  err = carl9170_usb_submit_cmd_urb(ar);
  #line 273 
  if (err != 0) 
                #line 274 
                _dev_err(& (ar->udev)->dev,(char *)"submit cmd failed (%d).\n",err);
  #line 275 
  return;
}

#line 277  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/usb.c"
static void carl9170_usb_rx_irq_complete(struct urb *urb)
{
  #line 281 
  int __ret_warn_on;
  #line 279 
  struct ar9170 *ar = (struct ar9170 *)urb->context;
  #line 281 
  __ret_warn_on = ar == (struct ar9170 *)0;
  #line 281 
  if ((long)(__ret_warn_on != 0) != 0L) {
    #line 282 
    ldv_inline_asm();
    #line 283 
    ldv_inline_asm();
  }
  #line 281 
  if ((long)((long)(__ret_warn_on != 0)) != 0L) 
                                                #line 282 
                                                return;
  #line 284 
  switch (urb->status) {
    #line 286 
    case 0: 
            #line 286 
    ;
    #line 287 
    break;
    #line 290 
    case -2: 
             #line 290 
    ;
    #line 291 
    case -104: 
               #line 291 
    ;
    #line 292 
    case -19: 
              #line 292 
    ;
    #line 293 
    case -108: 
               #line 293 
    ;
    #line 294 
    return;
    #line 296 
    default: 
             #line 296 
    ;
    #line 297 
    goto resubmit;
  }
  #line 307 
  carl9170_handle_command_response(ar,urb->transfer_buffer,urb->actual_length);
  #line 310 
  resubmit: 
            #line 310 
  ;
  #line 311 
  usb_anchor_urb(urb,& ar->rx_anch);
  #line 312 
  if ((long)(cif_usb_submit_urb(urb,2592U) != 0) != 0L) 
                                                        #line 313 
                                                        usb_unanchor_urb(urb);
  #line 314 
  return;
}

#line 316  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/usb.c"
static int carl9170_usb_submit_rx_urb(struct ar9170 *ar, gfp_t gfp)
{
  #line 318 
  struct urb *urb;
  #line 319 
  int err = 0;
  #line 319 
  int runs = 0;
  #line 321 
  while (1) {
    #line 321 
    if (atomic_read(& ar->rx_anch_urbs) <= 15) {
      #line 321 
      int tmp_0;
      #line 321 
      tmp_0 = runs;
      #line 321 
      runs ++;
      #line 321 
      ;
      #line 321 
      if (! (tmp_0 <= 15)) 
                           #line 321 
                           break;
    }
    else 
         #line 321 
         break;
    #line 323 
    err = -28;
    #line 324 
    urb = usb_get_from_anchor(& ar->rx_pool);
    #line 325 
    if (urb != (struct urb *)0) {
      #line 326 
      usb_anchor_urb(urb,& ar->rx_anch);
      #line 327 
      err = cif_usb_submit_urb(urb,gfp);
      #line 328 
      if ((long)(err != 0) != 0L) {
        #line 329 
        usb_unanchor_urb(urb);
        #line 330 
        usb_anchor_urb(urb,& ar->rx_pool);
      }
      else {
        #line 332 
        atomic_dec(& ar->rx_pool_urbs);
        #line 333 
        atomic_inc(& ar->rx_anch_urbs);
      }
      #line 335 
      usb_free_urb(urb);
    }
  }
  #line 339 
  return err;
}

#line 342  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/usb.c"
static void carl9170_usb_rx_work(struct ar9170 *ar)
{
  #line 344 
  struct urb *urb;
  #line 345 
  int i;
  #line 347 
  i = 0;
  #line 347 
  while (i <= 31) {
    #line 348 
    urb = usb_get_from_anchor(& ar->rx_work);
    #line 349 
    if (urb == (struct urb *)0) 
                                #line 350 
                                break;
    #line 352 
    atomic_dec(& ar->rx_work_urbs);
    #line 353 
    if (ar->state != (unsigned int)CARL9170_UNKNOWN_STATE) 
                                                           #line 354 
                                                           carl9170_rx(ar,urb->transfer_buffer,urb->actual_length);
    #line 358 
    usb_anchor_urb(urb,& ar->rx_pool);
    #line 359 
    atomic_inc(& ar->rx_pool_urbs);
    #line 361 
    usb_free_urb(urb);
    #line 363 
    carl9170_usb_submit_rx_urb(ar,2592U);
    #line 347 
    i ++;
  }
  #line 365 
  return;
}

#line 367  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/usb.c"
void carl9170_usb_handle_tx_err(struct ar9170 *ar)
{
  #line 369 
  struct urb *urb;
  #line 371 
  while (1) {
    #line 371 
    urb = usb_get_from_anchor(& ar->tx_err);
    #line 371 
    if (! (urb != (struct urb *)0)) 
                                    #line 371 
                                    break;
    {
      #line 372 
      struct sk_buff *skb = (struct sk_buff *)urb->context;
      #line 374 
      carl9170_tx_drop(ar,skb);
      #line 375 
      carl9170_tx_callback(ar,skb);
      #line 376 
      usb_free_urb(urb);
    }
  }
  #line 378 
  return;
}

#line 380  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/usb.c"
static void carl9170_usb_tasklet(unsigned long data)
{
  #line 382 
  struct ar9170 *ar = (struct ar9170 *)data;
  #line 384 
  if (ar->state == (unsigned int)CARL9170_UNKNOWN_STATE) 
                                                         #line 385 
                                                         return;
  #line 387 
  carl9170_usb_rx_work(ar);
  #line 394 
  if (ar->state > (unsigned int)CARL9170_IDLE) 
                                               #line 395 
                                               carl9170_tx_scheduler(ar);
  #line 396 
  return;
}

#line 398  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/usb.c"
static void carl9170_usb_rx_complete(struct urb *urb)
{
  #line 403 
  int __ret_warn_on;
  #line 401 
  int err;
  #line 400 
  struct ar9170 *ar = (struct ar9170 *)urb->context;
  #line 403 
  __ret_warn_on = ar == (struct ar9170 *)0;
  #line 403 
  if ((long)(__ret_warn_on != 0) != 0L) {
    #line 404 
    ldv_inline_asm();
    #line 405 
    ldv_inline_asm();
  }
  #line 403 
  if ((long)((long)(__ret_warn_on != 0)) != 0L) 
                                                #line 404 
                                                return;
  #line 406 
  atomic_dec(& ar->rx_anch_urbs);
  #line 408 
  switch (urb->status) {
    #line 409 
    case 0: 
            #line 409 
    ;
    #line 411 
    usb_anchor_urb(urb,& ar->rx_work);
    #line 412 
    atomic_inc(& ar->rx_work_urbs);
    #line 413 
    break;
    #line 415 
    case -2: 
             #line 415 
    ;
    #line 416 
    case -104: 
               #line 416 
    ;
    #line 417 
    case -19: 
              #line 417 
    ;
    #line 418 
    case -108: 
               #line 418 
    ;
    #line 420 
    return;
    #line 422 
    default: 
             #line 422 
    ;
    #line 424 
    usb_anchor_urb(urb,& ar->rx_pool);
    #line 425 
    atomic_inc(& ar->rx_pool_urbs);
    #line 426 
    break;
  }
  #line 429 
  err = carl9170_usb_submit_rx_urb(ar,2592U);
  #line 430 
  if ((long)(err != 0) != 0L) {
    #line 437 
    cif_tasklet_hi_schedule(& ar->usb_tasklet);
    #line 439 
    if (atomic_read(& ar->rx_anch_urbs) == 0) 
                                              #line 448 
                                              ieee80211_queue_work(ar->hw,& ar->ping_work);
  }
  else 
       #line 455 
       cif_tasklet_hi_schedule(& ar->usb_tasklet);
  #line 456 
  return;
}

#line 459  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/usb.c"
static struct urb *carl9170_usb_alloc_rx_urb(struct ar9170 *ar, gfp_t gfp)
{
  #line 461 
  struct urb *urb;
  #line 462 
  void *buf;
  #line 464 
  buf = kmalloc((unsigned long)ar->fw.rx_size,gfp);
  #line 465 
  if (buf == (void *)0) 
                        #line 466 
                        return (struct urb *)0;
  #line 468 
  urb = usb_alloc_urb(0,gfp);
  #line 469 
  if (urb == (struct urb *)0) {
    #line 470 
    kfree(buf);
    #line 471 
    return (struct urb *)0;
  }
  #line 474 
  ;
  #line 474 
  ;
  #line 474 
  ;
  #line 474 
  ;
  #line 474 
  ;
  #line 474 
  usb_fill_bulk_urb(urb,ar->udev,__create_pipe(ar->udev,2U) | 3221225600U,buf,(int)ar->fw.rx_size,& carl9170_usb_rx_complete,(void *)ar);
  #line 478 
  urb->transfer_flags |= 256U;
  #line 480 
  return urb;
}

#line 483  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/usb.c"
static int carl9170_usb_send_rx_irq_urb(struct ar9170 *ar)
{
  #line 486 
  void *ibuf;
  #line 485 
  struct urb *urb = (struct urb *)0;
  #line 487 
  int err = -12;
  #line 489 
  urb = usb_alloc_urb(0,3264U);
  #line 490 
  if (urb == (struct urb *)0) 
                              #line 491 
                              goto out;
  #line 493 
  ibuf = kmalloc(64UL,3264U);
  #line 494 
  if (ibuf == (void *)0) 
                         #line 495 
                         goto out;
  #line 497 
  ;
  #line 497 
  ;
  #line 497 
  ;
  #line 497 
  ;
  #line 497 
  usb_fill_int_urb(urb,ar->udev,__create_pipe(ar->udev,3U) | 1073741952U,ibuf,64,& carl9170_usb_rx_irq_complete,(void *)ar,1);
  #line 501 
  urb->transfer_flags |= 256U;
  #line 503 
  usb_anchor_urb(urb,& ar->rx_anch);
  #line 504 
  err = cif_usb_submit_urb(urb,3264U);
  #line 505 
  if (err != 0) 
                #line 506 
                usb_unanchor_urb(urb);
  #line 508 
  out: 
       #line 508 
  ;
  #line 509 
  usb_free_urb(urb);
  #line 510 
  return err;
}

#line 513  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/usb.c"
static int carl9170_usb_init_rx_bulk_urbs(struct ar9170 *ar)
{
  #line 515 
  struct urb *urb;
  #line 516 
  int i;
  #line 516 
  int err = -22;
  #line 528 
  i = 0;
  #line 528 
  while (i <= 31) {
    #line 529 
    urb = carl9170_usb_alloc_rx_urb(ar,3264U);
    #line 530 
    if (urb == (struct urb *)0) {
      #line 531 
      err = -12;
      #line 532 
      goto err_out;
    }
    #line 535 
    usb_anchor_urb(urb,& ar->rx_pool);
    #line 536 
    atomic_inc(& ar->rx_pool_urbs);
    #line 537 
    usb_free_urb(urb);
    #line 528 
    i ++;
  }
  #line 540 
  err = carl9170_usb_submit_rx_urb(ar,3264U);
  #line 541 
  if (err != 0) 
                #line 542 
                goto err_out;
  #line 545 
  carl9170_set_state_when(ar,(enum carl9170_device_state)CARL9170_STOPPED,(enum carl9170_device_state)CARL9170_IDLE);
  #line 546 
  return 0;
  #line 548 
  err_out: 
           #line 548 
  ;
  #line 550 
  usb_scuttle_anchored_urbs(& ar->rx_pool);
  #line 551 
  usb_scuttle_anchored_urbs(& ar->rx_work);
  #line 552 
  usb_kill_anchored_urbs(& ar->rx_anch);
  #line 553 
  return err;
}

#line 556  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/usb.c"
static int carl9170_usb_flush(struct ar9170 *ar)
{
  #line 558 
  struct urb *urb;
  #line 559 
  int ret;
  #line 559 
  int err = 0;
  #line 561 
  while (1) {
    #line 561 
    urb = usb_get_from_anchor(& ar->tx_wait);
    #line 561 
    if (! (urb != (struct urb *)0)) 
                                    #line 561 
                                    break;
    {
      #line 562 
      struct sk_buff *skb = (struct sk_buff *)urb->context;
      #line 563 
      carl9170_tx_drop(ar,skb);
      #line 564 
      carl9170_tx_callback(ar,skb);
      #line 565 
      usb_free_urb(urb);
    }
  }
  #line 568 
  ret = usb_wait_anchor_empty_timeout(& ar->tx_cmd,1000U);
  #line 569 
  if (ret == 0) 
                #line 570 
                err = -110;
  #line 573 
  ret = usb_wait_anchor_empty_timeout(& ar->tx_anch,1000U);
  #line 574 
  if (ret == 0) 
                #line 575 
                err = -110;
  #line 577 
  usb_kill_anchored_urbs(& ar->tx_anch);
  #line 578 
  carl9170_usb_handle_tx_err(ar);
  #line 580 
  return err;
}

#line 583  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/usb.c"
static void carl9170_usb_cancel_urbs(struct ar9170 *ar)
{
  #line 585 
  int err;
  #line 587 
  carl9170_set_state(ar,(enum carl9170_device_state)CARL9170_UNKNOWN_STATE);
  #line 589 
  err = carl9170_usb_flush(ar);
  #line 590 
  if (err != 0) 
                #line 591 
                _dev_err(& (ar->udev)->dev,(char *)"stuck tx urbs!\n");
  #line 593 
  usb_poison_anchored_urbs(& ar->tx_anch);
  #line 594 
  carl9170_usb_handle_tx_err(ar);
  #line 595 
  usb_poison_anchored_urbs(& ar->rx_anch);
  #line 597 
  tasklet_kill(& ar->usb_tasklet);
  #line 599 
  usb_scuttle_anchored_urbs(& ar->rx_work);
  #line 600 
  usb_scuttle_anchored_urbs(& ar->rx_pool);
  #line 601 
  usb_scuttle_anchored_urbs(& ar->tx_cmd);
  #line 602 
  return;
}

#line 604  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/usb.c"
int __carl9170_exec_cmd(struct ar9170 *ar, struct carl9170_cmd *cmd, bool free_buf)
{
  #line 615 
  int __ret_warn_on;
  #line 607 
  struct urb *urb;
  #line 608 
  int err = 0;
  #line 610 
  if (ar->state == (unsigned int)CARL9170_UNKNOWN_STATE) {
    #line 611 
    err = -1;
    #line 612 
    goto err_free;
  }
  #line 615 
  __ret_warn_on = (unsigned int)cmd->hdr.__anonCompField_carl9170_cmd_head_198.__anonCompField___anonunion_1028_197.len > 60U;
  #line 615 
  if ((long)(__ret_warn_on != 0) != 0L) {
    #line 616 
    ldv_inline_asm();
    #line 617 
    ldv_inline_asm();
  }
  #line 615 
  if ((long)((long)(__ret_warn_on != 0)) != 0L) {
    #line 616 
    err = -22;
    #line 617 
    goto err_free;
  }
  #line 620 
  urb = usb_alloc_urb(0,2592U);
  #line 621 
  if (urb == (struct urb *)0) {
    #line 622 
    err = -12;
    #line 623 
    goto err_free;
  }
  #line 626 
  if ((int)ar->usb_ep_cmd_is_bulk != 0) {
    #line 627 
    ;
    #line 627 
    ;
    #line 627 
    ;
    #line 627 
    ;
    #line 627 
    ;
    #line 627 
    usb_fill_bulk_urb(urb,ar->udev,__create_pipe(ar->udev,4U) | 3221225472U,(void *)cmd,(int)cmd->hdr.__anonCompField_carl9170_cmd_head_198.__anonCompField___anonunion_1028_197.len + 4,& carl9170_usb_cmd_complete,(void *)ar);
  }
  else {
    #line 632 
    ;
    #line 632 
    ;
    #line 632 
    ;
    #line 632 
    ;
    #line 632 
    ;
    #line 632 
    usb_fill_int_urb(urb,ar->udev,__create_pipe(ar->udev,4U) | 1073741824U,(void *)cmd,(int)cmd->hdr.__anonCompField_carl9170_cmd_head_198.__anonCompField___anonunion_1028_197.len + 4,& carl9170_usb_cmd_complete,(void *)ar,1);
  }
  #line 637 
  if ((int)free_buf != 0) 
                          #line 638 
                          urb->transfer_flags |= 256U;
  #line 640 
  usb_anchor_urb(urb,& ar->tx_cmd);
  #line 641 
  usb_free_urb(urb);
  #line 643 
  return carl9170_usb_submit_cmd_urb(ar);
  #line 645 
  err_free: 
            #line 645 
  ;
  #line 646 
  if ((int)free_buf != 0) 
                          #line 647 
                          kfree((void *)cmd);
  #line 649 
  return err;
}

#line 652  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/usb.c"
int carl9170_exec_cmd(struct ar9170 *ar, enum carl9170_cmd_oids cmd, unsigned int plen, void *payload, unsigned int outlen, void *out)
{
  #line 656 
  unsigned long time_left;
  #line 655 
  int err = -12;
  #line 658 
  if (ar->state <= (unsigned int)CARL9170_STOPPED) 
                                                   #line 659 
                                                   return -5;
  #line 661 
  if (((unsigned int)cmd & 64U) == 0U) 
                                       #line 662 
                                       __might_sleep((char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/usb.c",662,0);
  #line 664 
  ar->__anonCompField_ar9170_205.cmd.hdr.__anonCompField_carl9170_cmd_head_198.__anonCompField___anonunion_1028_197.len = (unsigned char)plen;
  #line 665 
  ar->__anonCompField_ar9170_205.cmd.hdr.__anonCompField_carl9170_cmd_head_198.__anonCompField___anonunion_1028_197.cmd = (unsigned char)cmd;
  #line 667 
  if (plen != 0U && (void *)(& ar->__anonCompField_ar9170_205.cmd.__anonCompField_carl9170_cmd_199.data) != payload) 
    #line 668 
    memcpy((void *)(& ar->__anonCompField_ar9170_205.cmd.__anonCompField_carl9170_cmd_199.data),payload,(unsigned long)plen);
  #line 670 
  cif_spin_lock_bh_cmd_lock_of_ar9170(& ar->cmd_lock);
  #line 671 
  ar->readbuf = (u8 *)out;
  #line 672 
  ar->readlen = (int)outlen;
  #line 673 
  cif_spin_unlock_bh_cmd_lock_of_ar9170(& ar->cmd_lock);
  #line 675 
  reinit_completion(& ar->cmd_wait);
  #line 676 
  err = __carl9170_exec_cmd(ar,& ar->__anonCompField_ar9170_205.cmd,(_Bool)0);
  #line 678 
  if (((unsigned int)cmd & 64U) == 0U) {
    #line 679 
    time_left = wait_for_completion_timeout(& ar->cmd_wait,250UL);
    #line 680 
    if (time_left == 0UL) {
      #line 681 
      err = -110;
      #line 682 
      goto err_unbuf;
    }
    #line 685 
    if ((unsigned int)ar->readlen != outlen) {
      #line 686 
      err = -90;
      #line 687 
      goto err_unbuf;
    }
  }
  #line 691 
  return 0;
  #line 693 
  err_unbuf: 
             #line 693 
  ;
  #line 695 
  if (ar->state > (unsigned int)CARL9170_IDLE) {
    #line 696 
    _dev_err(& (ar->udev)->dev,(char *)"no command feedback ",err);
    {
      #line 700 
      bool branch;
      #line 700 
      struct _ddebug __UNIQUE_ID_ddebug572 = {.modname = (char *)"carl9170", .function = (char *)"carl9170_exec_cmd", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/usb.c", .format = (char *)"carl9170 cmd: ", .lineno = (unsigned int)700U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
      #line 700 
      branch = arch_static_branch(& __UNIQUE_ID_ddebug572.key.dd_key_false.key,(_Bool)0);
      #line 700 
      if ((long)((long)((int)branch != 0)) != 0L) 
                                                  #line 700 
                                                  print_hex_dump((char *)"\001",(char *)"carl9170 cmd: ",0,16,1,(void *)(& ar->__anonCompField_ar9170_205.cmd),(unsigned long)(plen + 4U),(_Bool)1);
    }
    #line 703 
    carl9170_restart(ar,(enum carl9170_restart_reasons)CARL9170_RR_COMMAND_TIMEOUT);
  }
  #line 707 
  cif_spin_lock_bh_cmd_lock_of_ar9170(& ar->cmd_lock);
  #line 708 
  ar->readbuf = (u8 *)0U;
  #line 709 
  ar->readlen = 0;
  #line 710 
  cif_spin_unlock_bh_cmd_lock_of_ar9170(& ar->cmd_lock);
  #line 712 
  return err;
}

#line 715  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/usb.c"
void carl9170_usb_tx(struct ar9170 *ar, struct sk_buff *skb)
{
  #line 717 
  struct urb *urb;
  #line 718 
  struct ar9170_stream *tx_stream;
  #line 719 
  void *data;
  #line 720 
  unsigned int len;
  #line 722 
  if (ar->state <= (unsigned int)CARL9170_IDLE) 
                                                #line 723 
                                                goto err_drop;
  #line 725 
  urb = usb_alloc_urb(0,2592U);
  #line 726 
  if (urb == (struct urb *)0) 
                              #line 727 
                              goto err_drop;
  #line 729 
  if ((int)ar->fw.tx_stream != 0) {
    #line 730 
    tx_stream = (struct ar9170_stream *)(skb->data + 18446744073709551612U);
    #line 732 
    len = skb->len + 4U;
    #line 733 
    tx_stream->length = (unsigned short)len;
    #line 734 
    tx_stream->tag = (unsigned short)27006U;
    #line 735 
    data = (void *)tx_stream;
  }
  else {
    #line 737 
    data = (void *)skb->data;
    #line 738 
    len = skb->len;
  }
  #line 741 
  ;
  #line 741 
  ;
  #line 741 
  ;
  #line 741 
  ;
  #line 741 
  ;
  #line 741 
  usb_fill_bulk_urb(urb,ar->udev,__create_pipe(ar->udev,1U) | 3221225472U,data,(int)len,& carl9170_usb_tx_data_complete,(void *)skb);
  #line 745 
  urb->transfer_flags |= 64U;
  #line 747 
  usb_anchor_urb(urb,& ar->tx_wait);
  #line 749 
  usb_free_urb(urb);
  #line 751 
  carl9170_usb_submit_data_urb(ar);
  #line 752 
  return;
  #line 754 
  err_drop: 
            #line 754 
  ;
  #line 755 
  carl9170_tx_drop(ar,skb);
  #line 756 
  carl9170_tx_callback(ar,skb);
  #line 757 
  return;
}

#line 759  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/usb.c"
static void carl9170_release_firmware(struct ar9170 *ar)
{
  #line 761 
  if (ar->fw.fw != (struct firmware *)0) {
    #line 762 
    cif_release_firmware(ar->fw.fw);
    #line 763 
    memset((void *)(& ar->fw),0,80UL);
  }
  #line 765 
  return;
}

#line 767  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/usb.c"
void carl9170_usb_stop(struct ar9170 *ar)
{
  #line 769 
  int ret;
  #line 771 
  carl9170_set_state_when(ar,(enum carl9170_device_state)CARL9170_IDLE,(enum carl9170_device_state)CARL9170_STOPPED);
  #line 773 
  ret = carl9170_usb_flush(ar);
  #line 774 
  if (ret != 0) 
                #line 775 
                _dev_err(& (ar->udev)->dev,(char *)"kill pending tx urbs.\n");
  #line 777 
  usb_poison_anchored_urbs(& ar->tx_anch);
  #line 778 
  carl9170_usb_handle_tx_err(ar);
  #line 781 
  cif_spin_lock_bh_cmd_lock_of_ar9170(& ar->cmd_lock);
  #line 782 
  ar->readlen = 0;
  #line 783 
  cif_spin_unlock_bh_cmd_lock_of_ar9170(& ar->cmd_lock);
  #line 784 
  complete(& ar->cmd_wait);
  #line 785 
  return;
}

#line 793  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/usb.c"
int carl9170_usb_open(struct ar9170 *ar)
{
  #line 795 
  usb_unpoison_anchored_urbs(& ar->tx_anch);
  #line 797 
  carl9170_set_state_when(ar,(enum carl9170_device_state)CARL9170_STOPPED,(enum carl9170_device_state)CARL9170_IDLE);
  #line 798 
  return 0;
}

#line 801  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/usb.c"
static int carl9170_usb_load_firmware(struct ar9170 *ar)
{
  #line 803 
  u8 *data;
  #line 804 
  u8 *buf;
  #line 805 
  unsigned int transfer;
  #line 806 
  size_t len;
  #line 807 
  u32 addr;
  #line 808 
  int err = 0;
  #line 810 
  buf = (u8 *)kmalloc(4096UL,3264U);
  #line 811 
  if (buf == (u8 *)0U) {
    #line 812 
    err = -12;
    #line 813 
    goto err_out;
  }
  #line 816 
  data = (ar->fw.fw)->data;
  #line 817 
  len = (ar->fw.fw)->size;
  #line 818 
  addr = ar->fw.address;
  #line 821 
  data += (unsigned long)ar->fw.offset;
  #line 822 
  len -= (unsigned long)ar->fw.offset;
  #line 824 
  while (len != 0UL) {
    #line 825 
    unsigned int __UNIQUE_ID___x573;
    #line 825 
    unsigned int tmp_0;
    {
      #line 825 
      __UNIQUE_ID___x573 = (unsigned int)len;
      #line 825 
      unsigned int __UNIQUE_ID___y574 = 4096U;
      #line 825 
      if (__UNIQUE_ID___x573 < __UNIQUE_ID___y574) 
                                                   #line 825 
                                                   tmp_0 = __UNIQUE_ID___x573; else 
                                                                    #line 825 
                                                                    tmp_0 = __UNIQUE_ID___y574;
      }
    #line 825 
    transfer = tmp_0;
    #line 826 
    memcpy((void *)buf,(void *)data,(unsigned long)transfer);
    #line 828 
    ;
    #line 828 
    ;
    #line 828 
    ;
    #line 828 
    ;
    #line 828 
    err = usb_control_msg(ar->udev,__create_pipe(ar->udev,0U) | 2147483648U,(unsigned char)48,(unsigned char)64,(unsigned short)((int)((unsigned short)(addr >> 8))),(unsigned short)0,(void *)buf,(unsigned short)((int)((unsigned short)transfer)),100);
    #line 832 
    if (err < 0) {
      #line 833 
      kfree((void *)buf);
      #line 834 
      goto err_out;
    }
    #line 837 
    len -= (unsigned long)transfer;
    #line 838 
    data += (unsigned long)transfer;
    #line 839 
    addr += transfer;
  }
  #line 841 
  kfree((void *)buf);
  #line 843 
  ;
  #line 843 
  err = usb_control_msg(ar->udev,__create_pipe(ar->udev,0U) | 2147483648U,(unsigned char)49,(unsigned char)64,(unsigned short)0,(unsigned short)0,(void *)0,(unsigned short)0,200);
  #line 847 
  if (wait_for_completion_timeout(& ar->fw_boot_wait,250UL) == 0UL) {
    #line 848 
    err = -110;
    #line 849 
    goto err_out;
  }
  #line 852 
  err = carl9170_echo_test(ar,1242628387U);
  #line 853 
  if (err != 0) 
                #line 854 
                goto err_out;
  #line 857 
  ar->cmd_seq = -1;
  #line 859 
  return 0;
  #line 861 
  err_out: 
           #line 861 
  ;
  #line 862 
  _dev_err(& (ar->udev)->dev,(char *)"firmware upload failed (%d).\n",err);
  #line 863 
  return err;
}

#line 866  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/usb.c"
int carl9170_usb_restart(struct ar9170 *ar)
{
  #line 868 
  int err = 0;
  #line 870 
  if ((ar->intf)->condition != (unsigned int)USB_INTERFACE_BOUND) 
                                                                  #line 871 
                                                                  return 0;
  #line 879 
  ar->cmd_seq = -2;
  #line 881 
  err = carl9170_reboot(ar);
  #line 883 
  carl9170_usb_stop(ar);
  #line 885 
  if (err != 0) 
                #line 886 
                goto err_out;
  #line 888 
  cif_tasklet_schedule(& ar->usb_tasklet);
  #line 891 
  msleep(1100U);
  #line 893 
  err = carl9170_usb_open(ar);
  #line 894 
  if (err != 0) 
                #line 895 
                goto err_out;
  #line 897 
  err = carl9170_usb_load_firmware(ar);
  #line 898 
  if (err != 0) 
                #line 899 
                goto err_out;
  #line 901 
  return 0;
  #line 903 
  err_out: 
           #line 903 
  ;
  #line 904 
  carl9170_usb_cancel_urbs(ar);
  #line 905 
  return err;
}

#line 908  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/usb.c"
void carl9170_usb_reset(struct ar9170 *ar)
{
  #line 919 
  carl9170_usb_cancel_urbs(ar);
  #line 921 
  carl9170_usb_stop(ar);
  #line 923 
  usb_queue_reset_device(ar->intf);
  #line 924 
  return;
}

#line 926  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/usb.c"
static int carl9170_usb_init_device(struct ar9170 *ar)
{
  #line 928 
  int err;
  #line 937 
  ar->cmd_seq = -2;
  #line 939 
  err = carl9170_usb_send_rx_irq_urb(ar);
  #line 940 
  if (err != 0) 
                #line 941 
                goto err_out;
  #line 943 
  err = carl9170_usb_init_rx_bulk_urbs(ar);
  #line 944 
  if (err != 0) 
                #line 945 
                goto err_unrx;
  #line 947 
  err = carl9170_usb_open(ar);
  #line 948 
  if (err != 0) 
                #line 949 
                goto err_unrx;
  #line 951 
  cif_mutex_lock_mutex_of_ar9170(& ar->mutex);
  #line 952 
  err = carl9170_usb_load_firmware(ar);
  #line 953 
  cif_mutex_unlock_mutex_of_ar9170(& ar->mutex);
  #line 954 
  if (err != 0) 
                #line 955 
                goto err_stop;
  #line 957 
  return 0;
  #line 959 
  err_stop: 
            #line 959 
  ;
  #line 960 
  carl9170_usb_stop(ar);
  #line 962 
  err_unrx: 
            #line 962 
  ;
  #line 963 
  carl9170_usb_cancel_urbs(ar);
  #line 965 
  err_out: 
           #line 965 
  ;
  #line 966 
  return err;
}

#line 969  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/usb.c"
static void carl9170_usb_firmware_failed(struct ar9170 *ar)
{
  #line 975 
  struct usb_interface *intf = ar->intf;
  #line 976 
  struct usb_device *udev = ar->udev;
  #line 978 
  complete(& ar->fw_load_wait);
  #line 980 
  ar = (struct ar9170 *)0;
  #line 983 
  device_lock(& udev->dev);
  #line 984 
  usb_driver_release_interface(& carl9170_driver,intf);
  #line 985 
  device_unlock(& udev->dev);
  #line 987 
  usb_put_intf(intf);
  #line 988 
  return;
}

#line 990  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/usb.c"
static void carl9170_usb_firmware_finish(struct ar9170 *ar)
{
  #line 993 
  int err;
  #line 992 
  struct usb_interface *intf = ar->intf;
  #line 995 
  err = carl9170_parse_firmware(ar);
  #line 996 
  if (err != 0) 
                #line 997 
                goto err_freefw;
  #line 999 
  err = carl9170_usb_init_device(ar);
  #line 1000 
  if (err != 0) 
                #line 1001 
                goto err_freefw;
  #line 1003 
  err = carl9170_register(ar);
  #line 1005 
  carl9170_usb_stop(ar);
  #line 1006 
  if (err != 0) 
                #line 1007 
                goto err_unrx;
  #line 1009 
  complete(& ar->fw_load_wait);
  #line 1010 
  usb_put_intf(intf);
  #line 1011 
  return;
  #line 1013 
  err_unrx: 
            #line 1013 
  ;
  #line 1014 
  carl9170_usb_cancel_urbs(ar);
  #line 1016 
  err_freefw: 
              #line 1016 
  ;
  #line 1017 
  carl9170_release_firmware(ar);
  #line 1018 
  carl9170_usb_firmware_failed(ar);
  #line 1019 
  return;
}

#line 1021  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/usb.c"
static void carl9170_usb_firmware_step2(struct firmware *fw, void *context)
{
  #line 1024 
  struct ar9170 *ar = (struct ar9170 *)context;
  #line 1026 
  if (fw != (struct firmware *)0) {
    #line 1027 
    ar->fw.fw = fw;
    #line 1028 
    carl9170_usb_firmware_finish(ar);
    #line 1029 
    return;
  }
  #line 1032 
  _dev_err(& (ar->udev)->dev,(char *)"firmware not found.\n");
  #line 1033 
  carl9170_usb_firmware_failed(ar);
  #line 1034 
  return;
}

#line 1036  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/usb.c"
static int carl9170_usb_probe(struct usb_interface *intf, struct usb_device_id *id)
{
  #line 1039 
  struct usb_endpoint_descriptor *ep;
  #line 1040 
  struct ar9170 *ar;
  #line 1041 
  struct usb_device *udev;
  #line 1042 
  int i;
  #line 1042 
  int err;
  #line 1044 
  err = cif_usb_reset_device(interface_to_usbdev(intf));
  #line 1045 
  if (err != 0) 
                #line 1046 
                return err;
  #line 1048 
  ar = (struct ar9170 *)carl9170_alloc(11400UL);
  #line 1049 
  if ((int)IS_ERR((void *)ar) != 0) {
    #line 1050 
    return (int)PTR_ERR((void *)ar);
  }
  #line 1052 
  udev = interface_to_usbdev(intf);
  #line 1053 
  ar->udev = udev;
  #line 1054 
  ar->intf = intf;
  #line 1055 
  ar->features = id->driver_info;
  #line 1063 
  i = 0;
  #line 1063 
  while ((int)(intf->cur_altsetting)->desc.bNumEndpoints > i) {
    {
      #line 1064 
      ep = & ((intf->cur_altsetting)->endpoint + (unsigned long)i)->desc;
      #line 1066 
      if (usb_endpoint_num(ep) == 4) {
        #line 1066 
        if (usb_endpoint_dir_out(ep) != 0) {
          #line 1067 
          if (usb_endpoint_type(ep) == 2) 
                                          #line 1069 
                                          ar->usb_ep_cmd_is_bulk = (_Bool)1;
        }
      }
    }
    #line 1063 
    i ++;
  }
  #line 1072 
  usb_set_intfdata(intf,(void *)ar);
  #line 1073 
  SET_IEEE80211_DEV(ar->hw,& intf->dev);
  #line 1075 
  init_usb_anchor(& ar->rx_anch);
  #line 1076 
  init_usb_anchor(& ar->rx_pool);
  #line 1077 
  init_usb_anchor(& ar->rx_work);
  #line 1078 
  init_usb_anchor(& ar->tx_wait);
  #line 1079 
  init_usb_anchor(& ar->tx_anch);
  #line 1080 
  init_usb_anchor(& ar->tx_cmd);
  #line 1081 
  init_usb_anchor(& ar->tx_err);
  #line 1082 
  __init_completion(& ar->cmd_wait);
  #line 1083 
  __init_completion(& ar->fw_boot_wait);
  #line 1084 
  __init_completion(& ar->fw_load_wait);
  #line 1085 
  cif_tasklet_init(& ar->usb_tasklet,& carl9170_usb_tasklet,(unsigned long)ar);
  #line 1088 
  atomic_set(& ar->tx_cmd_urbs,0);
  #line 1089 
  atomic_set(& ar->tx_anch_urbs,0);
  #line 1090 
  atomic_set(& ar->rx_work_urbs,0);
  #line 1091 
  atomic_set(& ar->rx_anch_urbs,0);
  #line 1092 
  atomic_set(& ar->rx_pool_urbs,0);
  #line 1094 
  usb_get_intf(intf);
  #line 1096 
  carl9170_set_state(ar,(enum carl9170_device_state)CARL9170_STOPPED);
  #line 1098 
  err = request_firmware_nowait(& __this_module,(_Bool)1,(char *)"carl9170-1.fw",& (ar->udev)->dev,3264U,(void *)ar,& carl9170_usb_firmware_step2);
  #line 1100 
  if (err != 0) {
    #line 1101 
    usb_put_intf(intf);
    #line 1102 
    carl9170_free(ar);
  }
  #line 1104 
  return err;
}

#line 1107  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/usb.c"
static void carl9170_usb_disconnect(struct usb_interface *intf)
{
  #line 1111 
  int __ret_warn_on;
  #line 1109 
  struct ar9170 *ar = usb_get_intfdata(intf);
  #line 1111 
  __ret_warn_on = ar == (struct ar9170 *)0;
  #line 1111 
  if ((long)(__ret_warn_on != 0) != 0L) {
    #line 1112 
    ldv_inline_asm();
    #line 1113 
    ldv_inline_asm();
  }
  #line 1111 
  if ((long)((long)(__ret_warn_on != 0)) != 0L) 
                                                #line 1112 
                                                return;
  #line 1114 
  wait_for_completion(& ar->fw_load_wait);
  #line 1116 
  if (ar->state != (unsigned int)CARL9170_UNKNOWN_STATE) {
    #line 1117 
    carl9170_reboot(ar);
    #line 1118 
    carl9170_usb_stop(ar);
  }
  #line 1121 
  carl9170_usb_cancel_urbs(ar);
  #line 1122 
  carl9170_unregister(ar);
  #line 1124 
  usb_set_intfdata(intf,(void *)0);
  #line 1126 
  carl9170_release_firmware(ar);
  #line 1127 
  carl9170_free(ar);
  #line 1128 
  return;
}

#line 1131  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/usb.c"
static int carl9170_usb_suspend(struct usb_interface *intf, pm_message_t message)
{
  #line 1134 
  struct ar9170 *ar = usb_get_intfdata(intf);
  #line 1136 
  if (ar == (struct ar9170 *)0) 
                                #line 1137 
                                return -19;
  #line 1139 
  carl9170_usb_cancel_urbs(ar);
  #line 1141 
  return 0;
}

#line 1144  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/usb.c"
static int carl9170_usb_resume(struct usb_interface *intf)
{
  #line 1147 
  int err;
  #line 1146 
  struct ar9170 *ar = usb_get_intfdata(intf);
  #line 1149 
  if (ar == (struct ar9170 *)0) 
                                #line 1150 
                                return -19;
  #line 1152 
  usb_unpoison_anchored_urbs(& ar->rx_anch);
  #line 1153 
  carl9170_set_state(ar,(enum carl9170_device_state)CARL9170_STOPPED);
  #line 1164 
  msleep(1100U);
  #line 1166 
  err = carl9170_usb_init_device(ar);
  #line 1167 
  if (err != 0) 
                #line 1168 
                goto err_unrx;
  #line 1170 
  return 0;
  #line 1172 
  err_unrx: 
            #line 1172 
  ;
  #line 1173 
  carl9170_usb_cancel_urbs(ar);
  #line 1175 
  return err;
}

#line 1179  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/usb.c"
static struct usb_driver carl9170_driver = {.name = (char *)"carl9170", .probe = & carl9170_usb_probe, .disconnect = & carl9170_usb_disconnect, .suspend = & carl9170_usb_suspend, .resume = & carl9170_usb_resume, .reset_resume = & carl9170_usb_resume, .id_table = (struct usb_device_id *)(& carl9170_usb_ids), .disable_hub_initiated_lpm = (unsigned int)1U, .soft_unbind = (unsigned int)1U};
#line 1193  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/usb.c"
static int carl9170_driver_init(void)
{
  #line 1193 
  return cif_usb_register_driver(& carl9170_driver,& __this_module,
                              (char *)"carl9170");
}

#line 1193  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/usb.c"
static void carl9170_driver_exit(void)
{
  #line 1193 
  cif_usb_deregister(& carl9170_driver);
  #line 1194 
  return;
}

#line 93  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/usb.i.aux"
struct usb_driver *emg_alias_carl9170_driver = & carl9170_driver;
#line 94  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/usb.i.aux"
struct usb_device_id (*emg_alias_carl9170_usb_ids)[29U] = & carl9170_usb_ids;
#line 101 
#line 101 
void emg_tasklet_hi_schedule(struct tasklet_struct *arg0);
#line 102 
#line 102 
void emg_tasklet_init(struct tasklet_struct *arg0, void (*arg1)(unsigned long ), unsigned long arg2);
#line 103 
#line 103 
void emg_tasklet_schedule(struct tasklet_struct *arg0);
#line 104 
#line 104 
void emg_usb_deregister(struct usb_driver *arg0);
#line 105 
#line 105 
int emg_usb_register_driver(struct usb_driver *arg0, struct module *arg1, char *arg2);
#line 106 
#line 106 
int emg_usb_reset_device(struct usb_device *arg0);
#line 107 
#line 107 
int emg_usb_submit_urb(struct urb *arg0, unsigned int arg1);
#line 111  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/usb.i.aux"
void emg_carl9170_driver_exit(void)
{
  #line 112 
  carl9170_driver_exit();
  #line 113 
  return;
}

#line 115  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/usb.i.aux"
int emg_carl9170_driver_init(void)
{
  #line 116 
  return carl9170_driver_init();
}

#line 119  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/usb.i.aux"
void emg_wrapper_carl9170_usb_disconnect(struct usb_interface *arg0)
{
  #line 120 
  carl9170_usb_disconnect(arg0);
  #line 121 
  return;
}

#line 124  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/usb.i.aux"
int emg_wrapper_carl9170_usb_probe(struct usb_interface *arg0, struct usb_device_id *arg1)
{
  #line 125 
  return carl9170_usb_probe(arg0,arg1);
}

#line 129  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/usb.i.aux"
int emg_wrapper_carl9170_usb_resume(struct usb_interface *arg0)
{
  #line 130 
  return carl9170_usb_resume(arg0);
}

#line 134  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/usb.i.aux"
int emg_wrapper_carl9170_usb_suspend(struct usb_interface *arg0, struct pm_message arg1)
{
  #line 135 
  return carl9170_usb_suspend(arg0,arg1);
}

#line 168  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/usb.i.aux"
static void INIT_LIST_HEAD(struct list_head *list)
{
  #line 171 
  ldv_init_list_head(list);
  #line 172 
  return;
}

#line 203  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/usb.i.aux"
static int atomic_add_return(int i, atomic_t *v)
{
  #line 206 
  return ldv_atomic_add_return(i,v);
}

#line 217  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/usb.i.aux"
static void atomic_inc(atomic_t *v)
{
  #line 220 
  ldv_atomic_inc(v);
  #line 221 
  return;
}

#line 224  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/usb.i.aux"
static void atomic_dec(atomic_t *v)
{
  #line 227 
  ldv_atomic_dec(v);
  #line 228 
  return;
}

#line 245  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/usb.i.aux"
static long PTR_ERR(void *ptr)
{
  #line 248 
  return ldv_ptr_err(ptr);
}

#line 252  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/usb.i.aux"
static bool IS_ERR(void *ptr)
{
  #line 255 
  return ldv_is_err(ptr);
}

#line 410  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/usb.i.aux"
static void *kmalloc(size_t size, gfp_t flags)
{
  #line 413 
  return ldv_kmalloc(size,flags);
}

#line 466  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/usb.i.aux"
static void cif_mutex_lock_mutex_of_device(struct mutex *lock)
{
  #line 469 
  ldv_mutex_model_lock(lock,(char *)"mutex_of_device");
  #line 470 
  return;
}

#line 511  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/usb.i.aux"
static void cif_mutex_unlock_mutex_of_device(struct mutex *lock)
{
  #line 514 
  ldv_mutex_model_unlock(lock,(char *)"mutex_of_device");
  #line 515 
  return;
}

#line 825  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/usb.i.aux"
static void cif___ldv_spin_lock_state_lock_of_ar9170(spinlock_t *lock)
{
  #line 828 
  ldv_spin_model_lock((char *)"state_lock_of_ar9170");
  #line 830 
  __ldv_spin_lock(lock);
  #line 831 
  return;
}

#line 834  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/usb.i.aux"
static void cif_spin_unlock_irqrestore_state_lock_of_ar9170(spinlock_t *lock, unsigned long flags)
{
  #line 837 
  ldv_spin_model_unlock((char *)"state_lock_of_ar9170");
  #line 839 
  spin_unlock_irqrestore(lock,flags);
  #line 840 
  return;
}

#line 843  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/usb.i.aux"
static int cif_usb_submit_urb(struct urb *urb, gfp_t mem_flags)
{
  #line 847 
  return emg_usb_submit_urb(urb,mem_flags);
}

#line 851  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/usb.i.aux"
static void cif_tasklet_hi_schedule(struct tasklet_struct *t)
{
  #line 855 
  emg_tasklet_hi_schedule(t);
  #line 856 
  return;
}

#line 859  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/usb.i.aux"
static void cif_spin_lock_bh_cmd_lock_of_ar9170(spinlock_t *lock)
{
  #line 862 
  ldv_spin_model_lock((char *)"cmd_lock_of_ar9170");
  #line 864 
  spin_lock_bh(lock);
  #line 865 
  return;
}

#line 868  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/usb.i.aux"
static void cif_spin_unlock_bh_cmd_lock_of_ar9170(spinlock_t *lock)
{
  #line 871 
  ldv_spin_model_unlock((char *)"cmd_lock_of_ar9170");
  #line 873 
  spin_unlock_bh(lock);
  #line 874 
  return;
}

#line 877  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/usb.i.aux"
static void cif_release_firmware(struct firmware *fw)
{
  #line 880 
  ldv_release_firmware(fw);
  #line 881 
  return;
}

#line 884  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/usb.i.aux"
static void cif_tasklet_schedule(struct tasklet_struct *t)
{
  #line 888 
  emg_tasklet_schedule(t);
  #line 889 
  return;
}

#line 892  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/usb.i.aux"
static void cif_mutex_lock_mutex_of_ar9170(struct mutex *lock)
{
  #line 895 
  ldv_mutex_model_lock(lock,(char *)"mutex_of_ar9170");
  #line 896 
  return;
}

#line 899  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/usb.i.aux"
static void cif_mutex_unlock_mutex_of_ar9170(struct mutex *lock)
{
  #line 902 
  ldv_mutex_model_unlock(lock,(char *)"mutex_of_ar9170");
  #line 903 
  return;
}

#line 906  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/usb.i.aux"
static int cif_usb_reset_device(struct usb_device *dev)
{
  #line 910 
  return emg_usb_reset_device(dev);
}

#line 914  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/usb.i.aux"
static void cif_tasklet_init(struct tasklet_struct *t, void (*func)(unsigned long ), unsigned long data)
{
  #line 918 
  emg_tasklet_init(t,func,data);
  #line 919 
  return;
}

#line 922  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/usb.i.aux"
static int cif_usb_register_driver(struct usb_driver *ldv_func_arg1, struct module *ldv_func_arg2, char *ldv_func_arg3)
{
  #line 926 
  return emg_usb_register_driver(ldv_func_arg1,ldv_func_arg2,ldv_func_arg3);
}

#line 930  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/usb.i.aux"
static void cif_usb_deregister(struct usb_driver *ldv_func_arg1)
{
  #line 934 
  emg_usb_deregister(ldv_func_arg1);
  #line 935 
  return;
}

#line 4  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/tx.i.aux"
#line 4 
void ldv_atomic_add(int i, atomic_t *v);
#line 136  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/bitops.h"
__inline static bool arch_test_and_set_bit(long nr, unsigned long *addr)
{
  #line 138 
  bool c;
  #line 139 
  ldv_inline_asm();
  #line 138 
  return c;
}

#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/bitops/find.h"
#line 155  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/tx.i.aux"
static unsigned long cif_find_first_bit(unsigned long *addr, unsigned long size);
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/bitops/instrumented-atomic.h"
__inline static bool test_and_set_bit(long nr, unsigned long *addr)
{
  #line 70 
  kasan_check_read((void *)(addr + (unsigned long)(nr / 64L)),8U);
  #line 71 
  return arch_test_and_set_bit(nr,addr);
}

#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
#line 33 
bool __list_add_valid(struct list_head *, struct list_head *, struct list_head *);
#line 36 
#line 36 
bool __list_del_entry_valid(struct list_head *);
#line 95  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
__inline static void __list_del(struct list_head *prev, struct list_head *next)
{
  #line 97 
  next->prev = prev;
  {
    #line 107 
    union __anonunion___u_1060 __u = {.__val = next};
    #line 106 
    __write_once_size((void *)(& prev->next),(void *)(& __u.__c),8);
    #line 106 
    struct list_head *tmp = __u.__val;
  }
  #line 108 
  return;
}

#line 129  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
__inline static void __list_del_entry(struct list_head *entry)
{
  #line 131 
  if (! __list_del_entry_valid(entry)) 
                                       #line 132 
                                       return;
  #line 134 
  __list_del(entry->prev,entry->next);
  #line 135 
  return;
}

#line 88  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/percpu.h"
#line 88 
void __bad_percpu_size(void);
#line 89  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/bug.h"
#line 89 
void __warn_printk(char * , ...);
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bitmap.h"
#line 132 
void __bitmap_shift_right(unsigned long *, unsigned long *, unsigned int, unsigned int);
#line 201 
#line 201 
int bitmap_find_free_region(unsigned long *, unsigned int, int);
#line 202 
#line 202 
void bitmap_release_region(unsigned long *, unsigned int, int);
#line 372  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bitmap.h"
__inline static int bitmap_empty(unsigned long *src, unsigned int nbits)
{
  #line 374 
  if (0 != 0 && nbits + 4294967295U <= 63U) 
                                            #line 375 
                                            return (*src & (18446744073709551615UL >> (- nbits & 63U))) == 0UL;
  #line 377 
  ;
  #line 377 
  return cif_find_first_bit(src,(unsigned long)nbits) == (unsigned long)nbits;
}

#line 423  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bitmap.h"
__inline static void bitmap_shift_right(unsigned long *dst, unsigned long *src, unsigned int shift, unsigned int nbits)
{
  #line 426 
  if (0 != 0 && nbits + 4294967295U <= 63U) 
                                            #line 427 
                                            *dst = (*src & (18446744073709551615UL >> (- nbits & 63U))) >> shift; else 
                                                                    #line 429 
                                                                    __bitmap_shift_right(dst,src,shift,nbits);
  #line 430 
  return;
}

#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/cmpxchg.h"
#line 17 
void __xadd_wrong_size(void);
#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/cmpxchg_64.h"
__inline static int arch_atomic_read_0(atomic_t *v)
{
  #line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/atomic.h"
  union __anonunion___u_1112 __u;
  #line 31 
  __read_once_size((void *)(& v->counter),(void *)(& __u.__c),4);
  #line 31 
  return (__u.__val);
}

#line 41  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/atomic.h"
__inline static void arch_atomic_set_0(atomic_t *v, int i)
{
  #line 44 
  union __anonunion___u_1114 __u = {.__val = i};
  #line 43 
  __write_once_size((void *)(& v->counter),(void *)(& __u.__c),4);
  #line 43 
  int tmp = __u.__val;
  #line 45 
  return;
}

#line 123  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/atomic.h"
__inline static bool arch_atomic_dec_and_test(atomic_t *v)
{
  #line 125 
  bool c;
  #line 126 
  ldv_inline_asm();
  #line 125 
  return c;
}

#line 165  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/atomic.h"
__inline static int arch_atomic_add_return(int i, atomic_t *v)
{
  #line 167 
  int __ret;
  #line 167 
  __ret = i;
  #line 167 
  switch (4UL) {
    #line 167 
    case (unsigned long)1: 
                           #line 167 
    ;
    #line 168 
    ldv_inline_asm();
    #line 167 
    break;
    #line 167 
    case (unsigned long)2: 
                           #line 167 
    ;
    #line 168 
    ldv_inline_asm();
    #line 167 
    break;
    #line 167 
    case (unsigned long)4: 
                           #line 167 
    ;
    #line 168 
    ldv_inline_asm();
    #line 167 
    break;
    #line 167 
    case (unsigned long)8: 
                           #line 167 
    ;
    #line 168 
    ldv_inline_asm();
    #line 167 
    break;
    #line 167 
    default: 
             #line 167 
    ;
    #line 167 
    __xadd_wrong_size();
  }
  #line 167 
  ;
  #line 167 
  return __ret + i;
}

#line 177  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/atomic.h"
__inline static int arch_atomic_sub_return(int i, atomic_t *v)
{
  #line 179 
  return arch_atomic_add_return(- i,v);
}

#line 182  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/atomic.h"
__inline static int arch_atomic_fetch_add(int i, atomic_t *v)
{
  #line 184 
  int __ret;
  #line 184 
  __ret = i;
  #line 184 
  switch (4UL) {
    #line 184 
    case (unsigned long)1: 
                           #line 184 
    ;
    #line 185 
    ldv_inline_asm();
    #line 184 
    break;
    #line 184 
    case (unsigned long)2: 
                           #line 184 
    ;
    #line 185 
    ldv_inline_asm();
    #line 184 
    break;
    #line 184 
    case (unsigned long)4: 
                           #line 184 
    ;
    #line 185 
    ldv_inline_asm();
    #line 184 
    break;
    #line 184 
    case (unsigned long)8: 
                           #line 184 
    ;
    #line 185 
    ldv_inline_asm();
    #line 184 
    break;
    #line 184 
    default: 
             #line 184 
    ;
    #line 184 
    __xadd_wrong_size();
  }
  #line 184 
  return __ret;
}

#line 187  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/atomic.h"
__inline static int arch_atomic_fetch_sub(int i, atomic_t *v)
{
  #line 189 
  int __ret;
  #line 189 
  __ret = - i;
  #line 189 
  switch (4UL) {
    #line 189 
    case (unsigned long)1: 
                           #line 189 
    ;
    #line 190 
    ldv_inline_asm();
    #line 189 
    break;
    #line 189 
    case (unsigned long)2: 
                           #line 189 
    ;
    #line 190 
    ldv_inline_asm();
    #line 189 
    break;
    #line 189 
    case (unsigned long)4: 
                           #line 189 
    ;
    #line 190 
    ldv_inline_asm();
    #line 189 
    break;
    #line 189 
    case (unsigned long)8: 
                           #line 189 
    ;
    #line 190 
    ldv_inline_asm();
    #line 189 
    break;
    #line 189 
    default: 
             #line 189 
    ;
    #line 189 
    __xadd_wrong_size();
  }
  #line 189 
  return __ret;
}

#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/atomic-instrumented.h"
__inline static int atomic_read_0(atomic_t *v)
{
  #line 26 
  kasan_check_read((void *)v,4U);
  #line 27 
  return arch_atomic_read_0(v);
}

#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/atomic-instrumented.h"
__inline static void atomic_set_0(atomic_t *v, int i)
{
  #line 44 
  kasan_check_read((void *)v,4U);
  #line 45 
  arch_atomic_set_0(v,i);
  #line 46 
  return;
}

#line 60 
#line 162  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/tx.i.aux"
static void atomic_add(int i, atomic_t *v);
#line 109  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/atomic-instrumented.h"
__inline static int atomic_fetch_add(int i, atomic_t *v)
{
  #line 111 
  kasan_check_read((void *)v,4U);
  #line 112 
  return arch_atomic_fetch_add(i,v);
}

#line 157  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/atomic-instrumented.h"
__inline static int atomic_sub_return(int i, atomic_t *v)
{
  #line 159 
  kasan_check_read((void *)v,4U);
  #line 160 
  return arch_atomic_sub_return(i,v);
}

#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/atomic-instrumented.h"
__inline static int atomic_fetch_sub(int i, atomic_t *v)
{
  #line 199 
  kasan_check_read((void *)v,4U);
  #line 200 
  return arch_atomic_fetch_sub(i,v);
}

#line 237 
#line 183  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/tx.i.aux"
static void atomic_inc_0(atomic_t *v);
#line 327  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/atomic-instrumented.h"
#line 190  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/tx.i.aux"
static void atomic_dec_0(atomic_t *v);
#line 745  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/atomic-instrumented.h"
__inline static bool atomic_dec_and_test(atomic_t *v)
{
  #line 747 
  kasan_check_read((void *)v,4U);
  #line 748 
  return arch_atomic_dec_and_test(v);
}

#line 453  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/atomic-fallback.h"
__inline static int atomic_dec_return(atomic_t *v)
{
  #line 455 
  return atomic_sub_return(1,v);
}

#line 77  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/preempt.h"
__inline static void __preempt_count_add(int val)
{
  #line 79 
  int tmp;
  #line 79 
  if (0 != 0 && (val == 1 || val == -1)) 
                                         #line 79 
                                         tmp = val; else 
                                                         #line 79 
                                                         tmp = 0;
  #line 79 
  int pao_ID__ = tmp;
  #line 79 
  switch (4UL) {
    #line 79 
    case (unsigned long)1: 
                           #line 79 
    ;
    #line 79 
    if (pao_ID__ == 1) 
                       #line 81 
                       ldv_inline_asm();
    else 
      #line 79 
      if (pao_ID__ == -1) 
                          #line 81 
                          ldv_inline_asm(); else 
                                                 #line 84 
                                                 ldv_inline_asm();
    #line 79 
    break;
    #line 79 
    case (unsigned long)2: 
                           #line 79 
    ;
    #line 79 
    if (pao_ID__ == 1) 
                       #line 81 
                       ldv_inline_asm();
    else 
      #line 79 
      if (pao_ID__ == -1) 
                          #line 81 
                          ldv_inline_asm(); else 
                                                 #line 84 
                                                 ldv_inline_asm();
    #line 79 
    break;
    #line 79 
    case (unsigned long)4: 
                           #line 79 
    ;
    #line 79 
    if (pao_ID__ == 1) 
                       #line 81 
                       ldv_inline_asm();
    else 
      #line 79 
      if (pao_ID__ == -1) 
                          #line 81 
                          ldv_inline_asm(); else 
                                                 #line 84 
                                                 ldv_inline_asm();
    #line 79 
    break;
    #line 79 
    case (unsigned long)8: 
                           #line 79 
    ;
    #line 79 
    if (pao_ID__ == 1) 
                       #line 81 
                       ldv_inline_asm();
    else 
      #line 79 
      if (pao_ID__ == -1) 
                          #line 81 
                          ldv_inline_asm(); else 
                                                 #line 84 
                                                 ldv_inline_asm();
    #line 79 
    break;
    #line 79 
    default: 
             #line 79 
    ;
    #line 79 
    __bad_percpu_size();
  }
  #line 82 
  return;
}

#line 82  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/preempt.h"
__inline static void __preempt_count_sub(int val)
{
  #line 84 
  int tmp;
  #line 84 
  if (0 != 0 && (val == -1 || val == 1)) 
                                         #line 84 
                                         tmp = - val; else 
                                                           #line 84 
                                                           tmp = 0;
  #line 84 
  int pao_ID__ = tmp;
  #line 84 
  switch (4UL) {
    #line 84 
    case (unsigned long)1: 
                           #line 84 
    ;
    #line 84 
    if (pao_ID__ == 1) 
                       #line 86 
                       ldv_inline_asm();
    else 
      #line 84 
      if (pao_ID__ == -1) 
                          #line 86 
                          ldv_inline_asm(); else 
                                                 #line 89 
                                                 ldv_inline_asm();
    #line 84 
    break;
    #line 84 
    case (unsigned long)2: 
                           #line 84 
    ;
    #line 84 
    if (pao_ID__ == 1) 
                       #line 86 
                       ldv_inline_asm();
    else 
      #line 84 
      if (pao_ID__ == -1) 
                          #line 86 
                          ldv_inline_asm(); else 
                                                 #line 89 
                                                 ldv_inline_asm();
    #line 84 
    break;
    #line 84 
    case (unsigned long)4: 
                           #line 84 
    ;
    #line 84 
    if (pao_ID__ == 1) 
                       #line 86 
                       ldv_inline_asm();
    else 
      #line 84 
      if (pao_ID__ == -1) 
                          #line 86 
                          ldv_inline_asm(); else 
                                                 #line 89 
                                                 ldv_inline_asm();
    #line 84 
    break;
    #line 84 
    case (unsigned long)8: 
                           #line 84 
    ;
    #line 84 
    if (pao_ID__ == 1) 
                       #line 86 
                       ldv_inline_asm();
    else 
      #line 84 
      if (pao_ID__ == -1) 
                          #line 86 
                          ldv_inline_asm(); else 
                                                 #line 89 
                                                 ldv_inline_asm();
    #line 84 
    break;
    #line 84 
    default: 
             #line 84 
    ;
    #line 84 
    __bad_percpu_size();
  }
  #line 87 
  return;
}

#line 348  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockdep.h"
#line 348 
void lock_acquire(struct lockdep_map *, unsigned int, int, int, int, struct lockdep_map *, unsigned long);
#line 352 
#line 352 
void lock_release(struct lockdep_map *, unsigned long);
#line 658 
#line 658 
void lockdep_rcu_suspicious(char *, int, char *);
#line 341  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
static void spin_lock_bh_0(spinlock_t *lock)
{
  #line 343 
  _raw_spin_lock_bh(& lock->__anonCompField_spinlock_25.rlock);
  #line 344 
  return;
}

#line 345 
#line 700  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/tx.i.aux"
static void cif_spin_lock_bh_NOT_ARG_SIGN(spinlock_t *lock);
#line 345  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
#line 809  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/tx.i.aux"
static void cif_spin_lock_bh_tx_stats_lock_of_ar9170(spinlock_t *lock);
#line 345  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
#line 827  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/tx.i.aux"
static void cif_spin_lock_bh_mem_lock_of_ar9170(spinlock_t *lock);
#line 345  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
#line 845  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/tx.i.aux"
static void cif_spin_lock_bh_lock_of_carl9170_sta_tid(spinlock_t *lock);
#line 345  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
#line 871  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/tx.i.aux"
static void cif_spin_lock_bh_lock_of_sk_buff_head(spinlock_t *lock);
#line 345  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
#line 889  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/tx.i.aux"
static void cif_spin_lock_bh_beacon_lock_of_ar9170(spinlock_t *lock);
#line 381  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
static void spin_unlock_bh_0(spinlock_t *lock)
{
  #line 383 
  _raw_spin_unlock_bh(& lock->__anonCompField_spinlock_25.rlock);
  #line 384 
  return;
}

#line 385 
#line 709  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/tx.i.aux"
static void cif_spin_unlock_bh_NOT_ARG_SIGN(spinlock_t *lock);
#line 385  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
#line 818  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/tx.i.aux"
static void cif_spin_unlock_bh_tx_stats_lock_of_ar9170(spinlock_t *lock);
#line 385  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
#line 836  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/tx.i.aux"
static void cif_spin_unlock_bh_mem_lock_of_ar9170(spinlock_t *lock);
#line 385  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
#line 854  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/tx.i.aux"
static void cif_spin_unlock_bh_lock_of_carl9170_sta_tid(spinlock_t *lock);
#line 385  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
#line 880  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/tx.i.aux"
static void cif_spin_unlock_bh_lock_of_sk_buff_head(spinlock_t *lock);
#line 385  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
#line 898  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/tx.i.aux"
static void cif_spin_unlock_bh_beacon_lock_of_ar9170(spinlock_t *lock);
#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/find_bit.h"
#line 21 
unsigned long ldv_find_first_bit(unsigned long *addr, unsigned long size);
#line 57  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rcupdate.h"
__inline static void __rcu_read_lock(void)
{
  #line 59 
  __preempt_count_add(1);
  #line 60 
  ldv_inline_asm();
  #line 62 
  return;
}

#line 62  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rcupdate.h"
__inline static void __rcu_read_unlock(void)
{
  #line 66 
  ldv_inline_asm();
  #line 64 
  __preempt_count_sub(1);
  #line 66 
  return;
}

#line 36  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rcutree.h"
#line 36 
void kfree_call_rcu(struct callback_head *, void (*)(struct callback_head *));
#line 56 
#line 56 
bool rcu_is_watching(void);
#line 206  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rcupdate.h"
__inline static void rcu_lock_acquire(struct lockdep_map *map)
{
  #line 208 
  __here_0: 
            #line 208 
  ;
  #line 208 
  ;
  #line 208 
  lock_acquire(map,0U,0,2,0,(struct lockdep_map *)0,(unsigned long)((void *)0));
  #line 210 
  return;
}

#line 211  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rcupdate.h"
__inline static void rcu_lock_release(struct lockdep_map *map)
{
  #line 213 
  __here_0: 
            #line 213 
  ;
  #line 213 
  ;
  #line 213 
  lock_release(map,(unsigned long)((void *)0));
  #line 215 
  return;
}

#line 216 
#line 216 
extern struct lockdep_map rcu_lock_map;
#line 220 
#line 220 
int debug_lockdep_rcu_enabled(void);
#line 221 
#line 221 
int rcu_read_lock_held(void);
#line 224 
#line 224 
int rcu_read_lock_any_held(void);
#line 613  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rcupdate.h"
__inline static void rcu_read_lock(void)
{
  #line 615 
  __rcu_read_lock();
  #line 617 
  rcu_lock_acquire(& rcu_lock_map);
  {
    #line 618 
    bool __warned;
    #line 618 
    if (debug_lockdep_rcu_enabled() != 0) 
      #line 618 
      if (! __warned) {
        #line 618 
        if (! rcu_is_watching()) {
          #line 618 
          __warned = (_Bool)1;
          #line 618 
          lockdep_rcu_suspicious((char *)"./include/linux/rcupdate.h",618,(char *)"rcu_read_lock() used illegally while idle");
        }
      }
  }
  #line 621 
  return;
}

#line 665  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rcupdate.h"
__inline static void rcu_read_unlock(void)
{
  {
    #line 667 
    bool __warned;
    #line 667 
    if (debug_lockdep_rcu_enabled() != 0) 
      #line 667 
      if (! __warned) {
        #line 667 
        if (! rcu_is_watching()) {
          #line 667 
          __warned = (_Bool)1;
          #line 667 
          lockdep_rcu_suspicious((char *)"./include/linux/rcupdate.h",667,(char *)"rcu_read_unlock() used illegally while idle");
        }
      }
  }
  #line 670 
  __rcu_read_unlock();
  #line 671 
  rcu_lock_release(& rcu_lock_map);
  #line 672 
  return;
}

#line 81  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jiffies.h"
#line 81 
extern unsigned long jiffies;
#line 302 
#line 302 
unsigned long __msecs_to_jiffies(unsigned int);
#line 309  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jiffies.h"
__inline static unsigned long _msecs_to_jiffies(unsigned int m)
{
  #line 311 
  return (unsigned long)(((long)m + 3L) / 4L);
}

#line 364  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jiffies.h"
__inline static unsigned long msecs_to_jiffies(unsigned int m)
{
  #line 366 
  if (0 != 0) {
    #line 367 
    if ((int)m < 0) 
                    #line 368 
                    return 4611686018427387902UL;
    #line 369 
    return _msecs_to_jiffies(m);
  }
  else {
    #line 371 
    return __msecs_to_jiffies(m);
  }
}

#line 67  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rculist.h"
__inline static void __list_add_rcu(struct list_head *new, struct list_head *prev, struct list_head *next)
{
  #line 70 
  if (! __list_add_valid(new,prev,next)) 
                                         #line 71 
                                         return;
  #line 73 
  new->next = next;
  #line 74 
  new->prev = prev;
  {
    #line 75 
    uintptr_t _r_a_p__v = (unsigned long)new;
    #line 77 
    ldv_inline_asm();
    {
      #line 76 
      union __anonunion___u_1288 __u = {.__val = (struct list_head *)_r_a_p__v};
      #line 75 
      __write_once_size((void *)(& prev->next),(void *)(& __u.__c),8);
      #line 75 
      struct list_head *tmp_4 = __u.__val;
    }
  }
  #line 76 
  next->prev = new;
  #line 77 
  return;
}

#line 116  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rculist.h"
__inline static void list_add_tail_rcu(struct list_head *new, struct list_head *head)
{
  #line 119 
  __list_add_rcu(new,head->prev,head);
  #line 120 
  return;
}

#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rculist.h"
__inline static void list_del_rcu(struct list_head *entry)
{
  #line 148 
  __list_del_entry(entry);
  #line 149 
  entry->prev = (struct list_head *)(-2401263026318606046);
  #line 150 
  return;
}

#line 114  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/refcount.h"
#line 114 
void refcount_warn_saturate(refcount_t *, enum refcount_saturation_type);
#line 121  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/refcount.h"
__inline static void refcount_set(refcount_t *r, int n)
{
  #line 123 
  atomic_set_0(& r->refs,n);
  #line 124 
  return;
}

#line 186  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/refcount.h"
__inline static void refcount_add(int i, refcount_t *r)
{
  #line 188 
  int old = atomic_fetch_add(i,& r->refs);
  #line 190 
  if ((long)(old == 0) != 0L) 
                              #line 191 
                              refcount_warn_saturate(r,(enum refcount_saturation_type)REFCOUNT_ADD_UAF);
  else 
    #line 192 
    if ((long)(old < 0) != 0L || (long)(old + i < 0) != 0L) 
                                                            #line 193 
                                                            refcount_warn_saturate(r,(enum refcount_saturation_type)REFCOUNT_ADD_OVF);
  #line 194 
  return;
}

#line 226  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/refcount.h"
__inline static void refcount_inc(refcount_t *r)
{
  #line 228 
  refcount_add(1,r);
  #line 229 
  return;
}

#line 251  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/refcount.h"
__inline static bool refcount_sub_and_test(int i, refcount_t *r)
{
  #line 253 
  int old = atomic_fetch_sub(i,& r->refs);
  #line 255 
  if (old == i) {
    #line 257 
    ldv_inline_asm();
    #line 257 
    return (_Bool)1;
  }
  #line 260 
  if ((long)(old < 0) != 0L || (long)(old - i < 0) != 0L) 
                                                          #line 261 
                                                          refcount_warn_saturate(r,(enum refcount_saturation_type)REFCOUNT_SUB_UAF);
  #line 263 
  return (_Bool)0;
}

#line 279  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/refcount.h"
__inline static bool refcount_dec_and_test(refcount_t *r)
{
  #line 281 
  return refcount_sub_and_test(1,r);
}

#line 542  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/slab.h"
#line 322  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/tx.i.aux"
static void *kmalloc_0(size_t size, gfp_t flags);
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kref.h"
__inline static void kref_init(struct kref *kref)
{
  #line 31 
  refcount_set(& kref->refcount,1);
  #line 32 
  return;
}

#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kref.h"
__inline static void kref_get(struct kref *kref)
{
  #line 45 
  refcount_inc(& kref->refcount);
  #line 46 
  return;
}

#line 62  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kref.h"
__inline static int kref_put(struct kref *kref, void (*release)(struct kref *))
{
  #line 64 
  if ((int)refcount_dec_and_test(& kref->refcount) != 0) {
    #line 65 
    (*release)(kref);
    #line 66 
    return 1;
  }
  #line 68 
  return 0;
}

#line 1493  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static int skb_queue_empty(struct sk_buff_head *list)
{
  #line 1495 
  return list->next == (struct sk_buff *)list;
}

#line 1744  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static struct sk_buff *skb_peek(struct sk_buff_head *list_)
{
  #line 1746 
  struct sk_buff *skb = list_->next;
  #line 1748 
  if (skb == (struct sk_buff *)list_) 
                                      #line 1749 
                                      skb = (struct sk_buff *)0;
  #line 1750 
  return skb;
}

#line 1796  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static struct sk_buff *skb_peek_tail(struct sk_buff_head *list_)
{
  #line 1799 
  union __anonunion___u_1559 __u;
  #line 1798 
  __read_once_size((void *)(& list_->prev),(void *)(& __u.__c),8);
  #line 1798 
  struct sk_buff *skb = (__u.__val);
  #line 1800 
  if (skb == (struct sk_buff *)list_) 
                                      #line 1801 
                                      skb = (struct sk_buff *)0;
  #line 1802 
  return skb;
}

#line 1812  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static __u32 skb_queue_len(struct sk_buff_head *list_)
{
  #line 1814 
  return list_->qlen;
}

#line 1827  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static void __skb_queue_head_init(struct sk_buff_head *list)
{
  #line 1829 
  list->next = ((struct sk_buff *)list);
  #line 1829 
  list->prev = ((struct sk_buff *)list);
  #line 1830 
  list->qlen = 0U;
  #line 1831 
  return;
}

#line 1860  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static void __skb_insert(struct sk_buff *newsk, struct sk_buff *prev, struct sk_buff *next, struct sk_buff_head *list)
{
  {
    #line 1868 
    union __anonunion___u_1561 __u = {.__val = next};
    #line 1867 
    __write_once_size((void *)(& newsk->__anonCompField_sk_buff_90.__anonCompField___anonunion_502_89.next),(void *)(& __u.__c),8);
    #line 1867 
    struct sk_buff *tmp = __u.__val;
  }
  {
    #line 1869 
    union __anonunion___u_1563 __u_0 = {.__val = prev};
    #line 1868 
    __write_once_size((void *)(& newsk->__anonCompField_sk_buff_90.__anonCompField___anonunion_502_89.prev),(void *)(& __u_0.__c),8);
    #line 1868 
    struct sk_buff *tmp_3 = __u_0.__val;
  }
  {
    #line 1870 
    union __anonunion___u_1565 __u_1 = {.__val = newsk};
    #line 1869 
    __write_once_size((void *)(& next->__anonCompField_sk_buff_90.__anonCompField___anonunion_502_89.prev),(void *)(& __u_1.__c),8);
    #line 1869 
    struct sk_buff *tmp_5 = __u_1.__val;
  }
  {
    #line 1871 
    union __anonunion___u_1567 __u_2 = {.__val = newsk};
    #line 1870 
    __write_once_size((void *)(& prev->__anonCompField_sk_buff_90.__anonCompField___anonunion_502_89.next),(void *)(& __u_2.__c),8);
    #line 1870 
    struct sk_buff *tmp_7 = __u_2.__val;
  }
  #line 1871 
  (list->qlen) ++;
  #line 1872 
  return;
}

#line 1874  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static void __skb_queue_splice(struct sk_buff_head *list, struct sk_buff *prev, struct sk_buff *next)
{
  #line 1878 
  struct sk_buff *first = list->next;
  #line 1879 
  struct sk_buff *last = list->prev;
  {
    #line 1882 
    union __anonunion___u_1569 __u = {.__val = prev};
    #line 1881 
    __write_once_size((void *)(& first->__anonCompField_sk_buff_90.__anonCompField___anonunion_502_89.prev),(void *)(& __u.__c),8);
    #line 1881 
    struct sk_buff *tmp = __u.__val;
  }
  {
    #line 1883 
    union __anonunion___u_1571 __u_0 = {.__val = first};
    #line 1882 
    __write_once_size((void *)(& prev->__anonCompField_sk_buff_90.__anonCompField___anonunion_502_89.next),(void *)(& __u_0.__c),8);
    #line 1882 
    struct sk_buff *tmp_3 = __u_0.__val;
  }
  {
    #line 1885 
    union __anonunion___u_1573 __u_1 = {.__val = next};
    #line 1884 
    __write_once_size((void *)(& last->__anonCompField_sk_buff_90.__anonCompField___anonunion_502_89.next),(void *)(& __u_1.__c),8);
    #line 1884 
    struct sk_buff *tmp_5 = __u_1.__val;
  }
  {
    #line 1886 
    union __anonunion___u_1575 __u_2 = {.__val = last};
    #line 1885 
    __write_once_size((void *)(& next->__anonCompField_sk_buff_90.__anonCompField___anonunion_502_89.prev),(void *)(& __u_2.__c),8);
    #line 1885 
    struct sk_buff *tmp_7 = __u_2.__val;
  }
  #line 1887 
  return;
}

#line 1941  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static void skb_queue_splice_tail_init(struct sk_buff_head *list, struct sk_buff_head *head)
{
  #line 1944 
  if (skb_queue_empty(list) == 0) {
    #line 1945 
    __skb_queue_splice(list,head->prev,(struct sk_buff *)head);
    #line 1946 
    head->qlen += list->qlen;
    #line 1947 
    __skb_queue_head_init(list);
  }
  #line 1949 
  return;
}

#line 1962  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static void __skb_queue_after(struct sk_buff_head *list, struct sk_buff *prev, struct sk_buff *newsk)
{
  #line 1966 
  __skb_insert(newsk,prev,prev->__anonCompField_sk_buff_90.__anonCompField___anonunion_502_89.next,list);
  #line 1967 
  return;
}

#line 1972  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static void __skb_queue_before(struct sk_buff_head *list, struct sk_buff *next, struct sk_buff *newsk)
{
  #line 1976 
  __skb_insert(newsk,next->__anonCompField_sk_buff_90.__anonCompField___anonunion_502_89.prev,next,list);
  #line 1977 
  return;
}

#line 1989  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static void __skb_queue_head(struct sk_buff_head *list, struct sk_buff *newsk)
{
  #line 1992 
  __skb_queue_after(list,(struct sk_buff *)list,newsk);
  #line 1993 
  return;
}

#line 2006  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static void __skb_queue_tail(struct sk_buff_head *list, struct sk_buff *newsk)
{
  #line 2009 
  __skb_queue_before(list,(struct sk_buff *)list,newsk);
  #line 2010 
  return;
}

#line 2011 
#line 2011 
void skb_queue_tail(struct sk_buff_head *, struct sk_buff *);
#line 2018  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static void __skb_unlink(struct sk_buff *skb, struct sk_buff_head *list)
{
  #line 2020 
  struct sk_buff *next;
  #line 2020 
  struct sk_buff *prev;
  #line 2022 
  (list->qlen) --;
  #line 2023 
  next = skb->__anonCompField_sk_buff_90.__anonCompField___anonunion_502_89.next;
  #line 2024 
  prev = skb->__anonCompField_sk_buff_90.__anonCompField___anonunion_502_89.prev;
  #line 2025 
  skb->__anonCompField_sk_buff_90.__anonCompField___anonunion_502_89.prev = ((struct sk_buff *)0);
  #line 2025 
  skb->__anonCompField_sk_buff_90.__anonCompField___anonunion_502_89.next = ((struct sk_buff *)0);
  {
    #line 2027 
    union __anonunion___u_1577 __u = {.__val = prev};
    #line 2026 
    __write_once_size((void *)(& next->__anonCompField_sk_buff_90.__anonCompField___anonunion_502_89.prev),(void *)(& __u.__c),8);
    #line 2026 
    struct sk_buff *tmp_2 = __u.__val;
  }
  {
    #line 2028 
    union __anonunion___u_1579 __u_0 = {.__val = next};
    #line 2027 
    __write_once_size((void *)(& prev->__anonCompField_sk_buff_90.__anonCompField___anonunion_502_89.next),(void *)(& __u_0.__c),8);
    #line 2027 
    struct sk_buff *tmp_4 = __u_0.__val;
  }
  #line 2029 
  return;
}

#line 2245 
#line 2245 
void *skb_push(struct sk_buff *, unsigned int);
#line 2253 
#line 2253 
void *skb_pull(struct sk_buff *, unsigned int);
#line 4277  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static u16 skb_get_queue_mapping(struct sk_buff *skb)
{
  #line 4279 
  return skb->queue_mapping;
}

#line 663  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/interrupt.h"
#line 863  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/tx.i.aux"
static void cif_tasklet_hi_schedule_0(struct tasklet_struct *t);
#line 3617  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
#line 3617 
void __dev_kfree_skb_any(struct sk_buff *, enum skb_free_reason);
#line 3648  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
__inline static void dev_kfree_skb_any(struct sk_buff *skb)
{
  #line 3650 
  __dev_kfree_skb_any(skb,(enum skb_free_reason)SKB_REASON_DROPPED);
  #line 3651 
  return;
}

#line 284  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
__inline static bool ieee80211_has_a4(__le16 fc)
{
  #line 286 
  __le16 tmp = (unsigned short)768U;
  #line 287 
  return (_Bool)(((int)fc & (int)tmp) == (int)tmp);
}

#line 456  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
__inline static bool ieee80211_is_probe_resp(__le16 fc)
{
  #line 458 
  return (_Bool)(((int)fc & 252) == 80);
}

#line 526  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
__inline static bool ieee80211_is_back_req(__le16 fc)
{
  #line 528 
  return (_Bool)(((int)fc & 252) == 132);
}

#line 3100  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
__inline static u8 *ieee80211_get_qos_ctl(struct ieee80211_hdr *hdr)
{
  #line 3102 
  if ((int)ieee80211_has_a4((unsigned short)((int)hdr->frame_control)) != 0) 
    #line 3103 
    return (u8 *)hdr + 30U; else 
                                 #line 3105 
                                 return (u8 *)hdr + 24U;
}

#line 1114  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
__inline static struct ieee80211_tx_info *IEEE80211_SKB_CB(struct sk_buff *skb)
{
  #line 1116 
  return (struct ieee80211_tx_info *)(& skb->cb);
}

#line 2650 
#line 2650 
void ieee80211_free_txskb(struct ieee80211_hw *, struct sk_buff *);
#line 4527 
#line 4527 
void ieee80211_get_tx_rates(struct ieee80211_vif *, struct ieee80211_sta *, struct sk_buff *, struct ieee80211_tx_rate *, int);
#line 4660 
#line 4660 
void ieee80211_tx_status_irqsafe(struct ieee80211_hw *, struct sk_buff *);
#line 4737 
#line 4737 
struct sk_buff *ieee80211_beacon_get_tim(struct ieee80211_hw *, struct ieee80211_vif *, u16 *, u16 *);
#line 5170 
#line 5170 
void ieee80211_wake_queue(struct ieee80211_hw *, int);
#line 5179 
#line 5179 
void ieee80211_stop_queue(struct ieee80211_hw *, int);
#line 5191 
#line 5191 
int ieee80211_queue_stopped(struct ieee80211_hw *, int);
#line 5383 
#line 5383 
void ieee80211_queue_delayed_work(struct ieee80211_hw *, struct delayed_work *, unsigned long);
#line 5426 
#line 5426 
int ieee80211_stop_tx_ba_session(struct ieee80211_sta *, u16);
#line 5452 
#line 5452 
struct ieee80211_sta *ieee80211_find_sta(struct ieee80211_vif *, u8 *);
#line 5510 
#line 5510 
void ieee80211_sta_block_awake(struct ieee80211_hw *, struct ieee80211_sta *, bool);
#line 71  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/carl9170.h"
static u8 ar9170_qmap[4U] = {(unsigned char)3U, (unsigned char)2U, (unsigned char)1U};
#line 575 
#line 1470  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/tx.c"
void carl9170_op_tx(struct ieee80211_hw *hw, struct ieee80211_tx_control *control, struct sk_buff *skb);
#line 578  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/carl9170.h"
#line 639  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/tx.c"
void carl9170_tx_janitor(struct work_struct *work);
#line 579  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/carl9170.h"
#line 689  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/tx.c"
void carl9170_tx_process_status(struct ar9170 *ar, struct carl9170_rsp *cmd);
#line 581  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/carl9170.h"
#line 476  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/tx.c"
void carl9170_tx_status(struct ar9170 *ar, struct sk_buff *skb, bool success);
#line 586  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/carl9170.h"
#line 330  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/tx.c"
void carl9170_tx_get_skb(struct sk_buff *skb);
#line 587  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/carl9170.h"
#line 337  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/tx.c"
int carl9170_tx_put_skb(struct sk_buff *skb);
#line 588  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/carl9170.h"
#line 1611  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/tx.c"
int carl9170_update_beacon(struct ar9170 *ar, bool submit);
#line 606  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/carl9170.h"
#line 64  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/main.c"
struct ieee80211_rate __carl9170_ratetable[12U];
#line 607  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/carl9170.h"
#line 54  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/main.c"
int modparam_noht;
#line 615  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/carl9170.h"
__inline static struct ieee80211_hdr *carl9170_get_hdr(struct sk_buff *skb)
{
  #line 617 
  return (struct ieee80211_hdr *)(& ((struct _carl9170_tx_superframe *)skb->data)->frame_data);
}

#line 621  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/carl9170.h"
__inline static u16 get_seq_h(struct ieee80211_hdr *hdr)
{
  #line 623 
  return (unsigned short)((int)hdr->seq_ctrl >> 4);
}

#line 626  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/carl9170.h"
__inline static u16 carl9170_get_seq(struct sk_buff *skb)
{
  #line 628 
  return get_seq_h(carl9170_get_hdr(skb));
}

#line 631  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/carl9170.h"
__inline static u16 get_tid_h(struct ieee80211_hdr *hdr)
{
  #line 633 
  ;
  #line 633 
  return (unsigned short)((unsigned int)((unsigned short)*ieee80211_get_qos_ctl(hdr)) & 15U);
}

#line 636  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/carl9170.h"
__inline static u16 carl9170_get_tid(struct sk_buff *skb)
{
  #line 638 
  return get_tid_h(carl9170_get_hdr(skb));
}

#line 642  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/carl9170.h"
__inline static struct ieee80211_vif *carl9170_get_vif(struct carl9170_vif_info *priv)
{
  #line 644 
  void *__mptr;
  #line 644 
  __mptr = (void *)priv;
  #line 644 
  return ((struct ieee80211_vif *)(__mptr + 18446744073709551216U));
}

#line 54  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/cmd.h"
#line 54 
int carl9170_bcn_ctrl(struct ar9170 *ar, unsigned int vif_id, u32 mode, u32 addr, u32 len);
#line 73 
#line 73 
struct carl9170_cmd *carl9170_cmd_buf(struct ar9170 *ar, enum carl9170_cmd_oids cmd, unsigned int len);
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/tx.c"
__inline static unsigned int __carl9170_get_queue(struct ar9170 *ar, unsigned int queue)
{
  #line 51 
  if ((long)(modparam_noht != 0) != 0L) 
                                        #line 52 
                                        return queue; else 
                                                           #line 60 
                                                           return 2U;
}

#line 64  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/tx.c"
__inline static unsigned int carl9170_get_queue(struct ar9170 *ar, struct sk_buff *skb)
{
  #line 67 
  ;
  #line 67 
  return __carl9170_get_queue(ar,(unsigned int)skb_get_queue_mapping(skb));
}

#line 70  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/tx.c"
static bool is_mem_full(struct ar9170 *ar)
{
  #line 72 
  ;
  #line 72 
  return (_Bool)((ar->fw.mem_block_size + 2351U) / ar->fw.mem_block_size > (unsigned int)atomic_read_0(& ar->mem_free_blocks));
}

#line 76  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/tx.c"
static void carl9170_tx_accounting(struct ar9170 *ar, struct sk_buff *skb)
{
  #line 78 
  int queue;
  #line 78 
  int i;
  #line 79 
  bool mem_full;
  #line 81 
  atomic_inc_0(& ar->tx_total_queued);
  #line 83 
  queue = (int)skb_get_queue_mapping(skb);
  #line 84 
  cif_spin_lock_bh_tx_stats_lock_of_ar9170(& ar->tx_stats_lock);
  #line 92 
  (ar->tx_stats[queue].len) ++;
  #line 93 
  (ar->tx_stats[queue].count) ++;
  #line 95 
  mem_full = is_mem_full(ar);
  #line 96 
  i = 0;
  #line 96 
  while ((int)(ar->hw)->queues > i) {
    #line 97 
    if ((int)mem_full != 0 || ar->tx_stats[i].len >= ar->tx_stats[i].limit) {
      #line 98 
      ieee80211_stop_queue(ar->hw,i);
      #line 99 
      ar->queue_stop_timeout[i] = jiffies;
    }
    #line 96 
    i ++;
  }
  #line 103 
  cif_spin_unlock_bh_tx_stats_lock_of_ar9170(& ar->tx_stats_lock);
  #line 104 
  return;
}

#line 107  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/tx.c"
static struct ieee80211_sta *__carl9170_get_tx_sta(struct ar9170 *ar, struct sk_buff *skb)
{
  #line 118 
  int __ret_warn_on;
  #line 121 
  struct ieee80211_vif *________p1;
  #line 112 
  struct ieee80211_vif *vif;
  #line 113 
  unsigned int vif_id;
  #line 110 
  struct _carl9170_tx_superframe *super = (struct _carl9170_tx_superframe *)skb->data;
  #line 111 
  struct ieee80211_hdr *hdr = (struct ieee80211_hdr *)(& super->frame_data);
  #line 115 
  vif_id = (unsigned int)((int)super->s.misc >> 3) & 7U;
  #line 118 
  __ret_warn_on = vif_id > 6U;
  #line 118 
  if ((long)(__ret_warn_on != 0) != 0L) {
    #line 119 
    ldv_inline_asm();
    #line 120 
    ldv_inline_asm();
  }
  #line 118 
  if ((long)((long)(__ret_warn_on != 0)) != 0L) 
                                                #line 119 
                                                return (struct ieee80211_sta *)0;
  {
    #line 122 
    union __anonunion___u_2092 __u;
    #line 121 
    __read_once_size((void *)(& ar->vif_priv[vif_id].vif),(void *)(& __u.__c),8);
    #line 121 
    ________p1 = (__u.__val);
    {
      #line 121 
      bool __warned;
      #line 121 
      if (debug_lockdep_rcu_enabled() != 0) 
        #line 121 
        if (! __warned) {
          #line 121 
          if (rcu_read_lock_held() == 0) {
            #line 121 
            __warned = (_Bool)1;
            #line 121 
            lockdep_rcu_suspicious((char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/tx.c",121,(char *)"suspicious rcu_dereference_check() usage");
          }
        }
    }
    }
  #line 121 
  vif = ________p1;
  #line 122 
  if ((long)(vif == (struct ieee80211_vif *)0) != 0L) 
                                                      #line 123 
                                                      return (struct ieee80211_sta *)0;
  #line 135 
  return ieee80211_find_sta(vif,(u8 *)(& hdr->addr1));
}

#line 138  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/tx.c"
static void carl9170_tx_ps_unblock(struct ar9170 *ar, struct sk_buff *skb)
{
  #line 140 
  struct ieee80211_sta *sta;
  #line 141 
  struct carl9170_sta_info *sta_info;
  #line 143 
  rcu_read_lock();
  #line 144 
  sta = __carl9170_get_tx_sta(ar,skb);
  #line 145 
  if ((long)(sta == (struct ieee80211_sta *)0) != 0L) 
                                                      #line 146 
                                                      goto out_rcu;
  #line 148 
  sta_info = (struct carl9170_sta_info *)(& sta->drv_priv);
  #line 149 
  if (atomic_dec_return(& sta_info->pending_frames) == 0) 
                                                          #line 150 
                                                          ieee80211_sta_block_awake(ar->hw,sta,(_Bool)0);
  #line 152 
  out_rcu: 
           #line 152 
  ;
  #line 153 
  rcu_read_unlock();
  #line 154 
  return;
}

#line 156  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/tx.c"
static void carl9170_tx_accounting_free(struct ar9170 *ar, struct sk_buff *skb)
{
  #line 158 
  int queue;
  #line 160 
  queue = (int)skb_get_queue_mapping(skb);
  #line 162 
  cif_spin_lock_bh_tx_stats_lock_of_ar9170(& ar->tx_stats_lock);
  #line 164 
  (ar->tx_stats[queue].len) --;
  #line 166 
  if (! is_mem_full(ar)) {
    #line 167 
    unsigned int i;
    #line 168 
    i = 0U;
    #line 168 
    while ((unsigned int)(ar->hw)->queues > i) {
      {
        #line 169 
        if (ar->tx_stats[i].len > 31U) 
                                       #line 170 
                                       goto __Cont;
        #line 172 
        if (ieee80211_queue_stopped(ar->hw,(int)i) != 0) {
          #line 173 
          unsigned long tmp_0;
          #line 175 
          tmp_0 = jiffies - ar->queue_stop_timeout[i];
          #line 176 
          if (ar->max_queue_stop_timeout[i] < tmp_0) 
                                                     #line 177 
                                                     ar->max_queue_stop_timeout[i] = tmp_0;
        }
        #line 180 
        ieee80211_wake_queue(ar->hw,(int)i);
      }
      #line 168 
      __Cont: 
              #line 168 
      i ++;
    }
  }
  #line 184 
  cif_spin_unlock_bh_tx_stats_lock_of_ar9170(& ar->tx_stats_lock);
  #line 186 
  if ((int)atomic_dec_and_test(& ar->tx_total_queued) != 0) 
                                                            #line 187 
                                                            complete(& ar->tx_flush);
  #line 188 
  return;
}

#line 190  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/tx.c"
static int carl9170_alloc_dev_space(struct ar9170 *ar, struct sk_buff *skb)
{
  #line 193 
  unsigned int chunks;
  #line 192 
  struct _carl9170_tx_superframe *super = (struct _carl9170_tx_superframe *)skb->data;
  #line 194 
  int cookie = -1;
  #line 196 
  atomic_inc_0(& ar->mem_allocs);
  #line 198 
  chunks = ((skb->len + ar->fw.mem_block_size) + 4294967295U) / ar->fw.mem_block_size;
  #line 199 
  if ((long)(atomic_sub_return((int)chunks,& ar->mem_free_blocks) < 0) != 0L) {
    #line 200 
    atomic_add((int)chunks,& ar->mem_free_blocks);
    #line 201 
    return -28;
  }
  #line 204 
  cif_spin_lock_bh_mem_lock_of_ar9170(& ar->mem_lock);
  #line 205 
  cookie = bitmap_find_free_region(ar->mem_bitmap,ar->fw.mem_blocks,0);
  #line 206 
  cif_spin_unlock_bh_mem_lock_of_ar9170(& ar->mem_lock);
  #line 208 
  if ((long)(cookie < 0) != 0L) {
    #line 209 
    atomic_add((int)chunks,& ar->mem_free_blocks);
    #line 210 
    return -28;
  }
  #line 213 
  super = (struct _carl9170_tx_superframe *)skb->data;
  #line 222 
  super->s.cookie = (unsigned char)((unsigned int)((unsigned char)cookie) + 1U);
  #line 223 
  return 0;
}

#line 226  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/tx.c"
static void carl9170_release_dev_space(struct ar9170 *ar, struct sk_buff *skb)
{
  #line 249 
  int __ret_warn_on;
  #line 229 
  int cookie;
  #line 228 
  struct _carl9170_tx_superframe *super = (struct _carl9170_tx_superframe *)skb->data;
  #line 232 
  cookie = (int)super->s.cookie;
  #line 234 
  super->s.cookie = (unsigned char)0U;
  #line 249 
  __ret_warn_on = cookie == 0;
  #line 249 
  if ((long)(__ret_warn_on != 0) != 0L) {
    #line 250 
    ldv_inline_asm();
    #line 251 
    ldv_inline_asm();
  }
  #line 249 
  if ((long)((long)(__ret_warn_on != 0)) != 0L) 
                                                #line 251 
                                                return;
  else {
    #line 250 
    int __ret_warn_on_0;
    #line 250 
    __ret_warn_on_0 = ar->fw.mem_blocks < (unsigned int)cookie;
    #line 250 
    if ((long)(__ret_warn_on_0 != 0) != 0L) {
      #line 251 
      ldv_inline_asm();
      #line 252 
      ldv_inline_asm();
    }
    #line 249 
    if ((long)((long)(__ret_warn_on_0 != 0)) != 0L) 
                                                    #line 251 
                                                    return;
  }
  #line 253 
  atomic_add((int)(((skb->len + ar->fw.mem_block_size) + 4294967295U) / ar->fw.mem_block_size),& ar->mem_free_blocks);
  #line 256 
  cif_spin_lock_bh_mem_lock_of_ar9170(& ar->mem_lock);
  #line 257 
  bitmap_release_region(ar->mem_bitmap,(unsigned int)(cookie + -1),0);
  #line 258 
  cif_spin_unlock_bh_mem_lock_of_ar9170(& ar->mem_lock);
  #line 259 
  return;
}

#line 262  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/tx.c"
static void carl9170_tx_release(struct kref *ref)
{
  #line 272 
  void *__mptr_1;
  #line 275 
  int __ret_warn_on;
  #line 269 
  void *__mptr;
  #line 270 
  void *__mptr_0;
  #line 264 
  struct ar9170 *ar;
  #line 265 
  struct carl9170_tx_info *arinfo;
  #line 266 
  struct ieee80211_tx_info *txinfo;
  #line 267 
  struct sk_buff *skb;
  #line 269 
  __mptr = (void *)ref;
  #line 269 
  arinfo = ((struct carl9170_tx_info *)(__mptr + 18446744073709551600U));
  #line 270 
  __mptr_0 = (void *)arinfo;
  #line 270 
  txinfo = ((struct ieee80211_tx_info *)(__mptr_0 + 18446744073709551592U));
  #line 272 
  __mptr_1 = (void *)txinfo;
  #line 272 
  skb = ((struct sk_buff *)(__mptr_1 + 18446744073709551576U));
  #line 274 
  ar = arinfo->ar;
  #line 275 
  __ret_warn_on = ar == (struct ar9170 *)0;
  #line 275 
  if ((long)(__ret_warn_on != 0) != 0L) {
    #line 276 
    ldv_inline_asm();
    #line 277 
    ldv_inline_asm();
  }
  #line 275 
  if ((long)((long)(__ret_warn_on != 0)) != 0L) 
                                                #line 276 
                                                return;
  #line 281 
  memset((void *)(& txinfo->__anonCompField_ieee80211_tx_info_195.status.ack_signal),0,28UL);
  #line 285 
  if (atomic_read_0(& ar->tx_total_queued) != 0) 
                                                 #line 286 
                                                 ar->tx_schedule = (_Bool)1;
  #line 288 
  if ((txinfo->flags & 64U) != 0U) {
    #line 289 
    if (atomic_read_0(& ar->tx_ampdu_upload) == 0) 
                                                   #line 290 
                                                   ar->tx_ampdu_schedule = (_Bool)1;
    #line 292 
    if ((txinfo->flags & 1024U) != 0U) {
      #line 293 
      struct _carl9170_tx_superframe *super;
      #line 295 
      super = (struct _carl9170_tx_superframe *)skb->data;
      #line 296 
      txinfo->__anonCompField_ieee80211_tx_info_195.status.ampdu_len = super->s.rix;
      #line 297 
      txinfo->__anonCompField_ieee80211_tx_info_195.status.ampdu_ack_len = super->s.cnt;
    }
    else 
      #line 298 
      if ((txinfo->flags & 512U) != 0U && (txinfo->flags & 1U) == 0U) {
        #line 316 
        ieee80211_free_txskb(ar->hw,skb);
        #line 317 
        return;
      }
  }
  #line 326 
  skb_pull(skb,32U);
  #line 327 
  ieee80211_tx_status_irqsafe(ar->hw,skb);
  #line 328 
  return;
}

#line 330  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/tx.c"
void carl9170_tx_get_skb(struct sk_buff *skb)
{
  #line 332 
  struct carl9170_tx_info *arinfo = (struct carl9170_tx_info *)(& IEEE80211_SKB_CB(skb)->__anonCompField_ieee80211_tx_info_195.__anonCompField___anonunion_2051_194.rate_driver_data);
  #line 334 
  kref_get(& arinfo->ref);
  #line 335 
  return;
}

#line 337  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/tx.c"
int carl9170_tx_put_skb(struct sk_buff *skb)
{
  #line 339 
  struct carl9170_tx_info *arinfo = (struct carl9170_tx_info *)(& IEEE80211_SKB_CB(skb)->__anonCompField_ieee80211_tx_info_195.__anonCompField___anonunion_2051_194.rate_driver_data);
  #line 342 
  return kref_put(& arinfo->ref,& carl9170_tx_release);
}

#line 346  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/tx.c"
static void carl9170_tx_shift_bm(struct ar9170 *ar, struct carl9170_sta_tid *tid_info, u16 seq)
{
  #line 353 
  int __ret_warn_on;
  #line 365 
  int __ret_warn_on_1;
  #line 349 
  u16 off;
  #line 351 
  off = (unsigned short)((unsigned int)((int)seq - (int)tid_info->bsn) & 4095U);
  #line 353 
  __ret_warn_on = (unsigned int)off > 127U;
  #line 353 
  if ((long)(__ret_warn_on != 0) != 0L) {
    #line 354 
    ldv_inline_asm();
    #line 355 
    ldv_inline_asm();
  }
  #line 353 
  if ((long)((long)(__ret_warn_on != 0)) != 0L) 
                                                #line 354 
                                                return;
  {
    #line 362 
    int tmp_1;
    #line 362 
    if (test_and_set_bit((long)off,(unsigned long *)(& tid_info->bitmap))) 
      #line 362 
      tmp_1 = 0; else 
                      #line 362 
                      tmp_1 = 1;
    #line 362 
    int __ret_warn_on_0 = tmp_1;
    #line 362 
    if ((long)(__ret_warn_on_0 != 0) != 0L) {
      #line 363 
      ldv_inline_asm();
      #line 364 
      ldv_inline_asm();
    }
    #line 362 
    long tmp_2 = (long)(__ret_warn_on_0 != 0);
  }
  #line 364 
  off = (unsigned short)((unsigned int)((int)tid_info->snx - (int)tid_info->bsn) & 4095U);
  #line 365 
  __ret_warn_on_1 = (unsigned int)off > 127U;
  #line 365 
  if ((long)(__ret_warn_on_1 != 0) != 0L) {
    #line 366 
    ldv_inline_asm();
    #line 367 
    ldv_inline_asm();
  }
  #line 365 
  if ((long)((long)(__ret_warn_on_1 != 0)) != 0L) 
                                                  #line 366 
                                                  return;
  #line 368 
  if (bitmap_empty((unsigned long *)(& tid_info->bitmap),(unsigned int)off) == 0) {
    #line 369 
    off = (unsigned short)cif_find_first_bit((unsigned long *)(& tid_info->bitmap),
                           (unsigned long)off);
  }
  #line 371 
  tid_info->bsn = (unsigned short)((int)tid_info->bsn + (int)off);
  #line 372 
  tid_info->bsn = (unsigned short)((unsigned int)tid_info->bsn & 4095U);
  #line 374 
  bitmap_shift_right((unsigned long *)(& tid_info->bitmap),(unsigned long *)(& tid_info->bitmap),(unsigned int)off,128U);
  #line 375 
  return;
}

#line 378  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/tx.c"
static void carl9170_tx_status_process_ampdu(struct ar9170 *ar, struct sk_buff *skb, struct ieee80211_tx_info *txinfo)
{
  #line 400 
  struct carl9170_sta_tid *________p1;
  #line 383 
  struct ieee80211_sta *sta;
  #line 384 
  struct carl9170_sta_info *sta_info;
  #line 385 
  struct carl9170_sta_tid *tid_info;
  #line 386 
  u8 tid;
  #line 381 
  struct _carl9170_tx_superframe *super = (struct _carl9170_tx_superframe *)skb->data;
  #line 382 
  struct ieee80211_hdr *hdr = (struct ieee80211_hdr *)(& super->frame_data);
  #line 388 
  if ((txinfo->flags & 64U) == 0U || (txinfo->flags & 128U) != 0U) 
                                                                   #line 390 
                                                                   return;
  #line 392 
  rcu_read_lock();
  #line 393 
  sta = __carl9170_get_tx_sta(ar,skb);
  #line 394 
  if ((long)(sta == (struct ieee80211_sta *)0) != 0L) 
                                                      #line 395 
                                                      goto out_rcu;
  #line 397 
  tid = (unsigned char)get_tid_h(hdr);
  #line 399 
  sta_info = (struct carl9170_sta_info *)(& sta->drv_priv);
  {
    #line 401 
    union __anonunion___u_2094 __u;
    #line 400 
    __read_once_size((void *)(& sta_info->agg[(int)tid]),(void *)(& __u.__c),8);
    #line 400 
    ________p1 = (__u.__val);
    {
      #line 400 
      bool __warned;
      #line 400 
      if (debug_lockdep_rcu_enabled() != 0) 
        #line 400 
        if (! __warned) {
          #line 400 
          if (rcu_read_lock_held() == 0) {
            #line 400 
            __warned = (_Bool)1;
            #line 400 
            lockdep_rcu_suspicious((char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/tx.c",400,(char *)"suspicious rcu_dereference_check() usage");
          }
        }
    }
    }
  #line 400 
  tid_info = ________p1;
  #line 401 
  if (tid_info == (struct carl9170_sta_tid *)0) 
                                                #line 402 
                                                goto out_rcu;
  #line 404 
  cif_spin_lock_bh_lock_of_carl9170_sta_tid(& tid_info->lock);
  #line 405 
  if ((long)(tid_info->state > (unsigned int)CARL9170_TID_STATE_PROGRESS) != 0L) {
    #line 406 
    ;
    #line 406 
    ;
    #line 406 
    carl9170_tx_shift_bm(ar,tid_info,(unsigned short)((int)get_seq_h(hdr)));
  }
  #line 408 
  if ((int)sta_info->stats[(int)tid].clear != 0) {
    #line 409 
    sta_info->stats[(int)tid].clear = (_Bool)0;
    #line 410 
    sta_info->stats[(int)tid].req = (_Bool)0;
    #line 411 
    sta_info->stats[(int)tid].ampdu_len = (unsigned char)0U;
    #line 412 
    sta_info->stats[(int)tid].ampdu_ack_len = (unsigned char)0U;
  }
  #line 415 
  sta_info->stats[(int)tid].ampdu_len = (u8)((int)sta_info->stats[(int)tid].ampdu_len + 1);
  #line 416 
  if ((unsigned int)txinfo->__anonCompField_ieee80211_tx_info_195.status.rates[0].count == 1U) 
    #line 417 
    sta_info->stats[(int)tid].ampdu_ack_len = (u8)((int)sta_info->stats[(int)tid].ampdu_ack_len + 1);
  #line 419 
  if ((txinfo->flags & 512U) == 0U) 
                                    #line 420 
                                    sta_info->stats[(int)tid].req = (_Bool)1;
  #line 422 
  if (((int)super->f.mac_control & 16384) != 0) {
    #line 423 
    super->s.rix = sta_info->stats[(int)tid].ampdu_len;
    #line 424 
    super->s.cnt = sta_info->stats[(int)tid].ampdu_ack_len;
    #line 425 
    txinfo->flags |= 1024U;
    #line 426 
    if ((int)sta_info->stats[(int)tid].req != 0) 
                                                 #line 427 
                                                 txinfo->flags |= 2048U;
    #line 429 
    sta_info->stats[(int)tid].clear = (_Bool)1;
  }
  #line 431 
  cif_spin_unlock_bh_lock_of_carl9170_sta_tid(& tid_info->lock);
  #line 433 
  out_rcu: 
           #line 433 
  ;
  #line 434 
  rcu_read_unlock();
  #line 435 
  return;
}

#line 437  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/tx.c"
static void carl9170_tx_bar_status(struct ar9170 *ar, struct sk_buff *skb, struct ieee80211_tx_info *tx_info)
{
  #line 440 
  struct _carl9170_tx_superframe *super = (struct _carl9170_tx_superframe *)skb->data;
  #line 441 
  struct ieee80211_bar *bar = (struct ieee80211_bar *)(& super->frame_data);
  #line 452 
  if ((long)((int)ieee80211_is_back_req((unsigned short)((int)bar->frame_control)) != 0) != 0L) 
    #line 452 
    if ((tx_info->flags & 512U) == 0U) {
      #line 458 
      void *__mptr;
      #line 454 
      struct carl9170_bar_list_entry *entry;
      #line 455 
      int queue = (int)skb_get_queue_mapping(skb);
      #line 457 
      rcu_read_lock();
      {
        #line 458 
        bool __warned;
        #line 458 
        if (debug_lockdep_rcu_enabled() != 0) 
          #line 458 
          if (! __warned) {
            #line 458 
            if (rcu_read_lock_any_held() == 0) {
              #line 458 
              __warned = (_Bool)1;
              #line 458 
              lockdep_rcu_suspicious((char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/tx.c",458,(char *)"RCU-list traversed in non-reader section!");
            }
          }
      }
      {
        #line 459 
        union __anonunion___u_2096 __u;
        #line 458 
        __read_once_size((void *)(& ar->bar_list[queue].next),(void *)(& __u.__c),8);
        #line 458 
        __mptr = (void *)(__u.__val);
        }
      #line 461 
      entry = ((struct carl9170_bar_list_entry *)__mptr);
      #line 458 
      while (& entry->list != & ar->bar_list[queue]) {
        #line 458 
        void *__mptr_0;
        #line 459 
        if (entry->skb == skb) {
          #line 460 
          cif_spin_lock_bh_NOT_ARG_SIGN(& ar->bar_list_lock[queue]);
          #line 461 
          list_del_rcu(& entry->list);
          #line 462 
          cif_spin_unlock_bh_NOT_ARG_SIGN(& ar->bar_list_lock[queue]);
          {
            #line 463 
            struct carl9170_bar_list_entry *___p = entry;
            #line 463 
            if (___p != (struct carl9170_bar_list_entry *)0) 
                                                             #line 463 
                                                             kfree_call_rcu(& ___p->head,(void (*)(struct callback_head *))16);
          }
          #line 464 
          goto out;
        }
        {
          #line 459 
          union __anonunion___u_2098 __u_0;
          #line 458 
          __read_once_size((void *)(& entry->list.next),(void *)(& __u_0.__c),8);
          #line 458 
          __mptr_0 = (void *)(__u_0.__val);
          }
        #line 458 
        entry = ((struct carl9170_bar_list_entry *)__mptr_0);
      }
      {
        #line 468 
        int __ret_warn_on = 1;
        #line 468 
        if ((long)(__ret_warn_on != 0) != 0L) {
          #line 468 
          __warn_printk((char *)"bar not found in %d - ra:%pM ta:%pM c:%x ssn:%x\n",queue,(__u8 *)(& bar->ra),(__u8 *)(& bar->ta),(int)bar->control,(int)bar->start_seq_num);
          #line 469 
          ldv_inline_asm();
          #line 470 
          ldv_inline_asm();
        }
        #line 468 
        long tmp_6 = (long)(__ret_warn_on != 0);
      }
      #line 471 
      out: 
           #line 471 
      ;
      #line 472 
      rcu_read_unlock();
    }
  #line 474 
  return;
}

#line 476  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/tx.c"
void carl9170_tx_status(struct ar9170 *ar, struct sk_buff *skb, bool success)
{
  #line 479 
  struct ieee80211_tx_info *txinfo;
  #line 481 
  carl9170_tx_accounting_free(ar,skb);
  #line 483 
  txinfo = IEEE80211_SKB_CB(skb);
  #line 485 
  carl9170_tx_bar_status(ar,skb,txinfo);
  #line 487 
  if ((int)success != 0) 
                         #line 488 
                         txinfo->flags |= 512U; else 
                                                     #line 490 
                                                     (ar->tx_ack_failures) ++;
  #line 492 
  if ((txinfo->flags & 64U) != 0U) 
                                   #line 493 
                                   carl9170_tx_status_process_ampdu(ar,skb,txinfo);
  #line 495 
  carl9170_tx_ps_unblock(ar,skb);
  #line 496 
  carl9170_tx_put_skb(skb);
  #line 497 
  return;
}

#line 500  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/tx.c"
void carl9170_tx_callback(struct ar9170 *ar, struct sk_buff *skb)
{
  #line 502 
  struct ieee80211_tx_info *txinfo = IEEE80211_SKB_CB(skb);
  #line 504 
  atomic_dec_0(& ar->tx_total_pending);
  #line 506 
  if ((txinfo->flags & 64U) != 0U) 
                                   #line 507 
                                   atomic_dec_0(& ar->tx_ampdu_upload);
  #line 509 
  if (carl9170_tx_put_skb(skb) != 0) 
                                     #line 510 
                                     cif_tasklet_hi_schedule_0(& ar->usb_tasklet);
  #line 511 
  return;
}

#line 513  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/tx.c"
static struct sk_buff *carl9170_get_queued_skb(struct ar9170 *ar, u8 cookie, struct sk_buff_head *queue)
{
  #line 516 
  struct sk_buff *skb;
  #line 518 
  cif_spin_lock_bh_lock_of_sk_buff_head(& queue->lock);
  #line 519 
  skb = queue->next;
  #line 519 
  while (skb != (struct sk_buff *)queue) {
    {
      #line 520 
      struct _carl9170_tx_superframe *txc = (struct _carl9170_tx_superframe *)skb->data;
      #line 522 
      if ((int)txc->s.cookie != (int)cookie) 
                                             #line 523 
                                             goto __Cont;
      #line 525 
      __skb_unlink(skb,queue);
      #line 526 
      cif_spin_unlock_bh_lock_of_sk_buff_head(& queue->lock);
      #line 528 
      carl9170_release_dev_space(ar,skb);
      #line 529 
      return skb;
    }
    #line 519 
    __Cont: 
            #line 519 
    skb = skb->__anonCompField_sk_buff_90.__anonCompField___anonunion_502_89.next;
  }
  #line 531 
  cif_spin_unlock_bh_lock_of_sk_buff_head(& queue->lock);
  #line 533 
  return (struct sk_buff *)0;
}

#line 536  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/tx.c"
static void carl9170_tx_fill_rateinfo(struct ar9170 *ar, unsigned int rix, unsigned int tries, struct ieee80211_tx_info *txinfo)
{
  #line 539 
  unsigned int i;
  #line 541 
  i = 0U;
  #line 541 
  while (i <= 3U) {
    #line 542 
    if ((int)txinfo->__anonCompField_ieee80211_tx_info_195.status.rates[i].idx < 0) 
      #line 543 
      break;
    #line 545 
    if (i == rix) {
      #line 546 
      txinfo->__anonCompField_ieee80211_tx_info_195.status.rates[i].count = (unsigned short)tries;
      #line 547 
      i ++;
      #line 548 
      break;
    }
    #line 541 
    i ++;
  }
  #line 552 
  while (i <= 3U) {
    #line 553 
    txinfo->__anonCompField_ieee80211_tx_info_195.status.rates[i].idx = (signed char)(-1);
    #line 554 
    txinfo->__anonCompField_ieee80211_tx_info_195.status.rates[i].count = (unsigned short)0U;
    #line 552 
    i ++;
  }
  #line 556 
  return;
}

#line 558  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/tx.c"
static void carl9170_check_queue_stop_timeout(struct ar9170 *ar)
{
  #line 560 
  int i;
  #line 561 
  struct sk_buff *skb;
  #line 562 
  struct ieee80211_tx_info *txinfo;
  #line 563 
  struct carl9170_tx_info *arinfo;
  #line 564 
  bool restart = (_Bool)0;
  #line 566 
  i = 0;
  #line 566 
  while ((int)(ar->hw)->queues > i) {
    {
      #line 577 
      int tmp_2;
      #line 567 
      cif_spin_lock_bh_lock_of_sk_buff_head(& ar->tx_status[i].lock);
      #line 569 
      skb = skb_peek(& ar->tx_status[i]);
      #line 571 
      if (skb == (struct sk_buff *)0) 
                                      #line 572 
                                      goto next;
      #line 574 
      txinfo = IEEE80211_SKB_CB(skb);
      #line 575 
      arinfo = (struct carl9170_tx_info *)(& txinfo->__anonCompField_ieee80211_tx_info_195.__anonCompField___anonunion_2051_194.rate_driver_data);
      {
        #line 577 
        unsigned long __dummy;
        #line 577 
        unsigned long __dummy2;
        }
      #line 577 
      if (1 != 0) {
        {
          #line 577 
          unsigned long __dummy_0;
          #line 577 
          unsigned long __dummy2_0;
          }
        #line 577 
        if (1 != 0) {
          #line 577 
          ;
          #line 577 
          if ((long)((arinfo->timeout + msecs_to_jiffies(5500U)) - jiffies) < 0L) 
            #line 577 
            tmp_2 = 1; else 
                            #line 577 
                            tmp_2 = 0;
        }
        else 
             #line 577 
             tmp_2 = 0;
      }
      else 
           #line 577 
           tmp_2 = 0;
      #line 577 
      if (tmp_2 == 1) 
                      #line 579 
                      restart = (_Bool)1;
      #line 581 
      next: 
            #line 581 
      ;
      #line 582 
      cif_spin_unlock_bh_lock_of_sk_buff_head(& ar->tx_status[i].lock);
    }
    #line 566 
    i ++;
  }
  #line 585 
  if ((int)restart != 0) 
                         #line 599 
                         carl9170_restart(ar,(enum carl9170_restart_reasons)CARL9170_RR_STUCK_TX);
  #line 600 
  return;
}

#line 603  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/tx.c"
static void carl9170_tx_ampdu_timeout(struct ar9170 *ar)
{
  #line 612 
  void *__mptr;
  #line 605 
  struct carl9170_sta_tid *iter;
  #line 606 
  struct sk_buff *skb;
  #line 607 
  struct ieee80211_tx_info *txinfo;
  #line 608 
  struct carl9170_tx_info *arinfo;
  #line 609 
  struct ieee80211_sta *sta;
  #line 611 
  rcu_read_lock();
  {
    #line 612 
    bool __warned;
    #line 612 
    if (debug_lockdep_rcu_enabled() != 0) 
      #line 612 
      if (! __warned) {
        #line 612 
        if (rcu_read_lock_any_held() == 0) {
          #line 612 
          __warned = (_Bool)1;
          #line 612 
          lockdep_rcu_suspicious((char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/tx.c",612,(char *)"RCU-list traversed in non-reader section!");
        }
      }
  }
  {
    #line 613 
    union __anonunion___u_2100 __u;
    #line 612 
    __read_once_size((void *)(& ar->tx_ampdu_list.next),(void *)(& __u.__c),8);
    #line 612 
    __mptr = (void *)(__u.__val);
    }
  #line 615 
  iter = ((struct carl9170_sta_tid *)__mptr);
  #line 612 
  while (& iter->list != & ar->tx_ampdu_list) {
    #line 612 
    void *__mptr_0;
    {
      #line 628 
      int __ret_warn_on;
      #line 613 
      if (iter->state <= (unsigned int)CARL9170_TID_STATE_PROGRESS) 
                                                                    #line 614 
                                                                    goto __Cont;
      #line 616 
      cif_spin_lock_bh_lock_of_carl9170_sta_tid(& iter->lock);
      #line 617 
      skb = skb_peek(& iter->queue);
      #line 618 
      if (skb == (struct sk_buff *)0) 
                                      #line 619 
                                      goto unlock;
      #line 621 
      txinfo = IEEE80211_SKB_CB(skb);
      #line 622 
      arinfo = (struct carl9170_tx_info *)(& txinfo->__anonCompField_ieee80211_tx_info_195.__anonCompField___anonunion_2051_194.rate_driver_data);
      {
        #line 623 
        unsigned long __dummy;
        #line 623 
        unsigned long __dummy2;
        }
      #line 623 
      if (1 != 0) {
        {
          #line 623 
          unsigned long __dummy_0;
          #line 623 
          unsigned long __dummy2_0;
          }
        #line 623 
        if (1 != 0) {
          #line 623 
          ;
          #line 623 
          if ((long)(jiffies - (arinfo->timeout + msecs_to_jiffies(256U))) < 0L) 
            #line 625 
            goto unlock;
        }
      }
      #line 627 
      sta = iter->sta;
      #line 628 
      __ret_warn_on = sta == (struct ieee80211_sta *)0;
      #line 628 
      if ((long)(__ret_warn_on != 0) != 0L) {
        #line 629 
        ldv_inline_asm();
        #line 630 
        ldv_inline_asm();
      }
      #line 628 
      if ((long)((long)(__ret_warn_on != 0)) != 0L) 
                                                    #line 629 
                                                    goto unlock;
      #line 631 
      ieee80211_stop_tx_ba_session(sta,(unsigned short)((int)iter->tid));
      #line 632 
      unlock: 
              #line 632 
      ;
      #line 633 
      cif_spin_unlock_bh_lock_of_carl9170_sta_tid(& iter->lock);
    }
    #line 612 
    __Cont: { /* sequence */
              {
                #line 613 
                union __anonunion___u_2102 __u_0;
                #line 612 
                __read_once_size((void *)(& iter->list.next),(void *)(& __u_0.__c),8);
                #line 612 
                __mptr_0 = (void *)(__u_0.__val);
                }
              #line 612 
              iter = ((struct carl9170_sta_tid *)__mptr_0);
            }
  }
  #line 636 
  rcu_read_unlock();
  #line 637 
  return;
}

#line 639  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/tx.c"
void carl9170_tx_janitor(struct work_struct *work)
{
  #line 641 
  void *__mptr;
  #line 641 
  __mptr = (void *)work;
  #line 641 
  struct ar9170 *ar = ((struct ar9170 *)(__mptr + 18446744073709542672U));
  #line 643 
  if (ar->state <= (unsigned int)CARL9170_IDLE) 
                                                #line 644 
                                                return;
  #line 646 
  ar->tx_janitor_last_run = jiffies;
  #line 648 
  carl9170_check_queue_stop_timeout(ar);
  #line 649 
  carl9170_tx_ampdu_timeout(ar);
  #line 651 
  if (atomic_read_0(& ar->tx_total_queued) == 0) 
                                                 #line 652 
                                                 return;
  #line 654 
  ;
  #line 654 
  ;
  #line 654 
  ieee80211_queue_delayed_work(ar->hw,& ar->tx_janitor,msecs_to_jiffies(2500U));
  #line 656 
  return;
}

#line 658  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/tx.c"
static void __carl9170_tx_process_status(struct ar9170 *ar, uint8_t cookie, uint8_t info)
{
  #line 661 
  struct sk_buff *skb;
  #line 662 
  struct ieee80211_tx_info *txinfo;
  #line 663 
  unsigned int r;
  #line 663 
  unsigned int t;
  #line 663 
  unsigned int q;
  #line 664 
  bool success = (_Bool)1;
  #line 666 
  q = (unsigned int)ar9170_qmap[(int)info & 3];
  #line 668 
  skb = carl9170_get_queued_skb(ar,(unsigned char)((int)cookie),& ar->tx_status[q]);
  #line 669 
  if (skb == (struct sk_buff *)0) 
                                  #line 674 
                                  return;
  #line 677 
  txinfo = IEEE80211_SKB_CB(skb);
  #line 679 
  if (((int)info & 128) == 0) 
                              #line 680 
                              success = (_Bool)0;
  #line 682 
  r = (unsigned int)((int)info >> 2) & 3U;
  #line 683 
  t = (unsigned int)((int)info >> 4) & 7U;
  #line 685 
  carl9170_tx_fill_rateinfo(ar,r,t,txinfo);
  #line 686 
  carl9170_tx_status(ar,skb,(_Bool)((bool)((int)success) != 0));
  #line 687 
  return;
}

#line 689  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/tx.c"
void carl9170_tx_process_status(struct ar9170 *ar, struct carl9170_rsp *cmd)
{
  #line 692 
  unsigned int i;
  #line 694 
  i = 0U;
  #line 694 
  while ((unsigned int)cmd->hdr.__anonCompField_carl9170_cmd_head_198.__anonCompField___anonunion_1028_197.ext > i) {
    {
      #line 695 
      int __ret_warn_on;
      #line 695 
      __ret_warn_on = (unsigned int)((int)((unsigned int)cmd->hdr.__anonCompField_carl9170_cmd_head_198.__anonCompField___anonunion_1028_197.len / 2U) + 1) < i;
      #line 695 
      if ((long)(__ret_warn_on != 0) != 0L) {
        #line 696 
        ldv_inline_asm();
        #line 697 
        ldv_inline_asm();
      }
      #line 695 
      if ((long)((long)(__ret_warn_on != 0)) != 0L) {
        {
          #line 696 
          bool branch;
          #line 696 
          struct _ddebug __UNIQUE_ID_ddebug570 = {.modname = (char *)"carl9170", .function = (char *)"carl9170_tx_process_status", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/tx.c", .format = (char *)"UU:", .lineno = (unsigned int)696U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
          #line 696 
          branch = arch_static_branch(& __UNIQUE_ID_ddebug570.key.dd_key_false.key,(_Bool)0);
          #line 696 
          if ((long)((long)((int)branch != 0)) != 0L) 
                                                      #line 696 
                                                      print_hex_dump((char *)"\001",(char *)"UU:",0,16,1,(void *)cmd,(unsigned long)((int)cmd->hdr.__anonCompField_carl9170_cmd_head_198.__anonCompField___anonunion_1028_197.len + 4),(_Bool)1);
        }
        #line 698 
        break;
      }
      #line 701 
      __carl9170_tx_process_status(ar,(unsigned char)((int)cmd->__anonCompField_carl9170_rsp_201._tx_status[i].cookie),(unsigned char)((int)cmd->__anonCompField_carl9170_rsp_201._tx_status[i].info));
    }
    #line 694 
    i ++;
  }
  #line 704 
  return;
}

#line 706  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/tx.c"
static void carl9170_tx_rate_tpc_chains(struct ar9170 *ar, struct ieee80211_tx_info *info, struct ieee80211_tx_rate *txrate, unsigned int *phyrate, unsigned int *tpc, unsigned int *chains)
{
  #line 762 
  unsigned int __UNIQUE_ID___x571;
  #line 762 
  unsigned int tmp;
  #line 711 
  u8 *txpower;
  #line 712 
  unsigned int idx;
  #line 710 
  struct ieee80211_rate *rate = (struct ieee80211_rate *)0;
  #line 714 
  idx = (unsigned int)txrate->idx;
  #line 715 
  *tpc = 0U;
  #line 716 
  *phyrate = 0U;
  #line 718 
  if (((int)txrate->flags & 8) != 0) {
    #line 719 
    if (((int)txrate->flags & 32) != 0) {
      #line 721 
      *tpc += 2U;
      #line 723 
      if ((unsigned int)info->band == 0U) 
                                          #line 724 
                                          txpower = (u8 *)(& ar->power_2G_ht40); else 
                                                                    #line 726 
                                                                    txpower = (u8 *)(& ar->power_5G_ht40);
    }
    else 
      #line 728 
      if ((unsigned int)info->band == 0U) 
                                          #line 729 
                                          txpower = (u8 *)(& ar->power_2G_ht20); else 
                                                                    #line 731 
                                                                    txpower = (u8 *)(& ar->power_5G_ht20);
    #line 734 
    *phyrate = (unsigned int)txrate->idx;
    #line 735 
    *tpc += (unsigned int)*(txpower + ((unsigned long)idx & (unsigned long)7U));
  }
  else {
    #line 737 
    if ((unsigned int)info->band == 0U) 
      #line 738 
      if (idx <= 3U) 
                     #line 739 
                     txpower = (u8 *)(& ar->power_2G_cck); else 
                                                                #line 741 
                                                                txpower = (u8 *)(& ar->power_2G_ofdm);
    else {
      #line 743 
      txpower = (u8 *)(& ar->power_5G_leg);
      #line 744 
      idx += 4U;
    }
    #line 747 
    rate = & __carl9170_ratetable[idx];
    #line 748 
    *tpc += (unsigned int)*(txpower + ((unsigned long)((int)rate->hw_value >> 4) & (unsigned long)3U));
    #line 749 
    *phyrate = (unsigned int)rate->hw_value & 15U;
  }
  #line 752 
  if ((unsigned int)ar->eeprom.tx_mask == 1U) 
                                              #line 753 
                                              *chains = 1U;
  else 
    #line 755 
    if ((((int)txrate->flags & 8) == 0 && rate != (struct ieee80211_rate *)0) && (unsigned int)rate->bitrate > 359U) 
      #line 757 
      *chains = 1U; else 
                         #line 759 
                         *chains = 5U;
  {
    #line 762 
    __UNIQUE_ID___x571 = *tpc;
    #line 762 
    unsigned int __UNIQUE_ID___y572 = (unsigned int)((ar->hw)->conf.power_level * 2);
    #line 762 
    if (__UNIQUE_ID___x571 < __UNIQUE_ID___y572) 
                                                 #line 762 
                                                 tmp = __UNIQUE_ID___x571; else 
                                                                    #line 762 
                                                                    tmp = __UNIQUE_ID___y572;
    }
  #line 762 
  *tpc = tmp;
  #line 764 
  return;
}

#line 765  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/tx.c"
static __le32 carl9170_tx_physet(struct ar9170 *ar, struct ieee80211_tx_info *info, struct ieee80211_tx_rate *txrate)
{
  #line 769 
  __le32 tmp;
  #line 768 
  unsigned int power = 0U;
  #line 768 
  unsigned int chains = 0U;
  #line 768 
  unsigned int phyrate = 0U;
  #line 771 
  tmp = 0U;
  #line 773 
  if (((int)txrate->flags & 32) != 0) 
                                      #line 774 
                                      tmp |= 16U;
  #line 777 
  if (((int)txrate->flags & 64) != 0) 
                                      #line 778 
                                      tmp |= 24U;
  #line 781 
  if (((int)txrate->flags & 128) != 0) 
                                       #line 782 
                                       tmp |= 2147483648U;
  #line 784 
  if (((int)txrate->flags & 8) != 0) {
    #line 785 
    phyrate = (phyrate & 4261675007U) | ((unsigned int)((int)txrate->idx << 18) & 33292288U);
    #line 788 
    tmp = ((unsigned int)((int)txrate->idx << 6) & 448U) | tmp;
    #line 791 
    tmp |= 2U;
  }
  else 
    #line 800 
    if ((unsigned int)info->band == 0U) 
      #line 801 
      if ((int)txrate->idx <= 3) 
                                 #line 802 
                                 tmp = tmp; else 
                                                 #line 804 
                                                 tmp |= 1U;
    else 
         #line 806 
         tmp |= 1U;
  #line 816 
  carl9170_tx_rate_tpc_chains(ar,info,txrate,& phyrate,& power,& chains);
  #line 819 
  tmp = ((phyrate << 18) & 33292288U) | tmp;
  #line 820 
  tmp = ((power << 9) & 32256U) | tmp;
  #line 821 
  tmp = ((chains << 15) & 229376U) | tmp;
  #line 822 
  return tmp;
}

#line 825  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/tx.c"
static bool carl9170_tx_rts_check(struct ar9170 *ar, struct ieee80211_tx_rate *rate, bool ampdu, bool multi)
{
  #line 829 
  switch ((unsigned int)ar->erp_mode) {
    #line 830 
    case (unsigned int)1: 
                          #line 830 
    ;
    #line 831 
    if ((int)ampdu != 0) 
                         #line 832 
                         break;
    #line 835 
    case (unsigned int)2: 
                          #line 835 
    ;
    #line 836 
    if (((int)rate->flags & 1) == 0) 
                                     #line 837 
                                     break;
    #line 840 
    case (unsigned int)5: 
                          #line 840 
    ;
    #line 841 
    if ((long)(! multi) != 0L) 
                               #line 842 
                               return (_Bool)1;
    #line 844 
    default: 
             #line 844 
    ;
    #line 845 
    break;
  }
  #line 848 
  return (_Bool)0;
}

#line 851  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/tx.c"
static bool carl9170_tx_cts_check(struct ar9170 *ar, struct ieee80211_tx_rate *rate)
{
  #line 854 
  switch ((unsigned int)ar->erp_mode) {
    #line 855 
    case (unsigned int)1: 
                          #line 855 
    ;
    #line 856 
    case (unsigned int)2: 
                          #line 856 
    ;
    #line 857 
    if (((int)rate->flags & 2) == 0) 
                                     #line 858 
                                     break;
    #line 861 
    case (unsigned int)4: 
                          #line 861 
    ;
    #line 862 
    return (_Bool)1;
    #line 864 
    default: 
             #line 864 
    ;
    #line 865 
    break;
  }
  #line 868 
  return (_Bool)0;
}

#line 871  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/tx.c"
static void carl9170_tx_get_rates(struct ar9170 *ar, struct ieee80211_vif *vif, struct ieee80211_sta *sta, struct sk_buff *skb)
{
  #line 876 
  struct ieee80211_tx_info *info;
  #line 881 
  info = IEEE80211_SKB_CB(skb);
  #line 883 
  ieee80211_get_tx_rates(vif,sta,skb,(struct ieee80211_tx_rate *)(& info->__anonCompField_ieee80211_tx_info_195.control.__anonCompField___anonstruct_control_2052_193.__anonCompField___anonunion_2053_192.rates),4);
  #line 885 
  return;
}

#line 888  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/tx.c"
static void carl9170_tx_apply_rateset(struct ar9170 *ar, struct ieee80211_tx_info *sinfo, struct sk_buff *skb)
{
  #line 892 
  struct ieee80211_tx_rate *txrate;
  #line 893 
  struct ieee80211_tx_info *info;
  #line 895 
  int i;
  #line 896 
  bool ampdu;
  #line 897 
  bool no_ack;
  #line 894 
  struct _carl9170_tx_superframe *txc = (struct _carl9170_tx_superframe *)skb->data;
  #line 899 
  info = IEEE80211_SKB_CB(skb);
  #line 900 
  ampdu = (_Bool)((info->flags & 64U) != 0U);
  #line 901 
  no_ack = (_Bool)((info->flags & 4U) != 0U);
  #line 907 
  info->flags |= sinfo->flags & 4096U;
  #line 913 
  i = 0;
  #line 913 
  while (i <= 3) {
    {
      #line 914 
      __le32 phy_set;
      #line 916 
      txrate = & sinfo->__anonCompField_ieee80211_tx_info_195.control.__anonCompField___anonstruct_control_2052_193.__anonCompField___anonunion_2053_192.rates[i];
      #line 917 
      if ((int)txrate->idx < 0) 
                                #line 918 
                                break;
      #line 920 
      phy_set = carl9170_tx_physet(ar,info,txrate);
      #line 921 
      if (i == 0) {
        #line 922 
        __le16 mac_tmp = (unsigned short)0U;
        #line 925 
        txc->f.phy_control = phy_set;
        #line 927 
        if ((int)ampdu != 0 && ((int)txrate->flags & 8) != 0) 
                                                              #line 928 
                                                              mac_tmp = (unsigned short)((unsigned int)mac_tmp | 32U);
        #line 930 
        if ((int)carl9170_tx_rts_check(ar,txrate,(_Bool)((bool)((int)ampdu) != 0),
                              (_Bool)((bool)((int)no_ack) != 0)) != 0) 
          #line 931 
          mac_tmp = (unsigned short)((unsigned int)mac_tmp | 1U);
        else {
          #line 932 
          if ((int)carl9170_tx_cts_check(ar,txrate) != 0) 
                                                          #line 933 
                                                          mac_tmp = (unsigned short)((unsigned int)mac_tmp | 2U);
        }
        #line 935 
        txc->f.mac_control = (unsigned short)((int)txc->f.mac_control | (int)mac_tmp);
      }
      else 
           #line 940 
           txc->s.rr[i + -1] = phy_set;
      #line 943 
      txc->s.ri[i] = (unsigned char)(((int)txc->s.ri[i] & -8) | ((int)txrate->count & 7));
      #line 946 
      if ((int)carl9170_tx_rts_check(ar,txrate,(_Bool)((bool)((int)ampdu) != 0),
                              (_Bool)((bool)((int)no_ack) != 0)) != 0) 
        #line 947 
        txc->s.ri[i] = (unsigned char)((unsigned int)txc->s.ri[i] | 8U);
      else {
        #line 949 
        if ((int)carl9170_tx_cts_check(ar,txrate) != 0) 
                                                        #line 950 
                                                        txc->s.ri[i] = (unsigned char)((unsigned int)txc->s.ri[i] | 16U);
      }
      #line 953 
      if ((int)ampdu != 0 && ((int)txrate->flags & 8) != 0) 
                                                            #line 954 
                                                            txc->s.ri[i] = (unsigned char)((unsigned int)txc->s.ri[i] | 32U);
    }
    #line 913 
    i ++;
  }
  #line 956 
  return;
}

#line 958  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/tx.c"
static int carl9170_tx_prepare(struct ar9170 *ar, struct ieee80211_sta *sta, struct sk_buff *skb)
{
  #line 962 
  struct ieee80211_hdr *hdr;
  #line 963 
  struct _carl9170_tx_superframe *txc;
  #line 964 
  struct carl9170_vif_info *cvif;
  #line 965 
  struct ieee80211_tx_info *info;
  #line 966 
  struct carl9170_tx_info *arinfo;
  #line 967 
  unsigned int hw_queue;
  #line 968 
  __le16 mac_tmp;
  #line 969 
  u16 len;
  #line 982 
  hw_queue = (unsigned int)ar9170_qmap[carl9170_get_queue(ar,skb)];
  #line 984 
  hdr = (struct ieee80211_hdr *)skb->data;
  #line 985 
  info = IEEE80211_SKB_CB(skb);
  #line 986 
  len = (unsigned short)skb->len;
  #line 992 
  if ((long)(info->__anonCompField_ieee80211_tx_info_195.control.vif != (struct ieee80211_vif *)0) != 0L) 
    #line 993 
    cvif = (struct carl9170_vif_info *)(& (info->__anonCompField_ieee80211_tx_info_195.control.vif)->drv_priv); else 
                                                                    #line 995 
                                                                    cvif = (struct carl9170_vif_info *)0;
  #line 997 
  txc = (struct _carl9170_tx_superframe *)skb_push(skb,32U);
  #line 998 
  memset((void *)txc,0,32UL);
  #line 1000 
  txc->s.misc = (unsigned char)(((unsigned int)txc->s.misc & 252U) | ((unsigned int)((unsigned char)hw_queue) & 3U));
  #line 1002 
  if ((long)(cvif != (struct carl9170_vif_info *)0) != 0L) 
                                                           #line 1003 
                                                           txc->s.misc = (unsigned char)(((unsigned int)txc->s.misc & 199U) | ((unsigned int)((int)((unsigned char)cvif->id) << 3U) & 56U));
  #line 1005 
  if ((long)((info->flags & 32U) != 0U) != 0L) 
                                               #line 1006 
                                               txc->s.misc = (unsigned char)((unsigned int)txc->s.misc | 128U);
  #line 1008 
  if ((long)((info->flags & 2U) != 0U) != 0L) 
                                              #line 1009 
                                              txc->s.misc = (unsigned char)((unsigned int)txc->s.misc | 4U);
  #line 1011 
  if ((long)((int)ieee80211_is_probe_resp((unsigned short)((int)hdr->frame_control)) != 0) != 0L) 
    #line 1012 
    txc->s.misc = (unsigned char)((unsigned int)txc->s.misc | 64U);
  #line 1014 
  mac_tmp = (unsigned short)520U;
  #line 1016 
  mac_tmp = (unsigned short)((((int)((unsigned short)hw_queue) << 10U) & 3072) | (int)mac_tmp);
  #line 1019 
  if ((long)((info->flags & 4U) != 0U) != 0L) 
                                              #line 1020 
                                              mac_tmp = (unsigned short)((unsigned int)mac_tmp | 4U);
  #line 1022 
  if (info->__anonCompField_ieee80211_tx_info_195.control.hw_key != (struct ieee80211_key_conf *)0) {
    #line 1023 
    len = (unsigned short)((int)((unsigned short)(info->__anonCompField_ieee80211_tx_info_195.control.hw_key)->icv_len) + (int)len);
    #line 1025 
    switch ((info->__anonCompField_ieee80211_tx_info_195.control.hw_key)->cipher) {
      #line 1026 
      case (u32)1027073: 
                         #line 1026 
      ;
      #line 1027 
      case (u32)1027077: 
                         #line 1027 
      ;
      #line 1028 
      case (u32)1027074: 
                         #line 1028 
      ;
      #line 1029 
      mac_tmp = (unsigned short)((unsigned int)mac_tmp | 64U);
      #line 1030 
      break;
      #line 1031 
      case (u32)1027076: 
                         #line 1031 
      ;
      #line 1032 
      mac_tmp = (unsigned short)((unsigned int)mac_tmp | 192U);
      #line 1033 
      break;
      #line 1034 
      default: 
               #line 1034 
      ;
      {
        #line 1035 
        int __ret_warn_on = 1;
        #line 1035 
        if ((long)(__ret_warn_on != 0) != 0L) {
          #line 1036 
          ldv_inline_asm();
          #line 1037 
          ldv_inline_asm();
        }
        #line 1035 
        long tmp_2 = (long)(__ret_warn_on != 0);
      }
      #line 1036 
      goto err_out;
    }
  }
  #line 1040 
  if ((info->flags & 64U) != 0U) {
    #line 1046 
    unsigned int __UNIQUE_ID___x574;
    #line 1046 
    unsigned int tmp_2_1;
    #line 1041 
    unsigned int density;
    #line 1041 
    unsigned int factor;
    #line 1043 
    if ((long)((sta == (struct ieee80211_sta *)0 || cvif == (struct carl9170_vif_info *)0) != 0) != 0L) 
      #line 1044 
      goto err_out;
    {
      #line 1046 
      __UNIQUE_ID___x574 = 1U;
      #line 1046 
      unsigned int __UNIQUE_ID___y575 = (unsigned int)sta->ht_cap.ampdu_factor;
      #line 1046 
      if (__UNIQUE_ID___x574 < __UNIQUE_ID___y575) 
                                                   #line 1046 
                                                   tmp_2_1 = __UNIQUE_ID___x574; else 
                                                                    #line 1046 
                                                                    tmp_2_1 = __UNIQUE_ID___y575;
      }
    #line 1046 
    factor = tmp_2_1;
    #line 1047 
    density = (unsigned int)sta->ht_cap.ampdu_density;
    #line 1049 
    if (density != 0U) {
      #line 1057 
      unsigned int __UNIQUE_ID___x576;
      #line 1057 
      unsigned int tmp_4;
      {
        #line 1057 
        __UNIQUE_ID___x576 = density + 1U;
        #line 1057 
        unsigned int __UNIQUE_ID___y577 = 7U;
        #line 1057 
        if (__UNIQUE_ID___x576 > __UNIQUE_ID___y577) 
                                                     #line 1057 
                                                     tmp_4 = __UNIQUE_ID___x576; else 
                                                                    #line 1057 
                                                                    tmp_4 = __UNIQUE_ID___y577;
        }
      #line 1057 
      density = tmp_4;
    }
    #line 1060 
    txc->s.ampdu_settings = (unsigned char)(((unsigned int)txc->s.ampdu_settings & 248U) | ((unsigned int)((unsigned char)density) & 7U));
    #line 1063 
    txc->s.ampdu_settings = (unsigned char)(((unsigned int)txc->s.ampdu_settings & 231U) | ((unsigned int)((int)((unsigned char)factor) << 3U) & 24U));
  }
  #line 1067 
  txc->s.len = (unsigned short)skb->len;
  #line 1068 
  txc->f.length = (unsigned short)((unsigned int)len + 4U);
  #line 1069 
  txc->f.mac_control = mac_tmp;
  #line 1071 
  arinfo = (struct carl9170_tx_info *)(& info->__anonCompField_ieee80211_tx_info_195.__anonCompField___anonunion_2051_194.rate_driver_data);
  #line 1072 
  arinfo->timeout = jiffies;
  #line 1073 
  arinfo->ar = ar;
  #line 1074 
  kref_init(& arinfo->ref);
  #line 1075 
  return 0;
  #line 1077 
  err_out: 
           #line 1077 
  ;
  #line 1078 
  skb_pull(skb,32U);
  #line 1079 
  return -22;
}

#line 1082  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/tx.c"
static void carl9170_set_immba(struct ar9170 *ar, struct sk_buff *skb)
{
  #line 1084 
  struct _carl9170_tx_superframe *super;
  #line 1086 
  super = (struct _carl9170_tx_superframe *)skb->data;
  #line 1087 
  super->f.mac_control = (unsigned short)((unsigned int)super->f.mac_control | 16384U);
  #line 1088 
  return;
}

#line 1090  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/tx.c"
static void carl9170_set_ampdu_params(struct ar9170 *ar, struct sk_buff *skb)
{
  #line 1092 
  struct _carl9170_tx_superframe *super;
  #line 1093 
  int tmp;
  #line 1095 
  super = (struct _carl9170_tx_superframe *)skb->data;
  #line 1097 
  tmp = (int)super->s.ampdu_settings & 7;
  #line 1111 
  if (ar->current_density != tmp) {
    #line 1112 
    ar->current_density = tmp;
    #line 1113 
    super->s.ampdu_settings = (unsigned char)((unsigned int)super->s.ampdu_settings | 32U);
  }
  #line 1117 
  tmp = ((int)super->s.ampdu_settings << 3) & 192;
  #line 1120 
  if (ar->current_factor != tmp) {
    #line 1121 
    ar->current_factor = tmp;
    #line 1122 
    super->s.ampdu_settings = (unsigned char)((unsigned int)super->s.ampdu_settings | 64U);
  }
  #line 1124 
  return;
}

#line 1127  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/tx.c"
static void carl9170_tx_ampdu(struct ar9170 *ar)
{
  #line 1149 
  int __ret_warn_on;
  #line 1155 
  void *__mptr;
  #line 1148 
  struct carl9170_sta_tid *________p1;
  #line 1129 
  struct sk_buff_head agg;
  #line 1130 
  struct carl9170_sta_tid *tid_info;
  #line 1131 
  struct sk_buff *skb;
  #line 1131 
  struct sk_buff *first;
  #line 1132 
  struct ieee80211_tx_info *tx_info_first;
  #line 1134 
  u16 seq;
  #line 1134 
  u16 queue;
  #line 1134 
  u16 tmpssn;
  #line 1235 
  unsigned int tmp_18;
  #line 1133 
  unsigned int i = 0U;
  #line 1133 
  unsigned int done_ampdus = 0U;
  #line 1136 
  atomic_inc_0(& ar->tx_ampdu_scheduler);
  #line 1137 
  ar->tx_ampdu_schedule = (_Bool)0;
  #line 1139 
  if (atomic_read_0(& ar->tx_ampdu_upload) != 0) 
                                                 #line 1140 
                                                 return;
  #line 1142 
  if (ar->tx_ampdu_list_len == 0U) 
                                   #line 1143 
                                   return;
  #line 1145 
  __skb_queue_head_init(& agg);
  #line 1147 
  rcu_read_lock();
  {
    #line 1149 
    union __anonunion___u_2104 __u;
    #line 1148 
    __read_once_size((void *)(& ar->tx_ampdu_iter),(void *)(& __u.__c),8);
    #line 1148 
    ________p1 = (__u.__val);
    {
      #line 1148 
      bool __warned;
      #line 1148 
      if (debug_lockdep_rcu_enabled() != 0) 
        #line 1148 
        if (! __warned) {
          #line 1148 
          if (rcu_read_lock_held() == 0) {
            #line 1148 
            __warned = (_Bool)1;
            #line 1148 
            lockdep_rcu_suspicious((char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/tx.c",1148,(char *)"suspicious rcu_dereference_check() usage");
          }
        }
    }
    }
  #line 1148 
  tid_info = ________p1;
  #line 1149 
  __ret_warn_on = tid_info == (struct carl9170_sta_tid *)0;
  #line 1149 
  if ((long)(__ret_warn_on != 0) != 0L) {
    #line 1150 
    ldv_inline_asm();
    #line 1151 
    ldv_inline_asm();
  }
  #line 1149 
  if ((long)((long)(__ret_warn_on != 0)) != 0L) {
    #line 1150 
    rcu_read_unlock();
    #line 1151 
    return;
  }
  #line 1154 
  retry: 
         #line 1154 
  ;
  {
    #line 1156 
    union __anonunion___u_2106 __u_0;
    #line 1155 
    __read_once_size((void *)(& tid_info->list.next),(void *)(& __u_0.__c),8);
    #line 1155 
    __mptr = (void *)(__u_0.__val);
    }
  #line 1155 
  tid_info = ((struct carl9170_sta_tid *)__mptr);
  #line 1155 
  while (& tid_info->list != & ar->tx_ampdu_list) {
    #line 1155 
    void *__mptr_0;
    {
      #line 1156 
      i ++;
      #line 1158 
      if (tid_info->state <= (unsigned int)CARL9170_TID_STATE_SUSPEND) 
        #line 1159 
        goto __Cont;
      #line 1161 
      if ((unsigned int)tid_info->tid != 0U && (unsigned int)tid_info->tid != 3U) {
        #line 1161 
        unsigned int tmp_9;
        #line 1161 
        if ((unsigned int)tid_info->tid + 255U > 1U) 
                                                     #line 1161 
                                                     tmp_9 = (unsigned int)((unsigned int)tid_info->tid + 252U <= 1U); else 
                                                                    #line 1161 
                                                                    tmp_9 = 3U;
        #line 1161 
        queue = (unsigned short)tmp_9;
      }
      else 
           #line 1161 
           queue = (unsigned short)2U;
      #line 1163 
      cif_spin_lock_bh_lock_of_carl9170_sta_tid(& tid_info->lock);
      #line 1164 
      if (tid_info->state != (unsigned int)CARL9170_TID_STATE_XMIT) 
                                                                    #line 1165 
                                                                    goto processed;
      #line 1167 
      (tid_info->counter) ++;
      #line 1168 
      first = skb_peek(& tid_info->queue);
      #line 1169 
      tmpssn = carl9170_get_seq(first);
      #line 1170 
      seq = tid_info->snx;
      #line 1172 
      if ((long)((int)tmpssn != (int)seq) != 0L) {
        #line 1173 
        tid_info->state = CARL9170_TID_STATE_IDLE;
        #line 1175 
        goto processed;
      }
      #line 1178 
      tx_info_first = (struct ieee80211_tx_info *)0;
      #line 1179 
      while (1) {
        #line 1179 
        skb = skb_peek(& tid_info->queue);
        #line 1179 
        if (! (skb != (struct sk_buff *)0)) 
                                            #line 1179 
                                            break;
        {
          #line 1181 
          ;
          #line 1181 
          if ((long)((int)carl9170_get_seq(skb) != (int)seq) != 0L) 
                                                                    #line 1182 
                                                                    break;
          #line 1185 
          if ((long)((((int)tid_info->snx - (int)tid_info->bsn) & 4095) >= (int)tid_info->max + -1) != 0L) 
            #line 1187 
            break;
          #line 1189 
          if (tx_info_first == (struct ieee80211_tx_info *)0) {
            #line 1190 
            carl9170_tx_get_rates(ar,tid_info->vif,tid_info->sta,first);
            #line 1192 
            tx_info_first = IEEE80211_SKB_CB(first);
          }
          #line 1195 
          carl9170_tx_apply_rateset(ar,tx_info_first,skb);
          #line 1197 
          atomic_inc_0(& ar->tx_ampdu_upload);
          #line 1198 
          seq = (unsigned short)((unsigned int)((unsigned short)((unsigned int)seq + 1U)) & 4095U);
          #line 1198 
          tid_info->snx = seq;
          #line 1199 
          __skb_unlink(skb,& tid_info->queue);
          #line 1201 
          __skb_queue_tail(& agg,skb);
          #line 1203 
          if (skb_queue_len(& agg) > 29U) 
                                          #line 1204 
                                          break;
        }
      }
      #line 1207 
      if (skb_queue_empty(& tid_info->queue) != 0) 
                                                   #line 1214 
                                                   tid_info->state = CARL9170_TID_STATE_IDLE;
      else {
        #line 1207 
        ;
        #line 1207 
        if ((int)carl9170_get_seq(skb_peek(& tid_info->queue)) != (int)tid_info->snx) 
          #line 1214 
          tid_info->state = CARL9170_TID_STATE_IDLE;
      }
      #line 1216 
      done_ampdus ++;
      #line 1218 
      processed: 
                 #line 1218 
      ;
      #line 1219 
      cif_spin_unlock_bh_lock_of_carl9170_sta_tid(& tid_info->lock);
      #line 1221 
      if (skb_queue_empty(& agg) != 0) 
                                       #line 1222 
                                       goto __Cont;
      #line 1225 
      ;
      #line 1225 
      carl9170_set_ampdu_params(ar,skb_peek(& agg));
      #line 1228 
      ;
      #line 1228 
      carl9170_set_immba(ar,skb_peek_tail(& agg));
      #line 1230 
      cif_spin_lock_bh_lock_of_sk_buff_head(& ar->tx_pending[(int)queue].lock);
      #line 1231 
      skb_queue_splice_tail_init(& agg,& ar->tx_pending[(int)queue]);
      #line 1232 
      cif_spin_unlock_bh_lock_of_sk_buff_head(& ar->tx_pending[(int)queue].lock);
      #line 1233 
      ar->tx_schedule = (_Bool)1;
    }
    #line 1155 
    __Cont: { /* sequence */
              {
                #line 1156 
                union __anonunion___u_2108 __u_1;
                #line 1155 
                __read_once_size((void *)(& tid_info->list.next),(void *)(& __u_1.__c),8);
                #line 1155 
                __mptr_0 = (void *)(__u_1.__val);
                }
              #line 1155 
              tid_info = ((struct carl9170_sta_tid *)__mptr_0);
            }
  }
  #line 1235 
  tmp_18 = done_ampdus;
  #line 1235 
  done_ampdus ++;
  #line 1235 
  ;
  #line 1235 
  if (tmp_18 == 0U) {
    #line 1235 
    unsigned int tmp_19;
    #line 1235 
    tmp_19 = i;
    #line 1235 
    i ++;
    #line 1235 
    ;
    #line 1235 
    if (tmp_19 == 0U) 
                      #line 1236 
                      goto retry;
  }
  {
    #line 1238 
    uintptr_t _r_a_p__v = (unsigned long)tid_info;
    #line 1240 
    ldv_inline_asm();
    {
      #line 1239 
      union __anonunion___u_2112 __u_2 = {.__val = (struct carl9170_sta_tid *)_r_a_p__v};
      #line 1238 
      __write_once_size((void *)(& ar->tx_ampdu_iter),(void *)(& __u_2.__c),8);
      #line 1238 
      struct carl9170_sta_tid *tmp_22 = __u_2.__val;
    }
  }
  #line 1239 
  rcu_read_unlock();
  #line 1240 
  return;
}

#line 1242  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/tx.c"
static struct sk_buff *carl9170_tx_pick_skb(struct ar9170 *ar, struct sk_buff_head *queue)
{
  #line 1245 
  struct sk_buff *skb;
  #line 1246 
  struct ieee80211_tx_info *info;
  #line 1247 
  struct carl9170_tx_info *arinfo;
  #line 1251 
  cif_spin_lock_bh_lock_of_sk_buff_head(& queue->lock);
  #line 1252 
  skb = skb_peek(queue);
  #line 1253 
  if ((long)(skb == (struct sk_buff *)0) != 0L) 
                                                #line 1254 
                                                goto err_unlock;
  #line 1256 
  if (carl9170_alloc_dev_space(ar,skb) != 0) 
                                             #line 1257 
                                             goto err_unlock;
  #line 1259 
  __skb_unlink(skb,queue);
  #line 1260 
  cif_spin_unlock_bh_lock_of_sk_buff_head(& queue->lock);
  #line 1262 
  info = IEEE80211_SKB_CB(skb);
  #line 1263 
  arinfo = (struct carl9170_tx_info *)(& info->__anonCompField_ieee80211_tx_info_195.__anonCompField___anonunion_2051_194.rate_driver_data);
  #line 1265 
  arinfo->timeout = jiffies;
  #line 1266 
  return skb;
  #line 1268 
  err_unlock: 
              #line 1268 
  ;
  #line 1269 
  cif_spin_unlock_bh_lock_of_sk_buff_head(& queue->lock);
  #line 1270 
  return (struct sk_buff *)0;
}

#line 1273  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/tx.c"
void carl9170_tx_drop(struct ar9170 *ar, struct sk_buff *skb)
{
  #line 1275 
  struct _carl9170_tx_superframe *super;
  #line 1276 
  uint8_t q = (unsigned char)0U;
  #line 1278 
  (ar->tx_dropped) ++;
  #line 1280 
  super = (struct _carl9170_tx_superframe *)skb->data;
  #line 1281 
  q = (unsigned char)(((int)q & -4) | ((int)ar9170_qmap[carl9170_get_queue(ar,skb)] & 3));
  #line 1283 
  __carl9170_tx_process_status(ar,(unsigned char)((int)super->s.cookie),(unsigned char)((int)q));
  #line 1284 
  return;
}

#line 1286  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/tx.c"
static bool carl9170_tx_ps_drop(struct ar9170 *ar, struct sk_buff *skb)
{
  #line 1288 
  struct ieee80211_sta *sta;
  #line 1289 
  struct carl9170_sta_info *sta_info;
  #line 1290 
  struct ieee80211_tx_info *tx_info;
  #line 1292 
  rcu_read_lock();
  #line 1293 
  sta = __carl9170_get_tx_sta(ar,skb);
  #line 1294 
  if (sta == (struct ieee80211_sta *)0) 
                                        #line 1295 
                                        goto out_rcu;
  #line 1297 
  sta_info = (struct carl9170_sta_info *)(& sta->drv_priv);
  #line 1298 
  tx_info = IEEE80211_SKB_CB(skb);
  #line 1300 
  if ((long)((int)sta_info->sleeping != 0) != 0L && (tx_info->flags & 131080U) == 0U) {
    #line 1303 
    rcu_read_unlock();
    #line 1305 
    if ((tx_info->flags & 64U) != 0U) 
                                      #line 1306 
                                      atomic_dec_0(& ar->tx_ampdu_upload);
    #line 1308 
    tx_info->flags |= 256U;
    #line 1309 
    carl9170_release_dev_space(ar,skb);
    #line 1310 
    carl9170_tx_status(ar,skb,(_Bool)0);
    #line 1311 
    return (_Bool)1;
  }
  #line 1314 
  out_rcu: 
           #line 1314 
  ;
  #line 1315 
  rcu_read_unlock();
  #line 1316 
  return (_Bool)0;
}

#line 1319  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/tx.c"
static void carl9170_bar_check(struct ar9170 *ar, struct sk_buff *skb)
{
  #line 1321 
  struct _carl9170_tx_superframe *super = (struct _carl9170_tx_superframe *)skb->data;
  #line 1322 
  struct ieee80211_bar *bar = (struct ieee80211_bar *)(& super->frame_data);
  #line 1324 
  if ((long)((int)ieee80211_is_back_req((unsigned short)((int)bar->frame_control)) != 0) != 0L) 
    #line 1324 
    if (skb->len > 19U) {
      #line 1330 
      int __ret_warn_on;
      #line 1326 
      struct carl9170_bar_list_entry *entry;
      #line 1327 
      unsigned int queue = (unsigned int)skb_get_queue_mapping(skb);
      #line 1329 
      entry = (struct carl9170_bar_list_entry *)kmalloc_0(40UL,2592U);
      #line 1330 
      __ret_warn_on = entry == (struct carl9170_bar_list_entry *)0;
      #line 1330 
      if ((long)(__ret_warn_on != 0) != 0L) {
        #line 1331 
        ldv_inline_asm();
        #line 1332 
        ldv_inline_asm();
      }
      #line 1330 
      if ((long)((long)(__ret_warn_on != 0)) == 0L) {
        #line 1331 
        entry->skb = skb;
        #line 1332 
        cif_spin_lock_bh_NOT_ARG_SIGN(& ar->bar_list_lock[queue]);
        #line 1333 
        list_add_tail_rcu(& entry->list,& ar->bar_list[queue]);
        #line 1334 
        cif_spin_unlock_bh_NOT_ARG_SIGN(& ar->bar_list_lock[queue]);
      }
    }
  #line 1337 
  return;
}

#line 1339  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/tx.c"
static void carl9170_tx(struct ar9170 *ar)
{
  #line 1341 
  struct sk_buff *skb;
  #line 1342 
  unsigned int i;
  #line 1342 
  unsigned int q;
  #line 1343 
  bool schedule_garbagecollector = (_Bool)0;
  #line 1345 
  ar->tx_schedule = (_Bool)0;
  #line 1347 
  if ((long)(ar->state <= (unsigned int)CARL9170_IDLE) != 0L) 
                                                              #line 1348 
                                                              return;
  #line 1350 
  carl9170_usb_handle_tx_err(ar);
  #line 1352 
  i = 0U;
  #line 1352 
  while ((unsigned int)(ar->hw)->queues > i) {
    #line 1353 
    while (1) {
      #line 1353 
      if (! (skb_queue_empty(& ar->tx_pending[i]) == 0)) 
                                                         #line 1353 
                                                         break;
      {
        #line 1354 
        skb = carl9170_tx_pick_skb(ar,& ar->tx_pending[i]);
        #line 1355 
        if ((long)(skb == (struct sk_buff *)0) != 0L) 
                                                      #line 1356 
                                                      break;
        #line 1358 
        if ((long)((int)carl9170_tx_ps_drop(ar,skb) != 0) != 0L) 
                                                                 #line 1359 
                                                                 continue;
        #line 1361 
        carl9170_bar_check(ar,skb);
        #line 1363 
        atomic_inc_0(& ar->tx_total_pending);
        #line 1365 
        q = __carl9170_get_queue(ar,i);
        #line 1370 
        skb_queue_tail(& ar->tx_status[q],skb);
        #line 1380 
        carl9170_tx_get_skb(skb);
        #line 1382 
        carl9170_usb_tx(ar,skb);
        #line 1383 
        schedule_garbagecollector = (_Bool)1;
      }
    }
    #line 1352 
    i ++;
  }
  #line 1387 
  if (! schedule_garbagecollector) 
                                   #line 1388 
                                   return;
  #line 1390 
  ;
  #line 1390 
  ;
  #line 1390 
  ieee80211_queue_delayed_work(ar->hw,& ar->tx_janitor,msecs_to_jiffies(2500U));
  #line 1392 
  return;
}

#line 1394  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/tx.c"
static bool carl9170_tx_ampdu_queue(struct ar9170 *ar, struct ieee80211_sta *sta, struct sk_buff *skb, struct ieee80211_tx_info *txinfo)
{
  #line 1409 
  struct carl9170_sta_tid *________p1;
  #line 1422 
  int __ret_warn_on;
  #line 1426 
  int __ret_warn_on_0;
  #line 1398 
  struct carl9170_sta_info *sta_info;
  #line 1399 
  struct carl9170_sta_tid *agg;
  #line 1400 
  struct sk_buff *iter;
  #line 1401 
  u16 tid;
  #line 1401 
  u16 seq;
  #line 1401 
  u16 qseq;
  #line 1401 
  u16 off;
  #line 1402 
  bool run = (_Bool)0;
  #line 1404 
  tid = carl9170_get_tid(skb);
  #line 1405 
  seq = carl9170_get_seq(skb);
  #line 1406 
  sta_info = (struct carl9170_sta_info *)(& sta->drv_priv);
  #line 1408 
  rcu_read_lock();
  {
    #line 1410 
    union __anonunion___u_2114 __u;
    #line 1409 
    __read_once_size((void *)(& sta_info->agg[(int)tid]),(void *)(& __u.__c),8);
    #line 1409 
    ________p1 = (__u.__val);
    {
      #line 1409 
      bool __warned;
      #line 1409 
      if (debug_lockdep_rcu_enabled() != 0) 
        #line 1409 
        if (! __warned) {
          #line 1409 
          if (rcu_read_lock_held() == 0) {
            #line 1409 
            __warned = (_Bool)1;
            #line 1409 
            lockdep_rcu_suspicious((char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/tx.c",1409,(char *)"suspicious rcu_dereference_check() usage");
          }
        }
    }
    }
  #line 1409 
  agg = ________p1;
  #line 1411 
  if (agg == (struct carl9170_sta_tid *)0) 
                                           #line 1412 
                                           goto err_unlock_rcu;
  #line 1414 
  cif_spin_lock_bh_lock_of_carl9170_sta_tid(& agg->lock);
  #line 1415 
  if ((long)(agg->state <= (unsigned int)CARL9170_TID_STATE_PROGRESS) != 0L) 
    #line 1416 
    goto err_unlock;
  #line 1419 
  if ((long)((((int)seq - (int)agg->bsn) & 3968) != 0) != 0L) 
                                                              #line 1420 
                                                              goto err_unlock;
  #line 1422 
  __ret_warn_on = (((int)seq - (int)agg->snx) & 3968) != 0;
  #line 1422 
  if ((long)(__ret_warn_on != 0) != 0L) {
    #line 1423 
    ldv_inline_asm();
    #line 1424 
    ldv_inline_asm();
  }
  #line 1422 
  if ((long)((long)(__ret_warn_on != 0)) != 0L) 
                                                #line 1423 
                                                goto err_unlock;
  #line 1425 
  off = (unsigned short)((unsigned int)((int)seq - (int)agg->bsn) & 4095U);
  {
    #line 1426 
    __ret_warn_on_0 = (int)test_and_set_bit((long)off,(unsigned long *)(& agg->bitmap)) != 0;
    #line 1426 
    if ((long)(__ret_warn_on_0 != 0) != 0L) {
      #line 1427 
      ldv_inline_asm();
      #line 1428 
      ldv_inline_asm();
    }
    }
  #line 1426 
  if ((long)((long)(__ret_warn_on_0 != 0)) != 0L) 
                                                  #line 1427 
                                                  goto err_unlock;
  #line 1429 
  if ((long)((((int)seq - (int)agg->hsn) & 3968) == 0) != 0L) {
    #line 1430 
    __skb_queue_tail(& agg->queue,skb);
    #line 1431 
    agg->hsn = seq;
    #line 1432 
    goto queued;
  }
  #line 1435 
  iter = agg->queue.prev;
  #line 1435 
  while ((struct sk_buff *)(& agg->queue) != iter) {
    #line 1436 
    qseq = carl9170_get_seq(iter);
    #line 1438 
    if ((((int)seq - (int)qseq) & 3968) == 0) {
      #line 1439 
      __skb_queue_after(& agg->queue,iter,skb);
      #line 1440 
      goto queued;
    }
    #line 1435 
    iter = iter->__anonCompField_sk_buff_90.__anonCompField___anonunion_502_89.prev;
  }
  #line 1444 
  __skb_queue_head(& agg->queue,skb);
  #line 1445 
  queued: 
          #line 1445 
  ;
  #line 1447 
  if ((long)(agg->state != (unsigned int)CARL9170_TID_STATE_XMIT) != 0L) {
    #line 1448 
    ;
    #line 1448 
    if ((int)agg->snx == (int)carl9170_get_seq(skb_peek(& agg->queue))) {
      #line 1449 
      agg->state = CARL9170_TID_STATE_XMIT;
      #line 1450 
      run = (_Bool)1;
    }
  }
  #line 1454 
  cif_spin_unlock_bh_lock_of_carl9170_sta_tid(& agg->lock);
  #line 1455 
  rcu_read_unlock();
  #line 1457 
  return run;
  #line 1459 
  err_unlock: 
              #line 1459 
  ;
  #line 1460 
  cif_spin_unlock_bh_lock_of_carl9170_sta_tid(& agg->lock);
  #line 1462 
  err_unlock_rcu: 
                  #line 1462 
  ;
  #line 1463 
  rcu_read_unlock();
  #line 1464 
  txinfo->flags &= 4294967231U;
  #line 1465 
  carl9170_tx_status(ar,skb,(_Bool)0);
  #line 1466 
  (ar->tx_dropped) ++;
  #line 1467 
  return (_Bool)0;
}

#line 1470  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/tx.c"
void carl9170_op_tx(struct ieee80211_hw *hw, struct ieee80211_tx_control *control, struct sk_buff *skb)
{
  #line 1475 
  struct ieee80211_tx_info *info;
  #line 1477 
  struct ieee80211_vif *vif;
  #line 1478 
  bool run;
  #line 1474 
  struct ar9170 *ar = (struct ar9170 *)hw->priv;
  #line 1476 
  struct ieee80211_sta *sta = control->sta;
  #line 1480 
  if ((long)(ar->state <= (unsigned int)CARL9170_IDLE) != 0L) 
                                                              #line 1481 
                                                              goto err_free;
  #line 1483 
  info = IEEE80211_SKB_CB(skb);
  #line 1484 
  vif = info->__anonCompField_ieee80211_tx_info_195.control.vif;
  #line 1486 
  if ((long)(carl9170_tx_prepare(ar,sta,skb) != 0) != 0L) 
                                                          #line 1487 
                                                          goto err_free;
  #line 1489 
  carl9170_tx_accounting(ar,skb);
  #line 1495 
  if (sta != (struct ieee80211_sta *)0) {
    #line 1496 
    struct carl9170_sta_info *stai = (struct carl9170_sta_info *)(& sta->drv_priv);
    #line 1497 
    atomic_inc_0(& stai->pending_frames);
  }
  #line 1500 
  if ((info->flags & 64U) != 0U) {
    #line 1508 
    run = carl9170_tx_ampdu_queue(ar,sta,skb,info);
    #line 1509 
    if ((int)run != 0) 
                       #line 1510 
                       carl9170_tx_ampdu(ar);
  }
  else {
    #line 1513 
    unsigned int queue = (unsigned int)skb_get_queue_mapping(skb);
    #line 1515 
    carl9170_tx_get_rates(ar,vif,sta,skb);
    #line 1516 
    carl9170_tx_apply_rateset(ar,info,skb);
    #line 1517 
    skb_queue_tail(& ar->tx_pending[queue],skb);
  }
  #line 1520 
  carl9170_tx(ar);
  #line 1521 
  return;
  #line 1523 
  err_free: 
            #line 1523 
  ;
  #line 1524 
  (ar->tx_dropped) ++;
  #line 1525 
  ieee80211_free_txskb(ar->hw,skb);
  #line 1526 
  return;
}

#line 1528  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/tx.c"
void carl9170_tx_scheduler(struct ar9170 *ar)
{
  #line 1531 
  if ((int)ar->tx_ampdu_schedule != 0) 
                                       #line 1532 
                                       carl9170_tx_ampdu(ar);
  #line 1534 
  if ((int)ar->tx_schedule != 0) 
                                 #line 1535 
                                 carl9170_tx(ar);
  #line 1536 
  return;
}

#line 1539  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/tx.c"
static struct carl9170_vif_info *carl9170_pick_beaconing_vif(struct ar9170 *ar)
{
  #line 1551 
  struct carl9170_vif_info *________p1;
  #line 1541 
  struct carl9170_vif_info *cvif;
  #line 1542 
  int i = 1;
  {
    #line 1552 
    union __anonunion___u_2116 __u;
    #line 1551 
    __read_once_size((void *)(& ar->beacon_iter),(void *)(& __u.__c),8);
    #line 1551 
    ________p1 = (__u.__val);
    {
      #line 1551 
      bool __warned;
      #line 1551 
      if (debug_lockdep_rcu_enabled() != 0) 
        #line 1551 
        if (! __warned) {
          #line 1551 
          if (rcu_read_lock_held() == 0) {
            #line 1551 
            __warned = (_Bool)1;
            #line 1551 
            lockdep_rcu_suspicious((char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/tx.c",1551,(char *)"suspicious rcu_dereference_check() usage");
          }
        }
    }
    }
  #line 1551 
  cvif = ________p1;
  #line 1552 
  if (ar->vifs != 0U && cvif != (struct carl9170_vif_info *)0) 
    #line 1553 
    while (1) {
      {
        #line 1554 
        void *__mptr;
        {
          #line 1555 
          union __anonunion___u_2118 __u_0;
          #line 1554 
          __read_once_size((void *)(& cvif->list.next),(void *)(& __u_0.__c),8);
          #line 1554 
          __mptr = (void *)(__u_0.__val);
          }
        #line 1554 
        cvif = ((struct carl9170_vif_info *)__mptr);
        #line 1554 
        while (& cvif->list != & ar->vif_list) {
          #line 1554 
          void *__mptr_0;
          #line 1556 
          if ((int)cvif->active != 0 && (int)cvif->enable_beacon != 0) 
            #line 1557 
            goto out;
          {
            #line 1555 
            union __anonunion___u_2120 __u_1;
            #line 1554 
            __read_once_size((void *)(& cvif->list.next),(void *)(& __u_1.__c),8);
            #line 1554 
            __mptr_0 = (void *)(__u_1.__val);
            }
          #line 1554 
          cvif = ((struct carl9170_vif_info *)__mptr_0);
        }
      }
      #line 1559 
      if (ar->beacon_enabled != 0U) {
        #line 1559 
        int tmp_7;
        #line 1559 
        tmp_7 = i;
        #line 1559 
        i --;
        #line 1559 
        ;
        #line 1559 
        if (! (tmp_7 != 0)) 
                            #line 1553 
                            break;
      }
      else 
           #line 1553 
           break;
    }
  #line 1562 
  out: 
       #line 1562 
  ;
  {
    #line 1564 
    union __anonunion___u_2122 __u_2 = {.__val = cvif};
    #line 1563 
    __write_once_size((void *)(& ar->beacon_iter),(void *)(& __u_2.__c),8);
    #line 1563 
    struct carl9170_vif_info *tmp_8 = __u_2.__val;
  }
  #line 1564 
  return cvif;
}

#line 1567  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/tx.c"
static bool carl9170_tx_beacon_physet(struct ar9170 *ar, struct sk_buff *skb, u32 *ht1, u32 *plcp)
{
  #line 1570 
  struct ieee80211_tx_info *txinfo;
  #line 1571 
  struct ieee80211_tx_rate *rate;
  #line 1572 
  unsigned int power;
  #line 1572 
  unsigned int chains;
  #line 1573 
  bool ht_rate;
  #line 1575 
  txinfo = IEEE80211_SKB_CB(skb);
  #line 1576 
  rate = & txinfo->__anonCompField_ieee80211_tx_info_195.control.__anonCompField___anonstruct_control_2052_193.__anonCompField___anonunion_2053_192.rates[0];
  #line 1577 
  ht_rate = (_Bool)(((int)txinfo->__anonCompField_ieee80211_tx_info_195.control.__anonCompField___anonstruct_control_2052_193.__anonCompField___anonunion_2053_192.rates[0].flags & 8) != 0);
  #line 1578 
  carl9170_tx_rate_tpc_chains(ar,txinfo,rate,plcp,& power,& chains);
  #line 1580 
  *ht1 = 256U;
  #line 1581 
  if (chains == 5U) 
                    #line 1582 
                    *ht1 |= 128U;
  #line 1583 
  *ht1 |= 112U;
  #line 1584 
  *ht1 = (*ht1 & 4162846719U) | ((power << 21) & 132120576U);
  #line 1585 
  *ht1 = (*ht1 & 3355443199U) | ((chains << 27) & 939524096U);
  #line 1587 
  if ((int)ht_rate != 0) {
    #line 1588 
    *ht1 |= 1U;
    #line 1589 
    if (((int)rate->flags & 128) != 0) 
                                       #line 1590 
                                       *plcp |= 32768U;
    #line 1592 
    if (((int)rate->flags & 32) != 0) {
      #line 1593 
      *ht1 |= 131072U;
      #line 1594 
      *plcp |= 256U;
    }
    else 
      #line 1595 
      if (((int)rate->flags & 64) != 0) {
        #line 1596 
        *ht1 |= 196608U;
        #line 1597 
        *plcp |= 256U;
      }
    #line 1600 
    *plcp = (*plcp & 65535U) | ((skb->len + 4U) << 16);
  }
  else 
    #line 1602 
    if (*plcp <= 3U) 
                     #line 1603 
                     *plcp |= ((skb->len + 4U) << 19) + 1024U; else 
                                                                    #line 1605 
                                                                    *plcp |= ((skb->len + 4U) << 16) + 16U;
  #line 1608 
  return ht_rate;
}

#line 1611  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/tx.c"
int carl9170_update_beacon(struct ar9170 *ar, bool submit)
{
  #line 1640 
  int __y;
  #line 1614 
  struct carl9170_vif_info *cvif;
  #line 1615 
  __le32 *data;
  #line 1616 
  u32 word;
  #line 1616 
  u32 ht1;
  #line 1616 
  u32 plcp;
  #line 1616 
  u32 off;
  #line 1616 
  u32 addr;
  #line 1616 
  u32 len;
  #line 1618 
  bool ht_rate;
  #line 1613 
  struct sk_buff *skb = (struct sk_buff *)0;
  #line 1615 
  __le32 *old = (__le32 *)0U;
  #line 1617 
  int i = 0;
  #line 1617 
  int err = 0;
  #line 1620 
  rcu_read_lock();
  #line 1621 
  cvif = carl9170_pick_beaconing_vif(ar);
  #line 1622 
  if (cvif == (struct carl9170_vif_info *)0) 
                                             #line 1623 
                                             goto out_unlock;
  #line 1625 
  ;
  #line 1625 
  skb = ieee80211_beacon_get_tim(ar->hw,carl9170_get_vif(cvif),(u16 *)0U,(u16 *)0U);
  #line 1628 
  if (skb == (struct sk_buff *)0) {
    #line 1629 
    err = -12;
    #line 1630 
    goto err_free;
  }
  #line 1633 
  cif_spin_lock_bh_beacon_lock_of_ar9170(& ar->beacon_lock);
  #line 1634 
  data = (__le32 *)skb->data;
  #line 1635 
  if (cvif->beacon != (struct sk_buff *)0) 
                                           #line 1636 
                                           old = (__le32 *)(cvif->beacon)->data;
  #line 1638 
  off = cvif->id * 480U;
  #line 1639 
  addr = ar->fw.beacon_addr + off;
  #line 1640 
  __y = 4;
  #line 1640 
  len = ((((skb->len + (unsigned int)__y) + 3U) / (unsigned int)__y) * (unsigned int)__y);
  #line 1642 
  if (off + len > ar->fw.beacon_max_len) {
    #line 1643 
    if (net_ratelimit() != 0) 
                              #line 1644 
                              _dev_err(& ((ar->hw)->wiphy)->dev,(char *)"beacon does not ");
    #line 1647 
    err = -22;
    #line 1648 
    goto err_unlock;
  }
  #line 1651 
  if (len > 480U) {
    #line 1652 
    if (net_ratelimit() != 0) 
                              #line 1653 
                              _dev_err(& ((ar->hw)->wiphy)->dev,(char *)"no support for beacons ",480,len);
    #line 1658 
    err = -90;
    #line 1659 
    goto err_unlock;
  }
  #line 1662 
  ht_rate = carl9170_tx_beacon_physet(ar,skb,& ht1,& plcp);
  {
    #line 1664 
    struct carl9170_cmd *__cmd;
    #line 1664 
    unsigned int __nreg;
    #line 1664 
    struct ar9170 *__carl = ar;
    #line 1664 
    int __err = 0;
    #line 1664 
    __nreg = 0U;
    #line 1664 
    __cmd = carl9170_cmd_buf(__carl,(enum carl9170_cmd_oids)CARL9170_CMD_WREG_ASYNC,60U);
    #line 1664 
    if (__cmd == (struct carl9170_cmd *)0) {
      #line 1664 
      __err = -12;
      #line 1664 
      goto __async_regwrite_out;
    }
    #line 1665 
    if (__cmd == (struct carl9170_cmd *)0) {
      #line 1665 
      __nreg = 0U;
      #line 1665 
      __cmd = carl9170_cmd_buf(__carl,(enum carl9170_cmd_oids)CARL9170_CMD_WREG_ASYNC,60U);
      #line 1665 
      if (__cmd == (struct carl9170_cmd *)0) {
        #line 1665 
        __err = -12;
        #line 1665 
        goto __async_regwrite_out;
      }
    }
    #line 1665 
    __cmd->__anonCompField_carl9170_cmd_199.wreg.regs[__nreg].addr = 1850784U;
    #line 1665 
    __cmd->__anonCompField_carl9170_cmd_199.wreg.regs[__nreg].val = ht1;
    #line 1665 
    __nreg ++;
    #line 1665 
    if (__nreg > 6U) 
      #line 1665 
      while (1) {
        #line 1665 
        if (__cmd == (struct carl9170_cmd *)0 || __nreg == 0U) 
                                                               #line 1665 
                                                               break;
        #line 1665 
        if (__carl->state > (unsigned int)CARL9170_STOPPED && __nreg != 0U) {
          #line 1665 
          __cmd->hdr.__anonCompField_carl9170_cmd_head_198.__anonCompField___anonunion_1028_197.len = (unsigned char)((unsigned int)((unsigned char)__nreg) * 8U);
          #line 1665 
          __err = __carl9170_exec_cmd(__carl,__cmd,(_Bool)1);
          #line 1665 
          __cmd = (struct carl9170_cmd *)0;
          #line 1665 
          break;
        }
        #line 1665 
        goto __async_regwrite_out;
        #line 1665 
        break;
      }
    #line 1666 
    if ((int)ht_rate != 0) {
      #line 1667 
      if (__cmd == (struct carl9170_cmd *)0) {
        #line 1667 
        __nreg = 0U;
        #line 1667 
        __cmd = carl9170_cmd_buf(__carl,(enum carl9170_cmd_oids)CARL9170_CMD_WREG_ASYNC,60U);
        #line 1667 
        if (__cmd == (struct carl9170_cmd *)0) {
          #line 1667 
          __err = -12;
          #line 1667 
          goto __async_regwrite_out;
        }
      }
      #line 1667 
      __cmd->__anonCompField_carl9170_cmd_199.wreg.regs[__nreg].addr = 1850788U;
      #line 1667 
      __cmd->__anonCompField_carl9170_cmd_199.wreg.regs[__nreg].val = plcp;
      #line 1667 
      __nreg ++;
      #line 1667 
      if (__nreg > 6U) 
        #line 1667 
        while (1) {
          #line 1667 
          if (__cmd == (struct carl9170_cmd *)0 || __nreg == 0U) 
                                                                 #line 1667 
                                                                 break;
          #line 1667 
          if (__carl->state > (unsigned int)CARL9170_STOPPED && __nreg != 0U) {
            #line 1667 
            __cmd->hdr.__anonCompField_carl9170_cmd_head_198.__anonCompField___anonunion_1028_197.len = (unsigned char)((unsigned int)((unsigned char)__nreg) * 8U);
            #line 1667 
            __err = __carl9170_exec_cmd(__carl,__cmd,(_Bool)1);
            #line 1667 
            __cmd = (struct carl9170_cmd *)0;
            #line 1667 
            break;
          }
          #line 1667 
          goto __async_regwrite_out;
          #line 1667 
          break;
        }
    }
    else {
      #line 1669 
      if (__cmd == (struct carl9170_cmd *)0) {
        #line 1669 
        __nreg = 0U;
        #line 1669 
        __cmd = carl9170_cmd_buf(__carl,(enum carl9170_cmd_oids)CARL9170_CMD_WREG_ASYNC,60U);
        #line 1669 
        if (__cmd == (struct carl9170_cmd *)0) {
          #line 1669 
          __err = -12;
          #line 1669 
          goto __async_regwrite_out;
        }
      }
      #line 1669 
      __cmd->__anonCompField_carl9170_cmd_199.wreg.regs[__nreg].addr = 1850768U;
      #line 1669 
      __cmd->__anonCompField_carl9170_cmd_199.wreg.regs[__nreg].val = plcp;
      #line 1669 
      __nreg ++;
      #line 1669 
      if (__nreg > 6U) 
        #line 1669 
        while (1) {
          #line 1669 
          if (__cmd == (struct carl9170_cmd *)0 || __nreg == 0U) 
                                                                 #line 1669 
                                                                 break;
          #line 1669 
          if (__carl->state > (unsigned int)CARL9170_STOPPED && __nreg != 0U) {
            #line 1669 
            __cmd->hdr.__anonCompField_carl9170_cmd_head_198.__anonCompField___anonunion_1028_197.len = (unsigned char)((unsigned int)((unsigned char)__nreg) * 8U);
            #line 1669 
            __err = __carl9170_exec_cmd(__carl,__cmd,(_Bool)1);
            #line 1669 
            __cmd = (struct carl9170_cmd *)0;
            #line 1669 
            break;
          }
          #line 1669 
          goto __async_regwrite_out;
          #line 1669 
          break;
        }
    }
    #line 1671 
    i = 0;
    #line 1671 
    while ((skb->len + 3U) / 4U > (unsigned int)i) {
      #line 1677 
      if (old != (__le32 *)0U && *(data + (unsigned long)i) == *(old + (unsigned long)i)) 
        #line 1678 
        goto __Cont;
      #line 1680 
      word = *(data + (unsigned long)i);
      #line 1681 
      if (__cmd == (struct carl9170_cmd *)0) {
        #line 1681 
        __nreg = 0U;
        #line 1681 
        __cmd = carl9170_cmd_buf(__carl,(enum carl9170_cmd_oids)CARL9170_CMD_WREG_ASYNC,60U);
        #line 1681 
        if (__cmd == (struct carl9170_cmd *)0) {
          #line 1681 
          __err = -12;
          #line 1681 
          goto __async_regwrite_out;
        }
      }
      #line 1681 
      __cmd->__anonCompField_carl9170_cmd_199.wreg.regs[__nreg].addr = (unsigned int)(i * 4) + addr;
      #line 1681 
      __cmd->__anonCompField_carl9170_cmd_199.wreg.regs[__nreg].val = word;
      #line 1681 
      __nreg ++;
      #line 1681 
      if (__nreg > 6U) 
        #line 1681 
        while (1) {
          #line 1681 
          if (__cmd == (struct carl9170_cmd *)0 || __nreg == 0U) 
                                                                 #line 1681 
                                                                 break;
          #line 1681 
          if (__carl->state > (unsigned int)CARL9170_STOPPED && __nreg != 0U) {
            #line 1681 
            __cmd->hdr.__anonCompField_carl9170_cmd_head_198.__anonCompField___anonunion_1028_197.len = (unsigned char)((unsigned int)((unsigned char)__nreg) * 8U);
            #line 1681 
            __err = __carl9170_exec_cmd(__carl,__cmd,(_Bool)1);
            #line 1681 
            __cmd = (struct carl9170_cmd *)0;
            #line 1681 
            break;
          }
          #line 1681 
          goto __async_regwrite_out;
          #line 1681 
          break;
        }
      #line 1671 
      __Cont: 
              #line 1671 
      i ++;
    }
    #line 1683 
    __async_regwrite_out: 
                          #line 1683 
    ;
    #line 1683 
    if (__cmd != (struct carl9170_cmd *)0 && __err == 0) 
      #line 1683 
      while (1) {
        #line 1683 
        if (__cmd == (struct carl9170_cmd *)0 || __nreg == 0U) 
                                                               #line 1683 
                                                               break;
        #line 1683 
        if (__carl->state > (unsigned int)CARL9170_STOPPED && __nreg != 0U) {
          #line 1683 
          __cmd->hdr.__anonCompField_carl9170_cmd_head_198.__anonCompField___anonunion_1028_197.len = (unsigned char)((unsigned int)((unsigned char)__nreg) * 8U);
          #line 1683 
          __err = __carl9170_exec_cmd(__carl,__cmd,(_Bool)1);
          #line 1683 
          __cmd = (struct carl9170_cmd *)0;
          #line 1683 
          break;
        }
        #line 1683 
        goto __async_regwrite_out;
        #line 1683 
        break;
      }
    #line 1683 
    kfree((void *)__cmd);
    #line 1685 
    dev_kfree_skb_any(cvif->beacon);
    #line 1686 
    cvif->beacon = (struct sk_buff *)0;
    #line 1688 
    err = __err;
  }
  #line 1689 
  if (err == 0) 
                #line 1690 
                cvif->beacon = skb;
  #line 1691 
  cif_spin_unlock_bh_beacon_lock_of_ar9170(& ar->beacon_lock);
  #line 1692 
  if (err != 0) 
                #line 1693 
                goto err_free;
  #line 1695 
  if ((int)submit != 0) {
    #line 1696 
    err = carl9170_bcn_ctrl(ar,cvif->id,1U,addr,skb->len + 4U);
    #line 1700 
    if (err != 0) 
                  #line 1701 
                  goto err_free;
  }
  #line 1703 
  out_unlock: 
              #line 1703 
  ;
  #line 1704 
  rcu_read_unlock();
  #line 1705 
  return 0;
  #line 1707 
  err_unlock: 
              #line 1707 
  ;
  #line 1708 
  cif_spin_unlock_bh_beacon_lock_of_ar9170(& ar->beacon_lock);
  #line 1710 
  err_free: 
            #line 1710 
  ;
  #line 1711 
  rcu_read_unlock();
  #line 1712 
  dev_kfree_skb_any(skb);
  #line 1713 
  return err;
}

#line 155  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/tx.i.aux"
static unsigned long cif_find_first_bit(unsigned long *addr, unsigned long size)
{
  #line 158 
  return ldv_find_first_bit(addr,size);
}

#line 162  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/tx.i.aux"
static void atomic_add(int i, atomic_t *v)
{
  #line 165 
  ldv_atomic_add(i,v);
  #line 166 
  return;
}

#line 183  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/tx.i.aux"
static void atomic_inc_0(atomic_t *v)
{
  #line 186 
  ldv_atomic_inc(v);
  #line 187 
  return;
}

#line 190  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/tx.i.aux"
static void atomic_dec_0(atomic_t *v)
{
  #line 193 
  ldv_atomic_dec(v);
  #line 194 
  return;
}

#line 322  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/tx.i.aux"
static void *kmalloc_0(size_t size, gfp_t flags)
{
  #line 325 
  return ldv_kmalloc(size,flags);
}

#line 700  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/tx.i.aux"
static void cif_spin_lock_bh_NOT_ARG_SIGN(spinlock_t *lock)
{
  #line 703 
  ldv_spin_model_lock((char *)"NOT_ARG_SIGN");
  #line 705 
  spin_lock_bh_0(lock);
  #line 706 
  return;
}

#line 709  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/tx.i.aux"
static void cif_spin_unlock_bh_NOT_ARG_SIGN(spinlock_t *lock)
{
  #line 712 
  ldv_spin_model_unlock((char *)"NOT_ARG_SIGN");
  #line 714 
  spin_unlock_bh_0(lock);
  #line 715 
  return;
}

#line 809  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/tx.i.aux"
static void cif_spin_lock_bh_tx_stats_lock_of_ar9170(spinlock_t *lock)
{
  #line 812 
  ldv_spin_model_lock((char *)"tx_stats_lock_of_ar9170");
  #line 814 
  spin_lock_bh_0(lock);
  #line 815 
  return;
}

#line 818  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/tx.i.aux"
static void cif_spin_unlock_bh_tx_stats_lock_of_ar9170(spinlock_t *lock)
{
  #line 821 
  ldv_spin_model_unlock((char *)"tx_stats_lock_of_ar9170");
  #line 823 
  spin_unlock_bh_0(lock);
  #line 824 
  return;
}

#line 827  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/tx.i.aux"
static void cif_spin_lock_bh_mem_lock_of_ar9170(spinlock_t *lock)
{
  #line 830 
  ldv_spin_model_lock((char *)"mem_lock_of_ar9170");
  #line 832 
  spin_lock_bh_0(lock);
  #line 833 
  return;
}

#line 836  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/tx.i.aux"
static void cif_spin_unlock_bh_mem_lock_of_ar9170(spinlock_t *lock)
{
  #line 839 
  ldv_spin_model_unlock((char *)"mem_lock_of_ar9170");
  #line 841 
  spin_unlock_bh_0(lock);
  #line 842 
  return;
}

#line 845  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/tx.i.aux"
static void cif_spin_lock_bh_lock_of_carl9170_sta_tid(spinlock_t *lock)
{
  #line 848 
  ldv_spin_model_lock((char *)"lock_of_carl9170_sta_tid");
  #line 850 
  spin_lock_bh_0(lock);
  #line 851 
  return;
}

#line 854  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/tx.i.aux"
static void cif_spin_unlock_bh_lock_of_carl9170_sta_tid(spinlock_t *lock)
{
  #line 857 
  ldv_spin_model_unlock((char *)"lock_of_carl9170_sta_tid");
  #line 859 
  spin_unlock_bh_0(lock);
  #line 860 
  return;
}

#line 863  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/tx.i.aux"
static void cif_tasklet_hi_schedule_0(struct tasklet_struct *t)
{
  #line 867 
  emg_tasklet_hi_schedule(t);
  #line 868 
  return;
}

#line 871  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/tx.i.aux"
static void cif_spin_lock_bh_lock_of_sk_buff_head(spinlock_t *lock)
{
  #line 874 
  ldv_spin_model_lock((char *)"lock_of_sk_buff_head");
  #line 876 
  spin_lock_bh_0(lock);
  #line 877 
  return;
}

#line 880  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/tx.i.aux"
static void cif_spin_unlock_bh_lock_of_sk_buff_head(spinlock_t *lock)
{
  #line 883 
  ldv_spin_model_unlock((char *)"lock_of_sk_buff_head");
  #line 885 
  spin_unlock_bh_0(lock);
  #line 886 
  return;
}

#line 889  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/tx.i.aux"
static void cif_spin_lock_bh_beacon_lock_of_ar9170(spinlock_t *lock)
{
  #line 892 
  ldv_spin_model_lock((char *)"beacon_lock_of_ar9170");
  #line 894 
  spin_lock_bh_0(lock);
  #line 895 
  return;
}

#line 898  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/tx.i.aux"
static void cif_spin_unlock_bh_beacon_lock_of_ar9170(spinlock_t *lock)
{
  #line 901 
  ldv_spin_model_unlock((char *)"beacon_lock_of_ar9170");
  #line 903 
  spin_unlock_bh_0(lock);
  #line 904 
  return;
}

#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 23 
void *ldv_kzalloc(size_t size, gfp_t flags);
#line 668  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/slab.h"
#line 357  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/cmd.i.aux"
static void *kzalloc(size_t size, gfp_t flags);
#line 1718  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
#line 1718 
void _dev_info(struct device *, char * , ...);
#line 45  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/cmd.h"
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/cmd.c"
int carl9170_write_reg(struct ar9170 *ar, u32 reg, u32 val);
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/cmd.h"
#line 94  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/cmd.c"
int carl9170_read_reg(struct ar9170 *ar, u32 reg, u32 *val);
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/cmd.h"
#line 62  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/cmd.c"
int carl9170_read_mreg(struct ar9170 *ar, int nregs, u32 *regs, u32 *out);
#line 51  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/cmd.h"
#line 145  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/cmd.c"
int carl9170_mac_reset(struct ar9170 *ar);
#line 52  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/cmd.h"
#line 202  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/cmd.c"
int carl9170_powersave(struct ar9170 *ar, bool ps);
#line 53  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/cmd.h"
#line 169  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/cmd.c"
int carl9170_collect_tally(struct ar9170 *ar);
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/cmd.c"
int carl9170_write_reg(struct ar9170 *ar, u32 reg, u32 val)
{
  #line 49 
  int err;
  #line 45 
  __le32 buf[2U] = {reg, val};
  #line 51 
  err = carl9170_exec_cmd(ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,8U,(void *)(& buf),0U,(void *)0);
  #line 53 
  if (err != 0) {
    #line 54 
    if (net_ratelimit() != 0) 
                              #line 55 
                              _dev_err(& ((ar->hw)->wiphy)->dev,(char *)"writing reg %#x ",reg,val,err);
  }
  #line 59 
  return err;
}

#line 62  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/cmd.c"
int carl9170_read_mreg(struct ar9170 *ar, int nregs, u32 *regs, u32 *out)
{
  #line 65 
  int i;
  #line 65 
  int err;
  #line 66 
  __le32 *offs;
  #line 66 
  __le32 *res;
  #line 69 
  offs = out;
  #line 70 
  i = 0;
  #line 70 
  while (i < nregs) {
    #line 71 
    *(offs + (unsigned long)i) = *(regs + (unsigned long)i);
    #line 70 
    i ++;
  }
  #line 74 
  res = out;
  #line 76 
  err = carl9170_exec_cmd(ar,(enum carl9170_cmd_oids)CARL9170_CMD_RREG,(unsigned int)(nregs * 4),(void *)offs,(unsigned int)(nregs * 4),(void *)res);
  #line 79 
  if (err != 0) {
    #line 80 
    if (net_ratelimit() != 0) 
                              #line 81 
                              _dev_err(& ((ar->hw)->wiphy)->dev,(char *)"reading regs failed (%d)\n",err);
    #line 84 
    return err;
  }
  #line 88 
  i = 0;
  #line 88 
  while (i < nregs) {
    #line 89 
    *(out + (unsigned long)i) = *(res + (unsigned long)i);
    #line 88 
    i ++;
  }
  #line 91 
  return 0;
}

#line 94  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/cmd.c"
int carl9170_read_reg(struct ar9170 *ar, u32 reg, u32 *val)
{
  #line 96 
  return carl9170_read_mreg(ar,1,& reg,val);
}

#line 99  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/cmd.c"
int carl9170_echo_test(struct ar9170 *ar, u32 v)
{
  #line 101 
  u32 echores;
  #line 102 
  int err;
  #line 104 
  err = carl9170_exec_cmd(ar,(enum carl9170_cmd_oids)CARL9170_CMD_ECHO,4U,(void *)(& v),4U,(void *)(& echores));
  #line 107 
  if (err != 0) 
                #line 108 
                return err;
  #line 110 
  if (v != echores) {
    #line 111 
    _dev_info(& ((ar->hw)->wiphy)->dev,(char *)"wrong echo %x != %x",v,echores);
    #line 112 
    return -22;
  }
  #line 115 
  return 0;
}

#line 118  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/cmd.c"
struct carl9170_cmd *carl9170_cmd_buf(struct ar9170 *ar, enum carl9170_cmd_oids cmd, unsigned int len)
{
  #line 121 
  struct carl9170_cmd *tmp;
  #line 123 
  tmp = (struct carl9170_cmd *)kzalloc((unsigned long)len + 4UL,2592U);
  #line 124 
  if (tmp != (struct carl9170_cmd *)0) {
    #line 125 
    tmp->hdr.__anonCompField_carl9170_cmd_head_198.__anonCompField___anonunion_1028_197.cmd = (unsigned char)cmd;
    #line 126 
    tmp->hdr.__anonCompField_carl9170_cmd_head_198.__anonCompField___anonunion_1028_197.len = (unsigned char)len;
  }
  #line 129 
  return tmp;
}

#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/cmd.c"
int carl9170_reboot(struct ar9170 *ar)
{
  #line 134 
  struct carl9170_cmd *cmd;
  #line 135 
  int err;
  #line 137 
  cmd = carl9170_cmd_buf(ar,(enum carl9170_cmd_oids)CARL9170_CMD_REBOOT_ASYNC,0U);
  #line 138 
  if (cmd == (struct carl9170_cmd *)0) 
                                       #line 139 
                                       return -12;
  #line 141 
  err = __carl9170_exec_cmd(ar,cmd,(_Bool)1);
  #line 142 
  return err;
}

#line 145  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/cmd.c"
int carl9170_mac_reset(struct ar9170 *ar)
{
  #line 147 
  return carl9170_exec_cmd(ar,(enum carl9170_cmd_oids)CARL9170_CMD_SWRST,0U,
                        (void *)0,0U,(void *)0);
}

#line 151  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/cmd.c"
int carl9170_bcn_ctrl(struct ar9170 *ar, unsigned int vif_id, u32 mode, u32 addr, u32 len)
{
  #line 154 
  struct carl9170_cmd *cmd;
  #line 156 
  cmd = carl9170_cmd_buf(ar,(enum carl9170_cmd_oids)CARL9170_CMD_BCN_CTRL_ASYNC,16U);
  #line 158 
  if (cmd == (struct carl9170_cmd *)0) 
                                       #line 159 
                                       return -12;
  #line 161 
  cmd->__anonCompField_carl9170_cmd_199.bcn_ctrl.vif_id = vif_id;
  #line 162 
  cmd->__anonCompField_carl9170_cmd_199.bcn_ctrl.mode = mode;
  #line 163 
  cmd->__anonCompField_carl9170_cmd_199.bcn_ctrl.bcn_addr = addr;
  #line 164 
  cmd->__anonCompField_carl9170_cmd_199.bcn_ctrl.bcn_len = len;
  #line 166 
  return __carl9170_exec_cmd(ar,cmd,(_Bool)1);
}

#line 169  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/cmd.c"
int carl9170_collect_tally(struct ar9170 *ar)
{
  #line 171 
  struct carl9170_tally_rsp tally;
  #line 172 
  struct survey_info *info;
  #line 173 
  unsigned int tick;
  #line 174 
  int err;
  #line 176 
  err = carl9170_exec_cmd(ar,(enum carl9170_cmd_oids)CARL9170_CMD_TALLY,0U,(void *)0,24U,(void *)(& tally));
  #line 178 
  if (err != 0) 
                #line 179 
                return err;
  #line 181 
  tick = tally.tick;
  #line 182 
  if (tick != 0U) {
    #line 183 
    ar->tally.active += (unsigned long long)(tally.active / tick);
    #line 184 
    ar->tally.cca += (unsigned long long)(tally.cca / tick);
    #line 185 
    ar->tally.tx_time += (unsigned long long)(tally.tx_time / tick);
    #line 186 
    ar->tally.rx_total += (unsigned long long)tally.rx_total;
    #line 187 
    ar->tally.rx_overrun += (unsigned long long)tally.rx_overrun;
    #line 189 
    if (ar->channel != (struct ieee80211_channel *)0) {
      #line 190 
      info = ar->survey + (unsigned long)(ar->channel)->hw_value;
      #line 191 
      info->time = ar->tally.active;
      #line 192 
      info->time_busy = ar->tally.cca;
      #line 193 
      info->time_tx = ar->tally.tx_time;
      {
        #line 194 
        uint32_t __rem;
        #line 194 
        uint32_t __base = 1000U;
        #line 194 
        __rem = (unsigned int)(info->time % (unsigned long long)__base);
        #line 194 
        info->time /= (unsigned long long)__base;
        #line 194 
        uint32_t tmp = __rem;
      }
      {
        #line 195 
        uint32_t __rem_0;
        #line 195 
        uint32_t __base_0 = 1000U;
        #line 195 
        __rem_0 = (unsigned int)(info->time_busy % (unsigned long long)__base_0);
        #line 195 
        info->time_busy /= (unsigned long long)__base_0;
        #line 195 
        uint32_t tmp_3 = __rem_0;
      }
      {
        #line 196 
        uint32_t __rem_1;
        #line 196 
        uint32_t __base_1 = 1000U;
        #line 196 
        __rem_1 = (unsigned int)(info->time_tx % (unsigned long long)__base_1);
        #line 196 
        info->time_tx /= (unsigned long long)__base_1;
        #line 196 
        uint32_t tmp_5 = __rem_1;
      }
    }
  }
  #line 199 
  return 0;
}

#line 202  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/cmd.c"
int carl9170_powersave(struct ar9170 *ar, bool ps)
{
  #line 204 
  struct carl9170_cmd *cmd;
  #line 205 
  u32 state;
  #line 207 
  cmd = carl9170_cmd_buf(ar,(enum carl9170_cmd_oids)CARL9170_CMD_PSM_ASYNC,4U);
  #line 209 
  if (cmd == (struct carl9170_cmd *)0) 
                                       #line 210 
                                       return -12;
  #line 212 
  if ((int)ps != 0) 
                    #line 214 
                    state = 4097U; else 
                                        #line 217 
                                        state = 1U;
  #line 220 
  cmd->__anonCompField_carl9170_cmd_199.psm.state = state;
  #line 221 
  return __carl9170_exec_cmd(ar,cmd,(_Bool)1);
}

#line 357  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/cmd.i.aux"
static void *kzalloc(size_t size, gfp_t flags)
{
  #line 360 
  return ldv_kzalloc(size,flags);
}

/* compiler builtin: 
   unsigned long __builtin_object_size(void *, int);   */
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/arch_hweight.h"
__inline static unsigned long __arch_hweight64(__u64 w)
{
  #line 45 
  unsigned long res;
  #line 46 
  ldv_inline_asm();
  #line 51 
  return res;
}

#line 70  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bitops.h"
__inline static unsigned long hweight_long(unsigned long w)
{
  #line 72 
  unsigned long tmp_0;
  #line 72 
  if (0 != 0) 
              #line 72 
              tmp_0 = (unsigned long)((((unsigned int)((((((((((unsigned long long)w & 1ULL) != 0ULL) + (((unsigned long long)w & 2ULL) != 0ULL)) + (((unsigned long long)w & 4ULL) != 0ULL)) + (((unsigned long long)w & 8ULL) != 0ULL)) + (((unsigned long long)w & 16ULL) != 0ULL)) + (((unsigned long long)w & 32ULL) != 0ULL)) + (((unsigned long long)w & 64ULL) != 0ULL)) + (((unsigned long long)w & 128ULL) != 0ULL)) + (unsigned int)(((((((((w & 256UL) != 0UL) + ((w & 512UL) != 0UL)) + ((w & 1024UL) != 0UL)) + ((w & 2048UL) != 0UL)) + ((w & 4096UL) != 0UL)) + ((w & 8192UL) != 0UL)) + ((w & 16384UL) != 0UL)) + ((w & 32768UL) != 0UL))) + ((unsigned int)(((((((((w & 65536UL) != 0UL) + ((w & 131072UL) != 0UL)) + ((w & 262144UL) != 0UL)) + ((w & 524288UL) != 0UL)) + ((w & 1048576UL) != 0UL)) + ((w & 2097152UL) != 0UL)) + ((w & 4194304UL) != 0UL)) + ((w & 8388608UL) != 0UL)) + (unsigned int)(((((((((w & 16777216UL) != 0UL) + ((w & 33554432UL) != 0UL)) + ((w & 67108864UL) != 0UL)) + ((w & 134217728UL) != 0UL)) + ((w & 268435456UL) != 0UL)) + ((w & 536870912UL) != 0UL)) + ((w & 1073741824UL) != 0UL)) + ((w & 2147483648UL) != 0UL)))) + (((unsigned int)(((((((((w & 4294967296UL) != 0UL) + ((w & 8589934592UL) != 0UL)) + ((w & 17179869184UL) != 0UL)) + ((w & 34359738368UL) != 0UL)) + ((w & 68719476736UL) != 0UL)) + ((w & 137438953472UL) != 0UL)) + ((w & 274877906944UL) != 0UL)) + ((w & 549755813888UL) != 0UL)) + (unsigned int)(((((((((w & 1099511627776UL) != 0UL) + ((w & 2199023255552UL) != 0UL)) + ((w & 4398046511104UL) != 0UL)) + ((w & 8796093022208UL) != 0UL)) + ((w & 17592186044416UL) != 0UL)) + ((w & 35184372088832UL) != 0UL)) + ((w & 70368744177664UL) != 0UL)) + ((w & 140737488355328UL) != 0UL))) + ((unsigned int)(((((((((w & 281474976710656UL) != 0UL) + ((w & 562949953421312UL) != 0UL)) + ((w & 1125899906842624UL) != 0UL)) + ((w & 2251799813685248UL) != 0UL)) + ((w & 4503599627370496UL) != 0UL)) + ((w & 9007199254740992UL) != 0UL)) + ((w & 18014398509481984UL) != 0UL)) + ((w & 36028797018963968UL) != 0UL)) + (unsigned int)(((((((((w & 72057594037927936UL) != 0UL) + ((w & 144115188075855872UL) != 0UL)) + ((w & 288230376151711744UL) != 0UL)) + ((w & 576460752303423488UL) != 0UL)) + ((w & 1152921504606846976UL) != 0UL)) + ((w & 2305843009213693952UL) != 0UL)) + ((w & 4611686018427387904UL) != 0UL)) + ((w & 9223372036854775808UL) != 0UL))))); else 
                                                                    #line 72 
                                                                    tmp_0 = __arch_hweight64((unsigned long long)w);
  #line 72 
  return tmp_0;
}

#line 472  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernel.h"
#line 472 
int snprintf(char *, size_t, char * , ...);
#line 487 
#line 487 
int sscanf(char *, char * , ...);
#line 151  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bitmap.h"
#line 151 
int __bitmap_weight(unsigned long *, unsigned int);
#line 388  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bitmap.h"
__inline static int bitmap_weight(unsigned long *src, unsigned int nbits)
{
  #line 390 
  if (0 != 0 && nbits + 4294967295U <= 63U) {
    #line 391 
    return (int)hweight_long(*src & (18446744073709551615UL >> (- nbits & 63U)));
  }
  #line 392 
  return __bitmap_weight(src,nbits);
}

#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/cmpxchg_64.h"
__inline static int arch_atomic_read_1(atomic_t *v)
{
  #line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/atomic.h"
  union __anonunion___u_3234 __u;
  #line 31 
  __read_once_size((void *)(& v->counter),(void *)(& __u.__c),4);
  #line 31 
  return (__u.__val);
}

#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/atomic-instrumented.h"
__inline static int atomic_read_1(atomic_t *v)
{
  #line 26 
  kasan_check_read((void *)v,4U);
  #line 27 
  return arch_atomic_read_1(v);
}

#line 112  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/thread_info.h"
#line 112 
void __check_object_size(void *, unsigned long, bool);
#line 115  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/thread_info.h"
__inline static void check_object_size(void *ptr, unsigned long n, bool to_user)
{
  #line 118 
  if (0 == 0) 
              #line 119 
              __check_object_size(ptr,n,(_Bool)((bool)((int)to_user) != 0));
  #line 120 
  return;
}

#line 128 
#line 128 
void __bad_copy_from(void);
#line 130 
#line 130 
void __bad_copy_to(void);
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/thread_info.h"
__inline static void copy_overflow(int size, unsigned long count)
{
  #line 134 
  int __ret_warn_on = 1;
  #line 134 
  if ((long)(__ret_warn_on != 0) != 0L) {
    #line 134 
    __warn_printk((char *)"Buffer overflow detected (%d < %lu)!\n",size,count);
    #line 135 
    ldv_inline_asm();
    #line 136 
    ldv_inline_asm();
  }
  #line 134 
  long tmp = (long)(__ret_warn_on != 0);
  #line 136 
  return;
}

#line 138  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/thread_info.h"
__inline static bool check_copy_size(void *addr, size_t bytes, bool is_source)
{
  #line 150 
  int __ret_warn_on;
  #line 140 
  int sz = (int)__builtin_object_size(addr,0);
  #line 141 
  if ((long)(sz >= 0) != 0L && (long)((unsigned long)sz < bytes) != 0L) {
    #line 142 
    if (0 == 0) 
                #line 143 
                copy_overflow(sz,bytes);
    else 
      #line 144 
      if ((int)is_source != 0) 
                               #line 145 
                               __bad_copy_from(); else 
                                                       #line 147 
                                                       __bad_copy_to();
    #line 148 
    return (_Bool)0;
  }
  #line 150 
  __ret_warn_on = bytes > 2147483647UL;
  #line 150 
  if ((long)(__ret_warn_on != 0) != 0L) {
    #line 151 
    ldv_inline_asm();
    #line 152 
    ldv_inline_asm();
  }
  #line 150 
  if ((long)((long)(__ret_warn_on != 0)) != 0L) 
                                                #line 151 
                                                return (_Bool)0;
  #line 152 
  check_object_size(addr,bytes,(_Bool)((bool)((int)is_source) != 0));
  #line 153 
  return (_Bool)1;
}

#line 341  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
static void spin_lock_bh_1(spinlock_t *lock)
{
  #line 343 
  _raw_spin_lock_bh(& lock->__anonCompField_spinlock_25.rlock);
  #line 344 
  return;
}

#line 345 
#line 868  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/debug.i.aux"
static void cif_spin_lock_bh_mem_lock_of_ar9170_0(spinlock_t *lock);
#line 345  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
#line 886  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/debug.i.aux"
static void cif_spin_lock_bh_tx_stats_lock_of_ar9170_0(spinlock_t *lock);
#line 345  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
#line 904  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/debug.i.aux"
static void cif_spin_lock_bh_lock_of_carl9170_sta_tid_0(spinlock_t *lock);
#line 345  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
#line 922  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/debug.i.aux"
static void cif_spin_lock_bh_lock_of_sk_buff_head_0(spinlock_t *lock);
#line 381  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
static void spin_unlock_bh_1(spinlock_t *lock)
{
  #line 383 
  _raw_spin_unlock_bh(& lock->__anonCompField_spinlock_25.rlock);
  #line 384 
  return;
}

#line 385 
#line 877  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/debug.i.aux"
static void cif_spin_unlock_bh_mem_lock_of_ar9170_0(spinlock_t *lock);
#line 385  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
#line 895  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/debug.i.aux"
static void cif_spin_unlock_bh_tx_stats_lock_of_ar9170_0(spinlock_t *lock);
#line 385  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
#line 913  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/debug.i.aux"
static void cif_spin_unlock_bh_lock_of_carl9170_sta_tid_0(spinlock_t *lock);
#line 385  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
#line 931  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/debug.i.aux"
static void cif_spin_unlock_bh_lock_of_sk_buff_head_0(spinlock_t *lock);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 23 
int ldv_undef_int(void);
#line 26  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/debug.i.aux"
#line 828 
static void cif_mutex_lock_mutex_of_ar9170_0(struct mutex *lock);
#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/vmalloc.h"
#line 21 
void *ldv_vmalloc(unsigned long size);
#line 23 
#line 23 
void ldv_vfree(void *addr);
#line 184  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mutex.h"
#line 849  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/debug.i.aux"
static int cif_mutex_trylock_mutex_of_ar9170(struct mutex *lock);
#line 185  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mutex.h"
#line 842  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/debug.i.aux"
static void cif_mutex_unlock_mutex_of_ar9170_0(struct mutex *lock);
#line 291  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jiffies.h"
#line 291 
unsigned int jiffies_to_msecs(unsigned long);
#line 104  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/vmalloc.h"
#line 821  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/debug.i.aux"
static void *cif_vmalloc(unsigned long size);
#line 130  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/vmalloc.h"
#line 835  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/debug.i.aux"
static void cif_vfree(void *addr);
#line 121  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uaccess.h"
#line 121 
unsigned long _copy_from_user(void *, void *, unsigned long);
#line 141  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uaccess.h"
__inline static unsigned long copy_from_user(void *to, void *from, unsigned long n)
{
  #line 143 
  if ((long)((int)check_copy_size(to,n,(_Bool)0) != 0) != 0L) 
                                                              #line 144 
                                                              n = _copy_from_user(to,from,n);
  #line 145 
  return n;
}

#line 3300  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
#line 3300 
int simple_open(struct inode *, struct file *);
#line 3337 
#line 3337 
ssize_t simple_read_from_buffer(void *, size_t, loff_t *, void *, size_t);
#line 66  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/debugfs.h"
#line 948  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/debug.i.aux"
static struct dentry *cif_debugfs_create_file(char *name, umode_t mode, struct dentry *parent, void *data, struct file_operations *fops);
#line 76  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/debugfs.h"
#line 940  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/debug.i.aux"
static struct dentry *cif_debugfs_create_dir(char *name, struct dentry *parent);
#line 85  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/debugfs.h"
#line 85 
void debugfs_remove_recursive(struct dentry *);
#line 87 
#line 87 
struct file_operations *debugfs_real_fops(struct file *);
#line 266  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
__inline static bool ieee80211_has_tods(__le16 fc)
{
  #line 268 
  return (_Bool)(((int)fc & 256) != 0);
}

#line 3148  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
__inline static u8 *ieee80211_get_DA(struct ieee80211_hdr *hdr)
{
  #line 3150 
  if ((int)ieee80211_has_tods((unsigned short)((int)hdr->frame_control)) != 0) 
    #line 3151 
    return (u8 *)(& hdr->addr3); else 
                                      #line 3153 
                                      return (u8 *)(& hdr->addr1);
}

#line 609  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
__inline static enum nl80211_channel_type cfg80211_get_chandef_type(struct cfg80211_chan_def *chandef)
{
  #line 611 
  switch ((unsigned int)chandef->width) {
    #line 612 
    case (unsigned int)0: 
                          #line 612 
    ;
    #line 613 
    return NL80211_CHAN_NO_HT;
    #line 614 
    case (unsigned int)1: 
                          #line 614 
    ;
    #line 615 
    return NL80211_CHAN_HT20;
    #line 616 
    case (unsigned int)2: 
                          #line 616 
    ;
    #line 617 
    if (chandef->center_freq1 > (chandef->chan)->center_freq) 
                                                              #line 618 
                                                              return NL80211_CHAN_HT40PLUS;
    #line 619 
    return NL80211_CHAN_HT40MINUS;
    #line 620 
    default: 
             #line 620 
    ;
    {
      #line 621 
      int __ret_warn_on = 1;
      #line 621 
      if ((long)(__ret_warn_on != 0) != 0L) {
        #line 622 
        ldv_inline_asm();
        #line 623 
        ldv_inline_asm();
      }
      #line 621 
      long tmp = (long)(__ret_warn_on != 0);
    }
    #line 622 
    return NL80211_CHAN_NO_HT;
  }
}

#line 62  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.h"
static struct hw_stat_reg_entry hw_rx_tally_regs[8U] = {{.reg = 1848996U, .nreg = {(char)'R', (char)'X', (char)'_', (char)'C', (char)'R', (char)'C', (char)'3', (char)'2'}}, {.reg = 1849000U, .nreg = {(char)'R', (char)'X', (char)'_', (char)'C', (char)'R', (char)'C', (char)'1', (char)'6'}}, {.reg = 1848988U, .nreg = {(char)'R', (char)'X', (char)'_', (char)'T', (char)'I', (char)'M', (char)'E', (char)'O', (char)'U', (char)'T', (char)'_', (char)'C', (char)'O', (char)'U', (char)'N', (char)'T'}}, {.reg = 1849004U, .nreg = {(char)'R', (char)'X', (char)'_', (char)'E', (char)'R', (char)'R', (char)'_', (char)'D', (char)'E', (char)'C', (char)'R', (char)'Y', (char)'P', (char)'T', (char)'I', (char)'O', (char)'N', (char)'_', (char)'U', (char)'N', (char)'I'}}, {.reg = 1849020U, .nreg = {(char)'R', (char)'X', (char)'_', (char)'E', (char)'R', (char)'R', (char)'_', (char)'D', (char)'E', (char)'C', (char)'R', (char)'Y', (char)'P', (char)'T', (char)'I', (char)'O', (char)'N', (char)'_', (char)'M', (char)'U', (char)'L'}}, {.reg = 1850528U, .nreg = {(char)'R', (char)'X', (char)'_', (char)'M', (char)'P', (char)'D', (char)'U'}}, {.reg = 1850532U, .nreg = {(char)'R', (char)'X', (char)'_', (char)'D', (char)'R', (char)'O', (char)'P', (char)'P', (char)'E', (char)'D', (char)'_', (char)'M', (char)'P', (char)'D', (char)'U'}}, {.reg = 1850536U, .nreg = {(char)'R', (char)'X', (char)'_', (char)'D', (char)'E', (char)'L', (char)'_', (char)'M', (char)'P', (char)'D', (char)'U'}}};
#line 69  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.h"
static struct hw_stat_reg_entry hw_phy_errors_regs[6U] = {{.reg = 1850540U, .nreg = {(char)'R', (char)'X', (char)'_', (char)'P', (char)'H', (char)'Y', (char)'_', (char)'M', (char)'I', (char)'S', (char)'C', (char)'_', (char)'E', (char)'R', (char)'R', (char)'O', (char)'R'}}, {.reg = 1850544U, .nreg = {(char)'R', (char)'X', (char)'_', (char)'P', (char)'H', (char)'Y', (char)'_', (char)'X', (char)'R', (char)'_', (char)'E', (char)'R', (char)'R', (char)'O', (char)'R'}}, {.reg = 1850548U, .nreg = {(char)'R', (char)'X', (char)'_', (char)'P', (char)'H', (char)'Y', (char)'_', (char)'O', (char)'F', (char)'D', (char)'M', (char)'_', (char)'E', (char)'R', (char)'R', (char)'O', (char)'R'}}, {.reg = 1850552U, .nreg = {(char)'R', (char)'X', (char)'_', (char)'P', (char)'H', (char)'Y', (char)'_', (char)'C', (char)'C', (char)'K', (char)'_', (char)'E', (char)'R', (char)'R', (char)'O', (char)'R'}}, {.reg = 1850556U, .nreg = {(char)'R', (char)'X', (char)'_', (char)'P', (char)'H', (char)'Y', (char)'_', (char)'H', (char)'T', (char)'_', (char)'E', (char)'R', (char)'R', (char)'O', (char)'R'}}, {.reg = 1850560U, .nreg = {(char)'R', (char)'X', (char)'_', (char)'P', (char)'H', (char)'Y', (char)'_', (char)'T', (char)'O', (char)'T', (char)'A', (char)'L'}}};
#line 75  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.h"
static struct hw_stat_reg_entry hw_tx_tally_regs[3U] = {{.reg = 1849076U, .nreg = {(char)'T', (char)'X', (char)'_', (char)'T', (char)'O', (char)'T', (char)'A', (char)'L'}}, {.reg = 1848968U, .nreg = {(char)'T', (char)'X', (char)'_', (char)'U', (char)'N', (char)'D', (char)'E', (char)'R', (char)'R', (char)'U', (char)'N'}}, {.reg = 1849036U, .nreg = {(char)'T', (char)'X', (char)'_', (char)'R', (char)'E', (char)'T', (char)'R', (char)'Y'}}};
#line 80  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.h"
static struct hw_stat_reg_entry hw_wlan_queue_regs[12U] = {{.reg = 1850684U, .nreg = {(char)'D', (char)'M', (char)'A', (char)'_', (char)'S', (char)'T', (char)'A', (char)'T', (char)'U', (char)'S'}}, {.reg = 1850672U, .nreg = {(char)'D', (char)'M', (char)'A', (char)'_', (char)'T', (char)'R', (char)'I', (char)'G', (char)'G', (char)'E', (char)'R'}}, {.reg = 1850624U, .nreg = {(char)'D', (char)'M', (char)'A', (char)'_', (char)'T', (char)'X', (char)'Q', (char)'0', (char)'_', (char)'A', (char)'D', (char)'D', (char)'R'}}, {.reg = 1850628U, .nreg = {(char)'D', (char)'M', (char)'A', (char)'_', (char)'T', (char)'X', (char)'Q', (char)'0', (char)'_', (char)'C', (char)'U', (char)'R', (char)'R', (char)'_', (char)'A', (char)'D', (char)'D', (char)'R'}}, {.reg = 1850632U, .nreg = {(char)'D', (char)'M', (char)'A', (char)'_', (char)'T', (char)'X', (char)'Q', (char)'1', (char)'_', (char)'A', (char)'D', (char)'D', (char)'R'}}, {.reg = 1850636U, .nreg = {(char)'D', (char)'M', (char)'A', (char)'_', (char)'T', (char)'X', (char)'Q', (char)'1', (char)'_', (char)'C', (char)'U', (char)'R', (char)'R', (char)'_', (char)'A', (char)'D', (char)'D', (char)'R'}}, {.reg = 1850640U, .nreg = {(char)'D', (char)'M', (char)'A', (char)'_', (char)'T', (char)'X', (char)'Q', (char)'2', (char)'_', (char)'A', (char)'D', (char)'D', (char)'R'}}, {.reg = 1850644U, .nreg = {(char)'D', (char)'M', (char)'A', (char)'_', (char)'T', (char)'X', (char)'Q', (char)'2', (char)'_', (char)'C', (char)'U', (char)'R', (char)'R', (char)'_', (char)'A', (char)'D', (char)'D', (char)'R'}}, {.reg = 1850648U, .nreg = {(char)'D', (char)'M', (char)'A', (char)'_', (char)'T', (char)'X', (char)'Q', (char)'3', (char)'_', (char)'A', (char)'D', (char)'D', (char)'R'}}, {.reg = 1850652U, .nreg = {(char)'D', (char)'M', (char)'A', (char)'_', (char)'T', (char)'X', (char)'Q', (char)'3', (char)'_', (char)'C', (char)'U', (char)'R', (char)'R', (char)'_', (char)'A', (char)'D', (char)'D', (char)'R'}}, {.reg = 1850664U, .nreg = {(char)'D', (char)'M', (char)'A', (char)'_', (char)'R', (char)'X', (char)'Q', (char)'_', (char)'A', (char)'D', (char)'D', (char)'R'}}, {.reg = 1850668U, .nreg = {(char)'D', (char)'M', (char)'A', (char)'_', (char)'R', (char)'X', (char)'Q', (char)'_', (char)'C', (char)'U', (char)'R', (char)'R', (char)'_', (char)'A', (char)'D', (char)'D', (char)'R'}}};
#line 89  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.h"
static struct hw_stat_reg_entry hw_ampdu_info_regs[2U] = {{.reg = 1850272U, .nreg = {(char)'A', (char)'M', (char)'P', (char)'D', (char)'U', (char)'_', (char)'D', (char)'E', (char)'N', (char)'S', (char)'I', (char)'T', (char)'Y'}}, {.reg = 1850268U, .nreg = {(char)'A', (char)'M', (char)'P', (char)'D', (char)'U', (char)'_', (char)'F', (char)'A', (char)'C', (char)'T', (char)'O', (char)'R'}}};
#line 93  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.h"
static struct hw_stat_reg_entry hw_pta_queue_regs[6U] = {{.reg = 1974588U, .nreg = {(char)'D', (char)'N', (char)'_', (char)'C', (char)'U', (char)'R', (char)'R', (char)'_', (char)'A', (char)'D', (char)'D', (char)'R', (char)'H'}}, {.reg = 1974584U, .nreg = {(char)'D', (char)'N', (char)'_', (char)'C', (char)'U', (char)'R', (char)'R', (char)'_', (char)'A', (char)'D', (char)'D', (char)'R', (char)'L'}}, {.reg = 1974596U, .nreg = {(char)'U', (char)'P', (char)'_', (char)'C', (char)'U', (char)'R', (char)'R', (char)'_', (char)'A', (char)'D', (char)'D', (char)'R', (char)'H'}}, {.reg = 1974592U, .nreg = {(char)'U', (char)'P', (char)'_', (char)'C', (char)'U', (char)'R', (char)'R', (char)'_', (char)'A', (char)'D', (char)'D', (char)'R', (char)'L'}}, {.reg = 1974580U, .nreg = {(char)'D', (char)'M', (char)'A', (char)'_', (char)'S', (char)'T', (char)'A', (char)'T', (char)'U', (char)'S'}}, {.reg = 1974600U, .nreg = {(char)'D', (char)'M', (char)'A', (char)'_', (char)'M', (char)'O', (char)'D', (char)'E', (char)'_', (char)'C', (char)'T', (char)'R', (char)'L'}}};
#line 132 
#line 813  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
void carl9170_debugfs_register(struct ar9170 *ar);
#line 133  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.h"
#line 883  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
void carl9170_debugfs_unregister(struct ar9170 *ar);
#line 599  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/carl9170.h"
#line 599 
int carl9170_set_channel(struct ar9170 *ar, struct ieee80211_channel *channel, enum nl80211_channel_type _bw);
#line 601 
#line 601 
int carl9170_get_noisefloor(struct ar9170 *ar);
#line 648  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/carl9170.h"
__inline static struct ieee80211_vif *carl9170_get_main_vif(struct ar9170 *ar)
{
  #line 652 
  void *__mptr;
  #line 650 
  struct carl9170_vif_info *cvif;
  {
    #line 652 
    bool __warned;
    #line 652 
    if (debug_lockdep_rcu_enabled() != 0) 
      #line 652 
      if (! __warned) {
        #line 652 
        if (rcu_read_lock_any_held() == 0) {
          #line 652 
          __warned = (_Bool)1;
          #line 652 
          lockdep_rcu_suspicious((char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/carl9170.h",652,(char *)"RCU-list traversed in non-reader section!");
        }
      }
  }
  {
    #line 653 
    union __anonunion___u_4210 __u;
    #line 652 
    __read_once_size((void *)(& ar->vif_list.next),(void *)(& __u.__c),8);
    #line 652 
    __mptr = (void *)(__u.__val);
    }
  #line 655 
  cvif = ((struct carl9170_vif_info *)__mptr);
  #line 652 
  while (& cvif->list != & ar->vif_list) {
    #line 652 
    void *__mptr_0;
    #line 653 
    if ((int)cvif->active != 0) {
      #line 654 
      return carl9170_get_vif(cvif);
    }
    {
      #line 653 
      union __anonunion___u_4212 __u_0;
      #line 652 
      __read_once_size((void *)(& cvif->list.next),(void *)(& __u_0.__c),8);
      #line 652 
      __mptr_0 = (void *)(__u_0.__val);
      }
    #line 652 
    cvif = ((struct carl9170_vif_info *)__mptr_0);
  }
  #line 657 
  return (struct ieee80211_vif *)0;
}

#line 62  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
static ssize_t carl9170_debugfs_read(struct file *file, char *userbuf, size_t count, loff_t *ppos)
{
  #line 78 
  void *__mptr;
  #line 65 
  struct carl9170_debugfs_fops *dfops;
  #line 66 
  struct ar9170 *ar;
  #line 67 
  char *buf = (char *)0;
  #line 67 
  char *res_buf = (char *)0;
  #line 68 
  ssize_t ret = 0L;
  #line 69 
  int err = 0;
  #line 71 
  if (count == 0UL) 
                    #line 72 
                    return 0L;
  #line 74 
  ar = (struct ar9170 *)file->private_data;
  #line 76 
  if (ar == (struct ar9170 *)0) 
                                #line 77 
                                return -19L;
  #line 78 
  __mptr = (void *)debugfs_real_fops(file);
  #line 78 
  dfops = ((struct carl9170_debugfs_fops *)(__mptr + 18446744073709551592U));
  #line 81 
  if (dfops->read == (char *(*)(struct ar9170 *, char *, size_t , ssize_t *))0) 
    #line 82 
    return -38L;
  #line 84 
  if (dfops->read_bufsize != 0U) {
    #line 85 
    buf = (char *)cif_vmalloc((unsigned long)dfops->read_bufsize);
    #line 86 
    if (buf == (char *)0) 
                          #line 87 
                          return -12L;
  }
  #line 90 
  cif_mutex_lock_mutex_of_ar9170_0(& ar->mutex);
  #line 91 
  if (ar->state < dfops->req_dev_state) {
    #line 92 
    err = -19;
    #line 93 
    res_buf = buf;
    #line 94 
    goto out_free;
  }
  #line 97 
  res_buf = (*(dfops->read))(ar,buf,(unsigned long)dfops->read_bufsize,& ret);
  #line 99 
  if (ret > 0L) {
    #line 100 
    err = (int)simple_read_from_buffer((void *)userbuf,count,ppos,(void *)res_buf,
                                (unsigned long)ret);
  }
  else 
       #line 103 
       err = (int)ret;
  {
    #line 105 
    int __ret_warn_on = (dfops->read_bufsize != 0U && res_buf != buf) != 0;
    #line 105 
    if ((long)(__ret_warn_on != 0) != 0L) {
      #line 106 
      ldv_inline_asm();
      #line 107 
      ldv_inline_asm();
    }
    #line 105 
    long tmp_3 = (long)(__ret_warn_on != 0);
  }
  #line 107 
  out_free: 
            #line 107 
  ;
  #line 108 
  cif_vfree((void *)res_buf);
  #line 109 
  cif_mutex_unlock_mutex_of_ar9170_0(& ar->mutex);
  #line 110 
  return (long)err;
}

#line 113  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
static ssize_t carl9170_debugfs_write(struct file *file, char *userbuf, size_t count, loff_t *ppos)
{
  #line 131 
  void *__mptr;
  #line 116 
  struct carl9170_debugfs_fops *dfops;
  #line 117 
  struct ar9170 *ar;
  #line 118 
  char *buf = (char *)0;
  #line 119 
  int err = 0;
  #line 121 
  if (count == 0UL) 
                    #line 122 
                    return 0L;
  #line 124 
  if (count > 4096UL) 
                      #line 125 
                      return -7L;
  #line 127 
  ar = (struct ar9170 *)file->private_data;
  #line 129 
  if (ar == (struct ar9170 *)0) 
                                #line 130 
                                return -19L;
  #line 131 
  __mptr = (void *)debugfs_real_fops(file);
  #line 131 
  dfops = ((struct carl9170_debugfs_fops *)(__mptr + 18446744073709551592U));
  #line 134 
  if (dfops->write == (ssize_t (*)(struct ar9170 *, char *, size_t ))0) 
    #line 135 
    return -38L;
  #line 137 
  buf = (char *)cif_vmalloc(count);
  #line 138 
  if (buf == (char *)0) 
                        #line 139 
                        return -12L;
  #line 141 
  if (copy_from_user((void *)buf,(void *)userbuf,count) != 0UL) {
    #line 142 
    err = -14;
    #line 143 
    goto out_free;
  }
  #line 146 
  if (cif_mutex_trylock_mutex_of_ar9170(& ar->mutex) == 0) {
    #line 147 
    err = -11;
    #line 148 
    goto out_free;
  }
  #line 151 
  if (ar->state < dfops->req_dev_state) {
    #line 152 
    err = -19;
    #line 153 
    goto out_unlock;
  }
  #line 156 
  err = (int)(*(dfops->write))(ar,buf,count);
  #line 157 
  if (err != 0) 
                #line 158 
                goto out_unlock;
  #line 160 
  out_unlock: 
              #line 160 
  ;
  #line 161 
  cif_mutex_unlock_mutex_of_ar9170_0(& ar->mutex);
  #line 163 
  out_free: 
            #line 163 
  ;
  #line 164 
  cif_vfree((void *)buf);
  #line 165 
  return (long)err;
}

#line 216  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
static char *carl9170_debugfs_mem_usage_read(struct ar9170 *ar, char *buf, size_t bufsize, ssize_t *len)
{
  #line 219 
  cif_spin_lock_bh_mem_lock_of_ar9170_0(& ar->mem_lock);
  #line 221 
  *len += (long)snprintf(buf + (unsigned long)*len,bufsize - (unsigned long)*len,
               (char *)"jar: [%*pb]\n",ar->fw.mem_blocks,ar->mem_bitmap);
  #line 224 
  ;
  #line 224 
  ;
  #line 224 
  ;
  #line 224 
  *len += (long)snprintf(buf + (unsigned long)*len,bufsize - (unsigned long)*len,
                 (char *)"cookies: used:%3d / total:%3d, allocs:%d\n",
                 bitmap_weight(ar->mem_bitmap,ar->fw.mem_blocks),
                 ar->fw.mem_blocks,atomic_read_1(& ar->mem_allocs));
  #line 228 
  ;
  #line 228 
  ;
  #line 228 
  ;
  #line 228 
  ;
  #line 228 
  *len += (long)snprintf(buf + (unsigned long)*len,bufsize - (unsigned long)*len,
                 (char *)"memory: free:%3d (%3d KiB) / total:%3d KiB)\n",
                 atomic_read_1(& ar->mem_free_blocks),
                 ((unsigned int)atomic_read_1(& ar->mem_free_blocks) * ar->fw.mem_block_size) / 1024U,
                 (ar->fw.mem_blocks * ar->fw.mem_block_size) / 1024U);
  #line 233 
  cif_spin_unlock_bh_mem_lock_of_ar9170_0(& ar->mem_lock);
  #line 235 
  return buf;
}

#line 237  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
static struct carl9170_debugfs_fops carl_debugfs_mem_usage_ops = {.read_bufsize = 512U, .attr = (unsigned short)256U, .read = & carl9170_debugfs_mem_usage_read, .fops = {.owner = & __this_module, .read = & carl9170_debugfs_read, .write = & carl9170_debugfs_write, .open = & simple_open}, .req_dev_state = CARL9170_STARTED};
#line 239  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
static char *carl9170_debugfs_qos_stat_read(struct ar9170 *ar, char *buf, size_t bufsize, ssize_t *len)
{
  #line 242 
  char *tmp;
  #line 242 
  if (modparam_noht != 0) 
                          #line 242 
                          tmp = (char *)"Hardware"; else 
                                                         #line 242 
                                                         tmp = (char *)"Software";
  #line 242 
  ;
  #line 242 
  ;
  #line 242 
  *len += (long)snprintf(buf + (unsigned long)*len,bufsize - (unsigned long)*len,
                 (char *)"%s QoS AC\n",tmp);
  #line 245 
  *len += (long)snprintf(buf + (unsigned long)*len,bufsize - (unsigned long)*len,
                 (char *)"[     VO            VI       ");
  #line 248 
  cif_spin_lock_bh_tx_stats_lock_of_ar9170_0(& ar->tx_stats_lock);
  #line 249 
  *len += (long)snprintf(buf + (unsigned long)*len,bufsize - (unsigned long)*len,
                 (char *)"[length/limit  length/limit  ",ar->tx_stats[0].len,
                 ar->tx_stats[0].limit,ar->tx_stats[1].len,
                 ar->tx_stats[1].limit,ar->tx_stats[2].len,
                 ar->tx_stats[2].limit,ar->tx_stats[3].len,
                 ar->tx_stats[3].limit);
  #line 258 
  *len += (long)snprintf(buf + (unsigned long)*len,bufsize - (unsigned long)*len,
                 (char *)"[    total         total     ",
                 ar->tx_stats[0].count,ar->tx_stats[1].count,
                 ar->tx_stats[2].count,ar->tx_stats[3].count);
  #line 264 
  cif_spin_unlock_bh_tx_stats_lock_of_ar9170_0(& ar->tx_stats_lock);
  #line 266 
  ;
  #line 266 
  ;
  #line 266 
  *len += (long)snprintf(buf + (unsigned long)*len,bufsize - (unsigned long)*len,
                  (char *)"[  pend/waittx   pend/waittx ",
                  skb_queue_len(& ar->tx_pending[0]),
                  skb_queue_len(& ar->tx_status[0]),
                  skb_queue_len(& ar->tx_pending[1]),
                  skb_queue_len(& ar->tx_status[1]),
                  skb_queue_len(& ar->tx_pending[2]),
                  skb_queue_len(& ar->tx_status[2]),
                  skb_queue_len(& ar->tx_pending[3]),
                  skb_queue_len(& ar->tx_status[3]));
  #line 279 
  return buf;
}

#line 281  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
static struct carl9170_debugfs_fops carl_debugfs_qos_stat_ops = {.read_bufsize = 512U, .attr = (unsigned short)256U, .read = & carl9170_debugfs_qos_stat_read, .fops = {.owner = & __this_module, .read = & carl9170_debugfs_read, .write = & carl9170_debugfs_write, .open = & simple_open}, .req_dev_state = CARL9170_STARTED};
#line 283  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
static void carl9170_debugfs_format_frame(struct ar9170 *ar, struct sk_buff *skb, char *prefix, char *buf, ssize_t *off, ssize_t bufsize)
{
  #line 287 
  struct _carl9170_tx_superframe *txc = (struct _carl9170_tx_superframe *)skb->data;
  #line 288 
  struct ieee80211_tx_info *txinfo = IEEE80211_SKB_CB(skb);
  #line 289 
  struct carl9170_tx_info *arinfo = (struct carl9170_tx_info *)(& txinfo->__anonCompField_ieee80211_tx_info_195.__anonCompField___anonunion_2051_194.rate_driver_data);
  #line 290 
  struct ieee80211_hdr *hdr = (struct ieee80211_hdr *)(& txc->frame_data);
  #line 292 
  ;
  #line 292 
  ;
  #line 292 
  ;
  #line 292 
  ;
  #line 292 
  ;
  #line 292 
  ;
  #line 292 
  ;
  #line 292 
  *off += (long)snprintf(buf + (unsigned long)*off,(unsigned long)(bufsize - *off),
                 (char *)"%s %p, c:%2x, DA:%pM, sq:%4d, mc:%.4x, ",prefix,
                 skb,(int)txc->s.cookie,ieee80211_get_DA(hdr),
                 (int)get_seq_h(hdr),(int)txc->f.mac_control,
                 txc->f.phy_control,
                 jiffies_to_msecs(jiffies - arinfo->timeout));
  #line 293 
  return;
}

#line 300  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
static char *carl9170_debugfs_ampdu_state_read(struct ar9170 *ar, char *buf, size_t bufsize, ssize_t *len)
{
  #line 309 
  void *__mptr;
  #line 303 
  struct carl9170_sta_tid *iter;
  #line 304 
  struct sk_buff *skb;
  #line 305 
  int fc;
  #line 306 
  int offset;
  #line 305 
  int cnt = 0;
  #line 308 
  rcu_read_lock();
  {
    #line 309 
    bool __warned;
    #line 309 
    if (debug_lockdep_rcu_enabled() != 0) 
      #line 309 
      if (! __warned) {
        #line 309 
        if (rcu_read_lock_any_held() == 0) {
          #line 309 
          __warned = (_Bool)1;
          #line 309 
          lockdep_rcu_suspicious((char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c",309,(char *)"RCU-list traversed in non-reader section!");
        }
      }
  }
  {
    #line 310 
    union __anonunion___u_4214 __u;
    #line 309 
    __read_once_size((void *)(& ar->tx_ampdu_list.next),(void *)(& __u.__c),8);
    #line 309 
    __mptr = (void *)(__u.__val);
    }
  #line 312 
  iter = ((struct carl9170_sta_tid *)__mptr);
  #line 309 
  while (& iter->list != & ar->tx_ampdu_list) {
    #line 309 
    void *__mptr_0;
    {
      #line 311 
      cif_spin_lock_bh_lock_of_carl9170_sta_tid_0(& iter->lock);
      #line 312 
      *len += (long)snprintf(buf + (unsigned long)*len,bufsize - (unsigned long)*len,
                 (char *)"Entry: #%2d TID:%1d, BSN:%4d, ",cnt,(int)iter->tid,
                 (int)iter->bsn,(int)iter->snx,(int)iter->hsn,(int)iter->max,
                 (unsigned int)iter->state,iter->counter);
      #line 317 
      *len += (long)snprintf(buf + (unsigned long)*len,bufsize - (unsigned long)*len,
                 (char *)"\tWindow:  [%*pb,W]\n",128,
                 (unsigned long *)(& iter->bitmap));
      #line 324 
      offset = 35;
      #line 325 
      *len += (long)snprintf(buf + (unsigned long)*len,bufsize - (unsigned long)*len,
                 (char *)"\tBase Seq: %*s\n",offset,(char *)"T");
      #line 327 
      offset = ((127 - (((int)iter->snx - (int)iter->bsn) & 4095)) / 4 + (127 - (((int)iter->snx - (int)iter->bsn) & 4095)) / 32) + 1;
      #line 328 
      *len += (long)snprintf(buf + (unsigned long)*len,bufsize - (unsigned long)*len,
                 (char *)"\tNext Seq: %*s\n",offset,(char *)"W");
      #line 330 
      offset = ((127 - ((int)iter->hsn - (int)iter->bsn) % 128) / 4 + (127 - ((int)iter->hsn - (int)iter->bsn) % 128) / 32) + 1;
      #line 332 
      *len += (long)snprintf(buf + (unsigned long)*len,bufsize - (unsigned long)*len,
                 (char *)"\tLast Seq: %*s\n",offset,(char *)"N");
      #line 334 
      ;
      #line 334 
      ;
      #line 334 
      *len += (long)snprintf(buf + (unsigned long)*len,bufsize - (unsigned long)*len,
                  (char *)"\tPre-Aggregation reorder buffer: ",
                  skb_queue_len(& iter->queue));
      #line 337 
      fc = 0;
      #line 338 
      skb = iter->queue.next;
      #line 338 
      while ((struct sk_buff *)(& iter->queue) != skb) {
        {
          #line 339 
          char prefix[32U];
          #line 341 
          snprintf((char *)(& prefix),32UL,(char *)"\t\t%3d :",fc);
          #line 342 
          carl9170_debugfs_format_frame(ar,skb,(char *)(& prefix),buf,len,(long)bufsize);
          #line 345 
          fc ++;
        }
        #line 338 
        skb = skb->__anonCompField_sk_buff_90.__anonCompField___anonunion_502_89.next;
      }
      #line 347 
      cif_spin_unlock_bh_lock_of_carl9170_sta_tid_0(& iter->lock);
      #line 348 
      cnt ++;
    }
    {
      #line 310 
      union __anonunion___u_4216 __u_0;
      #line 309 
      __read_once_size((void *)(& iter->list.next),(void *)(& __u_0.__c),8);
      #line 309 
      __mptr_0 = (void *)(__u_0.__val);
      }
    #line 309 
    iter = ((struct carl9170_sta_tid *)__mptr_0);
  }
  #line 350 
  rcu_read_unlock();
  #line 352 
  return buf;
}

#line 354  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
static struct carl9170_debugfs_fops carl_debugfs_ampdu_state_ops = {.read_bufsize = 8000U, .attr = (unsigned short)256U, .read = & carl9170_debugfs_ampdu_state_read, .fops = {.owner = & __this_module, .read = & carl9170_debugfs_read, .write = & carl9170_debugfs_write, .open = & simple_open}, .req_dev_state = CARL9170_STARTED};
#line 356  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
static void carl9170_debugfs_queue_dump(struct ar9170 *ar, char *buf, ssize_t *len, size_t bufsize, struct sk_buff_head *queue)
{
  #line 359 
  struct sk_buff *skb;
  #line 360 
  char prefix[16U];
  #line 361 
  int fc = 0;
  #line 363 
  cif_spin_lock_bh_lock_of_sk_buff_head_0(& queue->lock);
  #line 364 
  skb = queue->next;
  #line 364 
  while (skb != (struct sk_buff *)queue) {
    #line 365 
    snprintf((char *)(& prefix),16UL,(char *)"%3d :",fc);
    #line 366 
    carl9170_debugfs_format_frame(ar,skb,(char *)(& prefix),buf,len,(long)bufsize);
    #line 368 
    fc ++;
    #line 364 
    skb = skb->__anonCompField_sk_buff_90.__anonCompField___anonunion_502_89.next;
  }
  #line 370 
  cif_spin_unlock_bh_lock_of_sk_buff_head_0(& queue->lock);
  #line 371 
  return;
}

#line 382  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
static char *carl9170_debugfs_sta_psm_read(struct ar9170 *ar, char *buf, size_t bufsize, ssize_t *len)
{
  #line 385 
  char *tmp;
  #line 385 
  char *tmp_0;
  #line 385 
  if (ar->ps.off_override == 0U) {
    #line 385 
    if ((int)ar->ps.state != 0) 
                                #line 385 
                                tmp = (char *)"PSM"; else 
                                                          #line 385 
                                                          tmp = (char *)"CAM";
    #line 385 
    tmp_0 = tmp;
  }
  else 
       #line 385 
       tmp_0 = (char *)"FORCE CAM";
  #line 385 
  ;
  #line 385 
  ;
  #line 385 
  *len += (long)snprintf(buf + (unsigned long)*len,bufsize - (unsigned long)*len,
                 (char *)"psm state: %s\n",tmp_0);
  #line 388 
  *len += (long)snprintf(buf + (unsigned long)*len,bufsize - (unsigned long)*len,
                 (char *)"sleep duration: %d ms.\n",ar->ps.sleep_ms);
  #line 389 
  ;
  #line 389 
  ;
  #line 389 
  *len += (long)snprintf(buf + (unsigned long)*len,bufsize - (unsigned long)*len,
                 (char *)"last power-state transition: %d ms ago.\n",
                 jiffies_to_msecs(jiffies - ar->ps.last_action));
  #line 391 
  ;
  #line 391 
  ;
  #line 391 
  *len += (long)snprintf(buf + (unsigned long)*len,bufsize - (unsigned long)*len,
                 (char *)"last CAM->PSM transition: %d ms ago.\n",
                 jiffies_to_msecs(jiffies - ar->ps.last_slept));
  #line 394 
  return buf;
}

#line 396  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
static struct carl9170_debugfs_fops carl_debugfs_sta_psm_ops = {.read_bufsize = 160U, .attr = (unsigned short)256U, .read = & carl9170_debugfs_sta_psm_read, .fops = {.owner = & __this_module, .read = & carl9170_debugfs_read, .write = & carl9170_debugfs_write, .open = & simple_open}, .req_dev_state = CARL9170_STARTED};
#line 398  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
static char *carl9170_debugfs_tx_stuck_read(struct ar9170 *ar, char *buf, size_t bufsize, ssize_t *len)
{
  #line 401 
  int i;
  #line 403 
  i = 0;
  #line 403 
  while ((int)(ar->hw)->queues > i) {
    {
      #line 404 
      unsigned int tmp;
      #line 404 
      unsigned int tmp_2;
      #line 404 
      tmp = jiffies_to_msecs(ar->max_queue_stop_timeout[i]);
      #line 404 
      if (ieee80211_queue_stopped(ar->hw,i) != 0) 
                                                  #line 404 
                                                  tmp_2 = jiffies_to_msecs(jiffies - ar->queue_stop_timeout[i]); else 
                                                                    #line 404 
                                                                    tmp_2 = 0U;
      #line 404 
      ;
      #line 404 
      ;
      #line 404 
      ;
      #line 404 
      *len += (long)snprintf(buf + (unsigned long)*len,bufsize - (unsigned long)*len,
                 (char *)"TX queue [%d]: %10d max:%10d ms.\n",i,tmp_2,tmp);
      #line 409 
      ar->max_queue_stop_timeout[i] = 0UL;
    }
    #line 403 
    i ++;
  }
  #line 412 
  return buf;
}

#line 414  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
static struct carl9170_debugfs_fops carl_debugfs_tx_stuck_ops = {.read_bufsize = 180U, .attr = (unsigned short)256U, .read = & carl9170_debugfs_tx_stuck_read, .fops = {.owner = & __this_module, .read = & carl9170_debugfs_read, .write = & carl9170_debugfs_write, .open = & simple_open}, .req_dev_state = CARL9170_STARTED};
#line 416  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
static char *carl9170_debugfs_phy_noise_read(struct ar9170 *ar, char *buf, size_t bufsize, ssize_t *len)
{
  #line 419 
  int err;
  #line 421 
  err = carl9170_get_noisefloor(ar);
  #line 422 
  if (err != 0) {
    #line 423 
    *len = (long)err;
    #line 424 
    return buf;
  }
  #line 427 
  *len += (long)snprintf(buf + (unsigned long)*len,bufsize - (unsigned long)*len,
               (char *)"Chain 0: %10d dBm, ext. chan.:%10d dBm\n",
               ar->noise[0],ar->noise[2]);
  #line 429 
  *len += (long)snprintf(buf + (unsigned long)*len,bufsize - (unsigned long)*len,
                 (char *)"Chain 2: %10d dBm, ext. chan.:%10d dBm\n",
                 ar->noise[1],ar->noise[3]);
  #line 432 
  return buf;
}

#line 434  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
static struct carl9170_debugfs_fops carl_debugfs_phy_noise_ops = {.read_bufsize = 180U, .attr = (unsigned short)256U, .read = & carl9170_debugfs_phy_noise_read, .fops = {.owner = & __this_module, .read = & carl9170_debugfs_read, .write = & carl9170_debugfs_write, .open = & simple_open}, .req_dev_state = CARL9170_STARTED};
#line 436  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
static char *carl9170_debugfs_vif_dump_read(struct ar9170 *ar, char *buf, size_t bufsize, ssize_t *len)
{
  #line 449 
  void *__mptr;
  #line 439 
  struct carl9170_vif_info *iter;
  #line 440 
  int i = 0;
  #line 442 
  *len += (long)snprintf(buf + (unsigned long)*len,bufsize - (unsigned long)*len,
               (char *)"registered VIFs:%d \\ %d\n",ar->vifs,ar->fw.vif_num);
  #line 445 
  *len += (long)snprintf(buf + (unsigned long)*len,bufsize - (unsigned long)*len,
                 (char *)"VIF bitmap: [%*pb]\n",ar->fw.vif_num,
                 & ar->vif_bitmap);
  #line 448 
  rcu_read_lock();
  {
    #line 449 
    bool __warned;
    #line 449 
    if (debug_lockdep_rcu_enabled() != 0) 
      #line 449 
      if (! __warned) {
        #line 449 
        if (rcu_read_lock_any_held() == 0) {
          #line 449 
          __warned = (_Bool)1;
          #line 449 
          lockdep_rcu_suspicious((char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c",449,(char *)"RCU-list traversed in non-reader section!");
        }
      }
  }
  {
    #line 450 
    union __anonunion___u_4218 __u;
    #line 449 
    __read_once_size((void *)(& ar->vif_list.next),(void *)(& __u.__c),8);
    #line 449 
    __mptr = (void *)(__u.__val);
    }
  #line 452 
  iter = ((struct carl9170_vif_info *)__mptr);
  #line 449 
  while (& iter->list != & ar->vif_list) {
    #line 449 
    void *__mptr_0;
    {
      #line 451 
      char *tmp_8;
      #line 451 
      char *tmp_10;
      #line 450 
      struct ieee80211_vif *vif = carl9170_get_vif(iter);
      #line 451 
      if ((int)iter->enable_beacon != 0) 
                                         #line 451 
                                         tmp_8 = (char *)"beaconing "; else 
                                                                    #line 451 
                                                                    tmp_8 = (char *)"";
      #line 451 
      ;
      #line 451 
      ;
      #line 451 
      ;
      #line 451 
      ;
      #line 451 
      if (carl9170_get_main_vif(ar) == vif) 
                                            #line 451 
                                            tmp_10 = (char *)"Master"; else 
                                                                    #line 451 
                                                                    tmp_10 = (char *)" Slave";
      #line 451 
      ;
      #line 451 
      ;
      #line 451 
      ;
      #line 451 
      *len += (long)snprintf(buf + (unsigned long)*len,bufsize - (unsigned long)*len,
                  (char *)"\t%d = [%s VIF, id:%d, type:%x ",i,tmp_10,
                  iter->id,(unsigned int)vif->type,(u8 *)(& vif->addr),tmp_8);
      #line 455 
      i ++;
    }
    {
      #line 450 
      union __anonunion___u_4220 __u_0;
      #line 449 
      __read_once_size((void *)(& iter->list.next),(void *)(& __u_0.__c),8);
      #line 449 
      __mptr_0 = (void *)(__u_0.__val);
      }
    #line 449 
    iter = ((struct carl9170_vif_info *)__mptr_0);
  }
  #line 457 
  rcu_read_unlock();
  #line 459 
  return buf;
}

#line 461  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
static struct carl9170_debugfs_fops carl_debugfs_vif_dump_ops = {.read_bufsize = 8000U, .attr = (unsigned short)256U, .read = & carl9170_debugfs_vif_dump_read, .fops = {.owner = & __this_module, .read = & carl9170_debugfs_read, .write = & carl9170_debugfs_write, .open = & simple_open}, .req_dev_state = CARL9170_STARTED};
#line 544  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
static ssize_t carl9170_debugfs_hw_ioread32_write(struct ar9170 *ar, char *buf, size_t count)
{
  #line 547 
  int i;
  #line 547 
  int res;
  #line 548 
  unsigned int reg;
  #line 548 
  unsigned int tmp;
  #line 592 
  long tmp_0;
  #line 547 
  int err = 0;
  #line 547 
  int n = 0;
  #line 547 
  int max_len = 32;
  #line 550 
  if (count == 0UL) 
                    #line 551 
                    return 0L;
  #line 553 
  if ((unsigned long)max_len < count) 
                                      #line 554 
                                      return -7L;
  #line 556 
  res = sscanf(buf,(char *)"0x%X %d",& reg,& n);
  #line 557 
  if (res <= 0) {
    #line 558 
    err = -22;
    #line 559 
    goto out;
  }
  #line 562 
  if (res == 1) 
                #line 563 
                n = 1;
  #line 565 
  if (n > 15) {
    #line 566 
    err = -90;
    #line 567 
    goto out;
  }
  #line 570 
  if (reg > 2621439U || (unsigned int)(n << 2) + reg > 2621439U) {
    #line 571 
    err = -99;
    #line 572 
    goto out;
  }
  #line 575 
  if ((reg & 3U) != 0U) {
    #line 576 
    err = -22;
    #line 577 
    goto out;
  }
  #line 580 
  i = 0;
  #line 580 
  while (i < n) {
    #line 581 
    err = carl9170_read_reg(ar,(unsigned int)(i << 2) + reg,& tmp);
    #line 582 
    if (err != 0) 
                  #line 583 
                  goto out;
    #line 585 
    ar->debug.ring[ar->debug.ring_tail].reg = (unsigned int)(i << 2) + reg;
    #line 586 
    ar->debug.ring[ar->debug.ring_tail].value = tmp;
    #line 587 
    (ar->debug.ring_tail) ++;
    #line 588 
    ar->debug.ring_tail &= 63U;
    #line 580 
    i ++;
  }
  #line 591 
  out: 
       #line 591 
  ;
  #line 592 
  if (err != 0) 
                #line 592 
                tmp_0 = (long)err; else 
                                        #line 592 
                                        tmp_0 = (long)count;
  #line 592 
  return tmp_0;
}

#line 595  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
static char *carl9170_debugfs_hw_ioread32_read(struct ar9170 *ar, char *buf, size_t bufsize, ssize_t *ret)
{
  #line 598 
  int i = 0;
  #line 600 
  while (ar->debug.ring_head != ar->debug.ring_tail) {
    #line 608 
    int tmp_0;
    #line 601 
    *ret += (long)snprintf(buf + (unsigned long)*ret,bufsize - (unsigned long)*ret,
               (char *)"%.8x = %.8x\n",
               ar->debug.ring[ar->debug.ring_head].reg,
               ar->debug.ring[ar->debug.ring_head].value);
    #line 605 
    (ar->debug.ring_head) ++;
    #line 606 
    ar->debug.ring_head &= 63U;
    #line 608 
    tmp_0 = i;
    #line 608 
    i ++;
    #line 608 
    ;
    #line 608 
    if (tmp_0 == 64) 
                     #line 609 
                     break;
  }
  #line 611 
  ar->debug.ring_head = ar->debug.ring_tail;
  #line 612 
  return buf;
}

#line 614  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
static struct carl9170_debugfs_fops carl_debugfs_hw_ioread32_ops = {.read_bufsize = 2560U, .attr = (unsigned short)384U, .read = & carl9170_debugfs_hw_ioread32_read, .write = & carl9170_debugfs_hw_ioread32_write, .fops = {.owner = & __this_module, .read = & carl9170_debugfs_read, .write = & carl9170_debugfs_write, .open = & simple_open}, .req_dev_state = CARL9170_STARTED};
#line 616  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
static ssize_t carl9170_debugfs_bug_write(struct ar9170 *ar, char *buf, size_t count)
{
  #line 619 
  int err;
  #line 621 
  if (count == 0UL) 
                    #line 622 
                    return -22L;
  #line 624 
  switch ((int)*buf) {
    #line 625 
    case 70: 
             #line 625 
    ;
    #line 626 
    ar->needs_full_reset = (_Bool)1;
    #line 627 
    break;
    #line 629 
    case 82: 
             #line 629 
    ;
    #line 630 
    if (ar->state <= (unsigned int)CARL9170_IDLE) {
      #line 631 
      err = -11;
      #line 632 
      goto out;
    }
    #line 635 
    ar->needs_full_reset = (_Bool)0;
    #line 636 
    break;
    #line 638 
    case 77: 
             #line 638 
    ;
    #line 639 
    err = carl9170_mac_reset(ar);
    #line 640 
    if (err < 0) 
                 #line 641 
                 count = (unsigned long)err;
    #line 643 
    goto out;
    #line 645 
    case 80: 
             #line 645 
    ;
    #line 646 
    ;
    #line 646 
    ;
    #line 646 
    err = carl9170_set_channel(ar,(ar->hw)->conf.chandef.chan,cfg80211_get_chandef_type(& (ar->hw)->conf.chandef));
    #line 648 
    if (err < 0) 
                 #line 649 
                 count = (unsigned long)err;
    #line 651 
    goto out;
    #line 653 
    default: 
             #line 653 
    ;
    #line 654 
    return -22L;
  }
  #line 657 
  carl9170_restart(ar,(enum carl9170_restart_reasons)CARL9170_RR_USER_REQUEST);
  #line 659 
  out: 
       #line 659 
  ;
  #line 660 
  return (long)count;
}

#line 663  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
static char *carl9170_debugfs_bug_read(struct ar9170 *ar, char *buf, size_t bufsize, ssize_t *ret)
{
  #line 666 
  *ret += (long)snprintf(buf + (unsigned long)*ret,bufsize - (unsigned long)*ret,
               (char *)"[P]hy reinit, [R]estart, [F]ull usb reset, ");
  #line 668 
  *ret += (long)snprintf(buf + (unsigned long)*ret,bufsize - (unsigned long)*ret,
                 (char *)"firmware restarts:%d, last reason:%d\n",
                 ar->restart_counter,(unsigned int)ar->last_reason);
  #line 670 
  *ret += (long)snprintf(buf + (unsigned long)*ret,bufsize - (unsigned long)*ret,
                 (char *)"phy reinit errors:%d (%d)\n",ar->total_chan_fail,
                 ar->chan_fail);
  #line 672 
  *ret += (long)snprintf(buf + (unsigned long)*ret,bufsize - (unsigned long)*ret,
                 (char *)"reported firmware errors:%d\n",ar->fw.err_counter);
  #line 674 
  *ret += (long)snprintf(buf + (unsigned long)*ret,bufsize - (unsigned long)*ret,
                 (char *)"reported firmware BUGs:%d\n",ar->fw.bug_counter);
  #line 676 
  ;
  #line 676 
  ;
  #line 676 
  *ret += (long)snprintf(buf + (unsigned long)*ret,bufsize - (unsigned long)*ret,
                 (char *)"pending restart requests:%d\n",
                 atomic_read_1(& ar->pending_restarts));
  #line 678 
  return buf;
}

#line 680  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
static struct carl9170_debugfs_fops carl_debugfs_bug_ops = {.read_bufsize = 400U, .attr = (unsigned short)384U, .read = & carl9170_debugfs_bug_read, .write = & carl9170_debugfs_bug_write, .fops = {.owner = & __this_module, .read = & carl9170_debugfs_read, .write = & carl9170_debugfs_write, .open = & simple_open}, .req_dev_state = CARL9170_STOPPED};
#line 682  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
static char *erp_modes[6U] = {(char *)"INVALID", (char *)"Automatic", (char *)"Set by MAC80211", (char *)"Force Off", (char *)"Force CTS", (char *)"Force RTS"};
#line 691  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
static char *carl9170_debugfs_erp_read(struct ar9170 *ar, char *buf, size_t bufsize, ssize_t *ret)
{
  #line 694 
  *ret += (long)snprintf(buf + (unsigned long)*ret,bufsize - (unsigned long)*ret,
               (char *)"ERP Setting: (%d) -> %s\n",
               (unsigned int)ar->erp_mode,
               erp_modes[(unsigned int)ar->erp_mode]);
  #line 696 
  return buf;
}

#line 699  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
static ssize_t carl9170_debugfs_erp_write(struct ar9170 *ar, char *buf, size_t count)
{
  #line 702 
  int res;
  #line 702 
  int val;
  #line 704 
  if (count == 0UL) 
                    #line 705 
                    return -22L;
  #line 707 
  res = sscanf(buf,(char *)"%d",& val);
  #line 708 
  if (res != 1) 
                #line 709 
                return -22L;
  #line 711 
  if ((unsigned int)val + 4294967295U > 4U) 
                                            #line 713 
                                            return -22L;
  #line 715 
  ar->erp_mode = (enum carl9170_erp_modes)val;
  #line 716 
  return (long)count;
}

#line 719  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
static struct carl9170_debugfs_fops carl_debugfs_erp_ops = {.read_bufsize = 80U, .attr = (unsigned short)384U, .read = & carl9170_debugfs_erp_read, .write = & carl9170_debugfs_erp_write, .fops = {.owner = & __this_module, .read = & carl9170_debugfs_read, .write = & carl9170_debugfs_write, .open = & simple_open}, .req_dev_state = CARL9170_STARTED};
#line 721  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
static ssize_t carl9170_debugfs_hw_iowrite32_write(struct ar9170 *ar, char *buf, size_t count)
{
  #line 724 
  int res;
  #line 725 
  u32 reg;
  #line 725 
  u32 val;
  #line 754 
  long tmp;
  #line 724 
  int err = 0;
  #line 724 
  int max_len = 22;
  #line 727 
  if (count == 0UL) 
                    #line 728 
                    return 0L;
  #line 730 
  if ((unsigned long)max_len < count) 
                                      #line 731 
                                      return -7L;
  #line 733 
  res = sscanf(buf,(char *)"0x%X 0x%X",& reg,& val);
  #line 734 
  if (res != 2) {
    #line 735 
    err = -22;
    #line 736 
    goto out;
  }
  #line 739 
  if (reg + 4293918719U > 1572862U) {
    #line 740 
    err = -99;
    #line 741 
    goto out;
  }
  #line 744 
  if ((reg & 3U) != 0U) {
    #line 745 
    err = -22;
    #line 746 
    goto out;
  }
  #line 749 
  err = carl9170_write_reg(ar,reg,val);
  #line 750 
  if (err != 0) 
                #line 751 
                goto out;
  #line 753 
  out: 
       #line 753 
  ;
  #line 754 
  if (err != 0) 
                #line 754 
                tmp = (long)err; else 
                                      #line 754 
                                      tmp = (long)count;
  #line 754 
  return tmp;
}

#line 756  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
static struct carl9170_debugfs_fops carl_debugfs_hw_iowrite32_ops = {.attr = (unsigned short)128U, .write = & carl9170_debugfs_hw_iowrite32_write, .fops = {.owner = & __this_module, .read = & carl9170_debugfs_read, .write = & carl9170_debugfs_write, .open = & simple_open}, .req_dev_state = CARL9170_STARTED};
#line 758  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
static char *carl9170_debugfs_hw_tx_tally_read(struct ar9170 *ar, char *dum, size_t bufsize, ssize_t *ret)
{
  #line 758 
  unsigned int __err;
  #line 758 
  char *buf;
  #line 758 
  int i;
  #line 758 
  int max_len;
  #line 758 
  int err;
  #line 758 
  max_len = 240;
  #line 758 
  buf = (char *)cif_vmalloc((unsigned long)max_len);
  #line 758 
  if (buf == (char *)0) 
                        #line 758 
                        return (char *)0;
  {
    #line 758 
    u32 __tmp[3U];
    #line 758 
    unsigned int __i;
    #line 758 
    __err = 4294967277U;
    #line 758 
    __i = 0U;
    #line 758 
    while (__i <= 2U) {
      #line 758 
      __tmp[__i] = hw_tx_tally_regs[__i].reg;
      #line 758 
      ar->debug.stats.hw_tx_tally_counter[__i] = 0U;
      #line 758 
      __i ++;
    }
    #line 758 
    if (ar->state > (unsigned int)CARL9170_IDLE) {
      #line 758 
      __err = (unsigned int)carl9170_read_mreg(ar,3,(u32 *)(& __tmp),
                           (u32 *)(& ar->debug.stats.hw_tx_tally_counter));
    }
    }
  #line 758 
  err = (int)__err;
  #line 758 
  if (err != 0) {
    #line 758 
    *ret = (long)err;
    #line 758 
    return buf;
  }
  {
    #line 758 
    unsigned int __i_0;
    #line 758 
    __i_0 = 0U;
    #line 758 
    while (__i_0 <= 2U) {
      #line 758 
      ar->debug.stats.hw_tx_tally_sum[__i_0] += ar->debug.stats.hw_tx_tally_counter[__i_0];
      #line 758 
      __i_0 ++;
    }
  }
  #line 758 
  i = 0;
  #line 758 
  while ((unsigned int)i <= 2U) {
    #line 758 
    *ret += (long)snprintf(buf + (unsigned long)*ret,
                 (unsigned long)((long)max_len - *ret),(char *)"%22s = %",
                 (char *)(& hw_tx_tally_regs[i].nreg),
                 ar->debug.stats.hw_tx_tally_sum[i],
                 ar->debug.stats.hw_tx_tally_counter[i]);
    #line 758 
    i ++;
  }
  #line 758 
  return buf;
}

#line 758  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
static struct carl9170_debugfs_fops carl_debugfs_hw_tx_tally_ops = {.attr = (unsigned short)256U, .read = & carl9170_debugfs_hw_tx_tally_read, .fops = {.owner = & __this_module, .read = & carl9170_debugfs_read, .write = & carl9170_debugfs_write, .open = & simple_open}, .req_dev_state = CARL9170_STARTED};
#line 759  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
static char *carl9170_debugfs_hw_rx_tally_read(struct ar9170 *ar, char *dum, size_t bufsize, ssize_t *ret)
{
  #line 759 
  unsigned int __err;
  #line 759 
  char *buf;
  #line 759 
  int i;
  #line 759 
  int max_len;
  #line 759 
  int err;
  #line 759 
  max_len = 640;
  #line 759 
  buf = (char *)cif_vmalloc((unsigned long)max_len);
  #line 759 
  if (buf == (char *)0) 
                        #line 759 
                        return (char *)0;
  {
    #line 759 
    u32 __tmp[8U];
    #line 759 
    unsigned int __i;
    #line 759 
    __err = 4294967277U;
    #line 759 
    __i = 0U;
    #line 759 
    while (__i <= 7U) {
      #line 759 
      __tmp[__i] = hw_rx_tally_regs[__i].reg;
      #line 759 
      ar->debug.stats.hw_rx_tally_counter[__i] = 0U;
      #line 759 
      __i ++;
    }
    #line 759 
    if (ar->state > (unsigned int)CARL9170_IDLE) {
      #line 759 
      __err = (unsigned int)carl9170_read_mreg(ar,8,(u32 *)(& __tmp),
                           (u32 *)(& ar->debug.stats.hw_rx_tally_counter));
    }
    }
  #line 759 
  err = (int)__err;
  #line 759 
  if (err != 0) {
    #line 759 
    *ret = (long)err;
    #line 759 
    return buf;
  }
  {
    #line 759 
    unsigned int __i_0;
    #line 759 
    __i_0 = 0U;
    #line 759 
    while (__i_0 <= 7U) {
      #line 759 
      ar->debug.stats.hw_rx_tally_sum[__i_0] += ar->debug.stats.hw_rx_tally_counter[__i_0];
      #line 759 
      __i_0 ++;
    }
  }
  #line 759 
  i = 0;
  #line 759 
  while ((unsigned int)i <= 7U) {
    #line 759 
    *ret += (long)snprintf(buf + (unsigned long)*ret,
                 (unsigned long)((long)max_len - *ret),(char *)"%22s = %",
                 (char *)(& hw_rx_tally_regs[i].nreg),
                 ar->debug.stats.hw_rx_tally_sum[i],
                 ar->debug.stats.hw_rx_tally_counter[i]);
    #line 759 
    i ++;
  }
  #line 759 
  return buf;
}

#line 759  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
static struct carl9170_debugfs_fops carl_debugfs_hw_rx_tally_ops = {.attr = (unsigned short)256U, .read = & carl9170_debugfs_hw_rx_tally_read, .fops = {.owner = & __this_module, .read = & carl9170_debugfs_read, .write = & carl9170_debugfs_write, .open = & simple_open}, .req_dev_state = CARL9170_STARTED};
#line 760  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
static char *carl9170_debugfs_hw_phy_errors_read(struct ar9170 *ar, char *dum, size_t bufsize, ssize_t *ret)
{
  #line 760 
  unsigned int __err;
  #line 760 
  char *buf;
  #line 760 
  int i;
  #line 760 
  int max_len;
  #line 760 
  int err;
  #line 760 
  max_len = 480;
  #line 760 
  buf = (char *)cif_vmalloc((unsigned long)max_len);
  #line 760 
  if (buf == (char *)0) 
                        #line 760 
                        return (char *)0;
  {
    #line 760 
    u32 __tmp[6U];
    #line 760 
    unsigned int __i;
    #line 760 
    __err = 4294967277U;
    #line 760 
    __i = 0U;
    #line 760 
    while (__i <= 5U) {
      #line 760 
      __tmp[__i] = hw_phy_errors_regs[__i].reg;
      #line 760 
      ar->debug.stats.hw_phy_errors_counter[__i] = 0U;
      #line 760 
      __i ++;
    }
    #line 760 
    if (ar->state > (unsigned int)CARL9170_IDLE) {
      #line 760 
      __err = (unsigned int)carl9170_read_mreg(ar,6,(u32 *)(& __tmp),
                           (u32 *)(& ar->debug.stats.hw_phy_errors_counter));
    }
    }
  #line 760 
  err = (int)__err;
  #line 760 
  if (err != 0) {
    #line 760 
    *ret = (long)err;
    #line 760 
    return buf;
  }
  {
    #line 760 
    unsigned int __i_0;
    #line 760 
    __i_0 = 0U;
    #line 760 
    while (__i_0 <= 5U) {
      #line 760 
      ar->debug.stats.hw_phy_errors_sum[__i_0] += ar->debug.stats.hw_phy_errors_counter[__i_0];
      #line 760 
      __i_0 ++;
    }
  }
  #line 760 
  i = 0;
  #line 760 
  while ((unsigned int)i <= 5U) {
    #line 760 
    *ret += (long)snprintf(buf + (unsigned long)*ret,
                 (unsigned long)((long)max_len - *ret),(char *)"%22s = %",
                 (char *)(& hw_phy_errors_regs[i].nreg),
                 ar->debug.stats.hw_phy_errors_sum[i],
                 ar->debug.stats.hw_phy_errors_counter[i]);
    #line 760 
    i ++;
  }
  #line 760 
  return buf;
}

#line 760  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
static struct carl9170_debugfs_fops carl_debugfs_hw_phy_errors_ops = {.attr = (unsigned short)256U, .read = & carl9170_debugfs_hw_phy_errors_read, .fops = {.owner = & __this_module, .read = & carl9170_debugfs_read, .write = & carl9170_debugfs_write, .open = & simple_open}, .req_dev_state = CARL9170_STARTED};
#line 761  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
static char *carl9170_debugfs_hw_wlan_queue_read(struct ar9170 *ar, char *dum, size_t bufsize, ssize_t *ret)
{
  #line 761 
  unsigned int __err;
  #line 761 
  char *buf;
  #line 761 
  int i;
  #line 761 
  int max_len;
  #line 761 
  int err;
  #line 761 
  max_len = 960;
  #line 761 
  buf = (char *)cif_vmalloc((unsigned long)max_len);
  #line 761 
  if (buf == (char *)0) 
                        #line 761 
                        return (char *)0;
  {
    #line 761 
    u32 __tmp[12U];
    #line 761 
    unsigned int __i;
    #line 761 
    __err = 4294967277U;
    #line 761 
    __i = 0U;
    #line 761 
    while (__i <= 11U) {
      #line 761 
      __tmp[__i] = hw_wlan_queue_regs[__i].reg;
      #line 761 
      ar->debug.stats.hw_wlan_queue_counter[__i] = 0U;
      #line 761 
      __i ++;
    }
    #line 761 
    if (ar->state > (unsigned int)CARL9170_IDLE) {
      #line 761 
      __err = (unsigned int)carl9170_read_mreg(ar,12,(u32 *)(& __tmp),
                           (u32 *)(& ar->debug.stats.hw_wlan_queue_counter));
    }
    }
  #line 761 
  err = (int)__err;
  #line 761 
  if (err != 0) {
    #line 761 
    *ret = (long)err;
    #line 761 
    return buf;
  }
  #line 761 
  i = 0;
  #line 761 
  while ((unsigned int)i <= 11U) {
    #line 761 
    *ret += (long)snprintf(buf + (unsigned long)*ret,
                 (unsigned long)((long)max_len - *ret),(char *)"%22s = %",
                 (char *)(& hw_wlan_queue_regs[i].nreg),
                 ar->debug.stats.hw_wlan_queue_counter[i]);
    #line 761 
    i ++;
  }
  #line 761 
  return buf;
}

#line 761  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
static struct carl9170_debugfs_fops carl_debugfs_hw_wlan_queue_ops = {.attr = (unsigned short)256U, .read = & carl9170_debugfs_hw_wlan_queue_read, .fops = {.owner = & __this_module, .read = & carl9170_debugfs_read, .write = & carl9170_debugfs_write, .open = & simple_open}, .req_dev_state = CARL9170_STARTED};
#line 762  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
static char *carl9170_debugfs_hw_pta_queue_read(struct ar9170 *ar, char *dum, size_t bufsize, ssize_t *ret)
{
  #line 762 
  unsigned int __err;
  #line 762 
  char *buf;
  #line 762 
  int i;
  #line 762 
  int max_len;
  #line 762 
  int err;
  #line 762 
  max_len = 480;
  #line 762 
  buf = (char *)cif_vmalloc((unsigned long)max_len);
  #line 762 
  if (buf == (char *)0) 
                        #line 762 
                        return (char *)0;
  {
    #line 762 
    u32 __tmp[6U];
    #line 762 
    unsigned int __i;
    #line 762 
    __err = 4294967277U;
    #line 762 
    __i = 0U;
    #line 762 
    while (__i <= 5U) {
      #line 762 
      __tmp[__i] = hw_pta_queue_regs[__i].reg;
      #line 762 
      ar->debug.stats.hw_pta_queue_counter[__i] = 0U;
      #line 762 
      __i ++;
    }
    #line 762 
    if (ar->state > (unsigned int)CARL9170_IDLE) {
      #line 762 
      __err = (unsigned int)carl9170_read_mreg(ar,6,(u32 *)(& __tmp),
                           (u32 *)(& ar->debug.stats.hw_pta_queue_counter));
    }
    }
  #line 762 
  err = (int)__err;
  #line 762 
  if (err != 0) {
    #line 762 
    *ret = (long)err;
    #line 762 
    return buf;
  }
  #line 762 
  i = 0;
  #line 762 
  while ((unsigned int)i <= 5U) {
    #line 762 
    *ret += (long)snprintf(buf + (unsigned long)*ret,
                 (unsigned long)((long)max_len - *ret),(char *)"%22s = %",
                 (char *)(& hw_pta_queue_regs[i].nreg),
                 ar->debug.stats.hw_pta_queue_counter[i]);
    #line 762 
    i ++;
  }
  #line 762 
  return buf;
}

#line 762  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
static struct carl9170_debugfs_fops carl_debugfs_hw_pta_queue_ops = {.attr = (unsigned short)256U, .read = & carl9170_debugfs_hw_pta_queue_read, .fops = {.owner = & __this_module, .read = & carl9170_debugfs_read, .write = & carl9170_debugfs_write, .open = & simple_open}, .req_dev_state = CARL9170_STARTED};
#line 763  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
static char *carl9170_debugfs_hw_ampdu_info_read(struct ar9170 *ar, char *dum, size_t bufsize, ssize_t *ret)
{
  #line 763 
  unsigned int __err;
  #line 763 
  char *buf;
  #line 763 
  int i;
  #line 763 
  int max_len;
  #line 763 
  int err;
  #line 763 
  max_len = 160;
  #line 763 
  buf = (char *)cif_vmalloc((unsigned long)max_len);
  #line 763 
  if (buf == (char *)0) 
                        #line 763 
                        return (char *)0;
  {
    #line 763 
    u32 __tmp[2U];
    #line 763 
    unsigned int __i;
    #line 763 
    __err = 4294967277U;
    #line 763 
    __i = 0U;
    #line 763 
    while (__i <= 1U) {
      #line 763 
      __tmp[__i] = hw_ampdu_info_regs[__i].reg;
      #line 763 
      ar->debug.stats.hw_ampdu_info_counter[__i] = 0U;
      #line 763 
      __i ++;
    }
    #line 763 
    if (ar->state > (unsigned int)CARL9170_IDLE) {
      #line 763 
      __err = (unsigned int)carl9170_read_mreg(ar,2,(u32 *)(& __tmp),
                           (u32 *)(& ar->debug.stats.hw_ampdu_info_counter));
    }
    }
  #line 763 
  err = (int)__err;
  #line 763 
  if (err != 0) {
    #line 763 
    *ret = (long)err;
    #line 763 
    return buf;
  }
  #line 763 
  i = 0;
  #line 763 
  while ((unsigned int)i <= 1U) {
    #line 763 
    *ret += (long)snprintf(buf + (unsigned long)*ret,
                 (unsigned long)((long)max_len - *ret),(char *)"%22s = %",
                 (char *)(& hw_ampdu_info_regs[i].nreg),
                 ar->debug.stats.hw_ampdu_info_counter[i]);
    #line 763 
    i ++;
  }
  #line 763 
  return buf;
}

#line 763  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
static struct carl9170_debugfs_fops carl_debugfs_hw_ampdu_info_ops = {.attr = (unsigned short)256U, .read = & carl9170_debugfs_hw_ampdu_info_read, .fops = {.owner = & __this_module, .read = & carl9170_debugfs_read, .write = & carl9170_debugfs_write, .open = & simple_open}, .req_dev_state = CARL9170_STARTED};
#line 764  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
static char *carl9170_debugfs_tx_status_0_read(struct ar9170 *ar, char *buf, size_t bufsize, ssize_t *len)
{
  #line 764 
  carl9170_debugfs_queue_dump(ar,buf,len,bufsize,& ar->tx_status[0]);
  #line 764 
  return buf;
}

#line 764  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
static struct carl9170_debugfs_fops carl_debugfs_tx_status_0_ops = {.read_bufsize = 8000U, .attr = (unsigned short)256U, .read = & carl9170_debugfs_tx_status_0_read, .fops = {.owner = & __this_module, .read = & carl9170_debugfs_read, .write = & carl9170_debugfs_write, .open = & simple_open}, .req_dev_state = CARL9170_STARTED};
#line 765  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
static char *carl9170_debugfs_tx_status_1_read(struct ar9170 *ar, char *buf, size_t bufsize, ssize_t *len)
{
  #line 765 
  carl9170_debugfs_queue_dump(ar,buf,len,bufsize,& ar->tx_status[1]);
  #line 765 
  return buf;
}

#line 765  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
static struct carl9170_debugfs_fops carl_debugfs_tx_status_1_ops = {.read_bufsize = 8000U, .attr = (unsigned short)256U, .read = & carl9170_debugfs_tx_status_1_read, .fops = {.owner = & __this_module, .read = & carl9170_debugfs_read, .write = & carl9170_debugfs_write, .open = & simple_open}, .req_dev_state = CARL9170_STARTED};
#line 766  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
static char *carl9170_debugfs_tx_status_2_read(struct ar9170 *ar, char *buf, size_t bufsize, ssize_t *len)
{
  #line 766 
  carl9170_debugfs_queue_dump(ar,buf,len,bufsize,& ar->tx_status[2]);
  #line 766 
  return buf;
}

#line 766  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
static struct carl9170_debugfs_fops carl_debugfs_tx_status_2_ops = {.read_bufsize = 8000U, .attr = (unsigned short)256U, .read = & carl9170_debugfs_tx_status_2_read, .fops = {.owner = & __this_module, .read = & carl9170_debugfs_read, .write = & carl9170_debugfs_write, .open = & simple_open}, .req_dev_state = CARL9170_STARTED};
#line 767  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
static char *carl9170_debugfs_tx_status_3_read(struct ar9170 *ar, char *buf, size_t bufsize, ssize_t *len)
{
  #line 767 
  carl9170_debugfs_queue_dump(ar,buf,len,bufsize,& ar->tx_status[3]);
  #line 767 
  return buf;
}

#line 767  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
static struct carl9170_debugfs_fops carl_debugfs_tx_status_3_ops = {.read_bufsize = 8000U, .attr = (unsigned short)256U, .read = & carl9170_debugfs_tx_status_3_read, .fops = {.owner = & __this_module, .read = & carl9170_debugfs_read, .write = & carl9170_debugfs_write, .open = & simple_open}, .req_dev_state = CARL9170_STARTED};
#line 768  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
static char *carl9170_debugfs_tx_pending_0_read(struct ar9170 *ar, char *buf, size_t bufsize, ssize_t *len)
{
  #line 768 
  carl9170_debugfs_queue_dump(ar,buf,len,bufsize,& ar->tx_pending[0]);
  #line 768 
  return buf;
}

#line 768  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
static struct carl9170_debugfs_fops carl_debugfs_tx_pending_0_ops = {.read_bufsize = 8000U, .attr = (unsigned short)256U, .read = & carl9170_debugfs_tx_pending_0_read, .fops = {.owner = & __this_module, .read = & carl9170_debugfs_read, .write = & carl9170_debugfs_write, .open = & simple_open}, .req_dev_state = CARL9170_STARTED};
#line 769  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
static char *carl9170_debugfs_tx_pending_1_read(struct ar9170 *ar, char *buf, size_t bufsize, ssize_t *len)
{
  #line 769 
  carl9170_debugfs_queue_dump(ar,buf,len,bufsize,& ar->tx_pending[1]);
  #line 769 
  return buf;
}

#line 769  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
static struct carl9170_debugfs_fops carl_debugfs_tx_pending_1_ops = {.read_bufsize = 8000U, .attr = (unsigned short)256U, .read = & carl9170_debugfs_tx_pending_1_read, .fops = {.owner = & __this_module, .read = & carl9170_debugfs_read, .write = & carl9170_debugfs_write, .open = & simple_open}, .req_dev_state = CARL9170_STARTED};
#line 770  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
static char *carl9170_debugfs_tx_pending_2_read(struct ar9170 *ar, char *buf, size_t bufsize, ssize_t *len)
{
  #line 770 
  carl9170_debugfs_queue_dump(ar,buf,len,bufsize,& ar->tx_pending[2]);
  #line 770 
  return buf;
}

#line 770  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
static struct carl9170_debugfs_fops carl_debugfs_tx_pending_2_ops = {.read_bufsize = 8000U, .attr = (unsigned short)256U, .read = & carl9170_debugfs_tx_pending_2_read, .fops = {.owner = & __this_module, .read = & carl9170_debugfs_read, .write = & carl9170_debugfs_write, .open = & simple_open}, .req_dev_state = CARL9170_STARTED};
#line 771  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
static char *carl9170_debugfs_tx_pending_3_read(struct ar9170 *ar, char *buf, size_t bufsize, ssize_t *len)
{
  #line 771 
  carl9170_debugfs_queue_dump(ar,buf,len,bufsize,& ar->tx_pending[3]);
  #line 771 
  return buf;
}

#line 771  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
static struct carl9170_debugfs_fops carl_debugfs_tx_pending_3_ops = {.read_bufsize = 8000U, .attr = (unsigned short)256U, .read = & carl9170_debugfs_tx_pending_3_read, .fops = {.owner = & __this_module, .read = & carl9170_debugfs_read, .write = & carl9170_debugfs_write, .open = & simple_open}, .req_dev_state = CARL9170_STARTED};
#line 772  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
static char *carl9170_debugfs_usb_tx_anch_urbs_read(struct ar9170 *ar, char *buf, size_t buf_size, ssize_t *len)
{
  #line 772 
  ;
  #line 772 
  ;
  #line 772 
  *len += (long)snprintf(buf + (unsigned long)*len,buf_size - (unsigned long)*len,
                 (char *)"%d",atomic_read_1(& ar->tx_anch_urbs));
  #line 772 
  return buf;
}

#line 772  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
static struct carl9170_debugfs_fops carl_debugfs_usb_tx_anch_urbs_ops = {.read_bufsize = 20U, .attr = (unsigned short)256U, .read = & carl9170_debugfs_usb_tx_anch_urbs_read, .fops = {.owner = & __this_module, .read = & carl9170_debugfs_read, .write = & carl9170_debugfs_write, .open = & simple_open}, .req_dev_state = CARL9170_STARTED};
#line 774  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
static char *carl9170_debugfs_usb_rx_anch_urbs_read(struct ar9170 *ar, char *buf, size_t buf_size, ssize_t *len)
{
  #line 774 
  ;
  #line 774 
  ;
  #line 774 
  *len += (long)snprintf(buf + (unsigned long)*len,buf_size - (unsigned long)*len,
                 (char *)"%d",atomic_read_1(& ar->rx_anch_urbs));
  #line 774 
  return buf;
}

#line 774  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
static struct carl9170_debugfs_fops carl_debugfs_usb_rx_anch_urbs_ops = {.read_bufsize = 20U, .attr = (unsigned short)256U, .read = & carl9170_debugfs_usb_rx_anch_urbs_read, .fops = {.owner = & __this_module, .read = & carl9170_debugfs_read, .write = & carl9170_debugfs_write, .open = & simple_open}, .req_dev_state = CARL9170_STARTED};
#line 776  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
static char *carl9170_debugfs_usb_rx_work_urbs_read(struct ar9170 *ar, char *buf, size_t buf_size, ssize_t *len)
{
  #line 776 
  ;
  #line 776 
  ;
  #line 776 
  *len += (long)snprintf(buf + (unsigned long)*len,buf_size - (unsigned long)*len,
                 (char *)"%d",atomic_read_1(& ar->rx_work_urbs));
  #line 776 
  return buf;
}

#line 776  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
static struct carl9170_debugfs_fops carl_debugfs_usb_rx_work_urbs_ops = {.read_bufsize = 20U, .attr = (unsigned short)256U, .read = & carl9170_debugfs_usb_rx_work_urbs_read, .fops = {.owner = & __this_module, .read = & carl9170_debugfs_read, .write = & carl9170_debugfs_write, .open = & simple_open}, .req_dev_state = CARL9170_STARTED};
#line 778  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
static char *carl9170_debugfs_usb_rx_pool_urbs_read(struct ar9170 *ar, char *buf, size_t buf_size, ssize_t *len)
{
  #line 778 
  ;
  #line 778 
  ;
  #line 778 
  *len += (long)snprintf(buf + (unsigned long)*len,buf_size - (unsigned long)*len,
                 (char *)"%d",atomic_read_1(& ar->rx_pool_urbs));
  #line 778 
  return buf;
}

#line 778  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
static struct carl9170_debugfs_fops carl_debugfs_usb_rx_pool_urbs_ops = {.read_bufsize = 20U, .attr = (unsigned short)256U, .read = & carl9170_debugfs_usb_rx_pool_urbs_read, .fops = {.owner = & __this_module, .read = & carl9170_debugfs_read, .write = & carl9170_debugfs_write, .open = & simple_open}, .req_dev_state = CARL9170_STARTED};
#line 781  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
static char *carl9170_debugfs_tx_total_queued_read(struct ar9170 *ar, char *buf, size_t buf_size, ssize_t *len)
{
  #line 781 
  ;
  #line 781 
  ;
  #line 781 
  *len += (long)snprintf(buf + (unsigned long)*len,buf_size - (unsigned long)*len,
                 (char *)"%d",atomic_read_1(& ar->tx_total_queued));
  #line 781 
  return buf;
}

#line 781  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
static struct carl9170_debugfs_fops carl_debugfs_tx_total_queued_ops = {.read_bufsize = 20U, .attr = (unsigned short)256U, .read = & carl9170_debugfs_tx_total_queued_read, .fops = {.owner = & __this_module, .read = & carl9170_debugfs_read, .write = & carl9170_debugfs_write, .open = & simple_open}, .req_dev_state = CARL9170_STARTED};
#line 783  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
static char *carl9170_debugfs_tx_ampdu_scheduler_read(struct ar9170 *ar, char *buf, size_t buf_size, ssize_t *len)
{
  #line 783 
  ;
  #line 783 
  ;
  #line 783 
  *len += (long)snprintf(buf + (unsigned long)*len,buf_size - (unsigned long)*len,
                 (char *)"%d",atomic_read_1(& ar->tx_ampdu_scheduler));
  #line 783 
  return buf;
}

#line 783  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
static struct carl9170_debugfs_fops carl_debugfs_tx_ampdu_scheduler_ops = {.read_bufsize = 20U, .attr = (unsigned short)256U, .read = & carl9170_debugfs_tx_ampdu_scheduler_read, .fops = {.owner = & __this_module, .read = & carl9170_debugfs_read, .write = & carl9170_debugfs_write, .open = & simple_open}, .req_dev_state = CARL9170_STARTED};
#line 786  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
static char *carl9170_debugfs_tx_total_pending_read(struct ar9170 *ar, char *buf, size_t buf_size, ssize_t *len)
{
  #line 786 
  ;
  #line 786 
  ;
  #line 786 
  *len += (long)snprintf(buf + (unsigned long)*len,buf_size - (unsigned long)*len,
                 (char *)"%d",atomic_read_1(& ar->tx_total_pending));
  #line 786 
  return buf;
}

#line 786  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
static struct carl9170_debugfs_fops carl_debugfs_tx_total_pending_ops = {.read_bufsize = 20U, .attr = (unsigned short)256U, .read = & carl9170_debugfs_tx_total_pending_read, .fops = {.owner = & __this_module, .read = & carl9170_debugfs_read, .write = & carl9170_debugfs_write, .open = & simple_open}, .req_dev_state = CARL9170_STARTED};
#line 789  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
static char *carl9170_debugfs_tx_ampdu_list_len_read(struct ar9170 *ar, char *buf, size_t buf_size, ssize_t *len)
{
  #line 789 
  *len += (long)snprintf(buf + (unsigned long)*len,buf_size - (unsigned long)*len,
               (char *)"%d",ar->tx_ampdu_list_len);
  #line 789 
  return buf;
}

#line 789  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
static struct carl9170_debugfs_fops carl_debugfs_tx_ampdu_list_len_ops = {.read_bufsize = 20U, .attr = (unsigned short)256U, .read = & carl9170_debugfs_tx_ampdu_list_len_read, .fops = {.owner = & __this_module, .read = & carl9170_debugfs_read, .write = & carl9170_debugfs_write, .open = & simple_open}, .req_dev_state = CARL9170_STARTED};
#line 792  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
static char *carl9170_debugfs_tx_ampdu_upload_read(struct ar9170 *ar, char *buf, size_t buf_size, ssize_t *len)
{
  #line 792 
  ;
  #line 792 
  ;
  #line 792 
  *len += (long)snprintf(buf + (unsigned long)*len,buf_size - (unsigned long)*len,
                 (char *)"%d",atomic_read_1(& ar->tx_ampdu_upload));
  #line 792 
  return buf;
}

#line 792  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
static struct carl9170_debugfs_fops carl_debugfs_tx_ampdu_upload_ops = {.read_bufsize = 20U, .attr = (unsigned short)256U, .read = & carl9170_debugfs_tx_ampdu_upload_read, .fops = {.owner = & __this_module, .read = & carl9170_debugfs_read, .write = & carl9170_debugfs_write, .open = & simple_open}, .req_dev_state = CARL9170_STARTED};
#line 795  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
static char *carl9170_debugfs_tx_janitor_last_run_read(struct ar9170 *ar, char *buf, size_t buf_size, ssize_t *len)
{
  #line 795 
  ;
  #line 795 
  ;
  #line 795 
  *len += (long)snprintf(buf + (unsigned long)*len,buf_size - (unsigned long)*len,
                 (char *)"last run:%d ms ago",
                 jiffies_to_msecs(jiffies - ar->tx_janitor_last_run));
  #line 795 
  return buf;
}

#line 795  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
static struct carl9170_debugfs_fops carl_debugfs_tx_janitor_last_run_ops = {.read_bufsize = 64U, .attr = (unsigned short)256U, .read = & carl9170_debugfs_tx_janitor_last_run_read, .fops = {.owner = & __this_module, .read = & carl9170_debugfs_read, .write = & carl9170_debugfs_write, .open = & simple_open}, .req_dev_state = CARL9170_STARTED};
#line 798  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
static char *carl9170_debugfs_tx_dropped_read(struct ar9170 *ar, char *buf, size_t buf_size, ssize_t *len)
{
  #line 798 
  *len += (long)snprintf(buf + (unsigned long)*len,buf_size - (unsigned long)*len,
               (char *)"%d",ar->tx_dropped);
  #line 798 
  return buf;
}

#line 798  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
static struct carl9170_debugfs_fops carl_debugfs_tx_dropped_ops = {.read_bufsize = 20U, .attr = (unsigned short)256U, .read = & carl9170_debugfs_tx_dropped_read, .fops = {.owner = & __this_module, .read = & carl9170_debugfs_read, .write = & carl9170_debugfs_write, .open = & simple_open}, .req_dev_state = CARL9170_STARTED};
#line 800  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
static char *carl9170_debugfs_rx_dropped_read(struct ar9170 *ar, char *buf, size_t buf_size, ssize_t *len)
{
  #line 800 
  *len += (long)snprintf(buf + (unsigned long)*len,buf_size - (unsigned long)*len,
               (char *)"%d",ar->rx_dropped);
  #line 800 
  return buf;
}

#line 800  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
static struct carl9170_debugfs_fops carl_debugfs_rx_dropped_ops = {.read_bufsize = 20U, .attr = (unsigned short)256U, .read = & carl9170_debugfs_rx_dropped_read, .fops = {.owner = & __this_module, .read = & carl9170_debugfs_read, .write = & carl9170_debugfs_write, .open = & simple_open}, .req_dev_state = CARL9170_STARTED};
#line 802  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
static char *carl9170_debugfs_sniffer_enabled_read(struct ar9170 *ar, char *buf, size_t buf_size, ssize_t *len)
{
  #line 802 
  *len += (long)snprintf(buf + (unsigned long)*len,buf_size - (unsigned long)*len,
               (char *)"%d",(int)ar->sniffer_enabled);
  #line 802 
  return buf;
}

#line 802  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
static struct carl9170_debugfs_fops carl_debugfs_sniffer_enabled_ops = {.read_bufsize = 20U, .attr = (unsigned short)256U, .read = & carl9170_debugfs_sniffer_enabled_read, .fops = {.owner = & __this_module, .read = & carl9170_debugfs_read, .write = & carl9170_debugfs_write, .open = & simple_open}, .req_dev_state = CARL9170_STARTED};
#line 803  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
static char *carl9170_debugfs_rx_software_decryption_read(struct ar9170 *ar, char *buf, size_t buf_size, ssize_t *len)
{
  #line 803 
  *len += (long)snprintf(buf + (unsigned long)*len,buf_size - (unsigned long)*len,
               (char *)"%d",(int)ar->rx_software_decryption);
  #line 803 
  return buf;
}

#line 803  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
static struct carl9170_debugfs_fops carl_debugfs_rx_software_decryption_ops = {.read_bufsize = 20U, .attr = (unsigned short)256U, .read = & carl9170_debugfs_rx_software_decryption_read, .fops = {.owner = & __this_module, .read = & carl9170_debugfs_read, .write = & carl9170_debugfs_write, .open = & simple_open}, .req_dev_state = CARL9170_STARTED};
#line 805  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
static char *carl9170_debugfs_ampdu_factor_read(struct ar9170 *ar, char *buf, size_t buf_size, ssize_t *len)
{
  #line 805 
  *len += (long)snprintf(buf + (unsigned long)*len,buf_size - (unsigned long)*len,
               (char *)"%d",ar->current_factor);
  #line 805 
  return buf;
}

#line 805  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
static struct carl9170_debugfs_fops carl_debugfs_ampdu_factor_ops = {.read_bufsize = 20U, .attr = (unsigned short)256U, .read = & carl9170_debugfs_ampdu_factor_read, .fops = {.owner = & __this_module, .read = & carl9170_debugfs_read, .write = & carl9170_debugfs_write, .open = & simple_open}, .req_dev_state = CARL9170_STARTED};
#line 807  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
static char *carl9170_debugfs_ampdu_density_read(struct ar9170 *ar, char *buf, size_t buf_size, ssize_t *len)
{
  #line 807 
  *len += (long)snprintf(buf + (unsigned long)*len,buf_size - (unsigned long)*len,
               (char *)"%d",ar->current_density);
  #line 807 
  return buf;
}

#line 807  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
static struct carl9170_debugfs_fops carl_debugfs_ampdu_density_ops = {.read_bufsize = 20U, .attr = (unsigned short)256U, .read = & carl9170_debugfs_ampdu_density_read, .fops = {.owner = & __this_module, .read = & carl9170_debugfs_read, .write = & carl9170_debugfs_write, .open = & simple_open}, .req_dev_state = CARL9170_STARTED};
#line 810  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
static char *carl9170_debugfs_beacon_int_read(struct ar9170 *ar, char *buf, size_t buf_size, ssize_t *len)
{
  #line 810 
  *len += (long)snprintf(buf + (unsigned long)*len,buf_size - (unsigned long)*len,
               (char *)"%d TU",ar->global_beacon_int);
  #line 810 
  return buf;
}

#line 810  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
static struct carl9170_debugfs_fops carl_debugfs_beacon_int_ops = {.read_bufsize = 20U, .attr = (unsigned short)256U, .read = & carl9170_debugfs_beacon_int_read, .fops = {.owner = & __this_module, .read = & carl9170_debugfs_read, .write = & carl9170_debugfs_write, .open = & simple_open}, .req_dev_state = CARL9170_STARTED};
#line 811  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
static char *carl9170_debugfs_pretbtt_read(struct ar9170 *ar, char *buf, size_t buf_size, ssize_t *len)
{
  #line 811 
  *len += (long)snprintf(buf + (unsigned long)*len,buf_size - (unsigned long)*len,
               (char *)"%d TU",ar->global_pretbtt);
  #line 811 
  return buf;
}

#line 811  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
static struct carl9170_debugfs_fops carl_debugfs_pretbtt_ops = {.read_bufsize = 20U, .attr = (unsigned short)256U, .read = & carl9170_debugfs_pretbtt_read, .fops = {.owner = & __this_module, .read = & carl9170_debugfs_read, .write = & carl9170_debugfs_write, .open = & simple_open}, .req_dev_state = CARL9170_STARTED};
#line 813  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
void carl9170_debugfs_register(struct ar9170 *ar)
{
  #line 815 
  ar->debug_dir = cif_debugfs_create_dir((char *)"carl9170",((ar->hw)->wiphy)->debugfsdir);
  #line 823 
  cif_debugfs_create_file((char *)"usb_tx_anch_urbs",(unsigned short)((int)carl_debugfs_usb_tx_anch_urbs_ops.attr),ar->debug_dir,(void *)ar,& carl_debugfs_usb_tx_anch_urbs_ops.fops);
  #line 824 
  cif_debugfs_create_file((char *)"usb_rx_pool_urbs",(unsigned short)((int)carl_debugfs_usb_rx_pool_urbs_ops.attr),ar->debug_dir,(void *)ar,& carl_debugfs_usb_rx_pool_urbs_ops.fops);
  #line 825 
  cif_debugfs_create_file((char *)"usb_rx_anch_urbs",(unsigned short)((int)carl_debugfs_usb_rx_anch_urbs_ops.attr),ar->debug_dir,(void *)ar,& carl_debugfs_usb_rx_anch_urbs_ops.fops);
  #line 826 
  cif_debugfs_create_file((char *)"usb_rx_work_urbs",(unsigned short)((int)carl_debugfs_usb_rx_work_urbs_ops.attr),ar->debug_dir,(void *)ar,& carl_debugfs_usb_rx_work_urbs_ops.fops);
  #line 828 
  cif_debugfs_create_file((char *)"tx_total_queued",(unsigned short)((int)carl_debugfs_tx_total_queued_ops.attr),ar->debug_dir,(void *)ar,& carl_debugfs_tx_total_queued_ops.fops);
  #line 829 
  cif_debugfs_create_file((char *)"tx_total_pending",(unsigned short)((int)carl_debugfs_tx_total_pending_ops.attr),ar->debug_dir,(void *)ar,& carl_debugfs_tx_total_pending_ops.fops);
  #line 830 
  cif_debugfs_create_file((char *)"tx_dropped",(unsigned short)((int)carl_debugfs_tx_dropped_ops.attr),ar->debug_dir,(void *)ar,& carl_debugfs_tx_dropped_ops.fops);
  #line 831 
  cif_debugfs_create_file((char *)"tx_stuck",(unsigned short)((int)carl_debugfs_tx_stuck_ops.attr),ar->debug_dir,(void *)ar,& carl_debugfs_tx_stuck_ops.fops);
  #line 832 
  cif_debugfs_create_file((char *)"tx_ampdu_upload",(unsigned short)((int)carl_debugfs_tx_ampdu_upload_ops.attr),ar->debug_dir,(void *)ar,& carl_debugfs_tx_ampdu_upload_ops.fops);
  #line 833 
  cif_debugfs_create_file((char *)"tx_ampdu_scheduler",(unsigned short)((int)carl_debugfs_tx_ampdu_scheduler_ops.attr),ar->debug_dir,(void *)ar,& carl_debugfs_tx_ampdu_scheduler_ops.fops);
  #line 834 
  cif_debugfs_create_file((char *)"tx_ampdu_list_len",(unsigned short)((int)carl_debugfs_tx_ampdu_list_len_ops.attr),ar->debug_dir,(void *)ar,& carl_debugfs_tx_ampdu_list_len_ops.fops);
  #line 836 
  cif_debugfs_create_file((char *)"rx_dropped",(unsigned short)((int)carl_debugfs_rx_dropped_ops.attr),ar->debug_dir,(void *)ar,& carl_debugfs_rx_dropped_ops.fops);
  #line 837 
  cif_debugfs_create_file((char *)"sniffer_enabled",(unsigned short)((int)carl_debugfs_sniffer_enabled_ops.attr),ar->debug_dir,(void *)ar,& carl_debugfs_sniffer_enabled_ops.fops);
  #line 838 
  cif_debugfs_create_file((char *)"rx_software_decryption",(unsigned short)((int)carl_debugfs_rx_software_decryption_ops.attr),ar->debug_dir,(void *)ar,& carl_debugfs_rx_software_decryption_ops.fops);
  #line 840 
  cif_debugfs_create_file((char *)"mem_usage",(unsigned short)((int)carl_debugfs_mem_usage_ops.attr),ar->debug_dir,(void *)ar,& carl_debugfs_mem_usage_ops.fops);
  #line 841 
  cif_debugfs_create_file((char *)"qos_stat",(unsigned short)((int)carl_debugfs_qos_stat_ops.attr),ar->debug_dir,(void *)ar,& carl_debugfs_qos_stat_ops.fops);
  #line 842 
  cif_debugfs_create_file((char *)"sta_psm",(unsigned short)((int)carl_debugfs_sta_psm_ops.attr),ar->debug_dir,(void *)ar,& carl_debugfs_sta_psm_ops.fops);
  #line 843 
  cif_debugfs_create_file((char *)"ampdu_state",(unsigned short)((int)carl_debugfs_ampdu_state_ops.attr),ar->debug_dir,(void *)ar,& carl_debugfs_ampdu_state_ops.fops);
  #line 845 
  cif_debugfs_create_file((char *)"hw_tx_tally",(unsigned short)((int)carl_debugfs_hw_tx_tally_ops.attr),ar->debug_dir,(void *)ar,& carl_debugfs_hw_tx_tally_ops.fops);
  #line 846 
  cif_debugfs_create_file((char *)"hw_rx_tally",(unsigned short)((int)carl_debugfs_hw_rx_tally_ops.attr),ar->debug_dir,(void *)ar,& carl_debugfs_hw_rx_tally_ops.fops);
  #line 847 
  cif_debugfs_create_file((char *)"hw_phy_errors",(unsigned short)((int)carl_debugfs_hw_phy_errors_ops.attr),ar->debug_dir,(void *)ar,& carl_debugfs_hw_phy_errors_ops.fops);
  #line 848 
  cif_debugfs_create_file((char *)"phy_noise",(unsigned short)((int)carl_debugfs_phy_noise_ops.attr),ar->debug_dir,(void *)ar,& carl_debugfs_phy_noise_ops.fops);
  #line 850 
  cif_debugfs_create_file((char *)"hw_wlan_queue",(unsigned short)((int)carl_debugfs_hw_wlan_queue_ops.attr),ar->debug_dir,(void *)ar,& carl_debugfs_hw_wlan_queue_ops.fops);
  #line 851 
  cif_debugfs_create_file((char *)"hw_pta_queue",(unsigned short)((int)carl_debugfs_hw_pta_queue_ops.attr),ar->debug_dir,(void *)ar,& carl_debugfs_hw_pta_queue_ops.fops);
  #line 852 
  cif_debugfs_create_file((char *)"hw_ampdu_info",(unsigned short)((int)carl_debugfs_hw_ampdu_info_ops.attr),ar->debug_dir,(void *)ar,& carl_debugfs_hw_ampdu_info_ops.fops);
  #line 854 
  cif_debugfs_create_file((char *)"ampdu_density",(unsigned short)((int)carl_debugfs_ampdu_density_ops.attr),ar->debug_dir,(void *)ar,& carl_debugfs_ampdu_density_ops.fops);
  #line 855 
  cif_debugfs_create_file((char *)"ampdu_factor",(unsigned short)((int)carl_debugfs_ampdu_factor_ops.attr),ar->debug_dir,(void *)ar,& carl_debugfs_ampdu_factor_ops.fops);
  #line 857 
  cif_debugfs_create_file((char *)"tx_janitor_last_run",(unsigned short)((int)carl_debugfs_tx_janitor_last_run_ops.attr),ar->debug_dir,(void *)ar,& carl_debugfs_tx_janitor_last_run_ops.fops);
  #line 859 
  cif_debugfs_create_file((char *)"tx_status_0",(unsigned short)((int)carl_debugfs_tx_status_0_ops.attr),ar->debug_dir,(void *)ar,& carl_debugfs_tx_status_0_ops.fops);
  #line 860 
  cif_debugfs_create_file((char *)"tx_status_1",(unsigned short)((int)carl_debugfs_tx_status_1_ops.attr),ar->debug_dir,(void *)ar,& carl_debugfs_tx_status_1_ops.fops);
  #line 861 
  cif_debugfs_create_file((char *)"tx_status_2",(unsigned short)((int)carl_debugfs_tx_status_2_ops.attr),ar->debug_dir,(void *)ar,& carl_debugfs_tx_status_2_ops.fops);
  #line 862 
  cif_debugfs_create_file((char *)"tx_status_3",(unsigned short)((int)carl_debugfs_tx_status_3_ops.attr),ar->debug_dir,(void *)ar,& carl_debugfs_tx_status_3_ops.fops);
  #line 864 
  cif_debugfs_create_file((char *)"tx_pending_0",(unsigned short)((int)carl_debugfs_tx_pending_0_ops.attr),ar->debug_dir,(void *)ar,& carl_debugfs_tx_pending_0_ops.fops);
  #line 865 
  cif_debugfs_create_file((char *)"tx_pending_1",(unsigned short)((int)carl_debugfs_tx_pending_1_ops.attr),ar->debug_dir,(void *)ar,& carl_debugfs_tx_pending_1_ops.fops);
  #line 866 
  cif_debugfs_create_file((char *)"tx_pending_2",(unsigned short)((int)carl_debugfs_tx_pending_2_ops.attr),ar->debug_dir,(void *)ar,& carl_debugfs_tx_pending_2_ops.fops);
  #line 867 
  cif_debugfs_create_file((char *)"tx_pending_3",(unsigned short)((int)carl_debugfs_tx_pending_3_ops.attr),ar->debug_dir,(void *)ar,& carl_debugfs_tx_pending_3_ops.fops);
  #line 869 
  cif_debugfs_create_file((char *)"hw_ioread32",(unsigned short)((int)carl_debugfs_hw_ioread32_ops.attr),ar->debug_dir,(void *)ar,& carl_debugfs_hw_ioread32_ops.fops);
  #line 870 
  cif_debugfs_create_file((char *)"hw_iowrite32",(unsigned short)((int)carl_debugfs_hw_iowrite32_ops.attr),ar->debug_dir,(void *)ar,& carl_debugfs_hw_iowrite32_ops.fops);
  #line 871 
  cif_debugfs_create_file((char *)"bug",(unsigned short)((int)carl_debugfs_bug_ops.attr),ar->debug_dir,(void *)ar,& carl_debugfs_bug_ops.fops);
  #line 873 
  cif_debugfs_create_file((char *)"erp",(unsigned short)((int)carl_debugfs_erp_ops.attr),ar->debug_dir,(void *)ar,& carl_debugfs_erp_ops.fops);
  #line 875 
  cif_debugfs_create_file((char *)"vif_dump",(unsigned short)((int)carl_debugfs_vif_dump_ops.attr),ar->debug_dir,(void *)ar,& carl_debugfs_vif_dump_ops.fops);
  #line 877 
  cif_debugfs_create_file((char *)"beacon_int",(unsigned short)((int)carl_debugfs_beacon_int_ops.attr),ar->debug_dir,(void *)ar,& carl_debugfs_beacon_int_ops.fops);
  #line 878 
  cif_debugfs_create_file((char *)"pretbtt",(unsigned short)((int)carl_debugfs_pretbtt_ops.attr),ar->debug_dir,(void *)ar,& carl_debugfs_pretbtt_ops.fops);
  #line 879 
  return;
}

#line 883  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/debug.c"
void carl9170_debugfs_unregister(struct ar9170 *ar)
{
  #line 885 
  debugfs_remove_recursive(ar->debug_dir);
  #line 886 
  return;
}

#line 93  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/debug.i.aux"
#line 93 
struct dentry *emg_debugfs_create_dir(char *arg0, struct dentry *arg1);
#line 94 
#line 94 
struct dentry *emg_debugfs_create_file(char *arg0, unsigned short arg1, struct dentry *arg2, void *arg3, struct file_operations *arg4);
#line 107  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/debug.i.aux"
long emg_wrapper_carl9170_debugfs_read(struct file *arg0, char *arg1, unsigned long arg2, long long *arg3)
{
  #line 108 
  return carl9170_debugfs_read(arg0,arg1,arg2,arg3);
}

#line 112  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/debug.i.aux"
long emg_wrapper_carl9170_debugfs_write(struct file *arg0, char *arg1, unsigned long arg2, long long *arg3)
{
  #line 113 
  return carl9170_debugfs_write(arg0,arg1,arg2,arg3);
}

#line 821  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/debug.i.aux"
static void *cif_vmalloc(unsigned long size)
{
  #line 824 
  return ldv_vmalloc(size);
}

#line 828  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/debug.i.aux"
static void cif_mutex_lock_mutex_of_ar9170_0(struct mutex *lock)
{
  #line 831 
  ldv_mutex_model_lock(lock,(char *)"mutex_of_ar9170");
  #line 832 
  return;
}

#line 835  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/debug.i.aux"
static void cif_vfree(void *addr)
{
  #line 838 
  ldv_vfree(addr);
  #line 839 
  return;
}

#line 842  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/debug.i.aux"
static void cif_mutex_unlock_mutex_of_ar9170_0(struct mutex *lock)
{
  #line 845 
  ldv_mutex_model_unlock(lock,(char *)"mutex_of_ar9170");
  #line 846 
  return;
}

#line 849  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/debug.i.aux"
static int cif_mutex_trylock_mutex_of_ar9170(struct mutex *lock)
{
  #line 852 
  int is_mutex_held_by_another_thread = ldv_undef_int();
  #line 854 
  if (is_mutex_held_by_another_thread != 0) 
                                            #line 857 
                                            return 0;
  else {
    #line 861 
    ldv_mutex_model_lock(lock,(char *)"mutex_of_ar9170");
    #line 863 
    return 1;
  }
}

#line 868  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/debug.i.aux"
static void cif_spin_lock_bh_mem_lock_of_ar9170_0(spinlock_t *lock)
{
  #line 871 
  ldv_spin_model_lock((char *)"mem_lock_of_ar9170");
  #line 873 
  spin_lock_bh_1(lock);
  #line 874 
  return;
}

#line 877  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/debug.i.aux"
static void cif_spin_unlock_bh_mem_lock_of_ar9170_0(spinlock_t *lock)
{
  #line 880 
  ldv_spin_model_unlock((char *)"mem_lock_of_ar9170");
  #line 882 
  spin_unlock_bh_1(lock);
  #line 883 
  return;
}

#line 886  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/debug.i.aux"
static void cif_spin_lock_bh_tx_stats_lock_of_ar9170_0(spinlock_t *lock)
{
  #line 889 
  ldv_spin_model_lock((char *)"tx_stats_lock_of_ar9170");
  #line 891 
  spin_lock_bh_1(lock);
  #line 892 
  return;
}

#line 895  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/debug.i.aux"
static void cif_spin_unlock_bh_tx_stats_lock_of_ar9170_0(spinlock_t *lock)
{
  #line 898 
  ldv_spin_model_unlock((char *)"tx_stats_lock_of_ar9170");
  #line 900 
  spin_unlock_bh_1(lock);
  #line 901 
  return;
}

#line 904  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/debug.i.aux"
static void cif_spin_lock_bh_lock_of_carl9170_sta_tid_0(spinlock_t *lock)
{
  #line 907 
  ldv_spin_model_lock((char *)"lock_of_carl9170_sta_tid");
  #line 909 
  spin_lock_bh_1(lock);
  #line 910 
  return;
}

#line 913  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/debug.i.aux"
static void cif_spin_unlock_bh_lock_of_carl9170_sta_tid_0(spinlock_t *lock)
{
  #line 916 
  ldv_spin_model_unlock((char *)"lock_of_carl9170_sta_tid");
  #line 918 
  spin_unlock_bh_1(lock);
  #line 919 
  return;
}

#line 922  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/debug.i.aux"
static void cif_spin_lock_bh_lock_of_sk_buff_head_0(spinlock_t *lock)
{
  #line 925 
  ldv_spin_model_lock((char *)"lock_of_sk_buff_head");
  #line 927 
  spin_lock_bh_1(lock);
  #line 928 
  return;
}

#line 931  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/debug.i.aux"
static void cif_spin_unlock_bh_lock_of_sk_buff_head_0(spinlock_t *lock)
{
  #line 934 
  ldv_spin_model_unlock((char *)"lock_of_sk_buff_head");
  #line 936 
  spin_unlock_bh_1(lock);
  #line 937 
  return;
}

#line 940  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/debug.i.aux"
static struct dentry *cif_debugfs_create_dir(char *name, struct dentry *parent)
{
  #line 944 
  return emg_debugfs_create_dir(name,parent);
}

#line 948  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/debug.i.aux"
static struct dentry *cif_debugfs_create_file(char *name, umode_t mode, struct dentry *parent, void *data, struct file_operations *fops)
{
  #line 952 
  return emg_debugfs_create_file(name,(unsigned short)((int)mode),parent,data,
                              fops);
}

/* compiler builtin: 
   void __builtin_unreachable(void);   */
#line 162  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bitops.h"
__inline static __s32 sign_extend32(__u32 value, int index)
{
  #line 164 
  __u8 shift = (unsigned char)(31U - (unsigned int)((unsigned char)index));
  #line 165 
  return (int)(value << (int)shift) >> (int)shift;
}

#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bitrev.h"
#line 15 
extern u8 byte_rev_table[256U];
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bitrev.h"
__inline static u8 __bitrev8(u8 byte)
{
  #line 18 
  return byte_rev_table[(int)byte];
}

#line 6078  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
__inline static bool conf_is_ht40(struct ieee80211_conf *conf)
{
  #line 6080 
  return (_Bool)(conf->chandef.width == (unsigned int)NL80211_CHAN_WIDTH_40);
}

#line 6084  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
__inline static bool conf_is_ht(struct ieee80211_conf *conf)
{
  #line 6087 
  return (_Bool)(((unsigned int)conf->chandef.width + 4294967290U > 1U && conf->chandef.width != (unsigned int)NL80211_CHAN_WIDTH_20_NOHT) != 0);
}

#line 266  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/regd.h"
#line 266 
u32 ath_regd_get_band_ctl(struct ath_regulatory *, enum nl80211_band);
#line 568  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/carl9170.h"
#line 568 
int carl9170_set_mac_tpc(struct ar9170 *ar, struct ieee80211_channel *channel);
#line 44  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/phy.c"
static int carl9170_init_power_cal(struct ar9170 *ar)
{
  #line 46 
  int __nreg = 0;
  #line 46 
  int __err = 0;
  #line 46 
  struct ar9170 *__ar = ar;
  #line 48 
  __ar->__anonCompField_ar9170_205.cmd_buf[__nreg * 2 + 1] = 1857852U;
  #line 48 
  __ar->__anonCompField_ar9170_205.cmd_buf[(__nreg + 1) * 2] = 127U;
  #line 48 
  __nreg ++;
  #line 48 
  if (__nreg > 6) {
    #line 48 
    if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                      #line 48 
                                                      __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0); else 
                                                                    #line 48 
                                                                    goto __regwrite_out;
    #line 48 
    __nreg = 0;
    #line 48 
    if (__err != 0) 
                    #line 48 
                    goto __regwrite_out;
  }
  #line 49 
  __ar->__anonCompField_ar9170_205.cmd_buf[__nreg * 2 + 1] = 1857844U;
  #line 49 
  __ar->__anonCompField_ar9170_205.cmd_buf[(__nreg + 1) * 2] = 1061109567U;
  #line 49 
  __nreg ++;
  #line 49 
  if (__nreg > 6) {
    #line 49 
    if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                      #line 49 
                                                      __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0); else 
                                                                    #line 49 
                                                                    goto __regwrite_out;
    #line 49 
    __nreg = 0;
    #line 49 
    if (__err != 0) 
                    #line 49 
                    goto __regwrite_out;
  }
  #line 50 
  __ar->__anonCompField_ar9170_205.cmd_buf[__nreg * 2 + 1] = 1857848U;
  #line 50 
  __ar->__anonCompField_ar9170_205.cmd_buf[(__nreg + 1) * 2] = 1061109567U;
  #line 50 
  __nreg ++;
  #line 50 
  if (__nreg > 6) {
    #line 50 
    if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                      #line 50 
                                                      __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0); else 
                                                                    #line 50 
                                                                    goto __regwrite_out;
    #line 50 
    __nreg = 0;
    #line 50 
    if (__err != 0) 
                    #line 50 
                    goto __regwrite_out;
  }
  #line 51 
  __ar->__anonCompField_ar9170_205.cmd_buf[__nreg * 2 + 1] = 1860148U;
  #line 51 
  __ar->__anonCompField_ar9170_205.cmd_buf[(__nreg + 1) * 2] = 1061109567U;
  #line 51 
  __nreg ++;
  #line 51 
  if (__nreg > 6) {
    #line 51 
    if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                      #line 51 
                                                      __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0); else 
                                                                    #line 51 
                                                                    goto __regwrite_out;
    #line 51 
    __nreg = 0;
    #line 51 
    if (__err != 0) 
                    #line 51 
                    goto __regwrite_out;
  }
  #line 52 
  __ar->__anonCompField_ar9170_205.cmd_buf[__nreg * 2 + 1] = 1860152U;
  #line 52 
  __ar->__anonCompField_ar9170_205.cmd_buf[(__nreg + 1) * 2] = 1061109567U;
  #line 52 
  __nreg ++;
  #line 52 
  if (__nreg > 6) {
    #line 52 
    if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                      #line 52 
                                                      __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0); else 
                                                                    #line 52 
                                                                    goto __regwrite_out;
    #line 52 
    __nreg = 0;
    #line 52 
    if (__err != 0) 
                    #line 52 
                    goto __regwrite_out;
  }
  #line 53 
  __ar->__anonCompField_ar9170_205.cmd_buf[__nreg * 2 + 1] = 1860492U;
  #line 53 
  __ar->__anonCompField_ar9170_205.cmd_buf[(__nreg + 1) * 2] = 1061109567U;
  #line 53 
  __nreg ++;
  #line 53 
  if (__nreg > 6) {
    #line 53 
    if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                      #line 53 
                                                      __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0); else 
                                                                    #line 53 
                                                                    goto __regwrite_out;
    #line 53 
    __nreg = 0;
    #line 53 
    if (__err != 0) 
                    #line 53 
                    goto __regwrite_out;
  }
  #line 54 
  __ar->__anonCompField_ar9170_205.cmd_buf[__nreg * 2 + 1] = 1860496U;
  #line 54 
  __ar->__anonCompField_ar9170_205.cmd_buf[(__nreg + 1) * 2] = 1061109567U;
  #line 54 
  __nreg ++;
  #line 54 
  if (__nreg > 6) {
    #line 54 
    if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                      #line 54 
                                                      __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0); else 
                                                                    #line 54 
                                                                    goto __regwrite_out;
    #line 54 
    __nreg = 0;
    #line 54 
    if (__err != 0) 
                    #line 54 
                    goto __regwrite_out;
  }
  #line 55 
  __ar->__anonCompField_ar9170_205.cmd_buf[__nreg * 2 + 1] = 1860556U;
  #line 55 
  __ar->__anonCompField_ar9170_205.cmd_buf[(__nreg + 1) * 2] = 1061109567U;
  #line 55 
  __nreg ++;
  #line 55 
  if (__nreg > 6) {
    #line 55 
    if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                      #line 55 
                                                      __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0); else 
                                                                    #line 55 
                                                                    goto __regwrite_out;
    #line 55 
    __nreg = 0;
    #line 55 
    if (__err != 0) 
                    #line 55 
                    goto __regwrite_out;
  }
  #line 56 
  __ar->__anonCompField_ar9170_205.cmd_buf[__nreg * 2 + 1] = 1860560U;
  #line 56 
  __ar->__anonCompField_ar9170_205.cmd_buf[(__nreg + 1) * 2] = 1061109567U;
  #line 56 
  __nreg ++;
  #line 56 
  if (__nreg > 6) {
    #line 56 
    if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                      #line 56 
                                                      __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0); else 
                                                                    #line 56 
                                                                    goto __regwrite_out;
    #line 56 
    __nreg = 0;
    #line 56 
    if (__err != 0) 
                    #line 56 
                    goto __regwrite_out;
  }
  #line 57 
  __ar->__anonCompField_ar9170_205.cmd_buf[__nreg * 2 + 1] = 1860564U;
  #line 57 
  __ar->__anonCompField_ar9170_205.cmd_buf[(__nreg + 1) * 2] = 1061109567U;
  #line 57 
  __nreg ++;
  #line 57 
  if (__nreg > 6) {
    #line 57 
    if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                      #line 57 
                                                      __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0); else 
                                                                    #line 57 
                                                                    goto __regwrite_out;
    #line 57 
    __nreg = 0;
    #line 57 
    if (__err != 0) 
                    #line 57 
                    goto __regwrite_out;
  }
  #line 59 
  __regwrite_out: 
                  #line 59 
  ;
  #line 59 
  if (__err == 0 && __nreg != 0) {
    #line 59 
    if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                      #line 59 
                                                      __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0);
    #line 59 
    __nreg = 0;
  }
  #line 60 
  return __err;
}

#line 67  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/phy.c"
static struct carl9170_phy_init ar5416_phy_init[331U] = {{.reg = 1857536U, ._5ghz_20 = 7U, ._5ghz_40 = 7U, ._2ghz_40 = 7U, ._2ghz_20 = 7U}, {.reg = 1857540U, ._5ghz_20 = 768U, ._5ghz_40 = 964U, ._2ghz_40 = 964U, ._2ghz_20 = 768U}, {.reg = 1857544U}, {.reg = 1857548U, ._5ghz_20 = 2911145497U, ._5ghz_40 = 2911145497U, ._2ghz_40 = 2911145497U, ._2ghz_20 = 2911145497U}, {.reg = 1857552U, ._5ghz_20 = 2098520064U, ._5ghz_40 = 2098520064U, ._2ghz_40 = 2098520064U, ._2ghz_20 = 2098520064U}, {.reg = 1857556U, ._5ghz_20 = 2617941867U, ._5ghz_40 = 2617941867U, ._2ghz_40 = 2617941867U, ._2ghz_20 = 2617941867U}, {.reg = 1857560U, ._5ghz_20 = 144U, ._5ghz_40 = 144U, ._2ghz_40 = 144U, ._2ghz_20 = 144U}, {.reg = 1857564U}, {.reg = 1857568U, ._5ghz_20 = 33686016U, ._5ghz_40 = 33686016U, ._2ghz_40 = 33686016U, ._2ghz_20 = 33686016U}, {.reg = 1857572U, ._5ghz_20 = 3598U, ._5ghz_40 = 3598U, ._2ghz_40 = 3598U, ._2ghz_20 = 3598U}, {.reg = 1857576U, ._5ghz_20 = 167903233U, ._5ghz_40 = 167903233U, ._2ghz_40 = 167903233U, ._2ghz_20 = 167903233U}, {.reg = 1857580U, ._5ghz_20 = 40960U, ._5ghz_40 = 40960U, ._2ghz_40 = 40960U, ._2ghz_20 = 40960U}, {.reg = 1857584U}, {.reg = 1857588U, ._5ghz_20 = 3598U, ._5ghz_40 = 3598U, ._2ghz_40 = 3598U, ._2ghz_20 = 3598U}, {.reg = 1857592U, ._5ghz_20 = 7U, ._5ghz_40 = 7U, ._2ghz_40 = 7U, ._2ghz_20 = 7U}, {.reg = 1857596U, ._5ghz_20 = 2098176U, ._5ghz_40 = 2098176U, ._2ghz_40 = 2098176U, ._2ghz_20 = 2098176U}, {.reg = 1857600U, ._5ghz_20 = 543817774U, ._5ghz_40 = 543817774U, ._2ghz_40 = 543817774U, ._2ghz_20 = 543817774U}, {.reg = 1857604U, ._5ghz_20 = 326243870U, ._5ghz_40 = 326245406U, ._2ghz_40 = 326245412U, ._2ghz_20 = 326244004U}, {.reg = 1857608U, ._5ghz_20 = 1731173U, ._5ghz_40 = 1731173U, ._2ghz_40 = 1669736U, ._2ghz_20 = 1669736U}, {.reg = 1857612U, ._5ghz_20 = 310649660U, ._5ghz_40 = 310649660U, ._2ghz_40 = 310649660U, ._2ghz_20 = 310649660U}, {.reg = 1857616U, ._5ghz_20 = 1816704228U, ._5ghz_40 = 1833481444U, ._2ghz_40 = 1833480420U, ._2ghz_20 = 1816703204U}, {.reg = 1857620U, ._5ghz_20 = 2137U, ._5ghz_40 = 2137U, ._2ghz_40 = 2137U, ._2ghz_20 = 2137U}, {.reg = 1857624U, ._5ghz_20 = 2127039790U, ._5ghz_40 = 2127039790U, ._2ghz_40 = 2127039790U, ._2ghz_20 = 2127039790U}, {.reg = 1857628U, ._5ghz_20 = 825842782U, ._5ghz_40 = 825843806U, ._2ghz_40 = 825843806U, ._2ghz_20 = 825842782U}, {.reg = 1857632U, ._5ghz_20 = 318736U, ._5ghz_40 = 318736U, ._2ghz_40 = 318752U, ._2ghz_20 = 318752U}, {.reg = 1857636U, ._5ghz_20 = 116224U, ._5ghz_40 = 116224U, ._2ghz_40 = 116224U, ._2ghz_20 = 116224U}, {.reg = 1857640U, ._5ghz_20 = 1083851152U, ._5ghz_40 = 1083851152U, ._2ghz_40 = 1083851152U, ._2ghz_20 = 1083851152U}, {.reg = 1857644U, ._5ghz_20 = 84717697U, ._5ghz_40 = 84717697U, ._2ghz_40 = 84717697U, ._2ghz_20 = 84717697U}, {.reg = 1857792U}, {.reg = 1857796U}, {.reg = 1857800U}, {.reg = 1857804U}, {.reg = 1857812U, ._5ghz_20 = 2000U, ._5ghz_40 = 2000U, ._2ghz_40 = 2200U, ._2ghz_20 = 2200U}, {.reg = 1857816U, ._5ghz_20 = 280U, ._5ghz_40 = 560U, ._2ghz_40 = 616U, ._2ghz_20 = 308U}, {.reg = 1857820U, ._5ghz_20 = 268439551U, ._5ghz_40 = 268439551U, ._2ghz_40 = 268439551U, ._2ghz_20 = 268439551U}, {.reg = 1857824U, ._5ghz_20 = 84936732U, ._5ghz_40 = 84936732U, ._2ghz_40 = 84934684U, ._2ghz_20 = 84934684U}, {.reg = 1857828U, ._5ghz_20 = 3490023957U, ._5ghz_40 = 3490023957U, ._2ghz_40 = 3490023957U, ._2ghz_20 = 3490023957U}, {.reg = 1857832U, ._5ghz_20 = 1U, ._5ghz_40 = 1U, ._2ghz_40 = 1U, ._2ghz_20 = 1U}, {.reg = 1857836U, ._5ghz_20 = 4U, ._5ghz_40 = 4U, ._2ghz_40 = 4U, ._2ghz_20 = 4U}, {.reg = 1857844U, ._5ghz_20 = 1061109567U, ._5ghz_40 = 1061109567U, ._2ghz_40 = 1061109567U, ._2ghz_20 = 1061109567U}, {.reg = 1857848U, ._5ghz_20 = 1061109567U, ._5ghz_40 = 1061109567U, ._2ghz_40 = 1061109567U, ._2ghz_20 = 1061109567U}, {.reg = 1857852U, ._5ghz_20 = 127U, ._5ghz_40 = 127U, ._2ghz_40 = 127U, ._2ghz_20 = 127U}, {.reg = 1857860U, ._5ghz_20 = 3753381920U, ._5ghz_40 = 3753381920U, ._2ghz_40 = 3753381920U, ._2ghz_20 = 3753381920U}, {.reg = 1857864U, ._5ghz_20 = 2457907730U, ._5ghz_40 = 2457907730U, ._2ghz_40 = 2457907730U, ._2ghz_20 = 2457907730U}, {.reg = 1857868U, ._5ghz_20 = 131112U, ._5ghz_40 = 131112U, ._2ghz_40 = 131112U, ._2ghz_20 = 131112U}, {.reg = 1857876U, ._5ghz_20 = 1565581704U, ._5ghz_40 = 1565581704U, ._2ghz_40 = 1565581704U, ._2ghz_20 = 1565581704U}, {.reg = 1857880U, ._5ghz_20 = 532479U, ._5ghz_40 = 532479U, ._2ghz_40 = 532479U, ._2ghz_20 = 532479U}, {.reg = 1857888U, ._5ghz_20 = 39744U, ._5ghz_40 = 39744U, ._2ghz_40 = 39744U, ._2ghz_20 = 39744U}, {.reg = 1857892U, ._5ghz_20 = 4384U, ._5ghz_40 = 4384U, ._2ghz_40 = 4384U, ._2ghz_20 = 4384U}, {.reg = 1857904U, ._5ghz_20 = 420459797U, ._5ghz_40 = 420459797U, ._2ghz_40 = 420459797U, ._2ghz_20 = 420459797U}, {.reg = 1857908U}, {.reg = 1857912U, ._5ghz_20 = 1U, ._5ghz_40 = 1U, ._2ghz_40 = 1U, ._2ghz_20 = 1U}, {.reg = 1857916U}, {.reg = 1857920U}, {.reg = 1857924U}, {.reg = 1857928U}, {.reg = 1857932U}, {.reg = 1857936U}, {.reg = 1857940U}, {.reg = 1857944U}, {.reg = 1857948U}, {.reg = 1857952U}, {.reg = 1857956U, ._5ghz_20 = 7U, ._5ghz_40 = 7U, ._2ghz_40 = 7U, ._2ghz_20 = 7U}, {.reg = 1857960U, ._5ghz_20 = 2096896U, ._5ghz_40 = 2096896U, ._2ghz_40 = 2096896U, ._2ghz_20 = 2096896U}, {.reg = 1857964U, ._5ghz_20 = 7274692U, ._5ghz_40 = 7274692U, ._2ghz_40 = 7274692U, ._2ghz_20 = 7274692U}, {.reg = 1857968U, ._5ghz_20 = 50663424U, ._5ghz_40 = 50663424U, ._2ghz_40 = 50663424U, ._2ghz_20 = 50663424U}, {.reg = 1857972U, ._5ghz_20 = 2080U, ._5ghz_40 = 2080U, ._2ghz_40 = 2080U, ._2ghz_20 = 2080U}, {.reg = 1857980U, ._5ghz_20 = 1577984U, ._5ghz_40 = 1577984U, ._2ghz_40 = 1577984U, ._2ghz_20 = 1577984U}, {.reg = 1857984U, ._5ghz_20 = 59316670U, ._5ghz_40 = 59316670U, ._2ghz_40 = 59316670U, ._2ghz_20 = 59316670U}, {.reg = 1857988U, ._5ghz_20 = 104034167U, ._5ghz_40 = 104034167U, ._2ghz_40 = 104034167U, ._2ghz_20 = 104034167U}, {.reg = 1857992U, ._5ghz_20 = 1794528044U, ._5ghz_40 = 1794528044U, ._2ghz_40 = 1794528044U, ._2ghz_20 = 1794528044U}, {.reg = 1857996U, ._5ghz_20 = 150046408U, ._5ghz_40 = 150046408U, ._2ghz_40 = 150046408U, ._2ghz_20 = 150046408U}, {.reg = 1858000U, ._5ghz_20 = 287620U, ._5ghz_40 = 287620U, ._2ghz_40 = 287620U, ._2ghz_20 = 287620U}, {.reg = 1858004U}, {.reg = 1858008U}, {.reg = 1858012U}, {.reg = 1858016U, ._5ghz_20 = 512U, ._5ghz_40 = 512U, ._2ghz_40 = 512U, ._2ghz_20 = 512U}, {.reg = 1858020U, ._5ghz_20 = 1684300900U, ._5ghz_40 = 1684300900U, ._2ghz_40 = 1684300900U, ._2ghz_20 = 1684300900U}, {.reg = 1858024U, ._5ghz_20 = 1014528120U, ._5ghz_40 = 1014528120U, ._2ghz_40 = 1014528120U, ._2ghz_20 = 1014528120U}, {.reg = 1858028U, ._5ghz_20 = 170U, ._5ghz_40 = 170U, ._2ghz_40 = 170U, ._2ghz_20 = 170U}, {.reg = 1858032U}, {.reg = 1858044U, ._5ghz_20 = 4162U, ._5ghz_40 = 4162U, ._2ghz_40 = 4162U, ._2ghz_20 = 4162U}, {.reg = 1858048U}, {.reg = 1858052U, ._5ghz_20 = 64U, ._5ghz_40 = 64U, ._2ghz_40 = 64U, ._2ghz_20 = 64U}, {.reg = 1858056U, ._5ghz_20 = 128U, ._5ghz_40 = 128U, ._2ghz_40 = 128U, ._2ghz_20 = 128U}, {.reg = 1858060U, ._5ghz_20 = 417U, ._5ghz_40 = 417U, ._2ghz_40 = 321U, ._2ghz_20 = 321U}, {.reg = 1858064U, ._5ghz_20 = 481U, ._5ghz_40 = 481U, ._2ghz_40 = 385U, ._2ghz_20 = 385U}, {.reg = 1858068U, ._5ghz_20 = 33U, ._5ghz_40 = 33U, ._2ghz_40 = 449U, ._2ghz_20 = 449U}, {.reg = 1858072U, ._5ghz_20 = 97U, ._5ghz_40 = 97U, ._2ghz_40 = 1U, ._2ghz_20 = 1U}, {.reg = 1858076U, ._5ghz_20 = 360U, ._5ghz_40 = 360U, ._2ghz_40 = 65U, ._2ghz_20 = 65U}, {.reg = 1858080U, ._5ghz_20 = 424U, ._5ghz_40 = 424U, ._2ghz_40 = 424U, ._2ghz_20 = 424U}, {.reg = 1858084U, ._5ghz_20 = 488U, ._5ghz_40 = 488U, ._2ghz_40 = 488U, ._2ghz_20 = 488U}, {.reg = 1858088U, ._5ghz_20 = 40U, ._5ghz_40 = 40U, ._2ghz_40 = 40U, ._2ghz_20 = 40U}, {.reg = 1858092U, ._5ghz_20 = 104U, ._5ghz_40 = 104U, ._2ghz_40 = 104U, ._2ghz_20 = 104U}, {.reg = 1858096U, ._5ghz_20 = 393U, ._5ghz_40 = 393U, ._2ghz_40 = 168U, ._2ghz_20 = 168U}, {.reg = 1858100U, ._5ghz_20 = 457U, ._5ghz_40 = 457U, ._2ghz_40 = 361U, ._2ghz_20 = 361U}, {.reg = 1858104U, ._5ghz_20 = 9U, ._5ghz_40 = 9U, ._2ghz_40 = 425U, ._2ghz_20 = 425U}, {.reg = 1858108U, ._5ghz_20 = 73U, ._5ghz_40 = 73U, ._2ghz_40 = 489U, ._2ghz_20 = 489U}, {.reg = 1858112U, ._5ghz_20 = 137U, ._5ghz_40 = 137U, ._2ghz_40 = 41U, ._2ghz_20 = 41U}, {.reg = 1858116U, ._5ghz_20 = 368U, ._5ghz_40 = 368U, ._2ghz_40 = 105U, ._2ghz_20 = 105U}, {.reg = 1858120U, ._5ghz_20 = 432U, ._5ghz_40 = 432U, ._2ghz_40 = 400U, ._2ghz_20 = 400U}, {.reg = 1858124U, ._5ghz_20 = 496U, ._5ghz_40 = 496U, ._2ghz_40 = 464U, ._2ghz_20 = 464U}, {.reg = 1858128U, ._5ghz_20 = 48U, ._5ghz_40 = 48U, ._2ghz_40 = 16U, ._2ghz_20 = 16U}, {.reg = 1858132U, ._5ghz_20 = 112U, ._5ghz_40 = 112U, ._2ghz_40 = 80U, ._2ghz_20 = 80U}, {.reg = 1858136U, ._5ghz_20 = 401U, ._5ghz_40 = 401U, ._2ghz_40 = 144U, ._2ghz_20 = 144U}, {.reg = 1858140U, ._5ghz_20 = 465U, ._5ghz_40 = 465U, ._2ghz_40 = 337U, ._2ghz_20 = 337U}, {.reg = 1858144U, ._5ghz_20 = 17U, ._5ghz_40 = 17U, ._2ghz_40 = 401U, ._2ghz_20 = 401U}, {.reg = 1858148U, ._5ghz_20 = 81U, ._5ghz_40 = 81U, ._2ghz_40 = 465U, ._2ghz_20 = 465U}, {.reg = 1858152U, ._5ghz_20 = 145U, ._5ghz_40 = 145U, ._2ghz_40 = 17U, ._2ghz_20 = 17U}, {.reg = 1858156U, ._5ghz_20 = 440U, ._5ghz_40 = 440U, ._2ghz_40 = 81U, ._2ghz_20 = 81U}, {.reg = 1858160U, ._5ghz_20 = 504U, ._5ghz_40 = 504U, ._2ghz_40 = 408U, ._2ghz_20 = 408U}, {.reg = 1858164U, ._5ghz_20 = 56U, ._5ghz_40 = 56U, ._2ghz_40 = 472U, ._2ghz_20 = 472U}, {.reg = 1858168U, ._5ghz_20 = 120U, ._5ghz_40 = 120U, ._2ghz_40 = 24U, ._2ghz_20 = 24U}, {.reg = 1858172U, ._5ghz_20 = 409U, ._5ghz_40 = 409U, ._2ghz_40 = 88U, ._2ghz_20 = 88U}, {.reg = 1858176U, ._5ghz_20 = 473U, ._5ghz_40 = 473U, ._2ghz_40 = 152U, ._2ghz_20 = 152U}, {.reg = 1858180U, ._5ghz_20 = 25U, ._5ghz_40 = 25U, ._2ghz_40 = 345U, ._2ghz_20 = 345U}, {.reg = 1858184U, ._5ghz_20 = 89U, ._5ghz_40 = 89U, ._2ghz_40 = 409U, ._2ghz_20 = 409U}, {.reg = 1858188U, ._5ghz_20 = 153U, ._5ghz_40 = 153U, ._2ghz_40 = 473U, ._2ghz_20 = 473U}, {.reg = 1858192U, ._5ghz_20 = 217U, ._5ghz_40 = 217U, ._2ghz_40 = 25U, ._2ghz_20 = 25U}, {.reg = 1858196U, ._5ghz_20 = 249U, ._5ghz_40 = 249U, ._2ghz_40 = 89U, ._2ghz_20 = 89U}, {.reg = 1858200U, ._5ghz_20 = 249U, ._5ghz_40 = 249U, ._2ghz_40 = 153U, ._2ghz_20 = 153U}, {.reg = 1858204U, ._5ghz_20 = 249U, ._5ghz_40 = 249U, ._2ghz_40 = 217U, ._2ghz_20 = 217U}, {.reg = 1858208U, ._5ghz_20 = 249U, ._5ghz_40 = 249U, ._2ghz_40 = 249U, ._2ghz_20 = 249U}, {.reg = 1858212U, ._5ghz_20 = 249U, ._5ghz_40 = 249U, ._2ghz_40 = 249U, ._2ghz_20 = 249U}, {.reg = 1858216U, ._5ghz_20 = 249U, ._5ghz_40 = 249U, ._2ghz_40 = 249U, ._2ghz_20 = 249U}, {.reg = 1858220U, ._5ghz_20 = 249U, ._5ghz_40 = 249U, ._2ghz_40 = 249U, ._2ghz_20 = 249U}, {.reg = 1858224U, ._5ghz_20 = 249U, ._5ghz_40 = 249U, ._2ghz_40 = 249U, ._2ghz_20 = 249U}, {.reg = 1858228U, ._5ghz_20 = 249U, ._5ghz_40 = 249U, ._2ghz_40 = 249U, ._2ghz_20 = 249U}, {.reg = 1858232U, ._5ghz_20 = 249U, ._5ghz_40 = 249U, ._2ghz_40 = 249U, ._2ghz_20 = 249U}, {.reg = 1858236U, ._5ghz_20 = 249U, ._5ghz_40 = 249U, ._2ghz_40 = 249U, ._2ghz_20 = 249U}, {.reg = 1858240U, ._5ghz_20 = 249U, ._5ghz_40 = 249U, ._2ghz_40 = 249U, ._2ghz_20 = 249U}, {.reg = 1858244U, ._5ghz_20 = 249U, ._5ghz_40 = 249U, ._2ghz_40 = 249U, ._2ghz_20 = 249U}, {.reg = 1858248U, ._5ghz_20 = 249U, ._5ghz_40 = 249U, ._2ghz_40 = 249U, ._2ghz_20 = 249U}, {.reg = 1858252U, ._5ghz_20 = 249U, ._5ghz_40 = 249U, ._2ghz_40 = 249U, ._2ghz_20 = 249U}, {.reg = 1858256U, ._5ghz_20 = 249U, ._5ghz_40 = 249U, ._2ghz_40 = 249U, ._2ghz_20 = 249U}, {.reg = 1858260U, ._5ghz_20 = 249U, ._5ghz_40 = 249U, ._2ghz_40 = 249U, ._2ghz_20 = 249U}, {.reg = 1858264U, ._5ghz_20 = 249U, ._5ghz_40 = 249U, ._2ghz_40 = 249U, ._2ghz_20 = 249U}, {.reg = 1858268U, ._5ghz_20 = 249U, ._5ghz_40 = 249U, ._2ghz_40 = 249U, ._2ghz_20 = 249U}, {.reg = 1858272U, ._5ghz_20 = 249U, ._5ghz_40 = 249U, ._2ghz_40 = 249U, ._2ghz_20 = 249U}, {.reg = 1858276U, ._5ghz_20 = 249U, ._5ghz_40 = 249U, ._2ghz_40 = 249U, ._2ghz_20 = 249U}, {.reg = 1858280U, ._5ghz_20 = 249U, ._5ghz_40 = 249U, ._2ghz_40 = 249U, ._2ghz_20 = 249U}, {.reg = 1858284U, ._5ghz_20 = 249U, ._5ghz_40 = 249U, ._2ghz_40 = 249U, ._2ghz_20 = 249U}, {.reg = 1858288U, ._5ghz_20 = 249U, ._5ghz_40 = 249U, ._2ghz_40 = 249U, ._2ghz_20 = 249U}, {.reg = 1858292U, ._5ghz_20 = 249U, ._5ghz_40 = 249U, ._2ghz_40 = 249U, ._2ghz_20 = 249U}, {.reg = 1858296U, ._5ghz_20 = 249U, ._5ghz_40 = 249U, ._2ghz_40 = 249U, ._2ghz_20 = 249U}, {.reg = 1858300U, ._5ghz_20 = 249U, ._5ghz_40 = 249U, ._2ghz_40 = 249U, ._2ghz_20 = 249U}, {.reg = 1858304U}, {.reg = 1858308U, ._5ghz_20 = 1U, ._5ghz_40 = 1U, ._2ghz_40 = 1U, ._2ghz_20 = 1U}, {.reg = 1858312U, ._5ghz_20 = 2U, ._5ghz_40 = 2U, ._2ghz_40 = 2U, ._2ghz_20 = 2U}, {.reg = 1858316U, ._5ghz_20 = 3U, ._5ghz_40 = 3U, ._2ghz_40 = 3U, ._2ghz_20 = 3U}, {.reg = 1858320U, ._5ghz_20 = 4U, ._5ghz_40 = 4U, ._2ghz_40 = 4U, ._2ghz_20 = 4U}, {.reg = 1858324U, ._5ghz_20 = 5U, ._5ghz_40 = 5U, ._2ghz_40 = 5U, ._2ghz_20 = 5U}, {.reg = 1858328U, ._5ghz_20 = 8U, ._5ghz_40 = 8U, ._2ghz_40 = 8U, ._2ghz_20 = 8U}, {.reg = 1858332U, ._5ghz_20 = 9U, ._5ghz_40 = 9U, ._2ghz_40 = 9U, ._2ghz_20 = 9U}, {.reg = 1858336U, ._5ghz_20 = 10U, ._5ghz_40 = 10U, ._2ghz_40 = 10U, ._2ghz_20 = 10U}, {.reg = 1858340U, ._5ghz_20 = 11U, ._5ghz_40 = 11U, ._2ghz_40 = 11U, ._2ghz_20 = 11U}, {.reg = 1858344U, ._5ghz_20 = 12U, ._5ghz_40 = 12U, ._2ghz_40 = 12U, ._2ghz_20 = 12U}, {.reg = 1858348U, ._5ghz_20 = 13U, ._5ghz_40 = 13U, ._2ghz_40 = 13U, ._2ghz_20 = 13U}, {.reg = 1858352U, ._5ghz_20 = 16U, ._5ghz_40 = 16U, ._2ghz_40 = 16U, ._2ghz_20 = 16U}, {.reg = 1858356U, ._5ghz_20 = 17U, ._5ghz_40 = 17U, ._2ghz_40 = 17U, ._2ghz_20 = 17U}, {.reg = 1858360U, ._5ghz_20 = 18U, ._5ghz_40 = 18U, ._2ghz_40 = 18U, ._2ghz_20 = 18U}, {.reg = 1858364U, ._5ghz_20 = 19U, ._5ghz_40 = 19U, ._2ghz_40 = 19U, ._2ghz_20 = 19U}, {.reg = 1858368U, ._5ghz_20 = 20U, ._5ghz_40 = 20U, ._2ghz_40 = 20U, ._2ghz_20 = 20U}, {.reg = 1858372U, ._5ghz_20 = 21U, ._5ghz_40 = 21U, ._2ghz_40 = 21U, ._2ghz_20 = 21U}, {.reg = 1858376U, ._5ghz_20 = 24U, ._5ghz_40 = 24U, ._2ghz_40 = 24U, ._2ghz_20 = 24U}, {.reg = 1858380U, ._5ghz_20 = 25U, ._5ghz_40 = 25U, ._2ghz_40 = 25U, ._2ghz_20 = 25U}, {.reg = 1858384U, ._5ghz_20 = 26U, ._5ghz_40 = 26U, ._2ghz_40 = 26U, ._2ghz_20 = 26U}, {.reg = 1858388U, ._5ghz_20 = 27U, ._5ghz_40 = 27U, ._2ghz_40 = 27U, ._2ghz_20 = 27U}, {.reg = 1858392U, ._5ghz_20 = 28U, ._5ghz_40 = 28U, ._2ghz_40 = 28U, ._2ghz_20 = 28U}, {.reg = 1858396U, ._5ghz_20 = 29U, ._5ghz_40 = 29U, ._2ghz_40 = 29U, ._2ghz_20 = 29U}, {.reg = 1858400U, ._5ghz_20 = 32U, ._5ghz_40 = 32U, ._2ghz_40 = 32U, ._2ghz_20 = 32U}, {.reg = 1858404U, ._5ghz_20 = 33U, ._5ghz_40 = 33U, ._2ghz_40 = 33U, ._2ghz_20 = 33U}, {.reg = 1858408U, ._5ghz_20 = 34U, ._5ghz_40 = 34U, ._2ghz_40 = 34U, ._2ghz_20 = 34U}, {.reg = 1858412U, ._5ghz_20 = 35U, ._5ghz_40 = 35U, ._2ghz_40 = 35U, ._2ghz_20 = 35U}, {.reg = 1858416U, ._5ghz_20 = 36U, ._5ghz_40 = 36U, ._2ghz_40 = 36U, ._2ghz_20 = 36U}, {.reg = 1858420U, ._5ghz_20 = 37U, ._5ghz_40 = 37U, ._2ghz_40 = 37U, ._2ghz_20 = 37U}, {.reg = 1858424U, ._5ghz_20 = 40U, ._5ghz_40 = 40U, ._2ghz_40 = 40U, ._2ghz_20 = 40U}, {.reg = 1858428U, ._5ghz_20 = 41U, ._5ghz_40 = 41U, ._2ghz_40 = 41U, ._2ghz_20 = 41U}, {.reg = 1858432U, ._5ghz_20 = 42U, ._5ghz_40 = 42U, ._2ghz_40 = 42U, ._2ghz_20 = 42U}, {.reg = 1858436U, ._5ghz_20 = 43U, ._5ghz_40 = 43U, ._2ghz_40 = 43U, ._2ghz_20 = 43U}, {.reg = 1858440U, ._5ghz_20 = 44U, ._5ghz_40 = 44U, ._2ghz_40 = 44U, ._2ghz_20 = 44U}, {.reg = 1858444U, ._5ghz_20 = 45U, ._5ghz_40 = 45U, ._2ghz_40 = 45U, ._2ghz_20 = 45U}, {.reg = 1858448U, ._5ghz_20 = 48U, ._5ghz_40 = 48U, ._2ghz_40 = 48U, ._2ghz_20 = 48U}, {.reg = 1858452U, ._5ghz_20 = 49U, ._5ghz_40 = 49U, ._2ghz_40 = 49U, ._2ghz_20 = 49U}, {.reg = 1858456U, ._5ghz_20 = 50U, ._5ghz_40 = 50U, ._2ghz_40 = 50U, ._2ghz_20 = 50U}, {.reg = 1858460U, ._5ghz_20 = 51U, ._5ghz_40 = 51U, ._2ghz_40 = 51U, ._2ghz_20 = 51U}, {.reg = 1858464U, ._5ghz_20 = 52U, ._5ghz_40 = 52U, ._2ghz_40 = 52U, ._2ghz_20 = 52U}, {.reg = 1858468U, ._5ghz_20 = 53U, ._5ghz_40 = 53U, ._2ghz_40 = 53U, ._2ghz_20 = 53U}, {.reg = 1858472U, ._5ghz_20 = 53U, ._5ghz_40 = 53U, ._2ghz_40 = 53U, ._2ghz_20 = 53U}, {.reg = 1858476U, ._5ghz_20 = 53U, ._5ghz_40 = 53U, ._2ghz_40 = 53U, ._2ghz_20 = 53U}, {.reg = 1858480U, ._5ghz_20 = 53U, ._5ghz_40 = 53U, ._2ghz_40 = 53U, ._2ghz_20 = 53U}, {.reg = 1858484U, ._5ghz_20 = 53U, ._5ghz_40 = 53U, ._2ghz_40 = 53U, ._2ghz_20 = 53U}, {.reg = 1858488U, ._5ghz_20 = 53U, ._5ghz_40 = 53U, ._2ghz_40 = 53U, ._2ghz_20 = 53U}, {.reg = 1858492U, ._5ghz_20 = 53U, ._5ghz_40 = 53U, ._2ghz_40 = 53U, ._2ghz_20 = 53U}, {.reg = 1858496U, ._5ghz_20 = 53U, ._5ghz_40 = 53U, ._2ghz_40 = 53U, ._2ghz_20 = 53U}, {.reg = 1858500U, ._5ghz_20 = 53U, ._5ghz_40 = 53U, ._2ghz_40 = 53U, ._2ghz_20 = 53U}, {.reg = 1858504U, ._5ghz_20 = 53U, ._5ghz_40 = 53U, ._2ghz_40 = 53U, ._2ghz_20 = 53U}, {.reg = 1858508U, ._5ghz_20 = 53U, ._5ghz_40 = 53U, ._2ghz_40 = 53U, ._2ghz_20 = 53U}, {.reg = 1858512U, ._5ghz_20 = 53U, ._5ghz_40 = 53U, ._2ghz_40 = 53U, ._2ghz_20 = 53U}, {.reg = 1858516U, ._5ghz_20 = 53U, ._5ghz_40 = 53U, ._2ghz_40 = 53U, ._2ghz_20 = 53U}, {.reg = 1858520U, ._5ghz_20 = 53U, ._5ghz_40 = 53U, ._2ghz_40 = 53U, ._2ghz_20 = 53U}, {.reg = 1858524U, ._5ghz_20 = 53U, ._5ghz_40 = 53U, ._2ghz_40 = 53U, ._2ghz_20 = 53U}, {.reg = 1858528U, ._5ghz_20 = 53U, ._5ghz_40 = 53U, ._2ghz_40 = 53U, ._2ghz_20 = 53U}, {.reg = 1858532U, ._5ghz_20 = 53U, ._5ghz_40 = 53U, ._2ghz_40 = 53U, ._2ghz_20 = 53U}, {.reg = 1858536U, ._5ghz_20 = 53U, ._5ghz_40 = 53U, ._2ghz_40 = 53U, ._2ghz_20 = 53U}, {.reg = 1858540U, ._5ghz_20 = 53U, ._5ghz_40 = 53U, ._2ghz_40 = 53U, ._2ghz_20 = 53U}, {.reg = 1858544U, ._5ghz_20 = 53U, ._5ghz_40 = 53U, ._2ghz_40 = 53U, ._2ghz_20 = 53U}, {.reg = 1858548U, ._5ghz_20 = 53U, ._5ghz_40 = 53U, ._2ghz_40 = 53U, ._2ghz_20 = 53U}, {.reg = 1858552U, ._5ghz_20 = 16U, ._5ghz_40 = 16U, ._2ghz_40 = 16U, ._2ghz_20 = 16U}, {.reg = 1858556U, ._5ghz_20 = 26U, ._5ghz_40 = 26U, ._2ghz_40 = 26U, ._2ghz_20 = 26U}, {.reg = 1858560U}, {.reg = 1858572U}, {.reg = 1858576U}, {.reg = 1858580U}, {.reg = 1858584U}, {.reg = 1858588U}, {.reg = 1858592U}, {.reg = 1858596U}, {.reg = 1858600U}, {.reg = 1858604U}, {.reg = 1858608U}, {.reg = 1858612U}, {.reg = 1858616U}, {.reg = 1858620U}, {.reg = 1858800U}, {.reg = 1858804U}, {.reg = 1858808U}, {.reg = 1858812U}, {.reg = 1860096U, ._5ghz_20 = 8U, ._5ghz_40 = 8U, ._2ghz_40 = 14U, ._2ghz_20 = 14U}, {.reg = 1860100U, ._5ghz_20 = 1088U, ._5ghz_40 = 1088U, ._2ghz_40 = 1088U, ._2ghz_20 = 1088U}, {.reg = 1860104U, ._5ghz_20 = 3602794376U, ._5ghz_40 = 3602794376U, ._2ghz_40 = 3493742472U, ._2ghz_20 = 3493742472U}, {.reg = 1860108U, ._5ghz_20 = 19824992U, ._5ghz_40 = 19824992U, ._2ghz_40 = 19562848U, ._2ghz_20 = 19562848U}, {.reg = 1860112U, ._5ghz_20 = 1082155827U, ._5ghz_40 = 1082155827U, ._2ghz_40 = 1082155827U, ._2ghz_20 = 1082155827U}, {.reg = 1860116U, ._5ghz_20 = 1076240U, ._5ghz_40 = 1076240U, ._2ghz_40 = 1076240U, ._2ghz_20 = 1076240U}, {.reg = 1860120U, ._5ghz_20 = 10240096U, ._5ghz_40 = 10240096U, ._2ghz_40 = 10240096U, ._2ghz_20 = 10240096U}, {.reg = 1860124U, ._5ghz_20 = 411271178U, ._5ghz_40 = 411271178U, ._2ghz_40 = 411271178U, ._2ghz_20 = 411271178U}, {.reg = 1860128U, ._5ghz_20 = 25702598U, ._5ghz_40 = 25702598U, ._2ghz_40 = 25702598U, ._2ghz_20 = 25702598U}, {.reg = 1860132U, ._5ghz_20 = 1024U, ._5ghz_40 = 1024U, ._2ghz_40 = 1024U, ._2ghz_20 = 1024U}, {.reg = 1860136U, ._5ghz_20 = 2485U, ._5ghz_40 = 2485U, ._2ghz_40 = 2485U, ._2ghz_20 = 2485U}, {.reg = 1860140U}, {.reg = 1860144U, ._5ghz_20 = 264U, ._5ghz_40 = 528U, ._2ghz_40 = 528U, ._2ghz_20 = 264U}, {.reg = 1860148U, ._5ghz_20 = 1061109567U, ._5ghz_40 = 1061109567U, ._2ghz_40 = 1061109567U, ._2ghz_20 = 1061109567U}, {.reg = 1860152U, ._5ghz_20 = 1061109567U, ._5ghz_40 = 1061109567U, ._2ghz_40 = 1061109567U, ._2ghz_20 = 1061109567U}, {.reg = 1860156U, ._5ghz_20 = 331909551U, ._5ghz_40 = 331909551U, ._2ghz_40 = 331909551U, ._2ghz_20 = 331909551U}, {.reg = 1860160U, ._5ghz_20 = 944310816U, ._5ghz_40 = 944310816U, ._2ghz_40 = 944310816U, ._2ghz_20 = 944310816U}, {.reg = 1860164U, ._5ghz_20 = 31670U, ._5ghz_40 = 31670U, ._2ghz_40 = 31670U, ._2ghz_20 = 31670U}, {.reg = 1860168U, ._5ghz_20 = 268386300U, ._5ghz_40 = 268386300U, ._2ghz_40 = 268386300U, ._2ghz_20 = 268386300U}, {.reg = 1860172U, ._5ghz_20 = 1U, ._5ghz_40 = 1U, ._2ghz_40 = 1U, ._2ghz_20 = 1U}, {.reg = 1860176U, ._5ghz_20 = 40960U, ._5ghz_40 = 40960U, ._2ghz_40 = 40960U, ._2ghz_20 = 40960U}, {.reg = 1860180U}, {.reg = 1860184U, ._5ghz_20 = 214389632U, ._5ghz_40 = 214389632U, ._2ghz_40 = 214389632U, ._2ghz_20 = 214389632U}, {.reg = 1860188U, ._5ghz_20 = 252645121U, ._5ghz_40 = 252645121U, ._2ghz_40 = 252645121U, ._2ghz_20 = 252645121U}, {.reg = 1860192U, ._5ghz_20 = 3752402689U, ._5ghz_40 = 3752402689U, ._2ghz_40 = 3752402689U, ._2ghz_20 = 3752402689U}, {.reg = 1860196U, ._5ghz_20 = 4295185U, ._5ghz_40 = 4295185U, ._2ghz_40 = 4295185U, ._2ghz_20 = 4295185U}, {.reg = 1860200U}, {.reg = 1860204U, ._5ghz_20 = 153391398U, ._5ghz_40 = 153391398U, ._2ghz_40 = 153391398U, ._2ghz_20 = 153391398U}, {.reg = 1860212U, ._5ghz_20 = 169516202U, ._5ghz_40 = 169516202U, ._2ghz_40 = 169508010U, ._2ghz_20 = 169508010U}, {.reg = 1860216U, ._5ghz_20 = 484915662U, ._5ghz_40 = 484915662U, ._2ghz_40 = 484915662U, ._2ghz_20 = 484915662U}, {.reg = 1860220U, ._5ghz_20 = 85393870U, ._5ghz_40 = 85393870U, ._2ghz_40 = 85393870U, ._2ghz_20 = 85393870U}, {.reg = 1860352U, ._5ghz_20 = 402718720U, ._5ghz_40 = 402718720U, ._2ghz_40 = 402718720U, ._2ghz_20 = 402718720U}, {.reg = 1860356U, ._5ghz_20 = 805512706U, ._5ghz_40 = 805512706U, ._2ghz_40 = 771957762U, ._2ghz_20 = 771957762U}, {.reg = 1860360U, ._5ghz_20 = 1208434182U, ._5ghz_40 = 1208434182U, ._2ghz_40 = 1242184710U, ._2ghz_20 = 1242184710U}, {.reg = 1860364U, ._5ghz_20 = 1443580938U, ._5ghz_40 = 1443580938U, ._2ghz_40 = 1645892619U, ._2ghz_20 = 1645892619U}, {.reg = 1860368U, ._5ghz_20 = 1679450127U, ._5ghz_40 = 1679450127U, ._2ghz_40 = 1984916507U, ._2ghz_20 = 1984916507U}, {.reg = 1860372U, ._5ghz_20 = 2052025883U, ._5ghz_40 = 2052025883U, ._2ghz_40 = 2220587610U, ._2ghz_20 = 2220587610U}, {.reg = 1860376U, ._5ghz_20 = 2354806362U, ._5ghz_40 = 2354806362U, ._2ghz_40 = 2500824271U, ._2ghz_20 = 2500824271U}, {.reg = 1860380U, ._5ghz_20 = 2635044559U, ._5ghz_40 = 2635044559U, ._2ghz_40 = 2781846351U, ._2ghz_20 = 2781846351U}, {.reg = 1860384U, ._5ghz_20 = 3038750367U, ._5ghz_40 = 3038750367U, ._2ghz_40 = 3185553183U, ._2ghz_20 = 3185553183U}, {.reg = 1860388U, ._5ghz_20 = 3409952007U, ._5ghz_40 = 3409951935U, ._2ghz_40 = 3523201343U, ._2ghz_20 = 3523201343U}, {.reg = 1860392U, ._5ghz_20 = 55231U, ._5ghz_40 = 55231U}, {.reg = 1860396U}, {.reg = 1860400U}, {.reg = 1860404U}, {.reg = 1860408U}, {.reg = 1860412U}, {.reg = 1860416U}, {.reg = 1860420U}, {.reg = 1860424U, ._5ghz_20 = 1073741823U, ._5ghz_40 = 1073741823U, ._2ghz_40 = 1073741823U, ._2ghz_20 = 1073741823U}, {.reg = 1860428U, ._5ghz_20 = 1073741823U, ._5ghz_40 = 1073741823U, ._2ghz_40 = 1073741823U, ._2ghz_20 = 1073741823U}, {.reg = 1860432U, ._5ghz_20 = 1073741823U, ._5ghz_40 = 1073741823U, ._2ghz_40 = 1073741823U, ._2ghz_20 = 1073741823U}, {.reg = 1860436U, ._5ghz_20 = 262143U, ._5ghz_40 = 262143U, ._2ghz_40 = 262143U, ._2ghz_20 = 262143U}, {.reg = 1860440U, ._5ghz_20 = 2041096735U, ._5ghz_40 = 2041096735U, ._2ghz_40 = 2041096735U, ._2ghz_20 = 2041096735U}, {.reg = 1860488U, ._5ghz_20 = 134217728U, ._5ghz_40 = 134217728U, ._2ghz_40 = 134217728U, ._2ghz_20 = 134217728U}, {.reg = 1860492U, ._5ghz_20 = 1061109567U, ._5ghz_40 = 1061109567U, ._2ghz_40 = 1061109567U, ._2ghz_20 = 1061109567U}, {.reg = 1860496U, ._5ghz_20 = 1061109567U, ._5ghz_40 = 1061109567U, ._2ghz_40 = 1061109567U, ._2ghz_20 = 1061109567U}, {.reg = 1860500U, ._5ghz_20 = 484915662U, ._5ghz_40 = 484915662U, ._2ghz_40 = 484915662U, ._2ghz_20 = 484915662U}, {.reg = 1860504U, ._5ghz_20 = 462U, ._5ghz_40 = 462U, ._2ghz_40 = 462U, ._2ghz_20 = 462U}, {.reg = 1860508U, ._5ghz_20 = 7U, ._5ghz_40 = 7U, ._2ghz_40 = 7U, ._2ghz_20 = 7U}, {.reg = 1860512U}, {.reg = 1860516U}, {.reg = 1860520U}, {.reg = 1860524U}, {.reg = 1860528U}, {.reg = 1860532U}, {.reg = 1860536U}, {.reg = 1860540U}, {.reg = 1860544U}, {.reg = 1860548U}, {.reg = 1860552U}, {.reg = 1860556U, ._5ghz_20 = 1061109567U, ._5ghz_40 = 1061109567U, ._2ghz_40 = 1061109567U, ._2ghz_20 = 1061109567U}, {.reg = 1860560U, ._5ghz_20 = 1061109567U, ._5ghz_40 = 1061109567U, ._2ghz_40 = 1061109567U, ._2ghz_20 = 1061109567U}, {.reg = 1860564U, ._5ghz_20 = 1061109567U, ._5ghz_40 = 1061109567U, ._2ghz_40 = 1061109567U, ._2ghz_20 = 1061109567U}, {.reg = 1860568U}, {.reg = 1860572U, ._5ghz_20 = 484915662U, ._5ghz_40 = 484915662U, ._2ghz_40 = 484915662U, ._2ghz_20 = 484915662U}, {.reg = 1860576U, ._5ghz_20 = 192U, ._5ghz_40 = 192U, ._2ghz_40 = 192U, ._2ghz_20 = 192U}, {.reg = 1861704U, ._5ghz_20 = 1575525U, ._5ghz_40 = 1575525U, ._2ghz_40 = 1575528U, ._2ghz_20 = 1575528U}, {.reg = 1861920U, ._5ghz_20 = 84934684U, ._5ghz_40 = 84934684U, ._2ghz_40 = 84934684U, ._2ghz_20 = 84934684U}, {.reg = 1861984U, ._5ghz_20 = 39744U, ._5ghz_40 = 39744U, ._2ghz_40 = 39744U, ._2ghz_20 = 39744U}, {.reg = 1864204U, ._5ghz_20 = 19824992U, ._5ghz_40 = 19824992U, ._2ghz_40 = 19562848U, ._2ghz_20 = 19562848U}, {.reg = 1864300U, ._5ghz_20 = 153391398U, ._5ghz_40 = 153391398U, ._2ghz_40 = 153391398U, ._2ghz_20 = 153391398U}, {.reg = 1865800U, ._5ghz_20 = 1575525U, ._5ghz_40 = 1575525U, ._2ghz_40 = 1575528U, ._2ghz_20 = 1575528U}, {.reg = 1866016U, ._5ghz_20 = 84934684U, ._5ghz_40 = 84934684U, ._2ghz_40 = 84934684U, ._2ghz_20 = 84934684U}, {.reg = 1866080U, ._5ghz_20 = 39744U, ._5ghz_40 = 39744U, ._2ghz_40 = 39744U, ._2ghz_20 = 39744U}, {.reg = 1868300U, ._5ghz_20 = 19824992U, ._5ghz_40 = 19824992U, ._2ghz_40 = 19562848U, ._2ghz_20 = 19562848U}, {.reg = 1868396U, ._5ghz_20 = 153391398U, ._5ghz_40 = 153391398U, ._2ghz_40 = 153391398U, ._2ghz_20 = 153391398U}, {.reg = 1869924U, ._5ghz_20 = 116224U, ._5ghz_40 = 116224U, ._2ghz_40 = 116224U, ._2ghz_20 = 116224U}, {.reg = 1870172U, ._5ghz_20 = 4942478U, ._5ghz_40 = 4942478U, ._2ghz_40 = 4942478U, ._2ghz_20 = 4942478U}, {.reg = 1870184U, ._5ghz_20 = 974U, ._5ghz_40 = 974U, ._2ghz_40 = 974U, ._2ghz_20 = 974U}, {.reg = 1870268U, ._5ghz_20 = 1577984U, ._5ghz_40 = 1577984U, ._2ghz_40 = 1577984U, ._2ghz_20 = 1577984U}, {.reg = 1872496U, ._5ghz_20 = 8521760U, ._5ghz_40 = 8521760U, ._2ghz_40 = 8521760U, ._2ghz_20 = 8521760U}, {.reg = 1872732U, ._5ghz_20 = 107758095U, ._5ghz_40 = 107758095U, ._2ghz_40 = 107758095U, ._2ghz_20 = 107758095U}, {.reg = 1872736U, ._5ghz_20 = 254288391U, ._5ghz_40 = 254288391U, ._2ghz_40 = 254288391U, ._2ghz_20 = 254288391U}, {.reg = 1872740U, ._5ghz_20 = 392173189U, ._5ghz_40 = 392173189U, ._2ghz_40 = 392173189U, ._2ghz_20 = 392173189U}, {.reg = 1872744U, ._5ghz_20 = 528486660U, ._5ghz_40 = 528486660U, ._2ghz_40 = 528486660U, ._2ghz_20 = 528486660U}, {.reg = 1872748U, ._5ghz_20 = 933235715U, ._5ghz_40 = 933235715U, ._2ghz_40 = 933235715U, ._2ghz_20 = 933235715U}, {.reg = 1872752U, ._5ghz_20 = 1069811843U, ._5ghz_40 = 1069811843U, ._2ghz_40 = 1069811843U, ._2ghz_20 = 1069811843U}, {.reg = 1872756U, ._5ghz_20 = 1472202755U, ._5ghz_40 = 1472202755U, ._2ghz_40 = 1472202755U, ._2ghz_20 = 1472202755U}, {.reg = 1872760U, ._5ghz_20 = 1607992962U, ._5ghz_40 = 1607992962U, ._2ghz_40 = 1607992962U, ._2ghz_20 = 1607992962U}, {.reg = 1872764U, ._5ghz_20 = 2145387650U, ._5ghz_40 = 2145387650U, ._2ghz_40 = 2145387650U, ._2ghz_20 = 2145387650U}, {.reg = 1872768U, ._5ghz_20 = 2134670266U, ._5ghz_40 = 2134670266U, ._2ghz_40 = 2134670266U, ._2ghz_20 = 2134670266U}, {.reg = 1872772U, ._5ghz_20 = 4080041968U, ._5ghz_40 = 4080041968U, ._2ghz_40 = 4080041968U, ._2ghz_20 = 4080041968U}};
#line 406  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/phy.c"
static u32 carl9170_def_val(u32 reg, bool is_2ghz, bool is_40mhz)
{
  #line 408 
  unsigned int i;
  #line 409 
  i = 0U;
  #line 409 
  while (i <= 330U) {
    #line 410 
    if (ar5416_phy_init[i].reg != reg) 
                                       #line 411 
                                       goto __Cont;
    #line 413 
    if ((int)is_2ghz != 0) 
      #line 414 
      if ((int)is_40mhz != 0) 
                              #line 415 
                              return ar5416_phy_init[i]._2ghz_40; else 
                                                                    #line 417 
                                                                    return ar5416_phy_init[i]._2ghz_20;
    else 
      #line 419 
      if ((int)is_40mhz != 0) 
                              #line 420 
                              return ar5416_phy_init[i]._5ghz_40; else 
                                                                    #line 422 
                                                                    return ar5416_phy_init[i]._5ghz_20;
    #line 409 
    __Cont: 
            #line 409 
    i ++;
  }
  #line 425 
  return 0U;
}

#line 432  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/phy.c"
static int carl9170_init_phy_from_eeprom(struct ar9170 *ar, bool is_2ghz, bool is_40mhz)
{
  #line 441 
  u32 val;
  #line 435 
  u8 xpd2pd[16U] = {(unsigned char)2U, (unsigned char)2U, (unsigned char)2U, (unsigned char)1U, (unsigned char)2U, (unsigned char)2U, (unsigned char)6U, (unsigned char)2U, (unsigned char)2U, (unsigned char)3U, (unsigned char)7U, (unsigned char)2U, (unsigned char)11U, (unsigned char)2U, (unsigned char)2U, (unsigned char)2U};
  #line 440 
  struct ar9170_eeprom_modal *m = & ar->eeprom.modal_header[(int)is_2ghz];
  {
    #line 443 
    int __nreg = 0;
    #line 443 
    int __err = 0;
    #line 443 
    struct ar9170 *__ar = ar;
    #line 446 
    __ar->__anonCompField_ar9170_205.cmd_buf[__nreg * 2 + 1] = 1857892U;
    #line 446 
    __ar->__anonCompField_ar9170_205.cmd_buf[(__nreg + 1) * 2] = m->antCtrlCommon;
    #line 446 
    __nreg ++;
    #line 446 
    if (__nreg > 6) {
      #line 446 
      if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                        #line 446 
                                                        __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0); else 
                                                                    #line 446 
                                                                    goto __regwrite_out;
      #line 446 
      __nreg = 0;
      #line 446 
      if (__err != 0) 
                      #line 446 
                      goto __regwrite_out;
    }
    #line 450 
    __ar->__anonCompField_ar9170_205.cmd_buf[__nreg * 2 + 1] = 1857888U;
    #line 450 
    __ar->__anonCompField_ar9170_205.cmd_buf[(__nreg + 1) * 2] = m->antCtrlChain[0];
    #line 450 
    __nreg ++;
    #line 450 
    if (__nreg > 6) {
      #line 450 
      if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                        #line 450 
                                                        __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0); else 
                                                                    #line 450 
                                                                    goto __regwrite_out;
      #line 450 
      __nreg = 0;
      #line 450 
      if (__err != 0) 
                      #line 450 
                      goto __regwrite_out;
    }
    #line 454 
    __ar->__anonCompField_ar9170_205.cmd_buf[__nreg * 2 + 1] = 1866080U;
    #line 454 
    __ar->__anonCompField_ar9170_205.cmd_buf[(__nreg + 1) * 2] = m->antCtrlChain[1];
    #line 454 
    __nreg ++;
    #line 454 
    if (__nreg > 6) {
      #line 454 
      if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                        #line 454 
                                                        __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0); else 
                                                                    #line 454 
                                                                    goto __regwrite_out;
      #line 454 
      __nreg = 0;
      #line 454 
      if (__err != 0) 
                      #line 454 
                      goto __regwrite_out;
    }
    #line 458 
    if (! is_40mhz) {
      #line 459 
      val = carl9170_def_val(1857604U,(_Bool)((bool)((int)is_2ghz) != 0),(_Bool)((bool)((int)is_40mhz) != 0));
      #line 461 
      val = (val & 4294951039U) | ((unsigned int)((int)m->switchSettling << 7) & 16256U);
      #line 462 
      __ar->__anonCompField_ar9170_205.cmd_buf[__nreg * 2 + 1] = 1857604U;
      #line 462 
      __ar->__anonCompField_ar9170_205.cmd_buf[(__nreg + 1) * 2] = val;
      #line 462 
      __nreg ++;
      #line 462 
      if (__nreg > 6) {
        #line 462 
        if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                          #line 462 
                                                          __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0); else 
                                                                    #line 462 
                                                                    goto __regwrite_out;
        #line 462 
        __nreg = 0;
        #line 462 
        if (__err != 0) 
                        #line 462 
                        goto __regwrite_out;
      }
    }
    #line 466 
    val = carl9170_def_val(1857616U,(_Bool)((bool)((int)is_2ghz) != 0),(_Bool)((bool)((int)is_40mhz) != 0));
    #line 467 
    val = (val & 4294902015U) | ((unsigned int)((int)m->pgaDesiredSize << 8) & 65535U);
    #line 468 
    val = (val & 4294967040U) | ((unsigned int)m->adcDesiredSize & 255U);
    #line 469 
    __ar->__anonCompField_ar9170_205.cmd_buf[__nreg * 2 + 1] = 1857616U;
    #line 469 
    __ar->__anonCompField_ar9170_205.cmd_buf[(__nreg + 1) * 2] = val;
    #line 469 
    __nreg ++;
    #line 469 
    if (__nreg > 6) {
      #line 469 
      if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                        #line 469 
                                                        __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0); else 
                                                                    #line 469 
                                                                    goto __regwrite_out;
      #line 469 
      __nreg = 0;
      #line 469 
      if (__err != 0) 
                      #line 469 
                      goto __regwrite_out;
    }
    #line 472 
    val = carl9170_def_val(1857588U,(_Bool)((bool)((int)is_2ghz) != 0),(_Bool)((bool)((int)is_40mhz) != 0));
    #line 473 
    val = (val & 16777215U) | (unsigned int)((int)m->txEndToXpaOff << 24);
    #line 474 
    val = (val & 4278255615U) | ((unsigned int)((int)m->txEndToXpaOff << 16) & 16711680U);
    #line 475 
    val = (val & 4294902015U) | ((unsigned int)((int)m->txFrameToXpaOn << 8) & 65535U);
    #line 476 
    val = (val & 4294967040U) | (unsigned int)m->txFrameToXpaOn;
    #line 477 
    __ar->__anonCompField_ar9170_205.cmd_buf[__nreg * 2 + 1] = 1857588U;
    #line 477 
    __ar->__anonCompField_ar9170_205.cmd_buf[(__nreg + 1) * 2] = val;
    #line 477 
    __nreg ++;
    #line 477 
    if (__nreg > 6) {
      #line 477 
      if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                        #line 477 
                                                        __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0); else 
                                                                    #line 477 
                                                                    goto __regwrite_out;
      #line 477 
      __nreg = 0;
      #line 477 
      if (__err != 0) 
                      #line 477 
                      goto __regwrite_out;
    }
    #line 480 
    val = carl9170_def_val(1857576U,(_Bool)((bool)((int)is_2ghz) != 0),(_Bool)((bool)((int)is_40mhz) != 0));
    #line 481 
    val = (val & 4278255615U) | ((unsigned int)((int)m->txEndToRxOn << 16) & 16711680U);
    #line 482 
    __ar->__anonCompField_ar9170_205.cmd_buf[__nreg * 2 + 1] = 1857576U;
    #line 482 
    __ar->__anonCompField_ar9170_205.cmd_buf[(__nreg + 1) * 2] = val;
    #line 482 
    __nreg ++;
    #line 482 
    if (__nreg > 6) {
      #line 482 
      if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                        #line 482 
                                                        __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0); else 
                                                                    #line 482 
                                                                    goto __regwrite_out;
      #line 482 
      __nreg = 0;
      #line 482 
      if (__err != 0) 
                      #line 482 
                      goto __regwrite_out;
    }
    #line 485 
    val = carl9170_def_val(1869924U,(_Bool)((bool)((int)is_2ghz) != 0),(_Bool)((bool)((int)is_40mhz) != 0));
    #line 486 
    val = (val & 4294447103U) | (unsigned int)((int)m->thresh62 << 12);
    #line 487 
    __ar->__anonCompField_ar9170_205.cmd_buf[__nreg * 2 + 1] = 1869924U;
    #line 487 
    __ar->__anonCompField_ar9170_205.cmd_buf[(__nreg + 1) * 2] = val;
    #line 487 
    __nreg ++;
    #line 487 
    if (__nreg > 6) {
      #line 487 
      if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                        #line 487 
                                                        __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0); else 
                                                                    #line 487 
                                                                    goto __regwrite_out;
      #line 487 
      __nreg = 0;
      #line 487 
      if (__err != 0) 
                      #line 487 
                      goto __regwrite_out;
    }
    #line 490 
    val = carl9170_def_val(1857608U,(_Bool)((bool)((int)is_2ghz) != 0),(_Bool)((bool)((int)is_40mhz) != 0));
    #line 491 
    val = (val & 4294709247U) | ((unsigned int)((int)m->txRxAttenCh[0] << 12) & 258048U);
    #line 492 
    __ar->__anonCompField_ar9170_205.cmd_buf[__nreg * 2 + 1] = 1857608U;
    #line 492 
    __ar->__anonCompField_ar9170_205.cmd_buf[(__nreg + 1) * 2] = val;
    #line 492 
    __nreg ++;
    #line 492 
    if (__nreg > 6) {
      #line 492 
      if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                        #line 492 
                                                        __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0); else 
                                                                    #line 492 
                                                                    goto __regwrite_out;
      #line 492 
      __nreg = 0;
      #line 492 
      if (__err != 0) 
                      #line 492 
                      goto __regwrite_out;
    }
    #line 495 
    val = carl9170_def_val(1865800U,(_Bool)((bool)((int)is_2ghz) != 0),(_Bool)((bool)((int)is_40mhz) != 0));
    #line 497 
    val = (val & 4294709247U) | ((unsigned int)((int)m->txRxAttenCh[1] << 12) & 258048U);
    #line 498 
    __ar->__anonCompField_ar9170_205.cmd_buf[__nreg * 2 + 1] = 1865800U;
    #line 498 
    __ar->__anonCompField_ar9170_205.cmd_buf[(__nreg + 1) * 2] = val;
    #line 498 
    __nreg ++;
    #line 498 
    if (__nreg > 6) {
      #line 498 
      if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                        #line 498 
                                                        __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0); else 
                                                                    #line 498 
                                                                    goto __regwrite_out;
      #line 498 
      __nreg = 0;
      #line 498 
      if (__err != 0) 
                      #line 498 
                      goto __regwrite_out;
    }
    #line 501 
    val = carl9170_def_val(1860108U,(_Bool)((bool)((int)is_2ghz) != 0),(_Bool)((bool)((int)is_40mhz) != 0));
    #line 502 
    val = (val & 4278452223U) | ((unsigned int)((int)m->rxTxMarginCh[0] << 18) & 16515072U);
    #line 504 
    if (! is_2ghz) 
                   #line 505 
                   val = (val & 4294951935U) | ((unsigned int)((int)m->bswMargin[0] << 10) & 15360U);
    #line 506 
    __ar->__anonCompField_ar9170_205.cmd_buf[__nreg * 2 + 1] = 1860108U;
    #line 506 
    __ar->__anonCompField_ar9170_205.cmd_buf[(__nreg + 1) * 2] = val;
    #line 506 
    __nreg ++;
    #line 506 
    if (__nreg > 6) {
      #line 506 
      if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                        #line 506 
                                                        __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0); else 
                                                                    #line 506 
                                                                    goto __regwrite_out;
      #line 506 
      __nreg = 0;
      #line 506 
      if (__err != 0) 
                      #line 506 
                      goto __regwrite_out;
    }
    #line 509 
    val = carl9170_def_val(1868300U,(_Bool)((bool)((int)is_2ghz) != 0),(_Bool)((bool)((int)is_40mhz) != 0));
    #line 511 
    val = (val & 4278452223U) | ((unsigned int)((int)m->rxTxMarginCh[1] << 18) & 16515072U);
    #line 512 
    __ar->__anonCompField_ar9170_205.cmd_buf[__nreg * 2 + 1] = 1868300U;
    #line 512 
    __ar->__anonCompField_ar9170_205.cmd_buf[(__nreg + 1) * 2] = val;
    #line 512 
    __nreg ++;
    #line 512 
    if (__nreg > 6) {
      #line 512 
      if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                        #line 512 
                                                        __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0); else 
                                                                    #line 512 
                                                                    goto __regwrite_out;
      #line 512 
      __nreg = 0;
      #line 512 
      if (__err != 0) 
                      #line 512 
                      goto __regwrite_out;
    }
    #line 515 
    val = carl9170_def_val(1857824U,(_Bool)((bool)((int)is_2ghz) != 0),(_Bool)((bool)((int)is_40mhz) != 0));
    #line 517 
    val = (val & 4294965279U) | ((unsigned int)((int)m->iqCalICh[0] << 5) & 2016U);
    #line 518 
    val = (val & 4294967264U) | ((unsigned int)m->iqCalQCh[0] & 31U);
    #line 519 
    __ar->__anonCompField_ar9170_205.cmd_buf[__nreg * 2 + 1] = 1857824U;
    #line 519 
    __ar->__anonCompField_ar9170_205.cmd_buf[(__nreg + 1) * 2] = val;
    #line 519 
    __nreg ++;
    #line 519 
    if (__nreg > 6) {
      #line 519 
      if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                        #line 519 
                                                        __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0); else 
                                                                    #line 519 
                                                                    goto __regwrite_out;
      #line 519 
      __nreg = 0;
      #line 519 
      if (__err != 0) 
                      #line 519 
                      goto __regwrite_out;
    }
    #line 522 
    val = carl9170_def_val(1866016U,(_Bool)((bool)((int)is_2ghz) != 0),(_Bool)((bool)((int)is_40mhz) != 0));
    #line 524 
    val = (val & 4294965279U) | ((unsigned int)((int)m->iqCalICh[1] << 5) & 2016U);
    #line 525 
    val = (val & 4294967264U) | ((unsigned int)m->iqCalQCh[1] & 31U);
    #line 526 
    __ar->__anonCompField_ar9170_205.cmd_buf[__nreg * 2 + 1] = 1866016U;
    #line 526 
    __ar->__anonCompField_ar9170_205.cmd_buf[(__nreg + 1) * 2] = val;
    #line 526 
    __nreg ++;
    #line 526 
    if (__nreg > 6) {
      #line 526 
      if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                        #line 526 
                                                        __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0); else 
                                                                    #line 526 
                                                                    goto __regwrite_out;
      #line 526 
      __nreg = 0;
      #line 526 
      if (__err != 0) 
                      #line 526 
                      goto __regwrite_out;
    }
    #line 529 
    val = carl9170_def_val(1860184U,(_Bool)((bool)((int)is_2ghz) != 0),(_Bool)((bool)((int)is_40mhz) != 0));
    #line 530 
    val = (val & 4294770687U) | ((unsigned int)((int)xpd2pd[(int)m->xpdGain & 15] << 16) & 196608U);
    #line 532 
    val = (val & 4294180863U) | ((unsigned int)(((int)xpd2pd[(int)m->xpdGain & 15] >> 2) << 18) & 786432U);
    #line 534 
    __ar->__anonCompField_ar9170_205.cmd_buf[__nreg * 2 + 1] = 1860184U;
    #line 534 
    __ar->__anonCompField_ar9170_205.cmd_buf[(__nreg + 1) * 2] = val;
    #line 534 
    __nreg ++;
    #line 534 
    if (__nreg > 6) {
      #line 534 
      if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                        #line 534 
                                                        __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0); else 
                                                                    #line 534 
                                                                    goto __regwrite_out;
      #line 534 
      __nreg = 0;
      #line 534 
      if (__err != 0) 
                      #line 534 
                      goto __regwrite_out;
    }
    #line 536 
    __ar->__anonCompField_ar9170_205.cmd_buf[__nreg * 2 + 1] = 1857956U;
    #line 536 
    __ar->__anonCompField_ar9170_205.cmd_buf[(__nreg + 1) * 2] = (unsigned int)ar->eeprom.rx_mask;
    #line 536 
    __nreg ++;
    #line 536 
    if (__nreg > 6) {
      #line 536 
      if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                        #line 536 
                                                        __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0); else 
                                                                    #line 536 
                                                                    goto __regwrite_out;
      #line 536 
      __nreg = 0;
      #line 536 
      if (__err != 0) 
                      #line 536 
                      goto __regwrite_out;
    }
    #line 537 
    __ar->__anonCompField_ar9170_205.cmd_buf[__nreg * 2 + 1] = 1860508U;
    #line 537 
    __ar->__anonCompField_ar9170_205.cmd_buf[(__nreg + 1) * 2] = (unsigned int)ar->eeprom.rx_mask;
    #line 537 
    __nreg ++;
    #line 537 
    if (__nreg > 6) {
      #line 537 
      if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                        #line 537 
                                                        __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0); else 
                                                                    #line 537 
                                                                    goto __regwrite_out;
      #line 537 
      __nreg = 0;
      #line 537 
      if (__err != 0) 
                      #line 537 
                      goto __regwrite_out;
    }
    #line 539 
    __regwrite_out: 
                    #line 539 
    ;
    #line 539 
    if (__err == 0 && __nreg != 0) {
      #line 539 
      if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                        #line 539 
                                                        __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0);
      #line 539 
      __nreg = 0;
    }
    #line 540 
    return __err;
  }
}

#line 543  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/phy.c"
static int carl9170_init_phy(struct ar9170 *ar, enum nl80211_band band)
{
  #line 545 
  int i;
  #line 545 
  int err;
  #line 546 
  u32 val;
  #line 547 
  bool is_2ghz = (_Bool)(band == (unsigned int)NL80211_BAND_2GHZ);
  #line 548 
  bool is_40mhz = conf_is_ht40(& (ar->hw)->conf);
  {
    #line 550 
    int __nreg = 0;
    #line 550 
    int __err = 0;
    #line 550 
    struct ar9170 *__ar = ar;
    #line 552 
    i = 0;
    #line 552 
    while ((unsigned int)i <= 330U) {
      #line 553 
      if ((int)is_40mhz != 0) 
        #line 554 
        if ((int)is_2ghz != 0) 
                               #line 555 
                               val = ar5416_phy_init[i]._2ghz_40; else 
                                                                    #line 557 
                                                                    val = ar5416_phy_init[i]._5ghz_40;
      else 
        #line 559 
        if ((int)is_2ghz != 0) 
                               #line 560 
                               val = ar5416_phy_init[i]._2ghz_20; else 
                                                                    #line 562 
                                                                    val = ar5416_phy_init[i]._5ghz_20;
      #line 565 
      __ar->__anonCompField_ar9170_205.cmd_buf[__nreg * 2 + 1] = ar5416_phy_init[i].reg;
      #line 565 
      __ar->__anonCompField_ar9170_205.cmd_buf[(__nreg + 1) * 2] = val;
      #line 565 
      __nreg ++;
      #line 565 
      if (__nreg > 6) {
        #line 565 
        if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                          #line 565 
                                                          __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0); else 
                                                                    #line 565 
                                                                    goto __regwrite_out;
        #line 565 
        __nreg = 0;
        #line 565 
        if (__err != 0) 
                        #line 565 
                        goto __regwrite_out;
      }
      #line 552 
      i ++;
    }
    #line 568 
    __regwrite_out: 
                    #line 568 
    ;
    #line 568 
    if (__err == 0 && __nreg != 0) {
      #line 568 
      if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                        #line 568 
                                                        __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0);
      #line 568 
      __nreg = 0;
    }
    #line 569 
    err = __err;
  }
  #line 570 
  if (err != 0) 
                #line 571 
                return err;
  #line 573 
  err = carl9170_init_phy_from_eeprom(ar,(_Bool)((bool)((int)is_2ghz) != 0),(_Bool)((bool)((int)is_40mhz) != 0));
  #line 574 
  if (err != 0) 
                #line 575 
                return err;
  #line 577 
  err = carl9170_init_power_cal(ar);
  #line 578 
  if (err != 0) 
                #line 579 
                return err;
  #line 581 
  if (! ar->fw.hw_counters) {
    #line 582 
    unsigned int tmp_0;
    #line 582 
    if ((int)is_2ghz != 0) 
                           #line 582 
                           tmp_0 = 20835U; else 
                                                #line 582 
                                                tmp_0 = 20803U;
    #line 582 
    ;
    #line 582 
    err = carl9170_write_reg(ar,1916948U,tmp_0);
  }
  #line 586 
  return err;
}

#line 593  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/phy.c"
static struct carl9170_rf_initvals carl9170_rf_initval[68U] = {{.reg = 1857712U, ._5ghz = 509056485U, ._2ghz = 509056485U}, {.reg = 1857760U, ._5ghz = 33587232U, ._2ghz = 33587232U}, {.reg = 1857712U, ._5ghz = 34636833U, ._2ghz = 34636833U}, {.reg = 1857772U, ._5ghz = 8U, ._2ghz = 8U}, {.reg = 1857712U, ._5ghz = 242482967U, ._2ghz = 242482967U}, {.reg = 1857760U, ._5ghz = 1056U, ._2ghz = 1056U}, {.reg = 1857776U, ._5ghz = 20971544U, ._2ghz = 29360152U}, {.reg = 1857712U, ._5ghz = 417U, ._2ghz = 417U}, {.reg = 1857768U, ._5ghz = 1U, ._2ghz = 1U}, {.reg = 1857712U, ._5ghz = 19U, ._2ghz = 19U}, {.reg = 1857764U, ._5ghz = 2U, ._2ghz = 2U}, {.reg = 1857712U}, {.reg = 1857712U}, {.reg = 1857712U}, {.reg = 1857712U}, {.reg = 1857712U}, {.reg = 1857712U, ._5ghz = 16384U, ._2ghz = 16384U}, {.reg = 1857712U, ._5ghz = 27648U, ._2ghz = 27648U}, {.reg = 1857712U, ._5ghz = 11264U, ._2ghz = 11264U}, {.reg = 1857712U, ._5ghz = 18432U, ._2ghz = 18432U}, {.reg = 1857712U, ._5ghz = 16384U, ._2ghz = 16384U}, {.reg = 1857712U, ._5ghz = 24576U, ._2ghz = 24576U}, {.reg = 1857712U, ._5ghz = 4096U, ._2ghz = 4096U}, {.reg = 1857712U, ._5ghz = 16384U, ._2ghz = 16384U}, {.reg = 1857712U, ._5ghz = 31744U, ._2ghz = 31744U}, {.reg = 1857712U, ._5ghz = 31744U, ._2ghz = 31744U}, {.reg = 1857712U, ._5ghz = 31744U, ._2ghz = 31744U}, {.reg = 1857712U, ._5ghz = 31744U, ._2ghz = 31744U}, {.reg = 1857712U, ._5ghz = 31744U, ._2ghz = 31744U}, {.reg = 1857712U, ._5ghz = 556032U, ._2ghz = 556032U}, {.reg = 1857712U, ._5ghz = 31744U, ._2ghz = 31744U}, {.reg = 1857712U, ._5ghz = 21504U, ._2ghz = 21504U}, {.reg = 1857712U, ._5ghz = 3072U, ._2ghz = 3072U}, {.reg = 1857712U, ._5ghz = 6144U, ._2ghz = 6144U}, {.reg = 1857712U, ._5ghz = 31744U, ._2ghz = 31744U}, {.reg = 1857712U, ._5ghz = 27648U, ._2ghz = 27648U}, {.reg = 1857712U, ._5ghz = 27648U, ._2ghz = 27648U}, {.reg = 1857712U, ._5ghz = 31744U, ._2ghz = 31744U}, {.reg = 1857712U, ._5ghz = 11264U, ._2ghz = 11264U}, {.reg = 1857712U, ._5ghz = 15360U, ._2ghz = 15360U}, {.reg = 1857712U, ._5ghz = 14336U, ._2ghz = 14336U}, {.reg = 1857712U, ._5ghz = 7168U, ._2ghz = 7168U}, {.reg = 1857712U, ._5ghz = 2048U, ._2ghz = 2048U}, {.reg = 1857712U, ._5ghz = 1032U, ._2ghz = 1032U}, {.reg = 1857712U, ._5ghz = 19477U, ._2ghz = 19477U}, {.reg = 1857712U, ._5ghz = 16776U, ._2ghz = 16776U}, {.reg = 1857712U, ._5ghz = 8222U, ._2ghz = 8222U}, {.reg = 1857712U, ._5ghz = 66568U, ._2ghz = 66568U}, {.reg = 1857712U, ._5ghz = 2049U, ._2ghz = 2049U}, {.reg = 1857712U, ._5ghz = 3080U, ._2ghz = 3080U}, {.reg = 1857712U, ._5ghz = 6174U, ._2ghz = 6174U}, {.reg = 1857712U, ._5ghz = 4118U, ._2ghz = 4118U}, {.reg = 1857712U, ._5ghz = 10240U, ._2ghz = 10240U}, {.reg = 1857712U, ._5ghz = 16400U, ._2ghz = 16400U}, {.reg = 1857712U, ._5ghz = 2076U, ._2ghz = 2076U}, {.reg = 1857712U, ._5ghz = 277U, ._2ghz = 277U}, {.reg = 1857712U, ._5ghz = 21U, ._2ghz = 21U}, {.reg = 1857712U, ._5ghz = 102U, ._2ghz = 102U}, {.reg = 1857712U, ._5ghz = 28U, ._2ghz = 28U}, {.reg = 1857712U}, {.reg = 1857712U, ._5ghz = 4U, ._2ghz = 4U}, {.reg = 1857712U, ._5ghz = 21U, ._2ghz = 21U}, {.reg = 1857712U, ._5ghz = 31U, ._2ghz = 31U}, {.reg = 1857760U, ._2ghz = 1024U}, {.reg = 1857712U, ._5ghz = 160U, ._2ghz = 160U}, {.reg = 1857712U}, {.reg = 1857712U, ._5ghz = 64U, ._2ghz = 64U}, {.reg = 1857776U, ._5ghz = 28U, ._2ghz = 28U}};
#line 672  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/phy.c"
static int carl9170_init_rf_banks_0_7(struct ar9170 *ar, bool band5ghz)
{
  #line 674 
  int err;
  #line 674 
  int i;
  {
    #line 676 
    int __nreg = 0;
    #line 676 
    int __err = 0;
    #line 676 
    struct ar9170 *__ar = ar;
    #line 678 
    i = 0;
    #line 678 
    while ((unsigned int)i <= 67U) {
      {
        #line 679 
        u32 tmp;
        #line 679 
        __ar->__anonCompField_ar9170_205.cmd_buf[__nreg * 2 + 1] = carl9170_rf_initval[i].reg;
        #line 679 
        if ((int)band5ghz != 0) 
                                #line 679 
                                tmp = carl9170_rf_initval[i]._5ghz; else 
                                                                    #line 679 
                                                                    tmp = carl9170_rf_initval[i]._2ghz;
        #line 679 
        __ar->__anonCompField_ar9170_205.cmd_buf[(__nreg + 1) * 2] = tmp;
        #line 679 
        __nreg ++;
        #line 679 
        if (__nreg > 6) {
          #line 679 
          if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                            #line 679 
                                                            __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0); else 
                                                                    #line 679 
                                                                    goto __regwrite_out;
          #line 679 
          __nreg = 0;
          #line 679 
          if (__err != 0) 
                          #line 679 
                          goto __regwrite_out;
        }
      }
      #line 678 
      i ++;
    }
    #line 683 
    __regwrite_out: 
                    #line 683 
    ;
    #line 683 
    if (__err == 0 && __nreg != 0) {
      #line 683 
      if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                        #line 683 
                                                        __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0);
      #line 683 
      __nreg = 0;
    }
    #line 684 
    err = __err;
  }
  #line 685 
  if (err != 0) 
                #line 686 
                _dev_err(& ((ar->hw)->wiphy)->dev,(char *)"rf init failed\n");
  #line 688 
  return err;
}

#line 712  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/phy.c"
static struct carl9170_phy_freq_entry carl9170_phy_freq_params[49U] = {{.freq = (unsigned short)2412U, .params = {{.coeff_exp = (unsigned char)3U, .coeff_man = (unsigned short)21737U, .coeff_exp_shgi = (unsigned char)3U, .coeff_man_shgi = (unsigned short)19563U}, {.coeff_exp = (unsigned char)3U, .coeff_man = (unsigned short)21827U, .coeff_exp_shgi = (unsigned char)3U, .coeff_man_shgi = (unsigned short)19644U}, {.coeff_exp = (unsigned char)3U, .coeff_man = (unsigned short)21647U, .coeff_exp_shgi = (unsigned char)3U, .coeff_man_shgi = (unsigned short)19482U}}}, {.freq = (unsigned short)2417U, .params = {{.coeff_exp = (unsigned char)3U, .coeff_man = (unsigned short)21692U, .coeff_exp_shgi = (unsigned char)3U, .coeff_man_shgi = (unsigned short)19523U}, {.coeff_exp = (unsigned char)3U, .coeff_man = (unsigned short)21782U, .coeff_exp_shgi = (unsigned char)3U, .coeff_man_shgi = (unsigned short)19604U}, {.coeff_exp = (unsigned char)3U, .coeff_man = (unsigned short)21602U, .coeff_exp_shgi = (unsigned char)3U, .coeff_man_shgi = (unsigned short)19442U}}}, {.freq = (unsigned short)2422U, .params = {{.coeff_exp = (unsigned char)3U, .coeff_man = (unsigned short)21647U, .coeff_exp_shgi = (unsigned char)3U, .coeff_man_shgi = (unsigned short)19482U}, {.coeff_exp = (unsigned char)3U, .coeff_man = (unsigned short)21737U, .coeff_exp_shgi = (unsigned char)3U, .coeff_man_shgi = (unsigned short)19563U}, {.coeff_exp = (unsigned char)3U, .coeff_man = (unsigned short)21558U, .coeff_exp_shgi = (unsigned char)3U, .coeff_man_shgi = (unsigned short)19402U}}}, {.freq = (unsigned short)2427U, .params = {{.coeff_exp = (unsigned char)3U, .coeff_man = (unsigned short)21602U, .coeff_exp_shgi = (unsigned char)3U, .coeff_man_shgi = (unsigned short)19442U}, {.coeff_exp = (unsigned char)3U, .coeff_man = (unsigned short)21692U, .coeff_exp_shgi = (unsigned char)3U, .coeff_man_shgi = (unsigned short)19523U}, {.coeff_exp = (unsigned char)3U, .coeff_man = (unsigned short)21514U, .coeff_exp_shgi = (unsigned char)3U, .coeff_man_shgi = (unsigned short)19362U}}}, {.freq = (unsigned short)2432U, .params = {{.coeff_exp = (unsigned char)3U, .coeff_man = (unsigned short)21558U, .coeff_exp_shgi = (unsigned char)3U, .coeff_man_shgi = (unsigned short)19402U}, {.coeff_exp = (unsigned char)3U, .coeff_man = (unsigned short)21647U, .coeff_exp_shgi = (unsigned char)3U, .coeff_man_shgi = (unsigned short)19482U}, {.coeff_exp = (unsigned char)3U, .coeff_man = (unsigned short)21470U, .coeff_exp_shgi = (unsigned char)3U, .coeff_man_shgi = (unsigned short)19323U}}}, {.freq = (unsigned short)2437U, .params = {{.coeff_exp = (unsigned char)3U, .coeff_man = (unsigned short)21514U, .coeff_exp_shgi = (unsigned char)3U, .coeff_man_shgi = (unsigned short)19362U}, {.coeff_exp = (unsigned char)3U, .coeff_man = (unsigned short)21602U, .coeff_exp_shgi = (unsigned char)3U, .coeff_man_shgi = (unsigned short)19442U}, {.coeff_exp = (unsigned char)3U, .coeff_man = (unsigned short)21426U, .coeff_exp_shgi = (unsigned char)3U, .coeff_man_shgi = (unsigned short)19283U}}}, {.freq = (unsigned short)2442U, .params = {{.coeff_exp = (unsigned char)3U, .coeff_man = (unsigned short)21470U, .coeff_exp_shgi = (unsigned char)3U, .coeff_man_shgi = (unsigned short)19323U}, {.coeff_exp = (unsigned char)3U, .coeff_man = (unsigned short)21558U, .coeff_exp_shgi = (unsigned char)3U, .coeff_man_shgi = (unsigned short)19402U}, {.coeff_exp = (unsigned char)3U, .coeff_man = (unsigned short)21382U, .coeff_exp_shgi = (unsigned char)3U, .coeff_man_shgi = (unsigned short)19244U}}}, {.freq = (unsigned short)2447U, .params = {{.coeff_exp = (unsigned char)3U, .coeff_man = (unsigned short)21426U, .coeff_exp_shgi = (unsigned char)3U, .coeff_man_shgi = (unsigned short)19283U}, {.coeff_exp = (unsigned char)3U, .coeff_man = (unsigned short)21514U, .coeff_exp_shgi = (unsigned char)3U, .coeff_man_shgi = (unsigned short)19362U}, {.coeff_exp = (unsigned char)3U, .coeff_man = (unsigned short)21339U, .coeff_exp_shgi = (unsigned char)3U, .coeff_man_shgi = (unsigned short)19205U}}}, {.freq = (unsigned short)2452U, .params = {{.coeff_exp = (unsigned char)3U, .coeff_man = (unsigned short)21382U, .coeff_exp_shgi = (unsigned char)3U, .coeff_man_shgi = (unsigned short)19244U}, {.coeff_exp = (unsigned char)3U, .coeff_man = (unsigned short)21470U, .coeff_exp_shgi = (unsigned char)3U, .coeff_man_shgi = (unsigned short)19323U}, {.coeff_exp = (unsigned char)3U, .coeff_man = (unsigned short)21295U, .coeff_exp_shgi = (unsigned char)3U, .coeff_man_shgi = (unsigned short)19166U}}}, {.freq = (unsigned short)2457U, .params = {{.coeff_exp = (unsigned char)3U, .coeff_man = (unsigned short)21339U, .coeff_exp_shgi = (unsigned char)3U, .coeff_man_shgi = (unsigned short)19205U}, {.coeff_exp = (unsigned char)3U, .coeff_man = (unsigned short)21426U, .coeff_exp_shgi = (unsigned char)3U, .coeff_man_shgi = (unsigned short)19283U}, {.coeff_exp = (unsigned char)3U, .coeff_man = (unsigned short)21252U, .coeff_exp_shgi = (unsigned char)3U, .coeff_man_shgi = (unsigned short)19127U}}}, {.freq = (unsigned short)2462U, .params = {{.coeff_exp = (unsigned char)3U, .coeff_man = (unsigned short)21295U, .coeff_exp_shgi = (unsigned char)3U, .coeff_man_shgi = (unsigned short)19166U}, {.coeff_exp = (unsigned char)3U, .coeff_man = (unsigned short)21382U, .coeff_exp_shgi = (unsigned char)3U, .coeff_man_shgi = (unsigned short)19244U}, {.coeff_exp = (unsigned char)3U, .coeff_man = (unsigned short)21209U, .coeff_exp_shgi = (unsigned char)3U, .coeff_man_shgi = (unsigned short)19088U}}}, {.freq = (unsigned short)2467U, .params = {{.coeff_exp = (unsigned char)3U, .coeff_man = (unsigned short)21252U, .coeff_exp_shgi = (unsigned char)3U, .coeff_man_shgi = (unsigned short)19127U}, {.coeff_exp = (unsigned char)3U, .coeff_man = (unsigned short)21339U, .coeff_exp_shgi = (unsigned char)3U, .coeff_man_shgi = (unsigned short)19205U}, {.coeff_exp = (unsigned char)3U, .coeff_man = (unsigned short)21166U, .coeff_exp_shgi = (unsigned char)3U, .coeff_man_shgi = (unsigned short)19050U}}}, {.freq = (unsigned short)2472U, .params = {{.coeff_exp = (unsigned char)3U, .coeff_man = (unsigned short)21209U, .coeff_exp_shgi = (unsigned char)3U, .coeff_man_shgi = (unsigned short)19088U}, {.coeff_exp = (unsigned char)3U, .coeff_man = (unsigned short)21295U, .coeff_exp_shgi = (unsigned char)3U, .coeff_man_shgi = (unsigned short)19166U}, {.coeff_exp = (unsigned char)3U, .coeff_man = (unsigned short)21124U, .coeff_exp_shgi = (unsigned char)3U, .coeff_man_shgi = (unsigned short)19011U}}}, {.freq = (unsigned short)2484U, .params = {{.coeff_exp = (unsigned char)3U, .coeff_man = (unsigned short)21107U, .coeff_exp_shgi = (unsigned char)3U, .coeff_man_shgi = (unsigned short)18996U}, {.coeff_exp = (unsigned char)3U, .coeff_man = (unsigned short)21192U, .coeff_exp_shgi = (unsigned char)3U, .coeff_man_shgi = (unsigned short)19073U}, {.coeff_exp = (unsigned char)3U, .coeff_man = (unsigned short)21022U, .coeff_exp_shgi = (unsigned char)3U, .coeff_man_shgi = (unsigned short)18920U}}}, {.freq = (unsigned short)4920U, .params = {{.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)21313U, .coeff_exp_shgi = (unsigned char)4U, .coeff_man_shgi = (unsigned short)19181U}, {.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)21356U, .coeff_exp_shgi = (unsigned char)4U, .coeff_man_shgi = (unsigned short)19220U}, {.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)21269U, .coeff_exp_shgi = (unsigned char)4U, .coeff_man_shgi = (unsigned short)19142U}}}, {.freq = (unsigned short)4940U, .params = {{.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)21226U, .coeff_exp_shgi = (unsigned char)4U, .coeff_man_shgi = (unsigned short)19104U}, {.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)21269U, .coeff_exp_shgi = (unsigned char)4U, .coeff_man_shgi = (unsigned short)19142U}, {.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)21183U, .coeff_exp_shgi = (unsigned char)4U, .coeff_man_shgi = (unsigned short)19065U}}}, {.freq = (unsigned short)4960U, .params = {{.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)21141U, .coeff_exp_shgi = (unsigned char)4U, .coeff_man_shgi = (unsigned short)19027U}, {.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)21183U, .coeff_exp_shgi = (unsigned char)4U, .coeff_man_shgi = (unsigned short)19065U}, {.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)21098U, .coeff_exp_shgi = (unsigned char)4U, .coeff_man_shgi = (unsigned short)18988U}}}, {.freq = (unsigned short)4980U, .params = {{.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)21056U, .coeff_exp_shgi = (unsigned char)4U, .coeff_man_shgi = (unsigned short)18950U}, {.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)21098U, .coeff_exp_shgi = (unsigned char)4U, .coeff_man_shgi = (unsigned short)18988U}, {.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)21014U, .coeff_exp_shgi = (unsigned char)4U, .coeff_man_shgi = (unsigned short)18912U}}}, {.freq = (unsigned short)5040U, .params = {{.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)20805U, .coeff_exp_shgi = (unsigned char)4U, .coeff_man_shgi = (unsigned short)18725U}, {.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)20846U, .coeff_exp_shgi = (unsigned char)4U, .coeff_man_shgi = (unsigned short)18762U}, {.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)20764U, .coeff_exp_shgi = (unsigned char)4U, .coeff_man_shgi = (unsigned short)18687U}}}, {.freq = (unsigned short)5060U, .params = {{.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)20723U, .coeff_exp_shgi = (unsigned char)4U, .coeff_man_shgi = (unsigned short)18651U}, {.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)20764U, .coeff_exp_shgi = (unsigned char)4U, .coeff_man_shgi = (unsigned short)18687U}, {.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)20682U, .coeff_exp_shgi = (unsigned char)4U, .coeff_man_shgi = (unsigned short)18614U}}}, {.freq = (unsigned short)5080U, .params = {{.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)20641U, .coeff_exp_shgi = (unsigned char)4U, .coeff_man_shgi = (unsigned short)18577U}, {.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)20682U, .coeff_exp_shgi = (unsigned char)4U, .coeff_man_shgi = (unsigned short)18614U}, {.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)20601U, .coeff_exp_shgi = (unsigned char)4U, .coeff_man_shgi = (unsigned short)18541U}}}, {.freq = (unsigned short)5180U, .params = {{.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)20243U, .coeff_exp_shgi = (unsigned char)4U, .coeff_man_shgi = (unsigned short)18219U}, {.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)20282U, .coeff_exp_shgi = (unsigned char)4U, .coeff_man_shgi = (unsigned short)18254U}, {.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)20204U, .coeff_exp_shgi = (unsigned char)4U, .coeff_man_shgi = (unsigned short)18183U}}}, {.freq = (unsigned short)5200U, .params = {{.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)20165U, .coeff_exp_shgi = (unsigned char)4U, .coeff_man_shgi = (unsigned short)18148U}, {.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)20204U, .coeff_exp_shgi = (unsigned char)4U, .coeff_man_shgi = (unsigned short)18183U}, {.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)20126U, .coeff_exp_shgi = (unsigned char)4U, .coeff_man_shgi = (unsigned short)18114U}}}, {.freq = (unsigned short)5220U, .params = {{.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)20088U, .coeff_exp_shgi = (unsigned char)4U, .coeff_man_shgi = (unsigned short)18079U}, {.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)20126U, .coeff_exp_shgi = (unsigned char)4U, .coeff_man_shgi = (unsigned short)18114U}, {.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)20049U, .coeff_exp_shgi = (unsigned char)4U, .coeff_man_shgi = (unsigned short)18044U}}}, {.freq = (unsigned short)5240U, .params = {{.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)20011U, .coeff_exp_shgi = (unsigned char)4U, .coeff_man_shgi = (unsigned short)18010U}, {.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)20049U, .coeff_exp_shgi = (unsigned char)4U, .coeff_man_shgi = (unsigned short)18044U}, {.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)19973U, .coeff_exp_shgi = (unsigned char)4U, .coeff_man_shgi = (unsigned short)17976U}}}, {.freq = (unsigned short)5260U, .params = {{.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)19935U, .coeff_exp_shgi = (unsigned char)4U, .coeff_man_shgi = (unsigned short)17941U}, {.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)19973U, .coeff_exp_shgi = (unsigned char)4U, .coeff_man_shgi = (unsigned short)17976U}, {.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)19897U, .coeff_exp_shgi = (unsigned char)4U, .coeff_man_shgi = (unsigned short)17907U}}}, {.freq = (unsigned short)5280U, .params = {{.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)19859U, .coeff_exp_shgi = (unsigned char)4U, .coeff_man_shgi = (unsigned short)17873U}, {.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)19897U, .coeff_exp_shgi = (unsigned char)4U, .coeff_man_shgi = (unsigned short)17907U}, {.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)19822U, .coeff_exp_shgi = (unsigned char)4U, .coeff_man_shgi = (unsigned short)17840U}}}, {.freq = (unsigned short)5300U, .params = {{.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)19784U, .coeff_exp_shgi = (unsigned char)4U, .coeff_man_shgi = (unsigned short)17806U}, {.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)19822U, .coeff_exp_shgi = (unsigned char)4U, .coeff_man_shgi = (unsigned short)17840U}, {.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)19747U, .coeff_exp_shgi = (unsigned char)4U, .coeff_man_shgi = (unsigned short)17772U}}}, {.freq = (unsigned short)5320U, .params = {{.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)19710U, .coeff_exp_shgi = (unsigned char)4U, .coeff_man_shgi = (unsigned short)17739U}, {.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)19747U, .coeff_exp_shgi = (unsigned char)4U, .coeff_man_shgi = (unsigned short)17772U}, {.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)19673U, .coeff_exp_shgi = (unsigned char)4U, .coeff_man_shgi = (unsigned short)17706U}}}, {.freq = (unsigned short)5500U, .params = {{.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)19065U, .coeff_exp_shgi = (unsigned char)4U, .coeff_man_shgi = (unsigned short)17159U}, {.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)19100U, .coeff_exp_shgi = (unsigned char)4U, .coeff_man_shgi = (unsigned short)17190U}, {.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)19030U, .coeff_exp_shgi = (unsigned char)4U, .coeff_man_shgi = (unsigned short)17127U}}}, {.freq = (unsigned short)5520U, .params = {{.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)18996U, .coeff_exp_shgi = (unsigned char)4U, .coeff_man_shgi = (unsigned short)17096U}, {.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)19030U, .coeff_exp_shgi = (unsigned char)4U, .coeff_man_shgi = (unsigned short)17127U}, {.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)18962U, .coeff_exp_shgi = (unsigned char)4U, .coeff_man_shgi = (unsigned short)17065U}}}, {.freq = (unsigned short)5540U, .params = {{.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)18927U, .coeff_exp_shgi = (unsigned char)4U, .coeff_man_shgi = (unsigned short)17035U}, {.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)18962U, .coeff_exp_shgi = (unsigned char)4U, .coeff_man_shgi = (unsigned short)17065U}, {.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)18893U, .coeff_exp_shgi = (unsigned char)4U, .coeff_man_shgi = (unsigned short)17004U}}}, {.freq = (unsigned short)5560U, .params = {{.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)18859U, .coeff_exp_shgi = (unsigned char)4U, .coeff_man_shgi = (unsigned short)16973U}, {.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)18893U, .coeff_exp_shgi = (unsigned char)4U, .coeff_man_shgi = (unsigned short)17004U}, {.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)18825U, .coeff_exp_shgi = (unsigned char)4U, .coeff_man_shgi = (unsigned short)16943U}}}, {.freq = (unsigned short)5580U, .params = {{.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)18792U, .coeff_exp_shgi = (unsigned char)4U, .coeff_man_shgi = (unsigned short)16913U}, {.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)18825U, .coeff_exp_shgi = (unsigned char)4U, .coeff_man_shgi = (unsigned short)16943U}, {.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)18758U, .coeff_exp_shgi = (unsigned char)4U, .coeff_man_shgi = (unsigned short)16882U}}}, {.freq = (unsigned short)5600U, .params = {{.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)18725U, .coeff_exp_shgi = (unsigned char)4U, .coeff_man_shgi = (unsigned short)16852U}, {.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)18758U, .coeff_exp_shgi = (unsigned char)4U, .coeff_man_shgi = (unsigned short)16882U}, {.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)18691U, .coeff_exp_shgi = (unsigned char)4U, .coeff_man_shgi = (unsigned short)16822U}}}, {.freq = (unsigned short)5620U, .params = {{.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)18658U, .coeff_exp_shgi = (unsigned char)4U, .coeff_man_shgi = (unsigned short)16792U}, {.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)18691U, .coeff_exp_shgi = (unsigned char)4U, .coeff_man_shgi = (unsigned short)16822U}, {.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)18625U, .coeff_exp_shgi = (unsigned char)4U, .coeff_man_shgi = (unsigned short)16762U}}}, {.freq = (unsigned short)5640U, .params = {{.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)18592U, .coeff_exp_shgi = (unsigned char)4U, .coeff_man_shgi = (unsigned short)16733U}, {.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)18625U, .coeff_exp_shgi = (unsigned char)4U, .coeff_man_shgi = (unsigned short)16762U}, {.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)18559U, .coeff_exp_shgi = (unsigned char)4U, .coeff_man_shgi = (unsigned short)16703U}}}, {.freq = (unsigned short)5660U, .params = {{.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)18526U, .coeff_exp_shgi = (unsigned char)4U, .coeff_man_shgi = (unsigned short)16673U}, {.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)18559U, .coeff_exp_shgi = (unsigned char)4U, .coeff_man_shgi = (unsigned short)16703U}, {.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)18493U, .coeff_exp_shgi = (unsigned char)4U, .coeff_man_shgi = (unsigned short)16644U}}}, {.freq = (unsigned short)5680U, .params = {{.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)18461U, .coeff_exp_shgi = (unsigned char)4U, .coeff_man_shgi = (unsigned short)16615U}, {.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)18493U, .coeff_exp_shgi = (unsigned char)4U, .coeff_man_shgi = (unsigned short)16644U}, {.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)18428U, .coeff_exp_shgi = (unsigned char)4U, .coeff_man_shgi = (unsigned short)16586U}}}, {.freq = (unsigned short)5700U, .params = {{.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)18396U, .coeff_exp_shgi = (unsigned char)4U, .coeff_man_shgi = (unsigned short)16556U}, {.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)18428U, .coeff_exp_shgi = (unsigned char)4U, .coeff_man_shgi = (unsigned short)16586U}, {.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)18364U, .coeff_exp_shgi = (unsigned char)4U, .coeff_man_shgi = (unsigned short)16527U}}}, {.freq = (unsigned short)5745U, .params = {{.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)18252U, .coeff_exp_shgi = (unsigned char)4U, .coeff_man_shgi = (unsigned short)16427U}, {.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)18284U, .coeff_exp_shgi = (unsigned char)4U, .coeff_man_shgi = (unsigned short)16455U}, {.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)18220U, .coeff_exp_shgi = (unsigned char)4U, .coeff_man_shgi = (unsigned short)16398U}}}, {.freq = (unsigned short)5765U, .params = {{.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)18189U, .coeff_exp_shgi = (unsigned char)5U, .coeff_man_shgi = (unsigned short)32740U}, {.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)18220U, .coeff_exp_shgi = (unsigned char)4U, .coeff_man_shgi = (unsigned short)16398U}, {.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)18157U, .coeff_exp_shgi = (unsigned char)5U, .coeff_man_shgi = (unsigned short)32683U}}}, {.freq = (unsigned short)5785U, .params = {{.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)18126U, .coeff_exp_shgi = (unsigned char)5U, .coeff_man_shgi = (unsigned short)32626U}, {.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)18157U, .coeff_exp_shgi = (unsigned char)5U, .coeff_man_shgi = (unsigned short)32683U}, {.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)18094U, .coeff_exp_shgi = (unsigned char)5U, .coeff_man_shgi = (unsigned short)32570U}}}, {.freq = (unsigned short)5805U, .params = {{.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)18063U, .coeff_exp_shgi = (unsigned char)5U, .coeff_man_shgi = (unsigned short)32514U}, {.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)18094U, .coeff_exp_shgi = (unsigned char)5U, .coeff_man_shgi = (unsigned short)32570U}, {.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)18032U, .coeff_exp_shgi = (unsigned char)5U, .coeff_man_shgi = (unsigned short)32458U}}}, {.freq = (unsigned short)5825U, .params = {{.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)18001U, .coeff_exp_shgi = (unsigned char)5U, .coeff_man_shgi = (unsigned short)32402U}, {.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)18032U, .coeff_exp_shgi = (unsigned char)5U, .coeff_man_shgi = (unsigned short)32458U}, {.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)17970U, .coeff_exp_shgi = (unsigned char)5U, .coeff_man_shgi = (unsigned short)32347U}}}, {.freq = (unsigned short)5170U, .params = {{.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)20282U, .coeff_exp_shgi = (unsigned char)4U, .coeff_man_shgi = (unsigned short)18254U}, {.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)20321U, .coeff_exp_shgi = (unsigned char)4U, .coeff_man_shgi = (unsigned short)18289U}, {.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)20243U, .coeff_exp_shgi = (unsigned char)4U, .coeff_man_shgi = (unsigned short)18219U}}}, {.freq = (unsigned short)5190U, .params = {{.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)20204U, .coeff_exp_shgi = (unsigned char)4U, .coeff_man_shgi = (unsigned short)18183U}, {.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)20243U, .coeff_exp_shgi = (unsigned char)4U, .coeff_man_shgi = (unsigned short)18219U}, {.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)20165U, .coeff_exp_shgi = (unsigned char)4U, .coeff_man_shgi = (unsigned short)18148U}}}, {.freq = (unsigned short)5210U, .params = {{.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)20126U, .coeff_exp_shgi = (unsigned char)4U, .coeff_man_shgi = (unsigned short)18114U}, {.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)20165U, .coeff_exp_shgi = (unsigned char)4U, .coeff_man_shgi = (unsigned short)18148U}, {.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)20088U, .coeff_exp_shgi = (unsigned char)4U, .coeff_man_shgi = (unsigned short)18079U}}}, {.freq = (unsigned short)5230U, .params = {{.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)20049U, .coeff_exp_shgi = (unsigned char)4U, .coeff_man_shgi = (unsigned short)18044U}, {.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)20088U, .coeff_exp_shgi = (unsigned char)4U, .coeff_man_shgi = (unsigned short)18079U}, {.coeff_exp = (unsigned char)4U, .coeff_man = (unsigned short)20011U, .coeff_exp_shgi = (unsigned char)4U, .coeff_man_shgi = (unsigned short)18010U}}}};
#line 966  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/phy.c"
static int carl9170_init_rf_bank4_pwr(struct ar9170 *ar, bool band5ghz, u32 freq, enum carl9170_bw bw)
{
  #line 969 
  int err;
  #line 970 
  u32 d0;
  #line 970 
  u32 d1;
  #line 970 
  u32 td0;
  #line 970 
  u32 td1;
  #line 970 
  u32 fd0;
  #line 970 
  u32 fd1;
  #line 971 
  u8 chansel;
  #line 972 
  u8 refsel0 = (unsigned char)1U;
  #line 972 
  u8 refsel1 = (unsigned char)0U;
  #line 973 
  u8 lf_synth = (unsigned char)0U;
  #line 975 
  switch ((unsigned int)bw) {
    #line 976 
    case (unsigned int)2: 
                          #line 976 
    ;
    #line 977 
    freq += 10U;
    #line 978 
    break;
    #line 979 
    case (unsigned int)1: 
                          #line 979 
    ;
    #line 980 
    freq += 4294967286U;
    #line 981 
    break;
    #line 982 
    case (unsigned int)0: 
                          #line 982 
    ;
    #line 983 
    break;
    #line 984 
    default: 
             #line 984 
    ;
    #line 986 
    ldv_inline_asm();
    #line 987 
    ldv_inline_asm();
    #line 988 
    ldv_inline_asm();
    #line 985 
    ;
    #line 986 
    return -38;
  }
  #line 989 
  if ((int)band5ghz != 0) {
    #line 997 
    u8 ___x;
    #line 997 
    int tmp_1;
    #line 990 
    if (freq % 10U != 0U) 
                          #line 991 
                          chansel = (unsigned char)((freq + 4294962496U) / 5U);
    else {
      #line 993 
      chansel = (unsigned char)((unsigned int)((unsigned char)((freq + 4294962496U) / 10U)) * 2U);
      #line 994 
      refsel0 = (unsigned char)0U;
      #line 995 
      refsel1 = (unsigned char)1U;
    }
    {
      #line 997 
      u8 __x = chansel;
      #line 997 
      if (0 != 0) {
        #line 997 
        ___x = __x;
        #line 997 
        ___x = (unsigned char)(((int)___x >> 4) | ((int)___x << 4));
        #line 997 
        ___x = (unsigned char)((((int)___x >> 2) & 51) | (((int)___x << 2) & -52));
        #line 997 
        ___x = (unsigned char)((((int)___x >> 1) & 85) | (((int)___x << 1) & -86));
        #line 997 
        tmp_1 = (int)___x;
      }
      else {
        #line 997 
        tmp_1 = (int)__bitrev8((unsigned char)((int)__x));
      }
      }
    #line 997 
    chansel = (unsigned char)tmp_1;
  }
  else {
    #line 1005 
    u8 ___x_0;
    #line 1005 
    int tmp_5;
    #line 999 
    if (freq == 2484U) {
      #line 1000 
      chansel = (unsigned char)((unsigned int)((unsigned char)((freq + 4294965022U) / 5U)) + 10U);
      #line 1001 
      lf_synth = (unsigned char)1U;
    }
    else 
         #line 1003 
         chansel = (unsigned char)((unsigned int)((unsigned char)((freq + 4294965024U) / 5U)) + 16U);
    #line 1004 
    chansel = (unsigned char)((unsigned int)chansel * 4U);
    {
      #line 1005 
      u8 __x_0 = chansel;
      #line 1005 
      if (0 != 0) {
        #line 1005 
        ___x_0 = __x_0;
        #line 1005 
        ___x_0 = (unsigned char)(((int)___x_0 >> 4) | ((int)___x_0 << 4));
        #line 1005 
        ___x_0 = (unsigned char)((((int)___x_0 >> 2) & 51) | (((int)___x_0 << 2) & -52));
        #line 1005 
        ___x_0 = (unsigned char)((((int)___x_0 >> 1) & 85) | (((int)___x_0 << 1) & -86));
        #line 1005 
        tmp_5 = (int)___x_0;
      }
      else {
        #line 1005 
        tmp_5 = (int)__bitrev8((unsigned char)((int)__x_0));
      }
      }
    #line 1005 
    chansel = (unsigned char)tmp_5;
  }
  #line 1008 
  d1 = (unsigned int)chansel;
  #line 1009 
  d0 = (unsigned int)(((((int)refsel0 << 3) | 33) | ((int)refsel1 << 2)) | ((int)lf_synth << 1));
  #line 1013 
  td0 = d0 & 31U;
  #line 1014 
  td1 = d1 & 31U;
  #line 1015 
  fd0 = (td1 << 5) | td0;
  #line 1017 
  td0 = (d0 >> 5) & 7U;
  #line 1018 
  td1 = (d1 >> 5) & 7U;
  #line 1019 
  fd1 = (td1 << 5) | td0;
  {
    #line 1021 
    int __nreg = 0;
    #line 1021 
    int __err = 0;
    #line 1021 
    struct ar9170 *__ar = ar;
    #line 1023 
    __ar->__anonCompField_ar9170_205.cmd_buf[__nreg * 2 + 1] = 1857712U;
    #line 1023 
    __ar->__anonCompField_ar9170_205.cmd_buf[(__nreg + 1) * 2] = fd0;
    #line 1023 
    __nreg ++;
    #line 1023 
    if (__nreg > 6) {
      #line 1023 
      if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                        #line 1023 
                                                        __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0); else 
                                                                    #line 1023 
                                                                    goto __regwrite_out;
      #line 1023 
      __nreg = 0;
      #line 1023 
      if (__err != 0) 
                      #line 1023 
                      goto __regwrite_out;
    }
    #line 1024 
    __ar->__anonCompField_ar9170_205.cmd_buf[__nreg * 2 + 1] = 1857768U;
    #line 1024 
    __ar->__anonCompField_ar9170_205.cmd_buf[(__nreg + 1) * 2] = fd1;
    #line 1024 
    __nreg ++;
    #line 1024 
    if (__nreg > 6) {
      #line 1024 
      if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                        #line 1024 
                                                        __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0); else 
                                                                    #line 1024 
                                                                    goto __regwrite_out;
      #line 1024 
      __nreg = 0;
      #line 1024 
      if (__err != 0) 
                      #line 1024 
                      goto __regwrite_out;
    }
    #line 1026 
    __regwrite_out: 
                    #line 1026 
    ;
    #line 1026 
    if (__err == 0 && __nreg != 0) {
      #line 1026 
      if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                        #line 1026 
                                                        __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0);
      #line 1026 
      __nreg = 0;
    }
    #line 1027 
    err = __err;
  }
  #line 1028 
  if (err != 0) 
                #line 1029 
                return err;
  #line 1031 
  return 0;
}

#line 1035  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/phy.c"
static struct carl9170_phy_freq_params *carl9170_get_hw_dyn_params(struct ieee80211_channel *channel, enum carl9170_bw bw)
{
  #line 1038 
  unsigned int chanidx = 0U;
  #line 1039 
  u16 freq = (unsigned short)2412U;
  #line 1041 
  if (channel != (struct ieee80211_channel *)0) {
    #line 1042 
    chanidx = (unsigned int)channel->hw_value;
    #line 1043 
    freq = (unsigned short)channel->center_freq;
  }
  #line 1046 
  if ((long)(chanidx > 48U) != 0L) {
    #line 1047 
    ldv_inline_asm();
    #line 1048 
    ldv_inline_asm();
    #line 1049 
    ldv_inline_asm();
    #line 1046 
    ;
  }
  {
    #line 1050 
    int __ret_warn_on = (int)carl9170_phy_freq_params[chanidx].freq != (int)freq;
    #line 1050 
    if ((long)(__ret_warn_on != 0) != 0L) {
      #line 1051 
      ldv_inline_asm();
      #line 1052 
      ldv_inline_asm();
    }
    #line 1050 
    long tmp = (long)(__ret_warn_on != 0);
  }
  #line 1052 
  return & carl9170_phy_freq_params[chanidx].params[(unsigned int)bw];
}

#line 1055  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/phy.c"
static int carl9170_find_freq_idx(int nfreqs, u8 *freqs, u8 f)
{
  #line 1057 
  int idx = nfreqs + -2;
  #line 1059 
  while (idx >= 0) {
    #line 1060 
    if ((int)*(freqs + (unsigned long)idx) <= (int)f) 
                                                      #line 1061 
                                                      return idx;
    #line 1062 
    idx --;
  }
  #line 1065 
  return 0;
}

#line 1068  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/phy.c"
static s32 carl9170_interpolate_s32(s32 x, s32 x1, s32 y1, s32 x2, s32 y2)
{
  #line 1071 
  if (y2 == y1) 
                #line 1072 
                return y1;
  #line 1075 
  if (x == x1) 
               #line 1076 
               return y1;
  #line 1077 
  if (x == x2) 
               #line 1078 
               return y2;
  #line 1081 
  if (x2 == x1) 
                #line 1082 
                return y1;
  #line 1084 
  return ((y2 - y1) * (x - x1)) / (x2 - x1) + y1;
}

#line 1087  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/phy.c"
static u8 carl9170_interpolate_u8(u8 x, u8 x1, u8 y1, u8 x2, u8 y2)
{
  #line 1090 
  s32 y;
  #line 1092 
  y = carl9170_interpolate_s32((int)x << 8,(int)x1 << 8,(int)y1 << 8,(int)x2 << 8,(int)y2 << 8);
  #line 1100 
  return (unsigned char)((unsigned int)((unsigned char)(y >> 8)) + ((unsigned int)((unsigned char)(y >> 7)) & 1U));
}

#line 1104  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/phy.c"
static u8 carl9170_interpolate_val(u8 x, u8 *x_array, u8 *y_array)
{
  #line 1106 
  int i;
  #line 1108 
  i = 0;
  #line 1108 
  while (i <= 2) {
    #line 1109 
    if ((int)*(x_array + ((unsigned long)i + (unsigned long)1U)) >= (int)x) 
      #line 1110 
      break;
    #line 1108 
    i ++;
  }
  #line 1113 
  return carl9170_interpolate_u8((unsigned char)((int)x),
                              (unsigned char)((int)*(x_array + (unsigned long)i)),
                              (unsigned char)((int)*(y_array + (unsigned long)i)),
                              (unsigned char)((int)*(x_array + ((unsigned long)i + (unsigned long)1U))),
                              (unsigned char)((int)*(y_array + ((unsigned long)i + (unsigned long)1U))));
}

#line 1117  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/phy.c"
static int carl9170_set_freq_cal_data(struct ar9170 *ar, struct ieee80211_channel *channel)
{
  #line 1120 
  u8 *cal_freq_pier;
  #line 1121 
  u8 vpds[2U][5U];
  #line 1122 
  u8 pwrs[2U][5U];
  #line 1123 
  int chain;
  #line 1123 
  int idx;
  #line 1123 
  int i;
  #line 1125 
  u8 f;
  #line 1125 
  u8 tmp;
  #line 1124 
  u32 phy_data = 0U;
  #line 1127 
  switch ((unsigned int)channel->band) {
    #line 1128 
    case (unsigned int)0: 
                          #line 1128 
    ;
    #line 1129 
    f = (unsigned char)((unsigned int)((unsigned char)channel->center_freq) + 4U);
    #line 1130 
    cal_freq_pier = (u8 *)(& ar->eeprom.cal_freq_pier_2G);
    #line 1131 
    i = 3;
    #line 1132 
    break;
    #line 1134 
    case (unsigned int)1: 
                          #line 1134 
    ;
    #line 1135 
    f = (unsigned char)((channel->center_freq + 4294962496U) / 5U);
    #line 1136 
    cal_freq_pier = (u8 *)(& ar->eeprom.cal_freq_pier_5G);
    #line 1137 
    i = 7;
    #line 1138 
    break;
    #line 1140 
    default: 
             #line 1140 
    ;
    #line 1141 
    return -22;
  }
  #line 1144 
  while (i >= 0) {
    #line 1145 
    if ((unsigned int)*(cal_freq_pier + (unsigned long)i) != 255U) 
                                                                   #line 1146 
                                                                   break;
    #line 1144 
    i --;
  }
  #line 1148 
  if (i < 0) 
             #line 1149 
             return -22;
  #line 1151 
  idx = carl9170_find_freq_idx(i,cal_freq_pier,(unsigned char)((int)f));
  {
    #line 1153 
    int __nreg = 0;
    #line 1153 
    int __err = 0;
    #line 1153 
    struct ar9170 *__ar = ar;
    #line 1155 
    chain = 0;
    #line 1155 
    while (chain <= 1) {
      #line 1156 
      i = 0;
      #line 1156 
      while (i <= 4) {
        {
          #line 1157 
          struct ar9170_calibration_data_per_freq *cal_pier_data;
          #line 1158 
          int j;
          #line 1160 
          switch ((unsigned int)channel->band) {
            #line 1161 
            case (unsigned int)0: 
                                  #line 1161 
            ;
            #line 1162 
            cal_pier_data = & ar->eeprom.cal_pier_data_2G[chain][idx];
            #line 1164 
            break;
            #line 1166 
            case (unsigned int)1: 
                                  #line 1166 
            ;
            #line 1167 
            cal_pier_data = & ar->eeprom.cal_pier_data_5G[chain][idx];
            #line 1169 
            break;
            #line 1171 
            default: 
                     #line 1171 
            ;
            #line 1172 
            return -22;
          }
          #line 1175 
          j = 0;
          #line 1175 
          while (j <= 1) {
            {
              #line 1176 
              vpds[j][i] = carl9170_interpolate_u8((unsigned char)((int)f),(unsigned char)((int)*(cal_freq_pier + (unsigned long)idx)),(unsigned char)((int)cal_pier_data->vpd_pdg[j][i]),(unsigned char)((int)*(cal_freq_pier + ((unsigned long)idx + (unsigned long)1U))),(unsigned char)((int)(cal_pier_data + 1U)->vpd_pdg[j][i]));
              #line 1182 
              pwrs[j][i] = (unsigned char)((unsigned int)carl9170_interpolate_u8((unsigned char)((int)f),
                                (unsigned char)((int)*(cal_freq_pier + (unsigned long)idx)),
                                (unsigned char)((int)cal_pier_data->pwr_pdg[j][i]),
                                (unsigned char)((int)*(cal_freq_pier + (
                                                       (unsigned long)idx + (unsigned long)1U))),
                                (unsigned char)((int)(cal_pier_data + 1U)->pwr_pdg[j][i])) / 2U);
            }
            #line 1175 
            j ++;
          }
        }
        #line 1156 
        i ++;
      }
      #line 1190 
      i = 0;
      #line 1190 
      while (i <= 75) {
        #line 1191 
        if (i <= 24) 
                     #line 1192 
                     tmp = carl9170_interpolate_val((unsigned char)((int)((unsigned char)i)),& pwrs[0][0],& vpds[0][0]); else 
                                                                    #line 1195 
                                                                    tmp = carl9170_interpolate_val((unsigned char)((int)((unsigned int)((unsigned char)i) + 244U)),& pwrs[1][0],& vpds[1][0]);
        #line 1200 
        phy_data = (unsigned int)((int)tmp << ((i << 3) & 24)) | phy_data;
        #line 1201 
        if ((i & 3) == 3) {
          #line 1202 
          __ar->__anonCompField_ar9170_205.cmd_buf[__nreg * 2 + 1] = (unsigned int)((chain * 4096 + 1860224) + (i & -4));
          #line 1202 
          __ar->__anonCompField_ar9170_205.cmd_buf[(__nreg + 1) * 2] = phy_data;
          #line 1202 
          __nreg ++;
          #line 1202 
          if (__nreg > 6) {
            #line 1202 
            if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                              #line 1202 
                                                              __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0); else 
                                                                    #line 1202 
                                                                    goto __regwrite_out;
            #line 1202 
            __nreg = 0;
            #line 1202 
            if (__err != 0) 
                            #line 1202 
                            goto __regwrite_out;
          }
          #line 1204 
          phy_data = 0U;
        }
        #line 1190 
        i ++;
      }
      #line 1208 
      i = 19;
      #line 1208 
      while (i <= 31) {
        #line 1209 
        __ar->__anonCompField_ar9170_205.cmd_buf[__nreg * 2 + 1] = (unsigned int)((chain * 4096 + 1860224) + (i << 2));
        #line 1209 
        __ar->__anonCompField_ar9170_205.cmd_buf[(__nreg + 1) * 2] = 0U;
        #line 1209 
        __nreg ++;
        #line 1209 
        if (__nreg > 6) {
          #line 1209 
          if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                            #line 1209 
                                                            __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0); else 
                                                                    #line 1209 
                                                                    goto __regwrite_out;
          #line 1209 
          __nreg = 0;
          #line 1209 
          if (__err != 0) 
                          #line 1209 
                          goto __regwrite_out;
        }
        #line 1208 
        i ++;
      }
      #line 1155 
      chain ++;
    }
    #line 1213 
    __regwrite_out: 
                    #line 1213 
    ;
    #line 1213 
    if (__err == 0 && __nreg != 0) {
      #line 1213 
      if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                        #line 1213 
                                                        __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0);
      #line 1213 
      __nreg = 0;
    }
    #line 1214 
    return __err;
  }
}

#line 1217  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/phy.c"
static u8 carl9170_get_max_edge_power(struct ar9170 *ar, u32 freq, struct ar9170_calctl_edges *edges)
{
  #line 1220 
  int i;
  #line 1222 
  u8 f;
  #line 1221 
  u8 rc = (unsigned char)63U;
  #line 1223 
  if (freq <= 2999U) 
                     #line 1224 
                     f = (unsigned char)((unsigned int)((unsigned char)freq) + 4U); else 
                                                                    #line 1226 
                                                                    f = (unsigned char)((freq + 4294962496U) / 5U);
  #line 1228 
  i = 0;
  #line 1228 
  while (i <= 7) {
    #line 1229 
    if ((unsigned int)(edges + (unsigned long)i)->channel == 255U) 
                                                                   #line 1230 
                                                                   break;
    #line 1231 
    if ((int)(edges + (unsigned long)i)->channel == (int)f) {
      #line 1233 
      rc = (unsigned char)((unsigned int)(edges + (unsigned long)i)->power_flags & 63U);
      #line 1234 
      break;
    }
    #line 1236 
    if (i > 0 && (int)(edges + (unsigned long)i)->channel > (int)f) {
      #line 1237 
      if ((int)(edges + ((unsigned long)i + 18446744073709551615U))->channel < (int)f && ((int)(edges + ((unsigned long)i + 18446744073709551615U))->power_flags & 192) != 0) 
        #line 1241 
        rc = (unsigned char)((unsigned int)(edges + ((unsigned long)i + 18446744073709551615U))->power_flags & 63U);
      #line 1244 
      break;
    }
    #line 1228 
    i ++;
  }
  #line 1248 
  if (i == 8) 
    #line 1249 
    if ((int)(edges + ((unsigned long)i + 18446744073709551615U))->channel < (int)f && ((int)(edges + ((unsigned long)i + 18446744073709551615U))->power_flags & 192) != 0) 
      #line 1252 
      rc = (unsigned char)((unsigned int)(edges + ((unsigned long)i + 18446744073709551615U))->power_flags & 63U);
  #line 1256 
  return rc;
}

#line 1259  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/phy.c"
static u8 carl9170_get_heavy_clip(struct ar9170 *ar, u32 freq, enum carl9170_bw bw, struct ar9170_calctl_edges *edges)
{
  #line 1262 
  u8 f;
  #line 1263 
  int i;
  #line 1264 
  u8 rc = (unsigned char)0U;
  #line 1266 
  if (freq <= 2999U) 
                     #line 1267 
                     f = (unsigned char)((unsigned int)((unsigned char)freq) + 4U); else 
                                                                    #line 1269 
                                                                    f = (unsigned char)((freq + 4294962496U) / 5U);
  #line 1271 
  if ((unsigned int)bw + 4294967295U <= 1U) 
                                            #line 1272 
                                            rc = (unsigned char)((unsigned int)rc | 240U);
  #line 1274 
  i = 0;
  #line 1274 
  while (i <= 7) {
    #line 1275 
    if ((unsigned int)(edges + (unsigned long)i)->channel == 255U) 
                                                                   #line 1276 
                                                                   break;
    #line 1277 
    if ((int)(edges + (unsigned long)i)->channel == (int)f) {
      #line 1278 
      if (((int)(edges + (unsigned long)i)->power_flags & 192) == 0) 
        #line 1279 
        rc = (unsigned char)((unsigned int)rc | 15U);
      #line 1280 
      break;
    }
    #line 1274 
    i ++;
  }
  #line 1284 
  return rc;
}

#line 1291  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/phy.c"
static void carl9170_calc_ctl(struct ar9170 *ar, u32 freq, enum carl9170_bw bw)
{
  #line 1293 
  u8 ctl_grp;
  #line 1294 
  u8 ctl_idx;
  #line 1295 
  int i;
  #line 1295 
  int j;
  #line 1301 
  struct ctl_modes *modes;
  #line 1318 
  int nr_modes;
  #line 1307 
  struct ctl_modes mode_list_2ghz[4U] = {{.ctl_mode = (unsigned char)1U, .max_power = (unsigned char)0U, .pwr_cal_data = (u8 *)(& ar->power_2G_cck), .pwr_cal_len = 4}, {.ctl_mode = (unsigned char)2U, .max_power = (unsigned char)0U, .pwr_cal_data = (u8 *)(& ar->power_2G_ofdm), .pwr_cal_len = 4}, {.ctl_mode = (unsigned char)5U, .max_power = (unsigned char)0U, .pwr_cal_data = (u8 *)(& ar->power_2G_ht20), .pwr_cal_len = 8}, {.ctl_mode = (unsigned char)7U, .max_power = (unsigned char)0U, .pwr_cal_data = (u8 *)(& ar->power_2G_ht40), .pwr_cal_len = 8}};
  #line 1313 
  struct ctl_modes mode_list_5ghz[3U] = {{.ctl_mode = (unsigned char)0U, .max_power = (unsigned char)0U, .pwr_cal_data = (u8 *)(& ar->power_5G_leg), .pwr_cal_len = 4}, {.ctl_mode = (unsigned char)6U, .max_power = (unsigned char)0U, .pwr_cal_data = (u8 *)(& ar->power_5G_ht20), .pwr_cal_len = 8}, {.ctl_mode = (unsigned char)8U, .max_power = (unsigned char)0U, .pwr_cal_data = (u8 *)(& ar->power_5G_ht40), .pwr_cal_len = 8}};
  #line 1322 
  ar->heavy_clip = (unsigned char)0U;
  #line 1332 
  ctl_grp = (unsigned char)ath_regd_get_band_ctl(& ar->common.regulatory,
                            ((ar->hw)->conf.chandef.chan)->band);
  #line 1336 
  if ((unsigned int)ctl_grp == 255U || (unsigned int)ctl_grp == 224U) 
    #line 1337 
    ctl_grp = (unsigned char)16U;
  #line 1339 
  if ((unsigned int)ctl_grp != 16U) 
                                    #line 1341 
                                    return;
  #line 1343 
  if (((ar->hw)->conf.chandef.chan)->band == (unsigned int)NL80211_BAND_2GHZ) {
    #line 1344 
    modes = (struct ctl_modes *)(& mode_list_2ghz);
    #line 1345 
    nr_modes = 4;
  }
  else {
    #line 1347 
    modes = (struct ctl_modes *)(& mode_list_5ghz);
    #line 1348 
    nr_modes = 3;
  }
  #line 1351 
  i = 0;
  #line 1351 
  while (i < nr_modes) {
    {
      #line 1352 
      u8 c = (unsigned char)((int)(modes + (unsigned long)i)->ctl_mode | (int)ctl_grp);
      #line 1353 
      ctl_idx = (unsigned char)0U;
      #line 1353 
      while ((unsigned int)ctl_idx <= 23U) {
        #line 1354 
        if ((int)ar->eeprom.ctl_index[(int)ctl_idx] == (int)c) 
                                                               #line 1355 
                                                               break;
        #line 1353 
        ctl_idx = (u8)((int)ctl_idx + 1);
      }
      #line 1356 
      if ((unsigned int)ctl_idx <= 23U) {
        #line 1357 
        int f_off = 0;
        #line 1363 
        if ((unsigned int)(modes + (unsigned long)i)->ctl_mode == 2U) 
          #line 1364 
          ar->heavy_clip = carl9170_get_heavy_clip(ar,freq,bw,(struct ar9170_calctl_edges *)(& ar->eeprom.ctl_data[(int)ctl_idx].control_edges[1]));
        #line 1370 
        if ((unsigned int)(modes + (unsigned long)i)->ctl_mode + 249U <= 1U) 
          #line 1372 
          if (bw == (unsigned int)CARL9170_BW_40_BELOW) 
                                                        #line 1373 
                                                        f_off = -10; else 
                                                                    #line 1375 
                                                                    f_off = 10;
        #line 1378 
        (modes + (unsigned long)i)->max_power = carl9170_get_max_edge_power(ar,freq + (unsigned int)f_off,(struct ar9170_calctl_edges *)(& ar->eeprom.ctl_data[(int)ctl_idx].control_edges[1]));
      }
      else {
        #line 1395 
        int k = i;
        #line 1397 
        (modes + (unsigned long)i)->max_power = (unsigned char)63U;
        #line 1398 
        while (1) {
          #line 1398 
          int tmp_0;
          #line 1398 
          tmp_0 = k;
          #line 1398 
          k --;
          #line 1398 
          ;
          #line 1398 
          if (! (tmp_0 > 0)) 
                             #line 1398 
                             break;
          #line 1399 
          if ((unsigned int)(modes + (unsigned long)k)->max_power != 63U) {
            #line 1401 
            (modes + (unsigned long)i)->max_power = (modes + (unsigned long)k)->max_power;
            #line 1402 
            break;
          }
        }
      }
      #line 1408 
      j = 0;
      #line 1408 
      while ((modes + (unsigned long)i)->pwr_cal_len > j) {
        #line 1409 
        u8 __UNIQUE_ID___x563;
        #line 1409 
        int tmp_1;
        {
          #line 1409 
          __UNIQUE_ID___x563 = *((modes + (unsigned long)i)->pwr_cal_data + (unsigned long)j);
          #line 1409 
          u8 __UNIQUE_ID___y564 = (modes + (unsigned long)i)->max_power;
          #line 1409 
          if ((int)__UNIQUE_ID___x563 < (int)__UNIQUE_ID___y564) 
                                                                 #line 1409 
                                                                 tmp_1 = (int)__UNIQUE_ID___x563; else 
                                                                    #line 1409 
                                                                    tmp_1 = (int)__UNIQUE_ID___y564;
          }
        #line 1409 
        *((modes + (unsigned long)i)->pwr_cal_data + (unsigned long)j) = (unsigned char)tmp_1;
        #line 1408 
        j ++;
      }
    }
    #line 1351 
    i ++;
  }
  #line 1414 
  if (((int)ar->heavy_clip & 240) != 0) {
    #line 1415 
    ar->power_2G_ht40[0] = (u8)((int)ar->power_2G_ht40[0] - 1);
    #line 1416 
    ar->power_2G_ht40[1] = (u8)((int)ar->power_2G_ht40[1] - 1);
    #line 1417 
    ar->power_2G_ht40[2] = (u8)((int)ar->power_2G_ht40[2] - 1);
  }
  #line 1419 
  if (((int)ar->heavy_clip & 15) != 0) {
    #line 1420 
    ar->power_2G_ht20[0] = (u8)((int)ar->power_2G_ht20[0] + 1);
    #line 1421 
    ar->power_2G_ht20[1] = (u8)((int)ar->power_2G_ht20[1] + 1);
    #line 1422 
    ar->power_2G_ht20[2] = (u8)((int)ar->power_2G_ht20[2] + 1);
  }
  #line 1424 
  return;
}

#line 1428  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/phy.c"
static void carl9170_set_power_cal(struct ar9170 *ar, u32 freq, enum carl9170_bw bw)
{
  #line 1431 
  struct ar9170_calibration_target_power_legacy *ctpl;
  #line 1432 
  struct ar9170_calibration_target_power_ht *ctph;
  #line 1433 
  u8 *ctpres;
  #line 1434 
  int ntargets;
  #line 1435 
  int idx;
  #line 1435 
  int i;
  #line 1435 
  int n;
  #line 1436 
  u8 f;
  #line 1437 
  u8 pwr_freqs[8U];
  #line 1439 
  if (freq <= 2999U) 
                     #line 1440 
                     f = (unsigned char)((unsigned int)((unsigned char)freq) + 4U); else 
                                                                    #line 1442 
                                                                    f = (unsigned char)((freq + 4294962496U) / 5U);
  #line 1449 
  i = 0;
  #line 1449 
  while (i <= 2) {
    #line 1450 
    switch (i) {
      #line 1451 
      case 0: 
              #line 1451 
      ;
      #line 1452 
      ctpl = & ar->eeprom.cal_tgt_pwr_5G[0];
      #line 1453 
      ntargets = 8;
      #line 1454 
      ctpres = (u8 *)(& ar->power_5G_leg);
      #line 1455 
      break;
      #line 1456 
      case 1: 
              #line 1456 
      ;
      #line 1457 
      ctpl = & ar->eeprom.cal_tgt_pwr_2G_cck[0];
      #line 1458 
      ntargets = 3;
      #line 1459 
      ctpres = (u8 *)(& ar->power_2G_cck);
      #line 1460 
      break;
      #line 1461 
      case 2: 
              #line 1461 
      ;
      #line 1462 
      ctpl = & ar->eeprom.cal_tgt_pwr_2G_ofdm[0];
      #line 1463 
      ntargets = 4;
      #line 1464 
      ctpres = (u8 *)(& ar->power_2G_ofdm);
      #line 1465 
      break;
      #line 1466 
      default: 
               #line 1466 
      ;
      #line 1468 
      ldv_inline_asm();
      #line 1469 
      ldv_inline_asm();
      #line 1470 
      ldv_inline_asm();
      #line 1467 
      ;
    }
    #line 1470 
    n = 0;
    #line 1470 
    while (n < ntargets) {
      #line 1471 
      if ((unsigned int)(ctpl + (unsigned long)n)->freq == 255U) 
                                                                 #line 1472 
                                                                 break;
      #line 1473 
      pwr_freqs[n] = (ctpl + (unsigned long)n)->freq;
      #line 1470 
      n ++;
    }
    #line 1475 
    ntargets = n;
    #line 1476 
    idx = carl9170_find_freq_idx(ntargets,(u8 *)(& pwr_freqs),(unsigned char)((int)f));
    #line 1477 
    n = 0;
    #line 1477 
    while (n <= 3) {
      #line 1478 
      *(ctpres + (unsigned long)n) = carl9170_interpolate_u8((unsigned char)((int)f),(unsigned char)((int)(ctpl + (unsigned long)idx)->freq),(unsigned char)((int)(ctpl + (unsigned long)idx)->power[n]),(unsigned char)((int)(ctpl + ((unsigned long)idx + (unsigned long)1U))->freq),(unsigned char)((int)(ctpl + ((unsigned long)idx + (unsigned long)1U))->power[n]));
      #line 1477 
      n ++;
    }
    #line 1449 
    i ++;
  }
  #line 1484 
  i = 0;
  #line 1484 
  while (i <= 3) {
    #line 1485 
    switch (i) {
      #line 1486 
      case 0: 
              #line 1486 
      ;
      #line 1487 
      ctph = & ar->eeprom.cal_tgt_pwr_5G_ht20[0];
      #line 1488 
      ntargets = 8;
      #line 1489 
      ctpres = (u8 *)(& ar->power_5G_ht20);
      #line 1490 
      break;
      #line 1491 
      case 1: 
              #line 1491 
      ;
      #line 1492 
      ctph = & ar->eeprom.cal_tgt_pwr_5G_ht40[0];
      #line 1493 
      ntargets = 8;
      #line 1494 
      ctpres = (u8 *)(& ar->power_5G_ht40);
      #line 1495 
      break;
      #line 1496 
      case 2: 
              #line 1496 
      ;
      #line 1497 
      ctph = & ar->eeprom.cal_tgt_pwr_2G_ht20[0];
      #line 1498 
      ntargets = 4;
      #line 1499 
      ctpres = (u8 *)(& ar->power_2G_ht20);
      #line 1500 
      break;
      #line 1501 
      case 3: 
              #line 1501 
      ;
      #line 1502 
      ctph = & ar->eeprom.cal_tgt_pwr_2G_ht40[0];
      #line 1503 
      ntargets = 4;
      #line 1504 
      ctpres = (u8 *)(& ar->power_2G_ht40);
      #line 1505 
      break;
      #line 1506 
      default: 
               #line 1506 
      ;
      #line 1508 
      ldv_inline_asm();
      #line 1509 
      ldv_inline_asm();
      #line 1510 
      ldv_inline_asm();
      #line 1507 
      ;
    }
    #line 1510 
    n = 0;
    #line 1510 
    while (n < ntargets) {
      #line 1511 
      if ((unsigned int)(ctph + (unsigned long)n)->freq == 255U) 
                                                                 #line 1512 
                                                                 break;
      #line 1513 
      pwr_freqs[n] = (ctph + (unsigned long)n)->freq;
      #line 1510 
      n ++;
    }
    #line 1515 
    ntargets = n;
    #line 1516 
    idx = carl9170_find_freq_idx(ntargets,(u8 *)(& pwr_freqs),(unsigned char)((int)f));
    #line 1517 
    n = 0;
    #line 1517 
    while (n <= 7) {
      #line 1518 
      *(ctpres + (unsigned long)n) = carl9170_interpolate_u8((unsigned char)((int)f),(unsigned char)((int)(ctph + (unsigned long)idx)->freq),(unsigned char)((int)(ctph + (unsigned long)idx)->power[n]),(unsigned char)((int)(ctph + ((unsigned long)idx + (unsigned long)1U))->freq),(unsigned char)((int)(ctph + ((unsigned long)idx + (unsigned long)1U))->power[n]));
      #line 1517 
      n ++;
    }
    #line 1484 
    i ++;
  }
  #line 1524 
  carl9170_calc_ctl(ar,freq,bw);
  #line 1525 
  return;
}

#line 1527  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/phy.c"
int carl9170_get_noisefloor(struct ar9170 *ar)
{
  #line 1532 
  u32 phy_res[4U];
  #line 1533 
  int err;
  #line 1533 
  int i;
  #line 1529 
  u32 phy_regs[4U] = {1857636U, 1865828U, 1857980U, 1866172U};
  #line 1537 
  err = carl9170_read_mreg(ar,4,(u32 *)(& phy_regs),(u32 *)(& phy_res));
  #line 1538 
  if (err != 0) 
                #line 1539 
                return err;
  #line 1541 
  i = 0;
  #line 1541 
  while (i <= 1) {
    #line 1542 
    ar->noise[i] = sign_extend32((phy_res[i] >> 19) & 511U,8);
    #line 1545 
    ar->noise[i + 2] = sign_extend32(phy_res[i + 2] >> 23,8);
    #line 1541 
    i ++;
  }
  #line 1549 
  if (ar->channel != (struct ieee80211_channel *)0) 
                                                    #line 1550 
                                                    (ar->survey + (unsigned long)(ar->channel)->hw_value)->noise = (signed char)ar->noise[0];
  #line 1552 
  return 0;
}

#line 1555  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/phy.c"
static enum carl9170_bw nl80211_to_carl(enum nl80211_channel_type type)
{
  #line 1557 
  switch ((unsigned int)type) {
    #line 1558 
    case (unsigned int)0: 
                          #line 1558 
    ;
    #line 1559 
    case (unsigned int)1: 
                          #line 1559 
    ;
    #line 1560 
    return CARL9170_BW_20;
    #line 1561 
    case (unsigned int)2: 
                          #line 1561 
    ;
    #line 1562 
    return CARL9170_BW_40_BELOW;
    #line 1563 
    case (unsigned int)3: 
                          #line 1563 
    ;
    #line 1564 
    return CARL9170_BW_40_ABOVE;
    #line 1565 
    default: 
             #line 1565 
    ;
    #line 1567 
    ldv_inline_asm();
    #line 1568 
    ldv_inline_asm();
    #line 1569 
    ldv_inline_asm();
    #line 1566 
    ;
  }
  #line 1570 
  ;
  #line 1570 
  return (enum carl9170_bw)0;
}

#line 1570  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/phy.c"
int carl9170_set_channel(struct ar9170 *ar, struct ieee80211_channel *channel, enum nl80211_channel_type _bw)
{
  #line 1573 
  struct carl9170_phy_freq_params *freqpar;
  #line 1574 
  struct carl9170_rf_init_result rf_res;
  #line 1575 
  struct carl9170_rf_init rf;
  #line 1576 
  u32 tmp;
  #line 1577 
  int err;
  #line 1578 
  enum carl9170_bw bw;
  #line 1576 
  u32 offs = 0U;
  #line 1576 
  u32 new_ht = 0U;
  #line 1579 
  struct ieee80211_channel *old_channel = (struct ieee80211_channel *)0;
  #line 1581 
  bw = nl80211_to_carl(_bw);
  #line 1583 
  if ((int)conf_is_ht(& (ar->hw)->conf) != 0) 
                                              #line 1584 
                                              new_ht |= 4U;
  #line 1586 
  if ((int)conf_is_ht40(& (ar->hw)->conf) != 0) 
                                                #line 1587 
                                                new_ht |= 8U;
  #line 1590 
  if (ar->channel != (struct ieee80211_channel *)0) {
    #line 1591 
    old_channel = ar->channel;
    #line 1592 
    ar->channel = (struct ieee80211_channel *)0;
  }
  #line 1596 
  err = carl9170_write_reg(ar,1916932U,2048U);
  #line 1598 
  if (err != 0) 
                #line 1599 
                return err;
  #line 1601 
  err = carl9170_write_reg(ar,1916932U,0U);
  #line 1602 
  if (err != 0) 
                #line 1603 
                return err;
  #line 1605 
  err = carl9170_init_phy(ar,channel->band);
  #line 1606 
  if (err != 0) 
                #line 1607 
                return err;
  #line 1609 
  err = carl9170_init_rf_banks_0_7(ar,(_Bool)(channel->band == (unsigned int)NL80211_BAND_5GHZ));
  #line 1611 
  if (err != 0) 
                #line 1612 
                return err;
  #line 1614 
  err = carl9170_exec_cmd(ar,(enum carl9170_cmd_oids)CARL9170_CMD_FREQ_START,0U,(void *)0,0U,(void *)0);
  #line 1615 
  if (err != 0) 
                #line 1616 
                return err;
  #line 1618 
  err = carl9170_write_reg(ar,1858016U,512U);
  #line 1620 
  if (err != 0) 
                #line 1621 
                return err;
  #line 1623 
  err = carl9170_init_rf_bank4_pwr(ar,(_Bool)(channel->band == (unsigned int)NL80211_BAND_5GHZ),channel->center_freq,bw);
  #line 1626 
  if (err != 0) 
                #line 1627 
                return err;
  #line 1629 
  tmp = 576U;
  #line 1632 
  switch ((unsigned int)bw) {
    #line 1633 
    case (unsigned int)0: 
                          #line 1633 
    ;
    #line 1634 
    break;
    #line 1635 
    case (unsigned int)1: 
                          #line 1635 
    ;
    #line 1636 
    tmp |= 132U;
    #line 1638 
    offs = 3U;
    #line 1639 
    break;
    #line 1640 
    case (unsigned int)2: 
                          #line 1640 
    ;
    #line 1641 
    tmp |= 148U;
    #line 1644 
    offs = 1U;
    #line 1645 
    break;
    #line 1646 
    default: 
             #line 1646 
    ;
    #line 1648 
    ldv_inline_asm();
    #line 1649 
    ldv_inline_asm();
    #line 1650 
    ldv_inline_asm();
    #line 1647 
    ;
    #line 1648 
    return -38;
  }
  #line 1651 
  if ((unsigned int)ar->eeprom.tx_mask != 1U) 
                                              #line 1652 
                                              tmp |= 256U;
  #line 1654 
  err = carl9170_write_reg(ar,1857540U,tmp);
  #line 1655 
  if (err != 0) 
                #line 1656 
                return err;
  #line 1658 
  err = carl9170_set_freq_cal_data(ar,channel);
  #line 1659 
  if (err != 0) 
                #line 1660 
                return err;
  #line 1662 
  carl9170_set_power_cal(ar,channel->center_freq,bw);
  #line 1664 
  err = carl9170_set_mac_tpc(ar,channel);
  #line 1665 
  if (err != 0) 
                #line 1666 
                return err;
  #line 1668 
  freqpar = carl9170_get_hw_dyn_params(channel,bw);
  #line 1670 
  rf.ht_settings = (unsigned char)new_ht;
  #line 1671 
  if ((int)conf_is_ht40(& (ar->hw)->conf) != 0) 
                                                #line 1672 
                                                rf.ht_settings = (unsigned char)((unsigned int)rf.ht_settings & 252U);
  #line 1674 
  rf.freq = channel->center_freq * 1000U;
  #line 1675 
  rf.delta_slope_coeff_exp = (unsigned int)freqpar->coeff_exp;
  #line 1676 
  rf.delta_slope_coeff_man = (unsigned int)freqpar->coeff_man;
  #line 1677 
  rf.delta_slope_coeff_exp_shgi = (unsigned int)freqpar->coeff_exp_shgi;
  #line 1678 
  rf.delta_slope_coeff_man_shgi = (unsigned int)freqpar->coeff_man_shgi;
  #line 1679 
  rf.finiteLoopCount = 2000U;
  #line 1680 
  err = carl9170_exec_cmd(ar,(enum carl9170_cmd_oids)CARL9170_CMD_RF_INIT,28U,(void *)(& rf),4U,(void *)(& rf_res));
  #line 1682 
  if (err != 0) 
                #line 1683 
                return err;
  #line 1685 
  err = (int)rf_res.ret;
  #line 1686 
  if (err != 0) {
    #line 1690 
    u32 tmp_3;
    #line 1687 
    (ar->chan_fail) ++;
    #line 1688 
    (ar->total_chan_fail) ++;
    #line 1690 
    ;
    #line 1690 
    ;
    #line 1690 
    if (old_channel != (struct ieee80211_channel *)0) 
                                                      #line 1690 
                                                      tmp_3 = old_channel->center_freq; else 
                                                                    #line 1690 
                                                                    tmp_3 = 4294967295U;
    #line 1690 
    ;
    #line 1690 
    _dev_err(& ((ar->hw)->wiphy)->dev,(char *)"channel change: %d -> %d ",tmp_3,channel->center_freq,err);
    #line 1695 
    if (ar->chan_fail > 3U) {
      #line 1702 
      carl9170_restart(ar,(enum carl9170_restart_reasons)CARL9170_RR_TOO_MANY_PHY_ERRORS);
      #line 1703 
      return 0;
    }
    #line 1706 
    err = carl9170_set_channel(ar,channel,_bw);
    #line 1707 
    if (err != 0) 
                  #line 1708 
                  return err;
  }
  else 
       #line 1710 
       ar->chan_fail = 0U;
  #line 1713 
  if ((unsigned int)ar->heavy_clip != 0U) {
    #line 1714 
    err = carl9170_write_reg(ar,1858016U,(unsigned int)((int)ar->heavy_clip | 512));
    #line 1716 
    if (err != 0) {
      #line 1717 
      if (net_ratelimit() != 0) 
                                #line 1718 
                                _dev_err(& ((ar->hw)->wiphy)->dev,(char *)"failed to set ");
      #line 1722 
      return err;
    }
  }
  #line 1726 
  ar->channel = channel;
  #line 1727 
  ar->ht_settings = (unsigned char)new_ht;
  #line 1728 
  return 0;
}

#line 26  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
#line 134  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/led.i.aux"
static void INIT_LIST_HEAD_0(struct list_head *list);
#line 302  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockdep.h"
#line 302 
void lockdep_init_map(struct lockdep_map *, char *, struct lock_class_key *, int);
#line 26  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/led.i.aux"
#line 809 
static void cif_mutex_lock_mutex_of_ar9170_1(struct mutex *lock);
#line 185  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mutex.h"
#line 816  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/led.i.aux"
static void cif_mutex_unlock_mutex_of_ar9170_1(struct mutex *lock);
#line 90  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
#line 90 
void init_timer_key(struct timer_list *, void (*)(struct timer_list *), unsigned int, char *, struct lock_class_key *);
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/workqueue.h"
#line 22 
void delayed_work_timer_fn(struct timer_list *);
#line 207 
#line 207 
void __init_work(struct work_struct *, int);
#line 466 
#line 466 
bool cancel_delayed_work_sync(struct delayed_work *);
#line 89  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kobject.h"
__inline static char *kobject_name(struct kobject *kobj)
{
  #line 91 
  return kobj->name;
}

#line 1370  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
__inline static char *dev_name(struct device *dev)
{
  #line 1373 
  if (dev->init_name != (char *)0) 
                                   #line 1374 
                                   return dev->init_name;
  #line 1376 
  return kobject_name(& dev->kobj);
}

#line 4749  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
__inline static struct device *wiphy_dev(struct wiphy *wiphy)
{
  #line 4751 
  return wiphy->dev.parent;
}

#line 4760  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
__inline static char *wiphy_name(struct wiphy *wiphy)
{
  #line 4762 
  return dev_name(& wiphy->dev);
}

#line 4162  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
#line 4162 
char *__ieee80211_get_tx_led_name(struct ieee80211_hw *);
#line 4164 
#line 4164 
char *__ieee80211_get_assoc_led_name(struct ieee80211_hw *);
#line 4184  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
__inline static char *ieee80211_get_tx_led_name(struct ieee80211_hw *hw)
{
  #line 4187 
  return __ieee80211_get_tx_led_name(hw);
}

#line 4226  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
__inline static char *ieee80211_get_assoc_led_name(struct ieee80211_hw *hw)
{
  #line 4229 
  return __ieee80211_get_assoc_led_name(hw);
}

#line 164  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/leds.h"
#line 164 
int led_classdev_register_ext(struct device *, struct led_classdev *, struct led_init_data *);
#line 178  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/leds.h"
__inline static int led_classdev_register(struct device *parent, struct led_classdev *led_cdev)
{
  #line 181 
  return led_classdev_register_ext(parent,led_cdev,(struct led_init_data *)0);
}

#line 193 
#line 193 
void led_classdev_unregister(struct led_classdev *);
#line 592  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/carl9170.h"
#line 164  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/led.c"
int carl9170_led_register(struct ar9170 *ar);
#line 593  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/carl9170.h"
#line 150  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/led.c"
void carl9170_led_unregister(struct ar9170 *ar);
#line 595  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/carl9170.h"
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/led.c"
int carl9170_led_init(struct ar9170 *ar);
#line 596  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/carl9170.h"
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/led.c"
int carl9170_led_set_state(struct ar9170 *ar, u32 led_state);
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/led.c"
int carl9170_led_set_state(struct ar9170 *ar, u32 led_state)
{
  #line 45 
  return carl9170_write_reg(ar,1900804U,led_state);
}

#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/led.c"
int carl9170_led_init(struct ar9170 *ar)
{
  #line 50 
  int err;
  #line 54 
  err = carl9170_write_reg(ar,1900800U,3U);
  #line 55 
  if (err != 0) 
                #line 56 
                goto out;
  #line 59 
  err = carl9170_led_set_state(ar,0U);
  #line 61 
  out: 
       #line 61 
  ;
  #line 62 
  return err;
}

#line 66  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/led.c"
static void carl9170_led_update(struct work_struct *work)
{
  #line 68 
  void *__mptr;
  #line 69 
  int i;
  #line 68 
  __mptr = (void *)work;
  #line 68 
  struct ar9170 *ar = ((struct ar9170 *)(__mptr + 18446744073709548048U));
  #line 69 
  int tmp_0 = 300;
  #line 69 
  int blink_delay = 1000;
  #line 70 
  u32 led_val = 0U;
  #line 71 
  bool rerun = (_Bool)0;
  #line 73 
  if (ar->state <= (unsigned int)CARL9170_STOPPED) 
                                                   #line 74 
                                                   return;
  #line 76 
  cif_mutex_lock_mutex_of_ar9170_1(& ar->mutex);
  #line 77 
  i = 0;
  #line 77 
  while (i <= 1) {
    #line 78 
    if ((int)ar->leds[i].registered != 0) 
      #line 79 
      if ((int)ar->leds[i].last_state != 0 || ar->leds[i].toggled != 0U) {
        #line 82 
        if (ar->leds[i].toggled != 0U) 
                                       #line 83 
                                       tmp_0 = (int)(200U / ar->leds[i].toggled + 70U);
        #line 85 
        if (tmp_0 < blink_delay) 
                                 #line 86 
                                 blink_delay = tmp_0;
        #line 88 
        led_val = (unsigned int)(1 << i) | led_val;
        #line 89 
        ar->leds[i].toggled = 0U;
        #line 90 
        rerun = (_Bool)1;
      }
    #line 77 
    i ++;
  }
  #line 95 
  carl9170_led_set_state(ar,led_val);
  #line 96 
  cif_mutex_unlock_mutex_of_ar9170_1(& ar->mutex);
  #line 98 
  if (! rerun) 
               #line 99 
               return;
  #line 101 
  ;
  #line 101 
  ;
  #line 101 
  ieee80211_queue_delayed_work(ar->hw,& ar->led_work,msecs_to_jiffies((unsigned int)blink_delay));
  #line 104 
  return;
}

#line 106  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/led.c"
static void carl9170_led_set_brightness(struct led_classdev *led, enum led_brightness brightness)
{
  #line 109 
  void *__mptr;
  #line 109 
  __mptr = (void *)led;
  #line 109 
  struct carl9170_led *arl = ((struct carl9170_led *)(__mptr + 18446744073709551608U));
  #line 110 
  struct ar9170 *ar = arl->ar;
  #line 112 
  if (! arl->registered) 
                         #line 113 
                         return;
  #line 115 
  if ((int)arl->last_state != (brightness != (unsigned int)LED_OFF)) {
    #line 116 
    (arl->toggled) ++;
    #line 117 
    arl->last_state = (_Bool)(brightness != (unsigned int)LED_OFF);
  }
  #line 120 
  if ((long)(ar->state > (unsigned int)CARL9170_STOPPED) != 0L && (long)(arl->toggled != 0U) != 0L) 
    #line 121 
    ieee80211_queue_delayed_work(ar->hw,& ar->led_work,25UL);
  #line 122 
  return;
}

#line 124  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/led.c"
static int carl9170_led_register_led(struct ar9170 *ar, int i, char *name, char *trigger)
{
  #line 127 
  int err;
  #line 129 
  ;
  #line 129 
  ;
  #line 129 
  snprintf((char *)(& ar->leds[i].name),32UL,(char *)"carl9170-%s::%s",wiphy_name((ar->hw)->wiphy),name);
  #line 132 
  ar->leds[i].ar = ar;
  #line 133 
  ar->leds[i].l.name = (char *)(& ar->leds[i].name);
  #line 134 
  ar->leds[i].l.brightness_set = & carl9170_led_set_brightness;
  #line 135 
  ar->leds[i].l.brightness = LED_OFF;
  #line 136 
  ar->leds[i].l.default_trigger = trigger;
  #line 138 
  ;
  #line 138 
  err = led_classdev_register(wiphy_dev((ar->hw)->wiphy),& ar->leds[i].l);
  #line 140 
  if (err != 0) 
                #line 141 
                _dev_err(& ((ar->hw)->wiphy)->dev,(char *)"failed to register %s LED (%d).\n",(char *)(& ar->leds[i].name),err); else 
                                                                    #line 144 
                                                                    ar->leds[i].registered = (_Bool)1;
  #line 147 
  return err;
}

#line 150  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/led.c"
void carl9170_led_unregister(struct ar9170 *ar)
{
  #line 152 
  int i;
  #line 154 
  i = 0;
  #line 154 
  while (i <= 1) {
    #line 155 
    if ((int)ar->leds[i].registered != 0) {
      #line 156 
      led_classdev_unregister(& ar->leds[i].l);
      #line 157 
      ar->leds[i].registered = (_Bool)0;
      #line 158 
      ar->leds[i].toggled = 0U;
    }
    #line 154 
    i ++;
  }
  #line 161 
  cancel_delayed_work_sync(& ar->led_work);
  #line 162 
  return;
}

#line 164  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/led.c"
int carl9170_led_register(struct ar9170 *ar)
{
  #line 166 
  int err;
  {
    #line 168 
    struct lock_class_key __key;
    #line 168 
    __init_work(& ar->led_work.work,0);
    #line 168 
    atomic_long_t __constr_expr_41 = {.counter = 137438953408LL};
    #line 168 
    ar->led_work.work.data = __constr_expr_41;
    #line 168 
    lockdep_init_map(& ar->led_work.work.lockdep_map,(char *)"(work_completion)",& __key,0);
    #line 168 
    INIT_LIST_HEAD_0(& ar->led_work.work.entry);
    #line 168 
    ar->led_work.work.func = & carl9170_led_update;
  }
  {
    #line 168 
    struct lock_class_key __key_0;
    #line 168 
    init_timer_key(& ar->led_work.timer,& delayed_work_timer_fn,2097152U,(char *)"&(&ar->led_work)->timer",& __key_0);
  }
  #line 170 
  ;
  #line 170 
  err = carl9170_led_register_led(ar,0,(char *)"tx",ieee80211_get_tx_led_name(ar->hw));
  #line 172 
  if (err != 0) 
                #line 173 
                goto fail;
  #line 175 
  if ((ar->features & 2UL) != 0UL) 
                                   #line 176 
                                   return 0;
  #line 178 
  ;
  #line 178 
  err = carl9170_led_register_led(ar,1,(char *)"assoc",ieee80211_get_assoc_led_name(ar->hw));
  #line 180 
  if (err != 0) 
                #line 181 
                goto fail;
  #line 183 
  return 0;
  #line 185 
  fail: 
        #line 185 
  ;
  #line 186 
  carl9170_led_unregister(ar);
  #line 187 
  return err;
}

#line 134  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/led.i.aux"
static void INIT_LIST_HEAD_0(struct list_head *list)
{
  #line 137 
  ldv_init_list_head(list);
  #line 138 
  return;
}

#line 809  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/led.i.aux"
static void cif_mutex_lock_mutex_of_ar9170_1(struct mutex *lock)
{
  #line 812 
  ldv_mutex_model_lock(lock,(char *)"mutex_of_ar9170");
  #line 813 
  return;
}

#line 816  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/led.i.aux"
static void cif_mutex_unlock_mutex_of_ar9170_1(struct mutex *lock)
{
  #line 819 
  ldv_mutex_model_unlock(lock,(char *)"mutex_of_ar9170");
  #line 820 
  return;
}

#line 66  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/bitops.h"
__inline static void arch___set_bit(long nr, unsigned long *addr)
{
  #line 68 
  ldv_inline_asm();
  #line 69 
  return;
}

#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/bitops/find.h"
#line 213  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
static unsigned long cif_find_next_bit(unsigned long *addr, unsigned long size, unsigned long offset);
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/bitops/find.h"
#line 255  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
static unsigned long cif_find_first_bit_0(unsigned long *addr, unsigned long size);
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/arch_hweight.h"
__inline static unsigned int __arch_hweight32(unsigned int w)
{
  #line 17 
  unsigned int res;
  #line 18 
  ldv_inline_asm();
  #line 23 
  return res;
}

#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/arch_hweight.h"
__inline static unsigned int __arch_hweight8(unsigned int w)
{
  #line 33 
  return __arch_hweight32(w & 255U);
}

#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/bitops/instrumented-non-atomic.h"
__inline static void __set_bit(long nr, unsigned long *addr)
{
  #line 27 
  kasan_check_read((void *)(addr + (unsigned long)(nr / 64L)),8U);
  #line 28 
  arch___set_bit(nr,addr);
  #line 29 
  return;
}

#line 64  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dynamic_debug.h"
#line 64 
void __dynamic_dev_dbg(struct _ddebug *, struct device *, char * , ...);
#line 26  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
#line 234  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
static void INIT_LIST_HEAD_1(struct list_head *list);
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
__inline static void __list_add(struct list_head *new, struct list_head *prev, struct list_head *next)
{
  #line 60 
  if (! __list_add_valid(new,prev,next)) 
                                         #line 61 
                                         return;
  #line 63 
  next->prev = new;
  #line 64 
  new->next = next;
  #line 65 
  new->prev = prev;
  {
    #line 67 
    union __anonunion___u_6366 __u = {.__val = new};
    #line 66 
    __write_once_size((void *)(& prev->next),(void *)(& __u.__c),8);
    #line 66 
    struct list_head *tmp_2 = __u.__val;
  }
  #line 68 
  return;
}

#line 91  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
__inline static void list_add_tail(struct list_head *new, struct list_head *head)
{
  #line 93 
  __list_add(new,head->prev,head);
  #line 94 
  return;
}

#line 95  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
__inline static void __list_del_0(struct list_head *prev, struct list_head *next)
{
  #line 97 
  next->prev = prev;
  {
    #line 107 
    union __anonunion___u_6368 __u = {.__val = next};
    #line 106 
    __write_once_size((void *)(& prev->next),(void *)(& __u.__c),8);
    #line 106 
    struct list_head *tmp = __u.__val;
  }
  #line 108 
  return;
}

#line 129  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
__inline static void __list_del_entry_0(struct list_head *entry)
{
  #line 131 
  if (! __list_del_entry_valid(entry)) 
                                       #line 132 
                                       return;
  #line 134 
  __list_del_0(entry->prev,entry->next);
  #line 135 
  return;
}

#line 188  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
__inline static void list_del_init(struct list_head *entry)
{
  #line 190 
  __list_del_entry_0(entry);
  #line 191 
  INIT_LIST_HEAD_1(entry);
  #line 192 
  return;
}

#line 266  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
__inline static int list_empty(struct list_head *head)
{
  #line 269 
  union __anonunion___u_6370 __u;
  #line 268 
  __read_once_size((void *)(& head->next),(void *)(& __u.__c),8);
  #line 268 
  ;
  #line 268 
  return (__u.__val) == head;
}

#line 230  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bitmap.h"
#line 297  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
static void cif_bitmap_zero(unsigned long *dst, unsigned int nbits);
#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/cmpxchg_64.h"
__inline static int arch_atomic_read_2(atomic_t *v)
{
  #line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/atomic.h"
  union __anonunion___u_6420 __u;
  #line 31 
  __read_once_size((void *)(& v->counter),(void *)(& __u.__c),4);
  #line 31 
  return (__u.__val);
}

#line 41  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/atomic.h"
__inline static void arch_atomic_set_1(atomic_t *v, int i)
{
  #line 44 
  union __anonunion___u_6422 __u = {.__val = i};
  #line 43 
  __write_once_size((void *)(& v->counter),(void *)(& __u.__c),4);
  #line 43 
  int tmp = __u.__val;
  #line 45 
  return;
}

#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/atomic-instrumented.h"
__inline static int atomic_read_2(atomic_t *v)
{
  #line 26 
  kasan_check_read((void *)v,4U);
  #line 27 
  return arch_atomic_read_2(v);
}

#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/atomic-instrumented.h"
__inline static void atomic_set_1(atomic_t *v, int i)
{
  #line 44 
  kasan_check_read((void *)v,4U);
  #line 45 
  arch_atomic_set_1(v,i);
  #line 46 
  return;
}

#line 69 
#line 269  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
static int atomic_add_return_0(int i, atomic_t *v);
#line 327  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/atomic-instrumented.h"
#line 290  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
static void atomic_dec_1(atomic_t *v);
#line 282  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/atomic-fallback.h"
__inline static int atomic_inc_return_0(atomic_t *v)
{
  #line 284 
  return atomic_add_return_0(1,v);
}

#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/err.h"
#line 304  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
static void *ERR_PTR(long error);
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_api_smp.h"
#line 22 
void _raw_spin_lock(raw_spinlock_t *);
#line 39 
#line 39 
void _raw_spin_unlock(raw_spinlock_t *);
#line 336  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
static void spin_lock(spinlock_t *lock)
{
  #line 338 
  _raw_spin_lock(& lock->__anonCompField_spinlock_25.rlock);
  #line 339 
  return;
}

#line 340 
#line 927  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
static void cif_spin_lock_lock_of_carl9170_sta_tid(spinlock_t *lock);
#line 341  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
static void spin_lock_bh_2(spinlock_t *lock)
{
  #line 343 
  _raw_spin_lock_bh(& lock->__anonCompField_spinlock_25.rlock);
  #line 344 
  return;
}

#line 345 
#line 909  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
static void cif_spin_lock_bh_tx_ampdu_list_lock_of_ar9170(spinlock_t *lock);
#line 345  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
#line 945  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
static void cif_spin_lock_bh_lock_of_sk_buff_head_1(spinlock_t *lock);
#line 345  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
#line 963  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
static void cif_spin_lock_bh_beacon_lock_of_ar9170_0(spinlock_t *lock);
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
static void spin_unlock(spinlock_t *lock)
{
  #line 378 
  _raw_spin_unlock(& lock->__anonCompField_spinlock_25.rlock);
  #line 379 
  return;
}

#line 380 
#line 936  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
static void cif_spin_unlock_lock_of_carl9170_sta_tid(spinlock_t *lock);
#line 381  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
static void spin_unlock_bh_2(spinlock_t *lock)
{
  #line 383 
  _raw_spin_unlock_bh(& lock->__anonCompField_spinlock_25.rlock);
  #line 384 
  return;
}

#line 385 
#line 918  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
static void cif_spin_unlock_bh_tx_ampdu_list_lock_of_ar9170(spinlock_t *lock);
#line 385  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
#line 954  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
static void cif_spin_unlock_bh_lock_of_sk_buff_head_1(spinlock_t *lock);
#line 385  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
#line 972  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
static void cif_spin_unlock_bh_beacon_lock_of_ar9170_0(spinlock_t *lock);
#line 391  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
static void spin_unlock_irqrestore_0(spinlock_t *lock, unsigned long flags)
{
  {
    #line 393 
    unsigned long __dummy;
    #line 393 
    unsigned long __dummy2;
    }
  #line 393 
  _raw_spin_unlock_irqrestore(& lock->__anonCompField_spinlock_25.rlock,flags);
  #line 395 
  return;
}

#line 395 
#line 900  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
static void cif_spin_unlock_irqrestore_state_lock_of_ar9170_0(spinlock_t *lock, unsigned long flags);
#line 26 
#line 981 
static void cif_mutex_lock_mutex_of_ar9170_2(struct mutex *lock);
#line 35 
#line 891 
static void cif___ldv_spin_lock_state_lock_of_ar9170_0(spinlock_t *lock);
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/err.h"
#line 25 
void *ldv_err_ptr(long error);
#line 27  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/bitmap.h"
#line 27 
void ldv_bitmap_zero(unsigned long *dst, unsigned int nbits);
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/find_bit.h"
#line 22 
unsigned long ldv_find_next_bit(unsigned long *addr, unsigned long size, unsigned long offset);
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 25 
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags);
#line 40  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rcupdate.h"
#line 40 
void synchronize_rcu(void);
#line 86  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mutex.h"
#line 86 
void mutex_destroy(struct mutex *);
#line 128 
#line 128 
void __mutex_init(struct mutex *, char *, struct lock_class_key *);
#line 185 
#line 988  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
static void cif_mutex_unlock_mutex_of_ar9170_2(struct mutex *lock);
#line 210  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
#line 210 
unsigned long round_jiffies(unsigned long);
#line 462  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/workqueue.h"
#line 462 
bool cancel_work_sync(struct work_struct *);
#line 67  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rculist.h"
__inline static void __list_add_rcu_0(struct list_head *new, struct list_head *prev, struct list_head *next)
{
  #line 70 
  if (! __list_add_valid(new,prev,next)) 
                                         #line 71 
                                         return;
  #line 73 
  new->next = next;
  #line 74 
  new->prev = prev;
  {
    #line 75 
    uintptr_t _r_a_p__v = (unsigned long)new;
    #line 77 
    ldv_inline_asm();
    {
      #line 76 
      union __anonunion___u_6596 __u = {.__val = (struct list_head *)_r_a_p__v};
      #line 75 
      __write_once_size((void *)(& prev->next),(void *)(& __u.__c),8);
      #line 75 
      struct list_head *tmp_4 = __u.__val;
    }
  }
  #line 76 
  next->prev = new;
  #line 77 
  return;
}

#line 95  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rculist.h"
__inline static void list_add_rcu(struct list_head *new, struct list_head *head)
{
  #line 97 
  __list_add_rcu_0(new,head,head->next);
  #line 98 
  return;
}

#line 116  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rculist.h"
__inline static void list_add_tail_rcu_0(struct list_head *new, struct list_head *head)
{
  #line 119 
  __list_add_rcu_0(new,head->prev,head);
  #line 120 
  return;
}

#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rculist.h"
__inline static void list_del_rcu_0(struct list_head *entry)
{
  #line 148 
  __list_del_entry_0(entry);
  #line 149 
  entry->prev = (struct list_head *)(-2401263026318606046);
  #line 150 
  return;
}

#line 607  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/slab.h"
#line 436  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
static void *kcalloc(size_t n, size_t size, gfp_t flags);
#line 668  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/slab.h"
#line 457  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
static void *kzalloc_0(size_t size, gfp_t flags);
#line 1019  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
#line 1019 
void kfree_skb(struct sk_buff *);
#line 1841  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static void skb_queue_head_init(struct sk_buff_head *list)
{
  #line 1843 
  spinlock_check(& list->lock);
  {
    #line 1843 
    struct lock_class_key __key;
    #line 1843 
    __raw_spin_lock_init(& list->lock.__anonCompField_spinlock_25.rlock,(char *)"&(&list->lock)->rlock",& __key);
  }
  #line 1844 
  __skb_queue_head_init(list);
  #line 1845 
  return;
}

#line 1860  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static void __skb_insert_0(struct sk_buff *newsk, struct sk_buff *prev, struct sk_buff *next, struct sk_buff_head *list)
{
  {
    #line 1868 
    union __anonunion___u_6869 __u = {.__val = next};
    #line 1867 
    __write_once_size((void *)(& newsk->__anonCompField_sk_buff_90.__anonCompField___anonunion_502_89.next),(void *)(& __u.__c),8);
    #line 1867 
    struct sk_buff *tmp = __u.__val;
  }
  {
    #line 1869 
    union __anonunion___u_6871 __u_0 = {.__val = prev};
    #line 1868 
    __write_once_size((void *)(& newsk->__anonCompField_sk_buff_90.__anonCompField___anonunion_502_89.prev),(void *)(& __u_0.__c),8);
    #line 1868 
    struct sk_buff *tmp_3 = __u_0.__val;
  }
  {
    #line 1870 
    union __anonunion___u_6873 __u_1 = {.__val = newsk};
    #line 1869 
    __write_once_size((void *)(& next->__anonCompField_sk_buff_90.__anonCompField___anonunion_502_89.prev),(void *)(& __u_1.__c),8);
    #line 1869 
    struct sk_buff *tmp_5 = __u_1.__val;
  }
  {
    #line 1871 
    union __anonunion___u_6875 __u_2 = {.__val = newsk};
    #line 1870 
    __write_once_size((void *)(& prev->__anonCompField_sk_buff_90.__anonCompField___anonunion_502_89.next),(void *)(& __u_2.__c),8);
    #line 1870 
    struct sk_buff *tmp_7 = __u_2.__val;
  }
  #line 1871 
  (list->qlen) ++;
  #line 1872 
  return;
}

#line 1972  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static void __skb_queue_before_0(struct sk_buff_head *list, struct sk_buff *next, struct sk_buff *newsk)
{
  #line 1976 
  __skb_insert_0(newsk,next->__anonCompField_sk_buff_90.__anonCompField___anonunion_502_89.prev,next,list);
  #line 1977 
  return;
}

#line 2006  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static void __skb_queue_tail_0(struct sk_buff_head *list, struct sk_buff *newsk)
{
  #line 2009 
  __skb_queue_before_0(list,(struct sk_buff *)list,newsk);
  #line 2010 
  return;
}

#line 2018  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static void __skb_unlink_0(struct sk_buff *skb, struct sk_buff_head *list)
{
  #line 2020 
  struct sk_buff *next;
  #line 2020 
  struct sk_buff *prev;
  #line 2022 
  (list->qlen) --;
  #line 2023 
  next = skb->__anonCompField_sk_buff_90.__anonCompField___anonunion_502_89.next;
  #line 2024 
  prev = skb->__anonCompField_sk_buff_90.__anonCompField___anonunion_502_89.prev;
  #line 2025 
  skb->__anonCompField_sk_buff_90.__anonCompField___anonunion_502_89.prev = ((struct sk_buff *)0);
  #line 2025 
  skb->__anonCompField_sk_buff_90.__anonCompField___anonunion_502_89.next = ((struct sk_buff *)0);
  {
    #line 2027 
    union __anonunion___u_6885 __u = {.__val = prev};
    #line 2026 
    __write_once_size((void *)(& next->__anonCompField_sk_buff_90.__anonCompField___anonunion_502_89.prev),(void *)(& __u.__c),8);
    #line 2026 
    struct sk_buff *tmp_2 = __u.__val;
  }
  {
    #line 2028 
    union __anonunion___u_6887 __u_0 = {.__val = next};
    #line 2027 
    __write_once_size((void *)(& prev->__anonCompField_sk_buff_90.__anonCompField___anonunion_502_89.next),(void *)(& __u_0.__c),8);
    #line 2027 
    struct sk_buff *tmp_4 = __u_0.__val;
  }
  #line 2029 
  return;
}

#line 2038  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static struct sk_buff *__skb_dequeue(struct sk_buff_head *list)
{
  #line 2040 
  struct sk_buff *skb = skb_peek(list);
  #line 2041 
  if (skb != (struct sk_buff *)0) 
                                  #line 2042 
                                  __skb_unlink_0(skb,list);
  #line 2043 
  return skb;
}

#line 2045 
#line 2045 
struct sk_buff *skb_dequeue(struct sk_buff_head *);
#line 2762 
#line 2762 
struct sk_buff *__netdev_alloc_skb(struct net_device *, unsigned int, gfp_t);
#line 2785  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static struct sk_buff *__dev_alloc_skb(unsigned int length, gfp_t gfp_mask)
{
  #line 2788 
  return __netdev_alloc_skb((struct net_device *)0,length,gfp_mask);
}

#line 5490  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
#line 5490 
int regulatory_hint(struct wiphy *, char *);
#line 7322  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
__inline static void wiphy_ext_feature_set(struct wiphy *wiphy, enum nl80211_ext_feature_index ftidx)
{
  #line 7325 
  u8 *ft_byte;
  #line 7327 
  ft_byte = & wiphy->ext_features[(unsigned int)ftidx / 8U];
  #line 7328 
  *ft_byte = (unsigned char)((int)*ft_byte | (int)((unsigned char)(1UL << ((unsigned int)ftidx & 7U))));
  #line 7329 
  return;
}

#line 2533  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
__inline static void _ieee80211_hw_set(struct ieee80211_hw *hw, enum ieee80211_hw_flags flg)
{
  #line 2536 
  __set_bit((long)flg,(unsigned long *)(& hw->flags));
  #line 2537 
  return;
}

#line 2591 
#line 2591 
struct ieee80211_hw *wiphy_to_ieee80211_hw(struct wiphy *);
#line 2610  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
__inline static void SET_IEEE80211_PERM_ADDR(struct ieee80211_hw *hw, u8 *addr)
{
  #line 2612 
  memcpy((void *)(& (hw->wiphy)->perm_addr),(void *)addr,6UL);
  #line 2613 
  return;
}

#line 4123 
#line 995  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
static struct ieee80211_hw *cif_ieee80211_alloc_hw(size_t priv_data_len, struct ieee80211_ops *ops);
#line 4135  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
#line 4135 
int ieee80211_register_hw(struct ieee80211_hw *);
#line 4289 
#line 4289 
void ieee80211_unregister_hw(struct ieee80211_hw *);
#line 4301 
#line 1003  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
static void cif_ieee80211_free_hw(struct ieee80211_hw *hw);
#line 4314  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
#line 4314 
void ieee80211_restart_hw(struct ieee80211_hw *);
#line 5199 
#line 5199 
void ieee80211_stop_queues(struct ieee80211_hw *);
#line 5207 
#line 5207 
void ieee80211_wake_queues(struct ieee80211_hw *);
#line 5438 
#line 5438 
void ieee80211_stop_tx_ba_cb_irqsafe(struct ieee80211_vif *, u8 *, u16);
#line 58  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/hw_random.h"
#line 58 
int hwrng_register(struct hwrng *);
#line 61 
#line 61 
void hwrng_unregister(struct hwrng *);
#line 351  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/input.h"
#line 351 
struct input_dev *input_allocate_device(void);
#line 353 
#line 353 
void input_free_device(struct input_dev *);
#line 376 
#line 376 
int input_register_device(struct input_dev *);
#line 377 
#line 377 
void input_unregister_device(struct input_dev *);
#line 450 
#line 450 
void input_set_capability(struct input_dev *, unsigned int, unsigned int);
#line 260  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/regd.h"
#line 260 
bool ath_is_world_regd(struct ath_regulatory *);
#line 263 
#line 263 
int ath_regd_init(struct ath_regulatory *, struct wiphy *, void (*)(struct wiphy *, struct regulatory_request *));
#line 268 
#line 268 
void ath_reg_notifier_apply(struct wiphy *, struct regulatory_request *, struct ath_regulatory *);
#line 71  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/carl9170.h"
static u8 ar9170_qmap_0[4U] = {(unsigned char)3U, (unsigned char)2U, (unsigned char)1U};
#line 520  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/carl9170.h"
__inline static void carl9170_set_state_when_0(struct ar9170 *ar, enum carl9170_device_state min, enum carl9170_device_state newstate)
{
  #line 523 
  unsigned long flags;
  #line 525 
  cif___ldv_spin_lock_state_lock_of_ar9170_0(& ar->state_lock);
  #line 526 
  if (ar->state >= min) 
                        #line 527 
                        __carl9170_set_state(ar,newstate);
  #line 528 
  cif_spin_unlock_irqrestore_state_lock_of_ar9170_0(& ar->state_lock,flags);
  #line 529 
  return;
}

#line 537 
#line 826  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/main.c"
void carl9170_ps_check(struct ar9170 *ar);
#line 552  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/carl9170.h"
#line 552 
int carl9170_init_mac(struct ar9170 *ar);
#line 553 
#line 553 
int carl9170_set_qos(struct ar9170 *ar);
#line 554 
#line 554 
int carl9170_update_multicast(struct ar9170 *ar, u64 mc_hash);
#line 555 
#line 555 
int carl9170_mod_virtual_mac(struct ar9170 *ar, unsigned int id, u8 *mac);
#line 557 
#line 557 
int carl9170_set_operating_mode(struct ar9170 *ar);
#line 558 
#line 558 
int carl9170_set_beacon_timers(struct ar9170 *ar);
#line 559 
#line 559 
int carl9170_set_dyn_sifs_ack(struct ar9170 *ar);
#line 560 
#line 560 
int carl9170_set_rts_cts_rate(struct ar9170 *ar);
#line 562 
#line 562 
int carl9170_set_slot_time(struct ar9170 *ar);
#line 563 
#line 563 
int carl9170_set_mac_rates(struct ar9170 *ar);
#line 565 
#line 565 
int carl9170_upload_key(struct ar9170 *ar, u8 id, u8 *mac, u8 ktype, u8 keyidx, u8 *keydata, int keylen);
#line 567 
#line 567 
int carl9170_disable_key(struct ar9170 *ar, u8 id);
#line 54  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/main.c"
int modparam_noht;
#line 648  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/carl9170.h"
__inline static struct ieee80211_vif *carl9170_get_main_vif_0(struct ar9170 *ar)
{
  #line 652 
  void *__mptr;
  #line 650 
  struct carl9170_vif_info *cvif;
  {
    #line 652 
    bool __warned;
    #line 652 
    if (debug_lockdep_rcu_enabled() != 0) 
      #line 652 
      if (! __warned) {
        #line 652 
        if (rcu_read_lock_any_held() == 0) {
          #line 652 
          __warned = (_Bool)1;
          #line 652 
          lockdep_rcu_suspicious((char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/carl9170.h",652,(char *)"RCU-list traversed in non-reader section!");
        }
      }
  }
  {
    #line 653 
    union __anonunion___u_7396 __u;
    #line 652 
    __read_once_size((void *)(& ar->vif_list.next),(void *)(& __u.__c),8);
    #line 652 
    __mptr = (void *)(__u.__val);
    }
  #line 655 
  cvif = ((struct carl9170_vif_info *)__mptr);
  #line 652 
  while (& cvif->list != & ar->vif_list) {
    #line 652 
    void *__mptr_0;
    #line 653 
    if ((int)cvif->active != 0) {
      #line 654 
      return carl9170_get_vif(cvif);
    }
    {
      #line 653 
      union __anonunion___u_7398 __u_0;
      #line 652 
      __read_once_size((void *)(& cvif->list.next),(void *)(& __u_0.__c),8);
      #line 652 
      __mptr_0 = (void *)(__u_0.__val);
      }
    #line 652 
    cvif = ((struct carl9170_vif_info *)__mptr_0);
  }
  #line 657 
  return (struct ieee80211_vif *)0;
}

#line 660  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/carl9170.h"
__inline static bool is_main_vif(struct ar9170 *ar, struct ieee80211_vif *vif)
{
  #line 662 
  bool ret;
  #line 664 
  rcu_read_lock();
  #line 665 
  ret = (_Bool)(carl9170_get_main_vif_0(ar) == vif);
  #line 666 
  rcu_read_unlock();
  #line 667 
  return ret;
}

#line 57  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/cmd.h"
__inline static int carl9170_flush_cab(struct ar9170 *ar, unsigned int vif_id)
{
  #line 60 
  return carl9170_bcn_ctrl(ar,vif_id,0U,0U,0U);
}

#line 63  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/cmd.h"
__inline static int carl9170_rx_filter(struct ar9170 *ar, unsigned int _rx_filter)
{
  #line 66 
  __le32 rx_filter = _rx_filter;
  #line 68 
  return carl9170_exec_cmd(ar,(enum carl9170_cmd_oids)CARL9170_CMD_RX_FILTER,4U,
                        (void *)(& rx_filter),0U,(void *)0);
}

#line 50  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/main.c"
static bool modparam_nohwcrypt;
#line 64  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/main.c"
struct ieee80211_rate __carl9170_ratetable[12U] = {{.bitrate = (unsigned short)10U}, {.flags = 1U, .bitrate = (unsigned short)20U, .hw_value = (unsigned short)17U}, {.flags = 1U, .bitrate = (unsigned short)55U, .hw_value = (unsigned short)34U}, {.flags = 1U, .bitrate = (unsigned short)110U, .hw_value = (unsigned short)51U}, {.bitrate = (unsigned short)60U, .hw_value = (unsigned short)11U}, {.bitrate = (unsigned short)90U, .hw_value = (unsigned short)15U}, {.bitrate = (unsigned short)120U, .hw_value = (unsigned short)10U}, {.bitrate = (unsigned short)180U, .hw_value = (unsigned short)14U}, {.bitrate = (unsigned short)240U, .hw_value = (unsigned short)9U}, {.bitrate = (unsigned short)360U, .hw_value = (unsigned short)29U}, {.bitrate = (unsigned short)480U, .hw_value = (unsigned short)40U}, {.bitrate = (unsigned short)540U, .hw_value = (unsigned short)60U}};
#line 95  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/main.c"
static struct ieee80211_channel carl9170_2ghz_chantable[14U] = {{.center_freq = 2412U, .max_power = 18}, {.center_freq = 2417U, .hw_value = (unsigned short)1U, .max_power = 18}, {.center_freq = 2422U, .hw_value = (unsigned short)2U, .max_power = 18}, {.center_freq = 2427U, .hw_value = (unsigned short)3U, .max_power = 18}, {.center_freq = 2432U, .hw_value = (unsigned short)4U, .max_power = 18}, {.center_freq = 2437U, .hw_value = (unsigned short)5U, .max_power = 18}, {.center_freq = 2442U, .hw_value = (unsigned short)6U, .max_power = 18}, {.center_freq = 2447U, .hw_value = (unsigned short)7U, .max_power = 18}, {.center_freq = 2452U, .hw_value = (unsigned short)8U, .max_power = 18}, {.center_freq = 2457U, .hw_value = (unsigned short)9U, .max_power = 18}, {.center_freq = 2462U, .hw_value = (unsigned short)10U, .max_power = 18}, {.center_freq = 2467U, .hw_value = (unsigned short)11U, .max_power = 18}, {.center_freq = 2472U, .hw_value = (unsigned short)12U, .max_power = 18}, {.center_freq = 2484U, .hw_value = (unsigned short)13U, .max_power = 18}};
#line 112  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/main.c"
static struct ieee80211_channel carl9170_5ghz_chantable[35U] = {{.center_freq = 4920U, .hw_value = (unsigned short)14U, .max_power = 18}, {.center_freq = 4940U, .hw_value = (unsigned short)15U, .max_power = 18}, {.center_freq = 4960U, .hw_value = (unsigned short)16U, .max_power = 18}, {.center_freq = 4980U, .hw_value = (unsigned short)17U, .max_power = 18}, {.center_freq = 5040U, .hw_value = (unsigned short)18U, .max_power = 18}, {.center_freq = 5060U, .hw_value = (unsigned short)19U, .max_power = 18}, {.center_freq = 5080U, .hw_value = (unsigned short)20U, .max_power = 18}, {.center_freq = 5180U, .hw_value = (unsigned short)21U, .max_power = 18}, {.center_freq = 5200U, .hw_value = (unsigned short)22U, .max_power = 18}, {.center_freq = 5220U, .hw_value = (unsigned short)23U, .max_power = 18}, {.center_freq = 5240U, .hw_value = (unsigned short)24U, .max_power = 18}, {.center_freq = 5260U, .hw_value = (unsigned short)25U, .max_power = 18}, {.center_freq = 5280U, .hw_value = (unsigned short)26U, .max_power = 18}, {.center_freq = 5300U, .hw_value = (unsigned short)27U, .max_power = 18}, {.center_freq = 5320U, .hw_value = (unsigned short)28U, .max_power = 18}, {.center_freq = 5500U, .hw_value = (unsigned short)29U, .max_power = 18}, {.center_freq = 5520U, .hw_value = (unsigned short)30U, .max_power = 18}, {.center_freq = 5540U, .hw_value = (unsigned short)31U, .max_power = 18}, {.center_freq = 5560U, .hw_value = (unsigned short)32U, .max_power = 18}, {.center_freq = 5580U, .hw_value = (unsigned short)33U, .max_power = 18}, {.center_freq = 5600U, .hw_value = (unsigned short)34U, .max_power = 18}, {.center_freq = 5620U, .hw_value = (unsigned short)35U, .max_power = 18}, {.center_freq = 5640U, .hw_value = (unsigned short)36U, .max_power = 18}, {.center_freq = 5660U, .hw_value = (unsigned short)37U, .max_power = 18}, {.center_freq = 5680U, .hw_value = (unsigned short)38U, .max_power = 18}, {.center_freq = 5700U, .hw_value = (unsigned short)39U, .max_power = 18}, {.center_freq = 5745U, .hw_value = (unsigned short)40U, .max_power = 18}, {.center_freq = 5765U, .hw_value = (unsigned short)41U, .max_power = 18}, {.center_freq = 5785U, .hw_value = (unsigned short)42U, .max_power = 18}, {.center_freq = 5805U, .hw_value = (unsigned short)43U, .max_power = 18}, {.center_freq = 5825U, .hw_value = (unsigned short)44U, .max_power = 18}, {.center_freq = 5170U, .hw_value = (unsigned short)45U, .max_power = 18}, {.center_freq = 5190U, .hw_value = (unsigned short)46U, .max_power = 18}, {.center_freq = 5210U, .hw_value = (unsigned short)47U, .max_power = 18}, {.center_freq = 5230U, .hw_value = (unsigned short)48U, .max_power = 18}};
#line 168  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/main.c"
static struct ieee80211_supported_band carl9170_band_2GHz = {.channels = (struct ieee80211_channel *)(& carl9170_2ghz_chantable), .bitrates = (struct ieee80211_rate *)(& __carl9170_ratetable), .n_channels = 14, .n_bitrates = 12, .ht_cap = {.cap = (unsigned short)6222U, .ht_supported = (_Bool)1, .ampdu_factor = (unsigned char)3U, .ampdu_density = (unsigned char)6U, .mcs = {.rx_mask = {(unsigned char)255U, (unsigned char)255U, [4] = (unsigned char)1U}, .rx_highest = (unsigned short)300U, .tx_params = (unsigned char)1U}}};
#line 176  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/main.c"
static struct ieee80211_supported_band carl9170_band_5GHz = {.channels = (struct ieee80211_channel *)(& carl9170_5ghz_chantable), .bitrates = (struct ieee80211_rate *)(& __carl9170_ratetable) + 4U, .n_channels = 35, .n_bitrates = 8, .ht_cap = {.cap = (unsigned short)6222U, .ht_supported = (_Bool)1, .ampdu_factor = (unsigned char)3U, .ampdu_density = (unsigned char)6U, .mcs = {.rx_mask = {(unsigned char)255U, (unsigned char)255U, [4] = (unsigned char)1U}, .rx_highest = (unsigned short)300U, .tx_params = (unsigned char)1U}}};
#line 184  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/main.c"
static void carl9170_ampdu_gc(struct ar9170 *ar)
{
  #line 190 
  void *__mptr;
  #line 186 
  struct carl9170_sta_tid *tid_info;
  #line 187 
  struct list_head tid_gc = {.next = & tid_gc, .prev = & tid_gc};
  #line 189 
  rcu_read_lock();
  {
    #line 190 
    bool __warned;
    #line 190 
    if (debug_lockdep_rcu_enabled() != 0) 
      #line 190 
      if (! __warned) {
        #line 190 
        if (rcu_read_lock_any_held() == 0) {
          #line 190 
          __warned = (_Bool)1;
          #line 190 
          lockdep_rcu_suspicious((char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/main.c",190,(char *)"RCU-list traversed in non-reader section!");
        }
      }
  }
  {
    #line 191 
    union __anonunion___u_7400 __u;
    #line 190 
    __read_once_size((void *)(& ar->tx_ampdu_list.next),(void *)(& __u.__c),8);
    #line 190 
    __mptr = (void *)(__u.__val);
    }
  #line 193 
  tid_info = ((struct carl9170_sta_tid *)__mptr);
  #line 190 
  while (& tid_info->list != & ar->tx_ampdu_list) {
    #line 190 
    void *__mptr_0;
    #line 191 
    cif_spin_lock_bh_tx_ampdu_list_lock_of_ar9170(& ar->tx_ampdu_list_lock);
    #line 192 
    if (tid_info->state == (unsigned int)CARL9170_TID_STATE_SHUTDOWN) {
      #line 193 
      tid_info->state = CARL9170_TID_STATE_KILLED;
      #line 194 
      list_del_rcu_0(& tid_info->list);
      #line 195 
      (ar->tx_ampdu_list_len) --;
      #line 196 
      list_add_tail(& tid_info->tmp_list,& tid_gc);
    }
    #line 198 
    cif_spin_unlock_bh_tx_ampdu_list_lock_of_ar9170(& ar->tx_ampdu_list_lock);
    {
      #line 191 
      union __anonunion___u_7402 __u_0;
      #line 190 
      __read_once_size((void *)(& tid_info->list.next),(void *)(& __u_0.__c),8);
      #line 190 
      __mptr_0 = (void *)(__u_0.__val);
      }
    #line 190 
    tid_info = ((struct carl9170_sta_tid *)__mptr_0);
  }
  {
    #line 201 
    uintptr_t _r_a_p__v = (unsigned long)tid_info;
    #line 203 
    ldv_inline_asm();
    {
      #line 202 
      union __anonunion___u_7406 __u_1 = {.__val = (struct carl9170_sta_tid *)_r_a_p__v};
      #line 201 
      __write_once_size((void *)(& ar->tx_ampdu_iter),(void *)(& __u_1.__c),8);
      #line 201 
      struct carl9170_sta_tid *tmp_7 = __u_1.__val;
    }
  }
  #line 202 
  rcu_read_unlock();
  #line 204 
  synchronize_rcu();
  #line 206 
  while (1) {
    #line 206 
    if (! (list_empty(& tid_gc) == 0)) 
                                       #line 206 
                                       break;
    {
      #line 208 
      void *__mptr_1;
      #line 207 
      struct sk_buff *skb;
      #line 208 
      __mptr_1 = (void *)tid_gc.next;
      #line 208 
      tid_info = ((struct carl9170_sta_tid *)(__mptr_1 + 18446744073709551600U));
      #line 211 
      while (1) {
        #line 211 
        skb = __skb_dequeue(& tid_info->queue);
        #line 211 
        if (! (skb != (struct sk_buff *)0)) 
                                            #line 211 
                                            break;
        #line 212 
        carl9170_tx_status(ar,skb,(_Bool)0);
      }
      #line 214 
      list_del_init(& tid_info->tmp_list);
      #line 215 
      kfree((void *)tid_info);
    }
  }
  #line 217 
  return;
}

#line 219  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/main.c"
static void carl9170_flush(struct ar9170 *ar, bool drop_queued)
{
  #line 221 
  if ((int)drop_queued != 0) {
    #line 222 
    int i;
    #line 229 
    i = 0;
    #line 229 
    while ((int)(ar->hw)->queues > i) {
      {
        #line 230 
        struct sk_buff *skb;
        #line 232 
        while (1) {
          #line 232 
          skb = skb_dequeue(& ar->tx_pending[i]);
          #line 232 
          if (! (skb != (struct sk_buff *)0)) 
                                              #line 232 
                                              break;
          {
            #line 233 
            struct ieee80211_tx_info *info;
            #line 235 
            info = IEEE80211_SKB_CB(skb);
            #line 236 
            if ((info->flags & 64U) != 0U) 
                                           #line 237 
                                           atomic_dec_1(& ar->tx_ampdu_upload);
            #line 239 
            carl9170_tx_status(ar,skb,(_Bool)0);
          }
        }
      }
      #line 229 
      i ++;
    }
  }
  #line 245 
  if (atomic_read_2(& ar->tx_total_queued) != 0) {
    #line 246 
    int __ret_warn_on = wait_for_completion_timeout(& ar->tx_flush,250UL) == 0UL;
    #line 246 
    if ((long)(__ret_warn_on != 0) != 0L) {
      #line 247 
      ldv_inline_asm();
      #line 248 
      ldv_inline_asm();
    }
    #line 246 
    long tmp_2 = (long)(__ret_warn_on != 0);
  }
  #line 248 
  return;
}

#line 249  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/main.c"
static void carl9170_flush_ba(struct ar9170 *ar)
{
  #line 259 
  void *__mptr;
  #line 251 
  struct sk_buff_head free_0;
  #line 252 
  struct carl9170_sta_tid *tid_info;
  #line 253 
  struct sk_buff *skb;
  #line 255 
  __skb_queue_head_init(& free_0);
  #line 257 
  rcu_read_lock();
  #line 258 
  cif_spin_lock_bh_tx_ampdu_list_lock_of_ar9170(& ar->tx_ampdu_list_lock);
  {
    #line 259 
    bool __warned;
    #line 259 
    if (debug_lockdep_rcu_enabled() != 0) 
      #line 259 
      if (! __warned) {
        #line 259 
        if (rcu_read_lock_any_held() == 0) {
          #line 259 
          __warned = (_Bool)1;
          #line 259 
          lockdep_rcu_suspicious((char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/main.c",259,(char *)"RCU-list traversed in non-reader section!");
        }
      }
  }
  {
    #line 260 
    union __anonunion___u_7408 __u;
    #line 259 
    __read_once_size((void *)(& ar->tx_ampdu_list.next),(void *)(& __u.__c),8);
    #line 259 
    __mptr = (void *)(__u.__val);
    }
  #line 262 
  tid_info = ((struct carl9170_sta_tid *)__mptr);
  #line 259 
  while (& tid_info->list != & ar->tx_ampdu_list) {
    #line 259 
    void *__mptr_0;
    #line 260 
    if (tid_info->state > (unsigned int)CARL9170_TID_STATE_SUSPEND) {
      #line 261 
      tid_info->state = CARL9170_TID_STATE_SUSPEND;
      #line 263 
      cif_spin_lock_lock_of_carl9170_sta_tid(& tid_info->lock);
      #line 264 
      while (1) {
        #line 264 
        skb = __skb_dequeue(& tid_info->queue);
        #line 264 
        if (! (skb != (struct sk_buff *)0)) 
                                            #line 264 
                                            break;
        #line 265 
        __skb_queue_tail_0(& free_0,skb);
      }
      #line 266 
      cif_spin_unlock_lock_of_carl9170_sta_tid(& tid_info->lock);
    }
    {
      #line 260 
      union __anonunion___u_7410 __u_0;
      #line 259 
      __read_once_size((void *)(& tid_info->list.next),(void *)(& __u_0.__c),8);
      #line 259 
      __mptr_0 = (void *)(__u_0.__val);
      }
    #line 259 
    tid_info = ((struct carl9170_sta_tid *)__mptr_0);
  }
  #line 269 
  cif_spin_unlock_bh_tx_ampdu_list_lock_of_ar9170(& ar->tx_ampdu_list_lock);
  #line 270 
  rcu_read_unlock();
  #line 272 
  while (1) {
    #line 272 
    skb = __skb_dequeue(& free_0);
    #line 272 
    if (! (skb != (struct sk_buff *)0)) 
                                        #line 272 
                                        break;
    #line 273 
    carl9170_tx_status(ar,skb,(_Bool)0);
  }
  #line 274 
  return;
}

#line 276  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/main.c"
static void carl9170_zap_queues(struct ar9170 *ar)
{
  #line 314 
  void *__mptr;
  #line 278 
  struct carl9170_vif_info *cvif;
  #line 279 
  unsigned int i;
  #line 281 
  carl9170_ampdu_gc(ar);
  #line 283 
  carl9170_flush_ba(ar);
  #line 284 
  carl9170_flush(ar,(_Bool)1);
  #line 286 
  i = 0U;
  #line 286 
  while ((unsigned int)(ar->hw)->queues > i) {
    #line 287 
    cif_spin_lock_bh_lock_of_sk_buff_head_1(& ar->tx_status[i].lock);
    #line 288 
    while (1) {
      #line 288 
      if (! (skb_queue_empty(& ar->tx_status[i]) == 0)) 
                                                        #line 288 
                                                        break;
      {
        #line 289 
        struct sk_buff *skb;
        #line 291 
        skb = skb_peek(& ar->tx_status[i]);
        #line 292 
        carl9170_tx_get_skb(skb);
        #line 293 
        cif_spin_unlock_bh_lock_of_sk_buff_head_1(& ar->tx_status[i].lock);
        #line 294 
        carl9170_tx_drop(ar,skb);
        #line 295 
        cif_spin_lock_bh_lock_of_sk_buff_head_1(& ar->tx_status[i].lock);
        #line 296 
        carl9170_tx_put_skb(skb);
      }
    }
    #line 298 
    cif_spin_unlock_bh_lock_of_sk_buff_head_1(& ar->tx_status[i].lock);
    #line 286 
    i ++;
  }
  #line 306 
  memset((void *)(& ar->tx_stats),0,48UL);
  #line 307 
  i = 0U;
  #line 307 
  while ((unsigned int)(ar->hw)->queues > i) {
    #line 308 
    ar->tx_stats[i].limit = 48U;
    #line 307 
    i ++;
  }
  #line 310 
  i = 0U;
  #line 310 
  while ((ar->fw.mem_blocks + 63U) / 64U > i) {
    #line 311 
    *(ar->mem_bitmap + (unsigned long)i) = 0UL;
    #line 310 
    i ++;
  }
  #line 313 
  rcu_read_lock();
  {
    #line 314 
    bool __warned;
    #line 314 
    if (debug_lockdep_rcu_enabled() != 0) 
      #line 314 
      if (! __warned) {
        #line 314 
        if (rcu_read_lock_any_held() == 0) {
          #line 314 
          __warned = (_Bool)1;
          #line 314 
          lockdep_rcu_suspicious((char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/main.c",314,(char *)"RCU-list traversed in non-reader section!");
        }
      }
  }
  {
    #line 315 
    union __anonunion___u_7412 __u;
    #line 314 
    __read_once_size((void *)(& ar->vif_list.next),(void *)(& __u.__c),8);
    #line 314 
    __mptr = (void *)(__u.__val);
    }
  #line 317 
  cvif = ((struct carl9170_vif_info *)__mptr);
  #line 314 
  while (& cvif->list != & ar->vif_list) {
    #line 314 
    void *__mptr_0;
    #line 315 
    cif_spin_lock_bh_beacon_lock_of_ar9170_0(& ar->beacon_lock);
    #line 316 
    dev_kfree_skb_any(cvif->beacon);
    #line 317 
    cvif->beacon = (struct sk_buff *)0;
    #line 318 
    cif_spin_unlock_bh_beacon_lock_of_ar9170_0(& ar->beacon_lock);
    {
      #line 315 
      union __anonunion___u_7414 __u_0;
      #line 314 
      __read_once_size((void *)(& cvif->list.next),(void *)(& __u_0.__c),8);
      #line 314 
      __mptr_0 = (void *)(__u_0.__val);
      }
    #line 314 
    cvif = ((struct carl9170_vif_info *)__mptr_0);
  }
  #line 320 
  rcu_read_unlock();
  #line 322 
  atomic_set_1(& ar->tx_ampdu_upload,0);
  #line 323 
  atomic_set_1(& ar->tx_ampdu_scheduler,0);
  #line 324 
  atomic_set_1(& ar->tx_total_pending,0);
  #line 325 
  atomic_set_1(& ar->tx_total_queued,0);
  #line 326 
  atomic_set_1(& ar->mem_free_blocks,(int)ar->fw.mem_blocks);
  #line 327 
  return;
}

#line 337  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/main.c"
static int carl9170_op_start(struct ieee80211_hw *hw)
{
  #line 340 
  int err;
  #line 340 
  int i;
  #line 339 
  struct ar9170 *ar = (struct ar9170 *)hw->priv;
  #line 342 
  cif_mutex_lock_mutex_of_ar9170_2(& ar->mutex);
  #line 344 
  carl9170_zap_queues(ar);
  #line 347 
  ar->edcf[3].aifs = (unsigned char)2U;
  #line 347 
  ar->edcf[3].cw_min = (unsigned short)3U;
  #line 347 
  ar->edcf[3].cw_max = (unsigned short)7U;
  #line 347 
  ar->edcf[3].txop = (unsigned short)47U;
  #line 348 
  ar->edcf[2].aifs = (unsigned char)2U;
  #line 348 
  ar->edcf[2].cw_min = (unsigned short)7U;
  #line 348 
  ar->edcf[2].cw_max = (unsigned short)15U;
  #line 348 
  ar->edcf[2].txop = (unsigned short)94U;
  #line 349 
  ar->edcf[1].aifs = (unsigned char)3U;
  #line 349 
  ar->edcf[1].cw_min = (unsigned short)15U;
  #line 349 
  ar->edcf[1].cw_max = (unsigned short)1023U;
  #line 349 
  ar->edcf[1].txop = (unsigned short)0U;
  #line 350 
  ar->edcf[0].aifs = (unsigned char)7U;
  #line 350 
  ar->edcf[0].cw_min = (unsigned short)15U;
  #line 350 
  ar->edcf[0].cw_max = (unsigned short)1023U;
  #line 350 
  ar->edcf[0].txop = (unsigned short)0U;
  #line 351 
  ar->edcf[4].aifs = (unsigned char)2U;
  #line 351 
  ar->edcf[4].cw_min = (unsigned short)3U;
  #line 351 
  ar->edcf[4].cw_max = (unsigned short)7U;
  #line 351 
  ar->edcf[4].txop = (unsigned short)0U;
  #line 353 
  ar->current_density = (-1);
  #line 353 
  ar->current_factor = (-1);
  #line 355 
  ar->usedkeys = 1ULL;
  #line 356 
  ar->filter_state = 0U;
  #line 357 
  ar->ps.last_action = jiffies;
  #line 358 
  ar->ps.last_slept = jiffies;
  #line 359 
  ar->erp_mode = CARL9170_ERP_AUTO;
  #line 364 
  ar->disable_offload = (_Bool)(((int)ar->fw.disable_offload_fw | (int)modparam_nohwcrypt) != 0);
  #line 366 
  ar->rx_software_decryption = ar->disable_offload;
  #line 368 
  i = 0;
  #line 368 
  while ((int)(ar->hw)->queues > i) {
    #line 369 
    ar->queue_stop_timeout[i] = jiffies;
    #line 370 
    ar->max_queue_stop_timeout[i] = 0UL;
    #line 368 
    i ++;
  }
  #line 373 
  atomic_set_1(& ar->mem_allocs,0);
  #line 375 
  err = carl9170_usb_open(ar);
  #line 376 
  if (err != 0) 
                #line 377 
                goto out;
  #line 379 
  err = carl9170_init_mac(ar);
  #line 380 
  if (err != 0) 
                #line 381 
                goto out;
  #line 383 
  err = carl9170_set_qos(ar);
  #line 384 
  if (err != 0) 
                #line 385 
                goto out;
  #line 387 
  if ((int)ar->fw.rx_filter != 0) {
    #line 388 
    err = carl9170_rx_filter(ar,11U);
    #line 390 
    if (err != 0) 
                  #line 391 
                  goto out;
  }
  #line 394 
  err = carl9170_write_reg(ar,1850672U,256U);
  #line 396 
  if (err != 0) 
                #line 397 
                goto out;
  #line 400 
  i = 0;
  #line 400 
  while (i <= 67) {
    #line 401 
    err = carl9170_upload_key(ar,(unsigned char)((int)((unsigned char)i)),(u8 *)0U,(unsigned char)0,(unsigned char)0,(u8 *)0U,0);
    #line 403 
    if (err != 0) 
                  #line 404 
                  goto out;
    #line 406 
    err = carl9170_upload_key(ar,(unsigned char)((int)((unsigned char)i)),(u8 *)0U,(unsigned char)0,(unsigned char)1,(u8 *)0U,0);
    #line 408 
    if (err != 0) 
                  #line 409 
                  goto out;
    #line 411 
    if (i <= 63) {
      #line 412 
      err = carl9170_disable_key(ar,(unsigned char)((int)((unsigned char)i)));
      #line 413 
      if (err != 0) 
                    #line 414 
                    goto out;
    }
    #line 400 
    i ++;
  }
  #line 418 
  carl9170_set_state_when_0(ar,(enum carl9170_device_state)CARL9170_IDLE,(enum carl9170_device_state)CARL9170_STARTED);
  #line 420 
  ;
  #line 420 
  ;
  #line 420 
  ieee80211_queue_delayed_work(ar->hw,& ar->stat_work,round_jiffies(msecs_to_jiffies(30000U)));
  #line 423 
  ieee80211_wake_queues(ar->hw);
  #line 424 
  err = 0;
  #line 426 
  out: 
       #line 426 
  ;
  #line 427 
  cif_mutex_unlock_mutex_of_ar9170_2(& ar->mutex);
  #line 428 
  return err;
}

#line 431  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/main.c"
static void carl9170_cancel_worker(struct ar9170 *ar)
{
  #line 433 
  cancel_delayed_work_sync(& ar->stat_work);
  #line 434 
  cancel_delayed_work_sync(& ar->tx_janitor);
  #line 436 
  cancel_delayed_work_sync(& ar->led_work);
  #line 438 
  cancel_work_sync(& ar->ps_work);
  #line 439 
  cancel_work_sync(& ar->ping_work);
  #line 440 
  cancel_work_sync(& ar->ampdu_work);
  #line 441 
  return;
}

#line 443  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/main.c"
static void carl9170_op_stop(struct ieee80211_hw *hw)
{
  #line 445 
  struct ar9170 *ar = (struct ar9170 *)hw->priv;
  #line 447 
  carl9170_set_state_when_0(ar,(enum carl9170_device_state)CARL9170_STARTED,(enum carl9170_device_state)CARL9170_IDLE);
  #line 449 
  ieee80211_stop_queues(ar->hw);
  #line 451 
  cif_mutex_lock_mutex_of_ar9170_2(& ar->mutex);
  #line 452 
  if (ar->state > (unsigned int)CARL9170_STOPPED) {
    {
      #line 454 
      union __anonunion___u_7416 __u = {.__val = (struct carl9170_vif_info *)0};
      #line 453 
      __write_once_size((void *)(& ar->beacon_iter),(void *)(& __u.__c),8);
      #line 453 
      struct carl9170_vif_info *tmp = __u.__val;
    }
    #line 455 
    carl9170_led_set_state(ar,0U);
    #line 458 
    carl9170_write_reg(ar,1850672U,0U);
    #line 459 
    carl9170_usb_stop(ar);
  }
  #line 462 
  carl9170_zap_queues(ar);
  #line 463 
  cif_mutex_unlock_mutex_of_ar9170_2(& ar->mutex);
  #line 465 
  carl9170_cancel_worker(ar);
  #line 466 
  return;
}

#line 468  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/main.c"
static void carl9170_restart_work(struct work_struct *work)
{
  #line 470 
  void *__mptr;
  #line 470 
  __mptr = (void *)work;
  #line 470 
  struct ar9170 *ar = ((struct ar9170 *)(__mptr + 18446744073709548896U));
  #line 472 
  int err = -5;
  #line 474 
  ar->usedkeys = 0ULL;
  #line 475 
  ar->filter_state = 0U;
  #line 476 
  carl9170_cancel_worker(ar);
  #line 478 
  cif_mutex_lock_mutex_of_ar9170_2(& ar->mutex);
  #line 479 
  if (! ar->force_usb_reset) {
    #line 480 
    err = carl9170_usb_restart(ar);
    #line 481 
    if (net_ratelimit() != 0) 
      #line 482 
      if (err != 0) 
                    #line 483 
                    _dev_err(& (ar->udev)->dev,(char *)"Failed to restart device (%d).\n",err); else 
                                                                    #line 485 
                                                                    _dev_info(& (ar->udev)->dev,(char *)"device restarted successfully.\n");
  }
  #line 488 
  carl9170_zap_queues(ar);
  #line 489 
  cif_mutex_unlock_mutex_of_ar9170_2(& ar->mutex);
  #line 491 
  if (err == 0 && ! ar->force_usb_reset) {
    #line 492 
    (ar->restart_counter) ++;
    #line 493 
    atomic_set_1(& ar->pending_restarts,0);
    #line 495 
    ieee80211_restart_hw(ar->hw);
  }
  else 
       #line 503 
       carl9170_usb_reset(ar);
  #line 504 
  return;
}

#line 507  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/main.c"
void carl9170_restart(struct ar9170 *ar, enum carl9170_restart_reasons r)
{
  #line 525 
  int __ret_warn_on;
  #line 509 
  carl9170_set_state_when_0(ar,(enum carl9170_device_state)CARL9170_STARTED,(enum carl9170_device_state)CARL9170_IDLE);
  #line 516 
  if (atomic_inc_return_0(& ar->pending_restarts) > 1) {
    {
      #line 517 
      bool branch;
      #line 517 
      struct _ddebug __UNIQUE_ID_ddebug565 = {.modname = (char *)"carl9170", .function = (char *)"carl9170_restart", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/main.c", .format = (char *)"ignoring restart (%d)\n", .lineno = (unsigned int)517U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
      #line 517 
      branch = arch_static_branch(& __UNIQUE_ID_ddebug565.key.dd_key_false.key,(_Bool)0);
      #line 517 
      if ((long)((long)((int)branch != 0)) != 0L) 
                                                  #line 517 
                                                  __dynamic_dev_dbg(& __UNIQUE_ID_ddebug565,& (ar->udev)->dev,(char *)"ignoring restart (%d)\n",(unsigned int)r);
    }
    #line 518 
    return;
  }
  #line 521 
  ieee80211_stop_queues(ar->hw);
  #line 523 
  _dev_err(& (ar->udev)->dev,(char *)"restart device (%d)\n",(unsigned int)r);
  #line 525 
  __ret_warn_on = r == (unsigned int)CARL9170_RR_NO_REASON;
  #line 525 
  if ((long)(__ret_warn_on != 0) != 0L) {
    #line 526 
    ldv_inline_asm();
    #line 527 
    ldv_inline_asm();
  }
  #line 525 
  if ((long)((long)(__ret_warn_on != 0)) == 0L) 
                                                #line 527 
                                                ar->last_reason = r;
  else {
    #line 526 
    int __ret_warn_on_0;
    #line 526 
    __ret_warn_on_0 = r > (unsigned int)CARL9170_RR_USER_REQUEST;
    #line 526 
    if ((long)(__ret_warn_on_0 != 0) != 0L) {
      #line 527 
      ldv_inline_asm();
      #line 528 
      ldv_inline_asm();
    }
    #line 525 
    if ((long)((long)(__ret_warn_on_0 != 0)) == 0L) 
                                                    #line 527 
                                                    ar->last_reason = r;
  }
  #line 529 
  if (! ar->registered) 
                        #line 530 
                        return;
  #line 532 
  if (ar->state <= (unsigned int)CARL9170_STOPPED || (int)ar->needs_full_reset != 0) 
    #line 533 
    ar->force_usb_reset = (_Bool)1;
  #line 535 
  ieee80211_queue_work(ar->hw,& ar->restart_work);
  #line 536 
  return;
}

#line 544  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/main.c"
static void carl9170_ping_work(struct work_struct *work)
{
  #line 546 
  void *__mptr;
  #line 547 
  int err;
  #line 546 
  __mptr = (void *)work;
  #line 546 
  struct ar9170 *ar = ((struct ar9170 *)(__mptr + 18446744073709548816U));
  #line 549 
  if (ar->state <= (unsigned int)CARL9170_IDLE) 
                                                #line 550 
                                                return;
  #line 552 
  cif_mutex_lock_mutex_of_ar9170_2(& ar->mutex);
  #line 553 
  err = carl9170_echo_test(ar,3735928559U);
  #line 554 
  if (err != 0) 
                #line 555 
                carl9170_restart(ar,(enum carl9170_restart_reasons)CARL9170_RR_UNRESPONSIVE_DEVICE);
  #line 556 
  cif_mutex_unlock_mutex_of_ar9170_2(& ar->mutex);
  #line 557 
  return;
}

#line 559  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/main.c"
static int carl9170_init_interface(struct ar9170 *ar, struct ieee80211_vif *vif)
{
  #line 563 
  int err;
  #line 562 
  struct ath_common *common = & ar->common;
  #line 565 
  if (vif == (struct ieee80211_vif *)0) {
    {
      #line 566 
      int __ret_warn_on = ar->state > (unsigned int)CARL9170_IDLE;
      #line 566 
      if ((long)(__ret_warn_on != 0) != 0L) {
        #line 567 
        ldv_inline_asm();
        #line 568 
        ldv_inline_asm();
      }
      #line 566 
      long tmp = (long)(__ret_warn_on != 0);
    }
    #line 567 
    return 0;
  }
  #line 570 
  memcpy((void *)(& common->macaddr),(void *)(& vif->addr),6UL);
  #line 582 
  ar->disable_offload = (_Bool)(((int)ar->disable_offload | ((unsigned int)vif->type + 4294967294U > 1U)) != 0);
  #line 591 
  ar->disable_offload = (_Bool)(((int)ar->disable_offload | (int)vif->p2p) != 0);
  #line 593 
  ar->rx_software_decryption = ar->disable_offload;
  #line 595 
  err = carl9170_set_operating_mode(ar);
  #line 596 
  return err;
}

#line 599  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/main.c"
static int carl9170_op_add_interface(struct ieee80211_hw *hw, struct ieee80211_vif *vif)
{
  #line 603 
  struct ieee80211_vif *main_vif;
  #line 602 
  struct carl9170_vif_info *vif_priv = (struct carl9170_vif_info *)(& vif->drv_priv);
  #line 603 
  struct ieee80211_vif *old_main = (struct ieee80211_vif *)0;
  #line 604 
  struct ar9170 *ar = (struct ar9170 *)hw->priv;
  #line 605 
  int vif_id = -1;
  #line 605 
  int err = 0;
  #line 607 
  cif_mutex_lock_mutex_of_ar9170_2(& ar->mutex);
  #line 608 
  rcu_read_lock();
  #line 609 
  if ((int)vif_priv->active != 0) {
    #line 614 
    vif_id = (int)vif_priv->id;
    #line 615 
    vif_priv->enable_beacon = (_Bool)0;
    #line 617 
    cif_spin_lock_bh_beacon_lock_of_ar9170_0(& ar->beacon_lock);
    #line 618 
    dev_kfree_skb_any(vif_priv->beacon);
    #line 619 
    vif_priv->beacon = (struct sk_buff *)0;
    #line 620 
    cif_spin_unlock_bh_beacon_lock_of_ar9170_0(& ar->beacon_lock);
    #line 622 
    goto init;
  }
  #line 634 
  main_vif = carl9170_get_main_vif_0(ar);
  #line 636 
  if (main_vif != (struct ieee80211_vif *)0) 
    #line 637 
    switch ((unsigned int)main_vif->type) {
      #line 638 
      case (unsigned int)2: 
                            #line 638 
      ;
      #line 639 
      if (vif->type == (unsigned int)NL80211_IFTYPE_STATION) 
                                                             #line 640 
                                                             break;
      #line 648 
      if (((int)main_vif->p2p != 0 && (int)vif->p2p != 0) && vif->type == (unsigned int)NL80211_IFTYPE_AP) {
        #line 650 
        old_main = main_vif;
        #line 651 
        break;
      }
      #line 654 
      err = -16;
      #line 655 
      rcu_read_unlock();
      #line 657 
      goto unlock;
      #line 659 
      case (unsigned int)7: 
                            #line 659 
      ;
      #line 660 
      case (unsigned int)3: 
                            #line 660 
      ;
      #line 661 
      if (((vif->type == (unsigned int)NL80211_IFTYPE_STATION || vif->type == (unsigned int)NL80211_IFTYPE_WDS) || vif->type == (unsigned int)NL80211_IFTYPE_AP) || vif->type == (unsigned int)NL80211_IFTYPE_MESH_POINT) 
        #line 665 
        break;
      #line 667 
      err = -16;
      #line 668 
      rcu_read_unlock();
      #line 669 
      goto unlock;
      #line 671 
      default: 
               #line 671 
      ;
      #line 672 
      rcu_read_unlock();
      #line 673 
      goto unlock;
    }
  #line 677 
  vif_id = bitmap_find_free_region(& ar->vif_bitmap,ar->fw.vif_num,0);
  #line 679 
  if (vif_id < 0) {
    #line 680 
    rcu_read_unlock();
    #line 682 
    err = -28;
    #line 683 
    goto unlock;
  }
  #line 686 
  if ((long)(ar->vif_priv[vif_id].id != (unsigned int)vif_id) != 0L) {
    #line 687 
    ldv_inline_asm();
    #line 688 
    ldv_inline_asm();
    #line 689 
    ldv_inline_asm();
    #line 686 
    ;
  }
  #line 688 
  vif_priv->active = (_Bool)1;
  #line 689 
  vif_priv->id = (unsigned int)vif_id;
  #line 690 
  vif_priv->enable_beacon = (_Bool)0;
  #line 691 
  (ar->vifs) ++;
  #line 692 
  if (old_main != (struct ieee80211_vif *)0) 
                                             #line 697 
                                             list_add_rcu(& vif_priv->list,& ar->vif_list); else 
                                                                    #line 702 
                                                                    list_add_tail_rcu_0(& vif_priv->list,& ar->vif_list);
  {
    #line 704 
    uintptr_t _r_a_p__v = (unsigned long)vif;
    #line 706 
    ldv_inline_asm();
    {
      #line 705 
      union __anonunion___u_7420 __u = {.__val = (struct ieee80211_vif *)_r_a_p__v};
      #line 704 
      __write_once_size((void *)(& ar->vif_priv[vif_id].vif),(void *)(& __u.__c),8);
      #line 704 
      struct ieee80211_vif *tmp_3 = __u.__val;
    }
  }
  #line 706 
  init: 
        #line 706 
  ;
  #line 707 
  main_vif = carl9170_get_main_vif_0(ar);
  #line 709 
  if (main_vif == vif) {
    {
      #line 710 
      uintptr_t _r_a_p__v_0 = (unsigned long)vif_priv;
      #line 712 
      ldv_inline_asm();
      {
        #line 711 
        union __anonunion___u_7424 __u_0 = {.__val = (struct carl9170_vif_info *)_r_a_p__v_0};
        #line 710 
        __write_once_size((void *)(& ar->beacon_iter),(void *)(& __u_0.__c),8);
        #line 710 
        struct carl9170_vif_info *tmp_6 = __u_0.__val;
      }
    }
    #line 711 
    rcu_read_unlock();
    #line 713 
    if (old_main != (struct ieee80211_vif *)0) {
      #line 714 
      struct carl9170_vif_info *old_main_priv = (struct carl9170_vif_info *)(& old_main->drv_priv);
      #line 721 
      err = carl9170_mod_virtual_mac(ar,old_main_priv->id,(u8 *)(& old_main->addr));
      #line 723 
      if (err != 0) 
                    #line 724 
                    goto unlock;
    }
    #line 727 
    err = carl9170_init_interface(ar,vif);
    #line 728 
    if (err != 0) 
                  #line 729 
                  goto unlock;
  }
  else {
    #line 731 
    rcu_read_unlock();
    #line 732 
    err = carl9170_mod_virtual_mac(ar,(unsigned int)vif_id,(u8 *)(& vif->addr));
    #line 734 
    if (err != 0) 
                  #line 735 
                  goto unlock;
  }
  #line 738 
  if (ar->fw.tx_seq_table != 0U) {
    #line 739 
    err = carl9170_write_reg(ar,ar->fw.tx_seq_table + (unsigned int)(vif_id * 4),0U);
    #line 741 
    if (err != 0) 
                  #line 742 
                  goto unlock;
  }
  #line 745 
  unlock: 
          #line 745 
  ;
  #line 746 
  if (err != 0 && vif_id >= 0) {
    #line 747 
    vif_priv->active = (_Bool)0;
    #line 748 
    bitmap_release_region(& ar->vif_bitmap,(unsigned int)vif_id,0);
    #line 749 
    (ar->vifs) --;
    {
      #line 751 
      union __anonunion___u_7426 __u_1 = {.__val = (struct ieee80211_vif *)0};
      #line 750 
      __write_once_size((void *)(& ar->vif_priv[vif_id].vif),(void *)(& __u_1.__c),8);
      #line 750 
      struct ieee80211_vif *tmp = __u_1.__val;
    }
    #line 751 
    list_del_rcu_0(& vif_priv->list);
    #line 752 
    cif_mutex_unlock_mutex_of_ar9170_2(& ar->mutex);
    #line 753 
    synchronize_rcu();
  }
  else {
    #line 755 
    if (ar->vifs > 1U) 
                       #line 756 
                       ar->ps.off_override |= 1U;
    #line 758 
    cif_mutex_unlock_mutex_of_ar9170_2(& ar->mutex);
  }
  #line 761 
  return err;
}

#line 764  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/main.c"
static void carl9170_op_remove_interface(struct ieee80211_hw *hw, struct ieee80211_vif *vif)
{
  #line 774 
  int __ret_warn_on;
  #line 768 
  struct ieee80211_vif *main_vif;
  #line 770 
  unsigned int id;
  #line 767 
  struct carl9170_vif_info *vif_priv = (struct carl9170_vif_info *)(& vif->drv_priv);
  #line 769 
  struct ar9170 *ar = (struct ar9170 *)hw->priv;
  #line 772 
  cif_mutex_lock_mutex_of_ar9170_2(& ar->mutex);
  #line 774 
  __ret_warn_on = ! vif_priv->active;
  #line 774 
  if ((long)(__ret_warn_on != 0) != 0L) {
    #line 775 
    ldv_inline_asm();
    #line 776 
    ldv_inline_asm();
  }
  #line 774 
  if ((long)((long)(__ret_warn_on != 0)) != 0L) 
                                                #line 775 
                                                goto unlock;
  #line 777 
  (ar->vifs) --;
  #line 779 
  rcu_read_lock();
  #line 780 
  main_vif = carl9170_get_main_vif_0(ar);
  #line 782 
  id = vif_priv->id;
  #line 784 
  vif_priv->active = (_Bool)0;
  {
    #line 785 
    int __ret_warn_on_0 = (int)vif_priv->enable_beacon != 0;
    #line 785 
    if ((long)(__ret_warn_on_0 != 0) != 0L) {
      #line 786 
      ldv_inline_asm();
      #line 787 
      ldv_inline_asm();
    }
    #line 785 
    long tmp_2 = (long)(__ret_warn_on_0 != 0);
  }
  #line 786 
  vif_priv->enable_beacon = (_Bool)0;
  #line 787 
  list_del_rcu_0(& vif_priv->list);
  {
    #line 789 
    union __anonunion___u_7428 __u = {.__val = (struct ieee80211_vif *)0};
    #line 788 
    __write_once_size((void *)(& ar->vif_priv[id].vif),(void *)(& __u.__c),8);
    #line 788 
    struct ieee80211_vif *tmp_4 = __u.__val;
  }
  #line 790 
  if (vif == main_vif) {
    #line 791 
    rcu_read_unlock();
    #line 793 
    if (ar->vifs != 0U) {
      #line 794 
      ;
      #line 794 
      int __ret_warn_on_1 = carl9170_init_interface(ar,carl9170_get_main_vif_0(ar)) != 0;
      #line 794 
      if ((long)(__ret_warn_on_1 != 0) != 0L) {
        #line 795 
        ldv_inline_asm();
        #line 796 
        ldv_inline_asm();
      }
      #line 794 
      long tmp_6 = (long)(__ret_warn_on_1 != 0);
    }
    else 
         #line 797 
         carl9170_set_operating_mode(ar);
  }
  else {
    #line 800 
    rcu_read_unlock();
    {
      #line 802 
      int __ret_warn_on_2 = carl9170_mod_virtual_mac(ar,id,(u8 *)0U) != 0;
      #line 802 
      if ((long)(__ret_warn_on_2 != 0) != 0L) {
        #line 803 
        ldv_inline_asm();
        #line 804 
        ldv_inline_asm();
      }
      #line 802 
      long tmp_8 = (long)(__ret_warn_on_2 != 0);
    }
  }
  #line 805 
  carl9170_update_beacon(ar,(_Bool)0);
  #line 806 
  carl9170_flush_cab(ar,id);
  #line 808 
  cif_spin_lock_bh_beacon_lock_of_ar9170_0(& ar->beacon_lock);
  #line 809 
  dev_kfree_skb_any(vif_priv->beacon);
  #line 810 
  vif_priv->beacon = (struct sk_buff *)0;
  #line 811 
  cif_spin_unlock_bh_beacon_lock_of_ar9170_0(& ar->beacon_lock);
  #line 813 
  bitmap_release_region(& ar->vif_bitmap,id,0);
  #line 815 
  carl9170_set_beacon_timers(ar);
  #line 817 
  if (ar->vifs == 1U) 
                      #line 818 
                      ar->ps.off_override &= 4294967294U;
  #line 820 
  unlock: 
          #line 820 
  ;
  #line 821 
  cif_mutex_unlock_mutex_of_ar9170_2(& ar->mutex);
  #line 823 
  synchronize_rcu();
  #line 824 
  return;
}

#line 826  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/main.c"
void carl9170_ps_check(struct ar9170 *ar)
{
  #line 828 
  ieee80211_queue_work(ar->hw,& ar->ps_work);
  #line 829 
  return;
}

#line 832  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/main.c"
static int carl9170_ps_update(struct ar9170 *ar)
{
  #line 834 
  bool ps = (_Bool)0;
  #line 835 
  int err = 0;
  #line 837 
  if (ar->ps.off_override == 0U) 
                                 #line 838 
                                 ps = (_Bool)(((ar->hw)->conf.flags & 2U) != 0U);
  #line 840 
  if ((int)ar->ps.state != (int)ps) {
    #line 841 
    err = carl9170_powersave(ar,(_Bool)((bool)((int)ps) != 0));
    #line 842 
    if (err != 0) 
                  #line 843 
                  return err;
    #line 845 
    if ((int)ar->ps.state != 0 && ! ps) 
                                        #line 846 
                                        ar->ps.sleep_ms = jiffies_to_msecs(jiffies - ar->ps.last_action);
    #line 850 
    if ((int)ps != 0) 
                      #line 851 
                      ar->ps.last_slept = jiffies;
    #line 853 
    ar->ps.last_action = jiffies;
    #line 854 
    ar->ps.state = ps;
  }
  #line 857 
  return 0;
}

#line 860  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/main.c"
static void carl9170_ps_work(struct work_struct *work)
{
  #line 862 
  void *__mptr;
  #line 862 
  __mptr = (void *)work;
  #line 862 
  struct ar9170 *ar = ((struct ar9170 *)(__mptr + 18446744073709540624U));
  #line 864 
  cif_mutex_lock_mutex_of_ar9170_2(& ar->mutex);
  #line 865 
  if (ar->state > (unsigned int)CARL9170_IDLE) {
    #line 866 
    int __ret_warn_on = carl9170_ps_update(ar) != 0;
    #line 866 
    if ((long)(__ret_warn_on != 0) != 0L) {
      #line 867 
      ldv_inline_asm();
      #line 868 
      ldv_inline_asm();
    }
    #line 866 
    long tmp_2 = (long)(__ret_warn_on != 0);
  }
  #line 867 
  cif_mutex_unlock_mutex_of_ar9170_2(& ar->mutex);
  #line 868 
  return;
}

#line 870  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/main.c"
static int carl9170_update_survey(struct ar9170 *ar, bool flush, bool noise)
{
  #line 872 
  int err;
  #line 874 
  if ((int)noise != 0) {
    #line 875 
    err = carl9170_get_noisefloor(ar);
    #line 876 
    if (err != 0) 
                  #line 877 
                  return err;
  }
  #line 880 
  if ((int)ar->fw.hw_counters != 0) {
    #line 881 
    err = carl9170_collect_tally(ar);
    #line 882 
    if (err != 0) 
                  #line 883 
                  return err;
  }
  #line 886 
  if ((int)flush != 0) 
                       #line 887 
                       memset((void *)(& ar->tally),0,40UL);
  #line 889 
  return 0;
}

#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/main.c"
static void carl9170_stat_work(struct work_struct *work)
{
  #line 894 
  void *__mptr;
  #line 895 
  int err;
  #line 894 
  __mptr = (void *)work;
  #line 894 
  struct ar9170 *ar = ((struct ar9170 *)(__mptr + 18446744073709548288U));
  #line 897 
  cif_mutex_lock_mutex_of_ar9170_2(& ar->mutex);
  #line 898 
  err = carl9170_update_survey(ar,(_Bool)0,(_Bool)1);
  #line 899 
  cif_mutex_unlock_mutex_of_ar9170_2(& ar->mutex);
  #line 901 
  if (err != 0) 
                #line 902 
                return;
  #line 904 
  ;
  #line 904 
  ;
  #line 904 
  ieee80211_queue_delayed_work(ar->hw,& ar->stat_work,round_jiffies(msecs_to_jiffies(30000U)));
  #line 906 
  return;
}

#line 908  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/main.c"
static int carl9170_op_config(struct ieee80211_hw *hw, u32 changed)
{
  #line 910 
  struct ar9170 *ar = (struct ar9170 *)hw->priv;
  #line 911 
  int err = 0;
  #line 913 
  cif_mutex_lock_mutex_of_ar9170_2(& ar->mutex);
  #line 914 
  if ((changed & 4U) != 0U) 
                            #line 916 
                            err = 0;
  #line 919 
  if ((changed & 16U) != 0U) {
    #line 920 
    err = carl9170_ps_update(ar);
    #line 921 
    if (err != 0) 
                  #line 922 
                  goto out;
  }
  #line 925 
  if ((changed & 2U) != 0U) 
                            #line 927 
                            err = 0;
  #line 930 
  if ((changed & 64U) != 0U) {
    #line 931 
    enum nl80211_channel_type channel_type = cfg80211_get_chandef_type(& hw->conf.chandef);
    #line 935 
    err = carl9170_set_slot_time(ar);
    #line 936 
    if (err != 0) 
                  #line 937 
                  goto out;
    #line 939 
    err = carl9170_update_survey(ar,(_Bool)1,(_Bool)0);
    #line 940 
    if (err != 0) 
                  #line 941 
                  goto out;
    #line 943 
    err = carl9170_set_channel(ar,hw->conf.chandef.chan,channel_type);
    #line 945 
    if (err != 0) 
                  #line 946 
                  goto out;
    #line 948 
    err = carl9170_update_survey(ar,(_Bool)0,(_Bool)1);
    #line 949 
    if (err != 0) 
                  #line 950 
                  goto out;
    #line 952 
    err = carl9170_set_dyn_sifs_ack(ar);
    #line 953 
    if (err != 0) 
                  #line 954 
                  goto out;
    #line 956 
    err = carl9170_set_rts_cts_rate(ar);
    #line 957 
    if (err != 0) 
                  #line 958 
                  goto out;
  }
  #line 961 
  if ((changed & 32U) != 0U) {
    #line 962 
    err = carl9170_set_mac_tpc(ar,(ar->hw)->conf.chandef.chan);
    #line 963 
    if (err != 0) 
                  #line 964 
                  goto out;
  }
  #line 967 
  out: 
       #line 967 
  ;
  #line 968 
  cif_mutex_unlock_mutex_of_ar9170_2(& ar->mutex);
  #line 969 
  return err;
}

#line 972  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/main.c"
static u64 carl9170_op_prepare_multicast(struct ieee80211_hw *hw, struct netdev_hw_addr_list *mc_list)
{
  #line 981 
  void *__mptr;
  #line 975 
  struct netdev_hw_addr *ha;
  #line 976 
  u64 mchash;
  #line 979 
  mchash = 9223372036854775808ULL;
  #line 981 
  __mptr = (void *)mc_list->list.next;
  #line 981 
  ha = ((struct netdev_hw_addr *)__mptr);
  #line 981 
  while ((void *)ha != (void *)mc_list) {
    #line 981 
    void *__mptr_0;
    #line 982 
    mchash = (1ULL << ((int)ha->addr[5] >> 2)) | mchash;
    #line 981 
    __mptr_0 = (void *)ha->list.next;
    #line 981 
    ha = ((struct netdev_hw_addr *)__mptr_0);
  }
  #line 984 
  return mchash;
}

#line 987  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/main.c"
static void carl9170_op_configure_filter(struct ieee80211_hw *hw, unsigned int changed_flags, unsigned int *new_flags, u64 multicast)
{
  #line 992 
  struct ar9170 *ar = (struct ar9170 *)hw->priv;
  #line 995 
  *new_flags &= ar->rx_filter_caps | 2U;
  #line 997 
  if (ar->state <= (unsigned int)CARL9170_STOPPED) 
                                                   #line 998 
                                                   return;
  #line 1000 
  cif_mutex_lock_mutex_of_ar9170_2(& ar->mutex);
  #line 1002 
  ar->filter_state = *new_flags;
  #line 1008 
  if ((*new_flags & 2U) != 0U) 
                               #line 1009 
                               multicast = 18446744073709551615ULL;
  #line 1011 
  if (ar->cur_mc_hash != multicast) {
    #line 1012 
    int __ret_warn_on = carl9170_update_multicast(ar,multicast) != 0;
    #line 1012 
    if ((long)(__ret_warn_on != 0) != 0L) {
      #line 1013 
      ldv_inline_asm();
      #line 1014 
      ldv_inline_asm();
    }
    #line 1012 
    long tmp_2 = (long)(__ret_warn_on != 0);
  }
  #line 1014 
  if ((changed_flags & 64U) != 0U) {
    #line 1015 
    ar->sniffer_enabled = (_Bool)((*new_flags & 64U) != 0U);
    {
      #line 1017 
      int __ret_warn_on_0 = carl9170_set_operating_mode(ar) != 0;
      #line 1017 
      if ((long)(__ret_warn_on_0 != 0) != 0L) {
        #line 1018 
        ldv_inline_asm();
        #line 1019 
        ldv_inline_asm();
      }
      #line 1017 
      long tmp_4 = (long)(__ret_warn_on_0 != 0);
    }
  }
  #line 1020 
  if ((int)ar->fw.rx_filter != 0 && (ar->rx_filter_caps & changed_flags) != 0U) {
    #line 1021 
    u32 rx_filter = 0U;
    #line 1023 
    if (! ar->fw.ba_filter) 
                            #line 1024 
                            rx_filter |= 8U;
    #line 1026 
    if ((*new_flags & 12U) == 0U) 
                                  #line 1027 
                                  rx_filter |= 1U;
    #line 1029 
    if ((*new_flags & 32U) == 0U) 
                                  #line 1030 
                                  rx_filter |= 8U;
    #line 1032 
    if ((*new_flags & 128U) == 0U) 
                                   #line 1033 
                                   rx_filter |= 16U;
    #line 1035 
    if ((*new_flags & 64U) == 0U) {
      #line 1036 
      rx_filter |= 2U;
      #line 1037 
      rx_filter |= 4U;
    }
    {
      #line 1040 
      int __ret_warn_on_1 = carl9170_rx_filter(ar,rx_filter) != 0;
      #line 1040 
      if ((long)(__ret_warn_on_1 != 0) != 0L) {
        #line 1041 
        ldv_inline_asm();
        #line 1042 
        ldv_inline_asm();
      }
      #line 1040 
      long tmp_6 = (long)(__ret_warn_on_1 != 0);
    }
  }
  #line 1043 
  cif_mutex_unlock_mutex_of_ar9170_2(& ar->mutex);
  #line 1044 
  return;
}

#line 1047  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/main.c"
static void carl9170_op_bss_info_changed(struct ieee80211_hw *hw, struct ieee80211_vif *vif, struct ieee80211_bss_conf *bss_conf, u32 changed)
{
  #line 1061 
  int __ret_warn_on;
  #line 1055 
  struct carl9170_vif_info *vif_priv;
  #line 1056 
  struct ieee80211_vif *main_vif;
  #line 1052 
  struct ar9170 *ar = (struct ar9170 *)hw->priv;
  #line 1053 
  struct ath_common *common = & ar->common;
  #line 1054 
  int err = 0;
  #line 1058 
  cif_mutex_lock_mutex_of_ar9170_2(& ar->mutex);
  #line 1059 
  vif_priv = (struct carl9170_vif_info *)(& vif->drv_priv);
  #line 1060 
  main_vif = carl9170_get_main_vif_0(ar);
  #line 1061 
  __ret_warn_on = main_vif == (struct ieee80211_vif *)0;
  #line 1061 
  if ((long)(__ret_warn_on != 0) != 0L) {
    #line 1062 
    ldv_inline_asm();
    #line 1063 
    ldv_inline_asm();
  }
  #line 1061 
  if ((long)((long)(__ret_warn_on != 0)) != 0L) 
                                                #line 1062 
                                                goto out;
  #line 1064 
  if ((changed & 512U) != 0U) {
    #line 1070 
    void *__mptr;
    #line 1065 
    struct carl9170_vif_info *iter;
    #line 1066 
    int i = 0;
    #line 1068 
    vif_priv->enable_beacon = bss_conf->enable_beacon;
    #line 1069 
    rcu_read_lock();
    {
      #line 1070 
      bool __warned;
      #line 1070 
      if (debug_lockdep_rcu_enabled() != 0) 
        #line 1070 
        if (! __warned) {
          #line 1070 
          if (rcu_read_lock_any_held() == 0) {
            #line 1070 
            __warned = (_Bool)1;
            #line 1070 
            lockdep_rcu_suspicious((char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/main.c",1070,(char *)"RCU-list traversed in non-reader section!");
          }
        }
    }
    {
      #line 1071 
      union __anonunion___u_7430 __u;
      #line 1070 
      __read_once_size((void *)(& ar->vif_list.next),(void *)(& __u.__c),8);
      #line 1070 
      __mptr = (void *)(__u.__val);
      }
    #line 1073 
    iter = ((struct carl9170_vif_info *)__mptr);
    #line 1070 
    while (& iter->list != & ar->vif_list) {
      #line 1070 
      void *__mptr_0;
      #line 1071 
      if ((int)iter->active != 0 && (int)iter->enable_beacon != 0) 
                                                                   #line 1072 
                                                                   i ++;
      {
        #line 1071 
        union __anonunion___u_7432 __u_0;
        #line 1070 
        __read_once_size((void *)(& iter->list.next),(void *)(& __u_0.__c),8);
        #line 1070 
        __mptr_0 = (void *)(__u_0.__val);
        }
      #line 1070 
      iter = ((struct carl9170_vif_info *)__mptr_0);
    }
    #line 1075 
    rcu_read_unlock();
    #line 1077 
    ar->beacon_enabled = (unsigned int)i;
  }
  #line 1080 
  if ((changed & 256U) != 0U) {
    #line 1081 
    err = carl9170_update_beacon(ar,(_Bool)0);
    #line 1082 
    if (err != 0) 
                  #line 1083 
                  goto out;
  }
  #line 1086 
  if ((changed & 832U) != 0U) {
    #line 1089 
    if (main_vif != vif) {
      #line 1090 
      bss_conf->beacon_int = main_vif->bss_conf.beacon_int;
      #line 1091 
      bss_conf->dtim_period = main_vif->bss_conf.dtim_period;
    }
    #line 1098 
    if (vif->type != (unsigned int)NL80211_IFTYPE_STATION && (int)bss_conf->beacon_int * (int)bss_conf->dtim_period > 2749) {
      #line 1101 
      err = -22;
      #line 1102 
      goto out;
    }
    #line 1105 
    err = carl9170_set_beacon_timers(ar);
    #line 1106 
    if (err != 0) 
                  #line 1107 
                  goto out;
  }
  #line 1110 
  if ((changed & 16U) != 0U) {
    #line 1112 
    err = 0;
    #line 1113 
    if (err != 0) 
                  #line 1114 
                  goto out;
  }
  #line 1117 
  if (main_vif != vif) 
                       #line 1118 
                       goto out;
  #line 1125 
  if ((changed & 128U) != 0U) {
    #line 1126 
    memcpy((void *)(& common->curbssid),(void *)bss_conf->bssid,6UL);
    #line 1127 
    err = carl9170_set_operating_mode(ar);
    #line 1128 
    if (err != 0) 
                  #line 1129 
                  goto out;
  }
  #line 1132 
  if ((changed & 1U) != 0U) {
    #line 1133 
    ar->common.curaid = bss_conf->aid;
    #line 1134 
    err = carl9170_set_beacon_timers(ar);
    #line 1135 
    if (err != 0) 
                  #line 1136 
                  goto out;
  }
  #line 1139 
  if ((changed & 8U) != 0U) {
    #line 1140 
    err = carl9170_set_slot_time(ar);
    #line 1141 
    if (err != 0) 
                  #line 1142 
                  goto out;
  }
  #line 1145 
  if ((changed & 32U) != 0U) {
    #line 1146 
    err = carl9170_set_mac_rates(ar);
    #line 1147 
    if (err != 0) 
                  #line 1148 
                  goto out;
  }
  #line 1151 
  out: 
       #line 1151 
  ;
  {
    #line 1152 
    int __ret_warn_on_0 = (err != 0 && ar->state > (unsigned int)CARL9170_IDLE) != 0;
    #line 1152 
    if ((long)(__ret_warn_on_0 != 0) != 0L) {
      #line 1153 
      ldv_inline_asm();
      #line 1154 
      ldv_inline_asm();
    }
    #line 1152 
    long tmp_6 = (long)(__ret_warn_on_0 != 0);
  }
  #line 1153 
  cif_mutex_unlock_mutex_of_ar9170_2(& ar->mutex);
  #line 1154 
  return;
}

#line 1156  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/main.c"
static u64 carl9170_op_get_tsf(struct ieee80211_hw *hw, struct ieee80211_vif *vif)
{
  #line 1167 
  int __ret_warn_on;
  #line 1160 
  struct carl9170_tsf_rsp tsf;
  #line 1161 
  int err;
  #line 1159 
  struct ar9170 *ar = (struct ar9170 *)hw->priv;
  #line 1163 
  cif_mutex_lock_mutex_of_ar9170_2(& ar->mutex);
  #line 1164 
  err = carl9170_exec_cmd(ar,(enum carl9170_cmd_oids)CARL9170_CMD_READ_TSF,0U,(void *)0,8U,(void *)(& tsf));
  #line 1166 
  cif_mutex_unlock_mutex_of_ar9170_2(& ar->mutex);
  #line 1167 
  __ret_warn_on = err != 0;
  #line 1167 
  if ((long)(__ret_warn_on != 0) != 0L) {
    #line 1168 
    ldv_inline_asm();
    #line 1169 
    ldv_inline_asm();
  }
  #line 1167 
  if ((long)((long)(__ret_warn_on != 0)) != 0L) 
                                                #line 1168 
                                                return 0ULL;
  #line 1170 
  return tsf.__anonCompField_carl9170_tsf_rsp_200.tsf_64;
}

#line 1173  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/main.c"
static int carl9170_op_set_key(struct ieee80211_hw *hw, enum set_key_cmd cmd, struct ieee80211_vif *vif, struct ieee80211_sta *sta, struct ieee80211_key_conf *key)
{
  #line 1179 
  int i;
  #line 1180 
  u8 ktype;
  #line 1178 
  struct ar9170 *ar = (struct ar9170 *)hw->priv;
  #line 1179 
  int err = 0;
  #line 1182 
  if ((int)ar->disable_offload != 0 || vif == (struct ieee80211_vif *)0) 
    #line 1183 
    return -95;
  #line 1192 
  if (! is_main_vif(ar,vif)) {
    #line 1193 
    cif_mutex_lock_mutex_of_ar9170_2(& ar->mutex);
    #line 1194 
    goto err_softw;
  }
  #line 1202 
  if ((unsigned int)vif->type + 4294967295U > 1U && ((int)key->flags & 8) == 0) 
    #line 1205 
    return -95;
  #line 1207 
  switch (key->cipher) {
    #line 1208 
    case (u32)1027073: 
                       #line 1208 
    ;
    #line 1209 
    ktype = (unsigned char)1U;
    #line 1210 
    break;
    #line 1211 
    case (u32)1027077: 
                       #line 1211 
    ;
    #line 1212 
    ktype = (unsigned char)5U;
    #line 1213 
    break;
    #line 1214 
    case (u32)1027074: 
                       #line 1214 
    ;
    #line 1215 
    ktype = (unsigned char)2U;
    #line 1216 
    break;
    #line 1217 
    case (u32)1027076: 
                       #line 1217 
    ;
    #line 1218 
    ktype = (unsigned char)4U;
    #line 1219 
    key->flags = (unsigned short)((unsigned int)key->flags | 16U);
    #line 1220 
    break;
    #line 1221 
    default: 
             #line 1221 
    ;
    #line 1222 
    return -95;
  }
  #line 1225 
  cif_mutex_lock_mutex_of_ar9170_2(& ar->mutex);
  #line 1226 
  if (cmd == (unsigned int)SET_KEY) {
    #line 1248 
    unsigned char __UNIQUE_ID___x581;
    #line 1248 
    int tmp_0;
    #line 1248 
    int tmp_1;
    #line 1246 
    u8 *tmp_2;
    #line 1227 
    if (ar->state <= (unsigned int)CARL9170_IDLE) {
      #line 1228 
      err = -95;
      #line 1229 
      goto out;
    }
    #line 1232 
    if (((int)key->flags & 8) == 0) {
      #line 1233 
      sta = (struct ieee80211_sta *)0;
      #line 1235 
      i = (int)key->keyidx + 64;
    }
    else {
      #line 1237 
      i = 0;
      #line 1237 
      while (i <= 63) {
        #line 1238 
        if ((ar->usedkeys & (unsigned long long)(1UL << i)) == 0ULL) 
          #line 1239 
          break;
        #line 1237 
        i ++;
      }
      #line 1240 
      if (i == 64) 
                   #line 1241 
                   goto err_softw;
    }
    #line 1244 
    key->hw_key_idx = (unsigned char)i;
    {
      #line 1248 
      __UNIQUE_ID___x581 = (unsigned char)16U;
      #line 1248 
      unsigned char __UNIQUE_ID___y582 = key->keylen;
      #line 1248 
      if ((int)__UNIQUE_ID___x581 < (int)__UNIQUE_ID___y582) 
                                                             #line 1248 
                                                             tmp_0 = (int)__UNIQUE_ID___x581; else 
                                                                    #line 1248 
                                                                    tmp_0 = (int)__UNIQUE_ID___y582;
      #line 1248 
      tmp_1 = tmp_0;
    }
    #line 1246 
    ;
    #line 1246 
    ;
    #line 1246 
    if (sta != (struct ieee80211_sta *)0) 
                                          #line 1246 
                                          tmp_2 = (u8 *)(& sta->addr); else 
                                                                    #line 1246 
                                                                    tmp_2 = (u8 *)0U;
    #line 1246 
    ;
    #line 1246 
    ;
    #line 1246 
    err = carl9170_upload_key(ar,(unsigned char)((int)((unsigned char)i)),tmp_2,(unsigned char)((int)ktype),(unsigned char)0,(u8 *)(& key->key),tmp_1);
    #line 1249 
    if (err != 0) 
                  #line 1250 
                  goto out;
    #line 1252 
    if (key->cipher == 1027074U) {
      #line 1253 
      u8 *tmp_3;
      #line 1253 
      ;
      #line 1253 
      ;
      #line 1253 
      if (sta != (struct ieee80211_sta *)0) 
                                            #line 1253 
                                            tmp_3 = (u8 *)(& sta->addr); else 
                                                                    #line 1253 
                                                                    tmp_3 = (u8 *)0U;
      #line 1253 
      ;
      #line 1253 
      ;
      #line 1253 
      err = carl9170_upload_key(ar,(unsigned char)((int)((unsigned char)i)),tmp_3,(unsigned char)((int)ktype),(unsigned char)1,(u8 *)(& key->key) + 16U,16);
      #line 1256 
      if (err != 0) 
                    #line 1257 
                    goto out;
      #line 1263 
      key->flags = (unsigned short)((unsigned int)key->flags | 4U);
    }
    #line 1266 
    if (i <= 63) 
                 #line 1267 
                 ar->usedkeys |= (unsigned long long)(1UL << i);
    #line 1269 
    key->flags = (unsigned short)((unsigned int)key->flags | 2U);
  }
  else {
    #line 1271 
    if (ar->state <= (unsigned int)CARL9170_IDLE) {
      #line 1273 
      err = 0;
      #line 1274 
      goto out;
    }
    #line 1277 
    if ((unsigned int)key->hw_key_idx <= 63U) 
                                              #line 1278 
                                              ar->usedkeys &= (unsigned long long)(~ (1UL << (int)key->hw_key_idx));
    else {
      #line 1280 
      err = carl9170_upload_key(ar,(unsigned char)((int)key->hw_key_idx),(u8 *)0U,(unsigned char)0,(unsigned char)0,(u8 *)0U,0);
      #line 1283 
      if (err != 0) 
                    #line 1284 
                    goto out;
      #line 1286 
      if (key->cipher == 1027074U) {
        #line 1287 
        err = carl9170_upload_key(ar,(unsigned char)((int)key->hw_key_idx),(u8 *)0U,(unsigned char)0,(unsigned char)1,(u8 *)0U,0);
        #line 1291 
        if (err != 0) 
                      #line 1292 
                      goto out;
      }
    }
    #line 1297 
    err = carl9170_disable_key(ar,(unsigned char)((int)key->hw_key_idx));
    #line 1298 
    if (err != 0) 
                  #line 1299 
                  goto out;
  }
  #line 1302 
  out: 
       #line 1302 
  ;
  #line 1303 
  cif_mutex_unlock_mutex_of_ar9170_2(& ar->mutex);
  #line 1304 
  return err;
  #line 1306 
  err_softw: 
             #line 1306 
  ;
  #line 1307 
  if (! ar->rx_software_decryption) {
    #line 1308 
    ar->rx_software_decryption = (_Bool)1;
    #line 1309 
    carl9170_set_operating_mode(ar);
  }
  #line 1311 
  cif_mutex_unlock_mutex_of_ar9170_2(& ar->mutex);
  #line 1312 
  return -28;
}

#line 1315  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/main.c"
static int carl9170_op_sta_add(struct ieee80211_hw *hw, struct ieee80211_vif *vif, struct ieee80211_sta *sta)
{
  #line 1320 
  unsigned int i;
  #line 1319 
  struct carl9170_sta_info *sta_info = (struct carl9170_sta_info *)(& sta->drv_priv);
  #line 1322 
  atomic_set_1(& sta_info->pending_frames,0);
  #line 1324 
  if ((int)sta->ht_cap.ht_supported != 0) {
    #line 1325 
    if ((unsigned int)sta->ht_cap.ampdu_density > 6U) 
                                                      #line 1331 
                                                      return 0;
    #line 1334 
    i = 0U;
    #line 1334 
    while (i <= 15U) {
      {
        #line 1336 
        union __anonunion___u_7435 __u = {.__val = (struct carl9170_sta_tid *)0};
        #line 1335 
        __write_once_size((void *)(& sta_info->agg[i]),(void *)(& __u.__c),8);
        #line 1335 
        struct carl9170_sta_tid *tmp = __u.__val;
      }
      #line 1334 
      i ++;
    }
    #line 1337 
    sta_info->ampdu_max_len = (unsigned int)(1 << ((int)sta->ht_cap.ampdu_factor + 3));
    #line 1338 
    sta_info->ht_sta = (_Bool)1;
  }
  #line 1341 
  return 0;
}

#line 1344  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/main.c"
static int carl9170_op_sta_remove(struct ieee80211_hw *hw, struct ieee80211_vif *vif, struct ieee80211_sta *sta)
{
  #line 1350 
  unsigned int i;
  #line 1348 
  struct ar9170 *ar = (struct ar9170 *)hw->priv;
  #line 1349 
  struct carl9170_sta_info *sta_info = (struct carl9170_sta_info *)(& sta->drv_priv);
  #line 1351 
  bool cleanup = (_Bool)0;
  #line 1353 
  if ((int)sta->ht_cap.ht_supported != 0) {
    #line 1355 
    sta_info->ht_sta = (_Bool)0;
    #line 1357 
    rcu_read_lock();
    #line 1358 
    i = 0U;
    #line 1358 
    while (i <= 15U) {
      {
        #line 1361 
        struct carl9170_sta_tid *________p1;
        #line 1359 
        struct carl9170_sta_tid *tid_info;
        {
          #line 1362 
          union __anonunion___u_7438 __u;
          #line 1361 
          __read_once_size((void *)(& sta_info->agg[i]),(void *)(& __u.__c),8);
          #line 1361 
          ________p1 = (__u.__val);
          {
            #line 1361 
            bool __warned;
            #line 1361 
            if (debug_lockdep_rcu_enabled() != 0) 
              #line 1361 
              if (! __warned) {
                #line 1361 
                if (rcu_read_lock_held() == 0) {
                  #line 1361 
                  __warned = (_Bool)1;
                  #line 1361 
                  lockdep_rcu_suspicious((char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/main.c",1361,(char *)"suspicious rcu_dereference_check() usage");
                }
              }
          }
          }
        #line 1361 
        tid_info = ________p1;
        {
          #line 1363 
          union __anonunion___u_7440 __u_0 = {.__val = (struct carl9170_sta_tid *)0};
          #line 1362 
          __write_once_size((void *)(& sta_info->agg[i]),(void *)(& __u_0.__c),8);
          #line 1362 
          struct carl9170_sta_tid *tmp_3 = __u_0.__val;
        }
        #line 1364 
        if (tid_info == (struct carl9170_sta_tid *)0) 
                                                      #line 1365 
                                                      goto __Cont;
        #line 1367 
        cif_spin_lock_bh_tx_ampdu_list_lock_of_ar9170(& ar->tx_ampdu_list_lock);
        #line 1368 
        if (tid_info->state > (unsigned int)CARL9170_TID_STATE_SHUTDOWN) 
          #line 1369 
          tid_info->state = CARL9170_TID_STATE_SHUTDOWN;
        #line 1370 
        cif_spin_unlock_bh_tx_ampdu_list_lock_of_ar9170(& ar->tx_ampdu_list_lock);
        #line 1371 
        cleanup = (_Bool)1;
      }
      #line 1358 
      __Cont: 
              #line 1358 
      i ++;
    }
    #line 1373 
    rcu_read_unlock();
    #line 1375 
    if ((int)cleanup != 0) 
                           #line 1376 
                           carl9170_ampdu_gc(ar);
  }
  #line 1379 
  return 0;
}

#line 1382  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/main.c"
static int carl9170_op_conf_tx(struct ieee80211_hw *hw, struct ieee80211_vif *vif, u16 queue, struct ieee80211_tx_queue_params *param)
{
  #line 1387 
  int ret;
  #line 1386 
  struct ar9170 *ar = (struct ar9170 *)hw->priv;
  #line 1389 
  cif_mutex_lock_mutex_of_ar9170_2(& ar->mutex);
  #line 1390 
  memcpy((void *)(& ar->edcf[(int)ar9170_qmap_0[(int)queue]]),(void *)param,14UL);
  #line 1391 
  ret = carl9170_set_qos(ar);
  #line 1392 
  cif_mutex_unlock_mutex_of_ar9170_2(& ar->mutex);
  #line 1393 
  return ret;
}

#line 1396  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/main.c"
static void carl9170_ampdu_work(struct work_struct *work)
{
  #line 1398 
  void *__mptr;
  #line 1398 
  __mptr = (void *)work;
  #line 1398 
  struct ar9170 *ar = ((struct ar9170 *)(__mptr + 18446744073709542472U));
  #line 1401 
  if (ar->state <= (unsigned int)CARL9170_IDLE) 
                                                #line 1402 
                                                return;
  #line 1404 
  cif_mutex_lock_mutex_of_ar9170_2(& ar->mutex);
  #line 1405 
  carl9170_ampdu_gc(ar);
  #line 1406 
  cif_mutex_unlock_mutex_of_ar9170_2(& ar->mutex);
  #line 1407 
  return;
}

#line 1409  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/main.c"
static int carl9170_op_ampdu_action(struct ieee80211_hw *hw, struct ieee80211_vif *vif, struct ieee80211_ampdu_params *params)
{
  #line 1419 
  struct carl9170_sta_tid *tid_info;
  #line 1413 
  struct ieee80211_sta *sta = params->sta;
  #line 1414 
  enum ieee80211_ampdu_mlme_action action = params->action;
  #line 1415 
  u16 tid = params->tid;
  #line 1416 
  u16 *ssn = & params->ssn;
  #line 1417 
  struct ar9170 *ar = (struct ar9170 *)hw->priv;
  #line 1418 
  struct carl9170_sta_info *sta_info = (struct carl9170_sta_info *)(& sta->drv_priv);
  #line 1421 
  if (modparam_noht != 0) 
                          #line 1422 
                          return -95;
  #line 1424 
  switch ((unsigned int)action) {
    #line 1458 
    struct carl9170_sta_tid *________p1;
    #line 1486 
    int __ret_warn_on;
    #line 1475 
    struct carl9170_sta_tid *________p1_0;
    #line 1425 
    case (unsigned int)2: 
                          #line 1425 
    ;
    #line 1426 
    if (! sta_info->ht_sta) 
                            #line 1427 
                            return -95;
    #line 1429 
    tid_info = (struct carl9170_sta_tid *)kzalloc_0(256UL,2592U);
    #line 1431 
    if (tid_info == (struct carl9170_sta_tid *)0) 
                                                  #line 1432 
                                                  return -12;
    #line 1434 
    tid_info->snx = (*ssn);
    #line 1434 
    tid_info->bsn = (*ssn);
    #line 1434 
    tid_info->hsn = (*ssn);
    #line 1435 
    tid_info->state = CARL9170_TID_STATE_PROGRESS;
    #line 1436 
    tid_info->tid = (unsigned char)tid;
    #line 1437 
    tid_info->max = (unsigned short)sta_info->ampdu_max_len;
    #line 1438 
    tid_info->sta = sta;
    #line 1439 
    tid_info->vif = vif;
    #line 1441 
    INIT_LIST_HEAD_1(& tid_info->list);
    #line 1442 
    INIT_LIST_HEAD_1(& tid_info->tmp_list);
    #line 1443 
    skb_queue_head_init(& tid_info->queue);
    #line 1444 
    spinlock_check(& tid_info->lock);
    {
      #line 1444 
      struct lock_class_key __key;
      #line 1444 
      __raw_spin_lock_init(& tid_info->lock.__anonCompField_spinlock_25.rlock,(char *)"&(&tid_info->lock)->rlock",& __key);
    }
    #line 1446 
    cif_spin_lock_bh_tx_ampdu_list_lock_of_ar9170(& ar->tx_ampdu_list_lock);
    #line 1447 
    (ar->tx_ampdu_list_len) ++;
    #line 1448 
    list_add_tail_rcu_0(& tid_info->list,& ar->tx_ampdu_list);
    {
      #line 1449 
      uintptr_t _r_a_p__v = (unsigned long)tid_info;
      #line 1451 
      ldv_inline_asm();
      {
        #line 1450 
        union __anonunion___u_7444 __u = {.__val = (struct carl9170_sta_tid *)_r_a_p__v};
        #line 1449 
        __write_once_size((void *)(& sta_info->agg[(int)tid]),(void *)(& __u.__c),8);
        #line 1449 
        struct carl9170_sta_tid *tmp_4 = __u.__val;
      }
    }
    #line 1450 
    cif_spin_unlock_bh_tx_ampdu_list_lock_of_ar9170(& ar->tx_ampdu_list_lock);
    #line 1452 
    return 1;
    #line 1454 
    case (unsigned int)3: 
                          #line 1454 
    ;
    #line 1455 
    case (unsigned int)4: 
                          #line 1455 
    ;
    #line 1456 
    case (unsigned int)5: 
                          #line 1456 
    ;
    #line 1457 
    rcu_read_lock();
    {
      #line 1459 
      union __anonunion___u_7446 __u_0;
      #line 1458 
      __read_once_size((void *)(& sta_info->agg[(int)tid]),(void *)(& __u_0.__c),8);
      #line 1458 
      ________p1 = (__u_0.__val);
      {
        #line 1458 
        bool __warned;
        #line 1458 
        if (debug_lockdep_rcu_enabled() != 0) 
          #line 1458 
          if (! __warned) {
            #line 1458 
            if (rcu_read_lock_held() == 0) {
              #line 1458 
              __warned = (_Bool)1;
              #line 1458 
              lockdep_rcu_suspicious((char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/main.c",1458,(char *)"suspicious rcu_dereference_check() usage");
            }
          }
      }
      }
    #line 1458 
    tid_info = ________p1;
    #line 1459 
    if (tid_info != (struct carl9170_sta_tid *)0) {
      #line 1460 
      cif_spin_lock_bh_tx_ampdu_list_lock_of_ar9170(& ar->tx_ampdu_list_lock);
      #line 1461 
      if (tid_info->state > (unsigned int)CARL9170_TID_STATE_SHUTDOWN) 
        #line 1462 
        tid_info->state = CARL9170_TID_STATE_SHUTDOWN;
      #line 1463 
      cif_spin_unlock_bh_tx_ampdu_list_lock_of_ar9170(& ar->tx_ampdu_list_lock);
    }
    {
      #line 1467 
      union __anonunion___u_7448 __u_1 = {.__val = (struct carl9170_sta_tid *)0};
      #line 1466 
      __write_once_size((void *)(& sta_info->agg[(int)tid]),(void *)(& __u_1.__c),8);
      #line 1466 
      struct carl9170_sta_tid *tmp_6 = __u_1.__val;
    }
    #line 1467 
    rcu_read_unlock();
    #line 1469 
    ieee80211_stop_tx_ba_cb_irqsafe(vif,(u8 *)(& sta->addr),(unsigned short)((int)tid));
    #line 1470 
    ieee80211_queue_work(ar->hw,& ar->ampdu_work);
    #line 1471 
    break;
    #line 1473 
    case (unsigned int)6: 
                          #line 1473 
    ;
    #line 1474 
    rcu_read_lock();
    {
      #line 1476 
      union __anonunion___u_7450 __u_2;
      #line 1475 
      __read_once_size((void *)(& sta_info->agg[(int)tid]),(void *)(& __u_2.__c),8);
      #line 1475 
      ________p1_0 = (__u_2.__val);
      {
        #line 1475 
        bool __warned_0;
        #line 1475 
        if (debug_lockdep_rcu_enabled() != 0) 
          #line 1475 
          if (! __warned_0) {
            #line 1475 
            if (rcu_read_lock_held() == 0) {
              #line 1475 
              __warned_0 = (_Bool)1;
              #line 1475 
              lockdep_rcu_suspicious((char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/main.c",1475,(char *)"suspicious rcu_dereference_check() usage");
            }
          }
      }
      }
    #line 1475 
    tid_info = ________p1_0;
    #line 1477 
    sta_info->stats[(int)tid].clear = (_Bool)1;
    #line 1478 
    sta_info->stats[(int)tid].req = (_Bool)0;
    #line 1480 
    if (tid_info != (struct carl9170_sta_tid *)0) {
      #line 1481 
      cif_bitmap_zero((unsigned long *)(& tid_info->bitmap),2U);
      #line 1482 
      tid_info->state = CARL9170_TID_STATE_IDLE;
    }
    #line 1484 
    rcu_read_unlock();
    #line 1486 
    __ret_warn_on = tid_info == (struct carl9170_sta_tid *)0;
    #line 1486 
    if ((long)(__ret_warn_on != 0) != 0L) {
      #line 1487 
      ldv_inline_asm();
      #line 1488 
      ldv_inline_asm();
    }
    #line 1486 
    if ((long)((long)(__ret_warn_on != 0)) != 0L) 
                                                  #line 1487 
                                                  return -14;
    #line 1489 
    break;
    #line 1491 
    case (unsigned int)0: 
                          #line 1491 
    ;
    #line 1492 
    case (unsigned int)1: 
                          #line 1492 
    ;
    #line 1494 
    break;
    #line 1496 
    default: 
             #line 1496 
    ;
    #line 1497 
    return -95;
  }
  #line 1500 
  return 0;
}

#line 1504  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/main.c"
static int carl9170_register_wps_button(struct ar9170 *ar)
{
  #line 1506 
  struct input_dev *input;
  #line 1507 
  int err;
  #line 1509 
  if ((ar->features & 1UL) == 0UL) 
                                   #line 1510 
                                   return 0;
  #line 1512 
  input = input_allocate_device();
  #line 1513 
  if (input == (struct input_dev *)0) 
                                      #line 1514 
                                      return -12;
  #line 1516 
  ;
  #line 1516 
  snprintf((char *)(& ar->wps.name),32UL,(char *)"%s WPS Button",wiphy_name((ar->hw)->wiphy));
  #line 1519 
  ;
  #line 1519 
  snprintf((char *)(& ar->wps.phys),32UL,(char *)"ieee80211/%s/input0",wiphy_name((ar->hw)->wiphy));
  #line 1522 
  input->name = (char *)(& ar->wps.name);
  #line 1523 
  input->phys = (char *)(& ar->wps.phys);
  #line 1524 
  input->id.bustype = (unsigned short)3U;
  #line 1525 
  input->dev.parent = & ((ar->hw)->wiphy)->dev;
  #line 1527 
  input_set_capability(input,1U,529U);
  #line 1529 
  err = input_register_device(input);
  #line 1530 
  if (err != 0) {
    #line 1531 
    input_free_device(input);
    #line 1532 
    return err;
  }
  #line 1535 
  ar->wps.pbc = input;
  #line 1536 
  return 0;
}

#line 1541  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/main.c"
static int carl9170_rng_get(struct ar9170 *ar)
{
  #line 1550 
  u32 buf[15U];
  #line 1552 
  unsigned int i;
  #line 1552 
  unsigned int transfer;
  #line 1552 
  unsigned int count;
  #line 1553 
  int err;
  #line 1547 
  __le32 rng_load[15U] = {1900544U, 1900544U, 1900544U, 1900544U, 1900544U, 1900544U, 1900544U, 1900544U, 1900544U, 1900544U, 1900544U, 1900544U, 1900544U, 1900544U, 1900544U};
  #line 1552 
  unsigned int off = 0U;
  #line 1557 
  if (ar->state <= (unsigned int)CARL9170_STOPPED || ! ar->rng.initialized) 
    #line 1558 
    return -11;
  #line 1560 
  count = 30U;
  #line 1561 
  while (count != 0U) {
    #line 1568 
    unsigned int tmp;
    #line 1568 
    unsigned int __UNIQUE_ID___x584;
    #line 1562 
    err = carl9170_exec_cmd(ar,(enum carl9170_cmd_oids)CARL9170_CMD_RREG,60U,(void *)(& rng_load),60U,(void *)(& buf));
    #line 1565 
    if (err != 0) 
                  #line 1566 
                  return err;
    {
      #line 1568 
      __UNIQUE_ID___x584 = count;
      #line 1568 
      unsigned int __UNIQUE_ID___y585 = 15U;
      #line 1568 
      if (__UNIQUE_ID___x584 < __UNIQUE_ID___y585) 
                                                   #line 1568 
                                                   tmp = __UNIQUE_ID___x584; else 
                                                                    #line 1568 
                                                                    tmp = __UNIQUE_ID___y585;
      }
    #line 1568 
    transfer = tmp;
    #line 1569 
    i = 0U;
    #line 1569 
    while (i < transfer) {
      #line 1570 
      ar->rng.cache[off + i] = (unsigned short)buf[i];
      #line 1569 
      i ++;
    }
    #line 1572 
    off += transfer;
    #line 1573 
    count -= transfer;
  }
  #line 1576 
  ar->rng.cache_idx = 0U;
  #line 1580 
  return 0;
}

#line 1583  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/main.c"
static int carl9170_rng_read(struct hwrng *rng, u32 *data)
{
  #line 1597 
  unsigned int tmp;
  #line 1585 
  struct ar9170 *ar = (struct ar9170 *)rng->priv;
  #line 1586 
  int ret = -5;
  #line 1588 
  cif_mutex_lock_mutex_of_ar9170_2(& ar->mutex);
  #line 1589 
  if (ar->rng.cache_idx > 29U) {
    #line 1590 
    ret = carl9170_rng_get(ar);
    #line 1591 
    if (ret != 0) {
      #line 1592 
      cif_mutex_unlock_mutex_of_ar9170_2(& ar->mutex);
      #line 1593 
      return ret;
    }
  }
  #line 1597 
  tmp = ar->rng.cache_idx;
  #line 1597 
  (ar->rng.cache_idx) ++;
  #line 1597 
  *data = (unsigned int)ar->rng.cache[tmp];
  #line 1598 
  cif_mutex_unlock_mutex_of_ar9170_2(& ar->mutex);
  #line 1600 
  return 2;
}

#line 1603  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/main.c"
static void carl9170_unregister_hwrng(struct ar9170 *ar)
{
  #line 1605 
  if ((int)ar->rng.initialized != 0) {
    #line 1606 
    hwrng_unregister(& ar->rng.rng);
    #line 1607 
    ar->rng.initialized = (_Bool)0;
  }
  #line 1609 
  return;
}

#line 1611  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/main.c"
static int carl9170_register_hwrng(struct ar9170 *ar)
{
  #line 1621 
  int __ret_warn_on;
  #line 1613 
  int err;
  #line 1615 
  ;
  #line 1615 
  snprintf((char *)(& ar->rng.name),31UL,(char *)"%s_%s",(char *)"carl9170",wiphy_name((ar->hw)->wiphy));
  #line 1617 
  ar->rng.rng.name = (char *)(& ar->rng.name);
  #line 1618 
  ar->rng.rng.data_read = & carl9170_rng_read;
  #line 1619 
  ar->rng.rng.priv = (unsigned long)ar;
  #line 1621 
  __ret_warn_on = (int)ar->rng.initialized != 0;
  #line 1621 
  if ((long)(__ret_warn_on != 0) != 0L) {
    #line 1622 
    ldv_inline_asm();
    #line 1623 
    ldv_inline_asm();
  }
  #line 1621 
  if ((long)((long)(__ret_warn_on != 0)) != 0L) 
                                                #line 1622 
                                                return -114;
  #line 1624 
  err = hwrng_register(& ar->rng.rng);
  #line 1625 
  if (err != 0) {
    #line 1626 
    _dev_err(& (ar->udev)->dev,(char *)"Failed to register the random ",err);
    #line 1628 
    return err;
  }
  #line 1631 
  ar->rng.initialized = (_Bool)1;
  #line 1633 
  err = carl9170_rng_get(ar);
  #line 1634 
  if (err != 0) {
    #line 1635 
    carl9170_unregister_hwrng(ar);
    #line 1636 
    return err;
  }
  #line 1639 
  return 0;
}

#line 1643  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/main.c"
static int carl9170_op_get_survey(struct ieee80211_hw *hw, int idx, struct survey_info *survey)
{
  #line 1647 
  struct ieee80211_channel *chan;
  #line 1648 
  struct ieee80211_supported_band *band;
  #line 1649 
  int err;
  #line 1649 
  int b;
  #line 1649 
  int i;
  #line 1646 
  struct ar9170 *ar = (struct ar9170 *)hw->priv;
  #line 1651 
  chan = ar->channel;
  #line 1652 
  if (chan == (struct ieee80211_channel *)0) 
                                             #line 1653 
                                             return -19;
  #line 1655 
  if ((int)chan->hw_value == idx) {
    #line 1656 
    cif_mutex_lock_mutex_of_ar9170_2(& ar->mutex);
    #line 1657 
    err = carl9170_update_survey(ar,(_Bool)0,(_Bool)1);
    #line 1658 
    cif_mutex_unlock_mutex_of_ar9170_2(& ar->mutex);
    #line 1659 
    if (err != 0) 
                  #line 1660 
                  return err;
  }
  #line 1663 
  b = 0;
  #line 1663 
  while (b <= 3) {
    #line 1664 
    band = ((ar->hw)->wiphy)->bands[b];
    #line 1666 
    if (band == (struct ieee80211_supported_band *)0) 
                                                      #line 1667 
                                                      goto __Cont;
    #line 1669 
    i = 0;
    #line 1669 
    while (band->n_channels > i) {
      #line 1670 
      if ((int)(band->channels + (unsigned long)i)->hw_value == idx) {
        #line 1671 
        chan = band->channels + (unsigned long)i;
        #line 1672 
        goto found;
      }
      #line 1669 
      i ++;
    }
    #line 1663 
    __Cont: 
            #line 1663 
    b ++;
  }
  #line 1676 
  return -2;
  #line 1678 
  found: 
         #line 1678 
  ;
  #line 1679 
  memcpy((void *)survey,(void *)(ar->survey + (unsigned long)idx),72UL);
  #line 1681 
  survey->channel = chan;
  #line 1682 
  survey->filled = 1U;
  #line 1684 
  if (ar->channel == chan) 
                           #line 1685 
                           survey->filled |= 2U;
  #line 1687 
  if ((int)ar->fw.hw_counters != 0) 
                                    #line 1688 
                                    survey->filled |= 76U;
  #line 1693 
  return 0;
}

#line 1696  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/main.c"
static void carl9170_op_flush(struct ieee80211_hw *hw, struct ieee80211_vif *vif, u32 queues, bool drop)
{
  #line 1701 
  unsigned int vid;
  #line 1700 
  struct ar9170 *ar = (struct ar9170 *)hw->priv;
  #line 1703 
  cif_mutex_lock_mutex_of_ar9170_2(& ar->mutex);
  #line 1704 
  vid = (unsigned int)cif_find_first_bit_0(& ar->vif_bitmap,(unsigned long)ar->fw.vif_num);
  #line 1704 
  while (ar->fw.vif_num > vid) {
    #line 1705 
    carl9170_flush_cab(ar,vid);
    #line 1704 
    vid = (unsigned int)cif_find_next_bit(& ar->vif_bitmap,(unsigned long)ar->fw.vif_num,
                          (unsigned long)(vid + 1U));
  }
  #line 1707 
  carl9170_flush(ar,(_Bool)((bool)((int)drop) != 0));
  #line 1708 
  cif_mutex_unlock_mutex_of_ar9170_2(& ar->mutex);
  #line 1709 
  return;
}

#line 1711  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/main.c"
static int carl9170_op_get_stats(struct ieee80211_hw *hw, struct ieee80211_low_level_stats *stats)
{
  #line 1714 
  struct ar9170 *ar = (struct ar9170 *)hw->priv;
  #line 1716 
  memset((void *)stats,0,16UL);
  #line 1717 
  stats->dot11ACKFailureCount = ar->tx_ack_failures;
  #line 1718 
  stats->dot11FCSErrorCount = ar->tx_fcs_errors;
  #line 1719 
  return 0;
}

#line 1722  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/main.c"
static void carl9170_op_sta_notify(struct ieee80211_hw *hw, struct ieee80211_vif *vif, enum sta_notify_cmd cmd, struct ieee80211_sta *sta)
{
  #line 1727 
  struct carl9170_sta_info *sta_info = (struct carl9170_sta_info *)(& sta->drv_priv);
  #line 1729 
  switch ((unsigned int)cmd) {
    #line 1730 
    case (unsigned int)0: 
                          #line 1730 
    ;
    #line 1731 
    sta_info->sleeping = (_Bool)1;
    #line 1732 
    if (atomic_read_2(& sta_info->pending_frames) != 0) 
                                                        #line 1733 
                                                        ieee80211_sta_block_awake(hw,sta,(_Bool)1);
    #line 1734 
    break;
    #line 1736 
    case (unsigned int)1: 
                          #line 1736 
    ;
    #line 1737 
    sta_info->sleeping = (_Bool)0;
    #line 1738 
    break;
  }
  #line 1740 
  return;
}

#line 1742  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/main.c"
static bool carl9170_tx_frames_pending(struct ieee80211_hw *hw)
{
  #line 1744 
  struct ar9170 *ar = (struct ar9170 *)hw->priv;
  #line 1746 
  return (_Bool)(atomic_read_2(& ar->tx_total_queued) != 0);
}

#line 1749  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/main.c"
static struct ieee80211_ops carl9170_ops = {.tx = & carl9170_op_tx, .start = & carl9170_op_start, .stop = & carl9170_op_stop, .add_interface = & carl9170_op_add_interface, .remove_interface = & carl9170_op_remove_interface, .config = & carl9170_op_config, .bss_info_changed = & carl9170_op_bss_info_changed, .prepare_multicast = & carl9170_op_prepare_multicast, .configure_filter = & carl9170_op_configure_filter, .set_key = & carl9170_op_set_key, .get_stats = & carl9170_op_get_stats, .sta_add = & carl9170_op_sta_add, .sta_remove = & carl9170_op_sta_remove, .sta_notify = & carl9170_op_sta_notify, .conf_tx = & carl9170_op_conf_tx, .get_tsf = & carl9170_op_get_tsf, .ampdu_action = & carl9170_op_ampdu_action, .get_survey = & carl9170_op_get_survey, .flush = & carl9170_op_flush, .tx_frames_pending = & carl9170_tx_frames_pending};
#line 1772  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/main.c"
void *carl9170_alloc(size_t priv_size)
{
  #line 1774 
  struct ieee80211_hw *hw;
  #line 1775 
  struct ar9170 *ar;
  #line 1776 
  struct sk_buff *skb;
  #line 1777 
  int i;
  #line 1785 
  skb = __dev_alloc_skb(65535U,3264U);
  #line 1786 
  if (skb == (struct sk_buff *)0) 
                                  #line 1787 
                                  goto err_nomem;
  #line 1789 
  hw = cif_ieee80211_alloc_hw(priv_size,& carl9170_ops);
  #line 1790 
  if (hw == (struct ieee80211_hw *)0) 
                                      #line 1791 
                                      goto err_nomem;
  #line 1793 
  ar = (struct ar9170 *)hw->priv;
  #line 1794 
  ar->hw = hw;
  #line 1795 
  ar->rx_failover = skb;
  #line 1797 
  memset((void *)(& ar->rx_plcp),0,12UL);
  #line 1798 
  ar->rx_has_plcp = (_Bool)0;
  #line 1808 
  hw->queues = (unsigned short)4U;
  {
    #line 1810 
    struct lock_class_key __key;
    #line 1810 
    __mutex_init(& ar->mutex,(char *)"&ar->mutex",& __key);
  }
  #line 1811 
  spinlock_check(& ar->beacon_lock);
  {
    #line 1811 
    struct lock_class_key __key_0;
    #line 1811 
    __raw_spin_lock_init(& ar->beacon_lock.__anonCompField_spinlock_25.rlock,(char *)"&(&ar->beacon_lock)->rlock",& __key_0);
  }
  #line 1812 
  spinlock_check(& ar->cmd_lock);
  {
    #line 1812 
    struct lock_class_key __key_1;
    #line 1812 
    __raw_spin_lock_init(& ar->cmd_lock.__anonCompField_spinlock_25.rlock,(char *)"&(&ar->cmd_lock)->rlock",& __key_1);
  }
  #line 1813 
  spinlock_check(& ar->tx_stats_lock);
  {
    #line 1813 
    struct lock_class_key __key_2;
    #line 1813 
    __raw_spin_lock_init(& ar->tx_stats_lock.__anonCompField_spinlock_25.rlock,(char *)"&(&ar->tx_stats_lock)->rlock",& __key_2);
  }
  #line 1814 
  spinlock_check(& ar->tx_ampdu_list_lock);
  {
    #line 1814 
    struct lock_class_key __key_3;
    #line 1814 
    __raw_spin_lock_init(& ar->tx_ampdu_list_lock.__anonCompField_spinlock_25.rlock,(char *)"&(&ar->tx_ampdu_list_lock)->rlock",& __key_3);
  }
  #line 1815 
  spinlock_check(& ar->mem_lock);
  {
    #line 1815 
    struct lock_class_key __key_4;
    #line 1815 
    __raw_spin_lock_init(& ar->mem_lock.__anonCompField_spinlock_25.rlock,(char *)"&(&ar->mem_lock)->rlock",& __key_4);
  }
  #line 1816 
  spinlock_check(& ar->state_lock);
  {
    #line 1816 
    struct lock_class_key __key_5;
    #line 1816 
    __raw_spin_lock_init(& ar->state_lock.__anonCompField_spinlock_25.rlock,(char *)"&(&ar->state_lock)->rlock",& __key_5);
  }
  #line 1817 
  atomic_set_1(& ar->pending_restarts,0);
  #line 1818 
  ar->vifs = 0U;
  #line 1819 
  i = 0;
  #line 1819 
  while ((int)(ar->hw)->queues > i) {
    #line 1820 
    skb_queue_head_init(& ar->tx_status[i]);
    #line 1821 
    skb_queue_head_init(& ar->tx_pending[i]);
    #line 1823 
    INIT_LIST_HEAD_1(& ar->bar_list[i]);
    #line 1824 
    spinlock_check(& ar->bar_list_lock[i]);
    {
      #line 1824 
      struct lock_class_key __key_6;
      #line 1824 
      __raw_spin_lock_init(& ar->bar_list_lock[i].__anonCompField_spinlock_25.rlock,(char *)"&(&ar->bar_list_lock[i])->rlock",& __key_6);
    }
    #line 1819 
    i ++;
  }
  {
    #line 1826 
    struct lock_class_key __key_7;
    #line 1826 
    __init_work(& ar->ps_work,0);
    #line 1826 
    atomic_long_t __constr_expr_41 = {.counter = 137438953408LL};
    #line 1826 
    ar->ps_work.data = __constr_expr_41;
    #line 1826 
    lockdep_init_map(& ar->ps_work.lockdep_map,(char *)"(work_completion)",& __key_7,0);
    #line 1826 
    INIT_LIST_HEAD_1(& ar->ps_work.entry);
    #line 1826 
    ar->ps_work.func = & carl9170_ps_work;
  }
  {
    #line 1827 
    struct lock_class_key __key_8;
    #line 1827 
    __init_work(& ar->ping_work,0);
    #line 1827 
    atomic_long_t __constr_expr_42 = {.counter = 137438953408LL};
    #line 1827 
    ar->ping_work.data = __constr_expr_42;
    #line 1827 
    lockdep_init_map(& ar->ping_work.lockdep_map,(char *)"(work_completion)",& __key_8,0);
    #line 1827 
    INIT_LIST_HEAD_1(& ar->ping_work.entry);
    #line 1827 
    ar->ping_work.func = & carl9170_ping_work;
  }
  {
    #line 1828 
    struct lock_class_key __key_9;
    #line 1828 
    __init_work(& ar->restart_work,0);
    #line 1828 
    atomic_long_t __constr_expr_43 = {.counter = 137438953408LL};
    #line 1828 
    ar->restart_work.data = __constr_expr_43;
    #line 1828 
    lockdep_init_map(& ar->restart_work.lockdep_map,(char *)"(work_completion)",& __key_9,0);
    #line 1828 
    INIT_LIST_HEAD_1(& ar->restart_work.entry);
    #line 1828 
    ar->restart_work.func = & carl9170_restart_work;
  }
  {
    #line 1829 
    struct lock_class_key __key_10;
    #line 1829 
    __init_work(& ar->ampdu_work,0);
    #line 1829 
    atomic_long_t __constr_expr_44 = {.counter = 137438953408LL};
    #line 1829 
    ar->ampdu_work.data = __constr_expr_44;
    #line 1829 
    lockdep_init_map(& ar->ampdu_work.lockdep_map,(char *)"(work_completion)",& __key_10,0);
    #line 1829 
    INIT_LIST_HEAD_1(& ar->ampdu_work.entry);
    #line 1829 
    ar->ampdu_work.func = & carl9170_ampdu_work;
  }
  {
    #line 1830 
    struct lock_class_key __key_11;
    #line 1830 
    __init_work(& ar->stat_work.work,0);
    #line 1830 
    atomic_long_t __constr_expr_45 = {.counter = 137438953408LL};
    #line 1830 
    ar->stat_work.work.data = __constr_expr_45;
    #line 1830 
    lockdep_init_map(& ar->stat_work.work.lockdep_map,(char *)"(work_completion)",& __key_11,0);
    #line 1830 
    INIT_LIST_HEAD_1(& ar->stat_work.work.entry);
    #line 1830 
    ar->stat_work.work.func = & carl9170_stat_work;
  }
  {
    #line 1830 
    struct lock_class_key __key_12;
    #line 1830 
    init_timer_key(& ar->stat_work.timer,& delayed_work_timer_fn,2097152U,(char *)"&(&ar->stat_work)->timer",& __key_12);
  }
  {
    #line 1831 
    struct lock_class_key __key_13;
    #line 1831 
    __init_work(& ar->tx_janitor.work,0);
    #line 1831 
    atomic_long_t __constr_expr_46 = {.counter = 137438953408LL};
    #line 1831 
    ar->tx_janitor.work.data = __constr_expr_46;
    #line 1831 
    lockdep_init_map(& ar->tx_janitor.work.lockdep_map,(char *)"(work_completion)",& __key_13,0);
    #line 1831 
    INIT_LIST_HEAD_1(& ar->tx_janitor.work.entry);
    #line 1831 
    ar->tx_janitor.work.func = & carl9170_tx_janitor;
  }
  {
    #line 1831 
    struct lock_class_key __key_14;
    #line 1831 
    init_timer_key(& ar->tx_janitor.timer,& delayed_work_timer_fn,2097152U,(char *)"&(&ar->tx_janitor)->timer",& __key_14);
  }
  #line 1832 
  INIT_LIST_HEAD_1(& ar->tx_ampdu_list);
  {
    #line 1833 
    uintptr_t _r_a_p__v = (unsigned long)(& ar->tx_ampdu_list);
    #line 1835 
    ldv_inline_asm();
    {
      #line 1834 
      union __anonunion___u_7458 __u = {.__val = (struct carl9170_sta_tid *)_r_a_p__v};
      #line 1833 
      __write_once_size((void *)(& ar->tx_ampdu_iter),(void *)(& __u.__c),8);
      #line 1833 
      struct carl9170_sta_tid *tmp_3 = __u.__val;
    }
  }
  #line 1836 
  cif_bitmap_zero(& ar->vif_bitmap,ar->fw.vif_num);
  #line 1837 
  INIT_LIST_HEAD_1(& ar->vif_list);
  #line 1838 
  __init_completion(& ar->tx_flush);
  #line 1841 
  (hw->wiphy)->interface_modes = (unsigned short)0U;
  #line 1843 
  _ieee80211_hw_set(hw,(enum ieee80211_hw_flags)IEEE80211_HW_RX_INCLUDES_FCS);
  #line 1844 
  _ieee80211_hw_set(hw,(enum ieee80211_hw_flags)IEEE80211_HW_MFP_CAPABLE);
  #line 1845 
  _ieee80211_hw_set(hw,(enum ieee80211_hw_flags)IEEE80211_HW_REPORTS_TX_ACK_STATUS);
  #line 1846 
  _ieee80211_hw_set(hw,(enum ieee80211_hw_flags)IEEE80211_HW_SUPPORTS_PS);
  #line 1847 
  _ieee80211_hw_set(hw,(enum ieee80211_hw_flags)IEEE80211_HW_PS_NULLFUNC_STACK);
  #line 1848 
  _ieee80211_hw_set(hw,(enum ieee80211_hw_flags)IEEE80211_HW_NEED_DTIM_BEFORE_ASSOC);
  #line 1849 
  _ieee80211_hw_set(hw,(enum ieee80211_hw_flags)IEEE80211_HW_SUPPORTS_RC_TABLE);
  #line 1850 
  _ieee80211_hw_set(hw,(enum ieee80211_hw_flags)IEEE80211_HW_SIGNAL_DBM);
  #line 1851 
  _ieee80211_hw_set(hw,(enum ieee80211_hw_flags)IEEE80211_HW_SUPPORTS_HT_CCK_RATES);
  #line 1853 
  if (modparam_noht == 0) 
                          #line 1858 
                          _ieee80211_hw_set(hw,(enum ieee80211_hw_flags)IEEE80211_HW_AMPDU_AGGREGATION);
  #line 1861 
  hw->extra_tx_headroom = 32U;
  #line 1862 
  hw->sta_data_size = 208;
  #line 1863 
  hw->vif_data_size = 40;
  #line 1865 
  hw->max_rates = (unsigned char)4U;
  #line 1866 
  hw->max_rate_tries = (unsigned char)3U;
  #line 1868 
  i = 0;
  #line 1868 
  while ((unsigned int)i <= 3U) {
    #line 1869 
    ar->noise[i] = -95;
    #line 1868 
    i ++;
  }
  #line 1871 
  wiphy_ext_feature_set(hw->wiphy,(enum nl80211_ext_feature_index)NL80211_EXT_FEATURE_CQM_RSSI_LIST);
  #line 1873 
  return (void *)ar;
  #line 1875 
  err_nomem: 
             #line 1875 
  ;
  #line 1876 
  kfree_skb(skb);
  #line 1877 
  return ERR_PTR(-12L);
}

#line 1880  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/main.c"
static int carl9170_read_eeprom(struct ar9170 *ar)
{
  #line 1885 
  __le32 offsets[8U];
  #line 1886 
  int i;
  #line 1886 
  int j;
  #line 1886 
  int err;
  #line 1884 
  u8 *eeprom = (u8 *)(& ar->eeprom);
  #line 1896 
  i = 0;
  #line 1896 
  while ((unsigned int)i <= 73U) {
    #line 1897 
    j = 0;
    #line 1897 
    while (j <= 7) {
      #line 1898 
      offsets[j] = ((unsigned int)((unsigned long)i) + 176U) * 32U + (unsigned int)(j * 4);
      #line 1897 
      j ++;
    }
    #line 1901 
    err = carl9170_exec_cmd(ar,(enum carl9170_cmd_oids)CARL9170_CMD_RREG,32U,(void *)(& offsets),32U,(void *)(eeprom + (unsigned long)i * 32UL));
    #line 1904 
    if (err != 0) 
                  #line 1905 
                  return err;
    #line 1896 
    i ++;
  }
  #line 1910 
  return 0;
}

#line 1913  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/main.c"
static int carl9170_parse_eeprom(struct ar9170 *ar)
{
  #line 1916 
  unsigned int rx_streams;
  #line 1916 
  unsigned int tx_streams;
  #line 1915 
  struct ath_regulatory *regulatory = & ar->common.regulatory;
  #line 1916 
  unsigned int tx_params = 0U;
  #line 1917 
  int bands = 0;
  #line 1918 
  int chans = 0;
  #line 1920 
  if ((unsigned int)ar->eeprom.length == 65535U) 
                                                 #line 1921 
                                                 return -61;
  #line 1923 
  if (0 != 0) 
              #line 1923 
              rx_streams = (unsigned int)((((((((((unsigned long long)ar->eeprom.rx_mask & 1ULL) != 0ULL) + (((unsigned long long)ar->eeprom.rx_mask & 2ULL) != 0ULL)) + (((unsigned long long)ar->eeprom.rx_mask & 4ULL) != 0ULL)) + (((unsigned long long)ar->eeprom.rx_mask & 8ULL) != 0ULL)) + (((unsigned long long)ar->eeprom.rx_mask & 16ULL) != 0ULL)) + (((unsigned long long)ar->eeprom.rx_mask & 32ULL) != 0ULL)) + (((unsigned long long)ar->eeprom.rx_mask & 64ULL) != 0ULL)) + (((unsigned long long)ar->eeprom.rx_mask & 128ULL) != 0ULL)); else 
                                                                    #line 1923 
                                                                    rx_streams = __arch_hweight8((unsigned int)ar->eeprom.rx_mask);
  #line 1924 
  if (0 != 0) 
              #line 1924 
              tx_streams = (unsigned int)((((((((((unsigned long long)ar->eeprom.tx_mask & 1ULL) != 0ULL) + (((unsigned long long)ar->eeprom.tx_mask & 2ULL) != 0ULL)) + (((unsigned long long)ar->eeprom.tx_mask & 4ULL) != 0ULL)) + (((unsigned long long)ar->eeprom.tx_mask & 8ULL) != 0ULL)) + (((unsigned long long)ar->eeprom.tx_mask & 16ULL) != 0ULL)) + (((unsigned long long)ar->eeprom.tx_mask & 32ULL) != 0ULL)) + (((unsigned long long)ar->eeprom.tx_mask & 64ULL) != 0ULL)) + (((unsigned long long)ar->eeprom.tx_mask & 128ULL) != 0ULL)); else 
                                                                    #line 1924 
                                                                    tx_streams = __arch_hweight8((unsigned int)ar->eeprom.tx_mask);
  #line 1926 
  if (rx_streams != tx_streams) {
    #line 1927 
    tx_params = 2U;
    {
      #line 1929 
      int __ret_warn_on = tx_streams + 4294967295U > 3U;
      #line 1929 
      if ((long)(__ret_warn_on != 0) != 0L) {
        #line 1930 
        ldv_inline_asm();
        #line 1931 
        ldv_inline_asm();
      }
      #line 1929 
      long tmp_2 = (long)(__ret_warn_on != 0);
    }
    #line 1932 
    tx_params = (tx_streams + 4294967295U) << 2;
    #line 1935 
    carl9170_band_2GHz.ht_cap.mcs.tx_params = (unsigned char)((int)carl9170_band_2GHz.ht_cap.mcs.tx_params | (int)((unsigned char)tx_params));
    #line 1936 
    carl9170_band_5GHz.ht_cap.mcs.tx_params = (unsigned char)((int)carl9170_band_5GHz.ht_cap.mcs.tx_params | (int)((unsigned char)tx_params));
  }
  #line 1939 
  if (((int)ar->eeprom.operating_flags & 2) != 0) {
    #line 1940 
    ((ar->hw)->wiphy)->bands[0] = & carl9170_band_2GHz;
    #line 1942 
    chans = carl9170_band_2GHz.n_channels + chans;
    #line 1943 
    bands ++;
  }
  #line 1945 
  if (((int)ar->eeprom.operating_flags & 1) != 0) {
    #line 1946 
    ((ar->hw)->wiphy)->bands[1] = & carl9170_band_5GHz;
    #line 1948 
    chans = carl9170_band_5GHz.n_channels + chans;
    #line 1949 
    bands ++;
  }
  #line 1952 
  if (bands == 0) 
                  #line 1953 
                  return -22;
  #line 1955 
  ar->survey = (struct survey_info *)kcalloc((unsigned long)chans,72UL,3264U);
  #line 1956 
  if (ar->survey == (struct survey_info *)0) 
                                             #line 1957 
                                             return -12;
  #line 1958 
  ar->num_channels = (unsigned int)chans;
  #line 1960 
  regulatory->current_rd = ar->eeprom.reg_domain[0];
  #line 1963 
  SET_IEEE80211_PERM_ADDR(ar->hw,(u8 *)(& ar->eeprom.mac_address));
  #line 1965 
  return 0;
}

#line 1968  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/main.c"
static void carl9170_reg_notifier(struct wiphy *wiphy, struct regulatory_request *request)
{
  #line 1971 
  struct ieee80211_hw *hw = wiphy_to_ieee80211_hw(wiphy);
  #line 1972 
  struct ar9170 *ar = (struct ar9170 *)hw->priv;
  #line 1974 
  ath_reg_notifier_apply(wiphy,request,& ar->common.regulatory);
  #line 1975 
  return;
}

#line 1977  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/main.c"
int carl9170_register(struct ar9170 *ar)
{
  #line 1982 
  int __ret_warn_on;
  #line 1985 
  int __y;
  #line 1980 
  int i;
  #line 1979 
  struct ath_regulatory *regulatory = & ar->common.regulatory;
  #line 1980 
  int err = 0;
  #line 1982 
  __ret_warn_on = ar->mem_bitmap != (unsigned long *)0UL;
  #line 1982 
  if ((long)(__ret_warn_on != 0) != 0L) {
    #line 1983 
    ldv_inline_asm();
    #line 1984 
    ldv_inline_asm();
  }
  #line 1982 
  if ((long)((long)(__ret_warn_on != 0)) != 0L) 
                                                #line 1983 
                                                return -22;
  #line 1985 
  __y = 64;
  #line 1985 
  ar->mem_bitmap = (unsigned long *)kcalloc((unsigned long)((((ar->fw.mem_blocks + (unsigned int)__y) + 4294967295U) / (unsigned int)__y) * (unsigned int)__y),
                8UL,3264U);
  #line 1989 
  if (ar->mem_bitmap == (unsigned long *)0UL) 
                                              #line 1990 
                                              return -12;
  #line 1993 
  err = carl9170_read_eeprom(ar);
  #line 1994 
  if (err != 0) 
                #line 1995 
                return err;
  #line 1997 
  err = carl9170_parse_eeprom(ar);
  #line 1998 
  if (err != 0) 
                #line 1999 
                return err;
  #line 2001 
  err = ath_regd_init(regulatory,(ar->hw)->wiphy,& carl9170_reg_notifier);
  #line 2003 
  if (err != 0) 
                #line 2004 
                return err;
  #line 2006 
  if (modparam_noht != 0) {
    #line 2007 
    carl9170_band_2GHz.ht_cap.ht_supported = (_Bool)0;
    #line 2008 
    carl9170_band_5GHz.ht_cap.ht_supported = (_Bool)0;
  }
  #line 2011 
  i = 0;
  #line 2011 
  while (ar->fw.vif_num > (unsigned int)i) {
    #line 2012 
    ar->vif_priv[i].id = (unsigned int)i;
    #line 2013 
    ar->vif_priv[i].vif = (struct ieee80211_vif *)0;
    #line 2011 
    i ++;
  }
  #line 2016 
  err = ieee80211_register_hw(ar->hw);
  #line 2017 
  if (err != 0) 
                #line 2018 
                return err;
  #line 2021 
  ar->registered = (_Bool)1;
  #line 2023 
  if (! ath_is_world_regd(regulatory)) 
                                       #line 2024 
                                       regulatory_hint((ar->hw)->wiphy,(char *)(& regulatory->alpha2));
  #line 2027 
  carl9170_debugfs_register(ar);
  #line 2030 
  err = carl9170_led_init(ar);
  #line 2031 
  if (err != 0) 
                #line 2032 
                goto err_unreg;
  #line 2035 
  err = carl9170_led_register(ar);
  #line 2036 
  if (err != 0) 
                #line 2037 
                goto err_unreg;
  #line 2041 
  err = carl9170_register_wps_button(ar);
  #line 2042 
  if (err != 0) 
                #line 2043 
                goto err_unreg;
  #line 2047 
  err = carl9170_register_hwrng(ar);
  #line 2048 
  if (err != 0) 
                #line 2049 
                goto err_unreg;
  #line 2052 
  ;
  #line 2052 
  _dev_info(& (ar->udev)->dev,(char *)"Atheros AR9170 is registered as \'%s\'\n",wiphy_name((ar->hw)->wiphy));
  #line 2055 
  return 0;
  #line 2057 
  err_unreg: 
             #line 2057 
  ;
  #line 2058 
  carl9170_unregister(ar);
  #line 2059 
  return err;
}

#line 2062  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/main.c"
void carl9170_unregister(struct ar9170 *ar)
{
  #line 2064 
  if (! ar->registered) 
                        #line 2065 
                        return;
  #line 2067 
  ar->registered = (_Bool)0;
  #line 2070 
  carl9170_led_unregister(ar);
  #line 2074 
  carl9170_debugfs_unregister(ar);
  #line 2078 
  if (ar->wps.pbc != (struct input_dev *)0) {
    #line 2079 
    input_unregister_device(ar->wps.pbc);
    #line 2080 
    ar->wps.pbc = (struct input_dev *)0;
  }
  #line 2085 
  carl9170_unregister_hwrng(ar);
  #line 2088 
  carl9170_cancel_worker(ar);
  #line 2089 
  cancel_work_sync(& ar->restart_work);
  #line 2091 
  ieee80211_unregister_hw(ar->hw);
  #line 2092 
  return;
}

#line 2094  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/main.c"
void carl9170_free(struct ar9170 *ar)
{
  {
    #line 2096 
    int __ret_warn_on = (int)ar->registered != 0;
    #line 2096 
    if ((long)(__ret_warn_on != 0) != 0L) {
      #line 2097 
      ldv_inline_asm();
      #line 2098 
      ldv_inline_asm();
    }
    #line 2096 
    long tmp = (long)(__ret_warn_on != 0);
  }
  {
    #line 2097 
    int __ret_warn_on_0 = ar->state != (unsigned int)CARL9170_UNKNOWN_STATE;
    #line 2097 
    if ((long)(__ret_warn_on_0 != 0) != 0L) {
      #line 2098 
      ldv_inline_asm();
      #line 2099 
      ldv_inline_asm();
    }
    #line 2097 
    long tmp_3 = (long)(__ret_warn_on_0 != 0);
  }
  #line 2099 
  kfree_skb(ar->rx_failover);
  #line 2100 
  ar->rx_failover = (struct sk_buff *)0;
  #line 2102 
  kfree((void *)ar->mem_bitmap);
  #line 2103 
  ar->mem_bitmap = (unsigned long *)0UL;
  #line 2105 
  kfree((void *)ar->survey);
  #line 2106 
  ar->survey = (struct survey_info *)0;
  #line 2108 
  mutex_destroy(& ar->mutex);
  #line 2110 
  cif_ieee80211_free_hw(ar->hw);
  #line 2111 
  return;
}

#line 93  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
struct ieee80211_ops *emg_alias_carl9170_ops = & carl9170_ops;
#line 98 
#line 98 
struct ieee80211_hw *emg_ieee80211_alloc_hw(unsigned long arg0, struct ieee80211_ops *arg1);
#line 99 
#line 99 
void emg_ieee80211_free_hw(struct ieee80211_hw *arg0);
#line 110  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
int emg_wrapper_carl9170_op_add_interface(struct ieee80211_hw *arg0, struct ieee80211_vif *arg1)
{
  #line 111 
  return carl9170_op_add_interface(arg0,arg1);
}

#line 115  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
int emg_wrapper_carl9170_op_ampdu_action(struct ieee80211_hw *arg0, struct ieee80211_vif *arg1, struct ieee80211_ampdu_params *arg2)
{
  #line 116 
  return carl9170_op_ampdu_action(arg0,arg1,arg2);
}

#line 120  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
void emg_wrapper_carl9170_op_bss_info_changed(struct ieee80211_hw *arg0, struct ieee80211_vif *arg1, struct ieee80211_bss_conf *arg2, unsigned int arg3)
{
  #line 121 
  carl9170_op_bss_info_changed(arg0,arg1,arg2,arg3);
  #line 122 
  return;
}

#line 125  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
int emg_wrapper_carl9170_op_conf_tx(struct ieee80211_hw *arg0, struct ieee80211_vif *arg1, unsigned short arg2, struct ieee80211_tx_queue_params *arg3)
{
  #line 126 
  return carl9170_op_conf_tx(arg0,arg1,(unsigned short)((int)arg2),arg3);
}

#line 130  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
int emg_wrapper_carl9170_op_config(struct ieee80211_hw *arg0, unsigned int arg1)
{
  #line 131 
  return carl9170_op_config(arg0,arg1);
}

#line 135  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
void emg_wrapper_carl9170_op_configure_filter(struct ieee80211_hw *arg0, unsigned int arg1, unsigned int *arg2, unsigned long long arg3)
{
  #line 136 
  carl9170_op_configure_filter(arg0,arg1,arg2,arg3);
  #line 137 
  return;
}

#line 140  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
void emg_wrapper_carl9170_op_flush(struct ieee80211_hw *arg0, struct ieee80211_vif *arg1, unsigned int arg2, _Bool arg3)
{
  #line 141 
  carl9170_op_flush(arg0,arg1,arg2,(_Bool)((bool)((int)arg3) != 0));
  #line 142 
  return;
}

#line 145  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
int emg_wrapper_carl9170_op_get_stats(struct ieee80211_hw *arg0, struct ieee80211_low_level_stats *arg1)
{
  #line 146 
  return carl9170_op_get_stats(arg0,arg1);
}

#line 150  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
int emg_wrapper_carl9170_op_get_survey(struct ieee80211_hw *arg0, int arg1, struct survey_info *arg2)
{
  #line 151 
  return carl9170_op_get_survey(arg0,arg1,arg2);
}

#line 155  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
unsigned long long emg_wrapper_carl9170_op_get_tsf(struct ieee80211_hw *arg0, struct ieee80211_vif *arg1)
{
  #line 156 
  return carl9170_op_get_tsf(arg0,arg1);
}

#line 160  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
unsigned long long emg_wrapper_carl9170_op_prepare_multicast(struct ieee80211_hw *arg0, struct netdev_hw_addr_list *arg1)
{
  #line 161 
  return carl9170_op_prepare_multicast(arg0,arg1);
}

#line 165  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
void emg_wrapper_carl9170_op_remove_interface(struct ieee80211_hw *arg0, struct ieee80211_vif *arg1)
{
  #line 166 
  carl9170_op_remove_interface(arg0,arg1);
  #line 167 
  return;
}

#line 170  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
int emg_wrapper_carl9170_op_set_key(struct ieee80211_hw *arg0, enum set_key_cmd arg1, struct ieee80211_vif *arg2, struct ieee80211_sta *arg3, struct ieee80211_key_conf *arg4)
{
  #line 171 
  return carl9170_op_set_key(arg0,arg1,arg2,arg3,arg4);
}

#line 175  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
int emg_wrapper_carl9170_op_sta_add(struct ieee80211_hw *arg0, struct ieee80211_vif *arg1, struct ieee80211_sta *arg2)
{
  #line 176 
  return carl9170_op_sta_add(arg0,arg1,arg2);
}

#line 180  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
void emg_wrapper_carl9170_op_sta_notify(struct ieee80211_hw *arg0, struct ieee80211_vif *arg1, enum sta_notify_cmd arg2, struct ieee80211_sta *arg3)
{
  #line 181 
  carl9170_op_sta_notify(arg0,arg1,arg2,arg3);
  #line 182 
  return;
}

#line 185  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
int emg_wrapper_carl9170_op_sta_remove(struct ieee80211_hw *arg0, struct ieee80211_vif *arg1, struct ieee80211_sta *arg2)
{
  #line 186 
  return carl9170_op_sta_remove(arg0,arg1,arg2);
}

#line 190  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
int emg_wrapper_carl9170_op_start(struct ieee80211_hw *arg0)
{
  #line 191 
  return carl9170_op_start(arg0);
}

#line 195  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
void emg_wrapper_carl9170_op_stop(struct ieee80211_hw *arg0)
{
  #line 196 
  carl9170_op_stop(arg0);
  #line 197 
  return;
}

#line 200  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
_Bool emg_wrapper_carl9170_tx_frames_pending(struct ieee80211_hw *arg0)
{
  #line 201 
  return carl9170_tx_frames_pending(arg0) != 0;
}

#line 213  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
static unsigned long cif_find_next_bit(unsigned long *addr, unsigned long size, unsigned long offset)
{
  #line 216 
  return ldv_find_next_bit(addr,size,offset);
}

#line 234  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
static void INIT_LIST_HEAD_1(struct list_head *list)
{
  #line 237 
  ldv_init_list_head(list);
  #line 238 
  return;
}

#line 255  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
static unsigned long cif_find_first_bit_0(unsigned long *addr, unsigned long size)
{
  #line 258 
  return ldv_find_first_bit(addr,size);
}

#line 269  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
static int atomic_add_return_0(int i, atomic_t *v)
{
  #line 272 
  return ldv_atomic_add_return(i,v);
}

#line 290  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
static void atomic_dec_1(atomic_t *v)
{
  #line 293 
  ldv_atomic_dec(v);
  #line 294 
  return;
}

#line 297  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
static void cif_bitmap_zero(unsigned long *dst, unsigned int nbits)
{
  #line 300 
  ldv_bitmap_zero(dst,nbits);
  #line 301 
  return;
}

#line 304  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
static void *ERR_PTR(long error)
{
  #line 307 
  return ldv_err_ptr(error);
}

#line 436  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
static void *kcalloc(size_t n, size_t size, gfp_t flags)
{
  #line 439 
  return ldv_kcalloc(n,size,flags);
}

#line 457  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
static void *kzalloc_0(size_t size, gfp_t flags)
{
  #line 460 
  return ldv_kzalloc(size,flags);
}

#line 891  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
static void cif___ldv_spin_lock_state_lock_of_ar9170_0(spinlock_t *lock)
{
  #line 894 
  ldv_spin_model_lock((char *)"state_lock_of_ar9170");
  #line 896 
  __ldv_spin_lock(lock);
  #line 897 
  return;
}

#line 900  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
static void cif_spin_unlock_irqrestore_state_lock_of_ar9170_0(spinlock_t *lock, unsigned long flags)
{
  #line 903 
  ldv_spin_model_unlock((char *)"state_lock_of_ar9170");
  #line 905 
  spin_unlock_irqrestore_0(lock,flags);
  #line 906 
  return;
}

#line 909  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
static void cif_spin_lock_bh_tx_ampdu_list_lock_of_ar9170(spinlock_t *lock)
{
  #line 912 
  ldv_spin_model_lock((char *)"tx_ampdu_list_lock_of_ar9170");
  #line 914 
  spin_lock_bh_2(lock);
  #line 915 
  return;
}

#line 918  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
static void cif_spin_unlock_bh_tx_ampdu_list_lock_of_ar9170(spinlock_t *lock)
{
  #line 921 
  ldv_spin_model_unlock((char *)"tx_ampdu_list_lock_of_ar9170");
  #line 923 
  spin_unlock_bh_2(lock);
  #line 924 
  return;
}

#line 927  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
static void cif_spin_lock_lock_of_carl9170_sta_tid(spinlock_t *lock)
{
  #line 930 
  ldv_spin_model_lock((char *)"lock_of_carl9170_sta_tid");
  #line 932 
  spin_lock(lock);
  #line 933 
  return;
}

#line 936  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
static void cif_spin_unlock_lock_of_carl9170_sta_tid(spinlock_t *lock)
{
  #line 939 
  ldv_spin_model_unlock((char *)"lock_of_carl9170_sta_tid");
  #line 941 
  spin_unlock(lock);
  #line 942 
  return;
}

#line 945  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
static void cif_spin_lock_bh_lock_of_sk_buff_head_1(spinlock_t *lock)
{
  #line 948 
  ldv_spin_model_lock((char *)"lock_of_sk_buff_head");
  #line 950 
  spin_lock_bh_2(lock);
  #line 951 
  return;
}

#line 954  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
static void cif_spin_unlock_bh_lock_of_sk_buff_head_1(spinlock_t *lock)
{
  #line 957 
  ldv_spin_model_unlock((char *)"lock_of_sk_buff_head");
  #line 959 
  spin_unlock_bh_2(lock);
  #line 960 
  return;
}

#line 963  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
static void cif_spin_lock_bh_beacon_lock_of_ar9170_0(spinlock_t *lock)
{
  #line 966 
  ldv_spin_model_lock((char *)"beacon_lock_of_ar9170");
  #line 968 
  spin_lock_bh_2(lock);
  #line 969 
  return;
}

#line 972  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
static void cif_spin_unlock_bh_beacon_lock_of_ar9170_0(spinlock_t *lock)
{
  #line 975 
  ldv_spin_model_unlock((char *)"beacon_lock_of_ar9170");
  #line 977 
  spin_unlock_bh_2(lock);
  #line 978 
  return;
}

#line 981  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
static void cif_mutex_lock_mutex_of_ar9170_2(struct mutex *lock)
{
  #line 984 
  ldv_mutex_model_lock(lock,(char *)"mutex_of_ar9170");
  #line 985 
  return;
}

#line 988  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
static void cif_mutex_unlock_mutex_of_ar9170_2(struct mutex *lock)
{
  #line 991 
  ldv_mutex_model_unlock(lock,(char *)"mutex_of_ar9170");
  #line 992 
  return;
}

#line 995  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
static struct ieee80211_hw *cif_ieee80211_alloc_hw(size_t priv_data_len, struct ieee80211_ops *ops)
{
  #line 999 
  return emg_ieee80211_alloc_hw(priv_data_len,ops);
}

#line 1003  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
static void cif_ieee80211_free_hw(struct ieee80211_hw *hw)
{
  #line 1007 
  emg_ieee80211_free_hw(hw);
  #line 1008 
  return;
}

#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/byteorder/little_endian.h"
__inline static __u32 __le32_to_cpup(__le32 *p)
{
  #line 58 
  return *p;
}

#line 64  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/byteorder/little_endian.h"
__inline static __u16 __le16_to_cpup(__le16 *p)
{
  #line 66 
  return *p;
}

#line 8  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/unaligned/access_ok.h"
__inline static u16 get_unaligned_le16(void *p)
{
  #line 10 
  return __le16_to_cpup((__le16 *)p);
}

#line 13  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/unaligned/access_ok.h"
__inline static u32 get_unaligned_le32(void *p)
{
  #line 15 
  return __le32_to_cpup((__le32 *)p);
}

#line 564  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/carl9170.h"
#line 396  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/mac.c"
int carl9170_set_hwretry_limit(struct ar9170 *ar, unsigned int max_retry);
#line 648  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/carl9170.h"
__inline static struct ieee80211_vif *carl9170_get_main_vif_1(struct ar9170 *ar)
{
  #line 652 
  void *__mptr;
  #line 650 
  struct carl9170_vif_info *cvif;
  {
    #line 652 
    bool __warned;
    #line 652 
    if (debug_lockdep_rcu_enabled() != 0) 
      #line 652 
      if (! __warned) {
        #line 652 
        if (rcu_read_lock_any_held() == 0) {
          #line 652 
          __warned = (_Bool)1;
          #line 652 
          lockdep_rcu_suspicious((char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/carl9170.h",652,(char *)"RCU-list traversed in non-reader section!");
        }
      }
  }
  {
    #line 653 
    union __anonunion___u_8501 __u;
    #line 652 
    __read_once_size((void *)(& ar->vif_list.next),(void *)(& __u.__c),8);
    #line 652 
    __mptr = (void *)(__u.__val);
    }
  #line 655 
  cvif = ((struct carl9170_vif_info *)__mptr);
  #line 652 
  while (& cvif->list != & ar->vif_list) {
    #line 652 
    void *__mptr_0;
    #line 653 
    if ((int)cvif->active != 0) {
      #line 654 
      return carl9170_get_vif(cvif);
    }
    {
      #line 653 
      union __anonunion___u_8503 __u_0;
      #line 652 
      __read_once_size((void *)(& cvif->list.next),(void *)(& __u_0.__c),8);
      #line 652 
      __mptr_0 = (void *)(__u_0.__val);
      }
    #line 652 
    cvif = ((struct carl9170_vif_info *)__mptr_0);
  }
  #line 657 
  return (struct ieee80211_vif *)0;
}

#line 44  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/mac.c"
int carl9170_set_dyn_sifs_ack(struct ar9170 *ar)
{
  #line 46 
  u32 val;
  #line 48 
  if ((int)conf_is_ht40(& (ar->hw)->conf) != 0) 
                                                #line 49 
                                                val = 266U;
  else 
    #line 51 
    if (((ar->hw)->conf.chandef.chan)->band == (unsigned int)NL80211_BAND_2GHZ) 
      #line 52 
      val = 261U; else 
                       #line 54 
                       val = 260U;
  #line 57 
  return carl9170_write_reg(ar,1848920U,val);
}

#line 60  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/mac.c"
int carl9170_set_rts_cts_rate(struct ar9170 *ar)
{
  #line 62 
  u32 rts_rate;
  #line 62 
  u32 cts_rate;
  #line 64 
  if ((int)conf_is_ht(& (ar->hw)->conf) != 0) {
    #line 66 
    rts_rate = 474U;
    #line 67 
    cts_rate = 266U;
  }
  else 
    #line 69 
    if (((ar->hw)->conf.chandef.chan)->band == (unsigned int)NL80211_BAND_2GHZ) {
      #line 71 
      rts_rate = 27U;
      #line 72 
      cts_rate = 3U;
    }
    else {
      #line 75 
      rts_rate = 443U;
      #line 76 
      cts_rate = 267U;
    }
  #line 80 
  return carl9170_write_reg(ar,1848888U,(cts_rate << 16) | rts_rate);
}

#line 84  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/mac.c"
int carl9170_set_slot_time(struct ar9170 *ar)
{
  #line 86 
  struct ieee80211_vif *vif;
  #line 87 
  u32 slottime = 20U;
  #line 89 
  rcu_read_lock();
  #line 90 
  vif = carl9170_get_main_vif_1(ar);
  #line 91 
  if (vif == (struct ieee80211_vif *)0) {
    #line 92 
    rcu_read_unlock();
    #line 93 
    return 0;
  }
  #line 96 
  if (((ar->hw)->conf.chandef.chan)->band == (unsigned int)NL80211_BAND_5GHZ || (int)vif->bss_conf.use_short_slot != 0) 
    #line 98 
    slottime = 9U;
  #line 100 
  rcu_read_unlock();
  #line 102 
  return carl9170_write_reg(ar,1849072U,slottime << 10);
}

#line 106  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/mac.c"
int carl9170_set_mac_rates(struct ar9170 *ar)
{
  #line 108 
  struct ieee80211_vif *vif;
  #line 109 
  u32 basic;
  #line 109 
  u32 mandatory;
  #line 111 
  rcu_read_lock();
  #line 112 
  vif = carl9170_get_main_vif_1(ar);
  #line 114 
  if (vif == (struct ieee80211_vif *)0) {
    #line 115 
    rcu_read_unlock();
    #line 116 
    return 0;
  }
  #line 119 
  basic = vif->bss_conf.basic_rates & 15U;
  #line 120 
  basic = ((vif->bss_conf.basic_rates << 4) & 65280U) | basic;
  #line 121 
  rcu_read_unlock();
  #line 123 
  if (((ar->hw)->conf.chandef.chan)->band == (unsigned int)NL80211_BAND_5GHZ) 
    #line 124 
    mandatory = 65280U; else 
                             #line 126 
                             mandatory = 65295U;
  {
    #line 128 
    int __nreg = 0;
    #line 128 
    int __err = 0;
    #line 128 
    struct ar9170 *__ar = ar;
    #line 129 
    __ar->__anonCompField_ar9170_205.cmd_buf[__nreg * 2 + 1] = 1848880U;
    #line 129 
    __ar->__anonCompField_ar9170_205.cmd_buf[(__nreg + 1) * 2] = basic;
    #line 129 
    __nreg ++;
    #line 129 
    if (__nreg > 6) {
      #line 129 
      if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                        #line 129 
                                                        __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0); else 
                                                                    #line 129 
                                                                    goto __regwrite_out;
      #line 129 
      __nreg = 0;
      #line 129 
      if (__err != 0) 
                      #line 129 
                      goto __regwrite_out;
    }
    #line 130 
    __ar->__anonCompField_ar9170_205.cmd_buf[__nreg * 2 + 1] = 1848884U;
    #line 130 
    __ar->__anonCompField_ar9170_205.cmd_buf[(__nreg + 1) * 2] = mandatory;
    #line 130 
    __nreg ++;
    #line 130 
    if (__nreg > 6) {
      #line 130 
      if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                        #line 130 
                                                        __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0); else 
                                                                    #line 130 
                                                                    goto __regwrite_out;
      #line 130 
      __nreg = 0;
      #line 130 
      if (__err != 0) 
                      #line 130 
                      goto __regwrite_out;
    }
    #line 131 
    __regwrite_out: 
                    #line 131 
    ;
    #line 131 
    if (__err == 0 && __nreg != 0) {
      #line 131 
      if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                        #line 131 
                                                        __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0);
      #line 131 
      __nreg = 0;
    }
    #line 133 
    return __err;
  }
}

#line 136  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/mac.c"
int carl9170_set_qos(struct ar9170 *ar)
{
  #line 138 
  int __nreg = 0;
  #line 138 
  int __err = 0;
  #line 138 
  struct ar9170 *__ar = ar;
  #line 140 
  __ar->__anonCompField_ar9170_205.cmd_buf[__nreg * 2 + 1] = 1850112U;
  #line 140 
  __ar->__anonCompField_ar9170_205.cmd_buf[(__nreg + 1) * 2] = (unsigned int)((int)ar->edcf[0].cw_min | ((int)ar->edcf[0].cw_max << 16));
  #line 140 
  __nreg ++;
  #line 140 
  if (__nreg > 6) {
    #line 140 
    if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                      #line 140 
                                                      __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0); else 
                                                                    #line 140 
                                                                    goto __regwrite_out;
    #line 140 
    __nreg = 0;
    #line 140 
    if (__err != 0) 
                    #line 140 
                    goto __regwrite_out;
  }
  #line 142 
  __ar->__anonCompField_ar9170_205.cmd_buf[__nreg * 2 + 1] = 1850116U;
  #line 142 
  __ar->__anonCompField_ar9170_205.cmd_buf[(__nreg + 1) * 2] = (unsigned int)((int)ar->edcf[1].cw_min | ((int)ar->edcf[1].cw_max << 16));
  #line 142 
  __nreg ++;
  #line 142 
  if (__nreg > 6) {
    #line 142 
    if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                      #line 142 
                                                      __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0); else 
                                                                    #line 142 
                                                                    goto __regwrite_out;
    #line 142 
    __nreg = 0;
    #line 142 
    if (__err != 0) 
                    #line 142 
                    goto __regwrite_out;
  }
  #line 144 
  __ar->__anonCompField_ar9170_205.cmd_buf[__nreg * 2 + 1] = 1850120U;
  #line 144 
  __ar->__anonCompField_ar9170_205.cmd_buf[(__nreg + 1) * 2] = (unsigned int)((int)ar->edcf[2].cw_min | ((int)ar->edcf[2].cw_max << 16));
  #line 144 
  __nreg ++;
  #line 144 
  if (__nreg > 6) {
    #line 144 
    if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                      #line 144 
                                                      __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0); else 
                                                                    #line 144 
                                                                    goto __regwrite_out;
    #line 144 
    __nreg = 0;
    #line 144 
    if (__err != 0) 
                    #line 144 
                    goto __regwrite_out;
  }
  #line 146 
  __ar->__anonCompField_ar9170_205.cmd_buf[__nreg * 2 + 1] = 1850124U;
  #line 146 
  __ar->__anonCompField_ar9170_205.cmd_buf[(__nreg + 1) * 2] = (unsigned int)((int)ar->edcf[3].cw_min | ((int)ar->edcf[3].cw_max << 16));
  #line 146 
  __nreg ++;
  #line 146 
  if (__nreg > 6) {
    #line 146 
    if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                      #line 146 
                                                      __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0); else 
                                                                    #line 146 
                                                                    goto __regwrite_out;
    #line 146 
    __nreg = 0;
    #line 146 
    if (__err != 0) 
                    #line 146 
                    goto __regwrite_out;
  }
  #line 148 
  __ar->__anonCompField_ar9170_205.cmd_buf[__nreg * 2 + 1] = 1850128U;
  #line 148 
  __ar->__anonCompField_ar9170_205.cmd_buf[(__nreg + 1) * 2] = (unsigned int)((int)ar->edcf[4].cw_min | ((int)ar->edcf[4].cw_max << 16));
  #line 148 
  __nreg ++;
  #line 148 
  if (__nreg > 6) {
    #line 148 
    if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                      #line 148 
                                                      __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0); else 
                                                                    #line 148 
                                                                    goto __regwrite_out;
    #line 148 
    __nreg = 0;
    #line 148 
    if (__err != 0) 
                    #line 148 
                    goto __regwrite_out;
  }
  #line 151 
  __ar->__anonCompField_ar9170_205.cmd_buf[__nreg * 2 + 1] = 1850132U;
  #line 151 
  __ar->__anonCompField_ar9170_205.cmd_buf[(__nreg + 1) * 2] = (unsigned int)((((int)ar->edcf[0].aifs * 9 + 10) | (((int)ar->edcf[1].aifs * 9 + 10) << 12)) | (((int)ar->edcf[2].aifs * 9 + 10) << 24));
  #line 151 
  __nreg ++;
  #line 151 
  if (__nreg > 6) {
    #line 151 
    if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                      #line 151 
                                                      __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0); else 
                                                                    #line 151 
                                                                    goto __regwrite_out;
    #line 151 
    __nreg = 0;
    #line 151 
    if (__err != 0) 
                    #line 151 
                    goto __regwrite_out;
  }
  #line 155 
  __ar->__anonCompField_ar9170_205.cmd_buf[__nreg * 2 + 1] = 1850136U;
  #line 155 
  __ar->__anonCompField_ar9170_205.cmd_buf[(__nreg + 1) * 2] = (unsigned int)(((((int)ar->edcf[2].aifs * 9 + 10) >> 8) | (((int)ar->edcf[3].aifs * 9 + 10) << 4)) | (((int)ar->edcf[4].aifs * 9 + 10) << 16));
  #line 155 
  __nreg ++;
  #line 155 
  if (__nreg > 6) {
    #line 155 
    if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                      #line 155 
                                                      __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0); else 
                                                                    #line 155 
                                                                    goto __regwrite_out;
    #line 155 
    __nreg = 0;
    #line 155 
    if (__err != 0) 
                    #line 155 
                    goto __regwrite_out;
  }
  #line 160 
  __ar->__anonCompField_ar9170_205.cmd_buf[__nreg * 2 + 1] = 1850180U;
  #line 160 
  __ar->__anonCompField_ar9170_205.cmd_buf[(__nreg + 1) * 2] = (unsigned int)((int)ar->edcf[0].txop | ((int)ar->edcf[1].txop << 16));
  #line 160 
  __nreg ++;
  #line 160 
  if (__nreg > 6) {
    #line 160 
    if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                      #line 160 
                                                      __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0); else 
                                                                    #line 160 
                                                                    goto __regwrite_out;
    #line 160 
    __nreg = 0;
    #line 160 
    if (__err != 0) 
                    #line 160 
                    goto __regwrite_out;
  }
  #line 162 
  __ar->__anonCompField_ar9170_205.cmd_buf[__nreg * 2 + 1] = 1850184U;
  #line 162 
  __ar->__anonCompField_ar9170_205.cmd_buf[(__nreg + 1) * 2] = (unsigned int)(((int)ar->edcf[2].txop | ((int)ar->edcf[3].txop << 16)) | ((int)ar->edcf[4].txop << 24));
  #line 162 
  __nreg ++;
  #line 162 
  if (__nreg > 6) {
    #line 162 
    if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                      #line 162 
                                                      __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0); else 
                                                                    #line 162 
                                                                    goto __regwrite_out;
    #line 162 
    __nreg = 0;
    #line 162 
    if (__err != 0) 
                    #line 162 
                    goto __regwrite_out;
  }
  #line 166 
  __regwrite_out: 
                  #line 166 
  ;
  #line 166 
  if (__err == 0 && __nreg != 0) {
    #line 166 
    if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                      #line 166 
                                                      __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0);
    #line 166 
    __nreg = 0;
  }
  #line 168 
  return __err;
}

#line 171  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/mac.c"
int carl9170_init_mac(struct ar9170 *ar)
{
  #line 173 
  int __nreg = 0;
  #line 173 
  int __err = 0;
  #line 173 
  struct ar9170 *__ar = ar;
  #line 176 
  __ar->__anonCompField_ar9170_205.cmd_buf[__nreg * 2 + 1] = 1848832U;
  #line 176 
  __ar->__anonCompField_ar9170_205.cmd_buf[(__nreg + 1) * 2] = 3U;
  #line 176 
  __nreg ++;
  #line 176 
  if (__nreg > 6) {
    #line 176 
    if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                      #line 176 
                                                      __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0); else 
                                                                    #line 176 
                                                                    goto __regwrite_out;
    #line 176 
    __nreg = 0;
    #line 176 
    if (__err != 0) 
                    #line 176 
                    goto __regwrite_out;
  }
  #line 178 
  __ar->__anonCompField_ar9170_205.cmd_buf[__nreg * 2 + 1] = 1848976U;
  #line 178 
  __ar->__anonCompField_ar9170_205.cmd_buf[(__nreg + 1) * 2] = 64U;
  #line 178 
  __nreg ++;
  #line 178 
  if (__nreg > 6) {
    #line 178 
    if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                      #line 178 
                                                      __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0); else 
                                                                    #line 178 
                                                                    goto __regwrite_out;
    #line 178 
    __nreg = 0;
    #line 178 
    if (__err != 0) 
                    #line 178 
                    goto __regwrite_out;
  }
  #line 180 
  __ar->__anonCompField_ar9170_205.cmd_buf[__nreg * 2 + 1] = 1850152U;
  #line 180 
  __ar->__anonCompField_ar9170_205.cmd_buf[(__nreg + 1) * 2] = 0U;
  #line 180 
  __nreg ++;
  #line 180 
  if (__nreg > 6) {
    #line 180 
    if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                      #line 180 
                                                      __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0); else 
                                                                    #line 180 
                                                                    goto __regwrite_out;
    #line 180 
    __nreg = 0;
    #line 180 
    if (__err != 0) 
                    #line 180 
                    goto __regwrite_out;
  }
  #line 182 
  __ar->__anonCompField_ar9170_205.cmd_buf[__nreg * 2 + 1] = 1848972U;
  #line 182 
  __ar->__anonCompField_ar9170_205.cmd_buf[(__nreg + 1) * 2] = 4278255615U;
  #line 182 
  __nreg ++;
  #line 182 
  if (__nreg > 6) {
    #line 182 
    if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                      #line 182 
                                                      __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0); else 
                                                                    #line 182 
                                                                    goto __regwrite_out;
    #line 182 
    __nreg = 0;
    #line 182 
    if (__err != 0) 
                    #line 182 
                    goto __regwrite_out;
  }
  #line 186 
  __ar->__anonCompField_ar9170_205.cmd_buf[__nreg * 2 + 1] = 1848948U;
  #line 186 
  __ar->__anonCompField_ar9170_205.cmd_buf[(__nreg + 1) * 2] = 33554432U;
  #line 186 
  __nreg ++;
  #line 186 
  if (__nreg > 6) {
    #line 186 
    if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                      #line 186 
                                                      __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0); else 
                                                                    #line 186 
                                                                    goto __regwrite_out;
    #line 186 
    __nreg = 0;
    #line 186 
    if (__err != 0) 
                    #line 186 
                    goto __regwrite_out;
  }
  #line 189 
  __ar->__anonCompField_ar9170_205.cmd_buf[__nreg * 2 + 1] = 1848896U;
  #line 189 
  __ar->__anonCompField_ar9170_205.cmd_buf[(__nreg + 1) * 2] = 794496U;
  #line 189 
  __nreg ++;
  #line 189 
  if (__nreg > 6) {
    #line 189 
    if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                      #line 189 
                                                      __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0); else 
                                                                    #line 189 
                                                                    goto __regwrite_out;
    #line 189 
    __nreg = 0;
    #line 189 
    if (__err != 0) 
                    #line 189 
                    goto __regwrite_out;
  }
  #line 191 
  __ar->__anonCompField_ar9170_205.cmd_buf[__nreg * 2 + 1] = 1848908U;
  #line 191 
  __ar->__anonCompField_ar9170_205.cmd_buf[(__nreg + 1) * 2] = 112U;
  #line 191 
  __nreg ++;
  #line 191 
  if (__nreg > 6) {
    #line 191 
    if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                      #line 191 
                                                      __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0); else 
                                                                    #line 191 
                                                                    goto __regwrite_out;
    #line 191 
    __nreg = 0;
    #line 191 
    if (__err != 0) 
                    #line 191 
                    goto __regwrite_out;
  }
  #line 192 
  __ar->__anonCompField_ar9170_205.cmd_buf[__nreg * 2 + 1] = 1848984U;
  #line 192 
  __ar->__anonCompField_ar9170_205.cmd_buf[(__nreg + 1) * 2] = 169099264U;
  #line 192 
  __nreg ++;
  #line 192 
  if (__nreg > 6) {
    #line 192 
    if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                      #line 192 
                                                      __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0); else 
                                                                    #line 192 
                                                                    goto __regwrite_out;
    #line 192 
    __nreg = 0;
    #line 192 
    if (__err != 0) 
                    #line 192 
                    goto __regwrite_out;
  }
  #line 193 
  __ar->__anonCompField_ar9170_205.cmd_buf[__nreg * 2 + 1] = 1849072U;
  #line 193 
  __ar->__anonCompField_ar9170_205.cmd_buf[(__nreg + 1) * 2] = 9216U;
  #line 193 
  __nreg ++;
  #line 193 
  if (__nreg > 6) {
    #line 193 
    if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                      #line 193 
                                                      __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0); else 
                                                                    #line 193 
                                                                    goto __regwrite_out;
    #line 193 
    __nreg = 0;
    #line 193 
    if (__err != 0) 
                    #line 193 
                    goto __regwrite_out;
  }
  #line 196 
  __ar->__anonCompField_ar9170_205.cmd_buf[__nreg * 2 + 1] = 1850156U;
  #line 196 
  __ar->__anonCompField_ar9170_205.cmd_buf[(__nreg + 1) * 2] = 1502609408U;
  #line 196 
  __nreg ++;
  #line 196 
  if (__nreg > 6) {
    #line 196 
    if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                      #line 196 
                                                      __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0); else 
                                                                    #line 196 
                                                                    goto __regwrite_out;
    #line 196 
    __nreg = 0;
    #line 196 
    if (__err != 0) 
                    #line 196 
                    goto __regwrite_out;
  }
  #line 199 
  __ar->__anonCompField_ar9170_205.cmd_buf[__nreg * 2 + 1] = 1850168U;
  #line 199 
  __ar->__anonCompField_ar9170_205.cmd_buf[(__nreg + 1) * 2] = 513U;
  #line 199 
  __nreg ++;
  #line 199 
  if (__nreg > 6) {
    #line 199 
    if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                      #line 199 
                                                      __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0); else 
                                                                    #line 199 
                                                                    goto __regwrite_out;
    #line 199 
    __nreg = 0;
    #line 199 
    if (__err != 0) 
                    #line 199 
                    goto __regwrite_out;
  }
  #line 203 
  __ar->__anonCompField_ar9170_205.cmd_buf[__nreg * 2 + 1] = 1850784U;
  #line 203 
  __ar->__anonCompField_ar9170_205.cmd_buf[(__nreg + 1) * 2] = 134218096U;
  #line 203 
  __nreg ++;
  #line 203 
  if (__nreg > 6) {
    #line 203 
    if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                      #line 203 
                                                      __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0); else 
                                                                    #line 203 
                                                                    goto __regwrite_out;
    #line 203 
    __nreg = 0;
    #line 203 
    if (__err != 0) 
                    #line 203 
                    goto __regwrite_out;
  }
  #line 205 
  __ar->__anonCompField_ar9170_205.cmd_buf[__nreg * 2 + 1] = 1848892U;
  #line 205 
  __ar->__anonCompField_ar9170_205.cmd_buf[(__nreg + 1) * 2] = 261U;
  #line 205 
  __nreg ++;
  #line 205 
  if (__nreg > 6) {
    #line 205 
    if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                      #line 205 
                                                      __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0); else 
                                                                    #line 205 
                                                                    goto __regwrite_out;
    #line 205 
    __nreg = 0;
    #line 205 
    if (__err != 0) 
                    #line 205 
                    goto __regwrite_out;
  }
  #line 208 
  __ar->__anonCompField_ar9170_205.cmd_buf[__nreg * 2 + 1] = 1850268U;
  #line 208 
  __ar->__anonCompField_ar9170_205.cmd_buf[(__nreg + 1) * 2] = 524298U;
  #line 208 
  __nreg ++;
  #line 208 
  if (__nreg > 6) {
    #line 208 
    if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                      #line 208 
                                                      __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0); else 
                                                                    #line 208 
                                                                    goto __regwrite_out;
    #line 208 
    __nreg = 0;
    #line 208 
    if (__err != 0) 
                    #line 208 
                    goto __regwrite_out;
  }
  #line 209 
  __ar->__anonCompField_ar9170_205.cmd_buf[__nreg * 2 + 1] = 1850272U;
  #line 209 
  __ar->__anonCompField_ar9170_205.cmd_buf[(__nreg + 1) * 2] = 1313287U;
  #line 209 
  __nreg ++;
  #line 209 
  if (__nreg > 6) {
    #line 209 
    if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                      #line 209 
                                                      __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0); else 
                                                                    #line 209 
                                                                    goto __regwrite_out;
    #line 209 
    __nreg = 0;
    #line 209 
    if (__err != 0) 
                    #line 209 
                    goto __regwrite_out;
  }
  #line 211 
  __ar->__anonCompField_ar9170_205.cmd_buf[__nreg * 2 + 1] = 1848972U;
  #line 211 
  __ar->__anonCompField_ar9170_205.cmd_buf[(__nreg + 1) * 2] = 83951615U;
  #line 211 
  __nreg ++;
  #line 211 
  if (__nreg > 6) {
    #line 211 
    if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                      #line 211 
                                                      __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0); else 
                                                                    #line 211 
                                                                    goto __regwrite_out;
    #line 211 
    __nreg = 0;
    #line 211 
    if (__err != 0) 
                    #line 211 
                    goto __regwrite_out;
  }
  #line 214 
  __ar->__anonCompField_ar9170_205.cmd_buf[__nreg * 2 + 1] = 1850432U;
  #line 214 
  __ar->__anonCompField_ar9170_205.cmd_buf[(__nreg + 1) * 2] = 3U;
  #line 214 
  __nreg ++;
  #line 214 
  if (__nreg > 6) {
    #line 214 
    if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                      #line 214 
                                                      __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0); else 
                                                                    #line 214 
                                                                    goto __regwrite_out;
    #line 214 
    __nreg = 0;
    #line 214 
    if (__err != 0) 
                    #line 214 
                    goto __regwrite_out;
  }
  #line 219 
  __ar->__anonCompField_ar9170_205.cmd_buf[__nreg * 2 + 1] = 1848880U;
  #line 219 
  __ar->__anonCompField_ar9170_205.cmd_buf[(__nreg + 1) * 2] = 5391U;
  #line 219 
  __nreg ++;
  #line 219 
  if (__nreg > 6) {
    #line 219 
    if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                      #line 219 
                                                      __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0); else 
                                                                    #line 219 
                                                                    goto __regwrite_out;
    #line 219 
    __nreg = 0;
    #line 219 
    if (__err != 0) 
                    #line 219 
                    goto __regwrite_out;
  }
  #line 220 
  __ar->__anonCompField_ar9170_205.cmd_buf[__nreg * 2 + 1] = 1848884U;
  #line 220 
  __ar->__anonCompField_ar9170_205.cmd_buf[(__nreg + 1) * 2] = 5391U;
  #line 220 
  __nreg ++;
  #line 220 
  if (__nreg > 6) {
    #line 220 
    if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                      #line 220 
                                                      __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0); else 
                                                                    #line 220 
                                                                    goto __regwrite_out;
    #line 220 
    __nreg = 0;
    #line 220 
    if (__err != 0) 
                    #line 220 
                    goto __regwrite_out;
  }
  #line 221 
  __ar->__anonCompField_ar9170_205.cmd_buf[__nreg * 2 + 1] = 1848888U;
  #line 221 
  __ar->__anonCompField_ar9170_205.cmd_buf[(__nreg + 1) * 2] = 196659U;
  #line 221 
  __nreg ++;
  #line 221 
  if (__nreg > 6) {
    #line 221 
    if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                      #line 221 
                                                      __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0); else 
                                                                    #line 221 
                                                                    goto __regwrite_out;
    #line 221 
    __nreg = 0;
    #line 221 
    if (__err != 0) 
                    #line 221 
                    goto __regwrite_out;
  }
  #line 224 
  __ar->__anonCompField_ar9170_205.cmd_buf[__nreg * 2 + 1] = 1848980U;
  #line 224 
  __ar->__anonCompField_ar9170_205.cmd_buf[(__nreg + 1) * 2] = 67124254U;
  #line 224 
  __nreg ++;
  #line 224 
  if (__nreg > 6) {
    #line 224 
    if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                      #line 224 
                                                      __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0); else 
                                                                    #line 224 
                                                                    goto __regwrite_out;
    #line 224 
    __nreg = 0;
    #line 224 
    if (__err != 0) 
                    #line 224 
                    goto __regwrite_out;
  }
  #line 226 
  __ar->__anonCompField_ar9170_205.cmd_buf[__nreg * 2 + 1] = 1850448U;
  #line 226 
  __ar->__anonCompField_ar9170_205.cmd_buf[(__nreg + 1) * 2] = 65535U;
  #line 226 
  __nreg ++;
  #line 226 
  if (__nreg > 6) {
    #line 226 
    if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                      #line 226 
                                                      __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0); else 
                                                                    #line 226 
                                                                    goto __regwrite_out;
    #line 226 
    __nreg = 0;
    #line 226 
    if (__err != 0) 
                    #line 226 
                    goto __regwrite_out;
  }
  #line 229 
  __ar->__anonCompField_ar9170_205.cmd_buf[__nreg * 2 + 1] = 1848960U;
  #line 229 
  __ar->__anonCompField_ar9170_205.cmd_buf[(__nreg + 1) * 2] = 15728648U;
  #line 229 
  __nreg ++;
  #line 229 
  if (__nreg > 6) {
    #line 229 
    if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                      #line 229 
                                                      __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0); else 
                                                                    #line 229 
                                                                    goto __regwrite_out;
    #line 229 
    __nreg = 0;
    #line 229 
    if (__err != 0) 
                    #line 229 
                    goto __regwrite_out;
  }
  #line 232 
  __ar->__anonCompField_ar9170_205.cmd_buf[__nreg * 2 + 1] = 1848876U;
  #line 232 
  __ar->__anonCompField_ar9170_205.cmd_buf[(__nreg + 1) * 2] = 0U;
  #line 232 
  __nreg ++;
  #line 232 
  if (__nreg > 6) {
    #line 232 
    if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                      #line 232 
                                                      __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0); else 
                                                                    #line 232 
                                                                    goto __regwrite_out;
    #line 232 
    __nreg = 0;
    #line 232 
    if (__err != 0) 
                    #line 232 
                    goto __regwrite_out;
  }
  #line 235 
  __ar->__anonCompField_ar9170_205.cmd_buf[__nreg * 2 + 1] = 1850748U;
  #line 235 
  __ar->__anonCompField_ar9170_205.cmd_buf[(__nreg + 1) * 2] = 1114129U;
  #line 235 
  __nreg ++;
  #line 235 
  if (__nreg > 6) {
    #line 235 
    if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                      #line 235 
                                                      __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0); else 
                                                                    #line 235 
                                                                    goto __regwrite_out;
    #line 235 
    __nreg = 0;
    #line 235 
    if (__err != 0) 
                    #line 235 
                    goto __regwrite_out;
  }
  #line 237 
  __ar->__anonCompField_ar9170_205.cmd_buf[__nreg * 2 + 1] = 1850288U;
  #line 237 
  __ar->__anonCompField_ar9170_205.cmd_buf[(__nreg + 1) * 2] = 4U;
  #line 237 
  __nreg ++;
  #line 237 
  if (__nreg > 6) {
    #line 237 
    if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                      #line 237 
                                                      __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0); else 
                                                                    #line 237 
                                                                    goto __regwrite_out;
    #line 237 
    __nreg = 0;
    #line 237 
    if (__err != 0) 
                    #line 237 
                    goto __regwrite_out;
  }
  #line 241 
  __ar->__anonCompField_ar9170_205.cmd_buf[__nreg * 2 + 1] = 1850160U;
  #line 241 
  __ar->__anonCompField_ar9170_205.cmd_buf[(__nreg + 1) * 2] = 337514312U;
  #line 241 
  __nreg ++;
  #line 241 
  if (__nreg > 6) {
    #line 241 
    if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                      #line 241 
                                                      __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0); else 
                                                                    #line 241 
                                                                    goto __regwrite_out;
    #line 241 
    __nreg = 0;
    #line 241 
    if (__err != 0) 
                    #line 241 
                    goto __regwrite_out;
  }
  #line 245 
  __ar->__anonCompField_ar9170_205.cmd_buf[__nreg * 2 + 1] = 1848868U;
  #line 245 
  __ar->__anonCompField_ar9170_205.cmd_buf[(__nreg + 1) * 2] = 4294967295U;
  #line 245 
  __nreg ++;
  #line 245 
  if (__nreg > 6) {
    #line 245 
    if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                      #line 245 
                                                      __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0); else 
                                                                    #line 245 
                                                                    goto __regwrite_out;
    #line 245 
    __nreg = 0;
    #line 245 
    if (__err != 0) 
                    #line 245 
                    goto __regwrite_out;
  }
  #line 246 
  __ar->__anonCompField_ar9170_205.cmd_buf[__nreg * 2 + 1] = 1848872U;
  #line 246 
  __ar->__anonCompField_ar9170_205.cmd_buf[(__nreg + 1) * 2] = 4294967295U;
  #line 246 
  __nreg ++;
  #line 246 
  if (__nreg > 6) {
    #line 246 
    if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                      #line 246 
                                                      __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0); else 
                                                                    #line 246 
                                                                    goto __regwrite_out;
    #line 246 
    __nreg = 0;
    #line 246 
    if (__err != 0) 
                    #line 246 
                    goto __regwrite_out;
  }
  #line 249 
  __ar->__anonCompField_ar9170_205.cmd_buf[__nreg * 2 + 1] = 1848612U;
  #line 249 
  __ar->__anonCompField_ar9170_205.cmd_buf[(__nreg + 1) * 2] = 0U;
  #line 249 
  __nreg ++;
  #line 249 
  if (__nreg > 6) {
    #line 249 
    if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                      #line 249 
                                                      __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0); else 
                                                                    #line 249 
                                                                    goto __regwrite_out;
    #line 249 
    __nreg = 0;
    #line 249 
    if (__err != 0) 
                    #line 249 
                    goto __regwrite_out;
  }
  #line 250 
  __ar->__anonCompField_ar9170_205.cmd_buf[__nreg * 2 + 1] = 1848608U;
  #line 250 
  __ar->__anonCompField_ar9170_205.cmd_buf[(__nreg + 1) * 2] = 0U;
  #line 250 
  __nreg ++;
  #line 250 
  if (__nreg > 6) {
    #line 250 
    if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                      #line 250 
                                                      __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0); else 
                                                                    #line 250 
                                                                    goto __regwrite_out;
    #line 250 
    __nreg = 0;
    #line 250 
    if (__err != 0) 
                    #line 250 
                    goto __regwrite_out;
  }
  #line 252 
  __regwrite_out: 
                  #line 252 
  ;
  #line 252 
  if (__err == 0 && __nreg != 0) {
    #line 252 
    if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                      #line 252 
                                                      __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0);
    #line 252 
    __nreg = 0;
  }
  #line 254 
  return __err;
}

#line 257  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/mac.c"
static int carl9170_set_mac_reg(struct ar9170 *ar, u32 reg, u8 *mac)
{
  #line 260 
  u8 zero[6U] = {(unsigned char)0U};
  #line 262 
  if (mac == (u8 *)0U) 
                       #line 263 
                       mac = (u8 *)(& zero);
  {
    #line 265 
    int __nreg = 0;
    #line 265 
    int __err = 0;
    #line 265 
    struct ar9170 *__ar = ar;
    #line 267 
    __ar->__anonCompField_ar9170_205.cmd_buf[__nreg * 2 + 1] = reg;
    #line 267 
    __ar->__anonCompField_ar9170_205.cmd_buf[(__nreg + 1) * 2] = get_unaligned_le32((void *)mac);
    #line 267 
    __nreg ++;
    #line 267 
    if (__nreg > 6) {
      #line 267 
      if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                        #line 267 
                                                        __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0); else 
                                                                    #line 267 
                                                                    goto __regwrite_out;
      #line 267 
      __nreg = 0;
      #line 267 
      if (__err != 0) 
                      #line 267 
                      goto __regwrite_out;
    }
    {
      #line 268 
      __ar->__anonCompField_ar9170_205.cmd_buf[__nreg * 2 + 1] = reg + 4U;
      #line 268 
      __ar->__anonCompField_ar9170_205.cmd_buf[(__nreg + 1) * 2] = (unsigned int)get_unaligned_le16((void *)(mac + 4U));
      #line 268 
      __nreg ++;
      #line 268 
      if (__nreg > 6) {
        #line 268 
        if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                          #line 268 
                                                          __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0); else 
                                                                    #line 268 
                                                                    goto __regwrite_out;
        #line 268 
        __nreg = 0;
        #line 268 
        if (__err != 0) 
                        #line 268 
                        goto __regwrite_out;
      }
    }
    #line 270 
    __regwrite_out: 
                    #line 270 
    ;
    #line 270 
    if (__err == 0 && __nreg != 0) {
      #line 270 
      if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                        #line 270 
                                                        __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0);
      #line 270 
      __nreg = 0;
    }
    #line 272 
    return __err;
  }
}

#line 275  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/mac.c"
int carl9170_mod_virtual_mac(struct ar9170 *ar, unsigned int id, u8 *mac)
{
  #line 278 
  int __ret_warn_on;
  #line 278 
  __ret_warn_on = ar->fw.vif_num <= id;
  #line 278 
  if ((long)(__ret_warn_on != 0) != 0L) {
    #line 279 
    ldv_inline_asm();
    #line 280 
    ldv_inline_asm();
  }
  #line 278 
  if ((long)((long)(__ret_warn_on != 0)) != 0L) 
                                                #line 279 
                                                return -22;
  #line 281 
  return carl9170_set_mac_reg(ar,(id + 231295U) * 8U,mac);
}

#line 285  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/mac.c"
int carl9170_update_multicast(struct ar9170 *ar, u64 mc_hash)
{
  #line 287 
  int err;
  {
    #line 289 
    int __nreg = 0;
    #line 289 
    int __err = 0;
    #line 289 
    struct ar9170 *__ar = ar;
    #line 290 
    __ar->__anonCompField_ar9170_205.cmd_buf[__nreg * 2 + 1] = 1848872U;
    #line 290 
    __ar->__anonCompField_ar9170_205.cmd_buf[(__nreg + 1) * 2] = (unsigned int)(mc_hash >> 32);
    #line 290 
    __nreg ++;
    #line 290 
    if (__nreg > 6) {
      #line 290 
      if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                        #line 290 
                                                        __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0); else 
                                                                    #line 290 
                                                                    goto __regwrite_out;
      #line 290 
      __nreg = 0;
      #line 290 
      if (__err != 0) 
                      #line 290 
                      goto __regwrite_out;
    }
    #line 291 
    __ar->__anonCompField_ar9170_205.cmd_buf[__nreg * 2 + 1] = 1848868U;
    #line 291 
    __ar->__anonCompField_ar9170_205.cmd_buf[(__nreg + 1) * 2] = (unsigned int)mc_hash;
    #line 291 
    __nreg ++;
    #line 291 
    if (__nreg > 6) {
      #line 291 
      if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                        #line 291 
                                                        __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0); else 
                                                                    #line 291 
                                                                    goto __regwrite_out;
      #line 291 
      __nreg = 0;
      #line 291 
      if (__err != 0) 
                      #line 291 
                      goto __regwrite_out;
    }
    #line 292 
    __regwrite_out: 
                    #line 292 
    ;
    #line 292 
    if (__err == 0 && __nreg != 0) {
      #line 292 
      if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                        #line 292 
                                                        __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0);
      #line 292 
      __nreg = 0;
    }
    #line 293 
    err = __err;
  }
  #line 294 
  if (err != 0) 
                #line 295 
                return err;
  #line 297 
  ar->cur_mc_hash = mc_hash;
  #line 298 
  return 0;
}

#line 301  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/mac.c"
int carl9170_set_operating_mode(struct ar9170 *ar)
{
  #line 303 
  struct ieee80211_vif *vif;
  #line 305 
  u8 *mac_addr;
  #line 305 
  u8 *bssid;
  #line 304 
  struct ath_common *common = & ar->common;
  #line 306 
  u32 cam_mode = 251658240U;
  #line 307 
  u32 enc_mode = 116U;
  #line 309 
  u32 rx_ctrl = 3U;
  #line 311 
  u32 sniffer = 33554432U;
  #line 312 
  int err = 0;
  #line 314 
  rcu_read_lock();
  #line 315 
  vif = carl9170_get_main_vif_1(ar);
  #line 317 
  if (vif != (struct ieee80211_vif *)0) {
    #line 318 
    mac_addr = (u8 *)(& common->macaddr);
    #line 319 
    bssid = (u8 *)(& common->curbssid);
    #line 321 
    switch ((unsigned int)vif->type) {
      #line 322 
      case (unsigned int)1: 
                            #line 322 
      ;
      #line 323 
      cam_mode |= 224U;
      #line 324 
      break;
      #line 325 
      case (unsigned int)7: 
                            #line 325 
      ;
      #line 326 
      case (unsigned int)3: 
                            #line 326 
      ;
      #line 327 
      cam_mode |= 161U;
      #line 330 
      rx_ctrl |= 268435456U;
      #line 331 
      break;
      #line 332 
      case (unsigned int)5: 
                            #line 332 
      ;
      #line 333 
      cam_mode |= 3U;
      #line 334 
      rx_ctrl |= 268435456U;
      #line 335 
      break;
      #line 336 
      case (unsigned int)2: 
                            #line 336 
      ;
      #line 337 
      cam_mode |= 2U;
      #line 338 
      rx_ctrl |= 268435456U;
      #line 339 
      break;
      #line 340 
      default: 
               #line 340 
      ;
      {
        #line 341 
        int __ret_warn_on = 1;
        #line 341 
        if ((long)(__ret_warn_on != 0) != 0L) {
          #line 341 
          __warn_printk((char *)"Unsupported operation mode %x\n",(unsigned int)vif->type);
          #line 342 
          ldv_inline_asm();
          #line 343 
          ldv_inline_asm();
        }
        #line 341 
        long tmp = (long)(__ret_warn_on != 0);
      }
      #line 342 
      err = -95;
      #line 343 
      break;
    }
  }
  else {
    #line 361 
    cam_mode |= 2U;
    #line 362 
    rx_ctrl |= 268435456U;
    #line 363 
    mac_addr = (u8 *)(& common->macaddr);
    #line 364 
    bssid = (u8 *)0U;
  }
  #line 366 
  rcu_read_unlock();
  #line 368 
  if (err != 0) 
                #line 369 
                return err;
  #line 371 
  if ((int)ar->rx_software_decryption != 0) 
                                            #line 372 
                                            enc_mode |= 8U;
  #line 374 
  if ((int)ar->sniffer_enabled != 0) 
                                     #line 375 
                                     enc_mode |= 8U;
  #line 378 
  err = carl9170_set_mac_reg(ar,1848848U,mac_addr);
  #line 379 
  if (err != 0) 
                #line 380 
                return err;
  #line 382 
  err = carl9170_set_mac_reg(ar,1848856U,bssid);
  #line 383 
  if (err != 0) 
                #line 384 
                return err;
  {
    #line 386 
    int __nreg = 0;
    #line 386 
    int __err = 0;
    #line 386 
    struct ar9170 *__ar = ar;
    #line 387 
    __ar->__anonCompField_ar9170_205.cmd_buf[__nreg * 2 + 1] = 1848948U;
    #line 387 
    __ar->__anonCompField_ar9170_205.cmd_buf[(__nreg + 1) * 2] = sniffer;
    #line 387 
    __nreg ++;
    #line 387 
    if (__nreg > 6) {
      #line 387 
      if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                        #line 387 
                                                        __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0); else 
                                                                    #line 387 
                                                                    goto __regwrite_out;
      #line 387 
      __nreg = 0;
      #line 387 
      if (__err != 0) 
                      #line 387 
                      goto __regwrite_out;
    }
    #line 388 
    __ar->__anonCompField_ar9170_205.cmd_buf[__nreg * 2 + 1] = 1849088U;
    #line 388 
    __ar->__anonCompField_ar9170_205.cmd_buf[(__nreg + 1) * 2] = cam_mode;
    #line 388 
    __nreg ++;
    #line 388 
    if (__nreg > 6) {
      #line 388 
      if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                        #line 388 
                                                        __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0); else 
                                                                    #line 388 
                                                                    goto __regwrite_out;
      #line 388 
      __nreg = 0;
      #line 388 
      if (__err != 0) 
                      #line 388 
                      goto __regwrite_out;
    }
    #line 389 
    __ar->__anonCompField_ar9170_205.cmd_buf[__nreg * 2 + 1] = 1848952U;
    #line 389 
    __ar->__anonCompField_ar9170_205.cmd_buf[(__nreg + 1) * 2] = enc_mode;
    #line 389 
    __nreg ++;
    #line 389 
    if (__nreg > 6) {
      #line 389 
      if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                        #line 389 
                                                        __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0); else 
                                                                    #line 389 
                                                                    goto __regwrite_out;
      #line 389 
      __nreg = 0;
      #line 389 
      if (__err != 0) 
                      #line 389 
                      goto __regwrite_out;
    }
    #line 390 
    __ar->__anonCompField_ar9170_205.cmd_buf[__nreg * 2 + 1] = 1850432U;
    #line 390 
    __ar->__anonCompField_ar9170_205.cmd_buf[(__nreg + 1) * 2] = rx_ctrl;
    #line 390 
    __nreg ++;
    #line 390 
    if (__nreg > 6) {
      #line 390 
      if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                        #line 390 
                                                        __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0); else 
                                                                    #line 390 
                                                                    goto __regwrite_out;
      #line 390 
      __nreg = 0;
      #line 390 
      if (__err != 0) 
                      #line 390 
                      goto __regwrite_out;
    }
    #line 391 
    __regwrite_out: 
                    #line 391 
    ;
    #line 391 
    if (__err == 0 && __nreg != 0) {
      #line 391 
      if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                        #line 391 
                                                        __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0);
      #line 391 
      __nreg = 0;
    }
    #line 393 
    return __err;
  }
}

#line 396  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/mac.c"
int carl9170_set_hwretry_limit(struct ar9170 *ar, unsigned int max_retry)
{
  #line 398 
  unsigned int __UNIQUE_ID___x562;
  #line 398 
  unsigned int tmp_0;
  {
    #line 398 
    __UNIQUE_ID___x562 = 209715U;
    #line 398 
    unsigned int __UNIQUE_ID___y563 = max_retry * 69905U;
    #line 398 
    if (__UNIQUE_ID___x562 < __UNIQUE_ID___y563) 
                                                 #line 398 
                                                 tmp_0 = __UNIQUE_ID___x562; else 
                                                                    #line 398 
                                                                    tmp_0 = __UNIQUE_ID___y563;
    }
  #line 398 
  u32 tmp = tmp_0;
  #line 400 
  return carl9170_write_reg(ar,1850152U,tmp);
}

#line 403  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/mac.c"
int carl9170_set_beacon_timers(struct ar9170 *ar)
{
  #line 405 
  struct ieee80211_vif *vif;
  #line 406 
  u32 v = 0U;
  #line 407 
  u32 pretbtt = 0U;
  #line 409 
  rcu_read_lock();
  #line 410 
  vif = carl9170_get_main_vif_1(ar);
  #line 412 
  if (vif != (struct ieee80211_vif *)0) {
    #line 413 
    struct carl9170_vif_info *mvif;
    #line 414 
    mvif = (struct carl9170_vif_info *)(& vif->drv_priv);
    #line 416 
    if ((int)mvif->enable_beacon != 0) {
      #line 416 
      int __ret_warn_on_0;
      #line 416 
      __ret_warn_on_0 = ar->beacon_enabled == 0U;
      #line 416 
      if ((long)(__ret_warn_on_0 != 0) != 0L) {
        #line 417 
        ldv_inline_asm();
        #line 418 
        ldv_inline_asm();
      }
      #line 416 
      if ((long)((long)(__ret_warn_on_0 != 0)) == 0L) {
        #line 417 
        ar->global_beacon_int = (unsigned int)vif->bss_conf.beacon_int / ar->beacon_enabled;
        #line 420 
        v = (v & 4278255615U) | ((unsigned int)((int)vif->bss_conf.dtim_period << 16) & 16711680U);
        #line 423 
        switch ((unsigned int)vif->type) {
          #line 424 
          case (unsigned int)7: 
                                #line 424 
          ;
          #line 425 
          case (unsigned int)1: 
                                #line 425 
          ;
          #line 426 
          v |= 33554432U;
          #line 427 
          break;
          #line 428 
          case (unsigned int)3: 
                                #line 428 
          ;
          #line 429 
          v |= 16777216U;
          #line 430 
          break;
          #line 431 
          default: 
                   #line 431 
          ;
          {
            #line 432 
            int __ret_warn_on = 1;
            #line 432 
            if ((long)(__ret_warn_on != 0) != 0L) {
              #line 433 
              ldv_inline_asm();
              #line 434 
              ldv_inline_asm();
            }
            #line 432 
            long tmp = (long)(__ret_warn_on != 0);
          }
          #line 433 
          break;
        }
      }
      else 
           #line 416 
           goto _LAND;
    }
    else {
      #line 416 
      _LAND: 
             #line 435 
      ;
      #line 435 
      if (vif->type == (unsigned int)NL80211_IFTYPE_STATION) {
        #line 436 
        ar->global_beacon_int = (unsigned int)vif->bss_conf.beacon_int;
        #line 438 
        v = (v & 4278255615U) | ((unsigned int)((int)(ar->hw)->conf.ps_dtim_period << 16) & 16711680U);
        #line 441 
        v |= 201326592U;
      }
    }
    #line 445 
    if (ar->global_beacon_int != 0U) {
      #line 446 
      if (ar->global_beacon_int <= 14U) {
        #line 447 
        rcu_read_unlock();
        #line 448 
        return -34;
      }
      #line 451 
      ar->global_pretbtt = ar->global_beacon_int + 4294967290U;
    }
    else 
         #line 454 
         ar->global_pretbtt = 0U;
  }
  else {
    #line 457 
    ar->global_beacon_int = 0U;
    #line 458 
    ar->global_pretbtt = 0U;
  }
  #line 461 
  rcu_read_unlock();
  #line 463 
  v = (v & 4294901760U) | (ar->global_beacon_int & 65535U);
  #line 464 
  pretbtt = (pretbtt & 4294901760U) | (ar->global_pretbtt & 65535U);
  #line 465 
  pretbtt = (pretbtt & 65535U) | (ar->global_pretbtt << 16);
  {
    #line 467 
    int __nreg = 0;
    #line 467 
    int __err = 0;
    #line 467 
    struct ar9170 *__ar = ar;
    #line 468 
    __ar->__anonCompField_ar9170_205.cmd_buf[__nreg * 2 + 1] = 1848612U;
    #line 468 
    __ar->__anonCompField_ar9170_205.cmd_buf[(__nreg + 1) * 2] = pretbtt;
    #line 468 
    __nreg ++;
    #line 468 
    if (__nreg > 6) {
      #line 468 
      if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                        #line 468 
                                                        __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0); else 
                                                                    #line 468 
                                                                    goto __regwrite_out;
      #line 468 
      __nreg = 0;
      #line 468 
      if (__err != 0) 
                      #line 468 
                      goto __regwrite_out;
    }
    #line 469 
    __ar->__anonCompField_ar9170_205.cmd_buf[__nreg * 2 + 1] = 1848608U;
    #line 469 
    __ar->__anonCompField_ar9170_205.cmd_buf[(__nreg + 1) * 2] = v;
    #line 469 
    __nreg ++;
    #line 469 
    if (__nreg > 6) {
      #line 469 
      if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                        #line 469 
                                                        __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0); else 
                                                                    #line 469 
                                                                    goto __regwrite_out;
      #line 469 
      __nreg = 0;
      #line 469 
      if (__err != 0) 
                      #line 469 
                      goto __regwrite_out;
    }
    #line 470 
    __regwrite_out: 
                    #line 470 
    ;
    #line 470 
    if (__err == 0 && __nreg != 0) {
      #line 470 
      if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                        #line 470 
                                                        __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0);
      #line 470 
      __nreg = 0;
    }
    #line 471 
    return __err;
  }
}

#line 474  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/mac.c"
int carl9170_upload_key(struct ar9170 *ar, u8 id, u8 *mac, u8 ktype, u8 keyidx, u8 *keydata, int keylen)
{
  #line 482 
  u8 *tmp;
  #line 478 
  struct carl9170_set_key_cmd key = {.user = (unsigned short)0, .keyId = (unsigned short)0, .type = (unsigned short)0, .macAddr = {(unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0}, .key = {0U, 0U, 0U, 0U}};
  #line 479 
  u8 bcast[6U] = {(unsigned char)255U, (unsigned char)255U, (unsigned char)255U, (unsigned char)255U, (unsigned char)255U, (unsigned char)255U};
  #line 482 
  tmp = (u8 *)(mac != (u8 *)0U);
  #line 482 
  if (! tmp) 
             #line 482 
             tmp = (u8 *)(& bcast);
  #line 482 
  mac = tmp;
  #line 484 
  key.user = (unsigned short)id;
  #line 485 
  key.keyId = (unsigned short)keyidx;
  #line 486 
  key.type = (unsigned short)ktype;
  #line 487 
  memcpy((void *)(& key.macAddr),(void *)mac,6UL);
  #line 488 
  if (keydata != (u8 *)0U) 
                           #line 489 
                           memcpy((void *)(& key.key),(void *)keydata,(unsigned long)keylen);
  #line 491 
  return carl9170_exec_cmd(ar,(enum carl9170_cmd_oids)CARL9170_CMD_EKEY,28U,
                          (void *)(& key),0U,(void *)0);
}

#line 495  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/mac.c"
int carl9170_disable_key(struct ar9170 *ar, u8 id)
{
  #line 497 
  struct carl9170_disable_key_cmd key = {.user = (unsigned short)0, .padding = (unsigned short)0};
  #line 499 
  key.user = (unsigned short)id;
  #line 501 
  return carl9170_exec_cmd(ar,(enum carl9170_cmd_oids)CARL9170_CMD_DKEY,4U,
                        (void *)(& key),0U,(void *)0);
}

#line 505  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/mac.c"
int carl9170_set_mac_tpc(struct ar9170 *ar, struct ieee80211_channel *channel)
{
  #line 525 
  unsigned int __UNIQUE_ID___x567;
  #line 525 
  unsigned int tmp;
  #line 507 
  unsigned int power;
  #line 507 
  unsigned int chains;
  #line 509 
  if ((unsigned int)ar->eeprom.tx_mask != 1U) 
                                              #line 510 
                                              chains = 5U; else 
                                                                #line 512 
                                                                chains = 1U;
  #line 514 
  switch ((unsigned int)channel->band) {
    #line 515 
    case (unsigned int)0: 
                          #line 515 
    ;
    #line 516 
    power = (unsigned int)ar->power_2G_ofdm[0] & 63U;
    #line 517 
    break;
    #line 518 
    case (unsigned int)1: 
                          #line 518 
    ;
    #line 519 
    power = (unsigned int)ar->power_5G_leg[0] & 63U;
    #line 520 
    break;
    #line 521 
    default: 
             #line 521 
    ;
    #line 523 
    ldv_inline_asm();
    #line 524 
    ldv_inline_asm();
    #line 525 
    ldv_inline_asm();
    #line 522 
    ;
  }
  {
    #line 525 
    __UNIQUE_ID___x567 = power;
    #line 525 
    unsigned int __UNIQUE_ID___y568 = (unsigned int)((ar->hw)->conf.power_level * 2);
    #line 525 
    if (__UNIQUE_ID___x567 < __UNIQUE_ID___y568) 
                                                 #line 525 
                                                 tmp = __UNIQUE_ID___x567; else 
                                                                    #line 525 
                                                                    tmp = __UNIQUE_ID___y568;
    }
  #line 525 
  power = tmp;
  {
    #line 527 
    int __nreg = 0;
    #line 527 
    int __err = 0;
    #line 527 
    struct ar9170 *__ar = ar;
    #line 528 
    __ar->__anonCompField_ar9170_205.cmd_buf[__nreg * 2 + 1] = 1848980U;
    #line 528 
    __ar->__anonCompField_ar9170_205.cmd_buf[(__nreg + 1) * 2] = ((power << 20) | (chains << 26)) | 15390U;
    #line 528 
    __nreg ++;
    #line 528 
    if (__nreg > 6) {
      #line 528 
      if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                        #line 528 
                                                        __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0); else 
                                                                    #line 528 
                                                                    goto __regwrite_out;
      #line 528 
      __nreg = 0;
      #line 528 
      if (__err != 0) 
                      #line 528 
                      goto __regwrite_out;
    }
    #line 530 
    __ar->__anonCompField_ar9170_205.cmd_buf[__nreg * 2 + 1] = 1850292U;
    #line 530 
    __ar->__anonCompField_ar9170_205.cmd_buf[(__nreg + 1) * 2] = (((power << 5) | (chains << 11)) | (power << 21)) | (chains << 27);
    #line 530 
    __nreg ++;
    #line 530 
    if (__nreg > 6) {
      #line 530 
      if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                        #line 530 
                                                        __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0); else 
                                                                    #line 530 
                                                                    goto __regwrite_out;
      #line 530 
      __nreg = 0;
      #line 530 
      if (__err != 0) 
                      #line 530 
                      goto __regwrite_out;
    }
    #line 533 
    __ar->__anonCompField_ar9170_205.cmd_buf[__nreg * 2 + 1] = 1850296U;
    #line 533 
    __ar->__anonCompField_ar9170_205.cmd_buf[(__nreg + 1) * 2] = (((power << 5) | (chains << 11)) | (power << 21)) | (chains << 27);
    #line 533 
    __nreg ++;
    #line 533 
    if (__nreg > 6) {
      #line 533 
      if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                        #line 533 
                                                        __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0); else 
                                                                    #line 533 
                                                                    goto __regwrite_out;
      #line 533 
      __nreg = 0;
      #line 533 
      if (__err != 0) 
                      #line 533 
                      goto __regwrite_out;
    }
    #line 536 
    __regwrite_out: 
                    #line 536 
    ;
    #line 536 
    if (__err == 0 && __nreg != 0) {
      #line 536 
      if (__ar->state > (unsigned int)CARL9170_STOPPED) 
                                                        #line 536 
                                                        __err = carl9170_exec_cmd(__ar,(enum carl9170_cmd_oids)CARL9170_CMD_WREG,(unsigned int)(__nreg * 8),(void *)(& __ar->__anonCompField_ar9170_205.cmd_buf[1]),0U,(void *)0);
      #line 536 
      __nreg = 0;
    }
    #line 537 
    return __err;
  }
}

#line 324  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/bitops.h"
__inline static int fls(unsigned int x)
{
  #line 326 
  int r;
  #line 327 
  ldv_inline_asm();
  #line 351 
  return r + 1;
}

#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/log2.h"
__inline static int __ilog2_u32(u32 n)
{
  #line 24 
  return fls(n) + -1;
}

#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/string_64.h"
#line 61 
int memcmp(void *, void *, size_t);
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/string.h"
#line 29 
size_t strlcpy(char *, char *, size_t);
#line 89 
#line 89 
__kernel_size_t strnlen(char *, __kernel_size_t);
#line 41  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/atomic.h"
__inline static void arch_atomic_set_2(atomic_t *v, int i)
{
  #line 44 
  union __anonunion___u_8572 __u = {.__val = i};
  #line 43 
  __write_once_size((void *)(& v->counter),(void *)(& __u.__c),4);
  #line 43 
  int tmp = __u.__val;
  #line 45 
  return;
}

#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/atomic-instrumented.h"
__inline static void atomic_set_2(atomic_t *v, int i)
{
  #line 44 
  kasan_check_read((void *)v,4U);
  #line 45 
  arch_atomic_set_2(v,i);
  #line 46 
  return;
}

#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/crc32.h"
#line 11 
u32 crc32_le(u32, unsigned char *, size_t);
#line 108  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pm_wakeup.h"
#line 108 
int device_set_wakeup_enable(struct device *, bool);
#line 1714  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
#line 1714 
void _dev_warn(struct device *, char * , ...);
#line 245  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/fwdesc.h"
__inline static bool carl9170fw_supports(__le32 list, u8 feature)
{
  #line 247 
  return (_Bool)(((unsigned long)list & (1UL << (int)feature)) != 0UL);
}

#line 250  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/fwdesc.h"
__inline static bool carl9170fw_desc_cmp(struct carl9170fw_desc_head *head, u8 *descid, u16 min_len, u8 compatible_revision)
{
  #line 254 
  if ((((int)head->cur_ver >= (int)compatible_revision && (int)head->min_ver <= (int)compatible_revision) && ((((int)*descid == (int)head->magic[0] && (int)*(descid + 1U) == (int)head->magic[1]) && (int)*(descid + 2U) == (int)head->magic[2]) && (int)*(descid + 3U) == (int)head->magic[3])) && (int)head->length >= (int)min_len) 
    #line 258 
    return (_Bool)1;
  #line 260 
  return (_Bool)0;
}

#line 266  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/fwdesc.h"
__inline static bool carl9170fw_size_check(unsigned int len)
{
  #line 268 
  return (_Bool)(len + 4294967264U <= 16352U);
}

#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/fw.c"
static u8 otus_magic[4U] = {(unsigned char)'O', (unsigned char)'T', (unsigned char)'A', (unsigned char)'R'};
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/fw.c"
static void *carl9170_fw_find_desc(struct ar9170 *ar, u8 *descid, unsigned int len, u8 compatible_revision)
{
  #line 23 
  struct carl9170fw_desc_head *iter;
  #line 25 
  iter = ar->fw.desc;
  #line 25 
  while (1) {
    #line 25 
    if (memcmp((void *)(& iter->magic),(void *)"LAST",4UL) != 0) 
      #line 25 
      if ((unsigned int)iter->length > 7U) {
        #line 25 
        if (! ((unsigned int)iter->length <= 8191U)) 
                                                     #line 25 
                                                     break;
      }
      else 
           #line 25 
           break;
    else 
         #line 25 
         break;
    #line 26 
    if ((int)carl9170fw_desc_cmp(iter,descid,
                          (unsigned short)((int)((unsigned short)len)),
                          (unsigned char)((int)compatible_revision)) != 0) 
      #line 28 
      return (void *)iter;
    #line 25 
    iter = (struct carl9170fw_desc_head *)((unsigned long)iter->length + (unsigned long)iter);
  }
  #line 32 
  if ((int)carl9170fw_desc_cmp(iter,descid,
                            (unsigned short)((int)((unsigned short)len)),
                            (unsigned char)((int)compatible_revision)) != 0) 
    #line 34 
    return (void *)iter;
  #line 36 
  return (void *)0;
}

#line 39  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/fw.c"
static int carl9170_fw_verify_descs(struct ar9170 *ar, struct carl9170fw_desc_head *head, unsigned int max_len)
{
  #line 49 
  unsigned int __UNIQUE_ID___x560;
  #line 49 
  unsigned int tmp;
  #line 42 
  struct carl9170fw_desc_head *pos;
  #line 43 
  unsigned long pos_addr;
  #line 43 
  unsigned long end_addr;
  #line 44 
  unsigned int pos_length;
  #line 46 
  if (max_len <= 7U) 
                     #line 47 
                     return -61;
  {
    #line 49 
    __UNIQUE_ID___x560 = 8192U;
    #line 49 
    unsigned int __UNIQUE_ID___y561 = max_len;
    #line 49 
    if (__UNIQUE_ID___x560 < __UNIQUE_ID___y561) 
                                                 #line 49 
                                                 tmp = __UNIQUE_ID___x560; else 
                                                                    #line 49 
                                                                    tmp = __UNIQUE_ID___y561;
    }
  #line 49 
  max_len = tmp;
  #line 51 
  pos = head;
  #line 52 
  pos_addr = (unsigned long)pos;
  #line 53 
  end_addr = (unsigned long)max_len + pos_addr;
  #line 55 
  while (pos_addr < end_addr) {
    #line 56 
    if (pos_addr + 8UL > end_addr) 
                                   #line 57 
                                   return -7;
    #line 59 
    pos_length = (unsigned int)pos->length;
    #line 61 
    if (pos_length <= 7U) 
                          #line 62 
                          return -74;
    #line 64 
    if (pos_length > max_len) 
                              #line 65 
                              return -75;
    #line 67 
    if ((unsigned long)pos_length + pos_addr > end_addr) 
                                                         #line 68 
                                                         return -90;
    #line 70 
    if ((int)carl9170fw_desc_cmp(pos,(u8 *)"LAST",(unsigned short)8,
                            (unsigned char)2) != 0) 
      #line 73 
      return 0;
    #line 75 
    pos_addr = (unsigned long)pos_length + pos_addr;
    #line 76 
    pos = (struct carl9170fw_desc_head *)pos_addr;
    #line 77 
    max_len -= pos_length;
  }
  #line 79 
  return -22;
}

#line 82  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/fw.c"
static void carl9170_fw_info(struct ar9170 *ar)
{
  #line 84 
  struct carl9170fw_motd_desc *motd_desc;
  #line 85 
  unsigned int str_ver_len;
  #line 86 
  u32 fw_date;
  #line 88 
  _dev_info(& (ar->udev)->dev,(char *)"driver   API: %s 2%03d-%02d-%02d [%d-%d]\n",(char *)"1.9.9",16,2,15,1,1);
  #line 93 
  motd_desc = (struct carl9170fw_motd_desc *)carl9170_fw_find_desc(ar,(u8 *)"MOTD",56U,(unsigned char)2);
  #line 96 
  if (motd_desc != (struct carl9170fw_motd_desc *)0) {
    #line 97 
    str_ver_len = (unsigned int)strnlen((char *)(& motd_desc->release),20UL);
    #line 100 
    fw_date = motd_desc->fw_year_month_day;
    #line 102 
    _dev_info(& (ar->udev)->dev,(char *)"firmware API: %.*s 2%03d-%02d-%02d\n",str_ver_len,(char *)(& motd_desc->release),fw_date / 372U + 10U,(fw_date / 31U) % 12U + 1U,fw_date % 31U + 1U);
    #line 108 
    strlcpy((char *)(& ((ar->hw)->wiphy)->fw_version),(char *)(& motd_desc->release),32UL);
  }
  #line 110 
  return;
}

#line 113  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/fw.c"
static bool valid_dma_addr(u32 address)
{
  #line 115 
  if (address + 4293918720U <= 98303U) 
                                       #line 117 
                                       return (_Bool)1;
  #line 119 
  return (_Bool)0;
}

#line 122  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/fw.c"
static bool valid_cpu_addr(u32 address)
{
  #line 124 
  if ((int)valid_dma_addr(address) != 0) 
                                         #line 126 
                                         return (_Bool)1;
  else 
    #line 124 
    if (address + 4292870144U <= 32767U) 
                                         #line 126 
                                         return (_Bool)1;
  #line 128 
  return (_Bool)0;
}

#line 131  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/fw.c"
static int carl9170_fw_checksum(struct ar9170 *ar, __u8 *data, size_t len)
{
  #line 162 
  unsigned int __UNIQUE_ID___x562;
  #line 162 
  unsigned int tmp_2;
  #line 134 
  struct carl9170fw_otus_desc *otus_desc;
  #line 135 
  struct carl9170fw_last_desc *last_desc;
  #line 136 
  struct carl9170fw_chk_desc *chk_desc;
  #line 137 
  unsigned long fin;
  #line 137 
  unsigned long diff;
  #line 138 
  unsigned int dsc_len;
  #line 139 
  u32 crc32;
  #line 141 
  last_desc = (struct carl9170fw_last_desc *)carl9170_fw_find_desc(ar,(u8 *)"LAST",8U,(unsigned char)2);
  #line 143 
  if (last_desc == (struct carl9170fw_last_desc *)0) 
                                                     #line 144 
                                                     return -22;
  #line 146 
  otus_desc = (struct carl9170fw_otus_desc *)carl9170_fw_find_desc(ar,(u8 *)"OTAR",32U,(unsigned char)7);
  #line 148 
  if (otus_desc == (struct carl9170fw_otus_desc *)0) {
    #line 149 
    _dev_err(& (ar->udev)->dev,(char *)"failed to find compatible firmware ");
    #line 151 
    return -61;
  }
  #line 154 
  chk_desc = (struct carl9170fw_chk_desc *)carl9170_fw_find_desc(ar,(u8 *)"CHK\000",16U,(unsigned char)2);
  #line 157 
  if (chk_desc == (struct carl9170fw_chk_desc *)0) {
    #line 158 
    _dev_warn(& (ar->udev)->dev,(char *)"Unprotected firmware image.\n");
    #line 159 
    return 0;
  }
  {
    #line 162 
    __UNIQUE_ID___x562 = (unsigned int)len;
    #line 162 
    unsigned int __UNIQUE_ID___y563 = (unsigned int)((unsigned long)chk_desc - (unsigned long)otus_desc);
    #line 162 
    if (__UNIQUE_ID___x562 < __UNIQUE_ID___y563) 
                                                 #line 162 
                                                 tmp_2 = __UNIQUE_ID___x562; else 
                                                                    #line 162 
                                                                    tmp_2 = __UNIQUE_ID___y563;
    }
  #line 162 
  dsc_len = tmp_2;
  #line 165 
  fin = (unsigned long)last_desc + 8UL;
  #line 166 
  diff = fin - (unsigned long)otus_desc;
  #line 168 
  if (diff < len) 
                  #line 169 
                  len -= diff;
  #line 171 
  if (len <= 255UL) 
                    #line 172 
                    return -5;
  #line 174 
  crc32 = crc32_le(4294967295U,data,len);
  #line 175 
  if (chk_desc->fw_crc32 != crc32) {
    #line 176 
    _dev_err(& (ar->udev)->dev,(char *)"fw checksum test failed.\n");
    #line 177 
    return -8;
  }
  #line 180 
  crc32 = crc32_le(crc32,(unsigned char *)otus_desc,(unsigned long)dsc_len);
  #line 181 
  if (chk_desc->hdr_crc32 != crc32) {
    #line 182 
    _dev_err(& (ar->udev)->dev,(char *)"descriptor check failed.\n");
    #line 183 
    return -22;
  }
  #line 185 
  return 0;
}

#line 188  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/fw.c"
static int carl9170_fw_tx_sequence(struct ar9170 *ar)
{
  #line 190 
  struct carl9170fw_txsq_desc *txsq_desc;
  #line 192 
  txsq_desc = (struct carl9170fw_txsq_desc *)carl9170_fw_find_desc(ar,(u8 *)"TXSQ",12U,(unsigned char)1);
  #line 194 
  if (txsq_desc != (struct carl9170fw_txsq_desc *)0) {
    #line 195 
    ar->fw.tx_seq_table = txsq_desc->seq_table_addr;
    #line 196 
    if (! valid_cpu_addr(ar->fw.tx_seq_table)) 
                                               #line 197 
                                               return -22;
  }
  else 
       #line 199 
       ar->fw.tx_seq_table = 0U;
  #line 202 
  return 0;
}

#line 205  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/fw.c"
static void carl9170_fw_set_if_combinations(struct ar9170 *ar, u16 if_comb_types)
{
  #line 208 
  if (ar->fw.vif_num <= 1U) 
                            #line 209 
                            return;
  #line 211 
  ar->if_comb_limits[0].max = (unsigned short)ar->fw.vif_num;
  #line 212 
  ar->if_comb_limits[0].types = if_comb_types;
  #line 214 
  ar->if_combs[0].num_different_channels = 1U;
  #line 215 
  ar->if_combs[0].max_interfaces = (unsigned short)ar->fw.vif_num;
  #line 216 
  ar->if_combs[0].limits = (struct ieee80211_iface_limit *)(& ar->if_comb_limits);
  #line 217 
  ar->if_combs[0].n_limits = (unsigned char)1U;
  #line 219 
  ((ar->hw)->wiphy)->iface_combinations = (struct ieee80211_iface_combination *)(& ar->if_combs);
  #line 220 
  ((ar->hw)->wiphy)->n_iface_combinations = 1;
  #line 221 
  return;
}

#line 223  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/fw.c"
static int carl9170_fw(struct ar9170 *ar, __u8 *data, size_t len)
{
  #line 319 
  unsigned int __UNIQUE_ID___x564;
  #line 319 
  unsigned int tmp_17;
  #line 225 
  struct carl9170fw_otus_desc *otus_desc;
  #line 226 
  int err;
  #line 227 
  u16 if_comb_types;
  #line 263 
  int tmp_5;
  #line 229 
  err = carl9170_fw_checksum(ar,data,len);
  #line 230 
  if (err != 0) 
                #line 231 
                return err;
  #line 233 
  otus_desc = (struct carl9170fw_otus_desc *)carl9170_fw_find_desc(ar,(u8 *)"OTAR",32U,(unsigned char)7);
  #line 235 
  if (otus_desc == (struct carl9170fw_otus_desc *)0) 
                                                     #line 236 
                                                     return -61;
  #line 242 
  if (! carl9170fw_supports(otus_desc->feature_set,(unsigned char)0)) {
    #line 243 
    _dev_err(& (ar->udev)->dev,(char *)"invalid firmware descriptor ");
    #line 245 
    return -22;
  }
  #line 248 
  ar->fw.api_version = (unsigned int)otus_desc->api_ver;
  #line 250 
  if (ar->fw.api_version != 1U) {
    #line 252 
    _dev_err(& (ar->udev)->dev,(char *)"unsupported firmware api version.\n");
    #line 253 
    return -22;
  }
  #line 256 
  if (carl9170fw_supports(otus_desc->feature_set,(unsigned char)7)) {
    #line 256 
    if ((int)carl9170fw_supports(otus_desc->feature_set,(unsigned char)6) != 0) 
      #line 256 
      goto _LOR;
    else {
      #line 257 
      if (! carl9170fw_supports(otus_desc->feature_set,(unsigned char)10)) {
        #line 256 
        _LOR: {
                #line 258 
                _dev_err(& (ar->udev)->dev,(char *)"firmware does support ");
                #line 260 
                return -125;
              }
      }
    }
  }
  else 
       #line 256 
       goto _LOR;
  #line 263 
  if (0 != 0) 
              #line 263 
              tmp_5 = (otus_desc->feature_set > 1U && (((((((((((((((((((((((((((((((((((((((((((((unsigned long long)otus_desc->feature_set & 2097152ULL) != 0ULL || ((unsigned long long)otus_desc->feature_set & 1048576ULL) != 0ULL) || ((unsigned long long)otus_desc->feature_set & 4194304ULL) != 0ULL) || ((unsigned long long)otus_desc->feature_set & 8388608ULL) != 0ULL) || ((unsigned long long)otus_desc->feature_set & 16777216ULL) != 0ULL) || ((unsigned long long)otus_desc->feature_set & 33554432ULL) != 0ULL) || ((unsigned long long)otus_desc->feature_set & 67108864ULL) != 0ULL) || ((unsigned long long)otus_desc->feature_set & 134217728ULL) != 0ULL) || ((unsigned long long)otus_desc->feature_set & 268435456ULL) != 0ULL) || ((unsigned long long)otus_desc->feature_set & 536870912ULL) != 0ULL) || ((unsigned long long)otus_desc->feature_set & 1073741824ULL) != 0ULL) || ((unsigned long long)otus_desc->feature_set & 2147483648ULL) != 0ULL) || ((unsigned long long)otus_desc->feature_set & 4294967296ULL) != 0ULL) || ((unsigned long long)otus_desc->feature_set & 8589934592ULL) != 0ULL) || ((unsigned long long)otus_desc->feature_set & 17179869184ULL) != 0ULL) || ((unsigned long long)otus_desc->feature_set & 34359738368ULL) != 0ULL) || ((unsigned long long)otus_desc->feature_set & 68719476736ULL) != 0ULL) || ((unsigned long long)otus_desc->feature_set & 137438953472ULL) != 0ULL) || ((unsigned long long)otus_desc->feature_set & 274877906944ULL) != 0ULL) || ((unsigned long long)otus_desc->feature_set & 549755813888ULL) != 0ULL) || ((unsigned long long)otus_desc->feature_set & 1099511627776ULL) != 0ULL) || ((unsigned long long)otus_desc->feature_set & 2199023255552ULL) != 0ULL) || ((unsigned long long)otus_desc->feature_set & 4398046511104ULL) != 0ULL) || ((unsigned long long)otus_desc->feature_set & 8796093022208ULL) != 0ULL) || ((unsigned long long)otus_desc->feature_set & 17592186044416ULL) != 0ULL) || ((unsigned long long)otus_desc->feature_set & 35184372088832ULL) != 0ULL) || ((unsigned long long)otus_desc->feature_set & 70368744177664ULL) != 0ULL) || ((unsigned long long)otus_desc->feature_set & 140737488355328ULL) != 0ULL) || ((unsigned long long)otus_desc->feature_set & 281474976710656ULL) != 0ULL) || ((unsigned long long)otus_desc->feature_set & 562949953421312ULL) != 0ULL) || ((unsigned long long)otus_desc->feature_set & 1125899906842624ULL) != 0ULL) || ((unsigned long long)otus_desc->feature_set & 2251799813685248ULL) != 0ULL) || ((unsigned long long)otus_desc->feature_set & 4503599627370496ULL) != 0ULL) || ((unsigned long long)otus_desc->feature_set & 9007199254740992ULL) != 0ULL) || ((unsigned long long)otus_desc->feature_set & 18014398509481984ULL) != 0ULL) || ((unsigned long long)otus_desc->feature_set & 36028797018963968ULL) != 0ULL) || ((unsigned long long)otus_desc->feature_set & 72057594037927936ULL) != 0ULL) || ((unsigned long long)otus_desc->feature_set & 144115188075855872ULL) != 0ULL) || ((unsigned long long)otus_desc->feature_set & 288230376151711744ULL) != 0ULL) || ((unsigned long long)otus_desc->feature_set & 576460752303423488ULL) != 0ULL) || ((unsigned long long)otus_desc->feature_set & 1152921504606846976ULL) != 0ULL) || ((unsigned long long)otus_desc->feature_set & 2305843009213693952ULL) != 0ULL) || ((unsigned long long)otus_desc->feature_set & 4611686018427387904ULL) != 0ULL) || ((unsigned long long)otus_desc->feature_set & 9223372036854775808ULL) != 0ULL)) != 0;
  else {
    #line 263 
    tmp_5 = __ilog2_u32(otus_desc->feature_set) > 19;
  }
  #line 263 
  if (tmp_5) 
             #line 265 
             _dev_warn(& (ar->udev)->dev,(char *)"driver does not support all ");
  #line 269 
  if (! carl9170fw_supports(otus_desc->feature_set,(unsigned char)8)) {
    #line 270 
    _dev_info(& (ar->udev)->dev,(char *)"crypto offloading is disabled ");
    #line 272 
    ar->fw.disable_offload_fw = (_Bool)1;
  }
  #line 275 
  if ((int)carl9170fw_supports(otus_desc->feature_set,(unsigned char)12) != 0) {
    #line 275 
    if ((int)carl9170fw_supports(otus_desc->feature_set,(unsigned char)15) != 0) 
      #line 276 
      _ieee80211_hw_set(ar->hw,(enum ieee80211_hw_flags)IEEE80211_HW_SUPPORTS_PS);
  }
  #line 278 
  if (! carl9170fw_supports(otus_desc->feature_set,(unsigned char)2)) {
    #line 279 
    _dev_err(& (ar->udev)->dev,(char *)"firmware does not provide ");
    #line 281 
    return -22;
  }
  #line 284 
  if ((int)carl9170fw_supports(otus_desc->feature_set,(unsigned char)1) != 0) 
    #line 285 
    ar->fw.offset = (unsigned int)otus_desc->miniboot_size; else 
                                                                 #line 287 
                                                                 ar->fw.offset = 0U;
  #line 289 
  if ((int)carl9170fw_supports(otus_desc->feature_set,(unsigned char)4) != 0) {
    #line 290 
    (ar->hw)->extra_tx_headroom += 4U;
    #line 291 
    ar->fw.tx_stream = (_Bool)1;
  }
  #line 294 
  if ((int)carl9170fw_supports(otus_desc->feature_set,(unsigned char)5) != 0) 
    #line 295 
    ar->fw.rx_stream = (_Bool)1;
  #line 297 
  if ((int)carl9170fw_supports(otus_desc->feature_set,(unsigned char)13) != 0) {
    #line 298 
    ar->fw.rx_filter = (_Bool)1;
    #line 299 
    ar->rx_filter_caps = 236U;
  }
  #line 303 
  if ((int)carl9170fw_supports(otus_desc->feature_set,(unsigned char)16) != 0) 
    #line 304 
    ar->fw.hw_counters = (_Bool)1;
  #line 306 
  if ((int)carl9170fw_supports(otus_desc->feature_set,(unsigned char)14) != 0) 
    #line 307 
    device_set_wakeup_enable(& (ar->udev)->dev,(_Bool)1);
  #line 309 
  if ((int)carl9170fw_supports(otus_desc->feature_set,(unsigned char)17) != 0) 
    #line 310 
    ar->fw.ba_filter = (_Bool)1;
  #line 312 
  if_comb_types = (unsigned short)260U;
  #line 315 
  ar->fw.vif_num = (unsigned int)otus_desc->vif_num;
  #line 316 
  ar->fw.cmd_bufs = (unsigned int)otus_desc->cmd_bufs;
  #line 317 
  ar->fw.address = otus_desc->fw_address;
  #line 318 
  ar->fw.rx_size = (unsigned int)otus_desc->rx_max_frame_len;
  {
    #line 319 
    __UNIQUE_ID___x564 = (unsigned int)otus_desc->tx_descs;
    #line 319 
    unsigned int __UNIQUE_ID___y565 = 254U;
    #line 319 
    if (__UNIQUE_ID___x564 < __UNIQUE_ID___y565) 
                                                 #line 319 
                                                 tmp_17 = __UNIQUE_ID___x564; else 
                                                                    #line 319 
                                                                    tmp_17 = __UNIQUE_ID___y565;
    }
  #line 319 
  ar->fw.mem_blocks = tmp_17;
  #line 320 
  atomic_set_2(& ar->mem_free_blocks,(int)ar->fw.mem_blocks);
  #line 321 
  ar->fw.mem_block_size = (unsigned int)otus_desc->tx_frag_len;
  #line 323 
  if ((((((ar->fw.vif_num + 4294967295U > 5U || ar->fw.mem_blocks <= 15U) || ar->fw.cmd_bufs == 0U) || ar->fw.mem_block_size <= 63U) || ar->fw.mem_block_size > 512U) || ar->fw.rx_size > 32768U) || ar->fw.rx_size <= 4095U) 
    #line 323 
    goto _LOR_0;
  else {
    #line 327 
    if (! valid_cpu_addr(ar->fw.address)) {
      #line 323 
      _LOR_0: {
                #line 328 
                _dev_err(& (ar->udev)->dev,(char *)"firmware shows obvious signs of ");
                #line 330 
                return -22;
              }
    }
  }
  #line 333 
  ar->fw.beacon_addr = otus_desc->bcn_addr;
  #line 334 
  ar->fw.beacon_max_len = (unsigned int)otus_desc->bcn_len;
  #line 336 
  if ((int)valid_dma_addr(ar->fw.beacon_addr) != 0) 
    #line 336 
    if (ar->fw.beacon_max_len > 479U) {
      #line 338 
      ((ar->hw)->wiphy)->interface_modes = (unsigned short)((unsigned int)((ar->hw)->wiphy)->interface_modes | 2U);
      #line 340 
      if ((int)carl9170fw_supports(otus_desc->feature_set,(unsigned char)9) != 0) {
        #line 341 
        if_comb_types = (unsigned short)((unsigned int)if_comb_types | 520U);
        #line 346 
        if_comb_types = (unsigned short)((unsigned int)if_comb_types | 128U);
      }
    }
  #line 352 
  carl9170_fw_set_if_combinations(ar,(unsigned short)((int)if_comb_types));
  #line 354 
  ((ar->hw)->wiphy)->interface_modes = (unsigned short)((int)((ar->hw)->wiphy)->interface_modes | (int)if_comb_types);
  #line 356 
  ((ar->hw)->wiphy)->flags &= 4294967279U;
  #line 359 
  ((ar->hw)->wiphy)->flags |= 2130176U;
  #line 363 
  return carl9170_fw_tx_sequence(ar);
}

#line 367  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/fw.c"
static struct carl9170fw_desc_head *carl9170_find_fw_desc(struct ar9170 *ar, __u8 *fw_data, size_t len)
{
  #line 370 
  int scan = 0;
  #line 370 
  int found = 0;
  #line 372 
  if (! carl9170fw_size_check((unsigned int)len)) {
    #line 373 
    _dev_err(& (ar->udev)->dev,(char *)"firmware size is out of bound.\n");
    #line 374 
    return (struct carl9170fw_desc_head *)0;
  }
  #line 377 
  while ((unsigned long)scan < len + 18446744073709551608UL) {
    #line 378 
    int tmp_0;
    #line 378 
    tmp_0 = scan;
    #line 378 
    scan ++;
    #line 378 
    ;
    #line 378 
    if ((int)*(fw_data + (unsigned long)tmp_0) == (int)otus_magic[found]) 
      #line 379 
      found ++; else 
                     #line 381 
                     found = 0;
    #line 383 
    if ((unsigned long)scan >= len) 
                                    #line 384 
                                    break;
    #line 386 
    if (found == 4) 
                    #line 387 
                    break;
  }
  #line 390 
  if (found != 4) 
                  #line 391 
                  return (struct carl9170fw_desc_head *)0;
  #line 393 
  return (struct carl9170fw_desc_head *)(fw_data + (unsigned long)(scan - found));
}

#line 396  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/fw.c"
int carl9170_parse_firmware(struct ar9170 *ar)
{
  #line 403 
  int __ret_warn_on;
  #line 401 
  int err;
  #line 398 
  struct carl9170fw_desc_head *fw_desc = (struct carl9170fw_desc_head *)0;
  #line 399 
  struct firmware *fw = ar->fw.fw;
  #line 400 
  unsigned long header_offset = 0UL;
  #line 403 
  __ret_warn_on = fw == (struct firmware *)0;
  #line 403 
  if ((long)(__ret_warn_on != 0) != 0L) {
    #line 404 
    ldv_inline_asm();
    #line 405 
    ldv_inline_asm();
  }
  #line 403 
  if ((long)((long)(__ret_warn_on != 0)) != 0L) 
                                                #line 404 
                                                return -22;
  #line 406 
  fw_desc = carl9170_find_fw_desc(ar,fw->data,fw->size);
  #line 408 
  if (fw_desc == (struct carl9170fw_desc_head *)0) {
    #line 409 
    _dev_err(& (ar->udev)->dev,(char *)"unsupported firmware.\n");
    #line 410 
    return -61;
  }
  #line 413 
  header_offset = (unsigned long)fw_desc - (unsigned long)fw->data;
  #line 415 
  err = carl9170_fw_verify_descs(ar,fw_desc,(unsigned int)fw->size - (unsigned int)header_offset);
  #line 416 
  if (err != 0) {
    #line 417 
    _dev_err(& (ar->udev)->dev,(char *)"damaged firmware (%d).\n",err);
    #line 418 
    return err;
  }
  #line 421 
  ar->fw.desc = fw_desc;
  #line 423 
  carl9170_fw_info(ar);
  #line 425 
  err = carl9170_fw(ar,fw->data,fw->size);
  #line 426 
  if (err != 0) {
    #line 427 
    _dev_err(& (ar->udev)->dev,(char *)"failed to parse firmware (%d).\n",err);
    #line 429 
    return err;
  }
  #line 432 
  return 0;
}

#line 95  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
__inline static void __list_del_1(struct list_head *prev, struct list_head *next)
{
  #line 97 
  next->prev = prev;
  {
    #line 107 
    union __anonunion___u_9565 __u = {.__val = next};
    #line 106 
    __write_once_size((void *)(& prev->next),(void *)(& __u.__c),8);
    #line 106 
    struct list_head *tmp = __u.__val;
  }
  #line 108 
  return;
}

#line 129  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
__inline static void __list_del_entry_1(struct list_head *entry)
{
  #line 131 
  if (! __list_del_entry_valid(entry)) 
                                       #line 132 
                                       return;
  #line 134 
  __list_del_1(entry->prev,entry->next);
  #line 135 
  return;
}

#line 336  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
static void spin_lock_0(spinlock_t *lock)
{
  #line 338 
  _raw_spin_lock(& lock->__anonCompField_spinlock_25.rlock);
  #line 339 
  return;
}

#line 340 
#line 809  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/rx.i.aux"
static void cif_spin_lock_cmd_lock_of_ar9170(spinlock_t *lock);
#line 341  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
static void spin_lock_bh_3(spinlock_t *lock)
{
  #line 343 
  _raw_spin_lock_bh(& lock->__anonCompField_spinlock_25.rlock);
  #line 344 
  return;
}

#line 345 
#line 700  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/rx.i.aux"
static void cif_spin_lock_bh_NOT_ARG_SIGN_0(spinlock_t *lock);
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
static void spin_unlock_0(spinlock_t *lock)
{
  #line 378 
  _raw_spin_unlock(& lock->__anonCompField_spinlock_25.rlock);
  #line 379 
  return;
}

#line 380 
#line 818  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/rx.i.aux"
static void cif_spin_unlock_cmd_lock_of_ar9170(spinlock_t *lock);
#line 381  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
static void spin_unlock_bh_3(spinlock_t *lock)
{
  #line 383 
  _raw_spin_unlock_bh(& lock->__anonCompField_spinlock_25.rlock);
  #line 384 
  return;
}

#line 385 
#line 709  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/rx.i.aux"
static void cif_spin_unlock_bh_NOT_ARG_SIGN_0(spinlock_t *lock);
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rculist.h"
__inline static void list_del_rcu_1(struct list_head *entry)
{
  #line 148 
  __list_del_entry_1(entry);
  #line 149 
  entry->prev = (struct list_head *)(-2401263026318606046);
  #line 150 
  return;
}

#line 2156  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static void skb_reset_tail_pointer(struct sk_buff *skb)
{
  #line 2158 
  skb->tail = (unsigned int)(skb->data - skb->head);
  #line 2159 
  return;
}

#line 2189 
#line 2189 
void *skb_put(struct sk_buff *, unsigned int);
#line 2230  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static void *skb_put_data(struct sk_buff *skb, void *data, unsigned int len)
{
  #line 2233 
  void *tmp = skb_put(skb,len);
  #line 2235 
  memcpy(tmp,data,(unsigned long)len);
  #line 2237 
  return tmp;
}

#line 2338  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static void skb_reserve(struct sk_buff *skb, int len)
{
  #line 2340 
  skb->data += (unsigned long)len;
  #line 2341 
  skb->tail += (unsigned int)len;
  #line 2342 
  return;
}

#line 2652 
#line 2652 
void skb_trim(struct sk_buff *, unsigned int);
#line 2778  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static struct sk_buff *netdev_alloc_skb(struct net_device *dev, unsigned int length)
{
  #line 2781 
  return __netdev_alloc_skb(dev,length,2592U);
}

#line 2792  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static struct sk_buff *dev_alloc_skb(unsigned int length)
{
  #line 2794 
  return netdev_alloc_skb((struct net_device *)0,length);
}

#line 344  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/etherdevice.h"
__inline static bool ether_addr_equal_64bits(u8 *addr1, u8 *addr2)
{
  #line 348 
  u64 fold = *((u64 *)addr1) ^ *((u64 *)addr2);
  #line 353 
  return (_Bool)(fold << 16 == 0ULL);
}

#line 378  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
__inline static bool ieee80211_is_data_qos(__le16 fc)
{
  #line 384 
  return (_Bool)(((int)fc & 140) == 136);
}

#line 392  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
__inline static bool ieee80211_is_data_present(__le16 fc)
{
  #line 398 
  return (_Bool)(((int)fc & 76) == 8);
}

#line 516  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
__inline static bool ieee80211_is_action(__le16 fc)
{
  #line 518 
  return (_Bool)(((int)fc & 252) == 208);
}

#line 536  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
__inline static bool ieee80211_is_back(__le16 fc)
{
  #line 538 
  return (_Bool)(((int)fc & 252) == 148);
}

#line 576  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
__inline static bool ieee80211_is_ack(__le16 fc)
{
  #line 578 
  return (_Bool)(((int)fc & 252) == 212);
}

#line 3263  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
__inline static bool ieee80211_check_tim(struct ieee80211_tim_ie *tim, u8 tim_len, u16 aid)
{
  #line 3266 
  u8 mask;
  #line 3267 
  u8 index;
  #line 3267 
  u8 indexn1;
  #line 3267 
  u8 indexn2;
  #line 3269 
  if ((long)((tim == (struct ieee80211_tim_ie *)0 || (unsigned int)tim_len <= 3U) != 0) != 0L) 
    #line 3270 
    return (_Bool)0;
  #line 3272 
  aid = (unsigned short)((unsigned int)aid & 16383U);
  #line 3273 
  index = (unsigned char)((unsigned int)aid / 8U);
  #line 3274 
  mask = (unsigned char)(1 << ((int)aid & 7));
  #line 3276 
  indexn1 = (unsigned char)((unsigned int)tim->bitmap_ctrl & 254U);
  #line 3277 
  indexn2 = (unsigned char)((unsigned int)((int)tim_len + (int)indexn1) + 252U);
  #line 3279 
  if ((int)index < (int)indexn1 || (int)index > (int)indexn2) 
                                                              #line 3280 
                                                              return (_Bool)0;
  #line 3282 
  index = (unsigned char)((int)index - (int)indexn1);
  #line 3284 
  return (_Bool)((unsigned int)((int)tim->virtual_map[(int)index] & (int)mask) != 0U);
}

#line 1119  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
__inline static struct ieee80211_rx_status *IEEE80211_SKB_RXCB(struct sk_buff *skb)
{
  #line 1121 
  return (struct ieee80211_rx_status *)(& skb->cb);
}

#line 4338 
#line 4338 
void ieee80211_rx_napi(struct ieee80211_hw *, struct ieee80211_sta *, struct sk_buff *, struct napi_struct *);
#line 4361  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
__inline static void ieee80211_rx(struct ieee80211_hw *hw, struct sk_buff *skb)
{
  #line 4363 
  ieee80211_rx_napi(hw,(struct ieee80211_sta *)0,skb,(struct napi_struct *)0);
  #line 4364 
  return;
}

#line 412  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/input.h"
#line 412 
void input_event(struct input_dev *, unsigned int, unsigned int, int);
#line 415  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/input.h"
__inline static void input_report_key(struct input_dev *dev, unsigned int code, int value)
{
  #line 417 
  input_event(dev,1U,code,value != 0);
  #line 418 
  return;
}

#line 440  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/input.h"
__inline static void input_sync(struct input_dev *dev)
{
  #line 442 
  input_event(dev,0U,0U,0);
  #line 443 
  return;
}

#line 401  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/wlan.h"
__inline static u8 ar9170_get_decrypt_type(struct ar9170_rx_macstatus *t)
{
  #line 403 
  return (unsigned char)((((int)t->SAidx >> 4) & 12) | ((int)t->DAidx >> 6));
}

#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath.h"
#line 197 
bool ath_is_mybeacon(struct ath_common *, struct ieee80211_hdr *);
#line 648  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/carl9170.h"
__inline static struct ieee80211_vif *carl9170_get_main_vif_2(struct ar9170 *ar)
{
  #line 652 
  void *__mptr;
  #line 650 
  struct carl9170_vif_info *cvif;
  {
    #line 652 
    bool __warned;
    #line 652 
    if (debug_lockdep_rcu_enabled() != 0) 
      #line 652 
      if (! __warned) {
        #line 652 
        if (rcu_read_lock_any_held() == 0) {
          #line 652 
          __warned = (_Bool)1;
          #line 652 
          lockdep_rcu_suspicious((char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/carl9170.h",652,(char *)"RCU-list traversed in non-reader section!");
        }
      }
  }
  {
    #line 653 
    union __anonunion___u_10593 __u;
    #line 652 
    __read_once_size((void *)(& ar->vif_list.next),(void *)(& __u.__c),8);
    #line 652 
    __mptr = (void *)(__u.__val);
    }
  #line 655 
  cvif = ((struct carl9170_vif_info *)__mptr);
  #line 652 
  while (& cvif->list != & ar->vif_list) {
    #line 652 
    void *__mptr_0;
    #line 653 
    if ((int)cvif->active != 0) {
      #line 654 
      return carl9170_get_vif(cvif);
    }
    {
      #line 653 
      union __anonunion___u_10595 __u_0;
      #line 652 
      __read_once_size((void *)(& cvif->list.next),(void *)(& __u_0.__c),8);
      #line 652 
      __mptr_0 = (void *)(__u_0.__val);
      }
    #line 652 
    cvif = ((struct carl9170_vif_info *)__mptr_0);
  }
  #line 657 
  return (struct ieee80211_vif *)0;
}

#line 49  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/rx.c"
static void carl9170_dbg_message(struct ar9170 *ar, char *buf, u32 len)
{
  #line 51 
  bool restart = (_Bool)0;
  #line 52 
  enum carl9170_restart_reasons reason = CARL9170_RR_NO_REASON;
  #line 54 
  if (len > 3U) {
    #line 55 
    if (memcmp((void *)buf,(void *)"ERR:",3UL) == 0) {
      #line 56 
      (ar->fw.err_counter) ++;
      #line 57 
      if (ar->fw.err_counter > 3U) {
        #line 58 
        restart = (_Bool)1;
        #line 59 
        reason = CARL9170_RR_TOO_MANY_FIRMWARE_ERRORS;
      }
    }
    #line 63 
    if (memcmp((void *)buf,(void *)"BUG:",3UL) == 0) {
      #line 64 
      (ar->fw.bug_counter) ++;
      #line 65 
      restart = (_Bool)1;
      #line 66 
      reason = CARL9170_RR_FATAL_FIRMWARE_ERROR;
    }
  }
  #line 70 
  _dev_info(& ((ar->hw)->wiphy)->dev,(char *)"FW: %.*s\n",len,buf);
  #line 72 
  if ((int)restart != 0) 
                         #line 73 
                         carl9170_restart(ar,reason);
  #line 74 
  return;
}

#line 76  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/rx.c"
static void carl9170_handle_ps(struct ar9170 *ar, struct carl9170_rsp *rsp)
{
  #line 78 
  u32 ps;
  #line 79 
  bool new_ps;
  #line 81 
  ps = rsp->__anonCompField_carl9170_rsp_201.psm.state;
  #line 83 
  new_ps = (_Bool)((ps & 4095U) != 0U);
  #line 84 
  if ((int)ar->ps.state != (int)new_ps) {
    #line 85 
    if (! new_ps) 
                  #line 86 
                  ar->ps.sleep_ms = jiffies_to_msecs(jiffies - ar->ps.last_action);
    #line 90 
    ar->ps.last_action = jiffies;
    #line 92 
    ar->ps.state = new_ps;
  }
  #line 94 
  return;
}

#line 96  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/rx.c"
static int carl9170_check_sequence(struct ar9170 *ar, unsigned int seq)
{
  #line 98 
  if (ar->cmd_seq < -1) 
                        #line 99 
                        return 0;
  #line 104 
  if (ar->cmd_seq < 0) 
                       #line 105 
                       ar->cmd_seq = (int)seq;
  #line 113 
  if ((unsigned int)ar->cmd_seq != seq) {
    #line 114 
    int count;
    #line 116 
    count = (int)((seq - (unsigned int)ar->cmd_seq) % ar->fw.cmd_bufs);
    #line 118 
    _dev_err(& ((ar->hw)->wiphy)->dev,(char *)"lost %d command responses/traps! ",count,ar->cmd_seq,seq);
    #line 121 
    carl9170_restart(ar,(enum carl9170_restart_reasons)CARL9170_RR_LOST_RSP);
    #line 122 
    return -5;
  }
  #line 125 
  ar->cmd_seq = (int)((unsigned int)(ar->cmd_seq + 1) % ar->fw.cmd_bufs);
  #line 126 
  return 0;
}

#line 129  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/rx.c"
static void carl9170_cmd_callback(struct ar9170 *ar, u32 len, void *buffer)
{
  #line 136 
  if ((long)((unsigned int)ar->readlen != len + 4294967292U) != 0L) {
    #line 137 
    _dev_warn(& (ar->udev)->dev,(char *)"received invalid command response:",len + 4294967292U,ar->readlen);
    {
      #line 139 
      bool branch;
      #line 139 
      struct _ddebug __UNIQUE_ID_ddebug560 = {.modname = (char *)"carl9170", .function = (char *)"carl9170_cmd_callback", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/rx.c", .format = (char *)"carl9170 cmd:", .lineno = (unsigned int)139U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
      #line 139 
      branch = arch_static_branch(& __UNIQUE_ID_ddebug560.key.dd_key_false.key,(_Bool)0);
      #line 139 
      if ((long)((long)((int)branch != 0)) != 0L) 
                                                  #line 139 
                                                  print_hex_dump((char *)"\001",(char *)"carl9170 cmd:",2,16,1,(void *)(& ar->__anonCompField_ar9170_205.cmd_buf),(unsigned long)((int)ar->__anonCompField_ar9170_205.cmd.hdr.__anonCompField_carl9170_cmd_head_198.__anonCompField___anonunion_1028_197.len + 4) & 63UL,(_Bool)1);
    }
    {
      #line 141 
      bool branch_0;
      #line 141 
      struct _ddebug __UNIQUE_ID_ddebug561 = {.modname = (char *)"carl9170", .function = (char *)"carl9170_cmd_callback", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/rx.c", .format = (char *)"carl9170 rsp:", .lineno = (unsigned int)141U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
      #line 141 
      branch_0 = arch_static_branch(& __UNIQUE_ID_ddebug561.key.dd_key_false.key,(_Bool)0);
      #line 141 
      if ((long)((long)((int)branch_0 != 0)) != 0L) 
                                                    #line 141 
                                                    print_hex_dump((char *)"\001",(char *)"carl9170 rsp:",2,16,1,buffer,(unsigned long)len,(_Bool)1);
    }
    #line 147 
    carl9170_restart(ar,(enum carl9170_restart_reasons)CARL9170_RR_INVALID_RSP);
  }
  #line 150 
  cif_spin_lock_cmd_lock_of_ar9170(& ar->cmd_lock);
  #line 151 
  if (ar->readbuf != (u8 *)0U) {
    #line 152 
    if (len > 3U) 
                  #line 153 
                  memcpy((void *)ar->readbuf,buffer + 4U,(unsigned long)(len + 4294967292U));
    #line 155 
    ar->readbuf = (u8 *)0U;
  }
  #line 157 
  complete(& ar->cmd_wait);
  #line 158 
  cif_spin_unlock_cmd_lock_of_ar9170(& ar->cmd_lock);
  #line 159 
  return;
}

#line 161  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/rx.c"
void carl9170_handle_command_response(struct ar9170 *ar, void *buf, u32 len)
{
  #line 164 
  struct ieee80211_vif *vif;
  #line 163 
  struct carl9170_rsp *cmd = (struct carl9170_rsp *)buf;
  #line 166 
  if (((int)cmd->hdr.__anonCompField_carl9170_cmd_head_198.__anonCompField___anonunion_1028_197.cmd & 192) != 192) {
    #line 167 
    if (((int)cmd->hdr.__anonCompField_carl9170_cmd_head_198.__anonCompField___anonunion_1028_197.cmd & 64) == 0) 
      #line 168 
      carl9170_cmd_callback(ar,len,buf);
    #line 170 
    return;
  }
  #line 173 
  if ((long)((unsigned int)cmd->hdr.__anonCompField_carl9170_cmd_head_198.__anonCompField___anonunion_1028_197.len != len + 4294967292U) != 0L) {
    #line 174 
    if (net_ratelimit() != 0) {
      #line 175 
      _dev_err(& ((ar->hw)->wiphy)->dev,(char *)"FW: received over-/under",(int)cmd->hdr.__anonCompField_carl9170_cmd_head_198.__anonCompField___anonunion_1028_197.cmd,(int)cmd->hdr.__anonCompField_carl9170_cmd_head_198.__anonCompField___anonunion_1028_197.len,len + 4294967292U);
      {
        #line 179 
        bool branch;
        #line 179 
        struct _ddebug __UNIQUE_ID_ddebug562 = {.modname = (char *)"carl9170", .function = (char *)"carl9170_handle_command_response", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/rx.c", .format = (char *)"dump:", .lineno = (unsigned int)179U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
        #line 179 
        branch = arch_static_branch(& __UNIQUE_ID_ddebug562.key.dd_key_false.key,(_Bool)0);
        #line 179 
        if ((long)((long)((int)branch != 0)) != 0L) 
                                                    #line 179 
                                                    print_hex_dump((char *)"\001",(char *)"dump:",0,16,1,buf,(unsigned long)len,(_Bool)1);
      }
    }
    #line 183 
    return;
  }
  #line 187 
  switch ((int)cmd->hdr.__anonCompField_carl9170_cmd_head_198.__anonCompField___anonunion_1028_197.cmd) {
    #line 188 
    case 192: 
              #line 188 
    ;
    #line 190 
    rcu_read_lock();
    #line 191 
    vif = carl9170_get_main_vif_2(ar);
    #line 193 
    if (vif == (struct ieee80211_vif *)0) {
      #line 194 
      rcu_read_unlock();
      #line 195 
      break;
    }
    #line 198 
    switch ((unsigned int)vif->type) {
      #line 199 
      case (unsigned int)2: 
                            #line 199 
      ;
      #line 200 
      carl9170_handle_ps(ar,cmd);
      #line 201 
      break;
      #line 203 
      case (unsigned int)3: 
                            #line 203 
      ;
      #line 204 
      case (unsigned int)1: 
                            #line 204 
      ;
      #line 205 
      case (unsigned int)7: 
                            #line 205 
      ;
      #line 206 
      carl9170_update_beacon(ar,(_Bool)1);
      #line 207 
      break;
      #line 209 
      default: 
               #line 209 
      ;
      #line 210 
      break;
    }
    #line 212 
    rcu_read_unlock();
    #line 214 
    break;
    #line 217 
    case 193: 
              #line 217 
    ;
    #line 219 
    carl9170_tx_process_status(ar,cmd);
    #line 220 
    break;
    #line 222 
    case 194: 
              #line 222 
    ;
    #line 231 
    break;
    #line 233 
    case 195: 
              #line 233 
    ;
    #line 235 
    break;
    #line 237 
    case 198: 
              #line 237 
    ;
    #line 239 
    carl9170_restart(ar,(enum carl9170_restart_reasons)CARL9170_RR_WATCHDOG);
    #line 240 
    break;
    #line 242 
    case 202: 
              #line 242 
    ;
    #line 244 
    carl9170_dbg_message(ar,(char *)buf + 4U,len + 4294967292U);
    #line 245 
    break;
    #line 247 
    case 204: 
              #line 247 
    ;
    {
      #line 248 
      bool branch_0;
      #line 248 
      struct _ddebug __UNIQUE_ID_ddebug563 = {.modname = (char *)"carl9170", .function = (char *)"carl9170_handle_command_response", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/rx.c", .format = (char *)"FW: HD %d\n", .lineno = (unsigned int)248U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
      #line 248 
      branch_0 = arch_static_branch(& __UNIQUE_ID_ddebug563.key.dd_key_false.key,(_Bool)0);
      #line 248 
      if ((long)((long)((int)branch_0 != 0)) != 0L) 
                                                    #line 248 
                                                    __dynamic_dev_dbg(& __UNIQUE_ID_ddebug563,& ((ar->hw)->wiphy)->dev,(char *)"FW: HD %d\n",len + 4294967292U);
    }
    {
      #line 249 
      bool branch_1;
      #line 249 
      struct _ddebug __UNIQUE_ID_ddebug564 = {.modname = (char *)"carl9170", .function = (char *)"carl9170_handle_command_response", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/rx.c", .format = (char *)"FW:", .lineno = (unsigned int)249U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
      #line 249 
      branch_1 = arch_static_branch(& __UNIQUE_ID_ddebug564.key.dd_key_false.key,(_Bool)0);
      #line 249 
      if ((long)((long)((int)branch_1 != 0)) != 0L) 
                                                    #line 249 
                                                    print_hex_dump((char *)"\001",(char *)"FW:",0,16,1,(void *)((char *)buf + 4U),(unsigned long)(len + 4294967292U),(_Bool)1);
    }
    #line 251 
    break;
    #line 253 
    case 205: 
              #line 253 
    ;
    #line 254 
    if (net_ratelimit() == 0) 
                              #line 255 
                              break;
    #line 257 
    _dev_info(& ((ar->hw)->wiphy)->dev,(char *)"FW: RADAR! Please report this ");
    #line 259 
    break;
    #line 261 
    case 206: 
              #line 261 
    ;
    #line 263 
    if (ar->wps.pbc != (struct input_dev *)0) {
      #line 264 
      bool state = (_Bool)((cmd->__anonCompField_carl9170_rsp_201.gpio.gpio & 4U) != 0U);
      #line 267 
      if ((int)ar->wps.pbc_state != (int)state) {
        #line 268 
        ar->wps.pbc_state = state;
        #line 269 
        input_report_key(ar->wps.pbc,529U,(int)state);
        #line 271 
        input_sync(ar->wps.pbc);
      }
    }
    #line 275 
    break;
    #line 277 
    case 207: 
              #line 277 
    ;
    #line 278 
    complete(& ar->fw_boot_wait);
    #line 279 
    break;
    #line 281 
    default: 
             #line 281 
    ;
    #line 282 
    _dev_err(& ((ar->hw)->wiphy)->dev,(char *)"FW: received unhandled event %x\n",(int)cmd->hdr.__anonCompField_carl9170_cmd_head_198.__anonCompField___anonunion_1028_197.cmd);
    {
      #line 284 
      bool branch_2;
      #line 284 
      struct _ddebug __UNIQUE_ID_ddebug565 = {.modname = (char *)"carl9170", .function = (char *)"carl9170_handle_command_response", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/rx.c", .format = (char *)"dump:", .lineno = (unsigned int)284U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
      #line 284 
      branch_2 = arch_static_branch(& __UNIQUE_ID_ddebug565.key.dd_key_false.key,(_Bool)0);
      #line 284 
      if ((long)((long)((int)branch_2 != 0)) != 0L) 
                                                    #line 284 
                                                    print_hex_dump((char *)"\001",(char *)"dump:",0,16,1,buf,(unsigned long)len,(_Bool)1);
    }
    #line 285 
    break;
  }
  #line 287 
  return;
}

#line 289  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/rx.c"
static int carl9170_rx_mac_status(struct ar9170 *ar, struct ar9170_rx_head *head, struct ar9170_rx_macstatus *mac, struct ieee80211_rx_status *status)
{
  #line 293 
  struct ieee80211_channel *chan;
  #line 294 
  u8 error;
  #line 294 
  u8 decrypt;
  #line 299 
  error = mac->error;
  #line 301 
  if (((int)error & 16) != 0) 
    #line 302 
    if (! ar->sniffer_enabled) 
                               #line 303 
                               return -22;
  #line 306 
  if (((int)error & 32) != 0) {
    #line 307 
    if ((ar->filter_state & 8U) == 0U) 
                                       #line 308 
                                       return -22;
    #line 310 
    status->flag |= 64U;
  }
  #line 313 
  if (((int)error & 8) != 0) {
    #line 314 
    (ar->tx_fcs_errors) ++;
    #line 316 
    if ((ar->filter_state & 4U) == 0U) 
                                       #line 317 
                                       return -22;
    #line 319 
    status->flag |= 32U;
  }
  #line 322 
  decrypt = ar9170_get_decrypt_type(mac);
  #line 323 
  if (((int)decrypt & 8) == 0 && (unsigned int)decrypt != 0U) {
    #line 325 
    if ((unsigned int)decrypt == 2U && ((int)error & 64) != 0) 
                                                               #line 327 
                                                               status->flag |= 1U;
    #line 329 
    status->flag |= 2U;
  }
  #line 332 
  if (((int)error & 4) != 0 && ! ar->sniffer_enabled) 
                                                      #line 333 
                                                      return -61;
  #line 335 
  error = (unsigned char)((unsigned int)error & 131U);
  #line 342 
  if ((long)((unsigned int)error != 0U) != 0L) {
    #line 345 
    if (net_ratelimit() != 0) {
      #line 346 
      bool branch;
      #line 346 
      struct _ddebug __UNIQUE_ID_ddebug566 = {.modname = (char *)"carl9170", .function = (char *)"carl9170_rx_mac_status", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/rx.c", .format = (char *)"received frame with ", .lineno = (unsigned int)346U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
      #line 346 
      branch = arch_static_branch(& __UNIQUE_ID_ddebug566.key.dd_key_false.key,(_Bool)0);
      #line 346 
      if ((long)((long)((int)branch != 0)) != 0L) 
                                                  #line 346 
                                                  __dynamic_dev_dbg(& __UNIQUE_ID_ddebug566,& ((ar->hw)->wiphy)->dev,(char *)"received frame with ",(int)error);
    }
    #line 349 
    return -22;
  }
  #line 352 
  chan = ar->channel;
  #line 353 
  if (chan != (struct ieee80211_channel *)0) {
    #line 354 
    status->band = (unsigned char)chan->band;
    #line 355 
    status->freq = (unsigned short)chan->center_freq;
  }
  #line 358 
  switch ((int)mac->status & 3) {
    #line 430 
    int tmp_5;
    #line 430 
    int __UNIQUE_ID___x569;
    #line 359 
    case 0: 
            #line 359 
    ;
    #line 360 
    if (((int)mac->status & 8) != 0) 
                                     #line 361 
                                     status->enc_flags = (unsigned char)((unsigned int)status->enc_flags | 1U);
    #line 362 
    switch ((int)head->plcp[0]) {
      #line 363 
      case 10: 
               #line 363 
      ;
      #line 364 
      status->rate_idx = (unsigned char)0U;
      #line 365 
      break;
      #line 366 
      case 20: 
               #line 366 
      ;
      #line 367 
      status->rate_idx = (unsigned char)1U;
      #line 368 
      break;
      #line 369 
      case 55: 
               #line 369 
      ;
      #line 370 
      status->rate_idx = (unsigned char)2U;
      #line 371 
      break;
      #line 372 
      case 110: 
                #line 372 
      ;
      #line 373 
      status->rate_idx = (unsigned char)3U;
      #line 374 
      break;
      #line 375 
      default: 
               #line 375 
      ;
      #line 376 
      if (net_ratelimit() != 0) 
                                #line 377 
                                _dev_err(& ((ar->hw)->wiphy)->dev,(char *)"invalid plcp cck ",(int)head->plcp[0]);
      #line 381 
      return -22;
    }
    #line 383 
    break;
    #line 385 
    case 3: 
            #line 385 
    ;
    #line 386 
    case 1: 
            #line 386 
    ;
    #line 387 
    switch ((int)head->plcp[0] & 15) {
      #line 388 
      case 11: 
               #line 388 
      ;
      #line 389 
      status->rate_idx = (unsigned char)0U;
      #line 390 
      break;
      #line 391 
      case 15: 
               #line 391 
      ;
      #line 392 
      status->rate_idx = (unsigned char)1U;
      #line 393 
      break;
      #line 394 
      case 10: 
               #line 394 
      ;
      #line 395 
      status->rate_idx = (unsigned char)2U;
      #line 396 
      break;
      #line 397 
      case 14: 
               #line 397 
      ;
      #line 398 
      status->rate_idx = (unsigned char)3U;
      #line 399 
      break;
      #line 400 
      case 9: 
              #line 400 
      ;
      #line 401 
      status->rate_idx = (unsigned char)4U;
      #line 402 
      break;
      #line 403 
      case 13: 
               #line 403 
      ;
      #line 404 
      status->rate_idx = (unsigned char)5U;
      #line 405 
      break;
      #line 406 
      case 8: 
              #line 406 
      ;
      #line 407 
      status->rate_idx = (unsigned char)6U;
      #line 408 
      break;
      #line 409 
      case 12: 
               #line 409 
      ;
      #line 410 
      status->rate_idx = (unsigned char)7U;
      #line 411 
      break;
      #line 412 
      default: 
               #line 412 
      ;
      #line 413 
      if (net_ratelimit() != 0) 
                                #line 414 
                                _dev_err(& ((ar->hw)->wiphy)->dev,(char *)"invalid plcp ofdm ",(int)head->plcp[0]);
      #line 418 
      return -22;
    }
    #line 420 
    if ((unsigned int)status->band == 0U) 
                                          #line 421 
                                          status->rate_idx = (unsigned char)((unsigned int)status->rate_idx + 4U);
    #line 422 
    break;
    #line 424 
    case 2: 
            #line 424 
    ;
    #line 425 
    if (((int)head->plcp[3] & 128) != 0) 
                                         #line 426 
                                         status->bw = (unsigned char)3U;
    #line 427 
    if (((int)head->plcp[6] & 128) != 0) 
                                         #line 428 
                                         status->enc_flags = (unsigned char)((unsigned int)status->enc_flags | 4U);
    {
      #line 430 
      int __UNIQUE_ID___x567;
      #line 430 
      int tmp_3;
      {
        #line 430 
        __UNIQUE_ID___x567 = (int)head->plcp[3] & 127;
        #line 430 
        int __UNIQUE_ID___y568 = 0;
        #line 430 
        if (__UNIQUE_ID___x567 > __UNIQUE_ID___y568) 
                                                     #line 430 
                                                     tmp_3 = __UNIQUE_ID___x567; else 
                                                                    #line 430 
                                                                    tmp_3 = __UNIQUE_ID___y568;
        }
      #line 430 
      __UNIQUE_ID___x569 = tmp_3;
      #line 430 
      int __UNIQUE_ID___y570 = 75;
      #line 430 
      if (__UNIQUE_ID___x569 < __UNIQUE_ID___y570) 
                                                   #line 430 
                                                   tmp_5 = __UNIQUE_ID___x569; else 
                                                                    #line 430 
                                                                    tmp_5 = __UNIQUE_ID___y570;
      }
    #line 430 
    status->rate_idx = (unsigned char)tmp_5;
    #line 431 
    status->encoding = (unsigned char)1U;
    #line 432 
    break;
    #line 434 
    default: 
             #line 434 
    ;
    #line 436 
    ldv_inline_asm();
    #line 437 
    ldv_inline_asm();
    #line 438 
    ldv_inline_asm();
    #line 435 
    ;
    #line 436 
    return -38;
  }
  #line 439 
  return 0;
}

#line 442  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/rx.c"
static void carl9170_rx_phy_status(struct ar9170 *ar, struct ar9170_rx_phystatus *phy, struct ieee80211_rx_status *status)
{
  #line 445 
  int i;
  #line 449 
  i = 0;
  #line 449 
  while (i <= 2) {
    #line 450 
    if ((unsigned int)phy->__anonCompField_ar9170_rx_phystatus_203.rssi[i] != 128U) 
      #line 451 
      status->antenna = (unsigned char)((int)status->antenna | (int)((unsigned char)(1UL << i)));
    #line 449 
    i ++;
  }
  #line 454 
  i = 0;
  #line 454 
  while (i <= 6) {
    #line 455 
    if (((int)phy->__anonCompField_ar9170_rx_phystatus_203.rssi[i] & 128) != 0) 
      #line 456 
      phy->__anonCompField_ar9170_rx_phystatus_203.rssi[i] = (unsigned char)((unsigned int)((unsigned char)(- ((int)phy->__anonCompField_ar9170_rx_phystatus_203.rssi[i]))) & 127U);
    #line 454 
    i ++;
  }
  #line 459 
  status->signal = (signed char)(ar->noise[0] + (int)phy->__anonCompField_ar9170_rx_phystatus_203.__anonCompField___anonunion_10583_202.rssi_combined);
  #line 460 
  return;
}

#line 462  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/rx.c"
static struct sk_buff *carl9170_rx_copy_data(u8 *buf, int len)
{
  #line 464 
  struct sk_buff *skb;
  #line 465 
  int reserved = 0;
  #line 466 
  struct ieee80211_hdr *hdr = (struct ieee80211_hdr *)buf;
  #line 468 
  if ((int)ieee80211_is_data_qos((unsigned short)((int)hdr->frame_control)) != 0) {
    #line 469 
    u8 *qc = ieee80211_get_qos_ctl(hdr);
    #line 470 
    reserved = reserved;
    #line 472 
    if (((int)*qc & 128) != 0) 
                               #line 473 
                               reserved = reserved;
  }
  #line 476 
  if ((int)ieee80211_has_a4((unsigned short)((int)hdr->frame_control)) != 0) 
    #line 477 
    reserved = reserved;
  #line 479 
  reserved = 32;
  #line 481 
  skb = dev_alloc_skb((unsigned int)(len + reserved));
  #line 482 
  if ((long)(skb != (struct sk_buff *)0) != 0L) {
    #line 483 
    skb_reserve(skb,reserved);
    #line 484 
    skb_put_data(skb,(void *)buf,(unsigned int)len);
  }
  #line 487 
  return skb;
}

#line 490  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/rx.c"
static u8 *carl9170_find_ie(u8 *data, unsigned int len, u8 ie)
{
  #line 493 
  u8 *pos;
  #line 493 
  u8 *end;
  #line 492 
  struct ieee80211_mgmt *mgmt = (struct ieee80211_mgmt *)data;
  #line 495 
  pos = (u8 *)(& mgmt->u.beacon.variable);
  #line 496 
  end = data + (unsigned long)len;
  #line 497 
  while (pos < end) {
    #line 498 
    if (pos + ((unsigned long)*(pos + 1U) + (unsigned long)2U) > end) 
      #line 499 
      return (u8 *)0U;
    #line 501 
    if ((int)*pos == (int)ie) 
                              #line 502 
                              return pos;
    #line 504 
    pos += (unsigned long)((int)*(pos + 1U) + 2);
  }
  #line 506 
  return (u8 *)0U;
}

#line 518  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/rx.c"
static void carl9170_ps_beacon(struct ar9170 *ar, void *data, unsigned int len)
{
  #line 551 
  int __ret_warn_on;
  #line 521 
  struct ieee80211_tim_ie *tim_ie;
  #line 523 
  u8 *tim;
  #line 524 
  u8 tim_len;
  #line 525 
  bool cam;
  #line 520 
  struct ieee80211_hdr *hdr = (struct ieee80211_hdr *)data;
  #line 522 
  struct ath_common *common = & ar->common;
  #line 527 
  if ((long)(((ar->hw)->conf.flags & 2U) == 0U) != 0L) 
                                                       #line 528 
                                                       return;
  #line 531 
  if (len <= 44U) 
                  #line 532 
                  return;
  #line 536 
  if (ath_is_mybeacon(common,hdr)) {
    #line 536 
    if ((unsigned int)common->curaid == 0U) 
                                            #line 537 
                                            return;
  }
  else 
       #line 537 
       return;
  #line 539 
  ar->ps.last_beacon = jiffies;
  #line 541 
  tim = carl9170_find_ie((u8 *)data,len + 4294967292U,(unsigned char)5);
  #line 542 
  if (tim == (u8 *)0U) 
                       #line 543 
                       return;
  #line 545 
  if ((unsigned int)*(tim + 1U) <= 3U) 
                                       #line 546 
                                       return;
  #line 548 
  tim_len = *(tim + 1U);
  #line 549 
  tim_ie = (struct ieee80211_tim_ie *)(tim + 2U);
  #line 551 
  __ret_warn_on = (unsigned int)(ar->hw)->conf.ps_dtim_period == 0U;
  #line 551 
  if ((long)(__ret_warn_on != 0) != 0L) {
    #line 552 
    ldv_inline_asm();
    #line 553 
    ldv_inline_asm();
  }
  #line 551 
  if ((long)((long)(__ret_warn_on != 0)) == 0L) 
                                                #line 552 
                                                ar->ps.dtim_counter = (unsigned int)(((int)tim_ie->dtim_count + -1) % (int)(ar->hw)->conf.ps_dtim_period);
  #line 558 
  cam = ieee80211_check_tim(tim_ie,(unsigned char)((int)tim_len),(unsigned short)((int)ar->common.curaid));
  #line 561 
  cam = (_Bool)(((int)cam | (((int)tim_ie->bitmap_ctrl & 1) != 0)) != 0);
  #line 563 
  if (! cam) {
    #line 565 
    ar->ps.off_override &= 4294967293U;
    #line 566 
    carl9170_ps_check(ar);
  }
  else 
       #line 569 
       ar->ps.off_override |= 2U;
  #line 570 
  return;
}

#line 573  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/rx.c"
static void carl9170_ba_check(struct ar9170 *ar, void *data, unsigned int len)
{
  #line 590 
  void *__mptr;
  #line 576 
  struct carl9170_bar_list_entry *entry;
  #line 577 
  unsigned int queue;
  #line 579 
  int tmp_0;
  #line 575 
  struct ieee80211_bar *bar = (struct ieee80211_bar *)data;
  #line 579 
  if (ieee80211_is_back((unsigned short)((int)bar->frame_control))) 
                                                                    #line 579 
                                                                    tmp_0 = 0; else 
                                                                    #line 579 
                                                                    tmp_0 = 1;
  #line 579 
  if ((long)tmp_0 != 0L) 
                         #line 580 
                         return;
  #line 582 
  if (len <= 24U) 
                  #line 583 
                  return;
  #line 585 
  if ((((int)bar->control >> 12) & 7) != 0 && (((int)bar->control >> 12) & 7) != 3) {
    #line 585 
    unsigned int tmp_1;
    #line 585 
    if (((unsigned int)((int)bar->control >> 12) & 7U) + 4294967295U > 1U) 
      #line 585 
      tmp_1 = (unsigned int)((((int)bar->control >> 12) & 6) == 4); else 
                                                                    #line 585 
                                                                    tmp_1 = 3U;
    #line 585 
    queue = tmp_1;
  }
  else 
       #line 585 
       queue = 2U;
  #line 589 
  rcu_read_lock();
  {
    #line 590 
    bool __warned;
    #line 590 
    if (debug_lockdep_rcu_enabled() != 0) 
      #line 590 
      if (! __warned) {
        #line 590 
        if (rcu_read_lock_any_held() == 0) {
          #line 590 
          __warned = (_Bool)1;
          #line 590 
          lockdep_rcu_suspicious((char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/rx.c",590,(char *)"RCU-list traversed in non-reader section!");
        }
      }
  }
  {
    #line 591 
    union __anonunion___u_10597 __u;
    #line 590 
    __read_once_size((void *)(& ar->bar_list[queue].next),(void *)(& __u.__c),8);
    #line 590 
    __mptr = (void *)(__u.__val);
    }
  #line 593 
  entry = ((struct carl9170_bar_list_entry *)__mptr);
  #line 590 
  while (& entry->list != & ar->bar_list[queue]) {
    #line 590 
    void *__mptr_0;
    {
      #line 591 
      struct sk_buff *entry_skb = entry->skb;
      #line 592 
      struct _carl9170_tx_superframe *super = (struct _carl9170_tx_superframe *)entry_skb->data;
      #line 593 
      struct ieee80211_bar *entry_bar = (struct ieee80211_bar *)(& super->frame_data);
      #line 599 
      if ((int)bar->start_seq_num == (int)entry_bar->start_seq_num && (((int)bar->control ^ (int)entry_bar->control) & 61440) == 0) {
        #line 600 
        if ((int)ether_addr_equal_64bits((u8 *)(& bar->ra),(u8 *)(& entry_bar->ta)) != 0) {
          #line 601 
          if ((int)ether_addr_equal_64bits((u8 *)(& bar->ta),(u8 *)(& entry_bar->ra)) != 0) {
            #line 603 
            struct ieee80211_tx_info *tx_info;
            #line 605 
            tx_info = IEEE80211_SKB_CB(entry_skb);
            #line 606 
            tx_info->flags |= 512U;
            #line 608 
            cif_spin_lock_bh_NOT_ARG_SIGN_0(& ar->bar_list_lock[queue]);
            #line 609 
            list_del_rcu_1(& entry->list);
            #line 610 
            cif_spin_unlock_bh_NOT_ARG_SIGN_0(& ar->bar_list_lock[queue]);
            {
              #line 611 
              struct carl9170_bar_list_entry *___p = entry;
              #line 611 
              if (___p != (struct carl9170_bar_list_entry *)0) 
                                                               #line 611 
                                                               kfree_call_rcu(& ___p->head,(void (*)(struct callback_head *))16);
            }
            #line 612 
            break;
          }
        }
      }
    }
    {
      #line 591 
      union __anonunion___u_10599 __u_0;
      #line 590 
      __read_once_size((void *)(& entry->list.next),(void *)(& __u_0.__c),8);
      #line 590 
      __mptr_0 = (void *)(__u_0.__val);
      }
    #line 590 
    entry = ((struct carl9170_bar_list_entry *)__mptr_0);
  }
  #line 615 
  rcu_read_unlock();
  #line 616 
  return;
}

#line 620  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/rx.c"
static bool carl9170_ampdu_check(struct ar9170 *ar, u8 *buf, u8 ms, struct ieee80211_rx_status *rx_status)
{
  #line 623 
  __le16 fc;
  #line 625 
  if (((int)ms & 48) == 0) 
                           #line 631 
                           return (_Bool)1;
  #line 634 
  rx_status->flag |= 4608U;
  #line 635 
  rx_status->ampdu_reference = ar->ampdu_ref;
  #line 645 
  fc = ((struct ieee80211_hdr *)buf)->frame_control;
  #line 646 
  if ((int)ieee80211_is_data_qos((unsigned short)((int)fc)) != 0) {
    #line 646 
    if ((int)ieee80211_is_data_present((unsigned short)((int)fc)) != 0) 
      #line 647 
      return (_Bool)1;
  }
  #line 649 
  if ((int)ieee80211_is_ack((unsigned short)((int)fc)) != 0) 
                                                             #line 651 
                                                             return (_Bool)1;
  else {
    #line 649 
    if ((int)ieee80211_is_back((unsigned short)((int)fc)) != 0) 
                                                                #line 651 
                                                                return (_Bool)1;
    else {
      #line 649 
      if ((int)ieee80211_is_back_req((unsigned short)((int)fc)) != 0) 
        #line 651 
        return (_Bool)1;
    }
  }
  #line 653 
  if ((int)ieee80211_is_action((unsigned short)((int)fc)) != 0) 
                                                                #line 654 
                                                                return (_Bool)1;
  #line 656 
  return (_Bool)0;
}

#line 659  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/rx.c"
static int carl9170_handle_mpdu(struct ar9170 *ar, u8 *buf, int len, struct ieee80211_rx_status *status)
{
  #line 662 
  struct sk_buff *skb;
  #line 675 
  carl9170_ps_beacon(ar,(void *)buf,(unsigned int)len);
  #line 677 
  carl9170_ba_check(ar,(void *)buf,(unsigned int)len);
  #line 679 
  skb = carl9170_rx_copy_data(buf,len);
  #line 680 
  if (skb == (struct sk_buff *)0) 
                                  #line 681 
                                  return -12;
  #line 683 
  ;
  #line 683 
  memcpy((void *)IEEE80211_SKB_RXCB(skb),(void *)status,48UL);
  #line 684 
  ieee80211_rx(ar->hw,skb);
  #line 685 
  return 0;
}

#line 697  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/rx.c"
static void carl9170_rx_untie_data(struct ar9170 *ar, u8 *buf, int len)
{
  #line 699 
  struct ar9170_rx_head *head;
  #line 700 
  struct ar9170_rx_macstatus *mac;
  #line 702 
  struct ieee80211_rx_status status;
  #line 703 
  int mpdu_len;
  #line 704 
  u8 mac_status;
  #line 701 
  struct ar9170_rx_phystatus *phy = (struct ar9170_rx_phystatus *)0;
  #line 706 
  if (ar->state <= (unsigned int)CARL9170_IDLE) 
                                                #line 707 
                                                return;
  #line 709 
  if ((long)((unsigned int)len <= 3U) != 0L) 
                                             #line 710 
                                             goto drop;
  #line 712 
  memset((void *)(& status),0,48UL);
  #line 714 
  mpdu_len = (int)((unsigned int)len + 4294967292U);
  #line 716 
  mac = (struct ar9170_rx_macstatus *)(buf + (unsigned long)mpdu_len);
  #line 717 
  mac_status = mac->status;
  #line 718 
  switch ((int)mac_status & 48) {
    #line 719 
    case 32: 
             #line 719 
    ;
    #line 720 
    (ar->ampdu_ref) ++;
    #line 722 
    if ((long)((unsigned int)mpdu_len > 11U) != 0L) {
      #line 723 
      head = (struct ar9170_rx_head *)buf;
      #line 733 
      memcpy((void *)(& ar->rx_plcp),(void *)buf,12UL);
      #line 736 
      mpdu_len = (int)((unsigned int)mpdu_len + 4294967284U);
      #line 737 
      buf += 12UL;
      #line 739 
      ar->rx_has_plcp = (_Bool)1;
    }
    else {
      #line 741 
      if (net_ratelimit() != 0) 
                                #line 742 
                                _dev_err(& ((ar->hw)->wiphy)->dev,(char *)"plcp info ");
      #line 746 
      goto drop;
    }
    #line 748 
    break;
    #line 750 
    case 16: 
             #line 750 
    ;
    #line 751 
    status.flag |= 8192U;
    #line 758 
    if ((long)((unsigned int)mpdu_len > 19U) != 0L) {
      #line 759 
      mpdu_len = (int)((unsigned int)mpdu_len + 4294967276U);
      #line 760 
      phy = (struct ar9170_rx_phystatus *)(buf + (unsigned long)mpdu_len);
    }
    else {
      #line 762 
      if (net_ratelimit() != 0) 
                                #line 763 
                                _dev_err(& ((ar->hw)->wiphy)->dev,(char *)"frame tail ");
      #line 767 
      goto drop;
    }
    #line 771 
    case 48: 
             #line 771 
    ;
    #line 773 
    if ((long)(! ar->rx_has_plcp) != 0L) {
      #line 774 
      if (net_ratelimit() == 0) 
                                #line 775 
                                return;
      #line 777 
      _dev_err(& ((ar->hw)->wiphy)->dev,(char *)"rx stream does not start ");
      #line 780 
      goto drop;
    }
    #line 783 
    head = & ar->rx_plcp;
    #line 784 
    break;
    #line 786 
    case 0: 
            #line 786 
    ;
    #line 788 
    head = (struct ar9170_rx_head *)buf;
    #line 790 
    mpdu_len = (int)((unsigned int)mpdu_len + 4294967284U);
    #line 791 
    mpdu_len = (int)((unsigned int)mpdu_len + 4294967276U);
    #line 793 
    buf += 12UL;
    #line 794 
    phy = (struct ar9170_rx_phystatus *)(buf + (unsigned long)mpdu_len);
    #line 795 
    break;
    #line 797 
    default: 
             #line 797 
    ;
    #line 799 
    ldv_inline_asm();
    #line 800 
    ldv_inline_asm();
    #line 801 
    ldv_inline_asm();
    #line 798 
    ;
    #line 799 
    break;
  }
  #line 803 
  if ((long)(mpdu_len <= 13) != 0L) 
                                    #line 804 
                                    goto drop;
  #line 806 
  if ((long)(carl9170_rx_mac_status(ar,head,mac,& status) != 0) != 0L) 
    #line 807 
    goto drop;
  #line 809 
  if (! carl9170_ampdu_check(ar,buf,(unsigned char)((int)mac_status),
                             & status)) 
    #line 810 
    goto drop;
  #line 812 
  if (phy != (struct ar9170_rx_phystatus *)0) 
                                              #line 813 
                                              carl9170_rx_phy_status(ar,phy,& status); else 
                                                                    #line 815 
                                                                    status.flag |= 256U;
  #line 817 
  if (carl9170_handle_mpdu(ar,buf,mpdu_len,& status) != 0) 
                                                           #line 818 
                                                           goto drop;
  #line 820 
  return;
  #line 821 
  drop: 
        #line 821 
  ;
  #line 822 
  (ar->rx_dropped) ++;
  #line 823 
  return;
}

#line 825  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/rx.c"
static void carl9170_rx_untie_cmds(struct ar9170 *ar, u8 *respbuf, unsigned int resplen)
{
  #line 828 
  struct carl9170_rsp *cmd;
  #line 829 
  int i = 0;
  #line 831 
  while ((unsigned int)i < resplen) {
    #line 832 
    cmd = (struct carl9170_rsp *)(respbuf + (unsigned long)i);
    #line 834 
    i = ((int)cmd->hdr.__anonCompField_carl9170_cmd_head_198.__anonCompField___anonunion_1028_197.len + 4) + i;
    #line 835 
    if ((long)((unsigned int)i > resplen) != 0L) 
                                                 #line 836 
                                                 break;
    #line 838 
    if (carl9170_check_sequence(ar,
                              (unsigned int)cmd->hdr.__anonCompField_carl9170_cmd_head_198.__anonCompField___anonunion_1028_197.seq) != 0) 
      #line 839 
      break;
    #line 841 
    carl9170_handle_command_response(ar,(void *)cmd,(unsigned int)((int)cmd->hdr.__anonCompField_carl9170_cmd_head_198.__anonCompField___anonunion_1028_197.len + 4));
  }
  #line 844 
  if ((long)(i != (int)resplen) != 0L) {
    #line 845 
    if (net_ratelimit() == 0) 
                              #line 846 
                              return;
    #line 848 
    _dev_err(& ((ar->hw)->wiphy)->dev,(char *)"malformed firmware trap:\n");
    {
      #line 849 
      bool branch;
      #line 849 
      struct _ddebug __UNIQUE_ID_ddebug574 = {.modname = (char *)"carl9170", .function = (char *)"carl9170_rx_untie_cmds", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/rx.c", .format = (char *)"rxcmd:", .lineno = (unsigned int)849U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
      #line 849 
      branch = arch_static_branch(& __UNIQUE_ID_ddebug574.key.dd_key_false.key,(_Bool)0);
      #line 849 
      if ((long)((long)((int)branch != 0)) != 0L) 
                                                  #line 849 
                                                  print_hex_dump((char *)"\001",(char *)"rxcmd:",2,16,1,(void *)respbuf,(unsigned long)resplen,(_Bool)1);
    }
  }
  #line 852 
  return;
}

#line 854  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/rx.c"
static void __carl9170_rx(struct ar9170 *ar, u8 *buf, unsigned int len)
{
  #line 856 
  unsigned int i = 0U;
  #line 859 
  while (((len > 2U && i <= 11U) && (unsigned int)*buf == 255U) && (unsigned int)*(buf + 1U) == 255U) {
    #line 860 
    i += 2U;
    #line 861 
    len += 4294967294U;
    #line 862 
    buf += 2U;
  }
  #line 865 
  if ((long)(len <= 3U) != 0L) 
                               #line 866 
                               return;
  #line 869 
  if (i == 12U) 
                #line 870 
                carl9170_rx_untie_cmds(ar,buf,len); else 
                                                         #line 872 
                                                         carl9170_rx_untie_data(ar,buf,(int)len);
  #line 873 
  return;
}

#line 875  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/rx.c"
static void carl9170_rx_stream(struct ar9170 *ar, void *buf, unsigned int len)
{
  #line 877 
  unsigned int tlen;
  #line 878 
  struct ar9170_stream *rx_stream;
  #line 879 
  u8 *tbuf;
  #line 877 
  unsigned int wlen = 0U;
  #line 877 
  unsigned int clen = 0U;
  #line 881 
  tbuf = (u8 *)buf;
  #line 882 
  tlen = len;
  #line 884 
  while (tlen > 3U) {
    #line 885 
    rx_stream = (struct ar9170_stream *)tbuf;
    #line 886 
    clen = (unsigned int)rx_stream->length;
    #line 887 
    wlen = (clen + 3U) & 4294967292U;
    #line 890 
    if ((unsigned int)rx_stream->tag != 19968U) {
      #line 897 
      if (ar->rx_failover_missing == 0) {
        #line 900 
        if (net_ratelimit() != 0) 
                                  #line 901 
                                  _dev_err(& ((ar->hw)->wiphy)->dev,(char *)"missing tag!\n");
        #line 905 
        __carl9170_rx(ar,tbuf,tlen);
        #line 906 
        return;
      }
      #line 909 
      if ((unsigned int)ar->rx_failover_missing > tlen) {
        #line 910 
        if (net_ratelimit() != 0) {
          #line 911 
          _dev_err(& ((ar->hw)->wiphy)->dev,(char *)"possible multi ");
          #line 914 
          goto err_telluser;
        }
        else 
             #line 916 
             goto err_silent;
      }
      #line 920 
      skb_put_data(ar->rx_failover,(void *)tbuf,tlen);
      #line 921 
      ar->rx_failover_missing = (int)((unsigned int)ar->rx_failover_missing - tlen);
      #line 923 
      if (ar->rx_failover_missing <= 0) {
        #line 932 
        ar->rx_failover_missing = 0;
        #line 933 
        carl9170_rx_stream(ar,(void *)(ar->rx_failover)->data,(ar->rx_failover)->len);
        #line 936 
        skb_reset_tail_pointer(ar->rx_failover);
        #line 937 
        skb_trim(ar->rx_failover,0U);
      }
      #line 940 
      return;
    }
    #line 944 
    if (tlen + 4294967292U < wlen) {
      #line 945 
      if (ar->rx_failover_missing != 0) {
        #line 947 
        if (net_ratelimit() != 0) {
          #line 948 
          _dev_err(& ((ar->hw)->wiphy)->dev,(char *)"double rx ");
          #line 950 
          goto err_telluser;
        }
        else 
             #line 952 
             goto err_silent;
      }
      #line 962 
      skb_put_data(ar->rx_failover,(void *)tbuf,tlen);
      #line 963 
      ar->rx_failover_missing = (int)(clen - tlen);
      #line 964 
      return;
    }
    #line 966 
    __carl9170_rx(ar,(u8 *)(& rx_stream->payload),clen);
    #line 968 
    tbuf += (unsigned long)(wlen + 4U);
    #line 969 
    tlen = (tlen - wlen) + 4294967292U;
  }
  #line 972 
  if (tlen != 0U) {
    #line 973 
    if (net_ratelimit() != 0) 
                              #line 974 
                              _dev_err(& ((ar->hw)->wiphy)->dev,(char *)"%d bytes of unprocessed ",tlen);
    #line 978 
    goto err_telluser;
  }
  #line 981 
  return;
  #line 983 
  err_telluser: 
                #line 983 
  ;
  #line 984 
  _dev_err(& ((ar->hw)->wiphy)->dev,(char *)"damaged RX stream data [want:%d, ",clen,wlen,tlen,ar->rx_failover_missing);
  #line 988 
  if (ar->rx_failover_missing != 0) {
    #line 989 
    bool branch;
    #line 989 
    struct _ddebug __UNIQUE_ID_ddebug575 = {.modname = (char *)"carl9170", .function = (char *)"carl9170_rx_stream", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/rx.c", .format = (char *)"rxbuf:", .lineno = (unsigned int)989U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
    #line 989 
    branch = arch_static_branch(& __UNIQUE_ID_ddebug575.key.dd_key_false.key,(_Bool)0);
    #line 989 
    if ((long)((long)((int)branch != 0)) != 0L) 
                                                #line 989 
                                                print_hex_dump((char *)"\001",(char *)"rxbuf:",2,16,1,(void *)(ar->rx_failover)->data,(unsigned long)(ar->rx_failover)->len,(_Bool)1);
  }
  {
    #line 993 
    bool branch_0;
    #line 993 
    struct _ddebug __UNIQUE_ID_ddebug576 = {.modname = (char *)"carl9170", .function = (char *)"carl9170_rx_stream", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/rx.c", .format = (char *)"stream:", .lineno = (unsigned int)993U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
    #line 993 
    branch_0 = arch_static_branch(& __UNIQUE_ID_ddebug576.key.dd_key_false.key,(_Bool)0);
    #line 993 
    if ((long)((long)((int)branch_0 != 0)) != 0L) 
                                                  #line 993 
                                                  print_hex_dump((char *)"\001",(char *)"stream:",2,16,1,buf,(unsigned long)len,(_Bool)1);
  }
  #line 996 
  _dev_err(& ((ar->hw)->wiphy)->dev,(char *)"please check your hardware and cables, if ");
  #line 999 
  err_silent: 
              #line 999 
  ;
  #line 1000 
  if (ar->rx_failover_missing != 0) {
    #line 1001 
    skb_reset_tail_pointer(ar->rx_failover);
    #line 1002 
    skb_trim(ar->rx_failover,0U);
    #line 1003 
    ar->rx_failover_missing = 0;
  }
  #line 1005 
  return;
}

#line 1007  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/carl9170/rx.c"
void carl9170_rx(struct ar9170 *ar, void *buf, unsigned int len)
{
  #line 1009 
  if ((int)ar->fw.rx_stream != 0) 
                                  #line 1010 
                                  carl9170_rx_stream(ar,buf,len); else 
                                                                    #line 1012 
                                                                    __carl9170_rx(ar,(u8 *)buf,len);
  #line 1013 
  return;
}

#line 700  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/rx.i.aux"
static void cif_spin_lock_bh_NOT_ARG_SIGN_0(spinlock_t *lock)
{
  #line 703 
  ldv_spin_model_lock((char *)"NOT_ARG_SIGN");
  #line 705 
  spin_lock_bh_3(lock);
  #line 706 
  return;
}

#line 709  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/rx.i.aux"
static void cif_spin_unlock_bh_NOT_ARG_SIGN_0(spinlock_t *lock)
{
  #line 712 
  ldv_spin_model_unlock((char *)"NOT_ARG_SIGN");
  #line 714 
  spin_unlock_bh_3(lock);
  #line 715 
  return;
}

#line 809  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/rx.i.aux"
static void cif_spin_lock_cmd_lock_of_ar9170(spinlock_t *lock)
{
  #line 812 
  ldv_spin_model_lock((char *)"cmd_lock_of_ar9170");
  #line 814 
  spin_lock_0(lock);
  #line 815 
  return;
}

#line 818  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/0/concurrency safety/weaver/rx.i.aux"
static void cif_spin_unlock_cmd_lock_of_ar9170(spinlock_t *lock)
{
  #line 821 
  ldv_spin_model_unlock((char *)"cmd_lock_of_ar9170");
  #line 823 
  spin_unlock_0(lock);
  #line 824 
  return;
}

#line 20  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/common/inline_asm.c"
void ldv_inline_asm(void)
{
  #line 24 
  return;
}

#line 20  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
void ldv_atomic_add(int i, atomic_t *v)
{
  #line 22 
  v->counter += i;
  #line 23 
  return;
}

#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
void ldv_atomic_sub(int i, atomic_t *v)
{
  #line 27 
  v->counter -= i;
  #line 28 
  return;
}

#line 30  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
int ldv_atomic_sub_and_test(int i, atomic_t *v)
{
  #line 32 
  v->counter -= i;
  #line 33 
  if (v->counter != 0) 
                       #line 34 
                       return 0;
  #line 36 
  return 1;
}

#line 39  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
void ldv_atomic_inc(atomic_t *v)
{
  #line 41 
  (v->counter) ++;
  #line 42 
  return;
}

#line 44  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
void ldv_atomic_dec(atomic_t *v)
{
  #line 46 
  (v->counter) --;
  #line 47 
  return;
}

#line 49  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
int ldv_atomic_dec_and_test(atomic_t *v)
{
  #line 51 
  (v->counter) --;
  #line 52 
  if (v->counter != 0) 
                       #line 53 
                       return 0;
  #line 55 
  return 1;
}

#line 58  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
int ldv_atomic_inc_and_test(atomic_t *v)
{
  #line 60 
  (v->counter) ++;
  #line 61 
  if (v->counter != 0) 
                       #line 62 
                       return 0;
  #line 64 
  return 1;
}

#line 67  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
int ldv_atomic_add_return(int i, atomic_t *v)
{
  #line 69 
  v->counter += i;
  #line 70 
  return v->counter;
}

#line 73  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
int ldv_atomic_add_negative(int i, atomic_t *v)
{
  #line 75 
  v->counter += i;
  #line 76 
  return v->counter < 0;
}

#line 79  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
int ldv_atomic_inc_short(short *v)
{
  #line 81 
  *v = (short)((unsigned int)*v + 1U);
  #line 82 
  return (int)*v;
}

#line 20  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/current.c"
static struct task_struct ldv_current;
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/current.c"
struct task_struct *ldv_get_current(void)
{
  #line 28 
  ldv_current.pid = 1;
  #line 29 
  return & ldv_current;
}

#line 32  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 28  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
void ldv_switch_to_interrupt_context(void);
#line 42  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 34  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
void ldv_switch_to_process_context(void);
#line 50  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 40  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
bool ldv_in_interrupt_context(void);
#line 112  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 55  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
int ldv_post_init(int init_ret_val);
#line 132  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 61  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
int ldv_post_probe(int probe_ret_val);
#line 133  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 133 
void ldv_check_return_value_probe(int);
#line 141 
#line 68  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
int ldv_filter_err_code(int ret_val);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/common.h"
#line 23 
void __VERIFIER_assume(int);
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
static bool __ldv_in_interrupt_context = (_Bool)0;
#line 28  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
void ldv_switch_to_interrupt_context(void)
{
  #line 31 
  __ldv_in_interrupt_context = (_Bool)1;
  #line 32 
  return;
}

#line 34  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
void ldv_switch_to_process_context(void)
{
  #line 37 
  __ldv_in_interrupt_context = (_Bool)0;
  #line 38 
  return;
}

#line 40  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
bool ldv_in_interrupt_context(void)
{
  #line 42 
  return __ldv_in_interrupt_context;
}

#line 45  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
static int ldv_filter_positive_int(int val)
{
  #line 47 
  __VERIFIER_assume(val <= 0);
  #line 48 
  return val;
}

#line 55  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
int ldv_post_init(int init_ret_val)
{
  #line 57 
  return ldv_filter_positive_int(init_ret_val);
}

#line 61  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
int ldv_post_probe(int probe_ret_val)
{
  #line 63 
  ldv_check_return_value_probe(probe_ret_val);
  #line 64 
  return ldv_filter_positive_int(probe_ret_val);
}

#line 68  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
int ldv_filter_err_code(int ret_val)
{
  #line 70 
  return ldv_filter_positive_int(ret_val);
}

#line 28  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/common/list.h"
#line 28 
void ldv_save_allocated_memory_to_list(void *);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/device.h"
#line 29  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
void *ldv_dev_get_drvdata(struct device *dev);
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/device.h"
#line 43  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
int ldv_dev_set_drvdata(struct device *dev, void *data);
#line 57  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 57 
void *ldv_xzalloc(size_t size);
#line 29  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
void *ldv_dev_get_drvdata(struct device *dev)
{
  #line 31 
  if (dev != (struct device *)0 && dev->p != (struct device_private *)0) 
    #line 32 
    return (dev->p)->driver_data;
  #line 34 
  return (void *)0;
}

#line 43  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
int ldv_dev_set_drvdata(struct device *dev, void *data)
{
  #line 45 
  dev->p = (struct device_private *)ldv_xzalloc(8UL);
  #line 46 
  ldv_save_allocated_memory_to_list((void *)dev->p);
  #line 47 
  (dev->p)->driver_data = data;
  #line 49 
  return 0;
}

#line 156  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 156 
void ldv_check_alloc_flags(gfp_t);
#line 48  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 48 
void *ldv_malloc(size_t size);
#line 49 
#line 49 
void *ldv_calloc(size_t nmemb, size_t size);
#line 50 
#line 50 
void *ldv_zalloc(size_t size);
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/devres.c"
void *ldv_devm_kmalloc(size_t size, gfp_t flags)
{
  #line 26 
  void *res;
  #line 28 
  ldv_check_alloc_flags(flags);
  #line 29 
  res = ldv_malloc(size);
  #line 30 
  ldv_save_allocated_memory_to_list(res);
  #line 32 
  return res;
}

#line 35  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/devres.c"
void *ldv_devm_kzalloc(size_t size, gfp_t flags)
{
  #line 37 
  void *res;
  #line 39 
  ldv_check_alloc_flags(flags);
  #line 40 
  res = ldv_zalloc(size);
  #line 41 
  ldv_save_allocated_memory_to_list(res);
  #line 43 
  return res;
}

#line 46  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/devres.c"
void *ldv_devm_kmalloc_array(size_t n, size_t size, gfp_t flags)
{
  #line 48 
  void *res;
  #line 50 
  ldv_check_alloc_flags(flags);
  #line 51 
  res = ldv_malloc(n * size);
  #line 52 
  ldv_save_allocated_memory_to_list(res);
  #line 54 
  return res;
}

#line 57  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/devres.c"
void *ldv_devm_kcalloc(size_t n, size_t size, gfp_t flags)
{
  #line 59 
  void *res;
  #line 61 
  ldv_check_alloc_flags(flags);
  #line 62 
  res = ldv_calloc(n,size);
  #line 63 
  ldv_save_allocated_memory_to_list(res);
  #line 65 
  return res;
}

#line 51  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 51 
void ldv_free(void *s);
#line 59 
#line 59 
void *ldv_malloc_unknown_size(void);
#line 31  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 31 
int ldv_undef_int_positive(void);
#line 40 
#line 40 
int ldv_undef_int_nonpositive(void);
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/firmware_loader.c"
int ldv_request_firmware(struct firmware **fw)
{
  #line 27 
  int retval;
  #line 26 
  struct firmware *_fw = (struct firmware *)0;
  #line 29 
  retval = ldv_undef_int_nonpositive();
  #line 31 
  if (retval == 0) {
    #line 33 
    _fw = (struct firmware *)ldv_xzalloc(32UL);
    #line 34 
    _fw->data = (u8 *)ldv_malloc_unknown_size();
    #line 35 
    __VERIFIER_assume(_fw->data != (u8 *)0U);
    #line 36 
    _fw->size = (unsigned long)ldv_undef_int_positive();
  }
  #line 39 
  *fw = _fw;
  #line 41 
  return retval;
}

#line 44  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/firmware_loader.c"
void ldv_release_firmware(struct firmware *fw)
{
  #line 46 
  if (fw != (struct firmware *)0) {
    #line 48 
    ldv_free((void *)fw->data);
    #line 49 
    ldv_free((void *)fw);
  }
  #line 51 
  return;
}

#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/i2c.h"
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/i2c/i2c-core-smbus.c"
s32 ldv_i2c_smbus_read_block_data(u8 *values);
#line 55  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 55 
void *ldv_xmalloc(size_t size);
#line 34  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 34 
int ldv_undef_int_negative(void);
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/i2c/i2c-core-smbus.c"
s32 ldv_i2c_smbus_read_block_data(u8 *values)
{
  #line 27 
  __u8 size;
  #line 28 
  char *bytes;
  #line 30 
  if (ldv_undef_int() != 0) {
    #line 33 
    size = (unsigned char)ldv_undef_int_positive();
    #line 35 
    __VERIFIER_assume((unsigned int)size <= 32U);
    #line 37 
    bytes = (char *)ldv_xmalloc((unsigned long)size);
    #line 39 
    memcpy((void *)values,(void *)bytes,(unsigned long)size);
    #line 40 
    ldv_free((void *)bytes);
    #line 42 
    return (int)size;
  }
  else {
    #line 46 
    return ldv_undef_int_negative();
  }
}

#line 988  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
__inline static void v4l2_set_subdevdata(struct v4l2_subdev *sd, void *p)
{
  #line 990 
  sd->dev_priv = p;
  #line 991 
  return;
}

#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/media/v4l2-common.h"
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/media/v4l2-core/v4l2-i2c.c"
void ldv_v4l2_i2c_subdev_init(struct v4l2_subdev *sd, struct i2c_client *client, struct v4l2_subdev_ops *ops);
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/media/v4l2-core/v4l2-i2c.c"
void ldv_v4l2_i2c_subdev_init(struct v4l2_subdev *sd, struct i2c_client *client, struct v4l2_subdev_ops *ops)
{
  #line 26 
  sd->ops = ops;
  #line 27 
  v4l2_set_subdevdata(sd,(void *)client);
  #line 28 
  ldv_dev_set_drvdata(& client->dev,(void *)sd);
  #line 29 
  return;
}

#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/spi.c"
struct spi_controller *ldv_spi_alloc_master(struct device *host, unsigned int size)
{
  #line 25 
  struct spi_controller *master;
  #line 27 
  master = (struct spi_controller *)ldv_zalloc((unsigned long)size + 2936UL);
  #line 29 
  if (master == (struct spi_controller *)0) 
                                            #line 30 
                                            return (struct spi_controller *)0;
  #line 32 
  ldv_dev_set_drvdata(& master->dev,(void *)(master + 1U));
  #line 34 
  return master;
}

#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/fb.h"
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/video/fbdev/core/fbsysfs.c"
struct fb_info *ldv_framebuffer_alloc(size_t size);
#line 26  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/fb.h"
#line 38  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/video/fbdev/core/fbsysfs.c"
void ldv_framebuffer_release(struct fb_info *info);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/video/fbdev/core/fbsysfs.c"
struct fb_info *ldv_framebuffer_alloc(size_t size)
{
  #line 25 
  struct fb_info *info;
  #line 27 
  info = (struct fb_info *)ldv_zalloc(size + 1568UL);
  #line 29 
  if (info == (struct fb_info *)0) 
                                   #line 30 
                                   return (struct fb_info *)0;
  #line 32 
  if (size != 0UL) 
                   #line 33 
                   info->par = (void *)((char *)info + 1568UL);
  #line 35 
  return info;
}

#line 38  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/video/fbdev/core/fbsysfs.c"
void ldv_framebuffer_release(struct fb_info *info)
{
  #line 40 
  if (info == (struct fb_info *)0) 
                                   #line 41 
                                   return;
  #line 44 
  ldv_free((void *)info->apertures);
  #line 46 
  ldv_free((void *)info);
  #line 47 
  return;
}

#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/err.h"
#line 59  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/err.c"
bool ldv_is_err_or_null(void *ptr);
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/err.c"
bool ldv_is_err(void *ptr)
{
  #line 29 
  if ((unsigned long)ptr > 18446744073709547520UL) 
                                                   #line 30 
                                                   return (_Bool)1; else 
                                                                    #line 32 
                                                                    return (_Bool)0;
}

#line 35  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/err.c"
void *ldv_err_ptr(long error)
{
  #line 37 
  unsigned long result;
  #line 39 
  __VERIFIER_assume(error < 0L);
  #line 40 
  __VERIFIER_assume(error >= -4095L);
  #line 41 
  result = 18446744073709547520UL - (unsigned long)error;
  #line 42 
  __VERIFIER_assume(result > 18446744073709547520UL);
  #line 44 
  return (void *)result;
}

#line 47  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_ptr_err(void *ptr)
{
  #line 49 
  long result;
  #line 51 
  __VERIFIER_assume((unsigned long)ptr > 18446744073709547520UL);
  #line 52 
  result = (long)(18446744073709547520UL - (unsigned long)ptr);
  #line 53 
  __VERIFIER_assume(result < 0L);
  #line 54 
  __VERIFIER_assume(result >= -4095L);
  #line 56 
  return result;
}

#line 59  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/err.c"
bool ldv_is_err_or_null(void *ptr)
{
  #line 61 
  int tmp_0;
  #line 61 
  if (ptr == (void *)0) 
                        #line 61 
                        tmp_0 = 1;
  else {
    #line 61 
    if ((int)ldv_is_err(ptr) != 0) 
                                   #line 61 
                                   tmp_0 = 1; else 
                                                   #line 61 
                                                   tmp_0 = 0;
  }
  #line 61 
  return (_Bool)(tmp_0 != 0);
}

#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/panic.h"
#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/kernel/panic.c"
void ldv_panic(void);
#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/kernel/panic.c"
void ldv_panic(void)
{
  #line 23 
  __VERIFIER_assume(0);
  #line 24 
  return;
}

#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/bitmap.h"
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_set_bit(long nr, unsigned long *addr);
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/bitmap.h"
#line 27  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_clear_bit(long nr, unsigned long *addr);
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/bitmap.h"
#line 32  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_bitmap_set(unsigned long *map, unsigned int start, int nbits);
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/bitmap.h"
#line 52  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_bitmap_clear(unsigned long *map, unsigned int start, int nbits);
#line 29  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/bitmap.h"
#line 78  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
unsigned long ldv_bitmap_find_next_zero_area(unsigned long *map, unsigned long size, unsigned long start, unsigned int nr, unsigned long align_mask);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/find_bit.h"
#line 23 
unsigned long ldv_find_next_zero_bit(unsigned long *addr, unsigned long size, unsigned long offset);
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_set_bit(long nr, unsigned long *addr)
{
  #line 24 
  *(addr + (unsigned long)nr / 64UL) |= 1UL << ((unsigned long)nr & 63UL);
  #line 25 
  return;
}

#line 27  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_clear_bit(long nr, unsigned long *addr)
{
  #line 29 
  *(addr + (unsigned long)nr / 64UL) &= ~ (1UL << ((unsigned long)nr & 63UL));
  #line 30 
  return;
}

#line 32  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_bitmap_set(unsigned long *map, unsigned int start, int nbits)
{
  #line 34 
  unsigned long *p = map + (unsigned long)(start / 64U);
  #line 35 
  unsigned int size = start + (unsigned int)nbits;
  #line 36 
  int bits_to_set = (int)(64U - (start & 63U));
  #line 37 
  unsigned long mask_to_set = 18446744073709551615UL << ((unsigned long)start & 63UL);
  #line 39 
  while (nbits - bits_to_set >= 0) {
    #line 40 
    *p |= mask_to_set;
    #line 41 
    nbits -= bits_to_set;
    #line 42 
    bits_to_set = 64;
    #line 43 
    mask_to_set = 18446744073709551615UL;
    #line 44 
    p ++;
  }
  #line 46 
  if (nbits != 0) {
    #line 47 
    mask_to_set = (18446744073709551615UL >> ((unsigned long)(- size) & 63UL)) & mask_to_set;
    #line 48 
    *p |= mask_to_set;
  }
  #line 50 
  return;
}

#line 52  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_bitmap_clear(unsigned long *map, unsigned int start, int nbits)
{
  #line 54 
  unsigned long *p = map + (unsigned long)(start / 64U);
  #line 55 
  unsigned int size = start + (unsigned int)nbits;
  #line 56 
  int bits_to_clear = (int)(64U - (start & 63U));
  #line 57 
  unsigned long mask_to_clear = 18446744073709551615UL << ((unsigned long)start & 63UL);
  #line 59 
  while (nbits - bits_to_clear >= 0) {
    #line 60 
    *p &= ~ mask_to_clear;
    #line 61 
    nbits -= bits_to_clear;
    #line 62 
    bits_to_clear = 64;
    #line 63 
    mask_to_clear = 18446744073709551615UL;
    #line 64 
    p ++;
  }
  #line 66 
  if (nbits != 0) {
    #line 67 
    mask_to_clear = (18446744073709551615UL >> ((unsigned long)(- size) & 63UL)) & mask_to_clear;
    #line 68 
    *p &= ~ mask_to_clear;
  }
  #line 70 
  return;
}

#line 72  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_bitmap_zero(unsigned long *dst, unsigned int nbits)
{
  #line 74 
  unsigned int len = (unsigned int)(((unsigned long)nbits + 63UL) / 64UL) * 8U;
  #line 75 
  memset((void *)dst,0,(unsigned long)len);
  #line 76 
  return;
}

#line 78  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
unsigned long ldv_bitmap_find_next_zero_area(unsigned long *map, unsigned long size, unsigned long start, unsigned int nr, unsigned long align_mask)
{
  #line 80 
  unsigned long index;
  #line 80 
  unsigned long end;
  #line 80 
  unsigned long i;
  #line 82 
  again: 
         #line 82 
  ;
  #line 83 
  index = ldv_find_next_zero_bit(map,size,start);
  #line 84 
  index = (index + align_mask) & ~ align_mask;
  #line 85 
  end = (unsigned long)nr + index;
  #line 87 
  if (end > size) 
                  #line 88 
                  return end;
  #line 90 
  i = ldv_find_next_bit(map,end,index);
  #line 92 
  if (i < end) {
    #line 93 
    start = i + 1UL;
    #line 94 
    goto again;
  }
  #line 97 
  return index;
}

#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/find_bit.h"
#line 25 
void ldv_check_find_bit_offset(unsigned long, unsigned long);
#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/find_bit.common.c"
static unsigned long ldv_ffs(unsigned long word)
{
  #line 23 
  int num = 0;
  #line 25 
  if ((word & 4294967295UL) == 0UL) {
    #line 26 
    num += 32;
    #line 27 
    word >>= 32;
  }
  #line 29 
  if ((word & 65535UL) == 0UL) {
    #line 30 
    num += 16;
    #line 31 
    word >>= 16;
  }
  #line 33 
  if ((word & 255UL) == 0UL) {
    #line 34 
    num += 8;
    #line 35 
    word >>= 8;
  }
  #line 37 
  if ((word & 15UL) == 0UL) {
    #line 38 
    num += 4;
    #line 39 
    word >>= 4;
  }
  #line 41 
  if ((word & 3UL) == 0UL) {
    #line 42 
    num += 2;
    #line 43 
    word >>= 2;
  }
  #line 45 
  if ((word & 1UL) == 0UL) 
                           #line 46 
                           num ++;
  #line 48 
  return (unsigned long)num;
}

#line 51  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/find_bit.common.c"
static unsigned long ldv_min(unsigned long a, unsigned long b)
{
  #line 53 
  if (a < b) 
             #line 54 
             return a;
  #line 56 
  return b;
}

#line 59  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/find_bit.common.c"
static unsigned long ldv_restrict_find_bit_res(unsigned long res, unsigned long size)
{
  #line 62 
  __VERIFIER_assume(1);
  #line 63 
  __VERIFIER_assume(res <= size);
  #line 65 
  return res;
}

#line 68  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/find_bit.common.c"
unsigned long ldv_find_first_bit(unsigned long *addr, unsigned long size)
{
  #line 70 
  unsigned long i;
  #line 72 
  i = 0UL;
  #line 72 
  while (i * 64UL < size) {
    #line 73 
    if (*(addr + i) != 0UL) {
      #line 74 
      ;
      #line 74 
      ;
      #line 74 
      ;
      #line 74 
      return ldv_restrict_find_bit_res(ldv_min(i * 64UL + ldv_ffs(*(addr + i)),size),
                                  size);
    }
    #line 72 
    i ++;
  }
  #line 76 
  return size;
}

#line 79  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/find_bit.common.c"
unsigned long ldv_find_next_bit(unsigned long *addr, unsigned long size, unsigned long offset)
{
  #line 81 
  unsigned long tmp;
  #line 83 
  ldv_check_find_bit_offset(size,offset);
  #line 85 
  tmp = *(addr + offset / 64UL);
  #line 86 
  tmp = (unsigned long)((18446744073709551615ULL << (offset & 63UL)) & (unsigned long long)tmp);
  #line 87 
  offset &= 18446744073709551552UL;
  #line 89 
  while (tmp == 0UL) {
    #line 90 
    offset += 64UL;
    #line 91 
    if (offset >= size) 
                        #line 92 
                        return size;
    #line 94 
    tmp = *(addr + offset / 64UL);
  }
  #line 97 
  ;
  #line 97 
  ;
  #line 97 
  ;
  #line 97 
  return ldv_restrict_find_bit_res(ldv_min(ldv_ffs(tmp) + offset,size),size);
}

#line 100  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/find_bit.common.c"
unsigned long ldv_find_next_zero_bit(unsigned long *addr, unsigned long size, unsigned long offset)
{
  #line 102 
  unsigned long tmp;
  #line 104 
  ldv_check_find_bit_offset(size,offset);
  #line 106 
  tmp = *(addr + offset / 64UL);
  #line 107 
  tmp = ~ tmp;
  #line 108 
  tmp = (unsigned long)((18446744073709551615ULL << (offset & 63UL)) & (unsigned long long)tmp);
  #line 109 
  offset &= 18446744073709551552UL;
  #line 111 
  while (tmp == 0UL) {
    #line 112 
    offset += 64UL;
    #line 113 
    if (offset >= size) 
                        #line 114 
                        return size;
    #line 116 
    tmp = *(addr + offset / 64UL);
    #line 117 
    tmp = ~ tmp;
  }
  #line 120 
  ;
  #line 120 
  ;
  #line 120 
  ;
  #line 120 
  return ldv_restrict_find_bit_res(ldv_min(ldv_ffs(tmp) + offset,size),size);
}

#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/string.h"
#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
size_t ldv_strlen(char *s);
#line 26  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/string.h"
#line 31  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
int ldv_strcmp(char *cs, char *ct);
#line 27  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/string.h"
#line 40  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
int ldv_strncmp(char *cs, char *ct, __kernel_size_t count);
#line 28  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/string.h"
#line 70  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
char *ldv_strstr(char *cs, char *ct);
#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
size_t ldv_strlen(char *s)
{
  #line 23 
  unsigned int len = 0U;
  #line 25 
  while ((int)*s != 0) {
    #line 26 
    len ++;
    #line 25 
    s ++;
  }
  #line 28 
  return (unsigned long)len;
}

#line 31  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
int ldv_strcmp(char *cs, char *ct)
{
  #line 33 
  while ((int)*cs != 0 && (int)*ct != 0) {
    #line 34 
    if ((int)*cs != (int)*ct) 
                              #line 35 
                              break;
    #line 33 
    cs ++;
    #line 33 
    ct ++;
  }
  #line 37 
  return (int)*cs - (int)*ct;
}

#line 40  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
int ldv_strncmp(char *cs, char *ct, __kernel_size_t count)
{
  #line 42 
  if (count == 0UL) 
                    #line 43 
                    return 0;
  #line 45 
  while ((int)*cs != 0 && (int)*ct != 0) {
    #line 46 
    if ((int)*cs != (int)*ct) 
                              #line 47 
                              break;
    #line 49 
    count --;
    #line 51 
    if (count == 0UL) 
                      #line 52 
                      break;
    #line 45 
    cs ++;
    #line 45 
    ct ++;
  }
  #line 55 
  return (int)*cs - (int)*ct;
}

#line 58  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
int ldv_memcmp(void *cs, void *ct, size_t count)
{
  #line 60 
  unsigned char *su1;
  #line 60 
  unsigned char *su2;
  #line 61 
  int res = 0;
  #line 63 
  su1 = (unsigned char *)cs;
  #line 63 
  su2 = (unsigned char *)ct;
  #line 63 
  while (count != 0UL) {
    #line 64 
    res = (int)*su1 - (int)*su2;
    #line 64 
    if (res != 0) 
                  #line 65 
                  break;
    #line 63 
    su1 ++;
    #line 63 
    su2 ++;
    #line 63 
    count --;
  }
  #line 67 
  return res;
}

#line 70  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
char *ldv_strstr(char *cs, char *ct)
{
  #line 72 
  size_t cs_len;
  #line 72 
  size_t ct_len;
  #line 74 
  cs_len = ldv_strlen(cs);
  #line 75 
  ct_len = ldv_strlen(ct);
  #line 77 
  while (cs_len >= ct_len) {
    #line 78 
    if (ldv_memcmp((void *)cs,(void *)ct,ct_len) == 0) 
                                                       #line 79 
                                                       return cs;
    #line 81 
    cs_len --;
    #line 82 
    cs ++;
  }
  #line 85 
  return (char *)0;
}

#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/list.c"
void ldv_init_list_head(struct list_head *list)
{
  #line 23 
  list->next = list;
  #line 24 
  list->prev = list;
  #line 25 
  return;
}

#line 26  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 43  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags);
#line 30  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 69  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
struct kmem_cache *ldv_kmem_cache_create(char *name, unsigned int size);
#line 31  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 85  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmem_cache_alloc(struct kmem_cache *cachep, gfp_t flags);
#line 32  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 90  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmem_cache_zalloc(struct kmem_cache *cachep, gfp_t flags);
#line 33  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 95  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void ldv_kmem_cache_free(struct kmem_cache *cachep, void *objp);
#line 34  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 100  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void ldv_kmem_cache_destroy(struct kmem_cache *cachep);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc(size_t size, gfp_t flags)
{
  #line 25 
  void *res;
  #line 27 
  ldv_check_alloc_flags(flags);
  #line 28 
  res = ldv_malloc(size);
  #line 30 
  return res;
}

#line 33  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kzalloc(size_t size, gfp_t flags)
{
  #line 35 
  void *res;
  #line 37 
  ldv_check_alloc_flags(flags);
  #line 38 
  res = ldv_zalloc(size);
  #line 40 
  return res;
}

#line 43  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags)
{
  #line 45 
  void *res;
  #line 47 
  ldv_check_alloc_flags(flags);
  #line 48 
  res = ldv_malloc(n * size);
  #line 50 
  return res;
}

#line 53  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags)
{
  #line 55 
  void *res;
  #line 57 
  ldv_check_alloc_flags(flags);
  #line 58 
  res = ldv_calloc(n,size);
  #line 60 
  return res;
}

#line 69  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
struct kmem_cache *ldv_kmem_cache_create(char *name, unsigned int size)
{
  #line 71 
  struct kmem_cache *res;
  #line 72 
  struct ldv_kmem_cache *ldv_res;
  #line 74 
  res = (struct kmem_cache *)ldv_zalloc(16UL);
  #line 76 
  if (res != (struct kmem_cache *)0) {
    #line 77 
    ldv_res = (struct ldv_kmem_cache *)res;
    #line 78 
    ldv_res->name = name;
    #line 79 
    ldv_res->size = size;
  }
  #line 82 
  return res;
}

#line 85  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmem_cache_alloc(struct kmem_cache *cachep, gfp_t flags)
{
  #line 87 
  return ldv_kmalloc((unsigned long)((struct ldv_kmem_cache *)cachep)->size,
                  flags);
}

#line 90  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmem_cache_zalloc(struct kmem_cache *cachep, gfp_t flags)
{
  #line 92 
  return ldv_kzalloc((unsigned long)((struct ldv_kmem_cache *)cachep)->size,
                  flags);
}

#line 95  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void ldv_kmem_cache_free(struct kmem_cache *cachep, void *objp)
{
  #line 97 
  ldv_free(objp);
  #line 98 
  return;
}

#line 100  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void ldv_kmem_cache_destroy(struct kmem_cache *cachep)
{
  #line 102 
  ldv_free((void *)cachep);
  #line 103 
  return;
}

#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/string.h"
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/util.c"
void *ldv_kmemdup(void *src, size_t len, gfp_t gfp);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/util.c"
void *ldv_kmemdup(void *src, size_t len, gfp_t gfp)
{
  #line 25 
  void *res;
  #line 27 
  ldv_check_alloc_flags(gfp);
  #line 28 
  res = ldv_malloc(len);
  #line 30 
  if (res != (void *)0) 
                        #line 31 
                        memcpy(res,src,len);
  #line 33 
  return res;
}

#line 162  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 162 
void ldv_check_alloc_nonatomic(void);
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/vmalloc.h"
#line 33  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/vmalloc.c"
void *ldv_vzalloc(unsigned long size);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/vmalloc.c"
void *ldv_vmalloc(unsigned long size)
{
  #line 25 
  void *res;
  #line 27 
  ldv_check_alloc_nonatomic();
  #line 28 
  res = ldv_malloc(size);
  #line 30 
  return res;
}

#line 33  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/vmalloc.c"
void *ldv_vzalloc(unsigned long size)
{
  #line 35 
  void *res;
  #line 37 
  ldv_check_alloc_nonatomic();
  #line 38 
  res = ldv_zalloc(size);
  #line 40 
  return res;
}

#line 43  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/vmalloc.c"
void ldv_vfree(void *addr)
{
  #line 45 
  ldv_free(addr);
  #line 46 
  return;
}

#line 28  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 28 
void *malloc(size_t);
#line 29 
#line 29 
void *calloc(size_t, size_t);
#line 30 
#line 30 
void free(void *);
#line 45 
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
unsigned int ldv_is_memory_alloc_failures;
#line 56  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 63  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xcalloc(size_t nmemb, size_t size);
#line 60  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 88  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc_unknown_size(void);
#line 61  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 97  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc_unknown_size(void);
#line 64  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc(size_t size);
#line 65  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 37  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc(size_t nmemb, size_t size);
#line 66  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 42  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc(size_t size);
#line 67  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 47  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void ldv_reference_free(void *s);
#line 69  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 52  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_realloc(void *ptr, size_t size);
#line 71  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 80  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc(size_t size);
#line 72  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 90  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xcalloc(size_t nmemb, size_t size);
#line 73  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 100  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xzalloc(size_t size);
#line 75  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 110  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc_unknown_size(void);
#line 76  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 124  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc_unknown_size(void);
#line 77  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 139  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc_unknown_size(void);
#line 83  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 106  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc_unknown_size(size_t size);
#line 85  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 144  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size);
#line 87  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 87 
void *external_allocated_data(void);
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
unsigned int ldv_is_memory_alloc_failures = 1U;
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc(size_t size)
{
  #line 26 
  void *res;
  #line 28 
  if (ldv_is_memory_alloc_failures != 0U) {
    #line 28 
    if (ldv_undef_int() != 0) 
                              #line 29 
                              return (void *)0;
  }
  #line 32 
  res = malloc(size);
  #line 33 
  __VERIFIER_assume(res != (void *)0);
  #line 34 
  return res;
}

#line 37  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc(size_t nmemb, size_t size)
{
  #line 39 
  return calloc(nmemb,size);
}

#line 42  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc(size_t size)
{
  #line 44 
  return calloc(1UL,size);
}

#line 47  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void ldv_reference_free(void *s)
{
  #line 49 
  free(s);
  #line 50 
  return;
}

#line 52  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_realloc(void *ptr, size_t size)
{
  #line 54 
  void *res;
  #line 56 
  if (ptr != (void *)0 && size == 0UL) {
    #line 57 
    free(ptr);
    #line 58 
    return (void *)0;
  }
  #line 61 
  if (ptr == (void *)0) {
    #line 62 
    res = malloc(size);
    #line 63 
    return res;
  }
  #line 66 
  if (ldv_undef_int() != 0) {
    #line 68 
    res = malloc(size);
    #line 69 
    __VERIFIER_assume(res != (void *)0);
    #line 71 
    memcpy(res,ptr,size);
    #line 72 
    free(ptr);
    #line 74 
    return res;
  }
  else 
       #line 77 
       return (void *)0;
}

#line 80  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc(size_t size)
{
  #line 82 
  void *res;
  #line 84 
  res = malloc(size);
  #line 85 
  __VERIFIER_assume(res != (void *)0);
  #line 87 
  return res;
}

#line 90  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xcalloc(size_t nmemb, size_t size)
{
  #line 92 
  void *res;
  #line 94 
  res = calloc(nmemb,size);
  #line 95 
  __VERIFIER_assume(res != (void *)0);
  #line 97 
  return res;
}

#line 100  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xzalloc(size_t size)
{
  #line 102 
  void *res;
  #line 104 
  res = calloc(1UL,size);
  #line 105 
  __VERIFIER_assume(res != (void *)0);
  #line 107 
  return res;
}

#line 110  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc_unknown_size(void)
{
  #line 112 
  void *res;
  #line 114 
  if (ldv_undef_int() != 0) {
    #line 116 
    res = external_allocated_data();
    #line 117 
    __VERIFIER_assume(res != (void *)0);
    #line 118 
    return res;
  }
  else 
       #line 121 
       return (void *)0;
}

#line 124  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc_unknown_size(void)
{
  #line 126 
  void *res;
  #line 128 
  if (ldv_undef_int() != 0) {
    #line 130 
    res = external_allocated_data();
    #line 131 
    memset(res,0,8UL);
    #line 132 
    __VERIFIER_assume(res != (void *)0);
    #line 133 
    return res;
  }
  else 
       #line 136 
       return (void *)0;
}

#line 139  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc_unknown_size(void)
{
  #line 141 
  return ldv_reference_calloc_unknown_size();
}

#line 144  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size)
{
  #line 146 
  void *res;
  #line 149 
  res = external_allocated_data();
  #line 150 
  __VERIFIER_assume(res != (void *)0);
  #line 152 
  return res;
}

#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc(size_t size)
{
  #line 25 
  void *res;
  #line 26 
  res = ldv_reference_malloc(size);
  #line 27 
  if (res != (void *)0) {
    #line 28 
    int tmp_0;
    #line 28 
    if (ldv_is_err(res)) 
                         #line 28 
                         tmp_0 = 0; else 
                                         #line 28 
                                         tmp_0 = 1;
    #line 28 
    __VERIFIER_assume(tmp_0);
  }
  #line 29 
  return res;
}

#line 32  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc(size_t nmemb, size_t size)
{
  #line 34 
  void *res;
  #line 35 
  res = ldv_reference_calloc(nmemb,size);
  #line 36 
  if (res != (void *)0) {
    #line 37 
    int tmp_0;
    #line 37 
    if (ldv_is_err(res)) 
                         #line 37 
                         tmp_0 = 0; else 
                                         #line 37 
                                         tmp_0 = 1;
    #line 37 
    __VERIFIER_assume(tmp_0);
  }
  #line 38 
  return res;
}

#line 41  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc(size_t size)
{
  #line 43 
  void *res;
  #line 44 
  res = ldv_reference_zalloc(size);
  #line 45 
  if (res != (void *)0) {
    #line 46 
    int tmp_0;
    #line 46 
    if (ldv_is_err(res)) 
                         #line 46 
                         tmp_0 = 0; else 
                                         #line 46 
                                         tmp_0 = 1;
    #line 46 
    __VERIFIER_assume(tmp_0);
  }
  #line 47 
  return res;
}

#line 50  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void ldv_free(void *s)
{
  #line 52 
  ldv_reference_free(s);
  #line 53 
  return;
}

#line 55  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc(size_t size)
{
  #line 57 
  void *res;
  #line 59 
  int tmp_0;
  #line 58 
  res = ldv_reference_xmalloc(size);
  #line 59 
  if (ldv_is_err(res)) 
                       #line 59 
                       tmp_0 = 0; else 
                                       #line 59 
                                       tmp_0 = 1;
  #line 59 
  __VERIFIER_assume(tmp_0);
  #line 60 
  return res;
}

#line 63  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xcalloc(size_t nmemb, size_t size)
{
  #line 65 
  void *res;
  #line 67 
  int tmp_0;
  #line 66 
  res = ldv_reference_xcalloc(nmemb,size);
  #line 67 
  if (ldv_is_err(res)) 
                       #line 67 
                       tmp_0 = 0; else 
                                       #line 67 
                                       tmp_0 = 1;
  #line 67 
  __VERIFIER_assume(tmp_0);
  #line 68 
  return res;
}

#line 71  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xzalloc(size_t size)
{
  #line 73 
  void *res;
  #line 75 
  int tmp_0;
  #line 74 
  res = ldv_reference_xzalloc(size);
  #line 75 
  if (ldv_is_err(res)) 
                       #line 75 
                       tmp_0 = 0; else 
                                       #line 75 
                                       tmp_0 = 1;
  #line 75 
  __VERIFIER_assume(tmp_0);
  #line 76 
  return res;
}

#line 79  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc_unknown_size(void)
{
  #line 81 
  void *res;
  #line 82 
  res = ldv_reference_malloc_unknown_size();
  #line 83 
  if (res != (void *)0) {
    #line 84 
    int tmp_0;
    #line 84 
    if (ldv_is_err(res)) 
                         #line 84 
                         tmp_0 = 0; else 
                                         #line 84 
                                         tmp_0 = 1;
    #line 84 
    __VERIFIER_assume(tmp_0);
  }
  #line 85 
  return res;
}

#line 88  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc_unknown_size(void)
{
  #line 90 
  void *res;
  #line 91 
  res = ldv_reference_calloc_unknown_size();
  #line 92 
  if (res != (void *)0) {
    #line 93 
    int tmp_0;
    #line 93 
    if (ldv_is_err(res)) 
                         #line 93 
                         tmp_0 = 0; else 
                                         #line 93 
                                         tmp_0 = 1;
    #line 93 
    __VERIFIER_assume(tmp_0);
  }
  #line 94 
  return res;
}

#line 97  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc_unknown_size(void)
{
  #line 99 
  void *res;
  #line 100 
  res = ldv_reference_zalloc_unknown_size();
  #line 101 
  if (res != (void *)0) {
    #line 102 
    int tmp_0;
    #line 102 
    if (ldv_is_err(res)) 
                         #line 102 
                         tmp_0 = 0; else 
                                         #line 102 
                                         tmp_0 = 1;
    #line 102 
    __VERIFIER_assume(tmp_0);
  }
  #line 103 
  return res;
}

#line 106  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc_unknown_size(size_t size)
{
  #line 108 
  void *res;
  #line 110 
  int tmp_0;
  #line 109 
  res = ldv_reference_xmalloc_unknown_size(size);
  #line 110 
  if (ldv_is_err(res)) 
                       #line 110 
                       tmp_0 = 0; else 
                                       #line 110 
                                       tmp_0 = 1;
  #line 110 
  __VERIFIER_assume(tmp_0);
  #line 111 
  return res;
}

/* compiler builtin: 
   long __builtin_expect(long exp, long c);   */
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/common.h"
#line 22 
void __VERIFIER_error(void);
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/common.h"
long __builtin_expect(long exp, long c)
{
  #line 26 
  return exp;
}

#line 35  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/gcc.c"
void __builtin_trap(void)
{
  #line 37 
  __VERIFIER_error();
  #line 38 
  return;
}

#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 53  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
long ldv_undef_long(void);
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 61  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned int ldv_undef_uint(void);
#line 26  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 77  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long ldv_undef_ulong(void);
#line 27  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 85  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long long ldv_undef_ulonglong(void);
#line 28  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 69  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr(void);
#line 37  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 111  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_nonnegative(void);
#line 43  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 129  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr_non_null(void);
#line 54  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 139  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int __ldv_undef_int_range(int begin, int end);
#line 56  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 151  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int __ldv_undef_int_range2(int begin, int end);
#line 29 
#line 29 
int __VERIFIER_nondet_int(void);
#line 31 
#line 31 
long __VERIFIER_nondet_long(void);
#line 38 
#line 38 
unsigned int __VERIFIER_nondet_uint(void);
#line 41 
#line 41 
unsigned long __VERIFIER_nondet_ulong(void);
#line 42 
#line 42 
unsigned long long __VERIFIER_nondet_ulonglong(void);
#line 43 
#line 43 
void *__VERIFIER_nondet_pointer(void);
#line 45  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int(void)
{
  #line 48 
  int undef_int = __VERIFIER_nondet_int();
  #line 50 
  return undef_int;
}

#line 53  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
long ldv_undef_long(void)
{
  #line 56 
  long undef_long = __VERIFIER_nondet_long();
  #line 58 
  return undef_long;
}

#line 61  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned int ldv_undef_uint(void)
{
  #line 64 
  unsigned int undef_uint = __VERIFIER_nondet_uint();
  #line 66 
  return undef_uint;
}

#line 69  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr(void)
{
  #line 72 
  void *undef_ptr = __VERIFIER_nondet_pointer();
  #line 74 
  return undef_ptr;
}

#line 77  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long ldv_undef_ulong(void)
{
  #line 80 
  unsigned long undef_ulong = __VERIFIER_nondet_ulong();
  #line 82 
  return undef_ulong;
}

#line 85  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long long ldv_undef_ulonglong(void)
{
  #line 88 
  unsigned long long undef_ulonglong = __VERIFIER_nondet_ulonglong();
  #line 90 
  return undef_ulonglong;
}

#line 93  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_positive(void)
{
  #line 95 
  int ret = ldv_undef_int();
  #line 97 
  __VERIFIER_assume(ret > 0);
  #line 99 
  return ret;
}

#line 102  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_negative(void)
{
  #line 104 
  int ret = ldv_undef_int();
  #line 106 
  __VERIFIER_assume(ret < 0);
  #line 108 
  return ret;
}

#line 111  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_nonnegative(void)
{
  #line 113 
  int ret = ldv_undef_int();
  #line 115 
  __VERIFIER_assume(ret >= 0);
  #line 117 
  return ret;
}

#line 120  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_nonpositive(void)
{
  #line 122 
  int ret = ldv_undef_int();
  #line 124 
  __VERIFIER_assume(ret <= 0);
  #line 126 
  return ret;
}

#line 129  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr_non_null(void)
{
  #line 131 
  void *ret = ldv_undef_ptr();
  #line 133 
  __VERIFIER_assume(ret != (void *)0);
  #line 135 
  return ret;
}

#line 139  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int __ldv_undef_int_range(int begin, int end)
{
  #line 141 
  int ret;
  #line 143 
  ret = ldv_undef_int();
  #line 144 
  __VERIFIER_assume(ret >= begin);
  #line 145 
  __VERIFIER_assume(ret <= end);
  #line 147 
  return ret;
}

#line 151  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int __ldv_undef_int_range2(int begin, int end)
{
  #line 153 
  int ret;
  #line 155 
  ret = begin;
  #line 155 
  while (ret < end) {
    #line 156 
    if (ldv_undef_int() != 0) 
                              #line 157 
                              break;
    #line 155 
    ret ++;
  }
  #line 159 
  return ret;
}

#line 62  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 62 
void ldv_initialize(void);
#line 87 
#line 87 
void ldv_failed_usb_register_driver(void);
#line 123 
#line 123 
void ldv_pre_probe(void);
#line 35  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/thread.h"
#line 35 
int pthread_create(pthread_t *, pthread_attr_t *, void *(*)(void *), void *);
#line 39 
#line 39 
int pthread_join(pthread_t, void **);
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/err.h"
__inline static void *ERR_PTR_0(long error)
{
  #line 26 
  return (void *)error;
}

#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rtnetlink.h"
#line 33 
void rtnl_lock(void);
#line 34 
#line 34 
void rtnl_unlock(void);
#line 74  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/emg/0/environment_model.c"
#line 123 
void emg_dispatch_deregister_5(struct ieee80211_hw *arg0);
#line 75 
#line 132 
void emg_dispatch_deregister_9(struct usb_driver *arg0);
#line 76 
#line 141 
void emg_dispatch_register_10(struct usb_driver *arg0);
#line 77 
#line 101 
void emg_dispatch_register_3(struct file_operations *arg0);
#line 78 
#line 112 
void emg_dispatch_register_4(struct ieee80211_hw *arg0);
#line 79 
#line 1191 
void *emg_entry_point_insmod(void *arg0);
#line 80 
#line 152 
void *emg_file_operations_character_driver_scenario_carl9170_debugfs_read(void *arg0);
#line 83 
#line 313 
void *emg_ieee80211_ieee80211_scenario_carl9170_ops(void *arg0);
#line 91 
#line 769 
void *emg_usb_usb_scenario_carl9170_driver(void *arg0);
#line 92 
#line 1220 
int main(void);
#line 95  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/emg/0/environment_model.c"
pthread_t emg_thread_13;
#line 96  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/emg/0/environment_model.c"
pthread_t emg_thread_14;
#line 97  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/emg/0/environment_model.c"
pthread_t emg_thread_15;
#line 101  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/emg/0/environment_model.c"
void emg_dispatch_register_3(struct file_operations *arg0)
{
  #line 102 
  int ret;
  #line 103 
  struct emg_struct_character_driver_scenario_carl9170_debugfs_read_13 *cf_arg_13;
  #line 104 
  cf_arg_13 = (struct emg_struct_character_driver_scenario_carl9170_debugfs_read_13 *)ldv_xmalloc(16UL);
  #line 105 
  cf_arg_13->arg0 = arg0;
  #line 106 
  ret = pthread_create(& emg_thread_13,(pthread_attr_t *)0,& emg_file_operations_character_driver_scenario_carl9170_debugfs_read,(void *)cf_arg_13);
  #line 107 
  __VERIFIER_assume(ret == 0);
  #line 108 
  return;
}

#line 112  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/emg/0/environment_model.c"
void emg_dispatch_register_4(struct ieee80211_hw *arg0)
{
  #line 113 
  int ret;
  #line 114 
  struct emg_struct_ieee80211_scenario_carl9170_ops_14 *cf_arg_14;
  #line 115 
  cf_arg_14 = (struct emg_struct_ieee80211_scenario_carl9170_ops_14 *)ldv_xmalloc(16UL);
  #line 116 
  cf_arg_14->arg0 = arg0;
  #line 117 
  ret = pthread_create(& emg_thread_14,(pthread_attr_t *)0,& emg_ieee80211_ieee80211_scenario_carl9170_ops,(void *)cf_arg_14);
  #line 118 
  __VERIFIER_assume(ret == 0);
  #line 119 
  return;
}

#line 123  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/emg/0/environment_model.c"
void emg_dispatch_deregister_5(struct ieee80211_hw *arg0)
{
  #line 124 
  int ret;
  #line 125 
  struct emg_struct_ieee80211_scenario_carl9170_ops_14 *cf_arg_14;
  #line 126 
  ret = pthread_join(emg_thread_14,(void **)0);
  #line 127 
  __VERIFIER_assume(ret == 0);
  #line 128 
  return;
}

#line 132  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/emg/0/environment_model.c"
void emg_dispatch_deregister_9(struct usb_driver *arg0)
{
  #line 133 
  int ret;
  #line 134 
  struct emg_struct_usb_scenario_carl9170_driver_15 *cf_arg_15;
  #line 135 
  ret = pthread_join(emg_thread_15,(void **)0);
  #line 136 
  __VERIFIER_assume(ret == 0);
  #line 137 
  return;
}

#line 141  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/emg/0/environment_model.c"
void emg_dispatch_register_10(struct usb_driver *arg0)
{
  #line 142 
  int ret;
  #line 143 
  struct emg_struct_usb_scenario_carl9170_driver_15 *cf_arg_15;
  #line 144 
  cf_arg_15 = (struct emg_struct_usb_scenario_carl9170_driver_15 *)ldv_xmalloc(16UL);
  #line 145 
  cf_arg_15->arg0 = arg0;
  #line 146 
  ret = pthread_create(& emg_thread_15,(pthread_attr_t *)0,& emg_usb_usb_scenario_carl9170_driver,(void *)cf_arg_15);
  #line 147 
  __VERIFIER_assume(ret == 0);
  #line 148 
  return;
}

#line 152  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/emg/0/environment_model.c"
void *emg_file_operations_character_driver_scenario_carl9170_debugfs_read(void *arg0)
{
  #line 155 
  struct file_operations *emg_13_container;
  #line 156 
  char *emg_13_emg_param_1_0;
  #line 157 
  char *emg_13_emg_param_1_2;
  #line 158 
  long long *emg_13_emg_param_3_1;
  #line 159 
  long long *emg_13_emg_param_3_3;
  #line 160 
  struct file *emg_13_resource_0;
  #line 161 
  struct inode *emg_13_resource_1;
  #line 162 
  int emg_13_ret;
  #line 163 
  unsigned long emg_13_size_cnt;
  #line 164 
  int emg_repeat_cnt_main_13_0 = 1;
  #line 165 
  int emg_repeat_cnt_call_13 = 1;
  #line 166 
  int emg_repeat_cnt_main_13_1 = 1;
  #line 168 
  struct emg_struct_character_driver_scenario_carl9170_debugfs_read_13 *data = (struct emg_struct_character_driver_scenario_carl9170_debugfs_read_13 *)arg0;
  #line 172 
  emg_13_ret = ldv_undef_int();
  #line 173 
  emg_13_ret = ldv_undef_int();
  #line 176 
  if (data != (struct emg_struct_character_driver_scenario_carl9170_debugfs_read_13 *)0) {
    #line 177 
    emg_13_container = data->arg0;
    #line 178 
    ldv_free((void *)data);
  }
  #line 183 
  emg_13_resource_0 = (struct file *)ldv_xmalloc(520UL);
  #line 184 
  emg_13_size_cnt = (unsigned long)ldv_undef_int();
  #line 188 
  goto emg_main_13;
  #line 192 
  return (void *)0;
  #line 195 
  emg_call_13: 
               #line 195 
  ;
  #line 196 
  if (ldv_undef_int() != 0) {
    #line 197 
    if (ldv_undef_int() != 0) {
      #line 199 
      emg_13_emg_param_1_0 = (char *)ldv_xmalloc_unknown_size(0UL);
      #line 199 
      emg_13_emg_param_1_0 = emg_13_emg_param_1_0;
      #line 200 
      emg_13_emg_param_3_1 = (long long *)ldv_xmalloc_unknown_size(0UL);
      #line 200 
      emg_13_emg_param_3_1 = emg_13_emg_param_3_1;
      #line 204 
      emg_wrapper_carl9170_debugfs_read(emg_13_resource_0,emg_13_emg_param_1_0,emg_13_size_cnt,emg_13_emg_param_3_1);
      #line 208 
      ldv_free((void *)emg_13_emg_param_1_0);
      #line 209 
      ldv_free((void *)emg_13_emg_param_3_1);
    }
    else {
      #line 218 
      __VERIFIER_assume(emg_13_size_cnt <= 2147479552UL);
      #line 219 
      emg_13_emg_param_1_2 = (char *)ldv_xmalloc_unknown_size(0UL);
      #line 219 
      emg_13_emg_param_1_2 = emg_13_emg_param_1_2;
      #line 220 
      emg_13_emg_param_3_3 = (long long *)ldv_xmalloc_unknown_size(0UL);
      #line 220 
      emg_13_emg_param_3_3 = emg_13_emg_param_3_3;
      #line 224 
      emg_wrapper_carl9170_debugfs_write(emg_13_resource_0,emg_13_emg_param_1_2,emg_13_size_cnt,emg_13_emg_param_3_3);
      #line 228 
      ldv_free((void *)emg_13_emg_param_1_2);
      #line 229 
      ldv_free((void *)emg_13_emg_param_3_3);
    }
    #line 233 
    if (emg_repeat_cnt_call_13 > 0) {
      #line 234 
      emg_repeat_cnt_call_13 --;
      #line 236 
      goto emg_call_13;
    }
    else 
         #line 238 
         __VERIFIER_assume(0);
  }
  else {
    #line 244 
    if (emg_13_container->release != (int (*)(struct inode *, struct file *))0) 
      #line 245 
      (*(emg_13_container->release))(emg_13_resource_1,emg_13_resource_0);
    #line 249 
    if (emg_repeat_cnt_main_13_0 > 0) {
      #line 250 
      emg_repeat_cnt_main_13_0 --;
      #line 252 
      goto emg_main_13;
    }
    else 
         #line 254 
         __VERIFIER_assume(0);
  }
  #line 260 
  return (void *)0;
  #line 263 
  emg_main_13: 
               #line 263 
  ;
  #line 264 
  if (ldv_undef_int() != 0) {
    #line 266 
    emg_13_ret = simple_open(emg_13_resource_1,emg_13_resource_0);
    #line 271 
    emg_13_ret = ldv_filter_err_code(emg_13_ret);
    #line 274 
    if (ldv_undef_int() != 0) {
      #line 276 
      __VERIFIER_assume(emg_13_ret == 0);
      #line 280 
      goto emg_call_13;
    }
    else {
      #line 285 
      __VERIFIER_assume(emg_13_ret != 0);
      #line 288 
      if (emg_repeat_cnt_main_13_1 > 0) {
        #line 289 
        emg_repeat_cnt_main_13_1 --;
        #line 291 
        goto emg_main_13;
      }
      else 
           #line 293 
           __VERIFIER_assume(0);
    }
  }
  else 
       #line 300 
       ldv_free((void *)emg_13_resource_0);
  #line 308 
  return (void *)0;
}

#line 313  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/emg/0/environment_model.c"
void *emg_ieee80211_ieee80211_scenario_carl9170_ops(void *arg0)
{
  #line 316 
  struct ieee80211_ops *emg_14_container;
  #line 317 
  struct ieee80211_vif *emg_14_emg_param_1_0;
  #line 318 
  struct ieee80211_vif *emg_14_emg_param_1_1;
  #line 319 
  unsigned int emg_14_emg_param_1_10;
  #line 320 
  struct ieee80211_vif *emg_14_emg_param_1_13;
  #line 321 
  struct ieee80211_low_level_stats *emg_14_emg_param_1_16;
  #line 322 
  int emg_14_emg_param_1_17;
  #line 323 
  struct ieee80211_vif *emg_14_emg_param_1_19;
  #line 324 
  struct netdev_hw_addr_list *emg_14_emg_param_1_20;
  #line 325 
  struct ieee80211_vif *emg_14_emg_param_1_21;
  #line 326 
  enum set_key_cmd *emg_14_emg_param_1_22;
  #line 327 
  struct ieee80211_vif *emg_14_emg_param_1_26;
  #line 328 
  struct ieee80211_vif *emg_14_emg_param_1_28;
  #line 329 
  struct ieee80211_vif *emg_14_emg_param_1_3;
  #line 330 
  struct ieee80211_vif *emg_14_emg_param_1_31;
  #line 331 
  struct ieee80211_tx_control *emg_14_emg_param_1_33;
  #line 332 
  struct cfg80211_wowlan *emg_14_emg_param_1_35;
  #line 333 
  struct ieee80211_vif *emg_14_emg_param_1_6;
  #line 334 
  unsigned int emg_14_emg_param_1_9;
  #line 335 
  unsigned int *emg_14_emg_param_2_11;
  #line 336 
  unsigned int emg_14_emg_param_2_14;
  #line 337 
  struct survey_info *emg_14_emg_param_2_18;
  #line 338 
  struct ieee80211_ampdu_params *emg_14_emg_param_2_2;
  #line 339 
  struct ieee80211_vif *emg_14_emg_param_2_23;
  #line 340 
  struct ieee80211_sta *emg_14_emg_param_2_27;
  #line 341 
  enum sta_notify_cmd *emg_14_emg_param_2_29;
  #line 342 
  struct ieee80211_sta *emg_14_emg_param_2_32;
  #line 343 
  struct sk_buff *emg_14_emg_param_2_34;
  #line 344 
  struct ieee80211_bss_conf *emg_14_emg_param_2_4;
  #line 345 
  unsigned short emg_14_emg_param_2_7;
  #line 346 
  unsigned long long emg_14_emg_param_3_12;
  #line 347 
  _Bool emg_14_emg_param_3_15;
  #line 348 
  struct ieee80211_sta *emg_14_emg_param_3_24;
  #line 349 
  struct ieee80211_sta *emg_14_emg_param_3_30;
  #line 350 
  unsigned int emg_14_emg_param_3_5;
  #line 351 
  struct ieee80211_tx_queue_params *emg_14_emg_param_3_8;
  #line 352 
  struct ieee80211_key_conf *emg_14_emg_param_4_25;
  #line 353 
  struct ieee80211_hw *emg_14_resource;
  #line 354 
  int emg_14_ret;
  #line 355 
  int emg_repeat_cnt_main_14_1 = 1;
  #line 356 
  int emg_repeat_cnt_started_14_1 = 1;
  #line 357 
  int emg_repeat_cnt_started_14_0 = 1;
  #line 358 
  int emg_repeat_cnt_main_14_0 = 1;
  #line 360 
  struct emg_struct_ieee80211_scenario_carl9170_ops_14 *data = (struct emg_struct_ieee80211_scenario_carl9170_ops_14 *)arg0;
  #line 364 
  emg_14_ret = ldv_undef_int();
  #line 365 
  emg_14_container = emg_alias_carl9170_ops;
  #line 366 
  emg_14_ret = ldv_undef_int();
  #line 369 
  if (data != (struct emg_struct_ieee80211_scenario_carl9170_ops_14 *)0) {
    #line 370 
    emg_14_resource = data->arg0;
    #line 371 
    ldv_free((void *)data);
  }
  #line 376 
  goto emg_main_14;
  #line 380 
  return (void *)0;
  #line 383 
  emg_main_14: 
               #line 383 
  ;
  #line 384 
  if (ldv_undef_int() != 0) {
    #line 387 
    rtnl_lock();
    #line 391 
    emg_14_ret = emg_wrapper_carl9170_op_start(emg_14_resource);
    #line 396 
    emg_14_ret = ldv_filter_err_code(emg_14_ret);
    #line 397 
    rtnl_unlock();
    #line 400 
    if (ldv_undef_int() != 0) {
      #line 402 
      __VERIFIER_assume(emg_14_ret == 0);
      #line 406 
      goto emg_started_14;
    }
    else 
         #line 411 
         __VERIFIER_assume(emg_14_ret != 0);
    #line 415 
    if (emg_repeat_cnt_main_14_1 > 0) {
      #line 416 
      emg_repeat_cnt_main_14_1 --;
      #line 418 
      goto emg_main_14;
    }
    else 
         #line 420 
         __VERIFIER_assume(0);
  }
  #line 430 
  return (void *)0;
  #line 433 
  emg_started_14: 
                  #line 433 
  ;
  #line 434 
  switch (ldv_undef_int()) {
    #line 435 
    case 0: 
            #line 435 
    ;
    #line 437 
    emg_wrapper_carl9170_tx_frames_pending(emg_14_resource);
    #line 439 
    break;
    #line 441 
    case 1: 
            #line 441 
    ;
    #line 443 
    emg_14_emg_param_1_33 = (struct ieee80211_tx_control *)ldv_xmalloc_unknown_size(0UL);
    #line 443 
    emg_14_emg_param_1_33 = emg_14_emg_param_1_33;
    #line 444 
    emg_14_emg_param_2_34 = (struct sk_buff *)ldv_xmalloc_unknown_size(0UL);
    #line 444 
    emg_14_emg_param_2_34 = emg_14_emg_param_2_34;
    #line 448 
    carl9170_op_tx(emg_14_resource,emg_14_emg_param_1_33,emg_14_emg_param_2_34);
    #line 452 
    ldv_free((void *)emg_14_emg_param_1_33);
    #line 453 
    ldv_free((void *)emg_14_emg_param_2_34);
    #line 455 
    break;
    #line 457 
    case 2: 
            #line 457 
    ;
    #line 459 
    emg_14_emg_param_1_31 = (struct ieee80211_vif *)ldv_xmalloc_unknown_size(0UL);
    #line 459 
    emg_14_emg_param_1_31 = emg_14_emg_param_1_31;
    #line 460 
    emg_14_emg_param_2_32 = (struct ieee80211_sta *)ldv_xmalloc_unknown_size(0UL);
    #line 460 
    emg_14_emg_param_2_32 = emg_14_emg_param_2_32;
    #line 464 
    emg_wrapper_carl9170_op_sta_remove(emg_14_resource,emg_14_emg_param_1_31,emg_14_emg_param_2_32);
    #line 468 
    ldv_free((void *)emg_14_emg_param_1_31);
    #line 469 
    ldv_free((void *)emg_14_emg_param_2_32);
    #line 471 
    break;
    #line 473 
    case 3: 
            #line 473 
    ;
    #line 475 
    emg_14_emg_param_1_28 = (struct ieee80211_vif *)ldv_xmalloc_unknown_size(0UL);
    #line 475 
    emg_14_emg_param_1_28 = emg_14_emg_param_1_28;
    #line 476 
    emg_14_emg_param_2_29 = (enum sta_notify_cmd *)ldv_xmalloc_unknown_size(0UL);
    #line 476 
    emg_14_emg_param_2_29 = emg_14_emg_param_2_29;
    #line 477 
    emg_14_emg_param_3_30 = (struct ieee80211_sta *)ldv_xmalloc_unknown_size(0UL);
    #line 477 
    emg_14_emg_param_3_30 = emg_14_emg_param_3_30;
    #line 481 
    emg_wrapper_carl9170_op_sta_notify(emg_14_resource,emg_14_emg_param_1_28,*emg_14_emg_param_2_29,emg_14_emg_param_3_30);
    #line 485 
    ldv_free((void *)emg_14_emg_param_1_28);
    #line 486 
    ldv_free((void *)emg_14_emg_param_2_29);
    #line 487 
    ldv_free((void *)emg_14_emg_param_3_30);
    #line 489 
    break;
    #line 491 
    case 4: 
            #line 491 
    ;
    #line 493 
    emg_14_emg_param_1_26 = (struct ieee80211_vif *)ldv_xmalloc_unknown_size(0UL);
    #line 493 
    emg_14_emg_param_1_26 = emg_14_emg_param_1_26;
    #line 494 
    emg_14_emg_param_2_27 = (struct ieee80211_sta *)ldv_xmalloc_unknown_size(0UL);
    #line 494 
    emg_14_emg_param_2_27 = emg_14_emg_param_2_27;
    #line 498 
    emg_wrapper_carl9170_op_sta_add(emg_14_resource,emg_14_emg_param_1_26,emg_14_emg_param_2_27);
    #line 502 
    ldv_free((void *)emg_14_emg_param_1_26);
    #line 503 
    ldv_free((void *)emg_14_emg_param_2_27);
    #line 505 
    break;
    #line 507 
    case 5: 
            #line 507 
    ;
    #line 509 
    emg_14_emg_param_1_22 = (enum set_key_cmd *)ldv_xmalloc_unknown_size(0UL);
    #line 509 
    emg_14_emg_param_1_22 = emg_14_emg_param_1_22;
    #line 510 
    emg_14_emg_param_2_23 = (struct ieee80211_vif *)ldv_xmalloc_unknown_size(0UL);
    #line 510 
    emg_14_emg_param_2_23 = emg_14_emg_param_2_23;
    #line 511 
    emg_14_emg_param_3_24 = (struct ieee80211_sta *)ldv_xmalloc_unknown_size(0UL);
    #line 511 
    emg_14_emg_param_3_24 = emg_14_emg_param_3_24;
    #line 512 
    emg_14_emg_param_4_25 = (struct ieee80211_key_conf *)ldv_xmalloc_unknown_size(0UL);
    #line 512 
    emg_14_emg_param_4_25 = emg_14_emg_param_4_25;
    #line 516 
    emg_wrapper_carl9170_op_set_key(emg_14_resource,*emg_14_emg_param_1_22,emg_14_emg_param_2_23,emg_14_emg_param_3_24,emg_14_emg_param_4_25);
    #line 520 
    ldv_free((void *)emg_14_emg_param_1_22);
    #line 521 
    ldv_free((void *)emg_14_emg_param_2_23);
    #line 522 
    ldv_free((void *)emg_14_emg_param_3_24);
    #line 523 
    ldv_free((void *)emg_14_emg_param_4_25);
    #line 525 
    break;
    #line 527 
    case 6: 
            #line 527 
    ;
    #line 529 
    emg_14_emg_param_1_21 = (struct ieee80211_vif *)ldv_xmalloc_unknown_size(0UL);
    #line 529 
    emg_14_emg_param_1_21 = emg_14_emg_param_1_21;
    #line 533 
    emg_wrapper_carl9170_op_remove_interface(emg_14_resource,emg_14_emg_param_1_21);
    #line 537 
    ldv_free((void *)emg_14_emg_param_1_21);
    #line 539 
    break;
    #line 541 
    case 7: 
            #line 541 
    ;
    #line 543 
    emg_14_emg_param_1_20 = (struct netdev_hw_addr_list *)ldv_xmalloc_unknown_size(0UL);
    #line 543 
    emg_14_emg_param_1_20 = emg_14_emg_param_1_20;
    #line 547 
    emg_wrapper_carl9170_op_prepare_multicast(emg_14_resource,emg_14_emg_param_1_20);
    #line 551 
    ldv_free((void *)emg_14_emg_param_1_20);
    #line 553 
    break;
    #line 555 
    case 8: 
            #line 555 
    ;
    #line 557 
    emg_14_emg_param_1_19 = (struct ieee80211_vif *)ldv_xmalloc_unknown_size(0UL);
    #line 557 
    emg_14_emg_param_1_19 = emg_14_emg_param_1_19;
    #line 561 
    emg_wrapper_carl9170_op_get_tsf(emg_14_resource,emg_14_emg_param_1_19);
    #line 565 
    ldv_free((void *)emg_14_emg_param_1_19);
    #line 567 
    break;
    #line 569 
    case 9: 
            #line 569 
    ;
    #line 571 
    emg_14_emg_param_2_18 = (struct survey_info *)ldv_xmalloc_unknown_size(0UL);
    #line 571 
    emg_14_emg_param_2_18 = emg_14_emg_param_2_18;
    #line 575 
    emg_wrapper_carl9170_op_get_survey(emg_14_resource,emg_14_emg_param_1_17,emg_14_emg_param_2_18);
    #line 579 
    ldv_free((void *)emg_14_emg_param_2_18);
    #line 581 
    break;
    #line 583 
    case 10: 
             #line 583 
    ;
    #line 585 
    emg_14_emg_param_1_16 = (struct ieee80211_low_level_stats *)ldv_xmalloc_unknown_size(0UL);
    #line 585 
    emg_14_emg_param_1_16 = emg_14_emg_param_1_16;
    #line 589 
    emg_wrapper_carl9170_op_get_stats(emg_14_resource,emg_14_emg_param_1_16);
    #line 593 
    ldv_free((void *)emg_14_emg_param_1_16);
    #line 595 
    break;
    #line 597 
    case 11: 
             #line 597 
    ;
    #line 599 
    emg_14_emg_param_1_13 = (struct ieee80211_vif *)ldv_xmalloc_unknown_size(0UL);
    #line 599 
    emg_14_emg_param_1_13 = emg_14_emg_param_1_13;
    #line 603 
    emg_wrapper_carl9170_op_flush(emg_14_resource,emg_14_emg_param_1_13,emg_14_emg_param_2_14,(_Bool)((_Bool)((int)emg_14_emg_param_3_15) != 0));
    #line 607 
    ldv_free((void *)emg_14_emg_param_1_13);
    #line 609 
    break;
    #line 611 
    case 12: 
             #line 611 
    ;
    #line 613 
    emg_14_emg_param_2_11 = (unsigned int *)ldv_xmalloc_unknown_size(0UL);
    #line 613 
    emg_14_emg_param_2_11 = emg_14_emg_param_2_11;
    #line 617 
    emg_wrapper_carl9170_op_configure_filter(emg_14_resource,emg_14_emg_param_1_10,emg_14_emg_param_2_11,emg_14_emg_param_3_12);
    #line 621 
    ldv_free((void *)emg_14_emg_param_2_11);
    #line 623 
    break;
    #line 625 
    case 13: 
             #line 625 
    ;
    #line 627 
    emg_wrapper_carl9170_op_config(emg_14_resource,emg_14_emg_param_1_9);
    #line 629 
    break;
    #line 631 
    case 14: 
             #line 631 
    ;
    #line 633 
    emg_14_emg_param_1_6 = (struct ieee80211_vif *)ldv_xmalloc_unknown_size(0UL);
    #line 633 
    emg_14_emg_param_1_6 = emg_14_emg_param_1_6;
    #line 634 
    emg_14_emg_param_3_8 = (struct ieee80211_tx_queue_params *)ldv_xmalloc_unknown_size(0UL);
    #line 634 
    emg_14_emg_param_3_8 = emg_14_emg_param_3_8;
    #line 638 
    emg_wrapper_carl9170_op_conf_tx(emg_14_resource,emg_14_emg_param_1_6,(unsigned short)((int)emg_14_emg_param_2_7),emg_14_emg_param_3_8);
    #line 642 
    ldv_free((void *)emg_14_emg_param_1_6);
    #line 643 
    ldv_free((void *)emg_14_emg_param_3_8);
    #line 645 
    break;
    #line 647 
    case 15: 
             #line 647 
    ;
    #line 649 
    emg_14_emg_param_1_3 = (struct ieee80211_vif *)ldv_xmalloc_unknown_size(0UL);
    #line 649 
    emg_14_emg_param_1_3 = emg_14_emg_param_1_3;
    #line 650 
    emg_14_emg_param_2_4 = (struct ieee80211_bss_conf *)ldv_xmalloc_unknown_size(0UL);
    #line 650 
    emg_14_emg_param_2_4 = emg_14_emg_param_2_4;
    #line 654 
    emg_wrapper_carl9170_op_bss_info_changed(emg_14_resource,emg_14_emg_param_1_3,emg_14_emg_param_2_4,emg_14_emg_param_3_5);
    #line 658 
    ldv_free((void *)emg_14_emg_param_1_3);
    #line 659 
    ldv_free((void *)emg_14_emg_param_2_4);
    #line 661 
    break;
    #line 663 
    case 16: 
             #line 663 
    ;
    #line 665 
    emg_14_emg_param_1_1 = (struct ieee80211_vif *)ldv_xmalloc_unknown_size(0UL);
    #line 665 
    emg_14_emg_param_1_1 = emg_14_emg_param_1_1;
    #line 666 
    emg_14_emg_param_2_2 = (struct ieee80211_ampdu_params *)ldv_xmalloc_unknown_size(0UL);
    #line 666 
    emg_14_emg_param_2_2 = emg_14_emg_param_2_2;
    #line 670 
    emg_wrapper_carl9170_op_ampdu_action(emg_14_resource,emg_14_emg_param_1_1,emg_14_emg_param_2_2);
    #line 674 
    ldv_free((void *)emg_14_emg_param_1_1);
    #line 675 
    ldv_free((void *)emg_14_emg_param_2_2);
    #line 677 
    break;
    #line 679 
    case 17: 
             #line 679 
    ;
    #line 681 
    emg_14_emg_param_1_35 = (struct cfg80211_wowlan *)ldv_xmalloc_unknown_size(0UL);
    #line 681 
    emg_14_emg_param_1_35 = emg_14_emg_param_1_35;
    #line 685 
    if (emg_14_container->suspend != (int (*)(struct ieee80211_hw *, struct cfg80211_wowlan *))0) 
      #line 686 
      (*(emg_14_container->suspend))(emg_14_resource,emg_14_emg_param_1_35);
    #line 691 
    ldv_free((void *)emg_14_emg_param_1_35);
    #line 695 
    if (emg_14_container->resume != (int (*)(struct ieee80211_hw *))0) 
      #line 696 
      (*(emg_14_container->resume))(emg_14_resource);
    #line 700 
    if (emg_repeat_cnt_started_14_1 > 0) {
      #line 701 
      emg_repeat_cnt_started_14_1 --;
      #line 703 
      goto emg_started_14;
    }
    else 
         #line 705 
         __VERIFIER_assume(0);
    #line 709 
    break;
    #line 711 
    case 18: 
             #line 711 
    ;
    #line 713 
    emg_14_emg_param_1_0 = (struct ieee80211_vif *)ldv_xmalloc_unknown_size(0UL);
    #line 713 
    emg_14_emg_param_1_0 = emg_14_emg_param_1_0;
    #line 717 
    emg_wrapper_carl9170_op_add_interface(emg_14_resource,emg_14_emg_param_1_0);
    #line 721 
    ldv_free((void *)emg_14_emg_param_1_0);
    #line 724 
    if (emg_repeat_cnt_started_14_0 > 0) {
      #line 725 
      emg_repeat_cnt_started_14_0 --;
      #line 727 
      goto emg_started_14;
    }
    else 
         #line 729 
         __VERIFIER_assume(0);
    #line 733 
    break;
    #line 735 
    case 19: 
             #line 735 
    ;
    #line 738 
    rtnl_lock();
    #line 742 
    emg_wrapper_carl9170_op_stop(emg_14_resource);
    #line 747 
    rtnl_unlock();
    #line 750 
    if (emg_repeat_cnt_main_14_0 > 0) {
      #line 751 
      emg_repeat_cnt_main_14_0 --;
      #line 753 
      goto emg_main_14;
    }
    else 
         #line 755 
         __VERIFIER_assume(0);
    #line 759 
    break;
    #line 761 
    default: 
             #line 761 
    ;
    #line 761 
    __VERIFIER_assume(0);
  }
  #line 764 
  return (void *)0;
}

#line 769  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/emg/0/environment_model.c"
void *emg_usb_usb_scenario_carl9170_driver(void *arg0)
{
  #line 772 
  int emg_15_choice;
  #line 773 
  struct usb_driver *emg_15_container;
  #line 774 
  struct usb_device_id *emg_15_device_id;
  #line 775 
  struct pm_message *emg_15_emg_param_1_0;
  #line 776 
  int emg_15_probe_retval;
  #line 777 
  struct usb_interface *emg_15_resource;
  #line 778 
  struct usb_device *emg_15_usb_device;
  #line 779 
  int emg_repeat_cnt_manage_interface_15 = 1;
  #line 781 
  struct emg_struct_usb_scenario_carl9170_driver_15 *data = (struct emg_struct_usb_scenario_carl9170_driver_15 *)arg0;
  #line 785 
  emg_15_choice = 0;
  #line 786 
  emg_15_probe_retval = ldv_undef_int();
  #line 787 
  emg_15_choice = 0;
  #line 788 
  emg_15_container = emg_alias_carl9170_driver;
  #line 789 
  emg_15_probe_retval = ldv_undef_int();
  #line 791 
  __VERIFIER_assume(data->arg0 == emg_alias_carl9170_driver);
  #line 793 
  if (data != (struct emg_struct_usb_scenario_carl9170_driver_15 *)0) {
    #line 794 
    emg_15_container = data->arg0;
    #line 795 
    ldv_free((void *)data);
  }
  #line 800 
  emg_15_resource = (struct usb_interface *)ldv_xmalloc(1704UL);
  #line 801 
  emg_15_usb_device = (struct usb_device *)ldv_xmalloc(2200UL);
  #line 802 
  emg_15_resource->dev.parent = & emg_15_usb_device->dev;
  #line 803 
  emg_15_choice = __ldv_undef_int_range(0,28);
  #line 804 
  emg_15_device_id = emg_15_container->id_table + (unsigned long)emg_15_choice;
  #line 808 
  goto emg_manage_interface_15;
  #line 812 
  return (void *)0;
  #line 815 
  emg_manage_interface_15: 
                           #line 815 
  ;
  #line 816 
  if (ldv_undef_int() != 0) {
    #line 819 
    ldv_pre_probe();
    #line 823 
    emg_15_probe_retval = emg_wrapper_carl9170_usb_probe(emg_15_resource,emg_15_device_id);
    #line 828 
    emg_15_probe_retval = ldv_post_probe(emg_15_probe_retval);
    #line 831 
    if (ldv_undef_int() != 0) {
      #line 833 
      __VERIFIER_assume(emg_15_probe_retval == 0);
      #line 836 
      switch (ldv_undef_int()) {
        #line 837 
        case 0: 
                #line 837 
        ;
        #line 843 
        if (emg_15_container->pre_reset != (int (*)(struct usb_interface *))0) 
          #line 844 
          (*(emg_15_container->pre_reset))(emg_15_resource);
        #line 849 
        if (emg_15_container->post_reset != (int (*)(struct usb_interface *))0) 
          #line 850 
          (*(emg_15_container->post_reset))(emg_15_resource);
        #line 853 
        break;
        #line 855 
        case 1: 
                #line 855 
        ;
        #line 857 
        emg_15_emg_param_1_0 = (struct pm_message *)ldv_xmalloc_unknown_size(0UL);
        #line 857 
        emg_15_emg_param_1_0 = emg_15_emg_param_1_0;
        #line 861 
        emg_wrapper_carl9170_usb_suspend(emg_15_resource,*emg_15_emg_param_1_0);
        #line 865 
        ldv_free((void *)emg_15_emg_param_1_0);
        #line 868 
        if (ldv_undef_int() != 0) 
                                  #line 870 
                                  emg_wrapper_carl9170_usb_resume(emg_15_resource); else 
                                                                    #line 874 
                                                                    emg_wrapper_carl9170_usb_resume(emg_15_resource);
        #line 877 
        break;
        #line 879 
        case 2: 
                #line 879 
        ;
        #line 883 
        break;
        #line 885 
        case 3: 
                #line 885 
        ;
        #line 888 
        break;
        #line 890 
        default: 
                 #line 890 
        ;
        #line 890 
        __VERIFIER_assume(0);
      }
      #line 894 
      emg_wrapper_carl9170_usb_disconnect(emg_15_resource);
    }
    else 
         #line 898 
         __VERIFIER_assume(emg_15_probe_retval != 0);
    #line 902 
    if (emg_repeat_cnt_manage_interface_15 > 0) {
      #line 903 
      emg_repeat_cnt_manage_interface_15 --;
      #line 905 
      goto emg_manage_interface_15;
    }
    else 
         #line 907 
         __VERIFIER_assume(0);
  }
  else {
    #line 913 
    ldv_free((void *)emg_15_resource);
    #line 914 
    ldv_free((void *)emg_15_usb_device);
  }
  #line 922 
  return (void *)0;
}

#line 927  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/emg/0/environment_model.c"
struct dentry *emg_debugfs_create_dir(char *arg0, struct dentry *arg1)
{
  #line 930 
  struct dentry *emg_2_dentry;
  #line 931 
  struct inode *emg_2_inode;
  #line 933 
  if (ldv_undef_int() != 0) {
    #line 935 
    emg_2_dentry = (struct dentry *)ldv_xmalloc(320UL);
    #line 936 
    emg_2_inode = (struct inode *)ldv_xmalloc(1072UL);
    #line 937 
    emg_2_inode->i_mode = (unsigned short)16877U;
    #line 938 
    emg_2_dentry->d_parent = arg1;
    #line 939 
    emg_2_dentry->d_inode = emg_2_inode;
    #line 940 
    return emg_2_dentry;
  }
  else {
    #line 944 
    return (struct dentry *)ERR_PTR_0(-19L);
  }
}

#line 952  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/emg/0/environment_model.c"
struct dentry *emg_debugfs_create_file(char *arg0, unsigned short arg1, struct dentry *arg2, void *arg3, struct file_operations *arg4)
{
  #line 955 
  struct dentry *emg_3_dentry;
  #line 956 
  struct file_operations *emg_3_file_operations;
  #line 957 
  struct inode *emg_3_inode;
  #line 959 
  if (ldv_undef_int() != 0) {
    #line 961 
    emg_3_dentry = (struct dentry *)ldv_xmalloc(320UL);
    #line 962 
    emg_3_inode = (struct inode *)ldv_xmalloc(1072UL);
    #line 963 
    emg_3_inode->i_mode = arg1;
    #line 964 
    emg_3_dentry->d_parent = arg2;
    #line 965 
    emg_3_inode->i_private = arg3;
    #line 966 
    emg_3_file_operations = arg4;
    #line 967 
    emg_3_dentry->d_inode = emg_3_inode;
    #line 968 
    ldv_save_allocated_memory_to_list((void *)emg_3_dentry);
    #line 972 
    emg_dispatch_register_3(emg_3_file_operations);
    #line 976 
    return emg_3_dentry;
  }
  else {
    #line 980 
    return (struct dentry *)ERR_PTR_0(-19L);
  }
}

#line 988  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/emg/0/environment_model.c"
struct ieee80211_hw *emg_ieee80211_alloc_hw(unsigned long arg0, struct ieee80211_ops *arg1)
{
  #line 991 
  struct ieee80211_hw *emg_4_ieee80211_hw;
  #line 992 
  struct ieee80211_ops *emg_4_ieee80211_ops;
  #line 994 
  emg_4_ieee80211_ops = emg_alias_carl9170_ops;
  #line 995 
  if (ldv_undef_int() != 0) {
    #line 997 
    emg_4_ieee80211_ops = arg1;
    #line 998 
    emg_4_ieee80211_hw = (struct ieee80211_hw *)ldv_xmalloc(184UL);
    #line 1002 
    emg_dispatch_register_4(emg_4_ieee80211_hw);
    #line 1006 
    return emg_4_ieee80211_hw;
  }
  else 
       #line 1010 
       return (struct ieee80211_hw *)0;
}

#line 1018  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/emg/0/environment_model.c"
void emg_ieee80211_free_hw(struct ieee80211_hw *arg0)
{
  #line 1021 
  struct ieee80211_hw *emg_5_ieee80211_hw;
  #line 1024 
  emg_dispatch_deregister_5(emg_5_ieee80211_hw);
  #line 1028 
  ldv_free((void *)emg_5_ieee80211_hw);
  #line 1031 
  return;
}

#line 1036  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/emg/0/environment_model.c"
void emg_tasklet_hi_schedule(struct tasklet_struct *arg0)
{
  #line 1039 
  unsigned long emg_6_emg_param_0_0;
  #line 1040 
  struct tasklet_struct *emg_6_tasklet_struct;
  #line 1043 
  emg_6_tasklet_struct = arg0;
  #line 1047 
  if (emg_6_tasklet_struct->count.counter == 0) 
    #line 1048 
    if (emg_6_tasklet_struct->func != (void (*)(unsigned long ))0) 
                                                                   #line 1049 
                                                                   (*(emg_6_tasklet_struct->func))(emg_6_emg_param_0_0);
  #line 1054 
  return;
}

#line 1059  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/emg/0/environment_model.c"
void emg_tasklet_init(struct tasklet_struct *arg0, void (*arg1)(unsigned long ), unsigned long arg2)
{
  #line 1064 
  arg0->func = arg1;
  #line 1065 
  arg0->data = arg2;
  #line 1066 
  arg0->count.counter = 0;
  #line 1069 
  return;
}

#line 1074  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/emg/0/environment_model.c"
void emg_tasklet_schedule(struct tasklet_struct *arg0)
{
  #line 1077 
  unsigned long emg_8_emg_param_0_0;
  #line 1078 
  struct tasklet_struct *emg_8_tasklet_struct;
  #line 1081 
  emg_8_tasklet_struct = arg0;
  #line 1085 
  if (emg_8_tasklet_struct->count.counter == 0) 
    #line 1086 
    if (emg_8_tasklet_struct->func != (void (*)(unsigned long ))0) 
                                                                   #line 1087 
                                                                   (*(emg_8_tasklet_struct->func))(emg_8_emg_param_0_0);
  #line 1092 
  return;
}

#line 1097  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/emg/0/environment_model.c"
void emg_usb_deregister(struct usb_driver *arg0)
{
  #line 1100 
  struct usb_driver *emg_9_usb_driver;
  #line 1102 
  emg_9_usb_driver = emg_alias_carl9170_driver;
  #line 1104 
  emg_9_usb_driver = arg0;
  #line 1108 
  emg_dispatch_deregister_9(emg_9_usb_driver);
  #line 1111 
  return;
}

#line 1116  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/emg/0/environment_model.c"
int emg_usb_register_driver(struct usb_driver *arg0, struct module *arg1, char *arg2)
{
  #line 1119 
  struct usb_driver *emg_10_usb_driver;
  #line 1121 
  emg_10_usb_driver = emg_alias_carl9170_driver;
  #line 1122 
  if (ldv_undef_int() != 0) {
    #line 1124 
    emg_10_usb_driver = arg0;
    #line 1128 
    emg_dispatch_register_10(emg_10_usb_driver);
    #line 1132 
    return 0;
  }
  else {
    #line 1136 
    ldv_failed_usb_register_driver();
    #line 1137 
    return ldv_undef_int_negative();
  }
}

#line 1145  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/emg/0/environment_model.c"
int emg_usb_reset_device(struct usb_device *arg0)
{
  #line 1154 
  return 0;
}

#line 1161  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/emg/0/environment_model.c"
int emg_usb_submit_urb(struct urb *arg0, unsigned int arg1)
{
  #line 1164 
  struct urb *emg_12_urb;
  #line 1166 
  if (ldv_undef_int() != 0) {
    #line 1168 
    emg_12_urb = arg0;
    #line 1169 
    ldv_check_alloc_flags(arg1);
    #line 1173 
    if (emg_12_urb->complete != (void (*)(struct urb *))0) 
                                                           #line 1174 
                                                           (*(emg_12_urb->complete))(emg_12_urb);
    #line 1179 
    return (int)((long)ldv_malloc_unknown_size());
  }
  else 
       #line 1183 
       return 0;
}

#line 1191  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/emg/0/environment_model.c"
void *emg_entry_point_insmod(void *arg0)
{
  #line 1194 
  int emg_1_ret;
  #line 1197 
  emg_1_ret = emg_carl9170_driver_init();
  #line 1198 
  emg_1_ret = ldv_post_init(emg_1_ret);
  #line 1201 
  if (ldv_undef_int() != 0) {
    #line 1203 
    __VERIFIER_assume(emg_1_ret == 0);
    #line 1207 
    emg_carl9170_driver_exit();
  }
  else 
       #line 1211 
       __VERIFIER_assume(emg_1_ret != 0);
  #line 1215 
  return (void *)0;
}

#line 1220  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/carl9170/carl9170.ko/concurrency safety/emg/0/environment_model.c"
int main(void)
{
  #line 1222 
  ldv_initialize();
  #line 1224 
  emg_entry_point_insmod((void *)0);
  #line 1226 
  return 0;
}

